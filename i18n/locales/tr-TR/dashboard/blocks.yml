---
en:
  data:
    blocks:
      Dancelab_addBehavior:
        text: sprite {SPRITE} begins {BEHAVIOR}
      Dancelab_atTimestamp:
        text: at {TIMESTAMP} {UNIT}
        options:
          UNIT:
            '"measures"': measures
            '"seconds"': seconds
      Dancelab_changeColorBy:
        text: change {COLOR} {METHOD} by {AMOUNT}
        options:
          METHOD:
            '"hue"': hue
            '"saturation"': saturation
            '"brightness"': brightness
      Dancelab_changeMove:
        text: change {SPRITE} dance move to {MOVE}
        options:
          MOVE:
            '0': Rest
            '1': Breakdown
            '2': Floss
            '3': Fresh
            '"next"': Next
            '"prev"': Previous
            '"rand"': Random
      Dancelab_changeMoveEach:
        text: change {GROUP} dance move to {MOVE}
        options:
          GROUP:
            sprites: all
            '"alien"': Alien
            '"mrwiggles"': MrWiggles
            '"pizza"': Pizza
            '"unicorn"': Unicorn
          MOVE:
            '0': Rest
            '1': Breakdown
            '2': Floss
            '3': Fresh
            '"next"': Next
            '"prev"': Previous
            '"rand"': Random
      Dancelab_changePropBy:
        text: change {SPRITE} {PROPERTY} by {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
      Dancelab_clickedOn:
        text: when {SPRITE} clicked
      Dancelab_distance:
        text: distance between {LOCATION1} and {LOCATION2}
      Dancelab_doMoveOnce:
        text: "{SPRITE} do move {MOVE} once"
        options:
          MOVE:
            '0': Rest
            '1': Breakdown
            '2': Floss
            '3': Fresh
            '"next"': Next
            '"prev"': Previous
            '"rand"': Random
      Dancelab_eval:
        text: Run some arbitrary code {CODE}
      Dancelab_everySeconds:
        text: 'every {N} {UNIT} '
        options:
          UNIT:
            '"measures"': measures
            '"seconds"': seconds
      Dancelab_everySecondsRange:
        text: every {N} {UNIT} from {START} to {STOP}
        options:
          UNIT:
            measures: Measures
            seconds: Seconds
      Dancelab_everyVerseChorus:
        text: 'every {UNIT} '
        options:
          UNIT:
            '"verse"': verse
            '"chorus"': chorus
      Dancelab_frameRate:
        text: set framerate to {RATE}
      Dancelab_getEnergy:
        text: get {RANGE} energy
        options:
          RANGE:
            '"low"': low
            '"mid"': mid
            '"high"': high
      Dancelab_getProp:
        text: "{SPRITE} {PROPERTY}"
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
      Dancelab_getTime:
        text: "{UNIT} elapsed"
        options:
          UNIT:
            '"measures"': Measures
            '"seconds"': Seconds
      Dancelab_helloWorld:
        text: hello world
      Dancelab_isTouching:
        text: "{THIS} is touching {TARGET}"
      Dancelab_jumpTo:
        text: "{SPRITE} jump to {LOCATION}"
      Dancelab_layoutSprites:
        text: layout {GROUP} sprites as a {FORMAT}
        options:
          GROUP:
            sprites: all
            '"alien"': Alien
            '"mrwiggles"': MrWiggles
            '"pizza"': Pizza
            '"unicorn"': Unicorn
          FORMAT:
            '"grid"': grid
            '"row"': row
            '"column"': column
      Dancelab_locationCenter:
        text: center
      Dancelab_locationPointer:
        text: pointer position
      Dancelab_location_picker:
        text: "{LOCATION}"
      Dancelab_log:
        text: log message {MESSAGE}
      Dancelab_makeNewDanceSprite:
        text: "make a new {COSTUME} sprite \n called {NAME} at {LOCATION}"
        options:
          COSTUME:
            '"alien"': Alien
            '"mrwiggles"': MrWiggles
            '"pizza"': Pizza
            '"unicorn"': Unicorn
      Dancelab_makeNewDanceSpriteSync:
        text: "TEST SYNC \nmake a new {COSTUME} sprite \n called {NAME} at {LOCATION}"
        options:
          COSTUME:
            '"alien"': Alien
            '"mrwiggles"': MrWiggles
            '"pizza"': Pizza
            '"unicorn"': Unicorn
      Dancelab_makeNewGroupSprite:
        text: "make a new {COSTUME} \n {GROUP} dancer called {NAME} at {LOCATION}"
        options:
          COSTUME:
            '"circle"': Circle
            '"wiggles"': Wiggles
          GROUP:
            lead_dancers: Lead
            backup_dancers: Backup
      Dancelab_mapper:
        text: map {VALUE} from {RANGE} to {DOMAIN}
      Dancelab_mappingProp:
        text: "{PROPERTY} following {RANGE}"
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
          RANGE:
            '"bass"': bass
            '"mid"': mid
            '"treble"': treble
      Dancelab_mirrorSprite:
        text: "{SPRITE} face {DIRECTION}"
        options:
          DIRECTION:
            '"right"': right
            '"left"': left
      Dancelab_mixColors:
        text: mix {COLOR1} and {COLOR2}
      Dancelab_moveDown:
        text: "{THIS} move down"
      Dancelab_moveForward:
        text: move {SPRITE} {DISTANCE} pixels forward
      Dancelab_moveLeft:
        text: "{THIS} move left"
      Dancelab_moveRight:
        text: "{THIS} move right"
      Dancelab_moveUp:
        text: "{THIS} move up"
      Dancelab_nMeasures:
        text: "{N} measures"
      Dancelab_onPointerDown:
        text: on pointer down
      Dancelab_onPointerDrag:
        text: on pointer drag
      Dancelab_onPointerUp:
        text: on pointer up
      Dancelab_pointInDirection:
        text: point {SPRITE} {DIRECTION}
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      Dancelab_pointToward:
        text: point {SPRITE} toward {LOCATION}
      Dancelab_randomColor:
        text: random color
      Dancelab_randomLocation:
        text: random location
      Dancelab_range:
        text: "{RANGE} ... {DOMAIN}"
      Dancelab_removeAllBehaviors:
        text: "{SPRITE} stops everything"
      Dancelab_removeBehavior:
        text: sprite {SPRITE} stops {BEHAVIOR}
      Dancelab_secondsInMeasure:
        text: seconds in a measure
      Dancelab_setBackground:
        text: set background color {COLOR}
      Dancelab_setBackgroundEffect:
        text: set background effect {EFFECT}
        options:
          EFFECT:
            '"none"': None
            '"disco"': Disco
            '"rainbow"': Rainbow
            '"diamonds"': Diamonds
      Dancelab_setDanceSpeed:
        text: change {SPRITE} dance speed to {SPEED}
        options:
          SPEED:
            '1': normal
            '2': fast
            '4': very fast
            '0.5': slow
            '0.25': very slow
      Dancelab_setForegroundEffect:
        text: set foreground effect {EFFECT}
        options:
          EFFECT:
            '"none"': None
            '"disco"': Disco
            '"rainbow"': Rainbow
            '"diamonds"': Diamonds
      Dancelab_setFreq:
        text: set frequency {FREQ}
      Dancelab_setProp:
        text: set {SPRITE} {PROPERTY} to {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"tint"': tint
            '"dance_speed"': dance speed
      Dancelab_setVisibleEach:
        text: set {THIS} visibility to {VISIBILITY}
        options:
          THIS:
            sprites: all
            '"alien"': Aliens
            '"mrwiggles"': MrWiggles
            '"pizza"': Pizzas
            '"unicorn"': Unicorns
          VISIBILITY:
            'true': visible
            'false': invisible
      Dancelab_setup:
        text: setup
      Dancelab_spritesWhere:
        text: sprites where {PROPERTY} {OP} {VALUE}
        options:
          PROPERTY:
            '"scale"': size
            '"x"': x position
            '"y"': y position
            '"costume"': costume
            '"direction"': movement direction
            '"rotation"': rotation or direction
            '"tint"': tint
          OP:
            '"="': "="
            '">"': ">"
            '"<"': "&lt;"
      Dancelab_startMapping:
        text: "{SPRITE} begins {PROPERTY} following {RANGE}"
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
          RANGE:
            '"bass"': bass
            '"mid"': mid
            '"treble"': treble
      Dancelab_startOscillator:
        text: start oscillator
      Dancelab_startSong:
        text: start song
      Dancelab_startVisualizer:
        text: show visualizer
      Dancelab_stopMapping:
        text: "{SPRITE} stops {PROPERTY} following {RANGE}"
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
            '"dance_speed"': dance speed
          RANGE:
            '"bass"': bass
            '"mid"': mid
            '"treble"': treble
      Dancelab_stopOscillator:
        text: stop oscillator
      Dancelab_whenKey:
        text: when {KEY} pressed
        options:
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      Dancelab_whenPeak:
        text: when {RANGE} peak
        options:
          RANGE:
            '0': bass
            '1': mid
            '2': treble
      Dancelab_whenSetup:
        text: setup
      Dancelab_whenTouching:
        text: when {SPRITE1} touches {SPRITE2}
      Dancelab_whileKey:
        text: while {KEY} pressed
        options:
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      Dancelab_whileTouching:
        text: while {SPRITE1} is touching {SPRITE2}
      gamelab_add:
        text: add {SPRITE} to group {THIS}
      gamelab_addBehaviorSimple:
        text: sprite {SPRITE} begins {BEHAVIOR}
      gamelab_bounceOff:
        text: "{SPRITE} bounces off of {TARGET}"
      gamelab_bounceOffEdges:
        text: "{SPRITE} bounces off of edges"
      gamelab_changeColor:
        text: change {COLOR} {METHOD} by {AMOUNT}
        options:
          METHOD:
            '"tint"': tint
            '"tone"': tone
            '"shade"': shade
      gamelab_changeColorBy:
        text: change {COLOR} {METHOD} by {AMOUNT}
        options:
          METHOD:
            '"hue"': hue
            '"saturation"': saturation
            '"brightness"': brightness
      gamelab_changePropBy:
        text: change {SPRITE} {PROPERTY} by {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      gamelab_clickedOn:
        text: when {SPRITE} clicked
      gamelab_comment:
        text: 'comment: {COMMENT}'
      gamelab_console.log:
        text: log message {MESSAGE}
      gamelab_createNewSprite:
        text: "make a new sprite \n called {NAME} \n with costume {COSTUME} \n at {LOCATION}"
      gamelab_debugSprite:
        text: debug {SPRITE} {VAL}
        options:
          VAL:
            'true': 'true'
            'false': 'false'
      gamelab_destroy:
        text: remove {THIS}
      gamelab_displace:
        text: "{THIS} blocks {SPRITE} from moving"
      gamelab_distance:
        text: distance from {LOCATION1} to {LOCATION2}
      gamelab_edgesDisplace:
        text: edges block {SPRITE} from moving
      gamelab_enableDebug:
        text: enable debugging
      gamelab_firstTouched:
        text: first touched sprite
      gamelab_getDirection:
        text: "{SPRITE} movement direction"
      gamelab_getFrameDelay:
        text: "{THIS} frame delay"
      gamelab_getProp:
        text: "{SPRITE} {PROPERTY}"
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
      gamelab_groupLength:
        text: number of sprites in {THIS}
      gamelab_hasBehavior:
        text: "{SPRITE} is currently {BEHAVIOR}"
      gamelab_hideTitleScreen:
        text: hide title screen
      gamelab_hsbColor:
        text: |-
          HSB color
           H{HUE}S{SATURATION}B{BRIGHTNESS}
      gamelab_isTouching:
        text: "{THIS} is touching {TARGET}"
      gamelab_isTouchingEdges:
        text: "{SPRITE} is touching edges"
      gamelab_joystickDirection:
        text: joystick direction
      gamelab_jumpTo:
        text: "{SPRITE} jump to {LOCATION}"
      gamelab_keyDown:
        text: key is down {KEY}
      gamelab_locationAdd:
        text: "{LOC1} {OPERATOR} {LOC2}"
        options:
          OPERATOR:
            "'plus'": "\\+"
            "'minus'": "\\-"
      gamelab_locationAt:
        text: 'location x: {X} y: {Y}'
      gamelab_locationConstant:
        text: "{DIR}"
        options:
          DIR:
            "'north'": north
            "'south'": south
            "'east'": east
            "'west'": west
      gamelab_locationDelta:
        text: "{DISTANCE} pixels {DIR} of {LOCATION}"
        options:
          DIR:
            "'north'": north
            "'south'": south
            "'east'": east
            "'west'": west
            "'random'": random
      gamelab_locationEast:
        text: east
      gamelab_locationMouse:
        text: mouse location
      gamelab_locationNorth:
        text: north
      gamelab_locationOf:
        text: location of {SPRITE}
      gamelab_locationSouth:
        text: south
      gamelab_locationWest:
        text: west
      gamelab_location_picker:
        text: "{LOCATION}"
      gamelab_location_variable_get:
        text: location of {VAR}
      gamelab_location_variable_set:
        text: set location of {VAR} to {VAL}
      gamelab_makeNewGroup:
        text: make a new group
      gamelab_mirrorSprite:
        text: "{SPRITE} face {DIRECTION}"
        options:
          DIRECTION:
            '"right"': right
            '"left"': left
      gamelab_mixColors:
        text: mix {COLOR1} and {COLOR2}
      gamelab_mouseDown:
        text: mouse is down
      gamelab_mouseLocation:
        text: mouse location
      gamelab_moveDown:
        text: "{THIS} move down"
      gamelab_moveForward:
        text: move {SPRITE} {DISTANCE} pixels forward
      gamelab_moveInDirection:
        text: move {SPRITE} {DISTANCE} pixels {DIRECTION}
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      gamelab_moveLeft:
        text: "{THIS} move left"
      gamelab_moveRight:
        text: "{THIS} move right"
      gamelab_moveToward:
        text: move {SPRITE} distance {DISTANCE} toward {TARGET}
      gamelab_moveUp:
        text: "{THIS} move up"
      gamelab_pointInDirection:
        text: point {SPRITE} {DIRECTION}
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      gamelab_pointToward:
        text: point {SPRITE} toward {LOCATION}
      gamelab_randColor:
        text: random color
      gamelab_randomColor:
        text: random color
      gamelab_randomLocation:
        text: random location
      gamelab_removeAllBehaviors:
        text: "{SPRITE} stops everything"
      gamelab_removeBehaviorSimple:
        text: sprite {SPRITE} stops {BEHAVIOR}
      gamelab_removeTint:
        text: remove color from {THIS}
      gamelab_secondTouched:
        text: second touched sprite
      gamelab_setAnimation:
        text: change {THIS} costume to {ANIMATION}
      gamelab_setBackground:
        text: set background color {COLOR}
      gamelab_setDirection:
        text: set {SPRITE} movement direction {DIRECTION}
      gamelab_setFrameDelay:
        text: set {THIS} frame delay {VAL}
      gamelab_setPosition:
        text: move {THIS} to the {POSITION} position
        options:
          POSITION:
            "{x: 50, y: 50}": top left
            "{x: 200, y: 50}": top center
            "{x: 350, y: 50}": top right
            "{x: 50, y: 200}": center left
            "{x: 200, y: 200}": center
            "{x: 350, y: 200}": center right
            "{x: 50, y: 350}": bottom left
            "{x: 200, y: 350}": bottom center
            "{x: 350, y: 350}": bottom right
            '"random"': random
      gamelab_setProp:
        text: set {SPRITE} {PROPERTY} to {VAL}
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
      gamelab_setSizes:
        text: set {SPRITE} {PROPERTY} to {N}%
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
      gamelab_setTint:
        text: change color of {THIS} to {COLOR}
      gamelab_setup:
        text: setup
      gamelab_showTitleScreen:
        text: show title screen {BREAK} title {TITLE} text {SUBTITLE}
      gamelab_spriteCostume:
        text: "{COSTUME}"
      gamelab_spriteDirection:
        text: "{DIRECTION}"
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      gamelab_spritesWhere:
        text: sprites where {PROPERTY} is {VALUE}
        options:
          PROPERTY:
            '"scale"': size
            '"x"': x position
            '"y"': y position
            '"costume"': costume
            '"direction"': movement direction
            '"rotation"': rotation or direction
            '"tint"': tint
      gamelab_spritesWhereFirst:
        text: first {VALUE}
      gamelab_spritesWhereGenerator:
        text: sprites where {PROPERTY} {OP} {VALUE}
        options:
          PROPERTY:
            '"scale"': size
            '"x"': x position
            '"y"': y position
            '"costume"': costume
            '"direction"': movement direction
            '"rotation"': rotation or direction
            '"tint"': tint
          OP:
            '"="': "="
            '">"': ">"
            '"<"': "&lt;"
      gamelab_spritesWhereLast:
        text: last {VALUE}
      gamelab_spritesWhereRandom:
        text: random in group {VALUE}
      gamelab_turn:
        text: "{SPRITE} turn {DIRECTION} {N} degrees"
        options:
          DIRECTION:
            '"right"': right
            '"left"': left
      gamelab_whenDownArrow:
        text: when down arrow pressed
      gamelab_whenJoystick:
        text: when joystick
      gamelab_whenKey:
        text: when {KEY} pressed
        options:
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      gamelab_whenLeftArrow:
        text: when left arrow pressed
      gamelab_whenMouseClicked:
        text: when mouse clicked
      gamelab_whenPressedAndReleased:
        text: "when {DIR} pressed \n{STATEMENT1}when released \n{STATEMENT2}"
        options:
          DIR:
            "'up'": up
            "'down'": down
            "'left'": left
            "'right'": right
      gamelab_whenRightArrow:
        text: when right arrow pressed
      gamelab_whenStartAndStopTouching:
        text: |-
          when {SPRITE1} starts touching {SPRITE2} {STATEMENT1}when they stop touching
           {STATEMENT2}
      gamelab_whenTouching:
        text: when {SPRITE1} touches {SPRITE2}
      gamelab_whenTouchingAny:
        text: when {SPRITE} touches any {GROUP}
      gamelab_whenTrue:
        text: when {CONDITION} true
      gamelab_whenUpArrow:
        text: when up arrow pressed
      gamelab_whileDownArrow:
        text: while down arrow pressed
      gamelab_whileJoystick:
        text: while joystick
      gamelab_whileKey:
        text: while {KEY} pressed
        options:
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      gamelab_whileLeftArrow:
        text: while left arrow pressed
      gamelab_whileRightArrow:
        text: while right arrow pressed
      gamelab_whileTouching:
        text: while {SPRITE1} is touching {SPRITE2}
      gamelab_whileUpArrow:
        text: while up arrow pressed
      gamelab_xLocationOf:
        text: x coordinate of {SPRITE}
      gamelab_yLocationOf:
        text: y coordinate of {SPRITE}
      Vanilla_randomColor:
        text: random color
      Vector_createSpriteWith:
        text: |-
          create sprite
          do{STATEMENT}
      Vector_log:
        text: log message {MESSAGE}
      Vector_positionCenter:
        text: center
      Vector_push:
        text: set velocity {VECTOR}
      Vector_randomLocation:
        text: random location
      Vector_setColor:
        text: set color to {COLOR}
      Vector_setSize:
        text: set width {WIDTH} height {HEIGHT}
      Vector_teleportTo:
        text: set position {POSITION}
      Vector_vectorNorth:
        text: north
      Vector_where:
        text: each sprite where {PROPERTY} is {VALUE} do{STATEMENT}
        options:
          PROPERTY:
            "'shapeColor'": color
