tr:
  data:
    script:
      name:
        20-hour:
          desc: Anaokulu-8. sinif bilgisayar bilimi dersi girişi
          Unplug1: 1. Aşama
          Maze: Bölüm 2
          Unplug2: 3. Aşama
          Unplug3: 4. Aşama
          Artist: 5. Aşama
          Unplug4: 6. Aşama
          Artist2: 7. Aşama
          Unplug5: 8. Aşama
          Farmer: 9. Aşama
          Unplug6: 10. Aşama
          Artist3: 11. Aşama
          Unplug7: 12. Aşama
          Farmer2: 13. Aşama
          Unplug8: 14. Aşama
          Artist4: 15. Aşama
          Unplug9: 16. Aşama
          Farmer3: 17. Aşama
          Unplug10: 18. Aşama
          Artist5: 19. Aşama
          Unplug11: 20. Aşama
        Hour of Code:
          desc: Saat Kodu
          Maze: 1. Aşama
        Edit Code:
          desc: Kodu Düzenle (beta)
          MazeEC: 1. Aşama
        2014 Levels:
          desc: Sıçrama (beta)
          Bounce: 1. Aşama
        Builder Levels:
          desc: Kullanıcı Yapımı Bulmacalar (beta)
          Custom: 1. Aşama
        Flappy Levels:
          desc: Flappy Bird
          Flappy: 1. Aşama
        Jigsaw Levels:
          desc: Yapboz (beta)
          Jigsaw: 1. Aşama
        Step Levels:
          desc: Labirent (beta)
          MazeStep: Aşama Adımı
        edit-code:
          desc: Kodu Düzenle (beta)
          MazeEC: 1. Aşama
          Webapp: Bölüm 2
          ArtistEC: 3. Aşama
          StudioEC: 4. Aşama
        events:
          desc: Sıçrama (beta)
          Bounce: 1. Aşama
          Studio: 2. Aşama
        builder:
          desc: Kullanıcı Yapımı Bulmacalar (beta)
          Custom: 1. Aşama
        flappy:
          desc: Flappy Bird
          Flappy: 1. Aşama
        jigsaw:
          desc: Yapboz (beta)
          Jigsaw: 1. Aşama
        step:
          desc: Labirent (beta)
          MazeStep: Aşama Adımı
        wordsearch:
          desc: Bilge Arı (beta)
          WordSearch: 1. Aşama
    game:
      name:
        Unplug1: Bilgisayar Bilimlerine Giriş
        Maze: Labirent
        Multi: Çok Seçimli Şeyler
        Unplug2: Sayısal Düşünme
        Unplug3: Grafikli Kağıdıyla Programlama
        Artist: Sanatçı
        Unplug4: Algoritmalar
        Artist2: Sanatçı 2
        Unplug5: Fonksiyonlar
        Farmer: Çiftçi
        Unplug6: Koşullar
        Artist3: Sanatçı 3
        Unplug7: Şarkı Yazma
        Farmer2: Çiftçi 2
        Unplug8: Soyutlama
        Artist4: Sanatçı 4
        Unplug9: Röle Programlama
        Farmer3: Çiftçi 3
        Unplug10: İnternet
        Artist5: Sanatçı 5
        Unplug11: Özet
        MazeEC: Labirent
        Bounce: Sıçrama
        Flappy: Flappy Bird
        Jigsaw: Yapboz
        MazeStep: Labirent Adım Modu
        Wordsearch: Kelime arama
        Webapp: Web Uygulaması
        ArtistEC: Sanatçı
        TextMatch: Metin Eşleştirmesi
        StudioEC: Play Lab
    trophy:
      name:
        Bronze: Bronz
        Silver: Gümüş
        Gold: Altın
    concept:
      description:
        sequence: Sıra
        if: if bloğu
        if_else: Eğer-değilse bloğu
        loop_times: Bloğu tekrarlayın
        loop_until: Blok kadar tekrarlayın
        loop_while: while bloğu
        loop_for: Sayaç bloğu
        function: Fonksiyonlar
        parameters: Fonksiyon parametreleri
    level:
      instructions:
        maze_2_2: 'Yaramaz domuzu yakalamama yardım edebilir misin? Oraya gitmem için birkaç "İlerle" bloğunu birleştirmeli ve "Programı Çalıştır" tuşuna basmalısın.'
        maze_2_1: Bu domuz benim tüylerimi diken diken ediyor. Onu bulmama yardımcı ol!
        maze_2_2_5: Yolu takip et ve beni sersem domuza götür. Patlayıcılardan uzak dur yoksa bu tüylerim havaya uçacak!
        maze_2_3: Yeşil şeytana gitmeme önderlik et! (Patlayıcılara dikkat et)
        maze_2_4: Sakin ol ve kötü domuzu bulmama yardımcı ol. Aksi halde kızmaya başlayabilirim!
        maze_2_5: 2 blok kullanarak yeşil domuzcuğa ulaşabileceğim bir yol var. Bunu çözebilir misin?
        maze_2_6: Sadece üç blok kullanarak beni yeşil haine ulaştırmaya çalış.
        maze_2_7: 'Bloklar en az sayıda kullanarak bu kötü domuzcuğu ortadan kaldırmama yardım et. Birden fazla "defa tekrar" bloğu kullanmayı dene.'
        maze_2_8: 'Eğer blok gri ise, bu onu silemeyeceğin anlamına gelir. Yapbozu 3 defa tekrar eden "tekrar" bloğunu kullanarak çöz. Bu 3 bloğu gri renkteki "tekrar" bloğunun içine yerleştir: oynat, oynat, dön.'
        maze_2_9: 'Tamam, yeni "e kadar tekrarla" bloğunu dene. Bu, ben yeşil domuza ulaşana kadar tekrarlayacak.'
        maze_2_10: Tamam, pratik için son kez. Bunu sadece 4 blok kullanarak çözebilir misin?
        maze_2_11: Değerli kişi.Ben zombi.Açım. Ayçiçeklerini almam gerekli.Bana onları sadece 5 blok kullanarak getirebilir misin?
        maze_2_12: Tamam, Bu benzer ama biraz farklı. Bunu sadece 5 blok ile yapabilir misin?
        maze_2_13: 'Ne zaman döneceğime karar vermem için yeni "eğer" bloğunu kullan. İpucu: Sadece bir bloğa daha ihtiyacın var ama bunu nasıl kurduğumuzu öğren ki bir dahaki sefer kullanabilesin.'
        maze_2_14: 'Tamam, bu sadece son bulmaca gibi ama "Eğer" bloğu ile "Tekrarla" bloğunu nasıl birlikte kullandığını hatırlaman gerekiyor.'
        maze_2_15: 'Ayçiçeğini istiyorum! Sadece bir "Eğer" bloğu kullanarak, en az sayıda blok ile oraya ulaşmamı sağla.'
        maze_2_16: 'Tamam, sadece alıştırma olsun diye bunu tekrar yapalım - çok farklı değil, sadece canavar bitkilere dikkat et!'
        maze_2_17: '"Eğer-Değilse" bloğu bir koşulu kontrol eder ve bir şeyi YA DA diğerini yapar. Ayçiçeğine ulaşmam için bu yeni bloğu kullanmayı dene.'
        maze_2_18: '"Eğer değilse" bloğunun bir örneğini daha, ilk denemenizde doğru yapabildiniz mi?'
        maze_2_19: Daha karmaşık bir labireti sadece 3 blok ekleyerek çözmeme yardımcı olur musun? Eğer doğru yaptıysan, bu kıvrımlı yolda uzunluğu ne olursa olsun yürüyebilirim.
        turtle_1_1: Merhaba , ben bir sanatçıyım. İstediğin herhangi bir şeyi çizmek için beni programlayabilirsin. Resimdeki gri çizgileri çizdirmek için bir kaç blok kullan.
        turtle_1_2: 'Şimdi bir kare çiz. Not: Bunu "rengi belirle" bloğununda en sevdiğin rengi seçerek yapabilirsin.'
        turtle_1_3: Sadece 3 blok kullanarak bir kare yapın.
        turtle_1_4: 'Her seferinde farklı bir renk alan "rastgele renk" seçeneğini kullanarak tüm kenarları farklı renkte olan bir üçgen çizin. İpucu: Ne kadar uzağa dönmeniz gerektiğini dönüş blogundaki numaraya tıklayarak bulmanız gerek.'
        turtle_1_5: Şimdi, uygulama için bir üçgen ve sonra bir zarf çizmek için bir kare çizin.
        turtle_1_6: 'Bir karenin ve bir üçgenin nasıl çizileceğini anlayabildiniz mi? İpucu: Önce üçgeni çizin, sonra kare çizmeden önce kaç kez dönmeniz gerektiğini bulun.'
        turtle_1_7: 'Hadi biraz daha zorlaştıralım - yeşil gözlükleri çizip çizemeyeceğinizi görelim. Her köşede bulunan kareler 100 piksel büyüklüğünde birbirlerinden 50 piksel uzaklıktadır. Çizgilerinizi yeşik renk ile çizmeyi unutmayın!'
        turtle_1_8: 'Tamam, bu kodu çalıştırıdığınızda ne olduğunu görelim (ya da "Çalıştır" düğmesini tıklayın). O halde, çizimi tamalamak için yeteri kadar tekrar edin. Renkler her defasında farkı olsun.'
        turtle_1_9: Çember çizmek için soru işaretli yere gelmesi gereken sayısı bulabilir misiniz?
        turtle_1_10: 'Başardınız! Şimdi, istediğiniz her hangi bir şeyi çiziniz.Eğlenceli olabilecek bazı fikirler:kartanesi ya da spiral olabilir.Ayrıca "kalınlığını belirleyin " bloğunu kullanabilirisniz.Eğlenin!'
        turtle_4_1: 'Sadece 3 blok kullanarak bir üçgen(her kenarı 100 piksel olacka) çizebilir misin? İpucu:"tekrar" bloğu kullanın.'
        turtle_4_2: 'Bu üçgenleri çizebilmek için çalışma masasında mevcut olan programın ortasına bir "90 derece sağa dön" bloğu ekle.'
        turtle_4_3: 'Tamam, bir üçgen çizmek için yazdığınız kod burda."Tekrarla" ve "dön" bloğu ile güzel bir çiçek yapabilir misiniz?'
        turtle_4_4: 'Bir önceki labirent ile aynı kodları verdik , fakat her üçgen çizdikten sonra 36 derecelik bir açıyla döneceğiz.Bu işlemi kaç kez tekrar etmelisiniz? (İpucu: Tam bir çember oluşturmak için 360 derece dönmeniz gerekmektedir.)'
        turtle_4_5: Bir önceki bulmaca ile aynı kodları görüyorsunuz fakat 36 kez dönme işlemi uygulanıyor. Her defasında kaç derecelik bir açıyla döndürülmeli?(İpucu:Tam bir çember 360 derece döndürülerek oluşturulabilir.)
        turtle_4_6: Sadece üç blok kullanarak bir kenarı 20 piksel lacak bir kare çizebilir misiniz?
        turtle_4_7: 'İşte kare çizmek için son bulmacadan bir kod. Bu kodu birbirine merdiven gibi bitişik 10 tane kare çizmek için tekrarlayabilir misin? İpucu: Yalnızca iki bloga daha ihtiyacın var.'
        turtle_4_8: Önceki bulmaca çözümü burada. Çizimi tamamlamak için sadece 2 blok daha ekleyebilir misin?
        turtle_4_9: Önceki bulmaca çözümü burada. Kaç derece çizimin tamamlanması için kaç derece dönmen gerekir? (Birkaç kez tahmin etmen gerekebilir)
        turtle_4_10: Önceki bulmaca çözümü burada. Çizimi tamamlamak için kaç tekrar gerekli?
        turtle_4_11: 'Farklı desenler yapmak için "dön" ve "tekrarla" bloklarındaki sayıları değiştirmeyi dene. Ya da, istediğin herhangi bir şeyi çizmek için kodun geri kalanını değiştirmeyi dene.'
        maze_karel_1_1: 'Merhaba, ben bir çiftçiyim. Çiftlikteki alanı ekime hazırlamak için düzleştirmemde yardımına ihtiyacım var. Beni bir toprak yığınına doğru hareket ettir ve "Kaldır" bloğunu yığını kaldırmam için kullan.'
        maze_karel_1_2: 'Daha sonra beni deliğe hareket ve  deliği "doldur" blogunu kullanarak, iki kürek dolusu toprak ile doldur.'
        maze_karel_1_3: Beni toprak yığınına doğru hareket ettir ve olabildiğince az blok kullanarak kaç kürek dolusu boşaltmam gerektiğini söyle.
        maze_karel_1_4: 'Tüm toprak yığınlarını kaldırmama yardımcı olabilir miin? İpucu: Mümkünse repeat blogunu kullan.'
        maze_karel_1_5: 'Delikleri 5 kürekdolusu toprakla doldurmam için bana yardım et. İpucu: "While" blogunun içine "tekrar" blogunu yerleştirebilirsin.'
        maze_karel_1_6: Tüm toprak yığınlarını kullanabildiğin kadar az blok kullanarak kaldır.Liste menüsündeki yeni secenekler bana bir yığının mı yoksa bir deliğin mi üstünde olduğumu söyler.
        maze_karel_1_7: Wow,çok derin bir çukur buldum!Kaç kürek dolusu toprağa ihtiyacı olur bilmiyorum.Dolana kadar onu dolduracak bir program yazabilir misin ?
        maze_karel_1_8: Alanın sonundaki çukuru doldurmama yardım et,kullanabildiğin kadar az blok kullanarak.
        maze_karel_1_9: 'Tüm toprak yığınlarını yok etmememi sağla.Kullanabildiğin kadar az blok kullanmaya çalış.İpucu:"while" bloğunu kullanmaya çalış.'
        maze_karel_1_10: 'Geç saatlere kadar çalışıyorum,yani dışarısı karanlık,ve yığınların ne kadar geniş olduğunu söyleyemem."while" bloğunda eskiden olduğu kadar seçeneğe sahip değilim.Beni alanda hareket ettir,ve bir yığın varsa onu kaldır.'
        maze_karel_1_11: 'Dışarısı hala karanlık. Beni alan boyunca ilerlet. Önümde bir yığın varsa kaldır. Eğer bir delik var ise içini doldur. İpucu: eğer bloğunun üzerinde, seçeneklerin aşağı doğru açılan menüsünü kullan.'
        turtle_2_1: 'Merhaba. Ben olmak zombi sanatçı! Ben sevmek çizmeyi! Özel renkte bir kare çizmeme yardım et. Önemli not: aynı bloklara sahipsin ama artık kategorilere ayrıldılar.'
        turtle_2_2: 'Fonksiyonların kullanımına hoş geldiniz,yeni bloklar tanımanıza imkan veren yere!Yeni "bir kare çiz bloğu,50x50 yeşil küçük bir kare çizmek için Fonksiyonlar kategorisinde bulunuyor.'
        turtle_2_3: 100 boyutunda 120 derece aralıklı 3 kare çizmek için döngüler kategorisinde ki tekrar et bloğunu kullan.Ve 3 ünüde farklı,rastgele renklerde yap.
        turtle_2_4: 'Şimdi biraz kafayı çekeceğiz. Kodu 36 kare çizmek için ayarla, 100 piksel genişliğinde ve her biri 10 aşama uzakta olsun. İpucu: Belki daha hızlı gitmem için kaydırgacı kullanmak istersin.'
        turtle_2_5: '"Kare çiz" fonksiyonunu 5 kere kullanarak, 50, 60, 70, 80 ve 90 piksel boyutlarında kareler çizin.'
        turtle_2_6: 'Pekala,  bu program sonuncu karenin aynısını çizmek için bir sayaç kullanacaktır. Karenin sayaçla aynı boyutta olmasını istiyorsunuz, yani "sayaç" parçasını kullanın. İpucu: Bu parça Değişkenler kategorisindedir.'
        turtle_2_7: 'İşte spiral çizmeye yarayan bir program, fakat bu seferki bloklar devre dışı; yani böyle çalışmayacak. Aynı spirali içine "ile say" bloğu (Döngüler kategorisinde) ve "zıt" bloğunu (Değişkenler kategorisinde) koyarak oluşturun.'
        turtle_2_7_5: 'Fonksiyonlar kategorisinde yeni bir fonksiyon var: "Kardan adam çiz". Boyları 250 ve 100 olan iki kardan adam çiz.'
        turtle_2_8: 'Bu biraz uğraştıracak. "Kardan adam çiz" ve yeni "İleri zıpla" (Hareketler kategorisinde) fonksiyonunu kullanarak aralarında 100 piksel bulunan 3 farklı renkte kardan adam çiz.'
        turtle_2_9: '110, 100, 90, 80 ve 70 boylarında kardan adam ailesi çizmek için "ile say" döngüsünü kullanın. Kardan adamların tümü 60 piksel uzaklıkta olmalıdır.'
        turtle_2_10: Değişik spirallerle çalışman için bir kod. Dönme miktarını değiştirirsen ne olur? Ya da döngüyü rastgele renge ayarlasan? İstediğin herhangi bir şey çiz.
        maze_karel_2_1: 'Tüm yığınları kaldırmam ve yerdeki tüm delikler doldurmama yardım etmek için blokları kullanmayı dene. Pek çok blok kullanmaktansa döngüleri kullanmayı dene. İpucu: Bir döngünün içinde başka bir döngü kullanabilirsin.'
        maze_karel_2_2: 'Şu an Fonksiyonlar kategorisinde olan "5 dolgu" isimli kendi bloğu biz tanımladık. O bloğu çukuru doldurmamda bana yardımcı olmak için kullan.'
        maze_karel_2_3: 'Yeni "5 dolgu" isimli bloğu kullanarak tüm çukurları doldurmamı sağla. "5 dolgu" bloğunu Fonksiyonlar kategorisinden sürükleyerek çıkarmalısın.'
        maze_karel_2_4: 7 kürek atabilen yeni bir fonksiyon tanımla. Daha sonra bu blok ile tüm yığınları kaldırmama yardımcı olacak bir program yaz.
        maze_karel_2_5: Bir yığından 6 kürek atabilen yeni bir fonksiyon oluştur ve tüm yığınları kaldırmama yardımcı olmakta kullan.
        maze_karel_2_6: '"5 dolgu" ve "8 kaldır" isimli iki yeni fonksiyon oluştur, yığını kaldırmama ve çukuru doldurmama yardım et.'
        maze_karel_2_7: Sahamda bir inek var! Beni inekten kaçındıracak ve çamuru kaldıracak yeni bir kod yazın. Bu yeni kodun içine bütün parçalarınızı ekleyin.
        maze_karel_2_8: |-
          Bana bütün yığınları kaldırmama yardım etmek için bu yeni fonksiyonu kullan: "İnekten kaçın ve 1'i kaldır".
        maze_karel_2_9: Tamam, burada dikey kolonda bulunan 4 farklı çöp yığınını kaldırabilen bir fonksiyon var. Bu fonksiyonu döngünün içine koymayı dene. Yalnızca birkaç yeni blok ekleyerek tüm kir yığınlarını kaldırmaya çalış.
        maze_karel_2_10: Beni alanda oynat, bu iki fonksiyonu kullanarak tüm çukurları doldurmama ve tüm yığınları kaldırmama yardım et.
        turtle_3_1: 'Bu bulmaca "bir kare çiz" ve "bir çember çiz" fonksiyonlarının nasıl tanımlandığını gösterir. Bir fonksiyonun tanımlanması bloklardaki komutları çalıştırmaz. Kareyi çizmek için "bir kare çiz" bloğunu komutlara eklemen gerekir.'
        turtle_3_2: '"bir kare çiz" fonksiyonunu örnek olarak kullanmak için "bir üçgen çiz" fonksiyonu oluşturman ve komutlara eklemen gerekir.'
        turtle_3_3: 'Kediler etrafında üçgen şeklinde bir çit ve ineğin etrafında ise kare şeklinde bir çit oluşturun. İpucu: komutları oluşturdukça doğruluğunu kontrol edin.'
        turtle_3_4: 'Aslanın çevresinde bir ev çizmek için "kare çiz" ve "üçgen çiz" (ve diğer blokları) nasıl kullanacağını bulabilecek misin?'
        turtle_3_5: 'Şimdi, iki kediyi ev içine alan yeni bir "Ev Çiz" fonksiyonu oluşturun. İpucu: "Bir şey yap" bloğunu kullanın ve fonksiyona kendiniz bir isim verin (örn:"Ev Çiz").'
        turtle_3_6: '"Kare çiz" fonksiyonunu örnek alarak, "Üçgen Çiz" fonksiyonuna "uzunluk" adında bir giriş ekleyin. Sonra, bu yeni fonksiyonu kullanarak farklı boyutlarda üçgenler çizin. (İpucu: Fonksiyona girdi eklemek için yıldız simgesine tıklayın.)'
        turtle_3_7: '"Ev çiz" fonksiyonuna "uzunluk" adında yeni bir girdi ekleyin ve fil için yeterince büyük bir ev çizin (kenarları 150 piksel uzunluğunda)'
        turtle_3_8: 'işte bir önceki  bulmacanın tüm blokları. "Ev çiz" fonksiyonunu çizimi evin sağ alt köşesinde bitirebilmem için değiştirin.  Sonra bu yeni fonksiyonu kullanarak 3 ev çizin.'
        turtle_3_9: '"Ev çiz" fonksiyonunu yardım almadan yeniden yapabilir misin? Bir dene ve bir dizi ev çiz.'
        turtle_3_10: Çok şey öğrendiz! Şimdi istediklerinizi çizebilirsiniz. Yıldız, spiral veya bir kar tanesi çizmeye çalışın.
        maze_karel_debug_seq_1: Hata ayıklamaya (debugging) hoşgeldin! Kodum düzgün çalışmıyor. Problemi bulup düzeltebilir misin? Böylece tarlam düzleşir ve ekim için hazır olur.
        maze_karel_debug_seq_2: Bu programın sorunu ne? Şu yığını kaldırabilmem için düzeltebilir misin?
        maze_karel_debug_repeat: Tarlamın düz ve hoş olması için programı hatalarından arındırabilir misin?
        maze_karel_debug_while: Deliği doldurmam için bu programı nasıl değiştirmelisin?
        maze_karel_debug_if: Yardım et! Programı düzelt ki tarlam dümdüz olsun.
        maze_karel_debug_if_else: Delikleri doldurabilmem ve yığınları kaldırabilmem için programı hatalarından arındır.
        maze_karel_debug_function_1: Tüm yığınları kaldırabilmem için bu programda neyi değiştirmelisin?
        maze_karel_debug_function_2: Tarlamı düzleştirebilmem için programı hatalarından arındırabilir misin?
        maze_karel_debug_function_3: 'Tüm yığınları kaldırabilmem için programı düzenle. '
        turtle_5_1: Bu programı çalıştırmayı deneyin ve ne olacağını görmek için değişiklikler yapın. Nasıl çalıştığını tahmin edebiliyor musun? (Ya da silin ve tamamen farklı bir şey ile değiştirin)
        turtle_5_2: Bu programı çalıştırmayı deneyin ve ne olacağını görmek için değişiklikler yapın. Nasıl çalıştığını tahmin edebiliyor musun? (Ya da silin ve tamamen farklı bir şey ile değiştirin)
        turtle_5_3: Bu programı çalıştırmayı deneyin ve ne olacağını görmek için değişiklikler yapın. Nasıl çalıştığını tahmin edebiliyor musun? (Ya da silin ve tamamen farklı bir şey ile değiştirin)
        turtle_5_4: Bu programı çalıştırmayı deneyin ve ne olacağını görmek için değişiklikler yapın. Nasıl çalıştığını tahmin edebiliyor musun? (Ya da silin ve tamamen farklı bir şey ile değiştirin)
        turtle_5_5: Bu programı çalıştırmayı deneyin ve ne olacağını görmek için değişiklikler yapın. Nasıl çalıştığını tahmin edebiliyor musun? (Ya da silin ve tamamen farklı bir şey ile değiştirin)
        turtle_5_6: Bu programı çalıştırmayı deneyin ve ne olacağını görmek için değişiklikler yapın. Nasıl çalıştığını tahmin edebiliyor musun? (Ya da silin ve tamamen farklı bir şey ile değiştirin)
        maze_3_1: O domuzu almam gerek! Birkaç telefon görüşmesi için move() yazın; böylece yumurtalarımı geri alabilirim.
        maze_3_2: Bana bir program yaz, böylece domuza giden tüm yolları yapabileyim.
        maze_3_3: Domuzu nasıl alabilirim? TNT kutusuna doğru gitmediğimden emin olun!
        maze_3_4: Ahh! Beni TNT ve domuz çevresine alan bir program yazın.
        bounce_1: '"sol ok tıklandığında" komutuna blok ekleyin ve çalıştırın. Sol ok tuşunu kullanarak hedefi sola doğru hareket ettirip bitirmeye çalışın.'
        bounce_2: '"sol ok tıklandığında" ve "sağ ok tıklandığında" komutlarına bloklar ilave edin. Hedefi hareket ettirip bölümü bitirin.'
        bounce_3: '"yukarı oka basıldığında" raketi yukarı hedefe taşıyan kodu yazın.'
        bounce_4: Bu sefer 4 tane blok eklemeniz gerek. Bölümü bitirmek için raketi 4 hedefe de ulaştırın.
        bounce_5: 'Rakete doğru topu göndereceğiz.  "top rakete vurduğunda" bloğuna gerekli eklemeyi yaparak topun hedefi vurmasını sağlayınız.'
        bounce_6: 'Bu sefer hedef üst tarafta. "top duvara çarptığında" bloklarının ikisine ekleme yaparak bulmacayı çözmek zorundasın.'
        bounce_7: 'Blokları "ne zaman" bloklarının her birine ekleyin. Bitiş hedefine ulaşana kadar topu sektirin.'
        bounce_10: 'Şimdi yukarıda bir kale var. Oyun oluşturmak için "Puan yaz" ve "Rakibe puan yaz" bloklarını "top gol olduğunda" ve "top raketi ıskaladığında"  bloklarına ekle. Bakalım rakibin 2 kere sayı almadan önce sen ne kadar sayı yapabileceksin.'
        bounce_11: 'Şimdi "çalıştığı zaman" bloğuna ekleme yapabilirsin. "Yeni top fırlat"  bloğunu birden fazla yerde kullanmalısın. Birde, arkaplanı, raket ve top hızını değiştirip, rakibin 2 puan almadan önce kaç puan alabileceksin görelim.'
        bounce_12: 'Kendi zıplama oyununu oluştur. Tüm görünümü ve kuralları değiştirebilirsin. Bitirdiğinde, "BİTİR" düğmesine tıklayıp, arkadaşlarının oyununu telefonlarında denemelerine izin ver.'
        Custom_builder: 'İstediğin seviyeyi çizmek için araç kutusundan blokları çalışma alanına sürükle. Hazır olduğunda "Çalıştır" a bas.'
        flappy_1: '"Tıklandığında" bloğuna ilave blok ekle sonra "Çalıştır" düğmesine bas. Flappy yi hedefe hareket ettirmek için ekrana dokun veya tıklat.'
        flappy_2: 'Şimdi biraz zemin ekledik. Flappy yere çarptığında oyunun sonlanması için gerekli kodu "zemine çarptığında" bloğuna ilave edin.'
        flappy_3: '"Çalıştığında" bloğu oyun başladığında kodlarınızın çalışmasını sağlar. Seviye hızını ayarlamayı ve hedefe doğru kanat çırpmayı deneyin.'
        flappy_4: 'Flappy, siz çarpışma için kod yazmadığınız sürece engellerin içinden uçacaktır. "bir engele çarptığı zaman"  bloğuna ekleme yapınız. Oyununuzun bitmesi için ilk borulara çarptığında "oyunu bitir" bloğunu kullanmanız gerekmekte.'
        flappy_5: 'Bir sayı tahtası yapalım ve Flappy bir engeli aştığında "puan kazan"sın. "engel geçildiği zaman" bloğuna gerekli eklemeyi yapın ve ilk boruları geçince Flappy puan kazansın.'
        flappy_6: 'Bakalım Flappy kısa veya uzun kanat çırpışlarında  puan kazanabilecek misin.'
        flappy_7: 'Bir sonraki sefere, "Çalıştığında" bloğuna gerekli eklemeyi yapıp manzarayı değiştirmeyi dene.'
        flappy_8: Görünümleri sadece oyun başlarken değil, isteğin an değiştirebilirsin. Diğer olaylar olduğunda rastgele görünümler ayarlamaya çalış. mesela bir engeli geçince.
        flappy_9: Bir engele veya yere çarptığında oyunu sonlandırmak yerine skoru 0 yapmayı deneyin.
        flappy_11: 'Kendi Flappy oyununuzu oluşturun. Tüm görünümü ve kuralları hatta yer çekimini değiştirebilirsiniz. Bitirdiğinizde, "BİTİR" düğmesine tıklayıp, arkadaşlarınızın oyununuzu telefonlarında denemelerine izin verin.'
        flappy_k1_1: Flappy Oyna
        flappy_k1_2: '"Tıklandığında" bloğuna ilave blok ekle sonra "Çalıştır" düğmesine bas. Flappy yi hedefe hareket ettirmek için ekrana dokun veya tıklat.'
        flappy_k1_3: 'Şimdi biraz zemin ekledik. Flappy yere çarptığında oyunun sonlanması için gerekli kodu "zemine çarptığında" bloğuna ilave edin.'
        flappy_k1_4: '"Çalıştığında" bloğu oyun başladığında kodlarınızın çalışmasını sağlar. Seviye hızını ayarlamayı ve hedefe doğru kanat çırpmayı deneyin.'
        flappy_k1_5: 'Flappy, siz çarpışma için kod yazmadığınız sürece engellerin içinden uçacaktır. "bir engele çarptığı zaman"  bloğuna ekleme yapınız. Oyununuzun bitmesi için ilk borulara çarptığında "oyunu bitir" bloğunu kullanmanız gerekmekte.'
        flappy_k1_6: 'Bir sayı tahtası yapalım ve Flappy bir engeli aştığında "puan kazan"sın. "engel geçildiği zaman" bloğuna gerekli eklemeyi yapın ve ilk boruları geçince Flappy puan kazansın.'
        flappy_k1_7: Engelleri geçtiğinde çoklu puan yapabilecek misin?
        flappy_k1_8: 'Bir sonraki sefere, "Çalıştığında" bloğuna gerekli eklemeyi yapıp manzarayı değiştirmeyi dene.'
        flappy_k1_9: '"oyuncu ayarla" (ya da "aktör ayarla") bloğunu kullanarak "koştuğunda" bloğuna ekleme yaparak oyuncuyu değiştirmeyi dene.'
        jigsaw_1: Bloğu tıklayın
        jigsaw_2: Bloğu hedefe sürükle
        jigsaw_3: Şekli oluşturacak biçimde blokları düzenleyin
        jigsaw_4: Şekli oluşturacak biçimde blokları düzenleyin
        jigsaw_5: Şekli oluşturacak biçimde blokları düzenleyin
        jigsaw_6: Şekli oluşturacak biçimde blokları düzenleyin
        jigsaw_7: Şekli oluşturacak biçimde blokları düzenleyin
        jigsaw_8: Şekli oluşturacak biçimde blokları düzenleyin
        jigsaw_9: Şekli oluşturacak biçimde blokları düzenleyin
        jigsaw_10: Şekli oluşturacak biçimde blokları düzenleyin
        jigsaw_11: Şekli oluşturacak biçimde blokları düzenleyin
        jigsaw_12: Şekli oluşturacak biçimde blokları düzenleyin
        jigsaw_13: Bulmacayı düzelt!
        mazestep_1: Labirent adım tanımları
        mazestep_2: Labirent adım tanımları
        mazestep_3: Labirent adım tanımları
        mazestep_4: Labirent adım tanımları
        mazestep_5: Labirent adım tanımları
        studio_c2_1: 'Köpeğin "Merhaba Dünya" demesini sağlayabilir misin?'
        studio_c2_2: Köpek bir şey söylesin sonra da kedi bir şey söylesin. Yapabilir misin?
        studio_c2_3: Köpeği kediye doğru hareket ettiren bir program yazabilir misin?
        studio_c2_4: 'Köpeği kediye doğru hareket ettirin, sonra köpek kedinin yanına geldiğinde kedinin "Merhaba" demesini sağlayan programı yazabilir misin?'
        studio_c2_5: 'Ahtapotun tıklandığında "merhaba" demesini sağlayan program yazabilir misin?'
        studio_c2_6: Yukarı / Aşağı / Sol / Sağ tuşlarını kullanarak pengueni etrafta hareket ettirip bütün bayraklara dokunmasını sağlayan programı yazabilir misin?
        studio_c2_7: '"Sonsuza kadar tekrarla" bloğu kodunuzun sürekli çalışmasına imkan sağlar.  Dinozorun  yukarı ve aşağı sürekli olarak hareket etmesini sağlayan blokları ekleyebilir misin?'
        studio_c2_8: 'Pengueni, ok tuşları ile etrafta hareket ettiren kodları yazın. Dinozora çarpınca da "Ouch!" deyip "çarpma" sesi çıkarmasını sağlayın.'
        studio_c2_9: Pengueni oklarla hareket ettirip sayı almasını ve ahtapota değince sayı almasını sağlayacak bloğu ekleyebilir misin?
        studio_c2_10: Pengueni oklarla hareket ettirip sayı almasını ve arkaplan ile penguenin hızını değiştirmesini sağlayacak bloğu ekleyebilir misin?
        studio_c2_11: 'Kendi hikayeni oluşturabilir misin? Bitirdiğinde "Bitir" düğmesine bas, hikayeni arkadaşlarının telefonlarında denemelerine izin ver.'
        studio_c3_story_1: 'Köpeğin "Merhaba Dünya" demesini sağlayabilir misin?'
        studio_c3_story_2: Köpeğin bir şeyler demesini sonra da kedinin bir şeyler demesini sağlayabilir misin?
        studio_c3_story_3: Köpeği kediye doğru hareket ettiren bir program yazabilir misin?
        studio_c3_story_4: 'Köpeği kediye doğru hareket ettirin, sonra köpek kedinin yanına geldiğinde kedinin "Merhaba" demesini sağlayan programı yazabilir misin?'
        studio_c3_story_5: Ahtapotu mutlu edecek bloğu ekleyebilir misin?
        studio_c3_story_6: 'Kendi istediğiniz oyununuzu oluşturun. Bitirdiğinizde, "BİTİR" düğmesine tıklayıp arkadaşlarınızın oyunu telefonlarında denemeleri için (Facebook veya Twitter da) hikayenizi paylaşın.'
        studio_c3_game_1: 'Ahtapotun tıklandığında "merhaba" demesini sağlayan programı yazabilir misin?'
        studio_c3_game_2: Yukarı / Aşağı / Sol / Sağ tuşlarını kullanarak pengueni etrafta hareket ettirip bütün bayraklara dokunmasını sağlayan programı yazabilir misin?
        studio_c3_game_3: '"Sonsuza kadar tekrarla" bloğu kodunuzun sürekli çalışmasına imkan sağlar.  Dinozorun  yukarı ve aşağı sürekli olarak hareket etmesini sağlayan blokları ekleyebilir misin?'
        studio_c3_game_4: 'Pengueni, ok tuşları ile etrafta hareket ettiren kodları yazın. Dinozora çarpınca da "Ouch!" deyip "çarpma" sesi çıkarmasını sağlayın.'
        studio_c3_game_5: 'Pengueni, ok tuşları ile etrafta hareket ettirip, ahtapota çarpınca "skor puanı" ekleyen bloğu ekleyebilir misin?'
        studio_c3_game_6: 'Arkaplanı ve penguenin hızını değiştiren, skor yapana kadar pengueni etrafta hareket ettiren  blokları ekleyebilir misin?'
        studio_c3_game_7: "Kendi oyununuzu yaratın. Bitirdiğinizde, Son'u tıklayın ve arkadaşlarınıza kendi telefonlarında oyununuzu denetin."
        studio_playlab_1: 'Penguen "Merhaba" demek istiyor - ona yardımcı olabilir misin?'
        studio_playlab_2: 'Mağara adamı ( karakter 1) ve mağara kadını (karakter 2) birbirlerine "merhaba" demek istiyorlar. "Söyle" bloğunu iki kez kullanarak onlara yardım edebilir misin?'
        studio_playlab_3: Tenis kızının bayrağı almasına yardım edebilir misin?
        studio_playlab_4: Tenis çocuğun ( karakter 1), tenis kızının (karakter 2) yanına gitmesine ve gittiğinde bir ses çıkarmasına yardım edebilir misin?
        studio_playlab_5: |-
          Uzay botunun tıklandığında "Selamlar insanoğlu" demesine yardım edebilir misin? Çalıştır'a tıkladıktan sonra üzerine tıklamayı unutma
        studio_playlab_6: Yukarı/aşağı/sağ/sol ok tuşlarını kullanarak cadının etrafta dolaşıp bütün büyülü ateştoplarını toplamasına yardım edebilir misin?
        studio_playlab_7: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to it to help the wizard move right and left repeatedly?'
        studio_playlab_8: Can you add a block to score a point and a block to play a sound when the unicorn runs into the wizard, and then move him with the arrows until you score?
        studio_playlab_9: Set the background for this alien invasion and help the Spacebot get to the alien faster by changing its speed. Then move him with the arrow keys to get to the Spacebot and alert everyone else
        studio_playlab_10: "Kendi oyununuzu yaratın. Bitirdiğinizde, Son'u tıklayın ve arkadaşlarınıza kendi telefonlarında oyununuzu denetin."
        studio_full_sandbox: "Kendi oyununuzu yaratın. Bitirdiğinizde, Son'u tıklayın ve arkadaşlarınıza kendi telefonlarında oyununuzu denetin."
        studio_k1_1: 'Köpeğin "Merhaba Dünya" demesini sağlayabilir misin?'
        studio_k1_2: Köpeğin bir şeyler demesini sonra da kedinin bir şeyler demesini sağlayabilir misin?
        studio_k1_3: Köpeği kediye doğru hareket ettiren bir program yazabilir misin?
        studio_k1_4: 'Köpeği, kedinin yanına taşıyın ve kedinin "merhaba" demesini sağlayın.'
        studio_k1_5: Ahtapotu mutlu edecek bloğu ekleyebilir misin?
        studio_k1_6: Kendi hikayenizi oluşturun. Kedi ve köpeği etrafta dolaştırıp bir şeyler demesini sağlayın.
        maze_wordsearch_k_1: Beni EAST kelimesini oluşturacak şekilde harf harf sırayla hareket ettir
        maze_wordsearch_k_2: Beni SOUTH kelimesini oluşturacak şekilde harf harf sırayla hareket ettir
        maze_wordsearch_k_3: Beni WEST kelimesini oluşturacak şekilde harf harf sırayla hareket ettir
        maze_wordsearch_k_4: Beni NORTH kelimesini oluşturacak şekilde harf harf sırayla hareket ettir
        maze_wordsearch_k_6: Beni JUMP kelimesini oluşturacak şekilde SAĞ ve AŞAĞI hareket ettir
        maze_wordsearch_k_9: Beni CODE kelimesini oluşturacak şekilde bir yöne, sonra diğer yöne hareket ettir
        maze_wordsearch_k_13: Beni DEBUG kelimesini oluşturacak şekilde bir yöne, sonra diğer yöne hareket ettir
        maze_wordsearch_k_15: Beni ABOVE kelimesini oluşturacak şekilde bir yöne, sonra diğer yöne hareket ettir
        maze_wordsearch_k_16: Beni BELOW kelimesini oluşturacak şekilde bir yöne, sonra diğer yöne hareket ettir
        maze_wordsearch_k_20: Bu bir test! Beni STORY kelimesini oluşturacak şekilde bir yöne, sonra diğer yöne hareket ettir
        webapp_ec_simple: createHtmlBlock kullanarak web uygulamanızı oluşturun.
        turtle_ec_1_2: 'Şimdi, bir kare çizin. NOT: yeni "penColor" bloğundan seçerek en sevdiğiniz rengi kullanın.'
        turtle_ec_1_10: 'Başardınız! Şimdi, istediğiniz herhangi bir şey çizin. İşte bazı öneriler: bir çöp adam, bir kar tanesi, ya da bir spiral. Yeni "penWidth" bloğunu da deneyin. Eğlenmenize bakın!'
        studio_ec_sandbox: "Kendi oyununuzu yaratın. Bitirdiğinizde, Son'u tıklayın ve arkadaşlarınıza kendi telefonlarında oyununuzu denetin."
    levelbuilder:
      frozen line:
        instructions: Merhaba! Ben Elsa Arendelle.Bana tek bir çizgi çizmek için yardım edin.
      frozen perpendicular:
        instructions: 'Şimdi bakalım birbirine 90 derecelik açı yapan iki çizgiyi nasıl oluşturacağız. Bunun için "Dön" ve "İlerle" bloklarını kullanmanız gerekecek.'
      frozen square iterative:
        instructions: Karenin yarısı yapmışız gibi görünüyor. Bir kare oluşturmak için 4 satırı bir araya getirelim.
      frozen square loop:
        instructions: 'Merhaba, ben Arendelle, Anna! Daha az blokları kullanarak "Tekrarlayan" bir kare yapalım. Bir kare yapmak için, blokların içinde "Tekrarlayan" bloklar kaç keç döngü oluşturmalı (?) ?'
      frozen square loop 3x:
        instructions: Her bir karenin dönümünden sonra üç kare oluşturalım. Her yeni kareden önce, 120 derece çevirmek için emin olun.
      frozen square snowflake:
        instructions: '"Tekrar" bloğunu 10 tane kare oluşturmak için kullanıp her kareden sonra 36 derece dönerek bir kar tanesi oluşturabilir misiniz?'
      frozen cross:
        instructions: |-
          "Tekrarlayan" blok kullanarak bir artı işareti oluşturunuz. Elsa'nın ileri ve geri hareket edebildini farkettiniz mi?
      frozen cross rotate:
        instructions: Şimdi, bu işlemi 10 kez deneyerek tekrarlayınız. Her bir çizgi arasını dönmek için kaç dereceye ihtiyacınız var?
      frozen cross rotate dense:
        instructions: "Bu işlemi 90 kez tekrarlayalım! Kaç kere de 90'dan 360'a varılır? İpucu: cevabı gerçekten çok küçük bir sayı."
      frozen diamond:
        instructions: Bir paralelkenar oluşturalım. oluşturduğumuz şekil, bir kare gibi fakat, 90 derece yerine 60 ve 120 derece gibi açı farkları var.
      frozen diamond mini snowflake:
        instructions: 'Her kar tanesinin birbirinden farklı olduğunu biliyor muydunuz? "Dönen" blok kullarak, bir paralelkenarı 4 kez, her bir paralel kenar arasında 90 derece olacak şekilde sağa doğru döndürerek yeni bir kar tanesi oluşturalım.'
      frozen diamond snowflake:
        instructions: Şimdi, tekrarla bloğunu kullanarak yeni kar taneleri oluşturalım. Tekrarla bloğu ile 10 tane paralelkenar çizelim her paralelkenar çizildikten sonra sağa doğru 36 derece dönelim.
      frozen circle:
        instructions: Çember özel bir şekildir. Bir çember çizmek için soru işareti yerine kaç gelmesi gerektiğini bulabilir misiniz?
      frozen circle function:
        instructions: '10 tane üst üste çember oluşturmak için "Çember oluştur" bloğunu kullanın. Çemberler arasında ileri zıplamayı unutmayın.'
      frozen circle function in circle:
        instructions: Şimdi herbirini çizdikten sonra 18 derece bırakacağınız 20 tane çember oluşturun.
      frozen circle function with parameter:
        instructions: '"Çember oluştur" bloğuyla farklı büyüklüklerde çemberler oluşturabilirsiniz. Bunu 5 birim ve 10 birimlik çemberler çizmek için kullanır mısınız?'
      frozen snowflower:
        instructions: Karmaşık kar tanecikleri aslında basit şekillerle oluşturulur. Bu modeli 5 birim uzunlukta 5 çember ve 10 birim uzunluktaki 5 çember ile oluşturabilir misiniz?
      frozen snowflake branch:
        instructions: 'Üç tane dal oluşturmak için "Kar taneciği dalı oluştur" bloğunu deneyin gitgide kar taneciğine benziyor.'
      frozen snowflake full:
        instructions: Şimdi bunu kar taneciği yapmak için 8 kere tekrar edin!
      frozen freeplay:
        instructions: Resmen bir usta sanatçı haline geldiniz! Kış harikalar diyarı yaratın.
      scrat 16:
        instructions: 'Acorn! Acorn! Acorn! Beni oraya  ulaştırmak için bir "Eğer" bloğu kullanın ve en az sayıda komutu kullanmaya çalışın.'
      scrat 17:
        instructions: 'Tamam, pratik yapmak için tekrar yapalım - bu çok farklı değil fakat duvarlara dikkat edin!'
      scrat 18:
        instructions: '"Eğer-Değilse" bloğu koşulu kontrol eder ve birini ya da diğerini yapar. Meşe palamuduna ulaşmam için bu yeni bloğu kullanın.'
      scrat 19:
        instructions: '"Eğer değilse" bloğunun bir örneğini daha, ilk denemenizde doğru yapabildiniz mi?'
      scrat 20:
        instructions: Bu bulmacayı çözmem için 3 blok daha ekleyebilir misiniz? Eğer doğru yaptıysan, Bu kıvrımlı yolu uzunluğu ne olursa olsun yürüyebilirim. Acele et! Buzlar Eriyor!
      Standalone_Artist_1:
        instructions: "Welcome to Artist! First off, let's try to make a simple square using the turn right block and move forward block. Each side should be 100 pixels long."
      Standalone_Artist_2:
        instructions: Draw this diamond with 120 and 60 degree angles and 150 pixel long sides.
      Standalone_Artist_3:
        instructions: Can you draw this hexagon with 100 pixel sides and 60 degree turns?
      Standalone_Artist_4:
        instructions: "Now you've got a new block to play with, the loop. This will repeat a set of commands. What happens if you loop these commands 6 times?"
      Standalone_Artist_5:
        instructions: How many times do you need to loop this diamond to draw the flower?
      Standalone_Artist_5.5:
        instructions: "Notice how we simplified the diamond code by turning it into a loop. You can loop that whole sequence 12 times to draw the flower. Hint: You'll need to turn 30 degrees after your diamond loop so you don't keep drawing over the same diamond."
      Standalone_Artist_6:
        instructions: 'Loop this hexagon code 6 times to create the design. How many degrees will you need to turn each time? Hint: divide the number of degrees in a circle by the number of times you are looping.'
      Standalone_Artist_7:
        instructions: 'A function is another programming tool to help you avoid repeating yourself. This function draws a flower, so you can use it any time you want to draw a flower. Use this and the new jump block to draw these flowers. Hint: The flowers are 150 pixels apart'
      Standalone_Artist_8:
        instructions: |-
          Here's a function called "Draw a shape" that we've programmed to draw hexagons. Run the code to see what it does and then experiment with the function to see what happens. Can you make it draw a pattern of squares, triangles, or octagons?
      Standalone_Artist_9:
        instructions: "Now go ahead and make whatever picture you'd like! You've even got an empty function that you can make do whatever you want!"
    video:
      name:
        maze_intro: 'Labirent: Tanıtım'
        artist_intro: 'Ressam: Giriş'
        farmer_intro: Çiftçi girişi
        flappy_intro: Flappy Tanıtım
        loop_times: Bloğu tekrarlayın
        loop_until: Blok kadar tekrarlayın
        if: if bloğu
        if_else: İf/else bloğu
        if_else_scrat: İf/else bloğu
        function: Fonksiyonlar
        loop_while: while bloğu
        loop_for: Sayaç bloğu
        parameters: Fonksiyon parametreleri
        hoc_wrapup: Kod saatini tamamla
        Unplug1: CS nedir?
        Unplug2: Sayısal Düşünme
        Unplug3: Grafikli Kağıdıyla Programlama
        Unplug4: Algoritmalar
        Unplug5: Fonksiyonlar
        Unplug6: Koşullar
        Unplug7: Şarkı yazma
        Unplug8: Soyutlama
        Unplug9: Röle Programlama
        Unplug10: İnternet
        Unplug11: Özet
        C1_happy_maps_unplugged: Mutlu Haritalar
        C1_moveitmoveit_unplugged: Çabuk, Çabuk Taşı
        C1_bigevent_unplugged: Büyük Olay
        C1_getting_loopy: Döngüselleşme
        C1_pair_programming: Eşli Programlama
        C1_maze_intro_sequencing: Labirent Dizilemeye Giriş
        C1_maze_debugging: Labirent Hata Ayıklaması
        C1_bee_level_intro: 'Arı Seviyesi - Giriş'
        C1_artist_intro: 'Ressam: Giriş'
        C1_spelling_bee_intro: 'Yazar Arı: Giriş'
        C1_zuck_repeat_loop: Labirent Döngüleri
        C1_bee_loops: Arı Döngüleri
        C1_maze_loops: Labirent Döngüleri
        C1_playlab_storytelling: 'Laboratuvar Oyna - Bir Hikaye Oluştur'
        C1_planting_seed: Tohum Ekme
        C1_building_foundation: Bir Temel Oluşturma
        C1_going_places_safely: Biryerlere Güvenle Gitmek
        C2_maze_intro: 'Labirent: Tanıtım'
        C2_artist_intro: 'Ressam: Giriş'
        C2_zuck_repeat_loop: Labirent Döngüleri
        C2_artist_loops: Aktör Döngüleri
        C2_artist_debugging: Aktör Ayıklama
        C2_bee_loops: Arı Döngüleri
        C2_bee_debugging: Arı Ayıklama
        C2_bee_conditionals: Arı Koşullandırmaları
        C2_playlab_createstory: 'Laboratuvar Oyna - Bir Hikaye Oluştur'
        C2_graph_paper: Grafikli Kağıdıyla Programlama
        C2_conditionals_with_cards: Koşullar
        C2_binary_bracelets: İkilik Bileklikler
        C2_relay_programming: Röle Programlama
        C2_paper_airplanes: Kağıt Uçaklar
        C2_digital_footprint: Dijital İziniz
        C3_maze_level_4: Labirent Döngüleri
        C3_artist_intro: 'Ressam: Giriş'
        C3_artist_functions: Aktör Fonksiyonları
        C3_bee_functions: Arı Fonksiyonları
        C3_bee_conditionals: Arı Koşullandırmaları
        C3_maze_conditionals: Labirent Koşullandırıcıları
        C3_artist_nested_loops: İç İçe Döngüler
        C3_farmer_while: While(...durumunda) Döngüleri
        C3_bee_nested_loops: İç İçe Döngüler
        C3_bee_debugging: Arı Ayıklama
        C3_bounce: Sıçrama
        C3_playlab_create_game: 'Oyun Laboratuvarı: Bir Oyun Oluştur'
        C3_computational_thinking: Sayısal Düşünme
        C3_dice_race: Zar Yarışı
        C3_internet: İnternet
        C3_crowdsourcing: "Kalabalık Kaynaklandırma 'Crowdsourcing'"
        C3_functional_suncatchers: Fonksiyonel Güneş Avcıları
        C3_songwriting_with_parameters: Değiştirgenlerle Şarkı Yazma
        C4_intro: Giriş
        C4_bee_conditional: Arı Koşullandırmaları
        C4_variables_artist: 'Değişkenler - Sanatçı'
        C4_variables_playlab: 'Değişkenler - Oyun laboratuarı'
        C4_for_loops: For Loops
        C4_math_artist: "Matematik ile Sanatçı'yı programla"
        C4_function_edit: Düzenleme fonksiyonları
        C4_function_create: Oluşturma Fonksiyonları
        C4_function_parameters: Fonksiyon parametreleri
        C4_conditionals: Koşullar
        C4_unplugged_algorithms: Tangramlar ile algoritmalar
        C4_unplugged_madlibs: Mad Libs
        C4_unplugged_variables: Variables in Envelopes
        C4_unplugged_forloops: For Loops
        C4_unplugged_parameters: Parametrelerle Şarkı Yazmak
        C4_unplugged_binary: İkili
        frozen_intro: Kodlama Saati Giriş
        frozen_loops: Döngülere Giriş
        frozen_functions: Fonksiyonlara Giriş
        playlab_intro: Oyun laboratuarı için giriş
        playlab_events: Play Lab Events
        playlab_repeat_forever: Play Lab Repeat Forever
    callout:
      text:
        drag_blocks: '"taşı" bloğunu tutup diğer bloğun altına yapıştırın'
        run: 'Programınızı denemek için "Çalıştır" düğmesine basın'
        watch_again: Videoyu tekrar izlemek için burayı tıklayın
        gray_block_explanation: Gri bloklar silinemezler. Yine de bulmacayı çözebildiniz mi?
        show_code_explanation: Hazırladığınız programın kodlarını görmek için buraya tıklayın
        instructions_repeat_explanation: Her bulmaca için gerekli talimatlar burada tekrarlanır
        category_explanation: Aynı bloklara sahipsin fakat şimdi kategorik olarak sıralandılar.
        set_sprite_image: 'Bu hikayenin bir figürünü etkinleştirmek için "figürü görsele ata" bloğunu "hikaye başladığında" bloğuna ekleyin'
        studio_say_text: Karakterinin ne söylemesini istiyorsan tırnak işaretleri arasına yaz
        jigsaw_click: Bu bloğu tıklayın!
        move_elsa_forward: |-
          Elsa'yı ilerletmek için bir "İlerle" bloğunu sürükleyip "Çalıştığında" bloğunun altına ekleyin
        turn_elsa: |-
          "Dön" bloğunu kullanarak Elsa'yı döndürün. Açılan menüden Elsa'nın ne kadar döneceğini belirleyebilirsiniz
        replace_questions: 'Açılan menüden "???" yerine bir numara seçin'
        replace_questions_degree: 'Açılan menüden "???" yerine dönüş için doğru açıyı seçin'
        repeat_blocks: '"Tekrarla" bloğunu kullanarak çalışma alanındaki blokların etrafında döndürün'
        repeat_blocks_1: (1) Bu bloğu kullan ve çalışma alanındaki gri blokların etrafına koy
        repeat_blocks_2: '(2) "Tekrarla" bloğunu buraya taşı ve gri bloklar içine yerleştir'
        snowflake_dropdown: Bu açılan menüyü kullanarak farklı kar taneleri yaratın!
        degrees_per_side: "360'ı kenar sayısına bölerek her açının derecesini bulun."
        set_sides: 'Use this block to set "sides" to the number needed to complete the puzzle.'
        set_length: 'Use this block to set "length" to the correct value.'
        which_equation: Which equation makes each side shorter for shapes with more sides?
        get_nectar: 'Use the new "get nectar" block.'
        actions_category: 'The tool box got a new look! The "Actions" blocks are in here now.'
        draw_square_hint: 'Hint: Use the square loop you just made in the last puzzle.'
        edit_function: Click here to edit your function.
        create_function: 'Click here to open the "Functions" flyout, then click the "Create a Function" button.'
        house_hint: "It's ok if the picture doesn't look like a house yet. We will fix it in the next puzzle."
        edit_draw_square: Use this button to edit the function and add the loop.
        edit_get_nectar: Use this button to edit the function and change the direction the Bee will turn to get the nectar.
        logic_category: 'Open the "Logic" flyout to find the "if/else" block.'
        length_parameter: 'Can you update this function so it uses the "length" parameter?'
        frozen_diamond_repeat: Use the repeat block to create this shape.
        frozen_circle_function_in_circle_turn: "Don't forget to turn after creating each circle."
        frozen_circle_function_with_parameter_circle: 'Use the "create a circle" block and change the size.'
        frozen_snowflake_branch: 'Use the "create a snowflake branch" block'
        frozen_create_square: Attach more blocks here to create a square
        playlab_drag_say: 'Drag the "say" block here and type "hello"'
        playlab_use_twice: Use this block twice and remember to change the actor number
        playlab_move_girl: 'Use the "move right" block to move Tennis Girl'
        playlab_play_sound: '"Sesi çal" bloğunu buraya ekle'
        playlab_arrow_keys: Remember to use these to move the witch after clicking on Run
        playlab_add_move: '"Hareket et" bloğunu tekrarla bloğunun içine ekle'
        playlab_add_score: Skor bloklarını buraya ekle
        playlab_add_blocks: Bloklarını buraya ekle
        set_variable: Değişkenini atamak için bir sayı bloğunu buraya sürükle
        place_variable: Değişkenini bloğun içine sürükle
        bee_for_loop: Drag the largest number of nectar you want the bee to collect here
        place_counter_variable: Drag your counter variable inside this block
        function_editor_draw_square: 'This is your function definition. These blocks run everytime you use the "draw a square" block'
        change_here: Değişikliği burada yap
        write_draw_square_function: Kare çizmek için blokları araç kutusundan buraya sürükle
        write_draw_triangle_function: Üçgen çizmek için blokları araç kutusundan buraya sürükle
        edit_add_parameter: "Fonksiyonuna parametre eklemek için düzenle'ye tıkla"
        add_and_drag_parameter: Write in the name of your parameter here, click add, and then drag it into your function definition
        fill_in_actor: Fill in the ??? with numbers that correspond to each actor (1, 2, and 3)
        repeat: Put blocks inside the loop to repeat commands
        if_bee_nectar: 'Use the "if" block to decide if the bee should get nectar'
        if_else_bee: |-
          Use the "if/else" block so that the Bee gets nectar from a flower, and makes honey if it's not a flower
        repeat_full_circle: Enter in the number of times the zombie has to move to make a full circle
        place_length_variable: Soru işaretlerinin yerine uzunluk değişkenini sürükle
        arrows_move_actor: Karakteri hareket ettirmek için okları kullan
        right_arrow_fireball: Ateştoplarını fırlatmak için sağ ok tuşunu kullan
        name_function: Fonksiyonunun ismini buraya yaz
