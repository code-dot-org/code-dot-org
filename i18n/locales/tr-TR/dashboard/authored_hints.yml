tr:
  data:
    authored_hints:
      2-3 Artist 1 new_authored_hint:
        2-3_Artist_1_new_a: Eğer 'İleriye Taşı 100 Piksel' blokunu kullanırsan, otomatik olarak bir çizgi çizeceğim.
        2-3_Artist_1_new_b: Köşeyi çevirirken sorun mu yaşıyorsunuz? `90 derece sağa dön` bloğunu kullanın.
      2-3 Artist 11_authored_hint:
        2-3_Artist_11_a: 'Açılar ile sorununuz mu var? 360 dereceyi 8 turda gitmeniz gerekiyor. 360/8 kaçtır?'
      2-3 Artist 12_authored_hint:
        2-3_Artist_12_a: Bir daire içerisinde 360 derece vardır, bu nedenle sanatçı her seferinde döngü boyunca 1 derece dönerse, 360 kez geçmesi gerekir.
      2-3 Artist 2 new_authored_hint:
        2-3_Artist_2_new_a: Sanatçı doğru yönde işaret etmiyor gibi görünüyor. Çizgi çizmeden önce yönünü düzeltir misin?
      2-3 Artist 3new_authored_hint:
        2-3_Artist_3new_a: 100-70 nedir?  Hikayeye bağlı olarak, o şapkanın olması gereken uzunluk!
        2-3_Artist_3new_b: Sanatçı doğru yönde işaret etmiyor gibi görünüyor. Çizgi çizmeden önce yönünü düzeltir misin?
      2-3 Artist 4_authored_hint:
        2-3_Artist_4_a: Evi bitirmek için tek yapmamız gereken bir kare çizmek!
      2-3 Artist 6_authored_hint:
        2-3_Artist_6_a: 'Bu minik perileri yapmak için her seferinde karede olduğundan daha fazla dön.   '
        2-3_Artist_6_b: ' Zaten sağa dönük durduğum için ileri hareket ettirerek başlamanız en kolayı, sonra üçgen oluşturmak için sol dönüşler yapın.'
        2-3_Artist_6_c: Üçgenin her kenarı karenin bir kenarı ile aynı uzunlukta ... 100 piksel!
      2-3 Artist 7_authored_hint:
        2-3_Artist_7_a: Bu bulmacayı çözmenin en kolay yolu önce ilk kareyi çizmek ve sonra ikinci kareye başlamadan önce sanatçıyı aşağı bakar durumda bırakmak.
      2-3 Artist 8_authored_hint:
        2-3_Artist_8_a: 200'ü ikiye bölersen, her bir kare kaç piksel genişliğinde olmalı?
      2-3 Artist 9 NEW_authored_hint:
        2-3_Artist_9_a: Bu elmas aslında yana eğilmiş bir kare.
      2-3 Artist 9 REPLACEMENT_authored_hint:
        step_size: Her adım 100 piksel genişliğinde ve 100 piksel yüksekliğinde.
      2-3 Artist 9_authored_hint:
        2-3_Artist_9_a: Bu elmas aslında 45 derece eğilmiş bir kare.
        2-3_Artist_9_b: |-
          Kare çizimine başlamadan önce sanatçıyı 45 derece döndürmeyi unutma! ! [] (https://images.code.org/47cc2474e533667101a2d73b98da204e-image-1467744539967.gif)
      2-3 Artist Debugging 10_authored_hint:
        2-3_Artist_Debugging_10_a: Unutmayın, kontrol panelini 10 piksel daha *geniş* istiyorsunuz bu yüzden her değiştirdiğiniz sayıya 10 **eklemeyi** unutmayın.
        2-3_Artist_Debugging_10_b: "** Burada deneme yanılma serbest! ** \nHer defasında bir sayıyı değiştirerek başla.     \nHangi numaralar ne yapıyor?   \nİpin ucu kaçarsa, \"baştan başla\"  tuşu ile kodunuzu sıfırlayabilirsiniz."
      2-3 Artist Debugging 2_authored_hint:
        2-3_Artist_Debugging_2_a: 'İpucu: Her bıyık 75 piksel uzunluğundadır.'
      2-3 Artist Debugging 3_authored_hint:
        2-3_Artist_Debugging_3_a: Dönülşlerden birisi 15 derece az.
        2-3_Artist_Debugging_3_b: Program  ne olduğunu görmek için hızlı çalışıyorsa, kaydırıcı ile yavaşlatabilirsin.
      2-3 Artist Debugging 7_authored_hint:
        2-3_Artist_Debugging_7_a: Sanatçı ilk satırı çizdikten sonra İlerlese yada geriye doğru atlasa ne olur?
      2-3 Artist Debugging 8_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          Şekil kaç kere tekrar ediyor? Şekil kaç kez tekrar *etmeli*? Programda bunu nerede değiştirebilirim?
      2-3 Artist Debugging 9_authored_hint:
        2-3_Artist_Debugging_9_a: Sanatçı çizmeye başlamadan önce 60 derece daha sola dönmesi lazım!
        2-3_Artist_Debugging_9_b: Tam dönüş için blok eklemene gerek yok. Sadece programdaki sola dön bloğuna 60 derece ekle!
      2-3 Artist Functions 1 a_authored_hint:
        2-3_Artist_Functions_1_a: Karelerin kenarları 100 piksel genişliğinde, buda demek oluyor ki ikinci kareyi çizmeden önce 175 piksel ilerlemelisin.
        2-3_Artist_Functions_1_b: Gözlük yapmak için çakışan çizgiler olabilir.
      2-3 Artist Functions 1_authored_hint:
        2-3_Artist_Functions_1_a: Karelerin kenarları 100 piksel genişliğinde, buda demek oluyor ki ikinci kareyi çizmeden önce 175 piksel ilerlemelisin.
        2-3_Artist_Functions_1_b: Gözlük yapmak için çakışan çizgiler olabilir.
      2-3 Artist Functions 11 a_authored_hint:
        2-3_Artist_Functions_11_a: Fonksiyonun içinde sadece kenar sayısını ve kenar uzunluğunu değil, bir de sanatçının her kenar arasında dönmesi gereken açıyı değiştirmelisin .
      2-3 Artist Functions 11_authored_hint:
        2-3_Artist_Functions_11_a: Fonksiyonun içinde sadece kenar sayısını ve kenar uzunluğunu değil, bir de sanatçının her kenar arasında dönmesi gereken açıyı değiştirmelisin .
      2-3 Artist Functions 12 a_authored_hint:
        2-3_Artist_Functions_12_a: Önce kodu çalıştır ve ne eklemen gerektiğini gör.
      2-3 Artist Functions 12_authored_hint:
        2-3_Artist_Functions_12_a: Önce kodu çalıştır ve ne eklemen gerektiğini gör.
      2-3 Artist Functions 2 a_authored_hint:
        2-3_Artist_Functions_2_a: |2
          Programınız: 
          -Fonksiyon kullanmalıdır.
           - ileri 100 + 75 piksel ilerlemelidir
          - Fonksiyon kullanmalıdır
      2-3 Artist Functions 2_authored_hint:
        2-3_Artist_Functions_2_a: |2
          Programınız: 
          -Fonksiyon kullanmalıdır.
           - ileri 100 + 75 piksel ilerlemelidir
          - Fonksiyon kullanmalıdır
      2-3 Artist Functions 3 a_authored_hint:
        2-3_Artist_Functions_3_a: "** 115 + 45 = 160 **"
      2-3 Artist Functions 3_authored_hint:
        2-3_Artist_Functions_3_a: "** 115 + 45 = 160 **"
      2-3 Artist Functions 4 a_authored_hint:
        2-3_Artist_Functions_4_a: Sanatçının bu tasarımı tamamlaması için her kare arasında 120 derece dönmesi gerekiyor.
      2-3 Artist Functions 4_authored_hint:
        2-3_Artist_Functions_4_a: Sanatçının bu tasarımı tamamlaması için her kare arasında 120 derece dönmesi gerekiyor.
      2-3 Artist Loops New 11_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          Son bulmacadaki kodu hatırla:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_colour" inline="true">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">sağaDön</title>
          <title name="VALUE" config="45,60,90,120,180">45</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">50</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">solaDön</title>
          <title name="VALUE" config="45,60,90,120,180">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">ilerle</title>
          <title name="VALUE">50</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
        2-3_Artist_Loops_New_11_b: Yeni dönüşün döngünün içindeki kodun **sonuna** gelmeli.
      2-3 Artist Loops New 12_authored_hint:
        2-3_Artist Loops_New_12_a: Baklava şekline başlamadan önce sanatçının doğru yöne girmesi için 60 derece sola doğru dönmesi gerek.
        2-3_Artist Loops_New_12_b: Sanatçı ileri 100 piksel gittikten sonra, keskin köşe yapmak için 120 derece sağa dönüş yapmalı.
        2-3_Artist Loops_New_12_c: Sanatçının geniş bir köşe yapmak için sağa 60 derece dönmesi yeterlidir.
      2-3 Artist Loops New 13_authored_hint:
        2-3_Artist_Loops_New_13_a: "Her baklava şeklinin sonunda sanatçı zaten bir sonraki baklava şekli için doğru yöne bakıyor olacak.\nBu sebeple, tekrar başlamadan önce 'sola dön' komutuna ihtiyacımız olmayacaktır."
        2-3_Artist_Loops_New_13_b: "Her bir baklava şeklini yapmak için sanatçının: \n- İlerle \n- 120 derece sağa dön \n- ilerle \n- 60 derece sağa dön,\nbloklarına ihtiyacı olacak.\n \nSonra bunu tekrar et!"
      2-3 Artist Loops New 9_authored_hint:
        2-3_Artist_Loops_New_9_a: Sanatçı çizime başlamadan önce 45 derece sağa dönmeli.
        2-3_Artist_Loops_New_9_b: Bu V bir karenin sadece yarısı kadardır.  Bir karenin diğer yarısı çizmek için gereken kod ne olurdu?
      2-3 Artist Nested Loops 1_authored_hint:
        2-3_Artist_Nested_Loops_1_a: Bütün gri blokları döngü içine koymayı unutma.
      2-3 Artist Nested Loops 3_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "Açılar için yardıma ihtiyacınız var mı?   ** 360/12 = 30 **"
        2-3_Artist_Nested_Loops_3_b: Bütün gri blokları ve dönüş bloğunu döngü içine koymayı unutma.
      2-3 Artist Nested Loops 4_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "Açılar için yardıma ihtiyacınız var mı?   ** 360/12 = 30 **"
      2-3 Artist Nested Loops 5_authored_hint:
        2-3_Artist_Nested_Loops_5_a: "'İleri atla' bloğu ile bir karenin üstünden diğerine başlayacağın noktaya gel.\nEğer karelerin 20 piksel yüksekliğinde ise ve aralarında 20 piksel var ise ne kadar atlaman gerekir?"
      2-3 Artist Nested Loops 7_authored_hint:
        2-3_Artist_Nested_Loops_7_a: "Her  döngüde ne kadar dönmem gerekir?    360/10 kaç eder?"
      2-3 Artist Nested Loops 9_authored_hint:
        2-3_Artist_Nested_Loops_9_a: |-
          Doğru açıyı bulmak için yardım lazım mı? ** 360 / 12 = 30 **
      2-3 Bee Conditionals 14_authored_hint:
        2-3_Bee_Conditionals_14_a: Blokları koymakta zorlanıyor musun?  Kırmızı çiçeklerle mor çiçeklere aynı şekilde davranmaya çalış!
        2-3_Bee_Conditionals_14_b: Kırmızı çiçek mor olsaydı ekstra 'tekrarla' bloğuyla kodu ne kadar azaltabilirdin?
        2-3_Bee_Conditionals_14_c: "İki ayrı parça halinde çözmeyi deneyin:\n! [] (https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png) \n1) 3 nektar topla\n - 5 kere ilerle \n-Nektar varmı diye kontrol et, eğer öyleyse al.\n-sola dön\n 2) Bal Yap\n-İlerle\n-iki bal yap"
      2-3 Bee Conditionals 15_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Unutmayın: Mor çiçekler sadece ya 0 ya da 1 nektar bulunduruyor ve programı her çalıştırdığında bu değer değişebilir.'
      2-3 Bee Conditionals 3_authored_hint:
        2-3_Bee_Conditionals_3_a: İlerlemek için bir döngü, nektar için başka bir döngü ve bal yapmak için başka döngü kullanırsan daha az blok kullanmış olursun.
      2-3 Bee Conditionals 6_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Unutmayın: mor çiçekler 0 ila 1 nektar bulundurur ve programınızı her çalıştırdığınızda değişir!'
      2-3 Bee Debugging 1_authored_hint:
        2-3_Bee_Debugging_1_a: Hatalı bloğu bulup düzelttikten sonra, 'tekrarla' bloğu kullanabileceğin bir tekrar fark ettin mi?
      2-3 Bee Debugging 2_authored_hint:
        2-3_Bee_Debugging_2_a: Hatalı bloğu bulup düzelttikten sonra, 'tekrarla' bloğu kullanabileceğin bir tekrar fark ettin mi?
      2-3 Bee Debugging 4_authored_hint:
        2-3_Bee_Debugging_4_a: Biryerlerde arının yaptığı anlamsız bir hareket varmı? O bloğu değiştirdiğinde ne oluyor?
      2-3 Bee Functions 4_authored_hint:
        2-3_Bee_Functions_4_a: Fonksiyonla döngü kullanman gerekmiyor. Fonksiyonu kullanarak ilerle sonra da tekrar fonksiyonu kullanarak ilerle.
      2-3 Bee Functions 6_authored_hint:
        2-3_Bee_Functions_6_a: Fonksiyonla döngü kullanman gerekmiyor. Fonksiyonu kullanarak ilerle sonra da tekrar fonksiyonu kullanarak ilerle.
      2-3 Bee Functions 8_authored_hint:
        2-3_Bee_Functions_8_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız!  ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9_authored_hint:
        2-3_Bee_Functions_8_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        2-3_Bee_Functions_8_b: |-
          Kodunu yeşil fonksiyon bloğu içinde oluştur. ! [] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2_authored_hint:
        2-3_Bee_Loops_2_a: Döngü içinde 4 blok olsun.
      2-3 Bee Loops 3_authored_hint:
        2-3_Bee_Loops_3_a: Döngü içinde 6 blok olsun.
      2-3 Bee Loops 3B_authored_hint:
        2-3_Bee_Loops_3B_a: Birbiri ardına İki farklı döngü gerekir.
      2-3 Bee Loops 4_authored_hint:
        2-3_Bee_Loops_4_a: Döngü içinde 5 blok olsun.
      2-3 Bee Loops 4A_authored_hint:
        2-3_Bee_Loops_4A_a: İlk eylem 'ilerle' yerine bir 'dönüş' olacak.
        2-3_Bee_Loops_4A_b: Programın son parçası döngü sonrasına yazacağınız kod olmalı.
        2-3_Bee_Loops_4A_c: Eğer döngüleri henüz bulmadıysanız, uzun yoldan kodlayıp neleri 'tekrarla' bloğu ile döngüye dönüştürebileceğinize bakın.
      2-3 Bee Loops 5_authored_hint:
        2-3_Bee_Loops_5_a: Eğer tekrarla bloğunun içine koyacak blokları henüz bulamadıysan, teker teker kodla ve tekrar eden yerlere dikkat et.
      2-3 Bee Loops 6_authored_hint:
        2-3_Bee_Loops_6_a: Eğer tekrarla bloğu içine hangi blokların gireceğini bulamadıysan teker teker eklemeyi dene.
        2-3_Bee_Loops_6_b: İşiniz bittiğinde, 'tekrarla' döngüsü içinde 6 blok olmalıdır.
      2-3 Bee Loops 7_authored_hint:
        2-3_Bee_Loops_7_a: İlk eylem 'ilerle' yerine bir 'dönüş' olacak.
        2-3_Bee_Loops_7_b: 'Eğer döngüyü başlangıçta göremiyorsan, uzun şekilde yap ve tekrarlara dikkat et.  '
      2-3 Maze 1_authored_hint:
        2-3_Maze_1_a: '''İlerle'' bloğunu kullanmak için araç çubuğu alanından dışarı çalışma alanına sürükleyin ve ''çalıştığı zaman'' bloğuna bağlayın.'
      2-3 Maze 16_authored_hint:
        2-3_Maze_16_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı deneyin ve tekrar eden şeyleri döngüye koyun.
        2-3_Maze_16_b: "Birden fazla bloğu tekrarla bloğu içine koymak için döngüyü çalışma alanına sürükle, sonra  blokları içine sürükle!"
      2-3 Maze 6_authored_hint:
        2-3_Maze_6_a: Bu bulmacayı çözmek için iki yol vardır!
      2-3 Maze Loops 17_authored_hint:
        2-3_Maze_Loops_17_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı deneyin ve tekrar eden şeyleri döngüye koyun.
        2-3_Maze_Loops_17_b: Başlangıç kodu silindi mi? "Baştan Başla" tuşu ile tekrar başa dönebilirsin!
      2-3 Maze Loops 18_authored_hint:
        2-3_Maze_Loops_18_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı deneyin ve tekrar eden şeyleri döngüye koyun.
      2-3 Maze Loops 19_authored_hint:
        2-3_Maze_Loops_19_a: Eğer takıldıysan, önce kodu yaz sonra tekrarlı kısımları gör.
        2-3_Maze_Loops_19_b: İçiçe döngüler kullanmanız blok sayısının azalmasını sağlayacaktır.
      2-3 Maze Loops 20_authored_hint:
        2-3_Maze_Loops_20_a: Bu labirentte döngü kullanılabilecek yerleri bulmak için merdiven basamağı desenine bak.
      2-3 Maze Loops 21_authored_hint:
        2-3_Maze_Loops_21_a: Merdiven basamağı deseni bulmakta zorlanıyorsanız, önü kapalı yolları parmağınızla kapatın.
      4-5 Artist 1_authored_hint:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11_authored_hint:
        4-5_Artist_11_a: Döngü içinde sanatçının her çizgiyi çizdikten sonra geriye ve yukarı atladığını garanti et.
      4-5 Artist 3_authored_hint:
        4-5_Artist_3_a: |2
          Çiçek tarlasının etrafı 600 piksel ise ve iki tarafı 200 piksel uzunluğunda ise, kısa kenarlara ne kadar piksel olur hesaplayalım: 
          ** 600-200 - 200 = 200 ** 
          Yani iki kısa kenar toplam 200 piksel eder.
           ** 200 / 2 kaç eder? **
        4-5_Artist_3_b: Tekrarla bloğunun nereye gireceğini bulamıyorsanız önce kodlayın sonra tekrarlayan kısımları görün.
      4-5 Artist 4_authored_hint:
        4-5_Artist_4_a: "Bir daire içinde 360 derece vardır! Bir daire çizebilmek için bu kodu 360 kere (1 derece dönerek) tekrarlaman gerekir!"
      4-5 Artist 5_authored_hint:
        4-5_Artist_5_a: |-
          Deneme yanılma iyi bir yöntemdir, ancak 90 derecelik açıyı üçe bölerek de sorun çözebilir. ** 90 / 3 _____ ** =
      4-5 Artist 7_authored_hint:
        4-5_Artist_7_a: 'Hangi açı en küçüktür? Sanatçı hangi açıda duruyor? '
      4-5 Artist 8_authored_hint:
        4-5_Artist_8_a: "Uzun kenarlar 240 piksel uzunluğundadır.  Yani 2 Kısa taraf toplamı : ** 800-240 - 240 = 320 **  **\n 320/2  kaç eder**? "
        4-5_Artist_8_b: "Bu görüntü 2 şekilde yapılabilir!   -\n-Bir kenarı çakışan İki dikdörtgen çiz: ** 120 ** uzunlukta ve ** 160 ** yükseklikte,  \n-Bir dikdörtgen çiz ** 240 ** uzunlukta ve ** 160 ** yükseklikte, sonra  ortaya bir satır ekleyin."
      4-5 Artist 9_authored_hint:
        4-5_Artist_9_a: "Bir eşkenar üçgenin tüm kenarları ve açıları eşittir. \n"
        4-5_Artist_9_b: Aynı boyutta üç üçgen çizmek gerekir. Her birinin ardından yeni konuma atlamayı unutma.
      4-5 Artist Assessment 1_authored_hint:
        4-5_Artist_Assessment_1_a: Bu bulmacayı tamamlamak için sadece dış üçgeni çizmen yeterli.
      4-5 Artist Patterns 11_authored_hint:
        4-5_Artist_Patterns_11_a: Bir çemberde 360 derece varsa ve her döngü 3 derece dönerse, yarım daire için kaç kere döngüyü çalıştırman gerekir?
      4-5 Artist Patterns 2_authored_hint:
        4-5_Artist_Patterns_2_a: Kareler 20 piksel uzun olduğundan, sonraki döngüye başlamadan önce 20 piksel atlamak gerekecektir.
      4-5 Artist Patterns 3_authored_hint:
        4-5_Artist_Patterns_3_a: Araç kutusundan her seferinde tüm kod bloğunu çekmeyi unutmayın.
        4-5_Artist_Patterns_3_b: Kodunuz çok kafa karıştırıcı hale gelirse, "Baştan Başla"'yı tıklayın ve yeniden deneyin!
      4-5 Artist Patterns 5_authored_hint:
        4-5_Artist_Patterns_5_a: "Şimdi sanatçı her bir baklava şeklini bitirdiğinde olması gereken yönün terine bakıyor.\nDoğru yöne bakması için kaç derece dönmesi gerekiyor?"
      4-5 Bee Conditionals 4_authored_hint:
        remember_quantum: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
      4-5 Bee Conditionals 5_authored_hint:
        remember_quantum: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
      4-5 Bee Conditionals 6_authored_hint:
        4-5 Bee Conditionals 6_a: Bu bulmacayı yalnızca çalışma alanındaki bloklarla  çözebilirsiniz.  Hangi sırayla olmalı?
        4-5 Bee Conditionals 6_b: Çiçeğin **0** dan çok nektar içerip içermediğini kontrol etmeyi en az **3** kez tekrarlaman gerekiyor.
      4-5 Bee Debugging 1_authored_hint:
        4-5_Bee_Debugging_1_a: Doğru çözümü bulamadıysan, programı çalıştır neyin hatalı olduğunu gör.
      4-5 Bee Nested Loops Rows_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Bu bulmacayı uzun bir dikdörtgen olarak düşün. Arı ileri hareket etmeli, sonra birkaç defa sola dönmeli ve rotayı tamamlamalı.
      4-5 Maze 10_authored_hint:
        4-5_Maze_10_a: |-
          Eğer döngüyü nasıl kullanacağını bulamadıysan uzun yoldan dene sonra tekrarlı kısımları gör.
          Tekrarla içine neyi koyduğunda kod daha kısa olacaktır?
      4-5 Maze 4_authored_hint:
        4-5_Maze_4_a: Tekrarla bloğunu nereye koyacağına karar veremediysen önce kodla sonra tekrar eden kısımlara bak.
      4-5 Maze 5_authored_hint:
        4-5_Maze_5_a: Tekrarla bloğunu iki adımdan fazla ilerlemek gerektiğinde kullanın.
        4-5_Maze_5_b: Bulmacayı çözmek için birden fazla tekrarla bloğu kullanabilirsiniz.
      4-5 Maze 6_authored_hint:
        4-5_Maze_6_a: "Rotayı parmağınızla takip etmeyi deneyin. Bulduğunuz yol en kısa yol mu ?"
      4-5 Maze 7_authored_hint:
        4-5_Maze_7_a: "** Kodunuzu olabildiğince kısaltmak mı istiyorsunuz? ** \nKodunu iyice incele. Tekrar eden bloklar görüyor musun?  Tekrar eden kodu döngü içinde yazmayı dene!"
      4-5 Nested Loops 12_authored_hint:
        4-5_Nested_Loops_12_a: "** 360 / 36 =? **"
      4-5 Nested Loops 2_authored_hint: [ ]
      4-5 Nested Loops 6_authored_hint:
        4-5_Nested_Loops_6_a: |-
          İç döngü sonrası bir dönüş yapmayı unutmayın. 360 derece üzerine 6 üçgeni döngüyle yazman gerekir. 
          ** 360 / 6 =? **
      4-5 Nested Loops 7_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Bu tasarım 360 derece için on kez dönmelidir. ** 360 / 10 =? **
      4-5 Nested Loops 8_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Bu tasarım 360 derece için 6 kez dönmelidir. ** 360 / 6 =? **
      4-5 While Loops 8_authored_hint:
        4-5_While_Loops_8_a: Her öğe kendi 'süresince' döngüsüne ihtiyaç duymaktadır.
      AppLab Intro 3 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 4 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 5 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 6 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 7 - Change Screen Color_authored_hint: [ ]
      Artist Inspiration_authored_hint:
        brush_width: Fırça kalınlığını 1 yap ve başka bir hamle yapmadan rengini maviye ayarla.
        double_loop: '''Tekrarla'' bloğu içine ''for döngüsü'' koymayı dene.'
        specifics: "'For döngüsü' altı 'taç yaprağın' her biri için 3 ten 17 ye kadar sayıyor ve sonraki şekle geçmeden önce sadece tek sayıda kenarı olan çokgenler çiziyor.  \n'alfa_ayarla' bloğu sayaç değeri arttıkça bölme işlemini kullanarak rengin soluklaşmasını sağlıyor."
        after: Her "taç yaprak" ile işiniz bittiğinde, 60 derece dönmeden önce 20 piksel 'ilerle' komutu kullandığınızdan emin olun.
        solution: |-
          ** Çözüm **! [Çözüm Bloklarının resmi] (https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      Bergeron Robot Maze1_authored_hint:
        2-3_Maze_1_a: '''İlerle'' bloğunu kullanmak için araç çubuğu alanından dışarı çalışma alanına sürükleyin ve ''çalıştığı zaman'' bloğuna bağlayın.'
      Course 4 Artist 11_authored_hint:
        Course_4_Artist_11_a: 'Yarım altıgenin ** 30 kenar uzunluğu ** ve ** 60 derece**sağa dönüşü vardır.  '
        Course_4_Artist_11_b: '2/3 üçgeninin ** 80 kenar uzunluğunu ** ve ** 120 derece **sağa dönüşü vardır.  '
      Course 4 Artist 12_authored_hint:
        Course_4_Artist_12_a: 'Bu resimde tekrarlanan her şekil önce ** yarım bir Altıgen **, daha sonra ** bir üçgenin iki kenarının**birleşiminden oluşur. '
        Course_4_Artist_12_b: 'Yarım altıgenin biraz daha büyük olması dışında, bu şekil neredeyse en son bulmaca ile aynıdır. '
        Course_4_Artist_12_c: "1) İlk üç satır 60 piksel uzunlukta ve 60 derece dönmeniz gerekir.   \n 2) Sonraki iki satır 80 piksel uzunlukta ve 120 derece dönmeniz gerekir "
        Course_4_Artist_12_d: |-
          **Çözüm:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">6</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">3</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">ilerle</title>
          <title name="VALUE">60</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">sağadön</title>
          <title name="VALUE">60</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">ilerle</title>
          <title name="VALUE">80</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">sağadön</title>
          <title name="VALUE">120</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
          
      Course 4 Artist 6_authored_hint:
        Course_4_Artist_6_a: Orada 3 üçgen 360 derece döndürme açısı içindedir. Kaç kez 3 derece döndüğümüzde 360 derece dönmüş oluruz?
      Course 4 Artist 7_authored_hint: [ ]
      Course 4 Artist 8a_authored_hint:
        Course_4_Artist_8a: |-
          Ne kadar döneceğin konusunda yardım mı gerekiyor? 360 derecelik dönüş içinde 3 üçgen vardır. 360 derece içinde kaç tane 3 vardır?
      Course 4 Artist 9_authored_hint:
        Course_4_Artist_9_a: "Ne kadar dönmek gerek? \n360 bölü 10 nedir?"
      Course 4 Artist Binary Free Play 2b_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Bu kod iki 'şununla say döngüsü' kullanır. İlki 1'den 8'e, diğeri ise 8'den 1'e geriye doğru sayıyor.
        Course_4_Artist_Binary_Free_Play_2b_b: Her 'şununla say döngüsü' üç kez tekrarlanır.  İlki en soldaki 1'leri, ikincisi ortadaki 0'ları ve üçüncüsü sağdaki 1'leri çizer.
        Course_4_Artist_Binary_Free_Play_2b_c: Her tekrarda 'sayac' değeri kadar 1 ve 16-(2 x sayaç) sayısı kadar 0 olmalı.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          ** Çözüm: **![solution] (https://images.code.org/b282dd6324910b7d604e24182cbbccbb-image-1469641477135.png)
      Course 4 Artist For Loops 11_authored_hint:
        Course_4_Artist_For_Loops_11_a: "Dönüş açısı ile her şekil ile değişecek!    Matematik blokları kullanarak  \"360 bölü şeklin kenar sayısı\" ile döneceğin açıyı hesapla. "
      Course 4 Artist For Loops 11a_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360/kenar sayısı değeri dönmen gereken açıyı verir.'
        Course_4_Artist_For_Loops_11a_b: 'Her seferinde şeklin kenar sayısının 10 katı kadar ilerlemen gerekiyor. '
      Course 4 Artist For Loops 3_authored_hint:
        Course_4_Artist_For_Loops_3_a: Şununla say döngüsünün sizi ilerletmesini istiyorsan, 'sayaç' değişkenini uzaklık olarak kullan.
      Course 4 Artist For Loops 4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "** İhtiyacınız olacak en küçük sayı nedir?   \nEn büyük sayı nedir?   \nHer defasında artış ne kadar? ** \n'Şununla say döngüsü' için boşlukları doldururken sorman gereken sorular bunlardır."
      Course 4 Artist For Loops Challenge_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: En büyük şeklin 19 yüzü vardır. En küçük olanı sadece iki.
        Course_4_Artist_For_Loops_Challenge_b: Şununla say döngüsü ikişer ikişer sayıyor
      Course 4 Artist For Loops Challenge_a_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: En büyük çokgenin 19 kenarı vardır.
        Course_4_Artist_For_Loops_Challenge_b: Her çokken olması gereken kenar sayısından bir eksik kenara sahiptir.
      Course 4 Artist For Loops inspire_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: Bu kodun temeli bir önceki bulmaca ile aynıdır. Sadece birkaç basit değişiklik gerekir.
        Course_4_Artist_For_Loops_inspire_b: 10 dan 3 e birer birer sayan 'şununla say döngüsü' kullanmayı dene.
        Course_4_Artist_For_Loops_inspire_c: '''Şununla say döngüsü'' içinde iki adet ''tekrarla döngüsü'' vardır. Fakat ikincisi ters yöne döner.'
        Course_4_Artist_For_Loops_inspire_d: "** Çözüm: **\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\" inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_arithmetic\" inline=\"true\">\n                <title name=\"OP\">EKSİ</title>\n                <value name=\"A\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">sayaç</title>\n                  </block>\n                </value>\n                <value name=\"B\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">ilerle</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">40</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">sağadön</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">BÖL</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">360</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">sayaç</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">EKSİ</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">sayaç</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">1</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">ilerle</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">40</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">soladön</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">BÖL</title>\n                            <value name=\"A\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">360</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">sayaç</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration_authored_hint:
        Course_4_Artist_Functions_Inspiration_a: Bir önceki bulmacadan başla ve tekrarla bloğu içine sağa 3 derece dön bloğu ekle.
        Course_4_Artist_Functions_Inspiration_b: '''Tekrarla döngüsünün'' dışında fakat ''for döngüsünün'' içinde olacak şekilde 90 derece dönüş yap.'
        Course_4_Artist_Functions_Inspiration_c: |-
          ** Çözüm: **![Solution] (https://images.code.org/0c94bcde33a00595aa099fea964ca80e-image-1469641309381.png)
      Course 4 Artist Functions challenge_authored_hint:
        Course_4_Artist_Functions_challenge_a: Fonksiyonları kullanmayı öğrenmenin bir yanı da hangi fonksiyona ihtiyacın olup olmadığını anlamaktır.
        Course_4_Artist_Functions_challenge_b: '''For döngüsü'' kullan ve sonra onun sayaç değişkenini iç içe geçmiş tekrarla döngüsünde kullan.'
        Course_4_Artist_Functions_challenge_c: Her döngüde kare çizip ileri atlaman gerekiyor.
        Course_4_Artist_Functions_challenge_d: Tekrarla döngüsü dışında fakat 'for döngüsü' içinde 90 derece dönmen gerekiyor.
      Course 4 Artist Inspire_authored_hint:
        Course_4_Artist_Inspire_a: Bir kareyi tamamladıktan sonra, dönmeden ve yeni bir tane çizmeden önce kenar uzunluğunun yarısı kadar ileri atlayın.
        Course_4_Artist_Inspire_b: Bir rüzgar gülü çizmek için her bir kare ve atlama 4 kez tekrarlanıyor(aralarında sola dönüş var).
        Course_4_Artist_Inspire_c: Her bir rüzgar gülü sağa ** 360/kenar** değerinde dönüş açısıyla 4 kez tekrarlanıyor.
        Course_4_Artist_Inspire_d: |-
          ** Çözüm: **! [Çözüm] blokları (https://images.code.org/35fa852515d73aa8cf6c2bde4f2d46a3-image-1469641128278.png)
      Course 4 Artist Vars 13_authored_hint:
        Course_4_Artist_Vars_13_a: İç içe İki adet 'tekrarla döngüsü' kullanmalısın ve her biri kenar sayısı kadar tekrarlamalı.
        Course_4_Artist_Vars_13_b: "İç 'tekrarla döngüsü' (sola dönerek) bir sekizgen çizer.        Daha sonra sadece dıştaki döngünün içinde ilerleyip sağa dönün."
        Course_4_Artist_Vars_13_c: Kenar sayısı değiştiğinde şeklin boyutunun aynı kalması için matematik bloğunu kullanarak piksel uzunluğunu kenar sayısına bölün.
      Course 4 Artist Vars 6_authored_hint:
        Course_4_Artist_Vars_6_a: Bir çokgen çizmek için ** 360 / kenar ** kadar dönün.
      Course 4 Artist Vars 8_authored_hint:
        Course_4_Artist_Vars_8_a: Başlangıç uzunluğunu kenar sayısına bölersen, kenar sayısı arttıkça kenar uzunluğu azalacaktır.
      Course 4 Bee Params 7_authored_hint:
        notice_pattern: 'Nektarların ne kadar değiştiği ile ilgili bir düzen görüyor musun? '
        count_with_for: Nektar birer birer artar dikkat edin. Ne tür bir blok kullanırsan nektarları sayarken aynı kodu bir çok kez tekrarlamasını sağlayabilirsin?
      Course 4 Bee Params 8_authored_hint:
        Course_4_Bee_Params_8_a: Her seferinde nektar sayısını ve bal sayısını sorabilirsin. Eğer yok ise değer 0 olacaktır.
      Course 4 Play Lab Params 2_authored_hint:
        Course_4_Play_Lab_Params_2_a: '"Düzenle" tuşuna basıp ''atla'' fonksiyonunu güncelleyebilir ve yükseklik parametresi almasını sağlayabilirsin.'
      Course 4 Play Lab Vars 2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Köpeğin hızını 'Dog_speed' değerini kedinin hızından 'cat_speed' değerinden büyük yaptığınızdan emin olun.
      Course 4 Play Labs For Loops 2_authored_hint:
        Course_4_Play_Labs_For_Loops_2_a: '''For döngüsüne'' her seferinde çift sayıları atlamak için ne eklemeniz gerekir?'
      Course 4 Playlab For Loop Freeplay_authored_hint: [ ]
      Course 4 Playlab For Loops 4b_authored_hint:
        Course_4_Playlab_For_Loops_4b_a: Bayraklar karakterlere 330 piksel uzaktadır.
        Course_4_Playlab_For_Loops_4b_b: Her karakterin 330 piksel uzaklığa aynı sayıda hareketle fakat farklı başlangıç ve bitiş sayılarıyla gitmesini nasıl sağlarsın?
        Course_4_Playlab_For_Loops_4b_c: Her bir karekter bayrağı aynı sayıda hareket ile geçtiği sürece, son hareketinde karakterin bayrağı ne kadar geçtiği önemli değil.
      Course 4 Playlab For Loops 5b_authored_hint:
        Course_4_Playlab_For_Loops_5b_a: Karekterler merkeze 175 piksel uzaktadır.
        Course_4_Playlab_For_Loops_5b_b: Kahramanın bir sonraki adımı daha uzun olacak çünkü sayacı artmaya devam ediyor.
      Course 4 Playlab For Loops 6b_authored_hint: [ ]
      Course 4 SCF 1_authored_hint:
        Course_4_SCF_1_a: Her altıgenin 40 piksel kenar uzunluğu vardır.
        Course_4_SCF_1_b: Her altıgen arasında yatay düzlemde 120 piksel atla olmalı.
        Course_4_SCF_1_c: "İkinci sıra altıgen çizmeden önce, sağa 60 derece dön ve 40 piksel ileri atla.\nDoğru dikey noktaya geldikten sonra sanatçıyı döndür ve geriye 320 piksel atla."
        Course_4_SCF_1_d: "Üçüncü sıra altıgen çizmeden önce, sağa 60 derece dön ve 40 piksel ileri atla.\nDoğru dikey noktaya geldikten sonra sanatçıyı döndür ve 440 piksel geri atla. (Fonksiyonunuzdan 120 piksel daha ileride olacak şekilde). "
        Course_4_SCF_1_e: |-
          ** Çözüm: **! [Çözüm] blokları (https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      Course 4 SCF 1a_authored_hint:
        Course_4_SCF_1a_a: 16. aşamadaki fonksiyonları hatırla.
        Course_4_SCF_1a_b: "Bu yolu, ana yol olarak kabul et:! [] (https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)"
        Course_4_SCF_1a_c: Şununla say döngüsü kullanmayı düşün. Adımlar için değil fonksiyon parametreleri için.
        Course_4_SCF_1a_d: |-
          ** Çözüm: **! [Çözüm] blokları (https://images.code.org/aa5a636a1d072e1449b481973ff27337-image-1469727008929.png)
      Course 4 SCF 1b_authored_hint:
        Course_4_SCF_1b_a: "Dikkat bütün bal noktalarının şekilleri benzer.\nFonksiyon için iyi bir yer!"
        Course_4_SCF_1b_b: "Arının nasıl yolculuk yapacağıyla ilgili şu fikre bir bak:! [] (https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_c: Arının ilerlemesi gereken mesafe için şununla say döngüsü kullan.
        Course_4_SCF_1b_d: |-
          ** Çözüm: **! [Çözüm blokları] (https://images.code.org/15ef56cd19a1efd510527345f077d6eb-image-1469726894398.png)
      Course 4 SCF 2_authored_hint:
        Course_4_SCF_2_a: Her sekizgenin 40 piksel kenar uzunluğu vardır.
        Course_4_SCF_2_b: Yatay düzlemde her sekizgen arasında 136 piksel atla olmalı.
        Course_4_SCF_2_c: "İkinci sıra sekizgeni çizmeden önce, sağa 45 derece dön ve 96 piksel ileri atla.\nDoğru dikey noktada bulunduğunuzda sanatçıyı geriye döndür ve geriye doğru 408 piksel atla. "
        Course_4_SCF_2_d: "Çift sayılı şekil olan satırlarda daha az sekizgen olduğuna dikkat edin. Tek sayılı şekil olan satırlarda geriye daha fazla atlaman gerekmiyecek.\nBuda demek oluyor ki aynı fonksiyonu bütün satırlar için kullanabilirsin."
        Course_4_SCF_2_e: |-
          ** Çözüm: **! [Çözüm Blokları] (https://images.code.org/de5a99b0fb4c079504ff7cca9a249f02-image-1469727175091.png)
      Course 4 SCF 3_authored_hint:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_b: 'Bu resim kenar uzunlukları ''sayaç'' (counter) uzunluğunda olan sekizgenlerlerdir. '
        Course_4_SCF_3_c: 'Her bir sekizgen 200 den aşağı ikişer ikişer geriye 2''ye kadar giden bir ''şununla say döngüsü'' (for loop) içinden çağırılır.'
        Course_4_SCF_3_d: 'Her döngünün sonunda 22.5 derece dönmeyi unutma. '
        Course_4_SCF_3_e: Sekizgen rengi ve kalem genişliği 'sayaç' değişkeni tarafından kontrol edilir.
        Course_4_SCF_3_f: |-
          ** Çözüm: **! [Çözüm] blokları (https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      Course 4 SCFL 1_authored_hint:
        Course_4_SCFL_1_a: " Hareket için bu seçeneğe bir göz atın:! [] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        Course_4_SCFL_1_b: 'İki ''şununla say'' döngüsü(for loop) kullanmayı deneyin: biri yukarı tırmanma ve nektar alma ve diğeri aşağı inme ve bal yapma için.'
        Course_4_SCFL_1_c: "Gittikçe yükselen merdiven basamaklarını çizmek için, 'Şununla say döngüsü' (for loop) içinde birkaç 'sayaç' değerli tekrarla döngüsü gerekiyor. \nÖteki 'şununla say döngüsü' içine ise sadece bir adet 'sayaç' kadar bal yapacak tekrar döngüsü koymalısın."
        Course_4_SCFL_1_d: |-
          ** Çözüm: **! [Çözüm Blokları] (https://images.code.org/1a61eae7e12742c8d850f2bf7e939f72-image-1469726415313.png)
      Course 4 SCFL 1a_authored_hint:
        Course_4_SCFL_1a_a: En az sayıda blok kullanmak için daha ileri gitmen gerkecek.
        Course_4_SCFL_1a_b: " Hareket için bu seçeneğe bir göz atın:! [] (https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)"
        Course_4_SCFL_1a_c: '''Şununla say döngüsü'' (for loop) aynı deseni fakat değişen sayıda basamakla yapmanı sağlar. Sayının 7''den 5''e  birer birer düşmesi gerekecek.'
        Course_4_SCFL_1a_d: |-
          ** Çözüm: **! [Çözüm Blokları\t] (https://images.code.org/8742b441717ee3ab7cbc91d84f688dbb-image-1469726297064.png)
      Course 4 SCFL 1b_authored_hint:
        Course_4_SCFL_1b_a: '''Şununla say döngüsü'' (for loop) kullanmayı dene.'
        Course_4_SCFL_1b_b: "Hareket için bu seçeneğe bir göz atın:! [] (https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)"
        Course_4_SCFL_1b_c: |-
          ** Çözüm: **! [] (https://images.code.org/349a0baf93e00a679cf7ed348f8309b4-image-1469642354856.png)
      Course 4 SCFL 2_authored_hint:
        Course_4_SCFL_2_a: "Hareket için bu seçeneğe bir göz atın:! [] (https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)"
        Course_4_SCFL_2_b: Dikkatli bakarsan 'Şununla say döngüsü' (for loop) her döndüğünde üç noktada durup nesnelerle etkileşim kuruyorsun. 
        Course_4_SCFL_2_c: Şununla say döngüsünün(for loop) her tekrarında, her nesne bir şekilde 'sayaç' değişkeni ile ilişki kurar. 
        Course_4_SCFL_2_d: |-
          ** Çözüm: **! [Çözüm Blokları ] (https://images.code.org/df47aa475c36d0c1664c2fdb16b5613c-image-1469726516185.png)
      Course 4 SCFL 3_authored_hint:
        Course_4_SCFL_3_a: '''Kalem genişliği'' 1''dir. İlk karenin 50 piksel kenar uzunluğu vardır ve her kare öncekinden 50 piksel daha geniş.'
        Course_4_SCFL_3_b: Fırçanın opaklığı her zaman 'sayaç'/2 değerindedir.
        Course_4_SCFL_3_c: Her bir kareyi yaptıktan sonra geri atla, dön, atla ve geriye dön!
        Course_4_SCFL_3_d: |-
          ** Çözüm: **! [Çözüm blokları ] (https://images.code.org/7f14ddfa5cdcbfdfacd8b1e45511d583-image-1469726581880.png)
      Course 4 SCFL 4_authored_hint:
        Course_4_SCFL_4_a: Renk değişimi 'kırmızı, yeşil, mavi renk ayarla' bloğu kullanarak olur.  Kırmızı 'sayaç ' olarak ayarlıdır. Yeşil '255 - sayaç', ve mavi 255'te sabittir.
        Course_4_SCFL_4_b: Her bir şekil kenar uzunluğu 'sayaç' değişkeni kadar olan bir karedir. 5 piksel ile başlayıp 200 piksele kadar 5 er piksel artar.
        Course_4_SCFL_4_c: Sanatçı her bir kare arasında 15 derece döner.
        Course_4_SCFL_4_d: |-
          ** Çözüm: **! [Çözüm Blokları]  (https://images.code.org/b85604648076fa7adfc7a30be41d13fa-image-1469726651617.png)
      Course 4 SCFL 6_authored_hint:
        Course_4_SCFL_6_a: Renk değişimi 'kırmızı, yeşil, mavi renk ayarla' bloğu kullanarak olur.  Kırmızı  255'te sabit olarak ayarlanır. Yeşil her zaman 'sayaç' değeri olur. Mavi her zaman '255-sayaç' olur.
        Course_4_SCFL_6_b: Bu kod düşündüğünden daha basit. Şununla say döngüsü (for loop) içinde rengi ayarla, ilerle ve sonra dön.
        Course_4_SCFL_6_c: 'Şununla say döngüsü (for loop) 5 ten 250 ye 2 şer ilerler. '
        Course_4_SCFL_6_d: |-
          ** Çözüm: **! [Çözüm blokları] (https://images.code.org/a61c16d76d876d9c26ebcaebef3f97a2-image-1469726730055.png)
      Course 4 SCFL 7_authored_hint:
        Course_4_SCFL_7_a: Renk değişim 'kırmızı, yeşil, mavi renk ayarla' bloğu kullanarak olur.  Kırmızı 'sayaç ' olarak ayarlanır. Yeşil '255 - sayaç', ve mavi 255'te sabitlenir.
        Course_4_SCFL_7_b: 'Bu çizim iki benzer şununla say döngüsüyle (for loop) yapılır. Birisi 5''ten 200''e 2 şer artar, diğeri 200''den 5''e 2 şer azalır.'
        Course_4_SCFL_7_c: Her bir şununla say döngüsü (for loop) içinde 5 piksel ilerleyip '360/sayaç' kadar dön. Fırça genişliğini 'sayaç' kadar yapmayı unutma!
        Course_4_SCFL_7_d: İki şununla say döngüsü arasında 225 derece sola dönmen gerekecek.
        Course_4_SCFL_7_e: |-
          ** Çözüm: **! [Çözüm blokları] (https://images.code.org/96adbffef5520417927b6129875e6125-image-1469726787490.png)
      Course 4 SCV 1_authored_hint:
        Course_4_SCV_1_a: 'Değişkenler kullanışlıdır, çünkü döngü içinde bu değişkene ekleme yapabilirsiniz. '
        Course_4_SCV_1_b: Bu bulmaca çokgen oluşturan bir döngü içermekte. Bir diğer döngü çokgenleri kenar katı kadar tekrarlamakta, diğer döngü 'kenarlara' 5 ekledikten sonra tekrarlamakta.
        Course_4_SCV_1_c: '''Kenarlar'' için ve ''uzunluk'' için birer değişken kullanmak kodu daha düzgün yapar, böylece her sayı kümesi için yeni bir kopya oluşturmaya gerek kalmadan aynı kodu bir çok defa tekrarlayabilirsin. '
        Course_4_SCV_1_d: |-
          ** Çözüm: **![Solution] (https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      Course 4 SCV 2_authored_hint:
        Course_4_SCV_2_a: "Tamamlanan resim 10 tane bu \"çiçeklerden\" oluşmakta:! [] (https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png)..... ki onlarda 10 adet ongenden oluşmuştur:! [] (https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png)"
        Course_4_SCV_2_b: 'Bu tasarım iç içe geçmiş döngüleri (üç derinliğinde) kullanır. Tüm döngüler ''kenar'' sayısı kez çalışmalı. '
        Course_4_SCV_2_c: Her bir ongeni bitirdikten sonra sanatçı sola döner fakat öbür döngülerde sağa döner.
        Course_4_SCV_2_d: Tüm 10 taç yapraklı çiçeklerinizin aynı yere çizilmesini engellemek için '360/kenar sayısı' derece dönmeden önce en dıştaki döngünüzün parçası olarak 'uzunluk/kenar sayısı' kadar atlamayı unutma. 
        Course_4_SCV_2_e: |-
          ** Çözüm: **![Solution] (https://images.code.org/889fda43ab85f9972fdabe5bb968ff95-image-1469642093490.png)
      Course 4 SCV 3_authored_hint:
        Course_4_SCV_3_a: 'Hareketli nesneler çarpıştığında ''puan'' değişkenine ekleme ve çıkarma yapmak için matematik bloklarını kullanın. '
        Course_4_SCV_3_b: Ok tuşuna her basıldığında hareketli nesnenin ne kadar hareket edeceğini parametreden ayarlayabilirsin.
        Course_4_SCV_3_c: |-
          ** Çözüm: **![solution] (https://images.code.org/8d4bcfb29308eabff39500ad9db813fd-image-1469641570287.png)
      Course 4 SCV 4_authored_hint:
        Course_4_SCV_4_a: Burada 3 değişken işine yarayacaktır. Biri nektar miktarı, biri bal miktarı ve diğeri her döngüde arı ne kadar ilerleyecek. 
        Course_4_SCV_4_b: 'Ana döngünün içinde 3 döngü kullanman faydalı olacaktır. Bir tanesi ileri hareket için, diğeri nektar toplamak için ve sonuncusu bal yapmak için. '
        Course_4_SCV_4_c: " Hareket için bu seçeneğe bir göz atın:! [] (https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)"
        Course_4_SCV_4_d: |-
          ** Çözüm: **![Solution] (https://images.code.org/c57fc9df2e24b1f8497b7e4ca9e1f568-image-1469641818826.png)
      Course 4 SCV 5_authored_hint:
        Course_4_SCV_5_a: |2-
           Hareket için bu seçeneğe bir göz atın:! [] (https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: Döngünün her tekrarında çiçekte 2 nektar azalır ve arının bir bal daha yapması gerekir.
        Course_4_SCV_5_c: Dış döngünün başlangıcında arı bir sonraki çiçekteki nektar kadar hareket ediyor.
        Course_4_SCV_5_d: |-
          ** Çözüm: **! [Image] çözüm (https://images.code.org/831d8675f6551d79b212da594a9a73f0-image-1469641703833.png)
      Course 4 SCV 6_authored_hint:
        Course_4_SCV_6_a: |-
          Tek bir tamamlanmış şeklin neye benzediğini bir göz atın! [] (https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_b: 'Sekiz değişken oluşturman işe yarayacaktır: kırmızı1, yeşil1, mavi1, kırmızı2, yeşil2, mavi2, uzunluk ve kenarlar.'
        Course_4_SCV_6_c: Şeklin 5 tarafı da parçalara bölünmüş  'uzunluk/kenarlar' kadar zig deniz mavisi (rgb 0,175,200 ) ve zag mor (rgb = 100, 50, 150).
        Course_4_SCV_6_d: 'Zig için ''360'' / ''kenarlar'' kadar sola dönün.  Zag için ''360 ''/''kenarlar'' kadar sağa dönün. '
        Course_4_SCV_6_e: 'Şekilden 360 derece dönüş yapma kısmı standart. Şekiller yarı yarıya kesişiyor. Bu sebeple 180/kenar kadar dönmelisin. (Bu durumda sides*2 kadar tekrarlaman gerekecek). '
        Course_4_SCV_6_f: |-
          ** Çözüm: **![Solution] (https://images.code.org/72f0ce970999deffe87bd93af0db959f-image-1469642214408.png)
      CourseF_PlayLab_vars2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Köpeğin hızını 'Dog_speed' değerini kedinin hızından 'cat_speed' değerinden büyük yaptığınızdan emin olun.
      D_Frozen_nested3_authored_hint:
        courseD_artist_project3_a: Dönüş bloklarının üzerindeki oktan gerekli olan dönüş açısını seçebilirsin!
        courseD_artist_project3_b: "İç içe döngüleri dene!\n\nŞekillerin çizgilerini çizmek için oluşturduğun kodları kullan ve başka bir döngünün içinde iç içe yerleştir. Altta, dıştaki döngü bitmeden önce Elsa'yı etrafında çeviren bir blok ekle.\n\n- Eğer dıştaki döngüyü 5 defa tekrarlıyorsan 72 dereceyi dene\n- Eğer dıştaki döngüyü 6 defa tekrarlıyorsan 60 dereceyi dene"
      D_Frozen_nested4_authored_hint:
        courseD_artist_project4_a: |
          İşte üçgen bir kar tanesinden önce 36 derecelik dönüşlü beşgen kar tanesi:
          
          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />
          
          
          İşte karelerle bir altıgen kümesi:
          
          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Bunu denemek için önce ilk kar tanesini çiz, sonra dön ve ikinci kar tanesini çiz.
      D_Frozen_nested5_authored_hint:
        courseD_artist_project4_a: |
          2 altıgen ve 4 üçgen çizgileri:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      D_Frozen_nested6_authored_hint:
        courseD_artist_project1a_a: |
          Bu basamak merdiveni 76 derece dönüş içerir ve bunu 4 kere tekrarlar.
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Bu desenler, diğer bulmacalardaki merdiven basamaklarına oldukça benziyor, yalnızca açı farklı.
      D_Frozen_nested7_authored_hint:
        courseD_artist_project2a_a: |
          Bu çizim 4 basamağın iç içe döngüsünden ve '2 defa tekrarla' bloğunun içinde '180 derece' sağa dön bloğuyla oluşturulmuştur. 
          
          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      D_Frozen_nested8_authored_hint:
        courseD_artist_project3a_a: Şeklinizi döndürmek için farklı yollar da seçebilirsiniz! 18 defa, 20 derece döndürmeye ne dersin?
      D_Frozen_nested9_authored_hint:
        courseD_artist_project4a_a: |
          Burada 2 farklı uzunlukta birbiri ardına çizilen kar tanesi var (aralarında 30 derece dönüş ile).
          
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      Farmer for Authored Hint testing_authored_hint:
        first_hint: |-
          İlk ipucu bu. Bu * bazı * ** basit ** 'biçimlendirme' içerir
        second_hint: |-
          Bu da ikinci ipucu. Bir resmi var.  ! [] (https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)
        last_hint: Üçüncü ve son ipucu bu. Özel bir şey yok.
      Farmer for TTS testing_authored_hint:
        first_hint: |-
          İlk ipucu bu. Bu * bazı * ** basit ** 'biçimlendirme' içerir
        second_hint: |-
          Bu da ikinci ipucu. Bir resmi var.  ! [] (https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)
        last_hint: Üçüncü ve son ipucu bu. Özel bir şey yok.
      Function intro Ryan_authored_hint:
        Function_intro_Ryan_b: Fonksiyonları düzgün çağırırsanız, bu yolda seyahat edeceksiniz...
        Function_intro_Ryan_a: Bir fonksiyonu programının içinde birçok kez çağırabilirsin!  Bu bulmacayı çözmek için iki kez çağırmayı dene.
      Harvesting_authored_hint:
        pointer_harvester_test: Bir şeyi kontrol edip karar vermek için hangi bloğu kullanabilirim?
      Inspirational Artwork_authored_hint:
        brush_width: Fırça kalınlığını 1 yap ve başka bir hamle yapmadan rengini maviye ayarla.
        double_loop: '''Tekrarla'' bloğu içine ''for döngüsü'' koymayı dene.'
        specifics: "'For döngüsü' altı 'taç yaprağın' her biri için 3 ten 17 ye kadar sayıyor ve sonraki şekle geçmeden önce sadece tek sayıda kenarı olan çokgenler çiziyor.  \n'alfa_ayarla' bloğu sayaç değeri arttıkça bölme işlemini kullanarak rengin soluklaşmasını sağlıyor."
        after: Her "taç yaprak" ile işiniz bittiğinde, 60 derece dönmeden önce 20 piksel 'ilerle' komutu kullandığınızdan emin olun.
        solution: |-
          ** Çözüm **! [Çözüm Bloklarının resmi] (https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      InspirationalArtwork_authored_hint: [ ]
      InspirationalArtwork_2018_authored_hint: [ ]
      K2.0 sequence 1_authored_hint:
        K2.0_sequence_1_a: This program is missing one block. Can you figure out which one?
      K2.0 sequence 10_authored_hint:
        K2.0_sequence_10_a: If you're having trouble, try writing down the steps on a piece of paper first.
        K2.0_sequence_10_b: You will need three different kinds of arrows to solve this puzzle.
      K2.0 sequence 12_authored_hint:
        K2.0_sequence_12_a: If the pig isn't moving far enough, try adding another block.
      K2.0 sequence 2_authored_hint:
        K2.0_sequence_2_a: One of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?
      K2.0 sequence 3_authored_hint:
        K2.0_sequence_3_a: If you are having trouble, try to figure out what the correct path is and then remove the block that doesn't fit.
      K2.0 sequence 4_authored_hint:
        K2.0_sequence_4_a: Use 2 different arrow blocks to solve this puzzle!
      K2.0 sequence 5_authored_hint:
        K2.0_sequence_5: Your final code should have three movement blocks.
      K2.0 sequence 6_authored_hint:
        K2.0_sequence_6_a: There is 1 block that you need to add to move the bird to the pig.
        K2.0_sequence_6_b: If you can't figure out what to do, try drawing the puzzle on paper and use your finger to figure out which way to move.
      K2.0 sequence 7_authored_hint:
        K2.0_sequence_7_a: If you're stuck, try drawing the image on paper to see how the bird should move.
      K2.0 sequence 8_authored_hint:
        K2.0_sequence_8_a: Stuck? Try tracing the bird's path with your finger.
      K2.0 sequence 9_authored_hint:
        K2.0_sequence_9_a: If you're having trouble, try writing down the steps on a piece of paper first.
        K2.0_sequence_9_b: You will need to go three different directions to solve this puzzle.
      K2.0 sequence FP_authored_hint:
        K2.0_sequence_FP_a: If the path you need is unclear, use your finger to trace your way from the bird to the pig.
      K2.0 sequence pre_authored_hint:
        K2.0_sequence_pre_a: If you are having trouble getting the bird to move, make sure blocks are connected under `when run`.
      MC Agent Freeplay_authored_hint:
        MC_HOC_2017_13_Cole_a: Alex veya Steve'in harita kenarlarının dışında yürüyebilmesi için Agent'a bazı köprüler inşa ettirmeyi dene.
      MC_HOC_2017_01_Cole_authored_hint:
        MC_HOC_2017_01_Cole_a: Oyuncuyu eve yönlendirmek için ok tuşlarını kullan. Kazanmak için turuncu kareye ulaş.
      MC_HOC_2017_01_RETRY_authored_hint:
        MC_HOC_2017_01_RETRY_a: Bir `ileri taşı` bloğunu araç kutusundan çalışma alanına sürükle ve `çalıştığında` bloğuna tuttur.
        MC_HOC_2017_01_RETRY_b: Agent için kodu çalıştırmak üzere "Çalıştır" düğmesine tıklamayı unutma.
        MC_HOC_2017_01_RETRY_c: Agent kodun tamamını çalıştırdıktan sonra ok tuşlarıyla oyuncuyu hareket ettirebilirsin!
      MC_HOC_2017_02_Cole_authored_hint:
        MC_HOC_2017_02_Cole_a: Baskı plakasının üzerinde durmak için Agent'ı iki kare ilerlet.  Böylece oyuncun için kapı açılır.
        MC_HOC_2017_02_Cole_b: |-
          "Çalıştır" düğmesine bas! 
          Kodu doğru olmasa bile çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca çalıştırıp sıfırlayabilirsin.
        MC_HOC_2017_02_Cole_c: Agent kapıyı açtıktan sonra ok tuşlarını kullanarak oyuncuyu haritaya götür!
        MC_HOC_2017_02_Cole_d: Ajanın haritada belirtilen yolu takip ettiğinden emin olun!
      MC_HOC_2017_02_Will_authored_hint:
        MC_HOC_2017_02_Cole_a: Baskı plakasının üzerinde durmak için Agent'ı iki kare ilerlet.  Böylece oyuncun için kapı açılır.
        MC_HOC_2017_02_Cole_b: |-
          "Agent'ı Çalıştır" düğmesine bas! 
          Kodu doğru olmasa bile çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca çalıştırıp sıfırlayabilirsin.
        MC_HOC_2017_02_Cole_c: Agent kapıyı açtıktan sonra ok tuşlarını kullanarak oyuncuyu turuncu kareye götür.
      MC_HOC_2017_03_Cole_authored_hint:
        MC_HOC_2017_03_Cole_a: Agent'ı baskı plakasına getirdikten sonra ok tuşlarını kullanarak oyuncuyu pusulaya yürütebilirsin!
        MC_HOC_2017_03_Cole_b: Kod biraz uzun mu geldi?  Bir `tekrarla` döngüsü kullanmayı dene ve kısaltmanın mümkün olup olmadığını gör!
      MC_HOC_2017_04POINT5_Cole_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          Bu iki baskı plakasından geçmek, oyuncu için yolu açar. 
          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_04POINT5_RYAN_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: 'Agent''ın yönünü değiştirmek için `sağa dön` bloğunu kullan '
        MC_HOC_2017_04POINT5_RYAN_a: Alex veya Steve'in baltaya ulaşması için Agent'ın yalnızca birinci baskı plakasına ulaşması gerekir.
      MC_HOC_2017_04_Cole_authored_hint:
        MC_HOC_2017_04_Cole_a: Agent'ın 7 kez `ileri taşı` işlemini yapması gerekiyor.  Bunu gerçekleştirmek için `tekrarla` döngüsünü nasıl kullanabilirsin?
        MC_HOC_2017_04_Cole_c: |-
          "Çalıştır" düğmesine bas! 
          Kodu doğru olmasa bile çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca çalıştırıp sıfırlayabilirsin.
        MC_HOC_2017_04_Cole_b: Agent baskı plakasına ulaştıktan sonra oyuncu için kapıyı açar.
      MC_HOC_2017_05_Cole_authored_hint:
        MC_HOC_2017_05_Cole_a: Bir döngünün içine birden fazla kod yerleştirebileceğini biliyor muydun?  Bu bulmacayı tamamlamak için bir kalas yerleştirmeyi **ve** `tekrarla` döngüsü içinde ilerlemeyi dene.
        MC_HOC_2017_05_Cole_b: Ajanı bir köprü inşa ederek nehrin karşısına geçirin.
      MC_HOC_2017_05_Josh_authored_hint:
        MC_HOC_2017_05_Cole_a: Bir döngünün içine birden fazla kod yerleştirebileceğini biliyor muydun?  Bu bulmacayı tamamlamak için bir kalas yerleştirmeyi **ve** `tekrarla` döngüsü içinde ileri taşımayı dene.
      MC_HOC_2017_06_Cole_authored_hint:
        MC_HOC_2017_06_Cole_a: Bu döngü kaç kez çalışır?  Kaç kez *çalışmalıdır*?
        MC_HOC_2017_06_Cole_b: 'Sudan karşıya geçerken yol boyunca Ajana köprü inşa ederken yardım edin! '
      MC_HOC_2017_06_Josh_authored_hint:
        MC_HOC_2017_06_Cole_a: Bir `tekrarla` döngüsünün içine birden fazla yönerge eklemeyi dene!
      MC_HOC_2017_07_Cole_authored_hint:
        MC_HOC_2017_07_Cole_c: Ajanın tüm yapması gereken maden vagonuna giden yolu temizlemek.
        MC_HOC_2017_07_Cole_a: Bu bulmacayı çözmek için `yolu temizle` işlevinin ne işe yaradığını öğren ve araç kutusundaki küçük yeşil `yolu temizle` bloğunu kullanarak, gereken sayıda fonksiyon çağrısı yap.
        MC_HOC_2017_07_Cole_b: Bu bulmacayı çözmene yardımcı olması için fonksiyon bloklarını araç kutusundaki diğer bloklarla karıştırmayı dene.
      MC_HOC_2017_08_RY_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          "Agent'ı Çalıştır" düğmesine bas! 
          Kodu doğru olmasa bile çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca çalıştırıp sıfırlayabilirsin.
        MC_HOC_2017_08_RY_b: Bu bulmacayı çözmenin BİRÇOK yolu var.  Birkaç tanesini dene!
      MC_HOC_2017_08_Will_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          "Agent'ı Çalıştır" düğmesine bas! 
          Kodu doğru olmasa bile çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca çalıştırıp sıfırlayabilirsin.
        MC_HOC_2017_08_RY_b: Bu bulmacayı çözmenin BİRÇOK yolu var.  Birkaç tanesini dene!
      MC_HOC_2017_10_Cole_authored_hint:
        MC_HOC_2017_10_Cole_a: Bu bulmacayı daha kolay çözmek için fonksiyonları kullan!
      MC_HOC_2017_10_RETRY_authored_hint:
        MC_HOC_2017_10_Cole_b: Nereye gideceğinizi bilmiyor musunuz? Noktalı satırı bulup bulamayacağınıza bakın!
        MC_HOC_2017_10_Cole_a: Bu bulmacayı daha kolay çözmek için fonksiyonları kullan!
      MC_HOC_2017_13_Cole_authored_hint:
        MC_HOC_2017_13_Cole_a: Alex veya Steve'in harita kenarlarının dışında yürüyebilmesi için Agent'a bazı köprüler inşa ettirmeyi dene.
      MC_HOC_2017_4.5v2_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          Bu iki baskı plakasından geçmek, oyuncu için yolu açar. 
          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_Ali_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          "Çalıştır" düğmesine bas! 
          Kodu doğru olmasa bile çalıştırabilirsin.  Hatanın ne olduğunu anlayana kadar kodunu defalarca çalıştırıp sıfırlayabilirsin.
        MC_HOC_2017_08_RY_b: Bu bulmacayı çözmenin BİRÇOK yolu var.  Birkaç tanesini dene!
        MC_HOC_2017_08_RY_c: Lava giden basit bir yol için noktalı çizgiyi takip etmeye çalışın.
      MC_HOC_2017_FP10x10_authored_hint: [ ]
      MC_HOC_2017_FP10x10_RE_authored_hint: [ ]
      MC_HOC_2017_FP20x20_authored_hint:
        MC_HOC_2017_13_Cole_a: Alex veya Steve'in harita kenarlarının dışında yürüyebilmesi için Agent'a bazı köprüler inşa ettirmeyi dene.
      MikeStar_authored_hint:
        hint1: Don't give up!
      MikeStarHard_authored_hint:
        hint1: Don't give up!
      MikeStarNested_authored_hint:
        hint1: Don't give up!
      NEW Course 4 Artist Functions 13_authored_hint:
        NEW_Course_4_Artist_Functions_13_a: '''karelerin bir kenarını çiz'' fonksiyonunu güncelle ki iki kere çağırmak zorunda kalmayasın.'
        NEW_Course_4_Artist_Functions_13_c: Kutular yerine düz çizgilerle yıldız yapmak istersen nasıl bir koda ihtiyacın olur?
      NEW Course 4 Artist Functions 4_authored_hint:
        NEW_Course_4_Artist_Functions_4_a: Her bir kareden sonra 120 derece 'sağa dön' bloğu kullanmalısın .
      NEW Course 4 Artist Functions 9_authored_hint:
        NEW_Course_4_Artist_Functions_9_a: Blok eklemeden kodu çalıştırın. Çiziminizdeki eksik ne?
        NEW_Course_4_Artist_Functions_9_b: Eğer neyin yanlış olduğunu bulamadıysan kaydırıcıyı sola oynatarak sanatçıyı yavaşlatmayı dene.
      NEW Course 4 Artist Params 11_authored_hint:
        NEW_Course_4_Artist_Params_11_a: Fonksiyonun içinde değişkenler ile değişmesi gereken birden fazla sayı var.
      NEW Course 4 Artist Params 13_authored_hint:
        NEW_Course_4_Artist_Params_13_a: 'Çevre uzunluğunu kenar sayısına bölerek bütün şekillerin aynı boyutta olmasını sağlayabilirsin. '
      NEW Course 4 Artist Params 14_authored_hint:
        NEW_Course_4_Artist_Params_14_a: Fonksiyonun farklı parametrelerle nasıl çalıştığını anlamak için birkaç kere programı normaldir.
      NEW Course 4 Artist Params inspire_authored_hint:
        brush_width: Fırça kalınlığını 1 yap ve başka bir hamle yapmadan rengini maviye ayarla.
        double_loop: '''Tekrarla'' bloğu içine ''for döngüsü'' koymayı dene.'
        specifics: "'For döngüsü' altı 'taç yaprağın' her biri için 3 ten 17 ye kadar sayıyor ve sonraki şekle geçmeden önce sadece tek sayıda kenarı olan çokgenler çiziyor.  \n'alfa_ayarla' bloğu sayaç değeri arttıkça bölme işlemini kullanarak rengin soluklaşmasını sağlıyor."
        after: Her "taç yaprak" ile işiniz bittiğinde, 60 derece dönmeden önce 20 piksel 'ilerle' komutu kullandığınızdan emin olun.
        solution: |-
          ** Çözüm **! [Çözüm Bloklarının resmi] (https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      NEW Course 4 Bee For Loops 10a_authored_hint:
        NEW_Course_4_Bee_For_Loops_10a_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        NEW_Course_4_Bee_For_Loops_10a_b: You'll need to have 2 repeats, one will use a math block.
      NEW Course 4 Bee For Loops 7_authored_hint:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
      NEW Course 4 Bee For Loops 8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: "Eğer döngü yukarı sayıyor ise her seferinde artış miktarı sayaç değişkenine eklenir. \nSonraki sayıyı elde etmek için her sayıya ne kadar eklemen gerekiyor?"
      New Minecraft Hero Project_authored_hint:
        MC_HOC_2017_13_Cole_a: Alex veya Steve'in harita kenarlarının dışında yürüyebilmesi için Agent'a bazı köprüler inşa ettirmeyi dene.
      Overworld Avoid Monsters_authored_hint:
        mc_8_a: Burada seçebileceğin birkaç yol var. Hangisi en kısa?
        mc_8_b: Kodunu sadeleştirmek için 'tekrarla' döngüsünü kullan.
        mc_8_c: Amacınız ekranın üst kısmındaki evin kapısından girmek.
      Overworld Avoid Monsters_2018_authored_hint:
        mc_8_a: Burada seçebileceğin birkaç yol var. Hangisi en kısa?
        mc_8_b: Kodunu sadeleştirmek için 'tekrarla' döngüsünü kullan.
        mc_8_c: Amacınız ekranın üst kısmındaki evin kapısından girmek.
      Overworld Chop Tree_authored_hint:
        mc_2_a: 'Ağacın önüne ulaşmak için iki kere "ilerle" komutunu kullanmalısınız.'
        mc_2_b: '"Bloğu yok et" komutu önünüzdeki ağaçları keser.'
      Overworld Chop Tree_2018_authored_hint:
        mc_2_a: 'Ağacın önüne ulaşmak için iki kere "ilerle" komutunu kullanmalısınız.'
        mc_2_b: '"Bloğu yok et" komutu önünüzdeki ağaçları keser.'
      Overworld Chop Trees_authored_hint:
        mc_4_a: 'Ağaçları istediğiniz yolu izleyerek kesebilirsiniz. Hangi yol en az sayıda blok içerir?'
        mc_4_b: '"Bloğu yok et" komutu önünüzdeki ağaçları keser.'
      Overworld Chop Trees_2018_authored_hint:
        mc_4_a: 'Ağaçları istediğiniz yolu izleyerek kesebilirsiniz. Hangi yol en az sayıda blok içerir?'
        mc_4_b: '"Bloğu yok et" komutu önünüzdeki ağaçları keser.'
      Overworld House Frame Chosen_authored_hint:
        mc_6_a: Ne yerleştirmek istediğinizi seçmek için 'yerleştir' bloğundaki oku tıklayın.
        mc_6_b: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
        mc_6_c: '''Tekrarla'' döngüsü içine birden fazla blok ekleyebilirsin.'
      Overworld House Frame Chosen_2018_authored_hint:
        mc_6_a: Ne yerleştirmek istediğinizi seçmek için 'yerleştir' bloğundaki oku tıklayın.
        mc_6_b: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
        mc_6_c: '''Tekrarla'' döngüsü içine birden fazla blok ekleyebilirsin.'
      Overworld Move to Sheep_authored_hint:
        mc_1_a: '''İlerle'' bloğu araç kutusunun üstünde yer alır.'
        mc_1_b: '''İlerle'' bloklarının ikisinin de ''çalıştığı zaman'' bloğuna takıldığından emin olun.'
      Overworld Move to Sheep_2018_authored_hint:
        mc_1_a: '''İlerle'' bloğu araç kutusunun üstünde yer alır.'
        mc_1_b: '''İlerle'' bloklarının ikisinin de ''çalıştığı zaman'' bloğuna takıldığından emin olun.'
      Overworld Place Wall_authored_hint:
        mc_5_a: Öncelikle 'yerleştir' bloğunu, ardından da 'ilerle' bloğunu kullan.
        mc_5_b: Kodu bir defadan fazla çalıştırmak için blokların 'tekrarla' döngüsü içinde olduğundan emin ol.
        mc_5_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
      Overworld Place Wall_2018_authored_hint:
        mc_5_a: Öncelikle 'yerleştir' bloğunu, ardından da 'ilerle' bloğunu kullan.
        mc_5_b: Kodu bir defadan fazla çalıştırmak için blokların 'tekrarla' döngüsü içinde olduğundan emin ol.
        mc_5_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
      Overworld Plant Crops_authored_hint:
        mc_7_a: Bulunduğunuz yere hasat için "hasat et" komutunu kullanın.
        mc_7_b: Nehrin iki tarafındaki koyu kahve alanları hasat etmen gerekiyor.
        mc_7_c: '''Tekrarla'' döngüsü içine birden fazla blok ekleyebilirsin.'
      Overworld Plant Crops_2018_authored_hint:
        mc_7_a: Bulunduğunuz yere hasat için "hasat et" komutunu kullanın.
        mc_7_b: Nehrin iki tarafındaki koyu kahve alanları hasat etmen gerekiyor.
        mc_7_c: '''Tekrarla'' döngüsü içine birden fazla blok ekleyebilirsin.'
      Overworld Powered Minecart_authored_hint:
        mc_13_a: '''Yerleştir Ray'' bloğunu kullanarak üzerinde bulunduğun kareye tren rayı yerleştir.'
        mc_13_b: Kodunuzu daha kısaltmak için 'tekrarla' döngülerini kullanın.
      Overworld Powered Minecart_2018_authored_hint:
        mc_13_a: '''Yerleştir Ray'' bloğunu kullanarak üzerinde bulunduğun kareye tren rayı yerleştir.'
        mc_13_b: Kodunuzu daha kısaltmak için 'tekrarla' döngülerini kullanın.
      Overworld Shear Sheep_authored_hint:
        mc_3_a: '''Kırkma'' bloğunu kullanmak için kuzu önünde olmalı. Kuzunun önünde misin?'
        mc_3_b: 'Bakmakta olduğunuz yönü değiştirmen gerekirse, ''dönüş'' bloğunu kullan.'
        mc_3_c: 'Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.'
      Overworld Shear Sheep_2018_authored_hint:
        mc_3_a: '''Kırkma'' bloğunu kullanmak için kuzu önünde olmalı. Kuzunun önünde misin?'
        mc_3_b: 'Bakmakta olduğunuz yönü değiştirmen gerekirse, ''dönüş'' bloğunu kullan.'
        mc_3_c: 'Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.'
      Pattern Bee 1_authored_hint:
        conditional_pointer: |2
          Bu bölüm hakkında düşünerek başla: yolun her adımında ne fark var ? Bir çiçek ya da petekte olup olmadığına *karar* vermek için nasıl bir blok kullanabilirsin?
           ! [] (https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: Bal yapma dışında her petekte yapman gereken farklı ne var?
      Planning Farmer_authored_hint:
        conditional_pointer: |2
          Bu bölüm hakkında düşünerek başla: yolun her adımında ne fark var ? Bir çiçek ya da petekte olup olmadığına *karar* vermek için nasıl bir blok kullanabilirsin?
           ! [] (https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: Bal yapma dışında her petekte yapman gereken farklı ne var?
      Quantum Bee - Ryan_authored_hint:
        test_hint: Bu bir test ipucudur.
      Test embedded K1 Blockly in instructions_authored_hint: [ ]
      Underground Avoiding Lava_authored_hint:
        mc_11_a: Lav olup olmadığını kontrol edip ona göre hareket etmen için bütün kod sana hazır verildi. Tek yapman gereken ilerletmek için gerekli bloğu koyman.
        mc_11_b: '"ilerle" komutu "eğer" bloğunun içinde mi yoksa "eğer" bloğundan sonra mı kullanılmalı?'
      Underground Avoiding Lava_2018_authored_hint:
        mc_11_a: Lav olup olmadığını kontrol edip ona göre hareket etmen için bütün kod sana hazır verildi. Tek yapman gereken ilerletmek için gerekli bloğu koyman.
        mc_11_b: '"ilerle" komutu "eğer" bloğunun içinde mi yoksa "eğer" bloğundan sonra mı kullanılmalı?'
      Underground If Statements_authored_hint:
        mc_12_a: Kırmızı lekeler Kırmızıtaş madeni.
        mc_12_b: Kodunuzu kısaltmak için bir 'tekrarla' döngüsü kullanabilir misin?
        mc_12_c: 'Lav için aralıkları kontrol etmek için ''eğer'' ifadesini kullanın, sonra kaldırım taşları yerleştirin. '
      Underground If Statements_2018_authored_hint:
        mc_12_a: Kırmızı lekeler Kırmızıtaş madeni.
        mc_12_b: Kodunuzu kısaltmak için bir 'tekrarla' döngüsü kullanabilir misin?
        mc_12_c: 'Lav için aralıkları kontrol etmek için ''eğer'' ifadesini kullanın, sonra kaldırım taşları yerleştirin. '
      Underground Iron_authored_hint:
        mc_10_a: Meş'alenin arkasındaki lekeli bloklar demir madeni! Oraya nasıl gideceksin?
        mc_10_b: Lavın kenarında durduğunda, 'ileriye kırıktaş yerleştir' komutunu kullanarak güvenliğini sağlayabilirsin. Sonra da üzerinden yürü!
        mc_10_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
      Underground Iron_2018_authored_hint:
        mc_10_a: Meş'alenin arkasındaki lekeli bloklar demir madeni! Oraya nasıl gideceksin?
        mc_10_b: Lavın kenarında durduğunda, 'ileriye kırıktaş yerleştir' komutunu kullanarak güvenliğini sağlayabilirsin. Sonra da üzerinden yürü!
        mc_10_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
      Underground Mining Coal_authored_hint:
        mc_9_a: Doğru yöne mi bakıyorsun? 'Bloğu yok et' bloğu önündeki bloğu yok eder.
        mc_9_b: Duvardaki kara lekeler kömür madeni! 'Bloğu yok et' bloğu ile bu madenleri toplayın.
        mc_9_c: Durduğunuz alana meşale yerleştirmek için 'meşale yerleştir'i kullanın.
      Underground Mining Coal_2018_authored_hint:
        mc_9_a: Doğru yöne mi bakıyorsun? 'Bloğu yok et' bloğu önündeki bloğu yok eder.
        mc_9_b: Duvardaki kara lekeler kömür madeni! 'Bloğu yok et' bloğu ile bu madenleri toplayın.
        mc_9_c: Durduğunuz alana meşale yerleştirmek için 'meşale yerleştir'i kullanın.
      Valentine_artist2_01_authored_hint:
        Valentine_artist2_01_a: Each side of the grass is 30 pixels long. Try using a stair step pattern.
        Valentine_artist2_01_b: 'Tekrar eden bir örüntü gördünüz mü? Döngüde İki kere ''ilerle'' bloğu ve iki farklı ''dönüş'' bloğunu kullanabilirsiniz. '
        Valentine_artist2_01_c: |-
          Try this loop
          <xml><block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      Valentine_artist_01_authored_hint:
        Valentine_artist_01_a: Which direction does the artist need to face to move? Which direction does the artist need to face to place a new llama sticker?
        Valentine_artist_01_b: The artist needs to place 10 llama stickers and turn 90 degrees at each turn.
      Valentine_playlab_01_authored_hint:
        Valentine_playlab_01_a: |-
          Snap the `actor 1 throw red hearts down` block into the `when actor 1 clicked` event.
          
          Don't forget to change `left` to `down`!
        Valentine_playlab_01_b: Use the `move actor 1 left` block by clicking it into place beneath the `when left arrow clicked` event.
      aE1_authored_hint: [ ]
      aE2_authored_hint:
        aE2_a: Peçeteler 20 piksel uzun olduğundan, sonraki döngüye başlamadan önce 20 piksel atlamak gerekecektir.
      aE3_authored_hint:
        aE3_a: Son sahneden** iç içe döngüyü ** çalıştırdıktan sonra satırın başına geçmek için geri atlaman gerekecek.
        aE3_b: "Yeni sıraya başlamadan önce sanatçıyı aşağı taşımayı unutmayın! \nSanatçıyı aşağı taşımak ve onu doğru şekilde sağa baktırdığınızdan emin olmak için: \n- 90 derece dön(aşağı dönmek için)\n- 20 piksel atla(yeni sıraya geçmek için) \n - geriye 90 derece dön(tekrar sağa bakmak için)"
        aE3_c: İşin bittiğinde **iç içe döngülerin**  içinde 3 kere tekrar yapmış olmalısın.
        aE3_d: Kodunuz çok kafa karıştırıcı hale gelirse, "Baştan Başla"'yı tıklayın ve yeniden deneyin!
      aE3alternate_authored_hint:
        aE3alternate_a: Son sahneden** iç içe döngüyü ** çalıştırdıktan sonra satırın başına geçmek için geri atlaman gerekecek.
        aE3alternate_b: "Yeni sıraya başlamadan önce sanatçıyı aşağı taşımayı unutmayın! \nSanatçıyı aşağı taşımak ve onu doğru şekilde sağa baktırdığınızdan emin olmak için: \n- 90 derece dön(aşağı dönmek için)\n- 20 piksel atla(yeni sıraya geçmek için) \n - geriye 90 derece dön(tekrar sağa bakmak için)"
        aE3alternate_c: İşin bittiğinde **iç içe döngülerin**  içinde 3 kere tekrar yapmış olmalısın.
        aE3alternate_d: Kodunuz çok kafa karıştırıcı hale gelirse, "Baştan Başla"'yı tıklayın ve yeniden deneyin!
      aE3alternateB_authored_hint:
        aE4alternateB_a: Son sahneden** iç içe döngüyü ** çalıştırdıktan sonra satırın başına geçmek için geri atlaman gerekecek.
        aE4alternateB_b: "Yeni sıraya başlamadan önce sanatçıyı aşağı taşımayı unutmayın! \nSanatçıyı aşağı taşımak ve onu doğru şekilde sağa baktırdığınızdan emin olmak için: \n- 90 derece dön(aşağı dönmek için)\n- 20 piksel atla(yeni sıraya geçmek için) \n - geriye 90 derece dön(tekrar sağa bakmak için)"
        aE4alternateB_c: İşin bittiğinde **iç içe döngülerin**  içinde 3 kere tekrar yapmış olmalısın.
        aE4alternateB_d: Kodunuz çok kafa karıştırıcı hale gelirse, "Baştan Başla"'yı tıklayın ve yeniden deneyin!
      aE4_authored_hint:
        aE4_a: Son sahneden** iç içe döngüyü ** çalıştırdıktan sonra satırın başına geçmek için geri atlaman gerekecek.
        aE4_b: "Yeni sıraya başlamadan önce sanatçıyı aşağı taşımayı unutmayın! \nSanatçıyı aşağı taşımak ve onu doğru şekilde sağa baktırdığınızdan emin olmak için: \n- 90 derece dön(aşağı dönmek için)\n- 20 piksel atla(yeni sıraya geçmek için) \n - geriye 90 derece dön(tekrar sağa bakmak için)"
        aE4_c: İşin bittiğinde **iç içe döngülerin**  içinde 3 kere tekrar yapmış olmalısın.
        aE4_d: Kodunuz çok kafa karıştırıcı hale gelirse, "Baştan Başla"'yı tıklayın ve yeniden deneyin!
      aE5_authored_hint: [ ]
      aE6_authored_hint:
        aE6_a: |-
          Bir yarı çemberde 180 derece varsa ve her döngüde sanatçı 3 derece dönüyorsa, yarım daire çizmek için kaç kere döngü yapman gerekir?
          **180 ÷ 3 = ?**
      aE7_authored_hint:
        aE7_a: Bir kısmını yapmak için önce alt yarım daireyi çiz, sonra üst yarım daireyi çiz.
        aE7_b: Bu bulmacayı tamamlamak için 4 bölme gerekir.
      aE8_authored_hint:
        aE8_a: "Bir kare çizmek için:\n-Çizgi çiz \n-dönüşlü köşeyi kullan\nBu adımları 4 kez tekrarla."
      allHallows2017_authored_hint:
        allHallows2017_a: Dikkat! GT sizi bisikletiyle takip edebilir ve satırınızı silebilir!
        allHallows2017_g: 'Sarah: "Üşüdün mü? Gel köşeye otur... Burası 90 derece!" diyor.'
        allHallows2017_c: 'Jordyd: "Şimdi duramazsın! Devam et!" diyor.'
        allHallows2017_d: 'Josh: "Bu bulmacayı tamamlamak için kodlama becerilerinden yararlanman gerek!" diyor.'
        allHallows2017_e: 'Dani: "Ben kelime oyunlarında iyi değilim. Bir tekrarla bloğu kullanmayı dene!" diyor.'
        allHallows2017_b: 'Baker: "Şikago pastel boyası sadece *yeşil yol*da çalışır." diyor.'
        allHallows2017_f: 'Amy: "Yapabilirsin! Sadece hayal gücünü zorla!" diyor.'
      artistDebugVideo1_authored_hint:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.
      artistFunctionsVideo1_authored_hint: [ ]
      artistLoopsK2_authored_hint:
        artistLoopsK2_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan bloğun üstündeki sayıyı değiştirebilirsin.
      artistLoopsK2gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan bloğun üstündeki sayıyı değiştirebilirsin.
      artistLoopsK3_authored_hint:
        artistLoopsK3_a: Tekrarla bloğu hakkında öğrendiklerini bu bulmacayı tamamlamak için kullan!
      artistLoopsK4_authored_hint:
        artistLoopsK4_a: Sıkıştın mı? Hangi bloğun yanlış olduğunu görmek için kodu çalıştırmayı deneyin.
      artistLoopsK5_authored_hint:
        artistLoopsK5_a: Bu bulmacayı çözebilmen için başlangıçtaki 4 blok da tekrarla bloğu içine girmeli.
      artistLoopsK6_authored_hint:
        artistLoopsK6_a: Hatayı görmek için kodu çalıştırmayı deneyin.
      artistLoopsK7_authored_hint:
        artistLoopsK7_a: Kullanman gereken tüm bloklar zaten çalışma alanında!
      artistLoopsK8_authored_hint:
        artistLoopsK8_a: Hatayı görmek için kodu çalıştırmayı deneyin.
      artistLoopsK9_authored_hint:
        artistLoopsK9_a: Bu meydan okuma art arda DÖRT döngü içerir!
      artistLoopsKA_authored_hint:
        artistLoopsKA_a: Çizgi çizmeden ileri hareket etmek için 'İleri atla' bloğu kullan.
      artistLoopsKB_authored_hint:
        artistLoopsKB_a: Bu bulmacayı çözmek için döngü içinde 3 blok olmalıdır.
      artistLoopsKFP_authored_hint: [ ]
      comment_intro_maze_2018_authored_hint:
        courseC_maze_programming4_a: Comments are also helpful when other people try to read your code.
        courseC_maze_programming4_b: Add a comment when you change directions- what would have happened if you turned the other way?
      conditionals_forvideo_harvester_authored_hint: [ ]
      course1_artist_loops_challenge1_authored_hint:
        courseA_artist_loops_challenge1_a: |+
          Bu tarz döngüleri duvarlar ve çatı oluşturmak için kullanabilirsiniz. Farklı blokları tekrar deneyin. !
          
          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)
          
          Kendi tasarımını yap veya bazı fikirler almak için tıkla![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) !
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2_authored_hint:
        harvey_tictactoe: Atla bloğu ile başka alanlara gidebilirsiniz.
      course1_artist_loops_challenge3_authored_hint:
        courseA_artist_loops_challenge2_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml> sanatçının bir eğimde hareket etmesine izin verir!'
        courseA_artist_loops_challenge2_b: Bir kuş evini bitirdikten sonra diğerine 'Atla'!
        courseA_artist_loops_challenge2_c: Bu bulmaca için döngü içinde ÇOK FAZLA blok kullanman gerekecek.
      course1_artist_loops_challenge4_authored_hint:
        courseB_artist_loops_challenge1_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml> sanatçının bir eğimde hareket etmesine izin verir!'
        courseB_artist_loops_challenge1_b: Bir zarı bitirdikten sonra diğerine 'Atla'!
        courseB_artist_loops_challenge1_c: 'Bazı aynı çizgiler üzerinden geçerken  ''ilerle'' veya ''atla'' bloklarından iki taneye ihtiyacın olacak. '
      course1_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Eğer işler ters giderse her döngüdeki sayıları değiştirmeyi deneyin.
        courseA_collector_loops_challenge1_b: Eğer bir şeyi sadece bir kez yapıyorsanız, döngü kullanmanıza gerek yoktur.
        courseA_collector_loops_challenge1_c: Mağaranın sağ tarafında 6 değerli taş vardır, ama sadece bir kez ilerleyip, 5 kez toplaman gerekecek. Neden biliyor musun?
      course1_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: "Bunu çözmek için ! [] (https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) yalnızca bir tane kullanmanız gerekir ."
        courseA_collector_loops_challenge2_a: |2
          Güney'e ilerlemeden önce patikada geriye gidebilirsin.
           ![] (https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      course1_collector_loops_challenge3_authored_hint:
        courseB_collector_loops_challenge1_b: |
          'Güney'e ilerle' ve 'hazine al' komutlarını dögü içinde tekrarlayarak başla. 
          <xml>
          <block type="maze_moveSouth"/><next>
          <block type="collector_collect"/></next>
          </xml>
        courseB_collector_loops_challenge1_a: |
          Kuzey dizilimi güney diziliminden biraz farklı. 
          <xml>
          <block type="collector_collect"/><next>
          <block type="maze_moveNorth"/></next>next>
          </xml>
        courseB_collector_loops_challenge1_c: "Her yolun arasında iki kere Doğuya ilerleyin.\n<xml>\n  <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next>\n  </xml>\nBunu sadece 14 blok ile yapabilirsiniz. Çözümü görmek için bir ipucuna daha basın.\n"
        courseB_collector_loops_challenge1_d: |-
          Bunu dene!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_collector_loops_challenge4_authored_hint:
        courseB_collector_loops_challenge2_a: Eğer işler ters giderse, yeniden başlamaktan korkma! Sakın pes etme!
        courseB_collector_loops_challenge2_b: |-
          Bu tekrar eden kodu kullanırsan, Laurel mağaranın içindeki duvara çarpmayacak! 
          
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: Son hazine yığınını toplamak için bir döngü kullanmayı unutma!
        courseB_collector_loops_challenge2_d: |-
          Bu çözümü deneyin:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_maze_debugging_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Eğer çok ileri giderseniz, bazı yollar TNT (patlayıcı) ya çıkar.
      course1_maze_debugging_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: Bu bulmacayı çözmek için blok eklemene veya kaldırmana gerek yok.
        courseB_maze_seq_challenge2_b: Blokları doğru sıralayıp ortadaki yoldan git.
      course1_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Parmağınızla boşlukları saymaya çalışın. Başladığınız yerdeki boşluğu saymayın!
      course1_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: En kısa yol bu sefer işe yaramayabilir.
        courseB_maze_seq_challenge1_b: Batıya ilerlemeyi deneyerek başlayın.
      course1_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "Robin'i tıkladığınızda Waddles the Penguin gözüksün!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Waddles' a tıkladığınızda Hayalet Boo' yu görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Boo' ya tıkladığınızda Canavar Jayden'i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title name=\"SPRITE\">4</title>\n<next>\n<block type=\"studio_setSprite\">\n<title name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">5</title>\n</block>\n</next>\n</block></xml>"
        courseA_playlab_events_challenge1_d: "Canavara tıkladığınızda Robot Spiff' i görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Sonunda, Spiff' e tıkladığınızda Büyücü Wendel' i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title name=\"SPRITE\">6</title>\n<next>\n<block type=\"studio_setSprite\">\n<title name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">7</title>\n</block>\n</next>\n</block></xml>"
      course1_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "Kuşun şarkı söylemesini sağlayabilirsin.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Robotun bip sesi çıkarmasını sağlayabilirsiniz. <xml><block type=\"studio_whenSpriteClicked\"> <title name=\"SPRITE\"> 6</title> <next><block type=\"studio_playSound\"> <title name=\"SOUND\"> winpoint</title></block></next></block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Öfkeli canavara homurtu sesi verebilirsiniz.  <xml><block type="studio_whenSpriteClicked"> <title name="SPRITE"> 5</title> <next><block type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE"> 2</title> <next><block type="studio_saySprite"> <title name="SPRITE"> 5</title> <title name="TEXT"> kükreme!</title> <next><block type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE"> 0</title></block></next></block></next></block></next></block></xml>
      course2_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Dört tane sekizgen oluşturmak için iç içe döngü yaparak başla. Sekizgen yapmak için 45 derece dön. Zıpla ve her birinden sonra 90 derce dön.
        courseD_artist_nestedLoops_challenge1_b: İç içe geçmiş döngü içerisinde kod kullanarak bir üçgen çizin. Üçgeniniz için 120 derecelik dönüşler kullanın.
        courseD_artist_nestedLoops_challenge1_c: |-
          Bir içi içe döngü kullanın:
          - 8 defa tekrarla
          - bir sekizgen çiz
          - bir üçgen çiz
          - 50 pixel ileri atla
          - 90 derece sağa dön
      course2_artist_nestedLoops_challenge2_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Düzgün bir sekizgen çizmek için sanatçının (karakterin) 8 kere 45 derecelik açı ile dönmesi gerekir.
        courseD_artist_nestedLoops_challenge2_b: Bir kare çizmek için, sanatçının 4 kez 90 derece dönmesi gerekiyor.
      course2_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: '200 piksel genişliğinde ve 100 piksel yüksekliğinde dikdörtgendir. '
      course2_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: "Komutları tekrar tekrar döngülemek için `tekrar et` bloğuna yerleştirebilirsiniz. Deneyin!\n<xml>\n  \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n                <title name=\"DIR\">ilerle</title>\n                <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">ileri atla</title>\n                    <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n                </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: |-
          Herhangi bir ağaca çarpmadan her bir çiçeğe ve peteğe ulaşan bir yol bulabilir misin? En iyi yol bir spiraldir.
          
          ** Bunu çözerken sola dönmenize hiç  gerek yok. **
        courseD_bee_conditionals_challenge1_b: Bu bulmacada her alanda çiçek, petek olabilir ya da hiçbir şey olmayabilir. Bu demektir ki her karede eğer/değilse (if/else) koşulunu tekrarlayabilirsin.
      course2_bee_conditionals_challenge2_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          'eğer çiçekte' blokları gibi, kodun içindeki 'sürece nektar>0' sadece eğer arı çiçekte ise çalışacaktır. Ana farklılık içindeki kod nektar kalmayıncaya kadar tekrarlayarak çalışacaktır. Bu deseni deneyin: 
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">kalan nektar</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      course2_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_a: Her yığında sadece bir hazine parçası olsaydı, hazırda verilen kod harika çalışırdı!
        courseC_maze_loops_challenge2_b: Döngüler kullanın, böylece `topla 'blokları bitmez!
      course2_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık "toplama" komutunu kullanabilirsiniz.
      course2_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık "toplama" komutunu kullanabilirsiniz.
      course2_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: Döngü kullanmadan denemeyi düşünme bile!
        courseC_harvester_loops_challenge1_b: '`ilerle` ve `mısır al`ı ihtiyacın olduğu kadar tekrar edip, her köşede `sağa dön` yapabilirsin.'
        courseC_harvester_loops_challenge1_c: |-
          İlk dört mısırı toplamanın en iyi yolu, 'tekrarla' bloğunun içinde başka bir 'tekrarla' bloğunu kullanmaktır. Bu deseni bulmacanın geri kalanı için de kullanabilirsin. 
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      course2_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_a: Bunu çözmenin bir yolu zikzak gibi görünüyor. Bir diğer yol sarmal gibi görünüyor. Bunun gibi bir bulmacayı çözmenin birçok farklı yolu var. Israrcı ol!
        courseC_harvester_loops_challenge2_b: İhtiyaç duyduğun kadar 'ilerle' ve 'marul al' komutlarını tekrar edip, sonra her köşede dönebilirsin.
        courseC_harvester_loops_challenge2_c: |
          Sadece 20 blok ile bulmacayı bitirmek için bu zik-zak deseni iki kez tekrarlanabilir. 
          
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          Bu sarmal desen sadece 18 blok ile kodlanabilir!
          
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      course2_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_a: Bu yolu üç farklı parça olarak düşün. Her birinin tekrar edebileceğin bir deseni vardır.
        courseC_maze_loops_challenge1_b: Scrat'i  bir sonraki adıma hazır olması için, her tekrarla bloğunun arasında  'sağa dön' veya 'sola dön' komutuna ihtiyacın var.
        courseC_maze_loops_challenge1_c: |-
          Buraya kadar geldiyseniz, sadece 'sola dönün' sonra birkaç kez ilerlemeniz yeterlidir. Pes etme!
      course2_maze_programming_challenge1_authored_hint: [ ]
      course2_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: "*Eğer beni geri göndermek istersen, doğru yöne döndüğüne daha fazla dikkat et!*"
        courseC_maze_programming_challenge2_b: En kısa çözüm yalnızca 5 bloktan oluşur, fakat 'tekrarla' bloğu kullanılır!
      course2_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Parmağınızla boşlukları saymaya çalışın. Başladığınız yerdeki boşluğu saymayın!
      course2_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: En kısa yol bu sefer işe yaramayabilir.
        courseB_maze_seq_challenge1_b: Batıya ilerlemeyi deneyerek başlayın.
      course3_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'Yarım altıgenin ** 30 kenar uzunluğu ** ve ** 60 derece**sağa dönüşü vardır.  '
        courseE_artist_concept_challenge1_b: '2/3 üçgeninin ** 80 kenar uzunluğunu ** ve ** 120 derece **sağa dönüşü vardır.  '
      course3_artist_functions_challenge1_authored_hint:
        courseE_artist_functions_challenge1_a: Eğer fonksiyonu bir kez daha çalıştırırsanız, son köşede aynı tasarımı oluşturabilirsiniz. Aynı zamanda farklı pozisyonlara da atlayabilir veya istediğiniz her şeyi değiştirebilirsiniz!
      course3_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n<block type=\"jump_to_xy\">\n<title name=\"XPOS\">350</title>\n<title name=\"YPOS\">200</title>\n</block>\n</xml>\n\nBu 'atla' bloğu istediğiniz zaman zombie aktörünü ızgara üzerindeki herhangi bir noktaya taşımanızı sağlar. Onu piksel sayısı kadar sağ taraftan ve piksel sayısı kadar aşağıya taşıyarak yapar. Sürekli olarak üst sol köşeden sayılır, bunun anlamı zombie aktörünün komut çalışmadan *önce* nerede olduğunun bir önemi yoktur!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      course3_bee_debugging_challenge1_authored_hint:
        courseD_bee_debugging_challenge1_a: Neden programın ilk yarısı çalışıyor? Arıların neden geri gitmeye ihtiyaç duyduğunu düşün. Arı her çiçeğe gittiğinde ne kadar nektar toplamalı?
        courseD_bee_debugging_challenge1_b: Dönüş yolunda arının aynı deseni takip etmesini sağlayın. Arının peteğin üzerinde hareket ettiği her defasında ne kadar bal yapmaya ihtiyacı var?
        courseD_bee_debugging_challenge1_c: |-
          Arı alt sıraya kadar yaptıktan sonra, aşağıdaki komutları tekrarlamasını sağla:
          * 2 defa tekrarla:
          * İlerle
          * 3 bal yap
          * Geriye git
      course3_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions_challenge1_b: İşlev (function) düzenleyicisinin içinde kod oluşturmayı unutmayın.
      course3_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions_challenge1_b: İşlev (function) düzenleyicisinin içinde kod oluşturmayı unutmayın.
      course3_bee_functions_challenge3_authored_hint:
        courseF_bee_functions_challenge1_a: Yardımcı olmak için araç kutusundaki işlevleri kullanabilirsiniz. Başka bir işlevin tanımının içindeki bir fonksiyonu çağırabilirsiniz!
      course3_bee_functions_challenge4_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          Eğer sağa bir yol varsa, aşağıdakileri yapmalısınız:
          * Herhangi bir miktarda nektar al veya herhangi bir miktarda bal yap.
          * Yan yola doğru sağa dön.
          * Yan yolun sonuna hareket et.
          * Sağa dön.
          
          Eğer yukarıdaki eylemleri iki kez tekrarlarsanız, ana yola geri dönmeye hazır olacaksınız.
          
          **Çözümün tamamını görmek isterseniz yalnızca başka bir ipucuna tıklayın!**
        courseF_bee_functions_challenge2_b: |-
          **Çözüm:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">ilerle</title>
          <next>
          <block type="maze_if">
          <title name="DIR">sağda yol varsa</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">sola dön</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">Bal mı Çiçek mi Kontrol et</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">Çiçekte</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">Kalan Nektar</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">mevcut bal</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">ilerle ve kontrol et</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">sağa dön</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">ilerle</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">sağa dön</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      course3_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "İlk iki yığının her birinden ikişer adet mücevher toplamaya odaklanarak başlayın .\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">ilerle</title>\n\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Sonra, bu sıradaki kalan mücevherleri toplayın.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png)\nBu blokları programınıza ekleyin.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Son olarak, kalan hazineyi toplayın. Bu blokları programınıza ekleyin.\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Bu bulmaca için çözümün tamamı burada.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course3_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: '''STEP'' butonu bu meydan okuma için çok yardımcı olabilir.'
        courseD_farmer_condLoops_challenge1_b: Eğer bir balkabağında iseniz, normlade sadece balkabağını al diyecektiniz. Balkabağında iken başka neler yapmanız gerekiyor?
      course3_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: Her bir alandaki sebzenin miktarı değişir. Bunlar için `süresince` döngülerini kullanın.
      course3_farmer_until_challenge2_authored_hint: [ ]
      course3_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: Sola veya sağa? Bu size kalmış!
        courseC_maze_debugging_challenge1_b: Scrat'in yolu bir dikdörtgen şeklinde! Her seferinde aynı yöne dönmeli!
        courseC_maze_debugging_challenge1_c: Eğer sıkışırsan, her zaman baştan başlayabilir veya tüm kodları kaldırabilir ve kendi yolunu bulabilirsin!
      course3_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_a: Bunu çözmenin bir yolu, dönüşler arasında ileri adımlar atmaktır.
        courseC_maze_debugging_challenge2_b: Eğer sıkışırsan, her zaman baştan başlayabilir veya tüm kodları kaldırabilir ve kendi yolunu bulabilirsin!
        courseC_maze_debugging_challenge2_c: |-
          'İleri git' ve 4 dönüş kullanarak izleyebileceğiniz iki farklı yol var. 'Tekrarla' bloğunu kullanmanın bir yolunu bulursanız, daha da fazlası olabilir!
          
          ![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      course3_maze_until_challenge1_authored_hint: [ ]
      course3_playLab_challenge1_authored_hint:
        courseE_playLab_challenge1_a: |-
          Burada oyuncu oyunu kazandığında yapabileceğin bazı şeyler var:
          
          * Dinozoru kaybet.
          * Sincapları durdur.
          * Sincapları ve şövalyeyi mutlu et.
          * Yeni bir arka plan ayarla.
          * Yardım ettiği için oyuncuya şövalyeyi teşekkür ettir.
          * Bütün aktörleri kaybet ve "Kazandınız!" mesajı göster.
        courseE_playLab_challenge1_b: |-
          Burada oyuncu oyunu kaybettiğinde yapabileceğin bazı şeyler var:
          
          * Şövalyeyi kaybet.
          * Sincapları üzgün yap.
          * Dinozora bir şeyler söylet.
          * Yeni bir arka plan ayarla.
          * Bütün aktörleri yok et ve "Oyun Bitti" mesajı göster.
      course3_playlab_challenge2_authored_hint:
        courseE_playlab_challenge2_a: |-
          Aktör ruh haline göre ne söyleyeceğini biliyor. Nesnelerle oynayarak cadının söyleyebileceklerini çalışın.
          
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Dikkatini topla ve tekrar sor!</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block></xml>
        courseE_playlab_challenge2_b: "Eğer 'soru sor' fonksiyonunu koşulların listesinin altında tekrar çağırırsanız oyunun her şeyi yeniden başlattığını hissedeceksiniz.\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n               \n<block type=\"procedures_callnoreturn\">\n<mutation name=\"Ask a question\"></mutation>\n        </block></block></xml>"
        courseE_playlab_challenge2_c: "Aktörlere söyleyecek daha çok şey vermek için daha fazla koşullu ifade eklemeniz gerekir.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n              </statement></block></xml>\n              \n'sürekli tekrarla' döngüsünün içinde aktörün hangi ruh halini göstereceğini değiştirmeyi unutmayın! Ruh halini rastgele de değiştirebilirsiniz!"
        courseE_playlab_challenge2_d: |-
          Aktör 1 ile ilgili tüm kodu anladıktan sonra, aynı kodu Aktör 2'yi kullanarak yeniden yazmayı deneyin.
          
          'Başlık ekranını göster' bloğundaki talimatları değiştirmeyi unutmayın, kod blokları böylece daha mantıklı!
        courseE_playlab_challenge2_e: |-
          Her şey tamamlandığında aktöre tıklayabilmeli ve 8 farklı mesaj alabilmelisin. Daha da genişletmek mümkün mü?
          
          Oyunu bitirdiğinde deneyecek bir arkadaşın olsun!
      course4_artist_binary_challenge2_authored_hint:
        courseD_artist_binary_challenge2_a: |-
          Eğer kodların gerçekten karmaşık bir hal almaya başlarsa, senin için en iyi ipucu `⟲ Baştan Başla`komutuna basmak.
          
          Orjinal programda sadece bir kaç satır hatalı. Bir yaklaşım başarısız olursa, geri dön ve yeniden dene. Bir çözüm var!
      course4_artist_concept_challenge2_authored_hint:
        courseE_artist_concept_challenge2_a: Bir fonksiyonu bir kez oluşturduğunda, onu tekrar tekrar kullanabilirsin. İstediğin zaman istediğin yerde!
        courseE_artist_concept_challenge2_b: |-
          Bu komutu kullanarak tuval üzerinde farklı konumlara atlayabilirsin:
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      course4_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n<block type=\"jump_to_xy\">\n<title name=\"XPOS\">350</title>\n<title name=\"YPOS\">200</title>\n</block>\n</xml>\n\nBu 'atla' bloğu istediğiniz zaman zombie aktörünü ızgara üzerindeki herhangi bir noktaya taşımanızı sağlar. Onu piksel sayısı kadar sağ taraftan ve piksel sayısı kadar aşağıya taşıyarak yapar. Sürekli olarak üst sol köşeden sayılır, bunun anlamı zombie aktörünün komut çalışmadan *önce* nerede olduğunun bir önemi yoktur!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      course4_artist_fwp_challenge1_authored_hint: [ ]
      course4_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_a: Her bir dikey çizgi '10' uzunluğunda. Her bir yatay çizgi 'uzunluk' (length) uzunluğunda olmalı.
        courseF_artist_variables_challenge1_b: Döngü içinde 'uzunluk' değerini iki kez 10'a yükseltmek isteyeceksiniz.
        courseF_artist_variables_challenge1_c: Deseni tamamlamak için iki kez sola, sonra  iki kez sağa ve dört kez ileri hareket etmeniz gerekecek.
        courseF_artist_variables_challenge1_d: |-
          Bu bulmaca sadece bir döngü kullanıyor. Herhangi bir değişken olmadan, benzer bir yol sadece bir zikzak olabilir.
          Sorun yaşıyorsanız, bu resmi oluşturarak başlayın, ardından yatay çizgilerin uzunluğunu değiştirmek için değişkenleri nerede kullanabileceğinizi görmeye çalışın.
        courseF_artist_variables_challenge1_e: |-
          İşte çözüm.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: 'Değişkenler kullanışlıdır, çünkü döngü içinde bu değişkene ekleme yapabilirsiniz. '
        courseF_artist_variables_challenge2_b: Bu bulmaca çokgen oluşturan bir döngü içermekte. Bir diğer döngü çokgenleri kenar katı kadar tekrarlamakta, diğer döngü 'kenarlara' 5 ekledikten sonra tekrarlamakta.
        courseF_artist_variables_challenge2_c: '''Kenarlar'' için ve ''uzunluk'' için birer değişken kullanmak kodu daha düzgün yapar, böylece her sayı kümesi için yeni bir kopya oluşturmaya gerek kalmadan aynı kodu bir çok defa tekrarlayabilirsin. '
        courseF_artist_variables_challenge2_d: |-
          ** Çözüm: **![Solution] (https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      course4_bee_for_challenge1_authored_hint: [ ]
      course4_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          Program şöyle görünmelidir:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: |-
          Her alandaki hasat için mısır miktarına bak. Tezgah desenini görüyor musun? ' Şununla Say Döngüsü' içindeki maksimum değeri ayarlamak için 'uzunluk' parametresi kullanılmalıdır.
          
          Hasat sonrası çiftçiyi ana yola geri çekmeyi unutmayın!
        courseF_bee_fwp_challenge1_c: |-
          Bir işlevin içine 'şununla say döngüsü' yerleştirin ve '1' den başlayıp 'uzunluk' kadar 1er artacak şekilde ayarlayın.
          Bu döngünün içinde, ileri gitmeli ve tüm mısırları almalısın.
          
          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: |-
          Şununla say döngüsü içerisinde ilerleyip **sayaç defa** 'nektar al'. 
          Şununla say döngüsünden sonra **uzunluk defa** 'geri git'.
          
          Bu ipucunu anlamak için bir çok defa okumaya ihtiyacın olabilir. **Koyu** kısımlar ihtiyacınız olan iki 'tekrarla' döngüsünün nasıl kullanılacağı hakkında ipucudur.
        courseF_bee_fwp_challenge1_e: |
          ** İşte çözüm: **
          
          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      course4_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Bu işlevin nasıl çalışması gerektiğini anladığınızdan emin olarak başlayın. Çiftçi her bir yoldan aşağı indiğinde, yalnızca mısır toplamaya çalışacaktır. Bunun yerine, 3 sebzenin her birini ona kontrol ettirip sadece bulduğu birini almasını nasıl sağlarsın?
          
          Mısır, balkabakları ve marulları kontrol etmek için fonksiyona koşullu ifadeler ekleyin.
        courseF_bee_fwp_challenge2_b: "\"İleriye git\" bloklarının bittiğini mi düşünüyorsun?\nProgramınızda bir * ikinci * `for döngüsü 'kullanmayı deneyin.\n\n**Not:** Kodunuzda`Sayaç` ı `sayaç2` ile  karıştırmamaya özen gösterin."
        courseF_bee_fwp_challenge2_c: |-
          ** İşte işlevi şöyle görünmelidir: **
          
          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifAtCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifAtCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifAtCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **İşte ana programınız böyle görünmeli:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      course4_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: Tek bir komutu ya da daha uzun bir kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi 'tekrarlayabilirsin'!
        courseD_bee_nested_loops_challenge2_b: 4 taşı elde etmek için öncelikle merkezden uzaklaştırmak amacıyla bir döngü kullan. Sağa veya sola dön, sonra ilk hazine yığınından diğerine geçmek için iç içe döngü kullan. İç içe döngüyü yeterince tekrarlarsan, toplayıcı mağara *boyunca* hareket edecektir!
        courseD_bee_nested_loops_challenge2_c: Tüm hazineye ulaşmanı sağlayacak en kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
        courseD_bee_nested_loops_challenge2_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_harvester_nested_loops_challenge1_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: Muhtemelen bir zig-zag deseni oluşturmak için zaten bir döngü kullandınız. Eğer o algoritmayı hatırlıyorsanız, buraya onun için birkaç ekleme yapabilirsiniz.
      course4_playlab_variables_challenge1_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          Aktörleri konuşturmak için araç kutusundan ek bloklara ihtiyacınız olacak.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      course4_playlab_variables_challenge3_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          Aktör ne söyleyeceğini biliyor çünkü 'fortune' değişkenin güncel değerini kontrol ediyor.
          
          <xml><block type="variables_set" inline="false">
          <title name="VAR">gelecek</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">İyi düşün ve tekrar sor!!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          Eğer 'soru sor' fonksiyonunu aktör geleceği söyledikten sonra tekrar çağırırsanız oyunun her şeyi yeniden başlattığını hissedeceksiniz.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">gelecek</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "Aktörlere söyleyecek daha çok şey vermek için daha fazla koşullu ifade eklemeniz gerekir.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">gelecek</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n              \n'sürekli tekrarla' döngüsünün içinde aktörün hangi ruh halini göstereceğini değiştirmeyi unutmayın! Ruh halini rastgele de değiştirebilirsiniz!"
        courseF_playlab_variables_challenge3_d: |-
          Aktör 1 ile ilgili tüm kodu anladıktan sonra, aynı kodu bu kez Aktör 2 için yeniden yazmayı deneyin.
          
          'Bir soru sor' fonksiyonunun içindeki talimatları değiştirmeyi unutmayın, böylece hala mantıklı olur!
        courseF_playlab_variables_challenge3_e: |-
          Her şey tamamlandığında aktöre tıklayabilmeli ve 8 farklı mesaj alabilmelisin. Daha da genişletmek mümkün mü?
          
          Oyunu bitirdiğinde deneyecek bir arkadaşın olsun!
      courseA_artist_loops10_authored_hint: [ ]
      courseA_artist_loops10_2018_authored_hint: [ ]
      courseA_artist_loops11_authored_hint: [ ]
      courseA_artist_loops11_2018_authored_hint: [ ]
      courseA_artist_loops11_predict2_authored_hint: [ ]
      courseA_artist_loops12_authored_hint: [ ]
      courseA_artist_loops12_2018_authored_hint: [ ]
      courseA_artist_loops2_authored_hint:
        courseA_artist_loops2_a: Can't figure out how to draw a line?  Start attaching blocks to the <xml><block type="when_run"/></xml> block to see what happens.
        courseA_artist_loops2_b: Bu bulmacayı çözmek için <xml><block type="simple_move_right"/></xml> bloğunu kullan. 
      courseA_artist_loops2_2018_authored_hint:
        courseA_artist_loops2_a: Can't figure out how to draw a line?  Start attaching blocks to the <xml><block type="when_run"/></xml> block to see what happens.
        courseA_artist_loops2_b: Bu bulmacayı çözmek için <xml><block type="simple_move_right"/></xml> bloğunu kullan. 
      courseA_artist_loops3_authored_hint:
        courseA_artist_loops3_a: Trace slowly through the program with your finger to see where it goes wrong.
        courseA_artist_loops3_b: |-
          Bu bulmacayı çözmek için böyle bir blok kullanmak isteyeceksiniz.
          
          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops3_2018_authored_hint:
        courseA_artist_loops3_a: Trace slowly through the program with your finger to see where it goes wrong.
        courseA_artist_loops3_b: |-
          Bu bulmacayı çözmek için böyle bir blok kullanmak isteyeceksiniz.
          
          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops4_authored_hint:
        courseA_artist_loops4_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan bloğun üstündeki sayıyı değiştirebilirsin.
        courseA_artist_loops4_b: |-
          Yalnızca bir <xml><block type="simple_move_right"/></xml> bloğu kullanabileceğinden, onu <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block> döngüsünün içine koymayı deneyin.
      courseA_artist_loops4_2018_authored_hint:
        courseA_artist_loops4_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan bloğun üstündeki sayıyı değiştirebilirsin.
        courseA_artist_loops4_b: |-
          Yalnızca bir <xml><block type="simple_move_right"/></xml> bloğu kullanabileceğinden, onu <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block> döngüsünün içine koymayı deneyin.
      courseA_artist_loops5_authored_hint:
        courseA_artist_loops5_a: Tekrarla bloğu hakkında öğrendiklerini kullan!
        courseA_artist_loops5_b: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan bloğun üstündeki sayıyı değiştirebilirsin.
        courseA_artist_loops5_c: "Yalnızca bir Doğu bloğu kullanabildiğinden, onu `tekrar et` döngüsünün içine koymayı deneyin."
      courseA_artist_loops5_2018_authored_hint:
        courseA_artist_loops5_a: Tekrarla bloğu hakkında öğrendiklerini kullan!
        courseA_artist_loops5_b: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan bloğun üstündeki sayıyı değiştirebilirsin.
        courseA_artist_loops5_c: "Yalnızca bir Doğu bloğu kullanabildiğinden, onu `tekrar et` döngüsünün içine koymayı deneyin."
      courseA_artist_loops6_authored_hint:
        courseA_artist_loops6_a: Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.
        courseA_artist_loops6_b: Bu bulmacayı çözmek için iki farklı yönde iki blok gerekecek.
      courseA_artist_loops6_2018_authored_hint:
        courseA_artist_loops6_a: Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.
        courseA_artist_loops6_b: Bu bulmacayı çözmek için iki farklı yönde iki blok gerekecek.
      courseA_artist_loops7_authored_hint:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.
        courseA_artist_loops7_b: Önce bir dalga için gereken kodu yaz, sonra bunu tekrarlayarak diğer ikisini çizebilirsin.
        courseA_artist_loops7_c: |-
          <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>döngüsü içine birden fazla blok yerleştirebileceğinizi unutmayın.
      courseA_artist_loops7_2018_authored_hint:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.
        courseA_artist_loops7_b: Önce bir dalga için gereken kodu yaz, sonra bunu tekrarlayarak diğer ikisini çizebilirsin.
        courseA_artist_loops7_c: |-
          <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>döngüsü içine birden fazla blok yerleştirebileceğinizi unutmayın.
      courseA_artist_loops7_forVideo_authored_hint:
        courseA_artist_loops7_a: Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.
        courseA_artist_loops7_b: Önce bir dalga için gereken kodu yaz, sonra bunu tekrarlayarak diğer ikisini çizebilirsin.
        courseA_artist_loops7_c: |-
          <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>döngüsü içine birden fazla blok yerleştirebileceğinizi unutmayın.
      courseA_artist_loops8_authored_hint:
        courseA_artist_loops8_a: Try running the code to see what has been written for you.
        courseA_artist_loops8_b: How would you loop the code that has been given to you?
        courseA_artist_loops8_c: "What does the code do?  \nWhat is it supposed to do?  \nWhat does that tell you?"
      courseA_artist_loops8_2018_authored_hint:
        courseA_artist_loops8_a: Try running the code to see what has been written for you.
        courseA_artist_loops8_b: How would you loop the code that has been given to you?
        courseA_artist_loops8_c: "What does the code do?  \nWhat is it supposed to do?  \nWhat does that tell you?"
      courseA_artist_loops9_authored_hint:
        courseA_artist_loops9_a: Add another block to the code you are given to draw the rest of the stairs.
        courseA_artist_loops9_b: "Eklediğin bloğu <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml> döngüsü içine yerleştirmelisin."
        courseA_artist_loops9_c: Döngüyü nereye koyacağınızı bulamıyorsanız, kodunuzu adım adım yazmayı deneyin ve oluşan örneğe bakın.
      courseA_artist_loops9_2018_authored_hint:
        courseA_artist_loops9_a: Add another block to the code you are given to draw the rest of the stairs.
        courseA_artist_loops9_b: "Eklediğin bloğu <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml> döngüsü içine yerleştirmelisin."
        courseA_artist_loops9_c: Döngüyü nereye koyacağınızı bulamıyorsanız, kodunuzu adım adım yazmayı deneyin ve oluşan örneğe bakın.
      courseA_artist_loops_challenge1_authored_hint: [ ]
      courseA_artist_loops_challenge1_2018_authored_hint: [ ]
      courseA_artist_loops_challenge2_authored_hint:
        courseA_artist_loops_challenge2_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml> sanatçının bir eğimde hareket etmesine izin verir!'
        courseA_artist_loops_challenge2_b: Bir kuş evini bitirdikten sonra diğerine 'Atla'!
        courseA_artist_loops_challenge2_c: Bu bulmaca için döngü içinde ÇOK FAZLA blok kullanman gerekecek.
      courseA_artist_loops_challenge2a_authored_hint:
        courseA_artist_loops_challenge2_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml> sanatçının bir eğimde hareket etmesine izin verir!'
        courseA_artist_loops_challenge2_b: Bir çadırı bitirdiğinde, sonrakine geçmek için iki kere 'zıpla'!
        courseA_artist_loops_challenge2_c: Bulmacayı bitirmek için bütün bloklarınızın bir döngü içinde olması gerekir.
      courseA_artist_loops_challenge2a_2018_authored_hint:
        courseA_artist_loops_challenge2_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml> sanatçının bir eğimde hareket etmesine izin verir!'
        courseA_artist_loops_challenge2_b: Bir çadırı bitirdiğinde, sonrakine geçmek için iki kere 'zıpla'!
        courseA_artist_loops_challenge2_c: Bulmacayı bitirmek için bütün bloklarınızın bir döngü içinde olması gerekir.
      courseA_artist_loops_challenge3_authored_hint:
        harvey_tictactoe: Atla bloğu ile başka alanlara gidebilirsiniz.
      courseA_bee_seq1_authored_hint:
        courseA_bee_seq1_a: |-
          Use this block to get nectar once the bee finds a flower.
          
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq10_authored_hint: [ ]
      courseA_bee_seq11_authored_hint: [ ]
      courseA_bee_seq12_authored_hint:
        courseA_bee_seq1_a: |-
          Use this block to get nectar once the bee finds a flower.
          
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq13_authored_hint: [ ]
      courseA_bee_seq14_authored_hint: [ ]
      courseA_bee_seq2_authored_hint: [ ]
      courseA_bee_seq3_authored_hint: [ ]
      courseA_bee_seq4_authored_hint: [ ]
      courseA_bee_seq5_authored_hint: [ ]
      courseA_bee_seq6_authored_hint: [ ]
      courseA_bee_seq7_authored_hint: [ ]
      courseA_bee_seq8_authored_hint: [ ]
      courseA_bee_seq9_authored_hint: [ ]
      courseA_collector_loops1_authored_hint:
        courseA_collector_loops1_a: |-
          Hazine olan bir kareye geldiğinde, onu almak için <xml>  <block type="collector_collect"/></xml> bloğunu kullan.
        courseA_collector_loops1_b: Hazineye gitmek için Doğuya doğru iki kere ilerlemek basit bir çözüm olur.
      courseA_collector_loops10_authored_hint: [ ]
      courseA_collector_loops10_2018_authored_hint: [ ]
      courseA_collector_loops11_authored_hint: [ ]
      courseA_collector_loops11_2018_authored_hint: [ ]
      courseA_collector_loops11_predict2_authored_hint: [ ]
      courseA_collector_loops1_2018_authored_hint:
        courseA_collector_loops1_a: |-
          Hazine olan bir kareye geldiğinde, onu almak için <xml>  <block type="collector_collect"/></xml> bloğunu kullan.
        courseA_collector_loops1_b: Hazineye gitmek için Doğuya doğru iki kere ilerlemek basit bir çözüm olur.
      courseA_collector_loops2_authored_hint:
        courseA_collector_loops2_a: Herhangi bir hazine toplamadan önce ilerlemeniz gerekir.
        courseA_collector_loops2_b: |-
          Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi Al' bloğunu kullanmayı unutmayın.
      courseA_collector_loops2_2018_authored_hint:
        courseA_collector_loops2_a: Herhangi bir hazine toplamadan önce ilerlemeniz gerekir.
        courseA_collector_loops2_b: |-
          Hazine olan bir kareye geldiğinde, onu almak için <xml>  <block type="collector_collect"/></xml> bloğunu kullan.
      courseA_collector_loops3_authored_hint:
        courseA_collector_loops3_a: "<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> döngüsünü kullanmayı dene!"
        courseA_collector_loops3_b: ' <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> gibi bir döngüye birden fazla blok yerleştirebileceğinizi unutmayın.'
      courseA_collector_loops3_2018_authored_hint:
        courseA_collector_loops3_a: "<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> döngüsünü kullanmayı dene!"
        courseA_collector_loops3_b: ' <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> gibi bir döngüye birden fazla blok yerleştirebileceğinizi unutmayın.'
      courseA_collector_loops3_predict1_authored_hint: [ ]
      courseA_collector_loops4_authored_hint:
        courseA_collector_loops4_a: To change how far Laurel goes, change the number of times that the loop runs.
        courseA_collector_loops4_b: Don't forget that Laurel needs to walk down and collect the treasure after she finishes the <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loop!
      courseA_collector_loops4_2018_authored_hint:
        courseA_collector_loops4_a: To change how far Laurel goes, change the number of times that the loop runs.
        courseA_collector_loops4_b: Don't forget that Laurel needs to walk down and collect the treasure after she finishes the <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loop!
      courseA_collector_loops5_authored_hint:
        courseA_collector_loops5_a: Cevabı hemen bulamıyorsanız, hangi oka ihtiyacınız olduğunu anlamak için bir kağıt parçası kullanın ve bir desen arayın.
        courseA_collector_loops5_b: Yana ve aşağıya doğru hareket ederek olayı iki aşamada çözmeyi deneyin.
        courseA_collector_loops5_c: Laurel 'in batıya hareket ederek hazineyi toplaması için <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> döngüsü ile başlayabilirsin.
      courseA_collector_loops5_2018_authored_hint:
        courseA_collector_loops5_a: Cevabı hemen bulamıyorsanız, hangi oka ihtiyacınız olduğunu anlamak için bir kağıt parçası kullanın ve bir desen arayın.
        courseA_collector_loops5_b: Yana ve aşağıya doğru hareket ederek olayı iki aşamada çözmeyi deneyin.
        courseA_collector_loops5_c: Laurel 'in batıya hareket ederek hazineyi toplaması için <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> döngüsü ile başlayabilirsin.
      courseA_collector_loops6_authored_hint:
        courseA_collector_loops6_a: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu görmek için kodu bir kaç kere çalıştırmayı deneyin.
        courseA_collector_loops6_b: En kısa çözüm için peş peşe iki <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> döngüsü içerir.
      courseA_collector_loops6_2018_authored_hint:
        courseA_collector_loops6_a: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu görmek için kodu bir kaç kere çalıştırmayı deneyin.
        courseA_collector_loops6_b: En kısa çözüm için peş peşe iki <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> döngüsü içerir.
      courseA_collector_loops7_authored_hint:
        courseA_collector_loops7_a: Sonrasında ne olacağını anlayamıyorsanız, Laurel'in nereye gideceğini görmek için kodu çalıştırmayı deneyin.
      courseA_collector_loops7_2018_authored_hint:
        courseA_collector_loops7_a: Sonrasında ne olacağını anlayamıyorsanız, Laurel'in nereye gideceğini görmek için kodu çalıştırmayı deneyin.
      courseA_collector_loops8_authored_hint:
        courseA_collector_loops8_a: Bu bulmacayı anlamakta zorlanıyorsanız, hareketleri bir kağıda yazmayı ve bir desen bulmayı deneyin.
        courseA_collector_loops8_b: Bu bulmacayı 3 ayrı bölüme ayırıp, her biri için döngüler yazmayı deneyin.
        courseA_collector_loops8_c: Her seferinde kodun bir kısmını yazabileceğinizi ve oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseA_collector_loops8_2018_authored_hint:
        courseA_collector_loops8_a: Bu bulmacayı anlamakta zorlanıyorsanız, hareketleri bir kağıda yazmayı ve bir desen bulmayı deneyin.
        courseA_collector_loops8_b: Bu bulmacayı 3 ayrı bölüme ayırıp, her biri için döngüler yazmayı deneyin.
        courseA_collector_loops8_c: Her seferinde kodun bir kısmını yazabileceğinizi ve oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseA_collector_loops9_authored_hint:
        courseA_collector_loops9_a: 'If you can''t spot the best places to use loops, try coding it out step-by-step and look for a pattern. '
        courseA_collector_loops9_b: Kodunu daha kısaltmak için senin 2 <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> döngünü başka bir döngünün içine yerleştirmeyi dene!
      courseA_collector_loops9_2018_authored_hint:
        courseA_collector_loops9_a: 'If you can''t spot the best places to use loops, try coding it out step-by-step and look for a pattern. '
        courseA_collector_loops9_b: Kodunu daha kısaltmak için senin 2 <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> döngünü başka bir döngünün içine yerleştirmeyi dene!
      courseA_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Eğer işler ters giderse her döngüdeki sayıları değiştirmeyi deneyin.
        courseA_collector_loops_challenge1_b: Eğer bir şeyi sadece bir kez yapıyorsanız, döngü kullanmanıza gerek yoktur.
        courseA_collector_loops_challenge1_c: Mağaranın sağ tarafında 6 değerli taş vardır, ama güneye ilerlerken 5 kez hazineyi alman gerekecek. Neden biliyor musun?
        courseA_collector_loops_challenge1_d: |-
          Başlangıçtaki program, son 2 mücevheri toplamaz. Son bölüme bu kodu eklemeyi dene:
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2018_authored_hint:
        courseA_collector_loops_challenge1_a: Eğer işler ters giderse her döngüdeki sayıları değiştirmeyi deneyin.
        courseA_collector_loops_challenge1_b: Eğer bir şeyi sadece bir kez yapıyorsanız, döngü kullanmanıza gerek yoktur.
        courseA_collector_loops_challenge1_c: Mağaranın sağ tarafında 6 değerli taş vardır, ama güneye ilerlerken 5 kez hazineyi alman gerekecek. Neden biliyor musun?
        courseA_collector_loops_challenge1_d: |-
          Başlangıçtaki program, son 2 mücevheri toplamaz. Son bölüme bu kodu eklemeyi dene:
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: Bunu çözmek için yalnızca bir tane blok kullanmanız gerekir.
        courseA_collector_loops_challenge2_a: "Güney'e ilerlemeden önce patikada bir kez daha geriye gidebilirsin.\n "
      courseA_collector_loops_challenge2kp_authored_hint:
        courseA_collector_loops_challenge2kp_b: Sonuca ulaşmak için bu yolu deneyin.
        courseA_collector_loops_challenge2kp_a: Bu bulmacayı çözmek için döngüleri kullanabilir misiniz?
      courseA_collector_loops_challenge2kp_2018_authored_hint:
        courseA_collector_loops_challenge2kp_b: Sonuca ulaşmak için bu yolu deneyin.
        courseA_collector_loops_challenge2kp_a: Bu bulmacayı çözmek için döngüleri kullanabilir misiniz?
      courseA_collector_preLoops1_authored_hint: [ ]
      courseA_collector_preLoops2_authored_hint: [ ]
      courseA_collector_preLoops3_authored_hint: [ ]
      courseA_collector_preLoops4_authored_hint:
        courseA_collector_preLoops4_a: "Hazineyi almak için ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png) bloklarını ve ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) bloğunu programın en altına yapıştırın ve \"Çalıştır\"a tıklayın!"
      courseA_collector_preLoops5_authored_hint:
        courseA_collector_preLoops5_a: Bir elmas bile alabilmek için iki farklı yönde gitmeniz gerekiyor!
      courseA_collector_preLoops6_authored_hint:
        courseA_collector_preLoops6_a: Bu bulmacayı çözmek için ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) karelerini kullanmanız gerekir.
      courseA_collector_preLoops7_authored_hint:
        courseA_collector_loops2_b: |-
          Hazine olan bir kareye geldiğinde, onu almak için <xml>  <block type="collector_collect"/></xml> bloğunu kullan.
      courseA_forVideoTest_artist_authored_hint: [ ]
      courseA_harvester_forVideo_authored_hint:
        courseA_harvester_loops3_a: |-
          Use a `repeat` block like this to help you!
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">3</title>
          </block></xml>
      courseA_harvester_loops1_authored_hint:
        courseA_harvester_loops1_a: |-
          Once you move to some corn, use this block to pick it!
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops10_authored_hint: [ ]
      courseA_harvester_loops11_authored_hint: [ ]
      courseA_harvester_loops2_authored_hint:
        courseA_harvester_loops2_a: 'Your code will have **four** `move West` blocks and **four** `pick corn` blocks. '
      courseA_harvester_loops3_authored_hint:
        courseA_harvester_loops3_a: |-
          Use a `repeat` block like this to help you!
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">4</title>
          </block></xml>
        courseA_harvester_loops3_b: Tekrar etmek için, bir 'tekrar' döngüsü sürükle, sonra içine istediğin bloğu koy.
      courseA_harvester_loops4_authored_hint:
        courseA_harvester_loops4_a: Don't be afraid to press `Run` to see what happens!
        courseA_harvester_loops4_b: How many pieces of corn are there? How many times does your code repeat?
      courseA_harvester_loops5_authored_hint:
        courseA_harvester_loops5_a: Takıldığınızda, bulmacayı köşeden önce ve köşeden sonra olarak iki ayrı parça olarak çözmeyi deneyin.
        courseA_harvester_loops5_b: Your final code will have **one** `repeat` loop, **one** `move South` block, and **one** `move East` block.
        courseA_harvester_loops5_c: Use this path to pick all the corn!
      courseA_harvester_loops5a_authored_hint:
        courseA_harvester_loops5a_a: Birbiri ardına, birer `tekrarla` döngüsüne ihtiyacınız olacak.
        courseA_harvester_loops5a_b: One loop will repeat `move South`, and the other will repeat `move East`.
        courseA_harvester_loops5a_c: Use this path to move one way, and then the other.
      courseA_harvester_loops5b_authored_hint:
        courseA_harvester_loops5b_a: Press `Run` and see what happens!
        courseA_harvester_loops5b_b: Are your loops repeating the right number of times?
        courseA_harvester_loops5b_c: Move one way, then the other with this path.
      courseA_harvester_loops6_authored_hint:
        courseA_harvester_loops6_a: Zorlandığınız durumlarda, adımları kağıt üzerinde yazmayı deneyin ve tekrar eden adımları bulun.
        courseA_harvester_loops6_b: This is the path you should take to pick all the corn.
      courseA_harvester_loops7_authored_hint:
        courseA_harvester_loops7_a: You will need two `repeat` loops after each other!
        courseA_harvester_loops7_b: Use two loops to follow this path.
      courseA_harvester_loops8_authored_hint: [ ]
      courseA_harvester_loops9_authored_hint:
        courseA_harvester_loops9_a: Break this puzzle up into three different parts. One part to the first corner, one part to the second corner, and one part to the end.
        courseA_harvester_loops9_b: Don't be afraid to run your code after every part to see what happens!
        courseA_harvester_loops9_c: Follow this path to pick all the corn.
      courseA_harvester_seq1_authored_hint:
        courseA_harvester_seq1_a: |-
          Use this block to pick the corn when the harvester finds it!
          
          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          The harvester will need to move East three times to get to the corn. Use this block:
          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10_authored_hint:
        courseA_harvester_seq10_a: Are you stuck? Try writing down the steps on a piece of paper first.
        courseA_harvester_seq10_b: You need to `Move East`, then `Move North`. Do this two times. Don't forget to get all the corn too!
        courseA_harvester_seq10_c: Try using this path to pick all the corn.
      courseA_harvester_seq11_authored_hint: [ ]
      courseA_harvester_seq12_authored_hint: [ ]
      courseA_harvester_seq13_authored_hint:
        courseA_bee_seq1_a: |-
          Use this block to pick corn once the harvester gets to it.
          
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_harvester_seq2_authored_hint:
        courseA_harvester_seq2_a: Don't forget to use <xml><block type="harvester_corn"/></xml> to pick the corn!
        courseA_harvester_seq2_b: Try writing down the steps on paper to find a solution!
      courseA_harvester_seq3_authored_hint:
        courseA_harvester_seq3_a: |-
          Did you remember to use this block?
          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Say the steps out loud and see if it helps you figure out the answer.
      courseA_harvester_seq4_authored_hint:
        courseA_harvester_seq4_a: How many spaces are between the Harvester and the corn? How many blocks are already in your workspace?
        courseA_harvester_seq4_b: |-
          You will need five `Move East` blocks and one `Pick Corn` block:
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5_authored_hint:
        courseA_harvester_seq5_a: Which block moves the harvester the wrong way?
        courseA_harvester_seq5_b: You need to remove one block.
        courseA_harvester_seq5_c: |-
          Throw this block in the trash!
          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6_authored_hint:
        courseA_harvester_seq6_a: If you're stuck, try saying the steps out loud. It could help you figure out the right path.
      courseA_harvester_seq7_authored_hint:
        courseA_harvester_seq7_a: Try solving the puzzle in 2 parts, one part before the corner and one part after the corner.
        courseA_harvester_seq7_b: Having trouble? This is the path the harvester should take.
      courseA_harvester_seq8_authored_hint: [ ]
      courseA_harvester_seq9_authored_hint:
        courseA_harvester_seq9_a: Run the code a few times to see what happens. Where does the harvester stop?
        courseA_harvester_seq9_b: Don't forget to pick all the corn! You will need **3** pick corn blocks.
        courseA_harvester_seq9_c: You should take this path to pick all the corn.
      courseA_maze_ramp2_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2a_2018_authored_hint:
        '1': Snap both `East` blocks to the bottom of the `when run` block.
      courseA_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
      courseA_maze_ramp3a_2018_authored_hint:
        '1': |
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
      courseA_maze_ramp4a_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseA_maze_ramp5a_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_seq1_authored_hint:
        courseA_maze_seq1_a: |-
          If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          The bird will need to move West 3 times to get to the pig. Use this block:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10_authored_hint:
        courseA_maze_seq10_a: If you're having trouble, try writing down the steps on a piece of paper first.
        courseA_maze_seq10_b: You will need to go 3 directions to solve this puzzle.
      courseA_maze_seq10_2018_authored_hint:
        courseA_maze_seq10_a: If you're having trouble, try writing down the steps on a piece of paper first.
        courseA_maze_seq10_b: You will need to go 3 different directions to solve this puzzle.
      courseA_maze_seq11_authored_hint: [ ]
      courseA_maze_seq11_2018_authored_hint: [ ]
      courseA_maze_seq12_authored_hint: [ ]
      courseA_maze_seq12_2018_authored_hint: [ ]
      courseA_maze_seq12_predict2_authored_hint: [ ]
      courseA_maze_seq13_authored_hint:
        courseA_maze_seq13_a: If the path you need is unclear, use your finger to trace your way from the bird to the pig.
        courseA_maze_seq13_b: Bir hata yapmaktan korkmayın! Bloklar ekleyin ve ne olacağını görmek için kodu çalıştırmayı deneyin.
        courseA_maze_seq13_c: |2
           <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml> blokları domuza yaklaşmanıza yardımcı olur.
      courseA_maze_seq13_2018_authored_hint:
        courseA_maze_seq13_a: If the path you need is unclear, use your finger to trace your way from the bird to the pig.
        courseA_maze_seq13_b: Bir hata yapmaktan korkmayın! Bloklar ekleyin ve ne olacağını görmek için kodu çalıştırmayı deneyin.
        courseA_maze_seq13_c: |2
           <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml> blokları domuza yaklaşmanıza yardımcı olur.
      courseA_maze_seq1_2018_authored_hint:
        courseA_maze_seq1_a: |-
          If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          The bird will need to move West 3 times to get to the pig. Use this block:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2_authored_hint:
        courseA_maze_seq2_a: This program is missing 1 block. Can you figure out which one?
        courseA_maze_seq2_b: Kuşun nereye gittiğini görmek için önce kodu çalıştırmayı deneyin. Oradan nereye gitmen gerekiyor?
      courseA_maze_seq2_2018_authored_hint:
        courseA_maze_seq2_a: This program is missing 1 block. Can you figure out which one?
        courseA_maze_seq2_b: Kuşun nereye gittiğini görmek için önce kodu çalıştırmayı deneyin. Oradan nereye gitmen gerekiyor?
      courseA_maze_seq2_predict1_authored_hint: [ ]
      courseA_maze_seq3_authored_hint:
        courseA_maze_seq3_a: 1 of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?
        courseA_maze_seq3_b: Programın yanlış gittiği yeri bulmak için adım düğmesini kullan. Hata ilk adımda mı? İkinci adımda mı?
        courseA_maze_seq3_c: <xml><block type="maze_moveNorth"/></xml> bloğu, kuşu doğru yönde hareket ettirmiyor gibi görünüyor. Bunu farklı bir blokla değiştirebilir misin?
      courseA_maze_seq3_2018_authored_hint:
        courseA_maze_seq3_a: 1 of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?
        courseA_maze_seq3_b: Programın yanlış gittiği yeri bulmak için adım düğmesini kullan. Hata ilk adımda mı? İkinci adımda mı?
        courseA_maze_seq3_c: <xml><block type="maze_moveNorth"/></xml> bloğu, kuşu doğru yönde hareket ettirmiyor gibi görünüyor. Bunu farklı bir blokla değiştirebilir misin?
      courseA_maze_seq4_authored_hint:
        courseA_maze_seq4_a: If you are having trouble, try to figure out what the correct path is and then remove the block that doesn't fit.
        courseA_maze_seq4_b: Kodu olduğu gibi çalıştırın. Bir şeyler yanlış mı gidiyor? Hangi bloğu kaldırılabilirsin? Bunu nasıl düzeltirsin?
      courseA_maze_seq4_2018_authored_hint:
        courseA_maze_seq4_a: If you are having trouble, try to figure out what the correct path is and then remove the block that doesn't fit.
        courseA_maze_seq4_b: Kodu olduğu gibi çalıştırın. Bir şeyler yanlış mı gidiyor? Hangi bloğu kaldırılabilirsin? Bunu nasıl düzeltirsin?
      courseA_maze_seq4a_authored_hint:
        courseA_maze_seq4_a: Eğer sorun yaşıyorsanız, parmağını harita üzerinde doğru yolu bulacak şekilde kullanmayı deneyin. Parmağın ne yöne hareket ediyor?
      courseA_maze_seq5_authored_hint:
        courseA_maze_seq5_a: Try writing down the steps on paper to find a solution!
        courseA_maze_seq5_b: İki farklı yönde işaret eden iki farklı bloğa ihtiyacınız olacak.
      courseA_maze_seq5_2018_authored_hint:
        '1': Try writing down the steps on paper to find a solution!
        '2': |-
          You will need to use this block:
          
          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5a_2018_authored_hint:
        '1': Say the steps out loud and see if it helps you figure out the answer.
      courseA_maze_seq6_authored_hint:
        courseA_maze_seq6_a: Your final code should have 3 movement blocks.
        courseA_maze_seq6_b: Takıldığınızda, bulmacayı köşeden önce ve köşeden sonra olarak iki ayrı parça olarak çözmeyi deneyin.
      courseA_maze_seq6_2018_authored_hint:
        courseA_maze_seq6_a: Your final code should have 3 movement blocks.
        courseA_maze_seq6_b: Takıldığınızda, bulmacayı köşeden önce ve köşeden sonra olarak iki ayrı parça olarak çözmeyi deneyin.
      courseA_maze_seq7_authored_hint:
        courseA_maze_seq7_a: There is 1 block that you need to add to move the bird to the pig.
        courseA_maze_seq7_b: If you can't figure out what to do, try drawing the puzzle on paper and use your finger to figure out which way to move.
      courseA_maze_seq7_2018_authored_hint:
        courseA_maze_seq7_a: There is 1 block that you need to add to move the bird to the pig.
        courseA_maze_seq7_b: If you can't figure out what to do, try drawing the puzzle on paper and use your finger to figure out which way to move.
      courseA_maze_seq8_authored_hint:
        courseA_maze_seq8_a: If you're stuck, try drawing the image on paper to see how the bird should move.
      courseA_maze_seq8_2018_authored_hint:
        courseA_maze_seq8_a: If you're stuck, try drawing the image on paper to see how the bird should move.
      courseA_maze_seq9_authored_hint:
        courseA_maze_seq9_a: Stuck? Try tracing the bird's path with your finger.
        courseA_maze_seq9_b: Ne yapacağınızdan emin değilseniz, 'baştan başla' düğmesini tıklayıp kodu tekrar çalıştırın ve nerede hata olduğuna bakın. 
        courseA_maze_seq9_c: Bu bulmacayı çözmek için üç farklı yönde hareket etmeniz gerekecek.
      courseA_maze_seq9_2018_authored_hint:
        courseA_maze_seq9_a: Stuck? Try tracing the bird's path with your finger.
        courseA_maze_seq9_b: Ne yapacağınızdan emin değilseniz, 'baştan başla' düğmesini tıklayıp kodu tekrar çalıştırın ve nerede hata olduğuna bakın. 
        courseA_maze_seq9_c: Bu bulmacayı çözmek için üç farklı yönde hareket etmeniz gerekecek.
      courseA_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Bu bulmacanın iki çözümü var.
      courseA_maze_seq_challenge1_2018_authored_hint:
        courseA_maze_seq_challenge1_a: Bu bulmacanın iki çözümü var.
      courseA_maze_seq_challenge2_authored_hint:
        courseA_maze_seq_challenge2_a: Parmağınızla boşlukları saymaya çalışın. Başladığınız yerdeki boşluğu saymayın!
      courseA_maze_seq_challenge2_2018_authored_hint:
        courseA_maze_seq_challenge2_a: Parmağınızla boşlukları saymaya çalışın. Başladığınız yerdeki boşluğu saymayın!
      courseA_playLab_events2_authored_hint:
        courseA_playLab_events2_a: Look for a block that that makes the dog say something.
        courseA_playLab_events2_b: |-
          Bu bulmacayı tamamlamanız için ihtiyaç duyduğunuz kod:
          
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Selam.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018_authored_hint:
        courseA_playLab_events2_a: Look for a block that that makes the dog say something.
        courseA_playLab_events2_b: |-
          Bu bulmacayı tamamlamanız için ihtiyaç duyduğunuz kod:
          
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Selam.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3_authored_hint:
        courseA_playLab_events3_a: |-
          Drag this block  <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Programınızı yazdıktan sonra Jorge'yi bayrağa götürmek için sol ok tuşunu kullanmayı unutmayın. Bayrak yeşile döndüğünde, oradasın!
      courseA_playLab_events3_2018_authored_hint:
        courseA_playLab_events3_a: |-
          Drag this block  <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Programınızı yazdıktan sonra Jorge'yi bayrağa götürmek için sol ok tuşunu kullanmayı unutmayın. Bayrak yeşile döndüğünde, oradasın!
      courseA_playLab_events4_authored_hint:
        courseA_playLab_events4_a: |-
          Here is the event block that you will need to get Jorge to move right:
          
          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          This is the code you will need to complete this puzzle:
          
          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2018_authored_hint:
        courseA_playLab_events4_a: |-
          Here is the event block that you will need to get Jorge to move right:
          
          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          This is the code you will need to complete this puzzle:
          
          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events5_authored_hint:
        courseA_playLab_events5_a: "Here are the event blocks that you will need to use to move Jorge up and down:\n\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n  </block></xml>\nand \n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          Blok içinde resmi tıklatıp yeni bir ok tuşu seçebileceğinizi biliyor muydun?  ! [] (https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018_authored_hint:
        courseA_playLab_events5_a: "Here are the event blocks that you will need to use to move Jorge up and down:\n\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n  </block></xml>\nand \n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          Blok içinde resmi tıklatıp yeni bir ok tuşu seçebileceğinizi biliyor muydun?  ! [] (https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6_authored_hint:
        courseA_playLab_events6_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:
          
          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Here is the block you would use to change the background:
          
          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Here is the block you would use to play a random sound:
          
          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events6_2018_authored_hint:
        courseA_playLab_events6_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:
          
          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Here is the block you would use to change the background:
          
          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Here is the block you would use to play a random sound:
          
          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events7_authored_hint:
        courseA_playLab_events7_a: |-
          Aktörler çarpıştığında ne olacağını kontrol etmek için bu bloğu kullanın.
          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
          
      courseA_playLab_events7_2018_authored_hint:
        courseA_playLab_events7_a: |-
          Aktörler çarpıştığında ne olacağını kontrol etmek için bu bloğu kullanın.
          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
          
      courseA_playlab_challengeTemplate_authored_hint: [ ]
      courseA_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "Robin'i tıkladığınızda Waddles the Penguin gözüksün!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Waddles' a tıkladığınızda Hayalet Boo' yu görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Boo' ya tıkladığınızda Canavar Jayden'i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title name=\"SPRITE\">4</title>\n<next>\n<block type=\"studio_setSprite\">\n<title name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">5</title>\n</block>\n</next>\n</block></xml>"
        courseA_playlab_events_challenge1_d: "Canavara tıkladığınızda Robot Spiff' i görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Sonunda, Spiff' e tıkladığınızda Büyücü Wendel' i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title name=\"SPRITE\">6</title>\n<next>\n<block type=\"studio_setSprite\">\n<title name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">7</title>\n</block>\n</next>\n</block></xml>"
      courseA_playlab_events_challenge1_2018_authored_hint:
        courseA_playlab_events_challenge1_a: "Robin'i tıkladığınızda Waddles the Penguin gözüksün!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Waddles' a tıkladığınızda Hayalet Boo' yu görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Boo' ya tıkladığınızda Canavar Jayden'i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title name=\"SPRITE\">4</title>\n<next>\n<block type=\"studio_setSprite\">\n<title name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">5</title>\n</block>\n</next>\n</block></xml>"
        courseA_playlab_events_challenge1_d: "Canavara tıkladığınızda Robot Spiff' i görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Sonunda, Spiff' e tıkladığınızda Büyücü Wendel' i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title name=\"SPRITE\">6</title>\n<next>\n<block type=\"studio_setSprite\">\n<title name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">7</title>\n</block>\n</next>\n</block></xml>"
      courseA_playlab_events_challenge1a_authored_hint:
        courseA_playlab_events_challenge1_a: "Kuşun şarkı söylemesini sağlayabilirsin.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Robotun bip sesi çıkarmasını sağlayabilirsiniz. <xml><block type=\"studio_whenSpriteClicked\"> <title name=\"SPRITE\"> 6</title> <next><block type=\"studio_playSound\"> <title name=\"SOUND\"> winpoint</title></block></next></block></xml>"
        courseA_playlab_events_challenge1_c: |-
          Öfkeli canavara homurtu sesi verebilirsiniz.  <xml><block type="studio_whenSpriteClicked"> <title name="SPRITE"> 5</title> <next><block type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE"> 2</title> <next><block type="studio_saySprite"> <title name="SPRITE"> 5</title> <title name="TEXT"> kükreme!</title> <next><block type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE"> 0</title></block></next></block></next></block></next></block></xml>
      courseA_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "Kuşun şarkı söylemesini sağlayabilirsin.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Robotun bip sesi çıkarmasını sağlayabilirsiniz. <xml><block type=\"studio_whenSpriteClicked\"> <title name=\"SPRITE\"> 6</title> <next><block type=\"studio_playSound\"> <title name=\"SOUND\"> winpoint</title></block></next></block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Öfkeli canavara homurtu sesi verebilirsiniz.  <xml><block type="studio_whenSpriteClicked"> <title name="SPRITE"> 5</title> <next><block type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE"> 2</title> <next><block type="studio_saySprite"> <title name="SPRITE"> 5</title> <title name="TEXT"> kükreme!</title> <next><block type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE"> 0</title></block></next></block></next></block></next></block></xml>
      courseA_playlab_events_challenge2_2018_authored_hint:
        courseA_playlab_events_challenge2_a: "Kuşun şarkı söylemesini sağlayabilirsin.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Robotun bip sesi çıkarmasını sağlayabilirsiniz. <xml><block type=\"studio_whenSpriteClicked\"> <title name=\"SPRITE\"> 6</title> <next><block type=\"studio_playSound\"> <title name=\"SOUND\"> winpoint</title></block></next></block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Öfkeli canavara homurtu sesi verebilirsiniz.  <xml><block type="studio_whenSpriteClicked"> <title name="SPRITE"> 5</title> <next><block type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE"> 2</title> <next><block type="studio_saySprite"> <title name="SPRITE"> 5</title> <title name="TEXT"> kükreme!</title> <next><block type="studio_setSpriteEmotion"> <title name="SPRITE"> 5</title> <title name="VALUE"> 0</title></block></next></block></next></block></next></block></xml>
      courseA_playlab_events_challengeClone_authored_hint:
        courseA_playlab_events_challenge1_a: "Robin'i tıkladığınızda Waddles the Penguin gözüksün!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Waddles' a tıkladığınızda Hayalet Boo' yu görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Boo' ya tıkladığınızda Canavar Jayden'i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title name=\"SPRITE\">4</title>\n<next>\n<block type=\"studio_setSprite\">\n<title name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">5</title>\n</block>\n</next>\n</block></xml>"
        courseA_playlab_events_challenge1_d: "Canavara tıkladığınızda Robot Spiff' i görünür yapın!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"görünür\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Sonunda, Spiff' e tıkladığınızda Büyücü Wendel' i görünür yapın!\n<xml> \n\n<block type=\"studio_whenSpriteClicked\">\n<title name=\"SPRITE\">6</title>\n<next>\n<block type=\"studio_setSprite\">\n<title name=\"VALUE\">\"görünür\"</title>\n<title name=\"SPRITE\">7</title>\n</block>\n</next>\n</block></xml>"
      courseA_toMakeLoopsVideo_Collector_authored_hint: [ ]
      courseB_Scrat_ramp1_2018_authored_hint:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have been fully clicked together, then click "Run" again.
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!
      courseB_Scrat_ramp2_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2018_authored_hint:
        '1': |
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_artist_loops10_authored_hint: [ ]
      courseB_artist_loops10_2018_authored_hint: [ ]
      courseB_artist_loops2_authored_hint:
        courseB_artist_loops2_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan bloğun üstündeki sayıyı değiştirebilirsin.
        courseB_artist_loops2_b: Sanatçının nereye geldiğini görmek için kodu çalıştırmayı deneyin.
      courseB_artist_loops2_2018_authored_hint:
        courseB_artist_loops2_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan bloğun üstündeki sayıyı değiştirebilirsin.
        courseB_artist_loops2_b: Sanatçının nereye geldiğini görmek için kodu çalıştırmayı deneyin.
      courseB_artist_loops3_authored_hint:
        courseB_artist_loops3_a: Remember to use a `repeat` loop for better code!
        courseB_artist_loops3_b: Çizgi çizmek için sanatçıyı Güneye hareket ettirmelisin.
      courseB_artist_loops3_2018_authored_hint:
        courseB_artist_loops3_a: Remember to use a `repeat` loop for better code!
        courseB_artist_loops3_b: Çizgi çizmek için sanatçıyı Güneye hareket ettirmelisin.
      courseB_artist_loops4_authored_hint:
        courseB_artist_loops4_a: Atla bloğu, çizgi çizmeden ileri hareket etmenizi sağlar.
        courseB_artist_loops4_b: Bulmacayı çözmek için tekrar döngüsünün içine bir blok eklemeniz gerekecek.
        courseB_artist_loops4_c: Döngünün tekrarlama sayısını değiştirmeyi unutmayın.
      courseB_artist_loops4_2018_authored_hint:
        courseB_artist_loops4_a: Atla bloğu, çizgi çizmeden ileri hareket etmenizi sağlar.
        courseB_artist_loops4_b: Bulmacayı çözmek için tekrar döngüsünün içine bir blok eklemeniz gerekecek.
        courseB_artist_loops4_c: Döngünün tekrarlama sayısını değiştirmeyi unutmayın.
      courseB_artist_loops5_authored_hint:
        courseB_artist_loops5_a: Drag out a `repeat` loop, then put the other blocks inside of it. How many times do you need to repeat?
      courseB_artist_loops5_2018_authored_hint:
        courseB_artist_loops5_a: Drag out a `repeat` loop, then put the other blocks inside of it. How many times do you need to repeat?
      courseB_artist_loops6_authored_hint:
        courseB_artist_loops6_b: Hareketleri bir kağıda yazmayı deneyin ve desene bakın.
      courseB_artist_loops6_2018_authored_hint:
        courseB_artist_loops6_b: Hareketleri bir kağıda yazmayı deneyin ve desene bakın.
      courseB_artist_loops7_authored_hint:
        courseB_artist_loops7_a: Bu meydan okuma dört döngü içerir, herbiri birbiri ardına kullanılır!
        courseB_artist_loops7_b: |-
          Notice that every loop makes a stair pattern that goes a different direction.
          
          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
      courseB_artist_loops7_2018_authored_hint:
        courseB_artist_loops7_a: Bu meydan okuma dört döngü içerir, herbiri birbiri ardına kullanılır!
        courseB_artist_loops7_b: |-
          Notice that every loop makes a stair pattern that goes a different direction.
          
          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
      courseB_artist_loops8_authored_hint:
        courseB_artist_loops8_a: How many times should you repeat the pattern to make the ladder?
        courseB_artist_loops8_b: Ne yapacağını görmek için kodu çalıştırmalısın.
      courseB_artist_loops8_2018_authored_hint:
        courseB_artist_loops8_a: How many times should you repeat the pattern to make the ladder?
        courseB_artist_loops8_b: Ne yapacağını görmek için kodu çalıştırmalısın.
      courseB_artist_loops8_predict1_authored_hint: [ ]
      courseB_artist_loops9_authored_hint:
        courseB_artist_loops9_a: Çizgi çizmeden ilerlemek için atlama bloklarını kullanabileceğini unutma.
        courseB_artist_loops9_b: Bu bulmacayı çözmek için B bloğunu kullanacaksın. 
        courseB_artist_loops9_c: Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.
      courseB_artist_loops9_2018_authored_hint:
        courseB_artist_loops9_a: Çizgi çizmeden ilerlemek için atlama bloklarını kullanabileceğini unutma.
        courseB_artist_loops9_b: Bu bulmacayı çözmek için B bloğunu kullanacaksın. 
        courseB_artist_loops9_c: Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.
      courseB_artist_loops_challenge1_authored_hint:
        courseB_artist_loops_challenge1_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml> sanatçının bir eğimde hareket etmesine izin verir!'
        courseB_artist_loops_challenge1_b: Bir zarı bitirdikten sonra diğerine 'Atla'!
        courseB_artist_loops_challenge1_c: 'Bazı aynı çizgiler üzerinden geçerken  ''ilerle'' veya ''atla'' bloklarından iki taneye ihtiyacın olacak. '
      courseB_artist_loops_challenge1_2018_authored_hint:
        courseB_artist_loops_challenge1_a: 'Bunun gibi bloklar: <xml><block type="simple_move_up_left"/></xml> sanatçının bir eğimde hareket etmesine izin verir!'
        courseB_artist_loops_challenge1_b: Bir zarı bitirdikten sonra diğerine 'Atla'!
        courseB_artist_loops_challenge1_c: 'Bazı aynı çizgiler üzerinden geçerken  ''ilerle'' veya ''atla'' bloklarından iki taneye ihtiyacın olacak. '
      courseB_artist_loops_challenge2_authored_hint:
        courseB_artist_loops_challenge2_a: Bir X çizmek için gerekli olan kod, sana zaten verilmiş durumda. Yapman gereken şey, X'i tekrar etmek ve sonraki noktaya atlamak.
        courseB_artist_loops_challenge2_b: Atla bloğu ile başka alanlara gidebilirsiniz.
      courseB_artist_loops_challenge2_2018_authored_hint:
        courseB_artist_loops_challenge2_a: Bir X çizmek için gerekli olan kod, sana zaten verilmiş durumda. Yapman gereken şey, X'i tekrar etmek ve sonraki noktaya atlamak.
        courseB_artist_loops_challenge2_b: Atla bloğu ile başka alanlara gidebilirsiniz.
      courseB_collector_loops1_authored_hint:
        courseB_collector_loops1_a: Hazineyi almak için üzerinde dururken <xml><block type="collector_collect_simplified"/></xml> bloğunu kullanmalısın.
      courseB_collector_loops10_authored_hint:
        courseB_collector_loops10_a: If you can't figure out where to put the `repeat` loops, write out the code step-by-step and look for a pattern.
        courseB_collector_loops10_b: Hareketleri bir kağıda yazmayı ve desene bakmayı deneyin.
      courseB_collector_loops10_2018_authored_hint:
        courseB_collector_loops10_a: If you can't figure out where to put the `repeat` loops, write out the code step-by-step and look for a pattern.
        courseB_collector_loops10_b: Hareketleri bir kağıda yazmayı ve desene bakmayı deneyin.
      courseB_collector_loops1_2018_authored_hint:
        courseB_collector_loops1_a: Hazineyi almak için üzerinde dururken <xml><block type="collector_collect_simplified"/></xml> bloğunu kullanmalısın.
      courseB_collector_loops2_authored_hint:
        courseB_collector_loops2_a: Herhangi bir hazine toplamadan önce ilerlemeniz gerekir.
        courseB_collector_loops2_b: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi Al' bloğunu kullanmayı unutmayın.
      courseB_collector_loops2_2018_authored_hint:
        courseB_collector_loops2_a: Herhangi bir hazine toplamadan önce ilerlemeniz gerekir.
        courseB_collector_loops2_b: Bir Hazineye ulaşıldığında, onu almak için 'Hazineyi Al' bloğunu kullanmayı unutmayın.
      courseB_collector_loops3_authored_hint:
        courseB_collector_prog3_a: Try using a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block></xml> block to collect your treasure.
        courseB_collector_prog3_b: Tekrar eden bir döngüye birden fazla blok yerleştirebileceğinizi unutmayın.
      courseB_collector_loops3_2018_authored_hint:
        courseB_collector_prog3_a: Try using a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block></xml> block to collect your treasure.
        courseB_collector_prog3_b: Tekrar eden bir döngüye birden fazla blok yerleştirebileceğinizi unutmayın.
      courseB_collector_loops3_predict1_authored_hint:
        courseB_collector_prog3_a: Try using a `repeat` block to collect your gold.
      courseB_collector_loops4_authored_hint:
        courseB_collector_loops4_a: Try using the step button to figure out where things go wrong.
        courseB_collector_loops4_b: To change how far Laurel goes, change the number of times that the loop runs.
        courseB_collector_loops4_c: Laurel, 'tekrar' döngüsünü tamamladıktan sonra aşağıya doğru yürüyüp hazine toplamaya ihtiyacı var!
      courseB_collector_loops4_2018_authored_hint:
        courseB_collector_loops4_a: Try using the step button to figure out where things go wrong.
        courseB_collector_loops4_b: To change how far Laurel goes, change the number of times that the loop runs.
        courseB_collector_loops4_c: Laurel, 'tekrar' döngüsünü tamamladıktan sonra aşağıya doğru yürüyüp hazine toplamaya ihtiyacı var!
      courseB_collector_loops5_authored_hint:
        courseB_collector_loops5_a: Use more than one loop to get the job done.
        courseB_collector_loops5_b: Neler olduğunu görmek için kodu birkaç kez çalıştırmayı dene.
      courseB_collector_loops5_2018_authored_hint:
        courseB_collector_loops5_a: Use more than one loop to get the job done.
        courseB_collector_loops5_b: Neler olduğunu görmek için kodu birkaç kez çalıştırmayı dene.
      courseB_collector_loops6_authored_hint:
        courseB_collector_loops6_a: Can't figure out where things start going wrong? Use the "Step" button to run through your program one block at a time.
        courseB_collector_loops6_b: '"3"e tıklayıp sayıyı farklı seçerek tekrar döngüsünün kaç kez çalışacağını değiştirebilirsiniz.'
        courseB_collector_loops6_c: Bu bulmacayı çözmek için üç tekrarla döngüsüne ihtiyacınız olacak. 
        courseB_collector_loops6_d: Eğer kafanız karıştıysa, bu bulmacayı üç aşamada çözmeyi deneyin.
      courseB_collector_loops6_2018_authored_hint:
        courseB_collector_loops6_a: Can't figure out where things start going wrong? Use the "Step" button to run through your program one block at a time.
        courseB_collector_loops6_b: '"3"e tıklayıp sayıyı farklı seçerek tekrar döngüsünün kaç kez çalışacağını değiştirebilirsiniz.'
        courseB_collector_loops6_c: Bu bulmacayı çözmek için üç tekrarla döngüsüne ihtiyacınız olacak. 
        courseB_collector_loops6_d: Eğer kafanız karıştıysa, bu bulmacayı üç aşamada çözmeyi deneyin.
      courseB_collector_loops7_authored_hint:
        courseB_collector_loops7_a: If you are having a hard time with the puzzle, try drawing it on paper to help you figure it out.
        courseB_collector_loops7_b: Bulmacayı çözmek için 3 tekrarla döngüsüne ihtiyacın olacak ve sonundaki ekstra hazineyi unutma!
      courseB_collector_loops7_2018_authored_hint:
        courseB_collector_loops7_a: If you are having a hard time with the puzzle, try drawing it on paper to help you figure it out.
        courseB_collector_loops7_b: Bulmacayı çözmek için 3 tekrarla döngüsüne ihtiyacın olacak ve sonundaki ekstra hazineyi unutma!
      courseB_collector_loops8_authored_hint:
        courseB_collector_loops8_challenge_a: If you can't figure out where to put the repeat loops, write out the code step-by-step and look for a pattern.
      courseB_collector_loops8_2018_authored_hint:
        courseB_collector_loops8_challenge_a: If you can't figure out where to put the repeat loops, write out the code step-by-step and look for a pattern.
      courseB_collector_loops9_authored_hint:
        courseB_collector_loops9_a: 'Does this seem too hard?  Break it up into 3 little problems to make it feel easier.  '
        courseB_collector_loops9_b: Bu çözüm için birbiri ardına 3 tekrarla döngüsüne ihtiyacınız olacaktır.
      courseB_collector_loops9_2018_authored_hint:
        courseB_collector_loops9_a: 'Does this seem too hard?  Break it up into 3 little problems to make it feel easier.  '
        courseB_collector_loops9_b: Bu çözüm için birbiri ardına 3 tekrarla döngüsüne ihtiyacınız olacaktır.
      courseB_collector_loops_challenge1_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Aşağıdaki komutları döngüleyerek başlayın:
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Her yolun arasında Doğuya iki defa ilerleyin.\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n  </xml>\nBunu sadece 14 blok ile yapabilirsiniz.  Bir çözüm yolu görmek için bir ipucuna daha basın.\n"
        courseB_collector_loops_challenge1_d: |-
          Bunu dene!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2018_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Aşağıdaki komutları döngüleyerek başlayın:
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Her yolun arasında Doğuya iki defa ilerleyin.\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n  </xml>\nBunu sadece 14 blok ile yapabilirsiniz.  Bir çözüm yolu görmek için bir ipucuna daha basın.\n"
        courseB_collector_loops_challenge1_d: |-
          Bunu dene!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2_authored_hint:
        courseB_collector_loops_challenge2_a: Eğer işler ters giderse, yeniden başlamaktan korkma! Sakın pes etme!
        courseB_collector_loops_challenge2_b: |-
          Bu tekrar eden kodu kullanırsan, Laurel mağaranın içindeki duvara çarpmayacak! 
          
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: Son hazine yığınını toplamak için bir döngü kullanmayı unutma!
        courseB_collector_loops_challenge2_d: |-
          Bu çözümü deneyin:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2a_authored_hint:
        courseB_collector_loops_challenge2a_a: Eğer herhangi bir şey ters giderse, hata ayıklamayı deneyin. Pes etmeyin!
        courseB_collector_loops_challenge2a_b: Labirenti geçmek için bu seçeneğe bakın. Tekrar edebileceğin bir desen görüyor musun?
        courseB_collector_loops_challenge2a_c: Hazinenin tamamını toplamak için, döngünüze iki tane <xml> <block type="collector_collect"/></xml> bloğu eklemeli, veya bloğu kendi 'tekrar' bloğunun içine koymanız gerekiyor.
      courseB_collector_loops_challenge2a_2018_authored_hint:
        courseB_collector_loops_challenge2a_a: Eğer herhangi bir şey ters giderse, hata ayıklamayı deneyin. Pes etmeyin!
        courseB_collector_loops_challenge2a_b: Labirenti geçmek için bu seçeneğe bakın. Tekrar edebileceğin bir desen görüyor musun?
        courseB_collector_loops_challenge2a_c: Hazinenin tamamını toplamak için, döngünüze iki tane <xml> <block type="collector_collect"/></xml> bloğu eklemeli, veya bloğu kendi 'tekrar' bloğunun içine koymanız gerekiyor.
      courseB_collector_loops_challenge`_authored_hint:
        courseA_collector_loops_challenge2_b: "Bunu çözmek için ! [] (https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) yalnızca bir tane kullanmanız gerekir ."
        courseA_collector_loops_challenge2_a: |2
          Güney'e ilerlemeden önce patikada geriye gidebilirsin.
           ![] (https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      courseB_collector_prog3_authored_hint:
        courseB_collector_prog3_a: Try using a `repeat` block to collect your gold.
      courseB_iceage_loops1_authored_hint:
        courseB_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseB_iceage_loops1_b: |-
          You will have to use this block:
          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseB_iceage_loops2_authored_hint:
        courseB_iceage_loops2_a: Break this puzzle into two pieces, one before the corner, and one after the corner.
        courseB_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseB_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseB_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          Use this new block!
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: Tekrar etmek için, bir 'tekrar' döngüsü sürükle, sonra içine istediğin bloğu koy.
      courseB_iceage_loops4_authored_hint:
        courseB_iceage_loops4_a: Try writing down the steps Scrat would take to get to the acorn. Do you see a pattern?
        courseB_iceage_loops4_b: Don't be afraid to run your code and see what happens!
        courseB_iceage_loops4_c: This is the path Scrat should take.
      courseB_iceage_loops6_authored_hint:
        courseB_iceage_loops6_a: Your final code will have **three** movement blocks.
        courseB_iceage_loops6_b: You only need to add **one** more loop!
        courseB_iceage_loops6_c: Your final path should look like this.
      courseB_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the acorn.
      courseB_iceage_loops8_authored_hint:
        courseB_iceage_loops8_a: Are the movement blocks right? What else can you change?
        courseB_iceage_loops8_b: The first loop should repeat **3** times, the second should repeat **5** times, the third loop should repeat **4** times, and the last loop should repeat **4** times.
        courseB_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseB_iceage_loops9_authored_hint:
        courseB_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller pieces. Don't be afraid to run your puzzle as you code!
        courseB_iceage_loops9_b: Your final code should have **4** loops.
        courseB_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseB_maze_seq1_authored_hint:
        courseB_maze_seq1_a: Kuşun hareket etmesi için blokları 'çalıştığı zaman' <xml><block type="when_run"/></xml> bloğuna birleştirin!
        courseB_maze_seq1_b: "Kuşu domuza getirmek için, üç tane <xml><block type=\"maze_moveSouth\"/></xml> oku  dışarı sürükleyin ve 'çalıştığı zaman' <xml><block type=\"when_run\"/></xml> bloğu ile bağlayın. \n"
      courseB_maze_seq10_authored_hint:
        courseB_maze_seq10_a: Try writing down the steps on a piece of paper first.
        courseB_maze_seq10_b: Domuza ulaşmak için iki farklı yönde hareket etmelisin.
      courseB_maze_seq10_2018_authored_hint: [ ]
      courseB_maze_seq10_predict1_authored_hint: [ ]
      courseB_maze_seq10_predict1_2018_authored_hint: [ ]
      courseB_maze_seq11_authored_hint:
        courseB_maze_seq11_a: Try writing down the steps on a piece of paper first.
        courseB_maze_seq11_b: 'Zorlandığınız durumlarda, bulmacayı köşeden önce ve köşeden sonra olarak iki ayrı bölüm halinde çözmeyi deneyin.'
      courseB_maze_seq11_2018_authored_hint: [ ]
      courseB_maze_seq1_2018_authored_hint:
        courseB_maze_seq1_a: Kuşun hareket etmesi için blokları 'çalıştığı zaman' <xml><block type="when_run"/></xml> bloğuna birleştirin!
        courseB_maze_seq1_b: "Kuşu domuza getirmek için, üç tane <xml><block type=\"maze_moveSouth\"/></xml> oku  dışarı sürükleyin ve 'çalıştığı zaman' <xml><block type=\"when_run\"/></xml> bloğu ile bağlayın. \n"
      courseB_maze_seq1_predict1_authored_hint: [ ]
      courseB_maze_seq1_predict1_2018_authored_hint: [ ]
      courseB_maze_seq2_authored_hint:
        courseB_maze_seq2_a: This program is missing one block. Can you figure out which one?
        courseB_maze_seq2_b: Kuşun ne yapması gerektiğini görmek için verilen kodu çalıştırmayı deneyin.
      courseB_maze_seq2_2018_authored_hint:
        courseB_maze_seq2_a: This program is missing one block. Can you figure out which one?
        courseB_maze_seq2_b: Kuşun ne yapması gerektiğini görmek için verilen kodu çalıştırmayı deneyin.
      courseB_maze_seq3_authored_hint:
        courseB_maze_seq3_a: One of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?
        courseB_maze_seq3_b: Programın yanlış gittiği yeri bulmak için adım düğmesini kullanmaya çalışın. Bu ilk adım mı? ikinci mi?
        courseB_maze_seq3_c: <xml><block type="maze_moveWest"/></xml> bloğu, kuşu doğru yönde hareket ettirmiyor gibi görünüyor. 
      courseB_maze_seq3_2018_authored_hint:
        courseB_maze_seq3_a: One of the blocks is moving Scrat in the wrong direction. Can you figure out which one and replace it with the correct block?
        courseB_maze_seq3_b: Programın yanlış gittiği yeri bulmak için adım düğmesini kullanmaya çalışın. Bu ilk adım mı? ikinci mi?
        courseB_maze_seq3_c: <xml><block type="maze_moveWest"/></xml> bloğu, kuşu doğru yönde hareket ettirmiyor gibi görünüyor. 
      courseB_maze_seq4_authored_hint:
        courseB_maze_seq4_a: Try adding one instruction at a time until you get to the pig.
        courseB_maze_seq4_b: Bu bulmacayı çözmek için doğuya hareket etmek isteyeceksiniz
      courseB_maze_seq4_2018_authored_hint:
        courseB_maze_seq4_a: Try adding one instruction at a time until you get to the acorn.
        courseB_maze_seq4_b: Bu bulmacayı çözmek için doğuya hareket etmek isteyeceksiniz
      courseB_maze_seq5_authored_hint:
        courseB_maze_seq5_a: Zorlandığınız durumlarda yolu kağıt üzerine çizmeyi deneyin.
        courseB_maze_seq5_b: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq5_c: Domuza nasıl ulaşacağınızdan emin değil misiniz? Bu yolu deneyin.
      courseB_maze_seq5_2018_authored_hint:
        courseB_maze_seq5_a: Zorlandığınız durumlarda yolu kağıt üzerine çizmeyi deneyin.
        courseB_maze_seq5_b: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq5_c: Domuza nasıl ulaşacağınızdan emin değil misiniz? Bu yolu deneyin.
      courseB_maze_seq6_authored_hint:
        courseB_maze_seq6_a: Your final code should have three movement blocks.
        courseB_maze_seq6_b: Zorlandığınız durumlarda, bulmacayı, biri yanlamasına, diğeri yukarı ve aşağı olmak üzere iki ayrı bölüm halinde çözmeyi deneyin.
        courseB_maze_seq5_c: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq5_d: Domuza nasıl ulaşacağınızdan emin değil misiniz? Bu yolu deneyin!
      courseB_maze_seq6_2018_authored_hint:
        courseB_maze_seq6_a: Your final code should have three movement blocks.
        courseB_maze_seq6_b: Zorlandığınız durumlarda, bulmacayı, biri yanlamasına, diğeri yukarı ve aşağı olmak üzere iki ayrı bölüm halinde çözmeyi deneyin.
        courseB_maze_seq5_c: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq5_d: Domuza nasıl ulaşacağınızdan emin değil misiniz? Bu yolu deneyin!
      courseB_maze_seq7_authored_hint:
        courseB_maze_seq7_a: Add 1 block to move the bird to the pig.
        courseB_maze_seq7_b: Size verilen kodu çalıştırın ve nerede bittiğini görün.
        courseB_maze_seq7_c: Domuza ulaşamıyor musunuz? Bu yolu deneyin!
      courseB_maze_seq7_2018_authored_hint:
        courseB_maze_seq7_a: Add 1 block to move Scrat to the acorn.
        courseB_maze_seq7_b: Size verilen kodu çalıştırın ve nerede bittiğini görün.
        courseB_maze_seq7_c: Domuza ulaşamıyor musunuz? Bu yolu deneyin!
      courseB_maze_seq8_authored_hint:
        courseB_maze_seq8_a: Try adding one block at a time until you solve the puzzle.
        courseB_maze_seq8_b: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq8_c: Hangi yöne gideceğinizi bilmiyor musunuz? Bu yolu deneyin!
      courseB_maze_seq8_2018_authored_hint:
        courseB_maze_seq8_a: Try adding one block at a time until you solve the puzzle.
        courseB_maze_seq8_b: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq8_c: Hangi yöne gideceğinizi bilmiyor musunuz? Bu yolu deneyin!
      courseB_maze_seq9_authored_hint:
        courseB_maze_seq9_a: Try writing down all of the steps on a piece of paper first.
        courseB_maze_seq9_b: Unutmayın, programınızı her seferinde bir blok ekleyerek yazıp, yazdıkça test edebilirsiniz.
        courseB_maze_seq9_c: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq9_d: Takıldınız mı? Bu yolu deneyin!
      courseB_maze_seq9_2018_authored_hint:
        courseB_maze_seq9_a: Try writing down all of the steps on a piece of paper first.
        courseB_maze_seq9_b: Unutmayın, programınızı her seferinde bir blok ekleyerek yazıp, yazdıkça test edebilirsiniz.
        courseB_maze_seq9_c: Bu bulmacayı çözmek için iki yol vardır!
        courseB_maze_seq9_d: Takıldınız mı? Bu yolu deneyin!
      courseB_maze_seq9_challenge1_authored_hint: [ ]
      courseB_maze_seqCold_authored_hint:
        courseB_maze_seqCold_a: Stuck? Try tracing the bird's path with your finger.
        courseB_maze_seqCold_b: The extra blocks need to be added before the last ![](https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51 PM.png )
      courseB_maze_seqOld_authored_hint:
        courseB_maze_seqOld_a: If you're having trouble, try writing down the steps on a piece of paper first.
      courseB_maze_seq_challenge1_authored_hint:
        courseB_maze_seq_challenge1_a: En kısa yol bu sefer işe yaramayabilir.
        courseB_maze_seq_challenge1_b: <xml><block type="maze_moveWest"/></xml>  bloğunu kullanarak ilerlemeyi deneyin.
      courseB_maze_seq_challenge1_2018_authored_hint:
        courseB_maze_seq_challenge1_a: En kısa yol bu sefer işe yaramayabilir.
        courseB_maze_seq_challenge1_b: <xml><block type="maze_moveWest"/></xml>  bloğunu kullanarak ilerlemeyi deneyin.
      courseB_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: Bu bulmacayı çözmek için blok eklemene veya kaldırmana gerek yok.
        courseB_maze_seq_challenge2_b: Blokları yeniden sıralayıp merdiven deseni olan yoldan git.
      courseB_maze_seq_challenge2_2018_authored_hint:
        courseB_maze_seq_challenge2_a: Bu bulmacayı çözmek için blok eklemene veya kaldırmana gerek yok.
        courseB_maze_seq_challenge2_b: Blokları yeniden sıralayıp merdiven deseni olan yoldan git.
      courseB_playlab_challenge1_Template_authored_hint: [ ]
      courseB_playlab_challenge1_Template_2018_authored_hint: [ ]
      courseB_playlab_events2_authored_hint:
        courseB_playlab_events2_a: |-
          This is the block to have Daisy say something:
          
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events2_2018_authored_hint:
        courseB_playlab_events2_a: |-
          This is the block to have Daisy say something:
          
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events3_authored_hint:
        courseB_playlab_events3_a: |-
          This is the block you should use to add the event:
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          This is the block you need to switch Daisy's mood:
          
          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events3_2018_authored_hint:
        courseB_playlab_events3_a: |-
          This is the block you should use to add the event:
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          This is the block you need to switch Daisy's mood:
          
          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events4_authored_hint:
        courseB_playlab_events4_a: |-
          This is the event that controls the left arrow:
          
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Bu blok şövalyeyi sola hareket ettirir.
          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
          
      courseB_playlab_events4_2018_authored_hint:
        courseB_playlab_events4_a: |-
          This is the event that controls the left arrow:
          
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Bu blok şövalyeyi sola hareket ettirir.
          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
          
      courseB_playlab_events5_authored_hint:
        courseB_playlab_events5_a: "This is the event block that controls the right arrow: \n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n  </block>\n  </xml>"
        courseB_playlab_events5_b: "This is the block that makes the knight run away. \n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events5_2018_authored_hint:
        courseB_playlab_events5_a: "This is the event block that controls the right arrow: \n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n  </block>\n  </xml>"
        courseB_playlab_events5_b: "This is the block that makes the knight run away. \n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events6_authored_hint:
        courseB_playlab_events6_a: |-
          You will need these event blocks:
          
          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Farklı yönler seçmek için açılır menüdeki yeşil 'ok işaretine basıldığında' olay bloklarını kullan.
          
          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Geçmek için tüm bayraklara git!
      courseB_playlab_events6_2018_authored_hint:
        courseB_playlab_events6_a: |-
          You will need these event blocks:
          
          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Farklı yönler seçmek için açılır menüdeki yeşil 'ok işaretine basıldığında' olay bloklarını kullan.
          
          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Geçmek için tüm bayraklara git!
      courseB_playlab_events7_authored_hint:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:
          
          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.
          
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:
          
          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2018_authored_hint:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:
          
          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.
          
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:
          
          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_eventsTemplate_authored_hint: [ ]
      courseB_playlab_eventsTemplate_2018_authored_hint: [ ]
      courseB_playlab_eventsToolbox_authored_hint:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:
          
          ![](https://images.code.org/2ed42b3a3108c6affdfc866de57f2eec-image-1475624565390.42.18.png)
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.
          
          ![](https://images.code.org/58e9b9a146a4ca3a8eee25845110b805-image-1475624550269.42.00.png)
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:
          
          ![](https://images.code.org/f468611cbe51e1cb35531334f625395a-image-1475624478204.41.02.png)
      courseB_playlab_events_challenge1_authored_hint:
        courseB_playlab_events_challenge1_a: "Aşağı Taşı '▼' tuşuna bastığınızda diğer hayvanları aşağı ilerletin.  <xml><block type=\"studio_whenArrow\" movable=\"false\"> <title name=\"VALUE\"> aşağı</title></block></xml>"
        courseB_playlab_events_challenge1_b: |
          Bu bloğu kullanarak hayvanların hızını değiştirebilirsin: <xml><block type="studio_setSpriteSpeed"> <title name="SPRITE"> 0</title> <title name="VALUE"> Studio.SpriteSpeed.NORMAL</title></block></xml>
        courseB_playlab_events_challenge1_c: |-
          Yarış bittiğinde herkes ne diyecek? Bu olay ile konuşmalarını sağlayın: <xml><block type="studio_whenSpriteClicked"> <title name="SPRITE"> 2</title> <next><block type="studio_saySpriteChoices"> <title name="SPRITE"> 2</title> <title name="VALUE"> Kur yapmak hoo!</title></block></next></block></xml>
      courseB_playlab_events_challenge1_2018_authored_hint:
        courseB_playlab_events_challenge1_a: "Aşağı Taşı '▼' tuşuna bastığınızda diğer hayvanları aşağı ilerletin.  <xml><block type=\"studio_whenArrow\" movable=\"false\"> <title name=\"VALUE\"> aşağı</title></block></xml>"
        courseB_playlab_events_challenge1_b: |
          Bu bloğu kullanarak hayvanların hızını değiştirebilirsin: <xml><block type="studio_setSpriteSpeed"> <title name="SPRITE"> 0</title> <title name="VALUE"> Studio.SpriteSpeed.NORMAL</title></block></xml>
        courseB_playlab_events_challenge1_c: |-
          Yarış bittiğinde herkes ne diyecek? Bu olay ile konuşmalarını sağlayın: <xml><block type="studio_whenSpriteClicked"> <title name="SPRITE"> 2</title> <next><block type="studio_saySpriteChoices"> <title name="SPRITE"> 2</title> <title name="VALUE"> Kur yapmak hoo!</title></block></next></block></xml>
      courseB_playlab_events_challenge2_authored_hint:
        courseB_playlab_events_challenge2_a: Her hayvan oyunda tıklandığında yok olmalı. Bir iki saniye sonra geri gelmeli!
        courseB_playlab_events_challenge2_b: |-
          Başka olay blokları kullanarak öteki hayvanlarında kaybolmasını sağla!
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Hayvanlara tıklandığında ses çıkması ve puan kazanılması için ekstra blokları kullanın!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Karıştır! Bazı hayvanlar diğerlerinden daha fazla puan verebilir. 
          Farklı sesler kullanın. 
          Hayvanların duygularını değiştir!
      courseB_playlab_events_challenge2_2018_authored_hint:
        courseB_playlab_events_challenge2_a: Her hayvan oyunda tıklandığında yok olmalı. Bir iki saniye sonra geri gelmeli!
        courseB_playlab_events_challenge2_b: |-
          Başka olay blokları kullanarak öteki hayvanlarında kaybolmasını sağla!
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Hayvanlara tıklandığında ses çıkması ve puan kazanılması için ekstra blokları kullanın!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Karıştır! Bazı hayvanlar diğerlerinden daha fazla puan verebilir. 
          Farklı sesler kullanın. 
          Hayvanların duygularını değiştir!
      courseB_playlab_events_challenge2_embed_authored_hint:
        courseB_playlab_events_challenge2_a: Her hayvan oyunda tıklandığında yok olmalı. Bir iki saniye sonra geri gelmeli!
        courseB_playlab_events_challenge2_b: |-
          Başka olay blokları kullanarak öteki hayvanlarında kaybolmasını sağla!
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Hayvanlara tıklandığında ses çıkması ve puan kazanılması için ekstra blokları kullanın!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Karıştır! Bazı hayvanlar diğerlerinden daha fazla puan verebilir. 
          Farklı sesler kullanın. 
          Hayvanların duygularını değiştir!
      courseB_playlab_events_challenge2_template_authored_hint:
        courseB_playlab_events_challenge2_a: Her hayvan oyunda tıklandığında yok olmalı. Bir iki saniye sonra geri gelmeli!
        courseB_playlab_events_challenge2_b: |-
          Başka olay blokları kullanarak öteki hayvanlarında kaybolmasını sağla!
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Hayvanlara tıklandığında ses çıkması ve puan kazanılması için ekstra blokları kullanın!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Karıştır! Bazı hayvanlar diğerlerinden daha fazla puan verebilir. 
          Farklı sesler kullanın. 
          Hayvanların duygularını değiştir!
      courseB_playlab_events_challenge2_template_2018_authored_hint:
        courseB_playlab_events_challenge2_a: Her hayvan oyunda tıklandığında yok olmalı. Bir iki saniye sonra geri gelmeli!
        courseB_playlab_events_challenge2_b: |-
          Başka olay blokları kullanarak öteki hayvanlarında kaybolmasını sağla!
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Hayvanlara tıklandığında ses çıkması ve puan kazanılması için ekstra blokları kullanın!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Karıştır! Bazı hayvanlar diğerlerinden daha fazla puan verebilir. 
          Farklı sesler kullanın. 
          Hayvanların duygularını değiştir!
      courseB_scrat_forVideo_authored_hint: [ ]
      courseB_starWars_prog1_authored_hint:
        courseB_starWars_prog1_a: Her seferinde bir tane blok eklemeyi deneyin, sonra ne olduğunu görmek için kodunuzu çalıştırın.
        courseB_starWars_prog1_b: |
          Bu bulmacayı çözmek için Doğu'ya hareket etmelisin. Peki ne kadar ilerlemelisin?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog10_authored_hint: [ ]
      courseB_starWars_prog10_2018_authored_hint: [ ]
      courseB_starWars_prog11_authored_hint: [ ]
      courseB_starWars_prog11_2018_authored_hint: [ ]
      courseB_starWars_prog1_2018_authored_hint:
        courseB_starWars_prog1_a: Her seferinde bir tane blok eklemeyi deneyin, sonra ne olduğunu görmek için kodunuzu çalıştırın.
        courseB_starWars_prog1_b: |
          Bu bulmacayı çözmek için Doğu'ya hareket etmelisin. Peki ne kadar ilerlemelisin?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog2_authored_hint:
        courseB_starWars_prog2_a: 'Bu problemi iki parçaya bölebilirsin: ilk olarak, bir yığın hurda metal al, ardından oradan ikinci yığına nasıl ulaşacağını çöz.'
      courseB_starWars_prog2_2018_authored_hint:
        courseB_starWars_prog2_a: 'Bu problemi iki parçaya bölebilirsin: ilk olarak, bir yığın hurda metal al, ardından oradan ikinci yığına nasıl ulaşacağını çöz.'
      courseB_starWars_prog3_authored_hint:
        courseB_starWars_prog3_a: Bu bulmacayı çözmek için 3 farklı yönde hareket etmeniz gerekecek.
        courseB_starWars_prog3_b: Bir defada bir parça kod yazabileceğinizi ve oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseB_starWars_prog3_2018_authored_hint:
        courseB_starWars_prog3_a: Bu bulmacayı çözmek için 3 farklı yönde hareket etmeniz gerekecek.
        courseB_starWars_prog3_b: Bir defada bir parça kod yazabileceğinizi ve oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseB_starWars_prog4_authored_hint:
        courseB_starWars_prog4_a: Bir defada bir parça kod yazabileceğinizi ve oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
        courseB_starWars_prog4_b: |-
          Daha kısa kod için `tekrar et` bloğunu kullanmayı deneyin.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog4_2018_authored_hint:
        courseB_starWars_prog4_a: Bir defada bir parça kod yazabileceğinizi ve oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
        courseB_starWars_prog4_b: |-
          Daha kısa kod için `tekrar et` bloğunu kullanmayı deneyin.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog5_authored_hint:
        courseB_starWars_prog5_a: Bu desen, son bulmacaya biraz benzemiyor mu?
        courseB_starWars_prog5_b: BB-8 uzayda yuvarlanırken hurda metal toplar.
        courseB_starWars_prog5_c: Bu deseni parmağınla takip et. İlerledikçe metal parçalarını say.
        courseB_starWars_prog5_da: |-
          Merdiven basamağı bulmacasındaki aynı çözüm yolunu kullanırsan ne olacağına bak:
          
          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018_authored_hint:
        courseB_starWars_prog5_a: Bu desen, son bulmacaya biraz benzemiyor mu?
        courseB_starWars_prog5_b: BB-8 uzayda yuvarlanırken hurda metal toplar.
        courseB_starWars_prog5_c: Bu deseni parmağınla takip et. İlerledikçe metal parçalarını say.
        courseB_starWars_prog5_da: |-
          Merdiven basamağı bulmacasındaki aynı çözüm yolunu kullanırsan ne olacağına bak:
          
          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog6_authored_hint:
        courseB_starWars_prog6_a: Daha kısa kod için `tekrar et` bloğunu kullanmayı deneyin.
        courseB_starWars_prog6_b: |-
          Daha kısa bir program için "tekrarla" bloğu kullanabilir misin?
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog6_2018_authored_hint:
        courseB_starWars_prog6_a: Daha kısa kod için `tekrar et` bloğunu kullanmayı deneyin.
        courseB_starWars_prog6_b: |-
          Daha kısa kod için `tekrar et` bloğunu kullanmayı deneyin.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog7_authored_hint:
        courseB_starWars_prog7_a: Bu desen, son bulmacaya biraz benzemiyor mu?
        courseB_starWars_prog7_b: BB-8 uzayda yuvarlanırken hurda metal toplar.
        courseB_starWars_prog7_c: Bu bulmacaya büyük bir merdiven basamağı çizmeyi deneyin. Metal yığınlarının hepsini kapsıyor mu?
      courseB_starWars_prog7_2018_authored_hint:
        courseB_starWars_prog7_a: Bu desen, son bulmacaya biraz benzemiyor mu?
        courseB_starWars_prog7_b: BB-8 uzayda yuvarlanırken hurda metal toplar.
        courseB_starWars_prog7_c: Bu bulmacaya büyük bir merdiven basamağı çizmeyi deneyin. Metal yığınlarının hepsini kapsıyor mu?
      courseB_starWars_prog8_authored_hint:
        courseB_starWars_prog8_a: Zaten seyahat ettiğiniz bir dizi alana geri gitmek problem değil.
        courseB_starWars_prog8_b: |-
          İçindeki koda ne olduğunu görmek için `repeat` (tekrar) bloğunu kullanmayı deneyin
      courseB_starWars_prog8_2018_authored_hint:
        courseB_starWars_prog8_a: Zaten seyahat ettiğiniz bir dizi alana geri gitmek problem değil.
        courseB_starWars_prog8_b: |-
          İçindeki koda ne olduğunu görmek için `repeat` (tekrar) bloğunu kullanmayı deneyin
      courseB_starWars_prog9_authored_hint:
        courseB_starWars_prog9_a: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
        courseB_starWars_prog9_b: Bu bulmacayı çözmek için bir çok yol vardır!
        courseB_starWars_prog9_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseB_starWars_prog9_2018_authored_hint:
        courseB_starWars_prog9_a: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
        courseB_starWars_prog9_b: Bu bulmacayı çözmek için bir çok yol vardır!
        courseB_starWars_prog9_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_PlayLab_embed_events9_authored_hint: [ ]
      courseC_PlayLab_events1_authored_hint:
        courseC_PlayLab_events1_a: |-
          Bu blokları 'Çalıştığı zaman'(when run) bloğuna ekleyin:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2018_authored_hint:
        courseC_PlayLab_events1_a: |-
          Bu blokları 'Çalıştığı zaman'(when run) bloğuna ekleyin:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
      courseC_PlayLab_events2_authored_hint:
        courseC_PlayLab_events2_a: |-
          Blokların ikisini 'Çalıştığı zaman'(when run) bloğuna ekle:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Konuşan karakteri değiştirmek için bloğun üzerindeki açılır menüyü kullan.
      courseC_PlayLab_events2_2018_authored_hint:
        courseC_PlayLab_events2_a: |-
          Blokların ikisini 'Çalıştığı zaman'(when run) bloğuna ekle:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Selam.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Konuşan karakteri değiştirmek için bloğun üzerindeki açılır menüyü kullan.
      courseC_PlayLab_events3_authored_hint:
        courseC_PlayLab_events3_a: You only need to move Jorge to the right by about 25 pixels to solve this puzzle.
        courseC_PlayLab_events3_b: Araç kutusunda, karakteri hareket ettirebilecek bir blok var mı?
        courseC_PlayLab_events3_c: |-
          Bu bloğu, 'Çalıştığı Zaman' bloğuna ekle:
          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
          
      courseC_PlayLab_events3_2018_authored_hint:
        courseC_PlayLab_events3_a: You only need to move Jorge to the right by about 25 pixels to solve this puzzle.
        courseC_PlayLab_events3_b: Araç kutusunda, karakteri hareket ettirebilecek bir blok var mı?
        courseC_PlayLab_events3_c: |-
          Bu bloğu, 'Çalıştığı Zaman' bloğuna ekle:
          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
          
      courseC_PlayLab_events4_authored_hint:
        courseC_PlayLab_events4_b: When the "Run" button is clicked, Jorge needs to move right **100** pixels to reach Olive the Cat.
        courseC_PlayLab_events4_a: You will need to attach an `actor __ say` block to the `when actor touches` event to solve this puzzle.
      courseC_PlayLab_events4_2018_authored_hint:
        courseC_PlayLab_events4_b: When the "Run" button is clicked, Jorge needs to move right **100** pixels to reach Olive the Cat.
        courseC_PlayLab_events4_a: You will need to attach an `actor __ say` block to the `when actor touches` event to solve this puzzle.
      courseC_PlayLab_events5_authored_hint:
        courseC_PlayLab_events5_a: You will need to click the dropdown menu in the `actor say` block to find the text "What's new?"
        courseC_PlayLab_events5_b: İşe yaradığını kontrol etmek için programı çalıştırdığınızda Octavia' ya tıklayın!
      courseC_PlayLab_events5_2018_authored_hint:
        courseC_PlayLab_events5_a: You will need to click the dropdown menu in the `actor say` block to find the text "What's new?"
        courseC_PlayLab_events5_b: İşe yaradığını kontrol etmek için programı çalıştırdığınızda Octavia' ya tıklayın!
      courseC_PlayLab_events6_authored_hint:
        courseC_PlayLab_events6_a: Her bir yeşil "ne zaman ok" bloğunun altında bir eylem olmalıdır.
        courseC_PlayLab_events6_b: ''' taşı aktör 1'' bloğunun üzerindeki açılır menüyü Waddles aktörünün hangi yöne gideceğini belirlemek için kullan.'
        courseC_PlayLab_events6_c: İşiniz bittiğinde, Waddles' ı hareket ettirmek için bilgisayarınızdaki yön tuşlarını kullanabileceksiniz!
      courseC_PlayLab_events6_2018_authored_hint:
        courseC_PlayLab_events6_a: Her bir yeşil "ne zaman ok" bloğunun altında bir eylem olmalıdır.
        courseC_PlayLab_events6_b: ''' taşı aktör 1'' bloğunun üzerindeki açılır menüyü Waddles aktörünün hangi yöne gideceğini belirlemek için kullan.'
        courseC_PlayLab_events6_c: İşiniz bittiğinde, Waddles' ı hareket ettirmek için bilgisayarınızdaki yön tuşlarını kullanabileceksiniz!
      courseC_PlayLab_events7_authored_hint:
        courseC_PlayLab_events7_a: 'Use both the `move actor 2 up 400 pixels` block and the `move actor 2 down 400 pixels` block inside the `repeat forever` loop to solve this puzzle. '
        courseC_PlayLab_events7_b: '''sürekli tekrarla'' bloğunun başka herhangi bir olay bloğuna bağlanması gerekmez: ''sürekli tekrarla'' bloğu kendi başına çalışır.'
      courseC_PlayLab_events7_2018_authored_hint:
        courseC_PlayLab_events7_a: 'Use both the `move actor 2 up 400 pixels` block and the `move actor 2 down 400 pixels` block inside the `repeat forever` loop to solve this puzzle. '
        courseC_PlayLab_events7_b: '''sürekli tekrarla'' bloğunun başka herhangi bir olay bloğuna bağlanması gerekmez: ''sürekli tekrarla'' bloğu kendi başına çalışır.'
      courseC_PlayLab_events8_authored_hint:
        courseC_PlayLab_events8_a: You will need to connect blocks to the `when actor touches` block to make this happen correctly.
        courseC_PlayLab_events8_b: The `actor say` and `play sound` blocks in the toolbox should help you out!
      courseC_PlayLab_events8_2018_authored_hint:
        courseC_PlayLab_events8_a: You will need to connect blocks to the `when actor touches` block to make this happen correctly.
        courseC_PlayLab_events8_b: The `actor say` and `play sound` blocks in the toolbox should help you out!
      courseC_PlayLab_events9_authored_hint:
        courseC_PlayLab_events9_a: The `score point` block will help you to solve this puzzle.
        courseC_PlayLab_events9_b: Yeni 'aktör dokunduğunda' bloğunuzun aktör  **1** ve aktör **3** dediğinden emin olun.
        courseC_PlayLab_events9_c: Çalışma alanında aynı anda birden fazla `aktör dokunduğunda' olay bloğu kullanabilirsin, bu sebeple ilkini silmene gerek yok!
      courseC_PlayLab_events9_2018_authored_hint:
        courseC_PlayLab_events9_a: The `score point` block will help you to solve this puzzle.
        courseC_PlayLab_events9_b: Yeni 'aktör dokunduğunda' bloğunuzun aktör  **1** ve aktör **3** dediğinden emin olun.
        courseC_PlayLab_events9_c: Çalışma alanında aynı anda birden fazla `aktör dokunduğunda' olay bloğu kullanabilirsin, bu sebeple ilkini silmene gerek yok!
      courseC_PlayLab_eventsA_authored_hint:
        courseC_PlayLab_eventsA_a: Use the `set background` block and the `set actor to a ____ speed` block to solve this puzzle.
        courseC_PlayLab_eventsA_b: Bulmacayı çözmek için`çalıştığı zaman` olay bloğunu çalışma alanına sürüklemeye ihtiyacın olacak.
      courseC_PlayLab_eventsA_2018_authored_hint:
        courseC_PlayLab_eventsA_a: Use the `set background` block and the `set actor to a ____ speed` block to solve this puzzle.
        courseC_PlayLab_eventsA_b: Bulmacayı çözmek için`çalıştığı zaman` olay bloğunu çalışma alanına sürüklemeye ihtiyacın olacak.
      courseC_PlayLab_eventsFP_authored_hint:
        idea1: |-
          *Need an idea?*
          
          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.
          
          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Need an idea?*
          
          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.
          
          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Need an idea?*
          
          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      courseC_PlayLab_eventsFP_2018_authored_hint:
        idea1: |-
          *Need an idea?*
          
          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.
          
          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Need an idea?*
          
          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.
          
          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Need an idea?*
          
          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      courseC_PlayLab_events_challenge1_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          Oyuncuları oyun alanında farklı yerlere taşımak için bu bloğu kullanabilirsiniz.
          <xml> <block type="studio_setSpritePosition">
          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Diğer aktörlerden biri dokunursa 'Aktör 1 sol orta konuma ayarla' blokunu kullanmayı deneyin. Bu oyunu yeniden başlatacaktır böylece kullanıcı denemeye devam edebilir!
        courseC_PlayLab_events_challenge_c: |-
          Oyunu daha kolay ya da daha mücadele dolu yapmak için farklı karakterlerin hızlarını değiştirebilirsin!
          <xml>  <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2018_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          Oyuncuları oyun alanında farklı yerlere taşımak için bu bloğu kullanabilirsiniz.
          <xml> <block type="studio_setSpritePosition">
          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Diğer aktörlerden biri dokunursa 'Aktör 1 sol orta konuma ayarla' blokunu kullanmayı deneyin. Bu oyunu yeniden başlatacaktır böylece kullanıcı denemeye devam edebilir!
        courseC_PlayLab_events_challenge_c: |-
          Oyunu daha kolay ya da daha mücadele dolu yapmak için farklı karakterlerin hızlarını değiştirebilirsin!
          <xml>  <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_xy_blocks_authored_hint:
        courseC_PlayLab_events_challenge_a: Bu bloktaki iki değer, bir aktörü oyun alanında herhangi bir piksele taşımanıza izin verir. 0-400 arasında herhangi bir sayı seçebilirsiniz.
        courseC_PlayLab_events_challenge_b: |-
          Sol üst köşeden ne kadar uzaklaşmak istediğinizi düşünerek, hangi sayıları kullanacağınıza karar verebilirsiniz. Birinci sayı sol tarafa olan uzaklığın piksel sayıdır. İkinci sayı üst tarafa olan uzaklığın piksel sayısıdır.
          <xml><block type="studio_setSpriteXY" inline="true">
          <value name="SPRITE">
          <block type="math_number" movable="false">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="XPOS">
          <block type="math_number" movable="false">
          <title name="NUM">37</title>
          </block>
          </value>
          <value name="YPOS">
          <block type="math_number" movable="false">
          <title name="NUM">187</title>
          </block>
          </value>
          </block></xml>
          ![](https://images.code.org/b1559bf476ceb59f880c43271c5e10b2-image-1494111787192.59.49 PM.png)
      courseC_artist_loop1_authored_hint:
        courseC_artist_loop1_a: Döngüde herhangi bir değişiklik yapman gerekmiyor, sadece döngünün üstüne bir blok koy.
        courseC_artist_loop1_b: |-
          Bir desen atamak için ihtiyacın olan blok bu:
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
          
          
          İstediğin herhangi bir deseni seç!
      courseC_artist_loop1_2018_authored_hint:
        courseC_artist_loop1_a: Döngüde herhangi bir değişiklik yapman gerekmiyor, sadece döngünün üstüne bir blok koy.
        courseC_artist_loop1_b: |-
          Bir desen atamak için ihtiyacın olan blok bu:
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
          
          
          İstediğin herhangi bir deseni seç!
      courseC_artist_loops1a_authored_hint:
        courseC_artist_loops1a_a: |-
          İhtiyacın olan ilk blok bu:
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
          
        courseC_artist_loops1a_b: |-
          Etiketi çizmek için bu bloğu kullan!
          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2018_authored_hint:
        courseC_artist_loops1a_a: |-
          İhtiyacın olan ilk blok bu:
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
          
        courseC_artist_loops1a_b: |-
          Etiketi çizmek için bu bloğu kullan!
          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops2a_authored_hint:
        courseC_artist_loops2a_a: Döngünün içinde 200 yukarı 200 aşağı zıplamalı, ardından kuş etiketi çizip 30 derece dönmelisin.
        courseC_artist_loops2a_b: Kaç defa tekrar edeceğini değiştirmek için 'tekrarla' döngüsünün üstündeki sayıya tıkla.
      courseC_artist_loops2a_2018_authored_hint:
        courseC_artist_loops2a_a: Döngünün içinde 200 yukarı 200 aşağı zıplamalı, ardından kuş etiketi çizip 30 derece dönmelisin.
        courseC_artist_loops2a_b: Kaç defa tekrar edeceğini değiştirmek için 'tekrarla' döngüsünün üstündeki sayıya tıkla.
      courseC_artist_loops3a_authored_hint:
        courseC_artist_loops3a_a: Kuş etiketinden sonra, döngünün içine yalnızca bir blok eklemek isteyeceksin.
        courseC_artist_loops3a_b: Yarasa etiketini bulmak için 'etiket çiz' bloğunun üzerindeki açılır menüyü kullan.
      courseC_artist_loops3a_2018_authored_hint:
        courseC_artist_loops3a_a: Kuş etiketinden sonra, döngünün içine yalnızca bir blok eklemek isteyeceksin.
        courseC_artist_loops3a_b: Yarasa etiketini bulmak için 'etiket çiz' bloğunun üzerindeki açılır menüyü kullan.
      courseC_artist_loops4a_authored_hint:
        courseC_artist_loops4a_a: |-
          İleri atlamak için bu bloğu kullan:
          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>
          
          Ne kadar uzunlukta olacağını değiştirmeyi unutma!
      courseC_artist_loops4a_2018_authored_hint:
        courseC_artist_loops4a_a: |-
          İleri atlamak için bu bloğu kullan:
          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>
          
          Ne kadar uzunlukta olacağını değiştirmeyi unutma!
      courseC_artist_loops5_authored_hint:
        courseC_artist_loops5_a: |-
          Sanatçınızı sahnenin ortasına doğru getirmek için `atla ' bloğunu kullanmayı deneyin:
          
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">100</title>
          <title name="YPOS">100</title>
          </block>
          </xml>
      courseC_artist_loops5a_authored_hint:
        courseC_artist_loops5a_a: '''etiket çiz'' bloklarının resimlerini değiştirmek için üzerlerindeki açılır menüleri kullan.'
      courseC_artist_loops5a_2018_authored_hint:
        courseC_artist_loops5a_a: '''etiket çiz'' bloklarının resimlerini değiştirmek için üzerlerindeki açılır menüleri kullan.'
      courseC_artist_loops5b_authored_hint:
        courseC_artist_loops5b_a: |-
          Çizgilerinin desenini ayarlamak için bu bloğu kullan:
          
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Yukarıdaki gibi bir tasarım oluşturmak için, ileriye gittiğin kadar mesafede geriye gitmek isteyeceksin.
      courseC_artist_loops5b_2018_authored_hint:
        courseC_artist_loops5b_a: |-
          Çizgilerinin desenini ayarlamak için bu bloğu kullan:
          
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Yukarıdaki gibi bir tasarım oluşturmak için, ileriye gittiğin kadar mesafede geriye gitmek isteyeceksin.
      courseC_artist_loops6_authored_hint:
        courseC_artist_loops6_a: |
          Üçgen çiçek deneyin:
          <img src="https://images.code.org/4248a974a7631c4240effba06fdee731-image-1495821015097.49.18.png" width="150px" />
          
          Ya da biraz yeşil bir böcek:
          <img src="https://images.code.org/b9454d6f1159e19c58d9f5b5b37fd156-image-1495821067980.52.43.png" width="150px" />
      courseC_artist_loops6a_authored_hint:
        courseC_artist_loops6a_a: Yukarıdaki gibi bir tasarım oluşturmak için her etiketin arasında 75 pikselden daha az olacak şekilde ileriye atla.
      courseC_artist_loops6a_2018_authored_hint:
        courseC_artist_loops6a_a: Yukarıdaki gibi bir tasarım oluşturmak için her etiketin arasında 75 pikselden daha az olacak şekilde ileriye atla.
      courseC_artist_loops7a_authored_hint:
        courseC_artist_loops7a_a: |-
          Dairenin iç açısı 360 derece olduğundan, dönüşteki açı değeri ve döngü sayının çarpımı 360'a eşit olmalıdır. Bunun nasıl çalıştığını görmek için önerilen rotayı kontrol edin!
      courseC_artist_loops7a_2018_authored_hint:
        courseC_artist_loops7a_a: |-
          Dairenin iç açısı 360 derece olduğundan, dönüşteki açı değeri ve döngü sayının çarpımı 360'a eşit olmalıdır. Bunun nasıl çalıştığını görmek için önerilen rotayı kontrol edin!
      courseC_artist_loopsPre1a_authored_hint:
        courseC_artist_loopsPre1a_a: Döngünüzün içine 'dön' bloğunu koymayı unutmayın.
        courseC_artist_loopsPre1a_b: '''Tekrarla'' döngüsünün 3 bloğu içermesi gerekirdi: ''200 yukarı 200 aşağı atla'', ''50 piksel ilerle'' ve ''60 derece sağa dön''.'
      courseC_artist_loopsPre1a_2018_authored_hint:
        courseC_artist_loopsPre1a_a: Döngünüzün içine 'dön' bloğunu koymayı unutmayın.
        courseC_artist_loopsPre1a_b: '''Tekrarla'' döngüsünün 3 bloğu içermesi gerekirdi: ''200 yukarı 200 aşağı atla'', ''50 piksel ilerle'' ve ''60 derece sağa dön''.'
      courseC_artist_loopsPrePre1a_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          İhtiyaç duyacağın ilk blok budur:
          
          ![](https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png)
        courseC_artist_loopsPrePre1a_b: |-
          50 piksel ilerlemek için bu bloğu kullanın: https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png
      courseC_artist_loopsPrePre1a_2018_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          İhtiyaç duyacağın ilk blok budur:
          
          ![](https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png)
        courseC_artist_loopsPrePre1a_b: |-
          50 piksel ilerlemek için bu bloğu kullanın: https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png
      courseC_artist_prog1_authored_hint: [ ]
      courseC_artist_prog1_2018_authored_hint: [ ]
      courseC_artist_prog2_authored_hint:
        courseC_artist_prog2_a: 'Eğer ''İleriye Taşı 100 Piksel'' blokunu kullanırsan, otomatik olarak bir çizgi çizeceğim.'
        courseC_artist_prog2_b: Köşeyi çevirirken sorun mu yaşıyorsunuz? `90 derece sağa dön` bloğunu kullanın.
      courseC_artist_prog2_2018_authored_hint:
        courseC_artist_prog2_a: 'Eğer ''İleriye Taşı 100 Piksel'' blokunu kullanırsan, otomatik olarak bir çizgi çizeceğim.'
        courseC_artist_prog2_b: Köşeyi çevirirken sorun mu yaşıyorsunuz? `90 derece sağa dön` bloğunu kullanın.
      courseC_artist_prog3_authored_hint:
        courseC_artist_prog3_a: |-
          To create this window, just draw a square with 100 pixel sides.
          - move forward
          - turn
          - move forward
          - turn
          - move forward
          - turn
          - move forward
        courseC_artist_prog3_b: Daha kısa kodla yapmak ister misin? Bu bulmacada 'Tekrar' (repeat) döngüsü kullanmayı deneyin.
      courseC_artist_prog3_2018_authored_hint:
        courseC_artist_prog3_a: |-
          To create this window, just draw a square with 100 pixel sides.
          - move forward
          - turn
          - move forward
          - turn
          - move forward
          - turn
          - move forward
        courseC_artist_prog3_b: Daha kısa kodla yapmak ister misin? Bu bulmacada 'Tekrar' (repeat) döngüsü kullanmayı deneyin.
      courseC_artist_prog4_authored_hint:
        courseC_artist_prog4_a: To finish the rocket, just draw the triangle on top!
        courseC_artist_prog4_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog4_c: |2
          Bir üçgen çizmek için:
          - ilerle
          - 120 derece sola dön
           - ilerle
           - 120 derece sola dön
           - ilerle
      courseC_artist_prog4_2018_authored_hint:
        courseC_artist_prog4_a: To finish the rocket, just draw the triangle on top!
        courseC_artist_prog4_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog4_c: |2
          Bir üçgen çizmek için:
          - ilerle
          - 120 derece sola dön
           - ilerle
           - 120 derece sola dön
           - ilerle
      courseC_artist_prog5_authored_hint:
        courseC_artist_prog5_a: Slow the slider down all the way until you can run your code line-by-line to see where things go wrong.
        courseC_artist_prog5_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_artist_prog5_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog5_d: Her sağa dönüş 90 derece olmalıdır.
      courseC_artist_prog5_2018_authored_hint:
        courseC_artist_prog5_a: Slow the slider down all the way until you can run your code line-by-line to see where things go wrong.
        courseC_artist_prog5_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_artist_prog5_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog5_d: Her sağa dönüş 90 derece olmalıdır.
      courseC_artist_prog6_authored_hint:
        courseC_artist_prog6_a: The artist is already facing the correct way to draw his first line.
        courseC_artist_prog6_b: This diamond is really just a square that's standing on its corner.
        courseC_artist_prog6_c: Since this diamond is also a square, be sure to turn 90 degrees at the corners.
      courseC_artist_prog6_2018_authored_hint:
        courseC_artist_prog6_a: The artist is already facing the correct way to draw his first line.
        courseC_artist_prog6_b: This diamond is really just a square that's standing on its corner.
        courseC_artist_prog6_c: Since this diamond is also a square, be sure to turn 90 degrees at the corners.
      courseC_artist_prog6_predict1_authored_hint: [ ]
      courseC_artist_prog6_predict1_2018_authored_hint: [ ]
      courseC_artist_prog7_authored_hint:
        courseC_artist_prog7_a: Every angle is either 45 or 90 degrees.
        courseC_artist_prog7_b: "Does it work at the first step?  \nHow about the second?  \nWhere does it go wrong?"
        courseC_artist_prog7_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog7_d: |-
          Bu kodu 2 kere tekrar etmelisin:
          - ilerle
          - sağa 45 derece dön
          - ilerle
          - sağa 90 derece dön
          - ilerle
          - sağa 45 derece dön
          
        courseC_artist_prog7_e: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_artist_prog7_2018_authored_hint:
        courseC_artist_prog7_a: Every angle is either 45 or 90 degrees.
        courseC_artist_prog7_b: "Does it work at the first step?  \nHow about the second?  \nWhere does it go wrong?"
        courseC_artist_prog7_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseC_artist_prog7_d: |-
          Bu kodu 2 kere tekrar etmelisin:
          - ilerle
          - sağa 45 derece dön
          - ilerle
          - sağa 90 derece dön
          - ilerle
          - sağa 45 derece dön
          
        courseC_artist_prog7_e: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_artist_prog8_authored_hint: [ ]
      courseC_artist_prog8_2018_authored_hint: [ ]
      courseC_artist_prog_challenge1-doghouse_authored_hint:
        courseC_artist_prog7_a: 60 derecelik açı kullanarak çatı yapın.
      courseC_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: Bunu ortasından bir çizgi geçen bir dikdörtgen olarak veya iki farklı kare olarak çizebilirsiniz!
      courseC_artist_prog_challenge1_2018_authored_hint:
        courseC_artist_prog_challenge1_a: Bunu ortasından bir çizgi geçen bir dikdörtgen olarak veya iki farklı kare olarak çizebilirsiniz!
      courseC_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: "Komutları tekrar tekrar döngülemek için `tekrar et` bloğuna yerleştirebilirsiniz. Deneyin!\n<xml>\n  \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n                <title name=\"DIR\">ilerle</title>\n                <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">ileri atla</title>\n                    <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n                </next>\n              </block>\n              </statement></block></xml>"
      courseC_artist_prog_challenge2a_authored_hint:
        courseC_artist_prog_challenge2_a: İlk satırı çizdikten sonra, ikinci satırı çizmeden önce sola dönmeyi deneyin.
        courseC_artist_prog_challenge2_b: İkinci satırı çizdikten sonra, üçüncü satırı çizmeden önce sağa dönmeyi deneyin.
      courseC_artist_prog_challenge2a_2018_authored_hint:
        courseC_artist_prog_challenge2_a: İlk satırı çizdikten sonra, ikinci satırı çizmeden önce sola dönmeyi deneyin.
        courseC_artist_prog_challenge2_b: İkinci satırı çizdikten sonra, üçüncü satırı çizmeden önce sağa dönmeyi deneyin.
      courseC_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_b: Döngüler kullanın, böylece `topla 'blokları bitmez!
      courseC_collector_loops_challenge2_2018_authored_hint:
        courseC_maze_loops_challenge2_b: Döngüler kullanın, böylece `topla 'blokları bitmez!
      courseC_collector_prog1_authored_hint:
        courseC_collector_prog1_a: Hazinenin olduğu bir alan üzerinde duruyorsan, hazineyi toplamak için 'topla' <xml><block type="collector_collect"/></xml>bloğunu kullan.
        courseC_collector_prog1_b: En basit çözüm, bir defa ilerleyip sonra hazineyi toplamak olacak.
      courseC_collector_prog1_2018_authored_hint:
        courseC_collector_prog1_a: Hazinenin olduğu bir alan üzerinde duruyorsan, hazineyi toplamak için 'topla' <xml><block type="collector_collect"/></xml>bloğunu kullan.
        courseC_collector_prog1_b: En basit çözüm, bir defa ilerleyip sonra hazineyi toplamak olacak.
      courseC_collector_prog2_authored_hint:
        courseC_collector_prog2_a: You can use four <xml><block type="maze_move"><title name="DIR">moveForward</title></block></xml> blocks or use the <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> block to make your program shorter.
        courseC_collector_prog2_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_collector_prog2_2018_authored_hint:
        courseC_collector_prog2_a: You can use four <xml><block type="maze_move"><title name="DIR">moveForward</title></block></xml> blocks or use the <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> block to make your program shorter.
        courseC_collector_prog2_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_collector_prog3_authored_hint:
        courseC_collector_prog3_a: The program will only run the blocks that are connected to the <xml><block type="when_run"/></xml> block.
        courseC_collector_prog3_b: Try using the "Step" button to run your code one line at a time.  Do you see where the code goes wrong?
        courseC_collector_prog3_c: Bu bulmacanın çözümünü bulmakta zorlanıyorsanız, yapacağınız hamleleri bir kağıda yazmayı deneyin.
      courseC_collector_prog3_2018_authored_hint:
        courseC_collector_prog3_a: The program will only run the blocks that are connected to the <xml><block type="when_run"/></xml> block.
        courseC_collector_prog3_b: Try using the "Step" button to run your code one line at a time.  Do you see where the code goes wrong?
        courseC_collector_prog3_c: Bu bulmacanın çözümünü bulmakta zorlanıyorsanız, yapacağınız hamleleri bir kağıda yazmayı deneyin.
      courseC_collector_prog4_authored_hint:
        courseC_collector_prog4_a: Zorlandığınız durumlarda, adımları bir kağıt parçası üzerine yazmayı deneyin.
        courseC_collector_prog4_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_collector_prog4_c: Bir yol için bu seçeneği deneyin.
      courseC_collector_prog4_2018_authored_hint:
        courseC_collector_prog4_a: Zorlandığınız durumlarda, adımları bir kağıt parçası üzerine yazmayı deneyin.
        courseC_collector_prog4_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_collector_prog4_c: Bir yol için bu seçeneği deneyin.
      courseC_collector_prog5_authored_hint:
        courseC_collector_prog5_a: "\"Does it work at the first step?\nDoes it work at the second step? \nWhere do things go wrong?\""
        courseC_collector_prog5_b: If you fixed one bug and the program still doesn't work, use the steps above to find more bugs.
        courseC_collector_prog5_c: Zorlandığınız durumlarda, adımları bir kağıt parçası üzerine yazmayı deneyin.
        courseC_collector_prog5_d: Hazineyi toplamak için yolu takip edin.
      courseC_collector_prog5_2018_authored_hint:
        courseC_collector_prog5_a: "\"Does it work at the first step?\nDoes it work at the second step? \nWhere do things go wrong?\""
        courseC_collector_prog5_b: If you fixed one bug and the program still doesn't work, use the steps above to find more bugs.
        courseC_collector_prog5_c: Zorlandığınız durumlarda, adımları bir kağıt parçası üzerine yazmayı deneyin.
        courseC_collector_prog5_d: Hazineyi toplamak için yolu takip edin.
      courseC_collector_prog6_authored_hint:
        courseC_collector_prog6_a: "Can you figure out what is going wrong?  \n\nTry using the \"Step\" button to find errors by running your code line by line."
        courseC_collector_prog6_b: Takıldın mı? Hazineyi toplamak için bu yolu dene.
      courseC_collector_prog6_2018_authored_hint:
        courseC_collector_prog6_a: "Can you figure out what is going wrong?  \n\nTry using the \"Step\" button to find errors by running your code line by line."
        courseC_collector_prog6_b: Takıldın mı? Hazineyi toplamak için bu yolu dene.
      courseC_collector_prog7_authored_hint:
        courseC_collector_prog7_a: 'There is already a lot of great code in the workspace.  You don''t need to delete any of it to solve this puzzle.  '
        courseC_collector_prog7_b: Don't see the block you need to get the adventurer moving in the right direction?  Pull one from the toolbox.
        courseC_collector_prog7_c: Bütün hazineleri toplamak için bir rota görmekte zorluk mu yaşıyorsunuz? Bu yolu deneyin!
      courseC_collector_prog7_2018_authored_hint:
        courseC_collector_prog7_a: 'There is already a lot of great code in the workspace.  You don''t need to delete any of it to solve this puzzle.  '
        courseC_collector_prog7_b: Don't see the block you need to get the adventurer moving in the right direction?  Pull one from the toolbox.
        courseC_collector_prog7_c: Bütün hazineleri toplamak için bir rota görmekte zorluk mu yaşıyorsunuz? Bu yolu deneyin!
      courseC_collector_prog8_authored_hint: [ ]
      courseC_collector_prog8_2018_authored_hint: [ ]
      courseC_collector_prog9_authored_hint: [ ]
      courseC_collector_prog9_2018_authored_hint: [ ]
      courseC_collector_progA_authored_hint:
        courseC_collector_progA_a: Try using the "Step" button to go through your code line by line.
      courseC_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık "toplama" komutunu kullanabilirsiniz.
      courseC_collector_prog_challenge1_2018_authored_hint:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık "toplama" komutunu kullanabilirsiniz.
      courseC_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık "toplama" komutunu kullanabilirsiniz.
        courseC_collector_prog_challenge1_b: Yolunuzu mu kaybettiniz? Bulmacayı çözmek için bu yolu deneyin!
      courseC_collector_prog_challenge2_2018_authored_hint:
        courseC_collector_prog_challenge1_a: Ekstra hazineyi toplamak için daha sık "toplama" komutunu kullanabilirsiniz.
        courseC_collector_prog_challenge1_b: Yolunuzu mu kaybettiniz? Bulmacayı çözmek için bu yolu deneyin!
      courseC_external_events_authored_hint: [ ]
      courseC_flappy_events1_authored_hint:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2018_authored_hint:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events2_authored_hint:
        courseC_flappy_events2_a: 'Eklemen gereken blok, ''hızı ayarla'' bloğudur. '
        courseC_flappy_events2_b: Bulmacayı çözmek için 'hızı ayarla' bloğunu 'çalıştığı zaman' bloğuna bağla.
      courseC_flappy_events2_2018_authored_hint:
        courseC_flappy_events2_a: 'Eklemen gereken blok, ''hızı ayarla'' bloğudur. '
        courseC_flappy_events2_b: Bulmacayı çözmek için 'hızı ayarla' bloğunu 'çalıştığı zaman' bloğuna bağla.
      courseC_flappy_events3_authored_hint:
        courseC_flappy_events3_a: Eğer bir şeyler doğru çalışmazsa, bloklarının çalışma alanındaki doğru olaylarla bağlandığına emin ol.
      courseC_flappy_events3_2018_authored_hint:
        courseC_flappy_events3_a: Eğer bir şeyler doğru çalışmazsa, bloklarının çalışma alanındaki doğru olaylarla bağlandığına emin ol.
      courseC_flappy_events4_authored_hint:
        courseC_flappy_events4_a: Bulmacayı çözmek için 'oyunu sonlandır' bloğunu 'bir engele çarptığı zaman' bloğuna bağla.
      courseC_flappy_events4_2018_authored_hint:
        courseC_flappy_events4_a: Bulmacayı çözmek için 'oyunu sonlandır' bloğunu 'bir engele çarptığı zaman' bloğuna bağla.
      courseC_flappy_events5_authored_hint:
        courseC_flappy_events5_a: Bu seviyeyi geçmek için 'puan al' bloğunu kullanman gerekecek.
      courseC_flappy_events5_2018_authored_hint:
        courseC_flappy_events5_a: Bu seviyeyi geçmek için 'puan al' bloğunu kullanman gerekecek.
      courseC_flappy_events6_authored_hint:
        courseC_flappy_events6_a: '` ____ kadar kanat çırp`bloğunu`tıkladığında` bloğuna bağlamaya çalışın.'
      courseC_flappy_events6_2018_authored_hint:
        courseC_flappy_events6_a: '` ____ kadar kanat çırp`bloğunu`tıkladığında` bloğuna bağlamaya çalışın.'
      courseC_flappy_events7_authored_hint:
        courseC_flappy_events7_a: '''Sahneyi ayarla'' bloğunu kullanarak arka planı değiştirebilirsin. '
      courseC_flappy_events7_2018_authored_hint:
        courseC_flappy_events7_a: '''Sahneyi ayarla'' bloğunu kullanarak arka planı değiştirebilirsin. '
      courseC_flappy_events8_authored_hint:
        courseC_flappy_events8_a: Bu seviyeyi geçmek için ikinci 'sahneyi ayarla' bloğunu 'engeli geçtiği zaman' bloğunun altına eklemeyi dene.
      courseC_flappy_events8_2018_authored_hint:
        courseC_flappy_events8_a: Bu seviyeyi geçmek için ikinci 'sahneyi ayarla' bloğunu 'engeli geçtiği zaman' bloğunun altına eklemeyi dene.
      courseC_flappy_events9_authored_hint:
        courseC_flappy_events9_a: Bu seviyeyi geçmek için 'puanı 0 yap' bloğunu 'bir engele çarptığında' bloğuna bağla.
      courseC_flappy_events9_2018_authored_hint:
        courseC_flappy_events9_a: Bu seviyeyi geçmek için 'puanı 0 yap' bloğunu 'bir engele çarptığında' bloğuna bağla.
      courseC_flappy_events_template_authored_hint: [ ]
      courseC_flappy_events_template_2018_authored_hint: [ ]
      courseC_harvester_loops1_authored_hint:
        courseC_harvester_loops1_a: Bir balkabağına geldikten sonra, onu toplamak için <xml><block type="harvester_pumpkin"/></xml> bloğunu kullanın.
        courseC_harvester_loops1_b: Alandan birden fazla balkabağı toplamak için 'Balkabağı topla' <xml><block type="harvester_pumpkin"/></xml>bloğunun etrafına bir 'tekrarla' bloğu ekleyebilirsin.
      courseC_harvester_loops10_authored_hint: [ ]
      courseC_harvester_loops10_2018_authored_hint: [ ]
      courseC_harvester_loops11_authored_hint: [ ]
      courseC_harvester_loops11_2018_authored_hint: [ ]
      courseC_harvester_loops1_2018_authored_hint:
        courseC_harvester_loops1_a: Bir balkabağına geldikten sonra, onu toplamak için <xml><block type="harvester_pumpkin"/></xml> bloğunu kullanın.
        courseC_harvester_loops1_b: Alandan birden fazla balkabağı toplamak için 'Balkabağı topla' <xml><block type="harvester_pumpkin"/></xml>bloğunun etrafına bir 'tekrarla' bloğu ekleyebilirsin.
      courseC_harvester_loops2_authored_hint:
        courseC_harvester_loops2_a: Zorlandığınız durumlarda, adımları kağıt üzerinde yazmayı deneyin ve tekrar eden adımları bulun.
        courseC_harvester_loops2_b: Birbiri ardına, birer `tekrarla` döngüsüne ihtiyacınız olacak.
        courseC_harvester_loops2_c: Bir döngü 'ilerle' komutunu tekrar edecek, ve diğeri de 'balkabağı topla' komutunu tekrarlayacak.
      courseC_harvester_loops2_2018_authored_hint:
        courseC_harvester_loops2_a: Zorlandığınız durumlarda, adımları kağıt üzerinde yazmayı deneyin ve tekrar eden adımları bulun.
        courseC_harvester_loops2_b: Birbiri ardına, birer `tekrarla` döngüsüne ihtiyacınız olacak.
        courseC_harvester_loops2_c: Bir döngü 'ilerle' komutunu tekrar edecek, ve diğeri de 'balkabağı topla' komutunu tekrarlayacak.
      courseC_harvester_loops3_authored_hint:
        courseC_harvester_loops3_a: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_harvester_loops3_b: İlk balkabakları için son bulmacadakine çok benzer kodlar kullanabilirsin. Devamında hangi yola dönmeli?
        courseC_harvester_loops3_c: Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir.
      courseC_harvester_loops3_2018_authored_hint:
        courseC_harvester_loops3_a: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseC_harvester_loops3_b: İlk balkabakları için son bulmacadakine çok benzer kodlar kullanabilirsin. Devamında hangi yola dönmeli?
        courseC_harvester_loops3_c: Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir.
      courseC_harvester_loops4_authored_hint:
        courseC_harvester_loops4_a: Mısır toplamak için yeni 'mısır topla' bloğunu kullan.
        courseC_harvester_loops4_b: Kodlarında birden fazla tekrarla döngüsü kullanabilirsin, bazıları mısır toplamak için, bazıları da balkabaklarını toplamak için.
        courseC_harvester_loops4_c: Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir.
      courseC_harvester_loops4_2018_authored_hint:
        courseC_harvester_loops4_a: Mısır toplamak için yeni 'mısır topla' bloğunu kullan.
        courseC_harvester_loops4_b: Kodlarında birden fazla tekrarla döngüsü kullanabilirsin, bazıları mısır toplamak için, bazıları da balkabaklarını toplamak için.
        courseC_harvester_loops4_c: Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir.
      courseC_harvester_loops5_authored_hint:
        courseC_harvester_loops5_a: Zorlandığınız durumlarda, adımları kağıt üzerinde yazmayı ve tekrar eden desenleri bulmayı deneyin.
        courseC_harvester_loops5_b: Bu merdiven basamağı diğer bulmacalarla benzerlik gösteriyor mu? Hareketler benzer olmalı, sadece yol boyunca bitkileri toplamayı unutmayın.
      courseC_harvester_loops5_2018_authored_hint:
        courseC_harvester_loops5_a: Zorlandığınız durumlarda, adımları kağıt üzerinde yazmayı ve tekrar eden desenleri bulmayı deneyin.
        courseC_harvester_loops5_b: Bu merdiven basamağı diğer bulmacalarla benzerlik gösteriyor mu? Hareketler benzer olmalı, sadece yol boyunca bitkileri toplamayı unutmayın.
      courseC_harvester_loops6_authored_hint:
        courseC_harvester_loops6_a: Bir tekrarla döngüsü içine birden fazla blok ekleyebileceğini unutma.
        courseC_harvester_loops6_b: Mısır sırasının sonunda dönmeyi unutma.
      courseC_harvester_loops6_2018_authored_hint:
        courseC_harvester_loops6_a: Bir tekrarla döngüsü içine birden fazla blok ekleyebileceğini unutma.
        courseC_harvester_loops6_b: Mısır sırasının sonunda dönmeyi unutma.
      courseC_harvester_loops7_authored_hint:
        courseC_harvester_loops7_a: Bu bulmacayı iki yolla çözebilirsin, ilk olarak balkabaklarını ya da mısırları alabilirsin.
        courseC_harvester_loops7_b: Bu bulmacayı çözmek için birden fazla 'tekrarla' döngüsüne ihtiyacın olacak.
      courseC_harvester_loops7_2018_authored_hint:
        courseC_harvester_loops7_a: Bu bulmacayı iki yolla çözebilirsin, ilk olarak balkabaklarını ya da mısırları alabilirsin.
        courseC_harvester_loops7_b: Bu bulmacayı çözmek için birden fazla 'tekrarla' döngüsüne ihtiyacın olacak.
      courseC_harvester_loops8_authored_hint:
        courseC_harvester_loops8_a: Bu merdiven basamağı önceki bulmacayla benzerlik gösteriyor mu? Hareketler benzer olmalı, sadece yol boyunca ekinleri toplamayı unutmayın.
        courseC_harvester_loops8_b: Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir.
      courseC_harvester_loops8_2018_authored_hint:
        courseC_harvester_loops8_a: Bu merdiven basamağı önceki bulmacayla benzerlik gösteriyor mu? Hareketler benzer olmalı, sadece yol boyunca ekinleri toplamayı unutmayın.
        courseC_harvester_loops8_b: Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir.
      courseC_harvester_loops9_authored_hint: [ ]
      courseC_harvester_loops9_2018_authored_hint: [ ]
      courseC_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: Döngü kullanmadan bunu yapmak çook zor!
        courseC_harvester_loops_challenge1_b: '`ilerle` ve `mısır al`ı ihtiyacın olduğu kadar tekrar edip, her köşede `sağa dön` yapabilirsin.'
        courseC_harvester_loops_challenge1_c: |-
          İlk dört mısırı toplamanın en iyi yolu, 'tekrarla' bloğunun içinde başka bir 'tekrarla' bloğunu kullanmaktır. Bu deseni bulmacanın geri kalanı için de kullanabilirsin. 
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge1a_authored_hint:
        courseC_harvester_loops_challenge1_a: Döngü kullanmadan bunu yapmak çook zor!
        courseC_harvester_loops_challenge1_b: '`ilerle` ve `mısır al`ı ihtiyacın olduğu kadar tekrar edip, her köşede `sağa dön` yapabilirsin.'
        courseC_harvester_loops_challenge1_c: |-
          İlk dört mısırı toplamanın en iyi yolu, 'tekrarla' bloğunun içinde başka bir 'tekrarla' bloğunu kullanmaktır. Bu deseni bulmacanın geri kalanı için de kullanabilirsin. 
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge1a_2018_authored_hint:
        courseC_harvester_loops_challenge1_a: Döngü kullanmadan bunu yapmak çook zor!
        courseC_harvester_loops_challenge1_b: '`ilerle` ve `mısır al`ı ihtiyacın olduğu kadar tekrar edip, her köşede `sağa dön` yapabilirsin.'
        courseC_harvester_loops_challenge1_c: |-
          İlk dört mısırı toplamanın en iyi yolu, 'tekrarla' bloğunun içinde başka bir 'tekrarla' bloğunu kullanmaktır. Bu deseni bulmacanın geri kalanı için de kullanabilirsin. 
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_a: Bunu çözmenin bir yolu zikzak gibi görünüyor. Bir diğer yol sarmal gibi görünüyor. Bunun gibi bir bulmacayı çözmenin birçok farklı yolu var. Israrcı ol!
        courseC_harvester_loops_challenge2_b: İhtiyaç duyduğun kadar 'ilerle' ve 'marul al' komutlarını tekrar edip, sonra her köşede dönebilirsin.
        courseC_harvester_loops_challenge2_c: |
          Sadece 20 blok ile bulmacayı bitirmek için bu zik-zak deseni iki kez tekrarlanabilir. 
          
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          Bu sarmal desen sadece 18 blok ile kodlanabilir!
          
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      courseC_harvester_loops_challenge2_2018_authored_hint:
        courseC_harvester_loops_challenge2_a: Bunu çözmenin bir yolu zikzak gibi görünüyor. Bir diğer yol sarmal gibi görünüyor. Bunun gibi bir bulmacayı çözmenin birçok farklı yolu var. Israrcı ol!
        courseC_harvester_loops_challenge2_b: İhtiyaç duyduğun kadar 'ilerle' ve 'marul al' komutlarını tekrar edip, sonra her köşede dönebilirsin.
        courseC_harvester_loops_challenge2_c: |
          Sadece 20 blok ile bulmacayı bitirmek için bu zik-zak deseni iki kez tekrarlanabilir. 
          
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          Bu sarmal desen sadece 18 blok ile kodlanabilir!
          
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      courseC_harvester_loops_forVid_authored_hint: [ ]
      courseC_maze_debugging1_authored_hint:
        courseC_maze_debugging1_a: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging1_b: Bu bulmacayı tamamlamak için eklemeniz gereken 1 blok var.
      courseC_maze_debugging1_2018_authored_hint:
        courseC_maze_debugging1_a: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging1_b: Bu bulmacayı tamamlamak için eklemeniz gereken 1 blok var.
      courseC_maze_debugging2_authored_hint:
        courseC_maze_debugging2_a: There is a lot of valuable code in the workspace.  Don't just delete it all and start over!
        courseC_maze_debugging2_b: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging2_c: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu görmek için kodu bir kaç kere çalıştırmayı deneyin.
      courseC_maze_debugging2_2018_authored_hint:
        courseC_maze_debugging2_a: There is a lot of valuable code in the workspace.  Don't just delete it all and start over!
        courseC_maze_debugging2_b: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging2_c: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu görmek için kodu bir kaç kere çalıştırmayı deneyin.
      courseC_maze_debugging3_authored_hint:
        courseC_maze_debugging3_a: |-
          To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.
          
          Drag the block you want to delete back to the toolbox.
          
          Finally, put your other blocks back where they belong.
          
          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu görmek için kodu bir kaç kere çalıştırmayı deneyin.
      courseC_maze_debugging3_2018_authored_hint:
        courseC_maze_debugging3_a: |-
          To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.
          
          Drag the block you want to delete back to the toolbox.
          
          Finally, put your other blocks back where they belong.
          
          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Neyin yanlış olduğunu anlayamıyor musunuz? Ne olduğunu görmek için kodu bir kaç kere çalıştırmayı deneyin.
      courseC_maze_debugging4_authored_hint:
        courseC_maze_debugging4_a: Use the "Step" button to run through the instructions one at a time.  Does that help you find the line where things go wrong?
        courseC_maze_debugging4_b: Dönüşlerden biri, Scrat'ı yanlış yönde çeviriyor. Hangisi bulabilir misin?
      courseC_maze_debugging4_2018_authored_hint:
        courseC_maze_debugging4_a: Use the "Step" button to run through the instructions one at a time.  Does that help you find the line where things go wrong?
        courseC_maze_debugging4_b: Dönüşlerden biri, Scrat'ı yanlış yönde çeviriyor. Hangisi bulabilir misin?
      courseC_maze_debugging5_authored_hint:
        courseC_maze_debugging5_a: "There are lots of helpful blocks in the workspace already.  Don't delete them all! \n\nUse the \"Step\" button to go through and figure out where the code goes wrong."
        courseC_maze_debugging5_b: Try saying what Scrat should do out loud.  Is it the same as the code in the workspace?  What goes wrong?
      courseC_maze_debugging5_2018_authored_hint:
        courseC_maze_debugging5_a: "There are lots of helpful blocks in the workspace already.  Don't delete them all! \n\nUse the \"Step\" button to go through and figure out where the code goes wrong."
        courseC_maze_debugging5_b: Try saying what Scrat should do out loud.  Is it the same as the code in the workspace?  What goes wrong?
      courseC_maze_debugging6_authored_hint:
        courseC_maze_debugging6_a: |-
          - What is Scrat supposed to do?
          - What does Scrat do?
          - What does that tell you?
        courseC_maze_debugging6_b: |-
          Bir kez hatayı bulup düzeltirsen ikinciyi bulmak için hata ayıklamaya yeniden başla. Program çalışana kadar işlemi tekrarlayın!
      courseC_maze_debugging6_2018_authored_hint:
        courseC_maze_debugging6_a: |-
          - What is Scrat supposed to do?
          - What does Scrat do?
          - What does that tell you?
        courseC_maze_debugging6_b: |-
          Bir kez hatayı bulup düzeltirsen ikinciyi bulmak için hata ayıklamaya yeniden başla. Program çalışana kadar işlemi tekrarlayın!
      courseC_maze_debugging7_authored_hint:
        courseC_maze_debugging7_a: |-
          - Does everything work at the first step?
          - How about the second step?
          - Where does it go wrong?
        courseC_maze_debugging7_b: Don't forget to use the "Step" button to run the program line by line!
        courseC_maze_debugging7_c: |-
          After you find and fix the first bug, make sure to use the debugging process again to find the next one.
          
          Repeat the debugging process until the program works!
      courseC_maze_debugging7_2018_authored_hint:
        courseC_maze_debugging7_a: |-
          - Does everything work at the first step?
          - How about the second step?
          - Where does it go wrong?
        courseC_maze_debugging7_b: Don't forget to use the "Step" button to run the program line by line!
        courseC_maze_debugging7_c: |-
          After you find and fix the first bug, make sure to use the debugging process again to find the next one.
          
          Repeat the debugging process until the program works!
      courseC_maze_debugging8_authored_hint:
        courseC_maze_debugging8_a: |-
          - What is Scrat supposed to do?
          - What does Scrat do?
          - What does that tell you?
      courseC_maze_debugging8_predict1_authored_hint: [ ]
      courseC_maze_debugging8_predict1_2018_authored_hint: [ ]
      courseC_maze_debugging9_authored_hint: [ ]
      courseC_maze_debugging9_2018_authored_hint: [ ]
      courseC_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: Sola veya sağa? Bu size kalmış!
        courseC_maze_debugging_challenge1_b: Scrat'in yolu bir dikdörtgen şeklinde! Her seferinde aynı yöne dönmeli!
        courseC_maze_debugging_challenge1_c: Eğer sıkışırsan, her zaman baştan başlayabilir veya tüm kodları kaldırabilir ve kendi yolunu bulabilirsin!
      courseC_maze_debugging_challenge1_2018_authored_hint:
        courseC_maze_debugging_challenge1_a: Sola veya sağa? Bu size kalmış!
        courseC_maze_debugging_challenge1_b: Scrat'in yolu bir dikdörtgen şeklinde! Her seferinde aynı yöne dönmeli!
        courseC_maze_debugging_challenge1_c: Eğer sıkışırsan, her zaman baştan başlayabilir veya tüm kodları kaldırabilir ve kendi yolunu bulabilirsin!
      courseC_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_b: Eğer takılırsan, kodundaki hataları ayıklamayı dene. Nerede işler yanlış gidiyor görebildin mi?
        courseC_maze_debugging_challenge2_c: |-
          'İlerle' ve dört dönüş kullanarak izleyebileceğiniz iki farklı yol var. 'Tekrarla' bloğunu kullanmanın bir yolunu bulursanız, daha da fazlası olabilir!
          
          ![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      courseC_maze_debugging_challenge2_2018_authored_hint:
        courseC_maze_debugging_challenge2_b: Eğer takılırsan, kodundaki hataları ayıklamayı dene. Nerede işler yanlış gidiyor görebildin mi?
        courseC_maze_debugging_challenge2_c: |-
          'İlerle' ve dört dönüş kullanarak izleyebileceğiniz iki farklı yol var. 'Tekrarla' bloğunu kullanmanın bir yolunu bulursanız, daha da fazlası olabilir!
          
          ![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      courseC_maze_loops10_authored_hint: [ ]
      courseC_maze_loops10_predict2_authored_hint: [ ]
      courseC_maze_loops11_authored_hint: [ ]
      courseC_maze_loops2_authored_hint:
        courseC_maze_loops2_a: You can solve this puzzle with just three blocks, including `when run`.
        courseC_maze_loops2_b: Try putting the `move forward` block inside of a `repeat` block to create a loop.
        courseC_maze_loops2_c: You need to repeat the `move forward` command 5 times to solve this puzzle.
      courseC_maze_loops2_predict1_authored_hint:
        courseC_maze_loops2_a: You can solve this puzzle with just three blocks, including `when run`.
        courseC_maze_loops2_b: Try putting the `move forward` block inside of a `repeat` block to create a loop.
        courseC_maze_loops2_c: You need to repeat the `move forward` command 5 times to solve this puzzle.
      courseC_maze_loops3_authored_hint:
        courseC_maze_loops3_a: This puzzle is very similar to the last one.
        courseC_maze_loops3_b: Use a `repeat 5 times` block to create the loop.
      courseC_maze_loops4_authored_hint:
        courseC_maze_loops4_a: Not all command blocks should be repeated.
        courseC_maze_loops4_b: Use two `repeat` blocks set to different numbers.
        courseC_maze_loops4_c: "`Turn right` once between the two loops."
      courseC_maze_loops5_authored_hint:
        courseC_maze_loops5_a: The best solution uses two `move forward` commands and one loop.
      courseC_maze_loops6_authored_hint:
        courseC_maze_loops6_a: If the pattern is hard to see, try coding it all out first and see what repeats over and over before you put the loops in.
        courseC_maze_loops6_b: "Birden fazla bloğu tekrarla bloğu içine koymak için döngüyü çalışma alanına sürükle, sonra  blokları içine sürükle!"
      courseC_maze_loops7_authored_hint:
        courseC_maze_loops7_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı deneyin ve tekrar eden şeyleri döngüye koyun.
      courseC_maze_loops8_authored_hint:
        courseC_puppy_loops8courseC_maze_loops8_a: Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!
        courseC_puppy_loops8courseC_maze_loops8_b: The first half of this path is similar to the stairs from the last puzzle, but it goes in a different direction.
        courseC_puppy_loops8courseC_maze_loops8_c: "There are different ways to solve this. \n\nYou will want to use at least two loops, and repeat a set of actions in the first one, then a single `move forward` in the other."
      courseC_maze_loops9_authored_hint:
        courseC_maze_loops9_1: 'If you''re having trouble finding where the code should repeat, try writing it down on a piece of paper and looking for a pattern. '
      courseC_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_a: Bu yolu üç farklı parça olarak düşün. Her birinin tekrar edebileceğin bir deseni vardır.
        courseC_maze_loops_challenge1_b: Scrat'i  bir sonraki adıma hazır olması için, her tekrarla bloğunun arasında  'sağa dön' veya 'sola dön' komutuna ihtiyacın var.
      courseC_maze_loops_challenge1a_authored_hint:
        courseC_maze_loops_challenge1_a: Bu yolu iki farklı parça olarak düşünün. Her biri tekrar edebileceğin bir desene sahip.
        courseC_maze_loops_challenge1_b: Döngüleri bir merdiven desenini tekrar etmek için nasıl kullanacağını hatırlayabiliyor musun?
      courseC_maze_loops_challenge1a_2018_authored_hint:
        courseC_maze_loops_challenge1_a: Bu yolu iki farklı parça olarak düşünün. Her biri tekrar edebileceğin bir desene sahip.
        courseC_maze_loops_challenge1_b: Döngüleri bir merdiven desenini tekrar etmek için nasıl kullanacağını hatırlayabiliyor musun?
      courseC_maze_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_a: Her yığında sadece bir hazine parçası olsaydı, hazırda verilen kod harika çalışırdı!
        courseC_maze_loops_challenge2_b: Döngüler kullanın, böylece `topla 'blokları bitmez!
      courseC_maze_programming1_authored_hint:
        courseC_maze_programming1_0: Make sure all of the blocks have been fully snapped together, then click "Run" again.
      courseC_maze_programming1_2018_authored_hint:
        courseC_maze_programming1_0: Make sure all of the blocks have been fully snapped together, then click "Run" again.
      courseC_maze_programming2_authored_hint:
        courseC_maze_programming2_a: To use a <xml><block type="maze_moveForward"/></xml> block, drag it out of the toolbox and snap it to the <xml><block type="when_run"/></xml> block.
        courseC_maze_programming2_b: Make sure all of the blocks have been fully snapped together, then click "Run" again.
      courseC_maze_programming2_2018_authored_hint:
        courseC_maze_programming2_a: To use a <xml><block type="maze_moveForward"/></xml> block, drag it out of the toolbox and snap it to the <xml><block type="when_run"/></xml> block.
        courseC_maze_programming2_b: Make sure all of the blocks have been fully snapped together, then click "Run" again.
      courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: Try running the code first to see where it goes wrong.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          
          Kodlarının arasından bir bloğu silmek için, onun altındaki tüm kodları sağ tarafa doğru sürükle ve bir süreliğine çalışma alanında öylece durmalarını sağla. 
          
          Silmek istediğin bloğa tıkla ve onu araç çubuğuna doğru sürükle (çalışma alanının solunda, "Bloklar" başlıklı bölüm).
          
          Son olarak, diğer bloklarını yeniden ait oldukları yere geri koy.
          
      courseC_maze_programming3_2018_authored_hint:
        courseC_maze_programming3_a: Try running the code first to see where it goes wrong.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          
          Kodlarının arasından bir bloğu silmek için, onun altındaki tüm kodları sağ tarafa doğru sürükle ve bir süreliğine çalışma alanında öylece durmalarını sağla. 
          
          Silmek istediğin bloğa tıkla ve onu araç çubuğuna doğru sürükle (çalışma alanının solunda, "Bloklar" başlıklı bölüm).
          
          Son olarak, diğer bloklarını yeniden ait oldukları yere geri koy.
          
      courseC_maze_programming4_authored_hint:
        courseC_maze_programming4_a: Remember that when you turn, you are turning from the *bird's* point of view.  If you turn right, the bird will point down.
        courseC_maze_programming4_b: |-
          To follow the path:
          - move forward
          - turn one way
          - move forward
          - turn back the other way
          - move forward
      courseC_maze_programming4_2018_authored_hint:
        courseC_maze_programming4_a: Remember that when you turn, you are turning from the *bird's* point of view.  If you turn right, the bird will point down.
        courseC_maze_programming4_b: |-
          To follow the path:
          - move forward
          - turn one way
          - move forward
          - turn back the other way
          - move forward
      courseC_maze_programming5_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Bu bulmacayı tamamlamak için kuşun bir tur yapması gerekecek. Hangi yoldan gideceğini bulabilir misin?
        courseC_maze_programming5_c: Çözümde, iki ileri hareket bloğu, bir dönüş bloğu ve iki ileri hareket bloğu daha olacak.
      courseC_maze_programming5_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Bu bulmacayı tamamlamak için kuşun bir tur yapması gerekecek. Hangi yoldan gideceğini bulabilir misin?
        courseC_maze_programming5_c: Çözümde, iki ileri hareket bloğu, bir dönüş bloğu ve iki ileri hareket bloğu daha olacak.
      courseC_maze_programming6_authored_hint:
        courseC_maze_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseC_maze_programming6_b: Parmağınızı kuştan domuza takip edin, hangi adımları geçtiniz?
        courseC_maze_programming6_c: Kuş duvara dönük başladığı için, önce onu döndürmelisin.
        courseC_maze_programming6_d: Takılmış mı hissediyorsun? Bu yola bak!
      courseC_maze_programming6_2018_authored_hint:
        courseC_maze_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseC_maze_programming6_b: Parmağınızı kuştan domuza takip edin, hangi adımları geçtiniz?
        courseC_maze_programming6_c: Kuş duvara dönük başladığı için, önce onu döndürmelisin.
        courseC_maze_programming6_d: Takılmış mı hissediyorsun? Bu yola bak!
      courseC_maze_programming7_authored_hint:
        courseC_maze_programming7_a: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseC_maze_programming7_b: Bu bulmacanın çözümünü bulmakta zorlanıyorsanız, yapacağınız hamleleri bir kağıda yazmayı deneyin.
      courseC_maze_programming7_2018_authored_hint:
        courseC_maze_programming7_a: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseC_maze_programming7_b: Bu bulmacanın çözümünü bulmakta zorlanıyorsanız, yapacağınız hamleleri bir kağıda yazmayı deneyin.
      courseC_maze_programming8_authored_hint:
        courseC_maze_programming8_a: Zorlandığınız durumlarda, kod bloklarınızı satır satır  incelemek için adım düğmesini kullanabileceğinizi unutmayın.
        courseC_maze_programming8_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_maze_programming8_2018_authored_hint:
        courseC_maze_programming8_a: Zorlandığınız durumlarda, kod bloklarınızı satır satır  incelemek için adım düğmesini kullanabileceğinizi unutmayın.
        courseC_maze_programming8_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseC_maze_programming8_predict1_authored_hint: [ ]
      courseC_maze_programming8_predict1_2018_authored_hint: [ ]
      courseC_maze_programming9_authored_hint: [ ]
      courseC_maze_programming9_2018_authored_hint: [ ]
      courseC_maze_programming_challenge1_authored_hint:
        courseC_maze_programming_challenge1_a: Domuzu almanın bir çok yolu vardır. Yolu bulmak için parmağını kullan sonra programla!
      courseC_maze_programming_challenge1_2018_authored_hint:
        courseC_maze_programming_challenge1_a: Domuzu almanın bir çok yolu vardır. Yolu bulmak için parmağını kullan sonra programla!
      courseC_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: '*Eğer beni geri göndermek istersen, doğru yöne döndüğüne daha fazla dikkat et!*'
        courseC_maze_programming_challenge2_b: |-
          En kısa çözüm yalnızca 5 bloktan oluşur, fakat`tekrar et` bloğu kullanılır!<xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018_authored_hint:
        courseC_maze_programming_challenge2_a: '*Eğer beni geri göndermek istersen, doğru yöne döndüğüne daha fazla dikkat et!*'
        courseC_maze_programming_challenge2_b: |-
          En kısa çözüm yalnızca 5 bloktan oluşur, fakat`tekrar et` bloğu kullanılır!<xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_playLab_embedded_authored_hint: [ ]
      courseC_puppy_loops10_authored_hint:
        courseC_puppy_loops9_1: I need to move two or three time between each turn.
      courseC_puppy_loops11_authored_hint: [ ]
      courseC_puppy_loops8_authored_hint:
        2-3_Maze_Loops_17_a: Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!
        2-3_Maze_Loops_17_b: Bu bölümün ilk yarısı, son yapbozdaki merdiven adımlarına benzemekte, fakat bu farklı bir yöne gitmekte.
        courseC_puppy_loops8_c: There are different ways to solve this. You will want to use at least two loops, and repeat either a set of actions or a single movement.
      courseC_puppy_loops8courseC_maze_loops8_authored_hint:
        courseC_puppy_loops8courseC_maze_loops8_a: Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!
        courseC_puppy_loops8courseC_maze_loops8_b: The first half of this path is similar to the stairs from the last puzzle, but it goes in a different direction.
        courseC_puppy_loops8courseC_maze_loops8_c: "There are different ways to solve this. \n\nYou will want to use at least two loops, and repeat a set of actions in the first one, then a single `move forward` in the other."
      courseC_puppy_loops9_authored_hint:
        courseC_puppy_loops9_1: If you repeat the first few actions, you can get me to the pig with just four more blocks!
      courseC_starWars_loops1_authored_hint:
        courseC_starWars_loops1_a: BB-8 hurda metalleri yuvarlanınca otomatik olarak toplayacak.
        courseC_starWars_loops1_b: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
        courseC_starWars_loops1_c: Bu bulmacayı çözmek için 5 defa 'ilerle'.
      courseC_starWars_loops10_authored_hint:
        courseC_starWars_loops10_a: Bu desen dev bir merdiven basamağı gibi görünmüyor mu? Bütün dönüşleri yapmak için önceki bulmacada öğrendiklerinizi kullanıp kullanamayacağınızı görün.
        courseC_starWars_loops10_b: "Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir."
        courseC_starWars_loops10_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
      courseC_starWars_loops10_2018_authored_hint:
        courseC_starWars_loops10_a: Bu desen dev bir merdiven basamağı gibi görünmüyor mu? Bütün dönüşleri yapmak için önceki bulmacada öğrendiklerinizi kullanıp kullanamayacağınızı görün.
        courseC_starWars_loops10_b: "Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir."
        courseC_starWars_loops10_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
      courseC_starWars_loops10_predict2_authored_hint: [ ]
      courseC_starWars_loops10_predict2_2018_authored_hint: [ ]
      courseC_starWars_loops11_authored_hint: [ ]
      courseC_starWars_loops11_2018_authored_hint: [ ]
      courseC_starWars_loops1_2018_authored_hint:
        courseC_starWars_loops1_a: BB-8 hurda metalleri yuvarlanınca otomatik olarak toplayacak.
        courseC_starWars_loops1_b: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
        courseC_starWars_loops1_c: Bu bulmacayı çözmek için 5 defa 'ilerle'.
      courseC_starWars_loops2_authored_hint:
        courseC_starWars_loops2_a: Tekrar etmek için, bir 'tekrar' döngüsü sürükle, sonra içine istediğin bloğu koy.
      courseC_starWars_loops2_2018_authored_hint:
        courseC_starWars_loops2_a: Tekrar etmek için, bir 'tekrar' döngüsü sürükle, sonra içine istediğin bloğu koy.
      courseC_starWars_loops4_authored_hint:
        courseC_starWars_loops4_c: '"Sola" dön bloğunun yanındaki küçük ok işaretine tıklamak, onu "sağ" olarak değiştirmene izin verecektir.'
        courseC_starWars_loops4_a: İki 'tekrarla' bloğu kullanın.
        courseC_starWars_loops4_b: 'Her ''tekrarla'' döngüsünün içinde bir komut bulunacak: ''ilerle''.'
      courseC_starWars_loops4_2018_authored_hint:
        courseC_starWars_loops4_c: '"Sola" dön bloğunun yanındaki küçük ok işaretine tıklamak, onu "sağ" olarak değiştirmene izin verecektir.'
        courseC_starWars_loops4_a: İki 'tekrarla' bloğu kullanın.
        courseC_starWars_loops4_b: 'Her ''tekrarla'' döngüsünün içinde bir komut bulunacak: ''ilerle''.'
      courseC_starWars_loops5_authored_hint:
        courseC_starWars_loops5_b: Aşağı ilerlemek için, dönüp ilerlemelisin.
        courseC_starWars_loops5_a: En iyi çözüm bir dönüş sonra bir ilerle ve tekrar dönüş, en son da tekrarla döngüsü içermektedir. 
      courseC_starWars_loops5_2018_authored_hint:
        courseC_starWars_loops5_b: Aşağı ilerlemek için, dönüp ilerlemelisin.
        courseC_starWars_loops5_a: En iyi çözüm bir dönüş sonra bir ilerle ve tekrar dönüş, en son da tekrarla döngüsü içermektedir. 
      courseC_starWars_loops6_authored_hint:
        courseC_starWars_loops6_a: Bütün hareketleri bir kağıt parçasına yazmayı ve bir desen bulmayı deneyin.
        courseC_starWars_loops6_b: "Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir."
      courseC_starWars_loops6_2018_authored_hint:
        courseC_starWars_loops6_a: Bütün hareketleri bir kağıt parçasına yazmayı ve bir desen bulmayı deneyin.
        courseC_starWars_loops6_b: "Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir."
      courseC_starWars_loops7_authored_hint:
        courseC_starWars_loops7_a: Bu yıldız deseni biraz karışık görünüyor! İlk olarak basit bir merdiven basamağı çizerek başla. Bu bütün hurda metali kaplıyor mu?
        courseC_starWars_loops7_b: Bu bulmacayla ilgili problem yaşıyorsanız, bütün hareketleri bir kağıt parçasına yazmayı ve bir desen bulmayı deneyin.
        courseC_starWars_loops7_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
      courseC_starWars_loops7_2018_authored_hint:
        courseC_starWars_loops7_a: Bu yıldız deseni biraz karışık görünüyor! İlk olarak basit bir merdiven basamağı çizerek başla. Bu bütün hurda metali kaplıyor mu?
        courseC_starWars_loops7_b: Bu bulmacayla ilgili problem yaşıyorsanız, bütün hareketleri bir kağıt parçasına yazmayı ve bir desen bulmayı deneyin.
        courseC_starWars_loops7_c: Hata yapmaktan korkma! Bulmacayı çözmemiş olsan bile neler olduğunu görmek için kodu çalıştır.
      courseC_starWars_loops8_authored_hint:
        course_starWars_loops8_a: Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!
        course_starWars_loops8_b: Bu problemin ilk yarısını bir merdiven basamağı olarak düşünün. Bunu daha önce nasıl çözdün?
        course_starWars_loops8_c: |-
          Bu çözüme bir bak:
          
          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018_authored_hint:
        course_starWars_loops8_a: Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!
        course_starWars_loops8_b: Bu problemin ilk yarısını bir merdiven basamağı olarak düşünün. Bunu daha önce nasıl çözdün?
        course_starWars_loops8_c: |-
          Bu çözüme bir bak:
          
          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9_authored_hint:
        course_starWars_loops9_b: Tekrar eden bir döngüye birden fazla blok yerleştirebileceğinizi unutmayın.
        course_starWars_loops9_c: |-
          Bu bulmacayı çözmek için sola dönmene gerek kalmayacak, bu yüzden tüm dönüşlerin sağa doğru olabilir.
          
          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018_authored_hint:
        course_starWars_loops9_b: Tekrar eden bir döngüye birden fazla blok yerleştirebileceğinizi unutmayın.
        course_starWars_loops9_c: |-
          Bu bulmacayı çözmek için sola dönmene gerek kalmayacak, bu yüzden tüm dönüşlerin sağa doğru olabilir.
          
          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_Frozen_nested1_authored_hint:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan dönüş açısını seçebilirsin!
        courseD_artist_project1_b: '''ileri git'' komutu bir çizgi çizerek ilerler, fakat ''ileri zıpla'' komutu çizmeden ileri atlatır.'
      courseD_Frozen_nested2_authored_hint:
        courseD_artist_project2_a: '''ileri git'' komutu bir çizgi çizerek ilerler, fakat ''ileri zıpla'' komutu çizmeden ileri atlatır.'
        courseD_artist_project2_b: İlk çiziminizi yapıp ilerlediğinizde, bütün kodun etrafına bir döngü yerleştirerek birden fazla tekrar edebilirsiniz.
      courseD_Frozen_nested3_authored_hint:
        courseD_artist_project3_a: Dönüş bloklarının üzerindeki oktan gerekli olan dönüş açısını seçebilirsin!
        courseD_artist_project3_b: "İç içe döngüleri dene!\n\nŞekillerin çizgilerini çizmek için oluşturduğun kodları kullan ve başka bir döngünün içinde iç içe yerleştir. Altta, dıştaki döngü bitmeden önce Elsa'yı etrafında çeviren bir blok ekle.\n\n- Eğer dıştaki döngüyü 5 defa tekrarlıyorsan 72 dereceyi dene\n- Eğer dıştaki döngüyü 6 defa tekrarlıyorsan 60 dereceyi dene"
      courseD_Frozen_nested4_authored_hint:
        courseD_artist_project4_a: |
          İşte üçgen bir kar tanesinden önce 36 derecelik dönüşlü beşgen kar tanesi:
          
          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />
          
          
          İşte karelerle bir altıgen kümesi:
          
          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Bunu denemek için önce ilk kar tanesini çiz, sonra dön ve ikinci kar tanesini çiz.
      courseD_Frozen_nested5_authored_hint:
        courseD_artist_project4_a: |
          2 altıgen ve 4 üçgen çizgileri:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_Frozen_nested6_authored_hint:
        courseD_artist_project1a_a: |
          Bu basamak merdiveni 76 derece dönüş içerir ve bunu 4 kere tekrarlar.
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Bu desenler, diğer bulmacalardaki merdiven basamaklarına oldukça benziyor, yalnızca açı farklı.
      courseD_Frozen_nested7_authored_hint:
        courseD_artist_project2a_a: |
          Bu çizim 4 basamağın iç içe döngüsünden ve '2 defa tekrarla' bloğunun içinde '180 derece' sağa dön bloğuyla oluşturulmuştur. 
          
          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_Frozen_nested8_authored_hint:
        courseD_artist_project3a_a: Şeklinizi döndürmek için farklı yollar da seçebilirsiniz! 18 defa, 20 derece döndürmeye ne dersin?
      courseD_Frozen_nested9_authored_hint:
        courseD_artist_project4a_a: |
          Burada 2 farklı uzunlukta birbiri ardına çizilen kar tanesi var (aralarında 30 derece dönüş ile).
          
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_1_2018_authored_hint:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan dönüş açısını seçebilirsin!
        courseD_artist_project1_b: '''ileri git'' komutu bir çizgi çizerek ilerler, fakat ''ileri zıpla'' komutu çizmeden ileri atlatır.'
      courseD_artist_2_2018_authored_hint:
        courseD_artist_project1_b: Remember that `move` draws a line, while `jump` does not.
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan dönüş açısını seçebilirsin!
      courseD_artist_3_2018_authored_hint: [ ]
      courseD_artist_4_2018_authored_hint: [ ]
      courseD_artist_5_2018_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to switch their angles, too!
      courseD_artist_6_2018_authored_hint: [ ]
      courseD_artist_7_2018_authored_hint:
        courseD_artist_project2a_a: |
          Bu çizim 4 basamağın iç içe döngüsünden ve '2 defa tekrarla' bloğunun içinde '180 derece' sağa dön bloğuyla oluşturulmuştur. 
          
          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_8_2018_authored_hint:
        courseD_artist_project3a_a: Şeklinizi döndürmek için farklı yollar da seçebilirsiniz! 18 defa, 20 derece döndürmeye ne dersin?
      courseD_artist_9_2018_authored_hint:
        courseD_artist_project4a_a: |
          Burada 2 farklı uzunlukta birbiri ardına çizilen kar tanesi var (aralarında 30 derece dönüş ile).
          
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_Template_2018_authored_hint: [ ]
      courseD_artist_binary1_authored_hint:
        courseD_artist_binary1_a: Metin bloğundaki "???" yazısını birler halindeki istediğin ikili resim ile değiştir.
        courseD_artist_binary1_b: Sanatçı, her 1 için beyaz bir boşluk çizecek ve her 0 için siyah bir boşluk çizecek.
        courseD_artist_binary1_c: |-
          İkili kodunuzu nasıl gireceğinizi gösterir:
          
          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2018_authored_hint:
        courseD_artist_binary1_a: Metin bloğundaki "???" yazısını birler halindeki istediğin ikili resim ile değiştir.
        courseD_artist_binary1_b: Sanatçı, her 1 için beyaz bir boşluk çizecek ve her 0 için siyah bir boşluk çizecek.
        courseD_artist_binary1_c: |-
          İkili kodunuzu nasıl gireceğinizi gösterir:
          
          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary2_authored_hint:
        courseD_artist_binary2_a: Bu programı çalışırken görmek için sadece 'Çalıştır' ı tıklayın!
      courseD_artist_binary2_2018_authored_hint:
        courseD_artist_binary2_a: Bu programı çalışırken görmek için sadece 'Çalıştır' ı tıklayın!
      courseD_artist_binary3_authored_hint:
        courseD_artist_binary3_a: Araç kutusundaki dört ikili desenden bir tanesi bu bulmacayı çözecek!
        courseD_artist_binary3_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için kodlarını çalıştırmayı dene.
      courseD_artist_binary3_2018_authored_hint:
        courseD_artist_binary3_a: Araç kutusundaki dört ikili desenden bir tanesi bu bulmacayı çözecek!
        courseD_artist_binary3_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için kodlarını çalıştırmayı dene.
      courseD_artist_binary4_authored_hint:
        courseD_artist_binary4_a: Üst sıradaki ilk üç kareye bak. Tüm desene ulaşmak için bu üçünü tekrar edebilir misin?
        courseD_artist_binary4_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek için kodlarını çalıştırmayı dene.
      courseD_artist_binary4_2018_authored_hint:
        courseD_artist_binary4_a: Üst sıradaki ilk üç kareye bak. Tüm desene ulaşmak için bu üçünü tekrar edebilir misin?
        courseD_artist_binary4_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek için kodlarını çalıştırmayı dene.
      courseD_artist_binary5_authored_hint:
        courseD_artist_binary5_a: Ne ile çalışmak zorunda olduğunu görmek için önce kodu çalıştırmayı deneyin.
        courseD_artist_binary5_b: Bir gülümseme yapmak için yalnızca iki sırayı değiştirmeniz gerekir.
        courseD_artist_binary5_c: Eğer bu bulmacayı çözmekte zorlanıyorsanız, bir kağıda ikili sistemde satırı yazmayı ve tekrar eden bir desen bulmayı deneyin.
      courseD_artist_binary5_2018_authored_hint:
        courseD_artist_binary5_a: Ne ile çalışmak zorunda olduğunu görmek için önce kodu çalıştırmayı deneyin.
        courseD_artist_binary5_b: Bir gülümseme yapmak için yalnızca iki sırayı değiştirmeniz gerekir.
        courseD_artist_binary5_c: Eğer bu bulmacayı çözmekte zorlanıyorsanız, bir kağıda ikili sistemde satırı yazmayı ve tekrar eden bir desen bulmayı deneyin.
      courseD_artist_binary6_authored_hint:
        courseD_artist_binary6_a: Sol üstten başla. desen tekrar etmeye başlamadan önce ne kadar okumalısın?
        courseD_artist_binary6_b: İkili dizeyi her seferinde biraz oluşturmaya ve test etmeye devam edebilirsin!
      courseD_artist_binary6_2018_authored_hint:
        courseD_artist_binary6_a: Sol üstten başla. desen tekrar etmeye başlamadan önce ne kadar okumalısın?
        courseD_artist_binary6_b: İkili dizeyi her seferinde biraz oluşturmaya ve test etmeye devam edebilirsin!
      courseD_artist_binary7_authored_hint:
        courseD_artist_binary7_a: Sol üstten başla. desen tekrar etmeye başlamadan önce ne kadar okumalısın?
        courseD_artist_binary7_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek için kodlarını çalıştırmayı dene.
      courseD_artist_binary7_2018_authored_hint:
        courseD_artist_binary7_a: Sol üstten başla. desen tekrar etmeye başlamadan önce ne kadar okumalısın?
        courseD_artist_binary7_b: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini düşünüyor olsan bile ikili sistem kodlarını yazmayı ve neler olacağını görmek için kodlarını çalıştırmayı dene.
      courseD_artist_binary8_authored_hint:
        courseD_artist_binary8_a: Sarmal kafa karıştırıcı olabilir. Bu tasarımı oluştururken kafanda her yatay çizgiyi ayrı düşün.
        courseD_artist_binary8_b: Ne ile çalışmak zorunda olduğunu görmek için önce kodu çalıştırmayı deneyin.
        courseD_artist_binary8_c: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için kodlarını çalıştırmayı dene.
      courseD_artist_binary8_2018_authored_hint:
        courseD_artist_binary8_a: Sarmal kafa karıştırıcı olabilir. Bu tasarımı oluştururken kafanda her yatay çizgiyi ayrı düşün.
        courseD_artist_binary8_b: Ne ile çalışmak zorunda olduğunu görmek için önce kodu çalıştırmayı deneyin.
        courseD_artist_binary8_c: Hata yapmaktan korkma! Bulmacanın henüz çözülmediğini düşünüyor olsan bile ikili kodlarını yazmayı ve neler olacağını görmek için kodlarını çalıştırmayı dene.
      courseD_artist_binaryFP_authored_hint: [ ]
      courseD_artist_binaryFP8_authored_hint: [ ]
      courseD_artist_binaryFP_2018_authored_hint: [ ]
      courseD_artist_binary_challenge2_authored_hint:
        courseD_artist_binary_challenge2_a: Orjinal programdan sadece bir kaç satır hatalı. 
      courseD_artist_binary_challenge2_2018_authored_hint:
        courseD_artist_binary_challenge2_a: Orjinal programdan sadece bir kaç satır hatalı. 
      courseD_artist_binary_challenge3_authored_hint:
        courseD_artist_binary_challenge3_a: |-
          Eğer kodların gerçekten karmaşık bir hal almaya başlarsa, senin için en iyi ipucu `⟲ Baştan Başla`komutuna basmak.
          
          Orjinal programda sadece bir kaç satır hatalı. Bir yaklaşım başarısız olursa, geri dön ve yeniden dene. Bir çözüm var!
      courseD_artist_embed_frozen_authored_hint: [ ]
      courseD_artist_embed_frozen2_authored_hint: [ ]
      courseD_artist_embedded_project1a_authored_hint: [ ]
      courseD_artist_functions10_authored_hint:
        courseD_artist_functions10_b: This drawing is a lot like the last one, except the function draws a different kind of line.
        courseD_artist_functions10_a: To get around using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.
      courseD_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |2
          Programınız: 
          -Fonksiyon kullanmalıdır.
           - ileri 100 + 75 piksel ilerlemelidir
          - Fonksiyon kullanmalıdır
      courseD_artist_functions3_authored_hint:
        courseD_artist_functions3_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.
          
          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
      courseD_artist_functions4_authored_hint:
        courseD_artist_functions4_a: Try using a function!
      courseD_artist_functions5_authored_hint:
        courseD_artist_functions5_a: Don't give up!  Remember what you have been learning.
        courseD_artist_functions5_b: Functions make it easy to call saved code at any time, not just from inside a loop!
      courseD_artist_functions6_authored_hint:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll create a function for it in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops, where the inner loop makes the square and the outer loop rotates the square four times.
      courseD_artist_functions7_authored_hint:
        courseD_artist_functions7_a: Try creating your function first then adding in windows one at a time.
        courseD_artist_functions7_b: You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels forward for each top window, and 150 pixels down to get the bottom windows.
      courseD_artist_functions8_authored_hint:
        courseD_artist_functions8_a: |-
          Start by making a function for a square, then try making a function for a line of squares.
          
          How would you use the `draw a line of squares` function to make this image?
        courseD_artist_functions8_b: After your first line of squares, you need to move the artist down and back before you start your second line of squares.
        courseD_artist_functions8_c: You should move the artist back a different number of pixels for even lines than for odd ones.
      courseD_artist_functions9_authored_hint:
        courseD_artist_functions9_a: To get around the need to have multiple `move forward` blocks, create a `draw triangle` function and call that multiple times.
        courseD_artist_functions9_b: This drawing is made by creating a line of triangles and turning either 60 or 120 degrees after each time you draw the triangle line.
      courseD_artist_nestedLoops1_authored_hint:
        courseD_artist_nestedLoops1_a: The easiest way to draw this is to move forward and use right turns.
        courseD_artist_nestedLoops1_b: Bir 'tekrarla' bloğu ve içinde iki blokla bu üçgeni çizebilirsiniz. Hangi bloklara ihtiyacın var?
        courseD_artist_nestedLoops1_c: Adımları kağıda yazmaya çalış ve döngüler ile sadeleştirilebilecek örüntüler ara.
      courseD_artist_nestedLoops10_authored_hint: [ ]
      courseD_artist_nestedLoops10_2018_authored_hint: [ ]
      courseD_artist_nestedLoops1_2018_authored_hint:
        courseD_artist_nestedLoops1_a: The easiest way to draw this is to move forward and use right turns.
        courseD_artist_nestedLoops1_b: Bir 'tekrarla' bloğu ve içinde iki blokla bu üçgeni çizebilirsiniz. Hangi bloklara ihtiyacın var?
        courseD_artist_nestedLoops1_c: Adımları kağıda yazmaya çalış ve döngüler ile sadeleştirilebilecek örüntüler ara.
      courseD_artist_nestedLoops1a_authored_hint:
        courseD_artist_nestedLoops1a_a: |-
          You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.
          
          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: Eğer üçgenini döngüyle oluşturduysan, sanatçı başladığı yöne dönük olmalıdır. Bu 60 derece dönüşü çok daha kolaylaştıracaktır.
        courseD_artist_nestedLoops1a_c: Renkleri kullanmak istersen kodunda 'renk ayarla` bloğunu kullan. Şablon resimdeki renkleri kullanmak zorunda değilsin.
      courseD_artist_nestedLoops1a_2018_authored_hint:
        courseD_artist_nestedLoops1a_a: |-
          You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.
          
          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: Eğer üçgenini döngüyle oluşturduysan, sanatçı başladığı yöne dönük olmalıdır. Bu 60 derece dönüşü çok daha kolaylaştıracaktır.
        courseD_artist_nestedLoops1a_c: Renkleri kullanmak istersen kodunda 'renk ayarla` bloğunu kullan. Şablon resimdeki renkleri kullanmak zorunda değilsin.
      courseD_artist_nestedLoops2_authored_hint:
        courseD_artist_nestedLoops2_a: Nest your loops by surrounding your triangle code with another `repeat` loop.
        courseD_artist_nestedLoops2_b: Döngünün içine `dön` bloğunu koymayı unutma, böylece sanatçı her üçgenden sonra döner.
      courseD_artist_nestedLoops2_2018_authored_hint:
        courseD_artist_nestedLoops2_a: Nest your loops by surrounding your triangle code with another `repeat` loop.
        courseD_artist_nestedLoops2_b: Döngünün içine `dön` bloğunu koymayı unutma, böylece sanatçı her üçgenden sonra döner.
      courseD_artist_nestedLoops3_authored_hint:
        courseD_artist_nestedLoops3_a: "'İleri atla' bloğu ile bir karenin üstünden diğerine başlayacağın noktaya gel.\nEğer karelerin 20 piksel yüksekliğinde ise ve aralarında 20 piksel var ise ne kadar atlaman gerekir?"
        courseD_artist_nestedLoops3_b: 'Don''t forget to use a nested loop to solve this puzzle quickly. '
        courseD_artist_nestedLoops3_c: 'Bir kare yapmaya `tekrarla` döngüsü kullanarak başla. Sonra, kareyi aralarında 40 piksel zıplayarak 8 kere tekrar et.'
      courseD_artist_nestedLoops3_2018_authored_hint:
        courseD_artist_nestedLoops3_a: "'İleri atla' bloğu ile bir karenin üstünden diğerine başlayacağın noktaya gel.\nEğer karelerin 20 piksel yüksekliğinde ise ve aralarında 20 piksel var ise ne kadar atlaman gerekir?"
        courseD_artist_nestedLoops3_b: 'Don''t forget to use a nested loop to solve this puzzle quickly. '
        courseD_artist_nestedLoops3_c: 'Bir kare yapmaya `tekrarla` döngüsü kullanarak başla. Sonra, kareyi aralarında 40 piksel zıplayarak 8 kere tekrar et.'
      courseD_artist_nestedLoops4_authored_hint:
        courseD_artist_nestedLoops4_d: Bunu doğru bir şekilde çözmek için ** önce ** hareket ettirmeniz gerekir; aksi takdirde daireleriniz küçük miktarla kapatılacaktır!
        courseD_artist_nestedLoops4_a: |-
          To make a circle:
          - Repeat 360 times
          - Move forward 1 pixel
          - Turn left 1 degree
        courseD_artist_nestedLoops4_b: Don't forget to jump forward by 50 pixels between circles.
        courseD_artist_nestedLoops4_c: Use a nested loop to draw your circles 4 times.
      courseD_artist_nestedLoops4_2018_authored_hint:
        courseD_artist_nestedLoops4_d: Bunu doğru bir şekilde çözmek için ** önce ** hareket ettirmeniz gerekir; aksi takdirde daireleriniz küçük miktarla kapatılacaktır!
        courseD_artist_nestedLoops4_a: |-
          To make a circle:
          - Repeat 360 times
          - Move forward 1 pixel
          - Turn left 1 degree
        courseD_artist_nestedLoops4_b: Don't forget to jump forward by 50 pixels between circles.
        courseD_artist_nestedLoops4_c: Use a nested loop to draw your circles 4 times.
      courseD_artist_nestedLoops5_authored_hint:
        courseD_artist_nestedLoops5_a: |-
          To do this easily:
          
          - repeat 4 times
          - make a circle
          - jump forward 50 pixels
          - turn right 90 degrees
        courseD_artist_nestedLoops5_b: Bir daire için 360 defa tekrar eden tekrarla döngüsü ayarlayın. Döngü içinde, 1 piksel ilerle ve 1 derece dön.
      courseD_artist_nestedLoops5_2018_authored_hint:
        courseD_artist_nestedLoops5_a: |-
          To do this easily:
          
          - repeat 4 times
          - make a circle
          - jump forward 50 pixels
          - turn right 90 degrees
        courseD_artist_nestedLoops5_b: Bir daire için 360 defa tekrar eden tekrarla döngüsü ayarlayın. Döngü içinde, 1 piksel ilerle ve 1 derece dön.
      courseD_artist_nestedLoops6_authored_hint:
        courseD_artist_nestedLoops6_a: You'll need to repeat your outer loop 6 times now, instead of only 4.
        courseD_artist_nestedLoops6_b: 'Now that you''re breaking 360 degrees into six pieces instead of only four, you will only need to turn 60 degrees between circles. '
      courseD_artist_nestedLoops7_authored_hint:
        courseD_artist_nestedLoops7_a: You'll need to use nested loops here. First, use a loop to draw a square. What will the outer loop do if the inner loop draws a square?
        courseD_artist_nestedLoops7_b: |2
          İç içe geçmiş döngü kullanın ve iç döngü bir kare çizme kodu olsun. 
           -6 kez tekrarla
          - kare yap 
          - ** 50 piksel ** ileri atla 
          -** 60 derece ** dön
      courseD_artist_nestedLoops7_2018_authored_hint:
        courseD_artist_nestedLoops7_a: You'll need to use nested loops here. First, use a loop to draw a square. What will the outer loop do if the inner loop draws a square?
        courseD_artist_nestedLoops7_b: |2
          İç içe geçmiş döngü kullanın ve iç döngü bir kare çizme kodu olsun. 
           -6 kez tekrarla
          - kare yap 
          - ** 50 piksel ** ileri atla 
          -** 60 derece ** dön
      courseD_artist_nestedLoops8_authored_hint:
        courseD_artist_nestedLoops8_a: To have 8 hexagons in your drawing, you'll need to turn **45 degrees** between each of them. Why? Because 360 degrees (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.
        courseD_artist_nestedLoops8_b: Takıldıysan, önce son bulmacaya tekrar bak, sonra bu bulmacadaki farklı kısımlar için kodu değiştir.
        courseD_artist_nestedLoops8_c: |2
          İç içe döngü kullanın: 
          - 8 defa tekrarla
           - bir Altıgen çiz 
          - ileri 50 piksel atla 
          - sağa 45 derece dön
      courseD_artist_nestedLoops8_2018_authored_hint:
        courseD_artist_nestedLoops8_a: To have 8 hexagons in your drawing, you'll need to turn **45 degrees** between each of them. Why? Because 360 degrees (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.
        courseD_artist_nestedLoops8_b: Takıldıysan, önce son bulmacaya tekrar bak, sonra bu bulmacadaki farklı kısımlar için kodu değiştir.
        courseD_artist_nestedLoops8_c: |2
          İç içe döngü kullanın: 
          - 8 defa tekrarla
           - bir Altıgen çiz 
          - ileri 50 piksel atla 
          - sağa 45 derece dön
      courseD_artist_nestedLoops9_authored_hint:
        courseD_artist_nestedLoops9_a: Start by using a nested loop like you had before, but this time, make it with squares.
        courseD_artist_nestedLoops9_b: Add a second set of nested loops to the end of the first set, but this time use triangles.
        courseD_artist_nestedLoops9_c: |-
          İki tane iç içe döngü kullanın: 
          - 8 defa tekrarla 
          - kare çiz  
          -ileri 50 piksel atla 
          - 45 derece sağa dön 
          - 8 kez tekrarla 
          - Üçgen çiz
          - ileri 50 piksel atla
          - 45 derece sağa dön
      courseD_artist_nestedLoops9_2018_authored_hint:
        courseD_artist_nestedLoops9_a: Start by using a nested loop like you had before, but this time, make it with squares.
        courseD_artist_nestedLoops9_b: Add a second set of nested loops to the end of the first set, but this time use triangles.
        courseD_artist_nestedLoops9_c: |-
          İki tane iç içe döngü kullanın: 
          - 8 defa tekrarla 
          - kare çiz  
          -ileri 50 piksel atla 
          - 45 derece sağa dön 
          - 8 kez tekrarla 
          - Üçgen çiz
          - ileri 50 piksel atla
          - 45 derece sağa dön
      courseD_artist_nestedLoops9_predict1_authored_hint: [ ]
      courseD_artist_nestedLoops9_predict1_2018_authored_hint: [ ]
      courseD_artist_nestedLoopsFP_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>
          
          This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>
          
          This image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>
          
          This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.
      courseD_artist_nestedLoopsFP_2018_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>
          
          This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>
          
          This image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>
          
          This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.
      courseD_artist_nestedLoopsPre1_authored_hint: [ ]
      courseD_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Rengi maviye değiştirerek başla ve sonra 50 piksel kenarı olan sekizgen oluşturmak için 45 derece sola dönüşler kullan.
        courseD_artist_nestedLoops_challenge1_b: Rengi yeşile değiştirerek başla ve sonra 50 piksel kenarı olan üçgen oluşturmak için 120 derece sola dönüşler kullan.
        courseD_artist_nestedLoops_challenge1_c: Her iki şekli de çizdikten sonra 90 derece sağa dönmeden evvel ileriye 50 piksel atlamalısın.
        courseD_artist_nestedLoops_challenge1_d: Bitimek için '4 kez tekrarla' döngüsünün içine kodunuzun tamamını koyunuz.
      courseD_artist_nestedLoops_challenge1_2018_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Rengi maviye değiştirerek başla ve sonra 50 piksel kenarı olan sekizgen oluşturmak için 45 derece sola dönüşler kullan.
        courseD_artist_nestedLoops_challenge1_b: Rengi yeşile değiştirerek başla ve sonra 50 piksel kenarı olan üçgen oluşturmak için 120 derece sola dönüşler kullan.
        courseD_artist_nestedLoops_challenge1_c: Her iki şekli de çizdikten sonra 90 derece sağa dönmeden evvel ileriye 50 piksel atlamalısın.
        courseD_artist_nestedLoops_challenge1_d: Bitimek için '4 kez tekrarla' döngüsünün içine kodunuzun tamamını koyunuz.
      courseD_artist_nestedLoops_challenge2_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Düzgün bir sekizgen çizmek için sanatçının (karakterin) 8 kere 45 derecelik açı ile dönmesi gerekir.
        courseD_artist_nestedLoops_challenge2_b: Bir kare çizmek için, sanatçının 4 kez 90 derece dönmesi gerekiyor.
      courseD_artist_nestedLoops_challenge2_2018_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Düzgün bir sekizgen çizmek için sanatçının (karakterin) 8 kere 45 derecelik açı ile dönmesi gerekir.
        courseD_artist_nestedLoops_challenge2_b: Bir kare çizmek için, sanatçının 4 kez 90 derece dönmesi gerekiyor.
      courseD_artist_project1_authored_hint:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan dönüş açısını seçebilirsin!
        courseD_artist_project1_b: '''ileri git'' komutu bir çizgi çizerek ilerler, fakat ''ileri zıpla'' komutu çizmeden ileri atlatır.'
      courseD_artist_project1_2018_authored_hint:
        courseD_artist_project1_a: Dönüş bloklarının üzerindeki oktan gerekli olan dönüş açısını seçebilirsin!
        courseD_artist_project1_b: '''ileri git'' komutu bir çizgi çizerek ilerler, fakat ''ileri zıpla'' komutu çizmeden ileri atlatır.'
      courseD_artist_project1a_authored_hint:
        courseD_artist_project1a_a: |
          Bu basamak merdiveni 76 derece dönüş içerir ve bunu 4 kere tekrarlar.
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Bu desenler, diğer bulmacalardaki merdiven basamaklarına oldukça benziyor, yalnızca açı farklı.
      courseD_artist_project1a_2018_authored_hint:
        courseD_artist_project1a_a: |
          Bu basamak merdiveni 76 derece dönüş içerir ve bunu 4 kere tekrarlar.
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Bu desenler, diğer bulmacalardaki merdiven basamaklarına oldukça benziyor, yalnızca açı farklı.
      courseD_artist_project2_authored_hint:
        courseD_artist_project2_a: '''ileri git'' komutu bir çizgi çizerek ilerler, fakat ''ileri zıpla'' komutu çizmeden ileri atlatır.'
        courseD_artist_project2_b: İlk çiziminizi yapıp ilerlediğinizde, bütün kodun etrafına bir döngü yerleştirerek birden fazla tekrar edebilirsiniz.
      courseD_artist_project2Template_authored_hint: [ ]
      courseD_artist_project2Template_2018_authored_hint: [ ]
      courseD_artist_project2_2018_authored_hint:
        courseD_artist_project2_a: '''ileri git'' komutu bir çizgi çizerek ilerler, fakat ''ileri zıpla'' komutu çizmeden ileri atlatır.'
        courseD_artist_project2_b: İlk çiziminizi yapıp ilerlediğinizde, bütün kodun etrafına bir döngü yerleştirerek birden fazla tekrar edebilirsiniz.
      courseD_artist_project2a_authored_hint:
        courseD_artist_project2a_a: |
          Bu çizim 4 basamağın iç içe döngüsünden ve '2 defa tekrarla' bloğunun içinde '180 derece' sağa dön bloğuyla oluşturulmuştur. 
          
          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2018_authored_hint:
        courseD_artist_project2a_a: |
          Bu çizim 4 basamağın iç içe döngüsünden ve '2 defa tekrarla' bloğunun içinde '180 derece' sağa dön bloğuyla oluşturulmuştur. 
          
          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project3_authored_hint:
        courseD_artist_project3_a: Dönüş bloklarının üzerindeki oktan gerekli olan dönüş açısını seçebilirsin!
        courseD_artist_project3_b: "İç içe döngüleri dene!\n\nŞekillerin çizgilerini çizmek için oluşturduğun kodları kullan ve başka bir döngünün içinde iç içe yerleştir. Altta, dıştaki döngü bitmeden önce Elsa'yı etrafında çeviren bir blok ekle.\n\n- Eğer dıştaki döngüyü 5 defa tekrarlıyorsan 72 dereceyi dene\n- Eğer dıştaki döngüyü 6 defa tekrarlıyorsan 60 dereceyi dene"
      courseD_artist_project3_2018_authored_hint:
        courseD_artist_project3_a: Dönüş bloklarının üzerindeki oktan gerekli olan dönüş açısını seçebilirsin!
        courseD_artist_project3_b: "İç içe döngüleri dene!\n\nŞekillerin çizgilerini çizmek için oluşturduğun kodları kullan ve başka bir döngünün içinde iç içe yerleştir. Altta, dıştaki döngü bitmeden önce Elsa'yı etrafında çeviren bir blok ekle.\n\n- Eğer dıştaki döngüyü 5 defa tekrarlıyorsan 72 dereceyi dene\n- Eğer dıştaki döngüyü 6 defa tekrarlıyorsan 60 dereceyi dene"
      courseD_artist_project3a_authored_hint:
        courseD_artist_project3a_a: Şeklinizi döndürmek için farklı yollar da seçebilirsiniz! 18 defa, 20 derece döndürmeye ne dersin?
      courseD_artist_project3a_2018_authored_hint:
        courseD_artist_project3a_a: Şeklinizi döndürmek için farklı yollar da seçebilirsiniz! 18 defa, 20 derece döndürmeye ne dersin?
      courseD_artist_project4_authored_hint:
        courseD_artist_project4_a: |
          İşte üçgen bir kar tanesinden önce 36 derecelik dönüşlü beşgen kar tanesi:
          
          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />
          
          
          İşte karelerle bir altıgen kümesi:
          
          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Bunu denemek için önce ilk kar tanesini çiz, sonra dön ve ikinci kar tanesini çiz.
      courseD_artist_project4_2018_authored_hint:
        courseD_artist_project4_a: |
          İşte üçgen bir kar tanesinden önce 36 derecelik dönüşlü beşgen kar tanesi:
          
          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />
          
          
          İşte karelerle bir altıgen kümesi:
          
          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Bunu denemek için önce ilk kar tanesini çiz, sonra dön ve ikinci kar tanesini çiz.
      courseD_artist_project4a_authored_hint:
        courseD_artist_project4a_a: |
          Burada 2 farklı uzunlukta birbiri ardına çizilen kar tanesi var (aralarında 30 derece dönüş ile).
          
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2018_authored_hint:
        courseD_artist_project4a_a: |
          Burada 2 farklı uzunlukta birbiri ardına çizilen kar tanesi var (aralarında 30 derece dönüş ile).
          
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project5_authored_hint:
        courseD_artist_project4_a: |
          2 altıgen ve 4 üçgen çizgileri:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2018_authored_hint:
        courseD_artist_project4_a: |
          2 altıgen ve 4 üçgen çizgileri:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_projectTemplate_authored_hint: [ ]
      courseD_artist_projectTemplate_2018_authored_hint: [ ]
      courseD_artist_project_embedded_authored_hint: [ ]
      courseD_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan ve 100 yerine 200 gir.
        courseD_artist_ramp11b: |-
          4 tarafı çizmek için 'ileri 100 piksel' bloğunu döngü içine yerleştirin ve 4 kez çizmek için ayarlandığından emin olun. 
          Daha sonra dönüşü de unutma!
        courseD_artist_ramp11_c: Döngünüzün içine 'dön' bloğu yerleştirmeyi unutmayın!
      courseD_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: Önce kare sonra üçgen çizebilirsin yada tam tersi sırada!
        courseD_artist_ramp12_b: Problemi 2 parçaya ayırmayı ve 2 farklı 'tekrarla' döngüsü kullanmayı deneyin.
        courseD_artist_ramp12_c: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
      courseD_bee_conditionals1_authored_hint:
        courseD_bee_conditionals1_a: You will need to use an `if` block to check to see if there is a flower beneath the cloud before you try to get nectar.
      courseD_bee_conditionals10_authored_hint: [ ]
      courseD_bee_conditionals10_2018_authored_hint: [ ]
      courseD_bee_conditionals1_predict1_authored_hint:
        courseD_bee_conditionals1_a: You will need to use an `if` block to check to see if there is a flower beneath the cloud before you try to get nectar.
      courseD_bee_conditionals1_predict1_2018_authored_hint:
        courseD_bee_conditionals1_a: You will need to use an `if` block to check to see if there is a flower beneath the cloud before you try to get nectar.
      courseD_bee_conditionals2_authored_hint:
        courseD_bee_conditionals2_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals2_a: Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.
        courseD_bee_conditionals2_b: Bu labirent boyunca ilerlemek için 'tekrarla' veya 'yol olduğu süresince' bloklarını kullanabilirsiniz.
        courseD_bee_conditionals2_c: Petekleri kontrol etmenize gerek yok, bulutların altında sadece çiçekler veya boş alanlar var.
        courseD_bee_conditionals2_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals2_2018_authored_hint:
        courseD_bee_conditionals2_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals2_a: Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.
        courseD_bee_conditionals2_b: Bu labirent boyunca ilerlemek için 'tekrarla' veya 'yol olduğu süresince' bloklarını kullanabilirsiniz.
        courseD_bee_conditionals2_c: Petekleri kontrol etmenize gerek yok, bulutların altında sadece çiçekler veya boş alanlar var.
        courseD_bee_conditionals2_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals2_test_authored_hint:
        courseD_bee_conditionals2_aa: Başlangıçta yardıma ihtiyacınız mı var? İşte burada biraz ipucu videosu.
        courseD_bee_conditionals2_a: Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.
        courseD_bee_conditionals2_b: Bu labirent boyunca ilerlemek için 'tekrarla' veya 'yol olduğu süresince' bloklarını kullanabilirsiniz.
        courseD_bee_conditionals2_c: Petekleri kontrol etmenize gerek yok, bulutların altında sadece çiçekler veya boş alanlar var.
        courseD_bee_conditionals2_d: İşleri bitirirken yardıma mı ihtiyacınız var? Bu ipucu videosunu izle.
      courseD_bee_conditionals3_authored_hint:
        courseD_bee_conditionals3_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals3_a: Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.
        courseD_bee_conditionals3_b: Arının ileriye gitmesini devam ettirmek için 'tekrarla' veya 'süresince' bloklarını kullanabilirsiniz. Hangisini isterseniz onu kullanın!
        courseD_bee_conditionals3_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseD_bee_conditionals3_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals3_2018_authored_hint:
        courseD_bee_conditionals3_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals3_a: Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.
        courseD_bee_conditionals3_b: Arının ileriye gitmesini devam ettirmek için 'tekrarla' veya 'süresince' bloklarını kullanabilirsiniz. Hangisini isterseniz onu kullanın!
        courseD_bee_conditionals3_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseD_bee_conditionals3_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals4_authored_hint:
        courseD_bee_conditionals4_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals4_a: You can still treat every space as if there is a cloud over it, even though you can see the whole path.
        courseD_bee_conditionals4_b: 'Use an `if` statement inside your loop to check each space for nectar. '
        courseD_bee_conditionals4_c: '''Yol olduğu sürece'' <xml><block type="maze_untilBlocked"/></xml> bloğu kullandığında ''İlerle'' ve bir çiçek var mı kontrol et. ''Eğer çiçek var ise'' arı ne yapmalı?'
        courseD_bee_conditionals4_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals4_2018_authored_hint:
        courseD_bee_conditionals4_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals4_a: You can still treat every space as if there is a cloud over it, even though you can see the whole path.
        courseD_bee_conditionals4_b: 'Use an `if` statement inside your loop to check each space for nectar. '
        courseD_bee_conditionals4_c: '''Yol olduğu sürece'' <xml><block type="maze_untilBlocked"/></xml> bloğu kullandığında ''İlerle'' ve bir çiçek var mı kontrol et. ''Eğer çiçek var ise'' arı ne yapmalı?'
        courseD_bee_conditionals4_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals5_authored_hint:
        courseD_bee_conditionals5_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals5_a: Dikdörtgen yolun her tarafını ayrı bir yol olarak düşün. "Tekrarla" bloğu içine "yol olduğu sürece" bloğu koy. Arının bütün çiçekleri yoklaması gerekiyor, bunun için kaç tane yol gitmeksi gerekir?
        courseD_bee_conditionals5_c: Bir üçgenin 3 kenarı vardır bu yüzden 'Tekrarla 3 kez ' döngüsü kullanman gerekir. Her tekrarda 'yol olduğu sürece' döngüsü ile yol boyunca devam etmesi gerekir. Yola devam etmek için 'ilerle ' gerekir. Yolda iken, arının çiçekleri denetlemesi gerekir. 'eğer çiçek ise', arı 'nektar almalı'.
        courseD_bee_conditionals5_b: '''Yol olduğu süresince'' bloğu içinde ilerle ve bir çiçek varmı kontrol et blokları kullanmalısın. Bir çiçek olup olmadığını nasıl kontrol edebilirim? Bir çiçek varsa ne yapıyorsun?'
        courseD_bee_conditionals5_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals5_2018_authored_hint:
        courseD_bee_conditionals5_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals5_a: Dikdörtgen yolun her tarafını ayrı bir yol olarak düşün. "Tekrarla" bloğu içine "yol olduğu sürece" bloğu koy. Arının bütün çiçekleri yoklaması gerekiyor, bunun için kaç tane yol gitmeksi gerekir?
        courseD_bee_conditionals5_c: Bir üçgenin 3 kenarı vardır bu yüzden 'Tekrarla 3 kez ' döngüsü kullanman gerekir. Her tekrarda 'yol olduğu sürece' döngüsü ile yol boyunca devam etmesi gerekir. Yola devam etmek için 'ilerle ' gerekir. Yolda iken, arının çiçekleri denetlemesi gerekir. 'eğer çiçek ise', arı 'nektar almalı'.
        courseD_bee_conditionals5_b: '''Yol olduğu süresince'' bloğu içinde ilerle ve bir çiçek varmı kontrol et blokları kullanmalısın. Bir çiçek olup olmadığını nasıl kontrol edebilirim? Bir çiçek varsa ne yapıyorsun?'
        courseD_bee_conditionals5_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals6_authored_hint:
        courseD_bee_conditionals6_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals6_a: Make sure to use an `if` statement to check for honeycomb beneath each cloud.
        courseD_bee_conditionals6_b: Bu durumda, bulutların altında çiçek var mı diye kontrol etmek zorunda değilsiniz.
        courseD_bee_conditionals6_c: Kodunu daha basit hale getirmek için kullanabileceğin bir döngü var mı?
        courseD_bee_conditionals6_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals6_2018_authored_hint:
        courseD_bee_conditionals6_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals6_a: Make sure to use an `if` statement to check for honeycomb beneath each cloud.
        courseD_bee_conditionals6_b: Bu durumda, bulutların altında çiçek var mı diye kontrol etmek zorunda değilsiniz.
        courseD_bee_conditionals6_c: Kodunu daha basit hale getirmek için kullanabileceğin bir döngü var mı?
        courseD_bee_conditionals6_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals7_authored_hint:
        courseD_bee_conditionals7_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
        courseD_bee_conditionals7_b: Eğer bulutun altında çiçek yoksa, petek olmalı;bu sebeple boş alan mı diye düşünmene gerek yok.
        courseD_bee_conditionals7_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals7_2018_authored_hint:
        courseD_bee_conditionals7_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
        courseD_bee_conditionals7_b: Eğer bulutun altında çiçek yoksa, petek olmalı;bu sebeple boş alan mı diye düşünmene gerek yok.
        courseD_bee_conditionals7_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals7_predict2_authored_hint:
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
      courseD_bee_conditionals7_predict2_2018_authored_hint:
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
      courseD_bee_conditionals8_authored_hint:
        courseD_bee_conditionals8_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals8_a: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
        courseD_bee_conditionals8_b: |-
          This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.
          
          Only check for nectar and honey at the end of your path.
        courseD_bee_conditionals8_c: Yolculuğun her yolun sonunda bittiğinden nasıl emin olabilirsin, ne kadar uzun olursa olsun?
        courseD_bee_conditionals8_d: |-
          Her ne kadar tam önünde bir bulut olsa da, ilk olarak onu ziyaret etmek zorunda değilsin. Karenin sağ alt köşesindeki ile başlamayı dene. 
          
          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals8_2018_authored_hint:
        courseD_bee_conditionals8_hintVid1: Başlangıçta yardıma ihtiyacınız mı var? Videoyu izleyin!
        courseD_bee_conditionals8_a: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
        courseD_bee_conditionals8_b: |-
          This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.
          
          Only check for nectar and honey at the end of your path.
        courseD_bee_conditionals8_c: Yolculuğun her yolun sonunda bittiğinden nasıl emin olabilirsin, ne kadar uzun olursa olsun?
        courseD_bee_conditionals8_d: |-
          Her ne kadar tam önünde bir bulut olsa da, ilk olarak onu ziyaret etmek zorunda değilsin. Karenin sağ alt köşesindeki ile başlamayı dene. 
          
          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: Bu bulmacayı çözerken yardım almak için bu videoyu izleyin.
      courseD_bee_conditionals9_authored_hint: [ ]
      courseD_bee_conditionals9_2018_authored_hint: [ ]
      courseD_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: "Herhangi bir ağaca vurmadan her çiçeğe ve peteklere ulaşan bir yol bulabilir misin? En iyi yol bir spiraldir.\n"
        courseD_bee_conditionals_challenge1_b: Bu bulmacada her alanda çiçek, petek olabilir ya da hiçbir şey olmayabilir. Bu demektir ki her karede eğer/değilse (if/else) koşulunu tekrarlayabilirsin.
      courseD_bee_conditionals_challenge1_2018_authored_hint:
        courseD_bee_conditionals_challenge1_a: "Herhangi bir ağaca vurmadan her çiçeğe ve peteklere ulaşan bir yol bulabilir misin? En iyi yol bir spiraldir.\n"
        courseD_bee_conditionals_challenge1_b: Bu bulmacada her alanda çiçek, petek olabilir ya da hiçbir şey olmayabilir. Bu demektir ki her karede eğer/değilse (if/else) koşulunu tekrarlayabilirsin.
      courseD_bee_conditionals_challenge2_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          'eğer çiçekte' blokları gibi, kodun içindeki 'sürece nektar>0' sadece eğer arı çiçekte ise çalışacaktır. Ana farklılık içindeki kod nektar kalmayıncaya kadar tekrarlayarak çalışacaktır. Bu deseni deneyin: 
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">kalan nektar</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge2_2018_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          'eğer çiçekte' blokları gibi, kodun içindeki 'sürece nektar>0' sadece eğer arı çiçekte ise çalışacaktır. Ana farklılık içindeki kod nektar kalmayıncaya kadar tekrarlayarak çalışacaktır. Bu deseni deneyin: 
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">kalan nektar</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge3_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          'eğer çiçekte' blokları gibi, kodun içindeki 'sürece nektar>0' sadece eğer arı çiçekte ise çalışacaktır. Ana farklılık içindeki kod nektar kalmayıncaya kadar tekrarlayarak çalışacaktır. Bu deseni deneyin: 
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">kalan nektar</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_debugging1_authored_hint:
        courseD_bee_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_bee_debugging1_b: Do you see any patterns that could be made more simple using a `repeat` loop?
      courseD_bee_debugging2_authored_hint:
        courseD_bee_debugging2_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_bee_debugging2_b: "Do you see a pattern?   \nTry using nested loops to solve this puzzle.\n\n![](https://images.code.org/72fbb8a06937479599b12804f990a0f3-image-1501012383369.50.27.png)"
      courseD_bee_debugging3_authored_hint:
        courseD_bee_debugging3_a: Is there any place where the bee does something that doesn't make sense? What happens when you change those blocks?
        courseD_bee_debugging3_b: Try simplifying the code using nested loops.
      courseD_bee_debugging4_authored_hint:
        courseD_bee_debugging4_a: "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?"
        courseD_bee_debugging4_b: "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
      courseD_bee_debugging5_authored_hint:
        courseD_bee_debugging5_a: |-
          Start by looking at just the first loop.
          
          What does it do?
          
          What is it supposed to do?
          
          What does that tell you?
        courseD_bee_debugging5_b: Once you have the first loop the way you want it, what is left over in your code?
        courseD_bee_debugging5_c: |-
          Try wrapping the leftover loop around the rest of your completed code.  Does is work now?
          
          If not, what is still going wrong?
      courseD_bee_debugging6_authored_hint:
        courseD_bee_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?
          
          How about the second?
          
          Where do things go wrong?
        courseD_bee_debugging6_b: It looks like all of the right steps are here, you just need more of them.  How can you repeat the `get nectar` and `make honey` actions multiple times?
      courseD_bee_debugging7_authored_hint:
        courseD_bee_debugging7_a: "Try using the \"Step\" button.  Is everything right at the first step?  \n\nHow about the second?  \n\nWhere does it go wrong?  "
        courseD_bee_debugging7_b: If something needs to happen several times, try adding a `repeat` loop.
      courseD_bee_debugging8_authored_hint:
        courseD_bee_debugging8_a: Do you see a pattern that you can simplify with a loop?
        courseD_bee_debugging8_b: Try using a nested loop to make this code shorter.
      courseD_bee_debugging9_authored_hint:
        courseD_bee_debugging9_a: There are several ways to solve this problem...but they all involve turns!
        courseD_bee_debugging9_b: Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.
        courseD_bee_debugging9_c: "Çiçekler için merdiven basamaklarının birini zihninizde canlandırın.\n\n![](https://images.code.org/d3dfd710961b9ff8571816a97d76ae46-image-1501012931437.59.18.png)\n\nBunların ikisini çalışma alanındakiler ve araç kutusu ile yapabilir misiniz?\n\n"
      courseD_bee_debugging9_predict1_authored_hint: [ ]
      courseD_bee_debugging_challenge1_authored_hint:
        courseD_bee_debugging_challenge1_a: Neden programın ilk yarısı çalışıyor? Arıların neden geri gitmeye ihtiyaç duyduğunu düşün. Arı her çiçeğe gittiğinde ne kadar nektar toplamalı?
        courseD_bee_debugging_challenge1_b: Dönüş yolunda arının aynı deseni takip etmesini sağlayın. Arının peteğin üzerinde hareket ettiği her defasında ne kadar bal yapmaya ihtiyacı var?
        courseD_bee_debugging_challenge1_c: |-
          Arı alt sıraya kadar yaptıktan sonra, aşağıdaki komutları tekrarlamasını sağla:
          * 2 defa tekrarla:
          * İlerle
          * 3 bal yap
          * Geriye git
      courseD_bee_debugging_challenge1_2018_authored_hint:
        courseD_bee_debugging_challenge1_a: Neden programın ilk yarısı çalışıyor? Arıların neden geri gitmeye ihtiyaç duyduğunu düşün. Arı her çiçeğe gittiğinde ne kadar nektar toplamalı?
        courseD_bee_debugging_challenge1_b: Dönüş yolunda arının aynı deseni takip etmesini sağlayın. Arının peteğin üzerinde hareket ettiği her defasında ne kadar bal yapmaya ihtiyacı var?
        courseD_bee_debugging_challenge1_c: |-
          Arı alt sıraya kadar yaptıktan sonra, aşağıdaki komutları tekrarlamasını sağla:
          * 2 defa tekrarla:
          * İlerle
          * 3 bal yap
          * Geriye git
      courseD_bee_debugging_challenge1a_authored_hint:
        courseD_bee_debugging_challenge1_a: Bu programın neden ilk yarısı çalıştı? Arıların neden geriye gitmeleri gerektiği hakkında düşünün. Çiçeklerin üzerinden her geçtiklerinde arılar ne kadar nektar toplarlar?
        courseD_bee_debugging_challenge1_b: Bu bulmacayı çözmek için, arıya bal yapması için nektar toplarken izlediği yolun aynısını izlettirin. 
        courseD_bee_debugging_challenge1_c: |-
          Arı alt diziye ulaştıktan sonra, ona bu komutları tekrarlattırın:
          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">ilerle</title>
          <next>
          <block type="maze_honey"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">gerigit</title>
          </block>
          </next>
          </block></xml>
      courseD_bee_debugging_challenge2_authored_hint:
        courseD_bee_debugging_challenge1_a: Bu programın neden ilk yarısı çalıştı? Arıların neden geriye gitmeleri gerektiği hakkında düşünün. Çiçeklerin üzerinden her geçtiklerinde arılar ne kadar nektar toplarlar?
        courseD_bee_debugging_challenge1_b: Dönüş yolunda arının aynı deseni takip etmesini sağlayın. Arının peteğin üzerinde hareket ettiği her defasında ne kadar bal yapmaya ihtiyacı var?
        courseD_bee_debugging_challenge1_c: |-
          Arı alt sıraya kadar yaptıktan sonra, aşağıdaki komutları tekrarlamasını sağla:
          * 2 defa tekrarla:
          * İlerle
          * 3 bal yap
          * Geriye git
      courseD_bee_nestedLoops1_authored_hint:
        courseD_bee_nestedLoops1_a: Not working?  Try using the "Step" button to see what happens line by line.
        courseD_bee_nestedLoops1_b: Önce karenin ilk kenarı için kodu yazmayı deneyin. Bütün nektarları almak için bununla bir döngü kurabilir misiniz?
        courseD_bee_nestedLoops1_c: Çiçekli bir alan üzerindeyken 'nektar al' bloğunu kullanmayı unutmayın.
      courseD_bee_nestedLoops1_2018_authored_hint:
        courseD_bee_nestedLoops1_a: Not working?  Try using the "Step" button to see what happens line by line.
        courseD_bee_nestedLoops1_b: Önce karenin ilk kenarı için kodu yazmayı deneyin. Bütün nektarları almak için bununla bir döngü kurabilir misiniz?
        courseD_bee_nestedLoops1_c: Çiçekli bir alan üzerindeyken 'nektar al' bloğunu kullanmayı unutmayın.
      courseD_bee_nestedLoops1a_authored_hint:
        courseD_bee_nestedLoops1_a: Not working?  Try using the "Step" button to see what happens line by line.
        courseD_bee_nestedLoops1_c: Çiçekli bir alan üzerindeyken 'nektar al' bloğunu kullanmayı unutmayın.
      courseD_bee_nestedLoops1a_2018_authored_hint:
        courseD_bee_nestedLoops1_a: Not working?  Try using the "Step" button to see what happens line by line.
        courseD_bee_nestedLoops1_c: Çiçekli bir alan üzerindeyken 'nektar al' bloğunu kullanmayı unutmayın.
      courseD_bee_nestedLoops2_authored_hint:
        courseD_bee_nestedLoops2_a: To solve this puzzle, you will need to nest one `repeat` loop inside of another.
        courseD_bee_nestedLoops2_b: Döngüleri nereye koyacağınızı bulamıyor musunuz? Kodu adım adım kağıda yazmayı ve bir desen bulmayı deneyin.
        courseD_bee_nestedLoops2_c: Bir döngünün içine bir bloktan fazlasını koyabileceğinizi unutmayın.
      courseD_bee_nestedLoops2_2018_authored_hint:
        courseD_bee_nestedLoops2_a: To solve this puzzle, you will need to nest one `repeat` loop inside of another.
        courseD_bee_nestedLoops2_b: Döngüleri nereye koyacağınızı bulamıyor musunuz? Kodu adım adım kağıda yazmayı ve bir desen bulmayı deneyin.
        courseD_bee_nestedLoops2_c: Bir döngünün içine bir bloktan fazlasını koyabileceğinizi unutmayın.
      courseD_bee_nestedLoops2_predict1_authored_hint: [ ]
      courseD_bee_nestedLoops2_predict1_2018_authored_hint: [ ]
      courseD_bee_nestedLoops3_authored_hint:
        grade4_bee_nestedLoops1_a: If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see.
      courseD_bee_nestedLoops5_authored_hint:
        grade4_bee_nestedLoops4_a: Try building your code line by line and see if you can spot the places where a repeat will make the code shorter!
        grade4_bee_nestedLoops4_b: |-
          You will need a nested loop to move forward and get nectar, but only a single loop to collect honey at the end.
          
          Altogether, you should be using 3 loops.
      courseD_bee_nestedLoops6_authored_hint: [ ]
      courseD_bee_nestedLoops6_2018_authored_hint:
        courseD_maze_nestedLoops6_a: If you are stuck, try writing out the code out on paper without loops first and look for patterns.
        courseD_maze_nestedLoops6_b: Nesting `repeat` loops can help decrease the number of blocks used.
        courseD_maze_nestedLoops6_c: It will take two sets of nested `repeat` loops to solve this puzzle.
      courseD_bee_nestedLoops7_authored_hint:
        courseD_bee_nestedLoops7_a: You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.
        courseD_bee_nestedLoops7_b: You will need to use all three of the available `repeat` blocks to solve this puzzle.
        courseD_bee_nestedLoops7_c: |
          Nest your blocks three deep, like this:
          
          - repeat 4
          - repeat 3
          - repeat 12
          - get nectar
          - move forward
          - turn right
      courseD_bee_nestedLoops7_2018_authored_hint:
        courseD_bee_nestedLoops7_a: You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.
        courseD_bee_nestedLoops7_b: You will need to use all three of the available `repeat` blocks to solve this puzzle.
        courseD_bee_nestedLoops7_c: |
          Nest your blocks three deep, like this:
          
          - repeat 4
          - repeat 3
          - repeat 12
          - get nectar
          - move forward
          - turn right
      courseD_bee_nestedLoops8_authored_hint: [ ]
      courseD_bee_nestedLoops8_2018_authored_hint: [ ]
      courseD_bee_nestedLoops9_authored_hint: [ ]
      courseD_bee_nestedLoops9_2018_authored_hint: [ ]
      courseD_bee_nestedLoops9_predict2_authored_hint: [ ]
      courseD_bee_nestedLoops9_predict2_2018_authored_hint: [ ]
      courseD_bee_nested_loops_challenge1_authored_hint:
        courseD_bee_nested_loops_challenge2_a: Tek bir komutu ya da daha uzun bir kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi 'tekrarlayabilirsin'!
        courseD_bee_nested_loops_challenge2_b: 4 taşı elde etmek için öncelikle merkezden uzaklaştırmak amacıyla bir döngü kullan. Sağa veya sola dön, sonra ilk hazine yığınından diğerine geçmek için iç içe döngü kullan. İç içe döngüyü yeterince tekrarlarsan, toplayıcı mağara *boyunca* hareket edecektir!
        courseD_bee_nested_loops_challenge2_c: Tüm hazineye ulaşmanı sağlayacak en kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
      courseD_bee_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: Tek bir komutu ya da daha uzun bir kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi 'tekrarlayabilirsin'!
        courseD_bee_nested_loops_challenge2_b: 4 taşı elde etmek için öncelikle merkezden uzaklaştırmak amacıyla bir döngü kullan. Sağa veya sola dön, sonra ilk hazine yığınından diğerine geçmek için iç içe döngü kullan. İç içe döngüyü yeterince tekrarlarsan, toplayıcı mağara *boyunca* hareket edecektir.
        courseD_bee_nested_loops_challenge2_c: Tüm hazineye ulaşmanı sağlayacak en kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
        courseD_bee_nested_loops_challenge2_d: Tüm hazineye ulaşmanı sağlayacak en kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
      courseD_bounce_events10s_authored_hint:
        courseD_bounce_events10s_a: |-
          Kodunda bu olayların ikisini de bulundurmalısın:
          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">Hışırtı</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">Islık</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block</xml>
      courseD_bounce_events10s_2018_authored_hint:
        courseD_bounce_events10s_a: |-
          Kodunda bu olayların ikisini de bulundurmalısın:
          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">Hışırtı</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">Islık</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block</xml>
      courseD_bounce_events11s_authored_hint:
        courseD_bounce_events11s_a: Oyun başladığında, sepeti vurduğunda ve el topu kaçırdığında topu atmalısın.
      courseD_bounce_events11s_2018_authored_hint:
        courseD_bounce_events11s_a: Oyun başladığında, sepeti vurduğunda ve el topu kaçırdığında topu atmalısın.
      courseD_bounce_events12s_authored_hint:
        courseD_bounce_events12s_a: Bu blokları 'çalıştığı zaman' olayına ekleyerek eli veya basket topunu hızlandırabilirsin.
        courseD_bounce_events12s_b: Her atışın değerini 2 puan yapmayı ve takım logosunu sizin memleketinizin logosuyla değiştirmeyi deneyin!
      courseD_bounce_events12s_2018_authored_hint:
        courseD_bounce_events12s_a: Bu blokları 'çalıştığı zaman' olayına ekleyerek eli veya basket topunu hızlandırabilirsin.
        courseD_bounce_events12s_b: Her atışın değerini 2 puan yapmayı ve takım logosunu sizin memleketinizin logosuyla değiştirmeyi deneyin!
      courseD_bounce_events1s_authored_hint:
        courseD_bounce_events1s_a: "Bu oyunun çalışması için 'sola ilerle' bloğunu 'sol oka basıldığında' olayına eklemeniz gerekir:\n<xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n   \n   </xml>"
        courseD_bounce_events1s_b: Bu bulmacayı çözmek için "Çalıştır" düğmesine basmayı ve eli sepete almayı unutma.
      courseD_bounce_events1s_2018_authored_hint:
        courseD_bounce_events1s_a: "Bu oyunun çalışması için 'sola ilerle' bloğunu 'sol oka basıldığında' olayına eklemeniz gerekir:\n<xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n   \n   </xml>"
        courseD_bounce_events1s_b: Bu bulmacayı çözmek için "Çalıştır" düğmesine basmayı ve eli sepete almayı unutma.
      courseD_bounce_events2s_authored_hint:
        courseD_bounce_events2s_a: |-
          Bunun çalışması için kodlanan 2 takım 'ilerle' olayına sahip olmanız gerekecek:
          
          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events2s_2018_authored_hint:
        courseD_bounce_events2s_a: |-
          Bunun çalışması için kodlanan 2 takım 'ilerle' olayına sahip olmanız gerekecek:
          
          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events5s_authored_hint:
        courseD_bounce_events5s_a: Bulmacayı çözmek için eli hareket ettirmeye gerek yok.
        courseD_bounce_events5s_b: |-
          Çalışma alanına bu kodu eklediğinizden emin olun:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2018_authored_hint:
        courseD_bounce_events5s_a: Bulmacayı çözmek için eli hareket ettirmeye gerek yok.
        courseD_bounce_events5s_b: |-
          Çalışma alanına bu kodu eklediğinizden emin olun:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events6s_authored_hint:
        courseD_bounce_events6s_a: |-
          Bunun gibi bir olayınız var mı?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Eğer kodu doğru yazdıysanız, kazanmak için eli hareket ettirmeniz gerekmez.
      courseD_bounce_events6s_2018_authored_hint:
        courseD_bounce_events6s_a: |-
          Bunun gibi bir olayınız var mı?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Eğer kodu doğru yazdıysanız, kazanmak için eli hareket ettirmeniz gerekmez.
      courseD_bounce_events7s_authored_hint:
        courseD_bounce_events7s_a: İstiyorsanız daha fazla yere ses ekleyebilirsiniz!
      courseD_bounce_events7s_2018_authored_hint:
        courseD_bounce_events7s_a: İstiyorsanız daha fazla yere ses ekleyebilirsiniz!
      courseD_bounce_events_template_authored_hint: [ ]
      courseD_bounce_events_template_2018_authored_hint: [ ]
      courseD_collector_debugging1_authored_hint:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_collector_debugging1_b: Do you see any patterns that could be made more simple using a `repeat` loop?
        courseD_collector_debugging1_c: 'Hazineye ulaştıktan sonra hazineyi almak için ''topla'' bloğunu kullanmayı unutmayın.'
      courseD_collector_debugging10_predict1_authored_hint:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging10_predict1_2018_authored_hint:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging1_2018_authored_hint:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_collector_debugging1_b: Do you see any patterns that could be made more simple using a `repeat` loop?
        courseD_collector_debugging1_c: 'Hazineye ulaştıktan sonra hazineyi almak için ''topla'' bloğunu kullanmayı unutmayın.'
      courseD_collector_debugging1a_authored_hint:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_collector_debugging1_c: 'Hazineye ulaştıktan sonra hazineyi almak için ''topla'' bloğunu kullanmayı unutmayın.'
      courseD_collector_debugging1a_2018_authored_hint:
        courseD_collector_debugging1_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_collector_debugging1_c: 'Hazineye ulaştıktan sonra hazineyi almak için ''topla'' bloğunu kullanmayı unutmayın.'
      courseD_collector_debugging2_authored_hint:
        courseD_collector_debugging2_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_collector_debugging2_b: Do you see any patterns that could be made more simple using a `repeat` loop?
        courseD_collector_debugging2_c: Bu U şeklinin bir tarafı için kod yazmayı deneyin. Diğer iki taraftaki hazineyi toplamak için bunu tekrar edebilir misin?
      courseD_collector_debugging2_2018_authored_hint:
        courseD_collector_debugging2_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_collector_debugging2_b: Do you see any patterns that could be made more simple using a `repeat` loop?
        courseD_collector_debugging2_c: Bu U şeklinin bir tarafı için kod yazmayı deneyin. Diğer iki taraftaki hazineyi toplamak için bunu tekrar edebilir misin?
      courseD_collector_debugging2a_authored_hint:
        courseD_collector_debugging2a_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_collector_debugging2a_c: |-
          Ne oluyor?
          
          Ne olması gerekir?
          
          Bu sana ne söylüyor?
      courseD_collector_debugging2a_2018_authored_hint:
        courseD_collector_debugging2a_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_collector_debugging2a_c: |-
          Ne oluyor?
          
          Ne olması gerekir?
          
          Bu sana ne söylüyor?
      courseD_collector_debugging3_authored_hint:
        courseD_collector_debugging3_a: Laurel'in anlamsız şeyler yaptığı herhangi bir yer var mı? Bu blokları değiştirdiğinde neler oluyor?
        courseD_collector_debugging3_b: Try simplifying the code using nested loops.
      courseD_collector_debugging3_2018_authored_hint:
        courseD_collector_debugging3_a: Laurel'in anlamsız şeyler yaptığı herhangi bir yer var mı? Bu blokları değiştirdiğinde neler oluyor?
        courseD_collector_debugging3_b: Try simplifying the code using nested loops.
      courseD_collector_debugging3a_authored_hint:
        courseD_collector_debugging3_a: Laurel'in anlamsız şeyler yaptığı herhangi bir yer var mı? Bu blokları değiştirdiğinde neler oluyor?
      courseD_collector_debugging3a_2018_authored_hint:
        courseD_collector_debugging3_a: Laurel'in anlamsız şeyler yaptığı herhangi bir yer var mı? Bu blokları değiştirdiğinde neler oluyor?
      courseD_collector_debugging4_authored_hint:
        courseD_collector_debugging4_a: "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
        courseD_collector_debugging4_c: Bu döngüde sadece bir blok eksik. Hangisi bulabilir misin?
      courseD_collector_debugging4_2018_authored_hint:
        courseD_collector_debugging4_a: "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
        courseD_collector_debugging4_c: Bu döngüde sadece bir blok eksik. Hangisi bulabilir misin?
      courseD_collector_debugging4a_authored_hint:
        courseD_collector_debugging4_a: "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
      courseD_collector_debugging4a_2018_authored_hint:
        courseD_collector_debugging4_a: "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?"
        courseD_collector_debugging4_b: "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
      courseD_collector_debugging5_authored_hint:
        courseD_collector_debugging5_a: |-
          Start by looking at just the first loop.
          
          What does it do?
          
          What is it supposed to do?
          
          What does that tell you?
        courseD_collector_debugging5_b: Once you have the first loop the way you want it, what is left over in your code?
      courseD_collector_debugging5_2018_authored_hint:
        courseD_collector_debugging5_a: |-
          Start by looking at just the first loop.
          
          What does it do?
          
          What is it supposed to do?
          
          What does that tell you?
        courseD_collector_debugging5_b: Once you have the first loop the way you want it, what is left over in your code?
      courseD_collector_debugging5a_authored_hint:
        courseD_collector_debugging5a_a: |-
          O ne yapıyor?
          
          Onun ne yapması gerekir?
          
          Bu sana ne söylüyor?
        courseD_collector_debugging5a_b: Hazinenin ilk satırını topladığınız zaman, kodunuzda ne kaldı?
      courseD_collector_debugging5a_2018_authored_hint:
        courseD_collector_debugging5a_a: |-
          O ne yapıyor?
          
          Onun ne yapması gerekir?
          
          Bu sana ne söylüyor?
        courseD_collector_debugging5a_b: Hazinenin ilk satırını topladığınız zaman, kodunuzda ne kaldı?
      courseD_collector_debugging6_authored_hint:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?
          
          How about the second?
          
          Where do things go wrong?
        courseD_collector_debugging6_b: Doğru adımların tamamı burada gibi görünüyor, sadece onlardan biraz daha fazla kullanmalısın. 'Topla' komutunu birden çok kez nasıl tekrarlayabilirsin?
      courseD_collector_debugging6_2018_authored_hint:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?
          
          How about the second?
          
          Where do things go wrong?
        courseD_collector_debugging6_b: Doğru adımların tamamı burada gibi görünüyor, sadece onlardan biraz daha fazla kullanmalısın. 'Topla' komutunu birden çok kez nasıl tekrarlayabilirsin?
      courseD_collector_debugging6a_authored_hint:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?
          
          How about the second?
          
          Where do things go wrong?
        courseD_collector_debugging6_b: İhtiyacınız olan bütün bloklar çalışma alanında gibi görünüyor. İşler çok kafa karıştırıcı olursa "baştan başla"ya tıklamayı deneyin.
      courseD_collector_debugging6a_2018_authored_hint:
        courseD_collector_debugging6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?
          
          How about the second?
          
          Where do things go wrong?
        courseD_collector_debugging6_b: İhtiyacınız olan bütün bloklar çalışma alanında gibi görünüyor. İşler çok kafa karıştırıcı olursa "baştan başla"ya tıklamayı deneyin.
      courseD_collector_debugging7_authored_hint:
        courseD_collector_debugging7_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?
          
          How about the second?
          
          Where do things go wrong?
        courseD_collector_debugging7_b: If something needs to happen several times, try adding a `repeat` loop.
        courseD_collector_debugging7_c: Eğer sorun yaşıyorsan, bir kağıda basamakları yazmayı ve sonra blokları bu sıraya koymayı deneyin.
      courseD_collector_debugging8_authored_hint:
        courseD_collector_debugging8_a: Do you see a pattern that you can simplify with a loop?
        courseD_collector_debugging8_b: Try using a nested loop to make this code shorter.
      courseD_collector_debugging8_2018_authored_hint:
        courseD_collector_debugging8_a: Do you see a pattern that you can simplify with a loop?
        courseD_collector_debugging8_b: Try using a nested loop to make this code shorter.
      courseD_collector_debugging8a_authored_hint: [ ]
      courseD_collector_debugging8a_2018_authored_hint: [ ]
      courseD_collector_debugging9_authored_hint:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging9_2018_authored_hint:
        courseD_collector_debugging9_a: There are several ways to solve this problem...but they all involve turns!
        courseD_collector_debugging9_b: Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.
      courseD_collector_debugging9a_authored_hint: [ ]
      courseD_collector_debugging9a_2018_authored_hint: [ ]
      courseD_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "İlk iki yığının her birinden ikişer adet mücevher toplamaya odaklanarak başlayın .\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png)\nBu blokları kullan.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">ilerle</title>\n\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Sonra, bu sıradaki kalan mücevherleri toplayın.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png)\nBu blokları programınıza ekleyin.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Son olarak, kalan hazineyi toplayın. Bu blokları programınıza ekleyin.\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Bu bulmaca için çözümün tamamı burada.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_debugging_challenge2_2018_authored_hint:
        courseD_collector_debugging_challenge2_a: "İlk iki yığının her birinden ikişer adet mücevher toplamaya odaklanarak başlayın .\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png)\nBu blokları kullan.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">ilerle</title>\n\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Sonra, bu sıradaki kalan mücevherleri toplayın.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png)\nBu blokları programınıza ekleyin.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Son olarak, kalan hazineyi toplayın. Bu blokları programınıza ekleyin.\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Bu bulmaca için çözümün tamamı burada.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: Tek bir komutu ya da daha uzun bir kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi 'tekrarlayabilirsin'!
        courseD_bee_nested_loops_challenge2_b: 4 taşı elde etmek için öncelikle merkezden uzaklaştırmak amacıyla bir döngü kullan. Sağa veya sola dön, sonra ilk hazine yığınından diğerine geçmek için iç içe döngü kullan. İç içe döngüyü yeterince tekrarlarsan, toplayıcı mağara *boyunca* hareket edecektir!
        courseD_bee_nested_loops_challenge2_c: Tüm hazineye ulaşmanı sağlayacak en kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
        courseD_bee_nested_loops_challenge2_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018_authored_hint:
        courseD_bee_nested_loops_challenge2_a: Tek bir komutu ya da daha uzun bir kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi 'tekrarlayabilirsin'!
        courseD_bee_nested_loops_challenge2_b: 4 taşı elde etmek için öncelikle merkezden uzaklaştırmak amacıyla bir döngü kullan. Sağa veya sola dön, sonra ilk hazine yığınından diğerine geçmek için iç içe döngü kullan. İç içe döngüyü yeterince tekrarlarsan, toplayıcı mağara *boyunca* hareket edecektir!
        courseD_bee_nested_loops_challenge2_c: Tüm hazineye ulaşmanı sağlayacak en kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
        courseD_bee_nested_loops_challenge2_d: |-
          **Çözüm:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2a_authored_hint:
        courseD_collector_nested_loops_challenge2a_a: Tek bir komutu ya da daha uzun bir kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi 'tekrarlayabilirsin'!
        courseD_collector_nested_loops_challenge2a_b: 2 tane elmas toplamak için gerekenden fazla blok kullanmadan nasıl 4 elmasın hepsini toplayacağınızı bulabilir misiniz?
      courseD_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          Dört blok 'ilerle' bloğu kullanmak yerine, tekrarla döngü bloğu içine ilerle bloğu koymayı deneyin: <xml><block type="controls_repeat"> <title name="TIMES">4</title> <statement name="DO"> <block type="maze_moveForward"/> </statement> </block></xml>
        courseD_artist_ramp10_b: "Önce bir parça hazine toplayın sonra karenin başka kenarından başlamak için dönüş yapın!\n"
        courseD_artist_ramp10_c: Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir.
      courseD_collector_ramp8_authored_hint:
        courseD_collector_ramp8_a: Hazinenin olduğu bir alana ulaşırsanız, hazineyi toplamak için 'topla' kullanın. Bu bulmacada, daha önce topladığınızdan daha fazla hazine toplamanız gerekecek!
        courseD_collector_ramp8_b: Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir.
      courseD_collector_ramp9_authored_hint:
        courseD_collector_ramp9_a: İlk olarak Laurel' i hazineye götürerek başlayın, sonra hazineyi toplatın. Bu sırayı ikinci yığını almak için tekrar edebilir misin?
        courseD_collector_ramp9_b: Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir.
      courseD_collector_until_challenge1_authored_hint: [ ]
      courseD_debugging_1_authored_hint:
        courseD_debugging_1_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_debugging_1_b: Do you see any patterns that could be made more simple using a `repeat` loop?
      courseD_debugging_2_authored_hint:
        courseD_debugging_2_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        courseD_debugging_2_b: Do you see a pattern?  Try using nested loops to solve this puzzle.
      courseD_debugging_3_authored_hint:
        courseD_debugging_3_a: Is there any place where the bee does something that doesn't make sense? What happens when you change those blocks?
        courseD_debugging_3_b: Try simplifying the code using nested loops.
      courseD_debugging_4_authored_hint:
        courseD_debugging_4_a: "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?"
        courseD_debugging_4_b: "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
      courseD_debugging_5_authored_hint:
        courseD_debugging_5_a: |-
          Start by looking at just the first loop.
          
          What does it do?
          
          What is it supposed to do?
          
          What does that tell you?
        courseD_debugging_5_b: Once you have the first loop the way you want it, what is left over in your code?
        courseD_debugging_5_c: |-
          Try wrapping the leftover loop around the rest of your completed code.  Does is work now?
          
          If not, what is still going wrong?
      courseD_debugging_6_authored_hint:
        courseD_debugging_6_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?
          
          How about the second?
          
          Where do things go wrong?
        courseD_debugging_6_b: It looks like all of the right steps are here, you just need more of them.  How can you repeat the `get nectar` and `make honey` actions multiple times?
      courseD_external_cond_authored_hint: [ ]
      courseD_farmer_condLoops1_authored_hint:
        courseD_farmer_condLoops1_a: You will need to look for corn 5 times, using a repeat loop.
        courseD_farmer_condLoops1_b: Make sure to use an `if at corn` block or you might try to pick something that's not there!
      courseD_farmer_condLoops1_2018_authored_hint:
        courseD_farmer_condLoops1_a: You will need to look for corn 5 times, using a repeat loop.
        courseD_farmer_condLoops1_b: Make sure to use an `if at corn` block or you might try to pick something that's not there!
      courseD_farmer_condLoops2_authored_hint:
        courseD_farmer_condLoops2_a: 'The best way to do this is to nest `if` statements by placing one inside of the other.  '
        courseD_farmer_condLoops2_b: For this puzzle, you should have one `if/else` statement and one plain `if` statement.
        courseD_farmer_condLoops2_c: "'Eğer' ifadeniz şuna benzemeli:\n- Eğer mısırdaysan\n - mısırı al\n-değilsen\n - eğer maruldaysan\n  \\t-marulu al\n\neğer hiçbir şey yok ise, bir şey almak zorunda değilsiniz!"
      courseD_farmer_condLoops2_2018_authored_hint:
        courseD_farmer_condLoops2_a: 'The best way to do this is to nest `if` statements by placing one inside of the other.  '
        courseD_farmer_condLoops2_b: For this puzzle, you should have one `if/else` statement and one plain `if` statement.
        courseD_farmer_condLoops2_c: "'Eğer' ifadeniz şuna benzemeli:\n- Eğer mısırdaysan\n - mısırı al\n-değilsen\n - eğer maruldaysan\n  \\t-marulu al\n\neğer hiçbir şey yok ise, bir şey almak zorunda değilsiniz!"
      courseD_farmer_condLoops3_authored_hint:
        courseD_farmer_condLoops3_a: |-
          To get all of the items, try nesting `if` statements three deep.
          
          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        courseD_farmer_condLoops3_b: For this puzzle, you should have two `if/else` statements and one plain `if` statement.
      courseD_farmer_condLoops3_2018_authored_hint:
        courseD_farmer_condLoops3_a: |-
          To get all of the items, try nesting `if` statements three deep.
          
          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        courseD_farmer_condLoops3_b: For this puzzle, you should have two `if/else` statements and one plain `if` statement.
      courseD_farmer_condLoops4_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          No one knows how many heads of lettuce will grow from each sprout.
          
          Use a `while there is lettuce` loop to keep picking until each piece has been gathered.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: '''Süresince'' döngüsü boş alanları da işleyebilir. Bu sayede marul olmadığında, toplamayıp kodun devam etmesini sağlayacak.'
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: '''ileride yol olduğu sürece'' ya da ''tekrarla'' döngüsünü tüm ekinlerin arasından geçmek için kullanabilirsiniz.'
      courseD_farmer_condLoops4_2018_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          No one knows how many heads of lettuce will grow from each sprout.
          
          Use a `while there is lettuce` loop to keep picking until each piece has been gathered.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: '''Süresince'' döngüsü boş alanları da işleyebilir. Bu sayede marul olmadığında, toplamayıp kodun devam etmesini sağlayacak.'
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: '''ileride yol olduğu sürece'' ya da ''tekrarla'' döngüsünü tüm ekinlerin arasından geçmek için kullanabilirsiniz.'
      courseD_farmer_condLoops4a_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          No one knows how many heads of lettuce will grow from each sprout.
          
          Use a `while there is lettuce` loop to keep picking until each piece has been gathered.
      courseD_farmer_condLoops5_authored_hint:
        courseD_farmer_condLoops5_a: 'İşte yeni bir döngü: ''bir balkabağına kadar tekrarla''. Bunu, bu bulmacada nasıl kullanabileceğini görüyor musun?'
        courseD_farmer_condLoops5_b: Her noktada birden fazla mısır veya marul bitkisi olabilir. Onların tamamını toplamak için bir adet 'süresince' döngüsü kullan!
      courseD_farmer_condLoops5_2018_authored_hint:
        courseD_farmer_condLoops5_a: 'İşte yeni bir döngü: ''bir balkabağına kadar tekrarla''. Bunu, bu bulmacada nasıl kullanabileceğini görüyor musun?'
        courseD_farmer_condLoops5_b: Her noktada birden fazla mısır veya marul bitkisi olabilir. Onların tamamını toplamak için bir adet 'süresince' döngüsü kullan!
      courseD_farmer_condLoops6_authored_hint:
        courseD_farmer_condLoops6_a: Use a `while path ahead` loop to move the farmer down each piece of the spiral.
        courseD_farmer_condLoops6_b: You only need to check for corn during most of the harvest.  Just pick one pumpkin at the very end of your program.
      courseD_farmer_condLoops6_2018_authored_hint:
        courseD_farmer_condLoops6_a: Use a `while path ahead` loop to move the farmer down each piece of the spiral.
        courseD_farmer_condLoops6_b: You only need to check for corn during most of the harvest.  Just pick one pumpkin at the very end of your program.
      courseD_farmer_condLoops7_authored_hint:
        courseD_farmer_condLoops7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.
          
          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Try using `when path ahead` to keep the harvester moving the right number of steps.
      courseD_farmer_condLoops7_2018_authored_hint:
        courseD_farmer_condLoops7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.
          
          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Try using `when path ahead` to keep the harvester moving the right number of steps.
      courseD_farmer_condLoops8_authored_hint: [ ]
      courseD_farmer_condLoops8_2018_authored_hint: [ ]
      courseD_farmer_condLoops9_authored_hint: [ ]
      courseD_farmer_condLoops9_2018_authored_hint: [ ]
      courseD_farmer_condLoops9_predict1_authored_hint: [ ]
      courseD_farmer_condLoops9_predict1_2018_authored_hint: [ ]
      courseD_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: '''ADIM'' butonu bu meydan okuma için çok yardımcı olabilir.'
        courseD_farmer_condLoops_challenge1_b: Eğer bir balkabağında iseniz, normlade sadece balkabağını al diyecektiniz. Balkabağında iken başka neler yapmanız gerekiyor?
      courseD_farmer_condLoops_challenge1_2018_authored_hint:
        courseD_farmer_condLoops_challenge1_a: '''ADIM'' butonu bu meydan okuma için çok yardımcı olabilir.'
        courseD_farmer_condLoops_challenge1_b: Eğer bir balkabağında iseniz, normlade sadece balkabağını al diyecektiniz. Balkabağında iken başka neler yapmanız gerekiyor?
      courseD_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: Her bir alandaki sebzenin miktarı değişir. Bunlar için `süresince` döngülerini kullanın.
      courseD_farmer_condLoops_challenge2_2018_authored_hint:
        courseD_farmer_condLoops_challenge2_a: Her bir alandaki sebzenin miktarı değişir. Bunlar için `süresince` döngülerini kullanın.
      courseD_farmer_condLoops_challenge2_clone_authored_hint: [ ]
      courseD_farmer_conditionals10_authored_hint: [ ]
      courseD_farmer_conditionals4_authored_hint:
        courseD_farmer_conditionals4_a: Instead of using a `repeat` loop, use a `while` loop to keep digging until the pile is gone.
      courseD_farmer_conditionals5_authored_hint:
        courseD_farmer_conditionals5a: Try nesting a `while` loop inside of a `repeat` loop.
      courseD_farmer_conditionals6_authored_hint:
        courseD_farmer_conditionals6_a: Make sure you're using the `while` loop to figure out how many times to fill each hole.
        courseD_farmer_conditionals6_b: Notice that the farmer needs to move forward and down several times in a stair-step pattern.
      courseD_farmer_conditionals7_authored_hint:
        courseD_farmer_conditionals8_a: The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.
      courseD_farmer_conditionals8_authored_hint:
        courseD_farmer_conditionals8_a: You are going to need to use more than one `while` loop.
        courseD_farmer_conditionals8_b: Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.
        courseD_farmer_conditionals8_c: Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times.
      courseD_farmer_conditionals9_authored_hint: [ ]
      courseD_farmer_until_challenge2_authored_hint: [ ]
      courseD_farmer_until_challenge2_2018_authored_hint: [ ]
      courseD_farmer_while1_authored_hint:
        courseD_farmer_while1_a: Yığına ulaşmak için dört kez ilerlemek isteyeceksin. Bunun için bir tane 'tekrarla' döngüsü kullanabilir misin?
        courseD_farmer_while1_b: Toprağı kaldırmak için toprak yığınının üzerindeyken 'kaldır 1' bloğunu kullan.
      courseD_farmer_while10_authored_hint: [ ]
      courseD_farmer_while10_2018_authored_hint: [ ]
      courseD_farmer_while10_predict2_authored_hint: [ ]
      courseD_farmer_while10_predict2_2018_authored_hint: [ ]
      courseD_farmer_while1_2018_authored_hint:
        courseD_farmer_while1_a: Yığına ulaşmak için dört kez ilerlemek isteyeceksin. Bunun için bir tane 'tekrarla' döngüsü kullanabilir misin?
        courseD_farmer_while1_b: Toprağı kaldırmak için toprak yığınının üzerindeyken 'kaldır 1' bloğunu kullan.
      courseD_farmer_while2_authored_hint:
        courseD_farmer_while2_a: Deliğe ulaşmak için yalnızca bir kez ilerlemeniz gerekecek.
        courseD_farmer_while2_b: Altı kez '1 doldur' bloğuna ihtiyacınız var. Bunu bir döngü ile daha kolay yapabilir misiniz?
      courseD_farmer_while2_2018_authored_hint:
        courseD_farmer_while2_a: Deliğe ulaşmak için yalnızca bir kez ilerlemeniz gerekecek.
        courseD_farmer_while2_b: Altı kez '1 doldur' bloğuna ihtiyacınız var. Bunu bir döngü ile daha kolay yapabilir misiniz?
      courseD_farmer_while3_authored_hint:
        courseD_farmer_while3_a: Bir döngü, burada kodunuzu basitleştirmenize yardımcı olabilir.
        courseD_farmer_while3_b: Yığına ulaşmak için 'dön' bloklarından hiç birine ihtiyacınız olmamalı.
      courseD_farmer_while3_2018_authored_hint:
        courseD_farmer_while3_a: Bir döngü, burada kodunuzu basitleştirmenize yardımcı olabilir.
        courseD_farmer_while3_b: Yığına ulaşmak için 'dön' bloklarından hiç birine ihtiyacınız olmamalı.
      courseD_farmer_while4_authored_hint:
        courseD_farmer_conditionals4_a: Instead of using a `repeat` loop, use a `while` loop to keep digging until the pile is gone.
        courseD_farmer_conditionals4_b: Bu, daha önceki bir bulmaya çok benziyor, tek fark hangi döngüye ihtiyacınız olduğu.
      courseD_farmer_while4_2018_authored_hint:
        courseD_farmer_conditionals4_a: Instead of using a `repeat` loop, use a `while` loop to keep digging until the pile is gone.
        courseD_farmer_conditionals4_b: Bu, daha önceki bir bulmaya çok benziyor, tek fark hangi döngüye ihtiyacınız olduğu.
      courseD_farmer_while4_predict1_authored_hint: [ ]
      courseD_farmer_while4_predict1_2018_authored_hint: [ ]
      courseD_farmer_while5_authored_hint:
        courseD_farmer_conditionals5a_a: Try nesting a `while` loop inside of a `repeat` loop.
        courseD_farmer_conditionals5a_b: Çiftçi sıranın sonuna ulaşmak için toplam beş kez ilerlemeli. Çiftçi başka ne yapmalı?
        courseD_farmer_conditionals5a_c: 5 kere ilerle. Her ilerlediğinde "sürece yığın var" döngüsü ile toprağı temizle.
      courseD_farmer_while5_2018_authored_hint:
        courseD_farmer_conditionals5a_a: Try nesting a `while` loop inside of a `repeat` loop.
        courseD_farmer_conditionals5a_b: Çiftçi sıranın sonuna ulaşmak için toplam beş kez ilerlemeli. Çiftçi başka ne yapmalı?
        courseD_farmer_conditionals5a_c: 5 kere ilerle. Her ilerlediğinde "sürece yığın var" döngüsü ile toprağı temizle.
      courseD_farmer_while6_authored_hint:
        courseD_farmer_conditionals6_a: Make sure you're using the `while` loop to figure out how many times to fill each hole.
        courseD_farmer_conditionals6_b: Notice that the farmer needs to move forward and down several times in a stair-step pattern.
        courseD_farmer_conditionals6_c: |-
          Merdiven basamak modeli aşağıdaki blokları kullanır 
          -ilerle 
          - doldur 
          - sağa dön 
          - ilerle 
          - doldur 
          - sola dön
          Kaç kez bu merdiven basamağı desenini kullanman gerekiyor? 'Çukur olduğu sürece' bloğunu kullanarak çukurları doldurduğunuzdan emin olun.
      courseD_farmer_while6_2018_authored_hint:
        courseD_farmer_conditionals6_a: Make sure you're using the `while` loop to figure out how many times to fill each hole.
        courseD_farmer_conditionals6_b: Notice that the farmer needs to move forward and down several times in a stair-step pattern.
        courseD_farmer_conditionals6_c: |-
          Merdiven basamak modeli aşağıdaki blokları kullanır 
          -ilerle 
          - doldur 
          - sağa dön 
          - ilerle 
          - doldur 
          - sola dön
          Kaç kez bu merdiven basamağı desenini kullanman gerekiyor? 'Çukur olduğu sürece' bloğunu kullanarak çukurları doldurduğunuzdan emin olun.
      courseD_farmer_while7_authored_hint:
        courseD_farmer_conditionals8_a: The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.
        courseD_farmer_conditionals8_b: Bir tekrarla dongüsünün içine 'yol boyunca' döngüsü koymak bu bulmacada size yardımcı olabilir.
        courseD_farmer_conditionals8_c: Her yolun sonunda ne yapman gerekiyor?
      courseD_farmer_while7_2018_authored_hint:
        courseD_farmer_conditionals8_a: The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.
        courseD_farmer_conditionals8_b: Bir tekrarla dongüsünün içine 'yol boyunca' döngüsü koymak bu bulmacada size yardımcı olabilir.
        courseD_farmer_conditionals8_c: Her yolun sonunda ne yapman gerekiyor?
      courseD_farmer_while8_authored_hint:
        courseD_farmer_conditionals8_a: You are going to need to use more than one `while` loop.
        courseD_farmer_conditionals8_b: Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.
        courseD_farmer_conditionals8_c: Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times.
      courseD_farmer_while8_2018_authored_hint:
        courseD_farmer_conditionals8_a: You are going to need to use more than one `while` loop.
        courseD_farmer_conditionals8_b: Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.
        courseD_farmer_conditionals8_c: Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times.
      courseD_farmer_while9_authored_hint: [ ]
      courseD_farmer_while9_2018_authored_hint: [ ]
      courseD_farmer_while_challenge1_authored_hint:
        courseD_farmer_while_challenge1_a: Her delik veya yığın yolun sonundan bir boşluk **geriye** yerleştirilmiş.
        courseD_farmer_while_challenge1_b: Eğer 'sürece' döngüsü kullanırsanız, orada birisi olmasa bile çiftçiye yığını ya da deliği kaldırmasını söyleyebilirsiniz. Yani aynı yerde dururken onu pisliği kaldırmaya ve boşluğu doldurmaya programlayabilirsin.
        courseD_farmer_conditionals8_c: Tekrar eden herhangi bir döngü kullanmadan bunu çözmek mümkündür. Bunu yapmak için dört adet 'süresince' döngüsü kullanmalısınız.
      courseD_farmer_while_challenge1_2018_authored_hint:
        courseD_farmer_while_challenge1_a: Her delik veya yığın yolun sonundan bir boşluk **geriye** yerleştirilmiş.
        courseD_farmer_while_challenge1_b: Eğer 'sürece' döngüsü kullanırsanız, orada birisi olmasa bile çiftçiye yığını ya da deliği kaldırmasını söyleyebilirsiniz. Yani aynı yerde dururken onu pisliği kaldırmaya ve boşluğu doldurmaya programlayabilirsin.
        courseD_farmer_conditionals8_c: Tekrar eden herhangi bir döngü kullanmadan bunu çözmek mümkündür. Bunu yapmak için dört adet 'süresince' döngüsü kullanmalısınız.
      courseD_farmer_while_challenge2_authored_hint:
        courseD_farmer_while_challenge1_a: Her delik veya yığın yolun sonundan bir boşluk **geriye** yerleştirilmiş.
        courseD_farmer_while_challenge1_b: Eğer 'sürece' döngüsü kullanırsanız, orada birisi olmasa bile çiftçiye yığını ya da deliği kaldırmasını söyleyebilirsiniz. Yani aynı yerde dururken onu pisliği kaldırmaya ve boşluğu doldurmaya programlayabilirsin.
        courseD_farmer_conditionals8_c: Tekrar eden herhangi bir döngü kullanmadan bunu çözmek mümkündür. Bunu yapmak için dört adet 'süresince' döngüsü kullanmalısınız.
      courseD_farmer_while_challenge2_2018_authored_hint:
        courseD_farmer_while_challenge1_a: Her delik veya yığın yolun sonundan bir boşluk **geriye** yerleştirilmiş.
        courseD_farmer_while_challenge1_b: Eğer 'sürece' döngüsü kullanırsanız, orada birisi olmasa bile çiftçiye yığını ya da deliği kaldırmasını söyleyebilirsiniz. Yani aynı yerde dururken onu pisliği kaldırmaya ve boşluğu doldurmaya programlayabilirsin.
        courseD_farmer_conditionals8_c: Tekrar eden herhangi bir döngü kullanmadan bunu çözmek mümkündür. Bunu yapmak için dört adet 'süresince' döngüsü kullanmalısınız.
      courseD_harvester_nested_loops_challenge1-broken_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: Muhtemelen bir zig-zag deseni oluşturmak için zaten bir döngü kullandınız. Eğer o algoritmayı hatırlıyorsanız, buraya onun için birkaç ekleme yapabilirsiniz.
      courseD_harvester_nested_loops_challenge1_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: 'Muhtemelen bir zig-zag deseni oluşturmak için zaten bir döngü kullandınız. Eğer o algoritmayı hatırlıyorsanız, buraya onun için birkaç ekleme yapabilirsiniz.'
        courseD_harvester_nested_loops_challenge1_b: Birden fazla mısır toplamak için 'mısır topla'yı birden fazla kere kullanmanız gerekir.
        courseD_harvester_nested_loops_challenge1_c: Bu bulmacayı çözmek için ana döngünüzün içine küçük bir döngü koymanız gerekir!
      courseD_harvester_nested_loops_challenge1_2018_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: 'Muhtemelen bir zig-zag deseni oluşturmak için zaten bir döngü kullandınız. Eğer o algoritmayı hatırlıyorsanız, buraya onun için birkaç ekleme yapabilirsiniz.'
        courseD_harvester_nested_loops_challenge1_b: Birden fazla mısır toplamak için 'mısır topla'yı birden fazla kere kullanmanız gerekir.
        courseD_harvester_nested_loops_challenge1_c: Bu bulmacayı çözmek için ana döngünüzün içine küçük bir döngü koymanız gerekir!
      courseD_iceage_loops1_authored_hint:
        courseD_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseD_iceage_loops1_b: |-
          You will have to use this block:
          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseD_iceage_loops2_authored_hint:
        courseD_iceage_loops2_a: Break this puzzle into two pieces, one before the corner, and one after the corner.
        courseD_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseD_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseD_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          Use this new block!
          <xml><block type="controls_repeat_dropdown">
          <title name="TIMES" config="2-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: To repeat code, drag out a `repeat` loop, then put the block you want repeated inside.
      courseD_iceage_loops4_authored_hint:
        courseD_iceage_loops4_a: Don't be afraid to run your code and see what happens!
        courseD_iceage_loops4_b: Try writing down the steps Scrat would take to get to the acorn.  Do you see a pattern?
        courseD_iceage_loops4_c: This is the path Scrat should take.
      courseD_iceage_loops6_authored_hint:
        courseD_iceage_loops6_a: Your final code will have **three** `move forward` blocks.
        courseD_iceage_loops6_b: You only need to add **one** more loop!
        courseD_iceage_loops6_c: Your final path should look like this.
      courseD_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the acorn.
      courseD_iceage_loops8_authored_hint:
        courseD_iceage_loops8_a: Are the `turn` blocks right? What else can you change?
        courseD_iceage_loops8_b: The first loop should repeat **3** times, the second should repeat **5** times, the third loop should repeat **4** times, and the last loop should repeat **4** times.
        courseD_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseD_iceage_loops9_authored_hint:
        courseD_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller pieces. Don't be afraid to run your puzzle as you code!
        courseD_iceage_loops9_b: Your final code should have **4** loops.
        courseD_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseD_maze_loops_challenge1_authored_hint:
        courseD_bee_nested_loops_challenge1_a: Tek bir komutu ya da daha uzun bir kalıbı 'tekrarlayabileceğini' unutma. Hatta bir 'tekrarla' bloğunu dahi 'tekrarlayabilirsin'!
        courseD_bee_nested_loops_challenge1_b: 4 taşı elde etmek için öncelikle merkezden uzaklaştırmak amacıyla bir döngü kullan. Sağa veya sola dön, sonra ilk hazine yığınından diğerine geçmek için iç içe döngü kullan. İç içe döngüyü yeterince tekrarlarsan, toplayıcı mağara *boyunca* hareket edecektir!
        courseD_bee_nested_loops_challenge1_c: Tüm hazineye ulaşmanı sağlayacak en kısa program, bir adet 'topla' bloğu ve iki adet dönüş içerir.
      courseD_maze_nestedLoops3_authored_hint:
        courseD_maze_nestedLoops3_a: To solve this puzzle, you will need to "nest" one `repeat` loop inside of another `repeat` loop.
        courseD_maze_nestedLoops3_b: Döngüleri nereye koyacağınızı bulamıyor musunuz? Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
        courseD_maze_nestedLoops3_c: Düz bir yol ve bir dönüş için kod yazmayı deneyin. Bunu, ayçiçeğine ulaşmak için tekrar edebilir misiniz?
      courseD_maze_nestedLoops3_2018_authored_hint:
        courseD_maze_nestedLoops3_a: To solve this puzzle, you will need to "nest" one `repeat` loop inside of another `repeat` loop.
        courseD_maze_nestedLoops3_b: Döngüleri nereye koyacağınızı bulamıyor musunuz? Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
        courseD_maze_nestedLoops3_c: Düz bir yol ve bir dönüş için kod yazmayı deneyin. Bunu, ayçiçeğine ulaşmak için tekrar edebilir misiniz?
      courseD_maze_nestedLoops4_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Try using this path through the maze.
          
          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: If the loop pattern is hard to see, try coding it all out first and see what code repeats over and over before you put the loops in.
        courseD_maze_nestedLoops4_c: Try using one `repeat` loop inside of another to cut down on the amount of code you need.
      courseD_maze_nestedLoops4_2018_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Try using this path through the maze.
          
          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: If the loop pattern is hard to see, try coding it all out first and see what code repeats over and over before you put the loops in.
        courseD_maze_nestedLoops4_c: Try using one `repeat` loop inside of another to cut down on the amount of code you need.
      courseD_maze_nestedLoops5_authored_hint:
        courseD_maze_nestedLoops5_a: Look for a stair-step pattern in this maze to find where a nested loop can be used.
        courseD_maze_nestedLoops5_b: Döngüleri nereye koyacağınızı bulamıyor musunuz? Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
      courseD_maze_nestedLoops5_2018_authored_hint:
        courseD_maze_nestedLoops5_a: Look for a stair-step pattern in this maze to find where a nested loop can be used.
        courseD_maze_nestedLoops5_b: Döngüleri nereye koyacağınızı bulamıyor musunuz? Kodu adım adım yazmayı ve bir desen bulmayı deneyin.
      courseD_maze_nestedLoops6_authored_hint:
        courseD_maze_nestedLoops6_a: If you are stuck, try writing out the code out on paper without loops first and look for patterns.
        courseD_maze_nestedLoops6_b: Nesting `repeat` loops can help decrease the number of blocks used.
        courseD_maze_nestedLoops6_c: It will take two sets of nested `repeat` loops to solve this puzzle.
      courseD_maze_nestedLoops6_2018_authored_hint:
        courseD_maze_nestedLoops6_a: If you are stuck, try writing out the code out on paper without loops first and look for patterns.
        courseD_maze_nestedLoops6_b: Nesting `repeat` loops can help decrease the number of blocks used.
        courseD_maze_nestedLoops6_c: It will take two sets of nested `repeat` loops to solve this puzzle.
      courseD_maze_ramp1_authored_hint:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp2_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: 3 bloğun beraber tıklandığından ve 'çalıştığı zaman' bloğuna bağlı olduğundan emin olun.
      courseD_maze_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: 3 bloğun beraber tıklandığından ve 'çalıştığı zaman' bloğuna bağlı olduğundan emin olun.
      courseD_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
      courseD_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
      courseD_maze_ramp4_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
      courseD_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
      courseD_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5a_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5a_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5b_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5b_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Bu dönüşlerin kuş bakışı olduğunu unutmayın.
        courseC_maze_programming5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_maze_ramp5c_authored_hint: [ ]
      courseD_maze_ramp5c_2018_authored_hint: [ ]
      courseD_maze_ramp5d_authored_hint: [ ]
      courseD_maze_ramp5d_2018_authored_hint: [ ]
      courseD_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseC_maze_programming6_b: Kuş duvara doğru bakıyor,  hareket etmeden önce yönünü döndürmeyi unutmayın.
        courseC_maze_programming6_c: Bir defada bir parça kod yazabileceğinizi ve oradan nereye gideceğinizi bulmak için kodu çalıştırabileceğinizi unutmayın.
      courseD_maze_ramp6a_authored_hint:
        courseC_maze_programming6a_a: Kuşu hareket ettirmek için 'tekrar' döngüsü kulanın!
      courseD_maze_ramp7_authored_hint:
        courseD_maze_ramp7_b: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseD_maze_ramp7_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu tekrarlı çalıştırman mümkündür.
        courseD_maze_ramp7_c: Eğer kodlarını daha fazla basitleştirmek istersen, bir 'tekrarla' bloğunun içine başka bir tane daha ekleyebilirsin. Buna **iç içe döngü** denir.
      courseD_maze_until1_authored_hint:
        courseD_maze_until1_a: Kodunuzu kısaltmak için döngü oluşturabileceğiniz herhangi bir dizi var mı?
        courseD_maze_until1_b: Bu bulmacayı çözmek için bir tane iç içe döngü kullanmayı deneyin.
      courseD_maze_until10_authored_hint: [ ]
      courseD_maze_until10_2018_authored_hint: [ ]
      courseD_maze_until10_predict2_authored_hint: [ ]
      courseD_maze_until10_predict2_2018_authored_hint: [ ]
      courseD_maze_until1_2018_authored_hint:
        courseD_maze_until1_a: Kodunuzu kısaltmak için döngü oluşturabileceğiniz herhangi bir dizi var mı?
        courseD_maze_until1_b: Bu bulmacayı çözmek için bir tane iç içe döngü kullanmayı deneyin.
      courseD_maze_until2_authored_hint:
        courseD_maze_until2_a: An `until pig` loop will help you keep going until you succeed!
      courseD_maze_until2_predict1_authored_hint: [ ]
      courseD_maze_until2_predict1_2018_authored_hint: [ ]
      courseD_maze_until3_authored_hint:
        courseD_maze_until3_a: |-
          - What does your code do?
          - What is it supposed to do?
          - What does that tell you?
        courseD_maze_until3_b: İşin içinden çıkamıyorsan, adımları bir kağıda yazmayı ve nerede tekrar ettiklerini bulmayı dene.
        courseD_maze_until3_c: Bu bulmaca için takip edebileceğin bir merdiven basamağı deseni var mı?
        courseD_maze_until3_d: Kodunu daha kısa yapmak için 'kadar tekrarla' bloğunu kullanmayı unutma.
      courseD_maze_until3_2018_authored_hint:
        courseD_maze_until3_a: |-
          - What does your code do?
          - What is it supposed to do?
          - What does that tell you?
        courseD_maze_until3_b: İşin içinden çıkamıyorsan, adımları bir kağıda yazmayı ve nerede tekrar ettiklerini bulmayı dene.
        courseD_maze_until3_c: Bu bulmaca için takip edebileceğin bir merdiven basamağı deseni var mı?
        courseD_maze_until3_d: Kodunu daha kısa yapmak için 'kadar tekrarla' bloğunu kullanmayı unutma.
      courseD_maze_until4_authored_hint:
        courseD_maze_until4_a: |-
          Use the "Step" button to go through your code line by line.
          
          - Does everything work at the first step?
          - Does everything work at the second step?
          - Where does it go wrong?
        courseD_maze_until4_b: Bu bulmaca için takip edebileceğin bir merdiven basamağı deseni var mı?
        courseD_maze_until4_c: Kodunu daha kısa yapmak için 'kadar tekrarla' bloğunu kullanmayı unutma.
      courseD_maze_until4_2018_authored_hint:
        courseD_maze_until4_a: |-
          Use the "Step" button to go through your code line by line.
          
          - Does everything work at the first step?
          - Does everything work at the second step?
          - Where does it go wrong?
        courseD_maze_until4_b: Bu bulmaca için takip edebileceğin bir merdiven basamağı deseni var mı?
        courseD_maze_until4_c: Kodunu daha kısa yapmak için 'kadar tekrarla' bloğunu kullanmayı unutma.
      courseD_maze_until5_authored_hint:
        courseD_maze_until5_a: Don't forget to use `if path to the left` to keep the zombie checking for a place to turn.
        courseD_maze_until5_b: Yalnız bir adet 'ilerme' kullanmak için, 'ayçiçeğine kadar tekrarla' bloğunun içine 'ilerle' yerleştirin.
        courseD_maze_until5_c: Her adımdan sonra, zombi sol tarafa bir yol olup olmadığını kontrol etmeli. Eğer bir yol bulursa ne yapması gerekir?
      courseD_maze_until5_2018_authored_hint:
        courseD_maze_until5_b: Yalnız bir adet 'ilerme' kullanmak için, 'ayçiçeğine kadar tekrarla' bloğunun içine 'ilerle' yerleştirin.
      courseD_maze_until6_authored_hint:
        courseD_maze_until6_a: This time, try the `if path to the right` to keep the zombie on track.
        courseD_maze_until6_b: Yalnız bir adet 'ilerme' kullanmak için, 'ayçiçeğine kadar tekrarla' bloğunun içine 'ilerle' yerleştirin.
        courseD_maze_until6_c: Son bulmacadan daha fazla dönüş olmasına rağmen, 'kadar tekrarla' bloğu sebebiyle kodun neredeyse aynı!
      courseD_maze_until6_2018_authored_hint:
        courseD_maze_until6_b: Yalnız bir adet 'ilerme' kullanmak için, 'ayçiçeğine kadar tekrarla' bloğunun içine 'ilerle' yerleştirin.
      courseD_maze_until7_authored_hint:
        courseD_maze_until7_a: You don't need your code to be any longer than last time, just because the maze is!
        courseD_maze_until7_b: Son bulmacadan daha fazla dönüş olmasına rağmen, 'kadar tekrarla' bloğu sebebiyle kodun neredeyse aynı!
        courseD_maze_until7_c: Sol taraftaki yolları kontrol etmeyi unutma, çünkü sağa dönmek sizi yoldan çıkarır!
      courseD_maze_until7_2018_authored_hint:
        courseD_maze_until7_a: You don't need your code to be any longer than last time, just because the maze is!
        courseD_maze_until7_b: Son bulmacadan daha fazla dönüş olmasına rağmen, 'kadar tekrarla' bloğu sebebiyle kodun neredeyse aynı!
      courseD_maze_until8_authored_hint:
        courseD_maze_until8_a: Make sure you're using an `if/else` block to keep the zombie headed the right direction.
        courseD_maze_until8_b: '''eğer/değilse'' bloğun ile: eğer ileride bir yol varsa, ne yapmalısın?'
        courseD_maze_until8_c: '''eğer/değilse'' bloğun ile: eğer ileride bir yol yoksa, hangi yöne dönmelisin?'
      courseD_maze_until8_2018_authored_hint:
        courseD_maze_until8_a: Make sure you're using an `if/else` block to keep the zombie headed the right direction.
        courseD_maze_until8_b: '''eğer/değilse'' bloğun ile: eğer ileride bir yol varsa, ne yapmalısın?'
        courseD_maze_until8_c: '''eğer/değilse'' bloğun ile: eğer ileride bir yol yoksa, hangi yöne dönmelisin?'
      courseD_maze_until9_authored_hint:
        courseD_maze_until8_a: Using `if path ahead` will keep you going forward whenever possible, helping you miss the paths with chompers.
        courseD_maze_until8_b: Eğer ileriye doğru bir yol yoksa hangi yöne dönmen gerekir?
        courseD_maze_until8_c: Ayçiçeğine ulaşmak için 'kadar tekrarla' bloğunu kullanmayı unutmayın!
      courseD_maze_until9_2018_authored_hint:
        courseD_maze_until8_c: Ayçiçeğine ulaşmak için 'kadar tekrarla' bloğunu kullanmayı unutmayın!
      courseD_maze_until_challenge_authored_hint: [ ]
      courseD_maze_until_challenge1-delete-this-copy_authored_hint: [ ]
      courseD_maze_until_challenge1_authored_hint: [ ]
      courseD_maze_until_challenge1_2018_authored_hint: [ ]
      courseD_maze_until_challenge2_authored_hint: [ ]
      courseD_playLab_cond1_authored_hint:
        courseD_playLab_cond1_a: To solve this challenge, attach the `move actor 1 up` block to the `when up arrow` event, then do the same for every other direction.
        courseD_playLab_cond1_b: Gittikleri yönü değiştirmek için 'ok olduğunda' ve 'aktörü taşı' bloklarındaki açılır menüleri kullan.
        courseD_playLab_cond1_c: Kodunuzu yazdıktan sonra Pegleg' i ejderhaya doğru hareket ettirmeyi unutmayın!
      courseD_playLab_cond1_2018_authored_hint:
        courseD_playLab_cond1_a: To solve this challenge, attach the `move actor 1 up` block to the `when up arrow` event, then do the same for every other direction.
        courseD_playLab_cond1_b: Gittikleri yönü değiştirmek için 'ok olduğunda' ve 'aktörü taşı' bloklarındaki açılır menüleri kullan.
        courseD_playLab_cond1_c: Kodunuzu yazdıktan sonra Pegleg' i ejderhaya doğru hareket ettirmeyi unutmayın!
      courseD_playLab_cond2_authored_hint:
        courseD_playLab_cond2_a: To succeed with this puzzle, use the `score point` block beneath the `when actor 1 touches actor 2` event.
      courseD_playLab_cond2_2018_authored_hint:
        courseD_playLab_cond2_a: To succeed with this puzzle, use the `score point` block beneath the `when actor 1 touches actor 2` event.
      courseD_playLab_cond3_authored_hint:
        courseD_playLab_cond3_a: You will need to add two blocks to your `repeat forever` loop.  One will choose a random emotion for the dragon (actor 2) and the other will wait 1 second before going through the loop again.
      courseD_playLab_cond3_2018_authored_hint:
        courseD_playLab_cond3_a: You will need to add two blocks to your `repeat forever` loop.  One will choose a random emotion for the dragon (actor 2) and the other will wait 1 second before going through the loop again.
      courseD_playLab_cond3a_authored_hint:
        courseD_playLab_cond3_c: "- 'Eğer' dragon mutlu ise\n   - 'puan al'\n   - 'puan al'  \n   \n   \n \n- 'değilse' 'puan al'"
      courseD_playLab_cond3a_2018_authored_hint:
        courseD_playLab_cond3_c: "- 'Eğer' dragon mutlu ise\n   - 'puan al'\n   - 'puan al'  \n   \n   \n \n- 'değilse' 'puan al'"
      courseD_playLab_cond3b_authored_hint:
        courseD_playLab_cond3b_a: Yukarı ve aşağı hareket eden ejderha yapmak için Tekrarla bloğuna yeni bloklar eklemen gerekir
      courseD_playLab_cond4_authored_hint:
        courseD_playLab_cond4_a: You will want to use the `when run` event to get the ninja to chase the pirate.
        courseD_playLab_cond4_b: There is a special block called `set every masked ninja to chase actor` that will keep the ninja hot on the pirate's trail!
        courseD_playLab_cond4_c: Put the `end game as a loss` block underneath the `when actor 1 touches actor 3` event.
      courseD_playLab_cond4_2018_authored_hint:
        courseD_playLab_cond4_a: You will want to use the `when run` event to get the ninja to chase the pirate.
        courseD_playLab_cond4_b: There is a special block called `set every masked ninja to chase actor` that will keep the ninja hot on the pirate's trail!
        courseD_playLab_cond4_c: Put the `end game as a loss` block underneath the `when actor 1 touches actor 3` event.
      courseD_playLab_cond5_authored_hint:
        courseD_playLab_cond5_a: Use an `if` statement that compares whether `score` is `>` 5 to solve this challenge.
        courseD_playLab_cond5_b: Çalışma alanında birden fazla 'sürekli tekrarla' döngüsü olabilir.
      courseD_playLab_cond5_2018_authored_hint:
        courseD_playLab_cond5_a: Use an `if` statement that compares whether `score` is `>` 5 to solve this challenge.
        courseD_playLab_cond5_b: Çalışma alanında birden fazla 'sürekli tekrarla' döngüsü olabilir.
      courseD_playLab_cond6_authored_hint:
        courseD_playLab_cond6_a: Add the `set masked ninja speed` block to the beginning of the program to help slow the ninja down.
        courseD_playLab_cond6_b: You will need to use an `if actor 1 y position > 255` block inside of a `repeat forever` block to always check if the pirate is below the octopuses.
      courseD_playLab_cond6_2018_authored_hint:
        courseD_playLab_cond6_a: Add the `set masked ninja speed` block to the beginning of the program to help slow the ninja down.
        courseD_playLab_cond6_b: You will need to use an `if actor 1 y position > 255` block inside of a `repeat forever` block to always check if the pirate is below the octopuses.
      courseD_playLab_cond6a_authored_hint:
        courseD_playLab_cond6_c: Add a `wait 1 second` block to the top of the `repeat forever` loop that checks the pirate position (but not inside the `if` statement) to keep points from being removed too quickly.
      courseD_playLab_cond6a_2018_authored_hint:
        courseD_playLab_cond6_c: Add a `wait 1 second` block to the top of the `repeat forever` loop that checks the pirate position (but not inside the `if` statement) to keep points from being removed too quickly.
      courseD_playLab_cond6cloneForTest_authored_hint:
        courseD_playLab_cond6_a: Add the `set masked ninja speed` block to the beginning of the program to help slow the ninja down.
        courseD_playLab_cond6_b: You will need to use an `if actor 1 y position > 255` block inside of a `repeat forever` block to always check if the pirate is below the octopuses.
        courseD_playLab_cond6_c: Add a `wait 1 second` block to the top of the `repeat forever` loop that checks the pirate position (but not inside the `if` statement) to keep points from being removed too quickly.
      courseD_playLab_embed_cond6a_authored_hint: [ ]
      courseD_playLab_embedded_authored_hint: [ ]
      courseD_scrat_predict1_authored_hint: [ ]
      courseD_scrat_predict1_2018_authored_hint: [ ]
      courseD_scrat_ramp1_authored_hint:
        courseC_maze_programming1_a: Scrat palamuda ulaşamıyorsa, üç karenin tümünün tam olarak yapıştığından emin olun, sonra tekrar "Çalıştır"a tıklayın.
        courseC_maze_programming1_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_scrat_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: Scrat palamuda ulaşamıyorsa, üç karenin tümünün tam olarak yapıştığından emin olun, sonra tekrar "Çalıştır"a tıklayın.
        courseC_maze_programming1_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_scrat_ramp2_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Her 3 'ileri git' blokunun 'çalıştığı zaman' blokuna eklenmiş olduğundan emin olun.
      courseD_scrat_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Her 3 'ileri git' blokunun 'çalıştığı zaman' blokuna eklenmiş olduğundan emin olun.
      courseD_scrat_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: Sağa ve sola dönüşlerin Scrat'in bakış açısından olduğunu unutmayın.
      courseD_scrat_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: Sağa ve sola dönüşlerin Scrat'in bakış açısından olduğunu unutmayın.
      courseD_scrat_ramp4_authored_hint:
        courseC_maze_programming4_a: Sağa veya sola Scrat'in bakış açısından dönebilirsiniz. Eğer yüzünüz sağa dönükse, sağa dönmek sizi aşağıya döndürecektir.
        courseC_maze_programming4_b: Yolu takip etmek için, ileri gidin ve bir yöne dönün, sonra yeniden hareket edin ve zıt yöne dönün. Palamuda ulaşmak için bir kez daha ileri gidin.
        courseC_maze_programming4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_scrat_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: Sağa veya sola Scrat'in bakış açısından dönebilirsiniz. Eğer yüzünüz sağa dönükse, sağa dönmek sizi aşağıya döndürecektir.
        courseC_maze_programming4_b: Yolu takip etmek için, ileri gidin ve bir yöne dönün, sonra yeniden hareket edin ve zıt yöne dönün. Palamuda ulaşmak için bir kez daha ileri gidin.
        courseC_maze_programming4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_scrat_ramp5_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Köşeye ulaşmak için ne kadar hareket etmek gerekir?
        courseC_maze_programming5_c: Palamuda ulaşmak için köşeden sola dönmeniz gerekmektedir.
      courseD_scrat_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Köşeye ulaşmak için ne kadar hareket etmek gerekir?
        courseC_maze_programming5_c: Palamuda ulaşmak için köşeden sola dönmeniz gerekmektedir.
      courseD_scrat_ramp6_authored_hint:
        courseC_maze_programming6a_a: Scrat'i hareket ettirmek için bir 'tekrar' döngüsü kullanın!
      courseD_scrat_ramp6_2018_authored_hint:
        courseC_maze_programming6a_a: Scrat'i hareket ettirmek için bir 'tekrar' döngüsü kullanın!
      courseD_scrat_ramp7_authored_hint:
        courseD_scrat_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseD_scrat_programming6_b: Scrat yanlış yöne dönük olduğu için, hareket etmeden önce dönmeyi unutmayın.
        courseD_scrat_programming6_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_scrat_ramp7_2018_authored_hint:
        courseD_scrat_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseD_scrat_programming6_b: Scrat yanlış yöne dönük olduğu için, hareket etmeden önce dönmeyi unutmayın.
        courseD_scrat_programming6_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_scrat_ramp8_authored_hint:
        courseD_maze_ramp7_b: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseD_maze_ramp7_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu tekrarlı çalıştırman mümkündür.
        courseD_maze_ramp7_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseD_scrat_ramp8_2018_authored_hint:
        courseD_maze_ramp7_b: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseD_maze_ramp7_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu tekrarlı çalıştırman mümkündür.
        courseD_maze_ramp7_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_artist_concept1_authored_hint:
        courseE_artist_concept1_a: The hexagons have 50 pixel sides and 60 degree turns to the right.
        courseE_artist_concept1_b: Try using a function here so you don't have to write the code for a hexagon over and over again.
        courseE_artist_concept1_c: Kalemin genişliğini değiştirmek için fonksiyonu çalıştırmadan önce her defasında 'genişliği ayarla' bloğunu kullanın.
      courseE_artist_concept1_2018_authored_hint:
        courseE_artist_concept1_a: The hexagons have 50 pixel sides and 60 degree turns to the right.
        courseE_artist_concept1_b: Try using a function here so you don't have to write the code for a hexagon over and over again.
        courseE_artist_concept1_c: Kalemin genişliğini değiştirmek için fonksiyonu çalıştırmadan önce her defasında 'genişliği ayarla' bloğunu kullanın.
      courseE_artist_concept4_authored_hint:
        courseE_artist_concept4_a: There are several ways to solve this puzzle. Can you make a plan?
        courseE_artist_concept4_b: Try creating one square. Then make a line of squares.  What comes next?
        courseE_artist_concept4_c: Karelerin bir çizgisini çizdikten sonra, etrafında dönebilir ve sola giden karelerin diğer çizgilerini çizebilirsiniz veya sağa giden karelerin diğer çizgisini çizmek için figürün soluna geri atlayabilirsiniz. Hangisini tercih edersiniz?
      courseE_artist_concept4_2018_authored_hint:
        courseE_artist_concept4_a: There are several ways to solve this puzzle. Can you make a plan?
        courseE_artist_concept4_b: Try creating one square. Then make a line of squares.  What comes next?
        courseE_artist_concept4_c: Karelerin bir çizgisini çizdikten sonra, etrafında dönebilir ve sola giden karelerin diğer çizgilerini çizebilirsiniz veya sağa giden karelerin diğer çizgisini çizmek için figürün soluna geri atlayabilirsiniz. Hangisini tercih edersiniz?
      courseE_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'Yarım altıgenin ** 30 kenar uzunluğu ** ve ** 60 derece**sağa dönüşü vardır.  '
        courseE_artist_concept_challenge1_b: '2/3 üçgeninin ** 80 kenar uzunluğunu ** ve ** 120 derece **sağa dönüşü vardır.  '
        courseE_artist_concept_challenge1_c: |-
          Şeklin tamamını oluşturmak için tekrar etmek istediğiniz tasarım bu:
          
          ![](https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png)
      courseE_artist_concept_challenge1_2018_authored_hint:
        courseE_artist_concept_challenge1_a: 'Yarım altıgenin ** 30 kenar uzunluğu ** ve ** 60 derece**sağa dönüşü vardır.  '
        courseE_artist_concept_challenge1_b: '2/3 üçgeninin ** 80 kenar uzunluğunu ** ve ** 120 derece **sağa dönüşü vardır.  '
        courseE_artist_concept_challenge1_c: |-
          Şeklin tamamını oluşturmak için tekrar etmek istediğiniz tasarım bu:
          
          ![](https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png)
      courseE_artist_concept_challenge2_authored_hint:
        courseE_artist_concept_challenge2_a: Bir fonksiyonu bir kez oluşturduğunda, onu tekrar tekrar kullanabilirsin. İstediğin zaman istediğin yerde!
        courseE_artist_concept_challenge2_b: |-
          Bu komutu kullanarak tuval üzerinde farklı konumlara atlayabilirsin:
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_concept_challenge2_2018_authored_hint:
        courseE_artist_concept_challenge2_a: Bir fonksiyonu bir kez oluşturduğunda, onu tekrar tekrar kullanabilirsin. İstediğin zaman istediğin yerde!
        courseE_artist_concept_challenge2_b: |-
          Bu komutu kullanarak tuval üzerinde farklı konumlara atlayabilirsin:
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_embed_functions8_authored_hint: [ ]
      courseE_artist_functions1_authored_hint:
        courseE_artist_functions1_a: Karelerin kenarları 100 piksel genişliğinde, buda demek oluyor ki ikinci kareyi çizmeden önce 175 piksel ilerlemelisin.
        courseE_artist_functions1_b: Gözlük yapmak için çakışan çizgiler olabilir.
        courseE_artist_functions1_c: Daha kısa kodlama için, gözlüğün kare çerçevesini çizmek için bir tane 'tekrarla' döngüsü kullanmayı deneyin.
      courseE_artist_functions10_authored_hint:
        courseD_artist_functions10_b: This drawing is a lot like the last one, but the `draw line` function is now drawing a different shape.
        courseD_artist_functions10_a: To avoid using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.
        courseD_artist_functions10_c: |-
          `line of hexagons` isimli fonksiyonun nerede kullanıldığı görebiliyor musun?
          
          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2018_authored_hint:
        courseD_artist_functions10_b: This drawing is a lot like the last one, but the `draw line` function is now drawing a different shape.
        courseD_artist_functions10_a: To avoid using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.
        courseD_artist_functions10_c: |-
          `line of hexagons` isimli fonksiyonun nerede kullanıldığı görebiliyor musun?
          
          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions1_2018_authored_hint:
        courseE_artist_functions1_a: Karelerin kenarları 100 piksel genişliğinde, buda demek oluyor ki ikinci kareyi çizmeden önce 175 piksel ilerlemelisin.
        courseE_artist_functions1_b: Gözlük yapmak için çakışan çizgiler olabilir.
        courseE_artist_functions1_c: Daha kısa kodlama için, gözlüğün kare çerçevesini çizmek için bir tane 'tekrarla' döngüsü kullanmayı deneyin.
      courseE_artist_functions2_authored_hint:
        courseD_artist_functions2_b: Fonksiyon bütün programı içermeyecek, sadece 100 piksel uzunluğundaki kenarlarını çizer.
        courseD_artist_functions2_c: |-
          'Çalıştığı zaman' bloğunun altına fonksiyonunuzu 'çalıştırmak' için yeşil 'bir kare çiz' bloğu kullanın. Aksi takdirde, fonksiyonunuzdaki kod çalışmayacak.
        courseD_artist_functions2_a: |2
          Programınız: 
          -Fonksiyon kullanmalıdır.
           - ileri 100 + 75 piksel ilerlemelidir
          - Fonksiyon kullanmalıdır
      courseE_artist_functions2_2018_authored_hint:
        courseD_artist_functions2_b: Fonksiyon bütün programı içermeyecek, sadece 100 piksel uzunluğundaki kenarlarını çizer.
        courseD_artist_functions2_c: |-
          'Çalıştığı zaman' bloğunun altına fonksiyonunuzu 'çalıştırmak' için yeşil 'bir kare çiz' bloğu kullanın. Aksi takdirde, fonksiyonunuzdaki kod çalışmayacak.
        courseD_artist_functions2_a: |2
          Programınız: 
          -Fonksiyon kullanmalıdır.
           - ileri 100 + 75 piksel ilerlemelidir
          - Fonksiyon kullanmalıdır
      courseE_artist_functions3_authored_hint:
        courseD_artist_functions3_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.
          
          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
        courseD_artist_functions3_b: Döngünüzün içinde başlatıcı kod bloklarından her 3' ü de bulunmalı.
      courseE_artist_functions3_2018_authored_hint:
        courseD_artist_functions3_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.
          
          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
        courseD_artist_functions3_b: Döngünüzün içinde başlatıcı kod bloklarından her 3' ü de bulunmalı.
      courseE_artist_functions4_authored_hint:
        courseD_artist_functions4_a: Try using a function!
        courseD_artist_functions4_b: Kendi fonksiyonunu oluşturmaya başlamak için 'yıldız çiz' fonksiyonunu araç kutusunun dışına sürükle. Önceki bulmacadaki ile aynı koda sahip olmalı, çünkü aynı yıldız desenini çiziyorsun.
        courseD_artist_functions4_c: Ana programınızda bu fonksiyonu çağırmak için yeşil 'yıldız çiz' bloğunu kullan. Her bir yıldızda ileri atlamayı unutmayın!
      courseE_artist_functions4_2018_authored_hint:
        courseD_artist_functions4_a: Try using a function!
        courseD_artist_functions4_b: Kendi fonksiyonunu oluşturmaya başlamak için 'yıldız çiz' fonksiyonunu araç kutusunun dışına sürükle. Önceki bulmacadaki ile aynı koda sahip olmalı, çünkü aynı yıldız desenini çiziyorsun.
        courseD_artist_functions4_c: Ana programınızda bu fonksiyonu çağırmak için yeşil 'yıldız çiz' bloğunu kullan. Her bir yıldızda ileri atlamayı unutmayın!
      courseE_artist_functions5_authored_hint:
        courseD_artist_functions5_a: Don't give up!  Remember what you have been learning.
        courseD_artist_functions5_b: Functions make it easy to call saved code at any time, not just from inside a loop!
        courseD_artist_functions5_c: '''yıldız çiz'' fonksiyonun içine yıldız şekli kodunu sürükleyerek başlayın, sonra 3 yıldızı çizmek için bu fonksiyonu kullanın!'
      courseE_artist_functions5_2018_authored_hint:
        courseD_artist_functions5_a: Don't give up!  Remember what you have been learning.
        courseD_artist_functions5_b: Functions make it easy to call saved code at any time, not just from inside a loop!
        courseD_artist_functions5_c: '''yıldız çiz'' fonksiyonun içine yıldız şekli kodunu sürükleyerek başlayın, sonra 3 yıldızı çizmek için bu fonksiyonu kullanın!'
      courseE_artist_functions6_authored_hint:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll create a function in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops. The inner loop will make the square and the outer loop will rotate the square four times.
        grade4_artist_functions_windows0_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_artist_functions6_2018_authored_hint:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll create a function in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops. The inner loop will make the square and the outer loop will rotate the square four times.
        grade4_artist_functions_windows0_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_artist_functions7_authored_hint:
        courseD_artist_functions7_a: Try creating your function first then add windows one at a time.
        courseD_artist_functions7_b: You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels between each top window, then down 150 pixels to get to the bottom windows.
      courseE_artist_functions7_2018_authored_hint:
        courseD_artist_functions7_a: Try creating your function first then add windows one at a time.
        courseD_artist_functions7_b: You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels between each top window, then down 150 pixels to get to the bottom windows.
      courseE_artist_functions8_authored_hint:
        courseD_artist_functions8_f: Sadece bir tane 'move forward' bloğuna ihtiyacın var, fakat birkaç tane 'jump forward' ve/veya 'jump backward' bloğuna ihtiyacın olacak!
        courseD_artist_functions8_a: |-
          Start by making a function for a square, then try making a function for a line of squares.
          
          How would you use the `draw a line of squares` function to make this image?
        courseD_artist_functions8_d: |-
          Karelerin bir çizgisini yapmak için,
          - 3 kez tekrarlayın
          - bir kenar uzunluğu**50 piksel** olan bir kare çizin
          - **100 piksel** ileri atlayın
        courseD_artist_functions8_b: |-
          Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?
          
          ![](https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png)
        courseD_artist_functions8_c: At the end of each line of squares, the artist will need to jump down and backward before he draws the next line of squares.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2018_authored_hint:
        courseD_artist_functions8_f: Sadece bir tane 'move forward' bloğuna ihtiyacın var, fakat birkaç tane 'jump forward' ve/veya 'jump backward' bloğuna ihtiyacın olacak!
        courseD_artist_functions8_a: |-
          Start by making a function for a square, then try making a function for a line of squares.
          
          How would you use the `draw a line of squares` function to make this image?
        courseD_artist_functions8_d: |-
          Karelerin bir çizgisini yapmak için,
          - 3 kez tekrarlayın
          - bir kenar uzunluğu**50 piksel** olan bir kare çizin
          - **100 piksel** ileri atlayın
        courseD_artist_functions8_b: |-
          Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?
          
          ![](https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png)
        courseD_artist_functions8_c: At the end of each line of squares, the artist will need to jump down and backward before he draws the next line of squares.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions9_authored_hint:
        courseD_artist_functions9_e: |-
          Bu çizimde 'üçgenlerin çizgisi' olarak kullanılabilecek 4 yerin hepsini bulabilir misin?
          
          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          This puzzle can be broken into three parts:
          - make the `draw a triangle` function
          - make the `draw a line of triangles` function
          - use your `draw a line of triangles` function four times to complete the drawing
        courseD_artist_functions9_b: This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line.
        courseD_artist_functions9_c: |-
          Üçgenden bir çizgi çizmek için: 
          - tekrar 4 kez 
          - bir üçgen çiz
          - ileri 50 piksel
        courseD_artist_functions9_d: |-
          Elmas çizmek için: 
          - 2 kez tekrarla
          -üçgenlerden çizgi çiz 
          - 120 derece dönüş yap
          - üçgenlerden çizgi çiz 
          - 60 derece dön
      courseE_artist_functions9_2018_authored_hint:
        courseD_artist_functions9_e: |-
          Bu çizimde 'üçgenlerin çizgisi' olarak kullanılabilecek 4 yerin hepsini bulabilir misin?
          
          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          This puzzle can be broken into three parts:
          - make the `draw a triangle` function
          - make the `draw a line of triangles` function
          - use your `draw a line of triangles` function four times to complete the drawing
        courseD_artist_functions9_b: This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line.
        courseD_artist_functions9_c: |-
          Üçgenden bir çizgi çizmek için: 
          - tekrar 4 kez 
          - bir üçgen çiz
          - ileri 50 piksel
        courseD_artist_functions9_d: |-
          Elmas çizmek için: 
          - 2 kez tekrarla
          -üçgenlerden çizgi çiz 
          - 120 derece dönüş yap
          - üçgenlerden çizgi çiz 
          - 60 derece dön
      courseE_artist_functions_challenge_authored_hint:
        courseE_artist_functions_challenge_a: Eğer fonksiyonu bir kez daha çalıştırırsanız, son köşede aynı tasarımı oluşturabilirsiniz. Aynı zamanda farklı pozisyonlara da atlayabilir veya istediğiniz her şeyi değiştirebilirsiniz!
      courseE_artist_functions_challenge1_authored_hint:
        courseE_artist_functions_challenge1_a: Eğer fonksiyonu bir kez daha çalıştırırsanız, son köşede aynı tasarımı oluşturabilirsiniz. Aynı zamanda farklı pozisyonlara da atlayabilir veya istediğiniz her şeyi değiştirebilirsiniz!
        courseE_artist_functions_challenge1_b: Ayrıca başka konumlara 'zıpla'yabilirsiniz veya bütün tasarımı istediğiniz gibi değiştirebilirsiniz!
      courseE_artist_functions_challenge1_2018_authored_hint:
        courseE_artist_functions_challenge1_a: Eğer fonksiyonu bir kez daha çalıştırırsanız, son köşede aynı tasarımı oluşturabilirsiniz. Aynı zamanda farklı pozisyonlara da atlayabilir veya istediğiniz her şeyi değiştirebilirsiniz!
        courseE_artist_functions_challenge1_b: Ayrıca başka konumlara 'zıpla'yabilirsiniz veya bütün tasarımı istediğiniz gibi değiştirebilirsiniz!
      courseE_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n<block type=\"jump_to_xy\">\n<title name=\"XPOS\">350</title>\n<title name=\"YPOS\">200</title>\n</block>\n</xml>\n\nBu 'atla' bloğu istediğiniz zaman zombie aktörünü ızgara üzerindeki herhangi bir noktaya taşımanızı sağlar. Onu piksel sayısı kadar sağ taraftan ve piksel sayısı kadar aşağıya taşıyarak yapar. Sürekli olarak üst sol köşeden sayılır, bunun anlamı zombie aktörünün komut çalışmadan *önce* nerede olduğunun bir önemi yoktur!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_functions_challenge2_2018_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n<block type=\"jump_to_xy\">\n<title name=\"XPOS\">350</title>\n<title name=\"YPOS\">200</title>\n</block>\n</xml>\n\nBu 'atla' bloğu istediğiniz zaman zombie aktörünü ızgara üzerindeki herhangi bir noktaya taşımanızı sağlar. Onu piksel sayısı kadar sağ taraftan ve piksel sayısı kadar aşağıya taşıyarak yapar. Sürekli olarak üst sol köşeden sayılır, bunun anlamı zombie aktörünün komut çalışmadan *önce* nerede olduğunun bir önemi yoktur!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_functions_predict1_authored_hint: [ ]
      courseE_artist_functions_predict1_2018_authored_hint: [ ]
      courseE_artist_functions_predict2_authored_hint: [ ]
      courseE_artist_functions_predict2_2018_authored_hint: [ ]
      courseE_artist_predict1_authored_hint: [ ]
      courseE_artist_predict1_2018_authored_hint: [ ]
      courseE_artist_ramp10_authored_hint:
        courseD_artist_ramp10_a: Her üçgenden sonra 60 derece dönmeyi unutma. Hangi föngü içine ilgili komutları koyman gerekiyor?
        courseD_artist_ramp10_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseD_artist_ramp10_c: |-
          Sanatçı toplamda altı tane üçgen çizecek:
          
          ![](https://images.code.org/752d82f3afdca0a7d7c01d6fa2abb583-image-1499889821499.2_solution2.gif)
      courseE_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan ve 100 yerine 200 gir.
        courseD_artist_ramp11b: |-
          4 tarafı çizmek için bir döngü içinde 'ileri 100 piksel' bloğunu döngü içine yerleştirin ve 4 kez çizmek için ayarlandığından emin olun. Daha sonra dönmeyi unutma!
      courseE_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: Önce kare sonra üçgen çizebilirsin yada tam tersi sırada!
      courseE_artist_ramp8_authored_hint:
        courseE_artist_ramp8_a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan ve 100 yerine 200 gir.
        courseE_artist_ramp8_b: |-
          4 tarafı çizmek için bir döngü içinde 'ileri 100 piksel' bloğunu döngü içine yerleştirin ve 4 kez çizmek için ayarlandığından emin olun. Daha sonra dönmeyi unutma!
        courseE_artist_ramp8_c: 'Döngünüzün içinde iki blok bulunmalı, ''ilerle'' ve ''90 derece sağa dön''.'
      courseE_artist_ramp8_2_authored_hint:
        courseE_artist_ramp8_a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan ve 100 yerine 200 gir.
        courseE_artist_ramp8_b: |-
          4 tarafı çizmek için bir döngü içinde 'ileri 100 piksel' bloğunu döngü içine yerleştirin ve 4 kez çizmek için ayarlandığından emin olun. Daha sonra dönmeyi unutma!
        courseE_artist_ramp8_c: 'Döngünüzün içinde iki blok bulunmalı, ''ilerle'' ve ''90 derece sağa dön''.'
      courseE_artist_ramp8_2018_authored_hint:
        courseE_artist_ramp8_a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan ve 100 yerine 200 gir.
        courseE_artist_ramp8_b: |-
          4 tarafı çizmek için bir döngü içinde 'ileri 100 piksel' bloğunu döngü içine yerleştirin ve 4 kez çizmek için ayarlandığından emin olun. Daha sonra dönmeyi unutma!
        courseE_artist_ramp8_c: 'Döngünüzün içinde iki blok bulunmalı, ''ilerle'' ve ''90 derece sağa dön''.'
      courseE_artist_ramp8_2_2018_authored_hint:
        courseE_artist_ramp8_a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan ve 100 yerine 200 gir.
        courseE_artist_ramp8_b: |-
          4 tarafı çizmek için bir döngü içinde 'ileri 100 piksel' bloğunu döngü içine yerleştirin ve 4 kez çizmek için ayarlandığından emin olun. Daha sonra dönmeyi unutma!
        courseE_artist_ramp8_c: 'Döngünüzün içinde iki blok bulunmalı, ''ilerle'' ve ''90 derece sağa dön''.'
      courseE_artist_ramp9_authored_hint:
        courseD_artist_ramp12_a: Bu kareye benzer bir şekil. Farklı olan nedir?
        courseD_artist_ramp12_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseD_artist_ramp12_c: Her tarafı çizmek için 100 piksel ilerlemen gerekecek, sonra 120 derece dönmelisin. Kaç tarafa ihtiyacın var?
      courseE_artist_ramp9_2_authored_hint:
        courseD_artist_ramp12_a: Bu kareye benzer bir şekil. Farklı olan nedir?
        courseD_artist_ramp12_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseD_artist_ramp12_c: Her tarafı çizmek için 100 piksel ilerlemen gerekecek, sonra 120 derece dönmelisin. Kaç tarafa ihtiyacın var?
      courseE_artist_ramp9_2018_authored_hint:
        courseD_artist_ramp12_a: Bu kareye benzer bir şekil. Farklı olan nedir?
        courseD_artist_ramp12_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseD_artist_ramp12_c: Her tarafı çizmek için 100 piksel ilerlemen gerekecek, sonra 120 derece dönmelisin. Kaç tarafa ihtiyacın var?
      courseE_artist_ramp9_2_2018_authored_hint:
        courseD_artist_ramp12_a: Bu kareye benzer bir şekil. Farklı olan nedir?
        courseD_artist_ramp12_b: Hangi açıya ihtiyacın olduğunu görmek için 'dön' bloğu üzerindeki açılır menüyü kullanabilirsin!
        courseD_artist_ramp12_c: Her tarafı çizmek için 100 piksel ilerlemen gerekecek, sonra 120 derece dönmelisin. Kaç tarafa ihtiyacın var?
      courseE_bee_concept1_authored_hint:
        courseE_bee_concept1_b: Burada *tekrarlayan* herhangi bir desen var mı?
        courseE_bee_concept1_a: If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see.
      courseE_bee_concept1_2018_authored_hint:
        courseE_bee_concept1_b: Burada *tekrarlayan* herhangi bir desen var mı?
        courseE_bee_concept1_a: If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see.
      courseE_bee_concept2_authored_hint:
        courseE_bee_concept2_a: Burada bir 'süresince' döngüsünün yardımı olur mu?
        courseE_bee_concept2_d: Bal>0 mı diye görmek için boş alanları bile kontrol edebilirsiniz.
        courseE_bee_concept2_b: Her yolun sonuna hareket etmek için, ve her boş alandaki tüm balı toplamak için 'süresince' döngüsünü kullanabilirsiniz.
        courseE_bee_concept2_c: Her yoldan sonra arı hangi yöne dönmeli?
      courseE_bee_concept2_2018_authored_hint:
        courseE_bee_concept2_a: Burada bir 'süresince' döngüsünün yardımı olur mu?
        courseE_bee_concept2_d: Bal>0 mı diye görmek için boş alanları bile kontrol edebilirsiniz.
        courseE_bee_concept2_b: Her yolun sonuna hareket etmek için, ve her boş alandaki tüm balı toplamak için 'süresince' döngüsünü kullanabilirsiniz.
        courseE_bee_concept2_c: Her yoldan sonra arı hangi yöne dönmeli?
      courseE_bee_concept3_authored_hint:
        courseE_bee_concept3a_a: Try using nested `repeat` loops to solve this puzzle.
        courseE_bee_concept3a_b: Döngüyü nereye koyacağınızı bulamıyorsanız, kodunuzu adım adım yazmayı deneyin ve desenlere bakın.
        courseE_bee_concept3a_c: Üç grup çiçek var, bu yüzden dış döngünüz üç kez tekrarlanmalı.
      courseE_bee_concept3_2018_authored_hint:
        courseE_bee_concept3a_a: Try using nested `repeat` loops to solve this puzzle.
        courseE_bee_concept3a_b: Döngüyü nereye koyacağınızı bulamıyorsanız, kodunuzu adım adım yazmayı deneyin ve desenlere bakın.
        courseE_bee_concept3a_c: Üç grup çiçek var, bu yüzden dış döngünüz üç kez tekrarlanmalı.
      courseE_bee_concept4_authored_hint:
        courseE_bee_concept4_a: An `if/else` statement could really help you out here.
        courseE_bee_concept4_b: Basamak deseni, çiçekler ve balpeteklerinin tamamını geçmenize yardımcı olabilir.
        courseE_bee_concept4_c: Eğer bir çiçekte iseniz, kaç kez nektar almak zorundasınız? Bu sayı bütün çiçekler için aynı mıdır?
      courseE_bee_concept4_2018_authored_hint:
        courseE_bee_concept4_a: An `if/else` statement could really help you out here.
        courseE_bee_concept4_b: Basamak deseni, çiçekler ve balpeteklerinin tamamını geçmenize yardımcı olabilir.
        courseE_bee_concept4_c: Eğer bir çiçekte iseniz, kaç kez nektar almak zorundasınız? Bu sayı bütün çiçekler için aynı mıdır?
      courseE_bee_concept5_authored_hint:
        courseE_bee_concept5_a: The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side.
        courseE_bee_concept5_c: |2
           Arının gidebileceği dikdörtgen yolun bir resmi var. 
          ![](https://images.code.org/b0ab0f9ec823fd8fbc9b032d68fd69d0-image-1493152066638.7.8 Hint Drawing.png)
        courseE_bee_concept5_b: You can check every square for a flower using the `if` block, even if you already know there's not one there.
      courseE_bee_concept5_2018_authored_hint:
        courseE_bee_concept5_a: The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side.
        courseE_bee_concept5_c: |2
           Arının gidebileceği dikdörtgen yolun bir resmi var. 
          ![](https://images.code.org/b0ab0f9ec823fd8fbc9b032d68fd69d0-image-1493152066638.7.8 Hint Drawing.png)
        courseE_bee_concept5_b: You can check every square for a flower using the `if` block, even if you already know there's not one there.
      courseE_bee_functions1_authored_hint:
        courseE_bee_functions1_a: Remember that left and right turns are from the point of view of the bee.
        courseE_bee_functions1_b: Kodunuzu kısaltmak için nektar toplarken bir tane 'tekrarla' döngüsü kullanın.
        courseE_bee_functions1_c: Sola ve sağa dönüşlerin arının bakış açısından olduğunu unutmayın.
      courseE_bee_functions10_authored_hint:
        courseE_bee_functions10_a: Bütün balı toplamak için 'süresince' (while) döngüsü kullanmanız gerekir, çünkü petekler arasında kaç bal olduğu farklılık gösterir.
        courseE_bee_functions10_b: Fonksiyonlarınız dönüşler ve hareketler içermeli, böylece arı ana yolda olduğu zaman fonksiyonu çağırabilirisiniz.
        courseE_bee_functions10_c: Ana programda fonksiyonu çağırmayı unutmayın!
      courseE_bee_functions10_2018_authored_hint:
        courseE_bee_functions10_a: Bütün balı toplamak için 'süresince' (while) döngüsü kullanmanız gerekir, çünkü petekler arasında kaç bal olduğu farklılık gösterir.
        courseE_bee_functions10_b: Fonksiyonlarınız dönüşler ve hareketler içermeli, böylece arı ana yolda olduğu zaman fonksiyonu çağırabilirisiniz.
        courseE_bee_functions10_c: Ana programda fonksiyonu çağırmayı unutmayın!
      courseE_bee_functions1_2018_authored_hint:
        courseE_bee_functions1_a: Remember that left and right turns are from the point of view of the bee.
        courseE_bee_functions1_b: Kodunuzu kısaltmak için nektar toplarken bir tane 'tekrarla' döngüsü kullanın.
        courseE_bee_functions1_c: Sola ve sağa dönüşlerin arının bakış açısından olduğunu unutmayın.
      courseE_bee_functions2_authored_hint:
        courseE_bee_functions2_a: The function has been written for you, but you will need to call it at each flower.
        courseE_bee_functions2_b: Yeşil '2 nektar al' bloğunu fonksiyonu çağırmak için kullanın.
        courseE_bee_functions2_c: Bu bulmacayı çözmek için ilerle ve iki defa 2 nektar al.
      courseE_bee_functions2_2018_authored_hint:
        courseE_bee_functions2_a: The function has been written for you, but you will need to call it at each flower.
        courseE_bee_functions2_b: Yeşil '2 nektar al' bloğunu fonksiyonu çağırmak için kullanın.
        courseE_bee_functions2_c: Bu bulmacayı çözmek için ilerle ve iki defa 2 nektar al.
      courseE_bee_functions3_authored_hint:
        courseE_bee_functions3_a: 'Your function for this puzzle only needs to collect nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseE_bee_functions3_b: Ana programda 'çalıştığı zaman' bloğunun altında '5 al' fonksiyonunu çağır.
        courseE_bee_functions3_c: Ana programın tüm hareketleri kontrol edecek, fonksiyon sadece arı çiçeğe ulaştığında gerçekleşen şeyler için.
        courseE_bee_functions3_d: Doğruca bu yolu kullanmayı deneyin.
      courseE_bee_functions3_2018_authored_hint:
        courseE_bee_functions3_a: 'Your function for this puzzle only needs to collect nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseE_bee_functions3_b: Ana programda 'çalıştığı zaman' bloğunun altında '5 al' fonksiyonunu çağır.
        courseE_bee_functions3_c: Ana programın tüm hareketleri kontrol edecek, fonksiyon sadece arı çiçeğe ulaştığında gerçekleşen şeyler için.
        courseE_bee_functions3_d: Doğruca bu yolu kullanmayı deneyin.
      courseE_bee_functions4_authored_hint:
        courseE_bee_functions4_a: Your function will already travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.
        courseE_bee_functions4_b: Yeşil 'ilerle ve nektar al' blokunu fonksiyonu çağırmak için kullan.
        courseE_bee_functions4_c: Fonksiyonu değiştirmene gerek yok, sadece programda kullan.
      courseE_bee_functions4_2018_authored_hint:
        courseE_bee_functions4_a: Your function will already travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.
        courseE_bee_functions4_b: Yeşil 'ilerle ve nektar al' blokunu fonksiyonu çağırmak için kullan.
        courseE_bee_functions4_c: Fonksiyonu değiştirmene gerek yok, sadece programda kullan.
      courseE_bee_functions5_authored_hint:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without having to change the main program.
        courseE_bee_functions5_c: '''ileri git'' bloku ''geri git'' bloku olarak değiştirilebilir. Yolların sonundaki her yeri değiştirmek yerine bunu kullan!'
        courseE_bee_functions5_b: "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- move backward\n- turn back to the direction that the bee started from"
      courseE_bee_functions5_2018_authored_hint:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without having to change the main program.
        courseE_bee_functions5_c: '''ileri git'' bloku ''geri git'' bloku olarak değiştirilebilir. Yolların sonundaki her yeri değiştirmek yerine bunu kullan!'
        courseE_bee_functions5_b: "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- move backward\n- turn back to the direction that the bee started from"
      courseE_bee_functions6_authored_hint:
        courseE_bee_functions6_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız!  ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: Bu durumda fonksiyon içine taşımak yardımcı olabilir, ama bütün 'ilerle' bloklarının orada olması gerekmiyor.
      courseE_bee_functions6_2018_authored_hint:
        courseE_bee_functions6_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız!  ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: Bu durumda fonksiyon içine taşımak yardımcı olabilir, ama bütün 'ilerle' bloklarının orada olması gerekmiyor.
      courseE_bee_functions6test_authored_hint:
        courseE_bee_functions6_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız!  ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: Bu durumda fonksiyon içine taşımak yardımcı olabilir, ama bütün 'ilerle' bloklarının orada olması gerekmiyor.
      courseE_bee_functions7_authored_hint:
        courseE_bee_functions7_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions7_b: |-
          Kodunu yeşil fonksiyon bloğu içinde oluştur. ! [] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back.
      courseE_bee_functions7_2018_authored_hint:
        courseE_bee_functions7_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions7_b: |-
          Kodunu yeşil fonksiyon bloğu içinde oluştur. ! [] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back.
      courseE_bee_functions8_authored_hint:
        courseE_bee_functions8_a: Your function will only need to collect nectar. Try using a while loop instead of a repeat loop.
        courseE_bee_functions8_b: Use `while nectar > 0` to make sure you get all of the nectar.
        courseE_bee_functions8_c: Ana programınıza merdiven adımı hareketleri deseni gerekiyor.
      courseE_bee_functions8_2018_authored_hint:
        courseE_bee_functions8_a: Your function will only need to collect nectar. Try using a while loop instead of a repeat loop.
        courseE_bee_functions8_b: Use `while nectar > 0` to make sure you get all of the nectar.
        courseE_bee_functions8_c: Ana programınıza merdiven adımı hareketleri deseni gerekiyor.
      courseE_bee_functions9_authored_hint:
        courseE_bee_functions9_a: You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.
        courseE_bee_functions9_b: Bazı çiçeklerin ne kadar nektara sahip olduğunu bilsen bile 'sürece' döngüsü hepsi için çalışan bir fonksiyon yapabilir.
      courseE_bee_functions9_2018_authored_hint:
        courseE_bee_functions9_a: You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.
        courseE_bee_functions9_b: Bazı çiçeklerin ne kadar nektara sahip olduğunu bilsen bile 'sürece' döngüsü hepsi için çalışan bir fonksiyon yapabilir.
      courseE_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions_challenge1_b: İşlev (function) düzenleyicisinin içinde kod oluşturmayı unutmayın.
      courseE_bee_functions_challenge1_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions_challenge1_b: İşlev (function) düzenleyicisinin içinde kod oluşturmayı unutmayın.
      courseE_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions_challenge1_b: İşlev (function) düzenleyicisinin içinde kod oluşturmayı unutmayın.
      courseE_bee_functions_challenge2_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseE_bee_functions_challenge1_b: İşlev (function) düzenleyicisinin içinde kod oluşturmayı unutmayın.
      courseE_bee_ramp14_authored_hint:
        courseE_bee_ramp14_a: Arı, önceki bulmacadaki çiftçi gibi çalışır. Eğer nektar varsa yol boyunca ilerle ve nektar topla (nektar>0 süresince), ve bütün balı yap.
        courseE_bee_ramp14_b: Her boşlukta birden fazla çiçek veya petek olabilir, bundan dolayı 'sürece' döngüsü kullanarak hepsini aldığından emin ol!
        courseE_bee_ramp14_c: Bu bulmacayla önceki ile neredeyse aynıdır, sadece sebzelerin yerine bal ve nektarla.
      courseE_bee_ramp14_2018_authored_hint:
        courseE_bee_ramp14_a: Arı, önceki bulmacadaki çiftçi gibi çalışır. Eğer nektar varsa yol boyunca ilerle ve nektar topla (nektar>0 süresince), ve bütün balı yap.
        courseE_bee_ramp14_b: Her boşlukta birden fazla çiçek veya petek olabilir, bundan dolayı 'sürece' döngüsü kullanarak hepsini aldığından emin ol!
        courseE_bee_ramp14_c: Bu bulmacayla önceki ile neredeyse aynıdır, sadece sebzelerin yerine bal ve nektarla.
      courseE_bee_ramp17_authored_hint:
        courseE_bee_ramp17_a: Tekrarla bloğunu belirli bir sayıda bir şey yapmak için kullanamıyorum, yol boyunca ilerlemek için ne kullanmalıyım?
        courseE_bee_ramp17: Eğer bu bulmacayı süresince bloğu olmadan çözseydin, tekrarlayan kodu nerede görebilirdin? Tekrarlayan bu kodu süresince bloğunun problemi çözmesi zorunluluğunu şekillendirebilmek için nasıl kullanabilirsin?
        courseE_bee_ramp17_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseE_bee_ramp17_c: Merdiven adımı deseni ile hareket etmeniz gerekir. Önce kodlamayı deneyin, sonra çiçekleri ve petekleri kontrol etmek için 'eğer/değilse' ifadesi ve 'sürece' döngüsü ekleyin.
      courseE_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          Dört blok 'ilerle' bloğu kullanmak yerine, tekrarla döngü bloğu içine ilerle bloğu koymayı deneyin: <xml><block type="controls_repeat"> <title name="TIMES">4</title> <statement name="DO"> <block type="maze_moveForward"/> </statement> </block></xml>
        courseD_artist_ramp10_b: "Önce bir parça hazine toplayın sonra her bir dizi adımdan sonra dönün!\n"
      courseE_farmer_concept1_authored_hint:
        courseE_farmer_concept1_a: A `while there is a hole` block will help you fill any hole until it's flat.
        courseE_farmer_concept1_b: Merdiven adımı desenini delikleri almak için kullanabilirsin.
      courseE_farmer_concept1_2018_authored_hint:
        courseE_farmer_concept1_a: A `while there is a hole` block will help you fill any hole until it's flat.
        courseE_farmer_concept1_b: Merdiven adımı desenini delikleri almak için kullanabilirsin.
      courseE_farmer_concept2_authored_hint:
        courseE_farmer_concept2_a: The paths are all the same length, but they are a different number of squares apart.  A loop isn't ideal here. Try a function.
        courseE_farmer_concept2_b: Dönen, yoldan aşağı giden, kabaklar toplayan ve ana yatay yola döndüren fonksiyon burada yardımcı olabilir.
        courseE_farmer_concept2_c: Ana programın yeşil 'bir şeyler yap' bloku ile bu fonksiyonu çağırabilir.
      courseE_farmer_concept2_2018_authored_hint:
        courseE_farmer_concept2_a: The paths are all the same length, but they are a different number of squares apart.  A loop isn't ideal here. Try a function.
        courseE_farmer_concept2_b: Dönen, yoldan aşağı giden, kabaklar toplayan ve ana yatay yola döndüren fonksiyon burada yardımcı olabilir.
        courseE_farmer_concept2_c: Ana programın yeşil 'bir şeyler yap' bloku ile bu fonksiyonu çağırabilir.
      courseE_farmer_concept3_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.
        grade3_robotFarmer_ConditionalsIntro_8_b: Bir yolun sonuna geldiğinizde ne yapmanız gerekir?
        grade3_robotFarmer_ConditionalsIntro_8_c: Her düz yolda bir çok defa kodunuzu çalıştırmak için 'tekrarla' döngüsü kullanın.
      courseE_farmer_concept3_2018_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.
        grade3_robotFarmer_ConditionalsIntro_8_b: Bir yolun sonuna geldiğinizde ne yapmanız gerekir?
        grade3_robotFarmer_ConditionalsIntro_8_c: Her düz yolda bir çok defa kodunuzu çalıştırmak için 'tekrarla' döngüsü kullanın.
      courseE_farmer_concept4_authored_hint:
        4-5_Artist_Patterns_3_a: Araç kutusundan her seferinde tüm kod bloğunu çekmeyi unutmayın.
        4-5_Artist_Patterns_3_b: Kodunuz çok kafa karıştırıcı hale gelirse, "Baştan Başla"'yı tıklayın ve yeniden deneyin!
      courseE_farmer_functions1_authored_hint:
        courseE_farmer_functions1_a: Araç kutusu bu sefer küçük farkla düzenlendi! Hangi bloklara sahip olduğunu görmek için farklı kategorilere tıkla.
        courseE_farmer_functions1_b: Sadece bir kabak alman gerekiyor, ama onu bir döngü kullanarak alabilir misin?
      courseE_farmer_functions10_authored_hint: [ ]
      courseE_farmer_functions10b_authored_hint:
        courseE_farmer_functions10b_a: Bu bulmacayı çözmek için bir 'eğer/değilse' ifadesini kullanman gerekir.
        courseE_farmer_functions10b_b: İlk bal kabağından sonra hangi yöne dönmeniz gerekir?
        courseE_farmer_functions10b_c: Fonksiyonu yapmak için yardıma ihtiyacınız varsa son bulmacada geriye bakın.
      courseE_farmer_functions10b_2018_authored_hint:
        courseE_farmer_functions10b_a: Bu bulmacayı çözmek için bir 'eğer/değilse' ifadesini kullanman gerekir.
        courseE_farmer_functions10b_b: İlk bal kabağından sonra hangi yöne dönmeniz gerekir?
        courseE_farmer_functions10b_c: Fonksiyonu yapmak için yardıma ihtiyacınız varsa son bulmacada geriye bakın.
      courseE_farmer_functions11_predict_authored_hint: [ ]
      courseE_farmer_functions11_predict_2018_authored_hint: [ ]
      courseE_farmer_functions1_2018_authored_hint:
        courseE_farmer_functions1_a: Araç kutusu bu sefer küçük farkla düzenlendi! Hangi bloklara sahip olduğunu görmek için farklı kategorilere tıkla.
        courseE_farmer_functions1_b: Sadece bir kabak alman gerekiyor, ama onu bir döngü kullanarak alabilir misin?
      courseE_farmer_functions1a_authored_hint:
        courseE_farmer_functions1a_a: Think through the `if/else` statements step by step. What should you do if you are standing at a corn plant?
        courseE_farmer_functions1a_b: Eğer mısırda değilsen, bir sonrakinde hangi mahsulü kontrol etmelisin?
      courseE_farmer_functions1a_2018_authored_hint:
        courseE_farmer_functions1a_a: Think through the `if/else` statements step by step. What should you do if you are standing at a corn plant?
        courseE_farmer_functions1a_b: Eğer mısırda değilsen, bir sonrakinde hangi mahsulü kontrol etmelisin?
      courseE_farmer_functions2a_authored_hint: [ ]
      courseE_farmer_functions2aALT_authored_hint: [ ]
      courseE_farmer_functions2b_authored_hint:
        courseE_farmer_functions2b_a: İki yolun sonuna ulaşmak için 'bal kabağına kadar tekrarla''yı kullanabilirsiniz.
        courseE_farmer_functions2b_b: Bağlantı yolunda hiç mısır yok, bu yüzden sadece ilerleyebilir ve dönebilirsiniz.
        courseE_farmer_functions2b_c: Bütün mısırları toplamak için iki ayrı 'kadar tekrarla' karesine ihtiyacınız var.
      courseE_farmer_functions2b_2018_authored_hint:
        courseE_farmer_functions2b_a: İki yolun sonuna ulaşmak için 'bal kabağına kadar tekrarla''yı kullanabilirsiniz.
        courseE_farmer_functions2b_b: Bağlantı yolunda hiç mısır yok, bu yüzden sadece ilerleyebilir ve dönebilirsiniz.
        courseE_farmer_functions2b_c: Bütün mısırları toplamak için iki ayrı 'kadar tekrarla' karesine ihtiyacınız var.
      courseE_farmer_functions2ba_authored_hint:
        courseE_farmer_functions2ba_a: Nu fonksiyonu çağırmak için yeşil 'mısır ve bal kabağı' karesi kullanın.
        courseE_farmer_functions2ba_b: Bu fonksiyonun nasıl çalıştığını görmek için alet çantasındaki bütün kareleri 'sırasında çalıştır'ın altına sürükleyin.
      courseE_farmer_functions2ba_2018_authored_hint:
        courseE_farmer_functions2ba_a: Nu fonksiyonu çağırmak için yeşil 'mısır ve bal kabağı' karesi kullanın.
        courseE_farmer_functions2ba_b: Bu fonksiyonun nasıl çalıştığını görmek için alet çantasındaki bütün kareleri 'sırasında çalıştır'ın altına sürükleyin.
      courseE_farmer_functions3_authored_hint:
        courseE_farmer_functions3_a: Try using a `while path ahead` loop to get you where you need to be.
      courseE_farmer_functions3b_authored_hint:
        courseE_farmer_functions1a_a: Nested `if` and `if/else` statements will really help you out here.
      courseE_farmer_functions3c_authored_hint:
        courseE_farmer_functions3c_a: Bu programda hangi dizi sıkça tekrarlanmış? Bu kareleri fonksiyona sürükleyebilir misiniz?
        courseE_farmer_functions3c_b: Kareleri sildiğin zamanlarda ana programdaki fonksiyonlarını çağırmayı unutma.
      courseE_farmer_functions3c_2018_authored_hint:
        courseE_farmer_functions3c_a: Bu programda hangi dizi sıkça tekrarlanmış? Bu kareleri fonksiyona sürükleyebilir misiniz?
        courseE_farmer_functions3c_b: Kareleri sildiğin zamanlarda ana programdaki fonksiyonlarını çağırmayı unutma.
      courseE_farmer_functions4_authored_hint:
        courseE_farmer_functions4_a: Drag all of the code out of your `repeat` loop and into the `go get pumpkins` function.
        courseE_farmer_functions4_b: Don't forget to put the block that calls the `go get pumpkins` functions inside your loop before you run your code.
      courseE_farmer_functions4b_authored_hint:
        courseE_farmer_functions4b_a: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseE_farmer_functions4b_b: Her yoldan sonra dönmeyi unutma.
        courseE_farmer_functions4b_c: Yeşil 'mısır ve bal kabağı' kareleri alet çantasının fonksiyonlar sekmesindedir.
      courseE_farmer_functions4b_2018_authored_hint:
        courseE_farmer_functions4b_a: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseE_farmer_functions4b_b: Her yoldan sonra dönmeyi unutma.
        courseE_farmer_functions4b_c: Yeşil 'mısır ve bal kabağı' kareleri alet çantasının fonksiyonlar sekmesindedir.
      courseE_farmer_functions5_authored_hint: [ ]
      courseE_farmer_functions5a_authored_hint: [ ]
      courseE_farmer_functions5b_authored_hint:
        courseE_farmer_functions5b_a: You will need to use a `while corn` loop, a `while lettuce` and a `while pumpkin` to make sure you get everything.
      courseE_farmer_functions5c_authored_hint:
        courseE_farmer_functions5c_a: Bu bulmacada başka döngü yapabileceğiniz desenler var mı?
        courseE_farmer_functions5c_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_farmer_functions5c_2018_authored_hint:
        courseE_farmer_functions5c_a: Bu bulmacada başka döngü yapabileceğiniz desenler var mı?
        courseE_farmer_functions5c_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_farmer_functions6_authored_hint: [ ]
      courseE_farmer_functions6b_authored_hint: [ ]
      courseE_farmer_functions6c_authored_hint:
        courseE_farmer_functions6c_a: Marul aramak için de fonksiyonunuzu düzenleyin.
        courseE_farmer_functions6c_b: Bir alanda marul olup olmadığını kontrol etmek için bir 'eğer/başka' karesi yardım eder mi?
        courseE_farmer_functions6c_c: Mısır aramaya devam etmeyi unutmayın!
      courseE_farmer_functions6c_2018_authored_hint:
        courseE_farmer_functions6c_a: Marul aramak için de fonksiyonunuzu düzenleyin.
        courseE_farmer_functions6c_b: Bir alanda marul olup olmadığını kontrol etmek için bir 'eğer/başka' karesi yardım eder mi?
        courseE_farmer_functions6c_c: Mısır aramaya devam etmeyi unutmayın!
      courseE_farmer_functions7_authored_hint: [ ]
      courseE_farmer_functions7b_authored_hint:
        courseE_farmer_functions7b_a: Burada bir fonksiyona ihtiyacınız yok, ama eğer sizin için yararlıysa bir tane yapabilirsiniz!
        courseE_farmer_functions7b_b: Mısır aramak için bir 'eğer/başka' ifadesi kullanın, sonra hangi mısırı bulduğunuza dayanarak dönün.
        courseE_farmer_functions7b_c: Labirent boyunca bütün yolu gitmenizde bir 'bal kabağına kadar tekrarla' döngüsü yardımcı olabilir.
      courseE_farmer_functions7b_2018_authored_hint:
        courseE_farmer_functions7b_a: Burada bir fonksiyona ihtiyacınız yok, ama eğer sizin için yararlıysa bir tane yapabilirsiniz!
        courseE_farmer_functions7b_b: Mısır aramak için bir 'eğer/başka' ifadesi kullanın, sonra hangi mısırı bulduğunuza dayanarak dönün.
        courseE_farmer_functions7b_c: Labirent boyunca bütün yolu gitmenizde bir 'bal kabağına kadar tekrarla' döngüsü yardımcı olabilir.
      courseE_farmer_functions8_authored_hint:
        courseE_farmer_functions8_a: Create a function that takes the farmer to the corn, gets all of the corn, then turns around and comes back.
      courseE_farmer_functions8b_authored_hint:
        courseE_farmer_functions8b_a: Verilen kodun ne yaptığını görmek için çalıştırmayı deneyin. Bundan sonra neye ihtiyacınız var?
        courseE_farmer_functions8b_b: Başlangıç karelerinin hepsini bir fonksiyona taşıyın ki onları biden fazla kullanabilirsiniz.
        courseE_farmer_functions8b_c: Fonksiyonu kaç kere çağırmaya ihtiyacınız var?
      courseE_farmer_functions8b_2018_authored_hint:
        courseE_farmer_functions8b_a: Verilen kodun ne yaptığını görmek için çalıştırmayı deneyin. Bundan sonra neye ihtiyacınız var?
        courseE_farmer_functions8b_b: Başlangıç karelerinin hepsini bir fonksiyona taşıyın ki onları biden fazla kullanabilirsiniz.
        courseE_farmer_functions8b_c: Fonksiyonu kaç kere çağırmaya ihtiyacınız var?
      courseE_farmer_functions9_authored_hint:
        courseE_farmer_functions8_a: Create a function that takes the farmer to the corn, gets all of the corn, then turns around and comes back.
      courseE_farmer_functions9b_authored_hint:
        courseE_farmer_functions9b_a: Yolda ilerlemek için iç içe geçmiş 'eğer' ve 'eğer/başka' ifadelerini kullanabilir misiniz?
        courseE_farmer_functions9b_b: Yollar boyunca hareket etmek için 'bal kabağına kadar tekrarla' kullanın.
        courseE_farmer_functions9b_c: Yollar boyunca her döngüden sonra kareler büyüyormuş gibi hareket etmek isteyeceksiniz.
      courseE_farmer_functions9b_2018_authored_hint:
        courseE_farmer_functions9b_a: Yolda ilerlemek için iç içe geçmiş 'eğer' ve 'eğer/başka' ifadelerini kullanabilir misiniz?
        courseE_farmer_functions9b_b: Yollar boyunca hareket etmek için 'bal kabağına kadar tekrarla' kullanın.
        courseE_farmer_functions9b_c: Yollar boyunca her döngüden sonra kareler büyüyormuş gibi hareket etmek isteyeceksiniz.
      courseE_farmer_functions9b_clone_authored_hint: [ ]
      courseE_farmer_predict1_authored_hint:
        courseE_farmer_ramp12a: İhtiyacın olursa önceki bulmacaya geri dönün ve **süresince**bloğu ile nasıl ürün toplandığını görün.
      courseE_farmer_predict1_2018_authored_hint:
        courseE_farmer_ramp12a: İhtiyacın olursa önceki bulmacaya geri dönün ve **süresince**bloğu ile nasıl ürün toplandığını görün.
      courseE_farmer_predict2_authored_hint: [ ]
      courseE_farmer_predict2_2018_authored_hint: [ ]
      courseE_farmer_ramp11_authored_hint:
        courseE_farmer_ramp11_a: Eğer döngüyü nereye koyacağın konusunda zorlanıyorsan önce kodla sonra tekrarlayan kısımları bulmaya çalış.
        courseE_farmer_ramp11_b: 5 tane "Marul topla" bloğu kullanmak yerine, Tekrarla döngüsü kullanarak nasıl marul toplarsın?
        courseE_farmer_ramp11_c: Bütün marulları toplamak için 5 tane tekrarla bloğuna ihtiyacın yok. Bunun yerine bir döngü içine bir döngü daha yerleştirin (içine de 'ilerle' bloğu koymayı unutmayın!)
      courseE_farmer_ramp11a_authored_hint:
        courseE_farmer_ramp12_a: 'Çiftçinin kaç kere marul toplaması gerektiğini tekrarla bloğu ile söylemek yerine (marul olduğu sürece) ''süresince'' bloğu kullanarak çözebilirsiniz.  '
        courseE_farmer_ramp12_b: Marulu almak için bir kez ilerlemek yeterlidir.
      courseE_farmer_ramp11a_2018_authored_hint:
        courseE_farmer_ramp12_a: 'Çiftçinin kaç kere marul toplaması gerektiğini tekrarla bloğu ile söylemek yerine (marul olduğu sürece) ''süresince'' bloğu kullanarak çözebilirsiniz.  '
        courseE_farmer_ramp12_b: Marulu almak için bir kez ilerlemek yeterlidir.
      courseE_farmer_ramp11b_authored_hint:
        courseE_farmer_ramp11b_a: Kodunuzu daha kısa yapmak için 'tekrar' döngüsünün içine 'süresince' döngüsü yerleştirebilirsiniz.
      courseE_farmer_ramp11b_2018_authored_hint:
        courseE_farmer_ramp11b_a: Kodunuzu daha kısa yapmak için 'tekrar' döngüsünün içine 'süresince' döngüsü yerleştirebilirsiniz.
      courseE_farmer_ramp12_authored_hint:
        courseE_farmer_ramp12_b: Çiftçiye kaç gere ilerleyip kaç marul almasını söylemek için tekrarla bloğuna ihtiyacın var.
      courseE_farmer_ramp12_2018_authored_hint:
        courseE_farmer_ramp12_b: Çiftçiye kaç gere ilerleyip kaç marul almasını söylemek için tekrarla bloğuna ihtiyacın var.
      courseE_farmer_ramp12_forswap_authored_hint:
        courseE_farmer_ramp12_b: Çiftçiye kaç gere ilerleyip kaç marul almasını söylemek için tekrarla bloğuna ihtiyacın var.
      courseE_farmer_ramp12_forswap_2018_authored_hint:
        courseE_farmer_ramp12_b: Çiftçiye kaç gere ilerleyip kaç marul almasını söylemek için tekrarla bloğuna ihtiyacın var.
      courseE_farmer_ramp12a_authored_hint:
        courseE_farmer_ramp12b: Bu bulmacayı çözmek için 'eğer' ifadeni 21 defa kontrol etmen gerekir.
        courseE_farmer_ramp12c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseE_farmer_ramp12d: Sadece marul olacak, bu yüzden boşluklar, mısır ve kabaklar için endişeye kapılma.
      courseE_farmer_ramp12a_2018_authored_hint:
        courseE_farmer_ramp12b: Bu bulmacayı çözmek için 'eğer' ifadeni 21 defa kontrol etmen gerekir.
        courseE_farmer_ramp12c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseE_farmer_ramp12d: Sadece marul olacak, bu yüzden boşluklar, mısır ve kabaklar için endişeye kapılma.
      courseE_farmer_ramp12b_authored_hint: [ ]
      courseE_farmer_ramp12b_2018_authored_hint: [ ]
      courseE_farmer_ramp12c_authored_hint:
        courseE_farmer_ramp12b_b: Yine de hala ilk 'kadar' döngüsünü kullanmaya ihtiyacınız olacak, sonra marula ulaştığınızda bir 'süresince' döngüsü kullanın.
      courseE_farmer_ramp12c_2018_authored_hint:
        courseE_farmer_ramp12b_b: Yine de hala ilk 'kadar' döngüsünü kullanmaya ihtiyacınız olacak, sonra marula ulaştığınızda bir 'süresince' döngüsü kullanın.
      courseE_farmer_ramp12d_authored_hint:
        courseE_farmer_ramp12d_b: Bulmacayı çözmek için yine de hala bir 'tekrar' döngüsünün içine 'kadar' ve 'süresince' döngülerinizi koymanız gerekir!
      courseE_farmer_ramp12d_2018_authored_hint:
        courseE_farmer_ramp12d_b: Bulmacayı çözmek için yine de hala bir 'tekrar' döngüsünün içine 'kadar' ve 'süresince' döngülerinizi koymanız gerekir!
      courseE_farmer_ramp12e_authored_hint:
        courseE_farmer_ramp12e_b: Bu bulmacanın çözümü son bulmacanın çözümüne çok benziyor, fakat diğer yöne dönüyor.
      courseE_farmer_ramp12e_2018_authored_hint:
        courseE_farmer_ramp12e_b: Bu bulmacanın çözümü son bulmacanın çözümüne çok benziyor, fakat diğer yöne dönüyor.
      courseE_farmer_ramp12f_authored_hint:
        courseE_farmer_ramp12f_b: Çiftçinin sağa mı sola mı dönmesi gerekli karar vermesine yardımcı olmak için bir 'eğer/başka' karesi kullanın.
      courseE_farmer_ramp12f_2018_authored_hint:
        courseE_farmer_ramp12f_b: Çiftçinin sağa mı sola mı dönmesi gerekli karar vermesine yardımcı olmak için bir 'eğer/başka' karesi kullanın.
      courseE_farmer_ramp12g_authored_hint:
        courseE_farmer_ramp12G_b: Çiftçinin sağa mı sola mı dönmesi gerekli karar vermesine yardımcı olmak için bir 'eğer/başka' karesi kullanın.
      courseE_farmer_ramp12g_2018_authored_hint:
        courseE_farmer_ramp12G_b: Çiftçinin sağa mı sola mı dönmesi gerekli karar vermesine yardımcı olmak için bir 'eğer/başka' karesi kullanın.
      courseE_farmer_ramp13_authored_hint:
        courseE_farmer_ramp13_a: Her boşlukta bitkiler birden fazla olabilir, bundan dolayı 'süresince' döngüsü kullanarak hepsini aldığından emin ol!
        courseE_farmer_ramp13_b: '''tekrarla'' döngüsü kullanın böylece her kare için ''eğer'' ifadesi yazmanız gerekmez.'
        courseE_farmer_ramp13_c: If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.
      courseE_farmer_ramp13_2018_authored_hint:
        courseE_farmer_ramp13_a: Her boşlukta bitkiler birden fazla olabilir, bundan dolayı 'süresince' döngüsü kullanarak hepsini aldığından emin ol!
        courseE_farmer_ramp13_b: '''tekrarla'' döngüsü kullanın böylece her kare için ''eğer'' ifadesi yazmanız gerekmez.'
        courseE_farmer_ramp13_c: If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.
      courseE_farmer_ramp15_authored_hint:
        courseE_farmer_ramp15_a: Kadar Tekrarla bloğu kullanarak kabağa kadar gidin.
        courseE_farmer_ramp15_b: Kabağa doğru yol boyunca ilerlerken, başka neyin yapılmasına ihtiyaç vardır?
        courseE_farmer_ramp15_c: Kabak yolunda hasar etmek için filizler çeşitli miktarlarda mısır ya da marulu gizler.
      courseE_farmer_ramp15_2018_authored_hint:
        courseE_farmer_ramp15_a: Kadar Tekrarla bloğu kullanarak kabağa kadar gidin.
        courseE_farmer_ramp15_b: Kabağa doğru yol boyunca ilerlerken, başka neyin yapılmasına ihtiyaç vardır?
        courseE_farmer_ramp15_c: Kabak yolunda hasar etmek için filizler çeşitli miktarlarda mısır ya da marulu gizler.
      courseE_farmer_ramp16_authored_hint:
        courseE_farmer_ramp16_a: Eğer, kabağa doğru yol boyunca lerliyorsak, neyi tekrar tekrar yapmamız gerekmektedir? Ne zaman tekrarlamayı durduracağız?
        courseE_farmer_ramp16_b: Mısır ya da marulu her boşlukta kontrol etmek kodunu sadeleştirmeye yardımcı olacaktır. Eğer bitki varsa ne yapmalısın? Ya da bir şey yoksa?
        courseE_farmer_ramp16_c: İlerlemeye devam etmek için 'eğer/değilse' bloku kullanın. İleri yol bloklu ise hangi yola dönmeniz gerekir?
      courseE_maze_predict1_authored_hint: [ ]
      courseE_maze_predict1_2018_authored_hint: [ ]
      courseE_maze_ramp1_authored_hint:
        courseC_maze_programming1_0: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Bu bulmacayı çözmek için araç kutusundan fazladan bir bloka ihtiyacınız yok!
      courseE_maze_ramp13_authored_hint:
        courseD_maze_ramp11_b: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseD_maze_ramp11_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu tekrarlı çalıştırman mümkündür.
      courseE_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_0: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Bu bulmacayı çözmek için araç kutusundan fazladan bir bloka ihtiyacınız yok!
      courseE_maze_ramp2_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Her 3 'ileri git' blokunun 'çalıştığı zaman' blokuna eklenmiş olduğundan emin olun.
      courseE_maze_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Her 3 'ileri git' blokunun 'çalıştığı zaman' blokuna eklenmiş olduğundan emin olun.
      courseE_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: Sağa ve sola dönüşlerin kuş bakışı olduğunu unutmayın.
      courseE_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: Sağa ve sola dönüşlerin kuş bakışı olduğunu unutmayın.
      courseE_maze_ramp4_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
        courseC_maze_programming4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
        courseC_maze_programming4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Köşeye ulaşmak için ne kadar hareket etmek gerekir?
        courseC_maze_programming5_c: Domuzu almak için köşeden sola dönmen gerekir.
      courseE_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseC_maze_programming5_b: Köşeye ulaşmak için ne kadar hareket etmek gerekir?
        courseC_maze_programming5_c: Domuzu almak için köşeden sola dönmen gerekir.
      courseE_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseC_maze_programming6_b: Kuş duvara dönük olarak başladığından hareket etmeden önce döndürmeyi unutma.
        courseC_maze_programming6_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_maze_ramp6_2018_authored_hint:
        courseC_maze_programming6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseC_maze_programming6_b: Kuş duvara dönük olarak başladığından hareket etmeden önce döndürmeyi unutma.
        courseC_maze_programming6_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_maze_ramp7_authored_hint:
        courseD_maze_ramp7_b: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseD_maze_ramp7_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu tekrarlı çalıştırman mümkündür.
        courseD_maze_ramp7_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_maze_ramp7_2018_authored_hint:
        courseD_maze_ramp7_b: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseD_maze_ramp7_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu tekrarlı çalıştırman mümkündür.
        courseD_maze_ramp7_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseE_maze_ramp_predict1_authored_hint: [ ]
      courseE_multi_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
      courseE_playLab_challenge1_authored_hint:
        courseE_playLab_challenge1_a: |-
          Burada oyuncu oyunu kazandığında yapabileceğin bazı şeyler var:
          
          * Dinozoru kaybet.
          * Sincapları durdur.
          * Sincapları ve şövalyeyi mutlu et.
          * Yeni bir arka plan ayarla.
          * Yardım ettiği için oyuncuya şövalyeyi teşekkür ettir.
          * Bütün aktörleri kaybet ve "Kazandınız!" mesajı göster.
        courseE_playLab_challenge1_b: |-
          Burada oyuncu oyunu kaybettiğinde yapabileceğin bazı şeyler var:
          
          * Şövalyeyi kaybet.
          * Sincapları üzgün yap.
          * Dinozora bir şeyler söylet.
          * Yeni bir arka plan ayarla.
          * Bütün aktörleri yok et ve "Oyun Bitti" mesajı göster.
      courseE_playLab_challenge1_2018_authored_hint:
        courseE_playLab_challenge1_a: |-
          Burada oyuncu oyunu kazandığında yapabileceğin bazı şeyler var:
          
          * Dinozoru kaybet.
          * Sincapları durdur.
          * Sincapları ve şövalyeyi mutlu et.
          * Yeni bir arka plan ayarla.
          * Yardım ettiği için oyuncuya şövalyeyi teşekkür ettir.
          * Bütün aktörleri kaybet ve "Kazandınız!" mesajı göster.
        courseE_playLab_challenge1_b: |-
          Burada oyuncu oyunu kaybettiğinde yapabileceğin bazı şeyler var:
          
          * Şövalyeyi kaybet.
          * Sincapları üzgün yap.
          * Dinozora bir şeyler söylet.
          * Yeni bir arka plan ayarla.
          * Bütün aktörleri yok et ve "Oyun Bitti" mesajı göster.
      courseE_playLab_embed_scaffold5_authored_hint: [ ]
      courseE_playLab_scaffold1_authored_hint:
        courseE_playLab_scaffold1_a: '''ayarla aktör 1 ??? görünümüne'' bloku sahneye aktör eklemek için kullanılabilir.'
        courseE_playLab_scaffold1_b: Aktörünüzün programınız başladığında görünmesi için 'çalıştığı zaman' bloğunun altına 'aktörü ayarla' bloğu ekleyin.
        courseE_playLab_scaffold1_c: Sahnenizin arka planını seçmek için '??? arka planı ayarla' bloğunu kullanın.
      courseE_playLab_scaffold1_2018_authored_hint:
        courseE_playLab_scaffold1_a: '''ayarla aktör 1 ??? görünümüne'' bloku sahneye aktör eklemek için kullanılabilir.'
        courseE_playLab_scaffold1_b: Aktörünüzün programınız başladığında görünmesi için 'çalıştığı zaman' bloğunun altına 'aktörü ayarla' bloğu ekleyin.
        courseE_playLab_scaffold1_c: Sahnenizin arka planını seçmek için '??? arka planı ayarla' bloğunu kullanın.
      courseE_playLab_scaffold2_authored_hint:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow` event to change the direction the block controls.
        courseE_playLab_scaffold1_b: Her birinin altında bir yöne taşıyacak şekilde 4 adet 'ne zaman ok' olay blokuna sahip olmalısın.
        courseE_playLab_scaffold1_c: Yaptığında kahramanını yön ok tuşlarıyla hareket ettirebilmelisin!
      courseE_playLab_scaffold2_2018_authored_hint:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow` event to change the direction the block controls.
        courseE_playLab_scaffold1_b: Her birinin altında bir yöne taşıyacak şekilde 4 adet 'ne zaman ok' olay blokuna sahip olmalısın.
        courseE_playLab_scaffold1_c: Yaptığında kahramanını yön ok tuşlarıyla hareket ettirebilmelisin!
      courseE_playLab_scaffold3_authored_hint: [ ]
      courseE_playLab_scaffold3_2018_authored_hint: [ ]
      courseE_playLab_scaffold4_authored_hint:
        courseE_playLab_scaffold4_a: Bir puan eklemek için 'skor puanı' ve bir puan çıkarmak için 'puanı sil' kullanın.
      courseE_playLab_scaffold4_2018_authored_hint:
        courseE_playLab_scaffold4_a: Bir puan eklemek için 'skor puanı' ve bir puan çıkarmak için 'puanı sil' kullanın.
      courseE_playLab_scaffold5_authored_hint:
        courseE_playLab_scaffold5_a: Bu seviyeyi bitirmek için, kazanman veya kaybetmen gerekir. Bitirmek için bir adet 'kazanarak oyunu bitir' veya 'kaybederek oyunu bitir' kullanın.
      courseE_playLab_scaffold5_2018_authored_hint:
        courseE_playLab_scaffold5_a: Bu seviyeyi bitirmek için, kazanman veya kaybetmen gerekir. Bitirmek için bir adet 'kazanarak oyunu bitir' veya 'kaybederek oyunu bitir' kullanın.
      courseE_playlab_challenge2_authored_hint:
        courseE_playlab_challenge2_a: |-
          Aktör ruh haline göre ne söyleyeceğini biliyor. Nesnelerle oynayarak cadının söyleyebileceklerini çalışın.
          
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Dikkatini topla ve tekrar sor!</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block></xml>
        courseE_playlab_challenge2_b: "Eğer 'soru sor' fonksiyonunu koşulların listesinin altında tekrar çağırırsanız oyunun her şeyi yeniden başlattığını hissedeceksiniz.\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n               \n<block type=\"procedures_callnoreturn\">\n<mutation name=\"Ask a question\"></mutation>\n        </block></block></xml>"
        courseE_playlab_challenge2_c: "Aktörlere söyleyecek daha çok şey vermek için daha fazla koşullu ifade eklemeniz gerekir.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n              </statement></block></xml>\n              \n'sürekli tekrarla' döngüsünün içinde aktörün hangi ruh halini göstereceğini değiştirmeyi unutmayın! Ruh halini rastgele de değiştirebilirsiniz!"
        courseE_playlab_challenge2_d: |-
          Aktör 1 ile ilgili tüm kodu anladıktan sonra, aynı kodu Aktör 2'yi kullanarak yeniden yazmayı deneyin.
          
          'Başlık ekranını göster' bloğundaki talimatları değiştirmeyi unutmayın, kod blokları böylece daha mantıklı!
        courseE_playlab_challenge2_e: |-
          Her şey tamamlandığında aktöre tıklayabilmeli ve 8 farklı mesaj alabilmelisin. Daha da genişletmek mümkün mü?
          
          Oyunu bitirdiğinde deneyecek bir arkadaşın olsun!
      courseE_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          Aktör ne söyleyeceğini biliyor çünkü 'fortune' değişkenin güncel değerini kontrol ediyor.
          
          <xml><block type="variables_set" inline="false">
          <title name="VAR">gelecek</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">İyi düşün ve tekrar sor!!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          Eğer 'soru sor' fonksiyonunu aktör geleceği söyledikten sonra tekrar çağırırsanız oyunun her şeyi yeniden başlattığını hissedeceksiniz.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">gelecek</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "Aktörlere söyleyecek daha çok şey vermek için daha fazla koşullu ifade eklemeniz gerekir.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">gelecek</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n              \n'sürekli tekrarla' döngüsünün içinde aktörün hangi ruh halini göstereceğini değiştirmeyi unutmayın! Ruh halini rastgele de değiştirebilirsiniz!"
        courseF_playlab_variables_challenge3_d: |-
          Aktör 1 ile ilgili tüm kodu anladıktan sonra, aynı kodu bu kez Aktör 2 için yeniden yazmayı deneyin.
          
          'Bir soru sor' fonksiyonunun içindeki talimatları değiştirmeyi unutmayın, böylece hala mantıklı olur!
        courseF_playlab_variables_challenge3_e: |-
          Her şey tamamlandığında aktöre tıklayabilmeli ve 8 farklı mesaj alabilmelisin. Daha da genişletmek mümkün mü?
          
          Oyunu bitirdiğinde deneyecek bir arkadaşın olsun!
      courseF_IceAge_1_authored_hint:
        iceage_hello1_a: Bu bulmacayı çözmek için yalnızca bir blok eklemeniz gerekiyor. Araç çubuğundan 'aktör 1 söyle' blokunu sürükleyin ve bu bloku çalışma alanında önceden bulunan 'çalıştığı zaman' olay blokuna bağlayın. Daha sonra, içine "Merhaba!" yazın.
      courseF_IceAge_10_authored_hint:
        iceage_throw_hearts_a: Granny'ye kalpleri ne zaman fırlatmalısın? Oka basıldığında mı? Sid'e tıklandığı zaman mı? Granny'ye tıkladığın zaman mı? Karar senin!
        iceage_throw_hearts_b: Kalp aldığında Granny'yi mutlu etmek için, 'ayarla aktör 2 mutlu ruh haline' blokunu 'aktör 2 mermiye dokunduğunda' olayına bağlaman gerekir.
      courseF_IceAge_11_authored_hint:
        iceage_free_play_a: 'Sid ve Manny''ye buz kristali savaşı yaptırabilir misin?  '
        iceage_free_play_b: Granny'ye Dieogo'yu kovalattırın. Onu yakalarsa oyunu kazanmış olarak sonlandırın.
        iceage_free_play_c: Sid'in Dieogo'ya kar taneleri fırlatmasını ve kar taneleri her dokunduğunda Diego'nun daha büyük olmasını sağla? Diego 5 kez vurulduğunda oyunu kazanmış olarak sonlandır.
      courseF_IceAge_2_authored_hint:
        iceage_hello2_a: 'Bu bulmacayı çözmek için Sid''in ''aktör 1 de'' blokunu kullanarak bir şeyler söylemesini sağlaman gerekir. Bunun yanında Manny''nin de ''aktör 2 de'' bloku ile bir şeyler söylemesini sağlaman gerekir. '
      courseF_IceAge_3_authored_hint:
        iceage_hello3_a: '''taşı aktör 1 sağa 200 piksel'' blokunu bu bulmacayı çözmek için kullan.'
      courseF_IceAge_4_authored_hint:
        iceage_move_to_actor_a: Bu bulmaca için Diego'yu 200 piksel aşağıya ya da Manny'yi 200 piksel yukarıya taşıyabilirsin.
        iceage_move_to_actor_b: Bu meydan okumayı bitirmek için '___ sesi çal' blokunu 'aktör 1 aktör 2ye dokunduğunda' blokuna bağla.
      courseF_IceAge_5_authored_hint:
        iceage_repeat_a: Bu bulmacayı çözmek için 'taşı aktör 1 sola' ve 'taşı aktör 1 sağa' bloklarının her ikisini de kullan.
      courseF_IceAge_6_authored_hint:
        iceage_click_hello_a: Bu bulmacayı tamamlamak için 'tıklandığı zaman' olayına 'bir ya da daha fazla 'aktör 1 de' bloku ekle.
      courseF_IceAge_7_authored_hint:
        iceage_move_events_a: 'Bu bulmacayı çözmek için her bir ''Ne zaman ok'' olayının farklı bir ''taşı aktör 1'' komutuyla bağlanması gerekir. '
      courseF_IceAge_8_authored_hint:
        iceage_sound_and_points_a: '''aktör 1 aktör 2ye dokunduğunda'' olayının altına 2 blok eklemeniz gerekir.'
        iceage_sound_and_points_b: Bu bölümü geçmek için 'skor puanı' bloku ve '____ sesini çal' blokunun ikisine de ihtiyacın var.
      courseF_IceAge_9_authored_hint:
        iceage_warn_ice_age_a: 'Bulmacayı çözmek için sadece uygun olan yere 2 blok eklemelisin. '
        iceage_warn_ice_age_b: Program başladıktan hemen sonra onlara sahip olmak için 'Çalıştığı zaman' olayının altına 2 yeni blok ekle.
      courseF_IceAge_template_authored_hint: [ ]
      courseF_artist_embed_for7_authored_hint: [ ]
      courseF_artist_for1_authored_hint:
        courseF_artist_for1_a: |-
          Can you draw something like this:
          
          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for10_authored_hint:
        courseF_artist_for10_a: The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.
        courseF_artist_for10_b: The image in the drawing uses a turn of 61 degrees.
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for10_2018_authored_hint:
        courseF_artist_for10_a: The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.
        courseF_artist_for10_b: The image in the drawing uses a turn of 61 degrees.
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for10_predict1_authored_hint: [ ]
      courseF_artist_for10_predict1_2018_authored_hint: [ ]
      courseF_artist_for1_2018_authored_hint:
        courseF_artist_for1_a: |-
          Can you draw something like this:
          
          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for2_authored_hint:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.
          
          <xml><block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: Döngünüzün içinde 10' a kadar saymayı unutmayın.
        courseF_artist_for2_c: |-
          Bu sanatçının takip edeceği desen:
          
          ![](https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif)
      courseF_artist_for2_2018_authored_hint:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.
          
          <xml><block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: Döngünüzün içinde 10' a kadar saymayı unutmayın.
        courseF_artist_for2_c: |-
          Bu sanatçının takip edeceği desen:
          
          ![](https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif)
      courseF_artist_for3_authored_hint:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.
          
          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_artist_for3_2018_authored_hint:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.
          
          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_artist_for4_authored_hint:
        courseF_artist_for4_a: "** İhtiyacınız olacak en küçük sayı nedir?   \nEn büyük sayı nedir?   \nHer defasında artış ne kadar? ** \n'Şununla say döngüsü' için boşlukları doldururken sorman gereken sorular bunlardır."
        courseF_artist_for4_b: Kodunuz en son bulmacada yazdığınıza çok benziyor, fakat bu sefer bir dörtgen çizmeyi unutmayın!
        courseF_artist_for4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_artist_for4_2018_authored_hint:
        courseF_artist_for4_a: "** İhtiyacınız olacak en küçük sayı nedir?   \nEn büyük sayı nedir?   \nHer defasında artış ne kadar? ** \n'Şununla say döngüsü' için boşlukları doldururken sorman gereken sorular bunlardır."
        courseF_artist_for4_b: Kodunuz en son bulmacada yazdığınıza çok benziyor, fakat bu sefer bir dörtgen çizmeyi unutmayın!
        courseF_artist_for4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_artist_for5_authored_hint:
        courseF_artist_for5_a: You don't need the `repeat` loop inside when making this spiral!
        courseF_artist_for5_b: '''için'' döngünüz, hareket et, ve dön kareleriniz tam olarak aynı kalabilir.'
      courseF_artist_for5_2018_authored_hint:
        courseF_artist_for5_a: You don't need the `repeat` loop inside when making this spiral!
        courseF_artist_for5_b: '''için'' döngünüz, hareket et, ve dön kareleriniz tam olarak aynı kalabilir.'
      courseF_artist_for6_authored_hint:
        courseF_artist_for6_a: '''için'' döngünüz 15''den 300''e 15''er sayacak.'
        courseF_artist_for6_b: '''için'' döngüsünün içine bir ''ileri git'' ve bir ''dön'' karesi koyun.'
        courseF_artist_for6_c: Tüm yapmanız gereken 'dön' karesindeki numaranın derecesini değiştirmek.
      courseF_artist_for6_2018_authored_hint:
        courseF_artist_for6_a: '''için'' döngünüz 15''den 300''e 15''er sayacak.'
        courseF_artist_for6_b: '''için'' döngüsünün içine bir ''ileri git'' ve bir ''dön'' karesi koyun.'
        courseF_artist_for6_c: Tüm yapmanız gereken 'dön' karesindeki numaranın derecesini değiştirmek.
      courseF_artist_for7_authored_hint:
        courseF_artist_for7_a: The pen is thinner in this puzzle. You will need to set it to `1` before you start.
        courseF_artist_for7_b: Notice that this spiral turns right instead of left!
        courseF_artist_for7_c: Bu bulmaca içindeki `şununla say` (for) döngüsü 15 ten 300'e kadar 2 artarak gider.
        courseF_artist_for7_d: Bu görüntü sadece 89 derece döndürülerek yapılır.
      courseF_artist_for7_2018_authored_hint:
        courseF_artist_for7_a: The pen is thinner in this puzzle. You will need to set it to `1` before you start.
        courseF_artist_for7_b: Notice that this spiral turns right instead of left!
        courseF_artist_for7_c: Bu bulmaca içindeki `şununla say` (for) döngüsü 15 ten 300'e kadar 2 artarak gider.
        courseF_artist_for7_d: Bu görüntü sadece 89 derece döndürülerek yapılır.
      courseF_artist_for8_authored_hint:
        courseF_artist_for8_a: Kodunuzdaki diğer her şeyi aynı tutun, sadece dönüş açısının değişmesi gerekiyor.
        courseF_artist_for8_b: İsterseniz, sarmalınız için farklı bir renk seçebilirsiniz!
      courseF_artist_for8_2018_authored_hint:
        courseF_artist_for8_a: Kodunuzdaki diğer her şeyi aynı tutun, sadece dönüş açısının değişmesi gerekiyor.
        courseF_artist_for8_b: İsterseniz, sarmalınız için farklı bir renk seçebilirsiniz!
      courseF_artist_for9_authored_hint:
        courseF_artist_for9_a: '''için'' döngünüzün içine ''alfayı belirle'' karesini koyar ve değiştirmek için ''zıt'' değişkenini kullanırsanız, bunun gibi bir tasarım oluşturabilirsiniz.'
        courseF_artist_for9_b: The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is.
      courseF_artist_for9_2018_authored_hint:
        courseF_artist_for9_a: '''için'' döngünüzün içine ''alfayı belirle'' karesini koyar ve değiştirmek için ''zıt'' değişkenini kullanırsanız, bunun gibi bir tasarım oluşturabilirsiniz.'
        courseF_artist_for9_b: The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is.
      courseF_artist_for_challenge1_authored_hint:
        courseF_artist_for_challenge1_a: '''Kalem genişliği'' 1''dir. İlk karenin 50 piksel kenar uzunluğu vardır ve her kare öncekinden 50 piksel daha geniş.'
        courseF_artist_for_challenge1_b: Fırçanın opaklığı her zaman 'sayaç'/2 değerindedir.
        courseF_artist_for_challenge1_c: Her bir kareyi yaptıktan sonra geri atla, dön, atla ve geriye dön!
        courseF_artist_for_challenge1_d: |-
          **Çözümü:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"/>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018_authored_hint:
        courseF_artist_for_challenge1_a: '''Kalem genişliği'' 1''dir. İlk karenin 50 piksel kenar uzunluğu vardır ve her kare öncekinden 50 piksel daha geniş.'
        courseF_artist_for_challenge1_b: Fırçanın opaklığı her zaman 'sayaç'/2 değerindedir.
        courseF_artist_for_challenge1_c: Her bir kareyi yaptıktan sonra geri atla, dön, atla ve geriye dön!
        courseF_artist_for_challenge1_d: |-
          ** Çözüm: **! [Çözüm blokları ] (https://images.code.org/7f14ddfa5cdcbfdfacd8b1e45511d583-image-1469726581880.png)
      courseF_artist_for_challenge2_authored_hint:
        courseF_artist_for_challenge2_c: 'Şununla say döngüsü (for loop) 5 ten 250 ye 2 şer ilerler. '
        courseF_artist_for_challenge2_a: Renk değişimi 'kırmızı, yeşil, mavi renk ayarla' bloğu kullanarak olur.  Kırmızı  255'te sabit olarak ayarlanır. Yeşil her zaman 'sayaç' değeri olur. Mavi her zaman '255-sayaç' olur.
        courseF_artist_for_challenge2_b: Bu kod düşündüğünden daha basit. Şununla say döngüsü (for loop) içinde rengi ayarla, ilerle ve sonra dön.
        courseF_artist_for_challenge2_d: |-
          **Çözüm:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">EKSİ</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">ileri git</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">sağa dön</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
          
          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_for_challenge2_2018_authored_hint:
        courseF_artist_for_challenge2_c: 'Şununla say döngüsü (for loop) 5 ten 250 ye 2 şer ilerler. '
        courseF_artist_for_challenge2_a: Renk değişimi 'kırmızı, yeşil, mavi renk ayarla' bloğu kullanarak olur.  Kırmızı  255'te sabit olarak ayarlanır. Yeşil her zaman 'sayaç' değeri olur. Mavi her zaman '255-sayaç' olur.
        courseF_artist_for_challenge2_b: Bu kod düşündüğünden daha basit. Şununla say döngüsü (for loop) içinde rengi ayarla, ilerle ve sonra dön.
        courseF_artist_for_challenge2_d: |-
          **Çözüm:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">EKSİ</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">ileri git</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">sayaç</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">sağa dön</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
          
          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_fwp1_authored_hint:
        courseF_artist_fwp1_c: Put all of the code for drawing a square inside the function editor.
        courseF_artist_fwp1_a: Remember, you need to turn 90 degrees to draw a square.
        courseF_artist_fwp1_b: You only need to repeat as many times as the number of sides in a square.
      courseF_artist_fwp1_2018_authored_hint:
        courseF_artist_fwp1_c: Put all of the code for drawing a square inside the function editor.
        courseF_artist_fwp1_a: Remember, you need to turn 90 degrees to draw a square.
        courseF_artist_fwp1_b: You only need to repeat as many times as the number of sides in a square.
      courseF_artist_fwp2_authored_hint:
        courseF_artist_fwp2_a: You need to click the "edit" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!
        courseF_artist_fwp2_b: When calling your function, use a `for loop` for the best possible code!
      courseF_artist_fwp2_2018_authored_hint:
        courseF_artist_fwp2_a: You need to click the "edit" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!
        courseF_artist_fwp2_b: When calling your function, use a `for loop` for the best possible code!
      courseF_artist_fwp2_predict1_authored_hint: [ ]
      courseF_artist_fwp2_predict1_2018_authored_hint: [ ]
      courseF_artist_fwp3_authored_hint:
        courseF_artist_fwp3_a: This gets easier if you put it all in a `for` loop.
        courseF_artist_fwp3_b: |-
          Be sure to turn 90 degrees between each square!
          
          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp3_2018_authored_hint:
        courseF_artist_fwp3_a: This gets easier if you put it all in a `for` loop.
        courseF_artist_fwp3_b: |-
          Be sure to turn 90 degrees between each square!
          
          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp4_authored_hint:
        courseF_artist_fwp4_b: Remember to **add** a parameter.  Don't remove the one that is already there!
        courseF_artist_fwp4_c: Şekilleri çizmek için fonsiyonunuzu 3 kere çağırmanız gerekir.
      courseF_artist_fwp4_2018_authored_hint:
        courseF_artist_fwp4_b: Remember to **add** a parameter.  Don't remove the one that is already there!
        courseF_artist_fwp4_c: Şekilleri çizmek için fonsiyonunuzu 3 kere çağırmanız gerekir.
      courseF_artist_fwp5_authored_hint:
        courseF_artist_fwp5_d: Bir 'için' döngüsü burdan çıkmanıza gerçekten yadım edebilir!
        courseF_artist_fwp5_c: Fonksiyonu biraz değiştirmen gerekiyor çünkü önceki fonksiyon aktörü her bir kenardan sonra sağına döndürdü ve bu resmin sola dönmesi gerekiyor.
        courseF_artist_fwp5_a: The length of sides for each shape is 7 times the number of sides it has.
        courseF_artist_fwp5_b: Don't forget to jump 100 pixels between shapes.
      courseF_artist_fwp5_2018_authored_hint:
        courseF_artist_fwp5_d: Bir 'için' döngüsü burdan çıkmanıza gerçekten yadım edebilir!
        courseF_artist_fwp5_c: Fonksiyonu biraz değiştirmen gerekiyor çünkü önceki fonksiyon aktörü her bir kenardan sonra sağına döndürdü ve bu resmin sola dönmesi gerekiyor.
        courseF_artist_fwp5_a: The length of sides for each shape is 7 times the number of sides it has.
        courseF_artist_fwp5_b: Don't forget to jump 100 pixels between shapes.
      courseF_artist_fwp6_authored_hint:
        courseF_artist_fwp6_a: Fonksiyonun farklı parametrelerle nasıl çalıştığını anlamak için birkaç kere programı normaldir.
        courseF_artist_fwp6_b: You don't need to add any `move` or `turn` blocks to finish this code.
      courseF_artist_fwp6_2018_authored_hint:
        courseF_artist_fwp6_a: Fonksiyonun farklı parametrelerle nasıl çalıştığını anlamak için birkaç kere programı normaldir.
        courseF_artist_fwp6_b: You don't need to add any `move` or `turn` blocks to finish this code.
      courseF_artist_fwp7_authored_hint:
        courseF_artist_fwp7_a: Feeling lost after trying a couple of ideas? Try clicking the "Start over" button in the upper right-hand corner.
        courseF_artist_fwp7_b: Your new `min` variable should go in the first slot in your `for` loop, inside the function.
      courseF_artist_fwp7_2018_authored_hint:
        courseF_artist_fwp7_a: Feeling lost after trying a couple of ideas? Try clicking the "Start over" button in the upper right-hand corner.
        courseF_artist_fwp7_b: Your new `min` variable should go in the first slot in your `for` loop, inside the function.
      courseF_artist_fwp8_authored_hint:
        courseF_artist_fwp8_a: If your function is correct, you shouldn't need to change it for this puzzle.
        courseF_artist_fwp8_b: The only thing you should need to do between function calls is change the color of the line.
      courseF_artist_fwp8_2018_authored_hint:
        courseF_artist_fwp8_a: If your function is correct, you shouldn't need to change it for this puzzle.
        courseF_artist_fwp8_b: The only thing you should need to do between function calls is change the color of the line.
      courseF_artist_fwp9_authored_hint:
        courseF_artist_fwp9_a: |-
          Bu çizimlerden birini deneyin.
          ![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)
      courseF_artist_fwp9_2018_authored_hint:
        courseF_artist_fwp9_a: |-
          Bu çizimlerden birini deneyin.
          ![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)
      courseF_artist_fwp_challenge1_authored_hint:
        courseF_artist_fwp_challenge1_b: Bu bir zıt pikseller uzunluğunda kenarlara sahip sekizgenler serisi.
        courseF_artist_fwp_challenge1_c: Her sekizgen 200'den 2'ye ikişer artarak giden bir için döngüsünden çağırılıyor.
      courseF_artist_fwp_challenge1_2018_authored_hint:
        courseF_artist_fwp_challenge1_b: Bu bir zıt pikseller uzunluğunda kenarlara sahip sekizgenler serisi.
        courseF_artist_fwp_challenge1_c: Her sekizgen 200'den 2'ye ikişer artarak giden bir için döngüsünden çağırılıyor.
      courseF_artist_fwp_challenge2_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'Bu resim kenar uzunlukları ''sayaç'' (counter) uzunluğunda olan sekizgenlerlerdir. '
        courseF_artist_fwp_challenge1_c: 'Her bir sekizgen 200 den aşağı ikişer ikişer geriye 2''ye kadar giden bir ''şununla say döngüsü'' (for loop) içinden çağırılır.'
        courseF_artist_fwp_challenge1_d: 'Her döngünün sonunda 22.5 derece dönmeyi unutma. '
        courseF_artist_fwp_challenge1_e: Sekizgen rengi ve kalem genişliği 'sayaç' değişkeni tarafından kontrol edilir.
        courseF_artist_fwp_challenge1_f: |-
          ** Çözüm: **! [Çözüm] blokları (https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_fwp_challenge2_2018_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'Bu resim kenar uzunlukları ''sayaç'' (counter) uzunluğunda olan sekizgenlerlerdir. '
        courseF_artist_fwp_challenge1_c: 'Her bir sekizgen 200 den aşağı ikişer ikişer geriye 2''ye kadar giden bir ''şununla say döngüsü'' (for loop) içinden çağırılır.'
        courseF_artist_fwp_challenge1_d: 'Her döngünün sonunda 22.5 derece dönmeyi unutma. '
        courseF_artist_fwp_challenge1_e: Sekizgen rengi ve kalem genişliği 'sayaç' değişkeni tarafından kontrol edilir.
        courseF_artist_fwp_challenge1_f: |-
          ** Çözüm: **! [Çözüm] blokları (https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_predict1_authored_hint: [ ]
      courseF_artist_predict1_2018_authored_hint: [ ]
      courseF_artist_ramp10_authored_hint:
        courseF_artist_ramp10_a: Her üçgenden sonra 60 derece dönmeyi unutma. Hangi föngü içine ilgili komutları koyman gerekiyor?
        courseF_artist_ramp10_b: Eğer üçgen için olan kodun bir 'tekrarla' döngüsünün için olursa, bu görev çok daha kolay olacak.
        courseF_artist_ramp10_c: |-
          Bu tasarımda toplamda altı tane üçgen çizeceksin:
          
          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseF_artist_ramp10_2018_authored_hint:
        courseF_artist_ramp10_a: Her üçgenden sonra 60 derece dönmeyi unutma. Hangi föngü içine ilgili komutları koyman gerekiyor?
        courseF_artist_ramp10_b: Eğer üçgen için olan kodun bir 'tekrarla' döngüsünün için olursa, bu görev çok daha kolay olacak.
        courseF_artist_ramp10_c: |-
          Bu tasarımda toplamda altı tane üçgen çizeceksin:
          
          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseF_artist_ramp8_authored_hint:
        courseF_artist_ramp8_a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan ve 100 yerine 200 gir.
        courseF_artist_ramp8_b: |-
          4 tarafı çizmek için bir döngü içinde 'ileri 100 piksel' bloğunu döngü içine yerleştirin ve 4 kez çizmek için ayarlandığından emin olun. Daha sonra dönmeyi unutma!
        courseF_artist_ramp8_c: Dönüşün de 'tekrarla' döngüsünün içine girecek.
      courseF_artist_ramp8_2018_authored_hint:
        courseF_artist_ramp8_a: Kenar çizmek içim 100 piksel ilerle bloğunu kullan ve 100 yerine 200 gir.
        courseF_artist_ramp8_b: |-
          4 tarafı çizmek için bir döngü içinde 'ileri 100 piksel' bloğunu döngü içine yerleştirin ve 4 kez çizmek için ayarlandığından emin olun. Daha sonra dönmeyi unutma!
        courseF_artist_ramp8_c: Dönüşün de 'tekrarla' döngüsünün içine girecek.
      courseF_artist_ramp9_authored_hint:
        courseF_artist_ramp9_a: Bu kareye benzer bir şekil. Farklı olan nedir?
        courseF_artist_ramp9_b: Hangi açıya ihtiyacın olduğunu görmek için açılır menüdeki 'dön' bloğunu kullanabilirsin!
        courseF_artist_ramp9_c: 100 piksel ilerlemek sonra her taraf için 120 derece dönmek isteyeceksin. Kodunuzu kısaltmak için bir tane 'tekrarla' döngüsü kullanabilir misin?
      courseF_artist_ramp9_2018_authored_hint:
        courseF_artist_ramp9_a: Bu kareye benzer bir şekil. Farklı olan nedir?
        courseF_artist_ramp9_b: Hangi açıya ihtiyacın olduğunu görmek için açılır menüdeki 'dön' bloğunu kullanabilirsin!
        courseF_artist_ramp9_c: 100 piksel ilerlemek sonra her taraf için 120 derece dönmek isteyeceksin. Kodunuzu kısaltmak için bir tane 'tekrarla' döngüsü kullanabilir misin?
      courseF_artist_variables10_authored_hint:
        courseF_artist_variables10_a: Bu seviyede eğlenin. Kodunuzdaki küçük değişikliklerin neler yapabileceğini görün.
        courseF_artist_variables10_b: Birden çok şey deneyebilir ve kodunuzu birden çok kez deneyebilirsiniz.
      courseF_artist_variables10_2018_authored_hint:
        courseF_artist_variables10_a: Bu seviyede eğlenin. Kodunuzdaki küçük değişikliklerin neler yapabileceğini görün.
        courseF_artist_variables10_b: Birden çok şey deneyebilir ve kodunuzu birden çok kez deneyebilirsiniz.
      courseF_artist_variables2_authored_hint:
        courseF_artist_variables2_a: Her üçgeni çizdikten sonra ilerlemeyi unutma.
        courseF_artist_variables2_b: Yeni döngünüz, üçgeninizin döngüsünü içerecek sonra da bir tane 'ilerle' komutu.
      courseF_artist_variables2_2018_authored_hint:
        courseF_artist_variables2_a: Her üçgeni çizdikten sonra ilerlemeyi unutma.
        courseF_artist_variables2_b: Yeni döngünüz, üçgeninizin döngüsünü içerecek sonra da bir tane 'ilerle' komutu.
      courseF_artist_variables3_authored_hint:
        courseF_artist_variables3_a: '''Uzunluk'' değişkeni kodunuzda iki yerde kullanılacak: üçgeninizin kenar uzunluğu ve üçgenler arasındaki ilerleme miktarı.'
        courseF_artist_variables3_b: 'Değeri 50 olan sayı bloğu sadece bir yerde olmalı: ''uzunluk değişkeni ata'' bloğundan sonra.'
      courseF_artist_variables3_2018_authored_hint:
        courseF_artist_variables3_a: '''Uzunluk'' değişkeni kodunuzda iki yerde kullanılacak: üçgeninizin kenar uzunluğu ve üçgenler arasındaki ilerleme miktarı.'
        courseF_artist_variables3_b: 'Değeri 50 olan sayı bloğu sadece bir yerde olmalı: ''uzunluk değişkeni ata'' bloğundan sonra.'
      courseF_artist_variables4_authored_hint:
        courseF_artist_variables4_a: Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.
        courseF_artist_variables4_c: |-
          Sanatçınızın takip edeceği desen bu:
          
          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables4_2018_authored_hint:
        courseF_artist_variables4_a: Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.
        courseF_artist_variables4_c: |-
          Sanatçınızın takip edeceği desen bu:
          
          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables5_authored_hint:
        courseF_artist_variables5_a: The second half of your code should look almost the same as the first half, except you will be turning *left*, jumping, then turning *right*.
        courseF_artist_variables5_b: Kodunuzun ilk yarısı üç tane üçgen çizecek, kodunuzun ikinci yarısı diğer üç taneyi çizecek.
        courseF_artist_variables5_c: Programınızın ilk yarısındaki kodu çoğaltarak başlayın, sonra gösterilen tasarımı yapmak için kodunuzu değiştirin.
        courseF_artist_variables5_d: |-
          Sanatçınızın takip edeceği desen bu:
          
          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2018_authored_hint:
        courseF_artist_variables5_a: The second half of your code should look almost the same as the first half, except you will be turning *left*, jumping, then turning *right*.
        courseF_artist_variables5_b: Kodunuzun ilk yarısı üç tane üçgen çizecek, kodunuzun ikinci yarısı diğer üç taneyi çizecek.
        courseF_artist_variables5_c: Programınızın ilk yarısındaki kodu çoğaltarak başlayın, sonra gösterilen tasarımı yapmak için kodunuzu değiştirin.
        courseF_artist_variables5_d: |-
          Sanatçınızın takip edeceği desen bu:
          
          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables6_authored_hint:
        courseF_artist_variables6_a: Thanks to variables, you only need to change one number at the top to make this work.
        courseF_artist_variables6_b: Sayı bloğunu 50 değeri ile düzenlemeniz gerekecek, fakat koddaki hiçbir şey değiştirilmemelidir.
      courseF_artist_variables6_2018_authored_hint:
        courseF_artist_variables6_a: Thanks to variables, you only need to change one number at the top to make this work.
        courseF_artist_variables6_b: Sayı bloğunu 50 değeri ile düzenlemeniz gerekecek, fakat koddaki hiçbir şey değiştirilmemelidir.
      courseF_artist_variables6a_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: Bu kod üçgen kodunuza çok benzeyecek, sadece farklı bir şekil!
        courseF_artist_variables6a_c: İlk olarak bir kare için kod yazın, sonra kareler arasında hareket etmek için kod ekleyin. Sonunda her şeyin etrafına bir döngü ekleyin!
        courseF_artist_variables6a_d: |-
          Takip edeceğin desen bu!
          
          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2018_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: Bu kod üçgen kodunuza çok benzeyecek, sadece farklı bir şekil!
        courseF_artist_variables6a_c: İlk olarak bir kare için kod yazın, sonra kareler arasında hareket etmek için kod ekleyin. Sonunda her şeyin etrafına bir döngü ekleyin!
        courseF_artist_variables6a_d: |-
          Takip edeceğin desen bu!
          
          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables7_authored_hint:
        courseF_artist_variables7_a: Kodunuzu 'uzunluk ata' kullanarak başlatın. Uzunluk değişkenine 150 değerini atayın.
        courseF_artist_variables7_b: Üçgen kodunuzu daha basit yapmak için bir tane 'tekrarla' döngüsü kullanabilirsiniz.
        courseF_artist_variables7_c: Üçgenin köşelerini yapmak için 120 derece sola dönmeyi isteyeceksiniz.
      courseF_artist_variables7_2018_authored_hint:
        courseF_artist_variables7_a: Kodunuzu 'uzunluk ata' kullanarak başlatın. Uzunluk değişkenine 150 değerini atayın.
        courseF_artist_variables7_b: Üçgen kodunuzu daha basit yapmak için bir tane 'tekrarla' döngüsü kullanabilirsiniz.
        courseF_artist_variables7_c: Üçgenin köşelerini yapmak için 120 derece sola dönmeyi isteyeceksiniz.
      courseF_artist_variables8_authored_hint:
        courseF_artist_variables8_b: Üçgen için olan kodunuzu 'uzunluk ata' bloğu ile başlatmayı unutmayın ve 150 piksel ile başlatın.
        courseF_artist_variables8_c: Üçgeninizi çizmek için 'tekrarla' döngüsünü kullandığınızdan emin olun.
        courseF_artist_variables8_a: "Try putting the set of \n\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks inside your loop at the end.\n"
      courseF_artist_variables8_2018_authored_hint:
        courseF_artist_variables8_b: Üçgen için olan kodunuzu 'uzunluk ata' bloğu ile başlatmayı unutmayın ve 150 piksel ile başlatın.
        courseF_artist_variables8_c: Üçgeninizi çizmek için 'tekrarla' döngüsünü kullandığınızdan emin olun.
        courseF_artist_variables8_a: "Try putting the set of \n\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks inside your loop at the end.\n"
      courseF_artist_variables9_authored_hint:
        courseF_artist_variables9_a: Bu bulmaca için tek yapmanız gereken, döngünün kaç kez tekrar edeceğini değiştirmek.
        courseF_artist_variables9_b: '''Uzunluk'' değerini arttıran blokların döngünüzün içinde olduğundan emin olun böylece satırlar gittikçe uzunlaşır.'
      courseF_artist_variables9_2018_authored_hint:
        courseF_artist_variables9_a: Bu bulmaca için tek yapmanız gereken, döngünün kaç kez tekrar edeceğini değiştirmek.
        courseF_artist_variables9_b: '''Uzunluk'' değerini arttıran blokların döngünüzün içinde olduğundan emin olun böylece satırlar gittikçe uzunlaşır.'
      courseF_artist_variablesFP_authored_hint:
        courseF_artist_variablesFP_a: |-
          Bu üç çizimden birini deneyin.
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variablesFP_2018_authored_hint:
        courseF_artist_variablesFP_a: |-
          Bu üç çizimden birini deneyin.
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variables_4_authored_hint:
        courseF_artist_variables_4_a: Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to move down, then turn him back to get ready to move forward again.
        courseF_artist_variables_4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables_6_authored_hint:
        courseF_artist_variables_6_a: Thanks to variables, you only need to change one number at the top to make this work.
      courseF_artist_variables_6a_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead of an actual number to solve this puzzle.
      courseF_artist_variables_8_authored_hint:
        courseF_artist_variables_8_a: 'Try putting the set of ![](https://images.code.org/6525bebee31ee15b84a48761b2866f53-image-1477531948829.31.37.png) blocks inside your loop at the end.  '
      courseF_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_a: Her bir dikey çizgi '10' uzunluğunda. Her bir yatay çizgi 'uzunluk' (length) uzunluğunda olmalı.
        courseF_artist_variables_challenge1_b: Döngü içinde 'uzunluk' değerini iki kez 10'a yükseltmek isteyeceksiniz.
        courseF_artist_variables_challenge1_c: Deseni tamamlamak için iki kez sola, sonra  iki kez sağa ve dört kez ileri hareket etmeniz gerekecek.
        courseF_artist_variables_challenge1_d: |-
          Bu bulmaca sadece bir döngü kullanıyor. Herhangi bir değişken olmadan, benzer bir yol sadece bir zikzak olabilir.
          Sorun yaşıyorsanız, bu resmi oluşturarak başlayın, ardından yatay çizgilerin uzunluğunu değiştirmek için değişkenleri nerede kullanabileceğinizi görmeye çalışın.
        courseF_artist_variables_challenge1_e: |-
          İşte çözüm.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1_2018_authored_hint:
        courseF_artist_variables_challenge1_a: Her bir dikey çizgi '10' uzunluğunda. Her bir yatay çizgi 'uzunluk' (length) uzunluğunda olmalı.
        courseF_artist_variables_challenge1_b: Döngü içinde 'uzunluk' değerini iki kez 10'a yükseltmek isteyeceksiniz.
        courseF_artist_variables_challenge1_c: Deseni tamamlamak için iki kez sola, sonra  iki kez sağa ve dört kez ileri hareket etmeniz gerekecek.
        courseF_artist_variables_challenge1_d: |-
          Bu bulmaca sadece bir döngü kullanıyor. Herhangi bir değişken olmadan, benzer bir yol sadece bir zikzak olabilir.
          Sorun yaşıyorsanız, bu resmi oluşturarak başlayın, ardından yatay çizgilerin uzunluğunu değiştirmek için değişkenleri nerede kullanabileceğinizi görmeye çalışın.
        courseF_artist_variables_challenge1_e: |-
          İşte çözüm.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1a_authored_hint:
        courseF_artist_variables_challenge1_a: 'Değişkenler kullanışlıdır, çünkü döngü içinde bu değişkene ekleme yapabilirsiniz. '
        courseF_artist_variables_challenge1_b: Bu bulmaca çokgen oluşturan bir döngü içermekte. Bir diğer döngü çokgenleri kenar katı kadar tekrarlamakta, diğer döngü 'kenarlara' 5 ekledikten sonra tekrarlamakta.
        courseF_artist_variables_challenge1_c: '''Kenarlar'' için ve ''uzunluk'' için birer değişken kullanmak kodu daha düzgün yapar, böylece her sayı kümesi için yeni bir kopya oluşturmaya gerek kalmadan aynı kodu bir çok defa tekrarlayabilirsin. '
        courseF_artist_variables_challenge1_d: |-
          ** Çözüm: **![Solution] (https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: Değişkenler kullanışlıdır, çünkü döngü içinde bu değişkene ekleme yapabilirsiniz. 
        courseF_artist_variables_challenge2_c: '''Kenarlar'' için ve ''uzunluk'' için birer değişken kullanmak kodu daha düzgün yapar, böylece her sayı kümesi için yeni bir kopya oluşturmaya gerek kalmadan aynı kodu bir çok defa tekrarlayabilirsin. '
        courseF_artist_variables_challenge2_d: |-
          ** Çözüm: **![Solution] (https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018_authored_hint:
        courseF_artist_variables_challenge2_a: Değişkenler kullanışlıdır, çünkü döngü içinde bu değişkene ekleme yapabilirsiniz. 
        courseF_artist_variables_challenge2_c: '''Kenarlar'' için ve ''uzunluk'' için birer değişken kullanmak kodu daha düzgün yapar, böylece her sayı kümesi için yeni bir kopya oluşturmaya gerek kalmadan aynı kodu bir çok defa tekrarlayabilirsin. '
        courseF_artist_variables_challenge2_d: |-
          ** Çözüm: **![Solution] (https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_bee_conditionals10_authored_hint:
        courseF_bee_conditionals10_a: Her noktada bir bulut olduğunu hayal edin. Bu kodunuzu sadeleştirmede yardımcı olur mu?
        courseF_bee_conditionals10_b: Nektar veya bal aramak amacıyla her alanı kontrol etmek için bir 'eğer/başka' kullanın.
        courseF_bee_conditionals10_c: Bu yolun sonuna ulaşmanıza bir 'süresince' döngüsü yardımcı olabilir mi?
      courseF_bee_conditionals10_2018_authored_hint:
        courseF_bee_conditionals10_a: Her noktada bir bulut olduğunu hayal edin. Bu kodunuzu sadeleştirmede yardımcı olur mu?
        courseF_bee_conditionals10_b: Nektar veya bal aramak amacıyla her alanı kontrol etmek için bir 'eğer/başka' kullanın.
        courseF_bee_conditionals10_c: Bu yolun sonuna ulaşmanıza bir 'süresince' döngüsü yardımcı olabilir mi?
      courseF_bee_conditionals1_predict1_authored_hint: [ ]
      courseF_bee_conditionals1_predict1_2018_authored_hint: [ ]
      courseF_bee_conditionals2_authored_hint:
        courseF_bee_conditionals2_a: Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.
        courseF_bee_conditionals2_b: Bütün alanlara ulaşmak için diziyi yazmayı deneyin, sonra 'eğer' ifadesini ekleyin.
      courseF_bee_conditionals2_2018_authored_hint:
        courseF_bee_conditionals2_a: Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.
        courseF_bee_conditionals2_b: Bütün alanlara ulaşmak için diziyi yazmayı deneyin, sonra 'eğer' ifadesini ekleyin.
      courseF_bee_conditionals3_authored_hint:
        courseF_bee_conditionals3_a: Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.
        courseF_bee_conditionals3_b: Bir 'tekrar' döngüsü yararlı olacaktır bu yüzden sadece bir 'eğer' karesi kullanmalısın.
        courseF_bee_conditionals3_c: İlk bulutu kontrol etmek için kodu yazmayı deneyin. Hepsini kontrol etmek için döngü yapabiliyor musun?
      courseF_bee_conditionals3_2018_authored_hint:
        courseF_bee_conditionals3_a: Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.
        courseF_bee_conditionals3_b: Bir 'tekrar' döngüsü yararlı olacaktır bu yüzden sadece bir 'eğer' karesi kullanmalısın.
        courseF_bee_conditionals3_c: İlk bulutu kontrol etmek için kodu yazmayı deneyin. Hepsini kontrol etmek için döngü yapabiliyor musun?
      courseF_bee_conditionals4_authored_hint:
        courseD_bee_conditionals4_a: You can still treat every space as if there is a cloud over it, even though you can see the whole path.
        courseF_bee_conditionals4_b: 'Use an `if` statement inside your loop to check each space for nectar. '
        courseF_bee_conditionals4_c: '''Yol olduğu sürece'' bloğu kullandığında ''İlerle'' ve bir çiçek var mı kontrol et. ''Eğer çiçek var ise'' arı ne yapmalı?'
      courseF_bee_conditionals4_2018_authored_hint:
        courseD_bee_conditionals4_a: You can still treat every space as if there is a cloud over it, even though you can see the whole path.
        courseF_bee_conditionals4_b: 'Use an `if` statement inside your loop to check each space for nectar. '
        courseF_bee_conditionals4_c: '''Yol olduğu sürece'' bloğu kullandığında ''İlerle'' ve bir çiçek var mı kontrol et. ''Eğer çiçek var ise'' arı ne yapmalı?'
      courseF_bee_conditionals5_authored_hint:
        courseF_bee_conditionals5_a: Dikdörtgen yolun her tarafını ayrı bir yol olarak düşün. "Tekrarla" bloğu içine "sürece bir yol var" bloğu koy. Bütün çiçekleri yoklamak için kaç tane yol gitmek gerekir?
        courseF_bee_conditionals5_b: '''Sürece bir yol'' bloğu içinde ilerle ve bir çiçek varmı kontrol et. Bir çiçek olup olmadığını nasıl kontrol edebilirim? Bir çiçek ise ne yapıyorsun?'
        courseF_bee_conditionals5_c: 'Bir üçgenin 3 kenarı vardır bu yüzden ''Tekrarla 3 kez '' döngüsü kullanman gerekir. Her tekrarda ''sürece bir yol'' döngüsü ile yol boyunca devam etmek gerekir. Yola devam etmek için ''ilerle '' gerekir. Yolda iken, arının çiçekleri denetlemesi gerekir. ''eğer çiçek ise'', ''nektar almalısınız''.'
        courseF_bee_conditionals5_d: Yola devam etmek için, arının 'ileri git'meye ihtiyacı var. Yoldayken, arının bir çiçek araması gerekiyor. Bir çiçek varsa arı ne yapmalı?
      courseF_bee_conditionals5_2018_authored_hint:
        courseF_bee_conditionals5_a: Dikdörtgen yolun her tarafını ayrı bir yol olarak düşün. "Tekrarla" bloğu içine "sürece bir yol var" bloğu koy. Bütün çiçekleri yoklamak için kaç tane yol gitmek gerekir?
        courseF_bee_conditionals5_b: '''Sürece bir yol'' bloğu içinde ilerle ve bir çiçek varmı kontrol et. Bir çiçek olup olmadığını nasıl kontrol edebilirim? Bir çiçek ise ne yapıyorsun?'
        courseF_bee_conditionals5_c: 'Bir üçgenin 3 kenarı vardır bu yüzden ''Tekrarla 3 kez '' döngüsü kullanman gerekir. Her tekrarda ''sürece bir yol'' döngüsü ile yol boyunca devam etmek gerekir. Yola devam etmek için ''ilerle '' gerekir. Yolda iken, arının çiçekleri denetlemesi gerekir. ''eğer çiçek ise'', ''nektar almalısınız''.'
        courseF_bee_conditionals5_d: Yola devam etmek için, arının 'ileri git'meye ihtiyacı var. Yoldayken, arının bir çiçek araması gerekiyor. Bir çiçek varsa arı ne yapmalı?
      courseF_bee_conditionals7_predict2_authored_hint: [ ]
      courseF_bee_conditionals7_predict2_2018_authored_hint: [ ]
      courseF_bee_conditionals8_authored_hint:
        courseF_bee_conditionals8_a: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
        courseF_bee_conditionals8_b: |-
          This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.
          
          Only check for nectar and honey at the end of your path.
        courseF_bee_conditionals8_c: '''ilerde yol süresince'' karesi kullansan ve son kez ilk çiçeğini toplasan ne olur?'
      courseF_bee_conditionals8_2018_authored_hint:
        courseF_bee_conditionals8_a: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
        courseF_bee_conditionals8_b: |-
          This puzzle is tricky, because you can't check blank squares, nectar, *and* honey with just one single conditional.
          
          Only check for nectar and honey at the end of your path.
        courseF_bee_conditionals8_c: '''ilerde yol süresince'' karesi kullansan ve son kez ilk çiçeğini toplasan ne olur?'
      courseF_bee_for1_authored_hint:
        courseF_bee_for1_a: Drag a purple number block into the blank space on the `repeat` loop to tell it how many times to repeat.
        courseF_bee_for1_b: Bütün nektarı toplamak için 'tekrar' döngünüzün içinde iki kareye iktiyacınız olacak.
      courseF_bee_for10_authored_hint:
        courseF_bee_for10_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        courseF_bee_for10_b: The first set of flowers has a total of **14 flowers**. To get to this first set, the bee must buzz down **7 squares** (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?
        courseF_bee_for10_c: "Yapbozda ilk çiçek kümesinde ** 14 ** çiçek, ikinci kümede ** 10 ** çiçek, üçüncü kümesinde ** 6 ** çiçek, dördüncü kümesinde ** 2 ** çiçek bulunur.\n\nBu çizimde, ** 7 ** kırmızı kare, ** 5 ** turuncu kare, ** 3 ** yeşil kare ve ** 1 ** mavi blok bulunduğuna dikkat edin.\n\n![](https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png)\n\nSayılar nasıl ilişkilidir?"
        courseF_bee_for10_d: You'll need to have 2 repeats, one will use a math block.
      courseF_bee_for10_2018_authored_hint:
        courseF_bee_for10_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        courseF_bee_for10_b: The first set of flowers has a total of **14 flowers**. To get to this first set, the bee must buzz down **7 squares** (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?
        courseF_bee_for10_c: "Yapbozda ilk çiçek kümesinde ** 14 ** çiçek, ikinci kümede ** 10 ** çiçek, üçüncü kümesinde ** 6 ** çiçek, dördüncü kümesinde ** 2 ** çiçek bulunur.\n\nBu çizimde, ** 7 ** kırmızı kare, ** 5 ** turuncu kare, ** 3 ** yeşil kare ve ** 1 ** mavi blok bulunduğuna dikkat edin.\n\n![](https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png)\n\nSayılar nasıl ilişkilidir?"
        courseF_bee_for10_d: You'll need to have 2 repeats, one will use a math block.
      courseF_bee_for11_authored_hint:
        courseF_bee_for11_a: "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
      courseF_bee_for11_2018_authored_hint:
        courseF_bee_for11_a: "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
      courseF_bee_for1_2018_authored_hint:
        courseF_bee_for1_a: Drag a purple number block into the blank space on the `repeat` loop to tell it how many times to repeat.
        courseF_bee_for1_b: Bütün nektarı toplamak için 'tekrar' döngünüzün içinde iki kareye iktiyacınız olacak.
      courseF_bee_for2_authored_hint:
        courseF_bee_for2_a: If you’re confused, work one flower at a time, and test often.
        courseF_bee_for2_b: Her döngünün arasında ileri gitmeyi unutmayın, bu sayede her çiçeğe ulaşırsınız.
      courseF_bee_for2_2018_authored_hint:
        courseF_bee_for2_a: If you’re confused, work one flower at a time, and test often.
        courseF_bee_for2_b: Her döngünün arasında ileri gitmeyi unutmayın, bu sayede her çiçeğe ulaşırsınız.
      courseF_bee_for3_authored_hint:
        courseF_bee_for3_a: 'Use the `counter` variable inside the `repeat` loop where nectar is gathered to solve this puzzle. '
        courseF_bee_for3_b: Your `for` loop will need to count from 1 to 5 with an increment of 1.
      courseF_bee_for3_predict1_authored_hint: [ ]
      courseF_bee_for3_predict1_2018_authored_hint: [ ]
      courseF_bee_for4_authored_hint:
        courseF_bee_for4_a: Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.
        courseF_bee_for4_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for4_c: Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!
      courseF_bee_for4_2018_authored_hint:
        courseF_bee_for4_a: Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.
        courseF_bee_for4_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for4_c: Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!
      courseF_bee_for5_authored_hint:
        courseF_bee_for5_a: This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops, both inside the same `for` loop.
        courseF_bee_for5_b: Her döngüde 'zıt' değişken kullanın, bu sayede arı her çiçeğin arasındaki farklı uzaklıkları gitsin.
        courseF_bee_for5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_bee_for5_2018_authored_hint:
        courseF_bee_for5_a: This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops, both inside the same `for` loop.
        courseF_bee_for5_b: Her döngüde 'zıt' değişken kullanın, bu sayede arı her çiçeğin arasındaki farklı uzaklıkları gitsin.
        courseF_bee_for5_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_bee_for6_authored_hint:
        courseF_bee_for6_a: Don't forget to use a `counter` variable inside your `repeat` loop.
        courseF_bee_for6_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for6_c: Döngünüz **5'ten 1'e** saymalı.
      courseF_bee_for6_2018_authored_hint:
        courseF_bee_for6_a: Don't forget to use a `counter` variable inside your `repeat` loop.
        courseF_bee_for6_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for6_c: Döngünüz **5'ten 1'e** saymalı.
      courseF_bee_for7_authored_hint:
        courseF_bee_for7_a: Your `for` loop will need to count from 1 to 7 by 2.
        courseF_bee_for7_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for7_c: '''tekrar'' döngünüzde ''zıt'' değişken kullanmayı unutmayın.'
      courseF_bee_for7_2018_authored_hint:
        courseF_bee_for7_a: Your `for` loop will need to count from 1 to 7 by 2.
        courseF_bee_for7_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for7_c: '''tekrar'' döngünüzde ''zıt'' değişken kullanmayı unutmayın.'
      courseF_bee_for8_authored_hint:
        courseF_bee_for8_a: "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?"
        courseF_bee_for8_b: Bu bulmacada, çiçeklere ulaşmak için bir merdiven basamağı deseninde hareket etmeniz gerekir.
        courseF_bee_for8_c: Döngünüz *3'ten 15'e* belli bir artışla sayacak. Bu nedir?
      courseF_bee_for8_2018_authored_hint:
        courseF_bee_for8_a: "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?"
        courseF_bee_for8_b: Bu bulmacada, çiçeklere ulaşmak için bir merdiven basamağı deseninde hareket etmeniz gerekir.
        courseF_bee_for8_c: Döngünüz *3'ten 15'e* belli bir artışla sayacak. Bu nedir?
      courseF_bee_for9_authored_hint:
        courseF_bee_for9_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        courseF_bee_for9_c: It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.
        courseF_bee_for9_b: "**Remember:** If your loop is counting up, the increment is added to your `counter` variable each time through."
      courseF_bee_for9_2018_authored_hint:
        courseF_bee_for9_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        courseF_bee_for9_c: It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.
        courseF_bee_for9_b: "**Remember:** If your loop is counting up, the increment is added to your `counter` variable each time through."
      courseF_bee_for_challenge1_authored_hint: [ ]
      courseF_bee_for_challenge1_2018_authored_hint: [ ]
      courseF_bee_for_challenge2_authored_hint:
        courseF_bee_for_challenge2_a: " Hareket için bu seçeneğe bir göz atın:! [] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'İki ''şununla say'' döngüsü(for loop) kullanmayı deneyin: biri yukarı tırmanma ve nektar alma ve diğeri aşağı inme ve bal yapma için.'
        courseF_bee_for_challenge2_c: "Gittikçe yükselen merdiven basamaklarını çizmek için, 'Şununla say döngüsü' (for loop) içinde birkaç 'sayaç' değerli tekrarla döngüsü gerekiyor. \nÖteki 'şununla say döngüsü' içine ise sadece bir adet 'sayaç' kadar bal yapacak tekrar döngüsü koymalısın."
        courseF_bee_for_challenge2_d: |-
          **Çözüm:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018_authored_hint:
        courseF_bee_for_challenge2_a: " Hareket için bu seçeneğe bir göz atın:! [] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'İki ''şununla say'' döngüsü(for loop) kullanmayı deneyin: biri yukarı tırmanma ve nektar alma ve diğeri aşağı inme ve bal yapma için.'
        courseF_bee_for_challenge2_c: "Gittikçe yükselen merdiven basamaklarını çizmek için, 'Şununla say döngüsü' (for loop) içinde birkaç 'sayaç' değerli tekrarla döngüsü gerekiyor. \nÖteki 'şununla say döngüsü' içine ise sadece bir adet 'sayaç' kadar bal yapacak tekrar döngüsü koymalısın."
        courseF_bee_for_challenge2_d: |-
          ** Çözüm: **! [Çözüm Blokları] (https://images.code.org/1a61eae7e12742c8d850f2bf7e939f72-image-1469726415313.png)
      courseF_bee_for_challenge3_authored_hint:
        courseF_bee_for_challenge2_a: " Hareket için bu seçeneğe bir göz atın:! [] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'İki ''şununla say'' döngüsü(for loop) kullanmayı deneyin: biri yukarı tırmanma ve nektar alma ve diğeri aşağı inme ve bal yapma için.'
        courseF_bee_for_challenge2_c: "Gittikçe yükselen merdiven basamaklarını çizmek için, 'Şununla say döngüsü' (for loop) içinde birkaç 'sayaç' değerli tekrarla döngüsü gerekiyor. \nÖteki 'şununla say döngüsü' içine ise sadece bir adet 'sayaç' kadar bal yapacak tekrar döngüsü koymalısın."
        courseF_bee_for_challenge2_d: |-
          ** Çözüm: **! [Çözüm Blokları] (https://images.code.org/1a61eae7e12742c8d850f2bf7e939f72-image-1469726415313.png)
      courseF_bee_functions2_authored_hint:
        courseF_bee_functions2_a: The function has been written for you, but you will need to call it at each flower.
        courseF_bee_functions2_b: Ne yaptığını görmek için 'sadece nektar topla' fonksiyonundaki mavi düzenle butonuna tıklayın.
      courseF_bee_functions2_2018_authored_hint:
        courseF_bee_functions2_a: The function has been written for you, but you will need to call it at each flower.
        courseF_bee_functions2_b: Ne yaptığını görmek için 'sadece nektar topla' fonksiyonundaki mavi düzenle butonuna tıklayın.
      courseF_bee_functions3_authored_hint:
        courseF_bee_functions3_a: 'Bu bulmacadaki fonksiyonun sadece bal yapması gerek, fonksiyonda ''move forward'' yada ''turn'' blokları bulunmamalı. '
        courseF_bee_functions3_b: Fonksiyonunuz yalnızca bal varken bal toplamalı unutmayın.
        courseF_bee_functions3_c: Fonksiyonunuzu çağırmak için yeşil 'sadece bal yap' karesini kullanın.
        courseF_bee_functions3_d: Bu yola bir bakın.
      courseF_bee_functions3_2018_authored_hint:
        courseF_bee_functions3_a: 'Bu bulmacadaki fonksiyonun sadece bal yapması gerek, fonksiyonda ''move forward'' yada ''turn'' blokları bulunmamalı. '
        courseF_bee_functions3_b: Fonksiyonunuz yalnızca bal varken bal toplamalı unutmayın.
        courseF_bee_functions3_c: Fonksiyonunuzu çağırmak için yeşil 'sadece bal yap' karesini kullanın.
        courseF_bee_functions3_d: Bu yola bir bakın.
      courseF_bee_functions3a_authored_hint:
        courseF_bee_functions3a_a: 'Bu bulmacanın sadece nektar alması veya bal yapması gerekiyor, içinde bir ''ileriye doğru hareket et'' veya ''dön'' blokları bulunmamalı.'
        courseF_bee_functions3a_b: İlk dört bulutu kontrol etmek için merdiven basamağı kullanın.
      courseF_bee_functions3a_2018_authored_hint:
        courseF_bee_functions3a_a: 'Bu bulmacanın sadece nektar alması veya bal yapması gerekiyor, içinde bir ''ileriye doğru hareket et'' veya ''dön'' blokları bulunmamalı.'
        courseF_bee_functions3a_b: İlk dört bulutu kontrol etmek için merdiven basamağı kullanın.
      courseF_bee_functions4_authored_hint:
        courseF_bee_functions4_a: Göreviniz yan yollardan aşağı doğru ilerleyip arıyı ana yoldan geri getirmektir. Bu bölümü programınıza eklemenize gerek yoktur.
        courseF_bee_functions4_b: Programı inşa etmeyi deneyin ve fonksiyonun beklendiği gibi işlev bloklarını kullanmaya çalışın, daha sonra fonksiyonu oluşturun.
      courseF_bee_functions4_2018_authored_hint:
        courseF_bee_functions4_a: Göreviniz yan yollardan aşağı doğru ilerleyip arıyı ana yoldan geri getirmektir. Bu bölümü programınıza eklemenize gerek yoktur.
        courseF_bee_functions4_b: Programı inşa etmeyi deneyin ve fonksiyonun beklendiği gibi işlev bloklarını kullanmaya çalışın, daha sonra fonksiyonu oluşturun.
      courseF_bee_functions5_authored_hint:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without having to change the main program.
        courseE_bee_functions5_b: "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- turn around\n- move back to the main path\n- turn back to the direction that the bee started from"
      courseF_bee_functions5a_authored_hint:
        courseF_bee_functions5a_a: "Göreviniz yan yollardan aşağı doğru ilerleyip arıyı ana yoldan geri getirmektir. \nBu bölümü ana programınıza eklemenize gerek yoktur."
        courseF_bee_functions5a_b: Farklı uzunluklarda oldukları için, ana yolların hepsini gezmek için bir 'süresince' döngüsü kullanın.
        courseF_bee_functions5a_c: '''süresince'' döngüsünde, ileri gittiğinizden emin olun, sonra fonksiyonunuzu bir yol aramak için kullanın.'
      courseF_bee_functions5a_2018_authored_hint:
        courseF_bee_functions5a_a: "Göreviniz yan yollardan aşağı doğru ilerleyip arıyı ana yoldan geri getirmektir. \nBu bölümü ana programınıza eklemenize gerek yoktur."
        courseF_bee_functions5a_b: Farklı uzunluklarda oldukları için, ana yolların hepsini gezmek için bir 'süresince' döngüsü kullanın.
        courseF_bee_functions5a_c: '''süresince'' döngüsünde, ileri gittiğinizden emin olun, sonra fonksiyonunuzu bir yol aramak için kullanın.'
      courseF_bee_functions6_authored_hint:
        courseF_bee_functions6_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız!  ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseF_bee_functions6_b: Fonksiyonunuz çiçek veya bal peteği olup olmadığını kontrol etmeli, nektar toplamalı veya bal yapmalı, sonra dönmeli.
        courseF_bee_functions6_c: Fonsiyonunuzun içinde döndüğünüz için, labirentten çıkmak için sadece bir 'süresince' döngüsüne ihtiyacınız var.
      courseF_bee_functions6_2018_authored_hint:
        courseF_bee_functions6_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız!  ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseF_bee_functions6_b: Fonksiyonunuz çiçek veya bal peteği olup olmadığını kontrol etmeli, nektar toplamalı veya bal yapmalı, sonra dönmeli.
        courseF_bee_functions6_c: Fonsiyonunuzun içinde döndüğünüz için, labirentten çıkmak için sadece bir 'süresince' döngüsüne ihtiyacınız var.
      courseF_bee_functions7_authored_hint:
        courseF_bee_functions7_a: Fonksiyonunuzu görmek için son bulmacanıza geri dönüp bakabilirsiniz.
        courseF_bee_functions7_b: Parmağınızla bu labirent boyunca bir yol çizmeyi deneyin. Arı nerede karar vermek zorunda kalacak?
      courseF_bee_functions7_2018_authored_hint:
        courseF_bee_functions7_a: Fonksiyonunuzu görmek için son bulmacanıza geri dönüp bakabilirsiniz.
        courseF_bee_functions7_b: Parmağınızla bu labirent boyunca bir yol çizmeyi deneyin. Arı nerede karar vermek zorunda kalacak?
      courseF_bee_functions8a_authored_hint:
        courseF_bee_functions8a_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseF_bee_functions8a_b: "İşlev (function) düzenleyicisinin içinde kod oluşturmayı unutmayın."
      courseF_bee_functions8a_2018_authored_hint:
        courseF_bee_functions8a_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseF_bee_functions8a_b: "İşlev (function) düzenleyicisinin içinde kod oluşturmayı unutmayın."
      courseF_bee_functionsPre7_authored_hint:
        courseF_bee_functions7_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseF_bee_functions7_b: |-
          Kodu yeşil fonksiyon bloğunun içinde oluşturmayı unutmayın.
          
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseF_bee_functions7_c: Eğer bir petek varsa hangi yöne dönmelisiniz? Peki ya bir çiçek varsa? Ya da hiç birşey yoksa?
      courseF_bee_functionsPre7_2018_authored_hint:
        courseF_bee_functions7_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseF_bee_functions7_b: |-
          Kodu yeşil fonksiyon bloğunun içinde oluşturmayı unutmayın.
          
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseF_bee_functions7_c: Eğer bir petek varsa hangi yöne dönmelisiniz? Peki ya bir çiçek varsa? Ya da hiç birşey yoksa?
      courseF_bee_functions_challenge1_authored_hint:
        courseF_bee_functions_challenge1_a: Yardımcı olmak için araç kutusundaki işlevleri kullanabilirsiniz. Başka bir işlevin tanımının içindeki bir fonksiyonu çağırabilirsiniz!
      courseF_bee_functions_challenge1_2018_authored_hint:
        courseF_bee_functions_challenge1_a: Yardımcı olmak için araç kutusundaki işlevleri kullanabilirsiniz. Başka bir işlevin tanımının içindeki bir fonksiyonu çağırabilirsiniz!
      courseF_bee_functions_challenge2_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          Eğer sağa bir yol varsa, aşağıdakileri yapmalısınız:
          * Herhangi bir miktarda nektar al veya herhangi bir miktarda bal yap.
          * Yan yola doğru sağa dön.
          * Yan yolun sonuna hareket et.
          * Sağa dön.
          
          Eğer yukarıdaki eylemleri iki kez tekrarlarsanız, ana yola geri dönmeye hazır olacaksınız.
          
          **Çözümün tamamını görmek isterseniz yalnızca başka bir ipucuna tıklayın!**
        courseF_bee_functions_challenge2_b: |-
          **Çözüm:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_2018_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          Eğer sağa bir yol varsa, aşağıdakileri yapmalısınız:
          * Herhangi bir miktarda nektar al veya herhangi bir miktarda bal yap.
          * Yan yola doğru sağa dön.
          * Yan yolun sonuna hareket et.
          * Sağa dön.
          
          Eğer yukarıdaki eylemleri iki kez tekrarlarsanız, ana yola geri dönmeye hazır olacaksınız.
          
          **Çözümün tamamını görmek isterseniz yalnızca başka bir ipucuna tıklayın!**
        courseF_bee_functions_challenge2_b: |-
          **Çözüm:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_recursion_authored_hint:
        courseF_bee_functions8a_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        courseF_bee_functions8a_b: "İşlev (function) düzenleyicisinin içinde kod oluşturmayı unutmayın."
      courseF_bee_fwp1_authored_hint:
        courseF_bee_fwp1_a: Use `if` statements to make sure you're only getting nectar from a flower.
        courseF_bee_fwp1_b: '''Tekrarla'' bloğu kullanarak yol boyunca devam edin. ''İlerle'' blogu kullan ve bir ''eğer'' bloğu kullanarak bir çiçek olup olmadığını kontrol emin olun.'
      courseF_bee_fwp1_2018_authored_hint:
        courseF_bee_fwp1_a: Use `if` statements to make sure you're only getting nectar from a flower.
        courseF_bee_fwp1_b: '''Tekrarla'' bloğu kullanarak yol boyunca devam edin. ''İlerle'' blogu kullan ve bir ''eğer'' bloğu kullanarak bir çiçek olup olmadığını kontrol emin olun.'
      courseF_bee_fwp2_authored_hint:
        courseF_bee_fwp2_a: "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        courseF_bee_fwp2_b: Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built.
      courseF_bee_fwp2_2018_authored_hint:
        courseF_bee_fwp2_a: "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        courseF_bee_fwp2_b: Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built.
      courseF_bee_fwp3_authored_hint:
        courseF_bee_fwp3_a: Your function will run no matter which direction you're facing.
        courseF_bee_fwp3_b: 3 satır nektar varsa, her satır geçişi için ne tür hareketler yapmalışsın?
        courseF_bee_fwp3_c: Bu bulmacayı çözmek için fonksiyonu 3 kez çağırmak gerekir. Her çağırma arasında 'sağa dön', 'ilerle' (2 kez), sonra 'sağa dön' gerekiyor. VEYA 'sola dön', 'ilerle' (2 kez), sonra tekrar 'sola dön' gerekiyor.
      courseF_bee_fwp3_2018_authored_hint:
        courseF_bee_fwp3_a: Your function will run no matter which direction you're facing.
        courseF_bee_fwp3_b: 3 satır nektar varsa, her satır geçişi için ne tür hareketler yapmalışsın?
        courseF_bee_fwp3_c: Bu bulmacayı çözmek için fonksiyonu 3 kez çağırmak gerekir. Her çağırma arasında 'sağa dön', 'ilerle' (2 kez), sonra 'sağa dön' gerekiyor. VEYA 'sola dön', 'ilerle' (2 kez), sonra tekrar 'sola dön' gerekiyor.
      courseF_bee_fwp4_authored_hint:
        courseF_bee_fwp4_a: You will need to add a parameter and use the resulting variable in your loop.
        courseF_bee_fwp4_b: Fonksiyon için oluşturduğun parametre, arının kaç kez ilerleyeceğini ve nektarı kaç kez kontrol edeceğini belirlemek için tekrar eden döngü içinde kullanılır.
      courseF_bee_fwp4_2018_authored_hint:
        courseF_bee_fwp4_a: You will need to add a parameter and use the resulting variable in your loop.
        courseF_bee_fwp4_b: Fonksiyon için oluşturduğun parametre, arının kaç kez ilerleyeceğini ve nektarı kaç kez kontrol edeceğini belirlemek için tekrar eden döngü içinde kullanılır.
      courseF_bee_fwp5_authored_hint:
        courseF_bee_fwp5_a: Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.
        courseF_bee_fwp5_a_b: Her fonksiyon çağrısı arasında dönmeyi unutmayın.
      courseF_bee_fwp5_2018_authored_hint:
        courseF_bee_fwp5_a: Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.
        courseF_bee_fwp5_a_b: Her fonksiyon çağrısı arasında dönmeyi unutmayın.
      courseF_bee_fwp6_authored_hint:
        courseF_bee_fwp6_a: Which block automatically increments a variable that you could use as a parameter?
        courseF_bee_fwp6_b: Try using a `for` loop to solve this puzzle.
      courseF_bee_fwp6_2018_authored_hint:
        courseF_bee_fwp6_a: Which block automatically increments a variable that you could use as a parameter?
        courseF_bee_fwp6_b: Try using a `for` loop to solve this puzzle.
      courseF_bee_fwp7_authored_hint:
        courseF_bee_fwp7_a: You don't need a second parameter for this function, only a second `if` statement.
        courseF_bee_fwp7_b: Fonksiyona bir 'eğer' deyimi ekleyin, böylece arı, çiçeklerin ve peteklerin ikisini de kontrol eder.
      courseF_bee_fwp7_2018_authored_hint:
        courseF_bee_fwp7_a: You don't need a second parameter for this function, only a second `if` statement.
        courseF_bee_fwp7_b: Fonksiyona bir 'eğer' deyimi ekleyin, böylece arı, çiçeklerin ve peteklerin ikisini de kontrol eder.
      courseF_bee_fwp8_authored_hint:
        courseF_bee_fwp8_a: Bu bulmacada bir `döngü 'nasıl yardımcı olabilir?
        courseF_bee_fwp8_b: İçeri girerken spiral küçüldüğünden, "for" döngüsü geri sayılmalıdır.
      courseF_bee_fwp8_2018_authored_hint:
        courseF_bee_fwp8_a: Bu bulmacada bir `döngü 'nasıl yardımcı olabilir?
        courseF_bee_fwp8_b: İçeri girerken spiral küçüldüğünden, "for" döngüsü geri sayılmalıdır.
      courseF_bee_fwp9_authored_hint: [ ]
      courseF_bee_fwp9_predict1_authored_hint: [ ]
      courseF_bee_fwp9_predict1_2018_authored_hint: [ ]
      courseF_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          Program şöyle görünmelidir:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: "Her alandaki hasat için mısır miktarına bak. Tezgah desenini görüyor musun? 'Döngü' içindeki maksimum değeri ayarlamak için 'uzunluk' parametresi kullanılmalıdır.\n\nHasat sonrası çiftçiyi ana yoldan geri çekmeyi unutmayın!"
        courseF_bee_fwp_challenge1_b1: |-
          'For Döngü'sünde maksimum değeri ayarlamak için' uzunluk 'parametresi kullanılmalıdır.
          
          Hasat sonrası çiftçiyi ana yoldan geri çekmeyi unutmayın!
        courseF_bee_fwp_challenge1_c: |-
          Bir işlevin içine 'şununla say döngüsü' yerleştirin ve '1' den başlayıp 'uzunluk' kadar 1er artacak şekilde ayarlayın.
          Bu döngünün içinde, ileri gitmeli ve tüm mısırları almalısın.
          
          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: "Şununla say döngüsü içerisinde ilerleyip **sayaç defa** 'mısır al'. \nŞununla say döngüsünden sonra **uzunluk defa** 'geri git'.\n\nBu ipucunu anlamak için bir çok defa okumaya ihtiyacın olabilir. **Koyu** kısımlar ihtiyacınız olan iki 'tekrarla' döngüsünün nasıl kullanılacağı hakkında ipucudur."
        courseF_bee_fwp_challenge1_d2: '`For Döngüsü'' sonrasında, sadece`geriye doğru` ** uzunluk sürelerine ** geçebilirsiniz.'
        courseF_bee_fwp_challenge1_e: |
          ** İşte çözüm: **
          
          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge1_2018_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          Program şöyle görünmelidir:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: "Her alandaki hasat için mısır miktarına bak. Tezgah desenini görüyor musun? 'Döngü' içindeki maksimum değeri ayarlamak için 'uzunluk' parametresi kullanılmalıdır.\n\nHasat sonrası çiftçiyi ana yoldan geri çekmeyi unutmayın!"
        courseF_bee_fwp_challenge1_b1: |-
          'For Döngü'sünde maksimum değeri ayarlamak için' uzunluk 'parametresi kullanılmalıdır.
          
          Hasat sonrası çiftçiyi ana yoldan geri çekmeyi unutmayın!
        courseF_bee_fwp_challenge1_c: |-
          Bir işlevin içine 'şununla say döngüsü' yerleştirin ve '1' den başlayıp 'uzunluk' kadar 1er artacak şekilde ayarlayın.
          Bu döngünün içinde, ileri gitmeli ve tüm mısırları almalısın.
          
          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: "Şununla say döngüsü içerisinde ilerleyip **sayaç defa** 'mısır al'. \nŞununla say döngüsünden sonra **uzunluk defa** 'geri git'.\n\nBu ipucunu anlamak için bir çok defa okumaya ihtiyacın olabilir. **Koyu** kısımlar ihtiyacınız olan iki 'tekrarla' döngüsünün nasıl kullanılacağı hakkında ipucudur."
        courseF_bee_fwp_challenge1_d2: '`For Döngüsü'' sonrasında, sadece`geriye doğru` ** uzunluk sürelerine ** geçebilirsiniz.'
        courseF_bee_fwp_challenge1_e: |
          ** İşte çözüm: **
          
          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Bu işlevin nasıl çalışması gerektiğini anladığınızdan emin olarak başlayın. Çiftçi her bir yoldan aşağı indiğinde, yalnızca mısır toplamaya çalışacaktır. Bunun yerine, 3 sebzenin her birini ona kontrol ettirip sadece bulduğu birini almasını nasıl sağlarsın?
          
          Mısır, balkabakları ve marulları kontrol etmek için fonksiyona koşullu ifadeler ekleyin.
        courseF_bee_fwp_challenge2_b: |-
          "İleriye git" bloklarının bittiğini mi düşünüyorsun?
          Programınızda bir * ikinci * `for döngüsü 'kullanmayı deneyin.
          
          **Not:** Kodunuzda`Sayaç` ı `sayaç2` ile  karıştırmamaya özen gösterin.
        courseF_bee_fwp_challenge2_c: |-
          ** İşte işlevi şöyle görünmelidir: **
          
          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifAtCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifAtCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifAtCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **İşte ana programınız böyle görünmeli:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_bee_fwp_challenge2_2018_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Bu işlevin nasıl çalışması gerektiğini anladığınızdan emin olarak başlayın. Çiftçi her bir yoldan aşağı indiğinde, yalnızca mısır toplamaya çalışacaktır. Bunun yerine, 3 sebzenin her birini ona kontrol ettirip sadece bulduğu birini almasını nasıl sağlarsın?
          
          Mısır, balkabakları ve marulları kontrol etmek için fonksiyona koşullu ifadeler ekleyin.
        courseF_bee_fwp_challenge2_b: |-
          "İleriye git" bloklarının bittiğini mi düşünüyorsun?
          Programınızda bir * ikinci * `for döngüsü 'kullanmayı deneyin.
          
          **Not:** Kodunuzda`Sayaç` ı `sayaç2` ile  karıştırmamaya özen gösterin.
        courseF_bee_fwp_challenge2_c: |-
          ** İşte işlevi şöyle görünmelidir: **
          
          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifAtCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifAtCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifAtCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **İşte ana programınız böyle görünmeli:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_farmer_ramp11_authored_hint:
        courseF_farmer_ramp11_a: Eğer döngüyü nereye koyacağın konusunda zorlanıyorsan önce kodla sonra tekrarlayan kısımları bulmaya çalış.
        courseF_farmer_ramp11_b: 5 tane "Marul topla" bloğu kullanmak yerine, Tekrarla döngüsü kullanarak nasıl marul toplarsın?
        courseF_farmer_ramp11_c: Bütün marulları toplamak için 5 tane tekrarla bloğuna ihtiyacın yok. Bunun yerine bir döngü içine bir döngü daha yerleştirin (içine de 'ilerle' bloğu koymayı unutmayın!)
      courseF_farmer_ramp11_2018_authored_hint:
        courseF_farmer_ramp11_a: Eğer döngüyü nereye koyacağın konusunda zorlanıyorsan önce kodla sonra tekrarlayan kısımları bulmaya çalış.
        courseF_farmer_ramp11_b: 5 tane "Marul topla" bloğu kullanmak yerine, Tekrarla döngüsü kullanarak nasıl marul toplarsın?
        courseF_farmer_ramp11_c: Bütün marulları toplamak için 5 tane tekrarla bloğuna ihtiyacın yok. Bunun yerine bir döngü içine bir döngü daha yerleştirin (içine de 'ilerle' bloğu koymayı unutmayın!)
      courseF_maze_predict1_authored_hint: [ ]
      courseF_maze_ramp1_authored_hint:
        courseF_maze_ramp1_a: Eğer Kuş domuza doğru gitmiyorsa, tüm blokların tam olarak birleştiğinden emin olun, sonra tekrar "Çalıştır" ı tıklayın.
        courseF_maze_ramp1_b: Burada araç kutusundan hiç bir ilave bloğa ihtiyacınız yok!
      courseF_maze_ramp13_authored_hint:
        courseF_maze_ramp13_b: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseF_maze_ramp13_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu tekrarlı çalıştırman mümkündür.
        courseF_maze_ramp13_c: Mümkün olduğu kadar domuzu yakınlaştırmak için bir tane iç içe döngü kullanın!
        courseF_maze_ramp13_d: Döngünüz tamamlandığında, son birkaç kareyi taşımak için ne yapmanız gerekir? Döngüden sonra bu blokları ekleyin.
      courseF_maze_ramp15_authored_hint:
        courseF_maze_ramp7_b: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseF_maze_ramp7_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu tekrarlı çalıştırman mümkündür.
      courseF_maze_ramp1_2018_authored_hint:
        courseF_maze_ramp1_a: Eğer Kuş domuza doğru gitmiyorsa, tüm blokların tam olarak birleştiğinden emin olun, sonra tekrar "Çalıştır" ı tıklayın.
        courseF_maze_ramp1_b: Burada araç kutusundan hiç bir ilave bloğa ihtiyacınız yok!
      courseF_maze_ramp2_authored_hint:
        courseF_maze_ramp2_a: Yeni bir blok kullanmak için, onu araç kutusundan çalışma alanına sürükleyin ve `çalıştırıldığında 'bloğuna bağlı olan programa bağlayın.
        courseF_maze_ramp2_b: '''İlerle'' bloğunun döngünün içinde olduğundan emin olun, böylece ''ilerle'' bloğu tekrarlanır.'
      courseF_maze_ramp2_2018_authored_hint:
        courseF_maze_ramp2_a: Yeni bir blok kullanmak için, onu araç kutusundan çalışma alanına sürükleyin ve `çalıştırıldığında 'bloğuna bağlı olan programa bağlayın.
        courseF_maze_ramp2_b: '''İlerle'' bloğunun döngünün içinde olduğundan emin olun, böylece ''ilerle'' bloğu tekrarlanır.'
      courseF_maze_ramp4_authored_hint:
        courseF_maze_ramp4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseF_maze_ramp4_b: Yolu takip etmek için, ilerle ve bir yöne dön, sonra 3 tere ilerle ve ters yöne dön. Son bir kez daha ilerle ve domuz ulaş.
        courseF_maze_ramp4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_maze_ramp4_2018_authored_hint:
        courseF_maze_ramp4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseF_maze_ramp4_b: Yolu takip etmek için, ilerle ve bir yöne dön, sonra 3 tere ilerle ve ters yöne dön. Son bir kez daha ilerle ve domuz ulaş.
        courseF_maze_ramp4_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_maze_ramp5_authored_hint:
        courseF_maze_ramp5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseF_maze_ramp5_b: Domuza ulaşmak için birden fazla yol var.
        courseF_maze_ramp5_c: Daha kısa kod için bir tane 'tekrarla' döngüsü kullanmayı unutmayın!
      courseF_maze_ramp5_2018_authored_hint:
        courseF_maze_ramp5_a: Try using the "Step" button to run your code line by line. Can you figure out what you need to do next?
        courseF_maze_ramp5_b: Domuza ulaşmak için birden fazla yol var.
        courseF_maze_ramp5_c: Daha kısa kod için bir tane 'tekrarla' döngüsü kullanmayı unutmayın!
      courseF_maze_ramp6_authored_hint:
        courseF_maze_ramp6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseF_maze_ramp6_b: Kuş bir duvara bakıyor, bu yüzden hareket etmeden önce döndürmeyi unutmayın!
        courseF_maze_ramp6_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_maze_ramp6_2018_authored_hint:
        courseF_maze_ramp6_a: Bu bulmacayı çözmek için iki yol vardır!
        courseF_maze_ramp6_b: Kuş bir duvara bakıyor, bu yüzden hareket etmeden önce döndürmeyi unutmayın!
        courseF_maze_ramp6_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
      courseF_maze_ramp7_authored_hint:
        courseF_maze_ramp7_b: Don't forget to use the "Step" button to go through block by block and look for errors.
        courseF_maze_ramp7_a: Tekrarla bloğu kullanarak bir yada daha fazla bloğu tekrarlı çalıştırman mümkündür.
        courseF_maze_ramp7_c: Hata yapmaktan korkmayın! Bulmacayı henüz çözdüğünüzü düşünmeseniz bile, bloklar ekleyin ve ne olacağını görmek için kodu çalıştırın.
        courseF_maze_ramp7_d: Domuza ulaşmak için birden fazla yol var. Hangi yol en az kod gerektiriyor?
        courseF_maze_ramp7_aa: |-
          Bu yola bak... 
          
          ![](https://images.code.org/e1d29901495eea9504c194b09efaa88e-image-1503437474226.29.32.png)
      courseF_playlab_variables1a_authored_hint:
        courseF_playlab_variables1a_a: You will want to replace the words “What should I shout?” in the green block with “Goal!”
      courseF_playlab_variables1a_2018_authored_hint:
        courseF_playlab_variables1a_a: You will want to replace the words “What should I shout?” in the green block with “Goal!”
      courseF_playlab_variables2b_authored_hint:
        courseF_playlab_variables2b_a: '`Çalıştır`a bastığınızda sizce Kiki ne diyecek?'
      courseF_playlab_variables2b_2018_authored_hint:
        courseF_playlab_variables2b_a: '`Çalıştır`a bastığınızda sizce Kiki ne diyecek?'
      courseF_playlab_variables3b_authored_hint:
        courseF_playlab_variables3b_a: The variable blocks are already in the workspace.  All you have to do is put them where they belong!
      courseF_playlab_variables3bEdit_authored_hint:
        courseF_playlab_variables3b_a: The variable blocks are already in the workspace.  All you have to do is put them where they belong!
      courseF_playlab_variables3b_josh_authored_hint:
        courseF_playlab_variables3b_a: 'Boş alanlara sahip iki blok vardır: bir ''aktör söyle'' bloğu ve bir ''katılmak'' bloğu. Değişken blokları oraya ekleyin!'
      courseF_playlab_variables3b_josh_2018_authored_hint:
        courseF_playlab_variables3b_a: 'Boş alanlara sahip iki blok vardır: bir ''aktör söyle'' bloğu ve bir ''katılmak'' bloğu. Değişken blokları oraya ekleyin!'
      courseF_playlab_variables4b_authored_hint:
        courseF_playlab_variables4b_a: Buradaki araç kutusundan daha fazla bloğa ihtiyacınız yok.
        courseF_playlab_variables4b_b: İki `yaş` ve bir `isim` değişkenini konuşmada en mantıklı olan yere koyun.
      courseF_playlab_variables4b_2018_authored_hint:
        courseF_playlab_variables4b_a: Buradaki araç kutusundan daha fazla bloğa ihtiyacınız yok.
        courseF_playlab_variables4b_b: İki `yaş` ve bir `isim` değişkenini konuşmada en mantıklı olan yere koyun.
      courseF_playlab_variables5c_authored_hint:
        courseF_playlab_variables5c_a: Araç kutusunda "Değişkenler" altında bir `cevap`değişkeni bloğu bulun.
        courseF_playlab_variables5c_b: Kodunuzu test edin! Ne olduğunu görmek için "kırmızı" ve diğer renkleri de girmeyi deneyin.
      courseF_playlab_variables5c_2018_authored_hint:
        courseF_playlab_variables5c_a: Araç kutusunda "Değişkenler" altında bir `cevap`değişkeni bloğu bulun.
        courseF_playlab_variables5c_b: Kodunuzu test edin! Ne olduğunu görmek için "kırmızı" ve diğer renkleri de girmeyi deneyin.
      courseF_playlab_variables6c_authored_hint:
        courseF_playlab_variables6c_a: '"Girdi" bölümü altında, kullanıcılardan girdi almak için`sor` bloğunu kullanın.'
      courseF_playlab_variables6c_2018_authored_hint:
        courseF_playlab_variables6c_a: '"Girdi" bölümü altında, kullanıcılardan girdi almak için`sor` bloğunu kullanın.'
      courseF_playlab_variables7b_authored_hint:
        courseF_playlab_variables7b_a: Bir kedi ve köpek onların sevdiği yemekler hakkında konuşsun. Sor bloğu ile favori yiyeceği sor ve sonra metni ekranda görüntüle!
        courseF_playlab_variables7b_b: En sevdiğiniz karekter size bir espri duymak ister misin diye sorsun. Eğer cevabı Evet ise ekranda espiriyi görüntüle.
      courseF_playlab_variables7b_2018_authored_hint:
        courseF_playlab_variables7b_a: Bir kedi ve köpek onların sevdiği yemekler hakkında konuşsun. Sor bloğu ile favori yiyeceği sor ve sonra metni ekranda görüntüle!
        courseF_playlab_variables7b_b: En sevdiğiniz karekter size bir espri duymak ister misin diye sorsun. Eğer cevabı Evet ise ekranda espiriyi görüntüle.
      courseF_playlab_variables7c_authored_hint:
        courseF_playlab_variables7c_a: Yeni `ask` bloğunu` if / else` deyiminin önüne koyun, böylece onu diğer aşamalarında kullanabilirsiniz.
      courseF_playlab_variables7c_2018_authored_hint:
        courseF_playlab_variables7c_a: Yeni `ask` bloğunu` if / else` deyiminin önüne koyun, böylece onu diğer aşamalarında kullanabilirsiniz.
      courseF_playlab_variables8c_authored_hint:
        courseF_playlab_variables8c_a: '`Join` bloğu` actor say` bloğuna girer ve değişkenlerinizi daha büyük cümlelerde kullanmanıza olanak tanır.'
      courseF_playlab_variables8c_2018_authored_hint:
        courseF_playlab_variables8c_a: '`Join` bloğu` actor say` bloğuna girer ve değişkenlerinizi daha büyük cümlelerde kullanmanıza olanak tanır.'
      courseF_playlab_variables_challenge1_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          Aktörleri konuşturmak için araç kutusundan ek bloklara ihtiyacınız olacak.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge1_2018_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          Aktörleri konuşturmak için araç kutusundan ek bloklara ihtiyacınız olacak.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge2_a: Nesneler çarpıştığında 'skor' değişkenine puanlar ekleyin ve azaltın. 
        courseF_playlab_variables_challenge2_b: Ok tuşuna her basıldığında hareketli nesnenin ne kadar hareket edeceğini parametreden ayarlayabilirsin.
        courseF_playlab_variables_challenge2_c: |-
          **Çözüm:**
          
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge2_2018_authored_hint:
        courseF_playlab_variables_challenge2_a: Nesneler çarpıştığında 'skor' değişkenine puanlar ekleyin ve azaltın. 
        courseF_playlab_variables_challenge2_b: Ok tuşuna her basıldığında hareketli nesnenin ne kadar hareket edeceğini parametreden ayarlayabilirsin.
        courseF_playlab_variables_challenge2_c: |-
          **Çözüm:**
          
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge3_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          Aktör ne söyleyeceğini biliyor çünkü 'fortune' değişkenin güncel değerini kontrol ediyor.
          
          <xml><block type="variables_set" inline="false">
          <title name="VAR">gelecek</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">İyi düşün ve tekrar sor!!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          Eğer 'soru sor' fonksiyonunu aktör geleceği söyledikten sonra tekrar çağırırsanız oyunun her şeyi yeniden başlattığını hissedeceksiniz.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">gelecek</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "Aktörlere söyleyecek daha çok şey vermek için daha fazla koşullu ifade eklemeniz gerekir.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">gelecek</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n              \n'sürekli tekrarla' döngüsünün içinde aktörün hangi ruh halini göstereceğini değiştirmeyi unutmayın! Ruh halini rastgele de değiştirebilirsiniz!"
        courseF_playlab_variables_challenge3_d: |-
          Aktör 1 ile ilgili tüm kodu anladıktan sonra, aynı kodu bu kez Aktör 2 için yeniden yazmayı deneyin.
          
          'Bir soru sor' fonksiyonunun içindeki talimatları değiştirmeyi unutmayın, böylece hala mantıklı olur!
        courseF_playlab_variables_challenge3_e: |-
          Her şey tamamlandığında aktöre tıklayabilmeli ve 8 farklı mesaj alabilmelisin. Daha da genişletmek mümkün mü?
          
          Oyunu bitirdiğinde deneyecek bir arkadaşın olsun!
      coursea_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure both of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!
      coursef_maze_ramp3_authored_hint:
        courseF_maze_ramp3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseF_maze_ramp3_b: Programda satır satır ilerlemek için adım butonunu kullanın. İşler nerede ters gidiyor?
      coursef_maze_ramp3_2018_authored_hint:
        courseF_maze_ramp3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseF_maze_ramp3_b: Programda satır satır ilerlemek için adım butonunu kullanın. İşler nerede ters gidiyor?
      drawings!_authored_hint:
        triangle_geometry_hint: 'Unutmayın: bir eşkenar üçgenin 3 kenarı vardır ve her birinde 60 derece dönüş vardır!'
        repeat_pointer: Bir kena rçizim 3 dönüş yapmalısın.... Aynı komutu tekrarlı yapmanı sağlayan blok hangisi?
        repeat_bottom_out: '''3 kez tekrarlayın'' bloğu kullanın!'
      grade1_adventurer_loops10_authored_hint:
        grade1_adventurer_loops10_a: Bu bulmacayı çözmek için üç tane 'tekrarla' döngüsü kullanmanız gerekecek.
      grade1_adventurer_loops2_authored_hint:
        grade1_adventurer_loops2_a: Try using a `repeat` block to collect your gold.
      grade1_adventurer_loops3_authored_hint:
        grade1_adventurer_loops3_a: Doğru olmayan bir şey mi var? İşlerin nerede yanlış gittiğini bulmak için adım butonunu kullanmayı deneyin.
      grade1_adventurer_loops4_authored_hint:
        grade1_adventurer_loops4_a: İşi halletmek için birden fazla döngü kullanmayı deneyin.
      grade1_adventurer_loops5_authored_hint:
        grade1_adventurer_loops5_a: Can't figure out where things start going wrong? Use the "Step" button to run through your program one block at a time.
      grade1_adventurer_loops6_authored_hint:
        grade1_adventurer_loops6_a: If you are having a hard time with the puzzle, try drawing it on paper to help you figure it out.
      grade1_adventurer_loops7_challenge_authored_hint:
        grade1_adventurer_loops7_challenge_a: 'Tekrarla döngülerini nereye koyacağınızı bulamıyorsanız, adım adım programlayın ve bir desen bulun. '
        grade1_adventurer_loops7_challenge_b: Kod biraz uzun mu? 'Tekrarla' döngülerinizden iki tanesini başka bir döngünün içine koyarak kodu daha kısa hale getirebilirsiniz.
      grade1_adventurer_loops8_challenge_authored_hint:
        grade1_adventurer_loops8_challenge_a: Can you find a pattern in the steps?  Where can you use a repeat?
      grade1_adventurer_loops9_authored_hint:
        grade1_adventurer_loops9_a: 'Bu çok mu zor görünüyor? Daha kolay hissettirmek için 4 küçük probleme ayırın.'
      grade1_artist_loops1_authored_hint:
        grade1_artist_loops1_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan bloğun üstündeki sayıyı değiştirebilirsin.
      grade1_artist_loops2_authored_hint:
        grade1_artist_loops2_a: Remember to use a `repeat` loop for better code!
      grade1_artist_loops3_authored_hint: [ ]
      grade1_artist_loops4_authored_hint:
        grade1_artist_loops4_a: Drag out a `repeat` loop, then put the other blocks inside of it. How many times do you need to repeat?
      grade1_artist_loops5_authored_hint: [ ]
      grade1_artist_loops6_authored_hint:
        grade1_artist_loops6_a: Bu meydan okuma art arda DÖRT döngü içerir!
        grade1_artist_loops6_b: |-
          Her döngünün farklı yönlere giden bir merdiven deseni yaptığına dikkat edin.
          
          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        grade1_artist_loops6_c: "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
      grade1_artist_loops7_authored_hint: [ ]
      grade1_artist_loops7a_authored_hint:
        artistLoopsK9_a: Bu meydan okuma art arda DÖRT döngü içerir!
        artistLoopsK9_b: |-
          Her döngünün farklı yönlere giden bir merdiven deseni yaptığına dikkat edin.
          
          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        artistLoopsK9_c: "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
      grade1_artist_loops7b_authored_hint:
        grade1_artist_loops7b_a: How many times should you repeat the pattern to make the ladder?
      grade1_artist_loops8_authored_hint: [ ]
      grade1_artist_loops9_authored_hint: [ ]
      grade1_artist_loopsFP_authored_hint: [ ]
      grade1_maze_sequence1_authored_hint:
        grade1_maze_sequence1_a: This program is missing one block. Can you figure out which one?
      grade1_maze_sequence10_authored_hint:
        grade1_maze_sequence10_a: If you're having trouble, try writing down the steps on a piece of paper first.
      grade1_maze_sequence2_authored_hint:
        grade1_maze_sequence2_a: One of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?
      grade1_maze_sequence3_authored_hint:
        grade1_maze_sequence3_a: Try adding one instruction at a time until you get to the pig.
      grade1_maze_sequence5_authored_hint:
        K2.0_sequence_5: Your final code should have three movement blocks.
      grade1_maze_sequence6_authored_hint:
        K2.0_sequence_6_a: There is 1 block that you need to add to move the bird to the pig.
      grade1_maze_sequence7_authored_hint:
        grade1_maze_sequence7a: Eğer zorlanıyorsanız, bu bulmacayı çözene kadar bir defada bir blok eklemeyi deneyin.
      grade1_maze_sequence8_authored_hint:
        grade1_maze_sequence8_a: Stuck? Try tracing the bird's path with your finger.
        grade1_maze_sequence8_b: The extra blocks need to be added before the last ![](https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51 PM.png )
      grade1_maze_sequence9_authored_hint:
        grade1_maze_sequence9_a: If you're having trouble, try writing down the steps on a piece of paper first.
      grade1_maze_sequenceA_authored_hint:
        grade1_maze_sequence10_a: If you're having trouble, try writing down the steps on a piece of paper first.
      grade1_maze_sequenceB_authored_hint:
        grade1_maze_sequenceB_a: If you're having trouble, try writing down the steps on a piece of paper first.
      grade1_maze_sequenceC_authored_hint:
        grade1_maze_sequenceC_a: If you're having trouble, try writing down the steps on a piece of paper first.
      grade2_CaringForNewPet_0_authored_hint:
        grade2_CaringForNewPet_0: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
      grade2_CaringForNewPet_1_authored_hint:
        2-3_Maze_1_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
      grade2_CaringForNewPet_11_authored_hint: [ ]
      grade2_CaringForNewPet_2courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
      grade2_CaringForNewPet_3_authored_hint:
        hint1: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        hint2: This path is a zig-zag. You need to move forward 3 times and turn 2 times.
        hint3: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
      grade2_CaringForNewPet_3D_authored_hint: [ ]
      grade2_CaringForNewPet_4_authored_hint:
        2-3_Maze_6_a: Bu bulmacayı çözmek için iki yol vardır!
      grade2_CaringForNewPet_5_authored_hint:
        grade2_CaringForNewPet_5_a: If you can't quite see what you need to do, try saying the steps that your bird will take out loud one-by-one and see if they match the blocks in the workspace.
      grade2_CaringForNewPet_6_authored_hint:
        grade2_CaringForNewPet_6_a: You don't have to code the whole solution at once!  Try running the code as you go to make sure it works at each step.
      grade2_CaringForNewPet_7D_authored_hint:
        grade2_CaringForNewPet_7D_a: Don't forget to use the "Step" button to go through block by block and look for errors.
      grade2_MakeDogTag_1_authored_hint:
        2-3_Artist_1_new_a: Eğer 'İleriye Taşı 100 Piksel' blokunu kullanırsan, otomatik olarak bir çizgi çizeceğim.
        2-3_Artist_1_new_b: Köşeyi çevirirken sorun mu yaşıyorsunuz? `90 derece sağa dön` bloğunu kullanın.
      grade2_MakeDogTag_2_authored_hint:
        2-3_Artist_2_new_a: To create this window, just draw a square with 100 pixel sides.
      grade2_MakeDogTag_3_authored_hint:
        2-3_Artist_4_a: To finish the rocket, just draw the triangle on top!
      grade2_MakeDogTag_4_authored_hint: [ ]
      grade2_MakeDogTag_5_authored_hint:
        grade2_MakeDogTag_5a: The artist is already facing the correct way to draw his first line.
        grade2_MakeDogTag_5b: This diamond is really just a square that's standing on its corner.
        grade2_MakeDogTag_5c: Since this diamond is also a square, be sure to turn 90 degrees at the corners.
      grade2_MakeDogTag_6_authored_hint:
        grade2_MakeDogTag_6a: Every angle is either 45 or 90 degrees.
        grade2_MakeDogTag_6b: "Does it work at the first step?  \nHow about the second?  \nWhere does it go wrong?"
      grade2_MakeDogTag_7_authored_hint:
        2-3_Artist_11_a: The exterior angles on this triangle are 120 degrees each.
      grade2_MakeDogTag_9_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          Remember that the code from the last puzzle was:
          
          ![](https://images.code.org/e5c7492f509dd41efe2888c7e7895c28-image-1461177002636.29.02.png)
        2-3_Artist_Loops_New_11_b: Yeni dönüşün döngünün içindeki kodun **sonuna** gelmeli.
      grade2_MakeDogTag_BFP_authored_hint: [ ]
      grade2_PuppyLoops_10_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          Şekil kaç kere tekrar ediyor? Şekil kaç kez tekrar *etmeli*? Programda bunu nerede değiştirebilirim?
      grade2_PuppyLoops_3_authored_hint:
        hint1: This puzzle is very similar to the last one.
        hint2: Use a `repeat 5 times` block to create the loop.
        hint3: Place a `move forward` block inside the `repeat block`.
      grade2_PuppyLoops_5_authored_hint:
        hint1: The best solution uses two `move forward` commands and one loop.
      grade2_PuppyLoops_6_authored_hint:
        2-3_Maze_16_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı deneyin ve tekrar eden şeyleri döngüye koyun.
        2-3_Maze_16_b: "Birden fazla bloğu tekrarla bloğu içine koymak için döngüyü çalışma alanına sürükle, sonra  blokları içine sürükle!"
      grade2_PuppyLoops_7_authored_hint:
        2-3_Maze_Loops_17_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı deneyin ve tekrar eden şeyleri döngüye koyun.
        2-3_Maze_Loops_17_b: Başlangıç kodu silindi mi? "Baştan Başla" tuşu ile tekrar başa dönebilirsin!
      grade2_PuppyLoops_8_authored_hint:
        2-3_Artist_Debugging_2_a: 'İpucu: Her bıyık 75 piksel uzunluğundadır.'
      grade2_PuppyLoops_9_authored_hint:
        2-3_Artist_Debugging_7_a: Sanatçı ilk satırı çizdikten sonra İlerlese yada geriye doğru atlasa ne olur?
      grade2_collector_2_authored_hint:
        hint1: You can use four `move forward` blocks or use the `repeat 4 times` block to make your program shorter.
      grade2_collector_A_authored_hint: [ ]
      grade2_collector_A_2018_authored_hint: [ ]
      grade2_maze_debuggingFP_authored_hint: [ ]
      grade2_maze_intro4_authored_hint:
        hint_1: Connect a "move forward" block to the bottom of the program.
      grade2_playlab_project_6_authored_hint:
        idea1: |-
          *Need an idea?*
          
          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.
          
          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Need an idea?*
          
          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.
          
          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Need an idea?*
          
          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      grade2_puppy_loops2_authored_hint:
        hint1: You can solve this puzzle with just three blocks, including `when run`.
        hint2: Try putting the `move forward` block inside of a `repeat` block to create a loop.
        hint3: You need to repeat the `move forward` command 5 times to solve this puzzle.
      grade2_puppy_loops3_authored_hint:
        hint1: This puzzle is very similar to the last one.
        hint2: Use a `repeat 5 times` block to create the loop.
        hint3: Place a `move forward` block inside the `repeat block`.
      grade2_puppy_loops4_authored_hint:
        hint1: Not all command blocks should be repeated.
        hint2: Use two `repeat` blocks set to different numbers.
        hint3: "`Turn right` once between the two loops."
      grade2_puppy_loops5_authored_hint:
        hint1: The best solution uses two `move forward` commands and one loop.
      grade2_puppy_loops6_authored_hint:
        2-3_Maze_16_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı deneyin ve tekrar eden şeyleri döngüye koyun.
        2-3_Maze_16_b: "Birden fazla bloğu tekrarla bloğu içine koymak için döngüyü çalışma alanına sürükle, sonra  blokları içine sürükle!"
      grade2_puppy_loops7_authored_hint:
        2-3_Maze_Loops_17_a: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı deneyin ve tekrar eden şeyleri döngüye koyun.
      grade3_ConditionalsElse_4_authored_hint:
        remember_quantum: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
      grade3_ConditionalsElse_5_authored_hint:
        remember_quantum: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
      grade3_ConditionalsElse_TeacherIDo_authored_hint:
        remember_quantum: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
      grade3_Conditionals_10 BAD_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Bu bulmacayı uzun bir dikdörtgen olarak düşün. Arı ileri hareket etmeli, sonra birkaç defa sola dönmeli ve rotayı tamamlamalı.
      grade3_Conditionals_11_authored_hint:
        2-3_Bee_Conditionals_14_a: Blokları koymakta zorlanıyor musun?  Kırmızı çiçeklerle mor çiçeklere aynı şekilde davranmaya çalış!
        2-3_Bee_Conditionals_14_b: Kırmızı çiçek mor olsaydı ekstra 'tekrarla' bloğuyla kodu ne kadar azaltabilirdin?
        2-3_Bee_Conditionals_14_c: "Try breaking this up into two separate chunks:  \n\n![](https://images.code.org/670ac0889a8f523865ff4099b4c54844-image-1463445460440.36.42.png)\n\n1) Gather nectar 3 times\n  - Move forward 5 times\n  - Check to see if nectar, if so: get it\n  - Turn left\n  \n2) Make honey \n  - Move forward one time\n  - Make two honey"
      grade3_Conditionals_12_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Unutmayın: Mor çiçekler sadece ya 0 ya da 1 nektar bulunduruyor ve programı her çalıştırdığında bu değer değişebilir.'
      grade3_Conditionals_2_authored_hint:
        2-3_Bee_Conditionals_3_a: İlerlemek için bir döngü, nektar için başka bir döngü ve bal yapmak için başka döngü kullanırsan daha az blok kullanmış olursun.
      grade3_Conditionals_4_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Unutmayın: mor çiçekler 0 ila 1 nektar bulundurur ve programınızı her çalıştırdığınızda değişir!'
      grade3_Conditionals_TeacherIDo_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Unutmayın: mor çiçekler 0 ila 1 nektar bulundurur ve programınızı her çalıştırdığınızda değişir!'
      grade3_Debugging_1_authored_hint:
        2-3_Bee_Debugging_1_a: Hatalı bloğu bulup düzelttikten sonra, 'tekrarla' bloğu kullanabileceğin bir tekrar fark ettin mi?
      grade3_Debugging_10_authored_hint:
        grade3_Debugging_10_a: |-
          Start by looking at just the first loop.
          
          What does it do?
          
          What is it supposed to do?
          
          What does that tell you?
        grade3_Debugging_10_b: Once you have the first loop the way you want it, what is left over in your code?
        grade3_Debugging_10_c: |-
          Try wrapping the leftover loop around the rest of your completed code.  Does is work now?
          
          If not, what is still going wrong?
      grade3_Debugging_11_authored_hint:
        grade3_Debugging_11_a: |-
          Try running through the code using the "Step" button.  Is everything good at the first step?
          
          How about the second?
          
          Where do things go wrong?
        grade3_Debugging_11_b: It looks like all of the right steps are here, you just need more of them.  How can you repeat the `get nectar` and `make honey` actions multiple times?
      grade3_Debugging_2_authored_hint:
        grade3_Debugging_2_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        grade3_Debugging_2_b: Do you see any patterns that could be made more simple using a `repeat` loop?
      grade3_Debugging_3_authored_hint:
        grade3_Debugging_3_a: |-
          Use the "Step" button to see if everything is right at the first step.
          
          How about the second?
          
          Where does it go wrong?
        grade3_Debugging_3_b: Do you see a pattern?  Try using nested loops to solve this puzzle.
      grade3_Debugging_4_authored_hint:
        grade3_Debugging_4_a: Is there any place where the bee does something that doesn't make sense? What happens when you change those blocks?
        grade3_Debugging_4_b: Try simplifying the code using nested loops.
      grade3_Debugging_8_authored_hint:
        grade3_Debugging_8_a: "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?"
        grade3_Debugging_8_b: "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!"
      grade3_Debugging_TeacherIDo_authored_hint:
        2-3_Bee_Debugging_4_a: Biryerlerde arının yaptığı anlamsız bir hareket varmı? O bloğu değiştirdiğinde ne oluyor?
      grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Döngü içinde 5 blok olsun.
      grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Eğer tekrarla bloğunun içine koyacak blokları henüz bulamadıysan, teker teker kodla ve tekrar eden yerlere dikkat et.
      grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Eğer tekrarla bloğu içine hangi blokların gireceğini bulamadıysan teker teker eklemeyi dene.
        2-3_Bee_Loops_6_b: İşiniz bittiğinde, 'tekrarla' döngüsü içinde 6 blok olmalıdır.
      grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Birbiri ardına İki farklı döngü gerekir.
      grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: İlk eylem 'ilerle' yerine bir 'dönüş' olacak.
        2-3_Bee_Loops_7_b: 'Eğer döngüyü başlangıçta göremiyorsan, uzun şekilde yap ve tekrarlara dikkat et.  '
      grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: İlk eylem 'ilerle' yerine bir 'dönüş' olacak.
        2-3_Bee_Loops_4A_b: Programın son parçası döngü sonrasına yazacağınız kod olmalı.
        2-3_Bee_Loops_4A_c: Eğer döngüleri henüz bulmadıysanız, uzun yoldan kodlayıp neleri 'tekrarla' bloğu ile döngüye dönüştürebileceğinize bakın.
      grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Döngü içinde 4 blok olsun.
      grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Döngü içinde 6 blok olsun.
      grade3_RunningFarm_1_authored_hint:
        grade3_RunningFarm_1_a: You will need to look for corn 5 times, using a repeat loop.
        grade3_RunningFarm_1_b: Make sure to use an `if at corn` block or you might try to pick something that's not there!
      grade3_RunningFarm_10_authored_hint:
        grade3_RunningFarm_10_a: This puzzle uses almost the exact same code as the last level, except you only need to repeat 4 times.
      grade3_RunningFarm_11a_authored_hint:
        grade3_RunningFarm_11a_a: You shouldn't need the `while path ahead` loop this time.
      grade3_RunningFarm_2_authored_hint:
        grade3_RunningFarm_2_a: 'The best way to do this is to nest `if` statements by placing one inside of the other.  '
        grade3_RunningFarm_2_b: For this puzzle, you should have one `if/else` statement and one plain `if` statement.
      grade3_RunningFarm_3_authored_hint:
        grade3_RunningFarm_3_a: |-
          To get all of the items, try nesting `if` statements three deep.
          
          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        grade3_RunningFarm_3_b: For this puzzle, you should have two `if/else` statements and one plain `if` statement.
      grade3_RunningFarm_4_authored_hint:
        grade3_RunningFarm_4_a: |-
          No one knows how many heads of lettuce will grow from each sprout.
          
          Use a `while there is lettuce` loop to keep picking until each piece has been gathered.
      grade3_RunningFarm_5_authored_hint:
        grade3_RunningFarm_5_a: You will need to check for each type of crop that the farmer can pick.  Try using two `if/else` statements and one  `if` block.
      grade3_RunningFarm_6_authored_hint:
        grade3_RunningFarm_6_a: Use a `while path ahead` loop to move the farmer down each piece of the spiral.
        grade3_RunningFarm_6_b: You only need to check for corn during most of the harvest.  Just pick one pumpkin at the very end of your program.
      grade3_RunningFarm_7_authored_hint:
        grade3_RunningFarm_7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.
          
          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        grade3_RunningFarm_7_b: Try using `when path ahead` to keep the farmer moving the right number of steps.
        grade3_RunningFarm_7_c: 'Use nested `if` statements and `while there is` loops to check each space for corn and lettuce, then pick only a single pumpkin at the end. '
      grade3_bee_Conditionals_new4_authored_hint:
        grade3_bee_Conditionals_new4_a: Don't forget that you can use loops for shorter code!
      grade3_bee_conditionals_new1a_authored_hint:
        grade3_bee_conditionals_new1a_a: Be sure to use an `if` statement to check each space to see if it has a flower or nothing.
      grade3_bee_conditionals_new2a_authored_hint:
        grade3_bee_conditionals_new2a_a: You can still treat every space as if there is a cloud over it, even though you can see the whole path.
        grade3_bee_conditionals_new2a_b: 'Use an `if` statement inside your loop to check each space. '
      grade3_bee_conditionals_new3a_authored_hint:
        grade3_bee_conditionals_new3a_a: In this puzzle, you know that each square has either a flower or a honeycomb.  That means you can repeat your `if/else` conditional at each square.
      grade3_bee_conditionals_quantum1_authored_hint:
        grade3_bee_conditionals_quantum1_a: You will need to use an `if` block to check to see if there is a flower beneath the cloud before you try to get nectar.
      grade3_bee_conditionals_quantum2_authored_hint:
        grade3_bee_conditionals_quantum2_a: Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.
      grade3_bee_conditionals_quantum3_authored_hint:
        grade3_bee_conditionals_quantum3: Make sure to use an `if` statement to check for honeycomb beneath each cloud.
      grade3_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
      grade3_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
        grade3_bee_conditionals_quantum5_a: This puzzle is tricky, because you can't check blank squares, nectar *and* honey with a single conditional.
      grade3_maze_loops1_authored_hint:
        grade3_maze_loops1_a: Try using the "Step" button to find errors.
      grade3_maze_loops2_authored_hint:
        grade3_maze_loops2_a: |-
          Try using this path through the maze.
          
          ![](https://images.code.org/6a8b4b97a8eef813d8a827b0b7b2d36b-image-1480446509692.05.22.png)
        grade3_maze_loops2_b: Tekrar eden kısımları görmek zor ise, her şeyi kodlamayı deneyin ve tekrar eden şeyleri döngüye koyun.
        grade3_maze_loops2_c: Try using one `repeat` loop inside of another to cut down on the amount of code you need.
      grade3_maze_loops2a_authored_hint:
        grade3_maze_loops2a_a: To solve this puzzle, you will need to "nest" one `repeat` loop inside of another `repeat` loop.
      grade3_maze_loops3_authored_hint:
        2-3_Maze_Loops_19_a: If you are stuck, try writing out the code out on paper without loops first and look for patterns.
        2-3_Maze_Loops_19_b: Nesting `repeat` loops can help decrease the number of blocks used.
        2-3_Maze_Loops_19_c: It will take two sets of nested `repeat` loops to solve this puzzle.
      grade3_maze_loops4_authored_hint:
        2-3_Maze_Loops_20_a: Look for a stair-step pattern in this maze to find where a nested loop can be used.
      grade3_maze_loops5_authored_hint:
        2-3_Maze_Loops_21_a: Merdiven basamağı deseni bulmakta zorlanıyorsanız, önü kapalı yolları parmağınızla kapatın.
      grade3_robotFarmer_ConditionalsIntro_10a_authored_hint: [ ]
      grade3_robotFarmer_ConditionalsIntro_11a_authored_hint: [ ]
      grade3_robotFarmer_ConditionalsIntro_5_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_5a: Try nesting a `while` loop inside of a `repeat` loop.
      grade3_robotFarmer_ConditionalsIntro_7_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_7_a: Make sure you're using the `while` loop to figure out how many times to fill each hole.
        grade3_robotFarmer_ConditionalsIntro_7_b: Notice that the farmer needs to move forward and down several times in a stair-step pattern.
      grade3_robotFarmer_ConditionalsIntro_8_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.
      grade3_robotFarmer_ConditionalsIntro_9_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_9_a: You are going to need to use more than one `while` loop.
        grade3_robotFarmer_ConditionalsIntro_9_b: Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.
        grade3_robotFarmer_ConditionalsIntro_9_c: Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times.
      grade4_arist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Bu tasarım 360 derece için on kez dönmelidir. ** 360 / 10 =? **
      grade4_arist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Bu tasarım 360 derece için 6 kez dönmelidir. ** 360 / 6 =? **
      grade4_arist_nested_loop_triangles2_authored_hint: [ ]
      grade4_arist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: |-
          İç döngü sonrası bir dönüş yapmayı unutmayın. 360 derece üzerine 6 üçgeni döngüyle yazman gerekir. 
          ** 360 / 6 =? **
      grade4_arist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "** 360 / 36 =? **"
      grade4_artist_functions1_authored_hint:
        2-3_Artist_Functions_1_a: Karelerin kenarları 100 piksel genişliğinde, buda demek oluyor ki ikinci kareyi çizmeden önce 175 piksel ilerlemelisin.
        2-3_Artist_Functions_1_b: Gözlük yapmak için çakışan çizgiler olabilir.
      grade4_artist_functions2_authored_hint:
        2-3_Artist_Functions_2_a: |2
          Programınız: 
          -Fonksiyon kullanmalıdır.
           - ileri 100 + 75 piksel ilerlemelidir
          - Fonksiyon kullanmalıdır
      grade4_artist_functions2a_authored_hint:
        grade4_artist_functions2a_a: To get around using multiple `move forward` blocks, create a `draw triangle` function and call that multiple times.
      grade4_artist_functions3a_authored_hint:
        grade4_artist_functions2a_a: To get around using multiple `move forward` blocks, create a `draw triangle` function and call that multiple times.
      grade4_artist_functions3b_authored_hint:
        grade4_artist_functions2a_a: To get around using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.
      grade4_artist_functionsChallenge0_authored_hint:
        grade4_artist_functionsChallenge0_a: |-
          Start by making a function for a square, then try making a function for a line of squares.
          
          How would you use the `draw a line of squares` function to make this image?
        grade4_artist_functionsChallenge0_b: After your first line of squares, you need to move the artist down and back before you start your second line of squares.
        grade4_artist_functionsChallenge0_c: You should move the artist back a different number of pixels for even lines than for odd ones.
      grade4_artist_functions_challenge_authored_hint:
        Course_4_SCF_1_a: Her altıgenin 40 piksel kenar uzunluğu vardır.
        Course_4_SCF_1_b: Her altıgen arasında yatay düzlemde 120 piksel atla olmalı.
        Course_4_SCF_1_c: "İkinci sıra altıgen çizmeden önce, sağa 60 derece dön ve 40 piksel ileri atla.\nDoğru dikey noktaya geldikten sonra sanatçıyı döndür ve geriye 320 piksel atla."
        Course_4_SCF_1_d: "Üçüncü sıra altıgen çizmeden önce, sağa 60 derece dön ve 40 piksel ileri atla.\nDoğru dikey noktaya geldikten sonra sanatçıyı döndür ve 440 piksel geri atla. (Fonksiyonunuzdan 120 piksel daha ileride olacak şekilde). "
        Course_4_SCF_1_e: |-
          ** Çözüm: **! [Çözüm] blokları (https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      grade4_artist_functions_challenge2_authored_hint:
        Course_4_SCF_1_a: Her altıgenin 40 piksel kenar uzunluğu vardır.
        Course_4_SCF_1_b: Her altıgen arasında yatay düzlemde 120 piksel atla olmalı.
        Course_4_SCF_1_c: "İkinci sıra altıgen çizmeden önce, sağa 60 derece dön ve 40 piksel ileri atla.\nDoğru dikey noktaya geldikten sonra sanatçıyı döndür ve geriye 320 piksel atla."
        Course_4_SCF_1_d: "Üçüncü sıra altıgen çizmeden önce, sağa 60 derece dön ve 40 piksel ileri atla.\nDoğru dikey noktaya geldikten sonra sanatçıyı döndür ve 440 piksel geri atla. (Fonksiyonunuzdan 120 piksel daha ileride olacak şekilde). "
        Course_4_SCF_1_e: |-
          ** Çözüm: **! [Çözüm] blokları (https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      grade4_artist_functions_stars0_authored_hint:
        grade4_artist_functions_stars0_a: |-
          To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.
          
          If you can't remember what the starter code was, click "start over" in the upper right corner of the workspace.
      grade4_artist_functions_stars1_authored_hint:
        grade4_artist_functions_stars1_a: Try using a function!
      grade4_artist_functions_stars2_authored_hint:
        grade4_artist_functions_stars2_a: Don't give up!  Remember what you have been learning.
        grade4_artist_functions_stars2_b: Functions make it easy to call saved code at any time, not just from inside a loop!
      grade4_artist_functions_stars3_authored_hint:
        hint1: Don't give up!
      grade4_artist_functions_windows0_authored_hint:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll create a function for it in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops, where the inner loop makes the square and the outer loop rotates the square four times.
      grade4_artist_functions_windows2_authored_hint:
        grade4_artist_functions_windows2_a: Try creating your function first then adding in windows one at a time.
        grade4_artist_functions_windows2_b: You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels forward for each top window, and 150 pixels down to get the bottom windows.
      grade4_artist_nestedLoops_challenge2_authored_hint:
        Course_4_Artist_11_a: 'Yarım altıgenin ** 30 kenar uzunluğu ** ve ** 60 derece**sağa dönüşü vardır.  '
        Course_4_Artist_11_b: '2/3 üçgeninin ** 80 kenar uzunluğunu ** ve ** 120 derece **sağa dönüşü vardır.  '
      grade4_artist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Bu tasarım 360 derece için on kez dönmelidir. ** 360 / 10 =? **
      grade4_artist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Bu tasarım 360 derece için 6 kez dönmelidir. ** 360 / 6 =? **
      grade4_artist_nested_loop_triangles2_authored_hint: [ ]
      grade4_artist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: |-
          Don't forget to make a turn after your inner loop.
          
          You'll be looping 6 triangles over 360 degrees.
          
          **6 x ? = 360**
      grade4_artist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "** 360 / 36 =? **"
      grade4_bee_conditionals_new1a_authored_hint:
        grade4_bee_conditionals_new1a_a: An `if` block will help you out in this puzzle.
      grade4_bee_conditionals_new2_authored_hint:
        grade4_bee_conditionals_new2_a: 'The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side. '
        grade4_bee_conditionals_new2_b: You can check every square for a flower using the `if` block, even if you already know there's not one there.
      grade4_bee_conditionals_new3b_authored_hint:
        grade4_bee_conditionals_new3b_a: An `if/else` statement could really help you out here.
      grade4_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
      grade4_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "** Dikkat: ** Bu bulmaca her çalıştırdığınızda değişir.   \nBu problemi çözebilmek için bir koşullu blok kullanmanız ('eğer' veya ' Eğer/Değilse') gerekiyor."
      grade4_bee_functions1_authored_hint:
        grade4_bee_functions1_a: There is more than one right answer to this puzzle.
      grade4_bee_functions10_authored_hint:
        grade4_bee_functions10_a: You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.
      grade4_bee_functions2_authored_hint:
        grade4_bee_functions2_a: The function has been written for you, but you will need to call it at each flower.
      grade4_bee_functions3_authored_hint:
        grade4_bee_functions3_a: 'Your function for this puzzle only needs to collect nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
      grade4_bee_functions4_authored_hint:
        grade4_bee_functions4_a: Your function will travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.
      grade4_bee_functions6_authored_hint:
        grade4_bee_functions6_a: Edit the function so that it solves the puzzle without having to change the main program.
        grade4_bee_functions6_b: "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- turn around\n- move back to the main path\n- turn back to the direction that the bee started from"
      grade4_bee_functions7_authored_hint:
        2-3_Bee_Functions_8_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız!  ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      grade4_bee_functions8_authored_hint:
        2-3_Bee_Functions_8_a: "Bulmaca zorlu görünüyorsa, fonksiyonu her seferinde bir blok ekleyerek oluşturun.\n Bazı bloklar ekleyin, sonra çalıştırın. Daha fazla blok ekleyin, sonra yeniden deneyin.  Çözüme ulaşacaksınız! "
        2-3_Bee_Functions_8_b: |-
          Kodunu yeşil fonksiyon bloğu içinde oluştur. ! [] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        2-3_Bee_Functions_8_c: This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back.
      grade4_bee_functions9_authored_hint:
        grade4_bee_functions9_a: Your function will only need to collect nectar... but this time, you will need to use a `while` loop instead of a `repeat` loop.
        grade4_bee_functions9_b: Use `while nectar > 0` to make sure you get all of the nectar.
      grade4_bee_nestedLoops1_authored_hint:
        grade4_bee_nestedLoops1_a: If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see.
      grade4_bee_nestedLoops2_authored_hint:
        grade4_bee_nestedLoops2_a: You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.
        grade4_bee_nestedLoops2_b: You will need to use all three of the available `repeat` blocks to solve this puzzle.
        grade4_bee_nestedLoops2_c: |-
          Nest your blocks three deep, like this:
          
          - repeat 3
          - repeat 3
          - move forward
          - repeat 12
          - get nectar
          - turn right
      grade4_bee_nestedLoops2a_authored_hint:
        grade4_bee_nestedLoops2a_a: Try using nested `repeat` loops to solve this puzzle.
      grade4_bee_nestedLoops4_authored_hint:
        grade4_bee_nestedLoops4_a: Try building your code line by line and see if you can spot the places where a repeat will make the code shorter!
        grade4_bee_nestedLoops4_b: |-
          You will need a nested loop to move forward and get nectar, but only a single loop to collect honey at the end.
          
          Altogether, you should be using 3 loops.
      grade4_bee_nestedLoops5_authored_hint:
        grade4_bee_nestedLoops5_a: You will need 4 repeat blocks!
      grade4_review_artist1_authored_hint:
        2-3_Artist_1_new_a: Eğer 'İleriye Taşı 100 Piksel' blokunu kullanırsan, otomatik olarak bir çizgi çizeceğim.
        2-3_Artist_1_new_b: Köşeyi çevirirken sorun mu yaşıyorsunuz? `90 derece sağa dön` bloğunu kullanın.
      grade4_review_artist2_authored_hint:
        2-3_Artist_6_a: 'Bu minik perileri yapmak için her seferinde karede olduğundan daha fazla dön.   '
        2-3_Artist_6_b: ' Zaten sağa dönük durduğum için ileri hareket ettirerek başlamanız en kolayı, sonra üçgen oluşturmak için sol dönüşler yapın.'
        2-3_Artist_6_c: Üçgenin her kenarı karenin bir kenarı ile aynı uzunlukta ... 100 piksel!
      grade4_review_bee1_authored_hint:
        2-3_Bee_Loops_3B_a: Birbiri ardına İki farklı döngü gerekir.
      grade4_review_bee2_authored_hint:
        2-3_Bee_Loops_3_a: Döngü içinde 6 blok olsun.
      grade4_review_bee3_authored_hint:
        2-3_Bee_Loops_4_a: Döngü içinde 5 blok olsun.
      grade5_artist_binary10_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Bu kod iki 'şununla say döngüsü' kullanır. İlki 1'den 8'e, diğeri ise 8'den 1'e geriye doğru sayıyor.
        Course_4_Artist_Binary_Free_Play_2b_b: Her 'şununla say döngüsü' üç kez tekrarlanır.  İlki en soldaki 1'leri, ikincisi ortadaki 0'ları ve üçüncüsü sağdaki 1'leri çizer.
        Course_4_Artist_Binary_Free_Play_2b_c: Her tekrarda 'sayac' değeri kadar 1 ve 16-(2 x sayaç) sayısı kadar 0 olmalı.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Solution:**
          ![solution](https://images.code.org/866a92e042a546de3afcf462a8b5c695-image-1444438735003.58.28.png)
      grade5_artist_for_loops1_authored_hint:
        grade5_artist_for_loops1_a: |-
          If you use this `for` loop, it will run just like a `repeat 3 times` loop.
          
          ![](https://images.code.org/585d2e24f3021ac2561aec6e96dde430-image-1475906135993.54.11.png)
      grade5_artist_for_loops10_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: En büyük çokgenin 19 kenarı vardır.
        Course_4_Artist_For_Loops_Challenge_b: Her çokken olması gereken kenar sayısından bir eksik kenara sahiptir.
      grade5_artist_for_loops1b_authored_hint:
        grade5_artist_for_loops1b_a: |-
          Can you draw something like this:
          
          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      grade5_artist_for_loops2_authored_hint:
        grade5_artist_for_loops2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.
          
          ![](https://images.code.org/5e9465321a0b7a4d791848a79f3e6715-image-1475908305872.31.26.png)
      grade5_artist_for_loops3_authored_hint:
        Course_4_Artist_For_Loops_3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.
          
          ![](https://images.code.org/15e87fc7fe408cbf1b63e0e8e69b7ffe-image-1475908502078.31.26.png)
      grade5_artist_for_loops4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "** İhtiyacınız olacak en küçük sayı nedir?   \nEn büyük sayı nedir?   \nHer defasında artış ne kadar? ** \n'Şununla say döngüsü' için boşlukları doldururken sorman gereken sorular bunlardır."
      grade5_artist_for_loops5_authored_hint:
        grade5_artist_for_loops5_a: You don't need the traditional repeat loop when making this spiral!
      grade5_artist_for_loops7_authored_hint:
        grade5_artist_for_loops7_a: The pen is thinner in this puzzle. You will need to set it to `1` before you start.
        grade5_artist_for_loops7_b: Notice that this spiral turns right instead of left!
      grade5_artist_for_loops7a_authored_hint: [ ]
      grade5_artist_for_loops7b_authored_hint: [ ]
      grade5_artist_for_loops8_authored_hint:
        Course_4_Artist_For_Loops_11_a: "Dönüş açısı ile her şekil ile değişecek!    Matematik blokları kullanarak  \"360 bölü şeklin kenar sayısı\" ile döneceğin açıyı hesapla. "
      grade5_artist_for_loops9_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360/kenar sayısı değeri dönmen gereken açıyı verir.'
        Course_4_Artist_For_Loops_11a_b: 'Her seferinde şeklin kenar sayısının 10 katı kadar ilerlemen gerekiyor. '
      grade5_artist_for_loopsfreeplay11_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: Bu kodun temeli bir önceki bulmaca ile aynıdır. Sadece birkaç basit değişiklik gerekir.
        Course_4_Artist_For_Loops_inspire_b: 10 dan 3 e birer birer sayan 'şununla say döngüsü' kullanmayı dene.
        Course_4_Artist_For_Loops_inspire_c: '''Şununla say döngüsü'' içinde iki adet ''tekrarla döngüsü'' vardır. Fakat ikincisi ters yöne döner.'
        Course_4_Artist_For_Loops_inspire_d: "**Solution:**  ![Solution](https://images.code.org/d619892fc17ff491c201d86bb917e523-image-1441005190828.12.30.png) "
      grade5_artist_for_loopsfreeplay12_authored_hint:
        grade5_artist_for_loopsfreeplay12_a: The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.
        grade5_artist_for_loopsfreeplay12_b: The image in the drawing uses a turn of 61 degrees.
        grade5_artist_for_loopsfreeplay12_c: |-
          Want to know how the sample image was done?
          
          ![](https://images.code.org/fdc5d6c15b357ba9763ac9ea914967a9-image-1475911612774.23.51.png)
      grade5_artist_functionparameters10_authored_hint:
        brush_width: Fırça kalınlığını 1 yap ve başka bir hamle yapmadan rengini maviye ayarla.
        double_loop: '''Tekrarla'' bloğu içine ''for döngüsü'' koymayı dene.'
        specifics: "'For döngüsü' altı 'taç yaprağın' her biri için 3 ten 17 ye kadar sayıyor ve sonraki şekle geçmeden önce sadece tek sayıda kenarı olan çokgenler çiziyor.  \n'alfa_ayarla' bloğu sayaç değeri arttıkça bölme işlemini kullanarak rengin soluklaşmasını sağlıyor."
        after: Her "taç yaprak" ile işiniz bittiğinde, 60 derece dönmeden önce 20 piksel 'ilerle' komutu kullandığınızdan emin olun.
        solution: |-
          **Solution**
          
          ![](https://images.code.org/7e9f4be39d45726d537fe8e6e9147986-image-1456445254361.png)
      grade5_artist_functionparameters8_authored_hint:
        NEW_Course_4_Artist_Params_13_a: The length of sides for each shape is 7 times the number of sides it has.
      grade5_artist_functionparameters9_authored_hint:
        NEW_Course_4_Artist_Params_14_a: Fonksiyonun farklı parametrelerle nasıl çalıştığını anlamak için birkaç kere programı normaldir.
        grade5_artist_functionparameters9_b: You don't need to add any `move` or `turn` blocks to finish this code.
      grade5_artist_functionparameters9a_authored_hint:
        grade5_artist_functionparameters9a_a: 'Did the code get so scrambled up that it''s no longer recognizable?  Try clicking the "Start over" button in the upper righthand corner. '
        grade5_artist_functionparameters9a_b: Your new `min` variable should go in the first slot in your `for` loop, inside the function.
      grade5_artist_functionparameters9b_authored_hint:
        grade5_artist_functionparameters9b_a: If your function is correct, you shouldn't need to change it for this puzzle.
        grade5_artist_functionparameters9b_b: The only thing you should need to do between function calls is change the color of the line.
      grade5_artist_functionparameters_6_authored_hint:
        grade5_artist_functionparameters_6_a: Use a `for` loop to get the code as smooth as you can.
        grade5_artist_functionparameters_6_b: Remember to **add** a parameter.  Don't remove the one that is already there!
      grade5_artist_parameters_squares1a_authored_hint:
        grade5_artist_parameters_squares1a_a: Remember, you need to turn 90 degrees to draw a square.
        grade5_artist_parameters_squares1a_b: You only need to repeat as many times as the number of sides in a square.
      grade5_artist_parameters_squares2_authored_hint:
        grade5_artist_parameters_squares2_a: This gets easier if you put it all in a `for` loop.
        grade5_artist_parameters_squares2_b: |-
          Be sure to turn 90 degrees between each square!
          
          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      grade5_artist_parameters_squares2a_authored_hint:
        grade5_artist_parameters_squares2a_a: You need to click the "edit" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!
        grade5_artist_parameters_squares2a_b: When calling your function, use a `for loop` for the best possible code!
      grade5_artist_parameters_stars1_authored_hint:
        hint1: Don't give up!
      grade5_artist_variables_freeplay10_authored_hint:
        Course_4_Artist_Vars_8_a: Başlangıç uzunluğunu kenar sayısına bölersen, kenar sayısı arttıkça kenar uzunluğu azalacaktır.
      grade5_artist_variables_freeplay15_authored_hint:
        Course_4_Artist_Inspire_a: Bir kareyi tamamladıktan sonra, dönmeden ve yeni bir tane çizmeden önce kenar uzunluğunun yarısı kadar ileri atlayın.
        Course_4_Artist_Inspire_b: Bir rüzgar gülü çizmek için her bir kare ve atlama 4 kez tekrarlanıyor(aralarında sola dönüş var).
        Course_4_Artist_Inspire_c: Her bir rüzgar gülü sağa ** 360/kenar** değerinde dönüş açısıyla 4 kez tekrarlanıyor.
        Course_4_Artist_Inspire_d: |-
          **Solution:**
          ![Blocks for solution](https://images.code.org/1865aaf1b4a8ba84a5e8a7408401092d-image-1440060930335.43.39.png)
      grade5_artist_variables_octagons13_authored_hint:
        Course_4_Artist_Vars_13_a: İç içe İki adet 'tekrarla döngüsü' kullanmalısın ve her biri kenar sayısı kadar tekrarlamalı.
        Course_4_Artist_Vars_13_b: "İç 'tekrarla döngüsü' (sola dönerek) bir sekizgen çizer.        Daha sonra sadece dıştaki döngünün içinde ilerleyip sağa dönün."
        Course_4_Artist_Vars_13_c: Kenar sayısı değiştiğinde şeklin boyutunun aynı kalması için matematik bloğunu kullanarak piksel uzunluğunu kenar sayısına bölün.
      grade5_artist_variables_square7_authored_hint:
        Course_4_Artist_Vars_6_a: Bir çokgen çizmek için ** 360 / kenar ** kadar dönün.
      grade5_artist_variables_triangles1_authored_hint:
        grade5_artist_variables_triangles1_a: Bu üçgende iç açıyı 60 derece yapmak için sanatçıyı 120 derece döndürmeyi unutmayın.
        grade5_artist_variables_triangles1_b: Kodunuzu kısaltmak için 'tekrarla' döngüsünü kullanın.
        grade5_artist_variables_triangles1_c: Döngünüzün içinde, 50 piksel ilerlemek sonra 120 derece sola dönmek isteyeceksiniz.
      grade5_artist_variables_triangles1_2018_authored_hint:
        grade5_artist_variables_triangles1_a: Bu üçgende iç açıyı 60 derece yapmak için sanatçıyı 120 derece döndürmeyi unutmayın.
        grade5_artist_variables_triangles1_b: Kodunuzu kısaltmak için 'tekrarla' döngüsünü kullanın.
        grade5_artist_variables_triangles1_c: Döngünüzün içinde, 50 piksel ilerlemek sonra 120 derece sola dönmek isteyeceksiniz.
      grade5_bee_for_loops10_authored_hint:
        grade5_bee_for_loops10_a: "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
      grade5_bee_for_loops11_authored_hint:
        NEW_Course_4_Bee_For_Loops_10a_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        NEW_Course_4_Bee_For_Loops_10a_b: You'll need to have 2 repeats, one will use a math block.
      grade5_bee_for_loops3_authored_hint:
        grade5_bee_for_loops3_a: 'Use the `counter` variable inside the `repeat` loop where nectar is gathered to solve this puzzle. '
        grade5_bee_for_loops3_b: Your `for` loop will need to count from 1 to 5 with an increment of 1.
      grade5_bee_for_loops4_authored_hint:
        grade5_bee_for_loops4_a: Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.
        grade5_bee_for_loops4_b: Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!
      grade5_bee_for_loops5_authored_hint:
        grade5_bee_for_loops5_a: This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops.
      grade5_bee_for_loops6_authored_hint:
        grade5_bee_for_loops6_a: Don't forget to use a `counter` variable inside your `repeat` loop.
      grade5_bee_for_loops7_authored_hint:
        grade5_bee_for_loops7_a: Your `for` loop will need to count from 1 to 7 by 2.
      grade5_bee_for_loops8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?"
      grade5_bee_for_loops9_authored_hint:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        NEW_Course_4_Bee_For_Loops_7_b: 'Remember: If your loop is counting up, the increment is added to your `counter` variable each time through.'
      grade5_bee_parameters_new1_authored_hint:
        grade5_bee_parameters_new1_a: Use `if` statements to make sure you're only getting nectar from a flower.
      grade5_bee_parameters_new2_authored_hint:
        grade5_bee_parameters_new2_a: "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        grade5_bee_parameters_new2_b: Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built.
      grade5_bee_parameters_new3_authored_hint:
        grade5_bee_parameters_new3_a: Your function will run no matter which direction you're facing.
      grade5_bee_parameters_new4_authored_hint:
        grade5_bee_parameters_new4_a: You will need to add a parameter and use the resulting variable in your loop.
      grade5_bee_parameters_new5_authored_hint:
        grade5_bee_parameters_new5_a: Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.
      grade5_bee_parameters_new6_authored_hint:
        grade5_bee_parameters_new6_a: Which block automatically increments a variable that you could use as a parameter?
      grade5_bee_parameters_new7_authored_hint:
        grade5_bee_parameters_new7_a: You don't need a second parameter for this function, only a second `if` statement.
      grade5_bee_parameters_new8a_authored_hint:
        grade5_bee_parameters_new8a_a: This spiral can be simplified with a `for` loop.
      grade5_bee_parameters_new9a_authored_hint:
        grade5_bee_parameters_new9a_a: A `for` loop can help you with this stair step pattern, too!
        grade5_bee_parameters_new9a_b: For each stair, you'll need to call the function once, turn right, call the function again, then turn left.
      grade5_playlab_variables2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Köpeğin hızını 'Dog_speed' değerini kedinin hızından 'cat_speed' değerinden büyük yaptığınızdan emin olun.
      gradeK_sequence_4_authored_hint:
        gradeK_sequence_4_a: Try writing down the steps on paper to find a solution!
      gradek_adventurer_loops3_authored_hint:
        gradek_adventurer_loops3_a: Maceracının ne kadar uzağa gideceğini değiştirmek için, döngünün çalışma sayısını değiştirin.
        gradek_adventurer_loops3_b: '`Tekrarla` döngüsünü bitirdikten sonra maceracının aşağı yürüyüp altın toplaması gerektiğini unutmayın!'
      gradek_adventurer_loops4_authored_hint:
        gradek_adventurer_loops4_a: Cevabı hemen bulamıyorsanız, hangi oka ihtiyacınız olduğunu anlamak için bir kağıt parçası kullanın ve bir desen arayın.
      gradek_adventurer_loops4a_authored_hint:
        gradek_adventurer_loops4a_a: Can't figure out what's wrong? Try running the code to see what happens.
      gradek_adventurer_loops5_authored_hint:
        gradek_adventurer_loops5_a: Sonrasında ne olacağını anlayamıyorsanız, Laurel'in nereye gideceğini görmek için kodu çalıştırmayı deneyin.
      gradek_adventurer_loops6_authored_hint:
        gradek_adventurer_loops6_a: If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper and look for a pattern.
      gradek_adventurer_loops7_challenge_authored_hint:
        gradek_adventurer_loops7_challenge_a: Kod çok mu uzun gözüküyor? Kısaltmak için "tekrarla" döngülerinizden ikisini başka bir döngünün içine koymayı deneyin!
      gradek_adventurer_loops8_authored_hint:
        gradek_adventurer_loops8_a: If you can't figure out where to put the loops, try writing the code out step-by-step and look for a pattern.
      gradek_adventurer_loops9_authored_hint:
        gradek_adventurer_loops9_a: If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.
      gradek_artist_loops1_authored_hint:
        gradek_artist_loops1_a: Can't figure out how to draw a line?  Start attaching blocks to the `when run` block to see what happens.
      gradek_artist_loops2_authored_hint:
        gradek_artist_loops2_a: Is something not quite right?  Use the "Step" button to see where things go wrong.
      gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: Eğer döngünün 4 defadan fazla tekrarlamasını istiyorsan bloğun üstündeki sayıyı değiştirebilirsin.
      gradek_artist_loops4_authored_hint:
        artistLoopsK3_a: Tekrarla bloğu hakkında öğrendiklerini bu bulmacayı tamamlamak için kullan!
      gradek_artist_loops5_authored_hint:
        gradek_artist_loops5_a: Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.
      gradek_artist_loops6_authored_hint:
        gradek_artist_loops6_a: Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.
      gradek_artist_loops7_authored_hint:
        gradek_artist_loops7_a: Try running the code to see what has been written for you.
        gradek_artist_loops7_b: How would you loop the code that has been given to you?
        gradek_artist_loops7_c: "What does the code do?  \nWhat is it supposed to do?  \nWhat does that tell you?"
      gradek_artist_loops8_authored_hint:
        gradek_artist_loops8_a: 'You don''t have to delete everything!  Some of the code is good. Use it to build the rest of the stairs. '
      gradek_artist_loops9_authored_hint:
        artistLoopsKA_a: Çizgi çizmeden ileri hareket etmek için 'İleri atla' bloğu kullan.
      gradek_artist_loopsA_authored_hint:
        artistLoopsKB_a: There should be 2 blocks inside of your loop to solve this puzzle.
      gradek_artist_loopsFP_authored_hint: [ ]
      gradek_playlab_events1a_authored_hint:
        gradek_playlab_events1a_a: Attach the `move up` block to the `when click` event so that the cat moves up when the "up" button is pressed.
      gradek_playlab_events1c_authored_hint:
        gradek_playlab_events1c_a: "Here is the block you should connect to the `when run` block: \n\n![](https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
      gradek_playlab_events2c_authored_hint:
        gradek_playlab_events2c_a: drag this block out ![](https://images.code.org/b3d6215901969328333d6393f8101c5b-image-1478142333199.png) and connect it to ![](https://images.code.org/4f2130b2a3053695414a02c3d39ef864-image-1478143461271.png)
      gradek_playlab_events3c_authored_hint:
        gradek_playlab_events3c_a: |-
          Here is the event block that you will need to get Jorge to move right:
          
          ![](https://images.code.org/cfc4b696b1ad5762ff40c1c8a17a194d-image-1478141370249.png)
        gradek_playlab_events3c_b: |-
          Here is the block you should connect to the `when right` event:
          
          ![](https://images.code.org/e5c559cc1deef643c8b997d17ecb78e3-image-1478141726783.png)
      gradek_playlab_events4c_authored_hint:
        gradek_playlab_events4c_a: "Here are the event blocks that you will need to use to move Jorge up and down:\n\n![](https://images.code.org/cf9a6992f7b4619dfb592fb6905effbb-image-1478140906017.png)\nand \n![](https://images.code.org/bb2a117cef485e79119a63e5d027968e-image-1478140979742.png)"
      gradek_playlab_events5c_authored_hint:
        gradek_playlab_events5c_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:
          
          ![](https://images.code.org/6e3a654378643fd0590307ec3a0e429c-image-1478140058859.png)
        gradek_playlab_events5c_b: |-
          Here is the block you would use to change the background:
          
          ![](https://images.code.org/3f6d7a642b37c3abffe7b0de062ea076-image-1478140261440.png)
        gradek_playlab_events5c_c: |-
          Here is the block you would use to play a random sound:
          
          ![](https://images.code.org/81a8ef4f64023039438199fef67bb56b-image-1478140125332.png)
      gradek_playlab_eventsA_authored_hint:
        gradek_playlab_eventsA_a: |-
          If this seems like too much to do, try breaking it down into steps:
          
          1)  Have the actor change to a random size on click.
          2) Play a random sound when you click the actor.
          
          Now, make sure both of those actions are attached underneath the same event!
      harvester_Kahoot_authored_hint:
        courseE_farmer_functions1a_a: Think through the `if/else` statements step by step. What should you do if you are standing at a corn plant?
        courseE_farmer_functions1a_b: Eğer mısırda değilsen, bir sonrakinde hangi mahsulü kontrol etmelisin?
      harvey_snowflake_artist1_authored_hint: [ ]
      harvey_snowflake_artist2_authored_hint: [ ]
      harvey_tictactoe_authored_hint:
        harvey_tictactoe: Atla bloğu ile başka alanlara gidebilirsiniz.
      iceAgeLoopsforVideo_authored_hint: [ ]
      iceage_click_hello_authored_hint:
        iceage_click_hello_a: Bu bulmacayı tamamlamak için 'tıklandığı zaman' olayına 'bir ya da daha fazla 'aktör 1 de' bloku ekle.
      iceage_click_hello_2018_authored_hint:
        iceage_click_hello_a: Bu bulmacayı tamamlamak için 'tıklandığı zaman' olayına 'bir ya da daha fazla 'aktör 1 de' bloku ekle.
      iceage_free_play_authored_hint:
        iceage_free_play_a: 'Sid ve Manny''ye buz kristali savaşı yaptırabilir misin?  '
        iceage_free_play_b: Granny'ye Dieogo'yu kovalattırın. Onu yakalarsa oyunu kazanmış olarak sonlandırın.
        iceage_free_play_c: Sid'in Dieogo'ya kar taneleri fırlatmasını ve kar taneleri her dokunduğunda Diego'nun daha büyük olmasını sağla? Diego 5 kez vurulduğunda oyunu kazanmış olarak sonlandır.
      iceage_free_play_2018_authored_hint:
        iceage_free_play_a: 'Sid ve Manny''ye buz kristali savaşı yaptırabilir misin?  '
        iceage_free_play_b: Granny'ye Dieogo'yu kovalattırın. Onu yakalarsa oyunu kazanmış olarak sonlandırın.
        iceage_free_play_c: Sid'in Dieogo'ya kar taneleri fırlatmasını ve kar taneleri her dokunduğunda Diego'nun daha büyük olmasını sağla? Diego 5 kez vurulduğunda oyunu kazanmış olarak sonlandır.
      iceage_free_playcourseF_IceAge_11_authored_hint:
        iceage_free_play_a: 'Sid ve Manny''ye buz kristali savaşı yaptırabilir misin?  '
        iceage_free_play_b: Granny'ye Dieogo'yu kovalattırın. Onu yakalarsa oyunu kazanmış olarak sonlandırın.
        iceage_free_play_c: Sid'in Dieogo'ya kar taneleri fırlatmasını ve kar taneleri her dokunduğunda Diego'nun daha büyük olmasını sağla? Diego 5 kez vurulduğunda oyunu kazanmış olarak sonlandır.
      iceage_hello1_authored_hint:
        iceage_hello1_a: Bu bulmacayı çözmek için yalnızca bir blok eklemeniz gerekiyor. Araç çubuğundan 'söyle' bloğunu sürükleyin ve bu bloğu çalışma alanında zaten bulunan 'çalıştığı zaman' olay bloğuna bağlayın. Daha sonra, içine "Merhaba!" yazın.
      iceage_hello1_2018_authored_hint:
        iceage_hello1_a: Bu bulmacayı çözmek için yalnızca bir blok eklemeniz gerekiyor. Araç çubuğundan 'söyle' bloğunu sürükleyin ve bu bloğu çalışma alanında zaten bulunan 'çalıştığı zaman' olay bloğuna bağlayın. Daha sonra, içine "Merhaba!" yazın.
      iceage_hello2_authored_hint:
        iceage_hello2_a: 'Bu bulmacayı çözmek için Sid''in ''aktör 1 de'' blokunu kullanarak bir şeyler söylemesini sağlaman gerekir. Bunun yanında Manny''nin de ''aktör 2 de'' bloku ile bir şeyler söylemesini sağlaman gerekir. '
      iceage_hello2_2018_authored_hint:
        iceage_hello2_a: 'Bu bulmacayı çözmek için Sid''in ''aktör 1 de'' blokunu kullanarak bir şeyler söylemesini sağlaman gerekir. Bunun yanında Manny''nin de ''aktör 2 de'' bloku ile bir şeyler söylemesini sağlaman gerekir. '
      iceage_move_events_authored_hint:
        iceage_move_events_a: 'Bu bulmacayı çözmek için her bir ''Ne zaman ok'' olayının farklı bir ''taşı aktör 1'' komutuyla bağlanması gerekir. '
      iceage_move_events_2018_authored_hint:
        iceage_move_events_a: 'Bu bulmacayı çözmek için her bir ''Ne zaman ok'' olayının farklı bir ''taşı aktör 1'' komutuyla bağlanması gerekir. '
      iceage_move_to_actor_authored_hint:
        iceage_move_to_actor_a: Bu bulmaca için Diego'yu 200 piksel aşağıya ya da Manny'yi 200 piksel yukarıya taşıyabilirsin.
        iceage_move_to_actor_b: Bu meydan okumayı bitirmek için '___ sesi çal' blokunu 'aktör 1 aktör 2ye dokunduğunda' blokuna bağla.
      iceage_move_to_actor_2018_authored_hint:
        iceage_move_to_actor_a: Bu bulmaca için Diego'yu 200 piksel aşağıya ya da Manny'yi 200 piksel yukarıya taşıyabilirsin.
        iceage_move_to_actor_b: Bu meydan okumayı bitirmek için '___ sesi çal' blokunu 'aktör 1 aktör 2ye dokunduğunda' blokuna bağla.
      iceage_move_to_flag_authored_hint:
        iceage_hello3_a: '''taşı aktör 1 sağa 200 piksel'' blokunu bu bulmacayı çözmek için kullan.'
      iceage_move_to_flag_2018_authored_hint:
        iceage_hello3_a: '''taşı aktör 1 sağa 200 piksel'' blokunu bu bulmacayı çözmek için kullan.'
      iceage_repeat_authored_hint:
        iceage_repeat_a: Bu bulmacayı çözmek için 'taşı aktör 1 sola' ve 'taşı aktör 1 sağa' bloklarının her ikisini de kullan.
      iceage_repeat_2018_authored_hint:
        iceage_repeat_a: Bu bulmacayı çözmek için 'taşı aktör 1 sola' ve 'taşı aktör 1 sağa' bloklarının her ikisini de kullan.
      iceage_sound_and_points_authored_hint:
        iceage_sound_and_points_a: '''aktör 1 aktör 2ye dokunduğunda'' olayının altına 2 blok eklemeniz gerekir.'
        iceage_sound_and_points_b: Bu bölümü geçmek için 'skor puanı' bloku ve '____ sesini çal' blokunun ikisine de ihtiyacın var.
      iceage_sound_and_points_2018_authored_hint:
        iceage_sound_and_points_a: '''aktör 1 aktör 2ye dokunduğunda'' olayının altına 2 blok eklemeniz gerekir.'
        iceage_sound_and_points_b: Bu bölümü geçmek için 'skor puanı' bloku ve '____ sesini çal' blokunun ikisine de ihtiyacın var.
      iceage_throw_hearts_authored_hint:
        iceage_throw_hearts_a: Granny'ye kalpleri ne zaman fırlatmalısın? Oka basıldığında mı? Sid'e tıklandığı zaman mı? Granny'ye tıkladığın zaman mı? Karar senin!
        iceage_throw_hearts_b: Kalp aldığında Granny'yi mutlu etmek için, 'ayarla aktör 2 mutlu ruh haline' blokunu 'aktör 2 mermiye dokunduğunda' olayına bağlaman gerekir.
      iceage_throw_hearts_2018_authored_hint:
        iceage_throw_hearts_a: Granny'ye kalpleri ne zaman fırlatmalısın? Oka basıldığında mı? Sid'e tıklandığı zaman mı? Granny'ye tıkladığın zaman mı? Karar senin!
        iceage_throw_hearts_b: Kalp aldığında Granny'yi mutlu etmek için, 'ayarla aktör 2 mutlu ruh haline' blokunu 'aktör 2 mermiye dokunduğunda' olayına bağlaman gerekir.
      iceage_warn_embed_ice_age_authored_hint: [ ]
      iceage_warn_ice_age_authored_hint:
        iceage_warn_ice_age_a: 'Bulmacayı çözmek için sadece uygun olan yere 2 blok eklemelisin. '
        iceage_warn_ice_age_b: Program başladıktan hemen sonra onlara sahip olmak için 'Çalıştığı zaman' olayının altına 2 yeni blok ekle.
      iceage_warn_ice_age_2018_authored_hint:
        iceage_warn_ice_age_a: 'Bulmacayı çözmek için sadece uygun olan yere 2 blok eklemelisin. '
        iceage_warn_ice_age_b: Program başladıktan hemen sonra onlara sahip olmak için 'Çalıştığı zaman' olayının altına 2 yeni blok ekle.
      k1stickerfreeplay_authored_hint: [ ]
      level 'grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Döngü içinde 5 blok olsun.
      level 'grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Eğer tekrarla bloğunun içine koyacak blokları henüz bulamadıysan, teker teker kodla ve tekrar eden yerlere dikkat et.
      level 'grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Eğer tekrarla bloğu içine hangi blokların gireceğini bulamadıysan teker teker eklemeyi dene.
        2-3_Bee_Loops_6_b: İşiniz bittiğinde, 'tekrarla' döngüsü içinde 6 blok olmalıdır.
      level 'grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Birbiri ardına İki farklı döngü gerekir.
      level 'grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: İlk eylem 'ilerle' yerine bir 'dönüş' olacak.
        2-3_Bee_Loops_7_b: 'Eğer döngüyü başlangıçta göremiyorsan, uzun şekilde yap ve tekrarlara dikkat et.  '
      level 'grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: İlk eylem 'ilerle' yerine bir 'dönüş' olacak.
        2-3_Bee_Loops_4A_b: Programın son parçası döngü sonrasına yazacağınız kod olmalı.
        2-3_Bee_Loops_4A_c: Eğer döngüleri henüz bulmadıysanız, uzun yoldan kodlayıp neleri 'tekrarla' bloğu ile döngüye dönüştürebileceğinize bakın.
      level 'grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Döngü içinde 4 blok olsun.
      level 'grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Döngü içinde 6 blok olsun.
      playLabDebugVideo1_authored_hint:
        courseA_playLab_events2_a: "Here is the block you should connect to the `when run` block: \n\n![](https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
      sample3_authored_hint:
        sample3_a: |-
          Try writing the code once and looping it seven times:
          
          ![](https://images.code.org/2a116e75e31ee3a8a8683349c9460286-image-1464307689813.gif)
      sample5_authored_hint:
        sample5_a: Did you know that you can put as many blocks inside of a repeat loop as you want to?
        sample5_b: |-
          The bee is looping these actions over and over again:
          - move forward
          - make honey
          - turn left
          - move forward
          - turn right
      sample6_authored_hint:
        sample6_a: Did you know that you can use more than one repeat loop in a puzzle?
        sample6_b: Sometimes repeat loops have lots of blocks inside, and sometimes they might only have one!
      sample7assessment_authored_hint: [ ]
