co:
  data:
    script:
      name:
        course1:
          title: Course 1
          description: Start with Course 1 for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for grades K-1.
          description_short: Introduction to computer science for early readers.
          description_audience: Ages 4-6
          stages:
            'Artist: Loops':
              name: 'Artist: Loops'
            'Artist: Sequence':
              name: 'Artist: Sequence'
            'Artist: Shapes':
              name: 'Artist: Shapes'
            'Bee: Loops':
              name: 'Bee: Loops'
            'Bee: Sequence':
              name: 'Bee: Sequence'
            Building a Foundation:
              name: Building a Foundation
            Getting Loopy:
              name: Getting Loopy
            Going Places Safely:
              name: Going Places Safely
            Happy Maps:
              name: Happy Maps
            'Jigsaw: Learn to drag and drop':
              name: 'Jigsaw: Learn to drag and drop'
            'Maze: Debugging':
              name: 'Maze: Debugging'
            'Maze: Loops':
              name: 'Maze: Loops'
            'Maze: Sequence':
              name: 'Maze: Sequence'
            Move it, Move it:
              name: Move it, Move it
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Spelling Bee:
              name: Spelling Bee
            'Studio: Create a Story':
              name: 'Play Lab: Create a Story'
            The Big Event:
              name: The Big Event
        course2:
          title: Course 2
          description: Start with Course 2 for students who can read and have no prior programming experience. In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for grades 2-5.
          description_short: Introduction to computer science for students who can read.
          description_audience: Ages 6+ (reading required)
          stages:
            'Artist: Debugging':
              name: 'Artist: Debugging'
            'Artist: Loops':
              name: 'Artist: Loops'
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            'Artist: Sequence':
              name: 'Artist: Sequence'
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            'Bee: Debugging':
              name: 'Bee: Debugging'
            'Bee: Loops':
              name: 'Bee: Loops'
            Binary Bracelets:
              name: Binary Bracelets
            Conditionals:
              name: Conditionals
            Flappy:
              name: Flappy
            Getting Loopy:
              name: Getting Loopy
            Graph Paper Programming:
              name: Graph Paper Programming
            'Maze: Loops':
              name: 'Maze: Loops'
            'Maze: Sequence':
              name: 'Maze: Sequence'
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            Relay programming:
              name: Relay programming
            'Studio: Create a Story':
              name: 'Play Lab: Create a Story'
            The Big Event:
              name: The Big Event
            Your Digital Footprint:
              name: Your Digital Footprint
        course3:
          title: Course 3
          description: Course 3 is designed for students who have taken Course 2. Students will delve deeper into programming topics introduced in previous courses to create flexible solutions to more complex problems. By the end of this course, students create interactive stories and games they can share with anyone. Recommended for grades 4-5.
          description_short: Delve even deeper into programming while building games and interactive stories. This is a follow-up to Course 2.
          description_audience: Ages 8-18
          stages:
            Artist:
              name: Artist
            'Artist: Functions':
              name: 'Artist: Functions'
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            'Artist: Patterns':
              name: 'Artist: Patterns'
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            'Bee: Debugging':
              name: 'Bee: Debugging'
            'Bee: Functions':
              name: 'Bee: Functions'
            'Bee: Nested Loops':
              name: 'Bee: Nested Loops'
            Bounce:
              name: Bounce
            Computational Thinking:
              name: Computational Thinking
            Crowdsourcing:
              name: Crowdsourcing
            Dice Race:
              name: Dice Race
            Digital Citizenship:
              name: Digital Citizenship
            'Farmer: While Loops':
              name: 'Farmer: While Loops'
            Functional Suncatchers:
              name: Functional Suncatchers
            Internet:
              name: Internet
            Maze:
              name: Maze
            'Maze: Conditionals':
              name: 'Maze: Conditionals'
            Songwriting:
              name: Songwriting
            'Studio: Create a Game':
              name: 'Play Lab: Create a Game'
            'Studio: Create a Story':
              name: 'Play Lab: Create a Story'
        playlab:
          title: Play Lab
          description: Create a story or make a game with Play Lab!
          description_short: Create a story or make a game with Play Lab!
          stages:
            Play Lab:
              name: Play Lab
        artist:
          title: Artist
          description: Draw cool pictures and designs with the Artist!
          description_short: Draw cool pictures and designs with the Artist!
          stages:
            Artist:
              name: Artist
        hourofcode:
          title: Classic Maze
          description: Try the basics of computer science with characters from Angry Birds, Plants vs. Zombies, and Scrat from Ice Age!
          description_short: Try the basics of computer science with many fun characters!
          stages:
            Maze:
              name: Maze
        frozen:
          title: Code with Anna and Elsa
          description: Let's use code to join Anna and Elsa as they explore the magic and beauty of ice. You will create snowflakes and patterns as you ice-skate and make a winter wonderland that you can then share with your friends!
          description_short: Let's use code to join Anna and Elsa as they explore the magic and beauty of ice.
          stages:
            Artist:
              name: Artist
        course4:
          title: Course 4
          description: Course 4 is designed for students who have taken Courses 2 and 3. Students will learn how to tackle puzzles with increased complexity as they learn how to combine several concepts when solving each challenge. By the time this Course is completed, students will be creating programs that let them showcase multiple skills, including for loops and functions with parameters. Recommended for grades 4-8.
          description_short: Build more complex programs with concepts such as for loops and functions with parameters. This is a follow-up to Course 3.
          description_audience: Ages 9-18
          stages:
            Artist:
              name: Artist
            Artist Binary:
              name: Artist Binary
            'Artist: For Loops':
              name: 'Artist: For Loops'
            'Artist: Functions':
              name: 'Artist: Functions'
            'Artist: Functions with Parameters':
              name: 'Artist: Functions with Parameters'
            'Artist: Variables':
              name: 'Artist: Variables'
            'Bee: For Loops':
              name: 'Bee: For Loops'
            'Bee: Functions with Parameters':
              name: 'Bee: Functions with Parameters'
            Extreme Challenge - Comprehensive:
              name: Extreme Challenge - Comprehensive
            Maze and Bee:
              name: Maze and Bee
            'Play Lab: For Loops':
              name: 'Play Lab: For Loops'
            'Play Lab: Functions with Parameters':
              name: 'Play Lab: Functions with Parameters'
            'Play Lab: Variables':
              name: 'Play Lab: Variables'
            Super Challenge - For Loops:
              name: Super Challenge - For Loops
            Super Challenge - Functions and Parameters:
              name: Super Challenge - Functions and Parameters
            Super Challenge - Variables:
              name: Super Challenge - Variables
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
            'Unplugged: Envelope Variables':
              name: 'Unplugged: Envelope Variables'
            'Unplugged: For Loop Fun':
              name: 'Unplugged: For Loop Fun'
            'Unplugged: Madlibs':
              name: 'Unplugged: Madlibs'
            'Unplugged: Songwriting with Parameters':
              name: 'Unplugged: Songwriting with Parameters'
            'Unplugged: Tangrams':
              name: 'Unplugged: Tangrams'
        Course4pre:
          title: Course 4 Prerequisite
          description: A brief rampup of concepts for students who have not taken Course 2 and 3.
          description_short: A brief rampup of concepts for students who have not taken Course 2 and 3.
          description_audience: ''
          stages:
            'Artist: Functions':
              name: 'Artist: Functions'
            'Artist: Loops':
              name: 'Artist: Loops'
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            'Artist: Sequence':
              name: 'Artist: Sequence'
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            'Bee: Debugging':
              name: 'Bee: Debugging'
            'Bee: Nested Loops':
              name: 'Bee: Nested Loops'
            'Farmer: While Loops':
              name: 'Farmer: While Loops'
            'Maze: Sequence':
              name: 'Maze: Sequence'
        usability:
          title: Usability Testing
          description: A selection of Course 4 levels for usability testing.
          description_short: ''
          description_audience: ''
          stages:
            Binary:
              name: Binary
            For Loops:
              name: For Loops
            Functions and Functions with Parameters:
              name: Functions and Functions with Parameters
            Intro:
              name: Intro
            Variables:
              name: Variables
        algebra:
          title: Computer Science in Algebra
          description: Learn Functional Programming through Algebra.
          description_short: Learn Functional Programming through Algebra.
          description_audience: ''
          stages:
            'Calc: Defining Variables':
              name: Defining Variables and Substitution
            'Calc: Evaluation Blocks':
              name: Evaluation Blocks and Arithmetic Expressions
            'Eval: Boolean Operators':
              name: Boolean Operators
            'Eval: Conditionals':
              name: Conditionals
            'Eval: Defining Functions':
              name: Composite Functions
            'Eval: Functions':
              name: Solving Word Problems with the Design Recipe
            'Eval: Strings and Images':
              name: Strings and Images
            'Eval: Writing Contracts':
              name: Writing Contracts
            'Play Lab: Animation (Big Game)':
              name: The Big Game - Animation
            'Play Lab: Boolean (Big Game)':
              name: The Big Game - Booleans
            'Play Lab: Booleans':
              name: Sam the Bat
            'Play Lab: Collision Detection (Big Game)':
              name: The Big Game - Collision Detection
            'Play Lab: Defining Functions':
              name: Rocket Height
            'Play Lab: Defining Variables (Big Game)':
              name: The Big Game - Variables
            'Unplugged: Booleans':
              name: 'Unplugged: Booleans and Logic'
            'Unplugged: Collision Detection and the Distance Formula':
              name: 'Unplugged: Collision Detection and the Pythagorean Theorem'
            'Unplugged: Conditionals and Piecewise Functions':
              name: 'Unplugged: Conditionals and Piecewise Functions'
            'Unplugged: Contracts':
              name: 'Unplugged: Contracts, Domain, and Range'
            'Unplugged: The Design Recipe':
              name: 'Unplugged: The Design Recipe'
            'Unplugged: Video Games and Coordinate Planes':
              name: 'Unplugged: Video Games and Coordinate Planes'
        infinity:
          title: Disney Infinity Play Lab
          description: Use Play Lab to create a story or game starring Disney Infinity characters.
          description_short: Use Play Lab to create a story or game starring Disney Infinity characters.
          stages:
            Infinity:
              name: Infinity
        algebrademo:
          title: Algebra Demo
          description: A handful of puzzles to demonstrate the environment and programming language used in Code.org CS in Algebra
          description_short: A handful of puzzles to demonstrate the environment and programming language used in Code.org CS in Algebra
          stages:
            Defining Simple Functions:
              name: Defining Simple Functions
            Defining Variables:
              name: Defining Variables
            Evaluation Blocks:
              name: Evaluation Blocks
            Making Pictures:
              name: Making Pictures
            The Design Recipe:
              name: The Design Recipe
        K5PD:
          title: K5 Professional Development
          description: Professional Development for K5 Courses
          description_short: Professional Development for K5 Courses
          description_audience: ''
          stages:
            Computer Science Pedagogy:
              name: Computer Science Pedagogy
            Introduction to PD:
              name: Introduction to PD
            K-5 Courses:
              name: K-5 Courses
            Next Steps:
              name: Next Steps
            'Programming Concept: Conditionals':
              name: 'Programming Concept: Conditionals'
            'Programming Concept: Events':
              name: 'Programming Concept: Events'
            'Programming Concept: Functions':
              name: 'Programming Concept: Functions'
            'Programming Concept: Loops':
              name: 'Programming Concept: Loops'
            Reflection:
              name: Reflection
            Teacher Dashboard:
              name: Teacher Dashboard
            Unplugged lessons:
              name: Unplugged lessons
            Writing computer programs:
              name: Writing computer programs
        netsim:
          title: Internet Simulator
          description: Learn about how the Internet works.
          description_short: Learn about how the Internet works.
          description_audience: ''
          stages:
            Automatic DNS node:
              name: Automatic DNS node
            Broadcasting messages:
              name: Broadcasting messages
            Internet Simulator Freeplay:
              name: Internet Simulator Freeplay
            Manual DNS:
              name: Manual DNS
            Overview and Setup Instructions:
              name: Overview and Setup Instructions
            Packets and Reliability:
              name: Packets and Reliability
            Peer to Peer - Sending Ascii:
              name: Peer to Peer - Sending Ascii
            Peer to Peer - Sending Bits on a Shared Wire:
              name: Peer to Peer - Sending Bits on a Shared Wire
            Peer to Peer - Sending Numbers:
              name: Peer to Peer - Sending Numbers
            Routers and addresses:
              name: Routers and addresses
        pixelation:
          title: Pixelation
          description: Create images with bits and bytes.
          description_short: Create images with bits and bytes.
          description_audience: ''
          stages:
            Black & White Pixelation Freeplay:
              name: Black & White Pixelation Freeplay
            Black & White Pixelation Tutorial:
              name: Black & White Pixelation Tutorial
            Color Pixelation Examples:
              name: Color Pixelation Examples
            Color Pixelation Freeplay:
              name: Color Pixelation Freeplay
            Color Pixelation Tutorial:
              name: Color Pixelation Tutorial
        20-hour:
          title: Accelerated Intro to CS Course
          description: This 20-hour course covers the core computer science and programming concepts in courses 2-4. The course is designed for use with ages 10-18. Check out courses 2-4 for a more complete experience!
          description_short: This 20-hour course covers the core computer science and programming concepts in courses 2-4.
          description_audience: Ages 10-18
          stages:
            Abstraction:
              name: Abstraction
            Algorithms:
              name: Algorithms
            Computational Thinking:
              name: Computational Thinking
            Conditionals:
              name: Conditionals
            Functions:
              name: Functions
            Graph Paper Programming:
              name: Graph Paper Programming
            Introduction to Computer Science:
              name: Introduction to Computer Science
            Relay Programming:
              name: Relay Programming
            Song Writing:
              name: Song Writing
            The Artist:
              name: The Artist
            The Artist 2:
              name: The Artist 2
            The Artist 3:
              name: The Artist 3
            The Artist 4:
              name: The Artist 4
            The Artist 5:
              name: The Artist 5
            The Farmer:
              name: The Farmer
            The Farmer 2:
              name: The Farmer 2
            The Farmer 3:
              name: The Farmer 3
            The Internet:
              name: The Internet
            The Maze:
              name: The Maze
            Wrap-up:
              name: Wrap-up
        edit-code:
          title: Edit Code
          description: Edit Code
          description_short: Edit Code
          description_audience: ''
          stages:
            Applab:
              name: Applab
            Hoc2015 Blockly:
              name: Hoc2015 Blockly
            Play Lab:
              name: Play Lab
            The Artist:
              name: The Artist
            The Maze:
              name: The Maze
        events:
          title: Events
          description: Events
          description_short: Events
          description_audience: ''
          stages:
            Bounce:
              name: Bounce
            Calc:
              name: Calc
            Eval:
              name: Eval
            Studio:
              name: Studio
        flappy:
          title: Flappy Code
          description: Wanna write your own game in less than 10 minutes? Try our Flappy Code tutorial!
          description_short: Write your own Flappy game!
          description_audience: ''
          stages:
            Flappy Code:
              name: Flappy Code
        jigsaw:
          title: Jigsaw
          description: Try our Jigsaw tutorial.
          description_short: Try our Jigsaw tutorial.
          description_audience: ''
          stages:
            Jigsaw:
              name: Jigsaw
        step:
          title: Step
          description: Step tutorial
          description_short: Step tutorial
          description_audience: ''
          stages:
            Step:
              name: Step
        Hour of Code:
          title: Hour of Code 2013
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies!
          description_short: Try the basics of computer science with many fun characters!
          description_audience: ''
          stages:
            Hour of Code 2013:
              name: Hour of Code 2013
        CodeStudioPuzzleChallenge:
          title: Code Studio Puzzle Challenge
          description: Try out these fun coding puzzles. Do your best!
          description_short: Challenge yourself!
          description_audience: ''
          stages:
            Puzzles:
              name: Puzzles
        Tutorial Video - Code Studio Puzzle Challenge:
          title: Tutorial - Code Studio Puzzle Challenge
          description: Try out these fun coding puzzles. Do your best!
          description_short: Challenge yourself!
          description_audience: ''
          stages:
            Puzzles:
              name: Puzzles
        cspunit1:
          title: "(old) CS Principles Unit 1 - Digital Information"
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          stages:
            Binary Numbers:
              name: Binary Numbers
            Bytes and File Sizes:
              name: Bytes and File Sizes
            Encode a Complex Thing:
              name: Encode an Experience
            Encoding B&W Images:
              name: Encoding B&W Images
            Encoding Color Images:
              name: Encoding Color Images
            Encoding Numbers in the Real World:
              name: Encoding Numbers in the Real World
            Encoding and Sending Text:
              name: Encoding and Sending Text
            Lossy Compression and File Formats:
              name: Lossy Compression and File Formats
            Number Systems:
              name: Number Systems
            Personal Innovations:
              name: Personal Innovations
            Sending Binary Messages:
              name: Sending Binary Messages
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            Sending Bits in the Real World:
              name: Sending Bits in the Real World
            Sending Complex Messages:
              name: Sending Complex Messages
            Sending Formatted Text:
              name: Sending Formatted Text
            Sending Numbers:
              name: Sending Numbers
            Text Compression:
              name: Text Compression
          description_audience: ''
        algebraPD:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          stages:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
        algPDmiami:
          title: Computer Science in Algebra PD
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          stages:
            Booleans:
              name: Booleans
            Design Recipe Practice:
              name: Design Recipe Practice
            Evaluation Blocks:
              name: Evaluation Blocks
            Luigi's Pizza:
              name: Luigi's Pizza
            Rocket-Height:
              name: Rocket-Height
            Sam the Bat:
              name: Sam the Bat
            Strings and Images:
              name: Strings and Images
            Your Game - Animation:
              name: Your Game - Animation
            Your Game - Booleans:
              name: Your Game - Booleans
            Your Game - Collision Detection:
              name: Your Game - Collision Detection
            Your Game - Player Movement:
              name: Your Game - Player Movement
        text-compression:
          title: Text Compression
          description: Compress text by identifying repeated patterns.
          description_short: Compress text by identifying repeated patterns.
          description_audience: ''
          stages:
            Text Compression:
              name: Text Compression
        CSPPD:
          title: Computer Science Principles PD
          description: 'Phase 1: Online Introduction for CSP'
          description_short: 'Phase 1: Online Introduction for CSP'
          stages:
            Exploring CSP Instructional Materials:
              name: Exploring CSP Instructional Materials
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is CSP?:
              name: What is CSP?
        CSPLessonSamples:
          title: CSP Lesson Samples
          description: Lesson samples for CSP
          description_short: Lesson samples for CSP
          description_audience: ''
          stages:
            Lesson 14:
              name: Lesson 14
            Lesson 15:
              name: Lesson 15
        ECSPD:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          stages:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is ECS?:
              name: What is ECS?
        sciencePD:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          stages:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
        rbo-reference:
          title: rbo-reference
          description: rbo-reference
          description_short: rbo-reference
          description_audience: ''
          stages:
            reference:
              name: reference
        Test Wednesday:
          title: Test Wednesday
          description: Test Wednesday
          description_short: Test Wednesay
          stages:
            PDK5 Intro:
              name: PDK5 Intro
        cspunit3:
          title: "(old) CS Principles Unit 3 - Programming"
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          stages:
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Beyond Buttons Toward Apps:
              name: Beyond Buttons Toward Apps
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Compound Conditional Logic:
              name: Compound Conditional Logic
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
            Creating Functions:
              name: Creating Functions
            Creating functions with Parameters:
              name: Creating Functions with Parameters
            Digital Assistant Project:
              name: Digital Assistant Project
            Event-Driven Programming and Debugging:
              name: Event-Driven Programming and Debugging
            Events Unplugged:
              name: Events Unplugged
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introducing Design Mode:
              name: Introducing Design Mode
            Introduction to Arrays:
              name: Introduction to Arrays
            Introduction to Conditional Logic:
              name: Introduction to Conditional Logic
            Introduction to Digital Assistants:
              name: Introduction to Digital Assistants
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Loops and Simulations:
              name: Loops and Simulations
            Multi-screen Apps:
              name: Multi-screen Apps
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: Processing Arrays
            The Need For Programming Languages:
              name: The Need For Programming Languages
            Understanding Program Flow and Logic:
              name: Understanding Program Flow and Logic
            User Input and Strings:
              name: User Input and Strings
            Using Simple Commands:
              name: Using Simple Commands
            Using Variables in Apps:
              name: Using Variables in Apps
            While Loops:
              name: While Loops
        algebraPD3:
          title: Phase 3 PD
          description: Teach Algebra through block-based Functional Programming
          description_short: Teach Algebra through block-based Functional Programming
          description_audience: ''
          stages:
            Computer Science Pedagogy:
              name: Computer Science Pedagogy
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Next Steps:
              name: Next Steps
            Strings and Images:
              name: Strings and Images
            Teacher Dashboard:
              name: Teacher Dashboard
            The Big Game:
              name: The Big Game
            The Design Recipe:
              name: The Design Recipe
        ECSPD-NexTech:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          stages:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is ECS?:
              name: What is ECS?
        ECSPD-iZone:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          stages:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: Impact of Computer Science
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: Teaching Strategies
            What is ECS?:
              name: What is ECS?
        algebraPD-NexTech:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          description_audience: ''
          stages:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
        algebraPD-iZone:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          description_audience: ''
          stages:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
        sciencePD-NexTech:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          description_audience: ''
          stages:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
        sciencePD-iZone:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          description_audience: ''
          stages:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
        sciencePD2:
          title: 'CS in Science: Part 2'
          description: Phase 2 Online Blended Summer Study
          description_short: Phase 2 Online Blended Summer Study
          stages:
            Creating Breeds in Starlogo Nova:
              name: Creating Breeds in Starlogo Nova
            Epidemic Model Extensions:
              name: Epidemic Model Extensions
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Revisiting Agent Movement:
              name: Revisiting Agent Movement
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        sciencePD3:
          title: 'CS in Science: Part 3'
          description: Academic Year Support - Semester 1
          description_short: Academic Year Support - Semester 1
          stages:
            Decode and Share:
              name: Decode and Share
            Mystery Model:
              name: Mystery Model
            Welcome Back!:
              name: Welcome Back!
        Testing:
          title: Testing
          description: Testing
          description_short: Testing
          stages:
            Testing:
              name: Testing
        cspunit2:
          title: "(old) CS Principles Unit 2 - The Internet"
          description: In this unit, students extend their understanding of the internet and how it functions by building off the concepts learned when sending bits in Unit 1. This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          stages:
            Algorithms Detour - Hard Problems TSP:
              name: Hard Problems - The Traveling Salesperson Problem
            Algorithms Detour - How Routers Learn:
              name: How Routers Learn
            Algorithms Detour - Minimum Spanning Tree:
              name: Algorithms Detour - Minimum Spanning Tree
            Algorithms Detour - Shortest Path:
              name: Algorithms Detour - Shortest Path
            Alice and Bob and Asymmetric Keys:
              name: Asymmetric Keys - Cups and Beans
            Cracking the Code:
              name: Cracking the Code
            DNS in the Real World:
              name: DNS in the Real World
            Encryption Algorithms:
              name: Keys and Passwords
            HTTP and Abstraction:
              name: HTTP and Abstraction on the Internet
            Invent an Addressing Protocol:
              name: Invent an Addressing Protocol
            One Way Functions - Ice Cream Vans:
              name: One-Way Functions - The WiFi Hotspot Problem
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
            Practice PT - Cybersecurity Innovations:
              name: Practice PT - Cybersecurity Innovations
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
            Public Key Crypto:
              name: Public Key Cryptography
            Routers and Redundancy:
              name: Routers and Redundancy
            Tell Me a Secret - Encrypting Text:
              name: The Need for Encryption
            The Internet:
              name: The Internet Is for Everyone
            The Need for Addressing:
              name: The Need for Addressing
            The Need for DNS:
              name: The Need for DNS
          description_audience: ''
        algebraPD2a:
          title: Computer Science in Algebra PD
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          stages:
            Big Game - Animation:
              name: Big Game - Animation
            Big Game - Booleans:
              name: Big Game - Booleans
            Big Game - Collision Detection:
              name: Big Game - Collision Detection
            Big Game - Player Movement:
              name: Big Game - Player Movement
            Big Game - Variables:
              name: Big Game - Variables
            Booleans:
              name: Booleans
            Defining Variables:
              name: Defining Variables
            Evaluation Blocks:
              name: Evaluation Blocks
            Free Play:
              name: Free Play
            Luigi's Pizza:
              name: Luigi's Pizza
            Rocket-Height:
              name: Rocket-Height
            Sam the Bat:
              name: Sam the Bat
            Strings and Images:
              name: Strings and Images
            The Design Recipe:
              name: The Design Recipe
        allthethings:
          title: All the Things!
          description: All the level types for UI testing. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for this script).
          description_short: All the level types for UI testing
          description_audience: ''
          stages:
            Anonymous student survey:
              name: Anonymous student survey
            Anonymous student survey 2:
              name: Anonymous student survey 2
            AppLab:
              name: AppLab
            Artist:
              name: Artist
            Bee:
              name: Bee
            Bounce:
              name: Bounce
            CSinA:
              name: CSinA
            Farmer:
              name: Farmer
            Flappy:
              name: Flappy
            Free Response:
              name: Free Response
            Gamelab:
              name: Gamelab
            Jigsaw:
              name: Jigsaw
            Long assessment:
              name: Long assessment
            Markdown Details:
              name: Markdown Details
            Match:
              name: Match
            Maze:
              name: Maze
            Minecraft:
              name: Minecraft
            Multi:
              name: Multi
            Multi2:
              name: Multi2
            Netsim:
              name: Netsim
            Odometer:
              name: Odometer
            Online PD:
              name: Online PD
            Pixelation:
              name: Pixelation
            PlayLab:
              name: PlayLab
            Public Key Cryptography:
              name: Public Key Cryptography
            Rich long assessment:
              name: Rich long assessment
            Sample PLC Assessment:
              name: Sample PLC Assessment
            Star wars:
              name: Star wars
            Studio:
              name: Studio
            Swapped Levels:
              name: Swapped Levels
            Text Compression:
              name: Text Compression
            TextMatch:
              name: TextMatch
            Web Lab:
              name: Web Lab
            Multi page assessment:
              name: Multi page assessment
            Single page assessment:
              name: Single page assessment
            Standalone video:
              name: Standalone video
            Curriculum Reference:
              name: Curriculum Reference
        algebraPD2b:
          title: Computer Science in Algebra PD
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          stages:
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
            Booleans:
              name: Booleans
            Course Overview:
              name: Course Overview
            Defining Functions:
              name: Defining Functions
            Defining Variables:
              name: Defining Variables
            'Eval: Conditionals':
              name: 'Eval: Conditionals'
            Evaluation Blocks:
              name: Evaluation Blocks
            Next Steps:
              name: Next Steps
            Rocket-Height:
              name: Rocket-Height
            Strings and Images:
              name: Strings and Images
            Teacher Dashboard:
              name: Teacher Dashboard
            Writing Contracts:
              name: Writing Contracts
        cspfacilitator:
          title: 'CS Principles Facilitator Workshop '
          description: Online levels for PD workshop
          description_short: Online levels for PD workshop
          description_audience: ''
          stages:
            App Lab:
              name: App Lab
            Broadcast Lesson:
              name: Broadcast Lesson
            Internet Simulator:
              name: Internet Simulator
            Pixelation Widget:
              name: Pixelation Widget
            Text Compression Lesson:
              name: Text Compression Lesson
            Text Compression Widget:
              name: Text Compression Widget
            Welcome!:
              name: Welcome!
        K5-OnlinePD:
          title: Teaching Computer Science Fundamentals
          description: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_short: Learn how to teach computer science using Code.org's Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          stages:
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
            Computer Science Fundamentals:
              name: Computer Science Fundamentals
            Getting Started:
              name: Getting Started
            Looking Ahead:
              name: Looking Ahead
            'Mastering the Basics: Conditionals':
              name: 'Mastering the Basics: Conditionals'
            'Mastering the Basics: Events':
              name: 'Mastering the Basics: Events'
            'Mastering the Basics: Functions':
              name: 'Mastering the Basics: Functions'
            'Mastering the Basics: Loops':
              name: 'Mastering the Basics: Loops'
            'Mastering the Basics: Sequencing':
              name: 'Mastering the Basics: Sequencing'
            Next Steps:
              name: Next Steps
            Planning:
              name: Planning
        ECSPD2:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          stages:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            0: |-
              Unit 1, Days 1-2
              What Is a Computer?
            1: |-
              Unit 1, Days 1-2
              What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
        equityPD:
          title: Leading a Discussion on Equity
          description: How to lead a discussion on equity in a Code.org PD
          description_short: How to lead a discussion on equity in a Code.org PD
          stages:
            Equity PD:
              name: Equity PD
            Necessary Background:
              name: Necessary Background
        algebraPD2:
          title: CS in Algebra Part 2
          description: Academic Year Support
          description_short: Academic Year Support
          description_audience: ''
          stages:
            Lesson Prep:
              name: Lesson Prep
            Teacher Dashboard:
              name: Teacher Dashboard
            Teaching with Puzzles:
              name: Teaching with Puzzles
            Teaching with the Design Recipe:
              name: Teaching with the Design Recipe
            The Design Recipe:
              name: The Design Recipe
            Welcome!:
              name: Welcome!
        sciencePD2b:
          title: Computer Science in Science PD Phase 2b
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          stages:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        equity-pd:
          title: Leading a Discussion on Equity
          description: How to lead a discussion on equity in a Code.org PD
          description_short: How to lead a discussion on equity in a Code.org PD
          description_audience: ''
          stages:
            Code.org Equity PD:
              name: Code.org Equity PD
            Necessary Background:
              name: Necessary Background
        science-PD2:
          title: Computer Science in Science PD Phase 2b
          description: Phase 2 Online Blended Summer Study
          description_short: Phase 2 Online Blended Summer Study
          description_audience: ''
          stages:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        Equity-OnlinePD:
          title: Creating More Equitable Computer Science Classrooms
          description: Develop strategies for creating equity in your classroom with this free, self-paced online course.
          description_short: Develop equitable teaching strategies with this free, self-paced online course.
          description_audience: ''
          stages:
            Creating Equitable Learning Environments:
              name: Creating Equitable Learning Environments
            Getting Started:
              name: Getting Started
            Introduction to Equity:
              name: Introduction to Equity
            Next Steps:
              name: Next Steps
        sciencePD2b-iZone:
          title: Computer Science in Science PD Phase 2b
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          description_audience: ''
          stages:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        ECSPD2-iZone:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          stages:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            0: |-
              Unit 1, Days 1-2
              What Is a Computer?
            1: |-
              Unit 1, Days 1-2
              What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
        ECSPD2-NexTech:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'Phase 2 Online: Blended Summer Study'
          description_short: 'Phase 2 Online: Blended Summer Study'
          stages:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            0: |-
              Unit 1, Days 1-2
              What Is a Computer?
            1: |-
              Unit 1, Days 1-2
              What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
        CSPPD2:
          title: 'Computer Science Principles PD: Blended Summer Study'
          description: 8-hour online PD that builds on the 5-day in-person experience and helps teachers prepare for the beginning of the semester
          description_short: 'Blended Summer Study: 8 hour online'
          stages:
            Getting Started:
              name: Getting Started
            Lesson Chunk 1- Sending Binary Messages:
              name: Lesson Chunk 1- Sending Binary Messages
            Lesson Chunk 2- Encoding and Sending Numbers:
              name: Lesson Chunk 2- Encoding and Sending Numbers
            Lesson Chunk 3- Encoding and Sending Text:
              name: Lesson Chunk 3- Encoding and Sending Text
            Lesson Chunk 4- Compressing and Storing Information:
              name: Lesson Chunk 4- Compressing and Storing Information
            Practice PT:
              name: Practice PT
            Welcome to the Course!:
              name: Welcome to the Course!
            Wrap Up and Next Steps:
              name: Wrap Up and Next Steps
        odometer:
          title: Odometer Widget
          description: Use the Odometer widget to control odometers with various number bases. Binary, Decimal and Hexadecimal are the most common number systems to see in computer science.
          description_short: Use the Odometer widget to control odometers with various number bases.
          description_audience: ''
          stages:
            Odometer Widget:
              name: Odometer Widget
        asUnplugged:
          title: Afterschool Unplugged
          description: Afterschool Unplugged is designed to teach computational thinking and computer science ideas through offline games and crafts. Created with informal classrooms in mind, these lessons are fantastic on their own, or in combination with Afterschool 1 . This course focuses on learning through entertainment. Recommended for grades K-8.
          description_short: Short unplugged course designed for informal learning
          description_audience: Ages 6-13
          stages:
            Binary Bracelets:
              name: Binary Bracelets
            Building a Foundation:
              name: Building a Foundation
            Getting Loopy:
              name: Getting Loopy
            Graph Paper Programming:
              name: Graph Paper Programming
            Happy Maps:
              name: Happy Maps
            Move it, Move it:
              name: Move it, Move it
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Songwriting:
              name: Songwriting
            The Big Event:
              name: The Big Event
        afterschool1:
          title: Afterschool 1
          description: Afterschool 1 is designed to for informal classrooms where students vary in age and assessment is not required. This course focuses on learning through entertainment, with varying options for implementation, all in 10 sessions or less. Use alone or with Afterschool Unplugged. Recommended for grades 3-8.
          description_short: Short course designed for informal learning
          description_audience: Ages 7-13
          stage: [ ]
          stages: [ ]
        vigenere:
          title: Vigenere Cipher Widget
          description: Use the Vigenere Cipher Widget to explore encrypting and decrypting messages using a Vigenere Cipher.
          description_short: Use the Vigenere Cipher Widget to explore encrypting and decrypting messages using a Vigenere Cipher.
          description_audience: ''
          stages:
            Vigenere:
              name: Vigenere
        algebraPD3a:
          title: Computer Science in Algebra PD
          description: 'Phase 3 (Part 2): CS in Algebra blended online school year study'
          description_short: 'Phase 3 (Part 1): CS in Algebra blended online school year study'
          description_audience: ''
          stages:
            Lesson Prep:
              name: Lesson Prep
            Updates - The Big Game and Projects:
              name: Updates - The Big Game and Projects
            Updates - The Design Recipe:
              name: Updates - The Design Recipe
            Updates - Tweaks and Polish:
              name: Updates - Tweaks and Polish
        sciencePD3_pre1:
          title: CS in Science PD3 Before 1st In-Person
          description: 'Phase 3: Academic Year Development (Segment One)'
          description_short: 'Phase 3: Academic Year Development Pre 1'
          description_audience: ''
          stages:
            Prep With Your Modules:
              name: Prep With Your Modules
            The TLO:
              name: The TLO
            Welcome Back!:
              name: Welcome Back!
        frequency_analysis:
          title: Frequency Analysis Widget
          description: Use the Frequency Analysis Widget to analyze letter frequencies in an input text compared to expected frequencies for standard English. Use that comparison to explore cracking Shift and Substitution Ciphers.
          description_short: Use the Frequency Analysis Widget to analyze letter frequencies in a text compared to expected frequencies. Crack Shift and Substitution Ciphers.
          stages:
            Frequency Analysis:
              name: Frequency Analysis
          description_audience: ''
        ECSPD3-Unit2:
          title: 'Exploring Computer Science: Unit 2'
          description: Online Professional Development Course
          description_short: Unit 2 Online PD
          description_audience: ''
          stages:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 2:
              name: Intro to Unit 2
            Lesson Overviews:
              name: Lesson Overviews
            Teaching Strategies:
              name: Teaching Strategies
            Unit 2 Challenge:
              name: Unit 2 Challenge
        ECSPD3-Unit3:
          title: 'Exploring Computer Science: Unit 3'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          stages:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 3:
              name: Intro to Unit 3
            Teaching Strategies:
              name: Teaching Strategies
            Unit 3 Challenge:
              name: Unit 3 Challenge
            Unit 3 Day-by-Day:
              name: Unit 3 Day-by-Day
        ECSPD3-Unit4:
          title: 'Exploring Computer Science: Unit 4'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          stages:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 4:
              name: Intro to Unit 4
            Teaching Strategies:
              name: Teaching Strategies
            Unit 4 Challenge:
              name: Unit 4 Challenge
            Unit 4 Day-by-Day:
              name: Unit 4 Day-by-Day
        ECSPD3-Unit5:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          stages:
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Introduction to the Unit 5 Challenge:
              name: Introduction to the Unit 5 Challenge
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: Unit 5 Overview
            Unit 5 lessons:
              name: Unit 5 lessons
        ECSPD3-Unit6:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          stages:
            Alternative Ideas for Unit 6:
              name: Alternative Ideas for Unit 6
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 6 Challenge:
              name: Unit 6 Challenge
            Unit 6 Overview:
              name: Unit 6 Overview
            Unit 6 lessons:
              name: Unit 6 lessons
        cspunit4draft:
          title: CS Principles Unit 4 - Data
          description: "Collect, analyze, and extract knowledge from data by programming and\\r\nbuilding apps. Process data imported from other sources and also pull\\r\ndata from live data APIs."
          description_short: Data
          description_audience: ''
          stages:
            Check Your Assumptions:
              name: Check Your Assumptions
            Cleaning Data:
              name: Cleaning Data
            Compiling Data:
              name: Compiling Data
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Creating Summary Tables:
              name: Creating Summary Tables
            Data, Security, and Privacy:
              name: Data, Security, and Privacy
            Designing Data Collection:
              name: Designing Data Collection
            Designing for Your User:
              name: Designing for Your User
            Discover a Data Story:
              name: Discover a Data Story
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            How is Data Collected?:
              name: How is Data Collected?
            Import, Export, and Visualize Data:
              name: Import, Export, and Visualize Data
            Interpreting Data Visualizations:
              name: Interpreting Data Visualizations
            Making Data Visualizations:
              name: Making Data Visualizations
            Permanent Data Storage:
              name: Permanent Data Storage
            Permanent Data Storage and Clicker Completion:
              name: Permanent Data Storage and Clicker Completion
            'Practice Create PT: Data App':
              name: 'Practice Create PT: Data App'
            Privacy in a Digital World:
              name: Privacy in a Digital World
            Privacy vs Utility:
              name: Privacy vs Utility
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            Reading Records:
              name: Reading Records
            Search Terms:
              name: Search Terms
            Unique IDs, Delete and Update Records:
              name: Unique IDs, Delete and Update Records
            Using Data in the Real World:
              name: Using Data in the Real World
            Web Requests and APIs:
              name: Web Requests and APIs
            What Data Can Tell Us:
              name: What Data Can Tell Us
            Why Make Apps?:
              name: Why Make Apps?
        ScienceP3OLPT2:
          title: Computer Science in Science PD Phase 3A Post Work
          description: Phase 3 Academic Year Development
          description_short: Phase 3 Academic Year Development
          description_audience: ''
          stages:
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: Physical Science Challenges
            Thinking About Implementation:
              name: Thinking About Implementation
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        algebraPD3b:
          title: Computer Science in Algebra PD
          description: 'Phase 3 (Part 2): CS in Algebra mid year lesson support'
          description_short: 'Phase 3 (Part 2): CS in Algebra mid year lesson support'
          description_audience: ''
          stages:
            Close and Next Steps:
              name: Close and Next Steps
            Getting Started:
              name: Getting Started
            Teaching Support - Lessons 1-3:
              name: Teaching Support - Lessons 1-3
            Teaching Support - Lessons 13-16:
              name: Teaching Support - Lessons 13-16
            Teaching Support - Lessons 17-20:
              name: Teaching Support - Lessons 17-20
            Teaching Support - Lessons 4-7:
              name: Teaching Support - Lessons 4-7
            Teaching Support - Lessons 8-12:
              name: Teaching Support - Lessons 8-12
        CSPPD3-Unit2:
          title: 'Computer Science Principles: Unit 2 PD'
          description: Online Exploration of CSP Unit 2
          description_short: Online Exploration of CSP Unit 2
          description_audience: ''
          stages:
            Challenge Overview:
              name: Challenge Overview
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 2 Overview:
              name: Unit 2 Overview
        duino:
          title: Experimenting with Arduino stuff
          description: Testing some tools for teaching with Arduinos
          stages:
            Basic Circuits:
              name: Basic Circuits
            Blinky Lights:
              name: Blinky Lights
            JunkBot:
              name: JunkBot
            Making Music:
              name: Making Music
        Special Fun:
          title: Special Fun
          description_short: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_audience: Ages 10-18
          description: ''
          stages:
            Halloween 2015:
              name: Halloween 2015
        SpecialSeries:
          title: Special Levels
          description: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_short: Something special for those who know it exists. These puzzles might not be around long, so enjoy them while you can!
          description_audience: Ages 10-18
          stages:
            Spring 2016:
              name: Spring 2016
            Halloween 2015:
              name: Halloween 2015
        iceage:
          title: Ice Age Play Lab
          description: Create a story or make a game with Ice Age Play Lab!
          description_short: Create a story or make a game with Ice Age Play Lab!
          description_audience: ''
          stages:
            Ice Age Play Lab:
              name: Ice Age Play Lab
        CSPPD3-Unit3:
          title: 'Computer Science Principles: Unit 3 PD'
          description: Online Exploration of CSP Unit 3
          description_short: Online Exploration of CSP Unit 3
          stages:
            Challenge Overview:
              name: Challenge Overview
            Chunk 1 Overview:
              name: Chunk 1 Overview
            Chunk 2 Overview:
              name: Chunk 2 Overview
            Chunk 3 Overview:
              name: Chunk 3 Overview
            Chunk 4 Overview:
              name: Chunk 4 Overview
            Chunk 5 Overview:
              name: Chunk 5 Overview
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Practice Performance Task:
              name: Practice Performance Task
            Share out and Submit:
              name: Share out and Submit
            Unit 3 Overview:
              name: Unit 3 Overview
        cspunit3temp:
          title: "(old) CS Principles Unit 3 - Programming"
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          stages:
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introduction to Arrays:
              name: Introduction to Arrays
            Loops and Simulations:
              name: Loops and Simulations
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: Processing Arrays
            While Loops:
              name: While Loops
        CSP-Unit3-Support:
          title: 'Computer Science Principles: Unit 3 PD'
          description: Online Exploration of CSP Unit 3
          description_short: Online Exploration of CSP Unit 3
          stages:
            Chunk 1 Overview:
              name: Chunk 1 Overview
            Chunk 2 Overview:
              name: Chunk 2 Overview
            Chunk 3 Overview:
              name: Chunk 3 Overview
            Chunk 4 Overview:
              name: Chunk 4 Overview
            Chunk 5 Overview:
              name: Chunk 5 Overview
            Practice Performance Task:
              name: Practice Performance Task
            Unit 3 Overview:
              name: Unit 3 Overview
        gumball:
          title: Gumball Play Lab
          description: Create a story or make a game with Gumball Play Lab!
          description_short: Create a story or make a game with Gumball Play Lab!
          stages:
            Gumball Play Lab:
              name: Gumball Play Lab
        starwars:
          title: 'Star Wars: Building a Galaxy With Code'
          description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_short: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_audience: ''
          stages:
            Hour of Code 2015:
              name: Hour of Code 2015
        starwarsblocks:
          title: 'Star Wars: Building a Galaxy With Code'
          description: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_short: Learn to program droids, and create your own Star Wars game in a galaxy far, far away.
          description_audience: ''
          stages:
            Hour of Code 2015:
              name: Hour of Code 2015
        mc:
          title: Minecraft Hour of Code
          description: Use blocks of code to take Steve or Alex on an adventure through this Minecraft world.
          description_short: Explore a Minecraft world through code.
          stages:
            Hour of Code 2015:
              name: Hour of Code 2015
          description_audience: ''
        CSPPD3-Unit3-pt2:
          title: 'Computer Science Principles: Unit 3 PD Challenges'
          description: Online Exploration of CSP Unit 3-- Lesson Challenges
          description_short: Online Exploration of CSP Unit 3-- Lesson Challenges
          stages:
            Challenge Overview:
              name: Challenge Overview
            Complete the Challenge:
              name: Complete the Challenge
            Share out and Submit:
              name: Share out and Submit
        ScienceP3OLPT3:
          title: Computer Science in Science PD Pre-Phase 3B
          description: Phase 3 Academic Year Development
          description_short: Phase 3 Academic Year Development
          description_audience: ''
          stages:
            "(optional) Refresh your connection to Complex Adaptive Systems":
              name: "(optional) Refresh your connection to Complex Adaptive Systems"
            Assessing Computer Models:
              name: Assessing Computer Models
            Welcome!:
              name: Welcome!
            Wrap-Up:
              name: Wrap-Up
        cspunit5:
          title: "(old) CS Principles Unit 5 - Performance Tasks"
          description: This unit covers the preparation and completion of the Explore and Create Performance Tasks.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          stages:
            Create PT:
              name: Create PT
            Create PT Prep:
              name: Create PT Prep
            Explore PT:
              name: Explore PT
            Explore PT Prep:
              name: Explore PT Prep
        cspunit4:
          title: "(old) CS Principles Unit 4 - Data"
          description: Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. The data-rich world we live in also introduces many complex questions related to public policy, law, ethics and societal impact. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: This unit is a pilot version and is no longer supported or updated. You can find the new units at code.org/educate/csp.
          description_audience: ''
          stages:
            Check Your Assumptions:
              name: Check Your Assumptions
            Cleaning Data:
              name: Cleaning Data
            Creating Summary Tables:
              name: Creating Summary Tables
            Discover a Data Story:
              name: Discover a Data Story
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            Identifying People with Data:
              name: Identifying People with Data
            Intro to Data:
              name: Introduction to Data
            Making Data Visualizations:
              name: Making Data Visualizations
            Practice PT - Propose an Innovation:
              name: Practice PT - Propose an Innovation
            Practice PT - Tell a Data Story:
              name: Practice PT - Tell a Data Story
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            The Cost of Free:
              name: The Cost of Free
            What is Big Data?:
              name: What is Big Data?
        CSPPD3-Unit4:
          title: 'Computer Science Principles: Unit 4 PD'
          description: Online Support for CSP Unit 4
          description_short: Support for CSP Unit 4
          stages:
            Challenge Overview:
              name: Challenge Overview
            Chapter 1 Overview:
              name: Chapter 1 Overview
            Chapter 2 Overview:
              name: Chapter 2 Overview
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Practice Performance Tasks:
              name: Practice Performance Tasks
            Share out and Submit:
              name: Share out and Submit
            Unit 4 Overview:
              name: Unit 4 Overview
        cspunit6draft:
          title: CSP Post-AP Material - Databases and Using Data in Your Apps
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, and it concludes with a sampling of example projects that can be built using these tools.
          description_short: Data Apps
          stages:
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Deleting Records:
              name: Deleting Records
            Final Project:
              name: Final Project
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Sample Apps:
              name: Sample Apps
            Updating Records:
              name: Updating Records
            Visualizing Data:
              name: Visualizing Data
        CSPPD3-Unit5:
          title: 'Computer Science Principles: Unit 5 PD'
          description: Online Support for CSP Unit 5
          description_short: Support for CSP Unit 5
          stages:
            Challenge Overview:
              name: Challenge Overview
            Complete the Challenge:
              name: Complete the Challenge
            Create PT Breakdown:
              name: Create PT Breakdown
            Explore PT Breakdown:
              name: Explore PT Breakdown
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: Unit 5 Overview
        cspunit6:
          title: CSP Post-AP Material - Databases and Using Data in Your Apps
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
          description_short: Learn to collect and use data in App Lab apps.
          description_audience: ''
          stages:
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Deleting Records:
              name: Deleting Records
            Final Project:
              name: Final Project
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Sample Apps:
              name: Sample Apps
            Updating Records:
              name: Updating Records
            Visualizing Data:
              name: Visualizing Data
        AlgebraA:
          title: 'Computer Science in Algebra: Course A'
          description: Learn Functional Programming through Algebra
          description_short: Learn Functional Programming through Algebra
          description_audience: ''
          stages:
            'Calc: Defining Variables':
              name: 'Calc: Defining Variables'
            'Calc: Evaluation Blocks':
              name: 'Calc: Evaluation Blocks'
            'Eval: Defining Functions':
              name: 'Eval: Defining Functions'
            'Eval: Functions':
              name: 'Eval: Functions'
            'Eval: Strings and Images':
              name: 'Eval: Strings and Images'
            'Eval: Writing Contracts':
              name: 'Eval: Writing Contracts'
            'Play Lab: Defining Functions':
              name: 'Play Lab: Defining Functions'
            'Unplugged: Contracts':
              name: 'Unplugged: Contracts'
            'Unplugged: Fast Functions':
              name: 'Unplugged: Fast Functions'
            'Unplugged: The Design Recipe':
              name: 'Unplugged: The Design Recipe'
        AlgebraB:
          title: Computer Science in Algebra
          description: Learn Functional Programming through Algebra
          description_short: Learn Functional Programming through Algebra
          description_audience: ''
          stages:
            'Eval: Boolean Operators':
              name: 'Eval: Boolean Operators'
            'Eval: Conditionals':
              name: 'Eval: Conditionals'
            'Play Lab: Animation (Big Game)':
              name: 'Play Lab: Animation (Big Game)'
            'Play Lab: Boolean (Big Game)':
              name: 'Play Lab: Boolean (Big Game)'
            'Play Lab: Booleans':
              name: 'Play Lab: Booleans'
            'Play Lab: Collision Detection (Big Game)':
              name: 'Play Lab: Collision Detection (Big Game)'
            'Play Lab: Defining Variables (Big Game)':
              name: 'Play Lab: Defining Variables (Big Game)'
            'Unplugged: Booleans':
              name: 'Unplugged: Booleans'
            'Unplugged: Collision Detection and the Distance Formula':
              name: 'Unplugged: Collision Detection and the Distance Formula'
            'Unplugged: Conditionals and Piecewise Functions':
              name: 'Unplugged: Conditionals and Piecewise Functions'
            'Unplugged: Video Games and Coordinate Planes':
              name: 'Unplugged: Video Games and Coordinate Planes'
        gamelab-hackathon:
          title: Gamelab Hackathon
          description: A place to try things out in Game Lab
          description_short: Gamelab Hackathon
          stages:
            Middle_School_Hackathon:
              name: Middle_School_Hackathon
        algebraPD1:
          title: CS in Algebra Part 1
          description: Teach Algebra through Functional Programming
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          stages:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
        algebraPD3c:
          title: Computer Science in Algebra PD
          description: CS in Algebra end of year reflection
          description_short: CS in Algebra end of year reflection
          description_audience: ''
          stages:
            Getting Started:
              name: Getting Started
            Planning For the Future:
              name: Planning For the Future
            Sharing Student Work:
              name: Sharing Student Work
        csp1:
          title: CSP Unit 1 - The Internet
          description: This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. The unit then explores the structure and design of the internet and the implications of those design decisions.
          description_short: Explore the challenges about representing information as bits and how to get those bits from one place to another.
          description_audience: ''
          stages:
            Binary Numbers:
              name: Binary Numbers
            CS Principles Pre-survey:
              name: CS Principles Pre-survey
            Encoding and Sending Formatted Text:
              name: Encoding and Sending Formatted Text
            HTTP and Abstraction:
              name: HTTP and Abstraction
            Number Systems:
              name: Number Systems
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
            Personal Innovations:
              name: Personal Innovations
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
            Routers and Redundancy:
              name: Routers and Redundancy
            Sending Binary Messages:
              name: Sending Binary Messages
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            Sending Numbers:
              name: Sending Numbers
            The Internet:
              name: The Internet
            The Need for Addressing:
              name: The Need for Addressing
            The Need for DNS:
              name: The Need for DNS
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
            Unit 1 Chapter 2 Assessment:
              name: Unit 1 Chapter 2 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
        csp2:
          title: CSP Unit 2 - Digital Information
          description: This unit further explores the ways that digital information is encoded, represented and manipulated. Being able to digitally manipulate data, visualize it, and identify patterns, trends and possible meanings are important practical skills that computer scientists do every day. Understanding where data comes from, having intuitions about what could be learned or extracted from it, and being able to use computational tools to manipulate data and communicate about it are the primary skills addressed in the unit.
          description_short: Explore how more complex digital information is represented and manipulated through computation and visualization.
          description_audience: ''
          stages:
            Bytes and File Sizes:
              name: Bytes and File Sizes
            Check Your Assumptions:
              name: Check Your Assumptions
            Cleaning Data:
              name: Cleaning Data
            Creating Summary Tables:
              name: Creating Summary Tables
            Discover a Data Story:
              name: Discover a Data Story
            Encode a Complex Thing:
              name: Encode a Complex Thing
            Encoding B&W Images:
              name: Encoding B&W Images
            Encoding Color Images:
              name: Encoding Color Images
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: Good and Bad Data Visualizations
            Intro to Data:
              name: Intro to Data
            Lossy Compression and File Formats:
              name: Lossy Compression and File Formats
            Making Data Visualizations:
              name: Making Data Visualizations
            Practice PT - Tell a Data Story:
              name: Practice PT - Tell a Data Story
            Text Compression:
              name: Text Compression
            Unit 2 Chapter 1 Assessment:
              name: Unit 2 Chapter 1 Assessment
            Unit 2 Chapter 2 Assessment:
              name: Unit 2 Chapter 2 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
        csp3:
          title: CSP Unit 3 - Intro to Programming
          description: This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Learn the basics of programming in JavaScript through a top-down design approach using classic turtle drawing.
          description_audience: ''
          stages:
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating Functions:
              name: Creating Functions
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Creativity in Algorithms:
              name: Creativity in Algorithms
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            Looping and Random Numbers:
              name: Looping and Random Numbers
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            The Need For Programming Languages:
              name: The Need For Programming Languages
            The Need for Algorithms:
              name: The Need for Algorithms
            Using Simple Commands:
              name: Using Simple Commands
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            'Anonymous student survey: Taking the AP exam':
              name: 'Anonymous student survey: Taking the AP exam'
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Creating Functions with Parameters:
              name: Creating Functions with Parameters
        csp4:
          title: CSP Unit 4 - Big Data and Privacy
          description: The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.
          description_short: Explore the data-rich world we live, and how data impacts public policy, personal privacy, security, the law, and ethics.
          description_audience: ''
          stages:
            Alice and Bob and Asymmetric Keys:
              name: Alice and Bob and Asymmetric Keys
            Cracking the Code:
              name: Cracking the Code
            Encryption with Keys and Passwords:
              name: Encryption with Keys and Passwords
            Identifying People with Data:
              name: Identifying People with Data
            Practice PT - Cybersecurity Innovations:
              name: Practice PT - Cybersecurity Innovations
            Practice PT - Propose an Innovation:
              name: Practice PT - Propose an Innovation
            Public Key Crypto:
              name: Public Key Crypto
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            Simple Encryption:
              name: Simple Encryption
            The Cost of Free:
              name: The Cost of Free
            What is Big Data?:
              name: What is Big Data?
            Rapid Research - Cybercrime:
              name: Rapid Research - Cybercrime
            Practice PT - Big Data and Security Dilemmas:
              name: Practice PT - Big Data and Security Dilemmas
            Unit 4 Chapter 1 Assessment:
              name: Unit 4 Chapter 1 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
        csp5:
          title: CSP Unit 5 - Building Apps
          description: This unit continues the introduction of foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.
          description_short: Continue to learn foundational concepts of computer programming in JavaScript by making rich, interactive apps.
          description_audience: ''
          stages:
            Beyond Buttons Toward Apps:
              name: Beyond Buttons Toward Apps
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Compound Conditional Logic:
              name: Compound Conditional Logic
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
            Digital Assistant Project:
              name: Digital Assistant Project
            Event-Driven Programming and Debugging:
              name: Event-Driven Programming and Debugging
            Events Unplugged:
              name: Events Unplugged
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introducing Design Mode:
              name: Introducing Design Mode
            Introduction to Arrays:
              name: Introduction to Arrays
            Introduction to Conditional Logic:
              name: Introduction to Conditional Logic
            Introduction to Digital Assistants:
              name: Introduction to Digital Assistants
            Loops and Simulations:
              name: Loops and Simulations
            Multi-screen Apps:
              name: Multi-screen Apps
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: Processing Arrays
            Understanding Program Flow and Logic:
              name: Understanding Program Flow and Logic
            User Input and Strings:
              name: User Input and Strings
            Using Variables in Apps:
              name: Using Variables in Apps
            While Loops:
              name: While Loops
            Edited lessons ABOVE this line:
              name: Edited lessons ABOVE this line
            Buttons and Events:
              name: Buttons and Events
            Make Your Own Multi-Screen App:
              name: Make Your Own Multi-Screen App
            Unit 5 Assessment 1:
              name: Unit 5 Assessment 1
            Unit 5 Assessment 2:
              name: Unit 5 Assessment 2
            "'If' Statements Unplugged":
              name: "'If' Statements Unplugged"
            '"If" Statements Unplugged':
              name: '"If" Statements Unplugged'
            Getting started with If Statements:
              name: Getting started with If Statements
            Unit 3 Chapter 1 Assessment 3:
              name: Unit 3 Chapter 1 Assessment 3
            If statements:
              name: If statements
            Unit 3 Assessment 3:
              name: Unit 3 Assessment 3
            Unit 3 Assessment 4:
              name: Unit 3 Assessment 4
            If-else-if and Conditional Logic:
              name: If-else-if and Conditional Logic
            'Building an App: Color Sleuth':
              name: 'Building an App: Color Sleuth'
            Possibly use later:
              name: Possibly use later
            Unit 5 Assessment 3:
              name: Unit 5 Assessment 3
            Unit 5 Assessment 4:
              name: Unit 5 Assessment 4
            Boolean Expressions and "If" Statements:
              name: Boolean Expressions and "If" Statements
            '"if-else-if" and Conditional Logic':
              name: '"if-else-if" and Conditional Logic'
            'Building an App: Multi-Screen App':
              name: 'Building an App: Multi-Screen App'
            'Building an App: Clicker Game':
              name: 'Building an App: Clicker Game'
            'Building an App: Image Scroller':
              name: 'Building an App: Image Scroller'
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
            Unit 5 Assessment 5 - Practice AP questions:
              name: Unit 5 Assessment 5 - Practice AP questions
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Multi-Screen Apps:
              name: Multi-Screen Apps
            '"if" Statements Unplugged':
              name: '"if" Statements Unplugged'
            Boolean Expressions and "if" Statements:
              name: Boolean Expressions and "if" Statements
        csp6:
          title: CSP Unit 6 - AP Performance Tasks
          description: This unit covers the preparation and completion of the Create and Explore Performance Tasks.
          description_short: Lessons guide students to prepare for and complete the AP Performance Tasks.
          description_audience: ''
          stages:
            Create PT:
              name: Create PT
            Create PT Prep:
              name: Create PT Prep
            Explore PT:
              name: Explore PT
            Explore PT Prep:
              name: Explore PT Prep
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
        CSDU3-Draft:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: Temp place to work on U3 of Disco
          description_short: Programming
          description_audience: ''
          stages:
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Collision Detection:
              name: Collision Detection
            Collisions:
              name: Collisions
            Complex Conditionals:
              name: Complex Conditionals
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Draw Loop and Randomization:
              name: Draw Loop and Randomization
            Drawing in Game Lab:
              name: Drawing in Game Lab
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Sprite Movement Methods:
              name: Sprite Movement Methods
            Sprites and Images:
              name: Sprites and Images
            Sprites and Properties:
              name: Sprites and Properties
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: Variables and Animation
            Functions:
              name: Functions
            Platform Jumper:
              name: Platform Jumper
            Defender:
              name: Defender
            'Project: Build a Game':
              name: 'Project: Build a Game'
            Velocity:
              name: Velocity
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
        2016_sciencePD_phase1:
          title: 'CS in Science: Part 1'
          description: In Partnership with Project GUTS
          description_short: In Partnership with Project GUTS
          description_audience: ''
          stages:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
        TEMP CSD Unit 3:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: ''
          description_short: Programming
          description_audience: ''
          stages:
            Drawing in Game Lab:
              name: Drawing in Game Lab
        CSF_Secret_Sample:
          title: Secret Sample
          description: Test of new educational philosophy
          description_short: This is a secret...shhhhh
          description_audience: Ages 8-18
          stages:
            Sample Stage:
              name: Sample Stage
        ECSPD1:
          title: ECS Part 1
          description: Two hour introduction to your Professional Learning Program for the ECS Version 5 curriculum
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          stages:
            Background and Context:
              name: Background and Context
            'Classroom and Workshop Style ':
              name: 'Classroom and Workshop Style '
            ECS Curriculum:
              name: ECS Curriculum
            Welcome to Phase 1!:
              name: Welcome to Phase 1!
            Wrap Up:
              name: Wrap Up
        algebraFacilitator:
          title: Computer Science in Algebra Facilitator Pre Work
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          stages:
            Evaluation Blocks:
              name: Evaluation Blocks
            Introduction to PD:
              name: Introduction to PD
            Teacher Dashboard:
              name: Teacher Dashboard
            Why Computer Science belongs in Algebra:
              name: Why Computer Science belongs in Algebra
        sciencePD1:
          title: 'CS in Science: Part 1'
          description: In Partnership with Project GUTS
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          stages:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: Introduction to Complex Adaptive Systems
            Introduction to Computational Science:
              name: Introduction to Computational Science
            Introduction to PD:
              name: Introduction to PD
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: The Tutorial
            Using Computer Models in Science:
              name: Using Computer Models in Science
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: What to Expect
        cspoptional:
          title: CS Principles Optional Lessons
          description: Optional lessons and content across all of the CS Principles units are listed here
          description_short: Optional
          description_audience: ''
          stages:
            Algorithms Detour - How Routers Learn:
              name: Algorithms Detour - How Routers Learn
            Algorithms Detour - Minimum Spanning Tree:
              name: Algorithms Detour - Minimum Spanning Tree
            Algorithms Detour - Shortest Path:
              name: Algorithms Detour - Shortest Path
            Unit 1 - Encoding Numbers in the Real World:
              name: Unit 1 - Encoding Numbers in the Real World
            Unit 1 - Sending Bits in the Real World:
              name: Unit 1 - Sending Bits in the Real World
            Unit 1 - Algorithms Detour - Minimum Spanning Tree:
              name: Unit 1 - Algorithms Detour - Minimum Spanning Tree
            Unit 1 - Algorithms Detour - Shortest Path:
              name: Unit 1 - Algorithms Detour - Shortest Path
            Unit 1 - How Routers Learn:
              name: Unit 1 - How Routers Learn
            Unit 4 - Hard Problems - The Traveling Salesperson Problem:
              name: Unit 4 - Hard Problems - The Traveling Salesperson Problem
            Unit 4 - One-Way Functions - The WiFi Hotspot Problem:
              name: Unit 4 - One-Way Functions - The WiFi Hotspot Problem
        cspunit1-support:
          title: Online Support for CSP Unit 1
          description: This is a test Professional Learning Course
          description_audience: ''
          description_short: ''
          stages:
            Chapter Overviews:
              name: Chapter Overviews
            Encoding and Sending Numbers:
              name: Encoding and Sending Numbers
            Intro to the Unit:
              name: Intro to the Unit
            Running a Constructive Classroom:
              name: Running a Constructive Classroom
            Sending Binary Messages:
              name: Sending Binary Messages
            Strategies for Student Writing:
              name: Strategies for Student Writing
            Supporting Peer Learning:
              name: Supporting Peer Learning
            'Tool Talk: Intro to Netsim':
              name: 'Tool Talk: Intro to Netsim'
        test-teaching-ap-cs-unit-1:
          title: Test CPS PD
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            test Unit 1 content module Alpha:
              name: test Unit 1 content module Alpha
            test Unit 1 content module Bravo:
              name: test Unit 1 content module Bravo
            test Unit 1 content module Charlie:
              name: test Unit 1 content module Charlie
            test Unit 1 practice module Delta:
              name: test Unit 1 practice module Delta
            test Unit 1 practice module Echo:
              name: test Unit 1 practice module Echo
            test Unit 1 practice module Foxtrot:
              name: test Unit 1 practice module Foxtrot
            test Unit 1 required reading:
              name: test Unit 1 required reading
        allthehiddenthings:
          title: All the Hidden Things!
          description: Unreleased level types for UI testing as admin
          description_short: Unreleased level types for UI testing as admin
          stages:
            Contained Levels:
              name: Contained Levels
            Game Lab:
              name: Game Lab
        cspunit1-support-test:
          title: CSP Unit 1 teacher support
          description: Online Supports for CSP Unit 1
          description_audience: ''
          description_short: ''
          stages:
            Unit 1 Overview:
              name: Unit 1 Overview
        cspunit1-tools:
          title: netsim task completion
          description: introduction to the internet simulator and a discussion of how we use it to teach the internet
          stages:
            netsim:
              name: netsim
        csp-facilitators:
          title: CSP Tool Overview
          description: A collection of tools from the CS Principles course. These levels provide a glimpse into the tools we use throughout the curriculum to
          description_short: Introduction to CS Principles for new Facilitators
          description_audience: ''
          stages:
            Introduction to Events:
              name: Introduction to Events
            Introduction to Text Compression:
              name: Introduction to Text Compression
            Turtle Programming:
              name: Turtle Programming
        cspassessment:
          title: "[Deprecated] CS Principles Culminating Assessment"
          description: 'This assessment has been deprecated and is scheduled for removal in Summer of 2017.  Students may complete the test and see their own results, but a teacher will not be able to see results for students in a section.  Please use the official CSP practice exam from the College Board.  [This 55-question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.]'
          description_short: This assessment has been deprecated and is scheduled for removal in Summer of 2017.
          description_audience: ''
          stages:
            CS Principles Culminating Assessment:
              name: CS Principles Culminating Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            CSP Longitudinal Contact Request:
              name: CSP Longitudinal Contact Request
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            "[Deprecated - teacher cannot see results] CSP Culminating Assessment":
              name: "[Deprecated - teacher cannot see results] CSP Culminating Assessment"
            'NOTE: Deprecated - teacher cannot see results. CSP Culminating Assessment':
              name: 'NOTE: Deprecated - teacher cannot see results. CSP Culminating Assessment'
            'NOTE: Deprecated. Teacher cannot see results. CSP Culminating Assessment':
              name: 'NOTE: Deprecated. Teacher cannot see results. CSP Culminating Assessment'
        cspexam1-mWU7ilDYM9:
          title: CS Principles Culminating Assessment - Part 1
          description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.'
          description_short: This multiple choice assessment covers questions across 7 big ideas of computer science. It is part 1 of a two-part 50 question exam.
          description_audience: ''
          stages:
            CS Principles Culminating Assessment Part 1:
              name: CS Principles Culminating Assessment Part 1
        cspexam2-AKwgAh1ac5:
          title: CS Principles Culminating Assessment - Part 2
          description: 'This 25 question multiple choice assessment covers questions across 7 big ideas of computer science: Creativity, Abstraction, Data, Algorithms, Programming, The Internet, and Global Impact.  It is part 2 of a two-part 50 question exam'
          description_short: This multiple choice assessment covers questions across 7 big ideas of computer science. It is part 2 of a two-part 50 question exam.
          description_audience: ''
          stages:
            CS Principles Culminating Assessment Part 2:
              name: CS Principles Culminating Assessment Part 2
        CSDU4-Draft:
          title: " TEMP CSD Unit 4 - The Design Process"
          description: Temp place to work on U4 of Disco
          description_short: Design Process and App Lab
          description_audience: ''
          stages:
            Adding Functionality (optional):
              name: Adding Functionality (optional)
            Design Mode:
              name: Design Mode
            Making it Interactive:
              name: Making it Interactive
            Analysis of Design:
              name: Analysis of Design
            Understanding Your User:
              name: Understanding Your User
            Discovering Users:
              name: Discovering Users
            UCD Micro Activity:
              name: UCD Micro Activity
            Designing for Social Impact:
              name: Designing for Social Impact
            Conducting User-Centered Interviews:
              name: Conducting User-Centered Interviews
            Analyzing Interviews:
              name: Analyzing Interviews
            Re-designing a Space:
              name: Re-designing a Space
            Presenting Your Design:
              name: Presenting Your Design
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            User Research:
              name: User Research
            Low Fidelity Prototyping:
              name: Low Fidelity Prototyping
            Preparing for Prototype Testing:
              name: Preparing for Prototype Testing
            Prototype Testing:
              name: Prototype Testing
            Preparing for App Testing:
              name: Preparing for App Testing
            App Testing:
              name: App Testing
            Planning for Improvements:
              name: Planning for Improvements
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation Prep:
              name: App Presentation Prep
            App Presentation:
              name: App Presentation
        CSDU1-Draft:
          title: " TEMP CSD Unit 1"
          description: Temp place to work on U1 of Disco
          description_short: Problem Solving
          stages:
            Exploring Apps:
              name: Exploring Apps
            Processing Information:
              name: Processing Information
        CSDU2-Draft:
          title: " TEMP CSD Unit 2"
          description: Temp place to work on U2 of Disco
          description_short: Web Development
          description_audience: ''
          stages:
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Describing Webpages:
              name: Describing Webpages
            Designing Code for Computers:
              name: Designing Code for Computers
            Digital Footprint:
              name: Digital Footprint
            Images on the Web:
              name: Images on the Web
            'Personal Website: Finalizing Site':
              name: 'Personal Website: Finalizing Site'
            Quality Websites:
              name: Quality Websites
            Text on the Web:
              name: Text on the Web
            Website Design:
              name: Website Design
            Intellectual Property:
              name: Intellectual Property
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            'Personal Website: Connecting Pages':
              name: 'Personal Website: Connecting Pages'
            Classes and External Style Sheets:
              name: Classes and External Style Sheets
            Box Model and Page Layout:
              name: Box Model and Page Layout
            'Personal Website: Midway Check':
              name: 'Personal Website: Midway Check'
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
            Introduction to HTML:
              name: Introduction to HTML
            Headers and Lists:
              name: Headers and Lists
            Designing Web Pages:
              name: Designing Web Pages
            Holding:
              name: Holding
            Describing Web pages:
              name: Describing Web pages
            Multi-Page Websites:
              name: Multi-Page Websites
            Classes:
              name: Classes
            External Style Sheets:
              name: External Style Sheets
            Usability and Accessibility:
              name: Usability and Accessibility
            Peer Review:
              name: Peer Review
            Describing Web Pages:
              name: Describing Web Pages
        CSDU5-Draft:
          title: " TEMP CSD Unit 5"
          description: Temp place to work on U5 of Disco
          description_short: Data
          stage: [ ]
          stages: [ ]
        CSDU6-Draft:
          title: " TEMP CSD Unit 6 "
          description: Temp place to work on U6 of Disco
          description_short: Makerlab
          stage: [ ]
          stages: [ ]
        CSF_Secret_Sample_Story:
          title: Secret Sample with Story
          description: Test of new educational philosophy with guiding storyline
          description_short: This is a secret...shhhh
          description_audience: Ages 8-18+
          stages:
            Sample Stage:
              name: Sample Stage
        MikeTest:
          title: MikeTest
          description: Trying not to break anything
          description_short: Just a script for playing around
          description_audience: Ages 8-98
          stages:
            Artist Functions:
              name: Artist Functions
            Sample Stage:
              name: Sample Stage
            The same thing with named levels:
              name: The same thing with named levels
            You are a coding STAR:
              name: You are a coding STAR
        artistExemplar:
          title: Artist Exemplar
          description: These artist levels will knock the socks off of third graders
          description_short: How can we make the artist levels really hum?
          description_audience: Ages 8-18
          stages:
            Artist Exemplar:
              name: Artist Exemplar
        teachercon:
          title: TeacherCon Supports
          description: We will use this during TeacherCon to deliver supports and materials for sessions
          description_short: We will use this during TeacherCon to deliver supports and materials for sessions
          description_audience: ''
          stages:
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Introduction to Teachercon:
              name: Introduction to Teachercon
            Lesson 1,10:
              name: 'Lesson 1.10: Routers and Redundancy'
            Lesson 1,11:
              name: 'Lesson 1.11: Packets and Making a Reliable Internet'
            Lesson 1,4:
              name: 'Lesson 1.4: Number Systems (Circle Triangle Square)'
            Lesson 1,6:
              name: 'Lesson 1.6: Sending Numbers'
            Lesson 1,9:
              name: 'Lesson 1.9: Internet Addressing (Battleship)'
            Lesson 2,10:
              name: 'Lesson 2.10: Good and Bad Data Visualizations'
            Lesson 2,2:
              name: 'Lesson 2.2: Text Compression'
            Lesson 2,3:
              name: 'Lesson 2.3: Black and White Pixelation'
            Measuring Student Learning:
              name: Measuring Student Learning
        kinderTest:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            'Bee: Conditionals':
              name: 'Bee: Conditionals'
            Kindergarten Stage 1:
              name: Kindergarten Stage 1
        gradeKinder:
          title: Kindergarten
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          stages:
            Being Safe Online:
              name: Being Safe Online
            Debugging:
              name: Debugging
            Events:
              name: Events
            Events Unplugged:
              name: Events Unplugged
            Fuzz Fiesta:
              name: Fuzz Fiesta
            'Jigsaw: Learn to drag and drop':
              name: 'Jigsaw: Learn to drag and drop'
            Loops:
              name: Loops
            Loops Intro:
              name: Loops Intro
            Loops Unplugged:
              name: Loops Unplugged
            Persistence & Frustration:
              name: Persistence & Frustration
            Programming:
              name: Programming
            Programming Unplugged:
              name: Programming Unplugged
            Sequences & Algorithms:
              name: Sequences & Algorithms
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            'Programming Unplugged: Happy Maps':
              name: 'Programming Unplugged: Happy Maps'
        grade4:
          title: Grade 4
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 9-99
          stages:
            'Bee: Determine the Concept':
              name: 'Bee: Determine the Concept'
            'Bee: Functions (Course 3)':
              name: 'Bee: Functions (Course 3)'
            Build a Star Wars Game!:
              name: Build a Star Wars Game!
            Digital Citizenship:
              name: Digital Citizenship
            Explore project ideas:
              name: Explore project ideas
            'Farmer: Functions (New)':
              name: 'Farmer: Functions (New)'
            Final Project - Presentation Day:
              name: Final Project - Presentation Day
            'Final Project - Unplugged: Design Process':
              name: 'Final Project - Unplugged: Design Process'
            'Final Project - Work Day: Build Project Online':
              name: 'Final Project - Work Day: Build Project Online'
            More Programming with Scratch:
              name: More Programming with Scratch
            'New Artist: Functions':
              name: 'New Artist: Functions'
            Scaffolded Project Stage (Loops, Events, Conditionals, Functions):
              name: Scaffolded Project Stage (Loops, Events, Conditionals, Functions)
            Songwriting:
              name: Songwriting
            'Unplugged: Funky Functions':
              name: 'Unplugged: Funky Functions'
        grade1:
          title: Grade 1
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          stages:
            Being Safe Online:
              name: Being Safe Online
            Debugging:
              name: Debugging
            Events:
              name: Events
            Events Unplugged:
              name: Events Unplugged
            'Jigsaw: Learn to drag and drop':
              name: 'Jigsaw: Learn to drag and drop'
            Loops:
              name: Loops
            Loops Intro:
              name: Loops Intro
            Loops Unplugged:
              name: Loops Unplugged
            More Computer Science:
              name: More Computer Science
            Persistence & Frustration:
              name: Persistence & Frustration
            Programming:
              name: Programming
            Programming Unplugged:
              name: Programming Unplugged
            Sequences & Algorithms:
              name: Sequences & Algorithms
            Unspotted Bugs:
              name: Unspotted Bugs
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Events Unplugged: The Big Event':
              name: 'Events Unplugged: The Big Event'
        grade5:
          title: Grade 5
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 10-110
          stages:
            'Artist: For Loops':
              name: 'Artist: For Loops'
            'Artist: Functions with Parameters':
              name: 'Artist: Functions with Parameters'
            'Artist: Variables':
              name: 'Artist: Variables'
            'Bee: For Loops':
              name: 'Bee: For Loops'
            'Bee: Functions with Parameters':
              name: 'Bee: Functions with Parameters'
            Digital Citizenship:
              name: Digital Citizenship
            Explore project ideas:
              name: Explore project ideas
            Final Project - Presentation Day:
              name: Final Project - Presentation Day
            Final Project - Review/Revise Day:
              name: Final Project - Review/Revise Day
            'Final Project - Unplugged: Design Process':
              name: 'Final Project - Unplugged: Design Process'
            'Final Project - Work Day: Build Project Online':
              name: 'Final Project - Work Day: Build Project Online'
            'Play Lab: Variables':
              name: 'Play Lab: Variables'
            Try programming with Khan Academy:
              name: Try programming with Khan Academy
            'Unplugged: Envelope Variables':
              name: 'Unplugged: Envelope Variables'
            'Unplugged: For Loop Fun':
              name: 'Unplugged: For Loop Fun'
            'Unplugged: Songwriting with Parameters':
              name: 'Unplugged: Songwriting with Parameters'
        ecs-unit1:
          title: ECS Unit 1
          description: 'Unit 1: Human-Computer Interaction'
          description_short: 'Unit 1: Human-Computer Interaction'
          description_audience: ''
          stages:
            Unit 1, Day 10 Telling a Story with Data:
              name: Unit 1, Day 10 Telling a Story with Data
            Unit 1, Day 11-14 Data Modeling and Design:
              name: Unit 1, Day 11-14 Data Modeling and Design
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: Unit 1, Day 17-19 What Is Intelligence?
            0: |-
              Unit 1, Days 1-2
              What Is a Computer?
            1: |-
              Unit 1, Days 1-2
              What Is a Computer?
            Unit 1, Days 3-4 Buying a Computer:
              name: Unit 1, Days 3-4 Buying a Computer
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: Unit 1, Days 8-9 Impact of Computers and Communication
            Welcome!:
              name: Welcome!
            Wrap-up:
              name: Wrap-up
        ecs-unit2:
          title: ECS Unit 2
          description: 'Unit 2: Problem Solving'
          description_short: 'Unit 2: Problem Solving'
          description_audience: ''
          stages:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 2:
              name: Intro to Unit 2
            Lesson Overviews:
              name: Lesson Overviews
            Teaching Strategies:
              name: Teaching Strategies
            Unit 2 Challenge:
              name: Unit 2 Challenge
        ecs-unit3:
          title: ECS Unit 3
          description: 'Unit 3: Web Design'
          description_short: 'Unit 3: Web Design'
          description_audience: ''
          stages:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 3:
              name: Intro to Unit 3
            Teaching Strategies:
              name: Teaching Strategies
            Unit 3 Challenge:
              name: Unit 3 Challenge
            Unit 3 Day-by-Day:
              name: Unit 3 Day-by-Day
        ecs-unit4:
          title: ECS Unit 4
          description: 'Unit 4: Programming'
          description_short: 'Unit 4: Programming'
          description_audience: ''
          stages:
            Close & Next Steps:
              name: Close & Next Steps
            Getting Started:
              name: Getting Started
            Intro to Unit 4:
              name: Intro to Unit 4
            Teaching Strategies:
              name: Teaching Strategies
            Unit 4 Challenge:
              name: Unit 4 Challenge
            Unit 4 Day-by-Day:
              name: Unit 4 Day-by-Day
        ecs-unit5:
          title: ECS Unit 5
          description: 'Unit 5: Computer and Data Analysis'
          description_short: 'Unit 5: Computer and Data Analysis'
          description_audience: ''
          stages:
            Complete the Challenge:
              name: Complete the Challenge
            Getting Started:
              name: Getting Started
            Introduction to the Unit 5 Challenge:
              name: Introduction to the Unit 5 Challenge
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: Unit 5 Overview
            Unit 5 lessons:
              name: Unit 5 lessons
            Unit 5 Challenge:
              name: Unit 5 Challenge
            Close & Next Steps:
              name: Close & Next Steps
        ecs-unit6:
          title: ECS Unit 6
          description: 'Unit 6: Robotics'
          description_short: 'Unit 6: Robotics'
          description_audience: ''
          stages:
            Alternative Ideas for Unit 6:
              name: Alternative Ideas for Unit 6
            Getting Started:
              name: Getting Started
            Share out and Submit:
              name: Share out and Submit
            Unit 6 Challenge:
              name: Unit 6 Challenge
            Unit 6 Overview:
              name: Unit 6 Overview
            Unit 6 lessons:
              name: Unit 6 lessons
            Close & Next Steps:
              name: Close & Next Steps
        grade3:
          title: Grade 3
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          stages:
            " Bee: Conditionals":
              name: ' Bee: Conditionals'
            'Artist: Nested Loops':
              name: 'Artist: Nested Loops'
            Bee Debugging:
              name: Bee Debugging
            Bounce:
              name: Bounce
            Build a Game:
              name: Build a Game
            Farmer Conditional with Cards:
              name: Farmer Conditional with Cards
            Farmer Debug Relay Programming:
              name: Farmer Debug Relay Programming
            Farmer Graph Paper Programming:
              name: Farmer Graph Paper Programming
            Farmer Impacts of Computing:
              name: Farmer Impacts of Computing
            'Farmer: While Loops':
              name: 'Farmer: While Loops'
            'Maze: Conditionals with Loops':
              name: 'Maze: Conditionals with Loops'
            'Maze: Nested Loops':
              name: 'Maze: Nested Loops'
            More Programming with CS4FN:
              name: More Programming with CS4FN
            Robot Running the Farm:
              name: Robot Running the Farm
            Unplugged Conditionals with Loops:
              name: Unplugged Conditionals with Loops
        alltheplcthings:
          title: Sample course for PLC things
          description: This is a sample course that has all of the plc special things. Enrollment in this course does nothing. Right now, it's just a copy of TeacherCon
          description_short: This is a sample course that has all of the plc special things
          description_audience: ''
          stages:
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Introduction to Teachercon:
              name: Introduction to Teachercon
            Lesson 1,10:
              name: Lesson 1,10
            Lesson 1,11:
              name: Lesson 1,11
            Lesson 1,4:
              name: Lesson 1,4
            Lesson 1,6:
              name: Lesson 1,6
            Lesson 1,9:
              name: Lesson 1,9
            Lesson 2,10:
              name: Lesson 2,10
            Lesson 2,2:
              name: Lesson 2,2
            Lesson 2,3:
              name: Lesson 2,3
            Test stage with bubbles:
              name: Test stage with bubbles
        csd3:
          title: CSD Unit 3 - Animations and Games
          description: " In Unit 3, you’ll build on your coding experience as you program animations, interactive art, and games in Game Lab. The unit starts off with simple shapes and builds up to more sophisticated sprite-based games, using the same programming concepts and the design process computer scientists use daily. In the final project, you’ll develop a personalized, interactive program."
          description_short: " Learn to program animations, interactive art, and games in Game Lab."
          description_audience: ''
          stages:
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Complex Conditionals:
              name: Complex Conditionals
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Draw Loop and Randomization:
              name: Draw Loop and Randomization
            Drawing in Game Lab:
              name: Drawing in Game Lab
              description_student: The class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. Thee lesson covers the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, the class creates an online version of the image they designed in the previous lesson.
              description_teacher: Students are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Sprites and Images:
              name: Sprites and Images
            Sprites and Properties:
              name: Sprites and Properties
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: Variables and Animation
            Velocity:
              name: Velocity
              description_student: After a brief review of how the counter pattern is used to move sprites, the class is introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
              description_teacher: After a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
            Collision Detection:
              name: Collision Detection
              description_student: The class learns about collision detection on the computer.  Pairs explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  The class then uses the isTouching() block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
              description_teacher: Students learn about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
            Complex Sprite Movement:
              name: Complex Sprite Movement
              description_student: 'The class learns to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement, such as simulating gravity, making a sprite jump, and allowing a sprite to float left or right. In the final levels the class combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects coins. '
              description_teacher: Students learn to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. In particular students will learn how to simulate gravity, make a sprite jump, and allow a sprite to float left or right. In the final levels of the Code Studio progression students combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects a coin. Students are encouraged to make their own additions to the game in the final level.
            Collisions:
              name: Collisions
              description_student: The class programs their sprites to interact in new ways.  After a brief review of how they used the isTouching block, the class brainstorms other ways that two sprites could interact.  They then use isTouching to make one sprite push another across the screen before practicing with the four collision blocks (collide, displace, bounce, and bounceOff).
              description_teacher: Students program their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`).
            Functions:
              name: Functions
              description_student: This lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab.  At the end of the lesson the class uses these skills to organize and add functionality to the final version of their side scroller game.
              description_teacher: Students learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. An unplugged warmup explores how directions at different levels of detail can be useful depending on context. Students learn that higher level or more abstract steps make it easier to understand and reason about steps. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function. At the end of the lesson students use these skills to organize and add functionality to the final version of their side scroller game.
            The Game Design Process:
              name: The Game Design Process
              description_student: This lesson introduces the process the class will use to design games for the remainder of the unit. The class walks through through this process in a series of levels. As part of this lesson the class also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson they have an opportunity to make improvements to the game to make it their own.
              description_teacher: This lesson introduces students to the process they will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. In this lesson students begin by playing a game on Game Lab where the code is hidden. They discuss what they think the sprites, variables, and functions would need to be to make the game. They are then given a completed project guide which shows one way to implement the game. Students are then walked through this process through a series of levels. As part of this lesson students also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson students have an opportunity to make improvements to the game to make it their own.
            Using the Game Design Process:
              name: Using the Game Design Process
              description_student: In this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes.
              description_teacher: In this multi-day lesson, students use the problem solving process from Unit 1 to create a platform jumper game.  They start by looking at an example of a platform jumper, then define what their games will look like.  Next, they use a structured process to plan the backgrounds, variables, sprites, and functions they will need to implement their game.  After writing the code for the game, students will reflect on how the game could be improved, and implement those changes.
            'Project: Build a Game':
              name: 'Project: Build a Game'
            'Project: Design a Game':
              name: 'Project: Design a Game'
            Programming for Entertainment:
              name: Programming for Entertainment
              description_student: The class is asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
              description_teacher: Students are asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
            Plotting Shapes:
              name: Plotting Shapes
              description_student: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
              description_teacher: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
            Shapes and Randomness:
              name: Shapes and Randomness
              description_student: This lesson extends the drawing skills to include width and height and introduces the concept of random number generation. The class learns to draw with versions of ellipse() and rect() that include width and height parameters and to use the background() block to fill the screen with color. At the end of the progression the class is introduced to the randomNumber() block and uses the new blocks to draw a randomized rainbow snake.
              description_teacher: In this lesson students continue to develop their drawing skills. At the beginning of the lesson a teacher-led discussion connects expanded block functionality (e.g. different sized shapes) with the need for more block inputs, or "parameters". Students learn to draw with versions of `ellipse()` and `rect()` that include width and height parameters. They also learn to use the `background()` block. At the end of the progression students are introduced to the `randomNumber()` block. Combining all of these skills students will draw a randomized rainbow snake at the end of the lesson.
            Variables:
              name: Variables
              description_student: This lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks.  Afterwards, the class uses variables to save a random number, allowing the programs to use the same random number multiple times.
              description_teacher: In this lesson students learn how to use variables to label a number in their program or save a randomly generated value. Students begin the lesson with a very basic description of the purpose of a variable. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number. Students use variables to save a random number to see that variables actually store or save their values, allowing them to use the same random number multiple times in their programs.
            Sprites:
              name: Sprites
              description_student: In order to create more interesting and detailed images, the class is introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.  At the end of the lesson, everyone creates a scene using sprites.
              description_teacher: In order to create more interesting and detailed images, students are introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.
            The Draw Loop:
              name: The Draw Loop
              description_student: This lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. Afterwards, everyone uses what they learned to update the sprite scene from the previous lesson.
              description_teacher: In this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. At the end of the lesson students use what they learned to update their sprite scene from the previous lesson.
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
              description_student: This unplugged lesson explores the underlying behavior of variables. Using notecards and string to simulate variables within a program, the class implements a few short programs. Once comfortable with this syntax, the class uses the same process with sprite properties, tracking a sprite's progress across the screen.
              description_teacher: Students explore the underlying behavior of variables through an unplugged activity. Using notecards and string to simulate variables within a program, students implement a few short programs. Once comfortable with this syntax, students use the same process with sprite properties, tracking a sprite's progress across the screen.
            Sprite Movement:
              name: Sprite Movement
              description_student: By combining the Draw Loop and the Counter Pattern, the class writes programs that move sprites across the screen, as well as animate other sprite properties.
              description_teacher: By combining the Draw Loop and the Counter Pattern, students write programs that move sprites across the screen, as well as animate other sprite properties.
            Conditionals:
              name: Conditionals
              description_student: The class starts by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, the class adds conditional if statements to write code that responds to those boolean comparisons.
              description_teacher: Students start by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, students add conditional _if_ statements to write code that responds to those boolean comparisons.
            Keyboard Input:
              name: Keyboard Input
              description_student: Following the introduction to booleans and if statements in the previous lesson, students are introduced to a new block called keyDown() which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
              description_teacher: Following the introduction to booleans and _if_ statements in the previous lesson, students are introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
            Other Forms of Input:
              name: Other Forms of Input
              description_student: The class continues to explore ways to use conditional statements to take user input. In addition to the simple keyDown() command learned yesterday, the class learns about several other keyboard input commands as well as ways to take mouse input.
              description_teacher: In this lesson students continue to explore ways to use conditional statements to take user input. In addition to the simple `keyDown()` command learned yesterday, students will learn about several other keyboard input commands as well as ways to take mouse input.
            Booleans Unplugged:
              name: Booleans Unplugged
              description_student: This lesson introduces boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). The class then groups objects based on increasingly complex boolean statements, then looks at how conditionals can impact the flow of a program.
              description_teacher: |-
                In this lesson, students are introduced to boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). This gets students thinking about how they can frame a property with multiple potential values (such as age) with a binary question.
                
                From there students are provided a group of objects with similar, yet varying, physical properties. With a partner they group those objects based on increasingly complex boolean statements, including compound booleans with AND and OR.
                
                Finally we reveal Conditionals as a tool to make decisions or impact the flow of a program using boolean statements as input.
            Project - Interactive Card:
              name: Project - Interactive Card
              description_student: In this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point.
              description_teacher: In this cumulative project for Chapter 1, students plan for and develop an interactive greeting card using all of the programming techniques they've learned to this point.
            Project - Design a Game:
              name: Project - Design a Game
              description_student: The class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class shares out the completed games.
              description_teacher: Students will plan and build their own game using the project guide from the previous two lessons to guide their project. Working individually or in pairs, students will first decide on the type of game they'd like to build, taking as inspiration a set of sample games. They will then complete a blank project guide where they will describe the game's behavior and scope out the variables, sprites, and functions they'll need to build. In Code Studio, a series of levels prompts them on a general sequence they can use to implement this plan. Partway through the process, students will share their projects for peer review and will incorporate feedback as they finish their game. At the end of the lesson, students will share their completed games with their classmates. This project will span multiple classes and can easily take anywhere from 3-5 class periods.
        grade2:
          title: Grade 2
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          stages:
            At The Dog Park:
              name: At The Dog Park
            Caring for My New Pet:
              name: Caring for My New Pet
            Exploring the Neighborhood:
              name: Exploring the Neighborhood
            Flappy:
              name: Flappy
            Getting Loopy with Puppy:
              name: Getting Loopy with Puppy
            Make a Dog Tag:
              name: Make a Dog Tag
            More CS with Run Marco:
              name: More CS with Run Marco
            New Home for My Pet:
              name: New Home for My Pet
            Online Internet Safety:
              name: Online Internet Safety
            Online My New Pet Jigsaw:
              name: Online My New Pet Jigsaw
            Puppy Event:
              name: Puppy Event
            Puppy Introduction:
              name: Puppy Introduction
            Puppy Loops:
              name: Puppy Loops
            How to behave in the lab_How to use Code_org puzzles:
              name: How to behave in the lab/How to use Code.org puzzles
            Programming at home with my pet:
              name: Programming at home with my pet
            Binary Bracelets:
              name: Binary Bracelets
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            The Big Event:
              name: The Big Event
        transferring-over:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            20-hr Stage 2:
              name: 20-hr Stage 2
            20-hr Stage 9:
              name: 20-hr Stage 9
            Course 2 Stage 17:
              name: Course 2 Stage 17
            Course 3 Stage 16:
              name: Course 3 Stage 16
            Course 3 Stage 17:
              name: Course 3 Stage 17
        k5concepts:
          title: K5 Concepts
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Binary:
              name: Binary
            Conditionals:
              name: Conditionals
            Events:
              name: Events
            For Loops:
              name: For Loops
            Functions:
              name: Functions
            Functions with Parameters:
              name: Functions with Parameters
            Loops:
              name: Loops
            Nested Loops:
              name: Nested Loops
            Variables:
              name: Variables
            While Loops:
              name: While Loops
        algebrapdnext:
          title: Computer Science in Algebra PD Phase 2
          description: Teach Algebra through Functional Programming
          description_short: '\tPhase 3: School Year Support'
          description_audience: ''
          stages:
            Lesson Prep:
              name: Lesson Prep
            Teacher Dashboard:
              name: Teacher Dashboard
            Teaching with Puzzles:
              name: Teaching with Puzzles
            Teaching with the Design Recipe:
              name: Teaching with the Design Recipe
            The Design Recipe:
              name: The Design Recipe
            Welcome!:
              name: Welcome!
        csp-pre-survey:
          title: CS Principles Pre-Survey
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Anonymous student pre-survey:
              name: Anonymous student pre-survey
            NEW Unit 1 Chapter 1 Assessment:
              name: NEW Unit 1 Chapter 1 Assessment
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            Unit 4 Chapter 1 Assessment:
              name: Unit 4 Chapter 1 Assessment
            'Anonymous student survey: Taking the AP exam':
              name: 'Anonymous student survey: Taking the AP exam'
        csd1:
          title: CSD Unit 1 - Problem Solving
          description_short: "  Learn how humans work with computers to solve problems."
          description: " \\r\nUnit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\\r\n"
          description_audience: ''
          stages:
            Intro to Problem Solving:
              name: Intro to Problem Solving
              description_student: 'The class works in groups to design aluminum foil boats that will support as many pennies as possible.  At the end of the lesson groups reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. '
              description_teacher: 'In this lesson, students work in groups to design aluminum foil boats that will support as many pennies as possible. Groups have two rounds to work on their boats, with the goal of trying to hold more pennies than they did in round 1. The structure of the activity foreshadows different steps of the problem solving process that students will be introduced to in more detail in the following lesson. At the end of the lesson students reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. '
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: This lesson introduces the formal problem solving process that the class will use over the course of the year, Define - Prepare - Try - Reflect.  The class relates these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
              description_teacher: This lesson introduces the formal problem solving process that students will use over the course of the year, Define - Prepare - Try - Reflect. The lesson begins by asking students to brainstorm all the different types of problems that they encounter in everyday life. Students are then shown the four steps of the problem solving process and work together to relate these abstract steps to their actual experiences solving problems. First students relate these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
            Exploring Problem Solving:
              name: Exploring Problem Solving
              description_student: 'In this lesson the class applies the problem solving process to three different problems: a word search, a seating arrangement for a birthday party, and planning a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems.'
              description_teacher: |-
                In this lesson students apply the problem solving process to three different problems in order to better understand the value of each step. They will solve a word search, arrange seating for a birthday party, and plan a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems. The lesson concludes with students reflecting on their experience with the problem solving process. They will justify the inclusion of each step and will brainstorm questions or strategies that can help them better define open-ended problems, as this is often the most critical step.
                
                This lesson will likely take two class periods or more to complete. The first two problems may fit into a single class period but the third will need to be moved to a second day.
            What is a Computer?:
              name: What is a Computer?
              description_student: In this lesson the class develops a preliminary definition of a computer. After brainstorming the possible definitions for a computer, the class works in groups to sort pictures into “is a computer” or “is not a computer” on poster paper and explain their motivations for choosing some of the most difficult categorizations.  The teacher then introduces a definition of the computer and allows groups to revise their posters according to the new definition.
              description_teacher: |
                In this lesson students develop a preliminary definition of a computer. To begin the lesson, the class will brainstorm possible definitions for a computer and place the results of this brainstorm on the board. Next, students will work in groups to sort pictures into “is a computer” or “is not a computer” on poster paper. Groups will place their posters around the room and briefly explain their motivations for choosing some of their most difficult categorizations.  The teacher will then introduce a definition of the computer and allow students to revise their posters according to the new definition.
            Representing Information:
              name: Representing Information
            Processing with Bits:
              name: Processing with Bits
            Human vs. Computer Processing:
              name: Human vs. Computer Processing
            Processing with Apps:
              name: Processing with Apps
            'Project: Apps and Problem Solving':
              name: 'Project: Apps and Problem Solving'
            Human vs Computer Processing:
              name: Human vs Computer Processing
            Input and Output:
              name: Input and Output
              description_student: In this the class students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device.  To conclude the lesson the class examines common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
              description_teacher: In this lesson students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device. Earlier in the activity students are prompted to focus on more obvious physical inputs and outputs (e.g. a keyboard as an input or a screen as an output) but later discussions lead students to consider less obvious examples (e.g. that a touch screen is both an input and output, or the fact that the Internet can serve as both input and output). Throughout the lesson the teacher records inputs and outputs that are identified on a T-Chart at the front of the room. To conclude the lesson students examine common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
            Processing:
              name: Processing
              description_student: This lesson dives deeper into the concept of processing that was introduced as part of the definition of a computer.  Pairs work together to puta deck of cards in order, a form of processing information.  In the end, the class discusses what processing means within the context of solving information problems.
              description_teacher: Students complete two unplugged card sorting activities to explore the meaning of processing and its relationship to problem-solving. The first has few constraints and is used to introduce a high-level definition of processing. The next introduces more constraints that forces students to develop an algorithm that will always successfully process the cards. Students iteratively develop, test, and share their algorithms with classmates. A wrap-up discussion has students reflect on the different types of problem-solving they used in these activities and the value of producing an algorithm to solve a problem.
            Storage:
              name: Storage
              description_student: This lesson focuses on the storage component of the definition of a computer, within the content of processing information. The class spends the majority of the lesson developing and sharing algorithms to process information, with an emphasis on how much storage is needed for any particular algorithm. The lesson concludes with a discussion of the importance of storage while processing information.
              description_teacher: Students explore the importance of storage within the Input-Storage-Processing-Output model of a computer. The warm-up activity asks students to reflect on the types of information they have seen computers store in the past, like documents, photographs, or videos. The unplugged main activity has students develop an algorithm to process a small pile of cards in search of specific cards within the deck. Constraints on how students can move the cards force them to consider the importance of storage even while they are processing the deck. The lesson concludes with a discussion of the two types of storage students saw in this lesson and the importance of storage while processing information.
            Apps and Problem Solving:
              name: Apps and Problem Solving
              description_student: 'This lesson covers the input and output aspects of computers in a context that is relevant and familiar to students: apps. The class evaluates various web applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the outputs they provide to users. The class concludes with observations of these apps as well as a teacher led discussion about the impact of apps on society. '
              description_teacher: 'This lesson covers the input and output aspects of computers in a context that is relevant and familiar to students: apps. In pairs, students evaluate various web applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the outputs they provide to users. The class concludes with observations of these apps as well as a teacher led discussion about the impact of apps on society. '
            Project - Propose an App:
              name: Project - Propose an App
              description_student: To conclude the study of the problem solving process and the input/output/store/process model of a computer, the class proposes apps designed to solve real world problems. This project is completed across multiple days and culminates in a poster presentation highlighting the features of each app. The project is designed to be completed in pairs though it can be completed individually.
              description_teacher: To conclude their study of the problem solving process and the input/output/store/process model of a computer, students will propose an app designed to solve a real world problem. This project will be completed across multiple days and will result in students creating a poster highlighting the features of their app that they will present to their classmates. A project guide provides step by step instructions for students and helps them organize their thoughts. The project is designed to be completed in pairs though it can be completed individually.
        csp-online-test:
          title: test space for csp online support
          description_short: This is a sample course for testing csp online pd
          description: This is a test space for online pd. Enrollment in this course does nothing.
          description_audience: ''
          stages:
            Unit 1 Overview:
              name: Unit 1 Overview
            'Lessons 2-3: Binary Messages':
              name: 'Lessons 2-3: Binary Messages'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            'Lessons 4-6: Encoding and Sending Numbers':
              name: 'Lessons 4-6: Encoding and Sending Numbers'
            'Lesson 7: Encoding and Sending Text':
              name: 'Lesson 7: Encoding and Sending Text'
            'lessons 9: Internet Addressing':
              name: 'lessons 9: Internet Addressing'
            'lessons 10: Routers and Redundancy':
              name: 'lessons 10: Routers and Redundancy'
            'lessons 11-12: Protocols and Abstraction':
              name: 'lessons 11-12: Protocols and Abstraction'
            'Lessons 2 - 3: Binary Messages':
              name: 'Lessons 2 - 3: Binary Messages'
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 'Lessons 4 - 6: Encoding and Sending Numbers'
            'Lesson 9: Internet Addressing':
              name: 'Lesson 9: Internet Addressing'
            'Lessons 10 - 11: Redundancy and Packets':
              name: 'Lessons 10 - 11: Redundancy and Packets'
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 'Lessons 12 - 13: Abstraction on the Internet'
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 'Lessons 10 - 11: Routers, Redundancy, and Packets'
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: 'Lessons 1 - 2: Bytes, File Sizes, and Text Compression'
            'Lessons 3 - 4 : Encoding Images':
              name: 'Lessons 3 - 4 : Encoding Images'
            'Lesson 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'Lesson 5 - 6: Compression Formats and Developing your own Encoding Scheme'
            'Lessons 7 - 11: Interpreting Visual Data':
              name: 'Lessons 7 - 11: Interpreting Visual Data'
            'Lessons 12 - 15: Communicating with Visualizations':
              name: 'Lessons 12 - 15: Communicating with Visualizations'
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 'Lessons 7 - 10: Interpreting Visual Data'
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 'Lessons 11 - 15: Communicating with Visualizations'
            Unit 2 Overview:
              name: Unit 2 Overview
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme'
            Unit 3 Overview:
              name: Unit 3 Overview
            'Lessons 1 - 3: Algorithms':
              name: 'Lessons 1 - 3: Algorithms'
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design'
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers'
            Event Driven Programming:
              name: Event Driven Programming
            Variables and Strings:
              name: Variables and Strings
            Conditionals and Boolean Logic:
              name: Conditionals and Boolean Logic
            While Loops and Introduction to Arrays:
              name: While Loops and Introduction to Arrays
            Processing Arrays and Functions with Return Values:
              name: Processing Arrays and Functions with Return Values
            Unit 5 Overview:
              name: Unit 5 Overview
        csp1-support:
          title: Unit 1 Online Professional Learning Course
          description_short: Teacher Professional Learning Course for CSP Unit 1
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 1.
          description_audience: ''
          stages:
            Unit 1 Overview:
              name: Unit 1 Overview
            'Lessons 2 - 3: Binary Messages':
              name: 'Lessons 2 - 3: Binary Messages'
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 'Lessons 4 - 6: Encoding and Sending Numbers'
            'Lesson 7: Encoding and Sending Text':
              name: 'Lesson 7: Encoding and Sending Text'
            'Lesson 9: Internet Addressing':
              name: 'Lesson 9: Internet Addressing'
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 'Lessons 10 - 11: Routers, Redundancy, and Packets'
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 'Lessons 12 - 13: Abstraction on the Internet'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
        basketball:
          title: Choose your team and make a basketball game
          description_audience: ''
          description_short: Choose your team and make a basketball game
          description: Choose your team and make a basketball game
          stages:
            Bounce:
              name: Bounce
        sample-csp5:
          stages:
            Controlling Memory with Variables:
              name: Controlling Memory with Variables
        hoc-encryption:
          title: 'Hour of Code: Simple Encryption'
          description_audience: ''
          description_short: In this lesson, students are introduced to the need for encryption and simple techniques for breaking (or cracking) secret messages.
          description: In this lesson, students are introduced to the need for encryption and simple techniques for breaking (or cracking) secret messages.
          stages:
            Simple Encryption:
              name: Simple Encryption
        fesbinary:
          title: Binary
          description_audience: Falmouth Middle School
          description_short: ''
          description: ''
          stages:
            Binary Bracelets:
              name: Binary Bracelets
            Binary Images:
              name: Binary Images
            Binary Artist Puzzles:
              name: Binary Artist Puzzles
            RGB Color:
              name: RGB Color
            Processing with Bits:
              name: Processing with Bits
        csd2:
          title: CSD Unit 2 - Web Development
          description_audience: ''
          description_short: "  Learn to build your own web site in Web Lab."
          description: " In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet."
          stages:
            new stage:
              name: new stage
            Quality Websites:
              name: Quality Websites
            Website Design:
              name: Website Design
            Describing Web pages:
              name: Describing Web pages
            Text on the Web:
              name: Text on the Web
            Images on the Web:
              name: Images on the Web
            Clean Code and Debugging:
              name: Clean Code and Debugging
              description_student: In this lesson covers common issues that arise when designing web pages in HTML. The class will correct errors in a sequence of increasingly complex web pages found on Code Studio and learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read.
              description_teacher: In this lesson students will deal with common issues that arise when designing web pages in HTML. Students will correct errors in a sequence of increasingly complex web pages found on Code Studio. In the process they will learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read. At the end of the lesson students create a list of strategies for debugging web pages and ensuring they are easy to read and maintain.
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            Multi-Page Websites:
              name: Multi-Page Websites
            Classes:
              name: Classes
            External Style Sheets:
              name: External Style Sheets
            Peer Review:
              name: Peer Review
            Box Model and Page Layout:
              name: Box Model and Page Layout
            Digital Footprint:
              name: Digital Footprint
              description_student: This lesson takes a step back from creating the personal website to talk about personal information people choose to share digitally.  The class begins by discussing what types of information are good to share with other people, then looks at several sample social media pages to see what types of personal information could be shared intentionally or unintentionally.  Finally, the class comes up with a set of guidelines to follow when putting information online.
              description_teacher: "As students have recently spent some time thinking about the actual content that will go into their personal website, this lesson takes a step back from the unit-long project (publication of a personal website) to help students articulate what personal information they choose to share digitally and with whom.  It also reinforces the notion that much of the information that they choose to share digitally falls largely out of their control the moment it is released.  \\r\n\\r\nStudents begin by individually identifying appropriate audiences with whom they would be comfortable sharing given pieces of personal information.  They then look at several social media pages to determine what sorts of information people are sharing about themselves or one another.  Last, students reflect on what guidelines they think are appropriate for posting information online.\\r\n\\r\nThe ultimate point of this lesson is not to scare students, but rather to experientially bring students to realizing precisely what level of control they don’t have in releasing information into the web."
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
              description_student: After first completing a web search scavenger hunt, the class learns about the inner workings of search engines and has an opportunity to flex their analytical skills in a search for strange and unlikely animals.
              description_teacher: This lesson encourages students to think more critically about how web searches work and how to find relevant and trustworthy information online. After viewing and discussion a video about how search engines work, students will search for information about several unlikely animals. They'll need to analyze the sites they find for reliability in order to identify which of the animals is actually a hoax.
            Intellectual Property:
              name: Intellectual Property
            'Personal Website: Finalizing Site':
              name: 'Personal Website: Finalizing Site'
            'Project: Personal Portfolio Website':
              name: 'Project: Personal Portfolio Website'
            Images in HTML:
              name: Images in HTML
            Styling Text with CSS:
              name: Styling Text with CSS
              description_student: This lesson introduces CSS as a way to style elements on the page. The class learns the basic syntax for CSS rule-sets and then explores properties that impact HTML text elements.  Finally, everyone applies text styles to their personal websites.
              description_teacher: |+
                This lesson introduces CSS as a way to style elements on the page. Students learn the basic syntax for CSS rule-sets and then explore properties that impact HTML text elements. They work on a HTML page about Guinness World Record holders, adding their own style to the provided page. In the last level, students apply what they have learned about styles for text elements to their personal web page.
            Styling Elements with CSS:
              name: Styling Elements with CSS
              description_student: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. The class begins by investigating and modifying the new CSS styles on a Desserts of the World page. Afterwards, everyone applies this new knowledge to their personal websites.
              description_teacher: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. Students begin this lesson by looking at a website about Desserts of the World. They investigate and modify the new CSS styles on this website, adding their own styles to the page. After working on the Desserts page, students apply their knowledge of new CSS properties to do more styling of their personal websites.
            Exploring Websites:
              name: Exploring Websites
              description_student: This lesson covers the purposes that a website might serve, both for the users and the creators. The class explores a handful of the most-used websites in the United States and discusses how each of those sites is useful for users and how it might also serve its creators.
              description_teacher: Every website has a purpose, a reason someone created it and others use it. In this lesson, students will start to consider the purposes a website might serve, both for the users and the creators. Students will explore a handful of the most-used websites in the United States and try to figure out how each of those sites is useful for users and how they might also serve their creators.
            'Websites for Expression ':
              name: 'Websites for Expression '
              description_student: 'This lesson introduces websites as a means of personal expression.  The class first discusses different ways that people express and share their interests and ideas, then looks at a few exemplar websites made by students from a previous course. Finally everyone brainstorms and shares a list of topics and interests to include, creating a resource for developing a personal website in the rest of the unit. '
              description_teacher: In this lesson students investigate ways to use websites as a means of personal expression and develop a list of topics and interests that they would want to include on a personal website. To begin the lesson students brainstorm different ways that people express and share their interests and ideas. Students then look at a few exemplar websites made by students from a previous CS Discoveries course to identify ways they are expressing their ideas. Finally students brainstorm and share a list of topics and interests they might want to include on a personal website which they can reference for ideas as they progress through the unit.
            Intro to HTML:
              name: Intro to HTML
              description_student: This lesson introduces to HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. The class looks at an HTML page in Web Lab and discusses how HTML tags help solve this problem, then uses HTML to write the first web pages of the unit.
              description_teacher: In this lesson students are introduced HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. Students then look at an exemplar HTML page in Web Lab and discuss with their classmates how HTML tags help solve this problem. Students then write their first HTML. A wrap-up discussion helps to solidify the understanding of content vs. structure that was developed throughout the lesson.
            Headers:
              name: Headers
              description_student: This lesson continues the introduction to HTML tags, this time with headers.  The class practices using header tags to create page and section titles and learns how the different header elements are displayed by default.  Next, the class plans how to organize their content on the personal web pages that will be built across the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to structure text on web pages, this time with headers.  Students learn how the different header elements are displayed by default and practice using them to create page and section titles.  Students then start to decide how they will organize their content on their own personal web pages.  In the last level, students begin the project that they will continue to work on throughout the unit.
            Lists:
              name: Lists
              description_student: This lesson introduces ordered and unordered lists and the associated  &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; HTML tags.  The class practices using the tags, then goes back to the personal web page project to add a new HTML page that includes the new tags.
              description_teacher: Students are introduced to ordered and unordered lists in HTML and work through a few levels in which they use the &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; tags.  They then go back to their project, where they add a new HTML page.  Inside the new page, they write the HTML to display a recipe, top ten list, or any other content that uses the new tags that they have learned.
            Intellectual Property and Images:
              name: Intellectual Property and Images
              description_student: This lesson covers how to use media such as images, video, or music created by others a website while respecting the rights of the creator of that media. After first studying Creative Commons licensing, the class learns how to add images to web pages, and how to give proper attribution when doing so.
              description_teacher: "Starting with an exploration of the song \"Happy Birthday\" and its history of copyright protection, the class explores the purpose and role of copyright for both creators and users of creative content. After a brief discussion about the purpose of copyright, we move on to an activity exploring the various Creative Commons licenses as a solution to the difficulty in dealing with copyright. \n\nFinally, with a common understanding of the restrictions of various Creative Commons licenses, students will learn how to add images to their web pages using the &lt;img&gt; tag."
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
              description_student: 'This lesson covers hyperlinks, which allow web developers to connect pages together into one website.  The class will link together all the previous pages into one project, and create navigation bars for each page before publishing the entire site to the Web.  '
              description_teacher: "After learning about how to link web pages to one another, students are finally able to publish the website they have been working on.  In this lesson, they link together all the previous pages they have created into one project, create a new page, and add navigation between the pages before publishing the entire site to the Web.  \n\n"
            RGB Colors and Classes:
              name: RGB Colors and Classes
              description_student: This lesson covers classes and custom colors. The class first learns how to specify custom colors using RGB (red, green, blue) values, then applies these colors to a new Four Seasons web page, which uses CSS classes.  Using classes, the class adds more styles to the Four Seasons web page, then use them to style their personal websites.
              description_teacher: In this lesson, students first learn how to specify custom colors using their RGB (red, green, blue) values.  They then apply these colors to a new Four Seasons web page, which uses CSS classes.  CSS classes allow web developers to treat groups of elements they want styled differently than other elements of the same type. Using classes, students add more styles to the Four Seasons web page, then use them to style their personal websites.
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
              description_student: In the last few days of the unit, the class finalizes their personal websites, working with peers to get feedback, review the rubric, and put the finishing touches on the site. To cap off the unit, everyone shares their projects and how they were developed.
              description_teacher: |
                Students have spent a lot of time throughout the unit working on their Personal Website. In the final couple of days students finalize their websites.  They work with peers to get feedback, put the finishing touches on the websites, review the rubric and reflect on their process. To cap off the unit, they will share their projects and also a overview of the process they took to get to that final design.
        csp2-support:
          title: Unit 2 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 2
          description: 'This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 2. '
          stages:
            Unit 2 Overview:
              name: Unit 2 Overview
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: 'Lessons 1 - 2: Bytes, File Sizes, and Text Compression'
            'Lessons 3 - 4 : Encoding Images':
              name: 'Lessons 3 - 4 : Encoding Images'
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme'
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 'Lessons 7 - 10: Interpreting Visual Data'
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 'Lessons 11 - 15: Communicating with Visualizations'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
        csd4:
          title: CSD Unit 4 - The Design Process
          description_audience: ''
          description_short: "  Learn how to design a program that meets the needs of your users."
          description: Unit 4 introduces the broader social impacts of computing. Through a series of design challenges, you will learn how to better understand the needs of others while developing a solution to a problem. The second half of the unit consists of an iterative team project, during which teams have the opportunity to identify a need that they care about, prototype solutions both on paper and in App Lab, and test solutions with real users to get feedback and drive further iteration.
          stages:
            Analysis of Design:
              name: Analysis of Design
              description_student: The class explores a variety of different teapot designs to consider how design choices or made and why. Using the teapots as an example, the class will explore the relationship between users, their needs, and the design of objects they use.
              description_teacher: To kick off a unit devoted to group problem solving and developing products for other users, students begin by investigating the design of various teapots. Students analyze each teapot, attempting to identify how specific user needs might have informed its design. By considering these design choices, and attempting to match each teapot with a potential user, students can begin to see how taking a user-centered approach to designing products (both physical and digital) can make those products more useful and usable. To conclude the activity, students are asked to propose some changes to one of the teapots that would make it more useful or usable.
            Understanding Your User:
              name: Understanding Your User
              description_student: Using user profiles, the class explores how different users might react to a variety of products. Role playing as a different person, each member of the class will get to experience designs through someone else's eyes.
              description_teacher: |
                Designers need to understand their users’ needs in order to create useful products.  This lesson encourages students to think about how to design for another person by role-playing as someone else using a user profile and reacting as that user to a series of products.  Each student is assigned a user profile describing a person, which they then use to choose appropriate products, critique product design, and suggest improvements to design.
            Discovering Users:
              name: Discovering Users
            User-Centered Design Micro Activity:
              name: User-Centered Design Micro Activity
              description_student: In small groups, the class uses the design process to come up with ideas for smart clothing. From brainstorming, to identifying users, to finally proposing a design, this is the first of several opportunities in this unit to practicing designing a solution for the needs of others.
              description_teacher: This lesson guides students through an abbreviated version of the design process they will be seeing throughout this unit. Students first brainstorm a list of potential users of smart clothing. As a class, they then group these ideas into broad categories and each group will choose one category of user. Groups repeat this process to brainstorm needs or concerns of their user, eventually categorizing these needs and choosing one to focus on. Finally, students design a piece of smart clothing, using the specific needs and concerns they brainstormed to guide their decision making. At the end of the class students quickly share their decision-making process and get feedback on how well their product addresses the user need they selected.
            Designing for Social Impact:
              name: Designing for Social Impact
            Conducting User-Centered Interviews:
              name: Conducting User-Centered Interviews
            Analyzing Interviews:
              name: Analyzing Interviews
            Redesigning a Space:
              name: Redesigning a Space
            Presenting Your Design:
              name: Presenting Your Design
            Designing Apps for Good:
              name: Designing Apps for Good
              description_student: To kick off the app design project, the class organizes into teams and starts exploring app topics. Several example socially impactful apps serve as inspiration for the project.
              description_teacher: To kick off the app design project that lasts through the end of the unit, students first explore a number of apps designed for social impact that have been created by other students. The class then reviews the Define, Prepare, Try, and Reflect steps of the Problem Solving process as they develop an idea for an app of their own with social impact. Finally, students will form project teams and lay out a contract for how the team will function throughout the development of their app.
            Market Research:
              name: Market Research
              description_student: Dive into app development by exploring existing apps that may serve similar users. Each group identifies a handful of apps that address the same topic they are working on, using those apps to help refine the app idea they will pursue.
              description_teacher: In this lesson students research apps similar to the one they intend on creating to better understand the needs of their users. Students work within their teams to search the Internet for other apps, then evaluate the ones they find interesting. By the end of the lesson, each team will have a clearer idea about the type of app they want to create and further refine who their target users are. Each team will maintain a list of citations for all the apps they examined for use in their final presentation.
            Paper Prototypes:
              name: Paper Prototypes
              description_student: Paper prototypes allow developers to quickly test ideas before investing a lot of time writing code. In this lesson teams explore some example apps created in App Lab, using those apps to help inform the first paper prototypes of their apps.
              description_teacher: |
                Before starting to design apps, we need to help students to better scope their expectations. Because students will eventually be prototyping these apps in App Lab, they will be in better shape if their ideas align with the kinds of apps that are easily prototyped in App Lab. Teams start this scoping by looking through several example apps designed to demonstrate apps that can be created with App Lab. Teams then can chose one (or more) of the apps as a basis for their own. From there, teams have some time to discuss the basic functionality of their app before using 3x5 index cards to develop paper prototypes.
            Prototype Testing:
              name: Prototype Testing
              description_student: In this lesson teams test out their paper prototypes with other members of the class. With one student role playing the computer, one narrating, and the rest observing, teams will get immediate feedback on their app designs which will inform the next version of their app prototypes.
              description_teacher: The primary purpose of developing paper prototypes is that they allow for quick testing and iteration before any code is written. This lesson is focused on giving teams a chance to test their prototypes before moving to App Lab. Teams develop a plan to test with users before running prototype tests with multiple other students in the class (and potentially outside the class). In order to test the prototype with the users, the students will have to assign roles in the testing (the “narrator”, the “computer” and the “observers”) as well as have some questions prepared for the user to answer after the test is complete.
            Digital Design:
              name: Digital Design
              description_student: Having developed, tested, and gathered feedback on a paper prototype, teams now moves to App Lab to build the next iteration of their apps. Using the drag-and-drop Design Mode, each team member builds out at least one page of their team's app, responding to feedback that was received in the previous round of testing.
              description_teacher: Having collaboratively developed a paper prototype for their apps, groups now divide and conquer to begin implementing an interactive digital version of their prototype. Using the drag-and-drop design mode of App Lab, students individually work through a progression of skill-building levels to learn how to build digital app wireframes. From there, each group member builds out at least one page of their app in App Lab.
            Event Driven Programming:
              name: Event Driven Programming
              description_student: Building on the screens that the class designed in the previous lesson, teams combine screens into a single app. Simple code can then be added to make button clicks change to the appropriate screen.
              description_teacher: In this lesson teams combine the screens that they designed in the previous lesson into a single app, which they then begin to program using simple events. Students learn basic event driven programming by making several small apps that respond to users clicking buttons. Following that, group members share the screens they've developed and each group member imports all of the screens into their own copy of the app, which they will make interactive by connecting buttons to events.
            Basic App Functionality:
              name: Basic App Functionality
              description_student: Teams add a bit more polish and functionality to their apps before testing. Several examples are provided to demonstrate simple code that adds cool features.
              description_teacher: At this point in the development process, each student should have what is essentially a digital version of the paper prototype - static screens that are linked together with buttons. For many apps this is all you really need to start testing with users, but this lesson will give students a chance to explore simple ways to add a bit more functionality to their apps before moving into the testing phase. The programming concepts introduced in this lesson are **not necessary** to successfully complete the project, and can be omitted at your discretion.
            Testing the App:
              name: Testing the App
              description_student: Teams run another round of user testing, this time with their interactive prototype. Feedback gathered from this round of testing will inform the final iteration of the app prototypes.
              description_teacher: 'By the end of the previous lesson each team should have a minimum viable prototype of their app. The primary purpose of this lesson is to have the team actually test the app with other people, preferably from the target audience the app is intended for, or from different teams in the class while observers from the team will record the results on the worksheets they used in the planning phase. As with testing the paper prototypes, teams will start by planning for the specific scenarios before running and observing tests. '
            Improving and Iterating:
              name: Improving and Iterating
              description_student: Using the feedback from the last round of testing, teams implement changes that address the needs of their users. Each team tracks and prioritizes the features they want to add and the bugs they need to fix.
              description_teacher: Teams have at this point developed an app prototype that has gone through multiple iterations and rounds of user testing. With the information and guidance gained from the last round of user testing, each student has the opportunity to plan for and implement improvements to the team app. Depending on the time you have available, and student interest, you can run the cycle of testing and iteration as many times as you see fit.
            App Presentation:
              name: App Presentation
              description_student: Each team prepares a presentation to "pitch" the app they've developed. This is the time to share struggles, triumphs, and plans for the future.
              description_teacher: At this point teams have researched a topic of personal and social importance, developed and tested both a paper prototype and a digital prototype, and iterated on the initial app to incorporate new features and bug fixes. Now is the time for them to review what they have done and pull together a coherent presentation to demonstrate their process of creation. Using the provided presentation template, teams prepare to present about their process of app development, including the problem they set out to solve, the ways in which they've incorporated feedback from testing, and their plans for the future.
            User Interface and Prototype Testing:
              name: User Interface and Prototype Testing
              description_student: See how a paper prototype can be used to test and get feedback on software before writing any code. To help out a developer with their idea, the class tests and provides an app prototype made of paper.
              description_teacher: Following the mini design project, students look towards the next phase of design - prototyping a product that attempts to address user needs. In teams, students examine a paper prototype for a chat app called "Txt Ur Grndkdz". Through using this paper prototype, students get a chance to see how a simple paper prototype can be used to quickly test ideas and assumptions before we ever get to the computer. After "using" the provided prototype students begin to identify ways to improve the next iteration.
            Feedback and Prototypes:
              name: Feedback and Prototypes
              description_student: Users have been testing an app, and they have lots of feedback for the developer. The class needs to sort through all of this feedback, identify the common themes and needs, and start revising the prototype to make it better meet the users' needs.
              description_teacher: In this lesson students use feedback from "users" of the paper-prototyped app from the previous lesson in order to develop improvements to the user interface of that paper prototype. The lesson begins with a reflection on the fact that designers need to translate human needs with technology into changes to the user interface or experience. Students are then given a collection of feedback and requests from users of the app from the previous lesson. In groups students categorize the feedback and identify ways the needs expressed in the feedback could be met by changes to the interface of the app. Then in groups students will implement some of these changes to meet one of the needs they identified.
            Identifying User Needs:
              name: Identifying User Needs
              description_student: Up to this point the users that the class has considered have all been remote, and the only information from users has come through text or role playing. Now the class will rely on each other as potential users, and pairs will get to interview each other to identify needs that could be addressed by developing an app.
              description_teacher: 'Up to this point students have focused on designing for users who are, to some degree, distanced from them. Whether through brainstorming, profiles, or text feedback, the connection to an end user has never been direct. This is distance is designed to help students get outside their own head when thinking about users, but in order to get information more directly from an actual user, students need to rely on their classmates. In this lesson students pair up to become users (and designers) for each other, allowing everyone to directly interview their end user and ask questions to better inform their design. Each student pair interviews each other, attempting to identify a specific need that could be addressed by an app. '
            Project - Paper Prototype:
              name: Project - Paper Prototype
              description_student: Using the interview information from the previous lesson, the class comes up with app ideas to address the needs of their users. To express those ideas, and test out their effectiveness, each student creates and tests paper prototypes of their own.
              description_teacher: Based on the peer interview from the previous lesson, each student comes up with an idea for an app that will address their user's problem. Students then get to create their own paper prototype of their app ideas by drawing "screens" on individual notecards. A project guide directs students through the process including building the app and testing it with their user to see if their assumptions about the user interfaces they created are accurate.
        minecraft:
          title: Minecraft Hour of Code Designer
          description_audience: ''
          description_short: Program animals and other Minecraft creatures in your own version of Minecraft.
          description: Program animals and other Minecraft creatures in your own version of Minecraft.
          stages:
            Minecraft Hour of Code Designer:
              name: Minecraft Hour of Code Designer
        flappy-impact-study:
          title: Flappy Code with Survey
          description_audience: ''
          description_short: 'Write your own Flappy game in less than 10 minutes! '
          description: Want to write your own game in less than 10 minutes? Try our Flappy Code tutorial! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          stages:
            Pre Hour of Code Survey:
              name: Pre Hour of Code Survey
            Flappy Code:
              name: Flappy Code
            Post Hour of Code Survey:
              name: Post Hour of Code Survey
        coursea-draft:
          title: 'CS Fundamentals: Course A'
          description_audience: ''
          description_short: An introduction to computer science for early readers.
          description: "Course A is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. \\r\nRecommended for grade K."
          stages:
            'Debugging: Bugs in Codeville':
              name: 'Debugging: Bugs in Codeville'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            'Programming: Happy Maps':
              name: 'Programming: Happy Maps'
            Programming in Maze:
              name: Programming in Maze
            Being Safe Online:
              name: Being Safe Online
            'Loops: Happy Loops':
              name: 'Loops: Happy Loops'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            Fuzz Fiesta:
              name: Fuzz Fiesta
            Going Places Safely:
              name: Going Places Safely
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
        courseb-draft:
          title: 'CS Fundamentals: Course B'
          description_audience: ''
          description_short: An introduction to computer science for early readers.
          description: Course B is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for 1st grade.
          stages:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            Sequence & Algorithms:
              name: Sequence & Algorithms
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Being Safe Online:
              name: Being Safe Online
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Programming in Maze:
              name: Programming in Maze
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
            More Computer Science:
              name: More Computer Science
            Keep it Private:
              name: Keep it Private
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Your Digital Footprint:
              name: Your Digital Footprint
        coursec-draft:
          title: 'CS Fundamentals: Course C'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 2nd grade.
          stages:
            Programming in Maze:
              name: Programming in Maze
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            Programming in Collector:
              name: Programming in Collector
            Programming in Artist:
              name: Programming in Artist
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
            Loops in Maze:
              name: Loops in Maze
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Puppy Introduction:
              name: Puppy Introduction
            Online Internet Safety:
              name: Online Internet Safety
            Build a Flappy Game:
              name: Build a Flappy Game
            More CS with Run Marco:
              name: More CS with Run Marco
            Binary Bracelets:
              name: Binary Bracelets
            Events in Play Lab:
              name: Events in Play Lab
            Your Digital Footprint:
              name: Your Digital Footprint
            Building a Foundation:
              name: Building a Foundation
            Screen Out the Mean:
              name: Screen Out the Mean
            Debugging in Maze:
              name: Debugging in Maze
            Loops in Harvester:
              name: Loops in Harvester
        coursed-draft:
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for 3rd grade.
          stages:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Events in Bounce:
              name: Events in Bounce
            Nested Loops in Maze:
              name: Nested Loops in Maze
            Nested Loops in Artist:
              name: Nested Loops in Artist
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Bee:
              name: Debugging in Bee
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals with Bee:
              name: Conditionals with Bee
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
            Impacts of Computing:
              name: Impacts of Computing
            More Programming with CS4FN:
              name: More Programming with CS4FN
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Conditionals in Bee:
              name: Conditionals in Bee
            Digital Citizenship:
              name: Digital Citizenship
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
            Artist Binary:
              name: Artist Binary
            Nested Loops in Bee:
              name: Nested Loops in Bee
            Nested Loops:
              name: Nested Loops
            Introduction:
              name: Introduction
        coursee-draft:
          title: 'CS Fundamentals: Course E'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 4th grade.
          stages:
            Digital Citizenship:
              name: Digital Citizenship
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept in Bee:
              name: Determine the Concept in Bee
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Present Your Project:
              name: Present Your Project
            More Programming with Scratch:
              name: More Programming with Scratch
            Private and Personal Information:
              name: Private and Personal Information
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
            Determine the Concept:
              name: Determine the Concept
            Introduction:
              name: Introduction
            Conditionals:
              name: Conditionals
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
        coursef-draft:
          title: 'CS Fundamentals: Course F'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project. Recommended for 5th grade.
          stages:
            Digital Citizenship:
              name: Digital Citizenship
            Envelope Variables:
              name: Envelope Variables
            Variables in Play Lab:
              name: Variables in Play Lab
            Variables in Artist:
              name: Variables in Artist
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            'Functions with Parameters: Songwriting with Parameters':
              name: 'Functions with Parameters: Songwriting with Parameters'
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Presentation Your Project:
              name: Present Your Project
            Try programming with Khan Academy:
              name: Try programming with Khan Academy
            The Power of Words:
              name: The Power of Words
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Introduction:
              name: Introduction
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
        classic-hoc-impact-study:
          title: Hour of Code with Survey
          description_audience: ''
          description_short: Try the basics of computer science with many fun characters!
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          stages:
            Pre Hour of Code Survey:
              name: Pre Hour of Code Survey
            Hour of Code 2013:
              name: Hour of Code 2013
            Post Hour of Code Survey:
              name: Post Hour of Code Survey
        hoc-impact-study:
          title: Classic Maze with Survey
          description_audience: ''
          description_short: Try the basics of computer science with many fun characters!
          description: Try the basics of computer science with characters from Angry Birds and Plants vs. Zombies! This version includes pre and post surveys to help us continue to improve Hour of Code. Ask your class to skip ahead to the post survey 10 minutes before class ends.
          stages:
            Pre Hour of Code Survey:
              name: Pre Hour of Code Survey
            Hour of Code 2013:
              name: Hour of Code 2013
            Post Hour of Code Survey:
              name: Post Hour of Code Survey
        sports:
          title: Code your own sports game
          description_audience: ''
          description_short: Mix and match across sports
          description: Mix and match across sports
          stages:
            Sports:
              name: Sports
        2016_sciencePD-phase2b:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Welcome!:
              name: Welcome!
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Wrap-Up:
              name: Wrap-Up
        2016_sciencePD_phase2b:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Welcome!:
              name: Welcome!
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: Reviewing the Modules
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Wrap-Up:
              name: Wrap-Up
        sciencepd3-2016:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Welcome Back!:
              name: Welcome Back!
            The TLO:
              name: The TLO
            Prep With Your Modules:
              name: Prep With Your Modules
        csp3-support:
          title: Unit 3 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 3
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 3.
          stages:
            Unit 3 Overview:
              name: Unit 3 Overview
            'Lessons 1 - 3: Algorithms':
              name: 'Lessons 1 - 3: Algorithms'
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design'
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
        csdgraveyard:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            new stage:
              name: new stage
            Introduction to Styling with CSS (2.7):
              name: Introduction to Styling with CSS (2.7)
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            External Style Sheets:
              name: External Style Sheets
        csp4-support:
          title: Unit 4 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 4
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 4.
          stages:
            Unit 3 Overview:
              name: Unit 3 Overview
            'Lessons 1 - 2: Data in the Real World':
              name: 'Lessons 1 - 2: Data in the Real World'
            'Lessons 1 - 4: Data in the Real World':
              name: 'Lessons 1 - 4: Data in the Real World'
            'Lessons 5 - 7: Security, Symmetric, and Asymmetric Encryption':
              name: 'Lessons 5 - 7: Security, Symmetric, and Asymmetric Encryption'
            'Lessons 8 - 9: Practice PT':
              name: 'Lessons 8 - 9: Practice PT'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            Unit 4 Overview:
              name: Unit 4 Overview
        sciencepd4:
          title: 'CS in Science: Part 4'
          description_audience: ''
          description_short: 'Phase 3: Reflect on semester 1 workshop'
          description: 'Phase 3: Reflect on semester 1 workshop'
          stages:
            Welcome!:
              name: Welcome!
            Revisiting Complex Adaptive Systems:
              name: Revisiting Complex Adaptive Systems
            Thinking About Implementation:
              name: Thinking About Implementation
            Wrap-Up:
              name: Wrap-Up
        csp-ca-a:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Commutative Assessment A:
              name: Commutative Assessment A
        science-pd-ol-pt-5:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Welcome!:
              name: Welcome!
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: Physical Science Challenges
            Wrap-Up:
              name: Wrap-Up
        csf2harvey:
          title: New Functions Puzzles
          description_audience: ''
          description_short: ''
          description: Testing for Mr. Harvey's class
          stages:
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
        sciencepd5:
          title: 'CS in Science: Part 5'
          description_audience: ''
          description_short: 'Phase 3: Prepare for semester 2 workshop'
          description: 'Phase 3: Prepare for semester 2 workshop'
          stages:
            Welcome!:
              name: Welcome!
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: Physical Science Challenges
            Wrap-Up:
              name: Wrap-Up
        csp5-support:
          title: Unit 5 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 5
          description: This is a set of online supports arranged into a Professional Learning Course for CSP teachers preparing to teach Unit 5.
          stages:
            Unit 5 Overview:
              name: Unit 5 Overview
            Event Driven Programming:
              name: Event Driven Programming
            Variables and Strings:
              name: Variables and Strings
            Conditionals and Boolean Logic:
              name: Conditionals and Boolean Logic
            While Loops and Introduction to Arrays:
              name: While Loops and Introduction to Arrays
            Processing Arrays and Functions with Return Values:
              name: Processing Arrays and Functions with Return Values
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
        csp6-support:
          stage: [ ]
          title: AP Preparation and Resources for Teachers
          description_audience: ''
          description_short: ''
          description: 'COMING SOON: soon this page will host a set of resources for teachers preparing for the AP exam'
          stages: [ ]
        csppostap:
          title: CSP Post-AP - Databases and Using Data in Your Apps
          description_audience: ''
          description_short: Learn to collect and use data in App Lab apps.
          description: App Lab has a number of tools that allow you to collect and use data in your apps. The following material provides an overview of how these tools work, a sampling of example projects that can be built using these tools, and a space in which to build and submit a final project.
          stages:
            Creating Javascript Objects:
              name: Creating Javascript Objects
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: Reading Records
            Deleting Records:
              name: Deleting Records
            Updating Records:
              name: Updating Records
            Importing and Exporting Data:
              name: Importing and Exporting Data
            Visualizing Data:
              name: Visualizing Data
            Sample Apps:
              name: Sample Apps
            Final Project:
              name: Final Project
        unit6-csd-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            UI and Input:
              name: UI and Input
            Computing Innovations:
              name: Computing Innovations
            Input Unplugged:
              name: Input Unplugged
            '':
              name: ''
        gamelab-demo:
          stages:
            Simple Sprite Movement:
              name: Simple Sprite Movement
        csd6-draft:
          title: Draft Unit 6
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            UI and Input:
              name: UI and Input
            Computing Innovations:
              name: Computing Innovations
            Input Uplugged:
              name: Input Uplugged
            The Circuit Playground:
              name: The Circuit Playground
            Foo:
              name: Foo
            Lists:
              name: Lists
            Lights:
              name: Lights
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
            Input Unplugged:
              name: Input Unplugged
            Timed Loop:
              name: Timed Loop
            Timed Loops:
              name: Timed Loops
            For Loops:
              name: For Loops
            Physical Input:
              name: Physical Input
            List and For Loops:
              name: List and For Loops
            'Project: Board Output':
              name: 'Project: Board Output'
            For Loops with UI and Board:
              name: For Loops with UI and Board
            Lists and For Loops:
              name: Lists and For Loops
            Analog Input:
              name: Analog Input
            Polling Events:
              name: Polling Events
            Sensor Applications:
              name: Sensor Applications
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
            Map:
              name: Map
        workshop-gamelab:
          title: Game Lab Workshop
          description_audience: Teachers attending an in-person Game Lab Workshop
          description_short: Level progression to accompany an in-person Game Lab Workshop
          description: This level progression is intended to accompany an in-person Game Lab Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of Game Lab.
          stages:
            Introduction:
              name: Introduction
            Sprites:
              name: Sprites
            Input:
              name: Input
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
        csd5-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            new stage:
              name: new stage
            Interpreting Data:
              name: Interpreting Data
            Data in the Real World:
              name: Data in the Real World
            Combining Representations:
              name: Combining Representations
            Representing Images:
              name: Representing Images
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Numbers Part 1:
              name: Representing Numbers Part 1
            Representing Numbers Part 2:
              name: Representing Numbers Part 2
            Project - Create a Representation:
              name: Project - Create a Representation
            Problem Solving and Data:
              name: Problem Solving and Data
            Making Decisions with Data:
              name: Making Decisions with Data
            Automating Data Decisions:
              name: Automating Data Decisions
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
        applab-1hour:
          title: App Lab 1 Hour Workshop
          description_audience: Middle and High School Students
          description_short: ''
          description: This workshop is designed to give students a basic introduction to app lab in 1 hour. Students should be able to come in with different backgrounds in computer science and have fun creating something.
          stages:
            App Lab Workshop:
              name: App Lab Workshop
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
            Room Escape:
              name: Room Escape
            Extra:
              name: Extra
        applab-2hour:
          title: App Lab 2 Hour Workshop
          description_audience: Middle and High School Students
          description_short: ''
          description: This workshop is designed to give students a basic introduction to app lab in 2 hours. Students should be able to come in with different backgrounds in computer science and have fun creating something.
          stages:
            new stage:
              name: new stage
            Digital Design:
              name: Digital Design
            Event Driven Programming:
              name: Event Driven Programming
            Basic App Functionality:
              name: Basic App Functionality
            Event Types:
              name: Event Types
            Getters and Setters:
              name: Getters and Setters
        coursed-ramp:
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Introduction:
              name: Introduction
        workshop-maker:
          title: Maker Toolkit Workshop
          description_audience: Teachers attending an in-person Maker Toolkit Workshop
          description_short: Level progression to accompany an in-person Maker Toolkit Workshop
          description: This level progression is intended to accompany an in-person Maker Toolkit Workshop. This is not intended to teach the tool or CS concepts, but rather to support a workshop facilitator in introducing attendees to the breadth of App Lab and the Maker Toolkit.
          stages:
            App Lab Basics:
              name: App Lab Basics
            The Circuit Playground:
              name: The Circuit Playground
            Physical Input:
              name: Physical Input
            Analog Input:
              name: Analog Input
        coursee-ramp:
          title: coursee-ramp
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Introduction:
              name: Introduction
            Conditionals:
              name: Conditionals
            'Real Life Algorithms: Dice Race':
              name: 'Real Life Algorithms: Dice Race'
        csd6:
          title: CSD Unit 6 - Physical Computing
          description_audience: ''
          description_short: Learn to program with physical devices.
          description: Unit 6 explores the role of hardware platforms in computing and how different sensors can provide more effective input and output than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s Circuit Playground, you’ll develop programs that utilize the same hardware inputs and outputs that you see in the smart devices, looking at how a simple rough prototype can lead to a finished product. The unit concludes with a design challenge to use the Circuit Playground as the basis for an innovation of your own design.
          stages:
            Computing Innovations:
              name: Computing Innovations
              description_student: Explore a wide variety of new and innovative computing platforms while expanding your understanding of what a computer can be.
              description_teacher: To kick off the final unit of this course, students will do some research into interesting innovations in computing. This lesson will expose students to wider variety of computing form factors (what a computer looks like) and fields that are impacted by computing. Later in this unit students will look back on the devices they encountered in this lesson as they develop their own physical computing devices.
            Input Unplugged:
              name: Input Unplugged
              description_student: Experience two different ways that an app can take input from a user, while learning more about the event-driven programming model used in App Lab.
              description_teacher: In preparation for delving deeper into programming with App Lab, students will explore how a handful of different programs written in both Game Lab and App Lab handle taking input from the user. After comparing and contrasting the approaches they saw in the example apps, students group up to act out the two different models for input (conditionals in an infinite and asynchronous events) to gain a better understanding of how they work.
            Event Types:
              name: Event Types
              description_student: Review the basics of programming in App Lab and explore some new event types that can be used in your programs.
              description_teacher: In this lesson students review the material they learned about creating apps in App Lab from Unit 4 in order to prepare for a return to App Lab in this unit. This review should be modified to best meet the needs of your students and their experience and familiarity with programming in App Lab. In addition to the review the students will also experiment with a variety of new event types that they likely have not seen before.
            Getters and Setters:
              name: Getters and Setters
              description_student: By reading and changing the content on the screen of an app, the class starts to build apps that only need a single screen. Even with just one screen, these techniques allow for lots of user interaction and functionality.
              description_teacher: In Unit 4 students learned a very simple approach to app development in App Lab that required a separate screen for most interactions. To expand the kinds of apps that students can make, and to encourage them to think in new ways about how users interact with apps, we introduce the concept of "getters" and "setters". These are commands which can get and set (or change) the content and properties of various design elements. In this lesson students build up simple apps that only require a single screen, the content of which is changed using getters and setters.
            The Circuit Playground:
              name: The Circuit Playground
              description_student: Get to know the Circuit Playground, the circuit board that will be used throughout the rest of this unit. Using App Lab, develop programs that use the Circuit Playground for output.
              description_teacher: In this lesson students get their first opportunity to write programs that use the Circuit Playground. After first inspecting the board visually and hypothesizing possibly functionalities, students move online where they will learn to write applications that blink an LED and make noise with a buzzer. By combining App Lab screens with the Circuit Playgrounds, students can gradually start to integrate elements of the board as an ouput device while relying on App Lab for user input.
            Lists:
              name: Lists
              description_student: Learn how lists can be used to store multiple values in a single variable name.
              description_teacher: A list, also commonly known as an array, is a type of variable that can store many values at once. In this lesson, students learn to create lists which store a series of related values in a single variable. After creating lists of their own, students will learn about ways to extract either a specific or random value from a list using its index.
            Lights:
              name: Lights
              description_student: Using the concept of lists from the previous lesson, the class writes programs that control the ten color LEDs on the Circuit Playground.
              description_teacher: The Circuit Playground includes 10 color LEDs in a ring around the outside edge. These LEDs are accessible in code as a list called `colorLeds`. Building on the understanding of lists from the previous lesson, students write programs that control the color LEDs by accessing them from a list.
            For Loops:
              name: For Loops
              description_student: The class learns about repeating instructions using a _for loop_, first by controlling a "robot" through a grid, and then in App Lab.
              description_teacher: Students are introduced to the _for loop_ in this lesson as a way to repeat some code a certain numbers of times. Students start with an unplugged activity where they use for loops to navigate a robot across a grid. Once complete, students then take their knowledge into App Lab where they write programs that rely on iteration using a _for loop_.
            Lists and For Loops:
              name: Lists and For Loops
              description_student: Combining _lists_ and _for loops_ allows you to write code that impacts every element of a list, regardless of how long it is. The class uses this structure to write programs that process all of the elements in lists, include the list of color LEDs.
              description_teacher: 'Using a _for loop_ to iterate over all of the elements in an array is a really useful construct in most programming languages. In this lesson, students combine what they have learned about lists and for loops in order to start learning this pattern. Students use for loops to go through each element in a list one at a time without having to write code for each element. Towards the end of the lesson students will apply this with the `colorLed` list on the board. '
            Timed Loops:
              name: Timed Loops
              description_student: In this lesson we build on students understanding of for loops to learn about a more sophisticated structure called a timed loop. Unlike for loops, you can control how quickly a timed loop repeats, and other code (such as event handlers) can be run between iterations of the loop. This allows us to create interesting animations that repeat infinitely, while still allowing other code to run alongside it.
              description_teacher: In this lesson we build on students understanding of _for loops_ to learn about a more sophisticated structure called a _timed loop_. Unlike _for loops_, you can control how quickly a _timed loop_ repeats, and other code (such as event handlers) can be run between iterations of the loop. This allows us to create interesting animations that repeat infinitely, while still allowing other code to run alongside it.
            'Project: Board Output':
              name: 'Project: Board Output'
              description_student: Students take what they've learned through chapter one, and develop an app of their own design that uses the board to output information.
              description_teacher: Students take what they've learned through chapter one, and develop an app of their own design that uses the board to output information.
            Physical Input:
              name: Physical Input
              description_student: Using the hardware buttons and switch, the class develops programs that use the Circuit Playground as an input.
              description_teacher: This lesson transitions students from consider the Circuit Playground as strictly an output device towards using it as a tool for both input and output. Starting with the hardware buttons and switch,sing the hardware buttons and switch, students learn to use `onBoardEvent()`, analogously to `onEvent()`, in order to take input from their Circuit Playgrounds.
            Analog Input:
              name: Analog Input
              description_student: Explore the analog inputs on the Circuit Playground, writing programs that respond to the environment through sensors.
              description_teacher: In this lesson, students explore how the three analog sensors (sound, light, and temperature) can be used to write programs that respond to changes in the environment. The use of these sensors marks a transition in terms of how users interact with a program. By using sensors as an input, the user of an app doesn't have to directly interact with it at all, or may interact without actually realizing they are doing so.
            Sensor Applications:
              name: Sensor Applications
              description_student: Work through three small apps to better understand the uses of the sensors from the previous lesson.
              description_teacher: To follow up on the sensors that students learned about in the previous lesson, we walk through a three apps, each of which relies on a different sensor. These three apps can serve as jumping off points for students in the final project that follows.
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
              description_student: Develop innovative computing devices of your own design, using everything you've learned throughout this course.
              description_teacher: 'In this final project for the course, student team to develop and test a prototype for an innovative computing device based on the Circuit Playground. Using the inputs and outputs available on the board, groups will create programs that allow for interesting and unique user interactions. '
        csd3-draft:
          title: 'CSD Unit 3 - Programming: Animations and Games'
          description_audience: ''
          description_short: Animations and Games
          description: ''
          stages:
            Shapes and Randomess:
              name: Shapes and Randomess
            Shapes and Randomness:
              name: Shapes and Randomness
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Variables:
              name: Variables
            Programming for Entertainment:
              name: Programming for Entertainment
            Sprites:
              name: Sprites
            Plotting Shapes:
              name: Plotting Shapes
            Sprite Movement:
              name: Sprite Movement
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals:
              name: Conditionals
            Taking Input:
              name: Taking Input
            Complex Conditionals:
              name: Complex Conditionals
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            'Project: Design a Game':
              name: 'Project: Design a Game'
        csd5:
          title: CSD Unit 5 - Data and Society
          description_audience: ''
          description_short: Learn how people use computers to solve data problems.
          description: Unit 5 is about the importance of data in solving problems and highlights how computers can help in this process. The first chapter explores different systems used to represent information in a computer and the challenges and tradeoffs posed by using them. In the second chapter you’ll learn how collections of data are used to solve problems, and how computers help to automate the steps of this process. The chapter concludes by considering how the data problem solving process can be applied to an area of the your choosing.
          stages:
            Representation Matters:
              name: Representation Matters
              description_student: In the first lesson of the data unit, students will get an overview of what data is and how it is used to solve problems.  Students will start off with a brief discussion to come to a common understanding of data.  They then split into groups and use a data set to make a series of meal recommendations for people with various criteria.  Each group has the choices of meal represented in a different way (pictures, recipes, menu, nutrition) that gives an advantage for one of the recommendations.  Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
              description_teacher: In the first lesson of the data unit, students will get an overview of what data is and how it is used to solve problems.  Students will start off with a brief discussion to come to a common understanding of data.  They then split into groups and use a data set to make a series of meal recommendations for people with various criteria.  Each group has the choices of meal represented in a different way (pictures, recipes, menu, nutrition) that gives an advantage for one of the recommendations.  Afterwards, groups compare their responses and discuss how the different representations of the meal data affected how the students were able to solve the different problems.
            Patterns and Representation:
              name: Patterns and Representation
              description_student: In this lesson students create their own system for representing information. They begin by brainstorming all the different systems they already use to represent yes-no responses. They then work in small groups to create a system that can represent any letter in the alphabet using only a single stack of cards. The cards used have one of 6 different possible drawings (6 animals, 6 colors, etc.) and so to represent the entire alphabet students will need to use patterns of multiple cards to represent each letter. Students will create messages with their systems and exchange with other groups to ensure the system worked as intended. In the wrap-up discussion the class will review any pros and cons of the different systems. They will discuss commonalities between working systems and recognize that there are many possible solutions to this problem and what's important is that everyone use the same arbitrary system to communicate.
              description_teacher: In this lesson students create their own system for representing information. They begin by brainstorming all the different systems they already use to represent yes-no responses. They then work in small groups to create a system that can represent any letter in the alphabet using only a single stack of cards. The cards used have one of 6 different possible drawings (6 animals, 6 colors, etc.) and so to represent the entire alphabet students will need to use patterns of multiple cards to represent each letter. Students will create messages with their systems and exchange with other groups to ensure the system worked as intended. In the wrap-up discussion the class will review any pros and cons of the different systems. They will discuss commonalities between working systems and recognize that there are many possible solutions to this problem and what's important is that everyone use the same arbitrary system to communicate.
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
              description_student: In this lesson students learn to use their first binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". Then students are introduced to the ASCII system for representing text using binary symbols. Students practice using this system before encoding their own message using ASCII. At the end of the lesson a debrief conversation helps synthesize the key learning objectives of the activity.
              description_teacher: In this lesson students learn to use their first binary system for encoding information, the ASCII system for representing letters and other characters. At the beginning of the lesson the teacher introduces the fact that computers must represent information using either "on" or "off". Then students are introduced to the ASCII system for representing text using binary symbols. Students practice using this system before encoding their own message using ASCII. At the end of the lesson a debrief conversation helps synthesize the key learning objectives of the activity.
            Representing Images:
              name: Representing Images
              description_student: In this lesson students learn how computers represent images. To begin the lesson they consider the challenge of turning all the complexity of vision into a binary pattern. Through a series of images showing how this transformation is made students are introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. Students then do a short set of challenges using the Pixelation Widget in order to draw black and white images. Puzzles are designed to call out some of the challenges of representing images in this way. In the wrap up students make connections between the system for representing images and the system for representing text they learned in the previous lesson.
              description_teacher: In this lesson students learn how computers represent images. To begin the lesson they consider the challenge of turning all the complexity of vision into a binary pattern. Through a series of images showing how this transformation is made students are introduced to the concept of splitting images into squares or "pixels" which can then be turned on or off individually to make the entire image. Students then do a short set of challenges using the Pixelation Widget in order to draw black and white images. Puzzles are designed to call out some of the challenges of representing images in this way. In the wrap up students make connections between the system for representing images and the system for representing text they learned in the previous lesson.
            Representing Numbers Part 1:
              name: Representing Numbers Part 1
            Representing Numbers Part 2:
              name: Representing Numbers Part 2
            Combining Representations:
              name: Combining Representations
              description_student: In this lesson, students use all three types of binary representation systems (ASCII characters, binary number, and images) to decode information in a record.  After seeing a series of bits and being asked to decode them, students are introduced to the idea that in order to understand binary information, they must understand both the system that is being used and the meaning of the information encoded.  They then decode a record representing a pet based on a given structure.
              description_teacher: In this lesson, students use all three types of binary representation systems (ASCII characters, binary number, and images) to decode information in a record.  After seeing a series of bits and being asked to decode them, students are introduced to the idea that in order to understand binary information, they must understand both the system that is being used and the meaning of the information encoded.  They then decode a record representing a pet based on a given structure.
            Project - Create a Representation:
              name: Project - Create a Representation
              description_student: In this lesson students design a structure to represent their perfect day using the binary representation systems they've learned in this chapter. Students will first write a short description of their perfect day and then review with a partner to identify the key pieces of information they think a computer could capture. As a class students will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Students will then use the ASCII, binary number, and image formats they have learned to represent their perfect days. Students then trade punch cards and try to decipher what the other student's perfect day is like. The lesson ends with a reflection.
              description_teacher: In this lesson students design a structure to represent their perfect day using the binary representation systems they've learned in this chapter. Students will first write a short description of their perfect day and then review with a partner to identify the key pieces of information they think a computer could capture. As a class students will decide how a punch card of bytes of information will be interpreted to represent those pieces of information. Students will then use the ASCII, binary number, and image formats they have learned to represent their perfect days. Students then trade punch cards and try to decipher what the other student's perfect day is like. The lesson ends with a reflection.
            Problem Solving and Data:
              name: Problem Solving and Data
              description_student: In this lesson, students use the problem solving process from earlier in the course to solve a data problem.
              description_teacher: In this lesson, students use the problem solving process from earlier in the course to solve a data problem.
            Making Decisions with Data:
              name: Making Decisions with Data
              description_student: In this lesson students get practice making decisions with data based on some problems designed to be familiar to middle school students. Students work in groups discussing how they would use the data presented to make a decision before the class discusses their final choices. Not all questions have right answers and in some cases students can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
              description_teacher: In this lesson students get practice making decisions with data based on some problems designed to be familiar to middle school students. Students work in groups discussing how they would use the data presented to make a decision before the class discusses their final choices. Not all questions have right answers and in some cases students can and should decide that they should collect more data. The lesson concludes with a discussion of how different people could draw different conclusions from the same data, or how collecting different data might have affected the decisions they made.
            Interpreting Data:
              name: Interpreting Data
              description_student: In this lesson, students go further into the interpretation of data, including cleaning and visualizing raw data sets.  Students first look at the how presenting data in different ways can help people to understand it better.  They then visualize their own raw data set, in the context of a pizza topping survey, deciding what to do with data that does not easily fit into the visualization scheme that they have chosen.  Last, students look at what parts of this process can be automated, and what need a human to make decisions.
              description_teacher: In this lesson, students go further into the interpretation of data, including cleaning and visualizing raw data sets.  Students first look at the how presenting data in different ways can help people to understand it better.  They then visualize their own raw data set, in the context of a pizza topping survey, deciding what to do with data that does not easily fit into the visualization scheme that they have chosen.  Last, students look at what parts of this process can be automated, and what need a human to make decisions.
            Automating Data Decisions:
              name: Automating Data Decisions
              description_student: In this lesson students look at a simple example of how a computer could be used to complete essentially every step of the data problem solving process. To begin students are given the clean data they collected about their ice cream preferences. They use a spreadsheet to visualize this data using simple charts and discuss in groups the decision they would make with this data. Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Groups share their rules and what choices their rules would make with the class data. They then use their rules on data from another class to reinforce the fact that the rules they create should be useful for any data set. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
              description_teacher: In this lesson students look at a simple example of how a computer could be used to complete essentially every step of the data problem solving process. To begin students are given the clean data they collected about their ice cream preferences. They use a spreadsheet to visualize this data using simple charts and discuss in groups the decision they would make with this data. Students then create rules, or an algorithm, that a computer could use to make this decision automatically. Groups share their rules and what choices their rules would make with the class data. They then use their rules on data from another class to reinforce the fact that the rules they create should be useful for any data set. The lesson concludes with a discussion about the benefits and drawbacks of using computers to automate the data problem solving process.
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
              description_student: In this lesson, students look at how data is collected and used by a organizations to solve problems in the real world. The lesson begins with a quick review of the data problem solving process they have explored in this unit. Then students are presented three scenarios that could be solved using data and they brainstorm the types of data they would want to solve them and how they could collect the data. Each problem is designed to reflect a real-world service that exists. After brainstorming students will watch a video about a real-world service and will record notes about what data is collected by the real-world service and how it is used. At the end of the lesson students record whether data was provided actively by a user, was recorded passively, or is collected by sensors.
              description_teacher: In this lesson, students look at how data is collected and used by a organizations to solve problems in the real world. The lesson begins with a quick review of the data problem solving process they have explored in this unit. Then students are presented three scenarios that could be solved using data and they brainstorm the types of data they would want to solve them and how they could collect the data. Each problem is designed to reflect a real-world service that exists. After brainstorming students will watch a video about a real-world service and will record notes about what data is collected by the real-world service and how it is used. At the end of the lesson students record whether data was provided actively by a user, was recorded passively, or is collected by sensors.
            Project - Solve a Data Problem:
              name: Project - Solve a Data Problem
              description_student: To conclude this unit students will design a way to use data to make a recommendation or prediction to help solve a problem. Students will follow a project guide to complete this multi-day activity. In the first several steps students brainstorm problems, perform simple research, and define a problem of their choosing. They will then decide what kind of data they would want to collect, how it could be collected, and how it could be used. Students will perform a peer review and make any necessary updates to their project before preparing a presentation to their classmates.
              description_teacher: To conclude this unit students will design a way to use data to make a recommendation or prediction to help solve a problem. Students will follow a project guide to complete this multi-day activity. In the first several steps students brainstorm problems, perform simple research, and define a problem of their choosing. They will then decide what kind of data they would want to collect, how it could be collected, and how it could be used. Students will perform a peer review and make any necessary updates to their project before preparing a presentation to their classmates.
            Representing Numbers:
              name: Representing Numbers
              description_student: In this lesson, students learn about the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system by a collection of dots, students turn bits "on" or "off" by turning cards face up and face down, then observe the numbers that result from these different patterns.  Eventually, student extend the pattern to a generic 4-bit system.
              description_teacher: In this lesson, students learn about the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system by a collection of dots, students turn bits "on" or "off" by turning cards face up and face down, then observe the numbers that result from these different patterns.  Eventually, student extend the pattern to a generic 4-bit system.
            8-bit Numbers:
              name: 8-bit Numbers
              description_student: Students review the concept of binary numbers, and discuss that they need to know the bit-length of each number in order to decode a series of bits.  They then made a flippy-do, a paper manipulative that will help them to encode and decode 8-bit numbers (0-255).  After practicing with the flippy-do, students discuss how they could extend that standardization to the other types of data.
              description_teacher: Students review the concept of binary numbers, and discuss that they need to know the bit-length of each number in order to decode a series of bits.  They then made a flippy-do, a paper manipulative that will help them to encode and decode 8-bit numbers (0-255).  After practicing with the flippy-do, students discuss how they could extend that standardization to the other types of data.
        csd3-old:
          title: CSD Unit 3 (DEPRECATED)
          description_audience: ''
          description_short: 2016/2017 Draft of CSD Unit 3
          description: This is the original draft of CSD Unit 3, released in the fall of 2016. Unless you have students currently using this course, you should instead use the updated version of this unit at studio.code.org/s/csd3 - this original draft will remain available until July 1, 2017.
          stages:
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Draw Loop and Randomization:
              name: Draw Loop and Randomization
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: Variables and Animation
            Sprites and Properties:
              name: Sprites and Properties
            Sprites and Images:
              name: Sprites and Images
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Complex Conditionals:
              name: Complex Conditionals
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            'Project: Design a Game':
              name: 'Project: Design a Game'
        csd1-old:
          title: CSD Unit 1 (DEPRECATED)
          description_audience: ''
          description_short: 2016/2017 Draft of CSD Unit 1
          description: This is the original draft of CSD Unit 1, originally published in the fall of 2016. This version has been replaced with an updated unit at studio.code.org/s/csd1 and will only remain available until July 1, 2017.
          stages:
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Representing Information:
              name: Representing Information
            Processing with Bits:
              name: Processing with Bits
            Human vs Computer Processing:
              name: Human vs Computer Processing
            Processing with Apps:
              name: Processing with Apps
            'Project: Apps and Problem Solving':
              name: 'Project: Apps and Problem Solving'
        csd2-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Text on the Web:
              name: Text on the Web
            Digital Footprint:
              name: Digital Footprint
            Images in HTML:
              name: Images in HTML
            Exploring Websites:
              name: Exploring Websites
            'Websites for Expression ':
              name: 'Websites for Expression '
            Intro to HTML:
              name: Intro to HTML
            Headers and Lists:
              name: Headers and Lists
            Intellectual Property:
              name: Intellectual Property
            Images:
              name: Images
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Project - Multi-Page Websites:
              name: Project - Multi-Page Websites
            Styling Text with CSS:
              name: Styling Text with CSS
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Sources and Search Engines:
              name: Sources and Search Engines
            RGB Colors and Classes:
              name: RGB Colors and Classes
            Project - Personal Portfolio Website:
              name: Project - Personal Portfolio Website
            Headers:
              name: Headers
            Intellectual Property and Images:
              name: Intellectual Property and Images
            Lists:
              name: Lists
        csd1-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Intro to Problem Solving:
              name: Intro to Problem Solving
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: What is a Computer?
            Inputs and Outputs:
              name: Inputs and Outputs
            Processing:
              name: Processing
            Storage:
              name: Storage
            Apps and Problem Solving:
              name: Apps and Problem Solving
            Project - Propose an App:
              name: Project - Propose an App
            Input and Output:
              name: Input and Output
        csd3-chapters:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Programming for Entertainment:
              name: Programming for Entertainment
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
            Shapes and Randomness:
              name: Shapes and Randomness
            Variables:
              name: Variables
            Sprites:
              name: Sprites
            The Draw Loop:
              name: The Draw Loop
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: Sprite Movement
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals:
              name: Conditionals
            Keyboard Input:
              name: Keyboard Input
            Other Forms of Input:
              name: Other Forms of Input
            'Project: Interactive Card':
              name: 'Project: Interactive Card'
            Velocity:
              name: Velocity
            Collision Detection:
              name: Collision Detection
            Complex Sprite Movement:
              name: Complex Sprite Movement
            Collisions:
              name: Collisions
            Functions:
              name: Functions
            The Game Design Process:
              name: The Game Design Process
            Using the Game Design Process:
              name: Using the Game Design Process
            'Project: Design a Game':
              name: 'Project: Design a Game'
            'Chapter 1: Images and Animation':
              name: 'Chapter 1: Images and Animation'
            'null':
              name: 'null'
            temp:
              name: temp
        coursef-ramp:
          stages:
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Functions in Farmer:
              name: Functions in Farmer
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csppostsurvey-staging:
          title: "[Deprecated] CSP post survey staging area"
          description_audience: ''
          description_short: ''
          description: Moved to /s/csp-post-survey.  Destory after 05.05.17
          stages:
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
        fmscsd3preview:
          stages:
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: Drawing in Game Lab
          title: CSD - Drawing in Game Lab
          description_audience: Falmouth Middle School (Mike Harvey)
          description_short: ''
          description: ''
        csppostsurvey:
          stages:
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
          title: CSP Student Post-Course Survey
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: 'Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 10 minutes to complete.  Your responses are private and anonymous.  '
        csp-post-survey:
          stages:
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
          title: CSP Student Post-Course Survey
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: 'Welcome to the Code.org CS Principles Post-Course Survey.  This survey takes about 10 minutes to complete.  Your responses are private and anonymous.  '
        public-key-cryptography:
          stages:
            Public Key Crypto Widgets:
              name: Public Key Crypto Widgets
          title: Public Key Cryptography Widgets
          description_audience: ''
          description_short: ''
          description: ''
        csd2-old:
          stages:
            Quality Websites:
              name: Quality Websites
            Website Design:
              name: Website Design
            Describing Web pages:
              name: Describing Web pages
            Text on the Web:
              name: Text on the Web
            Images in HTML:
              name: Images in HTML
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Styling Text with CSS:
              name: Styling Text with CSS
            Styling Elements with CSS:
              name: Styling Elements with CSS
            Multi-Page Websites:
              name: Multi-Page Websites
            Classes:
              name: Classes
            Peer Review:
              name: Peer Review
            Digital Footprint:
              name: Digital Footprint
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
            Intellectual Property:
              name: Intellectual Property
            'Project: Personal Portfolio Website':
              name: 'Project: Personal Portfolio Website'
          title: CSD Unit 2 (DEPRECATED)
          description_audience: ''
          description_short: Web Development
          description: ''
        artist-and-bb8:
          stages:
            B8 New BB8:
              name: B8 New BB8
            c8 to BB8:
              name: c8 to BB8
            B8 BB8:
              name: B8 BB8
            C9 Artist Loops:
              name: C9 Artist Loops
            C8 to BB8:
              name: C8 to BB8
            D7 to Laurel:
              name: D7 to Laurel
            D6 Frozen Artist:
              name: D6 Frozen Artist
            F7 add Conditionals:
              name: F7 add Conditionals
            F5 Minecraft:
              name: F5 Minecraft
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        coursea:
          stages:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            'Programming: Happy Maps':
              name: 'Programming: Happy Maps'
            Programming in Maze:
              name: Programming in Maze
            Going Places Safely:
              name: Going Places Safely
            'Loops: Happy Loops':
              name: 'Loops: Happy Loops'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
          title: 'CS Fundamentals: Course A'
          description_audience: ''
          description_short: An introduction to computer science for early readers.
          description: 'Course A is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. '
        courseb:
          stages:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            'Real-life Algorithms: Plant a Seed':
              name: 'Real-life Algorithms: Plant a Seed'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Your Digital Footprint:
              name: Your Digital Footprint
            'Programming: My Robotic Friends':
              name: 'Programming: My Robotic Friends'
            Programming in Maze:
              name: Programming in Maze
            'Loops: My Loopy Robotic Friends':
              name: 'Loops: My Loopy Robotic Friends'
            Loops in Collector:
              name: Loops in Collector
            Loops in Artist:
              name: Loops in Artist
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Events in Play Lab:
              name: Events in Play Lab
          title: 'CS Fundamentals: Course B'
          description_audience: ''
          description_short: An introduction to computer science for early readers.
          description: Course B is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share.
        coursec:
          stages:
            Building a Foundation:
              name: Building a Foundation
            Programming in Maze:
              name: Programming in Maze
            Debugging in Maze:
              name: Debugging in Maze
            'Real-life Algorithms: Paper Planes':
              name: 'Real-life Algorithms: Paper Planes'
            Programming in Collector:
              name: Programming in Collector
            Programming in Artist:
              name: Programming in Artist
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
            Loops in Maze:
              name: Loops in Maze
            Loops in Harvester:
              name: Loops in Harvester
            'Events: The Big Event':
              name: 'Events: The Big Event'
            Build a Flappy Game:
              name: Build a Flappy Game
            Events in Play Lab:
              name: Events in Play Lab
            Screen Out the Mean:
              name: Screen Out the Mean
            Binary Bracelets:
              name: Binary Bracelets
          title: 'CS Fundamentals: Course C'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: 'In this course students will create programs to solve problems and develop interactive games or stories they can share. '
        coursed:
          stages:
            Introduction:
              name: Introduction
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Events in Bounce:
              name: Events in Bounce
            Nested Loops:
              name: Nested Loops
            Nested Loops in Artist:
              name: Nested Loops in Artist
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Bee:
              name: Debugging in Bee
            While Loops in Farmer:
              name: While Loops in Farmer
            Conditionals with Cards:
              name: Conditionals with Cards
            Conditionals in Bee:
              name: Conditionals in Bee
            Conditionals & Loops in Maze:
              name: Conditionals & Loops in Maze
            Conditionals & Loops in Farmer:
              name: Conditionals & Loops in Farmer
            Digital Citizenship:
              name: Digital Citizenship
            Build a Play Lab Game:
              name: Build a Play Lab Game
            'Unplugged: Binary':
              name: 'Unplugged: Binary'
            Artist Binary:
              name: Artist Binary
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share.
        coursee:
          stages:
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction
            The Power of Words:
              name: The Power of Words
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Presentation Your Project:
              name: Presentation Your Project
            'Algorithms: Dice Race':
              name: 'Algorithms: Dice Race'
            Conditionals:
              name: Conditionals
            Private and Personal Information:
              name: Private and Personal Information
            Build a Star Wars Game:
              name: Build a Star Wars Game
            'Functions: Songwriting':
              name: 'Functions: Songwriting'
            Functions in Artist:
              name: Functions in Artist
            Functions in Bee:
              name: Functions in Bee
            Functions in Farmer:
              name: Functions in Farmer
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: Build a Play Lab Game
            Present Your Project:
              name: Present Your Project
            Internet:
              name: Internet
            Crowdsourcing:
              name: Crowdsourcing
          title: ''
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project.
        coursef:
          stages:
            'Algorithms: Tangrams':
              name: 'Algorithms: Tangrams'
            Introduction:
              name: Introduction
            The Power of Words:
              name: The Power of Words
            Ice Age Play Lab:
              name: Ice Age Play Lab
            Envelope Variables:
              name: Envelope Variables
            Variables in Artist:
              name: Variables in Artist
            Variables in Play Lab:
              name: Variables in Play Lab
            For Loop Fun:
              name: For Loop Fun
            For Loops in Bee:
              name: For Loops in Bee
            For Loops in Artist:
              name: For Loops in Artist
            Songwriting with Parameters:
              name: Songwriting with Parameters
            Conditionals and Functions in Bee:
              name: Conditionals and Functions in Bee
            Functions with Parameters in Artist:
              name: Functions with Parameters in Artist
            Functions with Parameters in Bee:
              name: Functions with Parameters in Bee
            Explore Project Ideas:
              name: Explore Project Ideas
            The Design Process:
              name: The Design Process
            Build Your Project:
              name: Build Your Project
            Revise Your Project:
              name: Revise Your Project
            Presentation Your Project:
              name: Presentation Your Project
            Present Your Project:
              name: Present Your Project
          title: 'CS Fundamentals: Course F'
          description_audience: ''
          description_short: Learn the basics of computer science and create your own art, stories, and games.
          description: In this course students will create programs to solve problems and develop interactive games or stories they can share. The course culminates in a multi-day project.
        csdnovice:
          stages:
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Welcome:
              name: Welcome
            Congrats:
              name: Congrats
            Wrap Up:
              name: Wrap Up
          title: CS Discoveries TeacherCon Novice Facilitators
          description_audience: CSD Novice Facilitators
          description_short: Reflection questions for novice facilitators at TeacherCon.
          description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
        csp-explore-task:
          stages:
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
          title: CSP Explore PT Prep
          description_audience: ''
          description_short: These lessons cover the preparation and completion of the CS Principles AP Explore Performance Task.
          description: These lessons cover the preparation and completion of the CS Principles AP Explore Performance Task.
        csp-create-task:
          stages:
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
          title: ''
          description_audience: ''
          description_short: These lessons cover the preparation and completion of the CS Principles AP Create Performance Task.
          description: These lessons cover the preparation and completion of the CS Principles AP Create Performance Task.
        csp-ap-tech-setup:
          stages:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
          title: CSP AP Digital Portfolio and Other Tools
          description_audience: ''
          description_short: ''
          description: Covers AP Digital Portfolio setup and other technical tools required for completing and submitting the AP Performance Tasks.
        csp-ap:
          stages:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
          title: CSP AP Exam and Performance Tasks
          description_audience: ''
          description_short: Lessons guide students to prepare for and complete the AP exam and Performance Tasks.
          description: Lessons guide students to prepare for and complete the AP exam and Performance Tasks.
        cspnovice:
          stages:
            Welcome:
              name: Welcome
            Tuesday:
              name: Tuesday
            Wednesday:
              name: Wednesday
            Thursday:
              name: Thursday
            Wrap Up:
              name: Wrap Up
          title: CS Principles TeacherCon Novice Facilitators
          description_audience: CSP Novice Facilitators
          description_short: Reflection questions for novice facilitators at TeacherCon.
          description: 'A place to keep track of your reflection from TeacherCon as a novice facilitator. '
