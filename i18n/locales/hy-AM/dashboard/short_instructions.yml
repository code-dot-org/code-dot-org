hy:
  data:
    short_instructions:
      2-3 Artist 1 new: 'Ողջու՜յն, ես նկարիչ եմ: Կարող ես կոդ գրել, որ ես ցանկացած բան գծեմ: Օգտագործի՛ր մի քանի բլոկ, որ նկարում մոխրագույն գծերով անցնեմ: (Յուրաքանչյուր գիծ 100 պիկսել երկարություն ունի)'
      2-3 Artist 11: "Give the stop sign a border by making an octagon\nwith 100 pixels sides. \\r\n\\r\n"
      2-3 Artist 12: |-
        Create a circle to finish the eyeball!\\r
        \\r
        If
        the artist turns 1 degree with each loop, how many times do you need to repeat
        the code to draw a circle? 180? 360? 500?
      2-3 Artist 2 new: 'Տունն անավարտ պատ ունի: Յուրաքանչյուր կողմը 100 Է, սակայն կիսավարտ պատը 50 Է: Ավարտի՛ր պատը:'
      2-3 Artist 2: 'Տունն անավարտ պատ ունի: Յուրաքանչյուր կողմը 100 Է, սակայն կիսավարտ պատը 50 Է: Ավարտի՛ր պատը:'
      2-3 Artist 3.4: "The jump block moves the artist without drawing.\nDraw the dashed line using both the `jump forward` and `move forward` blocks."
      2-3 Artist 3: "This hat is 100 pixels high. Draw a hat that is\n70 pixels less."
      2-3 Artist 3new: "Կարմիր գլխարկը 100 պիկսել երկարություն ունի: Ավարտի՛ր սև գլխարկի գծագրումը, որը 70 պիկսել կարճ է: (Հուշում՝ յուրաքանչյուր գլխարկի լայնություն 50 պիկսել է)"
      2-3 Artist 4: Help me complete the house for this cat.
      2-3 Artist 5: "Replace this code with a \"repeat times\" block\nto draw the same house using only 3 blocks."
      2-3 Artist 6: "This house needs a roof! Draw the triangle.  Hint:\nall three sides are the same length."
      2-3 Artist 7: "Finish drawing the last set of windows on the school\nso that everyone in class can see outside. The sides of each square window\npane are 25 pixels long."
      2-3 Artist 8: "Complete the rooms for each of the animals by splitting\nthe rectangle into 2 equal-sized squares. The rectangle is 200 pixels wide\nand 100 pixels tall."
      2-3 Artist 9 NEW: Finish this kite
      2-3 Artist 9: Finish this kite
      2-3 Artist Assessment 1: "Assessment: Finish drawing the last tooth.\nIt is 25 pixels wide and 25 pixels tall."
      2-3 Artist Debugging 1: "The width of the top of this hat should\nbe 50 pixels wide.  Can you fix it?"
      2-3 Artist Debugging 10: "The direction pad on my game controller\nis too narrow. \\r\n\\r\nCan you make it wider by 10 pixels?"
      2-3 Artist Debugging 11: |-
        My snowflake is falling apart!\\r
        \\r
        Can
        you figure out what's going wrong?
      2-3 Artist Debugging 12: "I'm supposed to add an ocean wave to\nthis scene.  Can you help me?"
      2-3 Artist Debugging 2: "This code for the cat's whiskers is wrong.\n\\r\n\\r\nFix this code to draw whiskers that are all the same length."
      2-3 Artist Debugging 3: "My boat has a hole! \\r\n\\r\nWhat do you\nneed to fix to make the ends meet?"
      2-3 Artist Debugging 4: "What is the image that we're trying to\ndraw? Finish connecting the dots using the proper lines and angles."
      2-3 Artist Debugging 5: "The code that we have for the leg and\nfoot is wrong. \\r\n\\r\nCan you fix it?"
      2-3 Artist Debugging 6: |-
        Looks like I'm sitting on a chair that’s
        missing a leg!\\r
        \\r
        Edit the code to draw the last leg.
      2-3 Artist Debugging 7: |-
        Looks like the C in code is drawn backwards!\\r
        \\r
        Can
        you make it look like a C again?
      2-3 Artist Debugging 8: |-
        My teacher says that I should finish what
        I start!\\r
        \\r
        Help me finish my pinwheel. Can you figure out what's wrong?
      2-3 Artist Debugging 9: |-
        Something is off!\\r
        \\r
        The code for
        this stem is wrong. Can you figure out how to get the artist to trace the
        stem the right way?
      2-3 Artist Debugging Assessment 1: "Assessment: Why does this square\nend up being 75 pixels too small on each side?  \\r\n\\r\nWhere does the code\ngo wrong?"
      2-3 Artist Free Play: Free-play! Draw anything you'd like.
      2-3 Artist Functions 1 a: "\"Me zombie artist. Me love drawing!\"  \\r\n\\r\nHelp\nthe zombie draw square glasses.  \\r\n\\r\nThe bridge between the glasses is\n25 pixels shorter than the width of the squares."
      2-3 Artist Functions 1: "\"Me zombie artist. Me love drawing!\"  \\r\n\\r\nHelp\nthe zombie draw square glasses.  \\r\n\\r\nThe bridge between the glasses is\n25 pixels shorter than the width of the squares."
      2-3 Artist Functions 10: "Freeplay: Here are two functions, one\nto draw a big gear and one to draw a small gear. Use them to draw the inside\nof a machine!"
      2-3 Artist Functions 11 a: "We've renamed the `draw a square` function\nto `draw a hexagon`, but it's still giving us squares! Can you modify the\n`draw a hexagon` function to draw a hexagon with 50 pixel sides? \\r\n\\r\nDraw\nthe image using the new function!"
      2-3 Artist Functions 11.5 a: "Here's that same `draw a hexagon`\nfunction. \\r\n\\r\nWhat happens if you turn 60 degrees in your main program\neach time you loop?"
      2-3 Artist Functions 11.5: "Here's that same `draw a hexagon`\nfunction. \\r\n\\r\nWhat happens if you turn 60 degrees in your main program\neach time you loop?"
      2-3 Artist Functions 11: "We've renamed the `draw a square` function\nto `draw a hexagon`, but it's still giving us squares! Can you modify the\n`draw a hexagon` function to draw a hexagon with 50 pixel sides? \\r\n\\r\nDraw\nthe image using the new function!"
      2-3 Artist Functions 12 Mike: "Functions are really great for drawing\ncomplex things multiple times. \\r\n\\r\nCan you use the `draw a flower` function\nto fill the rest of the planter box?\\r\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 12 a: "Functions are really great for drawing\ncomplex things multiple times. \\r\n\\r\nCan you use the `draw a flower` function\nto fill the rest of the planter box?\\r\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 12: "Functions are really great for drawing\ncomplex things multiple times. \\r\n\\r\nCan you use the `draw a flower` function\nto fill the rest of the planter box?\\r\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 13: "We've provided you with four functions.\nUse them any way you like inside of one or more loops to make pictures that\nyou can share with your friends. Press run to see an example."
      2-3 Artist Functions 2: "Functions let you define new blocks! \\r\n\\r\nWe've\nmoved the blocks needed for drawing a square into a function called `draw\na square`. This time, use the `draw a square` function to create the glasses.\n\\r\n\\r\nThe squares are 75 pixels apart."
      2-3 Artist Functions 3: "Edit the function to draw a square with\na side length of 115 to draw the bigger glasses. \\r\n\\r\nThe squares are now\n45 pixels apart."
      2-3 Artist Functions 4: "Now, put the function inside of a loop\nto draw these three squares."
      2-3 Artist Functions 7: "Use the \"draw a house\" function to draw\ntwo houses using two different parameters. (Hint: the first house is 100 pixels)."
      2-3 Artist Functions 9: "Freeplay: Here is a snowflake function.\nExperiment with it to create a winter scene! This is a free play level, so\nthere is no puzzle to solve. Have fun!"
      2-3 Artist Loops 1: "Can you make a hexagon with sides that are\n100 pixels long to finish the cell? Remember, that means that you will only\nneed to turn 60 degrees!"
      2-3 Artist Loops 10: "What happens to the design when we make our\nfinal step forward half as long?"
      2-3 Artist Loops 11: "Now let's put *another* loop around our\nwhole creation!  Don't forget to add an angle at the end of the outer loop."
      2-3 Artist Loops 4: "Want to see what happens when we repeat that\nshape over and over again using a loop?"
      2-3 Artist Loops 5: "Now let's make a small change to the loop\nand see how different our picture becomes."
      2-3 Artist Loops 6: "Add one more move and another turn inside\nthe loop and see how your design changes."
      2-3 Artist Loops 7: "We can use loops to make all kinds of polygons.  Can\nyou create a rhombus inside this hexagon?"
      2-3 Artist Loops 8: Let's put both elements inside a loop.
      2-3 Artist Loops 9: |-
        We're going to loop the same elements, but
        now we're going to add some distance between them.\\r
        Use the same code as
        before, but add a step forward at the end of the outer loop.
      2-3 Artist Loops New 1: "Let's draw this robot's head! Can you\nmake a square with sides that are 100 pixels?"
      2-3 Artist Loops New 10: "Now let's connect a bunch of V's together\nin a loop."
      2-3 Artist Loops New 11: "Rebuild the code from the last puzzle,\nbut this time, add a left turn of 30 degrees inside the loop. Now, repeat\nit 24 times instead of 7."
      2-3 Artist Loops New 12: 'Draw a diamond with sides of 100 pixels.'
      2-3 Artist Loops New 13: "We are going to start you with some code\n(in grey) to make one diamond. \\r\n\\r\nLoop the grey code to create a fun\npattern!"
      2-3 Artist Loops New 14: "Play around with the code for the diamond\nand see what other patterns you can make. Try changing how many degrees you\nturn and how many times you loop."
      2-3 Artist Loops New 15: Now, draw anything you like!
      2-3 Artist Loops New 2: |-
        Here is the same puzzle that we just solved,
        but this time, we have to use loops to pass it.  Can you put a `repeat` around
        the starter code to finish the robot head?
      2-3 Artist Loops New 9: "Draw a simple V (where both sides are\n50 pixels) to complete the arrow."
      2-3 Artist Match Hex Pic: 'Match:  Help finish the Hexagon.'
      2-3 Artist Match Rho Pic: 'Match:  Finish the missing code.'
      2-3 Artist Match Sq Pic: 'Match: Complete the missing code'
      2-3 Artist Match Tri pic: 'Matching:  Fill in the missing code.'
      2-3 Artist Nested Loops 1: '"repeat" բլոկի մեջ դի՛ր կոդերը տրված օրինակը գծելու համար:'
      2-3 Artist Nested Loops 10: 'Կոդը գրի՛ր 12 անգամ պատկերը ամբողջականացնելու համար:'
      2-3 Artist Nested Loops 11: 'Կոդը գրի՛ր 4 անգամ պատկերը ամբողջականացնելու համար, թեքվի՛ր 90 աստիճանով յուրաքանչյուր շրջանից հետո:'
      2-3 Artist Nested Loops 12: 'Կոդը գրի՛ր 12 անգամ գալարները գծելու համար:'
      2-3 Artist Nested Loops 2: "Այժմ միացրու՛ եռանկյունիները 6 անգամ: Յուրաքանչյուր եռանկյունից հետո թեքվի՛ր 60 աստիճանով հաջորդը գծելու համար:"
      2-3 Artist Nested Loops 3: "Եռանկյունիները միացրո՛ւ 12 անգամ տրված պատկերը գծելու համար: Շրջանագծի (360) աստիճանը բաժանի պատկերների քանակի (12) վրա, որպեսզի յուրաքանչյուր պատկերից հետո պարզ լինի, թե որքան պետք է թեքվել:"
      2-3 Artist Nested Loops 4: "Միացրու՛ ադամանդաձև պատկերները 12 անգամ ծաղիկը գծելու համար: Հիշեցում. 12 ադամանդները միացրու՛ միևնույն անկյան տակ, ինչպես 12 եռանկյունիների դեպքում: Որքա՞ն պետք է թեքվել յուրաքանչյուր պատկերից հետո:"
      2-3 Artist Nested Loops 5: "Գծի՛ր շենքի պատուհանները՝ ցանցային միացումներ կատարելով: Պատուհանները ունեն 20 պիքսել երկարություն և 20 պիքսել հեռավորության վրա են:"
      2-3 Artist Nested Loops 6: |-
        Դինոզավրը ունի պոչից վեր բարձրացող 8 սուր ծայր: Յուրաքանչյուր սուր ծայրը 30 պիքսել երկարություն ունի: Միացրու՛ եռանկյունը 8 անգամ, սակայն առջև ցատկիր յուրաքանչյուրից հետո:
      2-3 Artist Nested Loops 7: "Միացրու՛ եռանկյունը 10 անգամ արևը գծելու համար: Պետք է տեղաշարժվել և թեքվել յուրաքանչյուր եռանկյունից հետո: Շրջանագծի աստիճանը բաժանելով եռանկյունիների քանակի վրա՝ պարզ կլինի, թե որքան պետք է թեքվել:"
      2-3 Artist Nested Loops 8: "Այժմ մեր նկարին խոտ ավելացնենք: Յուրաքանչյուր խոտ 50 պիքսել հեռավորություն ունի:"
      2-3 Artist Nested Loops 9: "Նկարը կավարտենք՝ ավելացնելով ծաղիկը: Ադամանդաձև պատկերները միացրու՛ 12 անգամ ծաղիկը գծելու համար:"
      2-3 Artist Nested Loops Free Play: 'Ազատ խաղ. գծի՛ր ինչ-որ բան՝ ցանցային միացումներ իրականացնելով:'
      2-3 Bee Conditionals 1: "Hi! I'm a bee. Help me get nectar from\nthe flower."
      2-3 Bee Conditionals 10: "Purple flowers may have either 1 or 0\nnectar. Be careful not to collect nectar from a purple flower if it doesn't\nhave any.\\\\r\n"
      2-3 Bee Conditionals 11: "I wonder what's out there!\\r\n\\r\nHelp\nme fly around the yard and collect nectar only from the flowers that have\nsome. "
      2-3 Bee Conditionals 12: "Help me find all of the nectar using\nas few blocks as possible!"
      2-3 Bee Conditionals 13: |-
        There's a lot happening here!\\r
        \\r
        Use
        what you've learned to collect all of the nectar and then make the honey.
      2-3 Bee Conditionals 14: |-
        Let's put everything together!\\r
        \\r
        Use
        what you've learned to help me collect nectar only from flowers that have
        it, using as few blocks as possible.  Don't forget to make honey at the end.
      2-3 Bee Conditionals 15: "This stair step pattern should look familiar.  \\r\n\\r\nCan\nyou collect nectar only from the flowers that have some, using as few blocks\nas possible?"
      2-3 Bee Conditionals 2: "I'm a hungry bee! \\r\nHelp me collect\nall of the nectar from the flowers using the fewest number of blocks."
      2-3 Bee Conditionals 3: "Look at all of that nectar!\\r\n\\r\nHelp\nme collect the nectar and make the honey using as few blocks as you can.  "
      2-3 Bee Conditionals 4: "Help me collect all of the nectar from\nthe flowers and make all the honey."
      2-3 Bee Conditionals 5: "Be careful not to collect nectar from\na purple flower if it doesn't have any. \\r\nYou must first check if the nectar\nis equal to 1 using the `if nectar` block."
      2-3 Bee Conditionals 6: "Check this flower with an \"if\" block\nto see if there is any nectar available."
      2-3 Bee Conditionals 7: "Collect nectar from each flower only if\nit has any."
      2-3 Bee Conditionals 8: "This field has red and purple flowers.\nRed flowers have a known nectar amount, but purple flower nectar is unknown.\nCollect all the nectar."
      2-3 Bee Conditionals 9: Collect all the nectar from each flower.
      2-3 Bee Conditionals Assessment 1: "Assessment: Collect all of\nthe nectar. Be careful not to try to collect nectar from a purple flower if\nit doesn't have any."
      2-3 Bee Debugging 1: "These blocks are really bugging me. Fix the\nerror(s) to collect all of the nectar."
      2-3 Bee Debugging 10: "This puzzle is making me loopy! \\r\nFix\nthe error(s) to collect all of the nectar and make all of the honey."
      2-3 Bee Debugging 2: |-
        Can you find the problem here?\\r
        Fix the
        error(s) to collect all of the nectar.
      2-3 Bee Debugging 3: |-
        Ooh, this one stings!\\r
        \\r
        Fix the error(s)
        to collect all of the nectar.
      2-3 Bee Debugging 4: "These blocks are really bugging me. Fix the\nerror(s) to collect all of the nectar and make all of the honey."
      2-3 Bee Debugging 5: "That flower looks tasty! \\r\n\\r\nFix the\nerror(s) to collect all of the nectar.  You can now use both run and step."
      2-3 Bee Debugging 6: |-
        What a sweet challenge!\\r
        \\r
        Fix the error(s)
        to collect all of the nectar.
      2-3 Bee Debugging 7: "Fix the error(s) to collect all of the nectar\nand make all of the honey."
      2-3 Bee Debugging 8: |-
        So many beautiful flowers!\\r
        \\r
        Fix the
        error(s) to collect all of the nectar.
      2-3 Bee Debugging 9: |-
        "Bee" patient with this one!\\r
        \\r
        You
        will need to fix a couple of things in this program to collect all of the
        nectar and make all of the honey.
      2-3 Bee Debugging Assessment 1: |-
        Assessment:  Now it's time to
        show what you know!\\r
        \\r
        Fix the error(s) to collect all of the nectar and
        make all of the honey.
      2-3 Bee Functions 1: "Functions are blocks of code that perform\na task. Use the \"get 2 nectar\" function to collect the nectar from each\nflower."
      2-3 Bee Functions 10: "Purple flowers change between either 1 or\n0 nectar each time you run the puzzle.   \\r\n\\r\nCreate a function that collects\nnectar only from purple flowers that have nectar."
      2-3 Bee Functions 2: "Functions are blocks of code that perform\na task.  \\r\n\\r\nUse the `get 5` function to get 5 nectars at a time."
      2-3 Bee Functions 3: Collect all the nectar from each flower.
      2-3 Bee Functions 4: "The `move and get nectar` function turns\nthe bee, collects nectar, and then returns the bee to where it started.  \\r\n\\r\nUse\nthe function to collect all of the nectar."
      2-3 Bee Functions 5: "There is now more nectar at the flowers.\nEdit the given function so that it collects 4 nectars and use it to collect\nall of the nectar from the flowers."
      2-3 Bee Functions 6: "Now use the same function to collect nectar\nfrom the three flowers."
      2-3 Bee Functions 7: "The flowers are now further away. Edit the\ngiven function and use it to collect all of the nectar from the flowers."
      2-3 Bee Functions 8: "Create your own function that gets 7 nectar,\nmoves forward, and makes 7 honey. Use the function to collect nectar at each\nflower and make honey at each honeycomb."
      2-3 Bee Functions 9: "Create your own function that goes down a\npath, gets nectar, makes honey, and then returns the bee to the top of the\npath."
      2-3 Bee Functions Assessment 1: "Assessment: Use the given function\nto collect nectar from each flower."
      2-3 Bee Functions Assessment 2: "Assessment: Create a function\nto move forward and make 3 honey, then return the bee to where it started."
      2-3 Bee Loops 1: |-
        Those flowers look tasty!\\r
        \\r
        Collect nectar
        from each of the flowers using the fewest blocks possible.
      2-3 Bee Loops 10: "Can you use a while loop inside of two other\nloops to collect all of the nectar?"
      2-3 Bee Loops 11: "Use while loops to collect all of the nectar\nfrom the flowers in this field."
      2-3 Bee Loops 12: "Use while loops to collect all of the nectar\nfrom the flowers in this field."
      2-3 Bee Loops 13: "Assessment: Collect all of the nectar using\nthe fewest blocks possible."
      2-3 Bee Loops 1A: "Hi, I'm a bee. Can you help me collect the\nnectar from these flowers?"
      2-3 Bee Loops 2: "Collect all the nectar and make all of the honey\nusing the fewest blocks possible."
      2-3 Bee Loops 2A: This time, use a loop to gather all of the nectar.
      2-3 Bee Loops 3: "Collect nectar from each flower and make honey\nat each honeycomb using the fewest blocks possible."
      2-3 Bee Loops 3A: Use a `repeat` loop to collect all of the nectar.
      2-3 Bee Loops 3B: "Now use the `repeat` block to collect all of\nthe nectar and make all of the honey."
      2-3 Bee Loops 4: |-
        Such a busy bee!\\r
        \\r
        Help bee collect all
        of the nectar and make all of the honey with the fewest blocks possible.
      2-3 Bee Loops 4A: "How many times can loops help you in this puzzle?  \\r\n\\r\nLoops\nare your friend! Use a few of them to complete this puzzle with the fewest\nblocks possible."
      2-3 Bee Loops 5: "The shape of this path is different than the\nothers. \\r\n\\r\nCan you collect all of the nectar using as few blocks as possible?"
      2-3 Bee Loops 6: "Can you find the quickest way for the bee to\ncollect all of the nectar and make all of the honey?"
      2-3 Bee Loops 7: "What a beautiful field of flowers!   Help the\nbee visit each one.  Can you find a way to do it with fewer than 7 blocks?"
      2-3 Bee Loops 8: "These purple flowers have different amount of\nnectar each time you run the puzzle. \\r\n\\r\nUse the `while nectar` loop to\ncollect all of the nectar. \\r\n\\r\nThis loop will run as long as the condition\nis true, in this case `nectar > 0`."
      2-3 Bee Loops 9: "The while loop can perform the same action as\nan if statement in a loop. Add a while loop to this code to perform the same\ntask."
      2-3 Bee Loops Assessment 1: "Assessment: Use a `while` loop to\ncollect all of the nectar from these flowers."
      2-3 Maze 1: 'Կարո՞ղ ես օգնել չարաճճի խոզուկին բռնել: Միացրու՛ մի քանի «առաջ ընթանալ» բլոկներ «երբ կսկսի» բլոկին և սեղմի՛ր «վազք»:'
      2-3 Maze 10: 'Տա՛ր ինձ այդ կանաչ չարիքի մոտ: (Զգուշացի՛ր TNT-ներից) '
      2-3 Maze 11: "Get me to the flower I'm hungry! How many times\ndo you have to repeat a block?"
      2-3 Maze 12 (copy 1): "Can you replace the previous answer with only two\nblocks? (Hint: Create a loop using a \"repeat times\" block.)"
      2-3 Maze 12 (copy 2): "Can you replace the previous answer with only two\nblocks? (Hint: Create a loop using a \"repeat times\" block.)"
      2-3 Maze 12 (old): "Get me to the pig, now with the Repeat times\nblock!"
      2-3 Maze 12: "Can you get to the pig by creating a loop that uses\nonly one `move forward` block inside of a `repeat`?"
      2-3 Maze 13 (old): "Get me to the pig, now with the Repeat until\nblock!"
      2-3 Maze 13: Get me to the pig by adding only one block
      2-3 Maze 14 (old): Get me to the pig with the Repeat until block!
      2-3 Maze 14: "Get me to the sunflower! (Where is that \"repeat\ntimes\" block when I need it?)"
      2-3 Maze 15 (old): Get me to the pig with the Repeat until block!
      2-3 Maze 15: "In this puzzle, two `repeat` loops will help you\nget to the pig with the fewest number of blocks!"
      2-3 Maze 16 (old): Get me to the pig with the Repeat until block!
      2-3 Maze 16 before: "Can you figure out the fastest way to get\nme to the pig?"
      2-3 Maze 16: "Loops even work with more than one block inside!  Can\nyou loop this sequence to get the zombie to the sunflower?"
      2-3 Maze 2: 'Այս խոզուկն ինձ բարկացնում է: Օգնի՛ր նրան հասնել:'
      2-3 Maze 3: 'Որոշի՛ր ուղին և տա՛ր ինձ այդ հիմար խոզուկի մոտ: Խուսափի՛ր TNT-ները, այլապես կպայթես: '
      2-3 Maze 4: 'Տա՛ր ինձ այդ կանաչ չարիքի մոտ: (Զգուշացի՛ր TNT-ներից) '
      2-3 Maze 5: 'Տա՛ր ինձ այդ կանաչ չարիքի մոտ: (Զգուշացի՛ր TNT-ներից) '
      2-3 Maze 6: 'Պահպանե՛ք հանգստություն և օգնե՛ք գտնել այդ վատ խոզուկին: Հակառակ դեպքում՝ կբարկանամ:'
      2-3 Maze 7: 'Տա՛ր ինձ այդ կանաչ չարիքի մոտ: (Զգուշացի՛ր TNT-ներից) '
      2-3 Maze 8: Տա՛ր ինձ խոզի մոտ։
      2-3 Maze 9: 'Տա՛ր ինձ այդ կանաչ չարիքի մոտ: (Զգուշացի՛ր TNT-ներից) '
      2-3 Maze Loops 1: "Can you get me to the pig using 5 of the same\nkind of blocks?"
      2-3 Maze Loops 17: Use what you learned to get me to the sunflower!
      2-3 Maze Loops 18: "Get me to the sunflower using the fewest blocks\npossible!  \\r\n\\r\nTry using one `repeat` loop inside of another to cut down\non the amount of code you need."
      2-3 Maze Loops 19: "Let's take this to another level! \\r\nUse\nloops to get me to the sunflower with the fewest loops possible."
      2-3 Maze Loops 20: 'Ինձ արևածաղկի մետ տա՛ր՝ օգտագորելով հնարավորինս քիչ բլոկներ:'
      2-3 Maze Loops 21: "Get me to the sunflower using the fewest blocks\npossible!"
      2-3 Maze Loops Assessment 1: "Assessment:  Get me to the sunflower\nusing only 5 blocks!"
      2-3 Maze sq10: Get me to the pig! What blocks got repeated?
      2-3 Maze sq10v2: Get me to the pig! What blocks got repeated?
      2-3 Maze sq2: 'Որոշի՛ր ուղին և տա՛ր ինձ այդ հիմար խոզուկի մոտ: Խուսափի՛ր TNT-ները, այլապես կպայթես: '
      2-3 Maze sq3: 'Տա՛ր ինձ այդ կանաչ չարիքի մոտ: (Զգուշացի՛ր TNT-ներից) '
      2-3 Maze sq4: 'Պահպանե՛ք հանգստություն և օգնե՛ք գտնել այդ վատ խոզուկին: Հակառակ դեպքում՝ կբարկանամ:'
      2-3 Maze sq5: "Get me to the pig! How many times do you have to\nrepeat a block?"
      2-3 Maze sq6: "Can you replace the previous answer with only two\nblocks? (Hint: Create a loop using a \"repeat times\" block.)"
      2-3 Maze sq7: Get me to the green intruder using only three blocks.
      2-3 Maze sq8: "Get me to the pig! (Where is that \"repeat times\"\nblock when I need it?)"
      2-3 Maze sq9: Create loops to get to the pig using less blocks.
      2-3 maze sq11: Get me to the pig! What blocks got repeated?
      2-3 maze sq12: "Can you replace the previous answer with a loop\nby using a \"repeat times\" block?"
      2-3 maze sq13: "Dear person. Me zombie. Must... get... to sunflower.\nCreate loop with \"repeat until\" block."
      2-3 maze sq14: 'Կարո՞ղ ես արևածաղկին հասնել՝ միայն 4 բլոկներ օգտագործելով:'
      2-3 maze sq15: Can you get to the sunflower using only five blocks?
      2-3 maze sq16: "Ok, this is similar, but slightly different. Can\nyou do it in only five blocks?"
      2-3level1: Help the bird catch the naughty pig by moving it forward
      20hr_farmer_stage9_1: Hi, Im a farmer. I need your help to flatten the field on my farm so its ready for planting. Move me to the pile of dirt and use the "remove" block to remove it.
      20hr_farmer_stage9_11: 'Its still dark outside. Move me along the field. If there is a pile, remove it, and if there is a hole, fill it in. Hint: ''օգտագործել dropdown մենյու տարբերակների վրա «Եթե» բլոկում.'''
      20hr_farmer_stage9_2: 'Հաջորդ, տեղափոխել են ինձ դեպի անցքը եւ լրացնել այն երկու գարին հող, օգտագործելով «Լցրէք» դաշինքը:'
      20hr_farmer_stage9_3: Տեղափոխեն, դեպի կույտ հող եւ ասեք ինձ, թե քանի գարին է հեռացնել օգտագործելով ինչպես մի քանի նյութից, որքան հնարավոր է.
      20hr_farmer_stage9_4: 'Կարող եք օգնել ինձ հեռացնել բոլոր չորս piles է կեղտը. Ակնարկ «օգտագործել կրկնակի բլոկ, եթե դուք կարող եք.'
      20hr_farmer_stage9_5: 'Օգնիր ինձ լրացնել բոլոր այդ անցքերի 5 գարին հող. Ակնարկ «Դուք կարող եք տեղադրել« Կրկնել »բլոկի ներսում», իսկ «բլոկում.'
      20hr_farmer_stage9_6: Remove all the piles of dirt, using as few blocks as possible. The new options in the dropdown menu on the "while" block tell me if Im standing on a pile or a hole.
      20hr_farmer_stage9_7: Wow, I found a really deep hole! I dont know how many shovelfuls of dirt it needs. Can you write a program that fills it until the ground is even?
      20hr_farmer_stage9_8: Օգնիր ինձ լրացնել անցքը վերջում դաշտում, օգտագործելով ինչպես մի քանի նյութից, որքան հնարավոր է.
      20hr_farmer_stage9_9: 'Make me հեռացնել բոլոր այդ piles է կեղտը: Փորձեք օգտագործել որպես մի քանի բլոկների, որքան հնարավոր է. Ակնարկ «փորձել կիրառել», իսկ «բլոկ.'
      20hr_maze_stage2_10: Ok, փորձեք նոր "Կրկնել մինչեւ« բլոկի - դա կլինի կրկնել, մինչեւ ես հասնել annoying pig.
      20hr_maze_stage2_11: Ok, մի վերջին անգամ, գործնականում, - դուք կարող եք լուծել այս մեկը, օգտագործելով միայն 4 նյութից.
      20hr_maze_stage2_13: 'Ok, սա նման է, բայց մի փոքր այլ է: Դուք կարող եք անել դա միայն 5 բլոկների.'
      20hr_maze_stage2_14: 'Օգտագործեք նոր «եթե» բլոկի թույլ տվեք որոշել, թե երբ է դիմել: Ակնարկ «Ձեզ անհրաժեշտ է միայն եւս մեկ բլոկ, բայց սովորել, թե ինչպես ենք մենք սահմանել այն, որ դուք կարող եք անել դա ձեր սեփական հաջորդ անգամ:'
      20hr_maze_stage2_15: 'Ok, սա ճիշտ այնպես, ինչպես վերջին հանելուկ, բայց դուք պետք է հիշել, թե ինչպես եք օգտագործել է «եթե» բլոկը եւ «Կրկնել» բլոկի միասին:'
      20hr_maze_stage2_16: Ինձ ուզում արեւածաղկի! Օգտագործեք «Եթե« արգելափակել ինձ այնտեղ fewest շարք բլոկների.
      20hr_maze_stage2_17: Ok, lets do that again for practice - this isnt very different, but watch out for the chompers!
      20hr_maze_stage2_18: '«Եթե-ուրիշը» բլոկների ստուգում է վիճակը, եւ ապա կատարում է մեկ բան, կամ մյուսը: Է հասնել ինձ արեւածաղկի փորձում է օգտագործել այս նոր բլոկ.'
      20hr_maze_stage2_19: "One more practice of the \"if-else\" block, can you\nget it right on your first try?"
      20hr_maze_stage2_2: 'Այս pig է ruffling իմ փետուրները: Օգնիր ինձ գտնել նրան.'
      20hr_maze_stage2_20: 'Կարող եք ավելացնել միայն 3 նյութից է օգնել ինձ լուծել ավելի բարդ լաբիրինթոս. Եթե ​​դուք դա անել ճիշտ, ես կարող եմ քայլել Ցանկացած Մեծ ուղին, անկախ նրանից, երկարությունը:'
      20hr_maze_stage2_3: 'Որոշի՛ր ուղին և տա՛ր ինձ այդ հիմար խոզուկի մոտ: Խուսափի՛ր TNT-ները, այլապես կպայթես: '
      20hr_maze_stage2_4: 'Տա՛ր ինձ այդ կանաչ չարիքի մոտ: (Զգուշացի՛ր TNT-ներից) '
      20hr_maze_stage2_5: 'Պահպանե՛ք հանգստություն և օգնե՛ք գտնել այդ վատ խոզուկին: Հակառակ դեպքում՝ կբարկանամ:'
      20hr_maze_stage2_6: Theres a way I can get to the silly pig using only 2 blocks. Can you figure it out?
      20hr_maze_stage2_7: Փորձեք ստանալ ինձ կանաչ զավթիչ, օգտագործելով միայն երեք նյութից.
      20hr_maze_stage2_8: 'Օգնիր ինձ վտարել այս Bad Piggy օգտագործելով fewest թվով բլոկների: Փորձեք օգտագործելով ավելի քան մեկ "Կրկնել անգամ» դաշինքը:'
      20hr_maze_stage2_9: 'When a block is grey, that means you cant delete it. Solve this puzzle using the "repeat" block that repeats 3 times. Try putting these 3 blocks inside the grey "repeat" block: ''տեղափոխել, տեղափոխել, իր հերթին.'''
      4-5 Artist 1: "Help me finish drawing my box. (Each line is 300\npixels long)"
      4-5 Artist 10: "Press \"Run\" to try the code. Then, repeat it\nenough times to complete the drawing. The colors will be different every time."
      4-5 Artist 11: "Complete the green lines. The lines are 300 pixels\nlong and 15 pixels apart."
      4-5 Artist 2: "Loop this code using the `repeat` block to complete\nthe square."
      4-5 Artist 3.5: "Try to figure out what happens if you run this\ncode (or just press \"Run\" and try it). Next, repeat the code enough times\nto complete the drawing!"
      4-5 Artist 3: "This rectangular flower bed has a perimeter of 600.\nThe long side has a length of 200. Draw the rectangle using as few blocks\nas possible."
      4-5 Artist 4: "How many degrees are in a circle?  Loop the blocks\nto create a circle of colors."
      4-5 Artist 5: "What can we replace \"???\" with to make sure that\nthe zombie completes this drawing using the loop provided?"
      4-5 Artist 6: "This equilateral triangle has angles of 60, 60,\nand 60 degrees. Each side is 200 pixels. Complete the drawing."
      4-5 Artist 7: "This right triangle has angles of 30, 60, and 90\ndegrees. The slanted side's length (length of the hypotenuse) is 200 pixels.\nComplete the drawing."
      4-5 Artist 8: "The halfway line on a soccer field is *perpendicular*\nto the sidelines.   \\r\nThis rectangle has a perimeter of 800 pixels total,\nand it is 240 pixels wide. How tall is it?   \\r\n\\r\nDraw the bounds and the\nhalfway line."
      4-5 Artist 9: "Draw the other half so that the design is symmetrical.\nThe triangles are equilateral and have sides that are 50 pixels long."
      4-5 Artist Assessment 1: "Assessment: Use a loop to draw the equilateral\ntriangle. Each side is 300 pixels."
      4-5 Artist For Loops 1: "Put the numbers 1 through 10 into the\nwidth blocks and run the code."
      4-5 Artist For Loops 11: "Complete the \"for\" block so that it\ncounts 0, 20, 40, 60, 80... 200."
      4-5 Artist For Loops 12: "What happens if you reverse the \"from\"\nand \"to\" numbers? Complete the \"for\" block so that it counts 200, 180,\n160, 140, 120...0."
      4-5 Artist For Loops 13: "This design got started without a \"for\"\nloop and is taking too many blocks!  Use a \"for\" block to complete the spiral.  Hint:\nthe last line length is 250 pixels."
      4-5 Artist For Loops 14: "Someone started the code, but then realized\nthere must be a quicker way! Use a \"for\" block to replace the blocks and\ncomplete the triangular spiral. (Hint: the last line length is 300 pixels.)"
      4-5 Artist For Loops 15: "Someone started the code, but then realized\nthere must be a quicker way! Use a \"for\" block to replace the blocks and\ncomplete the hexagonal spiral. (Hint: the last line length is 200 pixels.)"
      4-5 Artist For Loops 2: "This is a \"for\" block. Instead of typing\n1,2,3... 10, the \"for\" block can repeat the blocks inside it and count the\nnumbers for you. Place the number 10 into the \"to\" section of the \"for\"\nblock."
      4-5 Artist For Loops 3: "How can we count from 1 to 50? Edit the\n\"for\" block."
      4-5 Artist For Loops 4: "Complete the \"for\" block so that it\ncounts from 1 to 10 by 1."
      4-5 Artist For Loops 6: "Draw squares with sides of 50, 60, 70,\n80, and 90 pixels. You'll need to use the \"draw a square\" function five\ntimes."
      4-5 Artist For Loops 7: "Draw the same squares but use a \"count\nwith\" block to change the sizes. Place the \"counter\" block in the \"draw\na square\" function. Hint: It's in the Variables category."
      4-5 Artist For Loops 8: "Can you complete the program by placing\nthe blocks inside a \"for\" block that counts from 10 to 200 by 10? You can\nfind the \"for\" block in the Loops category."
      4-5 Artist For Loops 9: "These circles are size 5, 10, 15, 20,\n25, 30, and 35. Draw the circles using a \"for\" block."
      4-5 Artist Free Draw 1: "Free Draw!  Draw whatever you are inspired\nto create."
      4-5 Artist Functions 1: Use a repeat loop to draw this triangle.
      4-5 Artist Functions 10a: "Put this code into the 'draw a snowflake'\nfunction and replace the 50 with the parameter 'size'. The function is already\ncalled on to make a snowflake that is 100 pixels."
      4-5 Artist Functions 10b: "Use the 'draw a snowflake' function\nto create different size flakes.  Hint: the first snowflake is 25 in length\nand each snowflake is twice the size of the one before."
      4-5 Artist Functions 11: "This \"draw a hexagon\" function uses\nthe \"draw a triangle\" function. Complete the hexagon function. (Hint: A\nhexagon has 6 sides, each 100 pixels long)"
      4-5 Artist Functions 12: "Complete the 'draw waves' function.  Each\nwave is made up of one Upper wave and one Lower wave.   Hint: Draw 5 blue\nwaves."
      4-5 Artist Functions 13 Free play: "Here are some functions to\ndraw planets, stars, rockets, and robots. Use them any way you like to make\npictures that you can share with your friends."
      4-5 Artist Functions 14 Free play: "Here, we've provided you with\nseveral functions.  Use them any way you like inside of one or more loops\nto make pictures that you can share with your friends. Click 'Run' to see\nan example."
      4-5 Artist Functions 15 Assessment: "Assessment:  Use the \"draw\na square\" function to create the squares.  The squares are 50, 100, and 150\npixels."
      4-5 Artist Functions 2a: "Now put these blocks into a new function\ncalled \"draw a small triangle\" and call on it."
      4-5 Artist Functions 2b: "Now create a function called \"draw a\nsmall triangle\" using the provided blocks."
      4-5 Artist Functions 3: "Now create the functions \"draw a medium\ntriangle\" and \"draw a large triangle\". The \"draw a small triangle\" function\nis done for you. The triangles have side lengths of 50 (small), 100 (medium),\nand 150 (large)."
      4-5 Artist Functions 4: "This new \"draw a triangle\" function\nhas a parameter and can do the work of all three functions before. Draw the\nsame triangles using this new function."
      4-5 Artist Functions 5: "Can you modify the \"draw a triangle\"\nfunction into a \"draw a square\" function to change the drawing?"
      4-5 Artist Functions 6: "Use the \"draw a square\" and \"draw a\ntriangle functions\" to draw a house. (Hint: The square's sides are 200 pixels)"
      4-5 Artist Functions 6b: "Use the draw a square and triangle functions\nalong with other blocks to create a house by adding them to the 'draw a house\"\nfunction and calling it."
      4-5 Artist Functions 7: "Use the \"draw a house\" function to draw\nhouses that are 100 pixels and 50 pixels. The two houses are separated by\n50 pixels."
      4-5 Artist Functions 8: "The \"draw a flower\" function has a parameter\nthat allows you to set the stem height.  Set it to 200 and see what happens."
      4-5 Artist Functions 9: "Draw these 3 flowers. The first one's\nheight is 100 and the next flower is always 50 pixels more than the height\nof the previous one. The flowers are also 100 pixels apart."
      4-5 Artist Patterns 1: |-
        Draw this square using a loop.\\r
        \\r
        Each
        side is 20 pixels long.
      4-5 Artist Patterns 10: "This code draws two rows of hexagons -\nloop the whole thing 4 times to draw the whole honeycomb. \\r\n\\r\nYou'll\nneed to jump back 120 pixels in your outermost loop to make sure the artist\ndoesn't draw off the screen.\\r\n"
      4-5 Artist Patterns 11: "How many times do you need to loop this\nto draw a half circle?"
      4-5 Artist Patterns 12: "If you create another loop like this one,\nbut turn left instead of right, what happens? \\r\n\\r\nCan you repeat all of\nthat to draw this wave?"
      4-5 Artist Patterns 13: "Now let's loop that whole thing four\ntimes to create this picture frame. Watch out for the corners - you can't\njust turn 90 degrees! \\r\n\\r\nIf looping a 3 degree turn 60 times makes a\nhalf circle, which of these blocks of code will make an additional quarter\ncircle for the corners?"
      4-5 Artist Patterns 2: "If you place your square loop inside another\nloop, we call that a nested loop. What do you need to add as an outer loop\nto make sure all 15 squares line up next to each other?"
      4-5 Artist Patterns 3: "Now let's go one level deeper! We've\nnested that whole block of code into another loop, but you need to get the\nartist back in place to draw the next line. Which of these code blocks can\nyou place at the end of the outermost loop to draw the whole grid?"
      4-5 Artist Patterns 4: "This diamond has 50 pixel sides and angles\nof 120 and 60 degrees. Use a loop to draw it."
      4-5 Artist Patterns 5.5: "How many times do you need to repeat this\nblock to draw the full grid of diamonds?"
      4-5 Artist Patterns 5: "Repeat this code to make a row of 6 diamonds.\n\\r\n\\r\nNotice that we changed our diamond code to repeat 3 times instead\nof 2 - why do you think that is?\\r\n"
      4-5 Artist Patterns 6: "How many times do you need to repeat this\nblock to draw the full grid of diamonds?"
      4-5 Artist Patterns 7: "Let's modify the code from the last puzzle\nto make this more complex pattern. Notice how the diamonds overlap now, try\nchanging the first \"jump backwards\" from 100 to 50 (half as far) - now how\nfar should the artist go in the second \"jump backwards\"?"
      4-5 Artist Patterns 8: "Use a loop to draw this hexagon with 40\npixel sides and 60 degree angles."
      4-5 Artist Patterns 9.5: "Let's loop this code to draw two rows\nof hexagons. Notice how our second row is shifted to the right."
      4-5 Artist Patterns 9: "Now repeat this code 3 times and draw the\nwhole row. \\r\n\\r\nEach hexagon is 80 pixels wide from the furthest points\nleft to right."
      4-5 Artist Patterns Free Play: "Free play - try your hand at making\na pattern of your own!"
      4-5 Bee Conditionals - FC Test: "The bee only wants nectar right now.\nNot all objects are flowers, so check underneath EVERY CLOUD to see if it\nis hiding a flower. If it is, then you can gather nectar."
      4-5 Bee Conditionals 1: "This cloud is blocking my view! Check\nto see if there's a flower under the cloud, and only get nectar if there's\na flower. Be careful, it can change!"
      4-5 Bee Conditionals 2 (copy 1): "The bee only wants nectar right now. Remember, not\nall objects are flowers, so check to gather nectar only at flowers."
      4-5 Bee Conditionals 2: "More clouds! \\r\n\\r\nCheck underneath\nevery cloud to see if it is hiding a flower before you get nectar.  \\r\n\\r\nRemember:\nNot all clouds hide the same thing!"
      4-5 Bee Conditionals 3: "Now I just want to make honey. Some of\nthese clouds might have honeycombs under them. Be sure to check each cloud!"
      4-5 Bee Conditionals 4: "Sometimes this cloud covers a flower,\nand sometimes it covers a honeycomb! Use the if/else block to collect nectar\nif it is a flower, else to make honey (because it is a honeycomb)."
      4-5 Bee Conditionals 5: |-
        There will be either a flower or a honeycomb
        under each of those clouds!\\r
        \\r
        Use the `if/else` block to collect nectar
        if there is a flower.\\r
        Otherwise, make honey (because there is a honeycomb).
      4-5 Bee Conditionals 6: "I am not sure how much nectar this flower\nhas, but I know it has either 1, 2, or 3 nectar. \\r\n\\r\nCombine the conditional\nblocks (`if` and/or `if/else`) to only get as much nectar as the flower has.\n\\r\n\\r\nRemember, the amount of nectar can change each time you run the puzzle!"
      4-5 Bee Conditionals 7: "These flowers can have 3, 2, or 1 nectar.\n\\r\n\\r\nComplete the `check purple flower` function and use it to collect\nall of the nectar at the flowers."
      4-5 Bee Conditionals 8: "Write the function for `check flower make\nhoney`. \\r\n\\r\nYour function should check if the purple flower has 3, 2,\nor 1 nectar and get all of the nectar. \\r\nThen, move forward and make honey."
      4-5 Bee Conditionals Assessment 1: "**Assessment:** This cloud\nis either hiding a flower with one nectar or a honeycomb that needs one honey.  \\r\n\\r\nComplete\nthe `get nectar or make honey` function, then call it to collect the nectar\nor honey. \\r\n"
      4-5 Bee Debugging 1: "These blocks are really bugging me. \\r\n\\r\nCan\nyou fix them?"
      4-5 Bee Debugging 10: Find the errors and fix them.
      4-5 Bee Debugging 11: Does this count correctly?
      4-5 Bee Debugging 2: Help the bee get the nectar and make honey.
      4-5 Bee Debugging 3: Find the errors and fix them.
      4-5 Bee Debugging 4: These blocks don't work. What's the pattern?
      4-5 Bee Debugging 5: Something isn't right here...
      4-5 Bee Debugging 6: "The purple flower has a different amount\nof nectar each time you run the puzzle. \\r\n\\r\nFix the blocks to get all\nof the nectar from the flower each time."
      4-5 Bee Debugging 7: The function is missing something...
      4-5 Bee Debugging 8: "This function is fine, but it isn't used\nproperly."
      4-5 Bee Debugging 9: Why isn't the bee making enough honey?
      4-5 Bee Debugging Assessment 1: 'Assessment: Fix the code.'
      4-5 Bee Nested Loops 1: Use a loop to collect all of the nectar.
      4-5 Bee Nested Loops 2: "Collect all of the nectar from each flower.\nUse a nested loop."
      4-5 Bee Nested Loops 3: "Collect all of the nectar by putting the\nstarter code inside another loop."
      4-5 Bee Nested Loops 4: "Collect all of the nectar from each flower\nand make honey at the honeycomb. \\r\n\\r\nUse a nested loop. "
      4-5 Bee Nested Loops 5: "Collect all of the nectar by creating\na nested loop."
      4-5 Bee Nested Loops 6: Collect all the nectar.
      4-5 Bee Nested Loops 7: "Put this loop inside another loop to create\na nested loop and collect all of the nectar from the flowers."
      4-5 Bee Nested Loops 8: "Collect all of the nectar from these flowers\nby nesting a while loop. Replace the inner repeat times block with a while\nblock."
      4-5 Bee Nested Loops 9: "Collect all of the nectar from these flowers\nby nesting a while loop inside a repeat."
      4-5 Bee Nested Loops Assessment 1: "**Assessment:** Collect all\nof the nectar and make all of the honey using loops."
      4-5 Bee Nested Loops Rows: "Gather nectar from the rows of flowers!\nUse a nested loop."
      4-5 Maze 1 (copy 1): "Dear person. Me zombie. Must... get... to\nsunflower."
      4-5 Maze 1: "Dear person. Me zombie. Must... get... to\nsunflower."
      4-5 Maze 10: 'Կարո՞ղ ես արևածաղկին հասնել՝ միայն 4 բլոկներ օգտագործելով:'
      4-5 Maze 11: 'Կարո՞ղ ես արևածաղկին հասնել՝ օգտագործելով միայն 6 բլոկ:'
      4-5 Maze 12: 'Լավ, սա մի փոքր տարբեր է: Կարո՞ղ ես միայն 6 բլոկով անել:'
      4-5 Maze 13: Տա՛ր ինձ խոզի մոտ։
      4-5 Maze 14: Տա՛ր ինձ խոզի մոտ։ Օգտագործի՛ր "կրկնություն" բլոկը։
      4-5 Maze 2 (copy 1): 'Զոմբիին արևածաղկի մոտ տա՛ր, բայց խույս տու՛ր զոմբի-բույսին:'
      4-5 Maze 2: 'Զոմբիին արևածաղկի մոտ տա՛ր, բայց խույս տու՛ր զոմբի-բույսին:'
      4-5 Maze 3 (copy 1): 'Պետք է... արևածաղկին... հասնեմ:'
      4-5 Maze 3: 'Պետք է... արևածաղկին... հասնեմ:'
      4-5 Maze 4 (copy 1): Try the "repeat" block to use fewer blocks...
      4-5 Maze 4: Օգտագործի՛ր "repeat" բլոկը գլուխկոտրուկը արագ լուծելու համար...
      4-5 Maze 5 (copy 1): 'Կարո՞ղ ես գլուխկոտրուկը լուծել՝ հնարավորինս քիչ բլոկներ օգտագործելով:'
      4-5 Maze 5: 'Կարո՞ղ ես գլուխկոտրուկը լուծել՝ հնարավորինս քիչ բլոկներ օգտագործելով:'
      4-5 Maze 6 (copy 1): 'Կարո՞ղ ես գլուխկոտրուկը լուծել՝ հնարավորինս քիչ բլոկներ օգտագործելով:'
      4-5 Maze 6: 'Ինձ արևածաղկի մետ տա՛ր՝ օգտագորելով հնարավորինս քիչ բլոկներ:'
      4-5 Maze 7: 'Զոմբիին արագ տեղափոխի՛ր արևածաղկի մոտ: Կարո՞ղ ես գլուխկոտրուկը լուծել՝ 11-ից քիչ բլոկներ օգտագործելով:'
      4-5 Maze 8: "Տեղափոխի՛ր զոմբիին արևածաղկի մոտ՝ որքան կարող ես քիչ բլոկներ օգտագործելով:\n(Խույս տու՛ր զոմբի-բույսից)"
      4-5 Maze 9: "Այժմ նոր բլոկ ունենք, որը կոչվում է `repeat until`\nՍա կօգնի հրահանգները կրկնել, մինչ զոմբին կհասնի արևածաղկին: \nՕգտագործի՛ր նոր `repeat until` բլոկը՝ գլուխկոտրուկը լուծելով հնարավորինս քիչ հրահանգներով:"
      4-5 Maze Assessment 1: 'Հաշվարկում: Արևածաղկին հասի՛ր՝ հնարավորինս քիչ բլոկներ օգտագործելով:'
      4-5 Maze Conditionals 1: "Use the `repeat until` block to get the\nzombie to the sunflower."
      4-5 Maze Conditionals 10: "Can you add just 3 blocks to help the\nzombie solve a more complex maze? \\r\n\\r\nIf you do it right, he can walk\nany curvy path no matter the length!"
      4-5 Maze Conditionals 2: "Use the `repeat until` block to get the\nzombie to the sunflower."
      4-5 Maze Conditionals 3: "Use the `if` block to help me decide\nwhen to turn. \\r\n"
      4-5 Maze Conditionals 4: "Ok, solve this one just like the last\npuzzle, but you need to remember how you used the `if` and `repeat until`\nblocks together."
      4-5 Maze Conditionals 5: "\"Me want sunflower!\"  \\r\n\\r\nUse an\n`if` statement to get the zombie to the sunflower with the fewest number of\nblocks."
      4-5 Maze Conditionals 6: |-
        "Eat sunflower!"\\r
        \\r
        Use an `if`
        statement to get the zombie to the sunflower with the fewest number of blocks.
      4-5 Maze Conditionals 7: "The solution to this puzzle isn't very\ndifferent, but watch out for the chompers!"
      4-5 Maze Conditionals 8: "The `if/else` block checks a condition,\nand then does one thing OR another. \\r\n\\r\nUse this new block to get me to\nthe sunflower."
      4-5 Maze Conditionals 9: |-
        One more practice puzzle with the `if/else`
        block!\\r
        \\r
        Trace it with your finger to see if you can figure it out on
        your first try.
      4-5 Maze Conditionals Assessment 1: "**Assessment:** Use a `repeat\nuntil` and an `if/else` block to get me to the sunflower in as few blocks\nas possible."
      4-5 Nested Loops 1: "Complete the code to draw these triangles.  The\nfirst one is done for you.  Hint:  3 triangles in a 360 degree rotation."
      4-5 Nested Loops 10: "Draw the last row of stars on this flag by\nlooping the provided blocks. The stars are 50 pixels apart, but remember that\nthe stars themselves are 30 pixels wide."
      4-5 Nested Loops 11: "Can you draw these 10 squares of this sidewalk\nusing a nested loop? Each square is 30 pixels."
      4-5 Nested Loops 12: "Can you draw these 36 triangles using a nested\nloop?"
      4-5 Nested Loops 2: "Now nest this loop inside another loop to\ndraw 10 triangles.  This is called a \"nested\" loop."
      4-5 Nested Loops 3: |-
        Create a sun by nesting the starter code in
        another loop.\\r
        \\r
        To get this cool design with a hollow center, you'll
        need to jump forward by the length of the triangle before turning.
      4-5 Nested Loops 5: Loop the given code to create a windmill.
      4-5 Nested Loops 6: "Can you draw a hexagon by looping the triangle\ncode?"
      4-5 Nested Loops 7: "Loop this design 10 times. \\r\n\\r\nHow much\ndo you have to turn each time you loop?"
      4-5 Nested Loops 8: "Loop this shape 6 times. \\r\n\\r\nHow much\ndo you have to turn each time you loop? "
      4-5 Nested Loops 9: Draw the teeth in the alligator's mouth!
      4-5 Nested Loops Assessment 1: "Assessment: Use a nested loop to\ncomplete the design."
      4-5 While Loops 1: "Move me to the hole and fill it with two shovelfuls\nof dirt, using the `fill` block."
      4-5 While Loops 2: "Move me to the pile of dirt and remove it with\n5 shovel scoops, using the `remove 1` block."
      4-5 While Loops 3: "Use as few blocks as possible to complete this\npuzzle!  \\r\n\\r\nMove me to the pile and remove all the dirt, then move to\nthe hole and fill it completely."
      4-5 While Loops 4: "Wow, look at that! \\r\n\\r\nI don't know how\nmany shovelfuls of dirt this hole needs.  \\r\nCan you write a program that\nkeeps using the `fill` block until the ground is even?  "
      4-5 While Loops 5: "Wow, now there are two deep holes! Can you\nwrite a program that fills them both until the ground is even?"
      4-5 While Loops 6: "Wow, now there is a large pile of dirt! Can\nyou write a program that removes all of it so the ground is even?"
      4-5 While Loops 7: "Wow, now there are three piles of dirt! Can\nyou write a program that removes each of them until the ground is even?"
      4-5 While Loops 8: " There is a really deep hole and a really large\npile of dirt.  How many shovelfuls of dirt need to be moved around to make\nthe ground flat?"
      4-5 While Loops Assessment 1: "There are a lot of holes and piles.  Help\nme to fill and remove them to make the ground flat."
      App Lab test: փորձ
      Artist - Nested Loops 1: "Complete the code to draw these triangles.  The\nfirst one is done for you.  Hint:  3 triangles in a 360 degree rotation."
      Artist - Nested Loops 10: "Draw the last row of stars on this flag by\nlooping the provided blocks. The stars are 50 pixels apart, but remember that\nthe stars themselves are 30 pixels wide."
      Artist - Nested Loops 11: "Can you draw these 10 squares of this sidewalk\nusing a nested loop? Each square is 30 pixels."
      Artist - Nested Loops 12: "Can you draw these 36 triangles using a nested\nloop?"
      Artist - Nested Loops 5: Loop the given code to create a windmill.
      Artist - Nested Loops 6: "Can you draw a hexagon by looping the triangle\ncode?"
      Artist - Nested Loops 9: Draw the teeth in the alligator's mouth!
      Artist - Nested Loops Assessment 1: "Use a nested loop to complete\nthe design."
      Artist Autorun Test: "Now, put the function inside of a loop\nto draw these three squares."
      Artist Inspiration: "Free Play Inspiration: You've\nnow learned everything you need to know to make a pattern like this! If this\npicture inspires you, try to make something similar. Otherwise, create something\nall your own.\\r\n \\r\nWant to know how our inspiration pattern was made? "
      Auto Open Function Editor: "You can call functions from inside\nother functions! Using your \"shape\" function as a base, create 3 house shapes\neach 20 pixels larger than the last starting at 50 pixels in length. Using\na counter loop might be helpful."
      Bee Recommended Blocks test: "Purple flowers may have either 1 or 0 nectar, but\nyou don't know which one! Be careful not to collect nectar from a purple\nflower if it doesn't have any. Check if the nectar is equal to 1 by using\nthe if block."
      Bergeron Robot Maze1: 'Կարո՞ղ ես օգնել չարաճճի խոզուկին բռնել: Միացրու՛ մի քանի «առաջ ընթանալ» բլոկներ «երբ կսկսի» բլոկին և սեղմի՛ր «վազք»:'
      Brad Spooky House Copy: "Freeplay: Here are the functions\nyou've written, and some more for you to play with. Draw something awesome!\nPlay with the pen width to see how different your drawings look!"
      Brad Spooky House: "Freeplay: Here are the functions\nyou've written, and some more for you to play with. Draw something awesome!\nPlay with the pen width to see how different your drawings look!"
      Building a Foundation Assessment: "Build a three level pyramid,\nthere are no other directions, so just play with the pieces until you get\nit!"
      Busy Bee 2: "This bee has a lot of work to do! Do you notice any\npatterns that you can use to simplify your code?"
      Busy Bee: "This bee has a lot of work to do! Do you notice any\npatterns that you can use to simplify your code?"
      C3-Farmer While Loops 5: "Wow, now there are two deep holes! Can you\nwrite a program that fills them both until the ground is even?"
      C3-Farmer While Loops 6: "Wow, now there is a large pile of dirt! Can\nyou write a program that removes all of it so the ground is even?"
      C3-Farmer While Loops 7: "Wow, now there are three piles of dirt! Can\nyou write a program that removes each of them until the ground is even?"
      C3-Farmer While Loops Assessment 1: "There are a lot of holes and piles.  Help\nme to fill and remove them to make the ground flat."
      Course 2 Bee Loops 1: "Hi, I'm a bee. Can you help me collect the\nnectar from these flowers?"
      Course 2 Maze Loops 1: Can you get me to the pig using 5 blocks?
      Course 4 2: "The bee only wants nectar right now. Remember, not\nall objects are flowers, so check to gather nectar only at flowers."
      Course 4 Artist 1: "Help me draw a box. (Each line is 200 pixels\nlong)"
      Course 4 Artist 10: |-
        Click here to see the full instructions again!\\r
        \\r
        Here
        is the code for an interesting shape.  What happens when you repeat it multiple
        times, turning between each iteration?   Notice that the turns in this shape
        add up to 420 degrees, which means that when your artist is done drawing,
        it will be facing a different direction than when you started.  That new direction
        is exactly 60 degrees to the right of where you began.
      Course 4 Artist 11: "Now for a challenge!  Feel free to use trial\nand error. You are not expected to get the image perfect the first time.   Want\nto see more hints?  Click here!"
      Course 4 Artist 12: |-
        Want a second peek at the inspiration design
        or the hints?  Click here!\\r
        \\r
        Otherwise, make a design all your own!
      Course 4 Artist 13: "Still playing?  Here is a blank canvas where\nyou can design anything you want!"
      Course 4 Artist 2: "Can you use a loop to draw the greyed out square?  (Each\nside is 300px long)"
      Course 4 Artist 20: "Still playing?  Here is a blank canvas where\nyou can create whatever you want!"
      Course 4 Artist 3: "Try to figure out what happens if you run this\ncode (or press \"Run\" to test it). Then, repeat it enough times to complete\nthe drawing."
      Course 4 Artist 4: "How many degrees are in a circle?  Fill in\nthe repeat block with that number to create a circle of colors."
      Course 4 Artist 5: "Draw the other half of this design so it's\nsymmetrical. The triangles are equilateral and are 50 pixels long. Hint: You\nmay have to run the code several times to figure out all of the blocks that\nneed to be added."
      Course 4 Artist 6: "Complete the code to draw these triangles.  \\\\r\n\\\\r\nEach\nequilateral triangle has sides of 100 pixels. "
      Course 4 Artist 7: "Now nest this loop inside another loop to draw\n10 triangles. This is called a nested loop. Hint: All 10 triangles complete\na 360 degree rotation."
      Course 4 Artist 8: "Draw this sun by looping this whole block of\ncode multiple times."
      Course 4 Artist 8a: "Remember this shape?  Now we're going to\nlet you build it without giving you any blocks to start!"
      Course 4 Artist 9: "Loop this design 10 times and make sure to\nturn between each shape that's drawn. \\r\n"
      Course 4 Artist Binary 1: "Here's a function that takes a binary\nstring of 1's and 0's and instructs the artist to follow them from left\nto right, top to bottom.  The artist will fill-in the squares when it sees\na 1 and ignore the square when it sees a 0. \\r\n\\r\nRun this code to see how\nthe artist uses binary to draw this pattern."
      Course 4 Artist Binary 1a: "Here's a function that takes a binary\nstring of 1's and 0's and instructs the artist to follow them from left\nto right, top to bottom.  The artist will fill-in the squares when it sees\na 1 and ignore the square when it sees a 0. \\r\n\\r\nRun this code to see how\nthe artist uses binary to draw this pattern."
      Course 4 Artist Binary 2: "Which of these binary strings could\nyou loop 8 times to draw this image?"
      Course 4 Artist Binary 3: "Can you draw this pattern by looping\njust three binary digits (0s and 1s)?"
      Course 4 Artist Binary 4: "Each binary string represents one row\nof this picture. Can you rearrange them so it draws a smiley face instead\nof a frowny face?"
      Course 4 Artist Binary 5: "Which 6 digit binary string, repeated\n11 times, will draw this image?"
      Course 4 Artist Binary 6: "What is the shortest binary string that\nyou can repeat to draw this image?"
      Course 4 Artist Binary 7: Finish this drawing.
      Course 4 Artist Binary Free Play 2: "Free Play: Here's a blank\ncanvas for you to draw on.  Have fun!"
      Course 4 Artist Binary Free Play 2a: |-
        Here's a higher resolution
        canvas to draw on - 16 pixels by 16 pixels!\\r
        \\r
        See what happens when we
        start to get creative with the bits?
      Course 4 Artist Binary Free Play 2b: Click here to see hints.
      Course 4 Artist Binary Free Play: "Free Play: Draw whatever you\nlike with binary!"
      Course 4 Artist Binary pre1: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \\\\r\n\\\\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      Course 4 Artist Binary ryan: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \\r\n\\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      Course 4 Artist For  Functions 10: "Let's Step it up a little,\ncan you draw a Star shape using the \"Draw a Square Line\" function? Good\nluck!"
      Course 4 Artist For  Functions 11: "Let's Step it up a little,\ncan you draw a Star shape using the \"Draw a Square Line\" function? Good\nluck!"
      Course 4 Artist For Loops 1: "Use a repeat block to draw this triangle\nthat is 50 pixels wide."
      Course 4 Artist For Loops 10: "Free Play Time! Have fun drawing\nwhatever you like with the blocks you have learned how to use"
      Course 4 Artist For Loops 11: "Remember back in a previous stage\nwhen we used a variable to control the number of sides in a shape? We are\ngoing to do the same thing with the `counter` variable now. This pattern starts\nwith a triangle and adds one side at a time until it draws a decagon (10 sides).\nEach side should be 100 pixels long."
      Course 4 Artist For Loops 11a: |-
        Let's put it all together!  Using
        your knowledge of `for` loops and the `counter` variable, create this drawing
        where each shape has two more sides than the last.  Make sure that each side
        is 10 times as long as the number of sides in the polygon.\\r
        \\r
        Very little
        of the code has been provided for you.
      Course 4 Artist For Loops 12: "That looked pretty cool, but now\nI'd like to draw each shape next to the last one. This time each side is\n20 pixels. Use a jump block to jump forward 40 pixels after each shape."
      Course 4 Artist For Loops 13: "Hmmm, those shapes are getting bigger\nevery time! Didn't we already solve this problem with variables? How can\nwe use the counter variable to make the sides smaller as there are more of\nthem? Instead of moving forward by a set amount, try moving forward (100 /\ncounter) pixels."
      Course 4 Artist For Loops 14: "If you turn a little bit more or\nless than you normally would for a shape, it creates a neat effect. Try using\nsome of the code from the last level, but turning 89 degrees to create this\ntwisted square spiral."
      Course 4 Artist For Loops 15: "Free Play: Try making some drawings\nof your own using \"for loops\". We've added a few useful variables for you\nas well."
      Course 4 Artist For Loops 2: "I've put the code for drawing a\ntriangle inside a for loop that counts from 50 to 100 by 10.  NOTE: Make sure\nyou look at the code before you hit \"Run\"."
      Course 4 Artist For Loops 3: "Use the last puzzle as a reference\nto complete this one.  The smallest triangle has 20 pixel sides, the largest\nhas 200 pixel sides, and each triangle is 20 pixels larger than the last."
      Course 4 Artist For Loops 4: "How would you modify what you've\nlearned to draw these squares? They start at 15 pixels long, the largest is\n300 pixels long, and each square is 15 pixels larger than the last."
      Course 4 Artist For Loops 5: "Good job on the last puzzle! Let's\nuse that \"counter\" variable block again to draw this cool picture."
      Course 4 Artist For Loops 6: "Free Play! Try using a for loop to\ndraw a growing shape pattern of your own design."
      Course 4 Artist For Loops 6a: "Make three small changes to the\ncode from the last level to get this!"
      Course 4 Artist For Loops 7: "What happens if you remove the \"Repeat\n3\" from this algorithm, keeping the \"move\" and \"turn\" blocks in the for\nloop? In this spiraling triangle, each side is 20 pixels longer than the last."
      Course 4 Artist For Loops 8: |-
        Just one little change to the code
        from the last image can create this drawing. Can you figure out what that
        change is?\\r
        \\r
        Hint:  You need to remove something!
      Course 4 Artist For Loops 8a: "Just one little change to the code\nfrom the last image can create this image. Can you figure out what that change\nis?"
      Course 4 Artist For Loops 9: "Can you make a spiral? Move forward\nfrom 1 to 75 pixels, increasing by 1 pixel each time."
      Course 4 Artist For Loops Challenge: "Can you figure out how to\nuse all of the things you've learned to create this image?\\r\n\\r\nNeed a\nhint? Click here."
      Course 4 Artist For Loops inspire: |-
        Free-Play Inspiration: You've
        now learned everything you need to know to make a pattern like this! If this
        picture inspires you, try to make something similar. Otherwise, create something
        all your own.\\r
        \\r
        Need a hint? Click here.
      Course 4 Artist Functions 1: "Can you draw a square that is 100\npixels in length, using a loop?"
      Course 4 Artist Functions 10: "Which block do you need to add to\nget the triangle to sit on top of the square?"
      Course 4 Artist Functions 11: "Check out this code that draws a\ncube - can you move it into a function called \"Draw a Cube\""
      Course 4 Artist Functions 12.1: "Let's create a function called\n\"draw an octagon 20\" that draws an octagon where each side is 20 pixels\nlong."
      Course 4 Artist Functions 12: Loop square function to draw a line
      Course 4 Artist Functions 13.1: |-
        Now, let's make a function called
        "jump to upper right" that moves the artist to the upper-right of the octagon
        that you just drew so we can finish this pattern.\\r
        \\r
        Hint:  To get yourself
        to the upper-right corner, try jumping in a pattern that makes just 3/8 of
        the octagon.
      Course 4 Artist Functions 13: "Check it out we have a new function\ncalled \"draw a line of squares\". Feel free to take a look inside the function\nblock to see how we built it. Click on \"Run\" when your are ready for the\nnext puzzle."
      Course 4 Artist Functions 14.1: "Now, let's make a function called\n\"jump to upper right\" that moves the artist to the top-right of the octagon\nthat you just drew so we can finish this pattern."
      Course 4 Artist Functions 14: "You're doing great! Let's use\nyour new \"Draw a line of squares\" function to draw a Square shape. Remember\neach square is 40 pixels in length."
      Course 4 Artist Functions 15: "Let's Step it up a little, can\nyou draw a star shape using the \"draw a line of squares\" function? Good\nluck! Hint: you may have to turn 144 degrees"
      Course 4 Artist Functions 2: "Can you draw 3 squares 20 pixels\napart from one another? Hint: each square is 100 pixels in size"
      Course 4 Artist Functions 3: "Using the \"draw a square\" function\nblock, can you draw this picture? Hint: each square is 120 pixels apart.\\\\r\n"
      Course 4 Artist Functions 4: "Are you ready to create your own\n\"Function Block\"? Click on the \"Functions\" block in the tool box, name\nit \"draw a triangle\", then create a triangle as you have done before with\nthe Action and Loops blocks. Then click on the Save and Close in the upper\nright hand corner. Hint: Create a triangle that is 100 pixels in length. Good\nluck!"
      Course 4 Artist Functions 5 OLD: "Let's try to use our two functions\nto draw a house - what needs to be fixed in this code to draw the house properly?"
      Course 4 Artist Functions 5: "Using the \"draw a square\" function\nblock, can you draw this picture? Hint: each square is 120 pixels apart.\\\\r\n"
      Course 4 Artist Functions 6: "Which block do you need to add to\nget the triangle to sit on top of the square?"
      Course 4 Artist Functions 7: "Can you draw a line of squares using\na Square function? Each square is 40 pixel's in length."
      Course 4 Artist Functions 8: "Are you getting the hang of how to\nuse function blocks? Let's modify this square so that it is 200 pixels in\nsize. Hint: click on \"edit\" to change the size of the \"draw a square\"\nfunction editor. Remember to click on \"save and close\" to get out of the\nfunction editor."
      Course 4 Artist Functions 9: "We have given you most of the code\nto create a function. However there seems to be something missing. Can you\nmake this function block complete?"
      Course 4 Artist Functions Inspiration: "Click here to see the hints\nagain."
      Course 4 Artist Functions challenge: "Click here to see the hints\nagain."
      Course 4 Artist Functions inspire: "Click here to see the inspiration\npicture again."
      Course 4 Artist Inspire: |-
        Want a second peek at the inspiration design
        or the hints?  Click here!\\r
        \\r
        Otherwise, make a design all your own!
      Course 4 Artist Params 1: "Let's edit a function that draws a\nsquare with 50 pixel sides"
      Course 4 Artist Params 10: "You can call functions from inside\nother functions! Using your \"shape\" function as a base, create 3 house shapes\neach 20 pixels larger than the last starting at 50 pixels in length. Using\na counter loop might be helpful."
      Course 4 Artist Params 12: "Use your \"pinwheel\" function to draw\neach of these shapes. The side length for each image is 50."
      Course 4 Artist Params 13: "Freeplay: Here are the functions you've\nwritten, and some more for you to play with. Draw something awesome!"
      Course 4 Artist Params 3: "Awesome, can you draw each of these\ntriangles with that new function? The first is 25 pixels long, the second\nis 50, and the third is 75."
      Course 4 Artist Params 4: "Can you add a new function called square?\nIt should also take a length parameter, just like the triangle. This time\ndraw 3 squares 25, 50 and 75 pixels in length,100 pixels apart."
      Course 4 Artist Params 5: "Use both of your new functions to draw\nthis picture. To make this easier you use a loop with a \"counter\" parameter."
      Course 4 Artist Params 6: "Let's edit this \"draw a shape\" function.\nIt already has a \"length\" parameter. Now, let's edit the function to also\nadd a \"sides\" parameter. Remember the angle to turn for a given shape is\n360 divided by the sides it has. Hint: lengths for each shape are the triangle\nis 100 pixels, the hexagon is 25 pixels and the square is 50 pixels."
      Course 4 Artist Params 7: "Can you draw these shapes by filling\nin the \"???\" The square and triangle are 100 pixels in size while the hexagon\nis 75 pixels in size."
      Course 4 Artist Params 8: "Can you figure out how to draw this\nshape? Here's a hint create a new function with 6 sides called a hexagon."
      Course 4 Artist Params 9: "Do you remember when we used the counter\nloop but removed a loop within? Let's have some fun and use the \"draw a\nshape\" function with \"sides\" and \"length\" parameters. Can you re create\nthese shapes? The square counter should be 5/100/5, the triangle counter should\nbe 10/100/10 and the hexagon is 2/100/2."
      Course 4 Artist Var 9: "Here's the algorithm to draw a triangle,\nmodify it so it uses the \"sides\" variable instead. Replace the number 3\nwith the \"sides\" variable. Hint: remember to use the \"set sides to\" block."
      Course 4 Artist Vars 1: "Let's draw an equilateral triangle. \\r\n\\r\nIt\nhas to be exactly 100 pixels long on each side."
      Course 4 Artist Vars 10: "Here's an algorithm that draws a triangle\nout of smaller triangles. Can you modify it so that it uses the \"sides\"\nvariable to draw each triangle? Look through the code, and every time you\nsee the number 3, replace it with your \"sides\" variable. Remember to use\nthe \"set sides\" block."
      Course 4 Artist Vars 11: "Here’s more complicated code using the\nsame concepts from the last puzzle - what should you set the \"sides\" variable\nto in order to draw this picture made of squares?"
      Course 4 Artist Vars 12: "Let's set the \"sides\" variable to\n5. The more sides we add to this algorithm, the bigger this whole pattern\ngets! Notice that there is another variable called \"length\". We can now\nuse that wherever we have a \"move forward.\" Set the \"length\" variable\nto 75 for this shape."
      Course 4 Artist Vars 13: "When a shape has lots of sides, each\nside needs to be shorter if you want the whole pattern to fit on the screen.\n\\r\nLet's recreate the algorithm for this amazing pattern, but instead of\nmanually setting the `length` variable, let's use a math block with the `sides`\nvariable inside to make sure that each shape fits correctly. The perimeter\nof each polygon is 300 pixels.\\r\nNeed some hints?  Click here."
      Course 4 Artist Vars 14: |-
        Free Play: Check it out! Now your algorithm
        is nested within one more loop. Experiment with changing the values of your
        two variables to draw cool patterns.\\r
        \\r
        For even more effect, try playing
        with color!  Use random colors inside loops to see how it changes your design.
      Course 4 Artist Vars 2: "Instead of using \"move forward by 150,\"\nthe \"move\" block is now referencing a variable called \"length.\" Can you\nset \"length\" to 150 to draw this new triangle?"
      Course 4 Artist Vars 3: "Here's a loop that draws a square, but\nsomething's missing. Can you fix it so that it uses the variable \"length\"\nto figure out how long each side should be?"
      Course 4 Artist Vars 4: "Now I want to make a rectangle that is\ntwice as tall as it is wide. We've got a variable called \"width\" that needs\nto be set to 100. Can you use the math blocks to complete the code?"
      Course 4 Artist Vars 5: "Use the variable \"sides\" to control\nhow many times this loop gets run."
      Course 4 Artist Vars 6: |-
        Here’s some code that can draw any regular
        polygon. There’s a new variable called sides that is set to 4. Can you use
        the sides variable (along with the math block) to turn the right amount regardless
        of how many sides there are in the polygon?\\r
        \\r
        Click here to go back to
        the hint!
      Course 4 Artist Vars 7: |-
        Use what you learned in the last puzzle
        to create this hexagon using the "sides" variable.\\r
        \\r
        See how you could
        change just one value to draw a triangle,  square, pentagon, or octagon?
      Course 4 Artist Vars 8: "Free Play: Experiment with the number\nof sides this shape has. Can you change the algorithm so that the overall\nsize of the shape stays the same, no matter how many sides it has? Hint: If\nyou divide your starting length by the number of sides, the length of each\nside will get shorter as the number of sides gets higher."
      Course 4 Artist Vars 9: "Modify this algorithm so it uses the \"sides\"\nvariable instead of a fixed number to draw a triangle. Don't forget to use\nthe \"set sides to\" block."
      Course 4 Bee 1: "The bee can't tell what's under the cloud! \\r\n\\r\nUse\nthe `if` block to check whether there is a flower under the cloud. \\r\n\\r\nGet\nnectar one time, ONLY if there is a flower."
      Course 4 Bee 2: "Use the \"if/else\" block to check each object\nto see if it's a flower or a honeycomb . If it's a flower, collect one nectar...otherwise,\nmake one honey!"
      Course 4 Bee 3: "The unknown object is either a flower or a honeycomb.\nThis time, use the if/else block to collect one nectar if it is a flower,\nelse make one honey (because then it would be a honeycomb)."
      Course 4 Bee 4: "This purple flower may have either 3, 2, or 1\nnectar. Here an if/else block is combined with another if/else block to create\nan \"if/else-if/else\" statement. Complete the solution to collect the unknown\namount of nectar."
      Course 4 Bee 5: "This purple flower may have either 3, 2, or 1\nnectar. Add an if-else block to create an if, else-if, else block. Complete\nthe solution to collect the unknown amount of nectar."
      Course 4 Bee 6: "This purple flower may have either 3, 2, or 1\nnectar. Create an if, else-if, else block to collect the unknown amount of\nnectar."
      Course 4 Bee 7: "Use everything you have learned so far to collect\nall the nectar. The purple flower may have either 3, 2, or 1 nectar."
      Course 4 Bee For Loops 1: "Use a loop to collect the nectar\nfrom each flower."
      Course 4 Bee For Loops 10: "If your loop is counting down, the\nincrement is subtracted from your counter variable each loop. What should\nyour increment be to collect 9, then 6, and then 3 nectar?"
      Course 4 Bee For Loops 11: "What's wrong with this loop? See if\nyou can fix it and make the bee collect all the nectar."
      Course 4 Bee For Loops 2: "Here's a new kind of loop, called the\n\"for\" loop. This particular for loop will count from 1 to 5 by 1, and run\nthe contents of the loop each time it counts. Help the Bee get the nectar."
      Course 4 Bee For Loops 3: "You can solve this puzzle by using a\nfor loop to count from 1 to 3 by 1. Now let's go get some nectar!"
      Course 4 Bee For Loops 4: "Collect all of the nectar from these\nflowers. I wonder if there's an easier way to do this..."
      Course 4 Bee For Loops 5: "Ah, the for loop makes this much easier!\nUsing the \"counter\" variable from the for loop to loop the \"get nectar\"\nblock the same number of times as the loop. Whew! That's a lot of loops.\nAll the code you need it there, take a look at how it is put together then\nclick on Run and see how it works."
      Course 4 Bee For Loops 6: "You can also use a for loop to count\ndown. Try gathering this nectar by counting down from 5 to 1 by 1."
      Course 4 Bee For Loops 7: "Use your for loop \"counter\" variable\nto control how far to move horizontally."
      Course 4 Bee For Loops 8: "Can you use the loop variable to\ncontrol movement and nectar collection?"
      Course 4 Bee For Loops 9: "The last number in your for loop is\ncalled the \"increment,\"  and each time the loop is run the counter variable\nchanges by the increment. Try collecting these flowers using an increment\nof 2."
      Course 4 Bee Loops 5 NEW: "Here are three flowers. Can you find\nthe pattern of instructions that you need to repeat 3 times to collect the\nnectar with the fewest number of blocks?"
      Course 4 Bee Loops 5a NEW: "Now, use loops to help the bee collect\nall the nectar on it's way to the honeycomb with as few blocks as possible.  When\nyou get there, don't forget to make honey!"
      Course 4 Bee Params 1: "Write a sequence to collect all of the\nnectar using `get 3 nectar` which turns, moves to collect the nectar, and\nthen returns to the original location."
      Course 4 Bee Params 2: "Modify the \"get 3 nectar\" function so\nit makes me turn right instead of left to the flowers."
      Course 4 Bee Params 3 (copy 1): "Now there are flowers on both\nsides! Maybe you can use a parameter so that the same function works for flowers\non either side. I've added a parameter called \"direction\" to the function.\nIf the \"direction\" parameter equals 0 I should turn left, if it's 1 I should\nturn right."
      Course 4 Bee Params 3: "Now there are flowers on both sides! We've\nadded variables called \"left\" and \"right\" for you to use, and added a\nparameter called \"direction\" to \"get 3 nectar\". Edit \"get 3 nectar\"\nso that the bee turns the correct direction when the variables \"left\" or\n\"right\" are passed into the function."
      Course 4 Bee Params 4 (copy 1): "Try using your new function to\ncollect all of the flowers. Remember, 0 = left and 1 = right."
      Course 4 Bee Params 4 - Two WhenRun: "Try using your new function\nto collect all of the flowers. Remember to use the left and right variables."
      Course 4 Bee Params 4 backup: "Wouldn't it be nice if we could\ncollect all of these nectars with the a single function? Try adding a new\nparameter to your function called \"nectars\" to control the amount of nectar\nto collect. You'll probably want to rename the function too!"
      Course 4 Bee Params 4: "Try using your new function to collect\nnectar from all of the flowers. Remember to use the left and right variables."
      Course 4 Bee Params 5: "Let's start from scratch - can you create\na new function called \"get 5 nectar\" with a direction parameter?"
      Course 4 Bee Params 6 (copy 1): "Try using your new function to collect\nall of this nectar."
      Course 4 Bee Params 6: "Wouldn't it be nice if we could collect\nall of these nectars with the a single function? Try adding a new parameter\nto your function called \"nectar units\" to control the amount of nectar to\ncollect. You'll probably want to rename the function too!"
      Course 4 Bee Params 7 (copy 1): "Try using your new function to collect\nall of this nectar."
      Course 4 Bee Params 7: "Try using your new function to collect\nall of this nectar."
      Course 4 Bee Params 8 Clone 2: "Oooh, now there's honey to deal with\ntoo! How could you update your function to either get nectar or make honey."
      Course 4 Bee Params 8 Clone: "Oooh, now there's honey to deal with\ntoo! How could you update your function to either get nectar or make honey."
      Course 4 Bee Params 8 clone 3: "Oooh, now there's honey to deal with\ntoo! How could you update your function to either get nectar or make honey."
      Course 4 Bee Params 8 new: "Oooh, now there's honey to deal with\ntoo! How could you update your function to either get nectar or make honey."
      Course 4 Bee Params 8: "Challenge: Now there's honey to deal with\ntoo! Rewrite your function to use both the number of honey units and the number\nof nectar units.  How would you use those numbers to decide what you should\ndo?"
      Course 4 Bee Params Ex: "Try using your new function to collect\nall of this nectar."
      Course 4 Binary 1: "Here's a function that takes a binary string\nof 1's and 0's and instructs the farmer to turn on the go from left to right,\ntop to bottom, turning on the squares where the number has a zero. Run the\ncode provided to see how the farmers uses binary to draw an image."
      Course 4 Binary 2: "What binary string could you loop 8 times to\ndraw this image? Hint: the number \"1\" fills a hole."
      Course 4 Binary 3: "Can you draw this pattern by looping a single\nbinary string?"
      Course 4 Binary 5 (copy 1): "Which binary string, repeated 10 times, will\ndraw this image?"
      Course 4 Binary 5: "Which binary string, repeated 10 times, will\ndraw this image?"
      Course 4 Binary 6 (copy 1): "Which binary string, repeated 10 times, will\ndraw this image?"
      Course 4 Binary 6: "Which binary string, repeated 10 times, will\ndraw this image?"
      Course 4 Binary 7: "Which binary string, repeated 10 times, will\ndraw this image?"
      Course 4 Binary 8: "You can complete the most of this image by\nlooping a 5 bit binary number - then you'll need one more 4 bit number to\nget the bottom right-hand corner."
      Course 4 EC 1a: No rules. No clues. Just the challenge!
      Course 4 EC 1b: No rules. No clues. Just the challenge!
      Course 4 EC 2a: No rules. No clues. Just the challenge!
      Course 4 EC 2b: No rules. No clues. Just the challenge!
      Course 4 EC 2c: No rules. No clues. Just the challenge!
      Course 4 EC 2d: No rules. No clues. Just the challenge!
      Course 4 EC 3: "Use what you learned in the previous level to\ndraw an image like this. Note: The code becomes more simple if you incorporate\nparameters."
      Course 4 EC 3a: "Extreme Challenge: No rules. No clues. Just the\nchallenge!"
      Course 4 Maze 1: Get the angry bird to the pig!
      Course 4 Maze 2: Avoid the TNT!
      Course 4 Maze 3: 'Program the angry bird to get to the pig. '
      Course 4 Maze 4: "Try the \"repeat\" block to use fewer blocks\nwhen solving this puzzle..."
      Course 4 Maze 5: 'Կարո՞ղ ես գլուխկոտրուկը լուծել՝ հնարավորինս քիչ բլոկներ օգտագործելով:'
      Course 4 Maze 6: 'Կարո՞ղ ես գլուխկոտրուկը լուծել՝ հնարավորինս քիչ բլոկներ օգտագործելով:'
      Course 4 Play Lab For Loops 2: "This time, let's try counting\nthe odd numbers from 1 to 100."
      Course 4 Play Lab Params 1: "Here's a function called `jump` that\ncauses your main character to jump up 100 pixels. Run the program and use\nthe jump function to collect all of the flags by moving the dog with the arrow\nkeys."
      Course 4 Play Lab Params 10: "We've added one last function for\nyou. \\r\n\\r\nUse an \"if\" statement to program your game to call the \"level_up\"\nfunction only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample: \"player_score\" > 6\\r\n\\r\nPlay the game, and make it to level 3\nto move to the next puzzle. "
      Course 4 Play Lab Params 2: "Now we've got flags that are too\nhigh for our current jump! Let's use both the \"up\" and \"down\" arrows\nso that we can have multiple jump heights.  \\r\n\\r\nWe need to add a parameter\nto our jump function called \"height\".  The up arrow should cause the dog\nto jump 200 pixels and the down arrow should make it jump only 100 pixels.\n"
      Course 4 Play Lab Params 3: "We have added another parameter to\nthe jump function so that we can use it with other actors. Each actor is represented\nby a number, starting from one. Edit the \"jump\" function so that it uses\nthe \"actor\" parameter to make the correct character jump."
      Course 4 Play Lab Params 4: "Here's a function called `patrol`.\n\\r\n\\r\nEdit `patrol` to move Cat up 400 pixels and then down 400 pixels."
      Course 4 Play Lab Params 5: "Edit the the \"patrol\" function to\nadd an \"actor\" parameter, so that we can call it for each of the actors\non the screen. Remember, the actors correspond to numbers 1, 2, and 3."
      Course 4 Play Lab Params 6: "Add another parameter called \"speed\"\nto the \"patrol\" function. Try using a \"set speed\" block with the new \"speed\"\nparameter to help Penguin get both flags before the other sprites even get\none."
      Course 4 Play Lab Params 7: "Let's have some fun! Look at the\ncode provided to see if you can figure out what each block does.  \\r\nWhen\nyou're done, use the arrow keys to control Dog and collect all of the flags.\\r\nNOTE:\nYou don't need to make any changes to the program"
      Course 4 Play Lab Params 8: "Use the `when actor touches` block\nto send Dog back to the top-left ONLY if Dog touches any of the other actors."
      Course 4 Play Lab Params 9: "Here's our game from an earlier stage,\nbut most of the code is hidden. There’s a new function `score_points.`\\r\n\\r\nEdit\nthe function so that a new parameter called `points` can be added to `player_score`.\n\\r\n\\r\nThe variable `player_score` should increase each time Dog tags Cat\nwith hearts, and decrease each time that Cat tags Dog with hearts.\\r\n\\r\nNote:\nWhen you're done, click \"Run\" to play.  When Dog scores 6 points, you will\nmove on to the next puzzle. "
      Course 4 Play Lab Vars 1: "This time you don't have to write any\ncode, just hit \"Run\" to play the game! In this game, you're the dog who\nis trying to collect more flags than the cat. Use the down arrow to control\nthe dog. Press \"Finish\" when you're done playing."
      Course 4 Play Lab Vars 2: "The race in that last puzzle wasn't\nvery fair! Change the `dog_speed` variable to make sure you can collect more\nflags than Cat. The first to collect 10 flags wins!"
      Course 4 Play Lab Vars 3: "Use the left and right arrows to move,\nand the up arrow to jump. See if you can collect all of the flags."
      Course 4 Play Lab Vars 4: "Now we're using a variable called \"height\"\nto control how high the dog can jump. Update the \"height\" variable so that\nthe dog can jump high enough to reach all the flags."
      Course 4 Play Lab Vars 5: "Let's build a game! First we'll need\na score. Rebuild the code that you saw in the last level to set the score\nto 10."
      Course 4 Play Lab Vars 6 (copy 1): "Cool, now we've got our score\nvariable, but how are we going to make it useful? How about adding to your\nscore variable each time you hit the enemy with a fireball? Use the \"when\nactor 2 touches anything\" event to trigger an update to your score when your\nfireballs hit the cat. You can increment the score by setting score = score\n+ 1. Get your score up to 10 (going one at a time!) to pass the level."
      Course 4 Play Lab Vars 6: |-
        Use the right arrow to shoot hearts.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a heart. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      Course 4 Play Lab Vars 7: "Nice, now let's make sure this game\nisn't too easy to play. Any time Dog (actor 1) gets hit by yellow hearts\nfrom Cat (actor 2), you should lose a point. Start with 10 points so it's\nnot too hard. Let your score drop down from 10 to 0 to pass the level."
      Course 4 Play Lab Vars 8 (copy 1): "Alright, one last thing for\nthis game - let's set it up so the player can win (or lose). Use a forever\nloop to check the value of score - if score is ever greater that 20, make\nthe enemy vanish. If the score is every less than 0, make the player vanish.\nClick \"Finish\" when the game works like you'd like it to."
      Course 4 Play Lab Vars 8: "Let's set up this game so the Dog can\nwin (or lose). Use a forever loop to check the value of score - if score is\never greater that 20, make the enemy (the Cat) vanish. If the score is ever\nless than 0, make the player (the Dog) vanish. Click \"Finish\" when the game\nworks like you'd like it to."
      Course 4 Play Lab Vars 9: "Free Play time! Here are all of the\nvariables we've played with so far in this stage, as well as a few more in\ncase you want them. \\r\n\\r\nNotice that there are now so many blocks in our\ntoolbox that they need to be organized!  Here, we've put each piece into\nan appropriate category.  Take some time to explore everything that is available.\nWhen you're done browsing, make a game or story using repeats, variables,\nand events.  \\r\n\\r\nHint: scroll down to see all the commands in the workspace."
      Course 4 Play Lab Vars: "Alright, one last thing for this game\n- let's set it up so the player can win (or lose). Use a forever loop to\ncheck the value of score - if score is ever greater that 20, make the emeny\nvanish. If the score is every less than 0, make the player vanish."
      Course 4 Play Labs For Loops 1: "Let's make the dog speak every\nnumber from 1 to 100. Use a `for` loop and the counter block to speak the\ncounter variable each time the loop is run."
      Course 4 Play Labs For Loops 3: "If we count by larger numbers,\nwe count even higher in the same amount of time. Try making Pirate Pegleg\ncount from 10 up to 1000, adding 10 at a time."
      Course 4 Play Labs For Loops 4: "Changing the increment can be\nhelpful, but we're still counting linearly (each number is the same distance\nfrom the last) What if I wanted to count exponentially? Without changing the\nsettings in this for loop, can you count 1, 4, 9 , 16, 25... (counter squared)?"
      Course 4 Play Labs For Loops 4a: "Now, let's blend the variables\nfrom Stage 7 together with your \"counter\" variable to make some magic happen.   \\r\n\\r\nIn\nthis puzzle, Dog will count from 0 to 1000 by \"increment\".  Set the \"increment\"\nvariable to 10 at the beginning of your code to see what happens."
      Course 4 Play Labs For Loops 5: "In the last stage we counted the\nsquare of each number. Try changing \"counter ^ 2\" to \"counter ^ 3\" to\ncount the cube of each number (1, 8, 27, 64, 125, 216, 343…)"
      Course 4 Play Labs For Loops 6: "You may recall that a prime number\nis any whole number that is only divisible by itself and 1. Use the \"is_prime\"\nfunction to speak out only the prime numbers from 1 to 100."
      Course 4 Play Labs For Loops 6a: |-
        Dog will still keep time by counting
        with our "for loop" by "increment", but this time, we will add The Wizard
        into the mix.  Can you change the code so that "increment" goes up by two
        each time The Wizard is clicked?\\r
        \\r
        Watch out!  The Wizard moves quickly!
      Course 4 Play Labs For Loops 7: "Could you use a for loop to help\nme speak the sequence 1, 4, 7, 10, 13, 16, 19, 22, 25?"
      Course 4 Play Labs For Loops 7a: "Now we're getting somewhere!  What\nif we start counting how many times we can click The Wizard before Dog gets\nto 30?  \\r\n\\r\nFinish adding blocks to The Wizard so that every time he's\nclicked the variable \"clicked\" increases by one. You can ignore \"increment\"\nfor now.\\r\n\\r\nDog will start counting when you click \"Run\"."
      Course 4 Play Labs For Loops 8: "Now, help the actors move as they\ncount.  \\r\n\\r\nDog should move and count by adding 2 (counter + 2) each time.  Cat\nwill move and count by multiplying by 2 (counter * 2)  each time. Penguin\nwill move and count to the power of 2 (counter ^ 2) each time.  Who will reach\ntheir flag first?"
      Course 4 Play Labs For Loops 8a: |-
        To finish our game, we need to
        bring back the "increment" variable!    Let's tie it to the level of the
        game.\\r
        \\r
        1) Keep track of the number of times The Wizard is clicked.\\r
        2)
        If The Wizard is clicked at least 10 times before Dog counts to 30, raise
        "increment" by 1 and start again.\\r
        3) If The Wizard does not get clicked
        at least 10 times, the game is over.
      Course 4 Playlab For Loop Freeplay: "Freeplay: Use everything you've\nlearned so far to make a game that includes a `for` loop!"
      Course 4 Playlab For Loops 4b: "Now, these two characters are going\nto race!  \\\\r\n\\\\r\nEach of them will move `counter` steps at a time, but their\ncounters will have different values because of the `for` loops.  \\\\r\n\\\\r\nCan\nyou change the increment in one of the loops so that the race is a tie?"
      Course 4 Playlab For Loops 5b: "Adjust the interval on these `for`\nloops so that the two characters end in the exact same place."
      Course 4 Playlab For Loops 6b: "Edit this `for` loop to create\na game that's fun for you to play!\\r\n\\r\nPress \"Run\" and click Madame\nUnicorn four times to win. "
      Course 4 SCF 1: "Use the suggested functions to draw four rows\nof hexagons. Notice how our even numbered rows are shifted to the right?"
      Course 4 SCF 1a: "Can you figure out how to collect all of this\nnectar with the fewest blocks possible?"
      Course 4 SCF 1b: "Can you figure out how to collect all of this\nhoney with the fewest blocks possible?"
      Course 4 SCF 2: "Use what you learned in the previous level to\ndraw an image like this. Note: The code becomes more simple if you incorporate\nparameters."
      Course 4 SCF 3 Fail 1: Can you figure out how to...
      Course 4 SCF 3 Fail 2: Can you figure out how to...
      Course 4 SCF 3: "Use what you learned in the previous level to\ndraw an image like this. Note: The code becomes more simple if you incorporate\nparameters."
      Course 4 SCFL 1: "Solve this puzzle using the fewest number of\nblocks possible."
      Course 4 SCFL 1a: "Can you get Skrat to his acorn using as few\nblocks as possible?"
      Course 4 SCFL 1b: "Can you get Skrat to his acorn using as few\nblocks as possible?"
      Course 4 SCFL 2: "Solve this puzzle using the fewest number of\nblocks possible."
      Course 4 SCFL 3: Can you figure out how to re-create this drawing?
      Course 4 SCFL 4: Can you figure out how to re-create this drawing?
      Course 4 SCFL 5: Can you figure out how to re-create this drawing?
      Course 4 SCFL 6: "Can you figure out how to re-create this drawing\nwith a single loop?"
      Course 4 SCFL 7: "The artist wants to catch some waves! Can you\nfigure out how to re-create this drawing?"
      Course 4 SCFP 1: "Create a function with parameters that allows\nthe artist to jump backward and forward by x pixels, and also up and down\nby y pixels (using positive and negative numbers)."
      Course 4 SCV 1: Click here to view the instructions again.
      Course 4 SCV 2: Click here to view the instructions again.
      Course 4 SCV 3: |-
        Now for a game of tag!  Tag Cat to get 2 points.
        Tag Penguin to get 3 points.  Get exactly 10 points to win!\\r
        But be careful,
        when Cat and Penguin tag each other, they take points away.\\r
        \\r
        Add the
        blocks necessary to make this game work the way it's been explained.  How
        will you get Dog to move in all directions using the arrow keys?  How will
        you add points when Dog tags Cat or Penguin?  How will you subtract points
        when Cat and Penguin touch?
      Course 4 SCV 4: "Solve this puzzle with the fewest number of blocks\npossible."
      Course 4 SCV 5: "Solve this puzzle with the fewest number of blocks\npossible."
      Course 4 SCV 6: Click here to view the instructions again.
      Course 4 SCVP 1: "Create a function with parameters that allows\nthe artist to jump backward and forward by x pixels, and also up and down\nby y pixels (using positive and negative numbers)."
      Course 4 Variables Assessment: "Can you create this image using\na variable for sides? Each line should be 50 pixels long."
      Course E MC Conditionals1: "You’ll find the most valuable resources\nunderground, but it can get dark. Place at least 2 torches and mine at least\n2 coal."
      CourseF_PlayLab_vars10: "Free Play time! Here are all of the\nvariables we've played with so far in this stage, as well as a few more in\ncase you want them. \\r\n\\r\nNotice that there are now so many blocks in our\ntoolbox that they need to be organized!  Here, we've put each piece into\nan appropriate category.  Take some time to explore everything that is available.\nWhen you're done browsing, make a game or story using repeats, variables,\nand events.  \\r\n\\r\nHint: scroll down to see all the commands in the workspace."
      CourseF_PlayLab_vars2: "The race in that last puzzle wasn't\nvery fair! Change the `dog_speed` variable to make sure you can collect more\nflags than Cat. The first to collect 10 flags wins!"
      CourseF_PlayLab_vars3: "Use the left and right arrows to move,\nand the up arrow to jump. See if you can collect all of the flags."
      CourseF_PlayLab_vars4: "Now we're using a variable called \"height\"\nto control how high the dog can jump. Update the \"height\" variable so that\nthe dog can jump high enough to reach all the flags."
      CourseF_PlayLab_vars5: "Let's build a game! First we'll need\na score. Rebuild the code that you saw in the last level to set the score\nto 10."
      CourseF_PlayLab_vars6: |-
        Use the right arrow to shoot hearts.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a heart. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      CourseF_PlayLab_vars7: |-
        Use the right arrow to shoot hearts.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a heart. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      CourseF_PlayLab_vars8: |-
        Use the right arrow to shoot hearts.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a heart. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      CourseF_PlayLab_vars9: "Nice, now let's make sure this game\nisn't too easy to play. Any time Dog (actor 1) gets hit by yellow hearts\nfrom Cat (actor 2), you should lose a point. Start with 10 points so it's\nnot too hard. Let your score drop down from 10 to 0 to pass the level."
      Crack Random Substitution: Հրահանգներ
      Crack Random Substitution_2018: Հրահանգներ
      Crack a Caesar Cipher: Հրահանգներ
      Crack a Caesar Cipher_2018: Հրահանգներ
      Food Fight!: "We've added one last function for\nyou. \\r\n\\r\nUse an \"if\" statement to program your game to call the \"level_up\"\nfunction only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample: \"player_score\" > 6\\r\n\\r\nPlay the game, and make it to level 3\nto move to the next puzzle. "
      Infinity_catch: "Can you make Elsa (\"actor 2\") catch up with\nAnna by using the arrow keys?"
      Infinity_finale: Create anything you like and share it!
      Infinity_move_collide: "Hiro is \"actor 1\".  Move him right to\nBaymax, and play a sound when they touch."
      Infinity_move_directions: "Baymax is \"actor 2\".  Add Move blocks\nand then move Baymax using the arrows.  Make him touch the two other characters."
      Infinity_move_right: "Hiro is \"actor 1\".  Use the Move block\nto move Hiro right to touch Baymax."
      Infinity_repeat: "Use a \"repeat forever\" block to make Anna move\nup and down 400 pixels."
      Infinity_say: Make Anna say "Hi there." by using the Say block.
      Infinity_shoot: "Baymax is \"actor 2\".  Make Baymax throw a rocket\nat Hiro."
      Infinity_shoot_directions: "Hiro is \"actor 3\".  Make Hiro throw\na projectile to each of the four characters.  Wait one second between each\nthrow."
      Infinity_touch_faster: Touch even more snowflakes!
      Infinity_touch_four: "Move Anna up, down left, and right to touch\neach of the four snowflakes."
      Infinity_touch_score: "Make Anna score a point when she touches\na snowflake.  Then click \"Run\" and steer her to touch each snowflake once."
      Inspirational Artwork: "Free Play Inspiration: You've\nnow learned everything you need to know to make a pattern like this! If this\npicture inspires you, try to make something similar. Otherwise, create something\nall your own.\\r\n \\r\nWant to know how our inspiration pattern was made? "
      K-1 Artist 1 Assessment 1: "Draw a short line up and a long one\nto the right!"
      K-1 Artist Loops 1: Գծիր այս գիծը՝ տեղաշարժվելով արևելելք 4 անգամ
      K-1 Artist Loops 2: 'Հիմա գծե՛ք նույն գիծը օգտագործելով ՙՙկրկնություն՚՚ բլոկը:'
      K-1 Artist Loops 3: 'Կրկնե՛ք այս բլոկները, որպեսզի նկարեք 6 գիծ: '
      K-1 Artist Loops 4: 'Կարո՞ղ է ՙՙկրկնություն՚՚ բլոկը օգնել, որպեսզի նկարեք ամրոցի տանիքը:'
      K-1 Artist Loops 5: 'Ո՞ր բլոկներն է պետք կրկնել 4 անգամ, որպեսզի նկարեք այս աստիճանները:'
      K-1 Artist Loops 6: 'Այստեղ պետք են 2 ՙՙկրկնություն՚՚ բլոկներ. մեկը բարձրանալու, մյուսը իջնելու համար:'
      K-1 Artist Loops 7: 'ՙՙԿրկնություն՚՚ բլոկը կօգնի, որպեսզի վերջացնեք այս նկարը:'
      K-1 Artist Loops 8: 'Այստեղ աստիճանավանդակներն ավելի լայն են:'
      K-1 Artist Loops 9: 'Ո՞րն է այս աստիճանները նկարելու ամենահեշտ ձևը:'
      K-1 Artist Loops Free Play: 'Նկարե՛ք հետաքրքիր ինչ-որ բան:'
      K-1 Artist1 1: նկարիր կատվի բեղերը երկու գծով
      K-1 Artist1 10: "Գծիր և թռիր՝ ընդհատվող ուղով հաղթական X-ին հասնելու համար\n"
      K-1 Artist1 2: Draw the whisker on the cat with two lines!
      K-1 Artist1 3: տար երկու գիծ դեպի արևելք և երկու գիծ դեպի հյուսիս՝ տունը ավարտին հասցնելու համար
      K-1 Artist1 4: վերև, ուղիղ և ներքև գծեր տար՝ ամրոցը ավարտին հասցնելու համար
      K-1 Artist1 5.5: "Complete the third tower of the castle using\nshort lines"
      K-1 Artist1 5: նկարիր ծաղիկի ցողունը երկու գծով
      K-1 Artist1 6: ավարտիր նկարը՝ օգտագործելով թռիչքային բլոկը
      K-1 Artist1 7: "Use the jump block to move without drawing. Jump\nup and draw a line."
      K-1 Artist1 8: Գծիր ըդհատվող գծերը՝ օգտագործելով թռչել և գծել բլոկերը
      K-1 Artist1 9: գծիր և թռիր՝ ընդհատվող գծերը ավարտելու համար
      K-1 Artist1 Assessment 1: Draw the short and long lines!
      K-1 Artist1 Assessment 2: Draw the short dashed lines!
      K-1 Artist2 1: Գծիր քառակուսի եռանկյան տակ
      K-1 Artist2 2: թռիր և գծիր քառակուսի տան կողքը
      K-1 Artist2 3: Գծիր քառակուսի մեկ այլ քառակուսու վերևը
      K-1 Artist2 4: Գծիր ուղղանկյունը՝  կամուրջն ավարտին հասցնելու համար
      K-1 Artist2 5: Draw a rectangle to complete the bridge supports
      K-1 Artist2 6: Գծիր երկու քառակուսի՝ ուղղանկյուն ստանալու համար
      K-1 Artist2 Assessment1: 'Գնահատում: Գծիր քառակուսի մյուս քառակուսու կողքը'
      K-1 Artist2 Free Draw: Գծիր ինչ որ բան
      K-1 Artist2_7: Գծիր ուղղանկյուն՝ պահարանի վերևի դարակը ունենալու համար
      K-1 Bee 1: Տեղափոխիր ինձ դեպի ծաղիկը, վերցրու նեկտարը, հետո տեղափոխիր ինձ դեպի փեթակը և պատրաստիր մեղր
      K-1 Bee 10: Get four nectar and then make two honey!
      K-1 Bee 11.5: Get four nectar to make four honey!
      K-1 Bee 11: Get three nectar and then make one honey
      K-1 Bee 12: Վերցրու երեք նեկտար և պատրաստիր երեք մեղր
      K-1 Bee 13: Get three nectar and then make one honey!
      K-1 Bee 14: Տար ինձ դեպի նեկտարը, վերցրու այն, տար ինձ դեպի մեղրը և պատրաստիր մեղր
      K-1 Bee 15: Get two nectar to make two honey!
      K-1 Bee 2: Տեղափոխիր ինձ դեպի ծաղիկը, վերցրու նեկտարը, հետո տեղափոխիր ինձ դեպի փեթակը և պատրաստիր մեղր
      K-1 Bee 3: Տեղափոխիր ինձ դեպի ծաղիկը, վերցրու նեկտարը, հետո տեղափոխիր ինձ դեպի փեթակը և պատրաստիր մեղր
      K-1 Bee 4: Վերցրու երկու նեկտար և պատրաստիր երկու մեղր
      K-1 Bee 5: Get three nectar and then make three honey!
      K-1 Bee 6: Վերցրու երկու նեկտար և պատրաստիր երկու մեղր
      K-1 Bee 7: Վերցրու երեք նեկտար և պատրաստիր երեք մեղր
      K-1 Bee 8: Վերցրու երկու նեկտար և պատրաստիր երկու մեղր
      K-1 Bee 9: Վերցրու երկու նեկտար և պատրաստիր երկու մեղր
      K-1 Bee Assessment 1: Get nectar to make honey!
      K-1 Bee Assessment 2: Get nectar to make honey!
      K-1 Bee Loops 1: Հավաքի՛ր նեկտարը մեղր պատրաստելու համար։
      K-1 Bee Loops 10: Հավաքի՛ր նեկտարը և պատրաստի՛ր մեղրը ամբողջությամբ։
      K-1 Bee Loops 11: Հավաքի՛ր նեկտարը և պատրաստի՛ր մեղրը ամբողջությամբ։
      K-1 Bee Loops 12: Get all of the nectar and all of the honey.
      K-1 Bee Loops 2: Օգտագործիր "կրկնություն" հրամանը տեղաշարժվելու համար, իսկ հետո հավաքի՛ր նեկտարը և պատրաստի՛ր մեղր։
      K-1 Bee Loops 3: "Use three `repeat` loops to get the nectar and\nmake honey!"
      K-1 Bee Loops 4: "Use `repeat` loops to get the nectar, make honey,\nand to move!"
      K-1 Bee Loops 5: Use `repeat` loops to get the nectar and honey!
      K-1 Bee Loops 6: "Use a `repeat` loop to get the nectar, get honey,\nand to move!"
      K-1 Bee Loops 7: Հավաքի՛ր նեկտարը և պատրաստի՛ր մեղր։
      K-1 Bee Loops 8: Հավաքի՛ր նեկտարը և պատրաստի՛ր մեղր։
      K-1 Bee Loops 9: Get the all the nectar and make all of the honey.
      K-1 Bee Loops Assessment 1: "Get nectar to make honey and use loops\nto move!"
      K-1 Bee Loops Assessment 2: Get nectar to make honey using loops!
      K-1 Building a Foundation Assessment: "Build a three level pyramid,\nthere are no other directions, so just play with the pieces until you get\nit!"
      K-1 Maze 10: 'Go around the TNT to get me to the pig! '
      K-1 Maze 11: 'Որոշի՛ր ուղին և տա՛ր ինձ այդ հիմար խոզուկի մոտ: Խուսափի՛ր TNT-ները, այլապես կպայթես: Հուշում՝ նա ինձնից հարավ է:'
      K-1 Maze 2: Move me East to get me to the pig!
      K-1 Maze 3: Move me South to get me to the pig!
      K-1 Maze 4: Move me North to get me to the pig!
      K-1 Maze 5: Move me East to get me to the pig!
      K-1 Maze 6: Move one way, then another to get me to the pig!
      K-1 Maze 7: Move one way, then another to get me to the pig!
      K-1 Maze 8: Move one way, then another to get me to the pig!
      K-1 Maze 9: Move one way, then another to get me to the pig!
      K-1 Maze Assessment 1: Assessment -- Get me to the pig!
      K-1 Maze Assessment 12: Assessment Level
      K-1 Maze Assessment 13: Assessment Level
      K-1 Maze Assessment 2: Assessment -- Get me to the pig!
      K-1 Maze Loops 1: Տա՛ր ինձ խոզի մոտ։
      K-1 Maze Loops 10: Տա՛ր ինձ խոզի մոտ։ "Կրկնություն" բլոկը օգտագործելը այն առավել կհեշտացնի։
      K-1 Maze Loops 11: "Get me to the pig!  \\r\nThe `repeat` loop will\nmake this easier."
      K-1 Maze Loops 12: "Get me to the pig! The `repeat` loop will make\nthis easier."
      K-1 Maze Loops 2: Օգտագործի՛ր "կրկնություն" բլոկը հասնելու խոզին։
      K-1 Maze Loops 3: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 4: Տա՛ր ինձ խոզի մոտ։
      K-1 Maze Loops 5: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 6: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 7: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 8: Use `repeat` loops to get me to the pig.
      K-1 Maze Loops 9: Տա՛ր ինձ խոզի մոտ։
      K-1 Maze Loops Assessment 1: Նայիր այն ամենին ինչ սովորել ենք։ Օգտագործիր "կրկնություն" բլոկը հասնելու խոզին։
      K-1 Maze Loops Assessment 2: "Use `repeat` loops to get me to the\npig!"
      K-1 Maze Multi 14: Assessment Level
      K-1 Maze Multi 15: Assessment Level
      K-1 Maze Sequence Assessment 1: |-
        Let's see what you've learned!\\r
        Move
        one way, then another to get me to the pig.
      K-1 Maze Sequence Assessment 2: "Move one way, then another to\nget me to the pig."
      K-1 Maze debug Assessment 1: "Assessment -- Debug this level by\nrearranging and adding blocks to get me to the pig!"
      K-1 artist 1 level 10: Գծիր ըդհատվող գծերը՝ օգտագործելով թռչել և գծել բլոկերը
      K-1 artist 1 level 9: Գծիր երեք գծով
      K-1 maze debug 1: Change the code to get me to the pig!
      K-1 maze debug 10: "Debug this level by rearranging and changing\nblocks to get me to the pig!"
      K-1 maze debug 11: |-
        This is a test!\\r
        Debug this level by rearranging
        and changing blocks to get me to the pig
      K-1 maze debug 2: "Figure out what is missing and then add blocks\nto get me to the pig!"
      K-1 maze debug 3: "Something is not quite right. REMOVE blocks\nto get me to the pig!"
      K-1 maze debug 4: "Run through these blocks and fix them! I think\nI might be going in the wrong direction."
      K-1 maze debug 5: "Debug this level by rearranging and changing\nblocks to get me to the pig!"
      K-1 maze debug 6: "Debug this level by rearranging and changing\nblocks to get me to the pig!"
      K-1 maze debug 7: "Debug this level by rearranging and changing\nblocks to get me to the pig!"
      K-1 maze debug 8: "Debug this level by rearranging and adding blocks\nto get me to the pig!"
      K-1 maze debug 9: "Debug this level by rearranging and changing\nblocks to get me to the pig!"
      K2.0 sequence 1: Change the code to get me to the pig!
      K2.0 sequence 2: Change the code to get me to the pig!
      K2.0 sequence 5: Move one way, then another to get me to the pig!
      K2.0 sequence 6: "Figure out what is missing and then add blocks\nto get me to the pig!"
      K2.0 sequence 9: 'Go around the TNT to get me to the pig! '
      KTest2: 'Որոշի՛ր ուղին և տա՛ր ինձ այդ հիմար խոզուկի մոտ: Խուսափի՛ր TNT-ները, այլապես կպայթես: '
      Kiki_StarWars_Test_3: տեքստ
      Kiki_StarWars_Test_4: տեքստ
      Kiki_StarWars_Test_5: տեքստ
      Kiki_StarWars_Test_5_Example: տեքստ
      Mike Test Bee Conditionals 1: "This cloud is blocking my view! Check\nto see if there's a flower under the cloud, and only get nectar if there's\na flower. Be careful, it can change!"
      NEW Course 4 Artist Functions 1: "Can you draw a square that is\n100 pixels in length, using a repeat loop?"
      NEW Course 4 Artist Functions 10.1: "Use the functions from the\nprevious puzzles to draw this pattern."
      NEW Course 4 Artist Functions 10: "Click \"edit\" to fill out the\nblocks in the function definition to make a 40 pixel square."
      NEW Course 4 Artist Functions 11: "Now we want to create a new\nfunction called `draw a line of squares` that draws six squares all in a row.  Can\nyou build this function using this `draw a square 20` function that we created\nfor you?"
      NEW Course 4 Artist Functions 12: "Use the `draw a line of squares`\nfunction from the last puzzle to draw this pattern."
      NEW Course 4 Artist Functions 13: "Can you draw a star shape using\nthe `draw a line of squares` function?"
      NEW Course 4 Artist Functions 14: 'Free-play time! '
      NEW Course 4 Artist Functions 2: "Can you draw 3 squares 20 pixels\napart from one another? Each square is 100 pixels in size."
      NEW Course 4 Artist Functions 3: "Here is a new type of Block.\nIt is called a `function` block. Click \"edit\" then fill it with the code\nfor drawing a square with 100 pixel sides. \\r\n\\r\nWhen you're done editing\nthe function, click \"Close\" to go back to your program."
      NEW Course 4 Artist Functions 4: "Use the `draw a square` function\nto draw this pattern."
      NEW Course 4 Artist Functions 5: "How did the \"draw a square\"\nblock know what commands to run? Click on \"edit\" in the \"draw a square\"\nfunction block. The blocks in the function editor are the definition that\nmake up \"draw a square.\" When you're done looking around, click \"Save\nand Close\" and then \"Run.\""
      NEW Course 4 Artist Functions 6: "Using the \"draw a square\" function\nblock, can you draw this picture? Hint: each square is 20 pixels apart.\\\\r\n"
      NEW Course 4 Artist Functions 7: "Are you getting the hang of how\nto use function blocks? Let's modify this square so that it is 200 pixels\nin size. Click on \"edit\" to enter the `draw a square` function editor. Remember\nto click on \"Close\" to get out of the function editor."
      NEW Course 4 Artist Functions 8: "We have created a new function\nfor you called \"draw a triangle\".  Can you edit the function definition\nto draw a triangle with 100 pixel sides?"
      NEW Course 4 Artist Functions 9: "Can you solve this by adding\nonly one block?"
      NEW Course 4 Artist Functions inspire: "Click here to see the inspiration\npicture again."
      NEW Course 4 Artist Params 1: "Let's define this function to draw\na square with 50 pixel sides. Click \"edit\" to get started."
      NEW Course 4 Artist Params 10: "Create a `draw a hexagon` function\nblock with a length parameter. This hexagon has sides that are 100 pixels\nin length."
      NEW Course 4 Artist Params 11: "Can you figure out how to draw\nthis shape? Edit the function to use the \"sides\" parameter."
      NEW Course 4 Artist Params 12: "Can you complete this drawing?\nThe sides of all the shapes are 100 pixels long."
      NEW Course 4 Artist Params 12a: "This image is similar to the last.\nCan you use a `for` loop with your function to make this design?"
      NEW Course 4 Artist Params 13: "Let's edit this \"draw a polygon\"\nfunction. It already has a \"sides\" parameter. Now, let's add a \"length\"\nparameter. \\r\nThe perimeter of each shape is 200 pixels long. Do you remember\nthe equation to make shapes the same size when they have a different number\nof sides?"
      NEW Course 4 Artist Params 14: "Edit \"draw a spiral edge\" to\nuse \"length\" and \"sides\" parameters, then recreate these shapes."
      NEW Course 4 Artist Params 15: "Freeplay: Here are the functions\nyou've written, and some more for you to play with. Draw something awesome!\nPlay with the pen width to see how different your drawings look!"
      NEW Course 4 Artist Params 3: "Now let's use the function to draw\n5 triangles in a row. Each triangle is 30 pixels apart.\\\\r\n"
      NEW Course 4 Artist Params 4: "Do you notice anything different\nabout these function blocks? Click “Run” to see what happens."
      NEW Course 4 Artist Params 5: "Replace the `???` in the `length`\nparameter input block. The pentagon has 100 pixel sides."
      NEW Course 4 Artist Params 6: "Fill in the \"length\" parameter\nto draw these shapes by replacing the \"???\" with the right numbers. The\nsquare and triangle have 100 pixels sides while each side of the hexagon is\n75 pixels long."
      NEW Course 4 Artist Params 7: "Can you complete this drawing? The\nsides of each triangle are 25 pixels larger than the last.  The first triangle\nhas 25 pixel sides."
      NEW Course 4 Artist Params 8: "The code for this triangle function\nis broken. Can you edit the function to fix it, and then make triangles of\nlength 25, 50, and 75?"
      NEW Course 4 Artist Params 9: "Click \"edit\" to fill in the function\ndefinition of \"draw a square\" and add a parameter. It should take a length\nparameter, just like the triangle. This time, draw 3 squares: 25, 50 and 75\npixels in length, each 100 pixels apart."
      NEW Course 4 Artist Params inspire: "Free Play Inspiration: You've\nnow learned everything you need to know to make a pattern like this! If this\npicture inspires you, try to make something similar. Otherwise, create something\nall your own.\\r\n \\r\nWant to know how our inspiration pattern was made? "
      NEW Course 4 Artist Vars 1.5: "Take a look at the code, can you\nsee how the \"set length\" block and \"length\" block works together? Click\non \"Run\" to see it in action."
      NEW Course 4 Artist Vars 12: "Now, recreate the algorithm from\nthe last level and create a pentagon with sides of length 150."
      NEW Course 4 Artist Vars 2.5: "Take a look at the code, can you\nsee how the \"set length\" block and \"length\" block works together? Click\non \"Run\" to see it in action."
      NEW Course 4 Artist Vars 2: "Drag a number block to both the `set\nlength` block and the `repeat _ times` block to draw a set of 50 pixel triangles."
      NEW Course 4 Artist Vars 4 5: "Awesome job on the last puzzle,\nlet's try it again this time let's make this cool design with with 60 pixel\nhexagon's."
      NEW Course 4 Artist Vars 4: "Let's try it again! \\r\n\\r\nCan you\nset the `length` variable to 60 to make this cool design with hexagons?"
      NEW Course 4 Artist Vars 6: "Draw this pattern of pentagons with\n100 pixel sides by setting the right value for `length` and dropping the `length`\nvariable into all of the the correct places. \\r\n\\r\nSee how you only have\nto set the value for `length` once, and the code uses the right value everywhere?"
      NEW Course 4 Bee For Loops 1: "Use a loop to collect the nectar\nfrom each flower."
      NEW Course 4 Bee For Loops 10: "Use your for loop \"counter\" variable\nto control how far to move horizontally."
      NEW Course 4 Bee For Loops 10a: "Ready for a challenge?  Take what\nyou've learned about loops and try to solve this problem. Remember: You may\nhave to run through solutions multiple times before you figure out all of\nthe steps."
      NEW Course 4 Bee For Loops 11: "Can you use the loop variable to\ncontrol movement and nectar collection?"
      NEW Course 4 Bee For Loops 2: "Add the code necessary to make sure\nthe bee collects all the nectar. Look at how much code you need for this puzzle!\n(We'll learn a simpler way in the next puzzle.)"
      NEW Course 4 Bee For Loops 3: "Ah, the \"for loop\" makes this\nmuch easier! All the code you need is here, take a look at how it is put together\nthen click \"Run\" to see how it works."
      NEW Course 4 Bee For Loops 4 4: "Now we need to move forward \"counter\"\ntimes, then get nectar \"counter\" times.  Can you use two \"repeat\" loops\nto solve this challenge?"
      NEW Course 4 Bee For Loops 4: "Replace the ??? in the \"for loop\"\nwith the largest amount of nectar the bee has to collect."
      NEW Course 4 Bee For Loops 5 5: "Are you getting the hang of using\nthe \"for loop\"? Let's help the bee get the rest of the nectar."
      NEW Course 4 Bee For Loops 5: "You can also use a \"for loop\"\nto count down. Try gathering this nectar by counting down from 5 to 1 by 1."
      NEW Course 4 Bee For Loops 6: "The last number in your for loop\nis called the \"increment\". Each time the loop is run, the counter variable\nchanges by the value of the increment. Try collecting these flowers using\nan increment of 2."
      NEW Course 4 Bee For Loops 7: |-
        Now, let's combine the "counter"
        variable with a math block! How can you use the "counter" variable to navigate
        this garden with the fewest number of blocks possible? What do you need to
        do to collect 3, 6, 9, 12, 15 nectar this time? The secret is in the "counter"
        variable!\\r
        \\r
        Remember: If your loop is counting up, the increment is added
        to your "counter" variable each time through.
      NEW Course 4 Bee For Loops 8: "You've got this! What should your\nincrement be to collect 3, 6, 9, 12, 15 nectar?"
      NEW Course 4 Bee For Loops 9: "If your loop is counting down, the\nincrement is subtracted from your counter variable each loop. What should\nyour increment be to collect 15, then 12, then 9, 6, 3 nectar?"
      NEW Course 4 Bee For Loops 95: "Take a look at each piece of the\n\"for loop\" that you have just created.  Can you figure out which numbers\nyou need to double to solve this puzzle? Why does it work?"
      NEW Course 4 Play Lab Params 11: "It's free play time! Have fun\nwith all the blocks in your tool box."
      NEW Course 4 Play Lab Params 5 5: "Let's try that again, but with\nless help. What do you need to edit this time to make the actors patrol?"
      NEW Course 4 Play Lab Vars 4 5: "“What do you think this code will\ndo? Press “Run” to see what happens.”"
      NEW Course 4 Play Labs For Loops 7a: "Using what you learned so\nfar, can you have Dinosaur take a step forward every time Penguin counts?"
      NEW Course 4 Play Labs For Loops 8 Free Play: "It's Free Play\ntime, have fun with all the blocks in your tool box."
      NEW Course 4 Play Labs For Loops 8a: "Challenge: How would you\nuse the \"for loop\" to get every actor to go around and say their actor number,\nthen vanish from the screen?"
      New Artist Project: "Draw something awesome! Your code is saved\nas a project that you can return to at any time."
      New Bounce Project: Create your own Bounce game. You can change all the visuals and the rules. When youre done, click Finish to let friends try your game on their phones.
      New Course 4 Artist Functions Level 4: "Use the \"draw a square\"\nfunction to draw this pattern."
      New Gumball Project: Create anything you like and share it!
      New Ice Age Project: Create anything you like and share it!
      New Infinity Project: Create anything you like and share it!
      Overworld Avoid Monsters: "Running into a Creeper is a bad idea.\nCarefully move past the Creepers and reach the safety of your home."
      Overworld Avoid Monsters_2018: "Running into a Creeper is a bad idea.\nCarefully move past the Creepers and reach the safety of your home."
      Overworld Avoid Monsters_2019: "Running into a Creeper is a bad idea.\nCarefully move past the Creepers and reach the safety of your home."
      Overworld Chop Tree - allthethings: "Wood is a very important resource. Many things\nare made from it. Walk to the tree and use the “destroy block” command to\nchop it down."
      Overworld Chop Tree: "Wood is a very important resource. Many things\nare made from it. Walk to the tree and use the “destroy block” command to\nchop it down."
      Overworld Chop Tree_2018: "Wood is a very important resource. Many things\nare made from it. Walk to the tree and use the “destroy block” command to\nchop it down."
      Overworld Chop Tree_2019: "Wood is a very important resource. Many things\nare made from it. Walk to the tree and use the “destroy block” command to\nchop it down."
      Overworld Chop Trees: "We need to build a house before the sun\ngoes down. Houses require a lot of wood. Cut down all 3 trees."
      Overworld Chop Trees_2018: "We need to build a house before the sun\ngoes down. Houses require a lot of wood. Cut down all 3 trees."
      Overworld Chop Trees_2019: "We need to build a house before the sun\ngoes down. Houses require a lot of wood. Cut down all 3 trees."
      Overworld Free Play 20x20: "Congratulations! You've completed\nall our puzzles! Now mine, build, and create something unique by using everything\nyou've learned so far."
      Overworld Free Play 20x20_2018: "Congratulations! You've completed\nall our puzzles! Now mine, build, and create something unique by using everything\nyou've learned so far."
      Overworld Free Play 20x20_2019: "Congratulations! You've completed\nall our puzzles! Now mine, build, and create something unique by using everything\nyou've learned so far."
      Overworld House Frame Chosen: "Build the rest of your house from\nany material you'd like. The \"repeat\" command will come in handy."
      Overworld House Frame Chosen_2018: "Build the rest of your house from\nany material you'd like. The \"repeat\" command will come in handy."
      Overworld House Frame Chosen_2019: "Build the rest of your house from\nany material you'd like. The \"repeat\" command will come in handy."
      Overworld Move to Sheep: "Add a second “move forward” command to\nreach the sheep."
      Overworld Move to Sheep_2018: "Add a second “move forward” command to\nreach the sheep."
      Overworld Move to Sheep_2019: "Add a second “move forward” command to\nreach the sheep."
      Overworld Place Wall: "Every house starts with a wall. Build the\nfirst part of your house by putting the \"place\" and \"move forward\" commands\ninside the repeat loop."
      Overworld Place Wall_2018: "Every house starts with a wall. Build the\nfirst part of your house by putting the \"place\" and \"move forward\" commands\ninside the repeat loop."
      Overworld Place Wall_2019: "Every house starts with a wall. Build the\nfirst part of your house by putting the \"place\" and \"move forward\" commands\ninside the repeat loop."
      Overworld Plant Crops: "It’s good to plan ahead. Plant crops on\nboth sides of the water so you don’t get hungry later on."
      Overworld Plant Crops_2018: "It’s good to plan ahead. Plant crops on\nboth sides of the water so you don’t get hungry later on."
      Overworld Plant Crops_2019: "It’s good to plan ahead. Plant crops on\nboth sides of the water so you don’t get hungry later on."
      Overworld Powered Minecart: "Great job! You’ve gathered lots of\nresources and built a modest home. Now lay rail from the edge of the map to\nthe door of your house."
      Overworld Powered Minecart_2018: "Great job! You’ve gathered lots of\nresources and built a modest home. Now lay rail from the edge of the map to\nthe door of your house."
      Overworld Powered Minecart_2019: "Great job! You’ve gathered lots of\nresources and built a modest home. Now lay rail from the edge of the map to\nthe door of your house."
      Overworld Shear Sheep: "Sheep-shearing time! Use the “shear” command\nto gather wool from both sheep."
      Overworld Shear Sheep_2018: "Sheep-shearing time! Use the “shear” command\nto gather wool from both sheep."
      Overworld Shear Sheep_2019: "Sheep-shearing time! Use the “shear” command\nto gather wool from both sheep."
      PDK5 Conditionals 1: "Purple flowers may have either 1 or 0 nectar, but\nyou don't know which one! Be careful not to collect nectar from a purple\nflower if it doesn't have any. Check if the nectar is equal to 1 by using\nthe if block."
      PDK5 Functions 2: "Functions let you define new blocks! We've\nmoved the blocks to draw a square into a function called \"draw a square\".\nCan you use the \"draw a square\" function to create the glasses? The squares\nare 75 pixels apart."
      PS copy 2-3 Bee Conditionals 5: "Be careful not to collect nectar from\na purple flower if it doesn't have any. \\r\nYou must first check if the nectar\nis equal to 1 using the `if nectar` block."
      Quantum Bee: "Purple flowers may have either 1 or 0 nectar, but\nyou don't know which one! Be careful not to collect nectar from a purple\nflower if it doesn't have any. Check if the nectar is equal to 1 by using\nthe if block."
      Ryan - 4-5 Bee Conditionals 2: "The bee only wants nectar right now.\nNot all objects are flowers, so check underneath EVERY CLOUD to see if it\nis hiding a flower. If it is, then you can gather nectar."
      Ryan - Bee Conditionals: "The bee only wants nectar right now.\nNot all objects are flowers, so check underneath EVERY CLOUD to see if it\nis hiding a flower. If it is, then you can gather nectar."
      Ryan Test Locked Blocks: "Here's a function called \"patrol.\"\nEdit it to move Cat up 400 pixels and then down 400 pixels."
      SpecialFrozenLevel: "You've officially become a master artist!\nCreate a winter wonderland."
      Standalone_Artist_1: "Welcome to Artist! First off, let's try\nto make a simple square using the turn right block and move forward block.\nEach side should be 100 pixels long."
      Standalone_Artist_2: "Draw this diamond with 120 and 60 degree\nangles and 150 pixel long sides."
      Standalone_Artist_3: "Can you draw this hexagon with 100 pixel\nsides and 60 degree turns?"
      Standalone_Artist_4: "Now you've got a new block to play with,\nthe loop. This will repeat a set of commands. What happens if you loop these\ncommands 6 times?"
      Standalone_Artist_5.5: "Notice how we simplified the diamond code\nby turning it into a loop. You can loop that whole sequence 12 times to draw\nthe flower. Hint: You'll need to turn 30 degrees after your diamond loop\nso you don't keep drawing over the same diamond."
      Standalone_Artist_5: "How many times do you need to loop this diamond\nto draw the flower?"
      Standalone_Artist_6: "Loop this hexagon code 6 times to create\nthe design. How many degrees will you need to turn each time? Hint: divide\nthe number of degrees in a circle by the number of times you are looping."
      Standalone_Artist_7: "A function is another programming tool to\nhelp you avoid repeating yourself. This function draws a flower, so you can\nuse it any time you want to draw a flower. Use this and the new jump block\nto draw these flowers. Hint: The flowers are 150 pixels apart"
      Standalone_Artist_8: "Here's a function called \"Draw a shape\"\nthat we've programmed to draw hexagons. Run the code to see what it does\nand then experiment with the function to see what happens. Can you make it\ndraw a pattern of squares, triangles, or octagons?"
      Standalone_Artist_9: "Now go ahead and make whatever picture you'd\nlike! You've even got an empty function that you can make do whatever you\nwant!"
      Standalone_Artist_v2: "Welcome to Artist! First off, let's try\nto make a simple square using the turn right block and move forward block.\nEach side should be 100 pixels long."
      Testing Quantum Farmer: "Wow, look at that! \\r\n\\r\nI don't know how\nmany shovelfuls of dirt this hole needs.  \\r\nCan you write a program that\nkeeps using the `fill` block until the ground is even?  "
      The Vigenere Cipher Widget: Հրահանգներ
      The Vigenere Cipher Widget_2018: Հրահանգներ
      The Vigenere Cipher: Հրահանգներ
      Total Artist Clone Me: "Freeplay: Here are the functions\nyou've written, and some more for you to play with. Draw something awesome!\nPlay with the pen width to see how different your drawings look!"
      U2 frequency caesar: Հրահանգներ
      U2 frequency random sub: Հրահանգներ
      U2 vigenere cipher: Հրահանգներ
      U4 vigenere cipher 2: Հրահանգներ
      U4L02 - Objects - Template1: Template
      U4L02 - Objects - Template1_2018: Template
      Underground Avoiding Lava: "Lava is hiding beneath some of these\nblocks, which you'll need to cover up before moving forward. An \"if\" command\nwill come in handy here. Add a \"move forward\" command in the correct place\nto mine these blocks."
      Underground Avoiding Lava_2018: "Lava is hiding beneath some of these\nblocks, which you'll need to cover up before moving forward. An \"if\" command\nwill come in handy here. Add a \"move forward\" command in the correct place\nto mine these blocks."
      Underground Avoiding Lava_2019: "Lava is hiding beneath some of these\nblocks, which you'll need to cover up before moving forward. An \"if\" command\nwill come in handy here. Add a \"move forward\" command in the correct place\nto mine these blocks."
      Underground If Statements: "Now things are getting tricky. Mine\n3 redstone, but don’t fall in the lava. Use an \"If\" command to place cobblestone\nover any lava you uncover."
      Underground If Statements_2018: "Now things are getting tricky. Mine\n3 redstone, but don’t fall in the lava. Use an \"If\" command to place cobblestone\nover any lava you uncover."
      Underground If Statements_2019: "Now things are getting tricky. Mine\n3 redstone, but don’t fall in the lava. Use an \"If\" command to place cobblestone\nover any lava you uncover."
      Underground Iron: "Walking into molten lava is a bad idea. Place\ncobblestone to create a bridge, then mine at least two of the iron blocks."
      Underground Iron_2018: "Walking into molten lava is a bad idea. Place\ncobblestone to create a bridge, then mine at least two of the iron blocks."
      Underground Iron_2019: "Walking into molten lava is a bad idea. Place\ncobblestone to create a bridge, then mine at least two of the iron blocks."
      Underground Mining Coal: "You’ll find the most valuable resources\nunderground, but it can get dark. Place at least 2 torches and mine at least\n2 coal."
      Underground Mining Coal_2018: "You’ll find the most valuable resources\nunderground, but it can get dark. Place at least 2 torches and mine at least\n2 coal."
      Underground Mining Coal_2019: "You’ll find the most valuable resources\nunderground, but it can get dark. Place at least 2 torches and mine at least\n2 coal."
      aE7: "If you create another loop like this one,\nbut turn left instead of right, what happens? \\r\n\\r\nCan you repeat all of\nthat to draw this wave?"
      aE8: "Now let's loop that whole thing four\ntimes to create this picture frame. Watch out for the corners - you can't\njust turn 90 degrees! \\r\n\\r\nIf looping a 3 degree turn 60 times makes a\nhalf circle, which of these blocks of code will make an additional quarter\ncircle for the corners?"
      beeDebugVideo1: Use a `repeat` loop to collect all of the nectar.
      birdsDebugVideo1: 'Որոշի՛ր ուղին և տա՛ր ինձ այդ հիմար խոզուկի մոտ: Խուսափի՛ր TNT-ները, այլապես կպայթես: '
      bounce_1: 'Կցել բլոկ է », երբ մեկնել է arrow» բլոկի եւ սեղմեք "Run". Տեղափոխել թիավարել օգտագործելով ձախ arrow հասնել ավարտի թիրախին:'
      bounce_10: 'Կա մի այժմ նպատակ վերեւում: Կցել «Հաշիվ կետը» եւ «միավոր մրցակցի point" նյութից է », երբ գնդակը նպատակին» եւ «երբ գնդակը սղում թիավարել» նյութից մի խաղ. Տես, թե քանի միավոր դուք կարող եք միավոր, նախքան ձեր հակառակորդին արդիւնքներ երկու անգամ:'
      bounce_10_2018: 'Կա մի այժմ նպատակ վերեւում: Կցել «Հաշիվ կետը» եւ «միավոր մրցակցի point" նյութից է », երբ գնդակը նպատակին» եւ «երբ գնդակը սղում թիավարել» նյութից մի խաղ. Տես, թե քանի միավոր դուք կարող եք միավոր, նախքան ձեր հակառակորդին արդիւնքներ երկու անգամ:'
      bounce_11: 'Այժմ կարող եք կցել նյութից է », երբ վազում» բլոկում. Դուք պետք է կցել նոր "գործարկել է նոր գնդակը» բլոկի ավելի քան մեկ տեղում: Բացի այդ, փորձում փոխելով տեսարանը կամ արագությունը թիավարել, եւ գնդակը, եւ տեսնել, թե ինչպես շատ միավոր դուք կարող եք միավոր, նախքան ձեր հակառակորդին արդիւնքներ երկու անգամ:'
      bounce_11_2018: 'Այժմ կարող եք կցել նյութից է », երբ վազում» բլոկում. Դուք պետք է կցել նոր "գործարկել է նոր գնդակը» բլոկի ավելի քան մեկ տեղում: Բացի այդ, փորձում փոխելով տեսարանը կամ արագությունը թիավարել, եւ գնդակը, եւ տեսնել, թե ինչպես շատ միավոր դուք կարող եք միավոր, նախքան ձեր հակառակորդին արդիւնքներ երկու անգամ:'
      bounce_12: Create your own Bounce game. You can change all the visuals and the rules. When youre done, click Finish to let friends try your game on their phones.
      bounce_12_2018: Create your own Bounce game. You can change all the visuals and the rules. When youre done, click Finish to let friends try your game on their phones.
      bounce_1_2018: 'Կցել բլոկ է », երբ մեկնել է arrow» բլոկի եւ սեղմեք "Run". Տեղափոխել թիավարել օգտագործելով ձախ arrow հասնել ավարտի թիրախին:'
      bounce_2: Կցել բլոկ է «Երբ աջ arrow» եւ «երբ մեկնել arrow" բլոկների. Տեղափոխել թիավարել է հասնել երկու ավարտի թիրախներ.
      bounce_2_2018: Կցել բլոկ է «Երբ աջ arrow» եւ «երբ մեկնել arrow" բլոկների. Տեղափոխել թիավարել է հասնել երկու ավարտի թիրախներ.
      bounce_3: 'Այժմ նման բան, ինչպես նաեւ "երբ մինչեւ arrow» բլոկում. Տեղափոխել թիավարել դեպի ավարտի թիրախ վերեւում:'
      bounce_3_2018: 'Այժմ նման բան, ինչպես նաեւ "երբ մինչեւ arrow» բլոկում. Տեղափոխել թիավարել դեպի ավարտի թիրախ վերեւում:'
      bounce_4: Այս անգամ, դուք պետք է ավելացնել չորս նյութից. Տեղափոխել թիավարել բոլոր չորս ավարտի թիրախների ավարտելու այս հանելուկ.
      bounce_4_2018: Այս անգամ, դուք պետք է ավելացնել չորս նյութից. Տեղափոխել թիավարել բոլոր չորս ավարտի թիրախների ավարտելու այս հանելուկ.
      bounce_5: Were going to send a ball flying down towards the paddle. Attach a block to the "when ball hits paddle" block to ensure the ball reaches the finish target.
      bounce_5_2018: Were going to send a ball flying down towards the paddle. Attach a block to the "when ball hits paddle" block to ensure the ball reaches the finish target.
      bounce_6: Այժմ Սալոնի թիրախը գտնվում է վերեւում. Դուք պետք է կցել նյութից, այնպես էլ "Երբ գնդակը հարվածում» բլոկների է լուծել այս հանելուկ.
      bounce_6_2018: Այժմ Սալոնի թիրախը գտնվում է վերեւում. Դուք պետք է կցել նյութից, այնպես էլ "Երբ գնդակը հարվածում» բլոկների է լուծել այս հանելուկ.
      bounce_7: 'Կցել նյութից յուրաքանչյուր «երբ» նյութից. Bounce գնդակը մինչեւ այն հարվածում է ավարտի թիրախին:'
      bounce_7_2018: 'Կցել նյութից յուրաքանչյուր «երբ» նյութից. Bounce գնդակը մինչեւ այն հարվածում է ավարտի թիրախին:'
      course2_maze_seq_challenge1: 'Որոշի՛ր ուղին և տա՛ր ինձ այդ հիմար խոզուկի մոտ: Խուսափի՛ր TNT-ները, այլապես կպայթես: '
      course2_playlab_stage17_11: Create your own story. When youre done, click Finish to let friends try your story on their phones.
      course2_playlab_stage17_3: 'Կարո՞ղ ես գրել ծրագիր, որպեսզի շունը (կատարող 1) մետենա դեպի կատվին:'
      course3_playlab_stage16_1: Կարող եք այնպես անել, որ շունն ասի  "hello world"
      course3_playlab_stage16_2: 'Կարո՞ղ եք այնպես անել, որ նախ շունը, հետո կատուն ինչ-որ բան ասեն:'
      course3_playlab_stage16_3: Կարող եք այնպիսի ծրագիր գրել,որ շունը հասնի կատվին
      course3_playlab_stage16_4: Կարող եք գրել ծրագիր, որը կազմում է շուն տեղափոխվել կատվի, եւ ունեն կատուն ասում եք "բարեւ", երբ շունը հասնում նրան.
      course3_playlab_stage16_5: Ավելացրեք մեկ բլոկ ութոտնուկին երջանիկ դարձնելու համար
      course3_playlab_stage16_6: Create your own story. When youre done, click Finish to let friends try your story on their phones.
      course3_playlab_stage17_1: Կարող եք գրել ծրագիր, որպեսզի ութոտնուկ ասում եք "բարեւ", երբ այն կտտացրել.
      course3_playlab_stage17_2: Կարող եք գրել ծրագիր, որպեսզի Waddles տեղափոխել շուրջ օգտագործելով մինչեւ / ներքեւ / ձախ եզրի / Right բանալիները հարվածել բոլոր թիրախները.
      course3_playlab_stage17_3: 'The "կրկնել հավերժ» դաշինքը թույլ է տալիս Ձեզ առաջադրվել կոդ շարունակաբար: Կարող եք կցել նյութից տեղափոխել այս dinosaur վեր ու վար բազմիցս.'
      course3_playlab_stage17_4: Կարող եք ունենալ Waddles ասում եք "Ouch!" եւ խաղալ մի «հարվածել» հնչի, եթե նա անցնում է dinosaur, եւ ապա տեղափոխել նրան Ռադիո, որպեսզի դա պատահել?
      course3_playlab_stage17_5: 'Կարող եք ավելացնել բլոկ միավոր կետը, երբ Waddles ասված մեջ ութոտնուկ, ապա տեղափոխել նրան Ռադիո, մինչեւ դուք միավոր:'
      course3_playlab_stage17_6: 'Կարող եք ավելացնել նյութից փոխել է հետին պլան եւ արագությունը Waddles, ապա տեղափոխել նրան Ռադիո, մինչեւ դուք միավոր:'
      course3_playlab_stage17_7: Create your own story. When youre done, click Finish to let friends try your story on their phones.
      course4_artist_fwp_challenge1: 'Փորձեք վազում այս ծրագիրը, եւ փոփոխություններ կատարել տեսնել, թե ինչ է տեղի ունենում: Կարող եք պարզել, թե ինչպես է այն աշխատում: (Կամ ջնջել այն եւ փոխարինել այն բանի հետ, բոլորովին տարբեր)'
      courseA_maze_seq2: Change the code to get me to the pig!
      courseA_maze_seq2_2018: Change the code to get me to the pig!
      courseC_PlayLab_events3: 'Կարո՞ղ ես գրել ծրագիր, որպեսզի շունը (կատարող 1) մետենա դեպի կատվին:'
      courseC_PlayLab_events3_2018: 'Կարո՞ղ ես գրել ծրագիր, որպեսզի շունը (կատարող 1) մետենա դեպի կատվին:'
      courseC_PlayLab_events3_2019: 'Կարո՞ղ ես գրել ծրագիր, որպեսզի շունը (կատարող 1) մետենա դեպի կատվին:'
      courseC_artist_prog5: |-
        This house needs a roof! Draw the triangle.  Hint:
        all three sides are the same length.
      courseC_artist_prog5_2018: |-
        This house needs a roof! Draw the triangle.  Hint:
        all three sides are the same length.
      courseC_artist_prog5_2019: |-
        This house needs a roof! Draw the triangle.  Hint:
        all three sides are the same length.
      courseC_maze_debugging10: "Debug this level by rearranging and changing\nblocks to get me to the pig!"
      courseD_artist_binary1: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \\\\r\n\\\\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      courseD_artist_binary1_2018: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \\\\r\n\\\\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      courseD_artist_binary1_2019: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \\\\r\n\\\\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      courseD_artist_binary4: "Can you draw this pattern by looping\njust three binary digits (0s and 1s)?"
      courseD_artist_binary4_2018: "Can you draw this pattern by looping\njust three binary digits (0s and 1s)?"
      courseD_artist_binary4_2019: "Can you draw this pattern by looping\njust three binary digits (0s and 1s)?"
      courseD_artist_binary6: "Which 6 digit binary string, repeated\n11 times, will draw this image?"
      courseD_artist_binary6_2018: "Which 6 digit binary string, repeated\n11 times, will draw this image?"
      courseD_artist_binary6_2019: "Which 6 digit binary string, repeated\n11 times, will draw this image?"
      courseD_artist_binary7: "What is the shortest binary string that\nyou can repeat to draw this image?"
      courseD_artist_binary7_2018: "What is the shortest binary string that\nyou can repeat to draw this image?"
      courseD_artist_binary7_2019: "What is the shortest binary string that\nyou can repeat to draw this image?"
      courseD_autorun_binary4_2019: "Can you draw this pattern by looping\njust three binary digits (0s and 1s)?"
      courseD_autorun_binary6_2019: "Which 6 digit binary string, repeated\n11 times, will draw this image?"
      courseD_autorun_binary7_2019: "What is the shortest binary string that\nyou can repeat to draw this image?"
      courseD_bee_debugging3: "Fix the error(s) to collect all of the nectar\nand make all of the honey."
      courseD_bee_nestedLoops3: "Collect all of the nectar from each flower.\nUse a nested loop."
      courseD_bee_nestedLoops5: "Collect all of the nectar from each flower\nand make honey at the honeycomb. \\\\r\n\\\\r\nUse a nested loop. "
      courseD_bee_nestedLoops6_2018: "Let's take this to another level! \\\\r\nUse\nloops to get me to the sunflower with the fewest loops possible."
      courseD_bee_nestedLoops8: "Collect all of the nectar from each flower\nand make honey at the honeycomb. \\\\r\n\\\\r\nUse a nested loop. "
      courseD_bee_nestedLoops8_2018: "Collect all of the nectar from each flower\nand make honey at the honeycomb. \\\\r\n\\\\r\nUse a nested loop. "
      courseD_bee_nestedLoops8_2019: "Collect all of the nectar from each flower\nand make honey at the honeycomb. \\\\r\n\\\\r\nUse a nested loop. "
      courseD_bounce_events10: 'Կա մի այժմ նպատակ վերեւում: Կցել «Հաշիվ կետը» եւ «միավոր մրցակցի point" նյութից է », երբ գնդակը նպատակին» եւ «երբ գնդակը սղում թիավարել» նյութից մի խաղ. Տես, թե քանի միավոր դուք կարող եք միավոր, նախքան ձեր հակառակորդին արդիւնքներ երկու անգամ:'
      courseD_bounce_events11: 'Այժմ կարող եք կցել նյութից է », երբ վազում» բլոկում. Դուք պետք է կցել նոր "գործարկել է նոր գնդակը» բլոկի ավելի քան մեկ տեղում: Բացի այդ, փորձում փոխելով տեսարանը կամ արագությունը թիավարել, եւ գնդակը, եւ տեսնել, թե ինչպես շատ միավոր դուք կարող եք միավոր, նախքան ձեր հակառակորդին արդիւնքներ երկու անգամ:'
      courseD_bounce_events12: Create your own Bounce game. You can change all the visuals and the rules. When youre done, click Finish to let friends try your game on their phones.
      courseD_bounce_events2: Կցել բլոկ է «Երբ աջ arrow» եւ «երբ մեկնել arrow" բլոկների. Տեղափոխել թիավարել է հասնել երկու ավարտի թիրախներ.
      courseD_bounce_events3: 'Այժմ նման բան, ինչպես նաեւ "երբ մինչեւ arrow» բլոկում. Տեղափոխել թիավարել դեպի ավարտի թիրախ վերեւում:'
      courseD_bounce_events3s: 'Այժմ նման բան, ինչպես նաեւ "երբ մինչեւ arrow» բլոկում. Տեղափոխել թիավարել դեպի ավարտի թիրախ վերեւում:'
      courseD_bounce_events4: Այս անգամ, դուք պետք է ավելացնել չորս նյութից. Տեղափոխել թիավարել բոլոր չորս ավարտի թիրախների ավարտելու այս հանելուկ.
      courseD_bounce_events4s: Այս անգամ, դուք պետք է ավելացնել չորս նյութից. Տեղափոխել թիավարել բոլոր չորս ավարտի թիրախների ավարտելու այս հանելուկ.
      courseD_bounce_events5: Were going to send a ball flying down towards the paddle. Attach a block to the "when ball hits paddle" block to ensure the ball reaches the finish target.
      courseD_bounce_events6: Այժմ Սալոնի թիրախը գտնվում է վերեւում. Դուք պետք է կցել նյութից, այնպես էլ "Երբ գնդակը հարվածում» բլոկների է լուծել այս հանելուկ.
      courseD_bounce_events7: 'Կցել նյութից յուրաքանչյուր «երբ» նյութից. Bounce գնդակը մինչեւ այն հարվածում է ավարտի թիրախին:'
      courseD_debugging_3: "Fix the error(s) to collect all of the nectar\nand make all of the honey."
      courseD_maze_nestedLoops4: "Get me to the sunflower using the fewest blocks\npossible!  \\\\r\n\\\\r\nTry using one `repeat` loop inside of another to cut down\non the amount of code you need."
      courseD_maze_nestedLoops4_2018: "Get me to the sunflower using the fewest blocks\npossible!  \\\\r\n\\\\r\nTry using one `repeat` loop inside of another to cut down\non the amount of code you need."
      courseD_maze_nestedLoops4_2019: "Get me to the sunflower using the fewest blocks\npossible!  \\\\r\n\\\\r\nTry using one `repeat` loop inside of another to cut down\non the amount of code you need."
      courseD_maze_nestedLoops6: "Let's take this to another level! \\\\r\nUse\nloops to get me to the sunflower with the fewest loops possible."
      courseD_maze_nestedLoops6_2018: "Let's take this to another level! \\\\r\nUse\nloops to get me to the sunflower with the fewest loops possible."
      courseD_maze_nestedLoops6_2019: "Let's take this to another level! \\\\r\nUse\nloops to get me to the sunflower with the fewest loops possible."
      courseE_artist_functions1: "\"Me zombie artist. Me love drawing!\"  \\r\n\\r\nHelp\nthe zombie draw square glasses.  \\r\n\\r\nThe bridge between the glasses is\n25 pixels shorter than the width of the squares."
      courseE_artist_functions1_2018: "\"Me zombie artist. Me love drawing!\"  \\r\n\\r\nHelp\nthe zombie draw square glasses.  \\r\n\\r\nThe bridge between the glasses is\n25 pixels shorter than the width of the squares."
      courseE_bee_concept1: "Collect all of the nectar from each flower.\nUse a nested loop."
      courseE_bee_concept1_2018: "Collect all of the nectar from each flower.\nUse a nested loop."
      courseE_bee_concept1_2019: "Collect all of the nectar from each flower.\nUse a nested loop."
      courseE_bee_functions1: Collect all the nectar from each flower.
      courseE_bee_functions1_2018: Collect all the nectar from each flower.
      courseE_bee_functions3: "Functions are blocks of code that perform\na task.  \\\\r\n\\\\r\nUse the `get 5` function to get 5 nectars at a time."
      courseE_bee_functions3_2018: "Functions are blocks of code that perform\na task.  \\\\r\n\\\\r\nUse the `get 5` function to get 5 nectars at a time."
      courseE_bee_functions4: "The `move and get nectar` function turns\nthe bee, collects nectar, and then returns the bee to where it started.  \\\\r\n\\\\r\nUse\nthe function to collect all of the nectar."
      courseE_bee_functions4_2018: "The `move and get nectar` function turns\nthe bee, collects nectar, and then returns the bee to where it started.  \\\\r\n\\\\r\nUse\nthe function to collect all of the nectar."
      courseE_farmer_concept4: "Now let's go one level deeper! We've\nnested that whole block of code into another loop, but you need to get the\nartist back in place to draw the next line. Which of these code blocks can\nyou place at the end of the outermost loop to draw the whole grid?"
      courseF_artist_for7: "Make three small changes to the\ncode from the last level to get this!"
      courseF_artist_for7_2018: "Make three small changes to the\ncode from the last level to get this!"
      courseF_artist_for7_2019: "Make three small changes to the\ncode from the last level to get this!"
      courseF_artist_for_challenge1: Can you figure out how to re-create this drawing?
      courseF_artist_for_challenge1_2018: Can you figure out how to re-create this drawing?
      courseF_artist_for_challenge1_2019: Can you figure out how to re-create this drawing?
      courseF_artist_for_challenge2: "Can you figure out how to re-create this drawing\nwith a single loop?"
      courseF_artist_for_challenge2_2018: "Can you figure out how to re-create this drawing\nwith a single loop?"
      courseF_artist_for_challenge2_2019: "Can you figure out how to re-create this drawing\nwith a single loop?"
      courseF_bee_for8: "You've got this! What should your\nincrement be to collect 3, 6, 9, 12, 15 nectar?"
      courseF_bee_for8_2018: "You've got this! What should your\nincrement be to collect 3, 6, 9, 12, 15 nectar?"
      courseF_bee_for8_2019: "You've got this! What should your\nincrement be to collect 3, 6, 9, 12, 15 nectar?"
      courseF_bee_for_challenge2: "Solve this puzzle using the fewest number of\nblocks possible."
      courseF_bee_for_challenge2_2018: "Solve this puzzle using the fewest number of\nblocks possible."
      courseF_bee_for_challenge2_2019: "Solve this puzzle using the fewest number of\nblocks possible."
      courseF_bee_for_challenge3: "Solve this puzzle using the fewest number of\nblocks possible."
      courseF_bee_functions4: "The `move and get nectar` function turns\nthe bee, collects nectar, and then returns the bee to where it started.  \\\\r\n\\\\r\nUse\nthe function to collect all of the nectar."
      courseF_bee_functions4_2018: "The `move and get nectar` function turns\nthe bee, collects nectar, and then returns the bee to where it started.  \\\\r\n\\\\r\nUse\nthe function to collect all of the nectar."
      flappy_1: 'Կցել բլոկ է », երբ սեղմեք" բլոկի, այնուհետեւ սեղմեք «Run»: Սեղմեք կամ թակել էկրանին տեղափոխել Flappy դեպի թիրախ:'
      flappy_11: Create your own Flappy game. You can change all the visuals and all the rules, even the gravity. When youre done, click Finish to let friends try your game on their phones.
      flappy_11_2018: Create your own Flappy game. You can change all the visuals and all the rules, even the gravity. When youre done, click Finish to let friends try your game on their phones.
      flappy_1_2018: 'Կցել բլոկ է », երբ սեղմեք" բլոկի, այնուհետեւ սեղմեք «Run»: Սեղմեք կամ թակել էկրանին տեղափոխել Flappy դեպի թիրախ:'
      flappy_2: Now weve added some ground.  Attach a block to the "when hit the ground" block.  Your code needs to END GAME when Flappy crashes.
      flappy_2_2018: Now weve added some ground.  Attach a block to the "when hit the ground" block.  Your code needs to END GAME when Flappy crashes.
      flappy_3: The "Երբ վազում» դաշինքը թույլ է տալիս Ձեզ առաջադրվել կոդը, երբ ձեր խաղը սկսվում. Փորձեք ընդլայնված մակարդակի արագությունը եւ flapping է թիրախ.
      flappy_3_2018: The "Երբ վազում» դաշինքը թույլ է տալիս Ձեզ առաջադրվել կոդը, երբ ձեր խաղը սկսվում. Փորձեք ընդլայնված մակարդակի արագությունը եւ flapping է թիրախ.
      flappy_4: Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the "when hit an obstacle" block. Your code needs to END GAME when Flappy crashes into the first set of pipes.
      flappy_4_2018: Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the "when hit an obstacle" block. Your code needs to END GAME when Flappy crashes into the first set of pipes.
      flappy_5: Lets add a scoreboard, and count points when Flappy makes it past obstacles. Add to the "when pass an obstacle" block, and then score a point by flying Flappy through the first set of pipes.
      flappy_5_2018: Lets add a scoreboard, and count points when Flappy makes it past obstacles. Add to the "when pass an obstacle" block, and then score a point by flying Flappy through the first set of pipes.
      flappy_6: 'Տես, եթե դուք կարող եք դեռ միավոր մի կետ կատարելուց հետո Flappy տատանել կամ փոքր կամ մեծ չափի գումար:'
      flappy_6_2018: 'Տես, եթե դուք կարող եք դեռ միավոր մի կետ կատարելուց հետո Flappy տատանել կամ փոքր կամ մեծ չափի գումար:'
      flappy_7: Հաջորդը, փորձեք փոխել տեսարանը կցելով մեկ այլ բլոկ է », երբ վազում» բլոկում.
      flappy_7_2018: Հաջորդը, փորձեք փոխել տեսարանը կցելով մեկ այլ բլոկ է », երբ վազում» բլոկում.
      flappy_8: Դուք կարող եք սահմանել visuals ցանկացած ժամանակ, այլ ոչ թե միայն այն ժամանակ, երբ խաղը սկսվում. Փորձեք ընդլայնված պատահական տեսարանը, երբ այլ միջոցառումներ տեղի ունենալ, օրինակ, երբ անցնող խոչընդոտ.
      flappy_8_2018: Դուք կարող եք սահմանել visuals ցանկացած ժամանակ, այլ ոչ թե միայն այն ժամանակ, երբ խաղը սկսվում. Փորձեք ընդլայնված պատահական տեսարանը, երբ այլ միջոցառումներ տեղի ունենալ, օրինակ, երբ անցնող խոչընդոտ.
      flappy_9: Խառնել բաներ են, երբ հարվածում է խոչընդոտ, այլ ոչ թե ավարտվում խաղը փորձեք հաշիվը ետ 0.
      flappy_9_2018: Խառնել բաներ են, երբ հարվածում է խոչընդոտ, այլ ոչ թե ավարտվում խաղը փորձեք հաշիվը ետ 0.
      frozen circle function in circle: "Now let's create 20 overlapping\ncircles, turning 18 degrees between each circle."
      frozen circle function with parameter: "Here's a ”Create circle”\nblock that can make circles of different sizes. Can you use this to create\na small circle of size 5 and a larger circle of size 10?"
      frozen circle function: "Use the new “Create a circle” block to\ncreate 10 overlapping circles. Don't forget to jump forward between circles."
      frozen circle: "A circle is a special shape. Can you figure out\nwhat number to replace the question marks with to draw a circle?"
      frozen cross rotate dense: "Let's repeat it 90 times! How many\ntimes does 90 go into 360? Hint: It's a really small number."
      frozen cross rotate: "Now try repeating it 10 times. How many degrees\ndo you need to turn between each line?"
      frozen cross: "Wrap a “Repeat” block around these commands to create\na plus sign. Did you notice Elsa can move forward and backward?"
      frozen diamond mini snowflake: "Did you know every snowflake is\na different shape? Let's create a new snowflake by using another “Repeat\"\nblock to repeat a parallelogram 4 times, turning right by 90 degrees between\neach parallelogram."
      frozen diamond snowflake: "Now, let's create a new snowflake by\nusing the repeat block to repeat a parallelogram 10 times, turning right by\n36 degrees between each one."
      frozen diamond: "Use a repeat around these blocks to create a parallelogram.\nIt's just like a rectangle but has different angles. This one has 60 degree\nand 120 degree angles instead of all 90 degree angles."
      frozen freeplay: "You've officially become a master artist!\nCreate a winter wonderland."
      frozen line: 'Բարև: Ես Էլզան եմ Էռենդելլաից: Օգնիր ինձ մի գիծ գծել:'
      frozen perpendicular: "Now let's see if we can create two lines\nthat are at a 90 degree angle to each other. You will need to use the “Turn”\nblock as well as the “Move” block."
      frozen snowflake branch: "Try using the ”Create a snowflake branch”\nblock to create three branches, which starts to look like a snowflake."
      frozen snowflake full: "Now let's repeat it 8 times to make a\nbeautiful snowflake!"
      frozen snowflower: "Intricate snow patterns can be created with\nvery simple shapes. Can you make a pattern by repeating 5 circles of size\n5 and 5 circles of size 10?"
      frozen square iterative: 'Կարծես մենք  քառակուսի գծելու կես ճանապարհինենք: Արի գծենք 4 գիծ այնպես, որ ստացվի քառակուսի:'
      frozen square loop 3x: "Let's create three squares, turning after\neach square. Be sure to turn by 120 degrees before each new square."
      frozen square loop: "Hi, I’m Anna of Arendelle! Let’s make a square\nwith the “Repeat” block, which uses fewer blocks. How many times (???) should\nthe “Repeat” block loop the blocks inside it to make a square?"
      frozen square snowflake: "Can you create a snowflake using the\n“Repeat” block to make a square 10 times, and the “Turn” block to turn 36\ndegrees between each square?"
      grade1_maze_sequence1: Change the code to get me to the pig!
      grade1_maze_sequence2: Change the code to get me to the pig!
      grade1_maze_sequence5: Move one way, then another to get me to the pig!
      grade1_maze_sequence6: "Figure out what is missing and then add blocks\nto get me to the pig!"
      grade1_maze_sequence9: 'Go around the TNT to get me to the pig! '
      grade2_CaringForNewPet_10: Տա՛ր ինձ խոզի մոտ։
      grade2_CaringForNewPet_5: Տա՛ր ինձ խոզի մոտ։
      grade2_MakeDogTag_10: Now, draw anything you like!
      grade2_MakeDogTag_3: |-
        Help me complete the house for this cat.
      grade2_MakeDogTag_4: |-
        This house needs a roof! Draw the triangle.  Hint:
        all three sides are the same length.
      grade2_MakeDogTag_6: 'Free-play! Draw anything you''d like.'
      grade2_MakeDogTag_8: "Now let's connect a bunch of V's together\nin a loop."
      grade2_MakeDogTag_9: "Rebuild the code from the last puzzle,\nbut this time, add a left turn of 30 degrees inside the loop. Now, repeat\nit 24 times instead of 7."
      grade2_PuppyLoops_1: "Can you get me to the pig using 5 of the same\nkind of blocks?"
      grade2_PuppyLoops_10: |-
        My teacher says that I should finish what
        I start!\\r
        \\r
        Help me finish my pinwheel. Can you figure out what's wrong?
      grade2_PuppyLoops_2: "Can you get to the pig by creating a loop that uses\nonly one `move forward` block inside of a `repeat`?"
      grade2_PuppyLoops_4: "In this puzzle, two `repeat` loops will help you\nget to the pig with the fewest number of blocks!"
      grade2_PuppyLoops_5: "Can you figure out the fastest way to get\nme to the pig?"
      grade2_PuppyLoops_7: Use what you learned to get me to the sunflower!
      grade2_PuppyLoops_8: "This code for the cat's whiskers is wrong.\n\\r\n\\r\nFix this code to draw whiskers that are all the same length."
      grade2_PuppyLoops_9: |-
        Looks like the C in code is drawn backwards!\\r
        \\r
        Can
        you make it look like a C again?
      grade2_puppy_loops2: "Can you get to the pig by creating a loop that uses\nonly one `move forward` block inside of a `repeat`?"
      grade2_puppy_loops4: "In this puzzle, two `repeat` loops will help you\nget to the pig with the fewest number of blocks!"
      grade3_ConditionalsElse_1: "This cloud is blocking my view! Check\nto see if there's a flower under the cloud, and only get nectar if there's\na flower. Be careful, it can change!"
      grade3_ConditionalsElse_2: "More clouds! \\r\n\\r\nCheck underneath\nevery cloud to see if it is hiding a flower before you get nectar.  \\r\n\\r\nRemember:\nNot all clouds hide the same thing!"
      grade3_ConditionalsElse_3: "Now I just want to make honey. Some of\nthese clouds might have honeycombs under them. Be sure to check each cloud!"
      grade3_ConditionalsElse_4: "Sometimes this cloud covers a flower,\nand sometimes it covers a honeycomb! Use the if/else block to collect nectar\nif it is a flower, else to make honey (because it is a honeycomb)."
      grade3_ConditionalsElse_5: |-
        There will be either a flower or a honeycomb
        under each of those clouds!\\r
        \\r
        Use the `if/else` block to collect nectar
        if there is a flower.\\r
        Otherwise, make honey (because there is a honeycomb).
      grade3_ConditionalsElse_6: "I am not sure how much nectar this flower\nhas, but I know it has either 1, 2, or 3 nectar. \\r\n\\r\nCombine the conditional\nblocks (`if` and/or `if/else`) to only get as much nectar as the flower has.\n\\r\n\\r\nRemember, the amount of nectar can change each time you run the puzzle!"
      grade3_ConditionalsElse_7: "These flowers can have 3, 2, or 1 nectar.\n\\r\n\\r\nComplete the `check purple flower` function and use it to collect\nall of the nectar at the flowers."
      grade3_ConditionalsElse_8: "Write the function for `check flower make\nhoney`. \\r\n\\r\nYour function should check if the purple flower has 3, 2,\nor 1 nectar and get all of the nectar. \\r\nThen, move forward and make honey."
      grade3_ConditionalsElse_9: "**Assessment:** This cloud\nis either hiding a flower with one nectar or a honeycomb that needs one honey.  \\r\n\\r\nComplete\nthe `get nectar or make honey` function, then call it to collect the nectar\nor honey. \\r\n"
      grade3_ConditionalsElse_TeacherIDo: |-
        There will be either a flower or a honeycomb
        under each of those clouds!\\r
        \\r
        Use the `if/else` block to collect nectar
        if there is a flower.\\r
        Otherwise, make honey (because there is a honeycomb).
      grade3_Conditionals_1 BAD: Use a loop to collect all of the nectar.
      grade3_Conditionals_1: "I'm a hungry bee! \\r\nHelp me collect\nall of the nectar from the flowers using the fewest number of blocks."
      grade3_Conditionals_10 BAD: "Gather nectar from the rows of flowers!\nUse a nested loop."
      grade3_Conditionals_10: |-
        There's a lot happening here!\\r
        \\r
        Use
        what you've learned to collect all of the nectar and then make the honey.
      grade3_Conditionals_11 BAD: "Assessment: Use a `while` loop to\ncollect all of the nectar from these flowers."
      grade3_Conditionals_11: |-
        Let's put everything together!\\r
        \\r
        Use
        what you've learned to help me collect nectar only from flowers that have
        it, using as few blocks as possible.  Don't forget to make honey at the end.
      grade3_Conditionals_12: "This stair step pattern should look familiar.  \\r\n\\r\nCan\nyou collect nectar only from the flowers that have some, using as few blocks\nas possible?"
      grade3_Conditionals_13: "Assessment: Collect all of\nthe nectar. Be careful not to try to collect nectar from a purple flower if\nit doesn't have any."
      grade3_Conditionals_2: "Look at all of that nectar!\\r\n\\r\nHelp\nme collect the nectar and make the honey using as few blocks as you can.  "
      grade3_Conditionals_3: "Be careful not to collect nectar from\na purple flower if it doesn't have any. \\r\nYou must first check if the nectar\nis equal to 1 using the `if nectar` block."
      grade3_Conditionals_4: "Check this flower with an \"if\" block\nto see if there is any nectar available."
      grade3_Conditionals_5: "Collect nectar from each flower only if\nit has any."
      grade3_Conditionals_6: "This field has red and purple flowers.\nRed flowers have a known nectar amount, but purple flower nectar is unknown.\nCollect all the nectar."
      grade3_Conditionals_7: Collect all the nectar from each flower.
      grade3_Conditionals_8: "I wonder what's out there!\\r\n\\r\nHelp\nme fly around the yard and collect nectar only from the flowers that have\nsome. "
      grade3_Conditionals_9: "Help me find all of the nectar using\nas few blocks as possible!"
      grade3_Conditionals_TeacherIDo: "Check this flower with an \"if\" block\nto see if there is any nectar available."
      grade3_Debugging_1: "These blocks are really bugging me. Fix the\nerror(s) to collect all of the nectar."
      grade3_Debugging_5: "That flower looks tasty! \\r\n\\r\nFix the\nerror(s) to collect all of the nectar.  You can now use both run and step."
      grade3_Debugging_6: |-
        What a sweet challenge!\\r
        \\r
        Fix the error(s)
        to collect all of the nectar.
      grade3_Debugging_7: "Fix the error(s) to collect all of the nectar\nand make all of the honey."
      grade3_Debugging_9: |-
        "Bee" patient with this one!\\r
        \\r
        You
        will need to fix a couple of things in this program to collect all of the
        nectar and make all of the honey.
      grade3_Debugging_TeacherIDo: "These blocks are really bugging me. Fix the\nerror(s) to collect all of the nectar and make all of the honey."
      grade3_Loops_10: |-
        Such a busy bee!\\r
        \\r
        Help bee collect all
        of the nectar and make all of the honey with the fewest blocks possible.
      grade3_Loops_11: "The shape of this path is different than the\nothers. \\r\n\\r\nCan you collect all of the nectar using as few blocks as possible?"
      grade3_Loops_12: "Can you find the quickest way for the bee to\ncollect all of the nectar and make all of the honey?"
      grade3_Loops_2: This time, use a loop to gather all of the nectar.
      grade3_Loops_3: Use a `repeat` loop to collect all of the nectar.
      grade3_Loops_4: "Now use the `repeat` block to collect all of\nthe nectar and make all of the honey."
      grade3_Loops_5: "What a beautiful field of flowers!   Help the\nbee visit each one.  Can you find a way to do it with fewer than 7 blocks?"
      grade3_Loops_6: "How many times can loops help you in this puzzle?  \\r\n\\r\nLoops\nare your friend! Use a few of them to complete this puzzle with the fewest\nblocks possible."
      grade3_Loops_7: |-
        Those flowers look tasty!\\r
        \\r
        Collect nectar
        from each of the flowers using the fewest blocks possible.
      grade3_Loops_8: "Collect all the nectar and make all of the honey\nusing the fewest blocks possible."
      grade3_Loops_9: "Collect nectar from each flower and make honey\nat each honeycomb using the fewest blocks possible."
      grade3_Loops_TeacherIDo: |-
        Those flowers look tasty!\\r
        \\r
        Collect nectar
        from each of the flowers using the fewest blocks possible.
      grade3_bee_conditionals_quantum2: "More clouds! \\r\n\\r\nCheck underneath\nevery cloud to see if it is hiding a flower before you get nectar.  \\r\n\\r\nRemember:\nNot all clouds hide the same thing!"
      grade3_maze_Loop1: "Assessment:  Get me to the sunflower\nusing only 5 blocks!"
      grade3_maze_loops2: "Get me to the sunflower using the fewest blocks\npossible!  \\\\r\n\\\\r\nTry using one `repeat` loop inside of another to cut down\non the amount of code you need."
      grade3_maze_loops3: "Let's take this to another level! \\\\r\nUse\nloops to get me to the sunflower with the fewest loops possible."
      grade3_maze_loops4: 'Ինձ արևածաղկի մետ տա՛ր՝ օգտագորելով հնարավորինս քիչ բլոկներ:'
      grade3_maze_loops5: "Get me to the sunflower using the fewest blocks\npossible!"
      grade3_maze_nestedLoops1: "Can you get me to the pig using 5 of the same\nkind of blocks?"
      grade3_maze_nestedLoops2: "Can you get to the pig by creating a loop that uses\nonly one `move forward` block inside of a `repeat`?"
      grade3_maze_nestedLoops3: Get me to the pig by adding only one block
      grade3_maze_nestedLoops4: "In this puzzle, two `repeat` loops will help you\nget to the pig with the fewest number of blocks!"
      grade3_robotFarmer_ConditionalsIntro_11: 'Its still dark outside. Move me along the field. If there is a pile, remove it, and if there is a hole, fill it in. Hint: ''օգտագործել dropdown մենյու տարբերակների վրա «Եթե» բլոկում.'''
      grade3_robotFarmer_ConditionalsIntro_6: Remove all the piles of dirt, using as few blocks as possible. The new options in the dropdown menu on the "while" block tell me if Im standing on a pile or a hole.
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1: 'Օգնիր ինձ լրացնել բոլոր այդ անցքերի 5 գարին հող. Ակնարկ «Դուք կարող եք տեղադրել« Կրկնել »բլոկի ներսում», իսկ «բլոկում.'
      grade4_arist_nested_loop_circles1: "Assessment: Use a nested loop to\ncomplete the design."
      grade4_arist_nested_loop_flags1: Loop the given code to create a windmill.
      grade4_arist_nested_loop_polygons1: "Loop this design 10 times. \\r\n\\r\nHow much\ndo you have to turn each time you loop?"
      grade4_arist_nested_loop_polygons2: "Loop this shape 6 times. \\r\n\\r\nHow much\ndo you have to turn each time you loop? "
      grade4_arist_nested_loop_squares1: "Can you draw these 10 squares of this sidewalk\nusing a nested loop? Each square is 30 pixels."
      grade4_arist_nested_loop_triangles2: "Now nest this loop inside another loop to\ndraw 10 triangles.  This is called a \"nested\" loop."
      grade4_arist_nested_loop_triangles3: "Can you draw a hexagon by looping the triangle\ncode?"
      grade4_arist_nested_loop_triangles4: Draw the teeth in the alligator's mouth!
      grade4_arist_nested_loop_triangles5: |-
        Create a sun by nesting the starter code in
        another loop.\\r
        \\r
        To get this cool design with a hollow center, you'll
        need to jump forward by the length of the triangle before turning.
      grade4_arist_nested_loop_triangles6: "Can you draw these 36 triangles using a nested\nloop?"
      grade4_artist_functions1: "\"Me zombie artist. Me love drawing!\"  \\r\n\\r\nHelp\nthe zombie draw square glasses.  \\r\n\\r\nThe bridge between the glasses is\n25 pixels shorter than the width of the squares."
      grade4_artist_functions2: "Functions let you define new blocks! \\r\n\\r\nWe've\nmoved the blocks needed for drawing a square into a function called `draw\na square`. This time, use the `draw a square` function to create the glasses.\n\\r\n\\r\nThe squares are 75 pixels apart."
      grade4_artist_functions_challenge: "Use the suggested functions to draw four rows\nof hexagons. Notice how our even numbered rows are shifted to the right?"
      grade4_artist_functions_challenge2: "Use the suggested functions to draw four rows\nof hexagons. Notice how our even numbered rows are shifted to the right?"
      grade4_artist_nestedLoops_challenge: |-
        Click here to see the full instructions again!\\r
        \\r
        Here
        is the code for an interesting shape.  What happens when you repeat it multiple
        times, turning between each iteration?   Notice that the turns in this shape
        add up to 420 degrees, which means that when your artist is done drawing,
        it will be facing a different direction than when you started.  That new direction
        is exactly 60 degrees to the right of where you began.
      grade4_artist_nestedLoops_challenge2: "Now for a challenge!  Feel free to use trial\nand error. You are not expected to get the image perfect the first time.   Want\nto see more hints?  Click here!"
      grade4_artist_nested_loop_circles1: "Assessment: Use a nested loop to\ncomplete the design."
      grade4_artist_nested_loop_flags1: Loop the given code to create a windmill.
      grade4_artist_nested_loop_polygons1: "Loop this design 10 times. \\r\n\\r\nHow much\ndo you have to turn each time you loop?"
      grade4_artist_nested_loop_squares1: "Can you draw these 10 squares of this sidewalk\nusing a nested loop? Each square is 30 pixels."
      grade4_artist_nested_loop_triangles1: "Complete the code to draw these triangles.  The\nfirst one is done for you.  Hint:  3 triangles in a 360 degree rotation."
      grade4_artist_nested_loop_triangles5: |-
        Create a sun by nesting the starter code in
        another loop.\\r
        \\r
        To get this cool design with a hollow center, you'll
        need to jump forward by the length of the triangle before turning.
      grade4_artist_nested_loop_triangles6: "Can you draw these 36 triangles using a nested\nloop?"
      grade4_artist_parameters_squares1: "Click \"edit\" to fill in the function\ndefinition of \"draw a square\" and add a parameter. It should take a length\nparameter, just like the triangle. This time, draw 3 squares: 25, 50 and 75\npixels in length, each 100 pixels apart."
      grade4_artist_parameters_triangles2: "Do you notice anything different\nabout these function blocks? Click “Run” to see what happens."
      grade4_artist_parameters_triangles2b: "Can you complete this drawing? The\nsides of each triangle are 25 pixels larger than the last.  The first triangle\nhas 25 pixel sides."
      grade4_artist_parameters_triangles3: "Can you complete this drawing? The\nsides of each triangle are 25 pixels larger than the last.  The first triangle\nhas 25 pixel sides."
      grade4_artist_parameters_triangles4: "The code for this triangle function\nis broken. Can you edit the function to fix it, and then make triangles of\nlength 25, 50, and 75?"
      grade4_artist_parameters_trianglesx: "Can you complete this drawing? The\nsides of each triangle are 25 pixels larger than the last.  The first triangle\nhas 25 pixel sides."
      grade4_bee_conditionals_quantum1: "This cloud is blocking my view! Check\nto see if there's a flower under the cloud, and only get nectar if there's\na flower. Be careful, it can change!"
      grade4_bee_conditionals_quantum2: "More clouds! \\r\n\\r\nCheck underneath\nevery cloud to see if it is hiding a flower before you get nectar.  \\r\n\\r\nRemember:\nNot all clouds hide the same thing!"
      grade4_bee_conditionals_quantum4: "Sometimes this cloud covers a flower,\nand sometimes it covers a honeycomb! Use the if/else block to collect nectar\nif it is a flower, else to make honey (because it is a honeycomb)."
      grade4_bee_conditionals_quantum5: |-
        There will be either a flower or a honeycomb
        under each of those clouds!\\r
        \\r
        Use the `if/else` block to collect nectar
        if there is a flower.\\r
        Otherwise, make honey (because there is a honeycomb).
      grade4_bee_functions1: Collect all the nectar from each flower.
      grade4_bee_functions2: "Functions are blocks of code that perform\na task. Use the \"get 2 nectar\" function to collect the nectar from each\nflower."
      grade4_bee_functions3: "Functions are blocks of code that perform\na task.  \\\\r\n\\\\r\nUse the `get 5` function to get 5 nectars at a time."
      grade4_bee_functions4: "The `move and get nectar` function turns\nthe bee, collects nectar, and then returns the bee to where it started.  \\\\r\n\\\\r\nUse\nthe function to collect all of the nectar."
      grade4_bee_nestedLoops0: Use a loop to collect all of the nectar.
      grade4_bee_nestedLoops1: "Collect all of the nectar from each flower.\nUse a nested loop."
      grade4_bee_nestedLoops3: "Collect all of the nectar by creating\na nested loop."
      grade4_bee_nestedLoops4: "Collect all of the nectar from each flower\nand make honey at the honeycomb. \\\\r\n\\\\r\nUse a nested loop. "
      grade4_frozen_freeplay: "You've officially become a master artist!\nCreate a winter wonderland."
      grade4_frozen_functions0: Կարող եք պարզել, թե ինչ թիվ է փոխարինել հարցականներով հետ հրավիրել մի շրջան.
      grade4_frozen_functions1a: "Use the new “Create a circle” block to\ncreate 10 overlapping circles. Don't forget to jump forward between circles."
      grade4_frozen_functions2: "Now let's create 20 overlapping\ncircles, turning 18 degrees between each circle."
      grade4_frozen_functions3: "Here's a ”Create circle”\nblock that can make circles of different sizes. Can you use this to create\na small circle of size 5 and a larger circle of size 10?"
      grade4_frozen_functions4: "Intricate snow patterns can be created with\nvery simple shapes. Can you make a pattern by repeating 5 circles of size\n5 and 5 circles of size 10?"
      grade4_frozen_nested_loop_diamonds2: "Did you know every snowflake is\na different shape? Let's create a new snowflake by using another “Repeat\"\nblock to repeat a parallelogram 4 times, turning right by 90 degrees between\neach parallelogram."
      grade4_frozen_nested_loop_diamonds3: "Now, let's create a new snowflake by\nusing the repeat block to repeat a parallelogram 10 times, turning right by\n36 degrees between each one."
      grade4_frozen_square: "Hi, I’m Anna of Arendelle! Let’s make a square\nwith the “Repeat” block, which uses fewer blocks. How many times (???) should\nthe “Repeat” block loop the blocks inside it to make a square?"
      grade4_frozen_square_loop1: "Hi, I’m Anna of Arendelle! Let’s make a square\nwith the “Repeat” block, which uses fewer blocks. How many times (???) should\nthe “Repeat” block loop the blocks inside it to make a square?"
      grade4_frozen_square_loop2: "Let's create three squares, turning after\neach square. Be sure to turn by 120 degrees before each new square."
      grade4_frozen_square_loop3: "Can you create a snowflake using the\n“Repeat” block to make a square 10 times, and the “Turn” block to turn 36\ndegrees between each square?"
      grade4_playlab_freeplay: "It's free play time! Have fun\nwith all the blocks in your tool box."
      grade4_playlab_test: |-
        Use the right arrow to shoot hearts.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a heart. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      grade4_playlab_test2: "Here's a function called `jump` that\ncauses your main character to jump up 100 pixels. Run the program and use\nthe jump function to collect all of the flags by moving the dog with the arrow\nkeys."
      grade4_review_artist1: 'Ողջու՜յն, ես նկարիչ եմ: Կարող ես կոդ գրել, որ ես ցանկացած բան գծեմ: Օգտագործի՛ր մի քանի բլոկ, որ նկարում մոխրագույն գծերով անցնեմ: (Յուրաքանչյուր գիծ 100 պիկսել երկարություն ունի)'
      grade4_review_artist2: "This house needs a roof! Draw the triangle.  Hint:\nall three sides are the same length."
      grade4_review_artist3: "The jump block moves the artist without drawing.\nDraw the dashed line using both the `jump forward` and `move forward` blocks."
      grade4_review_bee1: "Now use the `repeat` block to collect all of\nthe nectar and make all of the honey."
      grade4_review_bee2: "Collect nectar from each flower and make honey\nat each honeycomb using the fewest blocks possible."
      grade4_review_bee3: |-
        Such a busy bee!\\r
        \\r
        Help bee collect all
        of the nectar and make all of the honey with the fewest blocks possible.
      grade5_artist_binary1: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \\r\n\\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      grade5_artist_binary10: Click here to see hints.
      grade5_artist_binary11: "Free Play: Here's a blank\ncanvas for you to draw on.  Have fun!"
      grade5_artist_binary2: "Here's a function that takes a binary\nstring of 1's and 0's and instructs the artist to follow them from left\nto right, top to bottom.  The artist will fill-in the squares when it sees\na 1 and ignore the square when it sees a 0. \\r\n\\r\nRun this code to see how\nthe artist uses binary to draw this pattern."
      grade5_artist_binary3: "Which of these binary strings could\nyou loop 8 times to draw this image?"
      grade5_artist_binary4: "Can you draw this pattern by looping\njust three binary digits (0s and 1s)?"
      grade5_artist_binary5: "Each binary string represents one row\nof this picture. Can you rearrange them so it draws a smiley face instead\nof a frowny face?"
      grade5_artist_binary6: "Which 6 digit binary string, repeated\n11 times, will draw this image?"
      grade5_artist_binary7: "What is the shortest binary string that\nyou can repeat to draw this image?"
      grade5_artist_binary8: Finish this drawing.
      grade5_artist_binary9: |-
        Here's a higher resolution
        canvas to draw on - 16 pixels by 16 pixels!\\r
        \\r
        See what happens when we
        start to get creative with the bits?
      grade5_artist_for_loops1: "Use a repeat block to draw this triangle\nthat is 50 pixels wide."
      grade5_artist_for_loops5: |-
        Just one little change to the code
        from the last image can create this drawing. Can you figure out what that
        change is?\\r
        \\r
        Hint:  You need to remove something!
      grade5_artist_for_loops6: "If you turn a little bit more or\nless than you normally would for a shape, it creates a neat effect. Try using\nsome of the code from the last level, but turning 89 degrees to create this\ntwisted square spiral."
      grade5_artist_for_loops7: "Make three small changes to the\ncode from the last level to get this!"
      grade5_artist_for_loops8: "Remember back in a previous stage\nwhen we used a variable to control the number of sides in a shape? We are\ngoing to do the same thing with the `counter` variable now. This pattern starts\nwith a triangle and adds one side at a time until it draws a decagon (10 sides).\nEach side should be 100 pixels long."
      grade5_artist_for_loops9: |-
        Let's put it all together!  Using
        your knowledge of `for` loops and the `counter` variable, create this drawing
        where each shape has two more sides than the last.  Make sure that each side
        is 10 times as long as the number of sides in the polygon.\\r
        \\r
        Very little
        of the code has been provided for you.
      grade5_artist_for_loopsfreeplay11: |-
        Free-Play Inspiration: You've
        now learned everything you need to know to make a pattern like this! If this
        picture inspires you, try to make something similar. Otherwise, create something
        all your own.\\r
        \\r
        Need a hint? Click here.
      grade5_artist_functionparameters10: "Free Play Inspiration: You've\nnow learned everything you need to know to make a pattern like this! If this\npicture inspires you, try to make something similar. Otherwise, create something\nall your own.\\r\n \\r\nWant to know how our inspiration pattern was made? "
      grade5_artist_functionparameters11: "Freeplay: Here are the functions\nyou've written, and some more for you to play with. Draw something awesome!\nPlay with the pen width to see how different your drawings look!"
      grade5_artist_functionparameters7: "This image is similar to the last.\nCan you use a `for` loop with your function to make this design?"
      grade5_artist_functionparameters8: "Let's edit this \"draw a polygon\"\nfunction. It already has a \"sides\" parameter. Now, let's add a \"length\"\nparameter. \\\\r\nThe perimeter of each shape is 200 pixels long. Do you remember\nthe equation to make shapes the same size when they have a different number\nof sides?"
      grade5_artist_functionparameters_6: |-
        Can you complete this drawing?
        The sides of all the shapes are 100 pixels long.
      grade5_artist_parameters_squares1: "Click \"edit\" to fill in the function\ndefinition of \"draw a square\" and add a parameter. It should take a length\nparameter, just like the triangle. This time, draw 3 squares: 25, 50 and 75\npixels in length, each 100 pixels apart."
      grade5_artist_parameters_triangles2a: "Do you notice anything different\nabout these function blocks? Click “Run” to see what happens."
      grade5_artist_parameters_triangles4: "The code for this triangle function\nis broken. Can you edit the function to fix it, and then make triangles of\nlength 25, 50, and 75?"
      grade5_artist_variables_freeplay10: "Free Play: Experiment with the number\nof sides this shape has. Can you change the algorithm so that the overall\nsize of the shape stays the same, no matter how many sides it has? Hint: If\nyou divide your starting length by the number of sides, the length of each\nside will get shorter as the number of sides gets higher."
      grade5_artist_variables_freeplay14: |-
        Free Play: Check it out! Now your algorithm
        is nested within one more loop. Experiment with changing the values of your
        two variables to draw cool patterns.\\r
        \\r
        For even more effect, try playing
        with color!  Use random colors inside loops to see how it changes your design.
      grade5_artist_variables_freeplay15: |-
        Want a second peek at the inspiration design
        or the hints?  Click here!\\r
        \\r
        Otherwise, make a design all your own!
      grade5_artist_variables_freeplay16: "Still playing?  Here is a blank canvas where\nyou can create whatever you want!"
      grade5_artist_variables_hexagons1: "Let's try it again! \\r\n\\r\nCan you\nset the `length` variable to 60 to make this cool design with hexagons?"
      grade5_artist_variables_letterT11: "Here’s more complicated code using the\nsame concepts from the last puzzle - what should you set the \"sides\" variable\nto in order to draw this picture made of squares?"
      grade5_artist_variables_octagons13: "When a shape has lots of sides, each\nside needs to be shorter if you want the whole pattern to fit on the screen.\n\\r\nLet's recreate the algorithm for this amazing pattern, but instead of\nmanually setting the `length` variable, let's use a math block with the `sides`\nvariable inside to make sure that each shape fits correctly. The perimeter\nof each polygon is 300 pixels.\\r\nNeed some hints?  Click here."
      grade5_artist_variables_pentagon8: |-
        Use what you learned in the last puzzle
        to create this hexagon using the "sides" variable.\\r
        \\r
        See how you could
        change just one value to draw a triangle,  square, pentagon, or octagon?
      grade5_artist_variables_pentagon9: "Now, recreate the algorithm from\nthe last level and create a pentagon with sides of length 150."
      grade5_artist_variables_pentagons1: "Draw this pattern of pentagons with\n100 pixel sides by setting the right value for `length` and dropping the `length`\nvariable into all of the the correct places. \\r\n\\r\nSee how you only have\nto set the value for `length` once, and the code uses the right value everywhere?"
      grade5_artist_variables_pentagons12: "Let's set the \"sides\" variable to\n5. The more sides we add to this algorithm, the bigger this whole pattern\ngets! Notice that there is another variable called \"length\". We can now\nuse that wherever we have a \"move forward.\" Set the \"length\" variable\nto 75 for this shape."
      grade5_artist_variables_rectangle6: "Now I want to make a rectangle that is\ntwice as tall as it is wide. We've got a variable called \"width\" that needs\nto be set to 100. Can you use the math blocks to complete the code?"
      grade5_artist_variables_square7: |-
        Here’s some code that can draw any regular
        polygon. There’s a new variable called sides that is set to 4. Can you use
        the sides variable (along with the math block) to turn the right amount regardless
        of how many sides there are in the polygon?\\r
        \\r
        Click here to go back to
        the hint!
      grade5_artist_variables_triangles2: "Instead of using \"move forward by 150,\"\nthe \"move\" block is now referencing a variable called \"length.\" Can you\nset \"length\" to 150 to draw this new triangle?"
      grade5_artist_variables_triangles3: "Drag a number block to both the `set\nlength` block and the `repeat _ times` block to draw a set of 50 pixel triangles."
      grade5_bee_for_loops1: "Use a loop to collect the nectar\nfrom each flower."
      grade5_bee_for_loops2: "Add the code necessary to make sure\nthe bee collects all the nectar. Look at how much code you need for this puzzle!\n(We'll learn a simpler way in the next puzzle.)"
      grade5_bee_for_loops6: "You can also use a \"for loop\"\nto count down. Try gathering this nectar by counting down from 5 to 1 by 1."
      grade5_bee_for_loops8: "You've got this! What should your\nincrement be to collect 3, 6, 9, 12, 15 nectar?"
      grade5_playlab_freeplay: "It's free play time! Have fun\nwith all the blocks in your tool box."
      grade5_playlab_variables1: "This time you don't have to write any\ncode, just hit \"Run\" to play the game! In this game, you're the dog who\nis trying to collect more flags than the cat. Use the down arrow to control\nthe dog. Press \"Finish\" when you're done playing."
      grade5_playlab_variables10: "Edit the the \"patrol\" function to\nadd an \"actor\" parameter, so that we can call it for each of the actors\non the screen. Remember, the actors correspond to numbers 1, 2, and 3."
      grade5_playlab_variables11: "Add another parameter called \"speed\"\nto the \"patrol\" function. Try using a \"set speed\" block with the new \"speed\"\nparameter to help Penguin get both flags before the other sprites even get\none."
      grade5_playlab_variables12: "Let's have some fun! Look at the\ncode provided to see if you can figure out what each block does.  \\r\nWhen\nyou're done, use the arrow keys to control Dog and collect all of the flags.\\r\nNOTE:\nYou don't need to make any changes to the program"
      grade5_playlab_variables13: "Use the `when actor touches` block\nto send Dog back to the top-left ONLY if Dog touches any of the other actors."
      grade5_playlab_variables14: "It's free play time! Have fun\nwith all the blocks in your tool box."
      grade5_playlab_variables2: "The race in that last puzzle wasn't\nvery fair! Change the `dog_speed` variable to make sure you can collect more\nflags than Cat. The first to collect 10 flags wins!"
      grade5_playlab_variables3: "Use the left and right arrows to move,\nand the up arrow to jump. See if you can collect all of the flags."
      grade5_playlab_variables4: "Now we're using a variable called \"height\"\nto control how high the dog can jump. Update the \"height\" variable so that\nthe dog can jump high enough to reach all the flags."
      grade5_playlab_variables6: |-
        Use the right arrow to shoot hearts.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a heart. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      grade5_playlab_variables7: "Nice, now let's make sure this game\nisn't too easy to play. Any time Dog (actor 1) gets hit by yellow hearts\nfrom Cat (actor 2), you should lose a point. Start with 10 points so it's\nnot too hard. Let your score drop down from 10 to 0 to pass the level."
      grade5_playlab_variables71: "Here's our game from an earlier stage,\nbut most of the code is hidden. There’s a new function `score_points.`\\r\n\\r\nEdit\nthe function so that a new parameter called `points` can be added to `player_score`.\n\\r\n\\r\nThe variable `player_score` should increase each time Dog tags Cat\nwith hearts, and decrease each time that Cat tags Dog with hearts.\\r\n\\r\nNote:\nWhen you're done, click \"Run\" to play.  When Dog scores 6 points, you will\nmove on to the next puzzle. "
      grade5_playlab_variables81: "We've added one last function for\nyou. \\r\n\\r\nUse an \"if\" statement to program your game to call the \"level_up\"\nfunction only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample: \"player_score\" > 6\\r\n\\r\nPlay the game, and make it to level 3\nto move to the next puzzle. "
      grade5_playlab_variables9: "Here's a function called `patrol`.\n\\r\n\\r\nEdit `patrol` to move Cat up 400 pixels and then down 400 pixels."
      grade5_playlab_variables_freeplay: "Free Play time! Here are all of the\nvariables we've played with so far in this stage, as well as a few more in\ncase you want them. \\r\n\\r\nNotice that there are now so many blocks in our\ntoolbox that they need to be organized!  Here, we've put each piece into\nan appropriate category.  Take some time to explore everything that is available.\nWhen you're done browsing, make a game or story using repeats, variables,\nand events.  \\r\n\\r\nHint: scroll down to see all the commands in the workspace."
      k-1 maze 1: Can you make me move West to get to the pig?
      level 'grade3_Loops_10: |-
        Such a busy bee!\\r
        \\r
        Help bee collect all
        of the nectar and make all of the honey with the fewest blocks possible.
      level 'grade3_Loops_11: "The shape of this path is different than the\nothers. \\r\n\\r\nCan you collect all of the nectar using as few blocks as possible?"
      level 'grade3_Loops_12: "Can you find the quickest way for the bee to\ncollect all of the nectar and make all of the honey?"
      level 'grade3_Loops_2: This time, use a loop to gather all of the nectar.
      level 'grade3_Loops_3: Use a `repeat` loop to collect all of the nectar.
      level 'grade3_Loops_4: "Now use the `repeat` block to collect all of\nthe nectar and make all of the honey."
      level 'grade3_Loops_5: "What a beautiful field of flowers!   Help the\nbee visit each one.  Can you find a way to do it with fewer than 7 blocks?"
      level 'grade3_Loops_6: "How many times can loops help you in this puzzle?  \\r\n\\r\nLoops\nare your friend! Use a few of them to complete this puzzle with the fewest\nblocks possible."
      level 'grade3_Loops_7: |-
        Those flowers look tasty!\\r
        \\r
        Collect nectar
        from each of the flowers using the fewest blocks possible.
      level 'grade3_Loops_8: "Collect all the nectar and make all of the honey\nusing the fewest blocks possible."
      level 'grade3_Loops_9: "Collect nectar from each flower and make honey\nat each honeycomb using the fewest blocks possible."
      level grade3_Loops_2: This time, use a loop to gather all of the nectar.
      scrat 16 (copy 1): "Acorn! Acorn! Acorn! Use an \"if\" block to get me there\nwith the fewest number of blocks."
      scrat 16: "Acorn! Acorn! Acorn! Use an \"if\" block to get me there\nwith the fewest number of blocks."
      scrat 17: "Ok, let's do that again for practice - this isn't\nvery different, but watch out for the wall!"
      scrat 18 (copy 1): "The \"If-else\" blocks checks a condition, and then\ndoes one thing OR another. To get me to the acorn try to use this new block."
      scrat 18: "The \"If-else\" blocks checks a condition, and then\ndoes one thing OR another. To get me to the acorn try to use this new block."
      scrat 19 (copy 1): "One more practice of the \"if-else\" block, can you\nget it right on your first try?"
      scrat 19: "One more practice of the \"if-else\" block, can you\nget it right on your first try?"
      scrat 20: "Can you add just 3 blocks to help me solve a more complex\nmaze? If you do it right, I can walk any curvy path no matter the length.\nHurry! The ice is melting!"
