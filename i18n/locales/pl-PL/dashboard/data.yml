pl:
  data:
    script:
      name:
        20-hour:
          desc: Wprowadzający kurs z informatyki dla uczniów szkoły podstawowej i gimnazjum
          Unplug1: Etap 1
          Maze: Etap 2
          Unplug2: Etap 3
          Unplug3: Etap 4
          Artist: Etap 5
          Unplug4: Etap 6
          Artist2: Etap 7
          Unplug5: Etap 8
          Farmer: Etap 9
          Unplug6: Etap 10
          Artist3: Etap 11
          Unplug7: Etap 12
          Farmer2: Etap 13
          Unplug8: Etap 14
          Artist4: Etap 15
          Unplug9: Etap 16
          Farmer3: Etap 17
          Unplug10: Etap 18
          Artist5: Etap 19
          Unplug11: Etap 20
        Hour of Code:
          desc: Godzina kodowania
          Maze: Etap 1
        Edit Code:
          desc: Edytuj kod (beta)
          MazeEC: Etap 1
        2014 Levels:
          desc: Bounce (beta)
          Bounce: Etap 1
        Builder Levels:
          desc: Puzzle utworzone przez użytkowników (beta)
          Custom: Etap 1
        Flappy Levels:
          desc: Flappy Bird
          Flappy: Etap 1
        Jigsaw Levels:
          desc: Układanka (beta)
          Jigsaw: Etap 1
        Step Levels:
          desc: Labirynt (beta)
          MazeStep: Krok Etapu
        edit-code:
          desc: Edytuj kod (beta)
          MazeEC: Etap 1
          Webapp: Etap 2
          ArtistEC: Etap 3
          StudioEC: Etap 4
        events:
          desc: Bounce (beta)
          Bounce: Etap 1
          Studio: Etap 2
        builder:
          desc: Puzzle stworzone przez użytkowników (beta)
          Custom: Etap 1
        flappy:
          desc: Flappy Bird
          Flappy: Etap 1
        jigsaw:
          desc: Układanka (beta)
          Jigsaw: Etap 1
        step:
          desc: Labirynt (beta)
          MazeStep: Krok Etapu
        wordsearch:
          desc: Wymowa Bee (beta)
          WordSearch: Etap 1
    game:
      name:
        Unplug1: Wprowadzenie do informatyki
        Maze: Labirynt
        Multi: Wieloraki Wybór Rzeczy
        Unplug2: Myślenie komputacyjne
        Unplug3: Programowanie na papierze milimetrowym
        Artist: Artysta
        Unplug4: Algorytmy
        Artist2: Artysta 2
        Unplug5: Funkcje
        Farmer: Rolnik
        Unplug6: Warunkowe
        Artist3: Artysta 3
        Unplug7: Pisanie piosenek
        Farmer2: Rolnik 2
        Unplug8: Abstrakcja
        Artist4: Artysta 4
        Unplug9: Programowanie przekaźnika
        Farmer3: Rolnik 3
        Unplug10: Internet
        Artist5: Artysta 5
        Unplug11: Podsumowanie
        MazeEC: Labirynt
        Bounce: Odbicie
        Flappy: Flappy Bird
        Jigsaw: Układanka
        MazeStep: Tryb Kroczenia po Labiryncie
        Wordsearch: WordSearch (Poszukiwanie słów)
        Webapp: Webapp (aplikacje sieciowe)
        ArtistEC: Artysta/Postać
        TextMatch: Dopasowanie tekstu
        StudioEC: Lab Gier
    trophy:
      name:
        Bronze: Brąz
        Silver: Srebro
        Gold: Złoto
    concept:
      description:
        sequence: Sekwencja (ciąg)
        if: Blok jeśli
        if_else: blok jeśli-w przeciwnym razie
        loop_times: Blok powtórz razy
        loop_until: Blok powtarzaj aż
        loop_while: Blok dopóki
        loop_for: Blok licznika
        function: Funkcje
        parameters: Funkcje z parametrami
    level:
      instructions:
        maze_2_2: 'Czy możesz pomóc mi złapać niesforną świnkę? Poustawiaj na sobie kilka bloków "idź do przodu" i naciśnij "Uruchom", aby pomóc mi się tam dostać.'
        maze_2_1: Świnka powoduje jeżenie moich piórek. Pomóż mi ją znaleźć!
        maze_2_2_5: Śledź drogę i doprowadzić mnie do tej głupiej świnki. Unikaj TNT, bo inaczej polecą pióra!
        maze_2_3: Prowadź mnie do tego zielonego zła! (Uważaj na pola z TNT)
        maze_2_4: Zachowaj spokój i pomóż mi znaleźć tę złą świnkę. W przeciwnym razie mogę się zezłościć!
        maze_2_5: Istnieje sposób, abym dostał się do zielonej świnki przy użyciu zaledwie 2 bloków. Czy potrafisz to zrobić?
        maze_2_6: Spróbuj doprowadzić mnie do tego zielonego intruza używając tylko trzech bloków.
        maze_2_7: Pomóż mi pozbyć się tej złej świnki przy użyciu jak najmniejszej liczby bloków. Spróbuj za pomocą więcej niż jednego bloku powtórz razy.
        maze_2_8: 'Gdy blok jest szary, oznacza to, że nie można go usunąć. Rozwiąż tę łamigłówkę za pomocą bloku "powtórz", który powtarza 3 razy. Postaraj się umieścić w tym szarym bloku "powtórz" 3 bloki: przesuń, przesuń, skręć.'
        maze_2_9: 'OK, spróbuj użyć nowego bloku powtórz aż - będzie powtarzał, aż dorwę irytującą świnkę.'
        maze_2_10: 'OK, ostatni raz na próbę - czy potrafisz rozwiązać tę łamigłówkę używając jedynie 4 bloków?'
        maze_2_11: Droga osobo. Ja zombie. Ja głodny. Muszę... dostać się... do słonecznika... Czy potrafisz mnie tam przeprowadzić używając zaledwie 5 bloków?
        maze_2_12: OK, to jest podobne, ale jednak trochę inne. Czy potrafisz to wykonać używając zaledwie 5 bloków?
        maze_2_13: 'Użyj nowego bloku jeśli, abym mógł zdecydować, kiedy mam skręcić. Wskazówka: potrzebujesz do tego tylko jednego dodatkowego bloku, ale przyjrzyj się jak to zrobiliśmy, abyś następnym razem potrafił zrobić to sam.'
        maze_2_14: OK, ta łamigłówka jest podobna do poprzedniej, ale tym razem musisz pamiętać, jak użyć razem bloków jeśli i powtórz.
        maze_2_15: Ja chcieć słonecznik! Użyj bloku jeśli, abym mógł się tam dostać za pomocą jak najmniejszej liczby bloków.
        maze_2_16: 'OK, zróbmy to jeszcze raz dla wprawy - ta łamigłówka niewiele się różni od poprzedniej, ale uważaj na chrupaczy!'
        maze_2_17: Bloki jeśli-w przeciwnym razie sprawdzają warunek i wtedy wykonują pierwszą czynność ALBO drugą. Spróbuj doprowadzić mnie do słonecznika przy użyciu tego nowego bloku.
        maze_2_18: Jeszcze jedno ćwiczenie z bloków jeśli-w przeciwnym razie. Czy potrafisz użyć ich prawidłowo przy pierwszym podejściu?
        maze_2_19: Czy potrafisz dodać 3 bloki, by pomóc mi przejść bardziej skomplikowany labirynt? Jeśli zrobisz to prawidłowo, to będę mógł przejść każdą krętą ścieżkę bez względu na jej długość.
        turtle_1_1: Witaj, jestem artystą. Pisząc kod możesz sprawić, że narysuję niemalże wszystko. Użyj kilku bloków, abym zaczął rysować po szarych liniach na obrazku.
        turtle_1_2: 'A teraz narysuj kwadrat. Wskazówka: użyj swojego ulubionego koloru, wybierając go z nowego bloku ustaw kolor.'
        turtle_1_3: Narysuj kwadrat używając jedynie 3 bloków.
        turtle_1_4: 'Narysuj trójkąt, którego boki są w różnych kolorach, posługując się opcją losowy kolor, która wybiera za każdym razem inny kolor. Wskazówka: musisz sam sprawdzić, ile należy się obrócić, w tym celu kliknij liczbę w bloku obróć.'
        turtle_1_5: Teraz dla wprawy, narysuj trójkąt a następnie kwadrat, aby narysować kopertę.
        turtle_1_6: 'Czy możesz odgadną, jak narysować ten trójkąt i kwadrat? Podpowiedź: Narysuj najpierw trójkąt a później przekonaj się, o ile się obrócić przed narysowaniem kwadratu.'
        turtle_1_7: 'OK, utrudnijmy to nieco - przekonaj się, czy możesz narysować te zielone okulary. Kwadraty mają boki po 100 pikseli i są oddalone od siebie o 50 pikseli. Nie zapomnij, aby były zielone!'
        turtle_1_8: OK, przekonaj się, co się stanie, jeśli uruchomisz ten kod (naciśnij przycisk Uruchom). Następnie, powtarzaj to dość razy, aby ukończyć rysowanie. Kolory będą różne za każdym razem.
        turtle_1_9: Czy możesz powiedzieć, jaką liczbę wstawić w miejsce znaku zapytania, aby z narysować okrąg?
        turtle_1_10: 'Zrobiłeś to! Teraz narysuj co chcesz. Niektóre zabawne pomysły: figura z kresek, śnieżynka lub spirala. Spróbuj również użyć nowego bloku ustaw szerokość. Baw się dobrze!'
        turtle_4_1: 'Czy możesz narysować trójkąt (z bokami o długości 100 pikseli) używając tylko 3 bloków? Wskazówka: Użyj bloku powtórz.'
        turtle_4_2: 'Dodaj blok "Skręć w prawo o 90 stopni" gdzieś w środku programu na obszarze roboczym, żeby rysować trójkąty.'
        turtle_4_3: 'OK,  tutaj jest kod, który napisałeś, aby narysować pojedynczy trójkąt. Czy możesz dodać bloki powtórz i obróć, aby otrzymać ładny kwiat?'
        turtle_4_4: 'Tutaj jest kod z poprzedniej łamigłówki, ale wykonujący obrót tylko o 36 stopni po narysowaniu każdego trójkąta. Ile razy trzeba to powtórzyć? (Wskazówka: po obrocie o 360 stopni rysunek zatoczy koło)'
        turtle_4_5: 'Tutaj jest kod z poprzedniej łamigłówki, ale z obrotem powtórzonym 36 razy. O ile stopni powinien być  obrót? (Wskazówka: po obrocie o 360 stopni rysunek zatoczy koło)'
        turtle_4_6: Używając 3 bloków, czy możesz narysować kwadrat z bokami o długości 20 pikseli?
        turtle_4_7: 'Oto kod do rysowania kwadrat z ostatniej łamigłówki. Czy potrafisz go powtórzyć tak, aby narysować 10 przyległych kwadratów tworzących drabinę? Wskazówka: potrzebujesz tylko 2 dodatkowych bloków.'
        turtle_4_8: Oto rozwiązanie poprzedniej łamigłówki. Czy potrafisz dodać dokładnie 2 bloki, by ukończyć rysunek?
        turtle_4_9: 'Oto rozwiązanie poprzedniej łamigłówki. O ile stopni należy wykonać obrót w prawo, by  ukończyć rysunek? (Być może będziesz zgadywał kilka razy)'
        turtle_4_10: Oto rozwiązanie poprzedniej łamigłówki. Ile razy należy wykonać powtórz, aby ukończyć rysunek?
        turtle_4_11: Spróbuj zmieniać liczby w blokach powtórz i obróć, aby otrzymać różne desenie (wzory). Możesz również spróbować wykonać inne zmiany w kodzie, aby narysować, co wymyślisz.
        maze_karel_1_1: Cześć, jestem rolnikiem. Potrzebuję twojej pomocy, aby wypoziomować pola w moim gospodarstwie, by było gotowe do obsadzenia. Przenieś mnie na stertę kupę śmieci i użyj bloku usuń, by ją usunąć.
        maze_karel_1_2: Następnie, przenieś mnie do otworu i wypełnij go dwoma szufelkami śmieci, stosując blok wypełnij.
        maze_karel_1_3: Przenieś mnie do sterty śmieci i określ, ile potrzebuję szufelek, by usunąć śmieci za pomocą możliwie najmniejszej liczby bloków.
        maze_karel_1_4: 'Czy mógłbyś mi pomóc usunąć wszystkie cztery sterty śmieci? Wskazówka: użyj bloku powtórz, jeśli potrafisz.'
        maze_karel_1_5: 'Pomóż mi wypełnić wszystkie te dziury 5 szufelkami śmieci. Wskazówka: można umieścić blok powtórz w bloku dopóki.'
        maze_karel_1_6: Usuń wszystkie sterty śmieci, używając możliwie najmniejszej liczby bloków. Nową możliwością w rozwijanym menu w bloku dopóki jest warunek, czy tam, gdzie stoję jest sterta śmieci, czy otwór.
        maze_karel_1_7: 'Wow, znalazłem naprawdę głęboki otwór! Nie wiem, ile szufelek śmieci tam się zmieści. Czy mógłbyś napisać program, który wypełni otwór aż do poziomu ziemi? '
        maze_karel_1_8: Pomóż mi wypełnić otwór na końcu tego pola, używając możliwie najmniejszej liczby bloków.
        maze_karel_1_9: 'Spowoduj, abym usunął wszystkie te sterty śmieci. Zrób to za pomocą możliwie najmniejszej liczby bloków. Wskazówka: możesz użyć bloku dopóki w bloku powtórz.'
        maze_karel_1_10: Pracuję do późna, zrobiło się więc ciemno i nie mogę określić, jak duże są sterty śmieci. Teraz nie mam niestety wszystkich opcji w bloku dopóki. Przesuwaj mnie po polu i, jeśli jest sterta śmieci, to usuń ją.
        maze_karel_1_11: 'Nadal jest ciemno. Przenieś mnie po polu. Jeśli jest sterta śmieci, to usuń ją, a jeśli jest otwór, to wypełnij go. Wskazówka: wykorzystaj rozwijane menu w bloku jeśli.'
        turtle_2_1: 'Cześć. Mnie zombie artysty. Mnie kochają rysunek! Pomóż mi narysować kwadrat w specjalnym kolorze. Ważna Uwaga: możesz użyć tych samych bloków, ale teraz zostały zgrupowane w kategorie.'
        turtle_2_2: Zapraszamy do korzystania z funkcji, które umożliwiają definiowanie nowych bloków! Spróbuj użyć nowego bloku narysuj kwadrat, znajdującego się w kategorii Funkcje, aby narysować mały zielony kwadrat 50 x 50.
        turtle_2_3: Użyj bloku powtórz (z kategorii Pętle), aby narysować 3 kwadraty o boku 100, każdy obrócony o 120 stopni, w 3 różnych, losowych kolorach.
        turtle_2_4: 'Teraz mamy zamiar uzyskać coś fantazyjnego. Zmień kod, aby narysować 36 kwadratów, o boku 100 pikseli, co 10 stopni. Wskazówka: możesz przyspieszyć rysowanie za pomocą suwaka.'
        turtle_2_5: 'Narysuj kwadraty o bokach 50, 60, 70, 80 i 90 pikseli.  Musisz użyć funkcji narysuj kwadrat pięć razy.'
        turtle_2_6: 'Ten program używa licznika, by narysować te same kwadraty, co poprzednio. Chcesz, by kwadraty były tej samej wielkości, co poprzednio, użyj więc bloku licznik. Wskazówka: Znajdziesz go w kategorii Zmienne.'
        turtle_2_7: Oto program do rysowania spirali, ale bloki są wyłączone, więc nie będą działać. Utwórz nowy program używając bloku licz z (z kategorii Pętle) i bloku licznik (z kategorii Zmienne), aby narysować taką samą spiralę.
        turtle_2_7_5: Jest nowa funkcja narysuj bałwana (w kategorii Funkcje). Narysuj dwa bałwany o wysokość 250 i 100.
        turtle_2_8: 'To jest trochę podstępne. Użyj funkcji narysuj bałwana i nowego bloku przesuń do przodu  (w kategorii Działania). Narysuj 3 bałwany w różnych kolorach, w odległości 100 pikseli od siebie.'
        turtle_2_9: Skorzystaj z pętli licz z, by narysować rodzinę bałwanów o wysokości 110, 100, 90, 80 i 70. Bałwany powinny być oddalone od siebie o 60 pikseli.
        turtle_2_10: 'Tutaj mamy kawałek kodu, aby poeksperymentować z różnymi spiralami  Co się stanie, jeśli zmienisz wielkość obrotu? Lub ustawisz kolor losowy w pętli? Narysuj cokolwiek, co chcesz.'
        maze_karel_2_1: 'Użyj bloków, by pomóc mi usunąć wszystkie sterty i wypełnić wszystkie otwory w ziemi. Postaraj się użyć pętli zamiast zbyt wielu bloków. Wskazówka: możesz umieścić pętlę wewnątrz innej pętli.'
        maze_karel_2_2: Zdefiniowaliśmy własny blok o nazwie wypełnij 5, który teraz znajduje się w kategorii Funkcje. Użyj go, aby mi pomóc wypełnić ten otwór.
        maze_karel_2_3: Użyj nowego bloku funkcyjnego wypełnij 5, aby wypełnić wszystkie otwory. Będziesz musiał przeciągnąć ten blok z kategorii Funkcje.
        maze_karel_2_4: Zdefiniuj nową funkcję, która usuwa 7 szufelek śmieci. Następnie użyj jej do napisania programu, który pomoże mi usunąć wszystkie sterty śmieci.
        maze_karel_2_5: Utwórz nową funkcję, która usuwa 6 szufelek śmieci ze sterty i użyj jej, by mi pomóc wyczyścić wszystkie sterty śmieci.
        maze_karel_2_6: Użyj dwóch nowych funkcji, wypełnij 8 i usuń 8, aby wyczyścić wszystkie stery śmieci i zasypać wszystkie dziury.
        maze_karel_2_7: Na moim polu jest krowa! Napisz nową funkcję, która pomaga uniknąć krowy i usuwa stertę śmieci. Umieścić wszystkie swoje bloki wewnątrz nowej funkcji.
        maze_karel_2_8: Użyj tej nowej funkcji o nazwie unikaj krowy i usuń 1, aby usunąć wszystkie sterty.
        maze_karel_2_9: OK, tutaj jest funkcja, która usuwa 4 różne sterty śmieci znajdujące się w pionowej kolumnie. Spróbuj umieścić tę funkcję wewnątrz pętli, aby usunąć wszystkie sterty śmieci przy użyciu tylko kilku nowych bloków.
        maze_karel_2_10: Przenieś mnie przez pole i usuń wszystkie sterty śmieci oraz wypełnij wszystkie otwory za pomocą tych dwóch funkcji.
        turtle_3_1: Ta łamigłówka pokazuje definicje dwóch funkcji narysuj kwadrat i narysuj okrąg. Definiowanie funkcji nie powoduje wykonania jej bloków. Trzeba wyciągnąć blok narysuj kwadrat, aby faktycznie narysować kwadrat.
        turtle_3_2: Korzystają z funkcji narysuj kwadrat, jako przykładu, utwórz funkcję narysuj trójkąt i użyj jej.
        turtle_3_3: 'Narysuj trójkątne ogrodzenia wokół kotów i kwadratowe ogrodzenie wokół krowy.  Wskazówka: sprawdzaj program, podczas jego tworzenia.'
        turtle_3_4: Przekonaj się, czy potrafisz wykorzystać funkcje narysuj kwadrat i narysuj trójkąt (i niektóre inne bloki), aby narysować dom w okolicy lwa.
        turtle_3_5: 'Teraz utwórz nową funkcję narysuj dom i użyj jej, aby umieścić w domu dwa koty. Wskazówka: utwórz nową funkcję przy użyciu bloku zrobić coś i wpisz własną nazwę bloku.'
        turtle_3_6: 'Na przykładzie funkcji narysuj kwadrat, dodaj wejście o nazwie długość do funkcji narysuj trójkąt. Następnie narysuj trójkąty o różnych rozmiarach. (Wskazówka: kliknij gwiazdkę, aby dodać wejście do funkcji)'
        turtle_3_7: Dodaj wejście o nazwie długość do funkcji narysuj dom i zbuduj duży dom dla słonia (z krawędziami o długości 150 pikseli)
        turtle_3_8: Tutaj są wszystkie bloki z poprzedniej łamigłówki. Zmodyfikuj funkcję narysuj dom tak, aby rysowanie kończy się w prawym dolnym rogu. Użyj tej zmodyfikowanej funkcji do narysowania trzech domów.
        turtle_3_9: Czy mógłbyś ponownie utworzyć funkcję narysuj dom bez niczyjej pomocy? Spróbuj, a następnie narysuj szereg domów.
        turtle_3_10: Dużo się już nauczyłeś! Teraz narysuj, co chcesz. Spróbuj narysować gwiazdę, spiralę lub fantazyjną śnieżynkę.
        maze_karel_debug_seq_1: Zapraszamy do debugowania! Mój kod nie działa poprawnie. Czy widzisz problem i możesz go naprawić tak, abym mógłbym oczyścić moje pole i przygotować je do sadzenia?
        maze_karel_debug_seq_2: Jaki jest błąd w tym programie? Jak go naprawić tak, abym mógł usunąć stertę?
        maze_karel_debug_repeat: Napraw ten program dla mnie, aby moje pole było posprzątane i płaskie.
        maze_karel_debug_while: Jak zmieniłbyś ten program, aby pomóc mi wypełnić dziurę?
        maze_karel_debug_if: Pomocy! Napraw program tak, by moje pole było całkowicie płaskie.
        maze_karel_debug_if_else: Napraw ten programu, abym mógł wypełnić wszystkie otwory i usunąć wszystkie sterty.
        maze_karel_debug_function_1: Co należy zmienić w tym programie, aby usuwał wszystkie sterty?
        maze_karel_debug_function_2: Czy możesz naprawić błędy w tym programie, aby mógł wyrównać moje pole?
        maze_karel_debug_function_3: 'Popraw ten program, abym mógł usunąć wszystkie sterty z mojego pola. '
        turtle_5_1: Uruchom ten program i wprowadzaj zmiany, aby zobaczyć co się dzieje. Czy możesz powiedzieć, co robi ten program? (Lub usuń go i zastąp go czymś zupełnie inny)
        turtle_5_2: Uruchom ten program i wprowadzaj zmiany, aby zobaczyć co się dzieje. Czy możesz powiedzieć, co robi ten program? (Lub usuń go i zastąp go czymś zupełnie inny)
        turtle_5_3: Uruchom ten program i wprowadzaj zmiany, aby zobaczyć co się dzieje. Czy możesz powiedzieć, co robi ten program? (Lub usuń go i zastąp go czymś zupełnie inny)
        turtle_5_4: Uruchom ten program i wprowadzaj zmiany, aby zobaczyć co się dzieje. Czy możesz powiedzieć, co robi ten program? (Lub usuń go i zastąp go czymś zupełnie inny)
        turtle_5_5: Uruchom ten program i wprowadzaj zmiany, aby zobaczyć co się dzieje. Czy możesz powiedzieć, co robi ten program? (Lub usuń go i zastąp go czymś zupełnie inny)
        turtle_5_6: Uruchom ten program i wprowadzaj zmiany, aby zobaczyć co się dzieje. Czy możesz powiedzieć, co robi ten program? (Lub usuń go i zastąp go czymś zupełnie inny)
        maze_3_1: Muszę dostać się do tej świnki! Wpisz kilka wywołań idź().
        maze_3_2: Napisz mi program, abym znalazł drogę do świnki.
        maze_3_3: Jak powinienem dostać się do świnki? Bądź pewien, że nie wpadnę na pole z TNT!
        maze_3_4: Argh! Napisz mi program, który poprowadzi mnie wokół pól z TNT i doprowadzi mnie do świnki.
        bounce_1: 'Dołącz blok do bloku "kiedy strzałka w lewo" i naciśnij "Uruchom". Przesuń paletkę używając lewej strzałki, aby osiągnąć ostateczny cel.'
        bounce_2: 'Dołącz blok do bloków "kiedy strzałka w prawo" i "Kiedy strzałka w lewo". Przesuń paletkę, aby osiągnąć ostateczne cele.'
        bounce_3: 'Teraz spróbuj czegoś podobnego z blokiem "kiedy strzałka w górę". Przenieś paletki do miejsca końcowego na górze.'
        bounce_4: Tym razem musisz dodać cztery bloki. Przenieś paletki do wszystkich czterech miejsc końcowych, by zakończyć układankę.
        bounce_5: 'Mamy zamiar skierować piłkę lecącą w dół w kierunku paletki. Dołącz blok do bloku "kiedy piłka uderza paletkę", aby upewnić się, że piłka osiąga ostateczny cel.'
        bounce_6: 'Teraz ostateczny cel jest na górze. Musisz dołączyć bloki do obu bloków "kiedy piłka uderza", aby rozwiązać tę łamigłówkę.'
        bounce_7: 'Dołącz bloki do każdego z bloków "gdy". Odbijaj piłeczkę, aż osiągnie ostateczny cel.'
        bounce_10: 'Cel teraz jest u góry. Dołącz bloki "punkt wyniku" i "punkt wyniku przeciwnika" do bloków "kiedy piłka jest w bramce" i "kiedy piłka mija rakietkę", aby utworzyć grę. Zobacz, ile punktów zdobędziesz, zanim Twój przeciwnik zdobędzie dwa punkty.'
        bounce_11: 'Możesz teraz dołączyć bloki do bloku "gdy w grze". Musisz dołączyć nowy blok "wypuść nową piłkę" w więcej niż w jednym miejscu. Również, spróbuj zmienić scenerię lub szybkość rakietki oraz piłki i zobacz, ile punktów zdobędziesz, zanim Twój przeciwnik zdobędzie dwa punkty.'
        bounce_12: Utwórz własną grę Odbijanie. Możesz zmienić wszystkie efekty wizualne i zasady. Kiedy skończysz, kliknij przycisk Zakończ, aby Twoi znajomi mogli zagrać na swoich telefonach.
        Custom_builder: 'Przeciągnij bloki z przybornika do obszaru roboczego, aby narysować poziom, który chcesz utworzyć. Naciśnij przycisk "Uruchom", gdy jesteś gotowy.'
        flappy_1: |-
          Dołącz blok do bloku "po kliknięciu", a następnie naciśnij przycisk "Uruchom". Kliknij lub dotknij ekranu, aby przesunąć Flappy'ego do miejsca docelowego.
        flappy_2: 'Teraz dodaliśmy podłoże. Dołącz blok do bloku "kiedy spadnie na ziemię".  Twój kod powinien kończyć grę, gdy Flappy rozbija się.'
        flappy_3: 'Blok "po uruchomieniu" pozwala uruchomić kod po uruchomieniu gry. Spróbuj ustawić poziom prędkości i pofrunąć do miejsca docelowego.'
        flappy_4: 'Flappy poleci przez przeszkody chyba, że napiszesz kod, który spowoduje, że się rozbije. Dołącz blok do bloku "kiedy uderzy w przeszkodę". Twój kod powinien kończyć grę, gdy Flappy rozbija się na pierwszym zestawie rur.'
        flappy_5: 'Dodajmy tablicę wyników i liczmy punkty, gdy Flappy mija przeszkody. Dodaj blok do bloku "kiedy minie przeszkodę", a następnie zdobądź punkt przelatując Flappym przez pierwsz zestaw rur.'
        flappy_6: Zobacz, czy potrafisz zdobywać punkty, gdy Flappy fruwa na małą lub dużą wysokość.
        flappy_7: 'Następnie, spróbuj zmienić scenę dołączając inny blok do bloku "po uruchomieniu".'
        flappy_8: 'Efekty wizualne możesz ustawić w dowolnym momencie, nie tylko, gdy gra się zaczyna.  Spróbuj ustawić losową scenę, gdy dzieje się coś innego, na przykład, gdy Flappy mija przeszkodę.'
        flappy_9: Można mieszać różne polecenia, po uderzeniu w przeszkodę lub w ziemię, zamiast kończyć grę, spróbujmy ustawić wynik z powrotem na 0.
        flappy_11: "Utwórz swoją własną grę Flappy'ego. Możesz zmienić wszystkie efekty wizualne i wszystkie zasady, nawet przyciąganie. Kiedy skończysz, kliknij przycisk Zakończ, aby swoim znajomym udostępnić grę na telefony."
        flappy_k1_1: Zagraj z Flappym
        flappy_k1_2: |-
          Dołącz blok do bloku "po kliknięciu", a następnie naciśnij przycisk "Uruchom". Kliknij lub dotknij ekranu, aby przesunąć Flappy'ego do miejsca docelowego.
        flappy_k1_3: 'Teraz dodaliśmy podłoże. Dołącz blok do bloku "kiedy spadnie na ziemię".  Twój kod powinien kończyć grę, gdy Flappy rozbija się.'
        flappy_k1_4: 'Blok "po uruchomieniu" pozwala uruchomić kod po uruchomieniu gry. Spróbuj ustawić poziom prędkości i pofrunąć do miejsca docelowego.'
        flappy_k1_5: 'Flappy poleci przez przeszkody chyba, że napiszesz kod, który spowoduje, że się rozbije. Dołącz blok do bloku "kiedy uderzy w przeszkodę". Twój kod powinien kończyć grę, gdy Flappy rozbija się na pierwszym zestawie rur.'
        flappy_k1_6: 'Dodajmy tablicę wyników i liczmy punkty, gdy Flappy mija przeszkody. Dodaj blok do bloku "kiedy minie przeszkodę", a następnie zdobądź punkt przelatując Flappym przez pierwszy zestaw rur.'
        flappy_k1_7: Zobacz, czy możesz zdobyć wiele punktów przechodząc kilka przeszkód
        flappy_k1_8: 'Następnie, spróbuj zmienić scenę dołączając inny blok do bloku "po uruchomieniu".'
        flappy_k1_9: 'Spróbuj zmienić gracza dołączając blok "ustaw gracza" do bloku "po uruchomieniu".'
        jigsaw_1: Kliknij blok
        jigsaw_2: Przeciągnij blok do miejsce docelowego
        jigsaw_3: Ułóż bloki, by utworzyć obrazek
        jigsaw_4: Ułóż bloki, by utworzyć obrazek
        jigsaw_5: Ułóż bloki, by utworzyć obrazek
        jigsaw_6: Ułóż bloki, by utworzyć obrazek
        jigsaw_7: Ułóż bloki, by utworzyć obrazek
        jigsaw_8: Ułóż bloki, by utworzyć obrazek
        jigsaw_9: Ułóż bloki, by utworzyć obrazek
        jigsaw_10: Ułóż bloki, by utworzyć obrazek
        jigsaw_11: Ułóż bloki, by utworzyć obrazek
        jigsaw_12: Ułóż bloki, by utworzyć obrazek
        jigsaw_13: Rozwiązać zagadkę!
        mazestep_1: Opis kroku w labiryncie jest tutaj
        mazestep_2: Opis kroku w labiryncie jest tutaj
        mazestep_3: Opis kroku w labiryncie jest tutaj
        mazestep_4: Opis kroku w labiryncie jest tutaj
        mazestep_5: Opis kroku w labiryncie jest tutaj
        studio_c2_1: 'Czy mógłbyś spowodować, by ten pies powiedział "hello world"?'
        studio_c2_2: Czy mógłbyś spowodować, by ten pies coś powiedział, a następnie by kot coś powiedział po nim?
        studio_c2_3: Czy mógłbyś napisać program, który spowoduje, że ten pies przesunie się do kota?
        studio_c2_4: 'Czy mógłbyś napisać program, który sprawia, że pies porusza się w kierunku kota i powoduje, że kot mówi "hello", gdy pies dochodzi do niego?'
        studio_c2_5: 'Czy mógłbyś napisać program, który powoduje, że ośmiornica mówi "hello", po kliknięciu na niej?'
        studio_c2_6: Czy mógłbyś napisać program, który powoduje, że pingwin porusza się za pomocą przycisków w górę / w dół / w lewo/w prawo, by uderzyć we wszystkie cele?
        studio_c2_7: 'Blok "powtarzaj zawsze" umożliwia wykonywanie kodu bez przerwy. Czy mógłbyś dołączyć bloki powodujące, że ten dinozaur porusza się w górę i w dół w nieskończoność?'
        studio_c2_8: 'Czy mógłbyś spowodować, że Pingwin mówi "Och!" i gra dźwięk "hit", gdy wpadnie na dinozaura, a następnie przenieś go za pomocą strzałek, aby się to stało?'
        studio_c2_9: Czy mógłbyś dodać blok, aby liczyć punkty, gdy pingwin wpada na ośmiornicę, a następnie przenosić go za pomocą strzałek, aż zdobędziesz punkt?
        studio_c2_10: Czy mógłbyś dodać bloki do zmiany tło i prędkość pingwina, a następnie poruszać nim za pomocą klawiszy ze strzałkami, aż osiągniesz wynik?
        studio_c2_11: Utwórz własną opowieść. Kiedy skończysz, kliknij przycisk Zakończ, aby umożliwić znajomym wypróbowanie Twojej opowieści na swoich telefonach.
        studio_c3_story_1: 'Czy mógłbyś spowodować, by ten pies powiedział "hello world"?'
        studio_c3_story_2: Czy mógłbyś spowodować, by pies coś powiedział, a następnie by kot, coś powiedział?
        studio_c3_story_3: Czy mógłbyś napisać program, który spowoduje, że ten pies przesunie się do kota?
        studio_c3_story_4: 'Czy mógłbyś napisać program, który sprawia, że pies porusza się w kierunku kota i powoduje, że kot mówi "hello", gdy pies dochodzi do niego?'
        studio_c3_story_5: Czy mógłbyś dodać blok powodujący, że ośmiornica poczuje się szczęśliwie?
        studio_c3_story_6: Utwórz własną opowieść. Kiedy skończysz, kliknij przycisk Zakończ, aby umożliwić znajomym wypróbowanie Twojej opowieści na swoich telefonach.
        studio_c3_game_1: 'Czy mógłbyś napisać program, który powoduje, że ośmiornica mówi "hello", po kliknięciu na niej?'
        studio_c3_game_2: Czy mógłbyś napisać program, który powoduje, że pingwin porusza się za pomocą przycisków w górę /w dół /w lewo/w prawo, by uderzyć we wszystkie cele?
        studio_c3_game_3: 'Blok "powtarzaj zawsze" umożliwia wykonywanie kodu bez przerwy. Czy mógłbyś dołączyć bloki powodujące, że ten dinozaur porusza się w górę i w dół w nieskończoność?'
        studio_c3_game_4: 'Czy mógłbyś spowodować, że Pingwin mówi "Och!" i gra dźwięk "hit", gdy wpadnie na dinozaura, następnie przenieś go za pomocą strzałek, aby się to stało?'
        studio_c3_game_5: Czy mógłbyś dodać blok, aby liczyć punkty, gdy pingwin wpada na ośmiornicę, a następnie przenosić go za pomocą strzałek, aż zdobędziesz punkt?
        studio_c3_game_6: Czy mógłbyś dodać bloki do zmiany tła i prędkości pingwina, a następnie poruszać nim za pomocą klawiszy ze strzałkami, aż osiągniesz wynik?
        studio_c3_game_7: Utwórz własną grę. Kiedy skończysz, kliknij przycisk Zakończ, aby umożliwić znajomym wypróbowanie gry na swoich telefonach.
        studio_playlab_1: 'Pingwin chce powiedzieć "hello" - czy możesz mu pomóc?'
        studio_playlab_2: 'Chłopiec z jaskini (aktor 1) i dziewczyna z jaskini (aktor 2) chcieliby powiedzieć "hello" do siebie. Czy mógłbyś im pomóc wykorzystując dwa razy blok "powiedz"?'
        studio_playlab_3: Czy mógłbyś pomóc tenisistce dostać się do flagi?
        studio_playlab_4: Czy mógłbyś pomóc tenisiście (aktor 1) dotrzeć do tenisistki (aktor 2) i odtworzyć dźwięk, gdy tam dotrze?
        studio_playlab_5: 'Czy mógłbyś pomóc Spacebot powiedzieć "greetings earthlings" (pozdrowienia dla Ziemian) po kliknięciu na nim? Nie zapomnij kliknąć na nim, po kliknięciu przycisku Uruchom'
        studio_playlab_6: Czy mógłbyś pomóc czarownicy (Witch) poruszać za pomocą klawiszy strzałek w górę/w dół/w prawo/w lewo, aby dostać wszystkie magiczne kule ogniste?
        studio_playlab_7: 'Blok "powtarzaj zawsze" umożliwia wykonywanie kodu bez przerwy. Czy mógłbyś dołączyć do niego bloki powodujące, że  kreatora porusza się w górę i w dół bez przerwy?'
        studio_playlab_8: Czy mógłbyś dodać blok zdobycia punktu i blok do odtwarzania dźwięku, gdy jednorożec wpada na Kreatora, następnie przenoś go za pomocą strzałek aż zdobędziesz punkt?
        studio_playlab_9: Ustaw tło dla tej inwazji obcych i pomóż Spacebot dotrzeć do obcych szybciej zmieniając jego prędkość. Następnie przenoś go za pomocą klawiszy strzałek, aby dostać się do Spacebot i zaalarmować wszystkich pozostałych
        studio_playlab_10: Utwórz własną grę. Kiedy skończysz, kliknij przycisk Zakończ, aby umożliwić znajomym wypróbowanie gry na swoich telefonach.
        studio_full_sandbox: Utwórz własną grę. Kiedy skończysz, kliknij przycisk Zakończ, aby umożliwić znajomym wypróbowanie gry na swoich telefonach.
        studio_k1_1: 'Czy mógłbyś spowodować, aby ten pies powiedział "hello world"?'
        studio_k1_2: Czy mógłbyś spowodować, aby ten pies coś powiedzieć, a następnie, by kot coś powiedział po nim?
        studio_k1_3: Czy mógłbyś napisać program, który spowoduje, że ten pies przesunie się do kota?
        studio_k1_4: 'Spowoduj, że pies przesuwa się w kierunku kota i kot mówi "hello", gdy dociera do niego pies.'
        studio_k1_5: Czy mógłbyś dodać blok powodujący, że ośmiornica poczuje się szczęśliwa?
        studio_k1_6: Utwórz własną historię! Przesuwaj dookoła kota i psa i powoduj, że coś mówią.
        maze_wordsearch_k_1: Move me to spell the word EAST
        maze_wordsearch_k_2: Move me to spell the word SOUTH
        maze_wordsearch_k_3: Move me to spell the word WEST
        maze_wordsearch_k_4: Move me to spell the word NORTH
        maze_wordsearch_k_6: Move me East and then South to spell the word JUMP
        maze_wordsearch_k_9: Move me one way, then another to spell the word CODE
        maze_wordsearch_k_13: Move me one way, then another to spell the word DEBUG
        maze_wordsearch_k_15: Move me one way, then another to spell the word ABOVE
        maze_wordsearch_k_16: Move me one way, then another to spell the word BELOW
        maze_wordsearch_k_20: To jest test! Przenieś mnie w jedną stronę, a później w drugą by wypowiedzieć słowo STORY
        webapp_ec_simple: Utwórz swoją aplikację sieciową przy użyciu createHtmlBlock.
        turtle_ec_1_2: 'Teraz narysuj kwadrat. Uwaga: użyj ulubionego koloru, wybierając go w nowym bloku "kolor pisaka".'
        turtle_ec_1_10: 'Wykonałeś to! Teraz narysuj cokolwiek. Niektóre zabawne pomysły: pałka, śnieżynka lub spirala. Wypróbuj również nowy blok "ustaw grubość pisaka". Baw się dobrze!'
        studio_ec_sandbox: Utwórz własną grę. Kiedy skończysz, kliknij przycisk Zakończ, aby umożliwić znajomym wypróbowanie gry na swoich telefonach.
    levelbuilder:
      frozen line:
        instructions: Hi! jestem Elsa z Arendelle. Proszę pomóż mi utworzyć pojedynczą linię.
      frozen perpendicular:
        instructions: Teraz zobaczmy, czy potrafimy utworzyć dwie linie leżące pod kątem 90 stopni do siebie. Będziesz musiał użyć bloków Obróć (Turn) oraz Przesuń (Move).
      frozen square iterative:
        instructions: Wygląda na to, że jesteśmy w połowie drogi do utworzenia kwadratu. Umieść 4 linie tak, aby utworzyły kwadrat.
      frozen square loop:
        instructions: Cześć, jestem Anna z Arendelle! Zróbmy kwadrat używając bloku Powtórz (Repeat), co pozwoli użyć mniej bloków. Ile razy (???) powinny wykonać się bloki wewnątrz bloku pętli Powtórz (Repeat), żeby powstał kwadrat?
      frozen square loop 3x:
        instructions: Utwórzmy trzy kwadraty, obracając każdy z nich. Upewnij się przed każdym nowym kwadratem, że obrót ma 120 stopni.
      frozen square snowflake:
        instructions: Czy potrafisz utworzyć śnieżynkę używając bloku Powtórz (Repeat), aby narysować kwadrat 10 razy, oraz bloku Obróć (Turn), aby obrócić się o 36 stopni pomiędzy każdym z kwadratów?
      frozen cross:
        instructions: Użyj bloku Powtórz (Repeat), aby utworzyć znak plus. Czy zauważyłeś, że Elsa może poruszać się do przodu i do tyły?
      frozen cross rotate:
        instructions: Teraz spróbuj powtórzyć to 10 razy. O ile stopni musisz się obrócić miedzy każdą z linii?
      frozen cross rotate dense:
        instructions: 'Powtórzmy to 90 razy! Ile razy 90 zmieści się w 360? Podpowiedź: To naprawdę mała liczba.'
      frozen diamond:
        instructions: 'Utwórzmy równoległobok. To figura podobna do kwadratu, ale ma inne kąty: 60 i 120 stopni zamiast 90 stopni.'
      frozen diamond mini snowflake:
        instructions: Czy wiesz, że każdy płatek śniegu ma inny kształt? Utwórzmy nową śnieżynkę używając bloku Powtórz (Repeat), aby powtórzyć równoległobok 4 razy, obracając go za każdym razem o 90 stopni w prawo.
      frozen diamond snowflake:
        instructions: Teraz utwórzmy nową śnieżynkę, używając bloku powtórzenia, żeby powtórzyć równoległobok 10 razy, obracając go za każdym razem o 36 stopni w prawo.
      frozen circle:
        instructions: Okrąg jest specjalnym kształtem. Czy potrafisz znaleźć liczbę, którą należy zastąpić pytajniki, aby narysować okrąg?
      frozen circle function:
        instructions: Użyj nowego bloku Utwórz okrąg (Create a circle), aby narysować 10 nakładających się na siebie okręgów. Nie zapomnij skoczyć do przodu pomiędzy okręgami.
      frozen circle function in circle:
        instructions: Teraz utwórzmy 20 nakładających się na siebie okręgów, skręcając o 18 stopni przy każdym okręgu.
      frozen circle function with parameter:
        instructions: Oto blok Utwórz okrąg (Create a circle), który potrafi tworzyć okręgi o różnych rozmiarach. Czy potrafisz użyć go do utworzenia małego okręgu o rozmiarze 5 i większego o rozmiarze 10?
      frozen snowflower:
        instructions: Wymyślne śnieżne wzory mogą być utworzone z bardzo prostych kształtów. Czy potrafisz utworzyć wzór powtarzając 5 okręgów rozmiaru 5 i 5 okręgów rozmiaru 10?
      frozen snowflake branch:
        instructions: Spróbuj użyć bloku Utwórz ramię płatka śniegu (Create a snowflake branch), aby utworzyć 3 ramiona, które zaczną wyglądać jak płatek śniegu.
      frozen snowflake full:
        instructions: Teraz powtórzymy to 8 razy, aby utworzyć piękny płatek śniegu!
      frozen freeplay:
        instructions: Oficjalnie stałeś się mistrzem artystą! Utwórz zimową krainę cudów i podziel się nią z przyjaciółmi.
      scrat 16:
        instructions: Żołądź! Żołądź! Żołądź! Użyj bloku Jeśli (if), by sprowadzić mnie tam przy użyciu jak najmniejszej liczby bloków.
      scrat 17:
        instructions: 'Ok, zróbmy to jeszcze raz dla poćwiczenia - nie różni się to zbytnio, ale uważaj na ścianę!'
      scrat 18:
        instructions: Bloki jeśli-w przeciwnym razie (if-else) sprawdzają warunek, a następnie wykonują jedną rzecz LUB drugą. By sprowadzić mnie do żołędzia, spróbuj użyć tego nowego bloku.
      scrat 19:
        instructions: Jeszcze jedno ćwiczenie z bloków jeśli-w przeciwnym razie. Czy potrafisz użyć ich prawidłowo przy pierwszym podejściu?
      scrat 20:
        instructions: Czy możesz dodać tylko 3 bloki, aby pomóc mi rozwiązać bardziej skomplikowany labirynt? Jeśli zrobisz to dobrze, to mogę przejść każdą krętą drogę bez względu na jej długość. Pospiesz się! Lód się topi!
      Standalone_Artist_1:
        instructions: 'Zapraszamy do Artysty! Najpierw, spróbujmy wykonać kwadrat używając bloków "obróć w prawo" i "przesuń do przodu". Każdy bok powinien mieć długość 100 pikseli.'
      Standalone_Artist_2:
        instructions: Narysuj ten diament z kontami 120 i 60 stopni i długościami boków 150 pikseli.
      Standalone_Artist_3:
        instructions: Czy potrafisz narysować ten sześciokąt z bokami 100 pikseli i obrotami 60 stopni?
      Standalone_Artist_4:
        instructions: Teraz masz do dyspozycji nowy blok, pętlę. Będzie powtarzał zestaw poleceń. Co się stanie, jeśli te polecenia zostaną wykonane w pętli 6 razy?
      Standalone_Artist_5:
        instructions: Ile razy musisz powtórzyć ten diament, by narysować kwiat?
      Standalone_Artist_5.5:
        instructions: 'Zwróć uwagę, jak uprościliśmy kod diamentu wykorzystując pętlę. Możesz teraz powtórzyć całę tę sekwencję 12 razy, aby narysować kwiat. Wskazówka: Musisz wykonać obrót o 30 stopni po każdym diamencie, by nie rysować cały czas tego samego diamentu.'
      Standalone_Artist_6:
        instructions: 'Wykonaj ten sześciokąt w pętli 6 razy, aby utworzyć wzór. O ile stopni będzie trzeba wykonać obrót za każdym razem? Wskazówka: podzielić liczbę stopni w okręgu przez ile razy jest wykonywana pętla.'
      Standalone_Artist_7:
        instructions: 'Funkcja jest kolejnym narzędziem programowania, które pomaga unikać powtarzania się. Ta funkcja rysuje kwiat, możesz więc użyć jej za każdym razem, gdy chcesz narysować kwiat. Użyj funkcji i nowego bloku skoku, by narysować te kwiaty. Wskazówka: Kwiaty są oddalone od siebie o 150 pikseli'
      Standalone_Artist_8:
        instructions: 'Tutaj jest funkcja o nazwie "Rysuj kształt", którą zaprogramowaliśmy, by rysować sześciokąty. Uruchom kod, aby zobaczyć, co robi, a następnie eksperymentuj z tą funkcją, aby zobaczyć co się dzieje. Czy mógłbyś spowodować, by rysowała wzory złożone z kwadratów, trójkątów lub ośmiokątów?'
      Standalone_Artist_9:
        instructions: Teraz idź dalej i twórz obrazki, jakie chcesz! Masz nawet pustą funkcja, którą możesz wykorzystać, by robiła, co chcesz!
    video:
      name:
        maze_intro: 'Labirynt - wprowadzenie'
        artist_intro: 'Artysta - wprowadzenie'
        farmer_intro: 'Rolnik - wprowadzenie'
        flappy_intro: Wprowadzenie do Flappy
        loop_times: Blok powtórz razy
        loop_until: Blok powtarzaj aż
        if: Blok jeśli
        if_else: Blok jeśli-w przeciwnym razie
        if_else_scrat: Blok jeśli-w przeciwnym razie
        function: Funkcje
        loop_while: Blok dopóki
        loop_for: Blok licznika
        parameters: Funkcje z parametrami
        hoc_wrapup: Wrapup Godziny Kodowania (Hour of Code)
        Unplug1: Co to jest CS (informatyka)?
        Unplug2: Myślenie komputacyjne
        Unplug3: Programowanie na papierze milimetrowym
        Unplug4: Algorytmy
        Unplug5: Funkcje
        Unplug6: Warunkowe
        Unplug7: Pisanie piosenek
        Unplug8: Abstrakcja
        Unplug9: Programowanie przekaźnika
        Unplug10: Internet
        Unplug11: Podsumowanie
        C1_happy_maps_unplugged: Szczęśliwe Mapy (Happy Maps)
        C1_moveitmoveit_unplugged: Przenieść go, przenieść go
        C1_bigevent_unplugged: Wielkie wydarzenie
        C1_getting_loopy: Dostać Loopy
        C1_pair_programming: Programowanie w parach
        C1_maze_intro_sequencing: Maze Sequencing Intro
        C1_maze_debugging: Maze Debugging
        C1_bee_level_intro: 'Bee Level - Intro'
        C1_artist_intro: 'Artysta - wprowadzenie'
        C1_spelling_bee_intro: Spelling Bee Intro
        C1_zuck_repeat_loop: Maze Loops
        C1_bee_loops: Bee Loops
        C1_maze_loops: Maze Loops
        C1_playlab_storytelling: 'Play Lab - Utwórz opowieść'
        C1_planting_seed: Zasadzenie nasiona
        C1_building_foundation: Building a Foundation
        C1_going_places_safely: Going Places Safely
        C2_maze_intro: 'Labirynt - wprowadzenie'
        C2_artist_intro: 'Artysta - wprowadzenie'
        C2_zuck_repeat_loop: Maze Loops
        C2_artist_loops: Artist Loops
        C2_artist_debugging: Artist Debugging
        C2_bee_loops: Bee Loops
        C2_bee_debugging: Bee Debugging
        C2_bee_conditionals: Bee Conditionals
        C2_playlab_createstory: 'Play Lab - Utwórz opowieść'
        C2_graph_paper: Programowanie na papierze milimetrowym
        C2_conditionals_with_cards: Warunkowe
        C2_binary_bracelets: Binary Bracelets
        C2_relay_programming: Programowanie przekaźnika
        C2_paper_airplanes: Samoloty z papieru
        C2_digital_footprint: Twój cyfrowy ślad
        C3_maze_level_4: Pętle w labiryncie
        C3_artist_intro: 'Artysta - wprowadzenie'
        C3_artist_functions: Funkcje Artysty
        C3_bee_functions: Funkcje Pszczoły
        C3_bee_conditionals: Bee Conditionals
        C3_maze_conditionals: Maze Conditionals
        C3_artist_nested_loops: 'Zagnieżdżające się  pętle'
        C3_farmer_while: Pętle Dopóki (While)
        C3_bee_nested_loops: 'Zagnieżdżające się  pętle'
        C3_bee_debugging: Debugowanie Pszczoły
        C3_bounce: Odbicie
        C3_playlab_create_game: 'Play Lab - Utwórz grę'
        C3_computational_thinking: Myślenie komputacyjne
        C3_dice_race: Wyścig w kości
        C3_internet: Internet
        C3_crowdsourcing: Crowdsourcing
        C3_functional_suncatchers: Funkcjonalne Suncatchers
        C3_songwriting_with_parameters: Pisanie Piosenek z parametrami
        C4_intro: Wstęp
        C4_bee_conditional: Bee Conditionals
        C4_variables_artist: 'Zmienne - Artysta'
        C4_variables_playlab: 'Zmienne - Play Lab'
        C4_for_loops: Pętle dla (for)
        C4_math_artist: Programowanie Artysty z pomocą matematyki
        C4_function_edit: Edytowanie Funkcji
        C4_function_create: Tworzenie Funkcji
        C4_function_parameters: Funkcje z parametrami
        C4_conditionals: Warunkowe
        C4_unplugged_algorithms: Algorytmy z Tangramami
        C4_unplugged_madlibs: Mad Libs
        C4_unplugged_variables: Zmienne w Kopertach
        C4_unplugged_forloops: Pętle dla (for)
        C4_unplugged_parameters: Songwriting with Parameters
        C4_unplugged_binary: Binarny
        frozen_intro: Wprowadzenie do Godziny Kodowania (Hour of Code)
        frozen_loops: Wprowadzenie do Pętli
        frozen_functions: Wprowadzenie do Funkcji
        playlab_intro: Wprowadzenie do Play Lab
        playlab_events: Zdarzenia Play Gry Lab
        playlab_repeat_forever: Play Lab Repeat Forever
    callout:
      text:
        drag_blocks: 'Drag a "move" block and snap it below the other block'
        run: 'Kliknij na "Uruchom", aby uruchomić program'
        watch_again: Kliknij tutaj, aby obejrzeć film ponownie
        gray_block_explanation: Nie można usunąć bloków, które są szare. Czy mógłbyś jakkolwiek rozwiązać tę łamigłówkę?
        show_code_explanation: Kliknij tutaj, aby zobaczyć kod programu, który tworzysz
        instructions_repeat_explanation: Instrukcje dla każdej łamigłówki są powtarzane tutaj
        category_explanation: Masz te same bloki, ale teraz są one ułożone w kategorie
        set_sprite_image: 'Attach a "set actor to image" block to the "when story starts" block to enable an actor for this story'
        studio_say_text: Type what you want your actor to say within these quotes
        jigsaw_click: Kliknij ten blok!
        move_elsa_forward: 'Drag a "Move Forward" block and snap it below the "When Run" block to make Elsa move forward'
        turn_elsa: 'Use the "Turn" block to make Elsa turn. The number in the drop-down determines how much Elsa turns'
        replace_questions: 'Użyj rozwijanego menu, aby zastąpić "???" przez liczbę'
        replace_questions_degree: 'Użyj rozwijanego menu, aby zastąpić "???" przez prawidłową liczbę stopni obrotu'
        repeat_blocks: 'Use the "Repeat" block and wrap it around the blocks in the workspace'
        repeat_blocks_1: (1) Use this block and put it around the grey blocks in the workspace
        repeat_blocks_2: '(2) Move the "Repeat" block here, and place the gray blocks inside'
        snowflake_dropdown: Use this drop-down to create different snowflakes!
        degrees_per_side: Divide 360 by the number of sides to get the size of each angle in degrees.
        set_sides: 'Use this block to set "sides" to the number needed to complete the puzzle.'
        set_length: 'Use this block to set "length" to the correct value.'
        which_equation: Which equation makes each side shorter for shapes with more sides?
        get_nectar: 'Use the new "get nectar" block.'
        actions_category: 'The tool box got a new look! The "Actions" blocks are in here now.'
        draw_square_hint: 'Hint: Use the square loop you just made in the last puzzle.'
        edit_function: Kliknij tutaj, aby edytować swoją funkcję.
        create_function: 'Click here to open the "Functions" flyout, then click the "Create a Function" button.'
        house_hint: "It's ok if the picture doesn't look like a house yet. We will fix it in the next puzzle."
        edit_draw_square: Use this button to edit the function and add the loop.
        edit_get_nectar: Use this button to edit the function and change the direction the Bee will turn to get the nectar.
        logic_category: 'Open the "Logic" flyout to find the "if/else" block.'
        length_parameter: 'Can you update this function so it uses the "length" parameter?'
        frozen_diamond_repeat: Use the repeat block to create this shape.
        frozen_circle_function_in_circle_turn: "Don't forget to turn after creating each circle."
        frozen_circle_function_with_parameter_circle: 'Use the "create a circle" block and change the size.'
        frozen_snowflake_branch: 'Use the "create a snowflake branch" block'
        frozen_create_square: Attach more blocks here to create a square
        playlab_drag_say: 'Drag the "say" block here and type "hello"'
        playlab_use_twice: Use this block twice and remember to change the actor number
        playlab_move_girl: 'Use the "move right" block to move Tennis Girl'
        playlab_play_sound: 'Add "play sound" block here'
        playlab_arrow_keys: Remember to use these to move the witch after clicking on Run
        playlab_add_move: 'Add "move" blocks inside this repeat block'
        playlab_add_score: Add score blocks here
        playlab_add_blocks: Add your blocks here
        set_variable: Drag a number block here to set your variable
        place_variable: Drag your variable inside this block
        bee_for_loop: Drag the largest number of nectar you want the bee to collect here
        place_counter_variable: Drag your counter variable inside this block
        function_editor_draw_square: 'This is your function definition. These blocks run everytime you use the "draw a square" block'
        change_here: Popraw tutaj
        write_draw_square_function: Przeciągnij tutaj bloki z przybornika, które narysują kwadrat
        write_draw_triangle_function: Drag blocks from the toolbox into here that draw a triangle
        edit_add_parameter: Click edit to add a parameter in your function
        add_and_drag_parameter: Write in the name of your parameter here, click add, and then drag it into your function definition
        fill_in_actor: Fill in the ??? with numbers that correspond to each actor (1, 2, and 3)
        repeat: Put blocks inside the loop to repeat commands
        if_bee_nectar: 'Use the "if" block to decide if the bee should get nectar'
        if_else_bee: |-
          Use the "if/else" block so that the Bee gets nectar from a flower, and makes honey if it's not a flower
        repeat_full_circle: Enter in the number of times the zombie has to move to make a full circle
        place_length_variable: Drag the length variable here to replace the question marks
        arrows_move_actor: Use the arrows to move the actor
        right_arrow_fireball: Use the right arrow to shoot fireballs
        name_function: Write the name of your function here
