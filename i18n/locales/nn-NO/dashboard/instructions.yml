nn:
  data:
    instructions:
      2-3 Artist 1 new_instruction: Hei, eg er ein kunstnar. Du kan skrive kode for å få meg til å teikna nesten kva som helst. Bruk nokre blokker for å få meg til å teikna over dei grå linjene på bildet. (Kvar linje er 100 pikslar lange)
      2-3 Artist 11_instruction: 'Gje stoppskiltet ein kant ved å lage ein åttekant med 100 piksel lange sider. Kor mange grader må du dreie? (Hint: Kva er 360 delt på 8?) '
      2-3 Artist 12_instruction: 'Sett "gjenta gongar" blokka slik at han lager ein sirkel for å fullføre auget. Hvis kvar rørsle blir dreid med ein grad, kor mange gonger må du gjenta for å fullføre sirkelen? 180? 360? 500?'
      2-3 Artist 2 new_instruction: 'Dette huset har ein halvferdig vegg. Kvar side er 100, men den halvferdige veggen er berre 50. Fullfør veggen. '
      2-3 Artist 2_instruction: 'Dette huset har en halv ferdig vegg. Hver side er 100, men den halvferdige veggen er bare 50. Fullfør veggen. '
      2-3 Artist 3.4_instruction: 'Hoppeblokka flyttar artisten utan å teikne. Tegn den stipla lina med hjelp av både hoppe- og teikne-blokker.'
      2-3 Artist 3_instruction: Denne hatten er 100 pikslar høg. Tegn ein hatt som er 70 pikslar mindre.
      2-3 Artist 3new_instruction: Den raude hatten er 100 pikslar høg. Tegn ferdig ein svart hatt som er 70 pikslar lågare. Bredda til den svarte hatten er 50 pikslar.
      2-3 Artist 4_instruction: Hjelp meg å gjere huset til denne katten ferdig.
      2-3 Artist 5_instruction: 'Erstatt denne koden med ein "gjenta gonger"-blokk for å teikne det same huset med berre tre blokker.'
      2-3 Artist 6_instruction: 'Dette huset treng eit tak! Teikn trekanten. Hint: alle dei tre sidene skal være like lange.'
      2-3 Artist 7_instruction: 'Gjer ferdig den høgre helvta av det siste vindauget. Kvart kvadratiske glas er 25 pikslar breidt. '
      2-3 Artist 8_instruction: Gjer ferdig romma for alle dyra ved å dele rektangelet i to like store firkantar. Rektangelet er 200 pikslar breidt og 100 pikslar høgt.
      2-3 Artist 9 NEW_instruction: Gjer ferdig denne dragen
      2-3 Artist 9 REPLACEMENT_instruction: Ferdiggjør tegningene av disse trappene!
      2-3 Artist 9_instruction: Gjer ferdig denne dragen
      2-3 Artist Assessment 1_instruction: 'Oppgåve: Teikne ferdig den siste tanna, 25 pikslar brei og 25 pikslar høg.'
      2-3 Artist Debugging 1_instruction: Kan du lage denne lua med ein topp som er 100 lang?
      2-3 Artist Debugging 10_instruction: 'Retningskontrolleren på spillkontrollen er for smal. Hint: Lag den 10 piksler breiere'
      2-3 Artist Debugging 11_instruction: 'Hjelp meg å gjøre det nydelege snøfnugget mitt ferdig. Kor mange gonger må eg "gjenta" for å gjere det ferdig?'
      2-3 Artist Debugging 12_instruction: Eg skal legge til ei bølge i denne scena. Kan du hjelpe meg?
      2-3 Artist Debugging 2_instruction: 'Koden for tre værhår som du ser, er feil. Hint: kvart værhår er 75 pikslar lang. Reparer koden som tegner værhåra.'
      2-3 Artist Debugging 3_instruction: 'Båten min har eit hol! Kan du fikse den ved å endre vinkelen til lina? Hint: den siste vinkelen er 15 grader feil.'
      2-3 Artist Debugging 4_instruction: Kva for bilete er det vi prøver å teikne? Fullfør ved å binde saman prikkane med rette linjer og vinklar.
      2-3 Artist Debugging 5_instruction: 'Koden for beinet og foten du ser er feil. Hint: Foten er for lang, me må kan hende slette eit steg (haha)'
      2-3 Artist Debugging 6_instruction: Det ser ut til at stolen eg sit på manglar eit bein. Rydd i blokkene for å tegne beinet.
      2-3 Artist Debugging 7_instruction: Det ser ut som C i koden er teikna feil veg. Kan du få han til å sjå ut som ein C?
      2-3 Artist Debugging 8_instruction: Hjulet mitt er ikkje ferdig. Kor mange gonger må eg gjenta for å gjera det ferdig?
      2-3 Artist Debugging 9_instruction: 'Koden for denne stamma er feil. Hint: Vinkelen er 60 grader feil'
      2-3 Artist Debugging Assessment 1_instruction: 'Denne forma er for lita. Kan du lage ho større? Hint: den skal være 75 pikslar lengre på kvar side.'
      2-3 Artist Free Play_instruction: Åpent brett! Teikn kva du vil.
      2-3 Artist Functions 1_instruction: 'Hallo. Meg zombiekunstner. Meg elske tegning! Hjelp meg tegne de firkanta brillene. Hint: mellomrommet mellom brilleglasa er 25 pikslar kortare enn lengda på firkantane.'
      2-3 Artist Functions 10_instruction: Her er to funksjonar, ein som teiknar eit stort tannhjul og ein som teiknar eit lite tannhjul. Bruk dei til å teikne innsida av ei maskin!
      2-3 Artist Functions 11.5_instruction: 'Her er den samme "Tegn ein sekskant"-funksjonen. Kva skjer om du bare snur 60 grader kvar gong du repeterer?'
      2-3 Artist Functions 11_instruction: 'Me har gitt funksjonen "teikn eit kvadrat" nytt namn, no heiter den "teikn ein seksskant", men den teiknar framleis berre kvadrat! Kan du endre "teikn ein sekskant"-funksjonen slik at den teiknar ein sekskant med 50 pikslar lange sider, og så teikne bildet ferdig med funksjonen?'
      2-3 Artist Functions 12 Mike_instruction: 'Funksjonar er verkeleg gode for å teikne komplekse ting fleire gonger. Kan du bruka ein «teikn ein blome» til å fylla resten av plankteboksen? (Hint: Planter er åtskilde med 100 pikslars avstand)  '
      2-3 Artist Functions 12_instruction: 'Funksjonar er verkeleg gode for å teikne komplekse ting fleire gonger. Kan du bruka ein «teikn ein blome» til å fylla resten av plankteboksen? (Hint: Planter er åtskilde med 100 pikslars avstand)  '
      2-3 Artist Functions 13_instruction: Vi har gitt deg fire funksjonar, Bruk dei slik du vil i ein eller fleire løkker for å lage bilete du kan dele med vennane dine. Trykk kjør for å sjå eit døme.
      2-3 Artist Functions 2_instruction: 'Funksjonar lar deg definere nye blokkar! Vi har flytta blokkar som teiknar eit kvadrat inn i ein funksjon som heiter "teikn eit kvadrat". Kan du bruke funksjonen "teikn eit kvadrat" til å lage vindaugsglasa? Kvadrata er 75 pikslar frå kvarandre.'
      2-3 Artist Functions 3_instruction: Rediger kvadratteiknefunksjonen slik at sidelengda er 115. Teikn dei større glassa. Kvadrata er no 45 pikslar frå kvarandre.
      2-3 Artist Functions 4_instruction: 'Bruk "gjenta"-blokka til å teikne desse tre kvadrata.'
      2-3 Artist Functions 7_instruction: 'Bruk "teikn eit hus"-funksjonen til å teikne to hus med to ulike parameter. (Hint: det første huset er 100 pikslar).'
      2-3 Artist Functions 9_instruction: Her er ein snøfnugg-funksjon. Prøv deg fram og lag ei vinterscene. Dette er ei frileik-oppgåve, så det er inga oppgåver å løyse. Ha det gøy!
      2-3 Artist Loops 1_instruction: Kan du lage ein sekskant med sider som er 100 pikslar lange slik at du fullfører cella? Husk, det tyder at du berre treng å snu 60 grader!
      2-3 Artist Loops 10_instruction: Kva skjer med designet om vi halverar lengda av det siste steget?
      2-3 Artist Loops 11_instruction: 'Nå la oss sette *enda* ei løkke rundt heile verket! Ikkje gløym å legge til ein vinkel på slutten av den ytre løkka.'
      2-3 Artist Loops 2_instruction: Bruk ei gjenta-blokk for å lage eit skall til cella.
      2-3 Artist Loops 4_instruction: Vil du sjå kva som skjer når vi gjentar figuren om att og om att med ei løkke?
      2-3 Artist Loops 5_instruction: Nå skal vi gjere ei lita endring i løkka og sjå kor annleis bildet blir.
      2-3 Artist Loops 6_instruction: Legg til ein bevegelse og ein sving inne i løkka og sjå korleis designet endrar seg.
      2-3 Artist Loops 7_instruction: Vi kan bruke løkker til å lage alle slags polygoner. Kan du lage ein rombe inne i denne sekskanten?
      2-3 Artist Loops 8_instruction: La oss putte begge elementa inn i ei løkke.
      2-3 Artist Loops 9_instruction: "Vi skal ha ei løkke med dei same elementa, men nå skal vi legge til avstand mellom dei.\\r Bruk same koden som før, men legg til eit steg framover i den ytre løkka."
      2-3 Artist Loops New 1_instruction: La oss tegne hovudet til denne roboten! Kan du lage eit kvadrat der sidene er 100 pikslar lange?
      2-3 Artist Loops New 10_instruction: "Nå skal me koble saman ein haug med V'ar ved å teikne dei med ei løkke."
      2-3 Artist Loops New 11_instruction: Denne gongen skal vi tegne den 24 gonger. Legg til ein 30 graders venstresving og legg alt inn i ei gjenta-blokk.
      2-3 Artist Loops New 12_instruction: |
        Tegn ein diamant der kvar av sidene er 100 piksel.
        
      2-3 Artist Loops New 13_instruction: Nå teiknar du diamanten 3 gongar inni ei løkke.
      2-3 Artist Loops New 14_instruction: Nå skal vi teikne diamanten 10 gongar, men rotere 90 grader mellom kvar diamant.
      2-3 Artist Loops New 15_instruction: Teikn noko morosamt.
      2-3 Artist Loops New 2_instruction: Her er noko av koden du brukte for å teikne kvadratet. Kva skjer om du bruker ei gjenta-blokk til å køyre denne koden 4 gongar?
      2-3 Artist Loops New 9_instruction: Teikn ein enkel V der begge sider er 50 pikslar for å fullføre pila.
      2-3 Artist Match Hex Pic_instruction: 'Match: Hjelp til med å fullføre sekskanten.'
      2-3 Artist Match Rho Pic_instruction: 'Match: Avslutt koden.'
      2-3 Artist Match Sq Pic_instruction: 'Match: Fullfør koden'
      2-3 Artist Match Tri pic_instruction: 'Match: Fyll inn manglande kode.'
      2-3 Artist Nested Loops 1_instruction: "Du har brukt løkker til å teikne figurar før, men visste du at du kan sette ei løkke inni ei anna løkke?\n\\r\nRepeter denne løkka 3 gongar for å teikne figuren."
      2-3 Artist Nested Loops 10_instruction: Gjenta denne koden 12 gongar for å gjere ferdig mønsteret.
      2-3 Artist Nested Loops 11_instruction: Gjenta denne koden 4 gongar for å fullføre mønsteret. Snu 90 grader etter kvar sirkel.
      2-3 Artist Nested Loops 12_instruction: Gjenta denne koden 12 gongar for å fullføre krøllane.
      2-3 Artist Nested Loops 2_instruction: No skal vi køyre trekantblokka gjennom løkka 6 gongar. Etter kvar trekant må du snu 60 grader før du teiknar det neste.
      2-3 Artist Nested Loops 3_instruction: For å teikna dette mønsteret må du gjenta trekanten 12 gongar. Del talet på grader i ein sirkel (360) med talet på figurar du teiknar (12), for å rekna ut kor mykje du må snu etter kvar figur.
      2-3 Artist Nested Loops 4_instruction: 'Gjenta denne diamanten 12 gongar for å teikna ein blom. Tips: 12 diamanter er akkurat likt dei 12 trekantane du laga sist. Kor mykje må du snu etter kvar figur?'
      2-3 Artist Nested Loops 5_instruction: Teikn inn vindauga i denne bygninga med løkke i løkke. Vindauga er 20 pikslar breie og har 20 pikslar mellom kvart vindauge.
      2-3 Artist Nested Loops 6_instruction: Dinosauren har 8 taggar langs halen sin; kvar tagg er 30 pikslar lang. Teikn trekanten 8 gongar, men pass på å flytte deg framover etter kvar.
      2-3 Artist Nested Loops 7_instruction: Gjenta denne trekanten 10 gongar for å teikne sola. Du må flytte deg og snu deg etter kvar trekant. Du finn ut kor mykje du må snu deg ved å dele talet på grader i ein sirkel med talet på figurar sirkelen skal lagast av.
      2-3 Artist Nested Loops 8_instruction: No skal me legge til gras på biletet. Det er 50 pikslar mellom kvar grastust.
      2-3 Artist Nested Loops 9_instruction: Me skal avslutte biletet med å legge til ein blome. Teikn diamanten 12 gongar for å teikne blomen.
      2-3 Artist Nested Loops Free Play_instruction: 'Frileik: teikn noko kult med løkker i løkker.'
      2-3 Bee Conditionals 1_instruction: Hallo! Eg er ei bie. Hjelp meg å samla nektar frå blomen.
      2-3 Bee Conditionals 10_instruction: "Lilla blomer kan ha 1 eller 0 nektar. Pass på at du ikkje samlar inn nektar frå ein lilla blome som ikkje har nektar.\\r\n"
      2-3 Bee Conditionals 11_instruction: Samle inn nektar dersom blomane har nektar.
      2-3 Bee Conditionals 12_instruction: Bruk ein løkke for å sjekke og samle inn nektar frå alle desse blomane.
      2-3 Bee Conditionals 13_instruction: 'Samle nektar og lag honning. Hint: kva skjer om du bruker "viss nektar" på ein raud blome? Kan du gjere ferdig dette med ei løkke?'
      2-3 Bee Conditionals 14_instruction: Samle nektar og lag honning. Ver forsiktig så du ikkje samlar inn nektar frå dei lilla blomane om dei ikkje har noko.
      2-3 Bee Conditionals 15_instruction: Samle nektar frå alle dei fire blomane.
      2-3 Bee Conditionals 2_instruction: Hei, eg er ei bie! Hjelp meg å samle all nektaren frå blomane. Bruk ei løkke.
      2-3 Bee Conditionals 3_instruction: Hjelp meg å samle all nektaren frå blomane og lage honning. Bruk ei løkke.
      2-3 Bee Conditionals 4_instruction: Hjelp meg å samle all nektaren frå blomane og lag all honningen.
      2-3 Bee Conditionals 5_instruction: 'Lilla blomer har enten 1 eller 0 nektar, men du veit ikkje svaret! Pass på at du ikkje samlar nektar frå ein lilla blome om han ikkje har noko. Sjekk om nektar er lik 1 ved å bruke ein "viss"-blokk.'
      2-3 Bee Conditionals 6_instruction: 'Bruk ein "viss"-blokk for å sjekke om det er nektar i blomen.'
      2-3 Bee Conditionals 7_instruction: Samle nektar frå alle blomane dersom dei har nektar.
      2-3 Bee Conditionals 8_instruction: Dette jordet har raude og lilla blomar. Raude blomar har ei gitt mengde nektar, medan lilla har ei ukjend mengde nektar. Samle inn all nektaren.
      2-3 Bee Conditionals 9_instruction: Samla inn all nektar frå kvar blome.
      2-3 Bee Conditionals Assessment 1_instruction: 'Oppgåve: Samle all nektaren. Ver forsiktig så du ikkje samlar nektar frå ein lilla blome om den ikkje har noko.'
      2-3 Bee Debugging 1_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      2-3 Bee Debugging 10_instruction: Desse blokkane plagar meg. Fiks feila og samle inn all nektaren for å lage all honningen.
      2-3 Bee Debugging 2_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      2-3 Bee Debugging 3_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      2-3 Bee Debugging 4_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      2-3 Bee Debugging 5_instruction: 'Desse blokkane plagar meg. Fiks feila og samle inn nektaren for å lage all honningen. No kan du bruke "køyr" og "steg".'
      2-3 Bee Debugging 6_instruction: Desse blokkane er verkeleg irriterande. Fiks det som er feil for å samle all nektaren.
      2-3 Bee Debugging 7_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      2-3 Bee Debugging 8_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      2-3 Bee Debugging 9_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      2-3 Bee Debugging Assessment 1_instruction: 'Oppgåve: Dess blokkane plagar meg. Fiks feila og samle inn all nektaren slik at du kan lage all honningen.'
      2-3 Bee Functions 1_instruction: 'Funksjonar er blokker med kode som gjer ei oppgåve. Bruk blokka "hent 2 nektar" for å samle inn nektar frå kvar blome.'
      2-3 Bee Functions 10_instruction: Lilla blomar har enten ein eller null nektar. Lag ein funksjon som berre samlar nektar frå dei blomane som har nektar i seg.
      2-3 Bee Functions 2_instruction: 'Funksjoner er kodeblokker som gjer ei bestemd oppgåve. Bruk blokka "hent 5" for å samle inn fem nektar av gongen. Bruk ei løkke for å få rett antal blokker.'
      2-3 Bee Functions 3_instruction: Samla inn all nektar frå kvar blome.
      2-3 Bee Functions 4_instruction: 'Funksjonen "flytt og hent nektar" snur bia, samlar inn nektar og returnerer til der den starta. Bruk denne funksjonen til å samle inn all nektaren.'
      2-3 Bee Functions 5_instruction: Det er nå meir nektar i blomane. Endre funksjonen slik at den samlar 4 nektar og bruk den til å samle all nektaren frå blomane.
      2-3 Bee Functions 6_instruction: Bruk nå den same funksjonen til å samle nektar frå tre blomar.
      2-3 Bee Functions 7_instruction: Blomane er nå lengre unna. Endre funksjonen og bruk den til å samle all nektar frå blomane.
      2-3 Bee Functions 8_instruction: Lag din egen funksjon for å samle inn 7 nektar, bevege seg framover og lage 7 med honning. Bruk funksjonen til å samle nektar frå alle blomane og lag honning ved alle bikubane.
      2-3 Bee Functions 9_instruction: Lag din egen funksjon som går ned stien, hentar nektar, lagar honning og får bia tilbake til toppen av stien.
      2-3 Bee Functions Assessment 1_instruction: 'Oppgåve: Bruk funksjonen til å samle inn nektar frå alle blomane.'
      2-3 Bee Functions Assessment 2_instruction: 'Oppgåve: Lag ein funksjon som lager 3 honning om gongen.'
      2-3 Bee Loops 1_instruction: 'Kvar blome inneheld ein porsjon nektar. Hent nektar frå alle blomane. '
      2-3 Bee Loops 10_instruction: Får du til å bruke ei medan-løkke inne i to andre løkker for å samle inn all nektaren?
      2-3 Bee Loops 11_instruction: Bruk ei medan-løkke til å samle all nektaren frå blomane i dette feltet.
      2-3 Bee Loops 12_instruction: Bruk ei medan-løkke til å samle all nektaren frå blomane i dette feltet.
      2-3 Bee Loops 13_instruction: 'Oppgåve: Bruk gjenta-blokken for å samle all nektaren.'
      2-3 Bee Loops 1A_instruction: 'Hei, eg er ei bie. Kan du hjelpe meg med å samle all nektaren frå desse blomane? '
      2-3 Bee Loops 2_instruction: Bruk ei løkke for å samle all nektaren og lage honningen.
      2-3 Bee Loops 2A_instruction: Kan du løyse same oppgåve enklare ved å bruke ei løkke?
      2-3 Bee Loops 3_instruction: Samle inn nektar frå alle blomane og lag honning i kvar av bikubane.
      2-3 Bee Loops 3A_instruction: Kan du bruke ei løkke for å samle inn all nektaren?
      2-3 Bee Loops 3B_instruction: Nå kan du bruke den nye gjenta-blokken for å samle inn nektar og lage honning.
      2-3 Bee Loops 4_instruction: 'Bruk ei lik løkke som i førre oppgåve, men ta med ein "snu"-blokk.'
      2-3 Bee Loops 4A_instruction: Kva skjer om du gjentar denne sekvensen 3 gongar? Ikkje gløym å lage honning til slutt!
      2-3 Bee Loops 5_instruction: Bruk ei løkke får å gå ned trinna og samle nektaren.
      2-3 Bee Loops 6_instruction: Bruk ei løkke for å samle nektar frå kvar blomst og lage honning i kvar bikube.
      2-3 Bee Loops 7_instruction: Sette desse blokkane i ei løkke for å samle inn nektar frå kvar blome.
      2-3 Bee Loops 8_instruction: 'Desse lilla blomane har ei ukjend mengde nektar. Bruk løkka "medan nektar" til å samle inn all nektaren. Denne løkka vil køyre så lenge som føresetnaden er til stades. I dette tilfellet er det dersom Nektar > 0.'
      2-3 Bee Loops 9_instruction: Medan-løkka kan utføre dei same operasjonane som ein viss-setning.
      2-3 Bee Loops Assessment 1_instruction: 'Oppgåve: Bruk ein medan-løkke til å samle inn all nektaren frå denne blomen.'
      2-3 Maze 1_instruction: 'Kan du hjelpe meg å fange den slemme grisen? Sett saman eit par "gå framover" blokkar og trykk "Køyr". '
      2-3 Maze 10_instruction: Før meg til den grøne styggingen! (Sjå opp for dynamitt)
      2-3 Maze 11_instruction: Få meg bort til blomen, eg er svolten! Kor mange gongar er du nødt til å gjenta ei blokk?
      2-3 Maze 12 (copy 1)_instruction: 'Kan du erstatte førre svar med berre to blokkar? (Hint: Lag ei løkke ved å bruke "gjenta gongar" blokken.)'
      2-3 Maze 12 (copy 2)_instruction: 'Kan du erstatte førre svar med berre to blokkar? (Hint: Lag ei løkke ved å bruke "gjenta gongar" blokken.)'
      2-3 Maze 12 (old)_instruction: 'Få meg til grisen ved å bruke "Gjenta gongar" blokken!'
      2-3 Maze 12 - One Move Block_instruction: |
        Get to the pig! But this time, you
        can only use one `move forward` block. Do you see any other blocks that could
        help you?
      2-3 Maze 12_instruction: 'Kan du erstatte desse fem blokkane med berre to blokkar? (Hint: Lag ei løkke ved å bruke ein "gjenta gongar" blokk.)'
      2-3 Maze 13 (old)_instruction: 'Få meg til grisen ved å bruke "Gjenta til" blokken!'
      2-3 Maze 13_instruction: Få meg til grisen ved å berre bruke to blokkar.
      2-3 Maze 14 (old)_instruction: 'Få meg til grisen ved å bruke "Gjenta til" blokken!'
      2-3 Maze 14_instruction: 'Få meg til solsikka!(Kvar er "Gjenta gongar" blokken når eg treng den?)'
      2-3 Maze 15 (old)_instruction: 'Få meg til grisen ved å bruke "Gjenta til" blokken!'
      2-3 Maze 15_instruction: Bruk to løkker for å komme til grisen ved å bruke færre blokkar.
      2-3 Maze 16 (old)_instruction: 'Få meg til grisen ved å bruke "Gjenta til" blokken!'
      2-3 Maze 16 before_instruction: Få meg til grisen!
      2-3 Maze 16_instruction: Få meg til solsikka. Gjenta bevegelsane!
      2-3 Maze 2_instruction: Denne grisen har røska i fjøra mine. Hjelp meg å få tak i han!
      2-3 Maze 3_instruction: Følg stien og led meg til den dumme grisen. Unngå dynamitten om du ikkje vil at eg skal forsvinne i ei sky av fjør!
      2-3 Maze 4_instruction: Før meg til den grøne styggingen! (Sjå opp for dynamitt)
      2-3 Maze 5_instruction: Før meg til den grøne styggingen! (Sjå opp for dynamitt)
      2-3 Maze 6_instruction: Hold deg i ro og hjelp meg med å finne den slemme grisen. Elles blir eg kanskje sinna!
      2-3 Maze 7_instruction: Før meg til den grøne styggingen! (Sjå opp for dynamitt)
      2-3 Maze 8_instruction: Få meg til grisen!
      2-3 Maze 9_instruction: Før meg til den grøne styggingen! (Sjå opp for dynamitt)
      2-3 Maze Loops 1_instruction: Kan du få meg bort til grisen ved å bruke kun 5 blokkar?
      2-3 Maze Loops 17_instruction: Få meg til solsikka!
      2-3 Maze Loops 18_instruction: Få meg til solsikka!
      2-3 Maze Loops 19_instruction: Få meg til solsikka!
      2-3 Maze Loops 20_instruction: Få meg til solsikka!
      2-3 Maze Loops 21_instruction: Få meg til solsikka!
      2-3 Maze Loops Assessment 1_instruction: 'Oppgåve: Få meg til solsikka med berre 5 blokker! '
      2-3 Maze sq1_instruction: |
        This pig is ruffling my feathers.  Help me find
        him!
      2-3 Maze sq10_instruction: Få meg til grisen! Kva blokkar ble gjenteke?
      2-3 Maze sq10v2_instruction: Få meg til grisen! Kva blokkar ble gjenteke?
      2-3 maze sq11_instruction: Få meg til grisen! Kva blokkar ble gjenteke?
      2-3 maze sq12_instruction: 'Kan du erstatte førre svaret med ei løkke ved å bruke ein "gjenta gongar" blokk?'
      2-3 maze sq13_instruction: 'Kjære person. Meg zombie. Må... gå... til solsikka. Lag ei løkke med "gjenta til" blokk.'
      2-3 maze sq14_instruction: Klarar du å komme deg til solsikka med berre fire blokkar?
      2-3 maze sq15_instruction: Klarar du å komme deg til solsikka med berre fem blokkar?
      2-3 maze sq16_instruction: Ok, denne liknar, men er noko annleis. Kan du gjere det med kun fem blokkar?
      2-3 Maze sq2_instruction: Følg stien og led meg til den dumme grisen. Unngå dynamitten om du ikkje vil at eg skal forsvinne i ei sky av fjør!
      2-3 Maze sq3_instruction: Før meg til den grøne styggingen! (Sjå opp for dynamitt)
      2-3 Maze sq4_instruction: Hold deg i ro og hjelp meg med å finne den slemme grisen. Elles blir eg kanskje sinna!
      2-3 Maze sq5_instruction: Få meg til grisen! Kor mange gongar må du gjenta ein blokk?
      2-3 Maze sq6_instruction: 'Kan du erstatte det forrige svaret med kun to blokkar. (Hint: Lag ei løkke ved å bruke ein "gjenta gongar" blokk.)'
      2-3 Maze sq7_instruction: Få meg bort til den grøne inntrengaren ved å kun bruke tre blokkar.
      2-3 Maze sq8_instruction: 'Få meg bort til grisen! (Kvar er den "gjenta gongar" blokken når eg treng den?)'
      2-3 Maze sq9_instruction: Lag løkker for å komme bort til grisen ved bruk av færre blokkar.
      2-3_instruction: |
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: Hjelp fuglen å fange den slemme grisen ved å flytte den framover
      20hr_farmer_stage9_1_instruction: |
        Hi, I'm a farmer. I need your help to flatten
        the field on my farm so it's ready for planting. Move me to the pile of dirt
        and use the "remove" block to remove it.
      20hr_farmer_stage9_10_instruction: |
        I'm working late, so it's dark out, and
        I can't tell how large the piles are. Now I don't have all the options I
        used to have on the while block. Move me along the field, and if there is
        a pile, remove it
      20hr_farmer_stage9_11_instruction: |
        It's still dark outside. Move me along
        the field. If there is a pile, remove it, and if there is a hole, fill it
        in. Hint: use the dropdown menu of options on the "if" block.
      20hr_farmer_stage9_2_instruction: |
        Next, move me to the hole and fill it with
        TWO shovelfuls of dirt, using the "fill" block.
      20hr_farmer_stage9_3_instruction: |
        Move me to the pile of dirt and tell me
        how many shovelfuls to remove using as few blocks as possible.
      20hr_farmer_stage9_4_instruction: |
        Can you help me remove all four piles of
        dirt? Hint: use a repeat block if you can.
      20hr_farmer_stage9_5_instruction: |
        Help me fill in all these holes with 5 shovelfuls
        of dirt. Hint: you can put a "repeat" block inside the "while" block.
      20hr_farmer_stage9_6_instruction: |
        Remove all the piles of dirt, using as few
        blocks as possible. The new options in the dropdown menu on the "while"
        block tell me if I'm standing on a pile or a hole.
      20hr_farmer_stage9_7_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs. Can you write a program that fills
        it until the ground is even?
      20hr_farmer_stage9_8_instruction: |
        Help me fill in the hole at the end of the
        field, using as few blocks as possible.
      20hr_farmer_stage9_9_instruction: |
        Make me remove all these piles of dirt.
        Try to use as few blocks as possible. Hint: try using a "while" block.
      20hr_maze_stage2_1_instruction: |
        Can you help me to catch the naughty pig?
        Stack a couple of "move forward" blocks together and press "Run" to help
        me get there.
      20hr_maze_stage2_10_instruction: |
        Ok, try the new "repeat until" block -
        it will repeat until I reach the annoying pig.
      20hr_maze_stage2_11_instruction: |
        Ok, one last time for practice - can you
        solve this one using only 4 blocks?
      20hr_maze_stage2_12_instruction: |
        Dear person. Me zombie. Me hungry. Must...
        get... to sunflower... Can you get me there with only 5 blocks?
      20hr_maze_stage2_13_instruction: |
        Ok, this is similar, but slightly different.
        Can you do it in only 5 blocks?
      20hr_maze_stage2_14_instruction: |
        Use the new "if" block to let me decide
        when to turn. Hint: you only need one more block, but learn how we set it
        up so you can do it on your own next time.
      20hr_maze_stage2_15_instruction: |
        Ok, this is just like the last puzzle, but
        you need to remember how you used the "if" block and the "repeat" block
        together.
      20hr_maze_stage2_16_instruction: |
        Me want sunflower! Use an "if" block to
        get me there with the fewest number of blocks.
      20hr_maze_stage2_17_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the chompers!
      20hr_maze_stage2_18_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the sunflower try to use
        this new block.
      20hr_maze_stage2_19_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      20hr_maze_stage2_2_instruction: |
        This pig is ruffling my feathers. Help me
        to find him!
      20hr_maze_stage2_20_instruction: |
        Can you add just 3 blocks to help me solve
        a more complex maze? If you do it right, I can walk any curvy path no matter
        the length.
      20hr_maze_stage2_3_instruction: |
        Trace the path and lead me to the silly pig.
        Avoid TNT or the feathers will fly!
      20hr_maze_stage2_4_instruction: |
        Guide me to the green evilness! (Watch out
        for TNT)
      20hr_maze_stage2_5_instruction: |
        Keep calm and help me to find the bad pig.
        Otherwise I might get angry!
      20hr_maze_stage2_6_instruction: |
        There's a way I can get to the silly pig
        using only 2 blocks. Can you figure it out?
      20hr_maze_stage2_7_instruction: |
        Try to get me to the green intruder using
        only three blocks.
      20hr_maze_stage2_8_instruction: |
        Help me banish this bad piggy using the fewest
        number of blocks. Try using more than one "repeat times" block.
      20hr_maze_stage2_9_instruction: |
        When a block is grey, that means you can't
        delete it. Solve this puzzle using the "repeat" block that repeats 3 times.
        Try putting these 3 blocks inside the grey "repeat" block: move, move, turn.
      4-5 Artist 1_instruction: Hjelp meg å teikne ferdig boksen. (Kvar linje er 300 pikslar lang)
      4-5 Artist 10_instruction: 'Trykk på "Køyr" for å teste koden. Deretter, gjenta det mange nok gongar til å fullføre teikninga. Fargane vil vere ulike kvar gong.'
      4-5 Artist 11_instruction: Fullfør dei grøne linjene. Linjene er 300 pikslar lang og 15 pikslar frå kvarandre.
      4-5 Artist 2_instruction: Kan du fullføre kvadratet ved hjelp av ei løkke?
      4-5 Artist 3.5_instruction: 'Ok, prøv å sjå kva som kjem til å skje om du køyrar denne koda (eller trykk "Køyr" for å prøve den). Deretter, gjentek du dette heilt til biletet er ferdig. Fargane vil mest sannsynleg bli ulik kvar gong.'
      4-5 Artist 3_instruction: Dette rektangulære blomsterbedet har ein omkrins på 600. Langsida har ei lengde på 200. Teikn rektangelet.
      4-5 Artist 4_instruction: Kor mange grader er det i ein sirkel? Bruk ei løkkeblokk for å lage ein fargesirkel.
      4-5 Artist 5_instruction: Kva vinkel bruker du?
      4-5 Artist 6_instruction: I ein likesida trekant er alle vinklane 60 grader. Kvar side er 200 pikslar. Fullfør teikninga.
      4-5 Artist 7_instruction: Denne rettvinkla trekanten har vinklar på 30, 60 og 90 grader. Den skrå linja er dobbelt så lang som høgda som er 100 pikslar. Fullfør teikninga.
      4-5 Artist 8_instruction: Midtlinja på ein fotballbane er vinkelrett på sidelinjene. Denne banen har ein omkrins på 800 pikslar og er 240 pikslar lang. Kor brei er den? Teikn sidelinjene og midtlinja.
      4-5 Artist 9_instruction: Teikn den andre halvparten slik at designet blir symmetrisk. Trekantane er likesida og kvar side er 50 pikslar lange.
      4-5 Artist Assessment 1_instruction: 'Oppgåve: Bruk ei løkke for å teikne ein likesida trekant. Kvar side er 300 pikslar.'
      4-5 Artist For Loops 1_instruction: Sett tala 1 til 10 inn i breddeboksane og køyr koden.
      4-5 Artist For Loops 11_instruction: 'Fullfør "for"-blokkene slik at den tel 0, 20, 40, 60, 80... 200.'
      4-5 Artist For Loops 12_instruction: 'Kva skjer om du reverserer "frå" og "til"-tala. Fullfør "for"-blokken så den tel 200, 180, 160, 140, 120...0. '
      4-5 Artist For Loops 13_instruction: 'Designet starta uten ein "for" løkke og brukar for mange blokkar. Bruk ein "for" blokk til å fullføre spiralen. Hint: lengda på den siste linja er 250 pikslar.'
      4-5 Artist For Loops 14_instruction: 'Nokon starta koden, men såg at det måtte vere ein raskare måte! Bruk ein "for" blokk til å erstatte blokkane og fullfør den trekanta spiralen. (Hint: lengda på den siste linja er 300 pikslar.)'
      4-5 Artist For Loops 15_instruction: 'Nokon starta koden, men såg at det måtte vere ein raskare måte! Bruk ein "for" blokk til å erstatte blokkane og fullfør den sekskanta spiralen. (Hint: lengda på den siste linja er 200 pikslar.)'
      4-5 Artist For Loops 2_instruction: |
        This is a "for" block. Instead of typing
        1,2,3... 10, the "for" block can repeat the blocks inside it and count the
        numbers for you. Place the number 10 into the "to" section of the "for"
        block.
      4-5 Artist For Loops 3_instruction: 'Korleis kan vi telje frå 1 til 50? Endre "for" blokken.'
      4-5 Artist For Loops 4_instruction: 'Fullfør "for" blokken slik at den tel frå 1 til 10 med 1.'
      4-5 Artist For Loops 6_instruction: 'Teikn kvadrat med sider på 50, 60, 70, 80 og 90 pikslar. Du må bruke "teikn eit kvadrat" funksjonen fem gongar.'
      4-5 Artist For Loops 7_instruction: 'Teikn dei same kvadrata, men bruk ein "tel med" blokk til å endre storleiken. Plasser ein "teljar" blokk i "teikn eit kvadrat" funksjonen. Hint: den er i kategorien Variablar.'
      4-5 Artist For Loops 8_instruction: 'Kan du fullføre programmet ved å plassere blokkane inn i ein "for" blokk som tel frå 10 til 200 med steg på 10? Du finn "for" blokken i kategorien Løkker.'
      4-5 Artist For Loops 9_instruction: 'Desse sirklane har storleiken 5, 10, 15, 20, 25, 30 og 35. Teikn sirklane ved å bruke ein "for" løkke.'
      4-5 Artist Free Draw 1_instruction: Friteikning. Teikn det du vil.
      4-5 Artist Functions 1_instruction: Bruk ein gjenta-løkke til å teikne denne trekanten.
      4-5 Artist Functions 10a_instruction: 'Sett denne koden inn i "teikn eit snøfnugg" funksjonen og erstatt 50 med parameteren "storleik". Funksjonen er allereie kalla på for å opprette snæfnugg på 100 pikslar.'
      4-5 Artist Functions 10b_instruction: 'Bruk "teikn eit snøfnugg" funksjonen for å opprette snøfnugg av ulik storleik. Hint: lengda på det første snøflaket er 25 og kvart snøfnugg er dobbelt så stort som det førre.'
      4-5 Artist Functions 11_instruction: '"Teikn sekskant" funksjonen brukar "teikn ein trekant" funksjonen. Gjer ferdig sekskant funksjonen. (Hint: Ein sekskant har 6 sider, der kvar er 100 pikslar lang)'
      4-5 Artist Functions 12_instruction: 'Fullfør "teikn bølger" funksjonen. Kvar bølge består av ei Øvre bølge og ei Nedre bølge. Hint: Teikn 5 blå bølger.'
      4-5 Artist Functions 13 Free play_instruction: Her er nokre funksjonar til å teikne planetar, stjerner, rakettar og robotar. Bruk dei slik du sjølv ønskjer til å lage bilete du kan dele med vennene dine.
      4-5 Artist Functions 14 Free play_instruction: 'Her har vi gitt deg fleire funksjonar. Bruk dem slik du sjølv vil inni ei eller fleire løkker for å lage bilete som du kan dele med vennene dine. Klikk "Køyr" for å sjå eit døme.'
      4-5 Artist Functions 15 Assessment_instruction: 'Oppgåve: Bruk "teikn eit kvadrat" funksjonen til å opprette kvadrata. Kvadrata er 50, 100 og 150 pikslar.'
      4-5 Artist Functions 2a_instruction: 'Sett desse blokkane inn i ein ny funksjon kalla "teikn ein liten trekant" og kall på den.'
      4-5 Artist Functions 2b_instruction: 'Opprett ein funksjon kalla "teikn ein liten trekant" ved å bruke dei gitte blokkane.'
      4-5 Artist Functions 3_instruction: 'Opprett funksjonane "teikn ein medium trekant" og "teikn ein stor trekant". "Teikn ein liten trekant" er oppretta for deg. Trekantane har sider med lengdene 50 (liten), 100 (medium) og 150 (stor). '
      4-5 Artist Functions 4_instruction: 'Denne nye "teikn ein trekant" funksjonen har ein parameter og kan gjere det same arbeidet som alle dei tre funksjonane vi laga tidlegare. Teikn dei same trekantane ved å bruke den nye funksjonen.'
      4-5 Artist Functions 5_instruction: 'Kan du endre "teikn ein trekant" funksjonen til ein "teikn eit kvadrat" funksjon for å endre teikninga?'
      4-5 Artist Functions 6_instruction: 'Bruk "teikn eit kvadrat" og "teikn ein trekant" funksjonane til å teikne eit hus. (Hint: Kvadratet sine sider er 200 pikslar)'
      4-5 Artist Functions 6b_instruction: 'Bruk funksjonane som teiknar eit kvardrat og ein trekant saman med andre blokkar for å lage eit hus ved å legge dei til i "teikn eit hus" funksjonen og kalle den.'
      4-5 Artist Functions 7_instruction: 'Bruk "teikn eit hus"-funksjonen til å teikne hus som er 100 pikslar og 50 pikslar. Dei to husa skal ha 50 pikslar mellom seg.'
      4-5 Artist Functions 8_instruction: 'Funksjonen "teikn ein blome" har ein parameter som let deg bestemme høgda på stilken. Sett høgda til 200 og sjå kva som skjer.'
      4-5 Artist Functions 9_instruction: Teikn desse 3 blomene. Høgda på den første er 100, og den neste blomen har alltid 50 pikslar meir enn høgda på den førre. Blomene er òg 100 pikslar frå kvarandre.
      4-5 Artist Patterns 1_instruction: |
        Klarer du å teikne dette kvadratet ved bruk av ei løkke? 
        Kvar side er 20 pikslar lang.
      4-5 Artist Patterns 10_instruction: |
        Denne koden teikner to rader med sekskantar – 
        repeter heile kodeblokka 4 gonger for å teikne heile bikubemønsteret. Tips: Du må hoppe tilbake 120 pikslar i den ytste løkka for å passe på at artisten ikkje teiknar utanfor skjermen.
      4-5 Artist Patterns 11_instruction: 'Kor mange gonger må du repetere denne koden for å teikne ein halvsirkel? Tips: Om det er 360 grader i ein heil sirkel og kvar repetisjon flyttar seg 3 grader, kor mange gonger må du repetere koden for å teikne ein heil sirkel?'
      4-5 Artist Patterns 12_instruction: Kva skjer om du kopierer løkka og snur mot venstre i staden for mot høgre? Kan du du bruke ein gjenta-blokk til å teikne denne bølga?
      4-5 Artist Patterns 13_instruction: Lat oss no gjere det heile opp att fire gonger for å lage biletråma. Sjå opp for hjørna – du kan ikkje berre snu deg 90 gradar! Ein halvsirkel kan du lage ved å repetere 3 gradar 60 gonger. Så kva for kodeblokkar må du bruke for å lage ein kvart-sirkel til hjørna?
      4-5 Artist Patterns 2_instruction: Om du legg firkant-løkka inni ei anna løkke, kallar me det ei løkke i løkke. Kva må du legge til i den ytre løkka for at alle 15 firkantane skal vere på ei linje ved sidan av kvarandre?
      4-5 Artist Patterns 3_instruction: No skal me eitt hakk djupare! Me har nøsta heile kodeblokka inn ei anna løkke, men du må få artisten på rett plass for å teikne den neste linja. Kva for nokre av desse kodeblokkene kan du plassere i slutten av den ytste løkka for å teikne heile mønsteret?
      4-5 Artist Patterns 4_instruction: Denne diamanten har sider som er 50 pikslar lange og vinklar på 120 og 60 gradar. Teikn diamanten ved å skrive ei kode-løkke.
      4-5 Artist Patterns 5.5_instruction: Kor mange gonger må du repetere denne blokka for å teikne heile rutenettet av diamantar?
      4-5 Artist Patterns 5_instruction: |
        No skal me repetere det for å teikne ei rekke med 6 diamantar.
        Legg merkje til at me har endra på diamantkoden så det vert repetert 3 gonger i staden for 2 – kvifor det, trur du?
      4-5 Artist Patterns 6_instruction: Kor mange gonger må du repetere denne blokka for å teikne heile rutenettet av diamantar?
      4-5 Artist Patterns 7_instruction: 'No skal me gjere litt om på koden frå førre oppgåve for å gjere mønsteret litt meir komplisert. Legg merkje til korleis diamantane no overlappar kvarandre. Pråv å forandre den første "hopp tilbake" frå 100 til 50 (halvparten så langt) – kor langt skal artisten då gå i det andre "hopp tilbake"?'
      4-5 Artist Patterns 8_instruction: Bruk ei løkke til å teikne ein sekskant der kvar side er 40 pikslar og vinklane er på 60 grader.
      4-5 Artist Patterns 9.5_instruction: La oss gjenta denne koden for å teikne to rader med sekskantar. Legg merke til korleis den andre rada er forskove mot høgre.
      4-5 Artist Patterns 9_instruction: 'La oss gjenta koden 3 gongar for å teikne heile rekka. Tips: Kvar sekskant er 80 pikslar på det breiaste.'
      4-5 Artist Patterns Free Play_instruction: 'Frileik - prøv å lage ditt eige mønster!'
      4-5 Bee Conditionals - FC Test_instruction: Bia vil berre ha nektar akkurat nå. Ikkje alle objekta er blomar, så sjekk under KVAR EINASTE SKY for å sjå om det gøymer seg ein blome der. Om det gjer det kan du samle nektar.
      4-5 Bee Conditionals 1 (copy 1)_instruction: |
        The bee can't tell if this is
        a flower or a honeycomb. Gather nectar only from flowers, but first check
        if it is a flower or a honeycomb.
      4-5 Bee Conditionals 1_instruction: Bia ser ikkje forskjell på blome og bikube. Berre samle inn nektar frå blomane, men sjekk først om det blome eller bikube.
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        The bee only wants nectar right
        now. Remember, not all objects are flowers, so check to gather nectar only
        at flowers.
      4-5 Bee Conditionals 2_instruction: Bia vil berre ha nekar akkurat nå. Hugs, ikkje alle er blomar, så sjekk etter at du berre samlar nektar frå blomar.
      4-5 Bee Conditionals 3_instruction: Bia vil berre lage honning akkurat nå. Sjekk at bia berre lager honning i bikubane.
      4-5 Bee Conditionals 4 (copy 1)_instruction: |
        The unknown object is either
        a flower or a honeycomb. Use the if/else block to collect nectar if it is
        a flower, else to make honey (because it is a honeycomb).
      4-5 Bee Conditionals 4_instruction: 'Det ukjende objektet er enten ein blome eller ein bikube. Bruk "viss/elles" blokk til å samle inn nektar om det er ein blome, om ikkje så lagar du honning (fordi det er ein bikube).'
      4-5 Bee Conditionals 5_instruction: 'Det kan vere ein blome eller ein bikube under skyene. Bruk "viss/elles" blokken til å samle inn nektar om det er ein blome. Om ikkje lagar du honning (for da er det ein bikube).'
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        This purple flower may have either
        3, 2, or 1 nectar. Here an if-else block is combined with another if-else
        block to create an if, else-if, else block. Complete the solution to collect
        the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: 'Denne lilla blomen kan ha enten 3, 2 eller 1 nektar. Her er ein "viss/elles"-blokk kombinert med ein annen "viss/elles"-blokk for å danne en "viss/elles viss/elles"-blokk. Fullfør løysninga for å samle inn ei ukjend mengde med nektar.'
      4-5 Bee Conditionals 7_instruction: 'Hugs at lilla blomar kan ha 3, 2 og 1 nektar. Fullfør "kontroller lilla blomar" funksjonen og bruk den til å samle inn nektar frå alle blomane.'
      4-5 Bee Conditionals 8_instruction: 'Skriv ein funksjon som heiter "Sjekk blome og lag honning". Funksjonen din skal sjekke kor mykje nektar det er i den lilla blomen og hente den. Deretter skal den bevege seg framover og så lage honning.'
      4-5 Bee Conditionals Assessment 1_instruction: 'Oppgåve: Denne koden er feil. Fullfør "hent nektar og lag honning" funksjonen, deretter brukar du den til å samle inn all nektar og honning. Hugs at lilla blomar kan ha 3, 2 eller 1 nektar.'
      4-5 Bee Debugging 1_instruction: Desse blokkane plager meg. Får du til å fikse dei?
      4-5 Bee Debugging 10_instruction: Finn feila og fiks dei.
      4-5 Bee Debugging 11_instruction: Tel denne riktig?
      4-5 Bee Debugging 2_instruction: Hjelp bia å finne nektar for å lage honning.
      4-5 Bee Debugging 3_instruction: Finn feila og fiks dei.
      4-5 Bee Debugging 4_instruction: Desse blokkane fungerer ikkje. Kva er mønsteret?
      4-5 Bee Debugging 5_instruction: Noko er gale her...
      4-5 Bee Debugging 6_instruction: Dei lilla blomane har ei ukjent mengde nektar. Fiks blokkane for å hente ut all nektar frå blomane.
      4-5 Bee Debugging 7_instruction: Denne funksjonen manglar noko...
      4-5 Bee Debugging 8_instruction: Denne funksjonen er fin, men den er ikkje brukt riktig.
      4-5 Bee Debugging 9_instruction: Kvifor lager ikkje bia nok honning?
      4-5 Bee Debugging Assessment 1_instruction: 'Oppgåve: Fiks koden.'
      4-5 Bee Nested Loops 1_instruction: Bruk ei løkke til å samle inn all nektaren.
      4-5 Bee Nested Loops 2_instruction: 'Samle inn all nektar frå alle blomane. Bruk ei løkke inni ei løkke. '
      4-5 Bee Nested Loops 3_instruction: Samle inn all nektar ved å leggje startkoden inn i ei løkke inni ei løkke.
      4-5 Bee Nested Loops 4_instruction: 'Saml inn all nektar frå kvar blomst og lag honning i alle bikubane. Bruk ei løkke i løkke. '
      4-5 Bee Nested Loops 5_instruction: Saml inn all nektar ved å bruke ei løkke i løkke.
      4-5 Bee Nested Loops 6_instruction: Samla all nektar.
      4-5 Bee Nested Loops 7_instruction: Legg denne løkka inn i ei anna løkke for å opprette ei løkke i løkke til å samle inn all nektaren frå blomane.
      4-5 Bee Nested Loops 8_instruction: 'Saml inn all nektaren frå desse blomane ved å bruke løkke i ei anna medan-løkke. Erstatt den indre gjenta tal på-blokken med ei medan-løkke. '
      4-5 Bee Nested Loops 9_instruction: Samle inn all nektaren frå desse blomane ved å bruke ei løkke i ei medan-løkke inni ei gjenta blokk.
      4-5 Bee Nested Loops Assessment 1_instruction: 'Oppgåve - Samle inn all nektaren og lag all honningen ved bruk av løkker.'
      4-5 Bee Nested Loops Rows_instruction: Samle nektar frå radene med blomar! Bruk løkke i løkke.
      4-5 Maze 1 (copy 1)_instruction: Kjære person. Meg zombie. Må... komme... til solsikke.
      4-5 Maze 1_instruction: Kjære person. Meg zombie. Må... komme... til solsikke.
      4-5 Maze 10_instruction: Klarar du å komme deg til solsikka med berre fire blokkar?
      4-5 Maze 11_instruction: Kan du komme deg til solsikka med berre seks blokkar?
      4-5 Maze 12_instruction: Ok, denne er litt annleis. Klarar du å få det til med berre seks blokkar?
      4-5 Maze 13_instruction: Få meg til grisen!
      4-5 Maze 14_instruction: Få meg bort til grisen! Bruk Gjenta til blokken.
      4-5 Maze 2 (copy 1)_instruction: Få zombien til solsikka, men unngå den kjøttetande planten!
      4-5 Maze 2_instruction: Få zombien til solsikka, men unngå den kjøttetande planten!
      4-5 Maze 3 (copy 1)_instruction: Må... komme... meg til solsikke.
      4-5 Maze 3_instruction: Må... komme... meg til solsikke.
      4-5 Maze 4 (copy 1)_instruction: 'Prøve å bruke "gjenta"-blokken for å bruke færre blokkar...'
      4-5 Maze 4_instruction: 'Prøve å bruke "gjenta"-blokken for å bruke færre blokkar...'
      4-5 Maze 5 (copy 1)_instruction: Klarar du å løyse denne oppgåva ved å bruke så få blokkar som mogleg?
      4-5 Maze 5_instruction: Klarar du å løyse denne oppgåva ved å bruke så få blokkar som mogleg?
      4-5 Maze 6 (copy 1)_instruction: Klarar du å løyse denne oppgåva ved å bruke så få blokkar som mogleg?
      4-5 Maze 6_instruction: Klarar du å løyse denne oppgåva ved å bruke så få blokkar som mogleg?
      4-5 Maze 7_instruction: Kjære person. Meg zombie. Må... komme... til solsikke.
      4-5 Maze 8_instruction: 'Bruk "Gjenta"-blokken til å få zombien til solsikka. (Unngå dei kjøttetande plantane!)'
      4-5 Maze 9_instruction: 'Lag ei løkke med "Gjenta-til" blokk.'
      4-5 Maze Assessment 1_instruction: 'Oppgåve - Få meg til solsikka.'
      4-5 Maze Conditionals 1_instruction: 'Bruk "Gjenta-til" blokken for å få zombien til solsikka.'
      4-5 Maze Conditionals 10_instruction: "Can you add just 3 blocks to help the\nzombie solve a more complex maze? \\r\n\\r\nIf you do it right, he can walk\nany curvy path no matter the length!"
      4-5 Maze Conditionals 2_instruction: 'Bruk "Gjenta-til" blokken for å få zombien til solsikka.'
      4-5 Maze Conditionals 3_instruction: 'Bruk "Viss" blokken for å la meg bestemme når eg skal snu. Tips: du trenger berre ein blokk til, men lær korleis vi sett den opp slik at du kan gjere det på eigenhand neste gong.'
      4-5 Maze Conditionals 4_instruction: 'Ok, denne er heilt lik den forrige oppgåva, men du må hugse på korleis du brukte "viss"-blokken og deretter "Gjenta"-blokken saman.'
      4-5 Maze Conditionals 5_instruction: 'Meg vil ha solsikke! Bruk ein "Viss"-blokk for å få meg dit med så få blokkar som mogleg.'
      4-5 Maze Conditionals 6_instruction: 'Meg vil ha solsikke! Bruk ein "Viss"-blokk for å få meg dit med så få blokkar som mogleg.'
      4-5 Maze Conditionals 7_instruction: 'Ok, la oss øve på den ein gong til - denne er ikkje så ulik, men pass deg for dei kjøttetande plantane!'
      4-5 Maze Conditionals 8_instruction: '"Viss/elles" blokken sjekkar ein føresetnad og gjer det eine eller det andre. For å få meg til solsikka, prøv å bruke denne blokken.'
      4-5 Maze Conditionals 9_instruction: 'Ei siste øving med "Viss/elles" bloken. Klarar du å gjere det riktig på første forsøk?'
      4-5 Maze Conditionals Assessment 1_instruction: 'Bruk ein "Gjenta til" og ein "Viss/elles" blokk for å få meg til solsikka med så få blokkar som mogleg.'
      4-5 Nested Loops 1_instruction: 'Fullfør koden for å teikne desse trekantane. Den første er gjort ferdig for deg. Tips: 3 trekantar rotert er til saman 360 grader.'
      4-5 Nested Loops 10_instruction: Teikn den siste rada med stjerner på flagget ved å køyre ei løkke over dei gitte blokkane. Stjernene er 50 pikslar frå kvarandre, men hugs at stjernene er 30 pikslar i bredde.
      4-5 Nested Loops 11_instruction: Klarar du å teikne dei 10 kvadratene på fortauet ved å bruke ei løkke i ei løkke? Kvar kvadrat er 30 pikslar.
      4-5 Nested Loops 12_instruction: Klarar du å teikne desse 36 trekantane ved hjelp av ei løkke i ei løkke?
      4-5 Nested Loops 2_instruction: 'Nå skal du sette denne løkka inn i ei anna løkke for å teikne 10 trekantar. Dette blir kalla ei nestet løkke. Tips: Alle trekantane utgjer til saman ein rotasjon på 360 grader.  '
      4-5 Nested Loops 3_instruction: "Teink ei sol ved å sette koden frå startkoden inn i ei anna løkke. Dette blir kalla ei nestet løkke. \\r\n"
      4-5 Nested Loops 5_instruction: Gjenta koden som er gitt til å lage ei vindmølle.
      4-5 Nested Loops 6_instruction: Klarar du å teikne ein sekskant ved å gjenta trekantkoden?
      4-5 Nested Loops 7_instruction: 'Gjenta designet 10 gongar. Kor mykje må du rotere i kvar repetisjon? (Tips: Kva er 360 delt på 10?)'
      4-5 Nested Loops 8_instruction: 'Gjenta designet 6 gongar. Kor mykje må du rotere i kvar repetisjon? (Tips: Kva er 360 delt på 6?)'
      4-5 Nested Loops 9_instruction: Teikn tennene i munnen til alligatoren!
      4-5 Nested Loops Assessment 1_instruction: Bruk ei løkke i løkke for å fullføre designet.
      4-5 While Loops 1_instruction: 'Flytt meg til holet og bruk ein "fyll" blokk til å fylle det med to spadar med jord.'
      4-5 While Loops 2_instruction: 'Flytt meg til haugen med jord og bruk "Fjern" blokken til å fjerne den på fem spadetak.'
      4-5 While Loops 3_instruction: 'Flytt meg til jordhaugen og fjern alt sammen. Etterpå flytter du meg til holet og fyller det heilt opp. Tips: bruk så få blokkar som mogleg.'
      4-5 While Loops 4_instruction: 'Wow, eg fann eit verkeleg djupt hol! Eg veit ikkje kor mange spadetak med jord det tar å fylle det. Kan du skrive eit program som fyller oppi holet til det er heilt jamnt? Tips: Bruk ei medan-løkke denne gongen.'
      4-5 While Loops 5_instruction: Wow, nå er det to djupe hol. Klarar du å skrive eit program som fyller begge hola til bakken er heilt jamn?
      4-5 While Loops 6_instruction: Wow, nå er det ein stor jordhaug der! Klarar du å skrive eit program som fjernar heile haugen slik at bakken blir heilt jamn?
      4-5 While Loops 7_instruction: Wow, nå er det tre haugar med jord. Klarar du til å skrive eit program som fjernar alle saman slik at bakken blir heilt jamn?
      4-5 While Loops 8_instruction: ' Det er eit verkeleg djupt hol og ein verkeleg stor haug med jord. Kor mange spadetak må tas for å gjere bakken heilt flat. Tips: bruk ei medan-løkke for begge to.'
      4-5 While Loops Assessment 1_instruction: Det er mange hol og haugar. Hjelp meg å fylle og fjerne dei slik at bakken blir heilt jamn.
      aE1_instruction: "You chose to make a square napkin! \\r\n\\r\nTo finish, draw\na square with 20 pixel sides. "
      aE2_instruction: |
        If you place your square loop inside another loop, we call
        that a nested loop. What do you need to add as an outer loop to make sure
        all 14 napkins line up next to each other?
      aE3_instruction: "We've got to have a tablecloth!  \\r\n\\r\nTake your row of\n14 napkins and sew 14 of those together with another **outer loop** to make\na cover for our table."
      aE3alternate_instruction: Alternate
      aE3alternateB_instruction: Alternate
      aE4_instruction: Alternate
      aE5_instruction: Example of puzzle using highest difficulty level shape.
      aE6_instruction: |
        How many times do you need to loop this to draw half  of
        a circle? 
      aE7_instruction: "If you create another loop like this one, but turn left instead\nof right, what happens? \\r\n\\r\nCan you repeat all of that to draw this wave?"
      aE8_instruction: "Now let's loop that whole thing four times to create this\npicture frame. Watch out for the corners - you can't just turn 90 degrees!\n\\r\n\\r\nIf looping a 3 degree turn 60 times makes a half circle, which of\nthese blocks of code will make an additional quarter circle for the corners?"
      aEfreeplay_instruction: Free Play!
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      AllTheThings Applab - Turtle move with button_instruction: |
        Add a button that
        moves the turtle when clicked.  (Click to see full instructions)
      allthethings data blocks test_instruction: |
        Please sign in to test applab levels
        (By design, applab levels only work if signed in. Normally, we make people
        sign in, but this is only enforceable for a whole script and would be annoying
        to do for the allthethings script).
      allthethings design mode elements_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      allthethings_moviebot_instruction: |
        This level cloned from "U3 Digital Assistant
        Target"
      allthethings_template_backed1_instruction: |
        Backed by a template #1. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script). 
      allthethings_template_backed2_instruction: |
        Backed by a template #2. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script).
      allthethings_U3 - Simple Drawing - Rectangle Width and Height_instruction: |
        Do
        This
      App Lab test_instruction: test
      Applab allthethings onRecordEvent_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      Applab test_instruction: This level is submittable. For testing only!
      AppLab_test02_instruction: |
        One sentence summary of the activity. Click to
        view full instructions.
      Artist - Nested Loops 1_instruction: |
        Complete the code to draw these triangles.  The
        first one is done for you.  Hint:  3 triangles in a 360 degree rotation.
      Artist - Nested Loops 10_instruction: |
        Draw the last row of stars on this flag
        by looping the provided blocks. The stars are 50 pixels apart, but remember
        that the stars themselves are 30 pixels wide.
      Artist - Nested Loops 11_instruction: |
        Can you draw these 10 squares of this
        sidewalk using a nested loop? Each square is 30 pixels.
      Artist - Nested Loops 12_instruction: |
        Can you draw these 36 triangles using
        a nested loop?
      Artist - Nested Loops 2_instruction: |
        Now nest this loop inside another loop
        to draw 10 triangles.  This is called a nested loop.  Hint: All 10 triangles
        complete a 360 degree rotation.  
      Artist - Nested Loops 3_instruction: "Create a sun by nesting the starter code\nin another loop. This is called a nested loop.\\r\n"
      Artist - Nested Loops 5_instruction: Loop the given code to create a windmill.
      Artist - Nested Loops 6_instruction: |
        Can you draw a hexagon by looping the
        triangle code?
      Artist - Nested Loops 7_instruction: |
        Loop this design 10 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 10?)
      Artist - Nested Loops 8_instruction: |
        Loop this design 6 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 6?)
      Artist - Nested Loops 9_instruction: "Draw the teeth in the alligator's mouth!"
      Artist - Nested Loops Assessment 1_instruction: Bruk ei løkke i løkke for å fullføre designet.
      artistLoopsK1_instruction: |
        This is a new type of puzzle called "Artist".
        Play with the level and draw something fun.
      artistLoopsK2_instruction: |
        The Artist is trying to draw a line five times,
        but can't get it right.  Can you help?
      artistLoopsK3_instruction: |
        Draw a line eight steps long. This will become
        the land for our kingdom!
      artistLoopsK4_instruction: |
        Now we need a castle with a draw bridge.  Fix the
        code so that the bridge lays straight instead of falling down.
      artistLoopsK5_instruction: |
        Now we need to fix the top of the castle. Can you
        loop the code three times?
      artistLoopsK6_instruction: |
        Someone is stuck in the tower!  Fix the stairs
        to set them free. 
      artistLoopsK7_instruction: |
        This tower is lovely, what is downstairs? Build
        another staircase to find out! 
      artistLoopsK8_instruction: |
        Wow! There's a garden over there!  Help fix these
        stairs so I can get to it.
      artistLoopsK9_instruction: |
        **Challenge:**  Lovely! Let's take a walk around
        the garden.
      artistLoopsKA_instruction: |
        These stones are in the wrong place.  Help me move
        them so I don't fall in!
      artistLoopsKB_instruction: |
        Look!  It's a theater.  Help me set up the chairs
        so we can all see the stage. 
      artistLoopsKFP_instruction: |
        Picture time!  Use what you have learned to draw
        a picture of what you think the Artist saw on stage.
      Auto Open Function Editor_instruction: 'Du kan kalle funksjonar frå innsida av andre funksjonar. Bruk "Form"-funksjonen din som utgangspunkt, og lag tre husformer. Det første kan vere 50 pikslar langt, medan dei andre aukar med 20 pikslar for kvar gong. Å nytte ei teljeløkke kan vere ein god idé.'
      Bee Recommended Blocks test_instruction: 'Lilla blomar har anten 1 eller 0 nektar, men du veit ikkje kva blome? Pass på at du ikkje prøver å samle inn nektar frå blomar som ikkje har nektar. Sjekk om nektar er lik 1 ved å bruke ein "viss" blokk.'
      Bergeron Robot Maze1_instruction: |
        Can you help me catch the naughty pig? Stack
        a couple of `move forward` blocks below the `when run` block and press "Run".
        
      Big Game Animation 1 (copy 1)_instruction: |
        Now that you've learned to write
        simple linear functions, let's work on using them to add some movement to
        our game. Click play to see what your game can currently do (not much!), update
        any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click "Run" to see what your game can currently do (not much!), update any
        variables you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        The function 'update-target'
        function takes the target's current x value, and returns an updated value.
        Complete the 'update-target' function so that it adds to the x value each
        time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: |
        The update-target function takes the target's
        current x value, and returns an updated value. Complete the update-target
        function so that it adds to the x value each time it is called. The more you
        add to x, the faster the target will go.
      Big Game Animation 3_instruction: |
        The update-danger function should work just
        like update-target, except that the danger should move from the right side
        over towards the left. Complete update-danger to make the danger fly across
        the screen.
      Big Game Animation 4_instruction: |
        At this point in your game, your danger
        should run across the screen from right to left, and your target should run
        across from left to right. They don't ever come back on screen once they've
        left, but we'll take care of that later. Take a minute to make sure your
        game is working like you want it to, and then click "Finish" to move on.
      Big Game Booleans 1_instruction: |
        When you last worked on your game we got
        our target and danger sprites to fly across the screen, but they never come
        back. Click "Run" to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Booleans 2_instruction: |
        Go to the Functions section of the toolbox
        and complete the safe-left? function so that it returns true if the sprite's
        x coordinate is greater than -50. If you're successful you should see the
        Danger go off the left side and then return on the right side.
      Big Game Booleans 3_instruction: |
        Now that you've got safe-left?, let's fill
        in safe-right? - it should take in a sprite's x coordinate and return true
        if that coordinate is less than 450. Once your safe-right? is complete you
        should see the Target go off the right side of the screen and return on the
        left.
      Big Game Booleans 4_instruction: |
        Complete the onscreen? function so that it
        checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: |
        At this point your Danger should run across
        the screen from right to left, your Target should run across from left to
        right, and they should both return to the opposite side, repeatedly. Take
        a minute to make sure your game is working like you want it to, and then click
        "Finish" to move on.
      Big Game Collision 1 (copy 1)_instruction: |
        When you last worked on your game
        we got our target and danger sprites to fly across the screen, but they never
        come back. Click run to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Collision 1_instruction: |
        At this point you've programmed a video
        game with a moving Target and Danger, both of which return to the screen once
        they've left, and a Player that responds to keyboard input. Click "Run"
        to see how your game is currently working, and then we'll dig into the final
        missing piece - collision detection!
      Big Game Collision 2_instruction: |
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so that if moves the player
        up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: |
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete_instruction: |
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Final_instruction: |
        You made it! At this point your game should be
        fully functioning, take some time to enjoy your new game and make any final
        tweaks to it. When you're happy with the final product, click Finish and
        you'll have an opportunity to share a link to your game. Good work!
      Big Game Player 1_instruction: |
        We're getting really close to a finished game!
        Last time you worked on your game, you used booleans to make your Target and
        Danger return to the screen once they've left. Click Run to see how your
        game looks right now, and then we'll get to making your Player move up and
        down.
      Big Game Player 2_instruction: |
        Edit the update-player function so the player
        moves up when the up arrow (keycode 38) is pressed, and moves down (keycode
        40) when the down arrow is pressed.
      Big Game Testing_instruction: |
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Vars 1 (copy 1)_instruction: |
        Let's get started on your Big Game!
        Here you'll see a whole bunch of placeholder code that you'll eventually
        replace with your own, but for now we're only going to worry about defining
        variables. Click "Run" to see what the game looks like with the default
        values.
      Big Game Vars 1_instruction: |
        Let's get started on your Big Game! Here you'll
        see a whole bunch of placeholder code that you'll eventually replace with
        your own, but for now we're only going to worry about defining variables.
        Click "Run" to see what the game looks like with the default values.
      Big Game Vars 2 (copy 1)_instruction: |
        The first step to making this game your
        own is to give it a good Title. Click edit on the 'title' and 'subtitle'
        variables and change them to something new.
      Big Game Vars 2_instruction: |
        The first step to making this game your own is
        to give it a good Title. Click edit on the title and subtitle variables and
        change them to something new.
      Big Game Vars 3 (copy 1)_instruction: |
        Now let's set the background for your
        new game. Edit the 'bg' variable and select a new background Image from
        the dropdown.
      Big Game Vars 3_instruction: |
        Now let's set the background for your new game.
        Edit the bg variable and select a new background Image from the dropdown.
      Big Game Vars 4 (copy 1)_instruction: |
        Awesome, now you can update the variables
        for your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click 'finish'
        when you're done.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Brad Spooky House Copy_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      Brad Spooky House_instruction: |
        Freeplay: Here are the functions you've written,
        and some more for you to play with. Draw something awesome! Play with the
        pen width to see how different your drawings look!
      Building a Foundation Assessment_instruction: |
        Build a three level pyramid,
        there are no other directions, so just play with the pieces until you get
        it!
      Busy Bee 2_instruction: Denne bia har mykje å gjere! Legg du merke til nokre mønstre som går igjen i koden din og som du kan bruke til å gjere koden enklare?
      Busy Bee_instruction: Denne bia har mykje å gjere! Legg du merke til nokre mønstre som går igjen i koden din og som du kan bruke til å gjere koden enklare?
      C3-Farmer While Loops 1_instruction: |
        Move me to the hole and fill it with
        two shovelfuls of dirt, using the "fill" block.
      C3-Farmer While Loops 2_instruction: |
        Move me to the pile of dirt and remove
        it with 5 shovel scoops, using the 'remove' block.
      C3-Farmer While Loops 3_instruction: |
        Move me to the pile and remove all of
        it, then move to the hole and fill it completely.  Hint:  Use as few blocks
        as possible.
      C3-Farmer While Loops 4_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs.  Can you write a program that fills
        it until the ground is even?  Hint:  Try using the while loop this time.
      C3-Farmer While Loops 5_instruction: |
        Wow, now there are two deep holes! Can
        you write a program that fills them both until the ground is even?
      C3-Farmer While Loops 6_instruction: |
        Wow, now there is a large pile of dirt!
        Can you write a program that removes all of it so the ground is even?
      C3-Farmer While Loops 7_instruction: |
        Wow, now there are three piles of dirt!
        Can you write a program that removes each of them until the ground is even?
      C3-Farmer While Loops 8_instruction: |2
         There is a really deep hole and a really
        large pile of dirt.  How many shovelfuls of dirt need to be moved around to
        make the ground flat?  Hint: Use the while loop for both.
      C3-Farmer While Loops Assessment 1_instruction: |
        There are a lot of holes and
        piles.  Help me to fill and remove them to make the ground flat.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |
        This Evaluation Block is a multiplication
        function which takes two numbers and returns the product of those numbers.
        Edit this block so that it multiplies 2 * 5
      Calc Circles of Eval .3_instruction: |
        Here's a function for addition which
        takes two numbers and returns their sum. Use this Addition Block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |
        Here we've nested an Addition Block
        inside a Multiplication Block. Complete this code so it multiplies 3 by (4
        + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 2_instruction: |
        Use a Multiplication Block to complete
        this code.
      Calc Circles of Eval 3_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 4_instruction: |
        This code is missing a couple of Evaluation
        Blocks - make sure you put everything in the right order.
      Calc Circles of Eval 5_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 6_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 7_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 8_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 9_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval Free Play_instruction: |
        Free Play: Try using the Evaluation
        Blocks to write some equations of your own. How does nesting the blocks in
        different ways impact their evaluation?
      Calc Define Funcs 1 (copy 1)_instruction: |
        Let's look at some more algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |
        Write a function f that takes a parameter
        x and returns x - 10. Test your function using f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function f every
        time; create a function called times-ten that should take a parameter x and
        return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called cube - this function should take in a Number and return that
        number to the power of 3. Make sure to write two example cases! When you're
        done, use your new function to calculate cube(7).
      Calc Design Recipe 2_instruction: "Your school is holding a bake sale, and\nyou need to track the cost of making each cookie, the money paid, and the\ntotal profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\\r\nWrite\nthe function cost, which takes in the number of cookies you intend to sell,\nand returns the cost of making those cookies."
      Calc Design Recipe 3_instruction: |
        Write the function sales which takes in
        the number of cookies sold, and produces the amount of money customers spent
        to buy those cookies (each cookie is sold at $1.50).
      Calc Design Recipe 4_instruction: |
        Using the two functions we just wrote, write
        the function profit, which takes in the number of cookies you sold, and gives
        you back the total profit you make from selling your cookies, accounting for
        the cost of baking them.
      Calc Free Play_instruction: |
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: "In the last puzzle you wrote a contract\nfor the function \"rocket-height\" that states it has a range of Number, domain\nof Number, and should return the height of the rocket traveling at 15 m/s\nafter a given number of seconds. Let's write an example case now for the\nheight of the rocket at 3 seconds.\\r\n\\r\n\\r\n\\r\n  \\r\n\\r\n"
      Calc Rocket 1_instruction: |
        In the last puzzle you wrote a contract for the
        function rocket-height that states it has a range of Number, domain of Number,
        and should return the height of the rocket traveling at 15 m/s after a given
        number of seconds. Let's write an example case now for the height of the
        rocket at 3 seconds.
      Calc Rocket 2_instruction: |
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |
        Here's a new variable called age-in-months. Use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: |
        Can you write an expression that calculates age in
        months?
      Calc Vars 3 (copy 1)_instruction: |
        Can you add to this code so that it calculates
        how many hours there are in "age" years?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |
        We can also set variables by using other variables.
        Let's say you have a brother who is two years younger than you - can you
        set a new variable "brother-age" using your "age" variable?
      Code Studio Puzzle Challenge 1 - Artist_instruction: |
        Draw the line. It is
        200 pixels long. 
      Code Studio Puzzle Challenge 1 Artist1_instruction: |
        Draw the line. It is 200
        pixels long. 
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Move the Bee to the flower
        and get all of the nectar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Draw a square by using
        the variable length provided.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 13 - Artist_instruction: |
        This is just like a
        "for" loop. Complete the code to draw six lines that grow from 50, 60, 70,
        80, 90, to 100 pixels long. 
      Code Studio Puzzle Challenge 14 - Artist_instruction: |
        This is just like a
        "for" loop. Complete the loop to draw 4 squares that grow from 80, 100,
        120, to 140 pixels. 
      Code Studio Puzzle Challenge 2 - Artist_instruction: |
        Now add a turn and another
        line. The lines are 200 pixels long.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Draw the square. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |
        Draw the octagon. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get the nectar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |
        Flowers contain a specific
        amount of nectar. Move the Bee to the flower and collect nectar with the get
        nectar block.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |
        Honeycombs can hold a specific
        amount of honey. Get the nectar from the flower and make some honey.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Move the Bee to the flower
        and get the nectar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: |
        Draw
        the line. Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: |
        Complete the
        code to draw the line. Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Artist Screencast_instruction: |
        Draw the line.
        Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Bee Screencast_instruction: |
        Move the Bee to the
        flowers and get all of the nectar.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      Collector Demo_instruction: |
        Look at all this loot! Help me get as many coins
        as I can so I can improve my farm. I can only use 9 blocks though!
      Course 2 Bee Loops 1_instruction: 'Hei, jeg er en bie! Kan du hjelpe meg å samle nektar fra disse blomstene? '
      Course 2 Bee Loops 13_instruction: |
        Assessment: Use the repeat block to collect
        all of the nectar.
      Course 2 Bee Loops 2_instruction: 'Kan du gjøre akkurat det samme på en enklere måte med en "gjenta"-løkke?'
      Course 2 Bee Loops 3_instruction: |
        Now use the new repeat block to collect
        all of the nectar and make all of the honey.
      Course 2 Bee Loops 3__instruction: |
        Can you use a loop to collect all that
        nectar?
      Course 2 Bee Loops 4_instruction: |
        What happens if you loop this sequence 3
        times? Don't forget to make the honey at the end!
      Course 2 Maze Loops 1_instruction: Kan du få meg bort til grisen ved å bruke kun 5 blokkar?
      Course 4 2_instruction: Bia vil berre ha nektar akkurat nå. Hugs, ikkje alle er blomar, så sjekk etter at du berre samlar nektar frå blomar.
      Course 4 Artist 1_instruction: 'Hjelp meg å teikne ferdig boksen. (Kvar linje er 200 pikslar lang) '
      Course 4 Artist 10_instruction: "Klikk her for å sjå tipsa igjen!\\r\n\\r\nHer er koden til ein interessant figur. Kva skjer når du gjentar den mange gongar og snur mellom kvar køyring? Legg merke til at vinklane i denne figuren er 420 grader, noko som betyr at når teikninga er ferdig vil den ha ei anna retning enn når du starta. Den nye retninga er nøyaktig 60 grader til høgre for der du begynte."
      Course 4 Artist 11_instruction: 'Nå til ei utfordring! Her er eit design som kun brukar blokkar som du allereie har blitt vist. Kan du finne ut korleis du kan lage det uten nokre ekstra informasjon? Tips: Ikkje ver redd for å prøve og feile. Det er ikkje forventa at du får det til perfekt første gongen!'
      Course 4 Artist 12_instruction: "Vent eit augneblink og ta ein titt på mønsteret eller tipsa. Klikk her!\\r\n\\r\nOm du vil, kan du lage eit mønster heilt på eigen hand!"
      Course 4 Artist 13_instruction: Spiller du framleis? Her er eit blankt lerret kor du kan designe det du vil!
      Course 4 Artist 2_instruction: Kan du gjenta denne koden slik at den teiknar det tona ned kvadratet?
      Course 4 Artist 20_instruction: Spiller du framleis? Her eit blant lerret kor du kan designe det du vil!
      Course 4 Artist 3_instruction: 'Prøv å sjå kva som kjem til å skje om du køyrer denne koden (eller køyr den ved å trykke "Køyr"). Deretter, gjentar du dette heilt til biletet er ferdig.'
      Course 4 Artist 4_instruction: Kor mange grader er det i ein sirkel? Fyll dette talet inn i gjenta-blokken for å lage ein sirkel av fargar.
      Course 4 Artist 5_instruction: Teikn den andre halvparten av dette designet slik at det blir symmetrisk. Trekantane er likesida med sider på 50 pikslar.
      Course 4 Artist 6_instruction: 'Fullfør koden for å teikne desse trekantane. Tips: det er 3 trekantar innan ein 360 grader rotasjon... kor mange gongar går 3 opp i 360?'
      Course 4 Artist 7_instruction: 'Nå skal du sette denne løkka inn i ei anna løkke for å teikne 10 trekantar. Dette blir kalla ei løkke i løkke. Tips: Alle 10 trekantane utgjer ein rotasjon på 360 grader.  '
      Course 4 Artist 8_instruction: Teikn sola ved å gjenta denne kodeblokken 12 gongar.
      Course 4 Artist 8a_instruction: "Hugsar du denne figuren? Når skal du byggje den utan at vi gjer deg nokre blokkar å starte med!\\r Tips: Det er 3 trekantar innan ein 360 grader rotasjon... Kor mange gongar går 3 opp i 360?"
      Course 4 Artist 9_instruction: 'Gjenta dette designet 10 gongar og pass på at du roterer mellom kvar figur som blir teikna. Her har du eit tips om kor mykje du må snu deg: Kva er 360 delt på 10?'
      Course 4 Artist Binary 1_instruction: "Her er ein funksjon som tek ein binær-streng av 1-are og 0-are og instruerer kunstnaren til å følgje dem frå venstre til høgre, frå topp til botn. Artisten vil fylle inn rutene om den ser ein 1 og ignorere ruta om den ser ein 0.\\r\\r Køyr denne koden for å sjå korleis kunstnaren bruker binær-strengen til å teikne dette mønsteret."
      Course 4 Artist Binary 1a_instruction: "Her er ein funksjon som tek ein binær-streng av 1-are og 0-are og instruerer kunstnaren til å følgje dem frå venstre til høgre, frå topp til botn. Artisten vil fylle inn rutene om den ser ein 1 og ignorere ruta om den ser ein 0.\\r\\r Køyr denne koden for å sjå korleis kunstnaren bruker binær-strengen til å teikne dette mønsteret."
      Course 4 Artist Binary 2_instruction: Kva av desse binære strengane kan du gjenta 8 gongar for å teikne dette biletet?
      Course 4 Artist Binary 3_instruction: Kan du teikne dette mønsteret ved å køyre ei løkke over ein tresifra binærstreng?
      Course 4 Artist Binary 4_instruction: Kvar binærstreng representerer ei rad i dette biletet. Kan du ordne strengane slik at dei teiknar eit smileansikt i staden for eit trist ansikt?
      Course 4 Artist Binary 5_instruction: Kva 6 sifra binærstreng, repetert 11 gongar, vil teikne dette biletet?
      Course 4 Artist Binary 6_instruction: Kva er den kortaste binærstrengen du kan repetere for å teikne dette biletet?
      Course 4 Artist Binary 7_instruction: Fullfør teikninga.
      Course 4 Artist Binary Free Play 2_instruction: 'Frileik: Her er eit blankt lerret du kan teikne på. Ha det gøy!'
      Course 4 Artist Binary Free Play 2a_instruction: "Her er eit lerret med høgare oppløysing - 16 gongar 16 pikslar som du kan teikne på! \\r\\r Sjå kva som skjer når vi blir kreative med bitane!"
      Course 4 Artist Binary Free Play 2b_instruction: Klikk her for å se tips.
      Course 4 Artist Binary Free Play_instruction: 'Frileik: Teikn kva du vil med binærstreng!'
      Course 4 Artist Binary pre1_instruction: "Binær er ein måte å representere informasjon på ved å berre bruke to alternativ. Vi skal bruke alternativa \"av\" (representert ved talet 0) og \"på\" (representert ved talet 1). \\r\\r Vi har gitt deg eit rutenett av pikslar som du kan gå gjennom og lage mønstre med ved å skru på spesifikke ruter. Kan du få kunstnaren til å teikne \"01010101\" i binært i første rad?"
      Course 4 Artist Binary ryan_instruction: "Binær er ein måte å representere informasjon på ved å berre bruke to alternativ. Vi skal bruke alternativa \"av\" (representert ved talet 0) og \"på\" (representert ved talet 1). \\r\\r Vi har gitt deg eit rutenett av pikslar som du kan gå gjennom og lage mønstre med ved å skru på spesifikke ruter. Kan du få kunstnaren til å teikne \"01010101\" i binært i første rad?"
      Course 4 Artist For  Functions 10_instruction: 'La oss gjere det litt vanskelegare, klarar du å teikne ei stjerne ved å bruke "Teikn ei linje i eit kvadrat" funksjonen? Lykke til!'
      Course 4 Artist For  Functions 11_instruction: 'La oss gjere det litt vanskelegare, klarar du å teikne ei stjerne ved å bruke "Teikn ei linje i eit kvadrat" funksjonen? Lykke til!'
      Course 4 Artist For Loops 1_instruction: 'Teikne denne trekanten som er 50 pikslar brei. Tips: Bruk ein gjenta-blokk.'
      Course 4 Artist For Loops 10_instruction: Frileik! Ha det gøy og teikn det du har lyst til med blokkene du har lært å bruke
      Course 4 Artist For Loops 11_instruction: 'Tidlegare nytta vi ein variabel til å kontrollere talet på sider i ein figur. Vi skal no gjere det same med telje-variabelen. Dette mønsteret startar med ein trekant, og legg til ei side i gongen til vi får ein tikant. Kvar side skal vere 100 pikslar lang. Hint: Ved å dele 360 på talet sider i figuren, får du vite kor mange grader du skal vende.'
      Course 4 Artist For Loops 11a_instruction: "La oss sette alt saman! Bruk din kunnskap om \"for\"-løkker og \"teljer\", lag teikningen der kvar side har to sider meir enn den forrige. Kontroller at kvar side er 10 gongar så lang som talet på sider i polygonet. \\r\\r Svært lite av koden har blitt gitt til deg her."
      Course 4 Artist For Loops 12_instruction: 'Det så kult ut, men nå vil eg teikne kvar figur ved sida av den forrige. Denne gongen er kvar side 20 pikslar. Bruk ein hopp-blokk til å hoppe 40 pikslar fram etter kvar figur. '
      Course 4 Artist For Loops 13_instruction: Hmm, desse figurane blir større for kvar gong. Løyste vi ikkje allereie dette problemet med variablar? Korleis kan vi bruke teljar-variabel til å gjere sidene mindre når det er fleire av dem? I staden for å flytte framover med eit gitt tal, prøv å flytte framover med (100/teljar) pikslar.
      Course 4 Artist For Loops 14_instruction: Om du snur litt meir eller litt mindre enn du normalt ville ha gjort for ein figur lagar det ein stilig effekt. Prøv å snu 89 grader for å lage denne vridde kvadratspiralen.
      Course 4 Artist For Loops 15_instruction: 'Fritt spill: Prøv å lage nokre teikningar sjølv ved å bruke for-løkker. Vi har lagt til nokre generiske variablar for deg som du og kan bruke.'
      Course 4 Artist For Loops 2_instruction: 'Eg har satt koden for å teikne ein trekant inn i ei for-løkke som tel frå 50-100 med 10 om gongen. Ta ein kikk på korleis eg har bygd koden og klikk "Køyr" når du er klar for å sjå den i aksjon.'
      Course 4 Artist For Loops 3_instruction: |
        Bruk forrige oppgåve som referanse for å gjere ferdig denne oppgåva. Den minste trekanten har sider på 20 pikslar, den største har sider på 200 pikslar, og kvar trekant er 20 pikslar større enn den forrige.
        
      Course 4 Artist For Loops 4_instruction: 'Korleis vil du endre det du har lært for å teikne desse kvadratane? Dei startar med lengde på 15 pikslar, den største har lengde på 300 pikslar, og kvart kvadrat er 15 pikslar større enn det forrige. '
      Course 4 Artist For Loops 5_instruction: 'Godt jobba på den siste oppgåva! La oss bruke "teljer" variabelen igjen til å teikne dette kule biletet. '
      Course 4 Artist For Loops 6_instruction: Frileik! Prøv å bruke en for-løkke til å teikne eit vaksande figurmønster som du designar sjølv.
      Course 4 Artist For Loops 6a_instruction: Gjer tre små endringar i koden frå forrige nivå for å få dette til!
      Course 4 Artist For Loops 7_instruction: 'Kvar skjer om du fjernar "Gjenta 3" frå denne algoritmen, men held fram med blokkane "flytt" og "snu" i løkka? I denne spiraltrekanten er kvar side 20 pikslar lenger enn den forrige.'
      Course 4 Artist For Loops 8_instruction: "Berre ei lita endring i koda frå forrige bilete kan skape denne teikninga. Kan du finne ut kva endring du må gjere?\\r\n\\r\nTips: Du må fjerne noko!"
      Course 4 Artist For Loops 8a_instruction: Berre ei lita endring i koda frå forrige bilete kan skape denne teikninga. Kan du finne ut kva endring du må gjere?
      Course 4 Artist For Loops 9_instruction: Kan du lage ein spiral? Flytt framover frå 1 til 75 pikslar, auk med 1 piksel kvar gong.
      Course 4 Artist For Loops Challenge_instruction: "Kan du finne ut korleis du brukar alle tinga du har lært til å lage dette biletet?\\r\\r Treng du eit tips? Klikk her."
      Course 4 Artist For Loops inspire_instruction: "Frispelinspirasjon: Du har no lært alt du treng å vite for å lage eit slikt mønster! Dersom dette biletet inspirerer deg, prøv å lage noko som liknar. Alternativt kan du lage noko du finn på sjølv.\\r\n\\r\nTreng du eit hint? Klikk her."
      Course 4 Artist Functions 1_instruction: Kan du teikne eit kvadrat som er 100 pikslar i lengde ved å bruke ei løkke?
      Course 4 Artist Functions 10_instruction: Kva blokk må du legge til for å få trekanten til å stå på toppen av kvadratet?
      Course 4 Artist Functions 11_instruction: 'SJekk ut denne koden som teiknar ein kube - kan du flytte den inn i ein funksjon kalla "Teikn ein kube"'
      Course 4 Artist Functions 12.1_instruction: 'La oss lage ein funksjon som heiter "teikn ein åttekant 20 gongar" og som teiknar ein åttekant der kvar side er 20 pikslar lange.'
      Course 4 Artist Functions 12_instruction: Kjør ei løkke over kvadratfunksjonen for å teikne ei linje
      Course 4 Artist Functions 13.1_instruction: "La oss no lage funksjonen \"Hopp opp til høgre\", som flyttar kunstnaren øverst til høgre i åttekanten du nett teikna, slik at vi kan avslutte dette mønsteret.\\r\n\\r\nHint: For å flytte deg sjølv opp til det høgre hjørne, prøv å hopp i eit mønster som utgjer berre 3/8 av åttekanten."
      Course 4 Artist Functions 13_instruction: 'Sjekk ut vår nye funksjon, "teikn ei linje av firkantar". Ta gjerne ein kikk på funksjonblokka, for å sjå korleis vi laga den. Klikk "Køyr" når du er klar for neste oppgåve.'
      Course 4 Artist Functions 14.1_instruction: 'La oss lage ein funksjon kalla "hopp til øvre høgre" som flyttar kunstnaren til hjørnet øvst til høgre i åttekanten.'
      Course 4 Artist Functions 14_instruction: 'Bra jobba! Bruk den nye "Teikn ei linje av kvadrat" funksjonen til å teikne eit kvadrat. Hugs at kvar kvadrat er 40 pikslar i lengde.'
      Course 4 Artist Functions 15_instruction: 'La oss fortsetje, kan du teikne ein stjernefigur ved å bruke "teikn ei linje av kvadrat" funksjonen? Lykke til! Tips: du må snu 144 grader'
      Course 4 Artist Functions 2_instruction: 'Kan du teikne 3 kvadratar med 20 pikslar mellomrom? Tips: kvart kvadrat er 100 pikslar i størrelse.'
      Course 4 Artist Functions 3_instruction: "Kan du teikne dette biletet ved å bruke \"teikn eit kvadrat\" funksjonen? Tips: kvart kvadrat er 120 pikslar frå kvarandre.\\r\n"
      Course 4 Artist Functions 4_instruction: 'Er du klar til å lage di eiga Funksjonsblokk? Klikk på "Funksjonsblokka" i verktøykassa og kall den "Teikn ein trekant". Deretter lagar du ein trekant på same måte som du gjorde i Aksjons- og Løkkeblokka. Klikk "Lagre og avslutt" oppe til høgre. Hint: Lag ein trekant som er 100 pikslar lang. Lykke til!'
      Course 4 Artist Functions 5 OLD_instruction: 'La oss prøve å bruke to funksjonar til å teikne eit hus - kva må fiksast i denne koden for å teikne huset riktig?'
      Course 4 Artist Functions 5_instruction: "Kan du teikne dette biletet ved å bruke \"teikn eit kvadrat\" funksjonen? Tips: kvart kvadrat er 120 pikslar frå kvarandre.\\r\n"
      Course 4 Artist Functions 6_instruction: Kva blokk må du legge til for å få trekanten til å stå på toppen av kvadratet?
      Course 4 Artist Functions 7_instruction: Kan du teikne ei linje av kvadratar ved å bruke kvadratfunksjonen? Kvart kvadrat er 40 pikslar i lengde.
      Course 4 Artist Functions 8_instruction: 'Byrjar du å få dreisen på funksjonsblokkene? La oss endre denne firkanten til å bli 200 pikslar stor. Hint: Klikk på "Rediger" for å endre storleiken til "Teikn ein firkant"-funksjonseditoren. Hugs å klikk på "Lagre og lukk" for å kome ut av funksjonseditoren.'
      Course 4 Artist Functions 9_instruction: Vi har gitt deg mesteparten av koden til å lage ein funksjon. Likevel, det kan sjå ut til at det er noko som manglar. Kan du gjere ferdig denne funksjonsblokken?
      Course 4 Artist Functions challenge_instruction: Klikk her for å sjå tipsa ein gong til.
      Course 4 Artist Functions Inspiration_instruction: Klikk her for å sjå tipsa ein gong til.
      Course 4 Artist Functions inspire_instruction: Klikk her for å se inspirasjonsbildet igjen.
      Course 4 Artist Inspire_instruction: "Ønsker du eit nytt glimt på hinta eller inspirasjonsdesignet? Klikk her\\r\n\\r\nHvis ikkje, kan du lage ditt eige design!"
      Course 4 Artist Params 1_instruction: La oss endre ein funksjon som teiknar eit kvadrat med sider på 50 pikslar.
      Course 4 Artist Params 10_instruction: 'Du kan kalle funksjonar frå innsida av andre funksjonar. Bruk "Form"-funksjonen din som utgangspunkt, og lag tre husformer. Det første kan vere 50 pikslar langt, medan dei andre aukar med 20 pikslar for kvar gong. Å nytte ei teljeløkke kan vere ein god idé.'
      Course 4 Artist Params 11_instruction: |
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: 'Bruk "Hjul"-funksjonen til å teikne ein av desse figurane. Sidelengda for kvart bilete skal vere 50 pikslar.'
      Course 4 Artist Params 13_instruction: 'Frileik: Her er funksjonane du har skrive og nokon fleire du kan leike med. Teikn noko tøft!'
      Course 4 Artist Params 2_instruction: |
        That triangle function would be a whole
        lot more useful if it could draw triangles of different sizes. I've added
        a parameter for line length, but it doesn't do anything yet. Can you update
        the function so it uses the "length" parameter when it draws each side?
        The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: Tøft! Kan du teikne kvar av desse trekantane med den nye funksjonen? Den første er 25 pikslar lang, den andre er 50 og den tredje er 75.
      Course 4 Artist Params 4_instruction: Kan du leggje til ein ny funksjon kalla kvadrat? Den bør og ta inn eit parameter for lengde, akkurat som trekanten. Denne gongen skal du teikne 3 kvadrat, 25, 50 og 75 pikslar lange, og 100 pikslar frå kvarandre.
      Course 4 Artist Params 5_instruction: 'Bruk begge dei nye funksjonane til å teikne dette biletet. For å gjere det lettare kan du bruke ei løkke med eit "teljer" parameter.'
      Course 4 Artist Params 6_instruction: |
        La oss gjere ei endring i "Teikn ein figur"-funksjonen. 
        Den har allereie eit "lengde"-parameter. Gjer no om på funksjonen slik at den også legg til eit "side"-parameter. Hugs at vendingsvinkelen til ein figur er 360 delt på talet sider i figuren. Hint: Piksellengda for formene er 100 for trekanten, 25 for sekskanten og 50 for firkanten.
      Course 4 Artist Params 7_instruction: 'Kan du teikne desse figurane ved å fylle inn ein verdi der det står"???"? Firkanten og trekanten er 100 pikslar store, medan sekskanten er 75 pikslar stor.'
      Course 4 Artist Params 8_instruction: 'Klarer du å finne ut korleis ein teiknar denne figuren? Her er eit hint: Lag ein ny funksjon med seks sider som du kallar "Sekskant".'
      Course 4 Artist Params 9_instruction: 'Hugsar du då vi nytta teljeløkka, men fjerna ei løkke frå innsida? La oss ha det litt gøy og bruke "Teikn ein figur"-funksjonen med "sider"- og "lengde"-parametra. Kan du gjenskape desse figurane? Firkantteljaren burde vere 5/100/ og sekskanten 2/100/2.'
      Course 4 Artist Var 9_instruction: 'Her er algoritma for å teikne ein trekant. Endre denne slik at ho nyttar "sider"-variabelen istaden. Erstatt tretalet med "sider"-variabelen. Hint: Hugs å bruke "Sett sider"-blokka.'
      Course 4 Artist Vars 1_instruction: |
        Kan du hjelpe meg å teikne ein likesida trekant? 
        Den må vere nøyaktig 100 pikslar lang på kvar side.
      Course 4 Artist Vars 10_instruction: 'Her er ei algoritme som nyttar små trekantar til å teikne ein stor. Kan du endre henne slik at ho brukar "sider"-variabelen til å teikne kvar trekant? Sjå gjennom koden, og kvar gang du ser talet 3 kan du erstatte det med din "sider"-variabel. Hugs å nytte "Sett sider"-blokka.'
      Course 4 Artist Vars 11_instruction: 'Her er ein litt vanskelegare kode som nyttar same konsepta som forrige oppgåve. Kva må du sette "sider"-variabelen til for å teikne dette biletet av firkantar?'
      Course 4 Artist Vars 12_instruction: 'La oss sette "sider"-variabelen til 5. Dess fleire sider vi legg til i algoritma, dess større blir heile mønsteret! Legg merke til at det også er ein "lengde"-variabel her. Denne kan vi bruke alle stader vi har ein "flytt framover". Sett "lengde"-variabelen til 75 for denne figuren.'
      Course 4 Artist Vars 13_instruction: "Når en figur har mange sider må alle sidene være kortere hvis du vil at mønsteret skal passe inn på skjermen.\n\\r\nLa oss lage algoritmen for dette stilige mønsteret, men bruk en matte-brikke med \"sider\"-variabelen inni, i stedet for å manuelt sette \"lengde\"-variabelen. Omkretsen av hvert mangekant er 300 piksler. \\r Trenger du noen hint? Klikk her."
      Course 4 Artist Vars 14_instruction: 'Frilek: Sjekk det ut, nå algoritmen er nestet inne i en mer løkke. Eksperimentere med å endre verdiene i de to variablene for å tegne kule mønstre.'
      Course 4 Artist Vars 2_instruction: 'I stedet for "går fremover med 100," refererer "Flytt" blokken nå variabelen "lengde". Kan du sette "lengde" til 150 for å  tegne den nye trekanten?'
      Course 4 Artist Vars 3_instruction: 'Her er en løkke som tegner et kvadrat, men noe mangler. Får du til å fikse det slik at den bruker variabelen lengde til å avgjøre hvor lange de ulike sidene skal være? '
      Course 4 Artist Vars 4_instruction: 'Nå ønsker jeg å lage et rektangel som er dobbelt så høyt som det er bredt. Vi har en variabel kalt "bredde" som er satt til 100. Kan du bruke matematiske blokkene for å fullføre koden?'
      Course 4 Artist Vars 5_instruction: 'Bruk variabelen "sider" til å styre hvor mange ganger løkken skal kjøre.'
      Course 4 Artist Vars 6_instruction: 'Hmmm, jeg forsøkt å endre variabelen "sider" til 4 fra koden i den siste gåten, men den tegner fortsatt en trekant. Kan du bruke variabelen "sider" (sammen med en matteblokk) og sørge for at jeg snur akkurat passe? Hint: 360 delt på antall sider vil gi deg hvor mange grader du skal snu.'
      Course 4 Artist Vars 7_instruction: 'Kan du endre variabelen "sider" for å hjelpe meg trekke denne sekskanten?'
      Course 4 Artist Vars 8_instruction: 'Frilek: Eksperimenter med antall sider denne figuren har. Kan du endre algoritmen slik at størrelsen på figuren forblir den samme uansett hvor mange sider den har? Tips: Du må kanskje bruke matteblokken din. (360 delt "sider" på to steder nå) '
      Course 4 Artist Vars 9_instruction: 'Endre denne algoritmen bruker variabelen "sider" i stedet for et for å tegne en trekant. Erstatt nummer 3 med variabelen "sider", og bruk "Angi sider"-blokk.'
      Course 4 Bee 1_instruction: 'Bien ser ikke forskjell på blomst og bikube.  Sjekk først om det er blomst eller bikube og samle kun inn nektar dersom det er en blomst. '
      Course 4 Bee 2_instruction: Kontroller hvert objekt for å se om det er en blomst. Dersom det er en blomst så samler du inn nekter,,, hvis ikke kan du overse det!
      Course 4 Bee 3_instruction: 'Det ukjente objektet er enten en blomst eller en bikube. bruk "hvis/ellers" blokk til å samle inn nekter dersom det er en blomst, hvis ikke så lager du honning (fordi det er en bikube).'
      Course 4 Bee 4_instruction: 'Denne lilla blomsten kan ha enten 3, 2 eller 1 nektar. Her er en "hvis/ellers"-blokk kombinert med en annen "hvis/ellers"-blokk for å danne en "Hvis/ellers hvis, ellers"-blokk. fullfør løsningen for å samle inn en ukjent mengde med nektar.'
      Course 4 Bee 5_instruction: Denne lilla blomsten må enten ha 3, 2 eller 1 nektar. Legg til en hvis-ellers-blokk for å lage en hvis, ellers-hvis og ellers-blokk. Fullfør løsningen for å samle inn det ukjente antallet nektar.
      Course 4 Bee 6_instruction: Denne lilla blomsten må enten ha 3, 2 eller 1 nektar. Legg til en hvis, ellers-hvis, ellers-blokk for å samle inn det ukjente antallet nektar.
      Course 4 Bee 7_instruction: Bruk alt du har lært så langt for å samle all nektaren. Den lilla blomsten har enten 3, 2 eller 1 nektar.
      Course 4 Bee For Loops 1_instruction: Bruk en løkke til å samle all nektaren fra hver blomst.
      Course 4 Bee For Loops 10_instruction: Hvis løkka di teller ned, så trekkes veksten fra teller-variabelen hver gang løkka går. Hva skal du øke med for å samle 9, så 6 og så 3 nektar?
      Course 4 Bee For Loops 11_instruction: Hva er galt med denne løkka? Se om du kan fikse den og gjøre slik at bia samler alle nektarene.
      Course 4 Bee For Loops 2_instruction: 'Her er en ny type løkke, kalt en "for"-løkke. Akkurat denne for-løkka vil telle fra 1 til 5 med steg på 1, og kjøre innholdet i løkka hver gang den teller. Hjelp Bie å hente nektaren.'
      Course 4 Bee For Loops 3_instruction: Du kan løse denne oppgaven ved å bruke en for-løkke til å telle fra 1 til 3 med steg på 1. La oss skaffe noen nektar!
      Course 4 Bee For Loops 4_instruction: Samle all nektaren fra disse blomstene. Jeg lurer på om det er en enklere måte å gjøre dette...
      Course 4 Bee For Loops 5_instruction: 'Åh, for-løkka gjør dette så mye enklere! Bruk "teller"-variabelen fra for-løkka til å kjøre en løkke over "hent nektar"-blokka samme antall ganger som løkka. Oooh! Det var mange løkker. All koden du trenger er der, ta en titt på hvordan den er satt sammen før du klikker på Kjør og ser hvordan den funker. '
      Course 4 Bee For Loops 6_instruction: Du kan også bruke en for-løkke til å telle ned. Prøv å samle nektaren ved å telle ned fra 5 til 1 med steg på 1.
      Course 4 Bee For Loops 7_instruction: Bruk for-løkkas teller-variabel til å kontrollere hvor langt du beveger deg vannrett.
      Course 4 Bee For Loops 8_instruction: Kan du bruke løkke-variabelen til å kontrollere bevegelse og innsamling av nektar?
      Course 4 Bee For Loops 9_instruction: 'Det siste tallet i for-løkka di er kalt "vekst" og hver gang løkka kjører endres teller-variabelen med veksten. Prøv å samle disse blomstene ved å bruke en vekst på 2.'
      Course 4 Bee Loops 5 NEW_instruction: Her er tre blomster. Kan du finne mønsteret av instruksjoner som du må gjenta 3 ganger for å samle alle nektarene ved å bruke det minste antallet blokker?
      Course 4 Bee Loops 5a NEW_instruction: Bruk løkker for å hjelpe bien med å samle all nektaren på dens vei til bikuben, med så få blokker som mulig. Ikke glem å lage honning når du kommer dit!
      Course 4 Bee Params 1_instruction: 'Bruk funksjonen "hent 3 nektar" som snur, beveger seg for å samle nektar og så returnerer til opprinnelig posisjon. Skriv en sekvens for å samle all nektar ved å bruke "hent 3 nektar"'
      Course 4 Bee Params 2_instruction: 'Endre funksjonen "hent 3 nektar" slik at den får meg til å snu til høyre i stedet for til venstre for blomstene.'
      Course 4 Bee Params 3 (copy 1)_instruction: 'Nå er det blomster på begge sider! Kanskje du kan bruke et parameter slik at den samme funksjonen fungerer for blomster på begge sider. Jeg har lagt til et parameter som heter "retning" i funksjonen. Hvis "retning"-parameteret er lik 0 så skal jeg gå til venstre, hvis det er 1 så skal jeg gå til høyre.'
      Course 4 Bee Params 3_instruction: 'Nå er det blomster på begge sider! Jeg har lagt til et parameter kalt "retning" i funksjonen. Bruk "venstre" og "høyre"-variabler til å kontrollere retning. Fyll inn resten av funksjons-definisjonen og klikk til slutt på "Lagre og Lukk"'
      Course 4 Bee Params 4 (copy 1)_instruction: Prøv å bruke den nye funksjonen din til å samle alle blomstene. Husk 0 = venstre og 1 = høyre.
      Course 4 Bee Params 4 - Two WhenRun_instruction: Prøv å bruke den nye funksjonen din for å samle alle blomstene. Husk å bruke venstre og høyre-variablene.
      Course 4 Bee Params 4 backup_instruction: 'Ville det ikke vært fint om vi kunne samle alle disse nektarene med en enkelt funksjon? Prøv å legge til et nytt parameter til funksjonen din kalt "nektar" for å kontrollere antallet nektar som skal samles. Du vil antakelig ønske å endre navnet på funksjonen også!'
      Course 4 Bee Params 4_instruction: Prøv å bruke den nye funksjonen til å samle alle blomstene. Husk å bruke variablene venstre og høyre.
      Course 4 Bee Params 5_instruction: 'La oss starte fra bunnen av - kan du lage en ny funksjon kalt "hent 5 nektar" med et parameter for retning?'
      Course 4 Bee Params 6 (copy 1)_instruction: Prøv å bruke din nye funksjon til å samle inn all denne nektaren.
      Course 4 Bee Params 6_instruction: 'Ville det ikke vært fint om vi kunne samlet all denne nektaren med en enkelt funksjon? Prøv å legge til et nytt parameter til funksjonen din, kalt "nektar-mengde" til å kontrollere antall nektar som skal samles inn. Du vil antakelig ønske å endre navnet på funksjonen også!'
      Course 4 Bee Params 7 (copy 1)_instruction: Prøv å bruke din nye funksjon til å samle inn all denne nektaren.
      Course 4 Bee Params 7_instruction: Prøv å bruke den nye funksjonen din til å samle inn all denne nektaren.
      Course 4 Bee Params 8 Clone 2_instruction: Oooh, nå er det honning å håndtere også! Hvordan kan du oppdatere funksjonen din til å enten hente nektar eller lage honning?
      Course 4 Bee Params 8 clone 3_instruction: Oooh, nå er det honning å håndtere også! Hvordan kan du oppdatere funksjonen din til å enten hente nektar eller lage honning?
      Course 4 Bee Params 8 Clone_instruction: Oooh, nå er det honning å håndtere også! Hvordan kan du oppdatere funksjonen din til å enten hente nektar eller lage honning?
      Course 4 Bee Params 8 new_instruction: Oooh, nå er det honning å håndtere også! Hvordan kan du oppdatere funksjonen din til å enten hente nektar eller lage honning?
      Course 4 Bee Params 8_instruction: 'Utfordring: Nå må du håndtere honning også! Skriv om funksjonen din til å ta inn både antall honning-enheter og antall nektar som skal samles inn. Hvordan vil du bruke disse tallene til å avgjøre hva du skal gjøre?'
      Course 4 Bee Params Ex_instruction: Prøv å bruke den nye funksjonen din til å samle inn all denne nektaren.
      Course 4 Binary 1_instruction: Her er en funksjon som tar inn en binærstreng av 1-ere og 0-ere og instruerer bonden til å gå fra venstre til høyre, øverst til nederst mens han skrur på rutene hvor nummeret er 0. Kjør koden for å se hvordan bøndene bruker binærstrenger til å tegne et bilde.
      Course 4 Binary 2_instruction: 'Hvilken binærstreng kan du gjenta 8 ganger for å tegne dette bildet? Hint: nummeret 1 fyller et hull.'
      Course 4 Binary 3_instruction: Kan du tegne dette mønsteret ved å kjøre en løkke over en enkelt binærstreng?
      Course 4 Binary 5 (copy 1)_instruction: Hvilken binærstreng, gjentatt 10 ganger, vil tegne dette bildet?
      Course 4 Binary 5_instruction: Hvilken binærstreng, gjentatt 10 ganger, vil tegne dette bildet?
      Course 4 Binary 6 (copy 1)_instruction: Hvilken binærstreng, gjentatt 10 ganger, vil tegne dette bildet?
      Course 4 Binary 6_instruction: Hvilken binærstreng, gjentatt 10 ganger, vil tegne dette bildet?
      Course 4 Binary 7_instruction: Hvilken binærstreng, gjentatt 10 ganger, vil tegne dette bildet?
      Course 4 Binary 8_instruction: 'Du kan fullføre mesteparten av dette bildet ved å kjøre en løkke over et 5-bits binærtall - så trenger du et til 4-bits binærtall til å få til nedre høyre hjørne.'
      Course 4 EC 1a_instruction: Ingen reglar. Ingen tips. Berre utfordringa!
      Course 4 EC 1b_instruction: Ingen reglar. Ingen tips. Berre utfordringa!
      Course 4 EC 2a_instruction: '**Ekstrem utfordring:** Ingen reglar. Ingen tips. Berre utfordringa!'
      Course 4 EC 2b_instruction: Ingen reglar. Ingen tips. Berre utfordringa!
      Course 4 EC 2c_instruction: Ingen reglar. Ingen tips. Berre utfordringa!
      Course 4 EC 2d_instruction: Ingen reglar. Ingen tips. Berre utfordringa!
      Course 4 EC 3_instruction: 'Bruk det du har lært i forrige nivå til å teikne eit bilere som dette. Tips: Koden blir enklare om du bruker parametere. '
      Course 4 EC 3a_instruction: 'Ekstrem utfordring: Ingen reglar. Ingen tips. Berre utfordringa!'
      Course 4 Maze 1_instruction: Få den sinte fuglen til grisen!
      Course 4 Maze 2_instruction: Hald deg unna dynamitten!
      Course 4 Maze 3_instruction: 'Programmer den sinte fuglen til å komme seg bort til grisen. '
      Course 4 Maze 4_instruction: 'Prøve å bruke "gjenta" blokken for å bruke færre blokkar...'
      Course 4 Maze 5_instruction: Klarar du å løyse denne oppgåva ved å bruke så få blokkar som mogleg?
      Course 4 Maze 6_instruction: Klarar du å løyse denne oppgåva ved å bruke så få blokkar som mogleg?
      Course 4 Play Lab For Loops 2_instruction: Denne gongen, la oss telje oddetala frå 1 til 100.
      Course 4 Play Lab Params 1_instruction: 'Her er ein funksjon kalla "hopp" som for hovudpersonen til å hoppe 100 pikslar. Bruk hopp funksjonen til å samle alle flagga.'
      Course 4 Play Lab Params 10_instruction: "Vi har lagt til en siste funksjon du kan bruke. \\r\n\\r\nProgrammer ditt spill til å kalle på \"levle_opp\"-funksjonen hvis \"spiller_poeng\" > 10. \\r\n\\r\nSpill spillet og oppnå level 4 for å gå videre til neste oppgave. "
      Course 4 Play Lab Params 2_instruction: "Nå har vi flagg som er alt for høye for vårt nåværende hopp! La oss bruke pilene \"opp\" og \"ned\" så vi ha flere hopp-høyder. \\r\n\\r\nVi trenger å legge til et parameter kalt \"høyde\" til vår hopp-funksjon. Opp-pila skal få hunden til å hoppe 200 piksler og ned-pila skal få den til å kun hoppe 100 piksler.\n\\r\n\\r\nHint: Du må klikke på \"endre\" på hopp-funksjonen og oppdatere den slik at den bruker \"høyde\"-parameteret."
      Course 4 Play Lab Params 3_instruction: 'La oss legge til et til parameter til hopp-funksjonen slik at vi kan bruke den med andre spillere. Hver spiller er representert med et nummer, fra en og oppover. Endre "hopp"-funksjonen slik at definisjonen inneholder "spiller"-parameteret. '
      Course 4 Play Lab Params 4_instruction: 'Her er en funksjon kalt "patruljer". Endre den slik at Katt beveger seg opp 400 piksler og så ned 400 piksler.'
      Course 4 Play Lab Params 5_instruction: 'Fyll inn "spiller"-parameteret slik at vi kaller på "patruljer"-funksjonen for hver spiller. Husk at spillerne tilsvarer tallene 1, 2 og 3.'
      Course 4 Play Lab Params 6_instruction: 'Legg til enda et parameter, kalt "hastighet" til funksjonen "patruljere". Prøv å bruk en "sett hastighet"-brikke sammen med "hastighet"-parametere for å hjelpe Pingvin få tak i begge flaggene før de andre figurene får tak i dem.'
      Course 4 Play Lab Params 7_instruction: "Se på denne koden og se om du kan finne ut hva hver blokk gjør. \\r\n\\r\nNår du er ferdig, bruk piltastene til å styre Hund og samle alle flaggene."
      Course 4 Play Lab Params 8_instruction: 'Bruk en "når berører"-blokk til å sende Hund tilbake til øvre venstre hjørne BARE hvis Hund berører noen av de andre spillerne.'
      Course 4 Play Lab Params 9_instruction: "Her er spillet vårt fra tidligere, men nå er mesteparten av koden gjemt. Det finnes en ny funksjon, \"score_poeng\".\\r\n\\r\nEndre funksjonen slik at \"poeng\"-parameteret blir lagt til \"spiller_score\"-variabelen. \\r\n\\r\nVariabelen \"spiller_score\" skal øke hver gang Hund kommer borti Katt med hjerter og minske hver gang Katt tar borti Hund med hjerter.\\r\n\\r\nMerk: Når du er ferdig, trykk på \"Kjør\" for å spille. Når Hund scorer 6 poeng kan du gå videre til neste oppgave. "
      Course 4 Play Lab Vars 1_instruction: 'Denne gangen trenger du ikke å omskrive noe kode, bare trykk på "Kjør" for å spille spillet! I dette spillet er du Hund, som prøver å samle mer flagg enn Katt. Bruk ned-piltasten til å kontrollere Hund. Trykk "Fullfør" når du er ferdig med å spille.'
      Course 4 Play Lab Vars 2_instruction: 'Løpet i forrige oppgave var ikke veldig rettferdig! Endre variabelen "hund_fart" for å sikre at du kan samle mer flagg enn Katt. Den første til å samle 10 flagg vinner!'
      Course 4 Play Lab Vars 3_instruction: 'Her er et nytt type spill! Bruk venstre- og høyre-pilene til å bevege deg og opp-pila til å hoppe. Se om du kan samle alle flaggene.'
      Course 4 Play Lab Vars 4_instruction: 'Nå bruker vi en variabel kalt "høyde" for å kontrollere hvor høyt hunden kan hoppe. Oppdater "høyde"-variabelen slik at hunden kan hoppe høyt nok til å nå alle flaggene.'
      Course 4 Play Lab Vars 5_instruction: 'La oss bygge et spill! Først trenger vi en poengsum. Bruk "sett poeng til"-blokk for å sette scoren til 10. '
      Course 4 Play Lab Vars 6 (copy 1)_instruction: 'Kult, nå har vi vår score-variabel, men hvordan skal vi ha nytte av den? Hva med å legge til score-variabelen hver gang du treffer fienden med en ildkule? Bruk "når figur 2 berører noe"-hendelsen til å utløse en oppdatering av poengsummen din når dine ildkuler treffer katten. Du kan øke score ved å sette score = score + 1. Øk din score til 10 (ett poeng om gangen!) for å bestå brettet.'
      Course 4 Play Lab Vars 6_instruction: "Bruk høyre piltast til å skyte hjerter.\\r\n\\r\nI vårt spill, hvordan skal vi score poeng? Legg til 1 til din \"poeng\"-variabel hver gang Hund treffer Katt med et hjerte. Bruk \"når figur 2 berører noe\"-hendelsen til å utølse en oppdatering av poeng-scoren din. Du kan øke variabelen ved å sette \"poeng = poeng + 1\". Få din poeng-score opp til 10 (ved å gå opp 1 poeng av gangen!) for å bestå nivå."
      Course 4 Play Lab Vars 7_instruction: Flott! La oss gjøre spillet litt vanskeligere å spille. Hver gang Hund (figur 1) blir truffet av gule hjerter fra Katt (spiller 2) skal du miste ett poeng. Start med 10 poeng slik at det ikke er for vanskelig. For å fullføre nivået må poeng-scoren falle fra 10 til 0.
      Course 4 Play Lab Vars 8 (copy 1)_instruction: 'En siste ting til dette spillet - la oss gjøre så spilleren kan vinne (eller tape). Bruk en for alltid-løkke for å sjekke verdien av poeng - hvis poeng er større enn 20 skal fienden forsvinne. Hvis poeng er mindre enn 0 skal spilleren forsvinne. Trykk "Fullfør" når spillet fungerer sånn som du vil det skal gjøre.'
      Course 4 Play Lab Vars 8_instruction: 'Sett opp spillet sånn at Hund kan vinne (eller tape). Bruk en for alltid-løkke for å sjekke verdien av poeng. Hvis poeng er større en 20 skal fienden (Katten) forsvinne. Hvis poeng er mindre enn 0 skal spilleren (Hunden) forsvinne. Klikk "Fullfør" når spillet fungerer slik du vil det skal gjøre.'
      Course 4 Play Lab Vars 9_instruction: "Tid for fritt spill! Her er alle variablene vi har brukt så langt, i tillegg til noen ekstra hvis du vil bruke dem.\\r\n\\r\nLegg merke til at det er så mange brikker i vår verktøykasse at de trenger å bli organisert! Her har vi lagt hver brikke inn i en kategori. Bruk litt tid på å utforske alt som er tilgjengelig. Lag et spill eller en historie og bruk gjenta-, variabler- og hendelser-brikker. \\r\n\\r\nHint: Bla ned for å se alle kommandoene i arbeidsområdet."
      Course 4 Play Lab Vars_instruction: 'En siste ting til dette spillet - la oss gjøre så spilleren kan vinne (eller tape). Bruk en for alltid-løkke for å sjekke verdien av poeng. Hvis poeng er større en 20 skal fienden forsvinne. Hvis poeng er mindre enn 0 skal spilleren forsvinne.'
      Course 4 Play Labs For Loops 1_instruction: Hunden skal si alle tallene fra 1 til 100. Bruk en for-løkke og teller-brikke til å si teller-variabelen hver gang løkka kjører.
      Course 4 Play Labs For Loops 2_instruction: Denne gongen, la oss telje oddetala frå 1 til 100.
      Course 4 Play Labs For Loops 3_instruction: Hvis vi teller med enda større tall, teller vi enda høyere på samme tid. Prøv å få hunden til å telle fra 10 til 1000, med 10 av gangen.
      Course 4 Play Labs For Loops 4_instruction: Å endre økningen når vi teller kan være nyttig, men vi teller fortsatt lineært (hvert tall er like langt fra det forrige). Hva hvis vi vil telle eksponensielt? Uten å endre innstillingene i denne for-løkka, kan du telle 1, 4, 9, 16, 25... (teller-variabelen ganget med seg selv)?
      Course 4 Play Labs For Loops 4a_instruction: "La oss blande variablene fra Scene 7 sammen med teller-variabelen for å skape magi. \\r\n\\r\nI dette spillet skal Hund telle fra 0 til 1000 ved å bruke \"øk\". Set \"øk\"-variabelen til 10 i starten av koden din."
      Course 4 Play Labs For Loops 5_instruction: 'I den siste scenen talte vi hvert tall ganget med seg selv. Prøv å endre "teller ^ 2" til "teller ^ 3" (1, 8, 27, 64, 125, 216, 343…)'
      Course 4 Play Labs For Loops 5a_instruction: "In this puzzle, Dog will be your\ntime keeper.\\r\n\\r\nDog will count from 0 to 30 by \"increment\".  The \"increment\"\nvariable will begin with a value of 1.\\r\n\\r\nCan you make it so that each\ntime you click Dog, the increment increases by 2?  Click the forward arrow\nto run the for loop.\\r\n\\r\nRun the loop a couple of times, clicking Dog before\neach one."
      Course 4 Play Labs For Loops 6_instruction: 'Du husker at et primtall er et heltall som bare kan deles på seg selv og 1. Bruk "er_primtall"-funksjonen for å si høyt de tallene som er primtall fra 1 til 100.'
      Course 4 Play Labs For Loops 6a_instruction: "Hund vil fortsatt holde styr på tiden ved å telle med \"for-løkke\" og \"øk\". Denne gangen skal vi ta med Trollmann også. Kan du endre koden så \"øk\" går opp med 2 hver gang Trollmann er trykket på?\\r\n\\r\nSe opp! Trollmannen beveger seg raskt!"
      Course 4 Play Labs For Loops 7_instruction: 'Kan du bruke en for-løkke til å hjelpe meg med å si disse tallene: 1, 4, 7, 10, 13, 16, 19, 22, 25?'
      Course 4 Play Labs For Loops 7a_instruction: "Dette er bra! Hva hvis vi starter å telle hvor mange ganger vi kan trykke på Trollmannen før Hund teller til 30? \\r\n\\r\nLegg til blokker på Trollmannen sånn at variabelen \"trykket\" øker med 1 hver gang han blir trykket på. Du trenger ikke bry deg om \"øk\"-variabelen nå.\\r\n\\r\nHun vil starte å telle når du trykker på \"Kjør\"."
      Course 4 Play Labs For Loops 8_instruction: "Hjelp figurene med å flytte seg mens de teller. \\r\n\\r\nHund skal bevege seg og telle ved å legge til 2 (teller + 2) hver gang. Katt skal bevege seg og telle ved å gange med 2 (teller * 2) hver gang. Pingvin skal bevege seg og telle med teller ^ 2 hver gang. Hvem vil nå flagget sitt først?"
      Course 4 Play Labs For Loops 8a_instruction: "For å fullføre spillet vårt må vi bruke \"øk\"-variabelen! La oss knytte den til nivået i spillet.\\r\n\\r\n1) Hold styr på hvor mange ganger Trollmannen er trykket på.\\r\n2)\nHvis Trollmannen er trykket på minst 10 ganger før Hund teller til 30 skal \"øk\"-variabelen økes med 1 og starte på nytt.\\r\n3) Hvis Trollmannen ikke blir klikket på 10 ganger (eller mer) er spillet over."
      Course 4 Playlab For Loop Freeplay_instruction: |
        Freeplay: Use everything you've
        learned so far to make a game that includes a `for` loop!
      Course 4 Playlab For Loops 4b_instruction: "Now, these two characters are going\nto race!  \\r\n\\r\nEach of them will move `counter` steps at a time, but their\ncounters will have different values because of the `for` loops.  \\r\n\\r\nCan\nyou change the increment in one of the loops so that the race is a tie?"
      Course 4 Playlab For Loops 5b_instruction: |
        Adjust the interval on these `for`
        loops so that the two characters end in the exact same place.
      Course 4 Playlab For Loops 6b_instruction: "Edit this `for` loop to create\na game that's fun for you to play!\\r\n\\r\nPress \"Run\" and click Madame\nUnicorn four times to win. "
      Course 4 SCF 1_instruction: Bruk de foreslåtte funksjonene til å tegne fire rader av sekskanter. Legger du merke til hvordan våre partallsrader er flyttet til høyre?
      Course 4 SCF 1a_instruction: Kan du finne ut hvordan du kan samle all denne nektaren med færrest mulig brikker?
      Course 4 SCF 1b_instruction: Kan du finne ut hvordan du kan samle all denne nektaren med færrest mulig brikker?
      Course 4 SCF 2_instruction: 'Bruk det du har lært i forrige nivå til å tegne et bilde som dette. Tips: Koden blir enklere hvis du bruker parametere. '
      Course 4 SCF 3 Fail 1_instruction: Kan du finne ut hvordan...
      Course 4 SCF 3 Fail 2_instruction: Kan du finne ut hvordan...
      Course 4 SCF 3_instruction: 'Bruk det du har lært i forrige nivå til å tegne et bilde som dette. Tips: Koden blir enklere hvis du bruker parametere. '
      Course 4 SCFL 1_instruction: Løs denne oppgaven med færrest mulig brikker.
      Course 4 SCFL 1a_instruction: Kan du få Scrat bort til eikenøtta si ved å bruke så få brikker som mulig?
      Course 4 SCFL 1b_instruction: Kan du få Scrat bort til eikenøtta si ved å bruke så få brikker som mulig?
      Course 4 SCFL 2_instruction: Løs denne oppgaven med færrest mulig brikker.
      Course 4 SCFL 3_instruction: Finner du ut hvordan du kan gjenskape denne tegningen?
      Course 4 SCFL 4_instruction: Finner du ut hvordan du kan gjenskape denne tegningen?
      Course 4 SCFL 5_instruction: Finner du ut hvordan du kan gjenskape denne tegningen?
      Course 4 SCFL 6_instruction: Kan du finne ut hvordan du kan lage denne tegningen med en enkelt løkke?
      Course 4 SCFL 7_instruction: Kunstneren ønsker å fange noen bølger! Finner du ut hvordan du kan lage denne tegningen?
      Course 4 SCFP 1_instruction: Opprett en funksjon med parametere som tillater kunstneren å hoppe framover og bakover med x antall piksler, og opp og ned med y antall piksler. Bruk positive og negative tall.
      Course 4 SCV 1_instruction: Klikk her for å se instruksjonene en gang til.
      Course 4 SCV 2_instruction: Klikk her for å se instruksjonene en gang til.
      Course 4 SCV 3_instruction: "Nå skal vi spille spillet \"har'n\" (også kjent som Sisten)! Tar du på Katt får du 2 poeng. Tar du på Pingvin får du 3 poeng. For å vinne må du få 10 poeng tilsammen!\\r\nMen vær forsiktig, når Katt og Pingvin er nær hverandre tar de poeng fra deg.\\r\n\\r\nLegg til brikkene som er nødvendig for å få dette spillet til å fungere slik som forklart. Hvordan kan du få Hund til å kunne flytte seg i alle retninger ved bruk av piltastene? Hvordan skal du legge til poeng når Hund er nær Katt eller Pingvin? Hvordan skal du trekke fra poeng når Katt og Pingvin er nær hverandre?"
      Course 4 SCV 4_instruction: Løs denne oppgaven med færrest mulig brikker.
      Course 4 SCV 5_instruction: Løs denne oppgaven med færrest mulig brikker.
      Course 4 SCV 6_instruction: Klikk her for å se instruksjonene en gang til.
      Course 4 SCVP 1_instruction: Opprett en funksjon med parametere som tillater kunstneren å hoppe framover og bakover med x antall piksler, og opp og ned med y antall piksler. Bruk positive og negative tall.
      Course 4 Variables Assessment_instruction: Kan du lage dette bildet ved å bruke en variabel for sidene? Hver linje skal være 50 piksler lange.
      Course1BeePuzzle12_instruction: Get three nectars and then make two honey
      Course1MazeAssessment1_instruction: "This is a test!\\r\nMove one way, then\nanother to get me to the pig"
      Course1MazeAssessment2_instruction: "This is a test!\\r\nMove one way, then\nanother to get me to the pig."
      course2_playlab_stage17_1_instruction: Kan du få denne hunden til å seie «hallo verda»?
      course2_playlab_stage17_2_instruction: |
        Can you make the dog say something
        and then have the cat say something afterwards?
      course2_playlab_stage17_3_instruction: |
        Can you write a program to make this
        dog move to the cat?
      course2_playlab_stage17_4_instruction: |
        Can you write a program that makes
        the dog move to the cat, and have the cat say "hello" when the dog reaches
        him?
      CSD Hackathon Pt 1_instruction: (Click to see full instructions)
      CSD Hackathon Pt 2_instruction: (Click to see full instructions)
      CSD Hackathon Week 1_instruction: (Click to see full instructions)
      CSD Hackathon Week 2_instruction: (Click to see full instructions)
      CSD U3 Background Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Background Experiment_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Boolean Modify_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Boolean Predict_instruction: |
        What do you think this code will do when
        it is run? Predict what each console.log() command will print, then run the
        program to check your predictions.
      CSD U3 Draw Loop Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Draw Loop Experiment_instruction: |
        Try using some of the other shape
        functions you've learned in the draw loop. What happens when you use randomNumber()
        to generate some of the inputs?You'll want to stop and discuss with the class
        before moving on.
      CSD U3 Expressions calculator_instruction: |
        Add the numbers 1 through 10. Multiply
        the numbers 1 through 10. Check your answers with a neighbor.
      CSD U3 Frame Rate_instruction: "Slow down Gamelab Gary's animation with frameRate()"
      CSD U3 Keypress Boolean_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Random Animation_instruction: |
        Use randomNumber() to animate Gary's
        mouth.
      CSD U3 Random Choice_instruction: |
        Use the randomNumber() block to generate
        either 0 or 1
      CSD U3 Random Color_instruction: |
        Could you use randomNumber() to pick random
        colors as well? Try setting one or more of the channels in the rgb block with
        a random number. What should the maximum value be?
      CSD U3 Random Intro_instruction: |
        What do you think this code will do when
        it is run? Make a prediction, then run this code 5 - 10 times, recording the
        output each time. Share your results with your neighbor.
      CSD U3 Random Min Max_instruction: |
        Using console.log() write a program that
        randomly returns a number in a range you define.
      CSD U3 Random Width Height_instruction: |
        Pick a shape block and use calls to
        randomNumber() in place of one or more of the parameters. Maker sure you run
        it a few times so you can see the effect of randomization.
      CSD U3 Simple Drawing - Animation 2_instruction: |
        Use randomNumber() on the
        x position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Animation_instruction: |
        Use randomNumber() on the x
        position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Background_instruction: |
        Put all of your code into
        a draw() loop and then add set the background to blue with the background()
        block.
      CSD U3 Simple Drawing - Personal Animation_instruction: DO This
      CSD U3 Sprites intro sprites_instruction: Do This
      CSD U3 Variable Arithmetic pt2_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variable Arithmetic_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variable Incrementation pt2_instruction: |
        Predict: What two numbers
        will be displayed in the console?
      CSD U3 Variable Incrementation_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variables CHALLENGE gamelab gary_instruction: |
        Use variables to animate
        Game Lab Gary
      CSD U3 Variables create and assign_instruction: |
        Create and assign size in
        a single line of code.
      CSD U3 Variables draw loop newVars_instruction: |
        Extend this project to create
        your own random art visualization with variables.
      CSD U3 Variables draw loop rgb_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables draw loop xy_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables eyeBrows_instruction: |
        Predict what will happen when you move
        the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables Initialize_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables Intro_instruction: 'Create your own variable '
      CSD U3 Variables make a big square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      CSD U3 Variables make a square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      CSD U3 Variables multiple assignments_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables naming rules_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random assignment_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables random draw loop_instruction: |
        Predict what will happen when
        you move the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables random drawing exemplar_instruction: |
        Check out this example
        randomized drawing.
      CSD U3 Variables Random_instruction: |
        Predict: What will get displayed in the
        console?
      CSD U3 Variables Reassign pt2_instruction: |
        Create and assign a new variable
        in a single line.
      CSD U3 Variables Reassign_instruction: |
        Predict: What will get displayed in
        the console?
      CSD U3 Variables Square Random Loop_instruction: |
        Test your predictions from
        the last level.
      CSD U3 Variables Square Random_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables Square_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables TEMPLATE square_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables use value rect_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables write_instruction: |
        Use the write block to display the value
        of size
      CSD U3 Variables2 expressions in commands_instruction: |
        Use expressions inside
        a drawing command
      CSD U3 Variables2 expressions in variables_instruction: |
        Assign the value of
        each expression to a variable and console.log that variable.
      CSD U3 Variables2 expressions_instruction: |
        Use console.log to display the
        results of each expression. Then create your own.
      CSDU4 - AppLab - 1_instruction: |
        Read the documentation for penColor() and
        penWidth() before using them to draw the blue square.
      CSDU4 - AppLab - 2_instruction: |
        Write a program that acts as a simple calculator.
        (click to see full instructions)
      CSDU4 - AppLab - 3_instruction: |
        Use console to check the ending value of num.
        (Click to see full instructions)
      CSDU4 - AppLab - 4_instruction: |2
         Use the Debug Commands to make a list of
        all the values rolled before a 6. (Click to see full instructions)
      CSDU4 - Design Mode - 1_instruction: |
        Add a button that moves the turtle when
        clicked.  (Click to see full instructions)
      CSDU4 - Design Mode - 10_instruction: |
        Introducing the setPosition command!
        Replace the moveTo in the button-click event handler to use setPosition to
        move the button itself to a random location when it's clicked.
      CSDU4 - Design Mode - 11_instruction: |
        Experiment with different event types
        and select the one that you think is best. (Click to see full instructions)
      CSDU4 - Design Mode - 12_instruction: |
        Use the textLabel command to replace
        the button in your program with a text label. (Click to see full instructions)
      CSDU4 - Design Mode - 16_instruction: |
        Add an event handler for the button
        using the "Insert and show" link in the Design Mode Events tab. (Click to
        see full instructions).
      CSDU4 - Design Mode - 17_instruction: |
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      CSDU4 - Design Mode - 18_instruction: |
        Fix the layout of the bullseye game.
        (Click to see full instructions)
      CSDU4 - Design Mode - 19_instruction: |
        Make a 2 screen app with a black screen
        and a white screen. (Click to see detailed instructions)
      CSDU4 - Design Mode - 2_instruction: |
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      CSDU4 - Design Mode - 20_instruction: |
        Make a 2 screen app which can switch
        back and forth between a black screen and a white screen using buttons. (Click
        to see detailed instructions.)
      CSDU4 - Design Mode - 24_instruction: |
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      CSDU4 - Design Mode - 25_instruction: |
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      CSDU4 - Design Mode - 26_instruction: |
        Save the age and name of the user in
        variables (Click to see full instructions)
      CSDU4 - Design Mode - 27_instruction: |
        Output a message to the 'textArea'
        (Click to see full instructions)
      CSDU4 - Design Mode - 28_instruction: |
        Write a greeting to the user when they
        hit 'enter' in the text input, using the 'change' event. (Click to see
        full instructions)
      CSDU4 - Design Mode - 29_instruction: |
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      CSDU4 - Design Mode - 3_instruction: |
        Add an event handler to the button to
        move the turtle forward. (Click to see full instructions)
      CSDU4 - Design Mode - 30_instruction: |
        Show different die images for the random
        number generated. (Click to see full instructions)
      CSDU4 - Design Mode - 31_instruction: |
        Set up an event handler to respond to
        keypress events, and display event.key in the console. Hit keys on the keyboard
        to see what happens. (Click to see full instructions)
      CSDU4 - Design Mode - 32_instruction: |
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      CSDU4 - Design Mode - 33_instruction: |
        Change the code so the sound will only
        play when the up arrow is pressed. (Click to see full instructions)
      CSDU4 - Design Mode - 4_instruction: |
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      CSDU4 - Design Mode - 5_instruction: |
        Debug the program by verifying your IDs
        are being referenced properly. (Click to see full instructions)
      CSDU4 - Design Mode - 6_instruction: |
        Debug the program by properly ordering
        your button commands and event handlers. (Click to see full instructions)
      CSDU4 - Design Mode - 7_instruction: |
        Debug the program by fixing the logical
        error within the program. (Click to see full instructions)
      CSDU4 - Design Mode - 8_instruction: |
        Move the button to the middle of the
        screen. (Click to see full instructions)
      CSP Data Unit - Counting Multiple Things_instruction: "If you can count one\nthing you can count multiple things\\r\n\\r\nFind out how many people like something\nother than dogs and cats\\r\n\\r\nCount dogs\\r\nCount cats\\r\nCount total\\r\nDo\nthe math\\r\n\\r\nblank/ blank toal\\r\n\\r\nCan also use this to find percents\nfrom this\\r\n\\r\nx% are dog lovers"
      CSP Data Unit -Counting Records - Easy Way_instruction: "ReadRecords with specific\ncriteria \\r\nfind the length of an array\\r\n"
      CSP Data Unit -Counting Records - Hard Way_instruction: "\\r\n1. ReadRecords\nfor all records\\r\n2. Way to loop through and count\\r\n"
      CSP U4 - JSON Object Intro - Bad Way_instruction: |
        Trigger both the keyboard
        and mouse event and examine the event objects displayed in the console. Why
        might an object be the best way to store this information? (Click to see full
        instructions)
      CSP U4 - JSON Object Intro - Good Way_instruction: |
        Create an object with at
        least 5 values including at least one string and one number. (Click to see
        full instructions) 
      CSP U4 - Objects - createObject_instruction: |
        Create an object with at least
        5 values including at least one string and one number. (Click to see full
        instructions) 
      drawings!_instruction: |
        Draw the equilateral triangle - all the sides are the
        same!
      ECSPD Binary Odometer_instruction: |
        This is another resource you could use
        with your students.
      Eval Booleans 1_instruction: |
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either true or false. Click "Run" to
        see how this expression evaluates.
      Eval Booleans 2_instruction: |
        Can you set the values so that this expression
        evaluates as true?
      Eval Booleans 3_instruction: |
        The string-length function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        true.
      Eval Booleans 4_instruction: |
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: |
        Here's a similar function red shape with an additional
        variable for size. Complete the conditionals so the correct solid red image
        of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: "Write a function called food-critic, which takes\nin the name of a food and produces a String that says how you feel about that\nfood. For example, (food-critic “pizza”) might evaluate to “delicious”, but\n(food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two\nfoods to review, but you can you write more if you like!  Don’t forget to\nadd an “else” clause!\\r\nOne example - and part of the definition -  has already\nbeen done for you!"
      Eval Cond 7_instruction: "Free Play: Write a function called green-shape, which\ntakes in the name of a shape and produces a solid green shape. Your function\nshould work with at least “circle”, “star” and “rectangle”, but you can add\nother shapes if you like. You can choose the size of each shape. Don’t forget\nto add an “else” clause!\\r\nOne example - and part of the definition -  has\nalready been done for you!\\r\n"
      Eval Cond 8_instruction: "Free Play: Suppose you want to own a car at 21, or\nhave your own business by 30. Write a function called life-goals, which takes\nin an age and produces a string that describes your life goals by then. Don’t\nforget to add an “else” clause!\\r\n"
      Eval Contracts 1_instruction: |
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: |
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: |
        Check out the rotate function - can you use
        it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: |
        Can you complete this image using the "shrink"
        function block? The radius is 20. 
      Eval Define Funcs 1_instruction: |
        Here's a new function called green-triangle
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: |
        Let's look inside that green-triangle function
        to see how it works. Can you modify it so that the green-triangle function
        always draws outlined green triangles?
      Eval Define Funcs 3_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: |
        Create a new function called aqua-star that
        has a Domain of a single Number for radius and returns an aqua star of the
        given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |
        Let's use that aqua-star function to make
        a row of different sized stars. From left to right, the stars should have
        radii of 25, 50, and 75.
      Eval Define Funcs Test_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |
        The Design Recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition? The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        starburst. When given a number of points and an outer radius, starburst returns
        a yellow radial star with given points, and an inner radius that is half the
        outer radius.
      Eval Design Recipe 5_instruction: |
        Using the Design Recipe, write a function
        striped-flag that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |
        Write a function large-polygon that should
        output a solid polygon of given sides and color that takes up most of the
        window, regardless of the number of sides. To make sure that the polygon doesn't
        get too large as you increase the number of sides, side length should be inversely
        proportional to side number, with a length of (800/sides).
      Eval Design Recipe Free Play_instruction: |
        Free Play: Use the Design Recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |
        The string-append function takes two Strings
        and returns a single combined String. Add a String "Universe" to the second
        argument of string-append.
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the rectangle block to draw this
        solid, red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |
        Try using this new Evaluation Block called
        overlay to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: |
        Use the overlay block to place a 75 pixel
        radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      eventsIntro_instruction: Need a better playlab/events combo
      Farmer for Authored Hint testing_instruction: |
        Wow, I found a really deep hole!
        I don't know how many shovelfuls of dirt it needs.  Can you write a program
        that fills it until the ground is even?  Hint:  Try using the while loop this
        time.
      Frequency Analysis_instruction: Test
      frozen circle function in circle_instruction: Nå skal vi lage 20 overlappande sirklar, medan vi dreier 18 grader mellom kvar sirkel.
      frozen circle function with parameter_instruction: 'Her er ein "Lag sirkel" blokk som kan lage sirklar av ulik størrelse. Kan du bruke den til å lage ein liten sirkel med storleik 5 og ein stor sirkel med størrelse 10?'
      frozen circle function_instruction: 'Bruk den nye "Lag sirkel" blokken for å lage 10 overlappande sirklar. Hugs å gå framover mellom sirklane.'
      frozen circle_instruction: Ein sirkel er ei spesiell form. Klarar du å finne ut kva tal som skal erstatte spørsmålteikna for å teikne ein sirkel?
      frozen cross rotate dense_instruction: 'La oss gjenta det 90 gongar! Kor mange gongar går 90 opp i 360? Tips: Det er eit ganske lite tal.'
      frozen cross rotate_instruction: Prøv å gjenta det 10 gongar. Kor mange grader skal du snu mellom kvar linje?
      frozen cross_instruction: 'Sett ein "Gjenta"-blokk rundt desse kommandoane for å lage eit plussteikn. La du merke til at Elsa kan bevege seg både framover og bakover?'
      frozen diamond mini snowflake_instruction: 'Visste du at alle snøfnugg har forskjellige former? La oss lage eit nytt snøfnugg ved å bruke enda ein "Gjenta" kloss for å gjenta mønsteret 4 gongar. Snu 90 grader mellom kvart mønster.'
      frozen diamond snowflake_instruction: 'Nå skal vi lage eit snøfnugg ved å bruke "Gjenta"-blokken til å lage eit parallellogram 10 gongar og snu 36 grader mot høgre mellom kvar.'
      frozen diamond_instruction: 'Bruk en "Gjenta" blokk rundt desse blokkane for å lage eit parallellogram. Det er ein firkant der hjørna her ulik vinkel. Denne har vinklar på 60 grader og 120 grader i staden for at alle har 90 graders vinklar.'
      frozen freeplay_instruction: Du har offisielt blitt ein mesterkunstnar! Lag eit vinterparadis.
      frozen line_instruction: Hei! Eg heiter Elsa av Arendelle. Hjelp meg å lage ei enkel linje.
      frozen perpendicular_instruction: 'Nå skal vi prøve å lage to linjer som står 90 grader i forhold til kvarandre. Du må bruke "Snu" blokken og "Flytt" blokken.'
      frozen snowflake branch_instruction: 'Prøv å bruke "Lag ei snøfnugg grein" blokken for å lage tre greiner som begynner å se ut som eit snøfnugg.'
      frozen snowflake full_instruction: La oss gjenta det 8 gongar for å lage eit nydeleg snøfnugg!
      frozen snowflower_instruction: Det er mogleg å lage innvikla snømønstre ved å sette saman enkle former. Kan du lage eit mønster ved å gjenta 5 sirklar med størrelse 5 og 5 sirklar med størrelse 10?
      frozen square iterative_instruction: Det ser ut til at vi er halvvegs til å lage eit kvadrat. La oss sette saman fire linjer for å lage eit kvadrat.
      frozen square loop 3x_instruction: La oss lage tre kvadratar med spissen mot kvarandre. Hugs å snu 120 grader før kvart nye kvadrat.
      frozen square loop_instruction: 'Hei, eg heiter Anna av Arendelle! La oss lage eit kvadrat ved hjelp av "Gjenta" blokken som brukar færre blokkar. Kor mange gongar (???) treng "Gjenta" blokken gå gjennom blokkane inni for å lage eit kvadrat?'
      frozen square snowflake_instruction: 'Får du til å lage et snøfnugg ved å bruke "repeter"-blokken til å lage 10 kvadrater og "Snu"-blokken for å snu deg 36 grader mellom hvert kvadrat?'
      grade1_artist_loops1_instruction: |
        The Artist is trying to draw a line six
        times, but can't get it right.  Can you help?
      grade1_artist_loops2_instruction: |
        Help the artist draw a line 7 times to make
        a garden wall.
      grade1_artist_loops3_instruction: |
        Now we need to get the soil ready to plant.
        Find the bug and help the artist prepare the ground. 
      grade1_artist_loops4_instruction: |
        Time to fix the stairs!  Repeat this pattern
        five times so the artist can reach the top of the bushes.
      grade1_artist_loops5_instruction: |
        Behind the bushes there is a beautiful vine
        full of flowers.  Can you climb the vine and see where it goes?
      grade1_artist_loops6_instruction: |
        **Challenge:**  It's a hidden garden! Let's
        walk around.
      grade1_artist_loops7_instruction: |
        The flowers down here are so pretty.  Let's
        take a closer look.
      grade1_artist_loops7a_instruction: |
        **Challenge:**  Lovely! Let's take a walk
        around the garden.
      grade1_artist_loops7b_instruction: |
        Time to head home. Can you fix this ladder
        to help the artist get down?
      grade1_artist_loops8_instruction: |
        Let's take the short way over the pond.
        Can you help the artist stay on the stones?
      grade1_artist_loops9_instruction: I still need a story for this puzzle
      grade1_artist_loopsFP_instruction: |
        Use what you have learned to draw a picture
        of what you think the artist saw when he got home.
      grade1_maze_sequence1_instruction: Endre denne koden for å få meg bort til grisen!
      grade1_maze_sequence10_instruction: Move me around the TNT to get to the pig.
      grade1_maze_sequence2_instruction: Endre denne koden for å få meg bort til grisen!
      grade1_maze_sequence3_instruction: |
        Can you add 2 blocks to get the bird to
        the pig.
      grade1_maze_sequence4_instruction: Now try this puzzle from the start!
      grade1_maze_sequence5_instruction: |
        Move one way, then another to get me to
        the pig!
      grade1_maze_sequence6_instruction: |
        Figure out what is missing and then add
        blocks to get me to the pig!
      grade1_maze_sequence7_instruction: |
        Your turn!  What do you need to do to get
        the bird to the pig?
      grade1_maze_sequence8_instruction: |
        Debug this level by adding blocks to get
        me to the pig!
      grade1_maze_sequence9_instruction: |
        Go around the TNT to get me to the pig!
        
      grade1_maze_sequenceA_instruction: Move me around the TNT to get to the pig.
      grade1_maze_sequenceB_instruction: Fix the bugs to get the bird to the pig.
      grade1_maze_sequenceC_instruction: "It's all you!  Get the bird to the pig."
      grade1_maze_sequenceD_instruction: "It's a pig party!  Get those pigs! "
      grade1_playlab_events1_instruction: |
        This game is called "Play Lab".  See
        if you can figure out what each block does.
      grade1_playlab_events2_instruction: |
        This program makes Robin fly.  Can you
        get her to vanish when you click her?
      grade1_playlab_events3_instruction: "This program makes Robin fly.  Can you\nmake the robot jump when you press the up button?\\r\n"
      grade1_playlab_events4_instruction: |
        Add a block to make Robin vanish when
        she collides with the robot.
      grade1_playlab_events5_instruction: |
        Add a block to the 'when run' event
        that starts the dragon flying.
      grade1_playlab_events6_instruction: |
        Add a block to the 'when actor 1 clicked'
        event that makes the dragon return to the middle of the screen.
      grade1_playlab_events7_instruction: |
        Add a block so that when you push the
        left arrow button, the knight surges toward the dragon.
      grade1_playlab_events8_instruction: |
        Add a block so that when the knight collides
        with the dragon, it plays a sound.
      grade1_playlab_events9 RYAN COPY_instruction: |
        Now, have Robin wait a second,
        then come back after she vanishes.
      grade1_playlab_events9_instruction: |
        Now, add a block to keep score each time
        the knight hits the dragon.
      grade1_playlab_eventsFP_instruction: |
        Use your imagination. What can you do
        to make this game more fun?
      grade1_sequence_pre_instruction: |
        Play with these blocks to see what they make
        the bird do!
      grade1_video_frustrationRainbow_instruction: |
        This video describes the rainbow
        of frustration and introduces persistence.
      grade2_CaringForNewPet_1_instruction: |
        Can you help me catch the naughty pig?
        Stack a couple of `move forward` blocks below the `when run` block and press
        "Run". 
      grade2_CaringForNewPet_2_instruction: |
        This pig is ruffling my feathers. Help
        me get to him!
      grade2_CaringForNewPet_3_instruction: |
        Trace the path and lead me to the silly
        pig. Avoid TNT or feathers will fly!
      grade2_CaringForNewPet_4_instruction: |
        Keep calm and help me find the bad pig.
        Otherwise I might get angry!
      grade2_CaringForNewPet_5_instruction: Få meg til grisen!
      grade2_CaringForNewPet_6_instruction: |
        Guide me to the green evilness! (Watch
        out for TNT)
      grade2_MakeDogTag_1_instruction: |
        Hi, I'm an artist. You can write code to
        make me draw almost anything. Use a few blocks to make me draw over the grey
        lines in the picture. (Each line is 100 pixels long)
      grade2_MakeDogTag_10_instruction: Teikn noko morosamt.
      grade2_MakeDogTag_2_instruction: |
        This house has a half-finished wall. Each
        side is 100, but the half-finished wall is only 50. Complete the wall. 
      grade2_MakeDogTag_3_instruction: Hjelp meg å gjere huset til denne katten ferdig.
      grade2_MakeDogTag_4_instruction: 'Dette huset treng eit tak! Teikn trekanten. Hint: alle dei tre sidene skal være like lange.'
      grade2_MakeDogTag_5_instruction: |
        Complete the rooms for each of the animals
        by splitting the rectangle into 2 equal-sized squares. The rectangle is 200
        pixels wide and 100 pixels tall. There are many different ways to solve this
        puzzle, so have some fun!
      grade2_MakeDogTag_6_instruction: Åpent brett! Teikn kva du vil.
      grade2_MakeDogTag_7_instruction: "Give the stop sign a border by making an\noctagon with 100 pixels sides. \\r\n\\r\n"
      grade2_MakeDogTag_8_instruction: "Nå skal me koble saman ein haug med V'ar ved å teikne dei med ei løkke."
      grade2_MakeDogTag_9_instruction: |
        Rebuild the code from the last puzzle, but
        this time, add a left turn of 30 degrees inside the loop. Now, repeat it 24
        times instead of 8.
      grade2_PuppyLoops_1_instruction: |
        Can you get me to the pig using 5 of the
        same kind of blocks?
      grade2_PuppyLoops_10_instruction: Hjulet mitt er ikkje ferdig. Kor mange gonger må eg gjenta for å gjera det ferdig?
      grade2_PuppyLoops_2_instruction: |
        Can you get to the pig by creating a loop
        that uses only one `move forward` block inside of a `repeat`?
      grade2_PuppyLoops_3_instruction: |
        Get me to the pig! You can only use one move
        forward block this time
      grade2_PuppyLoops_4_instruction: |
        In this puzzle, two `repeat` loops will help
        you get to the pig with the fewest number of blocks!
      grade2_PuppyLoops_5_instruction: Få meg til grisen!
      grade2_PuppyLoops_6_instruction: |
        Loops even work with more than one block
        inside!  Can you loop this sequence to get the zombie to the sunflower?
      grade2_PuppyLoops_7_instruction: Få meg til solsikka!
      grade2_PuppyLoops_8_instruction: 'Koden for tre værhår som du ser, er feil. Hint: kvart værhår er 75 pikslar lang. Reparer koden som tegner værhåra.'
      grade2_PuppyLoops_9_instruction: Det ser ut som C i koden er teikna feil veg. Kan du få han til å sjå ut som ein C?
      grade3_AboutMyRobot_1_instruction: |
        Make your robot say "Hello!" when the
        button is clicked.
      grade3_AboutMyRobot_2_instruction: |
        Edit the code so that when the second bird
        is clicked, your program plays a sound!
      grade3_AboutMyRobot_3_instruction: |
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      grade3_AboutMyRobot_4_instruction: |
        Add code to make something happen when
        the fourth bird is clicked. Be creative!
      grade3_AboutMyRobot_5_instruction: |
        About My Robot Project! Write code so that
        clicking on each bird shows a new fact about your robot.
      grade3_AboutMyRobot_TeacherIDo_instruction: |
        Run this puzzle and click on the
        robot to see what happens!
      grade3_Conditionals_1 BAD_instruction: Bruk ei løkke til å samle inn all nektaren.
      grade3_Conditionals_1_instruction: Hei, eg er ei bie! Hjelp meg å samle all nektaren frå blomane. Bruk ei løkke.
      grade3_Conditionals_10 BAD_instruction: Samle nektar frå radene med blomar! Bruk løkke i løkke.
      grade3_Conditionals_10_instruction: 'Samle nektar og lag honning. Hint: kva skjer om du bruker "viss nektar" på ein raud blome? Kan du gjere ferdig dette med ei løkke?'
      grade3_Conditionals_11 BAD_instruction: 'Oppgåve: Bruk ein medan-løkke til å samle inn all nektaren frå denne blomen.'
      grade3_Conditionals_11_instruction: Samle nektar og lag honning. Ver forsiktig så du ikkje samlar inn nektar frå dei lilla blomane om dei ikkje har noko.
      grade3_Conditionals_12_instruction: Samle nektar frå alle dei fire blomane.
      grade3_Conditionals_13_instruction: |
        Assessment: Collect all of the nectar.
        Be careful not to try to collect nectar from a purple flower if it doesn't
        have any.
      grade3_Conditionals_2_instruction: Hjelp meg å samle all nektaren frå blomane og lage honning. Bruk ei løkke.
      grade3_Conditionals_3_instruction: "Be careful not to collect nectar from a\npurple flower if it doesn't have any. \\r\nYou must first check if the nectar\nis equal to 1 using the `if nectar` block."
      grade3_Conditionals_4_instruction: 'Bruk ein "viss"-blokk for å sjekke om det er nektar i blomen.'
      grade3_Conditionals_5_instruction: Samle nektar frå alle blomane dersom dei har nektar.
      grade3_Conditionals_6_instruction: Dette jordet har raude og lilla blomar. Raude blomar har ei gitt mengde nektar, medan lilla har ei ukjend mengde nektar. Samle inn all nektaren.
      grade3_Conditionals_7_instruction: Samla inn all nektar frå kvar blome.
      grade3_Conditionals_8_instruction: Samle inn nektar dersom blomane har nektar.
      grade3_Conditionals_9_instruction: |
        Help me find all of the nectar using as
        few blocks as possible!
      grade3_Conditionals_TeacherIDo_instruction: |
        Check this flower with an "if"
        block to see if there is any nectar available.
      grade3_ConditionalsElse_1_instruction: Bia ser ikkje forskjell på blome og bikube. Berre samle inn nektar frå blomane, men sjekk først om det blome eller bikube.
      grade3_ConditionalsElse_2_instruction: Bia vil berre ha nekar akkurat nå. Hugs, ikkje alle er blomar, så sjekk etter at du berre samlar nektar frå blomar.
      grade3_ConditionalsElse_3_instruction: |
        Now I just want to make honey. Some
        of these clouds might have honeycombs under them. Be sure to check each cloud!
      grade3_ConditionalsElse_4_instruction: 'Det ukjende objektet er enten ein blome eller ein bikube. Bruk "viss/elles" blokk til å samle inn nektar om det er ein blome, om ikkje så lagar du honning (fordi det er ein bikube).'
      grade3_ConditionalsElse_5_instruction: "There will be either a flower or a\nhoneycomb under each of those clouds!\\r\n\\r\nUse the `if/else` block to collect\nnectar if there is a flower.\\r\nOtherwise, make honey (because there is a\nhoneycomb)."
      grade3_ConditionalsElse_6_instruction: "I am not sure how much nectar this\nflower has, but I know it has either 1, 2, or 3 nectar. \\r\n\\r\nCombine the\nconditional blocks (`if` and/or `if/else`) to only get as much nectar as the\nflower has. \\r\n\\r\nRemember, the amount of nectar can change each time you\nrun the puzzle!"
      grade3_ConditionalsElse_7_instruction: 'Hugs at lilla blomar kan ha 3, 2 og 1 nektar. Fullfør "kontroller lilla blomar" funksjonen og bruk den til å samle inn nektar frå alle blomane.'
      grade3_ConditionalsElse_8_instruction: "Write the function for `check flower\nmake honey`. \\r\n\\r\nYour function should check if the purple flower has 3,\n2, or 1 nectar and get all of the nectar. \\r\nThen, move forward and make\nhoney."
      grade3_ConditionalsElse_9_instruction: "**Assessment:** This cloud is either\nhiding a flower with one nectar or a honeycomb that needs one honey.  \\r\n\\r\nComplete\nthe `get nectar or make honey` function, then call it to collect the nectar\nor honey. \\r\n"
      grade3_ConditionalsElse_TeacherIDo_instruction: "There will be either a flower\nor a honeycomb under each of those clouds!\\r\n\\r\nUse the `if/else` block\nto collect nectar if there is a flower.\\r\nOtherwise, make honey (because\nthere is a honeycomb)."
      grade3_Debugging_1_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      grade3_Debugging_10_instruction: "This puzzle is making me loopy! \\r\nFix the\nerror(s) to collect all of the nectar and make all of the honey."
      grade3_Debugging_11_instruction: "Assessment:  Now it's time to show what\nyou know!\\r\n\\r\nFix the error(s) to collect all of the nectar and make all\nof the honey."
      grade3_Debugging_2_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      grade3_Debugging_3_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      grade3_Debugging_4_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      grade3_Debugging_5_instruction: "That flower looks tasty! \\r\n\\r\nFix the error(s)\nto collect all of the nectar.  You can now use both run and step."
      grade3_Debugging_6_instruction: Desse blokkane er verkeleg irriterande. Fiks det som er feil for å samle all nektaren.
      grade3_Debugging_7_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      grade3_Debugging_8_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      grade3_Debugging_9_instruction: Desse blokkane plagar meg. Reparer feila og samle inn all nektaren for å lage all honningen.
      grade3_Debugging_TeacherIDo_instruction: |
        These blocks are really bugging me.
        Fix the error(s) to collect all of the nectar and make all of the honey.
      grade3_Loops_1_instruction: |
        Hi, I'm a bee. Can you help me collect the nectar
        from these flowers? 
      grade3_Loops_10_instruction: 'Bruk ei lik løkke som i førre oppgåve, men ta med ein "snu"-blokk.'
      grade3_Loops_11_instruction: Bruk ei løkke får å gå ned trinna og samle nektaren.
      grade3_Loops_12_instruction: Bruk ei løkke for å samle nektar frå kvar blomst og lage honning i kvar bikube.
      grade3_Loops_2_instruction: Kan du løyse same oppgåve enklare ved å bruke ei løkke?
      grade3_Loops_3_instruction: Kan du bruke ei løkke for å samle inn all nektaren?
      grade3_Loops_4_instruction: |
        Now use the `repeat` block to collect all of the
        nectar and make all of the honey.
      grade3_Loops_5_instruction: Sette desse blokkane i ei løkke for å samle inn nektar frå kvar blome.
      grade3_Loops_6_instruction: Kva skjer om du gjentar denne sekvensen 3 gongar? Ikkje gløym å lage honning til slutt!
      grade3_Loops_7_instruction: 'Kvar blome inneheld ein porsjon nektar. Hent nektar frå alle blomane. '
      grade3_Loops_8_instruction: Bruk ei løkke for å samle all nektaren og lage honningen.
      grade3_Loops_9_instruction: Samle inn nektar frå alle blomane og lag honning i kvar av bikubane.
      grade3_Loops_TeacherIDo_instruction: "Those flowers look tasty!\\r\n\\r\nCollect\nnectar from each of the flowers using the fewest blocks possible."
      grade4_arist_functions_star0_instruction: |
        Have you drawn something like this
        star before? Practice making it one more time by adding a turn and a repeat
        block.
      grade4_arist_nested_loop_circles1_instruction: |
        Assessment: Use a nested loop
        to complete the design.
      grade4_arist_nested_loop_flags1_instruction: |
        Loop the given code to create
        a windmill.
      grade4_arist_nested_loop_polygons1_instruction: "Loop this design 10 times.\n\\r\n\\r\nHow much do you have to turn each time you loop?"
      grade4_arist_nested_loop_polygons2_instruction: "Loop this shape 6 times. \\r\n\\r\nHow\nmuch do you have to turn each time you loop? "
      grade4_arist_nested_loop_squares1_instruction: |
        Can you draw these 10 squares
        of this sidewalk using a nested loop? Each square is 30 pixels.
      grade4_arist_nested_loop_triangles2_instruction: |
        Now nest this loop inside
        another loop to draw 10 triangles.  This is called a "nested" loop.  
      grade4_arist_nested_loop_triangles3_instruction: |
        Can you draw a hexagon by
        looping the triangle code?
      grade4_arist_nested_loop_triangles4_instruction: |
        Draw the teeth in the alligator's
        mouth!
      grade4_arist_nested_loop_triangles5_instruction: "Create a sun by nesting the\nstarter code in another loop.\\r\n\\r\nTo get this cool design with a hollow\ncenter, you'll need to jump forward by the length of the triangle before\nturning."
      grade4_arist_nested_loop_triangles6_instruction: |
        Can you draw these 36 triangles
        using a nested loop?
      grade4_artist_freeplay_instruction: |
        Create your own project! This creation
        will be saved to your Projects dashboard so that you can easily edit it any
        time!
      grade4_artist_functions_stars0_instruction: |
        Have you drawn something like
        this star before? Practice making it one more time by adding a turn and a
        repeat block.
      grade4_artist_functions_stars1_instruction: |
        Now that you car draw a star,
        try drawing four stars!
      grade4_artist_functions_stars2_instruction: |
        When is drawing three stars harder
        than drawing four? When you also have to jump over the moon!
      grade4_artist_functions_stars3_instruction: |
        That last one is tough if you
        only use loops. Let's try drawing the same picture using this new 'function'
        that will help to **draw a star**.
      grade4_artist_functions_windows0_instruction: |
        Have you drawn something like
        this star before? Practice making it one more time by adding a turn and a
        repeat block.
      grade4_artist_functions_windows1_instruction: |
        You just created a nested loop!
        Let's repeat all of these commands with another repeat block to draw windows
        on this house. Don't forget the jump block!
      grade4_artist_functions_windows2_instruction: |
        Can you figure out how to add
        these windows? Watch out for the door!
      grade4_artist_nested_loop_circles1_instruction: |
        Assessment: Use a nested loop
        to complete the design.
      grade4_artist_nested_loop_flags1_instruction: |
        Loop the given code to create
        a windmill.
      grade4_artist_nested_loop_polygons1_instruction: "Loop this design 10 times.\n\\r\n\\r\nHow much do you have to turn each time you loop?"
      grade4_artist_nested_loop_polygons2_instruction: "Loop this shape 6 times.\n\\r\n\\r\nHow much do you have to turn each time you loop? "
      grade4_artist_nested_loop_squares1_instruction: |
        Can you draw these 10 squares
        of this sidewalk using a nested loop? Each square is 30 pixels.
      grade4_artist_nested_loop_triangles1_instruction: |
        Complete the code to draw
        these triangles.  The first one is done for you.  Hint:  3 triangles in a
        360 degree rotation.
      grade4_artist_nested_loop_triangles2_instruction: |
        Now nest this loop inside
        another loop to draw 10 triangles.  This is called a "nested" loop.  
      grade4_artist_nested_loop_triangles3_instruction: |
        Can you draw a hexagon by
        looping the triangle code?
      grade4_artist_nested_loop_triangles4_instruction: |
        Draw the teeth in the alligator's
        mouth!
      grade4_artist_nested_loop_triangles5_instruction: "Create a sun by nesting\nthe starter code in another loop.\\r\n\\r\nTo get this cool design with a hollow\ncenter, you'll need to jump forward by the length of the triangle before\nturning."
      grade4_artist_nested_loop_triangles6_instruction: |
        Can you draw these 36 triangles
        using a nested loop?
      grade4_artist_parameters_squares1_instruction: |
        Click "edit" to fill in the
        function definition of "draw a square" and add a parameter. It should take
        a length parameter, just like the triangle. This time, draw 3 squares: 25,
        50 and 75 pixels in length, each 100 pixels apart.
      grade4_artist_parameters_triangles1_instruction: |
        Today, we're going to try
        out a different, more powerful function editor. See if you can figure out
        how to edit the function 'draw a triangle' to find the bugs.
      grade4_artist_parameters_triangles2_instruction: 'Legger du merke til noe annerledes med disse funksjonsblokkene? Klikk "Kjør" for å se hva som skjer.'
      grade4_artist_parameters_triangles2b_instruction: |
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_artist_parameters_triangles3_instruction: |
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_artist_parameters_triangles4_instruction: |
        The code for this triangle
        function is broken. Can you edit the function to fix it, and then make triangles
        of length 25, 50, and 75?
      grade4_artist_parameters_trianglesx_instruction: |
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_bee_conditionals_nested_loops_instruction: |
        Collect all of the nectar.
        You can only collect nectar from flowers, but you can check any space to see
        if there is a flower.
      grade4_bee_conditionals_new1_instruction: |
        Collect all of the nectar. You can
        only collect nectar from flowers, but you can check any space to see if there
        is a flower.
      grade4_bee_conditionals_new1a_instruction: |
        Help the bee collect all of the
        nectar. You can only collect nectar from flowers, but you can check any space
        to see if there is a flower.
      grade4_bee_conditionals_new2_instruction: |
        Can you help the bee collect the
        nectar from the flowers? You can only collect nectar from flowers, but you
        can check any space to see if there is a flower.
      grade4_bee_conditionals_new2a_instruction: |
        Collect all of the nectar. You
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower.
      grade4_bee_conditionals_new3a_instruction: |
        Collect all of the nectar or make
        all the honey. You can only collect nectar from flowers and make honey from
        honeycombs. Check any space to see if there is a flower or honeycomb.
      grade4_bee_conditionals_new3b_instruction: |
        Uh oh! The bee is not sure if he
        should collect nectar or make honey. Can you help him out?
      grade4_bee_conditionals_new3c_instruction: |
        Help the bee collect all of the
        nectar and make all of the honey! Hint: Try using a nested loop!
      grade4_bee_conditionals_quantum1_instruction: |
        This cloud is blocking my view!
        Check to see if there's a flower under the cloud, and only get nectar if
        there's a flower. Be careful, it can change!
      grade4_bee_conditionals_quantum2_instruction: Bia vil berre ha nekar akkurat nå. Hugs, ikkje alle er blomar, så sjekk etter at du berre samlar nektar frå blomar.
      grade4_bee_conditionals_quantum3_instruction: |
        Now I just want to make honey.
        Some of these clouds might have honeycombs under them. The way we've been
        going about things won't work here. Be sure to check if a honeycomb is hiding
        behind each cloud!
      grade4_bee_conditionals_quantum4_instruction: |
        Sometimes this cloud covers
        a flower, and sometimes it covers a honeycomb! Use the if/else block to collect
        nectar if it is a flower, else to make honey (because it is a honeycomb).
      grade4_bee_conditionals_quantum5_instruction: "There will be either a flower\nor a honeycomb under each of those clouds!\\r\n\\r\nUse the `if/else` block\nto collect nectar if there is a flower.\\r\nOtherwise, make honey (because\nthere is a honeycomb)."
      grade4_bee_functions_instruction: |
        Have we met before? I'm the farmer! Please
        help me remove this pile of dirt and fill this hole.
      grade4_farmer_functions1_instruction: |
        Have we met before? I'm the farmer!
        Please help me remove this pile and fill this hole.
      grade4_frozen_freeplay_instruction: |
        Du er nå offisielt blitt ein meisterkunstnar! 
        Lag eit vinterparadis.
      grade4_frozen_functions0_instruction: |
        A circle is a special shape. Can you
        figure out what number to replace the question marks with to draw a circle?
      grade4_frozen_functions1_instruction: |
        Use the new “draw a circle” function
        to create 10 overlapping circles. Don't forget to jump forward between circles.
      grade4_frozen_functions1a_instruction: |
        Use the new “Create a circle” block
        to create 10 overlapping circles. Don't forget to jump forward between circles.
      grade4_frozen_functions2_instruction: |
        Now let's create 20 overlapping circles,
        turning 18 degrees between each circle.
      grade4_frozen_functions3_instruction: |
        Here's a ”Create circle” block that
        can make circles of different sizes. Can you use this to create a small circle
        of size 5 and a larger circle of size 10?
      grade4_frozen_functions4_instruction: |
        Intricate snow patterns can be created
        with very simple shapes. Can you make a pattern by repeating 5 circles of
        size 5 and 5 circles of size 10?
      grade4_frozen_nested_loop_diamonds1_instruction: |
        Use a repeat around these
        blocks to create a parallelogram. It's just like a rectangle but has different
        angles. This one has 60 degree and 120 degree angles instead of all 90 degree
        angles.
      grade4_frozen_nested_loop_diamonds2_instruction: |
        Did you know every snowflake
        is a different shape? Let's create a new snowflake by using another “Repeat"
        block to repeat a parallelogram 4 times, turning right by 90 degrees between
        each parallelogram.
      grade4_frozen_nested_loop_diamonds3_instruction: |
        Now, let's create a new
        snowflake by using the repeat block to repeat a parallelogram 10 times, turning
        right by 36 degrees between each one.
      grade4_frozen_square_instruction: |
        Hi, I’m Anna of Arendelle! Let’s make a
        square with the “Repeat” block, which uses fewer blocks. How many times (???)
        should the “Repeat” block loop the blocks inside it to make a square?
      grade4_frozen_square_loop1_instruction: |
        Hi, I’m Anna of Arendelle! Let’s make
        a square with the “Repeat” block, which uses fewer blocks. How many times
        (???) should the “Repeat” block loop the blocks inside it to make a square?
      grade4_frozen_square_loop2_instruction: |
        Let's create three squares, turning
        after each square. Be sure to turn by 120 degrees before each new square.
      grade4_frozen_square_loop3_instruction: 'Får du til å lage et snøfnugg ved å bruke "repeter"-blokken til å lage 10 kvadrater og "Snu"-blokken for å snu deg 36 grader mellom hvert kvadrat?'
      grade4_playlab_freeplay_instruction: |
        It's free play time! Have fun with all
        the blocks in your tool box. 
      grade4_playlab_test_instruction: "Bruk høyre piltast til å skyte hjerter.\\r\n\\r\nI vårt spill, hvordan skal vi score poeng? Legg til 1 til din \"poeng\"-variabel hver gang Hund treffer Katt med et hjerte. Bruk \"når figur 2 berører noe\"-hendelsen til å utølse en oppdatering av poeng-scoren din. Du kan øke variabelen ved å sette \"poeng = poeng + 1\". Få din poeng-score opp til 10 (ved å gå opp 1 poeng av gangen!) for å bestå nivå."
      grade4_playlab_test2_instruction: |
        Here's a function called `jump` that causes
        your main character to jump up 100 pixels. Run the program and use the jump
        function to collect all of the flags by moving the dog with the arrow keys.
      grade4_prompt_test_instruction: This is a test play lab level.
      grade4_review_artist1_instruction: |
        Hi, I'm an artist. You can write code
        to make me draw almost anything. Use a few blocks to make me draw over the
        grey lines in the picture. (Each line is 100 pixels long)
      grade4_review_artist2_instruction: 'Dette huset treng eit tak! Teikn trekanten. Hint: alle dei tre sidene skal være like lange.'
      grade4_review_artist3_instruction: |
        The jump block moves the artist without
        drawing. Draw the dashed line using both the `jump forward` and `move forward`
        blocks. Each line is 50 pixels long.
      grade4_review_bee1_instruction: |
        Now use the `repeat` block to collect all
        of the nectar and make all of the honey.
      grade4_review_bee2_instruction: Samle inn nektar frå alle blomane og lag honning i kvar av bikubane.
      grade4_review_bee3_instruction: 'Bruk ei lik løkke som i førre oppgåve, men ta med ein "snu"-blokk.'
      grade5_artist_binary1_instruction: "Binær er ein måte å representere informasjon på ved å berre bruke to alternativ. Vi skal bruke alternativa \"av\" (representert ved talet 0) og \"på\" (representert ved talet 1). \\r\\r Vi har gitt deg eit rutenett av pikslar som du kan gå gjennom og lage mønstre med ved å skru på spesifikke ruter. Kan du få kunstnaren til å teikne \"01010101\" i binært i første rad?"
      grade5_artist_binary10_instruction: Klikk her for å se tips.
      grade5_artist_binary11_instruction: |
        Free Play: Here's a blank canvas for
        you to draw on.  Have fun!
      grade5_artist_binary2_instruction: "Her er ein funksjon som tek ein binær-streng av 1-are og 0-are og instruerer kunstnaren til å følgje dem frå venstre til høgre, frå topp til botn. Artisten vil fylle inn rutene om den ser ein 1 og ignorere ruta om den ser ein 0.\\r\\r Køyr denne koden for å sjå korleis kunstnaren bruker binær-strengen til å teikne dette mønsteret."
      grade5_artist_binary3_instruction: |
        Which of these binary strings could you
        loop 8 times to draw this image?
      grade5_artist_binary4_instruction: |
        Can you draw this pattern by looping just
        three binary digits (0s and 1s)?
      grade5_artist_binary5_instruction: |
        Each binary string represents one row of
        this picture. Can you rearrange them so it draws a smiley face instead of
        a frowny face?
      grade5_artist_binary6_instruction: |
        Which 6 digit binary string, repeated 11
        times, will draw this image?
      grade5_artist_binary7_instruction: Kva er den kortaste binærstrengen du kan repetere for å teikne dette biletet?
      grade5_artist_binary8_instruction: Fullfør teikninga.
      grade5_artist_binary9_instruction: "Here's a higher resolution canvas to draw\non - 16 pixels by 16 pixels!\\r\n\\r\nSee what happens when we start to get\ncreative with the bits?"
      grade5_artist_for_loops1_instruction: 'Teikne denne trekanten som er 50 pikslar brei. Tips: Bruk ein gjenta-blokk.'
      grade5_artist_for_loops10_instruction: "Can you figure out how to use all of\nthe things you've learned to create this image?\\r\n\\r\nNeed a hint? Click\nhere."
      grade5_artist_for_loops2_instruction: |
        I've put the code for drawing a triangle
        inside a for loop that counts from 50 to 100 by 10.  NOTE: Make sure you look
        at the code before you hit "Run".
      grade5_artist_for_loops3_instruction: |
        Use the last puzzle as a reference to
        complete this one.  The smallest triangle has 20 pixel sides, the largest
        has 200 pixel sides, and each triangle is 20 pixels larger than the last.
        
      grade5_artist_for_loops4_instruction: |
        How would you modify what you've learned
        to draw these squares? They start at 15 pixels long, the largest is 300 pixels
        long, and each square is 15 pixels larger than the last. 
      grade5_artist_for_loops5_instruction: "Just one little change to the code from\nthe last image can create this drawing. Can you figure out what that change\nis?\\r\n\\r\nHint:  You need to remove something!"
      grade5_artist_for_loops6_instruction: |
        If you turn a little bit more or less
        than you normally would for a shape, it creates a neat effect. Try using some
        of the code from the last level, but turning 89 degrees to create this twisted
        square spiral.
      grade5_artist_for_loops7_instruction: |
        Make three small changes to the code
        from the last level to get this!
      grade5_artist_for_loops8_instruction: |
        Remember back in a previous stage when
        we used a variable to control the number of sides in a shape? We are going
        to do the same thing with the `counter` variable now. This pattern starts
        with a triangle and adds one side at a time until it draws a decagon (10 sides).
        Each side should be 100 pixels long. 
      grade5_artist_for_loops9_instruction: "Let's put it all together!  Using your\nknowledge of `for` loops and the `counter` variable, create this drawing where\neach shape has two more sides than the last.  Make sure that each side is\n10 times as long as the number of sides in the polygon.\\r\n\\r\nVery little\nof the code has been provided for you."
      grade5_artist_for_loopsfreeplay11_instruction: "Frispelinspirasjon: Du har no lært alt du treng å vite for å lage eit slikt mønster! Dersom dette biletet inspirerer deg, prøv å lage noko som liknar. Alternativt kan du lage noko du finn på sjølv.\\r\n\\r\nTreng du eit hint? Klikk her."
      grade5_artist_for_loopsfreeplay12_instruction: |
        Free Play: Try making some
        drawings of your own using "for loops". We've added a few useful variables
        for you as well.
      grade5_artist_freeplay_instruction: |
        Create your own project! This creation
        will be saved to your Projects dashboard so that you can easily edit it any
        time!
      grade5_artist_functionparameters10_instruction: "Inspirasjon til fritt spill: Du har nå lært alt du trenger å vite for å lage et mønster som dette! Hvis dette bildet inspirerer deg, kan du prøve å lage noe lignende, ellers du kan skape noe helt eget. \\r \\r Vil du vite hvordan vårt inspirasjonsmønster ble laget? "
      grade5_artist_functionparameters11_instruction: 'Frilek: Her er funksjonene du har skrevet, og litt mer for å leke med. Tegn noe kjempestilig! Lek med pennetykkelsen for å se hvor ulike tegningene dine blir!'
      grade5_artist_functionparameters7_instruction: |
        This image is similar to the
        last. Can you use a `for` loop with your function to make this design?
      grade5_artist_functionparameters8_instruction: 'La oss redigere funksjonen "tegne et polygon". Den har allerede en "lengde"-parameter. La oss legge til en "sider"-parameter. Husk vinkelen man må svinge i en gitt form er 360 delt på antallet sider det har. Hint: Omkretsen av hver figur er 200 piksler lang. Husker du ligningen for å lage figurer av samme størrelse når de har et annet ulikt antall sider?'
      grade5_artist_functionparameters9_instruction: |
        Edit "draw a spiral edge"
        to use "length" and "sides" parameters, then recreate these shapes.
      grade5_artist_functionparameters_6_instruction: Kan du fullføre denne tegningen? Sidene til alle figurene er 100 piksler lange.
      grade5_artist_parameters_squares1_instruction: |
        Click "edit" to fill in the
        function definition of "draw a square" and add a parameter. It should take
        a length parameter, just like the triangle. This time, draw 3 squares: 25,
        50 and 75 pixels in length, each 100 pixels apart.
      grade5_artist_parameters_squares2_instruction: |
        Now try creating the function
        from scratch! Create a function called 'draw a square' and use it to outline
        these four boxes. Make sure to add a parameter for 'length'!
      grade5_artist_parameters_stars1_instruction: |
        That last one is tough if you
        only use loops. Let's try drawing the same picture using this new 'function'
        that will help to **draw a star**.
      grade5_artist_parameters_triangles1_instruction: |
        This program looks okay from
        here, but something isn't working right. See if you can figure out how to
        edit the function 'draw a triangle' to find the bug.
      grade5_artist_parameters_triangles1a_instruction: |
        Today, we're going to try
        out a different, more powerful function editor. See if you can figure out
        how to edit the function 'draw a triangle' to find the bugs.
      grade5_artist_parameters_triangles2_instruction: |
        This drawing can be easily
        created using a new type of function that includes a parameter. The sides
        of each triangle are 25 pixels larger than the last.  The first triangle has
        25 pixel sides. Replace the '???' with the correct values to draw the picture.
      grade5_artist_parameters_triangles2a_instruction: 'Legger du merke til noe annerledes med disse funksjonsblokkene? Klikk "Kjør" for å se hva som skjer.'
      grade5_artist_parameters_triangles3_instruction: "The code for this triangle\nfunction is broken.\\r\n\\r\nCan you edit the function to fix it, and then make\ntriangles of length 150, 75, 25?"
      grade5_artist_parameters_triangles4_instruction: |
        The code for this triangle
        function is broken. Can you edit the function to fix it, and then make triangles
        of length 25, 50, and 75?
      grade5_artist_parameters_trianglesy_instruction: "The code for this triangle\nfunction is broken.\\r\n\\r\nCan you edit the function to fix it, and then make\ntriangles of length 150, 75, 25?"
      grade5_artist_variables_freeplay10_instruction: |
        Free Play: Experiment with
        the number of sides this shape has. Can you change the algorithm so that the
        overall size of the shape stays the same, no matter how many sides it has?
        Hint: If you divide your starting length by the number of sides, the length
        of each side will get shorter as the number of sides gets higher.
      grade5_artist_variables_freeplay14_instruction: "Free Play: Check it out! Now\nyour algorithm is nested within one more loop. Experiment with changing the\nvalues of your two variables to draw cool patterns.\\r\n\\r\nFor even more effect,\ntry playing with color!  Use random colors inside loops to see how it changes\nyour design."
      grade5_artist_variables_freeplay15_instruction: "Want a second peek at the\ninspiration design or the hints?  Click here!\\r\n\\r\nOtherwise, make a design\nall your own!"
      grade5_artist_variables_freeplay16_instruction: |
        Still playing?  Here is a
        blank canvas where you can create whatever you want!
      grade5_artist_variables_hexagons1_instruction: "Let's try it again! \\r\n\\r\nCan\nyou set the `length` variable to 60 to make this cool design with hexagons?"
      grade5_artist_variables_letterT11_instruction: |
        Here’s more complicated code
        using the same concepts from the last puzzle - what should you set the "sides"
        variable to in order to draw this picture made of squares?
      grade5_artist_variables_octagons13_instruction: "When a shape has lots of sides,\neach side needs to be shorter if you want the whole pattern to fit on the\nscreen. \\r\nLet's recreate the algorithm for this amazing pattern, but instead\nof manually setting the `length` variable, let's use a math block with the\n`sides` variable inside to make sure that each shape fits correctly. The perimeter\nof each polygon is 300 pixels.\\r\nNeed some hints?  Click here."
      grade5_artist_variables_pentagon8_instruction: "Use what you learned in the\nlast puzzle to create this hexagon using the \"sides\" variable.\\r\n\\r\nSee\nhow you could change just one value to draw a triangle,  square, pentagon,\nor octagon?"
      grade5_artist_variables_pentagon9_instruction: |
        Now, recreate the algorithm
        from the last level and create a pentagon with sides of length 150.
      grade5_artist_variables_pentagons1_instruction: "Draw this pattern of pentagons\nwith 100 pixel sides by setting the right value for `length` and dropping\nthe `length` variable into all of the the correct places. \\r\n\\r\nSee how\nyou only have to set the value for `length` once, and the code uses the right\nvalue everywhere?"
      grade5_artist_variables_pentagons12_instruction: |
        Let's set the "sides"
        variable to 5. The more sides we add to this algorithm, the bigger this whole
        pattern gets! Notice that there is another variable called "length". We
        can now use that wherever we have a "move forward." Set the "length" variable
        to 75 for this shape.
      grade5_artist_variables_rectangle6_instruction: |
        Now I want to make a rectangle
        that is twice as tall as it is wide. We've got a variable called "width"
        that needs to be set to 100. Can you use the math blocks to complete the code?
      grade5_artist_variables_square7_instruction: "Here’s some code that can draw\nany regular polygon. There’s a new variable called sides that is set to 4.\nCan you use the sides variable (along with the math block) to turn the right\namount regardless of how many sides there are in the polygon?\\r\n\\r\nClick\nhere to go back to the hint!"
      grade5_artist_variables_triangles1_instruction: "Let's draw an equilateral\ntriangle. \\r\n\\r\nIt has to be exactly 100 pixels long on each side."
      grade5_artist_variables_triangles2_instruction: |
        Instead of using "move forward
        by 150," the "move" block is now referencing a variable called "length."
        Can you set "length" to 150 to draw this new triangle?
      grade5_artist_variables_triangles3_instruction: |
        Drag a number block to both
        the `set length` block and the `repeat _ times` block to draw a set of 50
        pixel triangles. 
      grade5_bee_for_loops1_instruction: |
        Use a loop to collect the nectar from each
        flower.
      grade5_bee_for_loops10_instruction: |
        If your loop is counting down, the increment
        is subtracted from your counter variable each loop. What should your increment
        be to collect 15, then 12, then 9, 6, 3 nectar?
      grade5_bee_for_loops11_instruction: |
        Ready for a challenge?  Take what you've
        learned about loops and try to solve this problem. Remember: You may have
        to run through solutions multiple times before you figure out all of the steps.
      grade5_bee_for_loops2_instruction: |
        Add the code necessary to make sure the
        bee collects all the nectar. Look at how much code you need for this puzzle!
        (We'll learn a simpler way in the next puzzle.)
      grade5_bee_for_loops3_instruction: |
        Ah, the "for loop" makes this much easier!
        All the code you need is here, take a look at how it is put together then
        click "Run" to see how it works. 
      grade5_bee_for_loops4_instruction: |
        Replace the ??? in the "for loop" with
        the largest amount of nectar the bee has to collect. 
      grade5_bee_for_loops5_instruction: 'Nå må vi flytte fremover "teller" ganger, deretter få nektar "teller" ganger.  Kan du bruke to "gjenta"-løkker for å løse denne utfordringen?'
      grade5_bee_for_loops6_instruction: |
        You can also use a "for loop" to count
        down. Try gathering this nectar by counting down from 5 to 1 by 1.
      grade5_bee_for_loops7_instruction: |
        The last number in your for loop is called
        the "increment". Each time the loop is run, the counter variable changes
        by the value of the increment. Try collecting these flowers using an increment
        of 2.
      grade5_bee_for_loops8_instruction: |
        You've got this! What should your increment
        be to collect 3, 6, 9, 12, 15 nectar?
      grade5_bee_for_loops9_instruction: "Now, let's combine the \"counter\" variable\nwith a math block! How can you use the \"counter\" variable to navigate this\ngarden with the fewest number of blocks possible? What do you need to do to\ncollect 3, 6, 9, 12, 15 nectar this time? The secret is in the \"counter\"\nvariable!\\r\n\\r\nRemember: If your loop is counting up, the increment is added\nto your \"counter\" variable each time through."
      grade5_bee_parameters_new1_instruction: |
        Help the bee collect all of the nectar.
        You can only collect nectar from flowers, but you can check any space to see
        if there is a flower.
      grade5_bee_parameters_new2_instruction: |
        Let's take that last program you
        wrote and turn it into a function. Then, call the function to collect the
        nectar when needed. This may seem like a strange step now, but it will be
        really helpful soon!
      grade5_bee_parameters_new3_instruction: |
        Time to put the function to the test!
        Let's see if it makes it any easier to collect these three rows of nectar.
      grade5_bee_parameters_new4_instruction: |
        How is your function holding up? We
        may need to make some adjustments here. Can you add a 'length' parameter
        to the function so that it will still work if the row is a different length?
      grade5_bee_parameters_new5_instruction: |
        Challenge Level! You are doing great
        so far! Let's use this parametric function to collect a lot of nectar.
      grade5_bee_parameters_new6_instruction: |
        You can make your program much shorter
        and more efficient when you notice new patterns. Try using some other blocks
        to make a short and simple solution!
      grade5_bee_parameters_new7_instruction: |
        Something looks a little different.
        Can you modify your function to account for all this honey that needs to be
        made?
      grade5_bee_parameters_new8_instruction: |
        That's a great function you've created!
        You are officially on your own now. Collect all the nectar. Make all the honey.
      grade5_bee_parameters_new9_instruction: |
        Bonus Challenge! If you are feeling
        ambitious, try this puzzle. It is possible to collect all of the nectar and
        make all of the honey using only a For loop, a Repeat loop, a function call,
        and a turn. Try it all on your own, or view the hints to build it step-by-step.
        Great job with this stage!
      grade5_pixelation_instruction: |
        Encode an image of anything you like using
        binary. Remember that the binary language will be represented with '0' and
        '1' only.
      grade5_playlab_freeplay_instruction: |
        It's free play time! Have fun with all
        the blocks in your tool box. 
      grade5_playlab_parameters_points1_instruction: "Here's the same game but most\nof the code is hidden. We've added a new function called `score_points.`\\r\n\\r\nAdd\na new parameter called `points` to the `player_score` function. \\r\n\\r\nThe\n`score_points` function should be able to both add and remove points from\n`player_score` depending on which actor is hit.\\r\nChanging the score by 1\nwill add a point, while changing the score by -1 will subtract a point.\\r\n\\r\nWhen\nyou're done, click \"Run\" to play.  When Dog scores 6 points, you will move\non to the next puzzle. "
      grade5_playlab_variables1_instruction: |
        This time you don't have to write
        any code, just hit "Run" to play the game! In this game, you're the dog
        who is trying to collect more flags than the cat. Use the down arrow to control
        the dog. Press "Finish" when you're done playing.
      grade5_playlab_variables10_instruction: 'Fyll inn "spiller"-parameteret slik at vi kaller på "patruljer"-funksjonen for hver spiller. Husk at spillerne tilsvarer tallene 1, 2 og 3.'
      grade5_playlab_variables11_instruction: 'Legg til enda et parameter, kalt "hastighet" til funksjonen "patruljere". Prøv å bruk en "sett hastighet"-brikke sammen med "hastighet"-parametere for å hjelpe Pingvin få tak i begge flaggene før de andre figurene får tak i dem.'
      grade5_playlab_variables12_instruction: "Se på denne koden og se om du kan finne ut hva hver blokk gjør. \\r\n\\r\nNår du er ferdig, bruk piltastene til å styre Hund og samle alle flaggene."
      grade5_playlab_variables13_instruction: 'Bruk en "når berører"-blokk til å sende Hund tilbake til øvre venstre hjørne BARE hvis Hund berører noen av de andre spillerne.'
      grade5_playlab_variables14_instruction: |
        It's free play time! Have fun with
        all the blocks in your tool box. 
      grade5_playlab_variables2_instruction: 'Løpet i forrige oppgave var ikke veldig rettferdig! Endre variabelen "hund_fart" for å sikre at du kan samle mer flagg enn Katt. Den første til å samle 10 flagg vinner!'
      grade5_playlab_variables3_instruction: 'Her er et nytt type spill! Bruk venstre- og høyre-pilene til å bevege deg og opp-pila til å hoppe. Se om du kan samle alle flaggene.'
      grade5_playlab_variables4_instruction: |
        Now we're using a variable called
        "height" to control how high the dog can jump. Update the "height" variable
        so that the dog can jump high enough to reach all the flags.
      grade5_playlab_variables5_instruction: "You've seen now how a variable can\nbe used to set the height of an actor's jump. How else could  you use a variable?\\r\n\\r\nLet's\nbuild a game! First we'll need a score. Try setting the 'points' variable\nto give yourself 10 free points!"
      grade5_playlab_variables6_instruction: "Bruk høyre piltast til å skyte hjerter.\\r\n\\r\nI vårt spill, hvordan skal vi score poeng? Legg til 1 til din \"poeng\"-variabel hver gang Hund treffer Katt med et hjerte. Bruk \"når figur 2 berører noe\"-hendelsen til å utølse en oppdatering av poeng-scoren din. Du kan øke variabelen ved å sette \"poeng = poeng + 1\". Få din poeng-score opp til 10 (ved å gå opp 1 poeng av gangen!) for å bestå nivå."
      grade5_playlab_variables7_instruction: Flott! La oss gjøre spillet litt vanskeligere å spille. Hver gang Hund (figur 1) blir truffet av gule hjerter fra Katt (spiller 2) skal du miste ett poeng. Start med 10 poeng slik at det ikke er for vanskelig. For å fullføre nivået må poeng-scoren falle fra 10 til 0.
      grade5_playlab_variables71_instruction: "Her er spillet vårt fra tidligere, men nå er mesteparten av koden gjemt. Det finnes en ny funksjon, \"score_poeng\".\\r\n\\r\nEndre funksjonen slik at \"poeng\"-parameteret blir lagt til \"spiller_score\"-variabelen. \\r\n\\r\nVariabelen \"spiller_score\" skal øke hver gang Hund kommer borti Katt med hjerter og minske hver gang Katt tar borti Hund med hjerter.\\r\n\\r\nMerk: Når du er ferdig, trykk på \"Kjør\" for å spille. Når Hund scorer 6 poeng kan du gå videre til neste oppgave. "
      grade5_playlab_variables81_instruction: "Vi har lagt til en siste funksjon du kan bruke. \\r\n\\r\nProgrammer ditt spill til å kalle på \"levle_opp\"-funksjonen hvis \"spiller_poeng\" > 10. \\r\n\\r\nSpill spillet og oppnå level 4 for å gå videre til neste oppgave. "
      grade5_playlab_variables9_instruction: 'Her er en funksjon kalt "patruljer". Endre den slik at Katt beveger seg opp 400 piksler og så ned 400 piksler.'
      grade5_playlab_variables_freeplay_instruction: "Free Play time! Here are all\nof the variables we've played with so far in this stage, as well as a few\nmore in case you want them. \\r\n\\r\nNotice that there are now so many blocks\nin our toolbox that they need to be organized!  Here, we've put each piece\ninto an appropriate category.  Take some time to explore everything that is\navailable. When you're done browsing, make a game or story using repeats,\nvariables, and events.  \\r\n\\r\nHint: scroll down to see all the commands\nin the workspace."
      grade5_playlab_variables_jump1_instruction: |
        This puzzle uses a hidden function
        that makes the dog jump when the 'up' arrow is pressed. The height of the
        jumps can be set at the start of the game using the 'jumpPower' variable.
        Try to touch all of the flags!
      grade5_prompt_test_instruction: This is a test play lab level.
      gradeK_sequence_4_instruction: Try this one yourself from the beginning.
      Infinity_catch_instruction: 'Kan du få Elsa ("figur 2") til å ta igjen Anna ved å bruke piltastane?'
      Infinity_finale_instruction: Lag det du har lyst til og del med andre!
      Infinity_move_collide_instruction: 'Hirp er "figur 1". Flytt han direkte til Baymax og spill av ein lyd når dei rører ved kvarandre.'
      Infinity_move_directions_instruction: 'Baymax er "figur 2". Brukk flytt-blokkar for å styre Baymax med piltastane. Få han til å røre ved dei to andre figurane.'
      Infinity_move_right_instruction: 'Hiro er "figur 1". Bruk flytt-blokken til å flytte Hiro mot høgre for å røre ved Baymax.'
      Infinity_repeat_instruction: 'Bruk "Gjenta alltid"-blokken til å få Anna til å bevege seg opp og ned 400 pikslar.'
      Infinity_say_instruction: 'Få Anna til å seie "Hei der" ved å bruke seie-blokken.'
      Infinity_shoot_instruction: 'Baymax er "figur 2". Få Baymax til å skyte ein rakett mot Hiro.'
      Infinity_shoot_directions_instruction: 'Hiro er "figur 3". Få Hiro til å kaste eit prosjektil mot kvar av dei fire andre figurane. Vent eit sekund mellom kvart kast.'
      Infinity_test_instruction: This is a test Infinity level.
      Infinity_touch_faster_instruction: Rør ved enda fleire snøfnugg!
      Infinity_touch_four_instruction: Flytt Anna opp, ned til venstre og høgre for å ta på kvar av dei fire snøfnugga.
      Infinity_touch_score_instruction: 'Få Anna til å score poeng når ho tek på eit snøfnugg. Trykk deretter på "Køyr" og styr ho for å ta på kvart snøfnugg ein gong.'
      jessie-test_instruction: Lots of instructions
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: Teikn ei kort linje oppover og ei lang linje mot høgre!
      K-1 artist 1 level 10_instruction: 'Teikn den stipla linja ved ved å bruke både hoppe- og teikneblokkar'
      K-1 artist 1 level 9_instruction: Teikn dette ved å bruke tre linjer
      K-1 Artist Loops 1_instruction: Teikn denne linja ved å flytte aust fire gongar.
      K-1 Artist Loops 2_instruction: Kan du teikne same linja ved å bruke ei løkke?
      K-1 Artist Loops 3_instruction: Kan du bruke ei løkke for å gå gjennom desse blokkane for å teikne 6 linjer?
      K-1 Artist Loops 4_instruction: Kan ei løkke hjelpe oss med å teikne toppen av dette slottet?
      K-1 Artist Loops 5_instruction: Kva kan du gjenta 4 gongar for å teikne desse trappene?
      K-1 Artist Loops 6_instruction: 'Her er det bruk for to løkker: ei til å gå opp trappa og ei til å gå ned.'
      K-1 Artist Loops 7_instruction: Kan du gjere ferdig dette mønsteret ved å bruke to løkker?
      K-1 Artist Loops 8_instruction: Denne trappa har lengre trinn.
      K-1 Artist Loops 9_instruction: 'Oppgåve: Bruk ei løkke til å teikne trappa'
      K-1 Artist Loops Free Play_instruction: Frileik! Teikn noko gøy!
      K-1 Artist1 1_instruction: Teikn foten på mannen med ei linje.
      K-1 Artist1 10_instruction: Teikn og hopp for å lage den stipla vegen til skatten X
      K-1 Artist1 2_instruction: Teikn verhår på katten med to linjer!
      K-1 Artist1 3_instruction: Teikn to linjer mot aust og to linjer mot nord for å teikne ferdig huset!
      K-1 Artist1 4_instruction: Tegn linjer opp, over og ned for å gjere ferdig slottet!
      K-1 Artist1 5.5_instruction: Gjer ferdig det tredje tårnet på slottet ved å bruke korte linjer
      K-1 Artist1 5_instruction: Teikn stilken på denne blomen med to linjer!
      K-1 Artist1 6_instruction: Gjer ferdig biletet ved å bruke ein hoppblokk!
      K-1 Artist1 7_instruction: Bruk hopp-blokken for å flytte utan å teikne. Hopp opp og teikn ei linje.
      K-1 Artist1 8_instruction: 'Teikn den stipla linja ved å bruke både hopp- og teikneblokkar'
      K-1 Artist1 9_instruction: Teikn og hopp for å lage den stipla linja
      K-1 Artist1 Assessment 1_instruction: Teikn korte og lange linjer!
      K-1 Artist1 Assessment 2_instruction: Teikn korte stipla linjer!
      K-1 Artist2 1_instruction: Teikn eit kvadrat under trekanten.
      K-1 Artist2 2_instruction: Hopp og teikn eit kvadrat ved sida av huset.
      K-1 Artist2 3_instruction: Teikn eit kvadrat over det andre kvadratet
      K-1 Artist2 4_instruction: Teikn eit rektangel for å fullføre brua.
      K-1 Artist2 5_instruction: Teikn eit rektangel for å gjere ferdig brustøttene
      K-1 Artist2 6_instruction: Teikn to kvadrat for å lage eit rektangel!
      K-1 Artist2 Assessment1_instruction: 'Oppgåve: Teikn eit kvadrat ved sida av det andre kvadratet.'
      K-1 Artist2 Free Draw_instruction: Teikn kva som helst!
      K-1 Artist2_7_instruction: Teikn eit rektangel for å lage ein skuff øvst i kommoden!
      K-1 Bee 1_instruction: Flytt meg til blomen, hent nektaren, flytt meg så til bikuben og lag honning
      K-1 Bee 10_instruction: Hent fire nektar og lag to honning!
      K-1 Bee 11.5_instruction: Hent fire nektar for å lage fire honning!
      K-1 Bee 11_instruction: Hent tre nektar og lag ein honning
      K-1 Bee 12_instruction: Hent tre nektar og lag to honning!
      K-1 Bee 13_instruction: Hent tre nektar og lag ein honning!
      K-1 Bee 14_instruction: Flytt meg til nektaren, plukk den opp, flytt meg til honningen og lag honning.
      K-1 Bee 15_instruction: Hent to nektar for å lage to honning!
      K-1 Bee 2_instruction: Flytt meg til blomen, hent nektaren, flytt meg så til bikuben og lag honning
      K-1 Bee 3_instruction: Flytt meg til blomen, hent nektaren, flytt meg så til bikuben og lag honning
      K-1 Bee 4_instruction: Hent to nektar og lag to honning!
      K-1 Bee 5_instruction: Hent tre nektar og lag tre honning!
      K-1 Bee 6_instruction: Hent to nektar og lag to honning!
      K-1 Bee 7_instruction: Hent tre nektar og lag to honning!
      K-1 Bee 8_instruction: Hent to nektar og lag to honning!
      K-1 Bee 9_instruction: Hent to nektar og lag to honning!
      K-1 Bee Assessment 1_instruction: Hent nektar for å lage honning!
      K-1 Bee Assessment 2_instruction: Hent nektar for å lage honning!
      K-1 Bee Loops 1_instruction: Hent nektaren for å lage honning!
      K-1 Bee Loops 10_instruction: Bruk løkker for å hente nektar, honning og for å bevege deg!
      K-1 Bee Loops 11_instruction: 'Oppgåve: Bruk løkker for å hente nektar og honning!'
      K-1 Bee Loops 12_instruction: 'Oppgåve: Bruk løkker til å hente nektar, honning og til å bevege deg!'
      K-1 Bee Loops 2_instruction: Bruk ei løkke til å bevege deg og så hente nektaren og lage honning!
      K-1 Bee Loops 3_instruction: Bruk løkker til å hente nektar og lage honning!
      K-1 Bee Loops 4_instruction: Bruk løkker til å hente nektar, lage honning og til å bevege deg!
      K-1 Bee Loops 5_instruction: Bruk løkker til å hente nektar og honning!
      K-1 Bee Loops 6_instruction: Bruk løkker for å hente nektar, honning og for å bevege deg!
      K-1 Bee Loops 7_instruction: Bruk løkker til å hente nektar og lage honning!
      K-1 Bee Loops 8_instruction: Bruk løkker til å hente nektar og lage honning!
      K-1 Bee Loops 9_instruction: Bruk løkker for å hente nektar, honning og for å bevege deg!
      K-1 Bee Loops Assessment 1_instruction: Hent nektar for å lage honning og bruk løkker til å bevege deg!
      K-1 Bee Loops Assessment 2_instruction: Hent nektar for å lage honning ved å bruke løkker!
      K-1 Bee Puzzle 12_instruction: Get three nectars and then make two honey
      K-1 Building a Foundation Assessment_instruction: Bygg ein pyramide med tre nivå. Det er ingen andre reglar, så leik deg med blokkane til du får det til!
      k-1 maze 1_instruction: Kan du bevege meg til vest for å komme til grisen?
      K-1 Maze 10_instruction: 'Gå rundt boksane med TNT for å få meg bort til grisen! '
      K-1 Maze 11_instruction: 'Følg stien og led meg til den dumme grisen. Unngå dynamitten om du ikkje vil at eg skal forsvinne i ei sky av fjør! Tips: Han er sør for meg.'
      K-1 Maze 2_instruction: Flytt meg austover for å få meg til grisen!
      K-1 Maze 3_instruction: Flytt meg sørover for å få meg til grisen!
      K-1 Maze 4_instruction: Flytt meg nordover for å få meg til grisen!
      K-1 Maze 5_instruction: Flytt meg austover for å få meg til grisen!
      K-1 Maze 6_instruction: Flytt meg først ein veg og så ein annen veg for å få meg bort til grisen!
      K-1 Maze 7_instruction: Flytt meg først ein veg og så ein annen veg for å få meg bort til grisen!
      K-1 Maze 8_instruction: Flytt meg først ein veg og så ein annen veg for å få meg bort til grisen!
      K-1 Maze 9_instruction: Flytt meg først ein veg og så ein annen veg for å få meg bort til grisen!
      K-1 Maze Assessment 1_instruction: 'Oppgåve: Få meg bort til grisen!'
      K-1 Maze Assessment 12_instruction: Oppgåvenivå
      K-1 Maze Assessment 13_instruction: Oppgåvenivå
      K-1 Maze Assessment 2_instruction: 'Oppgåve: Få meg bort til grisen!'
      K-1 maze debug 1_instruction: Endre denne koden for å få meg bort til grisen!
      K-1 maze debug 10_instruction: Rett opp feil i dette nivået ved å flytte rundt på og legge til blokkar, slik at eg kjem meg bort til grisen!
      K-1 maze debug 11_instruction: "Dette er ein test!\\r\nRett opp feil i dette nivået ved å flytte rundt på og legge til blokkar, slik at eg kjem meg bort til grisen."
      K-1 maze debug 2_instruction: Finn ut kva som manglar og legg så til dei manglande blokkane for å få meg bort til grisen!
      K-1 maze debug 3_instruction: Finn ut kva som manglar og FJERN så blokkar for å få meg bort til grisen!
      K-1 maze debug 4_instruction: Køyr gjennom desse blokkane og fiks dei! Eg trur eg går i feil retning.
      K-1 maze debug 5_instruction: Feilsøk dette nivået ved å flytte rundt på og legge til blokkar, slik at eg kjem meg bort til grisen!
      K-1 maze debug 6_instruction: Rett opp feil i dette nivået ved å flytte rundt på og legge til blokkar, slik at eg kjem meg bort til grisen!
      K-1 maze debug 7_instruction: Rett opp feil i dette nivået ved å flytte rundt på og legge til blokkar, slik at eg kjem meg bort til grisen!
      K-1 maze debug 8_instruction: Feilsøk dette nivået ved å flytte rundt på og legge til blokkar, slik at eg kjem meg bort til grisen!
      K-1 maze debug 9_instruction: Rett opp feil i dette nivået ved å flytte rundt på og legge til blokkar, slik at eg kjem meg bort til grisen!
      K-1 Maze debug Assessment 1_instruction: 'Oppgave - Feilsøk dette nivået ved å flytte rundt på og legge til blokkar, slik at eg kan komme meg til grisen!'
      K-1 Maze Loops 1_instruction: Få meg til grisen!
      K-1 Maze Loops 10_instruction: Få meg bort til grisen! Bruk gjenta-blokken.
      K-1 Maze Loops 11_instruction: Få meg bort til grisen! Bruk gjenta-blokken.
      K-1 Maze Loops 12_instruction: Få meg bort til grisen! Bruk gjenta-blokken.
      K-1 Maze Loops 2_instruction: Bruk Gjenta-blokken for å få meg bort til grisen!
      K-1 Maze Loops 3_instruction: Få meg bort til grisen! Bruk gjenta-blokken.
      K-1 Maze Loops 4_instruction: Få meg til grisen!
      K-1 Maze Loops 5_instruction: Få meg bort til grisen! Bruk gjenta-blokken.
      K-1 Maze Loops 6_instruction: Få meg bort til grisen! Bruk gjenta-blokken.
      K-1 Maze Loops 7_instruction: Få meg bort til grisen! Bruk gjenta-blokken.
      K-1 Maze Loops 8_instruction: Få meg bort til grisen! Bruk gjenta-blokken.
      K-1 Maze Loops 9_instruction: Få meg til grisen!
      K-1 Maze Loops Assessment 1_instruction: 'Oppgåve -- Bruk løkker for å få meg bort til grisen!'
      K-1 Maze Loops Assessment 2_instruction: 'Oppgåve -- Bruk løkker for å få meg bort til grisen!'
      K-1 Maze Multi 14_instruction: Oppgåvenivå
      K-1 Maze Multi 15_instruction: Oppgåvenivå
      K-1 Maze Sequence Assessment 1_instruction: "Dette er en test!\\r\nFlytt ein veig og så ein annan veg for å få meg bort til grisen"
      K-1 Maze Sequence Assessment 2_instruction: "Dette er en test!\\r\nFlytt ein veg, og så ein annan veg for å få meg bort til grisen."
      K2.0 sequence 1_instruction: Endre denne koden for å få meg bort til grisen!
      K2.0 sequence 10_instruction: Move me around the TNT to get to the pig.
      K2.0 sequence 12_instruction: "Let's get that pig! "
      K2.0 sequence 2_instruction: Endre denne koden for å få meg bort til grisen!
      K2.0 sequence 3_instruction: |
        Something is not quite right. REMOVE a block
        to get me to the pig!
      K2.0 sequence 4_instruction: |
        Time for a shorter puzzle!  Move one way, then
        another to get me to the pig.
      K2.0 sequence 4a_instruction: Try this puzzle again from the start!
      K2.0 sequence 5_instruction: Flytt meg først ein veg og så ein annen veg for å få meg bort til grisen!
      K2.0 sequence 6_instruction: Finn ut kva som manglar og legg så til dei manglande blokkane for å få meg bort til grisen!
      K2.0 sequence 7_instruction: |
        Debug this level by changing a block to get me
        to the pig!
      K2.0 sequence 8_instruction: |
        Debug this level by adding blocks to get me to
        the pig!
      K2.0 sequence 9_instruction: 'Gå rundt boksane med TNT for å få meg bort til grisen! '
      K2.0 sequence FP_instruction: "It's a pig party!  Get those pigs! "
      K2.0 sequence pre_instruction: |
        Play with these blocks to see what they make
        the bird do!
      kikiTesta_instruction: "Our adventurer wants to collect coins.  But she can\nonly use 4 blocks to get them.\\r\n\\r\nCan you help her grab as many as she\ncan using just 4 blocks?"
      kikiTesting_instruction: ".\\r\n .\\r\n.\\r\n.\\r\n.\\r\n.\\r\n\\r\n.\\r\n\\r\n"
      KTest1_instruction: Can you make me move South once more to get to the pig?
      KTest2_instruction: |
        Trace the path and lead me to the silly pig. Avoid TNT
        or the feathers will fly!
      level 'grade3_Loops_10_instruction: "Such a busy bee!\\r\n\\r\nHelp bee collect\nall of the nectar and make all of the honey with the fewest blocks possible."
      level 'grade3_Loops_11_instruction: "The shape of this path is different than\nthe others. \\r\n\\r\nCan you collect all of the nectar using as few blocks\nas possible?"
      level 'grade3_Loops_12_instruction: |
        Can you find the quickest way for the
        bee to collect all of the nectar and make all of the honey?
      level 'grade3_Loops_2_instruction: |
        This time, use a loop to gather all of
        the nectar.
      level 'grade3_Loops_3_instruction: |
        Use a `repeat` loop to collect all of the
        nectar.
      level 'grade3_Loops_4_instruction: |
        Now use the `repeat` block to collect all
        of the nectar and make all of the honey.
      level 'grade3_Loops_5_instruction: |
        What a beautiful field of flowers!   Help
        the bee visit each one.  Can you find a way to do it with fewer than 7 blocks?
      level 'grade3_Loops_6_instruction: "How many times can loops help you in this\npuzzle?  \\r\n\\r\nLoops are your friend! Use a few of them to complete this\npuzzle with the fewest blocks possible."
      level 'grade3_Loops_7_instruction: "Those flowers look tasty!\\r\n\\r\nCollect\nnectar from each of the flowers using the fewest blocks possible."
      level 'grade3_Loops_8_instruction: |
        Collect all the nectar and make all of
        the honey using the fewest blocks possible.
      level 'grade3_Loops_9_instruction: |
        Collect nectar from each flower and make
        honey at each honeycomb using the fewest blocks possible.
      level 'grade4_bee_conditionals_new1'_instruction: |
        Collect all of the nectar.
        You can only collect nectar from flowers, but you can check any space to see
        if there is a flower.
      level grade3_Loops_2_instruction: |
        This time, use a loop to gather all of the
        nectar.
      Limited Quantity of Blocks Test_instruction: |
        Get me to the pig by adding only
        one block
      love_spring_1_instruction: |
        Let's celebrate Spring!  We have put some seeds
        in the ground to prepare for the season's flowers.  Can you cover them up
        so that the birds don't eat them?
      love_spring_2_instruction: |
        Our flowers are in full bloom!  Now we need the
        bee to grab nectar from each one so he can make plenty of honey back at his
        hive!
      love_spring_3_instruction: "Figure out how to change this code so that Robin\nchooses a number between 1 and 20.  \\r\n\\r\nWhen you're ready, press \"Run\"\nand play until you guess Robin's number!"
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      Middle School Hackathon Pt 1_instruction: (Click to see full instructions)
      Middle School Hackathon Pt 2_instruction: (Click to see full instructions)
      Mike Pair Programming_instruction: Here are the instructions
      Mike Test Bee Conditionals 1_instruction: |
        This cloud is blocking my view!
        Check to see if there's a flower under the cloud, and only get nectar if
        there's a flower. Be careful, it can change!
      Mike Test Bee Conditionals 2_instruction: |
        Collect all of the nectar. You can
        only collect nectar from flowers, but you can check any space to see if there
        is a flower.
      MikeAssessment1_instruction: Now do it right!
      MikeStar_instruction: Draw this.
      MikeStarHard_instruction: Draw this.
      MikeStarNested_instruction: Draw this.
      MikeTest1_instruction: Who knows what you should do?!?!
      MikeTest2_instruction: Draw something!
      MikeTest3_instruction: Build Something
      MSM Big Game Empty_instruction: |
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim Standalone Automatic DNS_instruction: |
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast_instruction: "In this version of the Internet Simulator,\nyou can connect to up to 5 other people in a room. When you send messages\nin the room, everyone receives them. What are some of the challenges of this\nsystem, and how might you solve them?\\r\n"
      NetSim Standalone Classroom Routers_instruction: |
        In this version of the Internet
        Simulator, everyone connects to a router and has a specific address. To send
        messages, you have to address your message to the specific address of the
        recipient, and the router will take care of delivering it to the right computer.
        If there are other routers created in your class, ask for the address of one
        of your classmates and send them a message! View the Log Router to see the
        path the messages have taken through the network.
      NetSim Standalone Freeplay_instruction: |
        In this configuration, most of the
        options are turned on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS_instruction: |
        In this version of the simulator
        you can't see the other students' addresses.  Instead, one of you must act
        as a name service, to help share addresses with each other.
      NetSim Standalone Packets TCP_instruction: |
        Messages on the Internet can take
        many paths to get to their destination, and sometimes along the way the message
        gets dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters.
        
      NetSim Standalone Routers Addresses_instruction: "For this activity, connect\nto a router with the others in your group. Important note: The router will\nonly properly route messages where the first 4 bits are the To: address and\nthe second 4 bits are the From: address.\\r\n\\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      NetSim Standalone SendAB_instruction: |
        You and your partner share a single
        wire that can only be in state A or state B. You can set the wire to either
        state at any time, and you can read the state of the wire at any time. Can
        you figure out a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers Ascii_instruction: |
        Now that you've transmitted
        information represented as decimal numbers, you can map those numbers to text
        characters to send text-based information back and forth. With a text-based
        protocol, you can easily represent and communicate all kinds of information.
        
      NetSim Standalone Sending Numbers_instruction: |
        You and your partner can now
        reliably send messages back and forth without extra coordination! While you're
        always sending bits back and forth, you can also represent those bits as decimal
        numbers. What kinds of information can you represent with this system? 
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: Teikn noko stilig! Koden din er lagra som eit prosjekt som du kan gå tilbake til når som helst.
      NEW Course 4 Artist Functions 1_instruction: Kan du teikne eit kvadrat som er 100 pikslar i lengde, ved å bruke ein gjenta-blokk?
      NEW Course 4 Artist Functions 10.1_instruction: Bruk funksjonane frå forrige oppgåve til å teikne dette mønsteret.
      NEW Course 4 Artist Functions 10_instruction: 'Klikk på "rediger" for å fylle ut brikkene i funksjons-definisjonen, slik at du kan lage en firkant på 40 piksler.'
      NEW Course 4 Artist Functions 11_instruction: "Nå vil vi lage en ny funksjon, kalt \"tegn en linje av firkanter\" som tegner seks firkanter som alle sammen er på samme rad. Kan du bygge denne funksjonen ved å bruke \"tegn en firkant 20\"-funksjonen? som vi har laget? Tips: Vi har endret pennen til å være mye tynnere. Trykk \"rediger\" på \"tegn en firkant 20\"-funksjonen for å se hvordan!\\r\n"
      NEW Course 4 Artist Functions 12_instruction: 'Bruk "tegn en linje av firkanter"-funksjonen fra forrige oppgave til å tegne dette mønsteret.'
      NEW Course 4 Artist Functions 13_instruction: 'Kan du tegne en stjerne ved å bruke "tegn en linje av firkanter"-funksjonen? Hint: Etter hver gjentakelse når du bruker "tegn en linje av firkanter" må du flytte deg framover noen piksler og så snu 144 grader.'
      NEW Course 4 Artist Functions 14_instruction: 'Tid for fritt spill! '
      NEW Course 4 Artist Functions 2_instruction: 'Kan du teikne 3 kvadratar med 20 pikslar mellomrom? Tips: kvart kvadrat er 100 pikslar i størrelse.'
      NEW Course 4 Artist Functions 3_instruction: 'Her er en ny type brikke. Den er kalt en "funksjon". Trykk på "endre" og så fyll ut koden for å tegne en firkant med sider på 100 piksler. Når du er ferdig med å endre funksjonen, trykk "Lukk" for å gå tilbake til programmet.'
      NEW Course 4 Artist Functions 4_instruction: 'Bruk "tegn en firkant"-funksjonen for å tegne dette mønsteret. Hint: Du må bruke en "snu til høyre med 120 grader"-brikke etter hver firkant.'
      NEW Course 4 Artist Functions 5_instruction: 'Hvordan visste "tegn en firkant"-brikken hvilke kommandoer som skulle kjøres? Klikk på "endre" i "tegn en firkant"-brikken. Brikkene i vinduet som åpnes er definisjonen på hva som er "tegn en firkant"-funksjonen. Ta en titt. Når du er ferdig, klikk "Lagre og lukk" og så "Kjør"'
      NEW Course 4 Artist Functions 6_instruction: "Klarer du å tegne dette bildet ved å bruke funksjonsbrikken \"tegn en firkant\"? Hint: Hver firkant er 20 piksler fra hverandre.\\r\n"
      NEW Course 4 Artist Functions 7_instruction: 'Begynner du å få taket på hvordan du bruker funksjonsbrikker? La oss endre denne firkanten slik at den er 200 piksler i størrelse. Hint: Klikk på "rediger" for å endre "tegn en firkant"-funksjonen. Husk å klikke på "Lukk" for å komme deg ut av vinduet. '
      NEW Course 4 Artist Functions 8_instruction: 'Vi har laget en ny funksjon til deg, kalt "tegn en trekant". Kan du redigere definisjonen av funksjonen slik at den tegner en trekant med sider på 100 piksler?'
      NEW Course 4 Artist Functions 9_instruction: Kan du løse dette med å legge til bare en brikke?
      NEW Course 4 Artist Functions inspire_instruction: Klikk her for å se inspirasjonsbildet igjen.
      New Course 4 Artist Functions Level 4_instruction: 'Bruk "tegn et kvadrat"-funksjonen for å tegne dette mønsteret.'
      NEW Course 4 Artist Params 1_instruction: 'Nå skal vi lage en funksjon som tegner et kvadrat med sider på 50 pixler hver. Trykk på "Rediger" for å komme i gang.'
      NEW Course 4 Artist Params 10_instruction: 'Lag en "tegn en sekskant"-funksjon blokk med en lengde-parameter. Hint: Denne sekskanten har sider som er 100 piksler lange. '
      NEW Course 4 Artist Params 11_instruction: 'Kan du finne ut hvordan du tegner denne formen? Rediger funksjonen for å bruke "sider"-parameter.'
      NEW Course 4 Artist Params 12_instruction: Kan du fullføre denne tegningen? Sidene til alle figurene er 100 piksler lange.
      NEW Course 4 Artist Params 12a_instruction: 'Dette bildet er likt det forrige. Kan du bruke en "for-løkke" med din funksjon til å lage dette designet?'
      NEW Course 4 Artist Params 13_instruction: 'La oss redigere funksjonen "tegne et polygon". Den har allerede en "lengde"-parameter. La oss legge til en "sider"-parameter. Husk vinkelen man må svinge i en gitt form er 360 delt på antallet sider det har. Hint: Omkretsen av hver figur er 200 piksler lang. Husker du ligningen for å lage figurer av samme størrelse når de har et annet ulikt antall sider?'
      NEW Course 4 Artist Params 14_instruction: 'Rediger "tegn en spiralkant" for å bruke "lengde" og "sider"-parametrene, deretter lager du disse formene igjen.'
      NEW Course 4 Artist Params 15_instruction: 'Frilek: Her er funksjonene du har skrevet, og litt mer for å leke med. Tegn noe kjempestilig! Lek med pennetykkelsen for å se hvor ulike tegningene dine blir!'
      NEW Course 4 Artist Params 2_instruction: 'Lag en "tegn et triangel"-funksjon med 50 piksler lange sider fra bunnen av'
      NEW Course 4 Artist Params 3_instruction: "La oss bruke funksjonen til å tegne 5 triangler på rad. Tips: det er 30 piksler mellom hver trekant.\\r\n"
      NEW Course 4 Artist Params 4_instruction: 'Legger du merke til noe annerledes med disse funksjonsblokkene? Klikk "Kjør" for å se hva som skjer.'
      NEW Course 4 Artist Params 5_instruction: 'Fyll ut ??? i input-brikken sin lengde-parameteren. Tips: Femkanten har sider som er 100 piksler lange. '
      NEW Course 4 Artist Params 6_instruction: 'Fyll i parameteren "lengde" for å tegne disse figurene ved å erstatte "???" med riktig tall. Sidene i firkanten og trekanten er 100 piksler lange sider, mens hver side i sekskanten er 75 piksler lang.'
      NEW Course 4 Artist Params 7_instruction: 'Kan du fullføre denne tegningen? Hint: Sidene av hver trekant er 25 piksler lengre enn den forrige. Den første trekanten har sider som er 25 piksler lange.'
      NEW Course 4 Artist Params 8_instruction: Koden til denne trekanten sin funksjon er brutt. Kan du redigere funksjonen for å fikse det, og deretter lage trekanter med lengder på 25, 50 og 75 piksler?
      NEW Course 4 Artist Params 9_instruction: 'Klikk "Rediger" for å fylle ut funksjonen til "tegn en firkant" og legg til en parameter. Det vil kreve en lengdeparameter, akkurat som i trekanten. Tegn nå 3 kvadrat med 25, 50 og 75 piksler i lengde, alle 100 piksler fra hverandre.'
      NEW Course 4 Artist Params inspire_instruction: "Inspirasjon til fritt spill: Du har nå lært alt du trenger å vite for å lage et mønster som dette! Hvis dette bildet inspirerer deg, kan du prøve å lage noe lignende, ellers du kan skape noe helt eget. \\r \\r Vil du vite hvordan vårt inspirasjonsmønster ble laget? "
      NEW Course 4 Artist Vars 1.5_instruction: 'Ta en titt på koden. Ser du hvordan "Angi lengde"-blokka og "lengde"-blokkere fungerer sammen? Klikk "Kjør" for å se hva som skjer. '
      NEW Course 4 Artist Vars 12_instruction: 'Endre denne algoritmen bruker variabelen "sider" i stedet for et for å tegne en trekant. Erstatt nummer 5 med variabelen "sider", og bruk "Angi sider"-blokk.'
      NEW Course 4 Artist Vars 2.5_instruction: 'Ta en titt på koden. Ser du hvordan "Angi lengde"-blokka og "lengde"-blokkere fungerer sammen? Klikk "Kjør" for å se hva som skjer. '
      NEW Course 4 Artist Vars 2_instruction: 'Dra en nummer blokk til "Angi lengde" blokken får å tegne et sett med 50 pixel store trekanter. '
      NEW Course 4 Artist Vars 4 5_instruction: Fantastisk jobb på den forrige oppgaven! La oss lage dette kule designet på sekskanter med 60 piksler lange sider.
      NEW Course 4 Artist Vars 4_instruction: La oss prøve det igjen. Nå, la oss tegne denne kule design med med 60 piksel store sekskanter.
      NEW Course 4 Artist Vars 6_instruction: 'Kan du hjelpe meg trekke dette kule mønsteret ved å slippe i den variable blokken "lengde" på de riktige stedene?'
      NEW Course 4 Bee For Loops 1_instruction: Bruk en løkke til å samle all nektaren fra hver blomst.
      NEW Course 4 Bee For Loops 10_instruction: Bruk for-løkkas teller-variabel til å kontrollere hvor langt du beveger deg vannrett.
      NEW Course 4 Bee For Loops 10a_instruction: 'Klar for en utfordring? Bruk det du har lært om løkker til å løse dette problemet. Husk: Du må kanskje kjøre løsningen din flere ganger før du skjønner alle stegene.'
      NEW Course 4 Bee For Loops 11_instruction: Kan du bruke løkke-variabelen til å kontrollere bevegelsen og nektarinnsamlingen?
      NEW Course 4 Bee For Loops 2_instruction: Legg til nødvendig kode slik at bien kan samle all nektaren. Se hvor mye koden du trenger for denne oppgaven! (Vi lærer en enklere måte i neste oppgave.)
      NEW Course 4 Bee For Loops 3_instruction: '"For-løkken" gjør dette mye lettere! All koden du trenger er her, se hvordan den er satt sammen og klikk "Kjør" for å se hvordan det virker. '
      NEW Course 4 Bee For Loops 4 4_instruction: 'Nå må vi flytte fremover "teller" ganger, deretter få nektar "teller" ganger.  Kan du bruke to "gjenta"-løkker for å løse denne utfordringen?'
      NEW Course 4 Bee For Loops 4_instruction: 'Erstatt ??? i "for"-løkken med den største mengden nektar bien må samle. '
      NEW Course 4 Bee For Loops 5 5_instruction: 'Får du taket på å bruke "for"-løkken"? La oss hjelpe bien til å skaffe resten av nektaren.'
      NEW Course 4 Bee For Loops 5_instruction: 'Du kan også bruke en "for"-løkke til å telle ned. Prøv å samle nektaren ved å telle ned fra 5 til 1 med steg på 1.'
      NEW Course 4 Bee For Loops 6_instruction: 'Det siste tallet i "for"-løkken din kalles "økning". Hver gang løkken kjøres, endres teller-variabelen med verdien i økningen. Prøv å samle disse blomstene ved hjelp av en økning på 2.'
      NEW Course 4 Bee For Loops 7_instruction: "Nå, la oss kombinere \"teller\"-variabelen med en matteblokk! Hvordan kan du bruke \"teller\"-variabelen til å navigere i denne hagen med så få blokker som mulig? Hva trenger du for å samle 3, 6, 9, 12, 15 nektar denne gangen? Hemmeligheten er i \"teller\" variabelen! \\r \\r Husk: Hvis løkken teller legges økningen til \"teller\"-variabelen hver gang."
      NEW Course 4 Bee For Loops 8_instruction: "Du har forstått dette! Hva må økningen være for å samle 3, 6, 9, 12 og 15 nektar? \\r\n"
      NEW Course 4 Bee For Loops 9_instruction: Hvis løkka di teller ned, så trekkes veksten fra teller-variabelen hver gang løkka går. Hva skal du øke med for å samle 9, så 6 og så 3 nektar?
      NEW Course 4 Bee For Loops 95_instruction: 'Sjå på kvar av "for" løkkene som du akkurat har laga. Kan du finne ut kva tal du må doble for å løyse denne oppgåva? Kvifor verkar det?'
      NEW Course 4 Play Lab Params 11_instruction: 'Det er fri speletid! Ha det gøy med alle blokkane i verktøykassen din. '
      NEW Course 4 Play Lab Params 5 5_instruction: La oss prøve det igjen, men med mindre hjelp. Kva treng du å endre denne gongen for å få figurane til å patruljere?
      NEW Course 4 Play Lab Vars 4 5_instruction: '"Kva trur du denne koden vil gjere? Trykk "Køyr" for å sjå kva som skjer."'
      NEW Course 4 Play Labs For Loops 7a_instruction: Bruk det du har lært så langt. Kan du få Dinosaur til å ta eit skritt fram kvar gong Penguin tel?
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: 'Det er fri speletid! Ha det gøy med alle blokkane i verktøykassen din. '
      NEW Course 4 Play Labs For Loops 8a_instruction: 'Utfordring: Korleis vil du bruke "for" blokken til å få alle figurane til å gå rundt og seie figurnummeret sitt, for deretter å forsvinne frå skjermen?'
      Ninjacat Demo B (copy 1)_instruction: "\\r\nLet’s begin by exploring a simple\nvideogame, and then figuring out how it works. You can use the arrow keys\nto move the ninja left, right and jump - try to catch the unicorn and avoid\nthe dragon!\\r\n\\r\n\\r\n\\r\n  \\r\n\\r\n"
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      October15 bat_instruction: "Freeplay: Here are some functions to play with.  Can\nyou draw a bat?\\r\n"
      October15 ghost 1_instruction: |
        Give the ghost eyes, using the "draw a circle"
        function.
      October15 JoL 1_instruction: |
        Program the artist to design a face for your
        jack-o-lantern!
      October15 pumpkin 1_instruction: |
        Finish this jack-o-lantern by drawing the
        eyes and nose in any style you would like.
      October15 stars 1_instruction: |
        Use loops and the "random integer" block
        to fill the night sky with stars of different shapes and sizes.
      Overworld Avoid Monsters_instruction: Å springe inn i ein klatreplante er ein dårleg ide. Gå forsiktig forbi klatreplantene for å komme sikkert heim.
      Overworld Chop Tree - allthethings_instruction: |
        Wood is a very important resource.
        Many things are made from it. Walk to the tree and use the “destroy block”
        command to chop it down.
      Overworld Chop Tree_instruction: 'Tre er ein veldig viktig ressurs. Mange ting blir laga av tre. Gå bort til treet og bruk "øydelegg blokk"-kommandoen for å hogge det ned.'
      Overworld Chop Trees_instruction: Me må bygge eit hus før sola går ned. Hus krev mykje tre. Kutt ned alle 3 trea.
      Overworld Free Play 20x20_instruction: Gratulera! Du har fullført alle våre oppgåver! Grav, bygg og lag noko unikt ved å bruke alt du har lært.
      Overworld Free Play_instruction: I dette landskapet kan du gjera kva du vil. Bygg noko kult.
      Overworld House Frame - A_instruction: La oss lage vårt eige hus! Denne staden ser bra ut. Bygg ei ramme på jord-blokkene.
      Overworld House Frame - C_instruction: La oss lage vårt eige hus! Denne staden ser bra ut. Bygg ei ramme på jord-blokkene.
      Overworld House Frame B_instruction: Ein vegg er fullført, la oss bygge resten av huset etter planteikninga! Du er nøydd til å gjenta deg sjølv ganske mykje her.
      Overworld House Frame B2_instruction: Ein vegg er fullført, la oss bygge resten av huset etter planteikninga! Du er nøydd til å gjenta deg sjølv ganske mykje her.
      Overworld House Frame C_instruction: Ein vegg er fullført, la oss bygge resten av huset etter planteikninga! Du er nøydd til å gjenta deg sjølv ganske mykje her.
      Overworld House Frame Chosen_instruction: 'Bygg resten av huset med det materialet du vil. Kommandoen "gjenta" vil vera nyttig her.'
      Overworld House Frame_instruction: La oss bygge vårt eige hus! Denne staden ser bra ut. Bygg ei ramme på jord-blokkene.
      Overworld Minecart Track_instruction: Du er tilbake på overflata med mange underjordiske ressursar. No skal me bygge ein sti langs det skitne jordtråkket frå huset ditt. Det første steget er å rydde opp stien. Følg stien og fjern trea.
      Overworld Move to Sheep_instruction: 'Legg til endå ein "gå framover"-kommando for å nå fram til sauen.'
      Overworld Place Wall_instruction: 'Kvart hus startar med ein vegg. Bygg den første delen av huset ditt med å putte "plassèr" og "gå framover"-kommandoar inni gjenta-løkka.'
      Overworld Plant Crops_instruction: Det er lurt å tenke framover. Plant avlingar på begge sider av vatnet så du ikkje blir svolten seinare.
      Overworld Powered Minecart_instruction: Bra jobba! Du har samla mange ressursar og bygd eit beskjedent hus. Legg skinner frå kanten av kartet og fram til døra på huset ditt.
      Overworld Shear Sheep_instruction: 'Tid for å klippe sau! Bruk "klypp"-kommandoen for å samle ull frå begge sauene.'
      PDAlg 13-16 Sam Extension Puzzle_instruction: |
        Add a second parameter to "onscreen?"
        for Sam's y coordinate and update the function so it keeps him safe on all
        four sides.
      PDAlg 17-20 Luigi Extension Puzzle_instruction: |
        Without modifying your existing
        "cost" function, create a new "coupon" function that takes a pizza topping
        and coupon code and returns the cost of a pizza with that topping. If the
        coupon code is correct (you get to decide what it is), apply a 30% discount
        to the pizza.
      PDAlg 8-12 ex dr 1_instruction: |
        The definition in this Design Recipe doesn't
        match both examples. Test each example to see which is failing, and then fix
        the definition to match.
      PDAlg 8-12 ex dr 2_instruction: |
        This student has created two examples for
        the function "apples" but something's not quite right. How would you direct
        this student to correct their mistake?
      PDAlg 8-12 Rocket Height Puzzle_instruction: |
        Let's write a "rocket-height"
        function with simple acceleration. Write a function that ensures the rocket
        is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and
        165 at 4 seconds.
      PDAlg Big Game History_instruction: |
        Now that you've played through a Big
        Game level you should see a new entry in your history. Click the Version History
        button and you should see at least one version. Each time you go back to a
        Big Game level you'll get a new record in your version history that you can
        revert back to.
      PDAlg Big Game Remix_instruction: "Here's your Big Game as you last left it.\nTry clicking the Remix button to spin off a new remix of your project.\\r\n\\r\nAny\nchanges you make after you click Remix will be saved on your new remix and\nnot on your main Big Game."
      PDAlg Design Recipe Delete_instruction: |
        Click the delete button to get rid
        of this function, then try creating and deleting a few of your own.
      PDAlg Design Recipe Examples_instruction: |
        The definition in this Design Recipe
        doesn't match both examples. Test each example to see which is failing, and
        then fix the definition to match.
      PDAlg Design Recipe Required_instruction: |
        Complete the Design Recipe for the
        "eggs" function, making sure to create and test your examples.
      PDAlg Updates Cond_instruction: |
        When you went to PD in the summer, the Conditional
        block that you were introduced to was black and allowed any data type to be
        used. This proved to be confusing, given that every other function we've
        seen always produces the same type of data. To help make conditionals clearer
        and more consistent we've replaced the single black block with a separate
        block for each data type.
      PDAlg Updates Errors_instruction: |
        Run the provided program and use the error
        messages to try and track down the bugs.
      PDAlg Updates Space_instruction: |
        Making use of limited programming space (especially
        on small screens) is challenging with a block based language. To help with
        this we've added a few features. Experiment with this provided code to see
        how the space can be manipulated to deal with larger programs.
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: |
        Try this puzzle that uses conditionals and
        loops together. Use the "if" block to decide when to turn. Hint: you only
        need one more block to complete this puzzle. 
      PDK5 Events 1_instruction: |
        So far all of the programs we've written are executed
        in order from top to bottom. In this puzzle, we'll use "Events" to respond
        to an action on demand. Make the octopus say "Hello" only when you click
        on the Octopus. 
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: 'Funksjonar lar deg definere nye blokkar! Vi har flytta blokkar som teiknar eit kvadrat inn i ein funksjon som heiter "teikn eit kvadrat". Kan du bruke funksjonen "teikn eit kvadrat" til å lage vindaugsglasa? Kvadrata er 75 pikslar frå kvarandre.'
      PDK5 Loops 1_instruction: |
        Instead of using 5 "move forward" blocks, use
        the "repeat" block with a "move forward" block inside of it. In computer
        science, this is called a "loop." 
      PDK5 Loops 3_instruction: |
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |
        Something happened
        to the bits in this image! Find the error and fix it! Hint: a few extra bits
        were added. You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix bit offset_instruction: |
        A single extra bit was
        inserted into the stream of bits that make up the C of the Code.org logo.
        That extra bit bumps all of the other bits down the line which makes the logo
        look messed up. Hunt down the extra bit and remove it to fix the Code.org
        logo.
      Pixelation - Lesson 14 - Fix the error_instruction: |
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |
        Make a 3x5 letter
        'A'. The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want. Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation - Lesson 15 - Color Free Play_instruction: |
        Requirements: The icon
        must be 16x16 pixels. You must use the Pixelation Widget to encode the bits
        of color information. The image must be encoded with at least 12 bits per
        pixel.
      Pixelation - Lesson 15 - Color Shades 4x4_instruction: |
        We start you out with
        the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid
        with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill
        with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4
        - shades of gray.
      Pixelation - Lesson 15 - Color Shades_instruction: |
        We start you out with the
        row of shades of red that Maddie created in the video. Experiment with 6-bit
        color by filling in the bottom row of the image with shades of a different
        color. Here is an example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Complete 3-bit color_instruction: |
        We start you with
        the 4x2 image Maddie was creating, but we've left out the last two squares.
        Finish off the image by figuring out which two colors are missing and encode
        them.
      Pixelation 2_instruction: |
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Pixelation Bee_instruction: |
        This larger image of a bee encodes color with
        12 bits per pixel, but viewing in hex makes it easier to see the color of
        each pixel. If you switch to binary mode - hold on to your hat - it's a lot
        of bits. Here's another mind-blowing thing to try: slide the bits per pixel
        up to 24 bits per pixel. What happens? Can you explain this behavior?
      Pixelation Flappy_instruction: |
        Here is a bigger image at 9 bits per pixel.
        With 9 bits per pixel you can express 512 different colors. Click through
        to see the next image which is even more sophisticated, but easier to understand.
      Play Lab Rocket 1_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2_instruction: |
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3_instruction: |
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      playEventsK1_instruction: |
        This game is called "Play Lab".  See if you can
        figure out what each block does.
      playEventsK2_instruction: "Jorge wants to say \"Hi there.\"\\r\n\\r\nCan you\nhelp?"
      playEventsK3_instruction: |
        Jorge wants to be scratched behind the ears!  Can
        you make it so that when you click Jorge he is happy?
      playEventsK4_instruction: |
        Can you make it so that Jorge the dog chases Robin
        the bird when you click the up arrow?
      playEventsK5_instruction: |
        Now add code so that Robin flies away when you click
        the forward arrow.
      playEventsK6_instruction: |
        Have Robin talk back to Jorge when you click on
        her.
      playEventsK7_instruction: What else can you do in this fun scene?
      Poorva copy U3L2 Using Simple Commands_instruction: |
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      Poorva-test_instruction: |
        Here are regular instructions for a level. There
        is nothing fancy going on here.
      PS copy 2-3 Bee Conditionals 5_instruction: "Be careful not to collect nectar\nfrom a purple flower if it doesn't have any. \\r\nYou must first check if\nthe nectar is equal to 1 using the `if nectar` block."
      PS FR test 7-25_instruction: 'Here are your instructions for this free response.  '
      PS Log test - Define and use turnAround_instruction: |
        Define a function called
        turnAround. Call the function and then move the turtle forward. (Click to
        see full instructions)
      PS predictive Applab level test_instruction: 'Here are some instructions. '
      Quantum Bee - Ryan_instruction: |
        These clouds are bugging me! Some of the clouds
        have flowers inside, and some don't. I should check each cloud, and only
        get nectar from the flowers.
      Quantum Bee_instruction: Lilla blomster kan ha enten 1 eller 0 nektar, men du vet ikke hvilken! Vær forsiktig med å samle nektar fra en lilla blomst hvis den ikke har noe. Sjekk om nektar er lik 1 ved hjelp av hvis blokken.
      Rocket Height Course A_instruction: |
        Follow the Design Recipe to create a function
        rocket-height.
      Ryan - 4-5 Bee Conditionals 2_instruction: Bia vil berre ha nektar akkurat nå. Ikkje alle objekta er blomar, så sjekk under KVAR EINASTE SKY for å sjå om det gøymer seg ein blome der. Om det gjer det kan du samle nektar.
      Ryan - Bee Conditionals_instruction: Bien ønsker bare nektar akkurat nå. Ikke alle objekter er blomster, så sjekk under HVER SKY til å se om det skjuler seg en blomst. Hvis det er, så du kan samle nektar.
      Ryan Doily Step 1_instruction: |
        Now we're going to draw a doily step by step.
        First, draw a square.
      Ryan Doily Step 2_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Doily Step 3_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Test Locked Blocks_instruction: 'Her er en funksjon kalt "patruljer". Endre den slik at Katt beveger seg opp 400 piksler og så ned 400 piksler.'
      Ryan's clone of C4S15P10_instruction: "We've added one last function for you.\n\\r\n\\r\nUse an \"if\" statement to program your game to call the \"level_up\"\nfunction only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample: \"player_score\" > 6\\r\n\\r\nPlay the game, and make it past level\n4 to move to the next puzzle. "
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Click "Run" and then use the
        arrow keys to move Sam around his yard, making note of Sam's coordinates
        at different locations. Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        safe from leaving both directions? Try using the and block to program the
        function on-screen? to check if Sam is safe-left? and safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      sample1_instruction: "Our adventurer wants to collect coins.  But she can only\nuse 4 blocks to get them.\\r\n\\r\nCan you help her grab as many as she can\nusing just 4 blocks?"
      sample10_instruction: Now you can use loops to draw whatever you like!
      sample10a_instruction: "You have helped the adventurer and her bee!  As a reward,\nplease stay and play around in my magical village. \\r\n\\r\nYou should have\neverything you need to create a game of your own."
      sample2_instruction: |
        Use what you've learned to help bee gather all of this
        honey using only the blocks that you have here.
      sample2a_instruction: |
        Use what you've learned to help bee gather all of this
        honey using only 4 blocks.
      sample3_instruction: |
        Now you can help bee make all of the honey using just
        the blocks in the toolbox.
      sample3assessment_instruction: |
        Can you figure out how to gather all of this
        nectar in just one try?
      sample4_instruction: "Our adventurer has found a stash of coins in this cave.\\r\n\\r\nCan\nyou help her grab as many as she can using just 7 blocks?"
      sample5_instruction: Help bee make all of the honey.
      sample6_instruction: 'Challenge: Help bee get all of the nectar.'
      sample7assessment_instruction: |
        Can you help bee make all of the honey in just
        one try?
      sample8_instruction: |
        Look at this trove of coins! How many can you get the
        adventurer to grab?
      sample9_instruction: |
        Use loops to help the artist connect all of the dots.
        
      sample9a_instruction: |
        The wizard has found his potions!  Use everything you
        have learned to help him collect them.
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: 'Nøtt! Nøtt! Nøtt!, Bruk ein "Viss"-blokk for å få meg dit med så få blokkar som mogleg.'
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: 'Ok, la oss øve på den ein gong til - den er ikkje så ulik, men pass deg for veggen!'
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: '"Viss-elles" blokken kontrollerer ein føresetnad og gjer det eine eller det andre. Prøv å bruke den nye blokken for å få meg til nøtta.'
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: 'Ei siste øving med "viss-elles" blokken. Klarar du å gjere det riktig på første forsøk?'
      scrat 20_instruction: Klarar du å hjelpe meg gjennom ein kompleks labyrint ved bare å legge til 3 blokkar? Om du gjer det riktig så kan eg gå kva veg som helst gjennom, uansett lengd. Skund deg! Isen smelter!
      SpecialFrozenLevel_instruction: |
        Du er nå offisielt blitt ein meisterkunstnar! 
        Lag eit vinterparadis.
      Standalone_Artist_1_instruction: Velkomen til Kunstnar! Først, la oss prøve å lage eit enkelt kvadrat ved å bruke blokkane for å snu til høgre og flytte framover. Kvar side bør vere 100 pikslar lange.
      Standalone_Artist_2_instruction: Teikn denne diamanten med vinklar på 120 og 60 grader og 150 pikslar lange sider.
      Standalone_Artist_3_instruction: Klarar du å teikne denne sekskanten med 100 pikslar lange sider og vinklar på 60 grader?
      Standalone_Artist_4_instruction: 'Nå har du fått ein ny blokk so du kan bruke, "Gjenta". Kva skjer om du gjentek desse kommandoane 6 gongar?'
      Standalone_Artist_5.5_instruction: 'Legg merke til korleis vi har forenkla koden for å lage diamanten ved å endre den til å bruke ei løkke. Du kan kjøre ei løkke over heile sekvensen 12 gongar for å teikne blomen. Tips: Du må snu 30 grader etter kvar diamantløkke for å ikkje teike samme diamant på nytt kvar gong.'
      Standalone_Artist_5_instruction: Kor mange gongar må du køyre ei løkke over denne diamanten for å teikne blomen?
      Standalone_Artist_6_instruction: 'Gjenta heksagonkoden 6 gongar for å lage dette mønsteret. Kor mange grader må du snu kvar gong? Tips: del talet på grader i ein sirkel på talet på gongar du køyrer løkka.'
      Standalone_Artist_7_instruction: 'Ein funksjon er eit programmeringsverktøy som du kan bruke for å slippe å gjenta deg sjølv. Denne funksjonen teiknar ein blome og du kan bruke den kvar gong du vil teikne ein blome. Bruk denne og den nye hopp-blokken for å teikne desse blomane. Tips: Blomane er 150 pikslar frå kvarandre.'
      Standalone_Artist_8_instruction: 'Her er ein funksjon kalla "Teikn ein figur" som vi har programmert til å teikne sekskantar. Køyr koden for å sjå kva den gjer og så kan du eksperimentere med den og sjå kva som skjer om du endrer på den. Kan du få den til å teikne eit mønster av kvadrat, trekantar og åttekantar?'
      Standalone_Artist_9_instruction: Lag akkurat det biletet du vil! Du har og fått ein ny, tom funksjon som du kan bruke til å lage den funksjonen du vil ha!
      Standalone_Artist_v2_instruction: Velkomen til Kunstnar! Først, la oss prøve å lage eit enkelt kvadrat ved å bruke blokkane for å snu til høgre og flytte framover. Kvar side bør vere 100 pikslar lange.
      StepIntro_instruction: |-
        Here's how to use the "Step" button.
      template test_instruction: "what's up"
      Test Play Lab_instruction: This is a test play lab level.
      test_sarah_instruction: hi hi
      testArtistForTestK_instruction: |
        The Artist is trying to draw a line five times,
        but can't get it right.  Can you help?
      Testing Quantum Farmer_instruction: "Wow, look at that! \\r\n\\r\nI don't know\nhow many shovelfuls of dirt this hole needs.  \\r\nCan you write a program\nthat keeps using the `fill` block until the ground is even?  "
      Text Compression 1_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      Total Artist Clone Me_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      U1L10 NetSim numbers with decimal_instruction: |
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L13 Text Compression_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      U1L4 NetSim SendAB_instruction: |
        Develop, document, and test a protocol that
        allows you to use Internet Simulator to relay a message. See the worksheet
        for more detailed instructions.  
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2 frequency caesar_instruction: Instruksjonar
      U2 frequency random sub_instruction: Instruksjonar
      U2 vigenere cipher_instruction: Instruksjonar
      U2 Vigenere_instruction: Test
      U2L04 - NetSim Routers with Addresses_instruction: |
        Send messages with your
        classmates (Click to see full instructions)
      U2L05 - NetSim - Packets and Building TCP_instruction: "Develop a Protocol\nfor Reliably Sending a Message.\\r\n\\r\nConstraints:\\r\n- Packets may contain\nonly 6 characters\\r\n- Packets may drop with small probability\\r\n- Packets\nmay not arrive in order"
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L14 frequency random_instruction: Test
      U2L2 NetSim Hub Mode_instruction: "Now use the Internet Simulator to send the\nbattleship moves. For setup, join a Room with your group, and add ships to\nyour paper board for each opponent. When playing, all communication must be\ndone through the tool, so no talking, but have fun!\\r\n"
      U2L3 NetSim Hub Mode_instruction: |
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: "For this activity, connect to a\nrouter with the others in your group. Important note: The router will only\nproperly route messages where the first 4 bits are the To: address and the\nsecond 4 bits are the From: address.\\r\n\\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      U2L5 NetSim Classroom Internet_instruction: "For this activity, connect to\na router with the others in your group. The Internet Simulator now provides\na place for you to put the To and From addresses, so you don't have to type\nout the bits manually.\\r\n\\r\n"
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U3 - Arrays - appendItem_instruction: |
        Create an array of odd numbers 1-11
        by using appendItem. (Click to see full instructions)
      U3 - Arrays - assignment_instruction: |
        Use indexes to change the values in
        this array from 1 to 0. (Click to see full instructions)
      U3 - Arrays - assignment2_instruction: |
        Calculate the sum of three values stored
        in an array. (Click to see full instructions)
      U3 - Arrays - assignment3_instruction: |
        Increase the value of each value in
        the randomly generated array by 1. (Click to see full instructions)
      U3 - Arrays - createFirstArray_instruction: |
        Create an array of the even numbers
        from 0 to 10 and display its contents with console.log. (Click to see full
        instructions)
      U3 - Arrays - Demo App_instruction: |
        Use the "My Favorite Things" app. How
        might this app be making use of an array? (Click to see full instructions)
      U3 - Arrays - expressionsAsIndexes_instruction: |
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      U3 - Arrays - favThings addItem_instruction: |
        Write code that allows a user
        to add their own favorite things to the list. (Click to see full instructions)
      U3 - Arrays - favThings bounds_instruction: |
        Add if statements to your event
        handlers that prevent the global index from going out of bounds. (Click to
        see full instructions)
      U3 - Arrays - favThings Counting Variable_instruction: |
        Create a global variable
        for the current index and use it to display the first item in the array. (Click
        to see full instructions)
      U3 - Arrays - favThings createArray_instruction: |
        Create an array of words
        describing your favorite things. (Click to see full instructions)
      U3 - Arrays - favThings firstOutput_instruction: |
        Use setText to display the
        first item in the array. (Click to see full instructions)
      U3 - Arrays - favThings giveIDs_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - favThings keepPlaying_instruction: |
        Make any other improvements
        you want! (Click to see full instructions)
      U3 - Arrays - favThings Next_instruction: |
        Write code that allows the user
        to move forward through your list by clicking the "Next" button. (Click
        to see full instructions)
      U3 - Arrays - favThings Prev_instruction: |
        Write code that allows the user
        to move backward through your list by clicking the "Last" button. (Click
        to see full instructions)
      U3 - Arrays - favThings template_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - globalVariableIndex_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - indexPractice_instruction: |
        Write the contents of the array to
        the screen in numerical order. (Click to see full instructions)
      U3 - Arrays - insertingItems_instruction: |
        Insert items into an array to form
        a complete sentence. (Click to see full instructions)
      U3 - Arrays - insertionErrors_instruction: |
        Run each command that references
        indexes that are out of bounds and observe the results. (Click to see full
        instructions)
      U3 - Arrays - introIndex_instruction: |
        Display the first and last element in
        the array. Display the number 5 from the array. (Click to see full instructions)
      U3 - Arrays - length_instruction: |
        Use list.length to determine the length
        of each array. (Click to see full instructions)
      U3 - Arrays - lengthMinus1_instruction: |
        Use list.length - 1 to log the last
        item in the array to the console. (Click to see full instructions)
      U3 - Arrays - remove_instruction: |
        Remove items from an array to form a complete
        sentence. (Click to see full instructions)
      U3 - Arrays - stringsInArrays_instruction: |
        Write a sentence word by word by
        adding strings to an array. (Click to see full instructions)
      U3 - Canvas - 200dots_instruction: |
        Add a loop to your program that draws 200
        dots on your canvas. (Click to see full instructions)
      U3 - Canvas - appendToArray_instruction: |
        Create an array to store each event
        parameter. Append each event parameter to this array within your event handler.
        (Click to see full instructions)
      U3 - Canvas - changeToMouseMove_instruction: |
        Change your program so that dots
        are drawn at the location of the mouse as the user moves the mouse on the
        canvas. (Click to see full instructions)
      U3 - Canvas - clickToAdd_instruction: |
        Change your program so that dots are
        added to the canvas when the user clicks on it. (Click to see full instructions)
      U3 - Canvas - delete_instruction: |
        Create a button that deletes the drawing
        by clearing the canvas and removing all stored values. (Click to see full
        instructions)
      U3 - Canvas - draw at click point_instruction: |
        Change your program so that
        dots are drawn at the location of the mouse click. (Click to see full instructions)
      U3 - Canvas - freePlay_instruction: |
        Extend the functionality of one of the
        effects, or create an entirely new one of your own. (Click to see full instructions)
      U3 - Canvas - introCanvas_instruction: |
        Add a canvas to your app and set it
        to be the active canvas. Then add a large dot to your canvas. (Click to see
        full instructions)
      U3 - Canvas - movementFunction fix Orig_instruction: |
        Modify the "Original"
        button event handler so that it takes the movement of the mouse into account.
        (Click to see full instructions)
      U3 - Canvas - movementFunction_instruction: |
        Write a function that takes the
        movement of the mouse as input and generates a line width as output. (Click
        to see full instructions)
      U3 - Canvas - One Dot sprayPaint_instruction: |
        Write code that redraws your
        image using a dot whose x and y locations use offsetX and offsetY with a small
        random value added. (Click to see full instructions)
      U3 - Canvas - redrawOriginal_instruction: |
        Write a function that processes
        your array, redrawing the dots as they originally appeared. (Click to see
        full instructions)
      U3 - Canvas - redrawRandom_instruction: |
        Set up a button and event handler
        for the random function. (Click to see full instructions)
      U3 - Canvas - redrawRandom2_instruction: |
        Write a function that processes your
        array, redrawing every dot with a random size. (Click to see full instructions)
      U3 - Canvas - shiftKey_instruction: |
        Add an if statement to your event handler
        so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      U3 - Canvas - sketch_instruction: |
        Write code that redraws your image using
        a sketch effect. (Click to see full instructions)
      U3 - Canvas - sprayPaint_instruction: |
        Update the spray paint code so that
        it redraws your image using multiple random dots instead of using a nested
        for loop. (Click to see full instructions)
      U3 - Canvas - transparentDots_instruction: |
        Change the colors of your dots
        so they have a fully transparent stroke and partially transparent fill. (Click
        to see full instructions)
      U3 - Canvas - usingOffsetXY_instruction: |
        Add a console.log command inside
        the function of your event handler. Use it to display the event parameter.
        Click on the screen to see the contents of the event parameter (Click to see
        full instructions)
      U3 - Conditional Basics - 6_instruction: |
        Add a setText after the if statement
        to "Nope. Guess again." (Click to see full instructions)
      U3 - Conditionals - Combine AND and OR_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instrucitons.
      U3 - Conditionals - Combine AND OR and NOT_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instructions.)
      U3 - Conditionals - Combine AND OR Simple_instruction: |
        Write an if statement
        that uses AND and OR to display "Sleep in!" if it's the weekend and the
        user is a teenager. (Click to see full instructions.
      U3 - Conditionals - intoOr_instruction: |
        Add 2 if statements that use the OR
        operator. (Click to see full instructions)
      U3 - Conditionals - introAND_instruction: |
        Add 2 if statements that use the
        OR operator. (Click to see full instructions)
      U3 - Conditionals - Simple AND_instruction: |
        Write an if statement that uses
        AND to display "You are a teenager." if the user enters an age between 13
        and 19. (Click to see full instructions)
      U3 - Conditionals - Simple OR_instruction: |
        Write an if statement that uses
        OR to display "It's the weekend!" if the user enters a weekend day at the
        prompt. (Click to see full instructions)
      U3 - Design Mode - Console Log_instruction: |
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      U3 - Design Mode - Layers and Delete_instruction: |
        Fix the layout of the bullseye
        game. (Click to see full instructions)
      U3 - Design Mode - Multi Screens 2_instruction: |
        Make a 2 screen app which
        can switch back and forth between a black screen and a white screen using
        buttons. (Click to see detailed instructions.)
      U3 - Design Mode - Multi Screens_instruction: |
        Make a 2 screen app with a black
        screen and a white screen. (Click to see detailed instructions)
      U3 - Design Mode - Other Events_instruction: |
        Delete the button and make the
        image move to a random location when you click on it. (click to see detailed
        instructions)
      U3 - Design Mode - WTF Console Log_instruction: |
        Add a 3 console.log messages
        and test them out. (Click to see full instructions.)
      U3 - Design Mode -Recreate Beyond Buttons_instruction: |
        Recreate the game from
        the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to
        see full instructions.)
      U3 - Design Mode 1_instruction: |
        Add a large red button to your screen using
        Design Mode. (Click for full instructions.)
      U3 - Dice - Dropdown and Score_instruction: |
        Add guess and score to the Dice
        Game (Click to see full instructions)
      U3 - Dice - Dropdown with Strings_instruction: |
        Add a dropdown for difficulty
        level that prints the difficulty level in the console. (Click to see full
        instructions)
      U3 - Dice - If_instruction: |
        Show different die images for the random number
        generated. (Click to see full instructions)
      U3 - Dice - Nested_instruction: |
        Use nested if statements to make the scoring
        different for the different game levels. (Click to see full instructions)
      U3 - High Low - Debug_instruction: |
        Debug the order of the conditionals so
        that it will actually tell the user when their guess is close. (Click to see
        full instructions)
      U3 - High Low - Dropdown_instruction: |
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      U3 - High Low - Else if_instruction: |
        Add an else-if statement in order to
        tell the user if their guess is high or low instead of just wrong. (Click
        to see full instructions)
      U3 - High Low - Else_instruction: "Add an else statement so that the program\nwill tell the user when they are right and when they are wrong. (Click to\nsee full instructions)\\r\n"
      U3 - High Low - If_instruction: |
        Add code to the if statement that indicates
        the user guessed the secret number. (Click to see full instructions)
      U3 - images - bee free play_instruction: Do this
      U3 - Keys - Add Image URLs_instruction: |
        Add image URLs to your array. Replace
        the text area with an image and setText with setImageURL. Then test your app!
        (Click to see full instructions)
      U3 - Keys - Buttons and Keys_instruction: |
        Have the program respond the same
        way for both clicking images on the screen and hitting the up and down keys
        on the keyboard. (Click to see full instructions)
      U3 - Keys - Demo App_instruction: |
        Play with the image scroller. Press the
        left and right arrows to progress through the images.
      U3 - Keys - Final Image Scroller_instruction: |
        Update the image scroller to
        respond to buttons and key presses. (Click to see full instructions)
      U3 - Keys - Functions_instruction: |
        Write doUpArrow and doDownArrow functions
        and call the functions instead of duplicating the code. (Click to see full
        instructions)
      U3 - Keys - Key Up and Down_instruction: |
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      U3 - Keys - Multiple Keys_instruction: |
        Play a different sound when the down
        arrow is pressed. (Click to see full instructions)
      U3 - Keys - Practice Adding Images with URL_instruction: |
        Add image URLs to
        your image array. Test out the add button. Style your image scroller. (Click
        to see full instructions)
      U3 - Keys - Words to Images_instruction: |
        Add image URLs to your image array.
        Test out the add button. Style your image scroller. (Click to see full instructions)
      U3 - Loops -  9 Part 2_instruction: |
        Change the boolean expression for the
        while loop so that it will roll until both dice are greater than 3. (Click
        to see full instructions)
      U3 - Loops -  Complex Condition_instruction: |
        Change the boolean expression
        for the while loop so that it will stop when both dice are greater than or
        equal to 5. (Click to see full instructions)
      U3 - Loops - 1_instruction: |
        Change the condition for the while loop to check
        if the variable num is less than 90. (Click to see full instructions)
      U3 - Loops - 10_instruction: |
        Write a program that simulates the rolling of
        two dice. Roll the dice repeatedly until the sum of the dice is either 7 or
        11.
      U3 - Loops - 11_instruction: |
        Fix the condition so that it keeps rolling the
        die as long as the value is not a 2 or a 3 instead of rolling infinitely.
        (Click to see full instructions)
      U3 - Loops - 12_instruction: |
        Change the code so that it prints the string
        "Hi" 5 times. (Click to see full instructions)
      U3 - Loops - 13_instruction: |
        Update the code to count up by 3 instead of 1.
        (Click to see full instructions)
      U3 - Loops - 14_instruction: |
        Change the loop condition to prevent the infinite
        loop and stop counting once the count is past 30. (Click to see full instructions)
      U3 - Loops - 15_instruction: |
        Count the number of times the sum of the dice
        is 12. (Click to see full instructions)
      U3 - Loops - 16_instruction: |
        Find out how many times you have to roll to get
        the sum of 7 100 times (Click to see full instructions)
      U3 - Loops - 2_instruction: |
        Try creating an infinite loop using !=, > and
        <. (Click to see full instructions)
      U3 - Loops - 3_instruction: |
        Change the if statement to a while loop so the
        program will run until it rolls a 6. (Click to see full instructions)
      U3 - Loops - 4_instruction: |2
         Use the Debug Commands to make a list of all
        the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - 5_instruction: |
        Add code inside the while loop which will update
        the variable num so that the condition will eventually become false. (Click
        to see full instructions)
      U3 - Loops - 6_instruction: |
        Fix the problem so the loop will run at least
        once. Change the initial value of num to a dummy value such as -1. (Click
        to see full instructions)
      U3 - Loops - 7_instruction: |
        Without adding any lines of code, reorder the
        code so that it prints all the values of num. (Click to see full instructions)
      U3 - Loops - 8_instruction: |
        Debug which number is not getting printed and
        add a write statement to display that value. (Click to see full instructions)
      U3 - Loops - 9_instruction: |2
         Modify the condition so that it keeps rolling
        as long as both are less than 3. (Click to see full instructions)
      U3 - Loops - Continue_instruction: |2
         Use the Debug Commands to to make a list
        of all the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - minus = operator_instruction: |
        Update the code to use the -= operator
        to count from 30 down to 0 by 3's. (Click to see full instructions)
      U3 - Loops - Minus Minus_instruction: |
        Change the code to count down from 10
        to 1. (Click to see full instructions)
      U3 - Loops - plus and minus = operator_instruction: |
        Update the code to use
        the += operator. (Click to see full instructions)
      U3 - Loops - Plus Plus_instruction: |
        Change the code to use count++ instead
        of count = count + 1.  (Click to see full instructions)
      U3 - Loops - Typing in Console_instruction: |
        Use console to check the ending
        value of num. (Click to see full instructions)
      U3 - Loops And Arrays - Add 5_instruction: |
        Add 5 to all the values in an array
        (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 1_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 2_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Counting Times_instruction: |
        Count the number of times
        5 appears in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Divid by 2_instruction: |
        Divide every value in the
        array by 2. (Click to see full instructions)
      U3 - Loops And Arrays - Find Max_instruction: |
        Design a function that displays
        the smallest number in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Find Min_instruction: |
        Complete the findMinVal function
        to find and display the smallest value in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Functions that Return Value_instruction: |
        Call findMin
        within the console.log statement to calculate the minimum of two values.  (Click
        to see full instructions)
      U3 - Loops And Arrays - General Search Param_instruction: |
        Add a second parameter
        to the search function for the value to search for.  (Click to see full instructions)
      U3 - Loops And Arrays - Intro For Loop_instruction: |
        Add a for loop with a
        console.log inside and test out the 3 pieces of the for loop. (Click to see
        full instructions)
      U3 - Loops And Arrays - Linear Search_instruction: |
        Visit every element in
        the array and display "true" if the value is a 5, and "false" otherwise.
        (Click to see full instructions)
      U3 - Loops And Arrays - Loop Array If_instruction: |
        Use an if statement to
        only display the values in the array that are greater than 5. (Click to see
        full instructions)
      U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: |
        Create
        a function that takes a list parameter and prints if the list contains a 5.
        (Click to see full instructions)
      U3 - Loops And Arrays - Make it a Function_instruction: |
        Move the code that
        searches the list for a 5 into a function called "search". (Click to see
        full instructions)
      U3 - Loops And Arrays - Multiple Returns_instruction: |
        Test out the return
        values of the findMax function.  (Click to see full instructions)
      U3 - Loops And Arrays - Print Array_instruction: |
        Use a for loop to print out
        all the values in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Printing Single True_instruction: |
        Process the array
        and display a single "true" if the array contains a 5 or a single "false"
        if it does not.  (Click to see full instructions)
      U3 - Loops And Arrays - Return Index_instruction: |
        Make the search function
        return the index of the search value in the array. (Click to see full instructions)
      U3 - Loops And Arrays - Return Value_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Loops And Arrays - Search and Remove_instruction: |
        Search for 5 in the
        array and remove it from the array. (Click to see full instructions)
      U3 - Loops And Arrays - Search with Boolean Var_instruction: |
        Make a boolean
        variable to use as a flag to keep track of whether there is a 5 in the array.
        (Click to see full instructions)
      U3 - Loops And Arrays - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Movie Bot - Multiple If Sequences_instruction: |
        Add another set of if,
        else if, and else statements inside the question if statement to check for
        keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      U3 - Movie Bot - Nested Motivation_instruction: |
        Add a separate set of if statements
        to check for a "?" in the input. (Click to see full instructions)
      U3 - Movie Bot - toLowerCase_instruction: |
        Use the toLowerCase command to change
        all user input into lowercase letters after they enter it. (Click to see full
        instructions)
      U3 - Movie Bot - When Multiple If Statements_instruction: |
        Add an if and else-if
        statement that checks for please and thank you. (Click to see full instructions)
      U3 - Practice Create Performance Task_instruction: |
        Design and implement your
        practice Create Performance Task. (Click to see full instructions)
      U3 - Read Record - 1.2_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\\r\n"
      U3 - Read Record - 1.5_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\\r\n"
      U3 - Read Record - 1.6_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\\r\n"
      U3 - Read Record - 1_instruction: "Console.log the records returned by a call\nto readRecords. (Click to see full instructions)\\r\n"
      U3 - Read Record - 2_instruction: "Change the table name so that the records\nare read from the new table.(Click to see full instructions)\\r\n"
      U3 - Read Record - 3_instruction: "Change the name of the table in a readRecords\ncommand to read from a table that does not exist. (Click to see full instructions)\\r\n"
      U3 - Read Record - 4.1_instruction: "Print out each record return from the\nreadRecords call individually. (Click to see full instructions)\\r\n"
      U3 - Read Record - 4_instruction: "Print out each record return from the readRecords\ncall individually. (Click to see full instructions)\\r\n"
      U3 - Read Record - 5 and half_instruction: "Print out the name of each movie\nin the records return from the readRecords call. (Click to see full instructions)\\r\n"
      U3 - Read Record - 5_instruction: "Print out the name of each movie in the\nrecords return from the readRecords call. (Click to see full instructions)\\r\n"
      U3 - Return Values - constrainTurtle_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Return Values - debuggingConstrain_instruction: |
        Correct the error in
        constrain so that it returns the appropriate value.  (Click to see full instructions)
      U3 - Return Values - debuggingMaxVal_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - debuggingReturns_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - increase1_instruction: |
        Call the increase function within
        moveForward, write, and console.log.  (Click to see full instructions)
      U3 - Return Values - increase2_instruction: |
        Change the increase function to
        return 3 times the input value. (Click to see full instructions)
      U3 - Return Values - min1_instruction: |
        Test out the return values of the findMax
        function.  (Click to see full instructions)
      U3 - Return Values - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - useMinVal_instruction: |
        Call minVal within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - wrapTurtle_instruction: |
        Write wrap in this simple app
        to let the turtle "wrap" to the other side of the screen when it goes off.  (Click
        to see full instructions)
      U3 - Return Values - writeMaxVal_instruction: |
        Write the function maxVal and
        then use it within the console.log statement to calculate the maximum of two
        values.  (Click to see full instructions)
      U3 - Search Terms - 1_instruction: "Create an array of all the movies made\nin 2008 and print it out. (Click to see full instructions)\\r\n"
      U3 - Search Terms - 2_instruction: "Print out all the movies with year 2008\nusing the readRecords search terms. (Click to see full instructions)\\r\n"
      U3 - Search Terms - 3_instruction: "Print whether or not there are movies matching\nthe search criteria (Click to see full instructions)\\r\n"
      U3 - Search Terms - 4_instruction: "Print whether or not there are movies matching\nthe search criteria (Click to see full instructions)\\r\n"
      U3 - Search Terms - 5_instruction: "Print out the cities that are in California\nor have a population of 2,000,000. (Click to see full instructions)\\r\n"
      U3 - Search Terms - 6_instruction: "Print out the cities that are in California\nor have a population of 2,000,000. (Click to see full instructions)\\r\n"
      U3 - Simple Drawing - Comments_instruction: Do this
      U3 - Simple Drawing - Ellipse and No Fill_instruction: Do this
      U3 - Simple Drawing - Fill_instruction: Do This
      U3 - Simple Drawing - No Fill_instruction: Do this
      U3 - Simple Drawing - Order of Blocks_instruction: Do this
      U3 - Simple Drawing - Oval_instruction: Do This
      U3 - Simple Drawing - Personal Drawing_instruction: DO This
      U3 - Simple Drawing - Rectangle Width and Height_instruction: Do This
      U3 - Simple Drawing - Rectangle_instruction: Do This
      U3 - Simple Drawing - regular polygon_instruction: Do this
      U3 - Simple Drawing - Road Ellipse_instruction: Do This
      U3 - Simple Drawing - Road Rects and Color_instruction: Do This
      U3 - Simple Drawing - Simple Shape Drawing_instruction: Do This
      U3 - Simple Drawing - Stroke and Stroke Weight_instruction: Do this
      U3 - Simple Drawing - text_instruction: Do This
      U3 - Simple Drawing - X and Y values_instruction: Do This
      U3 - Simulation - 1_instruction: |
        Use a while loop to "flip a coin 10 times"
        and write the values to the screen. (Click to see full instructions)
      U3 - Simulation - 2.1_instruction: |
        Change your looping condition so the simulation
        runs until there are 5 heads flipped. (Click to see full instructions)
      U3 - Simulation - 2.5_instruction: |
        Run your simulation to get the full 10,000
        heads! How long did it take? (Click to see full instructions)
      U3 - Simulation - 2_instruction: |
        Keep track of how many heads (1's) your
        program generates and print the results to the screen. (Click to see full
        instructions)
      U3 - Simulation - 3_instruction: "Add functionality that counts how many heads\nin a row are flipped. (Click to see full instructions)\\r\n"
      U3 - Simulation - 4_instruction: |
        Update your while loop's condition so the
        the coin flips until there are three heads in a row. (Click to see full instructions)
      U3 - Simulation - 5_instruction: |
        Change your while loop to run until you get
        a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      U3 - Simulation - 6_instruction: |
        Keep adding to your simulation. What do you
        want to explore next? (Click to see full instructions)
      U3 - Simulation - App_instruction: |
        Change your code to run the full simulation
        with 10,000 coins. What was your longest streak of heads? (Click to see full
        instructions)
      U3 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3 - Sprites - Intro Sprites_instruction: Do This
      U3 - Sprites and Mod - Create  and Draw Sprite_instruction: Do This
      U3 - Sprites and Mod - Mouse Width and Height_instruction: Do this
      U3 - Sprites and Mod - Mouse X and Y_instruction: Do this
      U3 - Sprites and Mod - Rand Around Mouse_instruction: Do this
      U3 - Sprites and Mod - Rand Shape Color_instruction: Do This
      U3 - Sprites and Mod - Shape Color_instruction: Do This
      U3 - Sprites and Mod - two sprites_instruction: Do This
      U3 - Sprites and Mod - Wrap Many Squares_instruction: Do This
      U3 - Sprites and Mod - X and Y Prop_instruction: Do This
      U3 - User Input - Save getText To Variable_instruction: |
        Save the age and name
        of the user in variables (Click to see full instructions)
      U3 - User Input - Saving After Input_instruction: |
        Save the age of the user
        in a variable using getText() (Click to see full instructions)
      U3 - User Input and String -  Concat_instruction: |
        Output a message about age
        in a Text Area (Click to see full instructions)
      U3 - Variables - Clicker Game_instruction: |
        Create your improved Chaser-Game
        here. (Click to see full instructions)
      U3 - Variables - Debug Scope_instruction: |
        Why isn't the value of foo changing
        correctly? Make a guess. (Click to see full instructions)
      U3 - Variables - Debugging with Turtle_instruction: |
        Use your new debugging
        techniques to get the code to run correctly (Click to see full instructions)
      U3 - Variables - Decrement_instruction: |
        Decrement the value of the variable.
        (Click to see full instructions)
      U3 - Variables - Identify Variables_instruction: |
        Identify the values printing
        in the terminal with console.log statements. (Click to see full instructions)
      U3 - Variables - Increment_instruction: |
        Use the console.log debugging technique
        to see what is happening in this example. Add another variable and increment
        its value. (Click to see full instructions)
      U3 - Variables - Incrementing Variables_instruction: |
        Create a repeat loop
        for the repeated code and use increment to recreate the original program with
        less lines of code! (Click to see full instructions)
      U3 - Variables - Read Using Turtle_instruction: |
        Create a second set of variables
        for x and y position. Move turtle to that new location. (Click to see full
        instructions)
      U3 - Variables - Reassigning Variables with Console.log_instruction: |
        Add another
        reassignment statement at the end of the code to change the value of the variable
        at second time. (Click to see full instructions)
      U3 - Variables - Set to Expression with Other Variables and Turtle_instruction: |
        (click
        to see full instructions)
      U3 - Variables - Set to Expression with Other Variables_instruction: |
        Write
        an expression that calculates the player's total score and stores it in the
        totalScore variable. The calculation is: the player's points times lives
        divided by the total time. (click to see full instructions)
      U3 - Variables - Set to Expression with Turtle_instruction: |
        (click to see
        full)
      U3 - Variables - Set to Expression_instruction: |
        Test out the new expressions.
        (Click to see full instructions)
      U3 Digital Assistant Design_instruction: |
        Pick a topic for your Digital Assistant
        and create the basic layout with a text input and text area. (Click to show
        full instructions)
      U3 Digital Assistant Set Text_instruction: |
        Have your digital assistant repeat
        back what the user types and include a canned response. (Click to see full
        instructions)
      U3 Digital Assistant Target - Mehal_instruction: |
        Try out a demo of the Digital
        Assistant!
      U3 Digital Assistant Target_instruction: Try out a demo of the Digital Assistant!
      U3 Digital Assistant Template_instruction: This is a project template!
      U3 Digital_instruction: |
        Choose a specialization topic for your digital assistant.
        Create a basic digital assistant that takes the user's input and displays
        back a default response.
      U3 full clicker demo_instruction: 'Clicker game - Try it out!'
      U3 mehal's clone_instruction: Try out a demo of the Digital Assistant!
      U3 Variables consolelog_instruction: |
        Use the write block to display the value
        of size
      U3 Variables flower example_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables gray square_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables make a square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      U3 Variables misconceptions try it_instruction: |
        Test out your predictions
        from the previous level.
      U3 Variables randomize your square_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      U3 Variables write_instruction: |
        Use the write block to display the value of
        size
      U3- Variables - Assign Random For Turtle Draw_instruction: |
        Try writing the
        same code in text mode.
      U3- Variables - Changing the Value_instruction: |
        Update the value of 'turnAmount'
        before each moveForward so the turtle turns a different amount each time.
        (Click to see full instructions)
      U3- Variables - Create And Assign_instruction: |
        On one line add a variable
        called "lives" and assign it the value 3. Print it to the console. (Click
        to see full instructions)
      U3- Variables - Text Mode_instruction: |
        1. Switch to text mode and type instructions;
        2. drag blocks out into text mode; 3. experiment with code completion
      U3-Design Mode-ID and Event Handler_instruction: |
        Add an event handler for
        the button using the "Insert and show" link in the Design Mode Events tab.
        (Click to see full instructions).
      U3-Design Mode-ID_instruction: |
        Using the Design Mode Events change the button
        ID and update the code to match. (Click to see detail instructions).
      U3-Design Mode-Image_instruction: |
        Recreate the "Chaser Game" from the last
        lesson using Design Mode. (Click to see full instructions.)
      U313 drag Two Buttons_instruction: |
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 eventsDetails_instruction: |
        Run a program with two buttons that have the
        same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 Two Buttons with Ids_instruction: |
        Predict what will happen. Once you've
        made a prediction, run the code to see what happens. (Click to see full instructions)
      U3L03 - draw rect function_instruction: "Write a function called drawRectangle().\\r\n(Click\nto see full instructions)"
      U3L03 - draw step_instruction: |
        Write the drawStep function. (Click to see
        full instructions)
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Define a function called turnAround.
        Call the function and then move the turtle forward. (Click to see full instructions)
      U3L03 define turnRight and draw a rectangle_instruction: |
        Define a function
        called right() that turns the turtle to the right. Then use this function
        to draw a rectangle, as shown below. (Click to see full instructions)
      U3L03 Draw a T using turnAround_instruction: |
        Draw a plus sign using the provided
        version of turnAround().  (Click to see full instructions)
      U3L03 draw diamond_instruction: |
        Create a function called drawDiamond() that
        makes use of your previous work to draw the complete diamond. (Click to see
        full instructions)
      U3L03 Three Steps_instruction: |
        Define a function called drawSide() which draws
        three steps and moves the turtle to prepare for the next side (Click to see
        full instructions)
      U3L04 - 3 by 3 with functions_instruction: |
        Make the 3x3 square as efficiently
        as you can. (Click to see full instructions)
      U3L04 - snowflake_instruction: |
        Create the design by breaking it down into
        layers of functions. (Click to see full instructions)
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 - moveForwardwithParams_instruction: |
        Use a single command to move the
        turtle to the edge of the screen. (Click to see full instructions)
      U3L06 Challenge 1 triangle_instruction: |
        Use the parameterized versions of
        the turtle commands to create a triangle with sides 100 pixels long. (Click
        to see full instructions)
      U3L06 Challenge 2 purple square_instruction: |
        Read the documentation for penColor()
        and penWidth() before using them to draw the blue square.
      U3L06 Challenge 3 fill pink_instruction: |
        Fill in the background of the screen
        with your favorite color. (Click to see full instructions)
      U3L06 Challenge 4 bullseye_instruction: |
        Create the bullseye using hexadecimal
        colors and dot(). (Click to see full instructions)
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: |
        Read the documentation for the "arcLeft"
        and "arcRight" commands and then draw the squiggles as shown. 
      U3L06 Challenge 7 smiley face_instruction: |
        Use turnTo() and moveTo() to help
        draw a smiley face. (Click to see full instructions)
      U3L06 Challenge 8 make your own_instruction: |
        Create a drawing of your own.
        (Click to see full instructions)
      U3L07 - allSeaGrass_instruction: |
        Add 50 pieces of seagrass to the image by
        writing drawAllSeagrass with a loop. (Click to see full instructions)
      U3L07 - bubbles_instruction: |
        Add 200 bubbles to the image by writing drawAllBubbles
        with a loop. (Click to see full instructions)
      U3L07 - callingFunctionsInLoops_instruction: |
        Call the function within the
        loop to complete the figure. (Click to see full instructions)
      U3L07 - createTriangleParam_instruction: |
        Define a function that accepts a
        parameter to match the function calls and complete the image. (Click to see
        full instructions)
      U3L07 - fish_instruction: |
        Add 15 fish to the image by writing drawAllFish
        with a loop. (Click to see full instructions)
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play! Use what you learned
        from loops and random to make your own little scene. Have fun.
      U3L07 - introSquare_instruction: |
        Use a loop to draw a square. Then add another
        loop to draw many squares each one rotated some amount. (Click to see full
        instructions)
      U3L07 - loopsWithRandom_instruction: |
        Increase the number of iterations to
        fill the screen with white. (Click to see full instructions)
      U3L07 - randomDots1_instruction: |
        Increase the number of iterations to fully
        fill the screen with random dots. (Click to see full instructions)
      U3L07 - randomSquare_instruction: |
        Draw the figure using a loop. (Click to
        see full instructions)
      U3L07 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that controls
        the number of waves in the grass. (Click to see full instructions)
      U3L07 - seaStar_instruction: |
        Add 5 sea stars to the image by writing drawAllSeaStars
        with a loop. (Click to see full instructions)
      U3L07 - Starry Night Starter Code_instruction: |
        You are going to use loops
        and random numbers to generate an image of starry night sky similar to one
        shown here.  We have given you some starter code to generate the ground and
        sky (just two giant dots), you will add code to this project to make the stars,
        grass, and moon.  All of the effects are clever applications of turtle dots,
        lines, and colors.  To get started, follow the series of steps suggested in
        the accompanying worksheet. 
      U3L07 - sunBeams_instruction: |
        Add 100 sunbeams to the image by writing drawAllSunbeams
        with a loop. (Click to see full instructions)
      U3L07 - topDownDesign_instruction: |
        Get comfortable with the structure of this
        program, then move on to the next exercise. (Click to see full instructions)
      U3L08 - createTwoParamTriangle_instruction: |
        Define a function called drawTriangle()
        that accepts two parameters to set the size and width of the triangle. (Click
        to see full instructions)
      U3L08 - digitalScene_instruction: |
        Create the functions you were assigned as
        part of your digital scene. (Click to see full instructions)
      U3L08 - drawSquaresWithParams_instruction: |
        Write drawSmallSquare() to draw
        a 25px square. (Click to see full instructions)
      U3L08 - drawSquareWithParam - for video_instruction: |
        Use drawSquare() to recreate
        the image of both squares, this time using parameters. (Click to see full
        instructions)
      U3L08 - drawSquareWithParam_instruction: |
        Use drawSquare() to recreate the
        image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L08 - fish_instruction: |
        Add a parameter to drawFish that changes the size
        of the fish drawn. (Click to see full instructions)
      U3L08 - freePlay_instruction: |
        Keep adding to your image by making more calls
        to your new functions with parameters. (Click to see full instructions)
      U3L08 - individualCode_instruction: |
        Create the functions you were assigned
        as part of your digital scene. (Click to see full instructions)
      U3L08 - introUnderTheSea_instruction: |
        Add an extra fish, starfish, and piece
        of sea grass to the image. Look at, but don't change, the functions that
        create them. (Click to see full instructions)
      U3L08 - multiParamFish_instruction: |
        Add three parameters to your drawFish
        function to accept red, green and blue values to make your fish different
        colors. (Click to see full instructions)
      U3L08 - multipleLayersofParams_instruction: |
        Call drawPlusSign() to complete
        the image. (Click to see full instructions)
      U3L08 - paramsToStarfish_instruction: |
        Add a parameter to drawStarfish that
        changes the size of the starfish drawn. (Click to see full instructions)
      U3L08 - randomInput_instruction: |
        Use the randomNumber() blocks to test the
        functions you designed with random input. (Click to see full instructions)
      U3L08 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that changes
        the size of the piece of seagrass drawn. (Click to see full instructions)
      U3L08 - squareTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L08 - starFish_instruction: |
        Add an extra fish, starfish, and piece of sea
        grass to the image. Look at, but don't change, the functions that create
        them. (Click to see full instructions)
      U3L08 - triangleTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L1 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3L12 Chaser Template_instruction: This is a project template!
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: "The last problem was an example\nof syntax error.  App Lab did not understand which object it should be listening\nto for a \"click\" event so it showed an error message in the console to let\nyou know.  Another kind of error is a logical error - the program is valid,\nbut it's not doing what you want it to do.\\r\n\\r\nThis program has 2 errors.\nA (tricky) syntax error and logical error.  Find them, fix them, and make\nthe program work as expected."
      U3L13 - Debug Id Problem_instruction: |
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      U3L13 - Debugging 1_instruction: |
        Debug the program by verifying your IDs are
        being referenced properly. (Click to see full instructions)
      U3L13 - Debugging 2_instruction: |
        Debug the program by properly ordering your
        button commands and event handlers. (Click to see full instructions)
      U3L13 - Debugging 3_instruction: |
        Debug the program by fixing the logical error
        within the program. (Click to see full instructions)
      U3L13 - Project_instruction: |
        Create your multi-screen app. (Click to see full
        instructions.)
      U3L13 - Turtle Driver Project_instruction: |
        Create a "turtle driver" that
        includes buttons to move the turtle forward and turn it left and right. (Click
        to see full instructions)
      U3L13 - Turtle move with button_instruction: |
        Add a button that moves the turtle
        when clicked.  (Click to see full instructions)
      U3L13 eventsDetails_instruction: |
        Add an event handler to the button to move
        the turtle forward. (Click to see full instructions)
      U3L14 - Assigning Random Value_instruction: |
        Write a program that simulates
        the rolling of two dice and reports their individual values as well as the
        sum. (click to see full instructions)
      U3L14 - concatenate simple_instruction: |
        Modify the write statement on line
        3 to combine text and variables together to make the app display a single
        line of text that shows the player's lives and score. (click to see full
        instructions)
      U3L14 - Mini Calculator embed_instruction: |
        You will be prompted for two numbers,
        one right after the other.  See what happens.  Enter different numbers until
        you get the idea.
      U3L14 - moving memory challenge1_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge2_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge3_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge4_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge5_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge6_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L14 - User Input Division calculator_instruction: |
        Write a program that acts
        as a simple calculator. (click to see full instructions)
      U3L14 - Variable ReAssignment pt2_instruction: |
        Trace the code and predict
        what you think will be printed to the console. Then add a console.log statement
        at the end of the program to see the last value of someNum to see if your
        full prediction is correct. (click to see full Instructions)
      U3L15 - add code to make count down work_instruction: |
        Write code to make the
        down arrow work as expected. (Click to see full instructions)
      U3L15 - Add reset button to UpDown app_instruction: |
        Add code so that clicking
        the start over button will reset the game and send you back to the main screen.
        (Click to see full instructions)
      U3L15 - clicker update score_instruction: |
        Add code to update the score when
        the apple is clicked. (Click to see full instructions)
      U3L15 - count upDown bug forget to set text_instruction: |
        Find the bug in the
        program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug logic error wrong update_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug var not created globally_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - Debug forget to update var on reset in UpDown app_instruction: |
        Run
        the app, and click the up or down button until you get to the gameOverScreen.
        Click 'Start Over' and try the app again. Find and fix the issue in the
        code. (Click to see full instructions)
      U3L15 - Debug if never triggers in UpDown app_instruction: |
        Run the app and
        use the up and down arrows to try to hit the gameOverScreen. You can't! Find
        and fix the issue in the code. (Click to see full instructions)
      U3L15 - Debugging Simple If-statements =v==_instruction: |
        Run the app, and
        click the up button. Then restart and run it again, and click the down button.
        Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L15 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L15 - mini clicker update score_instruction: |
        Add code to update the score
        when the apple is clicked. (Click to see full instructions)
      U3L15 - practice with setText_instruction: |
        Use setText to complete the click
        event handler for the down arrow. (Click to see full instructions)
      U3L15 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L15 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer working. (Click to see full instructions)
      U3L15 click add lives_instruction: |
        Add lives to the clicker game that decrement
        by 1 when the background image is clicked (Click to see full instructions)
      U3L15 full clicker app_instruction: |
        Complete your clicker game! (Click to
        see full instructions)
      U3L16 - challenge say hi app_instruction: |
        Write a greeting to the user when
        they hit 'enter' in the text input, using the 'change' event. (Click to
        see full instructions)
      U3L16 - chaserApp_instruction: |
        Create your own "Chaser Game." (Click to
        see full instructions)
      U3L16 - chooseImages_instruction: |
        Replace the image in your application with
        one of your own. (Click to see full instructions)
      U3L16 - doubleQuotes_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: |
        Introducing objects other than
        buttons! - textLabels and images.  First try replacing your button with a
        textLabel.  Will the text respond to events just like the button?  Try connecting
        an event handler to it.  We've started you out with code similar to the result
        of the last level, you can copy your code from that level into here if you
        prefer. 
      U3L16 - images_instruction: |
        Introducing Images.  Try replacing the textLabel
        with an image..  Will the image respond to events just like the button?  Try
        connecting an event handler to it.  We've started you out with code similar
        to the result of the last level, you can copy your code from that level into
        here if you prefer. 
      U3L16 - intro getText_instruction: |
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      U3L16 - introSetPosition_instruction: |
        Move the buttons to the bottom of the
        screen. (Click to see full instructions)
      U3L16 - introStrings_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - nameAgeTemplate_instruction: |
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      U3L16 - newEventTypes_instruction: |
        Experiment with different event types and
        select the one that you think is best. (Click to see full instructions)
      U3L16 - outputWithTextArea_instruction: |
        Output a message to the 'textArea'
        (Click to see full instructions)
      U3L16 - projectTemplate_instruction: |
        Create your own "Chaser App". (Click
        to see full instructions)
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: |
        Modify the code so that the turtle
        moves to a random screen location when the button is clicked. (Click to see
        full instructions)
      U3L16 - singleSetPosition_instruction: |
        Move the button to the middle of the
        screen. (Click to see full instructions)
      U3L16 - stringsVsNumbers_instruction: |
        Run the program to see how strings and
        numbers behave with different arithmetic operators. (Click to see full instructions)
      U3L16 - text labels_instruction: |
        Use the textLabel command to replace the
        button in your program with a text label. (Click to see full instructions)
      U3L16 - textInput getText write_instruction: |
        Add an Text Input box for the
        name and age. (Click to see full instructions)
      U3L16 - toUpper_instruction: |
        Make the name of the user appear in uppercase
        (Click to see full instructions)
      U3L16 - use images_instruction: |
        Use the image command to replace the text
        label in your program with an image. (Click to see full instructions)
      U3L16 Mad Lib Clear Input_instruction: |
        Clear the user's previous text when
        the Play Again button is clicked (Click to see full instructions) 
      U3L16 Mad Lib Demo_instruction: 'Mad Libs Demo - Try it out!'
      U3L16 Mad Lib getText_instruction: |
        Before setting the text area with your
        Mad Libs outline, get the user's text and incorporate their responses. (Click
        to see full instructions) 
      U3L16 Mad Lib setText_instruction: |
        When the Next button is clicked, set the
        text area to have the main outline of your How-to Mad Libs (without the user's
        input). (Click to see full instructions) 
      U3L16 Mad Lib Student Setup_instruction: |
        Back to Mad Libs: To get started,
        set up the two screens for your Mad Libs app (Click to show full instructions)
      U3L16 Mad Lib toUpper_instruction: |
        Apply the toUpperCase and toLowerCase string
        functions to the user's text. (Click to see full instructions) 
      U3L17 - getAndSetKeyValue_instruction: |
        Create an image like app. (Click to
        see full instructions)
      U3L17 - getKeyValue_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introCallbacks_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - readKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - setKeyValue_instruction: |
        Create and update your key value pairs using
        setKeyValue. (Click to see full instructions)
      U3L17 - twoSetKeyValue_instruction: |
        Run the program several times to observe
        how often setKeyValue commands arrive out of order. (Click to see full instructions)
      U3L18 comparison operators_instruction: |
        Use console.log to print out the different
        boolean expressions below to see what information they return. (Click to see
        full instructions)
      U3L18 comparison operators_for_video_instruction: |
        Use `console.log` to print
        out the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      U3L19 - Clicker Game Freeplay Area_instruction: |
        Use this App Lab area to improve
        your clicker game.  You should start by copy/pasting the code from your old
        game here.  We're showing a more full set of blocks in the toolbox - some
        of the things you might not have used yet.  Feel free to explore then and
        experiment if you want to.  Everything else you need should be shown.  Have
        fun!
      U3L19 - Debugging with consoleLog_instruction: |
        Add console.log() statements
        to find out the value of a and b after the first reassignment statement a
        = b; (Click to see full instructions)
      U3L19 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L19 - do concatenate string with var_instruction: "We've given you a piece\nof code from the previous screen.  Try changing the value assigned to foo\nto see the string change. \\r\nDo this: \\r\n1. Try changing the value assigned\nto foo to see the string change. \\r\n2. By only modifying the lines of code\nthat were given to you, try to get the output to say: “The value of foo is:\n9.  And isn’t that fine.” \\r\n"
      U3L19 - fix the var name syntax error v2_instruction: |
        Fix the error and get
        it to print the value of both variables (Click to see full instructions)
      U3L19 - fix the var name syntax error_instruction: |
        Fix the error and get it
        to print the value of both variables (Click to see full instructions)
      U3L19 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L19 - practice with setText_instruction: |
        Add another button that changes
        the text to the value of a new variable. (Click to see full instructions)
      U3L19 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L19 - Target Clicker App_instruction: |
        Investigate the new elements of the
        'chaser-game'
      U3L19 - test reassignment of two vars_instruction: |
        Predict the value of a
        and b. Add console.log statements to find out the actual value of a and b.
        (Click for full instructions)
      U3L19 - three basic ops of variables_instruction: |
        Add another variable called
        "lives" and set the value to 3. Print the value of the variable to the console.
        (Click to see full instructions)
      U3L19 - try out console log_instruction: "Try out console.log.  Do this: replace\nthe statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).  Run\nthe program and you should see the output show up in the console area below\nthe workspace.  Then try adding a few more console.log statements.  Display\nsome text.  Make another variable and display that.  \\r\nThe app screen will\nbe blank -- that's the point.  With console.log you can test output behind\nthe scenes in a way the user cannot see.  \\r\n\\r\n\\r\nGIF: U3L19-useconsolelog.gif"
      U3L19 - up down count practice app_instruction: |
        Set up the down button to
        decrease the value of count by 1 each time it is clicked. (Click to see full
        instructions)
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        Make a prediction
        about the ending values of a, b, and c. Then use console.log to check your
        understanding (Click to see full instructions)
      U3L19 - variable reassignment part 1_instruction: |
        Predict the value of a and
        b. Add console.log statements to find out the actual value of a and b. (Click
        for full instructions)
      U3L19 - variable scope problem 2_instruction: |
        What is happening with foo?
        Play with the level to try to figure it out. (Click to see full instructions)
      U3L19 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer work. (Click to see full instructions)
      U3L19 - write var and string with same name v2_instruction: |
        Fix the code so
        that the values of both variables print to the console. (Click to see full
        instructions)
      U3L19 - write var and string with same name_instruction: |
        Fix the code so that
        the value of both variables prints to the console. (Click to see full instructions)
      U3L2 Using Simple Commands (no tooltips)_instruction: |
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      U3L2 Using Simple Commands_instruction: |
        Draw a 1x1 square above and to the
        left of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: |
        Add if, else if, and else statements
        to detect the movie genres Comedy, Romance, Action, and Horror. (Click to
        see full instructions)
      U3L23 Chatbot Intro 1a_instruction: |
        Store the user's input inside a variable
        and log it to the console.
      U3L23 Chatbot Intro 2_instruction: |
        Use string concatenation to store the user's
        input and assistant's answer into the conversation variable using the format
        "User: <input><bot name>: <default response>" . Log the conversation to
        the console.
      U3L23 Chatbot Intro 2a_instruction: |
        Display the conversation onto the "text_area"
        element. Optional: clear the user's input after every "change" event.
      U3L23 Chatbot Intro 3_instruction: |
        Add newline characters "\
        " to separate
        the user's input and the computer's response.
      U3L23 Chatbot Intro 4_instruction: |
        Use this level to make your chatbot look
        and work better!
      U3L23 Chatbot Intro_instruction: |
        Choose a specialization topic for your digital
        assistant. Create a basic digital assistant that takes the user's input and
        displays back a default response.
      U3L23 Digital Assistant 1_instruction: |
        Set the text_area element to display
        the user's input from the text_input element.
      U3L23 Digital Assistant 2_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 3_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 4_instruction: |
        Display the user's input and the digital
        assistant's response on different lines.
      U3L23 Digital Assistant 5_instruction: |
        Start the user's command with the
        phrase "User:" and the digital assistant's response with the phrase "Bot:"
      U3L23 Digital Assistant 6_instruction: |
        When the user hits Run, display the
        text "I'm a generic digital assistant. Ask me anything!"
      U3L24 Basic String Parsing 1_instruction: |
        Use the function "userInput.indexOf(<food>)"
        to check if the strings "pizza" or "soup" are anywhere in the user's
        response.
      U3L24 Chatbot Basic Conditionals_instruction: |
        Check out the project description
        for instructions. (Click to see full instructions.)
      U3L24 Chatbot Conditionals 2_instruction: |
        Adjust the "if" block to make
        the bot respond "I don't know that color." if the user types anything besides
        "blue"
      U3L24 Chatbot Conditionals 3_instruction: |
        Adjust the "if/else" block to
        make the bot respond to the colors blue, red, and green, and to two additional
        colors.
      U3L24 Chatbot Keyword Record_instruction: |
        Use the next level to record your
        digital assistant's keywords/phrases.
      U3L24 Chatbot Nested Conditionals_instruction: |
        Add a chained conditional with
        at least 3 "else if" statements to your personal assistant.
      U3L24 introIncludes_instruction: |
        Practice using the includes command. (Click
        to see full instructions)
      U3L24 Nested Conditionals 1_instruction: |
        Change all of the boolean expressions
        to use includes instead of ==. (Click to see full instructions)
      U3L24 Nested Conditionals 2_instruction: |
        Nest your movie genre if statements
        inside the if statements to check for a ? in the input. 
      U3L24 Nested Conditionals Bugs 2_instruction: |
        Fix the problem with the code
        so that all the conditions can be reached. (Click to see full instructions)
      U3L24 Nested Conditionals Bugs 3_instruction: |
        Fix the bugs that still exist
        in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs_instruction: |
        Expose the bugs in this problem
        by typing inputs into the user-input box. Track which inputs cause unexpected
        outputs.
      U3L25 - drag out key event_instruction: |
        Set up an event handler to respond
        to keypress events, and display event.key in the console. Hit keys on the
        keyboard to see what happens. (Click to see full instructions)
      U3L25 - play sound when up key_instruction: |
        Change the code so the sound will
        only play when the up arrow is pressed. (Click to see full instructions)
      U3L25 Chatbot Strings_instruction: |
        1. Adjust your digital assistant to evaluate
        inputs the same way whether the inputs are capitalized or lowercase. 2. If
        a user asks "What is <phrase>?", where <phrase> is an input your digital
        assistant does not recognize, make your digital assistant respond "I don't
        know what <phrase> is."
      U3L25 String Parsing 1_instruction: |
        Given the string "Wisdom begins with
        wonder." what is the index of the following characters W, t, w, ., d, and
        k? Confirm your expectation using the string.indexOf() function.
      U3L25 String Parsing 2_instruction: |
        Use str.length to find the length of the
        strings “Hello World”, “Computer science rocks!", and “I promise to do my
        homework every day.”
      U3L25 String Parsing 3_instruction: |
        Write a password length checker that writes
        “yes” to the console if a string has a length greater than 10, or “no” if
        it is less than or equal to 10.  Test your function using two strings, one
        that will satisfy each conditional option.
      U3L25 String Parsing 4_instruction: |
        You are given the string "Wisdom begins
        with wonder." Use the string.substring(begin, end) function to print "begin"
        and "nder" to the console.
      U3L25 String Parsing 5_instruction: "Fill in the function, findBeginNder()\nto get the strings \"begin\" and \"nder\" from a sentence no matter where\nin the sentence they exist.\\r\nPrint the strings and their index to the console.\n"
      U3L25 String Parsing 6_instruction: |
        Write a function that takes a name (first
        last) and reorders it (last, first).
      U3L25 String Parsing 7_instruction: |
        You are given the string “The earth has
        music for those who listen.” Manipulate it using the functions str.toUpperCase()
        and str.toLowerCase().
      U3L26 AND operator_instruction: |
        Update the genre and rating if statements
        to give only one movie suggestion at a time. (Click to see full instructions)
      U3L26 Chatbot Compound Conditionals_instruction: |
        Update your digital assistant
        to include at least one each of AND, OR, and NOT
      U3L26 Chatbot Final_instruction: |
        Update your digital assistant to include
        at least one each of AND, OR, and NOT
      U3L26 Compound Logic_instruction: |
        Write a conditional statement that detects
        if a command contains all the phrases "2000" "animated" and "G-rated."
        If all these phrases are detected, make Movie Bot respond "The top grossing
        animated and G-rated film in the 2000 decade was Finding Nemo."
      U3L26 NOT operator_instruction: |
        Write a conditional statement that detects
        if a command does not contain the phrase "bad." If "bad" is not detected,
        make Movie Bot respond normally. Otherwise, make Movie Bot respond "Sorry,
        I don't know about bad movies." 
      U3L26 OR operator_instruction: |
        Update the if statement to use an OR to check
        for a "?" as well as who, what, where, when, why, how in the user input.
        (Click to see full instructions)
      U3L27 Chatbot Final_instruction: |
        Make your digital assistant awesome and when
        you are finished, ask one of your classmates to test it for you using the
        activity guide. As you add features to your digital assistant, track them
        on the next level.
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: |
        Draw a square to the front and to the
        right of the starting location. (Click to show full instructions)
      U4 - add createRecord to contacts App_instruction: |
        Add code to your contacts
        app so that newly-added contacts are saved in a table. (Click to see full
        instructions)
      U4 - Add Row By Hand_instruction: |
        Add a new record to your table in the Data
        Viewer. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords 1_instruction: |
        Use the drawChartFromRecords
        block to create a scatter plot from the table in the database. (Click to see
        full instructions)
      U4 - Charts - drawChartFromRecords Options 1_instruction: |
        Add a title to your
        chart and change the colors of your lines using the options parameter of drawChartFromRecords.
        (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 2_instruction: |
        Look through the
        drawChartFromRecords API and choose some more options to customize. (Click
        to see full instructions)
      U4 - Charts - drawChartsFromRecords 1_instruction: |
        Add screen element, pull
        out drawCharts block, run the program!
      U4 - Charts - Export Data_instruction: |
        Export the data from the “ages” table
        as a CSV file, then remix this app and import the CSV file. (Click to see
        full instructions)
      U4 - Charts - Import Data 1_instruction: |
        Download the CSV file we’ve provided,
        and then use the data viewer to import the data from the file into the “mytable”
        table. (Click to see full instructions)
      U4 - Charts - Import Data 2_instruction: |
        Call readRecords on “mytable” and
        print each record to the console. (Click to see full instructions)
      U4 - Charts - Line Chart 1_instruction: |
        Create a line chart showing the change
        in popularity of “#tbt” over time. (Click to see full instructions)
      U4 - Charts - Line Chart 2_instruction: |
        Add a second line to your chart to
        show the change in popularity of both “#tbt” and “#nofilter” at the same time.
        (Click to see full instructions)
      U4 - Charts - Line Chart Template_instruction: This is a template.
      U4 - Charts - Remixing Apps with Data_instruction: |
        Run this app and see what
        it prints to the console. Then remix the app and run the remixed version to
        see what happened to the data. (Click to see full instructions)
      U4 - Charts - Scatter Chart_instruction: |
        Create a scatter plot of the “rottenTomatoes”
        table, using the new table and column names. (Click to see full instructions)
      U4 - CreateRecord - 1_instruction: |
        Add a createRecord command and run the
        program. (Click to see full instructions)
      U4 - CreateRecord - 2.5_instruction: |
        Change the table name in createRecord
        then check the Data Viewer to see the new table. (Click to see  full instructions)
      U4 - CreateRecord - 2_instruction: |
        Change the name from "Alice" to something
        else in the createRecord command.  Run the program and use the Data Viewer
        to see the changes to your table. (Click to see full instructions)
      U4 - CreateRecord - 3_instruction: |
        Use createRecord to add the song object
        as a record to a table. (Click to see full instructions)
      U4 - CreateRecord - 4_instruction: |
        Run the program. Verify the song object
        was added to the database. Note the callback function now displays the copy
        of the record sent back back by the database. (Click to see full instructions)
      U4 - CreateRecord - 5_instruction: |
        Add a property to the JavaScript object,
        then run the program.  View the data table and see how changing the object
        affects the data table. (Click to see full instructions)
      U4 - debug column names are case sensitive_instruction: |
        Change song.title
        to song.Title (capital T).  And run the program.  Check the data table  (Click
        to see full instructions)
      U4 - deleteRecords 0_instruction: |
        Use the deleteRecord command with default
        values. Verify the record was deleted. (Click for full instructions).
      U4 - deleteRecords 1_instruction: |
        Find the id of "Little Bunny Foo Foo"
        in the data table "mySongs".  Use the deleteRecord command to delete it.  See
        what happens when you try to delete an ID a second time. (Click for full Instructions).
      U4 - deleteRecords 2 delete object_instruction: |
        Use the song object to delete
        multiple objects in the database by changing only the "id" property. (Click
        for full Instructions).
      U4 - deleteRecords 2_instruction: |
        Using the data viewer, find the id of a
        a record you want to delete. Use the deleteRecord command to delete it. (Click
        for full instructions).
      U4 - Edit Data Table by Hand_instruction: |
        View the data table and click edit
        next to each row.  Add the artists names for each song by hand. (Click to
        see full instructions)
      U4 - Exploring Data Tools - Template_instruction: |
        Use createRecord to add
        the song object as a record to a table. (Click to see full instructions)
      U4 - fix contacts by hand in data table_instruction: |
        Use the data viewer to
        add rows to the data table.  Add the original hard-coded contacts from your
        app to the database. (Click to see full instructions)
      U4 - last stage test adding contcts_instruction: |
        Confirm that new contacts
        you add are saved to the database.  Verify that after restarting your app,
        the contacts you added no longer show in the app, but still exist in the database.
        (Click to see full instructions)
      U4 - Objects - accessingPropertiesInArray_instruction: |
        Access the properties
        of the objects stored in an array. (Click to see full instructions)
      U4 - Objects - arraysOfObjects_instruction: |
        Create an array called "students"
        and add all 5 student objects to the array. (Click to see full instructions)
      U4 - Objects - createContactObject_instruction: |
        Construct a new object from
        the user inputs, and append it to your array. (Click to see full instructions)
      U4 - Objects - createContactsData_instruction: |
        Add values to the three contact
        objects provided in the starter code. (Click to see full instructions)
      U4 - Objects - createDotNotation_instruction: |
        Create a student Object yourself.
        Add properties to your object one at a time using dot notation. (Click to
        see full instructions)
      U4 - Objects - createObject_instruction: |
        Create an object with at least 3
        properties and display it in the Debug Console. (Click to see full instructions)
        
      U4 - Objects - dotNotation_instruction: |
        Use dot notation to display individual
        properties of the object. (Click to see full instructions)
      U4 - Objects - eventHandlersToSwitchScreen_instruction: |
        Attach event handlers
        to the "Add Contact" and "Go Back" buttons that allow the user to switch
        screens. (Click to see full instructions)
      U4 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and mouse
        event and examine the event objects displayed in the console. Why might an
        object be the best way to store this information? (Click to see full instructions)
      U4 - Objects - exemplarContactsApp_instruction: |
        Use the Contacts app and then
        add a contact of your own. (Click to see full instructions)
      U4 - Objects - loopingArray_instruction: |
        Loop over your array of students
        and print the name of every students. (Click to see full instructions)
      U4 - Objects - loopingArray2_instruction: |
        Loop over your array of students
        and print the name and grade of every student. (Click to see full instructions)
      U4 - Objects - loopingCompoundConditions_instruction: |
        Loop over the array
        of students and display the information of students who are present and in
        the 11th grade. (Click to see full instructions)
      U4 - Objects - loopingConditions_instruction: |
        Loop over your array of student
        objects and display the names of every student who is present in class. (Click
        to see full instructions)
      U4 - Objects - pullValues_instruction: |
        Create an event handler for the "Save
        Contact" button that displays the contents of the 4 text input fields in
        the console. (Click to see full instructions)
      U4 - Objects - readStarterCode_instruction: |
        Familiarize yourself with the
        starter code and UI elements provided. (Click to see full instructions)
      U4 - Objects - resetIndexAndShow_instruction: |
        Add code to your event handler
        for the "Save Contact" button so that when a new contact is added, the inputs
        are cleared, the screen is switched, and the correct contact is shown. (Click
        to see full instructions)
      U4 - Objects - showContact1_instruction: |
        Add code to the showCurrentContact
        function to show the name of the contact stored at the currentIndex of your
        array. (Click to see full instructions)
      U4 - Objects - showContact2_instruction: |
        Add the phone number and birthday
        text to your text area. (Click to see full instructions)
      U4 - Objects - showContact3_instruction: |
        Display the image information for
        each contact. (Click to see full instructions)
      U4 - Objects - showSampleImage_instruction: |
        Attach an event handler to the
        image URL text input so that the user can confirm their image will work as
        expected. (Click to see full instructions)
      U4 - Objects - writeWrap_instruction: |
        Use the wrap function to prevent currentIndex
        from leaving the bounds of your array. (Click to see full instructions)
      U4 - Read Record - 1.2_instruction: "Place a console.log command below the\nreadRecords command. (Click to see full instructions)\\r\n"
      U4 - Read Record - 1.3_instruction: "Add a console.log command inside the callback\nfunction. (Click to see full instructions)\\r\n"
      U4 - Read Record - 1_instruction: "Use console.log to display the records returned\nby a call to readRecords. (Click to see full instructions)\\r\n"
      U4 - Read Record - 2_instruction: "Change the table name so that the records\nare read from the new table. (Click to see full instructions)\\r\n"
      U4 - Read Record - 3_instruction: "Change the name of the table in a readRecords\ncommand to read from a table that does not exist. (Click to see full instructions)\\r\n"
      U4 - Read Record - 4.1_instruction: "Use indexes and dot notation to reference\nvalues in the response from the database. (Click to see full instructions)\\r\n"
      U4 - Read Record - 4_instruction: "Print out each record return from the readRecords\ncall individually. (Click to see full instructions)\\r\n"
      U4 - Read Record - 5_instruction: "Using a for loop, display the title of each\nmovie in your database. (Click to see full instructions)\\r\n"
      U4 - Read Record - part 1 - template_instruction: "Use console.log to display\nthe records returned by a call to readRecords. (Click to see full instructions)\\r\n"
      U4 - ReadRecords - Contacts App 1_instruction: |
        Use readRecords to copy the
        data in your database into your "contacts" global variable and call showCurrentContact.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 2_instruction: |
        Create a function called refreshLocalData.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 3_instruction: |
        Add a call to "refreshLocalData"
        to the callback function of the createRecord you use to add a new contact
        to your database. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 4_instruction: |
        Create a "Delete" button.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 5 make delete work_instruction: |
        Create an
        event handler for the "Delete" button you created. (Click to see full instructions)
      U4L02 - Objects - createObject_instruction: |
        Create an object with at least
        5 values including at least one string and one number. (Click to see full
        instructions) 
      U4L02 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and
        mouse event and examine the event objects displayed in the console. Why might
        an object be the best way to store this information? (Click to see full instructions)
      U4L02 - Objects - Template1_instruction: Mal
      U4L06 Data Storage 1_instruction: "Fill in your name instead of \"Enter Your\nName\", run the app and click the button. Run it multiple times with different\nnames! Watch the console and use the ‘View Data” button to see how the table\nis updated. As you play around make sure you can explain the purpose of each\nof the circled parts of the diagram.\\r\n\\r\n"
      U4L06 Data Storage 2_instruction: "The app is a continuation of the previous\none we started. Add a text label to collect the users name and use that as\nthe data input for the record.\\r\n\\r\nRun the app and click the button multiple\ntimes and see what happens. Is there a problem you notice? "
      U4L06 Data Storage 3_instruction: |
        We want to improve the user experience.
        Once they have submitted their data for storage, it would be nice to clear
        the textbox.  Update your app to clear the textbox after the data is stored.
      U4L06 Data Storage 4_instruction: |
        Add a label and drop down box, to your app
        and save the data to your JSON object and add it to your table. Make sure
        to reset the dropdown after the data is stored.
      U4L06 Data Storage 5_instruction: |
        Add a couple radio buttons or checkboxes
        to our app. Then find a way to collect the data from those. 
      U4L06 Data Storage 6_instruction: |2
         Use one of the getTime() and getUserId()
        blocks to collect additional data. 
      U4L06 Data Storage 7_instruction: |
        Add a second screen to the sample app we
        have been building to capture an image from a user. Return to screen 1 after
        the JSON object has been stored in the table.
      U4L15 Read Data 1_instruction: |
        Run the level and see what happens. Then edit
        the code to make it print a different column of information.
      U4L15 Read Data 2_instruction: "Student should create a sentence which puts\ntogether all the pieces from a record.\\r\n\\r\n<<Name>> is <<Age>> years old\nand like <<Food>>"
      U4L15 Read Data 3_instruction: "Print the sentence using the first JSON object\nin the array\\r\n\\r\n"
      U4L15 Read Data 4_instruction: "\\r\nUse a random record from the list of records\nto display your sentence."
      U6 - Final Project - Project Level_instruction: |
        Build your final project here.
        (Click to see full instructions)
      U6 - updateRecord - Callback Success Parameter_instruction: |
        Add an if-else
        block inside the callback function for updateRecord. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit event handler_instruction: |
        Write event
        handlers for the Edit Contacts UI elements. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit UI_instruction: |
        Set up the UI elements
        needed to edit contacts. (Click to see full instructions)
      U6 - updateRecord - Contacts - Save edited contact_instruction: |
        Use updateRecord
        to store the user's edits in the database. (Click to see full instructions)
      U6 - updateRecord - Default Block_instruction: |
        Use updateRecord to change
        the record for "Eye of the Tiger." (Click to see full instructions)
      U6 - updateRecord - Update Nonexistent Record_instruction: |
        Force updateRecord
        to fail by changing the ID of songToUpdate. (Click to see full instructions)
      Underground Avoiding Lava_instruction: 'Lava er gøymt under nokre av desse blokkene. Dei er du nøydd til å dekke over før du går framover. Ein "viss"-kommando vil vera nyttig. Legg til ein "gå framover"-kommando på rett stad for å grave ut desse blokkene.'
      Underground If Statements_instruction: 'No begynnar ting å bli vanskeleg. Grav ut 3 redstone, men ikkje dett ned i lavaen. Bruk ein "viss"-kommando til å plassere brustein over all lavaen du grev fram.'
      Underground Iron_instruction: Å gå inn i smelta lava er ein dårleg ide. Plassèr brustein over for å lage ei bru, og grav ut minst to av jern-blokkene.
      Underground Mine in a Circle_instruction: "Finn ein måte å få 5 diamantar og 7 redstone! Prøv å bruke ein gjenta-kommando inni ein annan gjenta-kommando for å gå i ein firkant.\\r\n"
      Underground Mining Coal_instruction: Du vil finne dei mest verdfulle ressursane under jorda, men det kan bli mørkt. Sett ut minst 2 faklar og grav ut minst 2 kol.
      Underground Test Level_instruction: Samle alle minerala!
      Vigenere_instruction: Test
      WhileAdventure_instruction: |
        Our adventurer wants to collect coins. Can you
        help her grab as many as she can using only one remove 1 block?
      XML Scratchpad_instruction: Using this test level to grab xml for unit tests
