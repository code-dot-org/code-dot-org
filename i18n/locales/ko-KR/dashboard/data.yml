ko:
  data:
    script:
      name:
        20-hour:
          desc: K-8 학생들에 대한 컴퓨터과학 기초 코스
          Unplug1: 1 단계
          Maze: 2 단계
          Unplug2: 3 단계
          Unplug3: 4 단계
          Artist: 5 단계
          Unplug4: 6 단계
          Artist2: 7 단계
          Unplug5: 8 단계
          Farmer: 9 단계
          Unplug6: 10 단계
          Artist3: 11 단계
          Unplug7: 12 단계
          Farmer2: 13 단계
          Unplug8: 14 단계
          Artist4: 15 단계
          Unplug9: 16 단계
          Farmer3: 17 단계
          Unplug10: 18 단계
          Artist5: 19 단계
          Unplug11: 20 단계
        Hour of Code:
          desc: Hour of Code
          Maze: 1 단계
        Edit Code:
          desc: 코드 수정(beta)
          MazeEC: 1 단계
        2014 Levels:
          desc: Bounce (beta)
          Bounce: 1 단계
        Builder Levels:
          desc: 창작 퍼즐 (beta)
          Custom: 1 단계
        Flappy Levels:
          desc: 플래피 버드
          Flappy: 1 단계
        Jigsaw Levels:
          desc: 직소퍼즐 (beta)
          Jigsaw: 1 단계
        Step Levels:
          desc: 미로 (beta)
          MazeStep: 스테이지 단계
        edit-code:
          desc: 코드 수정(beta)
          MazeEC: 1 단계
          Webapp: 2 단계
          ArtistEC: 3 단계
          StudioEC: 4 단계
        events:
          desc: Bounce (beta)
          Bounce: 1 단계
          Studio: 2 단계
        builder:
          desc: 창작 퍼즐 (beta)
          Custom: 1 단계
        flappy:
          desc: 플래피 버드
          Flappy: 1 단계
        jigsaw:
          desc: 직소퍼즐 (beta)
          Jigsaw: 1 단계
        step:
          desc: 미로 (beta)
          MazeStep: 스테이지 단계
        wordsearch:
          desc: 말하는 벌 (beta)
          WordSearch: 1 단계
    game:
      name:
        Unplug1: 컴퓨터과학(Computer Science, 정보과학) 소개
        Maze: 미로 퍼즐
        Multi: 객관식 선택 문제
        Unplug2: 컴퓨터과학적(정보과학적)사고
        Unplug3: 모눈종이 프로그래밍
        Artist: The Artist
        Unplug4: 알고리즘
        Artist2: 예술가 퍼즐 2
        Unplug5: 함수
        Farmer: 농부 퍼즐
        Unplug6: 조건
        Artist3: 예술가 퍼즐 3
        Unplug7: 노래 만들기
        Farmer2: 농부 퍼즐 2
        Unplug8: 추상화
        Artist4: 예술가 퍼즐 4
        Unplug9: 릴레이 프로그래밍
        Farmer3: 농부 퍼즐 3
        Unplug10: 인터넷
        Artist5: 예술가 퍼즐 5
        Unplug11: 마무리
        MazeEC: 미로 퍼즐
        Bounce: Bounce
        Flappy: 플래피 버드
        Jigsaw: 퍼즐 맞추기
        MazeStep: 미로 단계별 모드
        Wordsearch: 단어 탐색
        Webapp: 웹 앱
        ArtistEC: The Artist
        TextMatch: 글자 맞추기
        StudioEC: Play Lab
    trophy:
      name:
        Bronze: 동
        Silver: 은
        Gold: 금
    concept:
      description:
        sequence: 순서
        if: 조건 실행
        if_else: 선택
        loop_times: 반복(횟수)
        loop_until: 반복(~할 때까지)
        loop_while: 반복(~인 동안)
        loop_for: 카운터
        function: 함수
        parameters: 함수(값 전달)
    level:
      instructions:
        maze_2_2: '나쁜 돼지를 잡을 수 있게 도와줄 수 있겠어? "앞으로 이동" 블럭을 몇 개 모아서 붙인 다음, "실행하기"를 누르면 돼. '
        maze_2_1: 초록 돼지가 내 깃털들을 마구 헝클어 놓고 있어. 돼지를 찾을 수 있게 도와줘!
        maze_2_2_5: 길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이 헝클어지지 않도록 해야 돼!
        maze_2_3: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
        maze_2_4: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 되. 돼지를 못 잡으면, 화가 날 것 같아!
        maze_2_5: 블럭을 2개 만 더 사용해서, 돼지를 잡을 수 있는 방법이 있어. 어떻게 하는지 알아낼 수 있을까?
        maze_2_6: 블럭을 3개 만 사용해서, 자기 마음대로 돌아다니는 초록 돼지를 잡을 수 있게 해줘.
        maze_2_7: '블럭을 최대한 적게 사용해서, 나쁜 돼지를 쫓아낼 수 있게 해줘. "반복(횟수)" 블럭을 한 개 이상 사용하면 될꺼야.'
        maze_2_8: '회색 블럭은 지울 수 없습니다. 3번 반복 실행되는 "반복(횟수)"블럭을 이용해 퍼즐을 해결하세요. 회색 "반복(횟수)" 블럭 안에 3개의 블럭을 넣으세요 : "이동", "이동", "방향 바꾸기"'
        maze_2_9: '"반복(~할 때까지)" 블럭은, 짜증나는 돼지에게 도착~할 때까지, 계속 반복시켜 줄 꺼야.'
        maze_2_10: '이번에는 마지막 연습이야 - 블럭을 4개 만 사용해서 해결 할 수 있겠어?'
        maze_2_11: 여~어~러~부~운~~~. 나 좀비... 배고파... 해바라기 가지고 싶어... 블럭 5개 만 가지고 가능할까?
        maze_2_12: 이번 것도 비슷한데 약간 달라. 블럭을 5개만 가지고 가능하겠어?
        maze_2_13: '"만약" 블럭을 이용하면, 언제 돌아야 할지 판단할 수 있어. 힌트: 블럭을 1개 더 사용하면 되지만, 이번에 "만약" 블럭을 사용하는 방법을 배워야, 다음 퍼즐을 해결할 때 사용할 수 있어.'
        maze_2_14: '음... 이번이 마지막 퍼즐이야!, "만약" 블럭하고 "반복" 블럭을 함께 사용해야 돼.'
        maze_2_15: '나... 해바라기... 가지고 싶어~! "만약" 블럭을 사용해서, 블럭을 최대한 적게 사용해서 해바라기로 보내 줘.'
        maze_2_16: '좋아... 한 번 더 해보자~ - 이번 것도 그렇게 어렵지는 않지만, 식충식물들을 조심해야 돼!'
        maze_2_17: '"조건/선택" 블럭은, 검사를 한 다음에 그 결과에 따라 하나의 작업을 실행해 줘. 이 새로운 블럭을 이용해서, 나를 해바라기로 보내 줘.'
        maze_2_18: '"조건/선택" 블럭을 다시 한 번 사용해 보자~, 한 번에 성공할 수 있을까?'
        maze_2_19: 블럭을 3개 더 붙여서, 좀 더 복잡한 미로를 빠져나갈 수 있도록 할 수 있겠어? 네가 성공하면 난, 아무리 크고 복잡한 미로라고 하더라도 거뜬히 통과할 수 있을 거야.
        turtle_1_1: 저는 예술가입니다. 원하는 모든 것을 그리도록 코드를 작성할 수 있습니다. 그림에서 회색 선을 따라 그릴 수 있도록 블럭들을 사용하세요.
        turtle_1_2: '자! 이제, 사각형을 그려봐. 참고: "색 설정" 블럭을 사용하면 원하는 색을 사용할 수 있어.'
        turtle_1_3: 블럭을 3개만 이용해서 사각형을 그려봐.
        turtle_1_4: '사용할 때마다 색이 바뀌는 "랜덤 색" 블럭을 사용해서, 세 변의 색이 다른 삼각형을 그려봐. 힌트: 돌기 블럭을 사용할 때에는 회전할 각도를 입력해 주어야 해.'
        turtle_1_5: 그럼 이번에는, 사각형 안에 삼각형이 들어있는 모양을 그려봐.
        turtle_1_6: '이 삼각형과 사각형을 어떻게 그릴 수 있을까? 힌트: 삼각형을 먼저 그린 후, 사각형을 그리기 위해 얼마나 회전해야 할 지를 생각해야 해.'
        turtle_1_7: '자. 이제 좀더 어려운 것을 해보자. - 초록색 안경을 그릴 수 있을까? 사각형은 각 변의 크기가 100 픽셀이고 , 50 픽셀 만큼 떨어져 있고, 초록 선으로 그려야 해!'
        turtle_1_8: 이 코드를 실행시켰을 때에는 어떤 일이 벌어질까? 나머지 그림을 완성시켜보자. 색은 실행시킬 때마다 달라진다.
        turtle_1_9: 원을 그리려면, 물음표로 표시된 부분에 어떤 수를 넣어야 할까?
        turtle_1_10: '성공했구나! 이제, 그리고 싶은 그림을 그려봐. 몇 가지 재미있는 아이디어 : 막대기 모양, 해바라기 모양, 달팽이 나선 모양. 새로운 "선 굵기" 블럭을 사용해 재미있게 그려봐!'
        turtle_4_1: '블럭을 3개만 가지고 각 변의 길이가 100 픽셀인 삼각형을 그릴 수 있을까요? 힌트: "반복" 블럭을 사용하면 됩니다.'
        turtle_4_2: '주어진 프로그램의 어딘가에 "방향 바꾸기 90도" 블럭을 추가해 삼각형들을 그려보세요.'
        turtle_4_3: '삼각형을 그리는 코드가 있습니다. "반복" 블럭과 "돌기" 블럭을 추가해서, 예쁜 꽃을 그릴 수 있을까요?'
        turtle_4_4: '이전 퍼즐과 같은 코드인데, 각각의 삼각형을 그린 다음에 36도 만 회전합니다. 몇 번 반복해야 할까요? (힌트: 360 도를 회전하면 처음 상태로 되돌아 옵니다.)'
        turtle_4_5: '이전 퍼즐과 같은 코드인데, 36번 반복 회전합니다. 몇 도씩 회전 해야할까요? (힌트: 360 도를 회전하면 처음 상태로 되돌아 옵니다.)'
        turtle_4_6: 블럭을 3개만 사용해서, 한 변의 길이가 20 픽셀인 사각형을 그릴 수 있을까요?
        turtle_4_7: '이전 퍼즐에서 사각형 그리는 코드를 그대로 가져왔습니다. 사각형을 10개 붙여 사다리 모양을 만들 수 있을까요? 힌트: 블럭을 2개 만 더 사용하면 가능합니다.'
        turtle_4_8: 이전 퍼즐의 답이 여기 있습니다. 2 개의 블럭을 더 붙여서 그림을 완성할 수 있을까요?
        turtle_4_9: 이전 퍼즐의 답이 여기 있습니다. 몇 도를 회전해야 그림을 완성할 수 있을까요? (몇 번 시도해 보면 쉽게 찾아낼 수 있습니다.)
        turtle_4_10: 이전 퍼즐의 답이 여기 있습니다. 몇 번 반복해야 그림을 완성할 수 있을까요?
        turtle_4_11: '다른 모양들을 만들기 위해, "돌기"/"반복" 블럭의 갯수나 코드를 바꿔보면서 여러 가지 그림을 그려 보세요.'
        maze_karel_1_1: '안녕하세요! 저는 농부입니다. 농장에 있는 밭을 고르게 만들어 식물들을 심고 싶어요. 흙더미로 이동해서 "치우기" 블럭을 사용하면 됩니다.'
        maze_karel_1_2: '자 이제! 구덩이로 이동한 후, "메우기" 블럭을 2번 사용해 구덩이를 메울 수 있게 도와주세요.'
        maze_karel_1_3: 블럭을 최대한 적게 사용해서, 흙더미를 치울 수 있는 방법을 알려주세요.
        maze_karel_1_4: '4 개의 흙더미를 모두 치울 수 있도록 도와줄 수 있나요? 힌트: "반복" 블럭을 사용해 보세요.'
        maze_karel_1_5: '5 번 메워야 하는 구덩이들을 모두 없앨 수 있도록 도와주세요. 힌트: "반복(~인 동안)" 블럭 안에 "반복(횟수)" 블럭을 넣으면 할 수 있습니다.'
        maze_karel_1_6: '블럭을 최대한 적게 사용해서 모든 흙더미를 치울 수 있게 도와주세요. "반복(~인 동안)" 블럭에서 선택하면 흙더미 위에 있는지, 구덩이 위에 있는지를 판단해 반복 실행할 수 있습니다.'
        maze_karel_1_7: 와! 진짜 깊은 구덩이를 발견했어요! 이 구덩이를 없애려면 몇 번 메워야 할 지 모르겠네요. 구덩이를 없앨 때까지 메우는 프로그램을 만들 수 있을까요?
        maze_karel_1_8: 블럭을 최대한 적게 사용해서 밭 끝에 있는 구덩이를 메울 수 있게 도와주세요.
        maze_karel_1_9: '흙더미를 모두 치울 수 있게 도와주세요. 블럭을 최대한 적게 사용하세요. 힌트: "반복(~인 동안)" 블럭을 사용해 보세요.'
        maze_karel_1_10: '늦게까지 일을 하느라 어두워졌네요, 흙더미가 어디에 있는지 알수가 없어요. 이제 "반복(~인 동안)" 블럭을 사용할 수 없습니다. 밭을 가로질러 가면서 흙더미가 있으면 치울 수 있게 도와주세요.'
        maze_karel_1_11: '아직도 어둡습니다. 밭을 가로질러 가면서 흙더미가 있으면 치우고, 구덩이가 있으면 메울 수 있게 도와주세요. 힌트: "만약" 블럭의 메뉴를 사용해 보세요.'
        turtle_2_1: '안녕하세요. 저는 예술가 좀비입니다. 그리기가 너무 좋아요! 특별한 색으로 사각형을 그릴 수 있게 도와주세요. 중요: 이전에 사용되었던 블럭들이 분류 되어있습니다.'
        turtle_2_2: '함수 사용 퍼즐에 온 것을 환영합니다. 함수 블럭을 사용하면, 새로운 블럭을 직접 만들어 사용할 수 있습니다! "함수" 분류에서, 새로운 "사각형 그리기" 블럭을 찾아, 50x50 크기의 초록 사각형을 그려보세요.'
        turtle_2_3: '"반복" 분류에 있는 "반복(횟수)" 블럭을 사용해서, 100 픽셀 크기의 정사각형을 120도 만큼 씩 회전시켜 그려보세요. 랜덤 색도 사용하세요.'
        turtle_2_4: '자 이제, 더 멋진 것을 만들어 봅시다. 100 픽셀 크기의 사각형 36개를 10 도씩 회전시켜서 그리는 코드로 수정하면 됩니다. 힌트: 더 빨리 움직이게 하려면 슬라이더를 이용하세요.'
        turtle_2_5: '50, 60, 70, 80, 90 픽셀 크기의 정사각형들을 그려보세요. "사각형 그리기" 함수 블럭을 5 번 사용면 됩니다.'
        turtle_2_6: '이번에는 사각형들을 그리기 위해서 카운터를 사용해 봅시다. 한 변의 길이가 카운터와 같은 사각형들을 그려야 합니다. "카운터" 블럭을 사용하세요. 힌트: 변수 분류에 들어있습니다.'
        turtle_2_7: '이제, 달팽이 나선을 그려봅시다. 하지만 블럭이 실행되지 않도록 되어있습니다. "카운터" 블럭을 사용해서 달팽이 나선을 그려 보세요. 반복 분류 안에는 "카운트 : " 블럭이 있고, 변수 분류에는 변수 "카운터" 가 있습니다.'
        turtle_2_7_5: '이번에는 "눈사람 그리기" 함수가 있습니다.(함수 분류에 있음) 크기가 250, 100 인 눈사람 2개를 만들어 보세요.'
        turtle_2_8: '이번에는 잘 생각해야 합니다. "눈사람 그리기" 함수와, 동작 분류에 있는 "앞으로 점프" 블럭을 사용하세요. 3 개의 눈사람을 서로 다른 색으로 100 픽셀 만큼씩 띄워 그려보세요.'
        turtle_2_9: '"카운트 : " 블럭을 사용해, 110, 100, 90, 80, 70 크기의 눈사람 가족을 만드세요. 눈사람들은 60 픽셀 씩 떨어져 있어야 합니다.'
        turtle_2_10: 이번에는 다양한 달팽이 나선을 그리는 연습을 해보세요. 회전하는 비율을 바꾸면 어떻게 될까요? 반복 실행 구조에서 랜덤 색으로 바꾸면 어떻게 될까요? 아무거나 그려보세요.
        maze_karel_2_1: '밭에 있는 모든 흙더미와 구덩이를 없앨 수 있게 도와 주세요. "반복" 블럭을 활용하면 블럭을 여러 번 사용할 필요가 없습니다. 힌트: 반복 블럭 안에 다른 반복 블럭을 넣을 수 있습니다.'
        maze_karel_2_2: '"메우기 5번"이라는 블럭을 새로 만들어 "함수" 분류에 넣어 두었습니다. 그걸 이용해서 구덩이를 메울 수 있게 도와주세요.'
        maze_karel_2_3: '"메우기 5번" 함수 블럭을 이용해서, 모든 구덩이를 메울 수 있게 도와주세요. 함수 분류에서 "메우기 5번" 블럭을 가져와 사용하면 됩니다.'
        maze_karel_2_4: '"치우기 7번" 함수의 내용을 만들어주세요. 그리고 그 함수로 흙더미를 모두 치울 수 있게 도와주세요.'
        maze_karel_2_5: '"치우기 6번" 함수를 새로 만드세요. 그리고 그 함수로 흙더미를 모두 치울 수 있게 도와주세요.'
        maze_karel_2_6: '"메우기 8번", "치우기 8번" 함수를 사용해서 구덩이를 메우고, 흙더미를 치울 수 있게 도와 주세요.'
        maze_karel_2_7: 어머! 내 밭에 젖소가 있어요. 젖소를 피해서 흙더미를 치울 수 있는 새로운 함수를 만들어 주세요. 그 함수에 필요한 블럭들을 모두 넣으면 됩니다.
        maze_karel_2_8: '"젖소 피해 치우기 1번" 함수를 이용해서, 모든 흙더미를 치울 수 있게 해 주세요.'
        maze_karel_2_9: 위쪽으로 이동하면서 흙더미를 치울 수 있는 함수가 있습니다. 이 함수를 반복 블럭에 넣어서 모든 흙더미를 간단히 치울 수 있게 해주세요.
        maze_karel_2_10: 밭을 가로질러 이동하는데, 2개의 함수를 이용해서 모든 흙더미와 구덩이들을 없앨 수 있도록 도와주세요.
        turtle_3_1: '이번 퍼즐에는 "사각형 그리기" 함수와 "원 그리기" 함수가 정의되어 있습니다. 하지만, 함수가 정의되어 있다고 해서 실행되지는 않습니다. 사각형을 그리기 위해서는 "사각형 그리기" 블럭을 가져와 실행시켜야 합니다.'
        turtle_3_2: '"사각형 그리기" 함수를 살펴본 후, "삼각형 그리기" 함수를 만들어 보세요.'
        turtle_3_3: '고양이 주변에는 삼각형 울타리를 그리고, 젖소 주변에는 사각형 울타리를 그려주세요. 팁: 몇 번만 시도해 보면 알게 됩니다.'
        turtle_3_4: '"사각형 그리기" 블럭, "삼각형 그리기" 블럭을 이용해서 사자 집을 어떻게 만들지 생각해 보세요.'
        turtle_3_5: '이제, "집 그리기" 블럭을 새로 만들고, 그 블럭을 이용해서 고양이 2마리를 위한 집을 만들어 보세요. 힌트: "함수 이름" 이 적혀있는 블럭을 이용해서 새로운 블럭을 만들고, 원하는 이름을 넣어서 사용하면 됩니다.'
        turtle_3_6: '"사각형 그리기" 블럭을 살펴보고, "삼각형 그리기" 함수에 "길이" 값을 전달할 수 있도록 추가해 보세요. 그 다음에 다른 크기의 삼각형들을 그리면 됩니다. (힌트: 별 모양을 눌러 함수에게 어떤 값을 사용하도록 할 수 있습니다.)'
        turtle_3_7: '"집 그리기" 함수에 "길이"를 전달할 수 있도록 추가해서 코끼리 집을 만들어 보세요. (각 선의 길이는 150 픽셀)'
        turtle_3_8: '이전 퍼즐에서 사용된 블럭들이 모두 있습니다. "집 그리기" 함수를 수정해서 사용하고, 모든 집을 그린 후에는 마지막 집의 오른쪽 아래에 위치할 수 있도록 해보세요. 주어진 함수 블럭을 수정해서 3개의 집을 지으면 됩니다.'
        turtle_3_9: '"집 그리기" 함수를 아무 도움 없이 스스로 만들 수 있을까요? 도전해 보세요.'
        turtle_3_10: 지금까지 많은 것을 배웠습니다! 이제, 아무거나 원하는 것을 그려보세요. 별, 달팽이 나선, 눈 결정 등 멋진 것들을 상상하고 그려보세요.
        maze_karel_debug_seq_1: 잘못된 곳 찾기! 퍼즐에 오신 것을 환영합니다! 만들어져 있는 코드가 제대로 동작하지 않아요. 틀린 부분을 찾고, 수정해서밭을 평평하게 만들 수 있도록 도와줄 수 있겠어요?
        maze_karel_debug_seq_2: 어떤 것이 잘못된 것일까요? 어떻게 수정해야 흙더미를 모두 치울 수 있을까요?
        maze_karel_debug_repeat: 이 프로그램에서 잘못된 곳을 찾고 수정해서, 깨끗하고 평평한 밭을 만들 수 있게 도와주세요.
        maze_karel_debug_while: 구덩이를 메우기 위해서 이 프로그램을 어떻게 수정해야 할까요?
        maze_karel_debug_if: 도와주세요! 밭을 모두 평평하게 만들 수 있게 프로그램을 수정해 주세요.
        maze_karel_debug_if_else: 이 프로그램을 수정해서 구덩이와 흙더미를 모두 없앨 수 있게 도와주세요.
        maze_karel_debug_function_1: 흙더미를 모두 치우기 위해서 프로그램을 어떻게 바꿔야 할까요?
        maze_karel_debug_function_2: 구덩이와 흙더미를 모두 없앨 수 있도록, 프로그램에서 잘못된 곳을 찾고 수정해 줄 수 있나요?
        maze_karel_debug_function_3: 프로그램의 오류를 찾고 수정하면 흙더미들을 깨끗이 치울 수 있을 거에요.
        turtle_5_1: 프로그램을 실행시켜보고 어떤 일이 일어나는지 살펴보세요. 이해할 수 있을까요?(블럭들을 모두 지우고 완전히 새로 만들어 봐도 됩니다.)
        turtle_5_2: 프로그램을 실행시켜보고 어떤 일이 일어나는지 살펴보세요. 이해할 수 있을까요?(블럭들을 모두 지우고 완전히 새로 만들어 봐도 됩니다.)
        turtle_5_3: 프로그램을 실행시켜보고 어떤 일이 일어나는지 살펴보세요. 이해할 수 있을까요?(블럭들을 모두 지우고 완전히 새로 만들어 봐도 됩니다.)
        turtle_5_4: 프로그램을 실행시켜보고 어떤 일이 일어나는지 살펴보세요. 이해할 수 있을까요?(블럭들을 모두 지우고 완전히 새로 만들어 봐도 됩니다.)
        turtle_5_5: 프로그램을 실행시켜보고 어떤 일이 일어나는지 살펴보세요. 이해할 수 있을까요?(블럭들을 모두 지우고 완전히 새로 만들어 봐도 됩니다.)
        turtle_5_6: 프로그램을 실행시켜보고 어떤 일이 일어나는지 살펴보세요. 이해할 수 있을까요?(블럭들을 모두 지우고 완전히 새로 만들어 봐도 됩니다.)
        maze_3_1: 초록 돼지를 잡아야 돼! 몇 번 앞으로 이동해야 하는지 입력해 줘; 그래야 내 알들을 돌려받을 수 있을 것 같아.
        maze_3_2: 초록 돼지를 잡을 수 있도록, 프로그램을 만들어줘.
        maze_3_3: 어떻게 해야 초록 돼지를 잡을 수 있지? TNT 폭탄이 있는 곳으로는 갈 수 없어!
        maze_3_4: 아~~~! TNT 폭탄을 피해서 초록 돼지를 잡을 수 있게 해 줘.
        bounce_1: '"왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, "실행하기"를 눌러 보세요. 왼쪽 방향키를 사용해 목표 지점까지 이동시켜 보세요.'
        bounce_2: '"오른쪽 방향키가 눌렸을 때", "왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, 양쪽의 목표 지점까지 이동시켜 보세요.'
        bounce_3: '"위쪽 방향키가 눌렸을 때" 을 비슷하게 사용해 보세요. 위쪽 목표 지점까지 이동시켜 보세요.'
        bounce_4: 이번에는 4개의 블럭을 사용해야 합니다. 퍼즐을 해결하기 위해서 4개의 목표지점으로 이동시켜 보세요.
        bounce_5: '공을 아래로 내려보낼 것입니다. "라켓에 닿으면" 블럭을 붙여 공이 목표지점에 도착하게 만들어 보세요.'
        bounce_6: '이번 목표지점은 가장 위쪽 입니다. "공이 부딪치면"블럭을 사용해 퍼즐을 해결해 보세요.'
        bounce_7: '"~할 때" 블럭에 블럭들을 붙여보세요. 목표 지점에 닿을 때까지 공이 튀기도록 해보세요. '
        bounce_10: '이번 목표지점은 위쪽입니다. "내 점수 올리기", "상대 점수 올리기" 블럭을 붙여, "공이 들어갔을 때", "공이 들어가지 않았을 떼" 블럭으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 안되도록 점수를 얻어보세요.'
        bounce_11: '"프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 만들기" 블럭을 한 군데 이상 붙여야 합니다. 그리고 배경도 바꾸어 보고, 상대방 케릭터의 점수가 2배가 되지 않도록 케릭터의 스피드를 바꿔 보세요.'
        bounce_12: 바운스 게임을 직접 만들어보세요. 화면에 보이는 것들과 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
        Custom_builder: '왼쪽의 도구 블럭 상자에서 오른쪽의 코딩창으로 블럭들을 끌어와서 원하는 레벨을 만드세요. 모두 준비가 되면 "실행하기"를 누르면 됩니다.'
        flappy_1: '"클릭되면"블럭을 붙인 후 "실행하기"를 누르세요. 플래피 버드가 목표 지점에 도착할 수 있도록 화면을 클릭하거나 터치하면 됩니다.'
        flappy_2: '바닥 땅을 만들었습니다. "땅에 떨어지면" 블럭에 다른 블럭을 붙여보세요. 플래피가 땅에 닿으면 게임이 끝나도록 해야합니다.'
        flappy_3: '"실행하면" 블럭은 프로그램을 실행시켰을 때 코드들이 동작하게 합니다. 목표 지점에 도착하기 위한 레벨, 스피드, 날개 펄럭이기를 설정해 보세요.'
        flappy_4: '여러가지 물체에 부딪치지 않도록 플래피 버드를 날려 목적지에 도착하도록 해보세요. "물체에 부딪치면" 블럭을 사용하고, 첫번째 파이프로 들어가면 "게임 끝"이 나오도록 해보세요.'
        flappy_5: '스코어보드를 만들고 플래피 버드가 물체를 피해 지나가면 점수가 올라가게 해보세요. "물체를 피하면" 블럭을 사용하고, 첫 번째 파이프에 도착하면 점수가 올라가게 해보세요.'
        flappy_6: 플래피 버드의 펄럭이면 점수가 어떻게 올라가는지 확인해보세요.
        flappy_7: '자 이번에는 "실행하면" 블럭에 다른 블럭을 붙여 배경 그림을 바꾸어보세요.'
        flappy_8: 화면에 보이는 것들은 언제 든지 바꿀 수 있습니다. 물체를 피해 통과하는 것과 같은 이벤트들이 발생했을 때 랜덤 배경으로 바뀌도록 해보세요.
        flappy_9: 게임을 끝내지 말고 땅에 떨어지거나 물체에 닿거나 등등 여러 가지 상황에 대해서 생각해서, 점수를 0점이 되게 해 보세요.
        flappy_11: 자신만의 플래피 게임을 만들어보세요. 화면에 보이는 것들과 규칙들, 떨어지는 중력마저도 마음대로 만들어보세요. 친구들이 스마트폰에서 해볼 수 있도록 공유해 보세요.
        flappy_k1_1: 플래피 버드
        flappy_k1_2: '"클릭되면"블럭을 붙인 후 "실행하기"를 누르세요. 플래피 버드가 목표 지점에 도착할 수 있도록 화면을 클릭하거나 터치하면 됩니다.'
        flappy_k1_3: '바닥 땅을 만들었습니다. "땅에 떨어지면" 블럭에 다른 블럭을 붙여보세요. 플래피가 땅에 닿으면 게임이 끝나도록 해야합니다.'
        flappy_k1_4: '"실행하면" 블럭은 프로그램을 실행시켰을 때 코드들이 동작하게 합니다. 목표 지점에 도착하기 위한 레벨, 스피드, 날개 펄럭이기를 설정해 보세요.'
        flappy_k1_5: '여러가지 물체에 부딪치지 않도록 플래피 버드를 날려 목적지에 도착하도록 해보세요. "물체에 부딪치면" 블럭을 사용하고, 첫번째 파이프로 들어가면 "게임 끝"이 나오도록 해보세요.'
        flappy_k1_6: '스코어보드를 만들고 플래피 버드가 물체를 피해 지나가면 점수가 올라가게 해보세요. "물체를 피하면" 블럭을 사용하고, 첫 번째 파이프에 도착하면 점수가 올라가게 해보세요.'
        flappy_k1_7: 어떤 물체를 피했을 때, 1점 이상 얻을 수 있도록 해 보세요.
        flappy_k1_8: '자 이번에는 "실행하면" 블럭에 다른 블럭을 붙여 배경 그림을 바꾸어보세요.'
        flappy_k1_9: '"실행하면" 블럭에 "케릭터 설정" 블럭을 붙여 케릭터를 바꿔보세요.'
        jigsaw_1: 블럭을 클릭하세요.
        jigsaw_2: 블럭을 맞는 위치에 끌어가세요.
        jigsaw_3: 블럭들을 그림에 맞게 맞춰 보세요.
        jigsaw_4: 블럭들을 그림에 맞게 맞춰 보세요.
        jigsaw_5: 블럭들을 그림에 맞게 맞춰 보세요.
        jigsaw_6: 블럭들을 그림에 맞게 맞춰 보세요.
        jigsaw_7: 블럭들을 그림에 맞게 맞춰 보세요.
        jigsaw_8: 블럭들을 그림에 맞게 맞춰 보세요.
        jigsaw_9: 블럭들을 그림에 맞게 맞춰 보세요.
        jigsaw_10: 블럭들을 그림에 맞게 맞춰 보세요.
        jigsaw_11: 블럭들을 그림에 맞게 맞춰 보세요.
        jigsaw_12: 블럭들을 그림에 맞게 맞춰 보세요.
        jigsaw_13: 퍼즐을 맞춰 보세요!
        mazestep_1: 미로 퍼즐의 단계별 설명입력
        mazestep_2: 미로 퍼즐의 단계별 설명입력
        mazestep_3: 미로 퍼즐의 단계별 설명입력
        mazestep_4: 미로 퍼즐의 단계별 설명입력
        mazestep_5: 미로 퍼즐의 단계별 설명입력
        studio_c2_1: '강아지가 "hello world"라고 말하도록 만들어 보세요.'
        studio_c2_2: 강아지가 어떤 말을 하고 난 후에 고양이가 어떤 말을 하게 해보세요.
        studio_c2_3: 강아지가 고양이에게 움직이도록 할 수 있을까요?
        studio_c2_4: '강아지가 고양이에게 닿으면 고양이가 "hello"라고 말하도록 할 수 있을까요?'
        studio_c2_5: '문어를 클릭하면 "hello"라고 말하도록 할 수 있을까요?'
        studio_c2_6: 위/아래/왼쪽/오른쪽 방향키를 사용해 펭귄이 이리저리 목표지점들로 움직이도록 할 수 있을까요?
        studio_c2_7: '"계속 반복하기" 블럭을 사용하면 코드를 무한히 반복하도록 할 수 있습니다. 공룡이 위 아래로 왔다 갔다를 반복하도록 할 수 있을까요?'
        studio_c2_8: '펭귄이 "Ouch!"라고 말하고, 공룡에 닿으면 "충돌 소리"를 출력하도록 한 후 방향키들을 움직여보세요.'
        studio_c2_9: 펭귄이 문어에 닿았을 때 점수가 올라가도록 만든 후 방향키를 움직여 점수가 올라가는지 살펴보세요.
        studio_c2_10: 화면의 배경과 펭귄의 스피드를 바꿀 수 있을까요? 점수를 득점할 때까지 방향키들을 움직여 보세요.
        studio_c2_11: 자신만의 이야기를 구들이 스마트폰에서 살펴볼 수 있도록 만들어보세요.
        studio_c3_story_1: '강아지가 "hello world"라고 말하도록 만들어 보세요.'
        studio_c3_story_2: 강아지가 어떤 말을 하고 난 후에 고양이가 어떤 말을 하게 해보세요.
        studio_c3_story_3: 강아지가 고양이에게 움직이도록 할 수 있을까요?
        studio_c3_story_4: '강아지가 고양이에게 닿으면 고양이가 "hello"라고 말하도록 할 수 있을까요?'
        studio_c3_story_5: 문어를 행복한 표정으로 만들어보세요.
        studio_c3_story_6: 자신만의 스토리를 만들어 친구들이 스마트폰에서 살펴볼 수 있도록 해보세요.
        studio_c3_game_1: '문어를 클릭하면 "hello"라고 말하도록 할 수 있을까요?'
        studio_c3_game_2: 위/아래/왼쪽/오른쪽 방향키를 사용해 펭귄이 이리저리 목표지점들로 움직이도록 할 수 있을까요?
        studio_c3_game_3: '"계속 반복하기" 블럭을 사용하면 코드를 무한히 반복하도록 할 수 있습니다. 공룡이 위 아래로 왔다 갔다를 반복하도록 할 수 있을까요?'
        studio_c3_game_4: '펭귄이 "Ouch!"라고 말하고, 공룡에 닿으면 "충돌 소리"를 출력하도록 한 후 방향키들을 움직여보세요.'
        studio_c3_game_5: 펭귄이 문어에 닿으면 점수가 올라가게 만든 후 방향키를 눌러 움직여 보세요.
        studio_c3_game_6: 화면의 배경과 펭귄의 이동 스피드를 바꾼 후 방향키를 눌러 움직여 보세요.
        studio_c3_game_7: 자신만의 게임을 만들어보세요. 만들기가 완료되면 마치기를 눌러 친구들의 스마트폰에서 해볼 수 있도록 할 수 있습니다.
        studio_playlab_1: '펭귄이 "hello"라고 말하고 싶어하네요. 여러분이 도와주겠어요?'
        studio_playlab_2: '원시 소년(캐릭터1) 와 원시 소녀(캐릭터2)가 서로 "hello"라고 인사하도록 할 수 있을까요? "말하기" 블럭을 이용해서 도와주세요.'
        studio_playlab_3: 테니스 소녀가 깃발까지 갈 수 있게 도와주겠어요?
        studio_playlab_4: 테니스 소년(캐릭터1)이 테니스 소녀(캐릭터2)에게 가서 닿으면 어떤 소리가 나도록 도와주세요.
        studio_playlab_5: '우주 소년을 클릭하면 "greetings earhlings"라고 말할 수 있도록 해주실 수 있으세요? 프로그램을 실행시킨 후에 클릭하는 것을 잊지 마세요.'
        studio_playlab_6: 마녀 캐릭터를 위/아래/왼쪽/오른쪽의 방향키를 이용해서 이리저리 움직이면서 마술 파이어볼들로 이동하도록 도와주실 수 있으세요?
        studio_playlab_7: '"무한 반복(repeat forever)") 블럭은 어떤 코드들을 계속해서 무한히 반복해서 실행하도록 할 수 있습니다. 마법사 캐릭터가 왼쪽 오른쪽으로 계속 반복해서 움직일 수 있도록 블럭들을 붙여주세요.'
        studio_playlab_8: 방향키를 이용해서 유니콘을 움직이고, 유니콘이 마법사에게 닿으면 점수가 올라가고 소리가 나도록 도와주세요.
        studio_playlab_9: 외계인 침략 배경으로 바꾼 다음에, 우주로봇의 이동 속도를 더 빠르게 변화시켜서 외계인 캐릭터로 이동할 수 있도록 도와주세요. 그리고, 우주로봇이 외계인 캐릭터에 닿으면 모두에게 경고를 할 수 있게 해주세요.
        studio_playlab_10: 자신만의 게임을 만들어보세요. 만들기가 완료되면 마치기를 눌러 친구들의 스마트폰에서 해볼 수 있도록 할 수 있습니다.
        studio_full_sandbox: 자신만의 게임을 만들어보세요. 만들기가 완료되면 마치기를 눌러 친구들의 스마트폰에서 해볼 수 있도록 할 수 있습니다.
        studio_k1_1: '강아지가 "hello world"라고 말하도록 할 수 있을까요?'
        studio_k1_2: 강아지가 어떤 말을 한 후에 고양이가 어떤 말을 하도로 할 수 있을까요?
        studio_k1_3: 강아지가 고양이에게 움지이도록 할 수 있을까요?
        studio_k1_4: '강아지를 고양이에게 움직여 닿았을 때, 고양이가 "hello"라고 말하도록 해보세요.'
        studio_k1_5: 문어가 행복한 표정이 되도록 해보세요.
        studio_k1_6: 자신만의 이야기를 만들어보세요! 고양이와 강아지가 이리저리 돌아다니면서 말을 하게 해보세요.
        maze_wordsearch_k_1: '"오른쪽" 으로 이동시켜주세요.'
        maze_wordsearch_k_2: '"아래쪽"으로 이동시켜주세요.'
        maze_wordsearch_k_3: '"왼쪽"으로 이동시켜주세요.'
        maze_wordsearch_k_4: '"위쪽"으로 이동시켜주세요.'
        maze_wordsearch_k_6: '오른쪽으로 이동한 후 아래쪽 "점프"로 이동시켜주세요.'
        maze_wordsearch_k_9: '어떤 방향으로 움직인 후에 "코드"로 이동시켜주세요.'
        maze_wordsearch_k_13: '어떤 방향으로 움직인 후에 "디버그"로 이동시켜주세요.'
        maze_wordsearch_k_15: '어떤 방향으로 움직인 후에 "위"로 이동시켜주세요.'
        maze_wordsearch_k_16: '어떤 방향으로 움직인 후에 "아래"로 이동시켜주세요.'
        maze_wordsearch_k_20: '테스트입니다! 어떤 방향으로 움직인 후에 "스토리"로 이동시켜주세요.'
        webapp_ec_simple: HtmlBlock 을 사용해 웹 앱 만들기
        turtle_ec_1_2: '이제, 사각형을 그려보세요. 참고: 새로운 "펜 색" 블럭을 이용해 원하는 색을 고를 수 있습니다.'
        turtle_ec_1_10: '잘했습니다! 이제 그리고 싶은 것을 마음대로 그려보세요. 몇 가지 재미있는 예시: 막대기 모양, 눈꽃모양, 나선모양. 그리고 새로운 "펜 두께" 블럭을 이용해 보세요!'
        studio_ec_sandbox: 자신만의 게임을 만들어보세요. 만들기가 완료되면 마치기를 눌러 친구들의 스마트폰에서 해볼 수 있도록 할 수 있습니다.
    levelbuilder:
      frozen line:
        instructions: 안녕하세요! 저는 아렌델의 엘사입니다. 선 1개를 그릴 수 있도록 도와주세요.
      frozen perpendicular:
        instructions: '이제 두 개의 선을 90도 만큼 교차시켜 그릴 수 있는지 살펴보세요. "회전"블럭과 "이동" 블럭을 사용해야 할 것 입니다.'
      frozen square iterative:
        instructions: 사각형을 만들기 위한 과정에 반정도 왔습니다. 모아서 사각형을 만들기 위해 4개의 선을 그려보세요.
      frozen square loop:
        instructions: '안녕하세요! 저는 아렌델의 안나에요! 적은 "반복" 블럭을 이용해 사각형을 만들어 볼까요? 사각형을 만들기 위해서 반복 블럭 안에 몇 번의 "반복" 블럭을 넣어야 할까요???'
      frozen square loop 3x:
        instructions: 이제 3개의 사각형을 회전시킨 것을 만들어 보아요! 새로운 사각형을 그리기 전에 120도 만큼 회전하는 것을 잊지 마세요.
      frozen square snowflake:
        instructions: '"반복" 블럭을 10번 이용하고, 36도 만큼씩 사각형들을 회전시켜 그려서 눈송이를 그릴 수 있겠어요?'
      frozen cross:
        instructions: '"덧셈기호"를 그리기 위해서 "반복" 블럭을 사용해 보세요. 엘사가 앞뒤로 이동할 수 있다는 것 아시죠?'
      frozen cross rotate:
        instructions: 이제 10번 반복세 보세요. 각 선들을 그리면서 회전하기 위해서 몇 도가 필요할까요?
      frozen cross rotate dense:
        instructions: '이제 90번 반복해 보세요. 360도를 회전하려면 90도를 몇 번 회전해야 할까요? 힌트: 생각보다 작은 수입니다.'
      frozen diamond:
        instructions: '평행사변형을 그려보아요! 사각형하고 비슷하지만 각이 다릅니다: 사각형은 모두 90도이지만 60도, 120도의 각을 이루고 있습니다.'
      frozen diamond mini snowflake:
        instructions: '모든 눈송이들이 서로 다른 모양을 하고 있다는 것을 아시나요? 평행 사변형을 4번 그리기 위해 "반복"블럭을 사용하고, 각각을 90도 만큼씩 회전시켜 새로운 눈송이를 만들어보겠습니다.'
      frozen diamond snowflake:
        instructions: 이제, 평행 사변형을 10번 그릴 수 있도록 반복 블럭을 사용하고, 각각을 36도 만큼씩 오른쪽으로 돌려 새로운 눈송이를 그려보겠습니다.
      frozen circle:
        instructions: 원은 특별한 도형입니다. 원을 그리기 위해서 물음표 부분에 어떤 수가 들어가야 할까요?
      frozen circle function:
        instructions: '새로운 "원 그리기" 블럭을 이용해 10개의 원을 겹쳐 그리세요. 원을 그리기 위해 점프 하는 것을 잊지 마세요.'
      frozen circle function in circle:
        instructions: 이제 20개의 원을 겹치고, 각각을 18도씩 회전시키세요.
      frozen circle function with parameter:
        instructions: '원하는 크기로 그릴 수 있는 "원 그리기" 블럭이 있습니다. 이 블럭을 사용해 5 크기의 원과 10 크기의 원을 그릴 수 있겠어요?'
      frozen snowflower:
        instructions: 아주 복잡한 눈송이 모양도 아주 간단한 모양들을 이용해 만들 수 있습니다. 5크기의 원을 5개, 10크기의 원을 5개 이용해 패턴을 만들 수 있겠어요?
      frozen snowflake branch:
        instructions: '"눈송이 가지 만들기" 블럭을 이용해 3개의 가지로 뻗어나가는 그럴 듯한 눈송이를 만들어보세요.'
      frozen snowflake full:
        instructions: 이제 이쁜 눈송이를 만들기 위해 8번 반복해 보세요.
      frozen freeplay:
        instructions: 와~ 여러분은 이제 진짜 예술가가 된 것 같아요! 겨울왕국을 만들고 친구들에게 공유해 보세요.
      scrat 16:
        instructions: '도토리! 도토리! 도토리! "만약" 블럭을 이용하고, 가장 적은 갯수의 블럭들을 이용해서 도토리가 있는 곳으로 보내주세요.'
      scrat 17:
        instructions: '좋아요, 다시 한 번 해봅시다. - 크게 다르지는 않지만, 벽을 조심해야 해요!'
      scrat 18:
        instructions: '"만약(if)-아니면(else)" 블럭은 조건을 검사하고, 두 가지 중 하나만 실행합니다. 도토리가 있는 위치로 이동시키기 위해 이 새로운 블럭을 사용하세요.'
      scrat 19:
        instructions: '"조건/선택" 블럭을 다시 한 번 사용해 보자~, 한 번에 성공할 수 있을까?'
      scrat 20:
        instructions: 좀 더 복잡한 미로를 해결할 수 있도록 3개의 블럭만 더 더해줄 수 있나요? 그렇게 해준다면, 길이가 얼마나 길던지 상관없이 꺽인 길에서 회전할 수 있게 됩니다. 빨리 빨리요! 얼음이 녹고 있어요!
      Standalone_Artist_1:
        instructions: 예술가 퍼즐에 오신 것을 환영합니다. 처음으로 오른쪽으로 이동 블럭과 앞으로 이동 블럭을 이용해서 간단한 사각형을 만들어 보겠습니다. 각 면의 길이는 정확히 100 픽셀이 되어야 합니다.
      Standalone_Artist_2:
        instructions: 120도, 60도의 각과 150 픽셀 만큼의 길이로 이 다이아몬드를 그려보세요.
      Standalone_Artist_3:
        instructions: 100 픽셀 길이와 60도 회전으로 이 육각형을 그려 줄 수 있나요?
      Standalone_Artist_4:
        instructions: 이제 반복(loop) 이라는 새로운 블럭을 이용할 수 있습니다. 이 블럭은 원하는 명령어들을 반복시켜줄 것입니다. 이 명령어들을 6번 반복하면 어떻게 될까요?
      Standalone_Artist_5:
        instructions: 이 다이아몬드 모양을 이용해서 꽃을 그리려면 반복(loop)을 몇 번 시켜야 할까요?
      Standalone_Artist_5.5:
        instructions: '다이아몬드 모양을 반복 블럭 안에 넣어서 회전시키면서 아주 쉽게 코드를 만드는 방법을 잘 보세요. 순서대로 실행시켜야하는 명령어들을 12번 반복시킬 수 있습니다. 힌트: 다이아몬드 반복(loop)를 30도만큼 회전시키면 됩니다. 다이아몬드를 또 그릴 필요가 없습니다.'
      Standalone_Artist_6:
        instructions: '이 6각형 코드를 반복적으로 이용해서 디자인 해보세요. 한 번 실행할 때마다 몇 도를 회전시켜야 할까요? 힌트: 원의 각도를 반복시키려고 하는 횟수로 나누면 됩니다.'
      Standalone_Artist_7:
        instructions: '함수는 한번 만들어둔 것을 다시 사용하는 프로그래밍 방법입니다. 이 함수는 꽃을 그려주는데, 이 함수를 이용하면 원하는 만큼의 꽃을 편리하게 그릴 수 있습니다. 이 함수와 점프 블럭을 이용해서 이 꽃들을 그려주세요. 힌트: 꽃들은 150 픽셀만큼 떨어져 있습니다.'
      Standalone_Artist_8:
        instructions: '"모양 그리기" 라는 이름의 6각형 그리기 함수 블럭이 있습니다. 일단 먼저 코드를 실행시켜 어떻게 실행되는지 살펴보고, 실험해 보세요. 사각형, 삼각형, 8각형을 그릴 수 있겠어요?'
      Standalone_Artist_9:
        instructions: 자 이제 계속해서, 원하는 그림을 마음껏 그려보세요! 원하는 것이 어떤 것이든지, 빈 함수를 이용해 마음대로 만들고 사용할 수 있습니다.
    video:
      name:
        maze_intro: 미로 퍼즐 소개
        artist_intro: 예술가 퍼즐 소개
        farmer_intro: 농부 퍼즐 소개
        flappy_intro: 플래피 시작하기
        loop_times: 반복(횟수)
        loop_until: 반복(~할 때까지)
        if: 조건 실행
        if_else: 조건/선택 실행
        if_else_scrat: 조건/선택 실행
        function: 함수
        loop_while: 반복(~인 동안)
        loop_for: 카운터
        parameters: 함수(값 전달)
        hoc_wrapup: Hour of Code 마무리
        Unplug1: 컴퓨터과학(CS, 정보과학)이란?
        Unplug2: 컴퓨터과학적(정보과학적)사고
        Unplug3: 모눈종이 프로그래밍
        Unplug4: 알고리즘
        Unplug5: 함수
        Unplug6: 조건
        Unplug7: 노래 만들기
        Unplug8: 추상화
        Unplug9: 릴레이 프로그래밍
        Unplug10: 인터넷
        Unplug11: 마무리
        C1_happy_maps_unplugged: 즐거운 맵
        C1_moveitmoveit_unplugged: 빨리 빨리 움직이자!
        C1_bigevent_unplugged: 큰 이벤트
        C1_getting_loopy: 반복적으로 하기
        C1_pair_programming: 페어 프로그래밍
        C1_maze_intro_sequencing: 미로 탐색 소개
        C1_maze_debugging: 미로 퍼즐 디버깅
        C1_bee_level_intro: 꿀벌 퍼즐 소개
        C1_artist_intro: 예술가 퍼즐 소개
        C1_spelling_bee_intro: 말하는 꿀벌 소개
        C1_zuck_repeat_loop: 미로 반복
        C1_bee_loops: 꿀벌 반복
        C1_maze_loops: 미로 퍼즐 반복
        C1_playlab_storytelling: 'Play Lab - 스토리 만들기'
        C1_planting_seed: 씨앗 심기
        C1_building_foundation: 건물 기초 만들기
        C1_going_places_safely: 안전하게 자리잡기
        C2_maze_intro: 미로 퍼즐 소개
        C2_artist_intro: 예술가 퍼즐 소개
        C2_zuck_repeat_loop: 미로 퍼즐 반복
        C2_artist_loops: 아티스트 반복
        C2_artist_debugging: 예술가 디버깅
        C2_bee_loops: 꿀벌 반복
        C2_bee_debugging: 꿀벌 디버깅
        C2_bee_conditionals: 꿀벌 조건선택
        C2_playlab_createstory: 'Play Lab - 스토리 만들기'
        C2_graph_paper: 모눈종이 프로그래밍
        C2_conditionals_with_cards: 조건
        C2_binary_bracelets: 2진 팔찌
        C2_relay_programming: 릴레이 프로그래밍
        C2_paper_airplanes: 종이 비행기
        C2_digital_footprint: 디지털 개인정보 흔적
        C3_maze_level_4: 미로 퍼즐 반복
        C3_artist_intro: 예술가 퍼즐 소개
        C3_artist_functions: 예술가 함수
        C3_bee_functions: 꿀벌 함수
        C3_bee_conditionals: 꿀벌 조건선택
        C3_maze_conditionals: 미로 퍼즐 조건선택
        C3_artist_nested_loops: 중첩 반복
        C3_farmer_while: ~인 동안 반복
        C3_bee_nested_loops: 중첩 반복
        C3_bee_debugging: 꿀벌 디버깅
        C3_bounce: 바운스
        C3_playlab_create_game: '플래이 랩 - 게임 만들기'
        C3_computational_thinking: 컴퓨터과학적(정보과학적)사고
        C3_dice_race: 주사위 레이스
        C3_internet: 인터넷
        C3_crowdsourcing: 클라우드소싱
        C3_functional_suncatchers: 기능성 색유리
        C3_songwriting_with_parameters: 매개변수를 사용한 음악 작곡
        C4_intro: 소개
        C4_bee_conditional: 꿀벌 조건선택
        C4_variables_artist: '변수 - 예술가'
        C4_variables_playlab: '변수 - 플레이 랩'
        C4_for_loops: 반복을 위한
        C4_math_artist: 수학 예술가 프로그래밍
        C4_function_edit: 함수 수정하기
        C4_function_create: 함수 만들기
        C4_function_parameters: 함수(값 전달)
        C4_conditionals: 조건
        C4_unplugged_algorithms: 탱그램 알고리즘
        C4_unplugged_madlibs: 매드 립스(Mad Libs)
        C4_unplugged_variables: 변수들 싸기(함께 넣기)
        C4_unplugged_forloops: 반복을 위한
        C4_unplugged_parameters: 매개변수를 사용하는 음악 작곡
        C4_unplugged_binary: 2진
        frozen_intro: Hour of Code 소개
        frozen_loops: 반복(Loop) 소개
        frozen_functions: 함수(Function) 소개
        playlab_intro: 플레이 랩 소개
        playlab_events: 플레이 랩 이벤트
        playlab_repeat_forever: 플레이 랩 무한 반복
    callout:
      text:
        drag_blocks: '"움직이기" 블럭을 끌어다가 다른 블럭의 아래에 탁 붙여보세요.'
        run: '만든 프로그램을 "실행하기"를 눌러 실행시켜보세요.'
        watch_again: 다시 보기위해 여기를 눌러보세요.
        gray_block_explanation: 회색 블럭들은 삭제할 수 없습니다. 퍼즐을 해결할 수 있나요?
        show_code_explanation: 자신이 만든 프로그램의 코드를 보기 위해 여기를 눌러 보세요.
        instructions_repeat_explanation: 각 퍼즐의 명령어들은 여기서 반복됩니다.
        category_explanation: 여러 가지 블럭들이 카테고리별로 분리되었습니다.
        set_sprite_image: '"케릭터 사용하기" 블럭을 "이야기가 시작되면" 블럭에 붙여 스토리가 가능하게 해 보세요. '
        studio_say_text: 큰 따옴표 사이에 케릭터가 해야하는 말을 입력하세요.
        jigsaw_click: 이 블럭을 클릭하세요!
        move_elsa_forward: '"앞으로 이동" 블럭을 드래그해서 "실행하면" 블럭의 아래에 붙여 엘사가 앞으로 이동하게 해보세요.'
        turn_elsa: '"돌기(회전)" 블럭을 사용해 엘사가 방향을 바꾸도록 해보세요. 선택 메뉴에서의 수는 엘사가 회전해야할 정도를 의미합니다.'
        replace_questions: '"???" 부분에 수를 입력하면 됩니다.'
        replace_questions_degree: '"???" 부분에 정확한 각도를 입력해 보세요.'
        repeat_blocks: '"반복" 블럭의 안에 다른 블럭들을 넣어보세요.'
        repeat_blocks_1: (1) 이 블럭을 회색 블럭들에 사용하세요.
        repeat_blocks_2: '(2) "반복(Repeat)" 블럭을 여기에 이동시킨 후, 회색 블럭들의 안에 넣어주세요.'
        snowflake_dropdown: 다른 모양의 눈송이를 만들기 위해서 사용해 보세요.
        degrees_per_side: 각각의 회전 각도를 얻어내기 위해, 면의 개수를 360으로 나누세요.
        set_sides: 퍼즐을 해결하기 위해 필요한 면의 수를 설정하기 위해 이 블럭을 사용하세요.
        set_length: '정확한 값으로 "길이"를 설정하기 위해 이 블럭을 사용하세요.'
        which_equation: 어떤 식이 더 많은 면들에 대해서, 각 면의 길이를 더 적게 줄일 수 있을까요?
        get_nectar: '새로운 "꽃꿀 얻기" 블럭을 사용하세요.'
        actions_category: '도구 상자가 새로운 모습으로 바뀌었습니다! 이제 "실행" 블럭들을 사용할 수 있습니다.'
        draw_square_hint: '힌트: 바로 전 퍼즐에서 사용했던 사각형 반복을 사용하세요.'
        edit_function: 함수를 수정하기 위해서 여기를 클릭하세요.
        create_function: '"함수" 메뉴를 열어 함수를 만들기 위해, 여기를 누르세요. 그 다음에 "함수 만들기" 버튼을 누르세요. '
        house_hint: 그림이 집처럼 보이지 않아도 괜찮습니다. 다음 퍼즐에서 해결할 것입니다.
        edit_draw_square: 함수를 수정해 반복 실행을 추가하기 위해 이 버튼을 사용하세요.
        edit_get_nectar: 이 버튼을 사용해 함수를 수정해서, 꿀벌이 꽃꿀 방향으로 회전할 수 있도록 하세요.
        logic_category: '"논리" 메뉴를 열어 "만약/아니면" 블럭을 찾아보세요.'
        length_parameter: '이 함수를 수정해서 "길이"를 매개변수로 사용할 수 있도록 해 보세요.'
        frozen_diamond_repeat: 반복 블럭을 사용해 이 모양을 만들어보세요.
        frozen_circle_function_in_circle_turn: 각각의 원을 만들고 난 후에, 회전해야하는 것을 잊지마세요.
        frozen_circle_function_with_parameter_circle: '"원 만들기" 블럭을 사용하고 그 크기를 바꾸세요.'
        frozen_snowflake_branch: '"가지치기 눈송이 만들기(create a snowflake branch)" 블럭을 사용하세요.'
        frozen_create_square: 사각형을 만들기 위해서 여기에 블럭들을 더 붙여주세요.
        playlab_drag_say: '"말하기" 블럭을 드래그 한 후 "hello"이라고 입력해주세요.'
        playlab_use_twice: 이 블럭을 두 번 사용하세요. 그리고 캐릭터(actor) 번호를 바꿔주세요.
        playlab_move_girl: '테니스 소녀를 오른쪽으로 이동시키기 위해서 "오른쪽으로 이동" 블럭을 사용하세요.'
        playlab_play_sound: '"소리 재생" 블럭을 여기에 추가하세요'
        playlab_arrow_keys: 마녀를 클릭했을 때 움직이도록 하기위해서 이 블럭들을 사용해야 합니다.
        playlab_add_move: '이 반복 블럭 안에 "이동" 블럭들을 추가하세요.'
        playlab_add_score: 여기에 점수 블럭들을 추가하세요
        playlab_add_blocks: 여기에 블럭들을 추가하세요.
        set_variable: 변수에 값을 바꾸기 위해 수 블럭을 드래그해서 가져오세요.
        place_variable: 이 블럭의 안쪽에 변수 블럭을 드래그 하세요.
        bee_for_loop: 꿀벌이 모으도록 하려는 가장 큰 꽃꿀의 수를 여기에 드래그 하세요.
        place_counter_variable: 이 블럭의 안에 수를 세기 위한 카운터 블럭을 드래그 하세요.
        function_editor_draw_square: '이것이 여러분이 만든 함수의 정의입니다. 이 블럭들은 "사각형 그리기" 블럭을 사용할 때마다 실행됩니다.'
        change_here: 여기서 바꾸세요.
        write_draw_square_function: 도구 상자에 있는 블럭들을 여기로 드래그해서 사각형을 그려보세요.
        write_draw_triangle_function: 도구 상자에서 블럭들을 드래그해서 여기에 집어 넣어 사각형을 그려보세요.
        edit_add_parameter: 함수에 매개 변수를 추가하기 위해서 편집(edit)을 누르세요.
        add_and_drag_parameter: 만든 매개 변수의 이름을 여기에 작성하고, 추가하기를 누른 다음, 여러분이 만든 함수 정의 안에 드래그해 넣으세요.
        fill_in_actor: '??? 부분을 각 캐릭터(1, 2, 3)에 맞는 수로 채우세요.'
        repeat: 루프(loop) 안에 블럭을 넣어 반복하도록 하세요.
        if_bee_nectar: '"만약(if)" 블럭을 사용해 꽃꿀을 집어야 하는지 판단하도록 하세요.'
        if_else_bee: '"만약(if)/그렇지 않으면(else)" 블럭을 사용해서 꿀벌이 꽃에 꽃꿀이 있으면 집고, 아니면 꿀을 만들도록 해 보세요.'
        repeat_full_circle: 원을 만들기 위해서 좀비가 움직여야하는 횟수를 입력하세요.
        place_length_variable: 여기에 길이(length) 변수를 드래그해서 물음표 표시를 바꾸세요.
        arrows_move_actor: 캐릭터를 움직이기 위해 방향키를 사용하세요.
        right_arrow_fireball: 파이어볼을 쏘기 위해 오른쪽 방향키를 사용하세요.
        name_function: 함수의 이름을 여기에 작성하세요.
