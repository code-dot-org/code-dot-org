ko:
  data:
    instructions:
      2-3 Artist 1 new_instruction: "안녕하세요. 저는 화가입니다. 여러분들이 코드를 작성하면 원하는 모든 것들을 그릴 수 있습니다.\n블록들을 사용해서 그림의 회색 선들을 그려보세요.(각 선들은 100 픽셀 길이입니다.)"
      2-3 Artist 11_instruction: "각 변의 길이가 100 픽셀인, 8각형을 만들어 정지 표지판을 만들어보세요.  \\r\n\\r"
      2-3 Artist 12_instruction: "눈알을 완성하기 위해서 원을 그려보세요!\\r\n\\r\n만약,\n 한 번 움직일 때마다 1도씩 오른쪽으로 움직인다고 한다면, 하나의 원을 완성시키기 위해 몇 번을 반복하면 될까요? 180? 360? 500?"
      2-3 Artist 2 new_instruction: "이 집의 벽은 다 완성되지 않았습니다. 각 측면은 100이지만, 완성되지 않은 벽은 50입니다. 벽을 완성해보세요. "
      2-3 Artist 2_instruction: "This house has a half-finished wall. Each side is\n100, but the half-finished wall is only 50. Complete the wall. "
      2-3 Artist 3.4_instruction: "점프 블록은 선을 그리지 않고 이동하게 해줍니다.\n앞으로 점프, 앞으로 이동하기 블록들을 이용해서 파선을 그려보세요."
      2-3 Artist 3_instruction: "이 모자의 높이는 100픽셀입니다. 70픽셀 더 짧은 모자를 그려보세요."
      2-3 Artist 3new_instruction: "빨간 모자의 높이는 100픽셀입니다.\n이것보다 더 낮은 70픽셀 높이의 검은 모자를 그려보세요.\\r\n(주의: 각 모자의 너비는 50픽셀입니다.)"
      2-3 Artist 4_instruction: "고양이를 위한 집을 완성해주세요."
      2-3 Artist 5_instruction: "똑같은 집을 그릴 수 있도록, \"반복 횟수\" 블록의 코드를 바꿔주세요. 3개의 블록만 사용하면 됩니다."
      2-3 Artist 6_instruction: "이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:\n세 변의 길이는 모두 같습니다."
      2-3 Artist 7_instruction: "교실의 모두가 창밖을 볼 수 있도록, 창문들을 학교에 그려주세요.\n각 창 틀의 길이는 25 픽셀 크기입니다. "
      2-3 Artist 8_instruction: "한 개의 사각형을 똑같은 크기의 정사각형 2개로 나누어 보세요.\n사각형의 폭은 200 픽셀이고, 높이는 100 픽셀입니다."
      2-3 Artist 9 NEW_instruction: "이 연을 완성해주세요."
      2-3 Artist 9 REPLACEMENT_instruction: "계단 그리기 완료!"
      2-3 Artist 9_instruction: "이 연을 완성해주세요."
      2-3 Artist Assessment 1_instruction: "형성 평가: 마지막 이빨을 그려주세요.\n가로 25 픽셀, 세로 25 픽셀입니다."
      2-3 Artist Debugging 1_instruction: "이 모자의 윗 부분은 50 픽셀이 되어야 합니다. 고쳐 주실 수 있나요?"
      2-3 Artist Debugging 10_instruction: "제 게임기의 방향키가 너무 얇아요.\\r\n\\r\n10 픽셀 만큼 폭을 넓혀주세요."
      2-3 Artist Debugging 11_instruction: "내 눈송이가 부서지고 있어요!\\r\n\\r\n어디가 잘못 된 것 일까요?"
      2-3 Artist Debugging 12_instruction: "이 장면에 파도를 추가하고 싶습니다. 도와주시겠어요?"
      2-3 Artist Debugging 2_instruction: "고양이 수염을 그리는 코드에 문제가 있습니다.\n\\r\n\\r\n고양이 수염의 길이가 같도록 코드를 고쳐주세요."
      2-3 Artist Debugging 3_instruction: "내 보트에 구멍이 났어요!\\r\n\\r\n선의 끝을 맞추기 위해서는 어떻게 해야할까요?"
      2-3 Artist Debugging 4_instruction: "무엇을 그리려고 하는 것 일까요? 정확한 선들과 각들로 점들을 연결해 주세요."
      2-3 Artist Debugging 5_instruction: "다리와 발을 그리는 코드에 오류가 있습니다.\\r\n\\r\n어떻게 고쳐야 할까요?"
      2-3 Artist Debugging 6_instruction: "다리가 없는 의자에 앉아있는 것 같아요.\n\\r\n\\r\n코드를 수정해서 나머지 의자 다리를 그려주세요."
      2-3 Artist Debugging 7_instruction: "C가 왼쪽으로 그려지는 코드 같습니다!\\r\n\\r\nC를 정확하게 그리려면 어떻게 해야할까요?"
      2-3 Artist Debugging 8_instruction: "바람개비가 완성되지 않았습니다. 완성하려면 얼마나 반복해야 할까요?"
      2-3 Artist Debugging 9_instruction: "뭔가 이상해요!\\r\n\\r\n줄기를 그리는 코드가 틀렸네요. 화가가 줄기를 정확히 그리려면 어떻게 해야할까요?"
      2-3 Artist Debugging Assessment 1_instruction: "형성평가: 이 75 픽셀 크기의 사각형으로는 작은가요? \\r\n\\r\n코드의 어느 부분을 고쳐야할까요?"
      2-3 Artist Free Play_instruction: "자유 플레이: 원하는 것을 그려보세요."
      2-3 Artist Functions 1_instruction: "\"나 화가. 좀비... 그리기 좋아..!\" \\r\n\\r\n사각형 안경을 그릴 수 있게 도와주세요. \\r\n\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      2-3 Artist Functions 10_instruction: "여기에 두 개의 함수가 있습니다. 하나는 큰 기어를 그리는 것이고, 하나는 작은 기어를 그리는 것입니다.\n기계의 내부를 그리는데 사용해보세요!"
      2-3 Artist Functions 11.5_instruction: "여기에 똑같은 '육각형 그리기' 함수가 있습니다. \\r\n\\r\n반복 할 때마다 60도씩 회전시키면 어떻게 될까요?"
      2-3 Artist Functions 11_instruction: "“사각형 그리기” 함수의 이름을 “육각형 그리기”로 바꿨지만, 여전히 이 함수는 사각형을 그리고 있습니다!\n\"육각형 그리기\" 함수를 수정해서, 한 변의 길이가 50 픽셀인 육각형을 그려보세요. \\r\n\\r\n새로운 함수를 사용하여 그림을 그려보세요."
      2-3 Artist Functions 12 Mike_instruction: "함수를 사용하면 복잡한 모양을 가진 그림을 그리기에 아주 좋습니다. \\r\n\\r\n\"꽃 그리기\" 함수를 사용해서 나머지 꽃 묘목 상자를 채워주세요.\\r\n꽃들은 100 픽셀 간격으로 놓여져 있습니다."
      2-3 Artist Functions 12_instruction: "함수를 사용하면 복잡한 모양을 가진 그림을 그리기에 아주 좋습니다. \\r\n\\r\n\"꽃 그리기\" 함수를 사용해서 나머지 꽃 묘목 상자를 채워주세요.\\r\n꽃들은 100 픽셀 간격으로 놓여져 있습니다."
      2-3 Artist Functions 13_instruction: "4개의 함수를 더 만들었습니다.\n1개 이상의 반복 구조를 이용해 원하는 그림을 만들고 친구들과 공유해 보세요.\n실행을 눌러 살펴보세요."
      2-3 Artist Functions 2_instruction: "함수들로 새로운 블록들을 만들어낼 수 있습니다! \\r\n\\r\n\"사각형 그리기\" 라는 함수에 사각형 1개를 그리는 블록들을 넣었습니다.\n\"사각형 그리기\" 함수를 이용해서 안경을 그려보세요. \n\\r\n\\r\n사각형들은 75 픽셀 만큼 떨어져 있습니다."
      2-3 Artist Functions 3_instruction: "한 변의 길이가 115 인 사각형을 그려 더 큰 안경을 만들어보세요. \\r\n\\r\n사각형들은 이제 45 픽셀 만큼 떨어져 있습니다."
      2-3 Artist Functions 4_instruction: "이제, 함수를 \"반복\" 블록 안에 넣고 3개의 사각형을 그려보세요."
      2-3 Artist Functions 7_instruction: "2개의 서로 매개 변수가 있는 \"집 그리기\" 함수를 이용해 2개의 집을 그려보세요.\n(힌트: 첫 번째 집은 100 픽셀입니다.)"
      2-3 Artist Functions 9_instruction: "여기 눈송이 함수가 있습니다.\n겨울 풍경을 만들어내기 위해서 실험해보세요! 이 판은 자유 플레이입니다.\n풀어야 할 퍼즐이 아니니까, 재미있게 놀아보세요!"
      2-3 Artist Loops 1_instruction: "셀을 완성하기 위해서, 한 변의 길이가 100 픽셀인 육각형을 만들어보세요.\n생각해보면, 60 도씩 회전하면 됩니다!"
      2-3 Artist Loops 10_instruction: "절반 만큼 만 마지막 단계에서 이동하면 어떻게 될까요?"
      2-3 Artist Loops 11_instruction: "자 이제, 만든 것을 모두 *다른* 반복 구조에 넣어보세요!\n바깥쪽 반복 구조에 각도를 더하는 것을 잊지 마세요."
      2-3 Artist Loops 2_instruction: "이제 반복 블럭을 사용해 셀을 조개로 만들어 봅니다."
      2-3 Artist Loops 4_instruction: "반복 구조를 사용해서, 모양을 반복해서 그리면 어떻게 될까요?"
      2-3 Artist Loops 5_instruction: "반복 실행에 조그만 변화를 주었을 때, 얼마나 다른 그림이 나올 수 있는지 살펴보세요."
      2-3 Artist Loops 6_instruction: "반복 구조 안에 1번 이동, 1번 회전을 더 추가해서\n디자인이 어떻게 변하는지 살펴보세요."
      2-3 Artist Loops 7_instruction: "반복 구조들을 이용하면 모든 종류의 다각형들을 만들 수 있습니다.\n이 육각형 안에 마름모를 만들어보세요."
      2-3 Artist Loops 8_instruction: "한 반복 안에 2개의 요소를 모두 넣어 보세요."
      2-3 Artist Loops 9_instruction: "같은 요소들을 반복 안에 넣되, 그 둘 사이에 거리를 추가하겠습니다.\\r\n이전에 사용했던 것과 같은 코드를 넣고, 바깥쪽 반복의 마지막에 앞으로 이동하는 것을 추가해 보세요."
      2-3 Artist Loops New 1_instruction: "이 로봇의 머리를 그려보세요!\n한 변의 길이가 100 픽셀인 사각형을 그려보세요."
      2-3 Artist Loops New 10_instruction: "이제 여러 개의 'V'자를 연결해서, 반복 실행 구조 안에 넣어보세요."
      2-3 Artist Loops New 11_instruction: "이번에는 멋진 것을 만들어 볼 시간입니다!\n왼쪽으로 30도 회전하기를 추가한 후, 7번 대신에 24번을 반복 시켜보세요."
      2-3 Artist Loops New 12_instruction: "한 변의 길이가 100 픽셀인 다이아몬드를 그려보세요.\n"
      2-3 Artist Loops New 13_instruction: "여러분은 몇 개의 코드(회색) 로 하나의 다이아몬드를 만들 것입니다. \\r\n\\r\n이런 재미있는 패턴을 만들기 위해서 회색 코드를 반복시켜보세요!"
      2-3 Artist Loops New 14_instruction: "다이아몬드 코드를 살펴보고 어떤 패턴들을 만들어낼 수 있는지 생각해보세요.\n각도와 반복 횟수를 변화시켜가면서 테스트 해보세요."
      2-3 Artist Loops New 15_instruction: "이제, 그리고 싶은 것들을 그려보세요."
      2-3 Artist Loops New 2_instruction: "방금 풀었던 퍼즐과 같은 퍼즐이지만, 이번에는 한 개의 '앞으로 직진' 블럭과 한 개의 '돌기' 블럭만 사용할 수 있습니다.\\r\n\\r\n퍼즐을 해결하기 위해 '반복' 블럭을 사용할 수 있나요?"
      2-3 Artist Loops New 9_instruction: "화살 그림을 완성하기 위해서,\n양쪽 모두 50 픽셀인 간단한 V 자를 그려보세요."
      2-3 Artist Match Hex Pic_instruction: '맞추기: 육각형을 완성해보세요.'
      2-3 Artist Match Rho Pic_instruction: '맞추기: 빠진 코드를 완성해보세요.'
      2-3 Artist Match Sq Pic_instruction: '맞추기: 빠진 코드를 채워보세요.'
      2-3 Artist Match Tri pic_instruction: '맞추기: 빠진 코드를 채워주세요.'
      2-3 Artist Nested Loops 1_instruction: "패턴을 그리기 위해서, 이 코드 전체를 '반복' 블록에 넣으세요."
      2-3 Artist Nested Loops 10_instruction: "패턴을 완성시키기 위해서 이 코드를 12번 반복해 보세요."
      2-3 Artist Nested Loops 11_instruction: "이 코드를 4번 반복해서 패턴을 완성해 보세요.\n원을 한 번 그리고 나면, 90도 만큼 회전하세요."
      2-3 Artist Nested Loops 12_instruction: "이 코드를 12번 반복시켜서 곱슬곱슬한 그림을 그려보세요."
      2-3 Artist Nested Loops 2_instruction: "삼각형을 6번 반복해 그리세요. \\r\n\\r\n삼각형을 한 번 그리고 난 후에, 60도씩 회전하면 됩니다."
      2-3 Artist Nested Loops 3_instruction: "이 패턴을 그리려면, 삼각형을 12번 반복해서 그려야 합니다. \\r\n\\r\n원 중심의 각(360 도) 을 그리려고 하는 모양의 개수(12 개) 로 나누면,\n모양을 한 번 그린 후 몇 도를 회전시켜야 하는지 알 수 있습니다."
      2-3 Artist Nested Loops 4_instruction: "이 다이아몬드 모양을 12번 반복시켜서 꽃을 그려보세요!\\r\n\\r\n힌트: 12 개의 다이아몬드는 12 개의 삼각형을 그리는 것과 같은 방법으로 만들면 됩니다. \\r \n한 번 모양을 그린 후에 얼마나 회전시켜야 할까요?"
      2-3 Artist Nested Loops 5_instruction: "이 건물의 창들을 중첩 반복을 이용해 채워보세요. \\r\n\\r\n창들은 20 픽셀 크기로 20 픽셀 만큼 씩 떨어져 있습니다."
      2-3 Artist Nested Loops 6_instruction: "이 공룡은 꼬리에 8개의 뾰족한 뿔이 나 있습니다.\\r\n각 뿔의 길이는 30 픽셀입니다.\n삼각형을 8번 반복해 그려주세요. 1개를 그리면 그 다음에는 앞으로 이동해야 합니다."
      2-3 Artist Nested Loops 7_instruction: "이 삼각형을 10번 반복시켜서 태양을 그려보세요. \\r\n\\r\n삼각형 1개를 그리고 난 후에는 이동하고 회전해야 합니다. \\r\n\\r\n원 안에서 몇 개의 모양을 그리게 되며 몇 도씩 회전해야 할지 알아내 보세요."
      2-3 Artist Nested Loops 8_instruction: "자 이제 그림에 잔디를 그려보세요.\n\\r\n\\r\n잔디 1개는 50 픽셀 만큼 씩 떨어져 있습니다."
      2-3 Artist Nested Loops 9_instruction: "이 그림에 꽃을 더 그리면 그림이 완성될 것입니다. \\r\n\\r\n꽃을 그리기 위해서 다이아몬드를 12번 반복시켜 그려보세요."
      2-3 Artist Nested Loops Free Play_instruction: "자유 플레이시간입니다.\n중첩 반복을 이용해서 원하는 것을 그려보세요."
      2-3 Bee Conditionals 1_instruction: "안녕하세요! 저는 꿀벌입니다.\n제가 꽃에서 꽃꿀을 모을 수 있게 도와주세요."
      2-3 Bee Conditionals 10_instruction: "자주색 꽃에서는 꿀이 있을 수도 있고 없을 수도 있습니다.\n아무것도 없는 자주색 꽃에서 꽃꿀을 얻어내려고 하지 마세요.\\r\n"
      2-3 Bee Conditionals 11_instruction: "뭐가 있을까요!\\r\n\\r\n꽃밭을 돌아다니면서 꽃꿀이 있는 꽃들에서만 꽃꿀을 모을 수 있게 도와주세요. "
      2-3 Bee Conditionals 12_instruction: "최대한 적은 블록들을 사용해서 꽃꿀을 찾아낼 수 있도록 도와주세요!"
      2-3 Bee Conditionals 13_instruction: "와 이번에는 여러 가지들이 있네요!\\r\n\\r\n여러분들이 배운 것들을 이용해 꽃꿀을 모아 꿀을 만들어보세요."
      2-3 Bee Conditionals 14_instruction: "자 이제 다 모아봅시다!\\r\n\\r\n지금까지 배운 것들을 이용해서 최소한의 블록들로 꽃꿀이 있는 꽃에서 꽃꿀을 모아 보세요.\n마지막에는 꿀을 만들어야 합니다."
      2-3 Bee Conditionals 15_instruction: "계단 모양의 패턴은 많이 익숙합니다. \\r\n\\r\n최소한의 블록들만 사용해서 꽃꿀이 있는 꽃에서만 꽃꿀을 모아보세요."
      2-3 Bee Conditionals 2_instruction: "저는 배고픈 꿀벌입니다! \\r\n최소한의 블록만 사용해서 꽃꿀을 모두 모을 수 있게 해주세요."
      2-3 Bee Conditionals 3_instruction: "저 꽃꿀들을 보세요!\\r\n\\r\n최소한의 블록들을 사용해서 꽃꿀을 모아 꿀을 만들어보세요.  "
      2-3 Bee Conditionals 4_instruction: "꽃들로부터 꽃꿀을 모아 꿀을 만들 수 있게 도와주세요."
      2-3 Bee Conditionals 5_instruction: "꽃꿀이 없는 자주색 꽃에서 꽃꿀을 모으지 않도록 조심하세요. \\r\n먼저 '꽃꿀이 있으면' 블록을 이용해서 꽃꿀의 양이 1인지 확인해야합니다."
      2-3 Bee Conditionals 6_instruction: "\"만약\" 블록을 사용해서 이 꽃에 꽃꿀이 있는지 확인해보세요."
      2-3 Bee Conditionals 7_instruction: "꽃꿀이 있는 꽃에서만 꽃꿀을 모아보세요."
      2-3 Bee Conditionals 8_instruction: "이 꽃밭에는 빨강 꽃과 자주색 꽃이 있습니다.\n빨강 꽃은 꽃꿀이 얼마나 있는지 나타나있지만, 자주색 꽃에는 얼마나 있는지 알 수 없습니다.\n꽃꿀을 모두 모아 보세요."
      2-3 Bee Conditionals 9_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요."
      2-3 Bee Conditionals Assessment 1_instruction: "형성평가: 꽃꿀을 모두 모아주세요.\n자주색 꽃에 꽃꿀이 없으면 꽃꿀을 뽑지 않도록 주의하세요."
      2-3 Bee Debugging 1_instruction: "이 블록들에는 오류들이 있어서 짜증이 나네요.\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류들을 수정해주세요."
      2-3 Bee Debugging 10_instruction: "이 블록들에는 오류들이 있어서 짜증이 나네요. \\r\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류(들)을 수정해주세요."
      2-3 Bee Debugging 2_instruction: "문제점을 찾을 수 있으세요?\\r\n모든 꽃꿀을 모을 수 있도록 오류(들)을 수정해주세요."
      2-3 Bee Debugging 3_instruction: "으, 골치아프네요!\\r\n\\r\n모든 꽃꿀을 모을 수 있도록 오류(들)을 수정해주세요."
      2-3 Bee Debugging 4_instruction: "이 블록들에는 오류들이 있어서 짜증이 나네요.\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류(들)을 수정해주세요."
      2-3 Bee Debugging 5_instruction: "꽃들이 맛있어보여요! \\r\n\\r\n모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요. 단계별 실행을 사용할 수 있습니다."
      2-3 Bee Debugging 6_instruction: "달콤한 도전이네요! \\r\n\\r\n모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요."
      2-3 Bee Debugging 7_instruction: "모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요."
      2-3 Bee Debugging 8_instruction: "이쁜 꽃들이 아주 많이 있네요! \\r\n\\r\n모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요."
      2-3 Bee Debugging 9_instruction: "\"벌벌\" 떨지 마세요! \\r\n\\r\n모든 꽃꿀들을 모아 꿀을 만들 수 있도록, 이 프로그램의 오류들을 고쳐야 합니다."
      2-3 Bee Debugging Assessment 1_instruction: "형성평가: 이제 여러분들이 아는 것들을 보여줄 시간입니다!\\r\n\\r\n모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요."
      2-3 Bee Functions 1_instruction: "함수들은 어떤 작업을 수행할 때 사용하는 블럭들의 집합이라고 할 수 있습니다.\n\"꽃꿀 2번 모으기\" 를 이용해서 각 꽃들에서 꽃꿀을 모아보세요."
      2-3 Bee Functions 10_instruction: "자주색 꽃들에는 꽃꿀이 1개 또는 0 개 있을 수 있습니다.   \\r\n\\r\n자주색 꽃에 꽃꿀이 있을 때에만 꽃꿀을 모으는 함수를 만들어보세요."
      2-3 Bee Functions 2_instruction: "함수들은 어떤 작업을 수행하는데 블럭들의 집합이라고 볼 수 있습니다.  \\r\n\\r\n\"5번 모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      2-3 Bee Functions 3_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요."
      2-3 Bee Functions 4_instruction: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는 함수입니다.  \\r\n\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      2-3 Bee Functions 5_instruction: "꽃들에 더 많은 꽃꿀이 들어있어요.\n주어진 함수를 수정해서, 꽃꿀을 4번 얻을 수 있게 하고 모든 꽃들로 부터 모든 꽃꿀을 모으세요."
      2-3 Bee Functions 6_instruction: "이제 같은 함수를 사용해서, 3개의 꽃들로 부터 꽃꿀을 모으도록 해보세요."
      2-3 Bee Functions 7_instruction: "꽃들이 더 멀리 있습니다.\n주어진 함수를 수정해서 꽃들로부터 모든 꽃꿀을 모아보세요."
      2-3 Bee Functions 8_instruction: "꽃꿀을 7번 모으고, 앞으로 이동한 후, 7개의 꿀을 만드는 함수를 만들어보세요.\n그 함수를 사용해서 각 꽃들로부터 꽃꿀을 모으고, 각 벌집에 꿀을 만들어 넣으세요."
      2-3 Bee Functions 9_instruction: "길을 따라 아래로 내려간 후, 꽃꿀을 얻고, 꿀을 만들고, 다시 처음 위치로 돌아가는 함수를 만들어보세요."
      2-3 Bee Functions Assessment 1_instruction: '형성평가: 주어진 함수를 이용해서 각 꽃에서 꽃꿀을 모아보세요.'
      2-3 Bee Functions Assessment 2_instruction: '형성평가: 꿀벌이 앞으로 이동해서 3개의 꿀을 만들고, 다시 돌아오는 함수를 만들어보세요.'
      2-3 Bee Loops 1_instruction: "저 꽃들이 달콤해 보여요!\\r\n\\r\n최대한 적은 블록들을 사용해 각 꽃들에서 꽃꿀을 모아보세요."
      2-3 Bee Loops 10_instruction: "모든 꽃꿀을 모을 수 있도록, 다른 2개의 반복 구조 안에 반복 구조를 넣으세요."
      2-3 Bee Loops 11_instruction: "이 꽃밭에 있는 꽃들에서 꽃꿀을 모두 모을 수 있도록\n반복 구조들을 사용해 보세요."
      2-3 Bee Loops 12_instruction: "이 꽃밭에 있는 꽃들에서 꽃꿀을 모두 모을 수 있도록\n반복 구조들을 사용해 보세요."
      2-3 Bee Loops 13_instruction: '형성평가: 최대한 적은 블록들을 사용해서 꽃꿀을 모아보세요.'
      2-3 Bee Loops 1A_instruction: "안녕하세요! 여러분? 저는 꿀벌입니다.\n이 꽃들로부터 꽃꿀을 모을 수 있게 도와주세요. "
      2-3 Bee Loops 2_instruction: "최대한 적은 블록들을 사용해서 모든 꽃꿀을 모으고 꿀을 만들어 보세요."
      2-3 Bee Loops 2A_instruction: "이번에는, 1개의 반복 구조를 사용해서 모든 꿀을 모아보세요."
      2-3 Bee Loops 3_instruction: "최대한 적은 블록들을 사용해서\n각 꽃에서 꽃꿀을 모은 후, 각각의 벌집에 꿀을 만들어 넣어 보세요."
      2-3 Bee Loops 3A_instruction: "모든 꽃꿀을 모으기 위해, 반복 구조를 사용해보세요."
      2-3 Bee Loops 3B_instruction: "반복 블록을 사용해서, 꽃꿀을 모두 모으고 꿀을 만들어보세요."
      2-3 Bee Loops 4_instruction: "꿀벌이 엄청 바쁘네요!\\r\n\\r\n최대한 적은 블록들을 사용해서\n꽃꿀을 모으고 꿀을 만들 수 있도록 꿀벌을 도와 주세요."
      2-3 Bee Loops 4A_instruction: "이 퍼즐을 해결하려면 몇 번 반복해야할까요? \\r\n\\r\n반복 실행 구조는 매우 편리합니다!\n반복 실행 구조를 사용해서 최대한 적은 블록들로 해결해 보세요."
      2-3 Bee Loops 5_instruction: "이 길의 모양은 다른 것들과 다릅니다. \\r\n\\r\n최대한 적은 블록들을 사용해서 꽃꿀을 모두 모아보세요."
      2-3 Bee Loops 6_instruction: "꿀벌이 꽃꿀을 모으고 꿀을 만들 수 있는 가장 빠른 방법을 찾을 수 있나요?"
      2-3 Bee Loops 7_instruction: "와 꽃밭이 이쁘네요!\n7 블록보다 적은 블록을 사용해서 꿀벌이 모든 꽃들을 살펴볼 수 있게 해주세요."
      2-3 Bee Loops 8_instruction: "자주색 꽃들이 몇 개의 꽃꿀을 가지고 있는지 알 수 없습니다. \\r\n\\r\n\"꽃꿀이 있으면\" 반복 블록을 이용해서, 모든 꽃꿀을 모아보세요. \\r\n\\r\n이 반복 구조는 조건이 참인 동안 계속 반복됩니다. 이 경우에서는 '꽃꿀의 개수>0' 인 동안 반복되는 것입니다."
      2-3 Bee Loops 9_instruction: "반복(~인 동안) 블럭은 그 안에 \"만약\" 조건문이 있는 것과 같습니다.\n반복 블럭 안에 이 코드를 추가해서 같은 역할을 하도록 만들어보세요."
      2-3 Bee Loops Assessment 1_instruction: '형성평가: ''~인 동안'' 반복 구조를 이용해서, 이 꽃에서 꽃꿀을 모두 모아보세요.'
      2-3 Maze 1_instruction: "나쁜 돼지를 잡을 수 있게 도와주세요! \"실행하면\" 블록 아래에 \"앞으로 이동\" 블록들을 여러 개 쌓아 붙인 후, \"실행\"을 눌러보세요. "
      2-3 Maze 10_instruction: "초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)"
      2-3 Maze 11_instruction: "배가 고파요. 꽃으로 움직여주세요!\n블록을 몇 번 반복하면 될까요?"
      2-3 Maze 12 (copy 1)_instruction: "이전 퍼즐에서의 답을 단 2개의 블록으로 바꿔보세요!\n(힌트: \"반복 횟수\" 블록을 사용하는 반복 구조를 만들어보세요.)"
      2-3 Maze 12 (copy 2)_instruction: "이전 퍼즐에서의 답을 단 2개의 블록으로 바꿔보세요!\n(힌트: \"반복 횟수\" 블록을 사용하는 반복 구조를 만들어보세요.)"
      2-3 Maze 12 (old)_instruction: "반복 횟수 블록을 이용해서, 돼지에게로 이동시켜 주세요."
      2-3 Maze 12 - One Move Block_instruction: "돼지를 잡아요! 하지만이 이번에는 '앞으로 한 칸 이동' 블록만 사용할 수 있습니다. 필요한 다른 블록이 있나요?"
      2-3 Maze 12_instruction: "1개의 '반복' 블록 안에 1개의 '앞으로 이동' 블록이 들어있는 반복 실행 구조를 이용해서 돼지에게로 이동시켜주세요."
      2-3 Maze 13 (old)_instruction: "저를 돼지에게 보내주세요. 이번에는 반복(~할 때까지) 블록을 사용하세요."
      2-3 Maze 13_instruction: "2개의 블록만 더 추가해서 돼지에게로 보내주세요.\\r\n(참고: 이 레벨을 깨기 위해서는 마법의 \"반복(횟수)\" 블록을 사용해야 합니다.)"
      2-3 Maze 14 (old)_instruction: "\"반복 ~까지\" 블록을 사용해서 저를 돼지에게 이동시켜주세요!"
      2-3 Maze 14_instruction: "저를 해바라기로 보내주세요!\n(\"반복 횟수\" 블록이 필요하면 어디에 두어야 할까요?)"
      2-3 Maze 15 (old)_instruction: "\"반복 ~까지\" 블록을 사용해서 저를 돼지에게 이동시켜주세요!"
      2-3 Maze 15_instruction: "이 퍼즐에서는 두 개의 반복(횟수) 블록을 이용하면 블록들을 최소한으로 사용할 수 있습니다."
      2-3 Maze 16 (old)_instruction: "\"반복 ~까지\" 블록을 사용해서 저를 돼지에게 이동시켜주세요!"
      2-3 Maze 16 before_instruction: "어떻게 하면 돼지에게로 최대한 빠르게 이동할 수 있을까요?"
      2-3 Maze 16_instruction: "반복 실행 구조 안에는 여러 개의 블록을 넣을 수 있습니다! 이 단계들을 반복 실행시켜 좀비를 해바라기로 이동시켜주세요."
      2-3 Maze 2_instruction: "돼지가 내 깃털들을 마구 헤집어 놓으며 다니고 있어요. 저를 돼지에게 보내주세요!"
      2-3 Maze 3_instruction: "길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이 날라다니지 않도록 해야 돼!"
      2-3 Maze 4_instruction: "초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)"
      2-3 Maze 5_instruction: "초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)"
      2-3 Maze 6_instruction: "나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날 것 같아!"
      2-3 Maze 7_instruction: "초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)"
      2-3 Maze 8_instruction: "저를 돼지에게 이동시켜 주세요."
      2-3 Maze 9_instruction: "초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)"
      2-3 Maze Loops 1_instruction: "5 개의 블록들만 사용해서 돼지로 이동시켜 주세요."
      2-3 Maze Loops 17_instruction: "해바라기로 이동하기 위해서 여러분들이 배운 것들을 사용해보세요!"
      2-3 Maze Loops 18_instruction: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\r\n\\r\n반복 실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      2-3 Maze Loops 19_instruction: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\r\n최소한의 반복 실행 구조를 사용해서 해바라기로 이동시켜주세요."
      2-3 Maze Loops 20_instruction: "블록들을 최대한 적게 사용해서 해바라기로 이동시켜주세요!"
      2-3 Maze Loops 21_instruction: "블록들을 최대한 적게 사용해서 해바라기로 이동시켜주세요!"
      2-3 Maze Loops Assessment 1_instruction: '형성평가: 5개의 블록만 사용해서, 저를 해바라기로 보내주세요! '
      2-3 Maze sq1_instruction: "This pig is ruffling my feathers.  Help me find\nhim!"
      2-3 Maze sq10_instruction: "저를 돼지에게로 이동시켜주세요! 어떤 블록들이 반복되나요?"
      2-3 Maze sq10v2_instruction: "저를 돼지에게로 이동시켜주세요! 어떤 블록들이 반복되나요?"
      2-3 Maze sq2_instruction: "길을 따라 이동해서, 돼지에게 보내주세요.\nTNT를 피하지 않으면 깃털들이 날리게 됩니다."
      2-3 Maze sq3_instruction: "초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)"
      2-3 Maze sq4_instruction: "나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날 것 같아!"
      2-3 Maze sq5_instruction: "저를 돼지에게 보내주세요! 블록을 몇 번이나 반복해야 할까요?"
      2-3 Maze sq6_instruction: '이전의 반복을 블록 두개로 바꿔서 처리해 볼까요?(힌트: "반복횟수" 블록을 사용해 루프를 만들어 보세요)'
      2-3 Maze sq7_instruction: "3개의 블록만 사용해서, 초록색 강도에게 보내주세요."
      2-3 Maze sq8_instruction: "저를 돼지에게 이동시켜주세요!\n(\"반복 횟수\" 블록이 어디에 필요할까요?)"
      2-3 Maze sq9_instruction: "더 적은 블록들을 사용해서 돼지에게 이동시켜주는, 반복 구조를 만들어보세요."
      2-3 maze sq11_instruction: "저를 돼지에게로 이동시켜주세요! 어떤 블록들이 반복되나요?"
      2-3 maze sq12_instruction: "이전의 방법을 \"반복 횟수\" 블록을 이용해서 반복으로 바꿀 수 있을까요?"
      2-3 maze sq13_instruction: "이봐요. 저 좀비. 해바라기... 반드시... 가야합니다.\n\"~할 때까지 반복\" 블록을 이용해서 반복 구조를 만들어보세요."
      2-3 maze sq14_instruction: "4개의 블럭만 사용해서 해바라기로 갈 수 있나요?"
      2-3 maze sq15_instruction: "5개의 블럭만 사용해서 해바라기로 갈 수 있나요?"
      2-3 maze sq16_instruction: "좋아요, 이번에도 비슷한데 약간 다르네요.\n5개의 블록만 가지고 해보세요."
      2-3_instruction: "Purple flowers may have either 1 or 0 nectar. Be careful\nnot to collect nectar from a purple flower if it doesn't have any."
      2-3level1_instruction: "새를 앞으로 이동시켜서, 나쁜 돼지를 잡아보세요."
      20hr_farmer_stage9_1_instruction: "Hi, I'm a farmer. I need your help to flatten\nthe field on my farm so it's ready for planting. Move me to the pile of dirt\nand use the \"remove\" block to remove it."
      20hr_farmer_stage9_10_instruction: "I'm working late, so it's dark out, and\nI can't tell how large the piles are. Now I don't have all the options I\nused to have on the while block. Move me along the field, and if there is\na pile, remove it"
      20hr_farmer_stage9_11_instruction: "It's still dark outside. Move me along\nthe field. If there is a pile, remove it, and if there is a hole, fill it\nin. Hint: use the dropdown menu of options on the \"if\" block."
      20hr_farmer_stage9_2_instruction: "Next, move me to the hole and fill it with\nTWO shovelfuls of dirt, using the \"fill\" block."
      20hr_farmer_stage9_3_instruction: "Move me to the pile of dirt and tell me\nhow many shovelfuls to remove using as few blocks as possible."
      20hr_farmer_stage9_4_instruction: "Can you help me remove all four piles of\ndirt? Hint: use a repeat block if you can."
      20hr_farmer_stage9_5_instruction: "Help me fill in all these holes with 5 shovelfuls\nof dirt. Hint: you can put a \"repeat\" block inside the \"while\" block."
      20hr_farmer_stage9_6_instruction: "Remove all the piles of dirt, using as few\nblocks as possible. The new options in the dropdown menu on the \"while\"\nblock tell me if I'm standing on a pile or a hole."
      20hr_farmer_stage9_7_instruction: "Wow, I found a really deep hole! I don't\nknow how many shovelfuls of dirt it needs. Can you write a program that fills\nit until the ground is even?"
      20hr_farmer_stage9_8_instruction: "Help me fill in the hole at the end of the\nfield, using as few blocks as possible."
      20hr_farmer_stage9_9_instruction: "Make me remove all these piles of dirt.\nTry to use as few blocks as possible. Hint: try using a \"while\" block."
      20hr_maze_stage2_1_instruction: "Can you help me to catch the naughty pig?\nStack a couple of \"move forward\" blocks together and press \"Run\" to help\nme get there."
      20hr_maze_stage2_10_instruction: "Ok, try the new \"repeat until\" block -\nit will repeat until I reach the annoying pig."
      20hr_maze_stage2_11_instruction: "Ok, one last time for practice - can you\nsolve this one using only 4 blocks?"
      20hr_maze_stage2_12_instruction: "Dear person. Me zombie. Me hungry. Must...\nget... to sunflower... Can you get me there with only 5 blocks?"
      20hr_maze_stage2_13_instruction: "Ok, this is similar, but slightly different.\nCan you do it in only 5 blocks?"
      20hr_maze_stage2_14_instruction: "Use the new \"if\" block to let me decide\nwhen to turn. Hint: you only need one more block, but learn how we set it\nup so you can do it on your own next time."
      20hr_maze_stage2_15_instruction: "Ok, this is just like the last puzzle, but\nyou need to remember how you used the \"if\" block and the \"repeat\" block\ntogether."
      20hr_maze_stage2_16_instruction: "Me want sunflower! Use an \"if\" block to\nget me there with the fewest number of blocks."
      20hr_maze_stage2_17_instruction: "Ok, let's do that again for practice - this\nisn't very different, but watch out for the chompers!"
      20hr_maze_stage2_18_instruction: "The \"If-else\" blocks checks a condition,\nand then does one thing OR another. To get me to the sunflower try to use\nthis new block."
      20hr_maze_stage2_19_instruction: "One more practice of the \"if-else\" block,\ncan you get it right on your first try?"
      20hr_maze_stage2_2_instruction: "This pig is ruffling my feathers. Help me\nto find him!"
      20hr_maze_stage2_20_instruction: "Can you add just 3 blocks to help me solve\na more complex maze? If you do it right, I can walk any curvy path no matter\nthe length."
      20hr_maze_stage2_3_instruction: "Trace the path and lead me to the silly pig.\nAvoid TNT or the feathers will fly!"
      20hr_maze_stage2_4_instruction: "Guide me to the green evilness! (Watch out\nfor TNT)"
      20hr_maze_stage2_5_instruction: "Keep calm and help me to find the bad pig.\nOtherwise I might get angry!"
      20hr_maze_stage2_6_instruction: "There's a way I can get to the silly pig\nusing only 2 blocks. Can you figure it out?"
      20hr_maze_stage2_7_instruction: "Try to get me to the green intruder using\nonly three blocks."
      20hr_maze_stage2_8_instruction: "Help me banish this bad piggy using the fewest\nnumber of blocks. Try using more than one \"repeat times\" block."
      20hr_maze_stage2_9_instruction: "When a block is grey, that means you can't\ndelete it. Solve this puzzle using the \"repeat\" block that repeats 3 times.\nTry putting these 3 blocks inside the grey \"repeat\" block: move, move, turn."
      4-5 Artist 1_instruction: "상자 그리기를 완성할 수 있도록 도와주세요.\n(선의 길이는 300 픽셀입니다.) "
      4-5 Artist 10_instruction: "\"실행\"을 눌러 코드를 확인하세요. 그 다음에\n그림을 완성하기 위해서 충분히 반복시키세요. 색은 그때마다 바뀔 것입니다."
      4-5 Artist 11_instruction: "녹색 줄들을 다 그리세요. 줄들의 길이는 300 픽셀로\n15 픽셀 만큼씩 떨어져 있습니다."
      4-5 Artist 2_instruction: "사각형을 완성할 수 있도록 '반복' 블록으로 이 코드를 반복시켜주세요."
      4-5 Artist 3.5_instruction: "그럼 이번에 이 코드를 실행(또는 \"실행\" 누르기) 하면 \n무슨일이 벌어질지 생각해 보세요. 그 다음에 여러 번 반복해서 그림을 완성해 보세요!"
      4-5 Artist 3_instruction: "이 사각형 꽃 침대는 주변 둘레가 600입니다.\n긴 쪽의 길이는 200 입니다. 가능한 적은 블록을 사용하여 사각형을 그려보세요."
      4-5 Artist 4_instruction: "하나의 원 안에는 얼마나 많은 각이 있을까요? 블록들을 반복\n실행해서 무지개색의 원을 한 개 만들어 보세요."
      4-5 Artist 5_instruction: "좀비가 주어진 루프를 이용하여 이 그림을 정확하게 완성하도록 하려면 \"???\"를 무엇으로 바꿔야 할까요?"
      4-5 Artist 6_instruction: "이 정삼각형의 안쪽 각도는 60, 60, 60 도 입니다.\n각 변의 길이는 200 픽셀입니다. 그림을 완성해 보세요."
      4-5 Artist 7_instruction: "이 직각삼각형의 안쪽 각도는 30, 60, 90 도 입니다.\n기울어진 변의 길이는 200 픽셀입니다. 그림을 완성해 보세요."
      4-5 Artist 8_instruction: "축구장의 중앙선은 사이드라인과 *직각*입니다.  \\r\n이 경기장의 둘레는 800 픽셀이고 세로 길이는 240 픽셀입니다. 가로 길이는 얼마일까요? \\r\n\\r\n경계선과 중앙선을 그려보세요."
      4-5 Artist 9_instruction: "디자인이 대칭이 되도록 나머지 반을 그려보세요. 삼각형들은 한 변의 길이가 50 픽셀인 정삼각형입니다."
      4-5 Artist Assessment 1_instruction: "형성평가: 정삼각형을 그릴 수 있도록 반복 구조를 사용해 보세요.\n각 변의 길이는 300 픽셀입니다."
      4-5 Artist For Loops 1_instruction: "너비 블록들에 1부터 10까지 넣어 실행시켜보세요."
      4-5 Artist For Loops 11_instruction: "\"반복 ~인 동안\" 블록으로 0, 20, 40, 60, 80,..., 200 을 카운트 할 수 있도록 해보세요."
      4-5 Artist For Loops 12_instruction: "\"부터\" 와 \"까지\" 의 수를 서로 바꾸면 어떻게 될까요?\n\"반복 ~인 동안\" 블록으로 200, 180, 160, 140, 120,...,0 으로 카운트 할 수 있도록 해보세요. "
      4-5 Artist For Loops 13_instruction: "이 디자인은 \"반복 ~인 동안\" 블록이 없어서 아주 많은 블록들을 사용하고 있습니다.\n이 나선 모양을 완성하기 위해서 \"반복 ~인 동안\" 블록을 사용해보세요.\n힌트: 마지막 선은 250 픽셀 크기입니다."
      4-5 Artist For Loops 14_instruction: '코드를 배우기 시작하고나면 더 빠른 방법들이 있다는 것을 알게 됩니다. 삼각 나선구조를 완셩하기 위해서 사용된 블록들을 "for" 블록으로 바꿔보세요. (힌트: 마지막 선의 길이는 300 픽셀입니다.)'
      4-5 Artist For Loops 15_instruction: '코드를 배우기 시작하고나면 더 빠른 방법들이 있다는 것을 알게 됩니다. 육각 나선구조를 완셩하기 위해서 사용된 블록들을 "for" 블록으로 바꿔보세요. (힌트: 마지막 선의 길이는 200 픽셀입니다.)'
      4-5 Artist For Loops 2_instruction: "이것은 for 반복 블록입니다. 1, 2, 3... 10, 을 일일이 입력하는 대신, for 블록 안에 포함되어있는 블록들을 원하는 만큼 반복 실행시켜줍니다. for 블록 안에 to 부분에 10을 넣어보세요."
      4-5 Artist For Loops 3_instruction: "어떻게 하면 1부터 50까지 카운트 할 수 있을까요?\n\"반복 ~인 동안\" 블록을 수정해 보세요."
      4-5 Artist For Loops 4_instruction: "\"반복 ~인 동안\" 블록으로 1부터 10까지, 1만큼 씩 증가하며 카운트해 보세요."
      4-5 Artist For Loops 6_instruction: "50, 60, 70, 80, 90 픽셀 크기의 정사각형들을 그려보세요. \"사각형 그리기\" 함수 블록을 5 번 사용면 됩니다."
      4-5 Artist For Loops 7_instruction: '같은 삼각형들을 그려봅시다. 이번에는 "count with" 블록을 이용해서 크기들을 바꿔보세요. "사각형 그리기" 함수 안에 "카운터" 블록을 넣어보세요. 힌트: 변수 카테고리에 있습니다.'
      4-5 Artist For Loops 8_instruction: "10부터 200까지 10씩 올리며 카운트하면서 반복하도록 \"for\" 블록 안에 다른 블록들을 넣어 완성 시켜주세요. 반복 카테고리에서 \"for\" 블럭을 찾을 수 있습니다."
      4-5 Artist For Loops 9_instruction: "이 원들의 크기는 5, 10, 15, 20, 25, 30, 35 입니다.\n\"반복 ~인 동안\" 블록을 사용해서 원들을 그려보세요."
      4-5 Artist Free Draw 1_instruction: "자유롭게 그려보세요!\n무엇이든지 그리고 싶은 것을 그려보세요."
      4-5 Artist Functions 1_instruction: "반복 구조를 이용해서 이 삼각형을 그려보세요."
      4-5 Artist Functions 10a_instruction: "이 코드를 \"눈송이 그리기\" 함수 안에 넣고 50 값을 \"크기\" 변수로 바꿔주세요. 이 함수는 100 픽셀 크기의 눈송이들을 만들기 위해서 사용되었습니다."
      4-5 Artist Functions 10b_instruction: '"눈송이 그리기" 함수를 이용해서 서로 다른 크기의 눈송이들을 만들어 보세요. 힌트: 첫 번째 눈송이의 길이는 25이고 그 이후로는 2배씩 커지면 됩니다.'
      4-5 Artist Functions 11_instruction: '이 "육각형 그리기" 함수는 "삼각형 그리기" 함수를 사용합니다. (힌트: 육각형은 6개의 변들로 이루어져 있으며, 각 변의 길이는 100 픽셀입니다.)'
      4-5 Artist Functions 12_instruction: '"웨이브 그리기" 함수를 완성해 봅시다. 각 웨이브는 위아래로 한 번씩 구부러진 모양입니다. 힌트: 5개의 파란 웨이브를 그려보세요.'
      4-5 Artist Functions 13 Free play_instruction: "행성, 별, 로켓, 로봇을 그리기 위한 함수들이 여기 있습니다. 함수들을 자유롭게 이용해서 여러분이 원하는 그림들을 그리고 친구들에게 공유해 보세요."
      4-5 Artist Functions 14 Free play_instruction: "여기 여러가지 함수들을 만들어 드렸습니다. 한 두개 이상의 반복 구조 안에 넣어서 사용해 보세요. 여러분이 원하는 그림들을 만들어서 친구들에게 공유해 보세요. \"실행\" 을 눌러 예시를 살펴보세요."
      4-5 Artist Functions 15 Assessment_instruction: '형성평가: "사각형 그리기" 블록을 사용해 사각형들을 그려보세요. 사각형들의 각 변의 길이는 50, 100, 15 픽셀입니다.'
      4-5 Artist Functions 2a_instruction: "자 이제 이 블록들을 \"작은 삼각형 그리기\" 라는 새로운 함수에 넣고, 사용해 보세요."
      4-5 Artist Functions 2b_instruction: "자 이제 주어진 블록들을 이용해서 \"작은 삼각형 그리기\" 함수를 만들어보세요."
      4-5 Artist Functions 3_instruction: "\"중간 삼각형 그리기\", \"큰 삼각형 그리기\" 함수를 만들어보세요.\n\"작은 삼각형 그리기\" 함수가 주어져 있습니다.\n삼각형들의 크기는 50(작은 삼각형), 100(중간 삼각형), 150(큰 삼각형) 입니다. "
      4-5 Artist Functions 4_instruction: "새로운 \"삼각형 그리기\" 함수는 매개변수가 있기 때문에, 이전에 보았던 3개의 다른 함수 모두의 기능을 한 번에 할 수 있습니다. 새로운 함수를 사용해서 같은 크기의 삼각형을 3개 그려보세요."
      4-5 Artist Functions 5_instruction: "\"삼각형 그리기\" 함수를 수정해서 \"사각형 그리기\" 함수로 만들어 주세요."
      4-5 Artist Functions 6_instruction: '"사각형 그리기", "삼각형 그리기" 함수를 이용해 집을 그려보세요. (힌트: 사각형의 한 변의 길이는 200 픽셀입니다.)'
      4-5 Artist Functions 6b_instruction: "삼각형/사각형 그리기 함수들을 추가해서 \"집 그리기\" 함수를 만들어 사용해 보세요."
      4-5 Artist Functions 7_instruction: "\"집 그리기\" 함수를 이용해서 100, 50 픽셀의 집들을 그려보세요. 두 집은 50 픽셀 만큼 떨어져 있습니다."
      4-5 Artist Functions 8_instruction: "\"꽃 그리기\" 함수는 줄기의 높이를 설정할 수 있는 매개 변수가 있습니다. 높이를 200 으로 설정한 다음에 어떻게 되나 살펴보세요."
      4-5 Artist Functions 9_instruction: "3개의 꽃을 그리세요. 첫 번째 꽃은 높이 100, 그 다음에는 50 만큼 씩 커지게 그리면 됩니다. 꽃들은 100 픽셀 만큼씩 떨어져 있습니다."
      4-5 Artist Patterns 1_instruction: "반복 구조를 이용해서 이 사각형을 그려주세요. \\r\n\\r\n각 변은 20 픽셀 입니다."
      4-5 Artist Patterns 10_instruction: "이 코드는 두 줄의 육각형을 만들어 줍니다. - 전체 벌집을 다 그리기 위해서 4번 반복 실행하면 됩니다. \\r\n\\r\n힌트: 가장 마지막 반복에서 120 픽셀 만큼 뒤로 뛰어야, 화가가 화면을 벗어나지 않습니다.\\r\n"
      4-5 Artist Patterns 11_instruction: "반 원을 그리기 위해서 얼마나 반복시켜야 할까요? "
      4-5 Artist Patterns 12_instruction: "반복하는 것을 복사하는데 오른쪽으로 돌기를 왼쪽으로 돌기로 바꾸면 어떻게 될까요? \\r\n\\r\n이 웨이브를 만들기 위해서 반복해 주세요."
      4-5 Artist Patterns 13_instruction: "그림 틀을 만들기 위해서 전체를 4번 반복시켜 보세요. 모서리에 주의하세요 - 90도만 돌면 안됩니다! \\r\n\\r\n3도씩 60번 돌면 반 원을 만들 수 있습니다. 이 코드 블록들 중 어느 것으로 모서리에 사분원(1/4 원) 을 만들 수 있을까요?"
      4-5 Artist Patterns 2_instruction: "어떤 반복 구조 안에 다른 반복 구조를 넣으면, 중첩 반복이라고 부릅니다. 15개의 모든 사각형들이 한 줄로 서려면 바깥쪽 반복 구조를 어떻게 추가해야 할까요?"
      4-5 Artist Patterns 3_instruction: "좀더 어려운 것을 해보아요! 반복 구조 안에 반복 구조를 넣어봤는데, 다음 줄을 그리려면 화가를 다시 이전 위치로 돌려 놓아야 해요. 전체 격자를 그리기 위해서 가장 바깥쪽 반복의 끝에 어떤 블록들을 놓아야 할까요?"
      4-5 Artist Patterns 4_instruction: "이 다이아몬드는 각 변이 50 픽셀이고, 120도 각과 60도 각으로 이루어져 있습니다. 다이아몬드를 그려보세요."
      4-5 Artist Patterns 5.5_instruction: "다이아몬드 격자를 그리기 위해서는 얼마나 많이 반복해야 할까요?"
      4-5 Artist Patterns 5_instruction: "자 이제 한 줄에 6개의 다이아몬드를 그려보세요. \n\\r\n\\r\n다이아몬드 코드에서 2번 반복하던 것을 3번 반복으로 고친 것을 잘 보세요. - 왜 그랬을까요?\\r\n"
      4-5 Artist Patterns 6_instruction: "다이아몬드 격자를 그리기 위해서는 얼마나 많이 반복해야 할까요?"
      4-5 Artist Patterns 7_instruction: "이전 퍼즐에서 사용했던 코드를 변형해서 더 복잡한 패턴을 만들어보세요. 다이아몬드들이 얼마나 겹쳐 그려지는지 살펴보고, 첫 번째 \"뒤로 점프하기\"를 100에서 50사이 정도로 바꿔보세요. - 그리고 나서 두 번째 \"뒤로 점프하기\"는 얼마나 더 멀리 해야 할까요?"
      4-5 Artist Patterns 8_instruction: "반복 구조를 사용해서 각 변의 길이가 40 픽셀이면서 내각의 크기가 60 도인 육각형을 만들어 보세요."
      4-5 Artist Patterns 9.5_instruction: "이 코드를 반복시켜서 두 줄로 육각형들을 만들어보세요. 두 번째 줄이 오른쪽으로 얼마나 빗겨 그려져 있는지 살펴보세요."
      4-5 Artist Patterns 9_instruction: "주어진 코드를 3번 반복시켜서 모든 줄을 그려보세요. \\r\n\\r\n각각의 6각형들은 왼쪽 끝에서 오른쪽 끝까지의 너비가 80픽셀입니다."
      4-5 Artist Patterns Free Play_instruction: "마음대로 그리기 - 원하는 패턴을 직접 만들어보세요."
      4-5 Bee Conditionals - FC Test_instruction: "꿀벌이 꽃꿀을 원합니다. 모두 꽃은 아니기 때문에, 안개 구름 아래에 꽃이 숨어있는지 모두 살펴보아야 합니다. 꽃이면 꽃꿀을 모으면 됩니다."
      4-5 Bee Conditionals 1 (copy 1)_instruction: "The bee can't tell if this is\na flower or a honeycomb. Gather nectar only from flowers, but first check\nif it is a flower or a honeycomb."
      4-5 Bee Conditionals 1_instruction: "구름으로 가려 잘 보이지 않습니다!\n구름 아래에 꽃이 있는지 살펴보고, 꽃이 있는 경우에만 꽃꿀을 모아보세요.\n주의하세요, 계속 바뀝니다!"
      4-5 Bee Conditionals 2 (copy 1)_instruction: "The bee only wants nectar right\nnow. Remember, not all objects are flowers, so check to gather nectar only\nat flowers."
      4-5 Bee Conditionals 2_instruction: "구름들이 더 많습니다! \\r\n\\r\n모든 구름 아래에 꽃들이 있는 것은 아니기 때문에 구름 아래에 꽃이 숨어있는지 살펴보고 꽃꿀을 모아야 합니다. \\r\n\\r\n기억하세요: 모든 구름들 아래에 똑같은 것들이 숨겨진 것은 아닙니다!"
      4-5 Bee Conditionals 3_instruction: "이제 꿀을 만들고 싶습니다.\n이 구름들 중 아래에 벌집이 있을 것입니다. 각 구름을 검사해야합니다!"
      4-5 Bee Conditionals 4 (copy 1)_instruction: "The unknown object is either\na flower or a honeycomb. Use the if/else block to collect nectar if it is\na flower, else to make honey (because it is a honeycomb)."
      4-5 Bee Conditionals 4_instruction: "이 구름들은 꽃이나 벌집을 가립니다! 만약/아니면 블록을 사용해서 꽃인 경우에 꽃꿀을 모으고, 꽃이 아닌 경우(즉, 벌집인 경우)에는 꿀을 만들도록 해주세요."
      4-5 Bee Conditionals 5_instruction: "이 안개 구름들 아래에는 꽃이나 벌집이 있을 수 있습니다.\\r\n\\r\n'만약/그렇지않으면' 블록을 이용해서 꽃이면 꽃꿀을 모으고\\r\n아니면 (즉, 벌집이라면) 꿀을 만들도록 해보세요."
      4-5 Bee Conditionals 6 (copy 1)_instruction: "This purple flower may have either\n3, 2, or 1 nectar. Here an if-else block is combined with another if-else\nblock to create an if, else-if, else block. Complete the solution to collect\nthe unknown amount of nectar."
      4-5 Bee Conditionals 6_instruction: "이 자주색 꽃에는 꽃꿀이 1, 2, 3개 있을 수 있습니다. \\r\n\\r\n이 \"만약\" 블록은 다른 \"만약/아니면\" 블록과 결합되어서, \"만약/(아니고 만약/모두 아니면)\" 명령을 만들어낼 수 있습니다. \n\\r\n\\r\n꽃꿀의 양을 모르는 경우에도 꽃꿀을 모두 얻을 수 있게 해보세요."
      4-5 Bee Conditionals 7_instruction: "자주색 꽃은 꽃꿀이 3, 2, 1 중 하나입니다. \n\\r\n\\r\n\"자주색 꽃 확인\" 함수를 완성하고 이용해서 꽃의 모든 꽃꿀들을 모을 수 있도록 해보세요."
      4-5 Bee Conditionals 8_instruction: "\"꽃을 확인하고 꿀 만들기\" 함수의 내부를 완성해 주세요. \\r\n\\r\n자주색 꽃의 꽃꿀이 3, 2, 1 인 경우에는 모든 꽃꿀을 모으세요. \\r\n그 후에 앞으로 이동해서 꿀을 만들면 됩니다."
      4-5 Bee Conditionals Assessment 1_instruction: "**형성평가:** 이 구름은 한 개의 꽃꿀을 가지고 있는 꽃 아니면 한 개의 꿀을 필요로 하는 벌집을 숨기고 있습니다. \\r\n\\r\n\"꽃꿀을 모으거나 꿀 만들기\" 함수를 완성하고 나서 그 함수를 사용하여 꽃꿀이나 꿀을 모으도록 만들어 주세요.\\r\n"
      4-5 Bee Debugging 1_instruction: "이 블록들이 왜 안되는지 진짜 잘 모르겠어요. \\r\n\\r\n고쳐주세요."
      4-5 Bee Debugging 10_instruction: "오류들을 찾아 고쳐주세요."
      4-5 Bee Debugging 11_instruction: "반복 횟수가 정확한가요?"
      4-5 Bee Debugging 2_instruction: "꿀벌이 꽃꿀을 모아 꿀을 만들 수 있도록 도와주세요."
      4-5 Bee Debugging 3_instruction: "오류들을 찾아 고쳐주세요."
      4-5 Bee Debugging 4_instruction: "이 블록들은 제대로 동작하지 않습니다.\n어떤 패턴인가요?"
      4-5 Bee Debugging 5_instruction: "뭔가 틀린 것 같습니다..."
      4-5 Bee Debugging 6_instruction: "자주색 꽃에는 꽃꿀이 얼마나 있는지 알 수가 없습니다. \\r\n\\r\n퍼즐이 실행될 때마다 꽃에서 모든 꽃꿀을 뽑을 수 있도록, 블록들을 수정해보세요."
      4-5 Bee Debugging 7_instruction: "함수에 뭔가 빠졌습니다..."
      4-5 Bee Debugging 8_instruction: "함수는 맞는데, 정확히 사용되지는 않았습니다."
      4-5 Bee Debugging 9_instruction: "왜 꿀벌이 충분한 꿀을 만들지 못 할까요?"
      4-5 Bee Debugging Assessment 1_instruction: '형성평가: 코드를 수정해 주세요.'
      4-5 Bee Nested Loops 1_instruction: "꽃꿀을 모두 모으기 위해서 반복 구조를 사용해보세요."
      4-5 Bee Nested Loops 2_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      4-5 Bee Nested Loops 3_instruction: "중첩 반복 안에 시작 코드를 넣어서 모든 꽃꿀을 모아보세요."
      4-5 Bee Nested Loops 4_instruction: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\r\n\\r\n중첩 반복을 사용하면 됩니다. "
      4-5 Bee Nested Loops 5_instruction: "중첩 반복 구조를 만들어서 모든 꽃꿀을 모아보세요."
      4-5 Bee Nested Loops 6_instruction: "꽃꿀을 모두 모아주세요."
      4-5 Bee Nested Loops 7_instruction: "반복 구조를 다른 반복 구조 안에 넣어 중첩 반복을 만든 후 꽃에서 모든 꽃꿀을 모을 수 있도록 해보세요."
      4-5 Bee Nested Loops 8_instruction: "반복 구조를 중첩해서, 각 꽃에서 꽃꿀을 모두 모아주세요.\n안쪽 반복 블록을 다른 반복 블록으로 바꿔보세요. "
      4-5 Bee Nested Loops 9_instruction: "반복 구조 안에 반복 구조를 중첩시켜서 이 꽃들로 부터 모든 꽃꿀을 모아보세요."
      4-5 Bee Nested Loops Assessment 1_instruction: "**형성평가:** 반복 구조들을 사용해서 모든 꽃꿀을 모으고 꿀을 만드세요."
      4-5 Bee Nested Loops Rows_instruction: "꽃들로 부터 꽃꿀을 모으세요. 중첩 반복을 사용하면 됩니다."
      4-5 Maze 1 (copy 1)_instruction: "여보세요.. 저.. 좀비.. 해바라기.. 가야함.."
      4-5 Maze 1_instruction: "여보세요.. 저.. 좀비.. 해바라기.. 가야함.."
      4-5 Maze 10_instruction: "4개의 블럭만 사용해서 해바라기로 갈 수 있나요?"
      4-5 Maze 11_instruction: "6개의 블록만 사용해서 해바라기로 갈 수 있나요?"
      4-5 Maze 12_instruction: "좋아요. 이건 약간 다르네요.\n6개의 블록만으로 해보세요."
      4-5 Maze 13_instruction: "저를 돼지에게 이동시켜 주세요."
      4-5 Maze 14_instruction: "저를 돼지에게 이동시켜주세요! 반복(~할 때까지) 블록을 사용하면 됩니다."
      4-5 Maze 2 (copy 1)_instruction: "좀비를 해바라기로 이동시키되, 식충식물은 피해야 합니다."
      4-5 Maze 2_instruction: "좀비를 해바라기로 이동시키되, 식충식물은 피해야 합니다."
      4-5 Maze 3 (copy 1)_instruction: "해바라기.. 로.. 꼭.. 가야합니다."
      4-5 Maze 3_instruction: "해바라기.. 로.. 꼭.. 가야합니다."
      4-5 Maze 4 (copy 1)_instruction: "더 적은 수의 블럭을 사용하기 위해 \"반복\"블럭을 사용해 보세요."
      4-5 Maze 4_instruction: "더 적은 수의 블럭을 사용하기 위해 \"반복\"블럭을 사용해 보세요."
      4-5 Maze 5 (copy 1)_instruction: "블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요."
      4-5 Maze 5_instruction: "블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요."
      4-5 Maze 6 (copy 1)_instruction: "블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요."
      4-5 Maze 6_instruction: "블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요."
      4-5 Maze 7_instruction: "여보세요.. 저.. 좀비.. 해바라기.. 가야함.."
      4-5 Maze 8_instruction: "가능한 적은 블록을 사용해서 좀비가 해바라기로 가도록 해주세요. \\r\n(식충식물들은 피해야 합니다!)"
      4-5 Maze 9_instruction: "\"~할 때까지 반복\" 이라고 부르는 새로운 블럭이 있습니다. \\r\n이 블록은 좀비가 해바라기에게 갈 때까지 명령을 반복하도록 해줍니다. \\r\n\\r\n\"~할 때까지 반복\" 블록을 사용하고 가능한 적은 블록으로 퍼즐을 해결해 보세요."
      4-5 Maze Assessment 1_instruction: '형성평가: 최대한 적은 블록을 사용하여 해바라기로 가기'
      4-5 Maze Conditionals 1_instruction: "\"~할 때까지 반복\" 블록을 이용해서,\n좀비를 해바라기로 이동시켜주세요."
      4-5 Maze Conditionals 10_instruction: "블럭을 3개 더 붙여서, 좀비가 좀 더 복잡한 미로를 빠져나갈 수 있도록 도와주세요.\\r \n\\r \n성공한다면 아무리 크고 복잡한 미로라고 하더라도 거뜬히 통과할 수 있을거예요."
      4-5 Maze Conditionals 2_instruction: "\"~할 때까지 반복\" 블록을 이용해서,\n좀비를 해바라기로 이동시켜주세요."
      4-5 Maze Conditionals 3_instruction: "\"만약\" 블록을 이용하면, 언제 돌아야 할지 판단할 수 있습니다. \\r\n"
      4-5 Maze Conditionals 4_instruction: "음... 이번이 마지막 퍼즐입니다! \"만약\" 블록과 \"반복\" 블록을 함께 사용해야 합니다."
      4-5 Maze Conditionals 5_instruction: "\"나 해바라기 원해!\" \\r\n\\r\n\"만약\" 블록을 사용하고 최대한 적은 블록만 사용해서 좀비를 해바라기로 보내주세요."
      4-5 Maze Conditionals 6_instruction: "\"해바라기 먹어!\" \\r\n\\r\n\"만약\" 블록을 사용하고 최대한 적은 블록만 사용해서 좀비를 해바라기로 보내주세요."
      4-5 Maze Conditionals 7_instruction: "이 퍼즐을 해결하는 것이 그리 어렵지는 않지만, 식충 식물을 조심하세요!"
      4-5 Maze Conditionals 8_instruction: "\"조건/선택\" 블럭은 조건을 검사한 다음에 그 결과에 따라 하나의 작업을 선택해 실행해 줍니다. \\r\n\\r\n이 블록을 사용해서 저를 해바라기로 보내주세요."
      4-5 Maze Conditionals 9_instruction: "\"조건/선택\" 블록을 다시 한 번 사용해 보겠습니다. \\r\n\\r\n손가락으로 따라가 보세요. 한 번에 성공할 수 있겠어요?"
      4-5 Maze Conditionals Assessment 1_instruction: "**형성평가:** \"~할 때까지 반복\" 블록과 \"만약/아니면\" 블록을 사용하고 가능한 적은 블록으로 저를 해바라기로 보내주세요."
      4-5 Nested Loops 1_instruction: '이 삼각형들을 그리는 코드를 완성시켜 주세요. 첫 번째 것은 만들어져 있습니다. 힌트: 360 도 방향으로 3개의 삼각형들이 있습니다.'
      4-5 Nested Loops 10_instruction: "이전에 사용되었던 반복 블럭들을 사용해서 마지막 줄의 별들을 그려 주세요. 별들은 50 픽셀씩 떨어져 있습니다. 각 별들의 너비는 30 픽셀입니다."
      4-5 Nested Loops 11_instruction: "중첩 반복을 사용해서 사람다니는 길에 10개의 사각형들을 그려주세요. 각 사각형들은 30 픽셀입니다."
      4-5 Nested Loops 12_instruction: "중첩 반복을 이용해서 36개의 삼각형들을 그려주세요."
      4-5 Nested Loops 2_instruction: "이번에는 반복을 다른 반복에 넣어서 10개의 삼각형을 그려보세요.\n이러한 것을 \"중첩\" 반복이라고 합니다.  "
      4-5 Nested Loops 3_instruction: "다른 반복 안에 시작 코드를 중첩시켜 넣어서 해를 만들어 주세요. \\r\n\\r\n이렇게 가운데가 빈 멋진 디자인을 얻기 위해서는 회전하기 전에 삼각형의 길이만큼 앞으로 점프해야 합니다."
      4-5 Nested Loops 5_instruction: "주어진 코드를 반복시켜서 풍차를 만들어 주세요."
      4-5 Nested Loops 6_instruction: "삼각형 코드를 반복시켜서 육각형을 그려 주세요."
      4-5 Nested Loops 7_instruction: "이 디자인을 10번 반복시켜주세요. \\r\n\\r \n한 번 반복하고나서 얼마나 회전해야 할까요? (힌트: 360을 10으로 나누면 얼마일까요?)"
      4-5 Nested Loops 8_instruction: "이 디자인을 6번 반복시켜주세요. \\r\n\\r\n한 번 반복하고나서 얼마나 회전해야 할까요? (힌트: 360을 6으로 나누면 얼마일까요?) "
      4-5 Nested Loops 9_instruction: "악어 입 안에 이빨을 그려주세요!"
      4-5 Nested Loops Assessment 1_instruction: '형성평가: 중첩 반복을 사용해서 디자인을 완성시켜주세요.'
      4-5 While Loops 1_instruction: "구덩이로 이동해서 \"메우기\" 블록으로 흙을 2번 메우기 해주세요."
      4-5 While Loops 2_instruction: "흙더미로 이동하고 \"치우기 1\" 블록으로 흙을 5번 치우기 해주세요."
      4-5 While Loops 3_instruction: "블록을 가능한 적게 사용해서 퍼즐을 해결하세요. \\r\n\\r\n흙더미로 이동해서 흙을 모두 치우고, 구덩이로 이동해서 흙을 모두 메워 주세요."
      4-5 While Loops 4_instruction: "와! 진짜 깊은 구덩이를 발견했습니다. \\r\n\\r\n얼마나 흙을 메워야 할지 모르겠어요. \\r\n\"메우기\" 블록을 사용하여 구덩이가 다 메워질 때까지 계속 흙을 채우는 프로그램을 작성해 보세요.  "
      4-5 While Loops 5_instruction: "와! 이번에는 깊은 구덩이가 2개 입니다. 2개의 구덩이를 모두 채워주세요."
      4-5 While Loops 6_instruction: "와우, 저기 엄청 큰 흙더미가 있네요! 흙더미를 모두 치워보세요."
      4-5 While Loops 7_instruction: "와우, 이제는 3개의 흙더미가 있습니다! 3개의 흙더미를 모두 치워주세요."
      4-5 While Loops 8_instruction: " 진짜 깊은 구덩이와 진짜 큰 흙더미가 있습니다. 구덩이를 메우려면 흙더미를 몇 번 옮겨야 할까요?"
      4-5 While Loops Assessment 1_instruction: "구덩이와 흙더미가 많이 있습니다. 모든 구덩이와 흙더미를 없애주세요."
      AlgPD DR Free Play_instruction: "Create a function based on your own word problem."
      Alien Defender_instruction: 'Project Idea: Make a defender game in Play Lab!'
      AllTheThings Applab - Turtle move with button_instruction: "Add a button that\nmoves the turtle when clicked.  (Click to see full instructions)"
      App Lab test_instruction: "검사"
      AppLab_test02_instruction: "One sentence summary of the activity. Click to\nview full instructions."
      Applab allthethings onRecordEvent_instruction: "Please sign in to test applab\nlevels (By design, applab levels only work if signed in. Normally, we make\npeople sign in, but this is only enforceable for a whole script and would\nbe annoying to do for the allthethings script)."
      Applab test_instruction: "This level is submittable. For testing only!"
      Artist - Nested Loops 1_instruction: "Complete the code to draw these triangles.  The\nfirst one is done for you.  Hint:  3 triangles in a 360 degree rotation."
      Artist - Nested Loops 10_instruction: "Draw the last row of stars on this flag\nby looping the provided blocks. The stars are 50 pixels apart, but remember\nthat the stars themselves are 30 pixels wide."
      Artist - Nested Loops 11_instruction: "Can you draw these 10 squares of this\nsidewalk using a nested loop? Each square is 30 pixels."
      Artist - Nested Loops 12_instruction: "Can you draw these 36 triangles using\na nested loop?"
      Artist - Nested Loops 2_instruction: "Now nest this loop inside another loop\nto draw 10 triangles.  This is called a nested loop.  Hint: All 10 triangles\ncomplete a 360 degree rotation.  "
      Artist - Nested Loops 3_instruction: "Create a sun by nesting the starter code\nin another loop. This is called a nested loop.\\r\n"
      Artist - Nested Loops 5_instruction: "Loop the given code to create a windmill."
      Artist - Nested Loops 6_instruction: "Can you draw a hexagon by looping the\ntriangle code?"
      Artist - Nested Loops 7_instruction: "Loop this design 10 times. How much do\nyou have to turn each time you loop? (Hint: What is 360 divided by 10?)"
      Artist - Nested Loops 8_instruction: "Loop this design 6 times. How much do\nyou have to turn each time you loop? (Hint: What is 360 divided by 6?)"
      Artist - Nested Loops 9_instruction: "Draw the teeth in the alligator's mouth!"
      Artist - Nested Loops Assessment 1_instruction: "중첩 반복을 사용해서 디자인을 완성시켜주세요."
      Artist Inspiration_instruction: "Free Play Inspiration: You've now learned\neverything you need to know to make a pattern like this! If this picture inspires\nyou, try to make something similar. Otherwise, create something all your own.\\r\n\n\\r\nWant to know how our inspiration pattern was made? "
      Auto Open Function Editor_instruction: "함수 안에서, 다른 함수를 불러 사용할 수 있습니다!\n\"모양\" 함수를 기본으로 활용해서, 50 픽셀 크기로 시작한 후, 20 픽셀 만큼 씩 커지는\n3개의 집 모양을 만들어 보세요. 반복 카운터 구조를 사용하면 꽤 도움이 될 것입니다. "
      Bee Recommended Blocks test_instruction: "자주색 꽃들은 1 또는 0 의 꽃꿀이 있지만, 정확히 알 수 없습니다. 꽃꿀이 없는 자주색 꽃에서 꿀을 모으지 마세요. if 블록을 사용해서 꽃꿀이 1 만큼 있는지 확인해 주세요."
      Bergeron Robot Maze1_instruction: "Can you help me catch the naughty pig? Stack\na couple of `move forward` blocks below the `when run` block and press \"Run\".\n"
      Big Game Animation 1 (copy 1)_instruction: "Now that you've learned to write\nsimple linear functions, let's work on using them to add some movement to\nour game. Click play to see what your game can currently do (not much!), update\nany variables you like, and then click finish to move on."
      Big Game Animation 1_instruction: "Now that you've learned to write simple\nlinear functions, let's work on using them to add some movement to our game.\nClick \"Run\" to see what your game can currently do (not much!), update any\nvariables you like, and then click finish to move on."
      Big Game Animation 2 (copy 1)_instruction: "The function 'update-target'\nfunction takes the target's current x value, and returns an updated value.\nComplete the 'update-target' function so that it adds to the x value each\ntime it is called. The more you add to x, the faster the target will go."
      Big Game Animation 2_instruction: "The update-target function takes the target's\ncurrent x value, and returns an updated value. Complete the update-target\nfunction so that it adds to the x value each time it is called. The more you\nadd to x, the faster the target will go."
      Big Game Animation 3_instruction: "The update-danger function should work just\nlike update-target, except that the danger should move from the right side\nover towards the left. Complete update-danger to make the danger fly across\nthe screen."
      Big Game Animation 4_instruction: "At this point in your game, your danger\nshould run across the screen from right to left, and your target should run\nacross from left to right. They don't ever come back on screen once they've\nleft, but we'll take care of that later. Take a minute to make sure your\ngame is working like you want it to, and then click \"Finish\" to move on."
      Big Game Booleans 1_instruction: "When you last worked on your game we got\nour target and danger sprites to fly across the screen, but they never come\nback. Click \"Run\" to see how your game is currently working, and then click\nfinish and we'll work on making those sprites reappear on screen after they've\nleft."
      Big Game Booleans 2_instruction: "Go to the Functions section of the toolbox\nand complete the safe-left? function so that it returns true if the sprite's\nx coordinate is greater than -50. If you're successful you should see the\nDanger go off the left side and then return on the right side."
      Big Game Booleans 3_instruction: "Now that you've got safe-left?, let's fill\nin safe-right? - it should take in a sprite's x coordinate and return true\nif that coordinate is less than 450. Once your safe-right? is complete you\nshould see the Target go off the right side of the screen and return on the\nleft."
      Big Game Booleans 4_instruction: "Complete the onscreen? function so that it\nchecks whether both safe-left? and safe-right? are true."
      Big Game Booleans 5_instruction: "At this point your Danger should run across\nthe screen from right to left, your Target should run across from left to\nright, and they should both return to the opposite side, repeatedly. Take\na minute to make sure your game is working like you want it to, and then click\n\"Finish\" to move on."
      Big Game Collision 1 (copy 1)_instruction: "When you last worked on your game\nwe got our target and danger sprites to fly across the screen, but they never\ncome back. Click run to see how your game is currently working, and then click\nfinish and we'll work on making those sprites reappear on screen after they've\nleft."
      Big Game Collision 1_instruction: "At this point you've programmed a video\ngame with a moving Target and Danger, both of which return to the screen once\nthey've left, and a Player that responds to keyboard input. Click \"Run\"\nto see how your game is currently working, and then we'll dig into the final\nmissing piece - collision detection!"
      Big Game Collision 2_instruction: "To move the player up and down, we'll need\nto use a conditional block to figure out which key is pressed and respond\naccordingly. Computers read keypresses as numeric key codes - the up arrow\nis 38 and the down arrow is 40. You can lookup other key codes in your student\nworkbook. Edit the 'update-player' function so that if moves the player\nup when the up arrow is pressed, or down when the down arrow is pressed."
      Big Game Collision 3_instruction: "Use the Distance Formula, so the distance\nfunction returns the distance between the player's center coordinates (px,\npy) and another sprite's center coordinates (cx, cy)."
      Big Game Collision 4_instruction: "Complete the collide? function so that it\nreturns true if the distance between two points is less than 100 pixels apart."
      Big Game Complete_instruction: "A demo of the completed CS in Algebra Big Game\nproject"
      Big Game Final_instruction: "You made it! At this point your game should be\nfully functioning, take some time to enjoy your new game and make any final\ntweaks to it. When you're happy with the final product, click Finish and\nyou'll have an opportunity to share a link to your game. Good work!"
      Big Game Player 1_instruction: "We're getting really close to a finished game!\nLast time you worked on your game, you used booleans to make your Target and\nDanger return to the screen once they've left. Click Run to see how your\ngame looks right now, and then we'll get to making your Player move up and\ndown."
      Big Game Player 2_instruction: "Edit the update-player function so the player\nmoves up when the up arrow (keycode 38) is pressed, and moves down (keycode\n40) when the down arrow is pressed."
      Big Game Testing_instruction: "A demo of the completed CS in Algebra Big Game\nproject"
      Big Game Vars 1 (copy 1)_instruction: "Let's get started on your Big Game!\nHere you'll see a whole bunch of placeholder code that you'll eventually\nreplace with your own, but for now we're only going to worry about defining\nvariables. Click \"Run\" to see what the game looks like with the default\nvalues."
      Big Game Vars 1_instruction: "Let's get started on your Big Game! Here you'll\nsee a whole bunch of placeholder code that you'll eventually replace with\nyour own, but for now we're only going to worry about defining variables.\nClick \"Run\" to see what the game looks like with the default values."
      Big Game Vars 2 (copy 1)_instruction: "The first step to making this game your\nown is to give it a good Title. Click edit on the 'title' and 'subtitle'\nvariables and change them to something new."
      Big Game Vars 2_instruction: "The first step to making this game your own is\nto give it a good Title. Click edit on the title and subtitle variables and\nchange them to something new."
      Big Game Vars 3 (copy 1)_instruction: "Now let's set the background for your\nnew game. Edit the 'bg' variable and select a new background Image from\nthe dropdown."
      Big Game Vars 3_instruction: "Now let's set the background for your new game.\nEdit the bg variable and select a new background Image from the dropdown."
      Big Game Vars 4 (copy 1)_instruction: "Awesome, now you can update the variables\nfor your Player, Target, and Danger. Feel free to play with all of the variables\nat this point to make your game look like you'd like it to. Click 'finish'\nwhen you're done."
      Big Game Vars 4_instruction: "Awesome! Now you can update the variables for\nyour Player, Target, and Danger. Feel free to play with all of the variables\nat this point to make your game look like you'd like it to. Click \"Finish\"\nwhen you're done."
      Brad Spooky House Copy_instruction: "Freeplay: Here are the functions you've\nwritten, and some more for you to play with. Draw something awesome! Play\nwith the pen width to see how different your drawings look!"
      Brad Spooky House_instruction: "Freeplay: Here are the functions you've written,\nand some more for you to play with. Draw something awesome! Play with the\npen width to see how different your drawings look!"
      Building a Foundation Assessment_instruction: "Build a three level pyramid,\nthere are no other directions, so just play with the pieces until you get\nit!"
      Busy Bee 2_instruction: "이 꿀벌은 아주 바쁘답니다! 단순한 코드를 만들어 낼 수 있는 패턴들을 찾아보세요."
      Busy Bee_instruction: "이 꿀벌은 아주 바쁘답니다! 단순한 코드를 만들어 낼 수 있는 패턴들을 찾아보세요."
      C3-Farmer While Loops 1_instruction: "Move me to the hole and fill it with\ntwo shovelfuls of dirt, using the \"fill\" block."
      C3-Farmer While Loops 2_instruction: "Move me to the pile of dirt and remove\nit with 5 shovel scoops, using the 'remove' block."
      C3-Farmer While Loops 3_instruction: "Move me to the pile and remove all of\nit, then move to the hole and fill it completely.  Hint:  Use as few blocks\nas possible."
      C3-Farmer While Loops 4_instruction: "Wow, I found a really deep hole! I don't\nknow how many shovelfuls of dirt it needs.  Can you write a program that fills\nit until the ground is even?  Hint:  Try using the while loop this time."
      C3-Farmer While Loops 5_instruction: "Wow, now there are two deep holes! Can\nyou write a program that fills them both until the ground is even?"
      C3-Farmer While Loops 6_instruction: "Wow, now there is a large pile of dirt!\nCan you write a program that removes all of it so the ground is even?"
      C3-Farmer While Loops 7_instruction: "Wow, now there are three piles of dirt!\nCan you write a program that removes each of them until the ground is even?"
      C3-Farmer While Loops 8_instruction: " There is a really deep hole and a really\nlarge pile of dirt.  How many shovelfuls of dirt need to be moved around to\nmake the ground flat?  Hint: Use the while loop for both."
      C3-Farmer While Loops Assessment 1_instruction: "There are a lot of holes and\npiles.  Help me to fill and remove them to make the ground flat."
      CSD Hackathon Pt 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Pt 2_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 2_instruction: "(Click to see full instructions)"
      CSD U3 Background Discuss_instruction: "Here's a program that looks pretty\nsimilar to what you've been writing, but may behave quite differently. You'll\nwant to stop and discuss with the class before moving on."
      CSD U3 Background Experiment_instruction: "Here's a program that looks pretty\nsimilar to what you've been writing, but may behave quite differently. You'll\nwant to stop and discuss with the class before moving on."
      CSD U3 Boolean Modify_instruction: "Modify the code so that all of the console.log\ncommands print true"
      CSD U3 Boolean Predict_instruction: "What do you think this code will do when\nit is run? Predict what each console.log() command will print, then run the\nprogram to check your predictions."
      CSD U3 Draw Loop Discuss_instruction: "Here's a program that looks pretty\nsimilar to what you've been writing, but may behave quite differently. You'll\nwant to stop and discuss with the class before moving on."
      CSD U3 Draw Loop Experiment_instruction: "Try using some of the other shape\nfunctions you've learned in the draw loop. What happens when you use randomNumber()\nto generate some of the inputs?You'll want to stop and discuss with the class\nbefore moving on."
      CSD U3 Expressions calculator_instruction: "Add the numbers 1 through 10. Multiply\nthe numbers 1 through 10. Check your answers with a neighbor."
      CSD U3 Frame Rate_instruction: "Slow down Gamelab Gary's animation with frameRate()"
      CSD U3 Keypress Boolean_instruction: "Modify the code so that all of the console.log\ncommands print true"
      CSD U3 Keypress Watchers_instruction: "Modify the code so that all of the console.log\ncommands print true"
      CSD U3 Mouse Input Bee 2_instruction: "Do this"
      CSD U3 Random Animation_instruction: "Use randomNumber() to animate Gary's\nmouth."
      CSD U3 Random Choice_instruction: "Use the randomNumber() block to generate\neither 0 or 1"
      CSD U3 Random Color_instruction: "Could you use randomNumber() to pick random\ncolors as well? Try setting one or more of the channels in the rgb block with\na random number. What should the maximum value be?"
      CSD U3 Random Intro_instruction: "What do you think this code will do when\nit is run? Make a prediction, then run this code 5 - 10 times, recording the\noutput each time. Share your results with your neighbor."
      CSD U3 Random Min Max_instruction: "Using console.log() write a program that\nrandomly returns a number in a range you define."
      CSD U3 Random Width Height_instruction: "Pick a shape block and use calls to\nrandomNumber() in place of one or more of the parameters. Maker sure you run\nit a few times so you can see the effect of randomization."
      CSD U3 Simple Drawing - Animation 2_instruction: "Use randomNumber() on the\nx position and width of your cloud ellipses to introduce a bit of animation."
      CSD U3 Simple Drawing - Animation_instruction: "Use randomNumber() on the x\nposition and width of your cloud ellipses to introduce a bit of animation."
      CSD U3 Simple Drawing - Background_instruction: "Put all of your code into\na draw() loop and then add set the background to blue with the background()\nblock."
      CSD U3 Simple Drawing - Personal Animation_instruction: "DO This"
      CSD U3 Sprites intro sprites_instruction: "Do This"
      CSD U3 Variable Arithmetic pt2_instruction: "Predict: What two numbers will\nbe displayed in the console?"
      CSD U3 Variable Arithmetic_instruction: "Change the value \"size\" initialized\nto make a larger square."
      CSD U3 Variable Incrementation pt2_instruction: "Predict: What two numbers\nwill be displayed in the console?"
      CSD U3 Variable Incrementation_instruction: "Predict: What two numbers will\nbe displayed in the console?"
      CSD U3 Variables CHALLENGE gamelab gary_instruction: "Use variables to animate\nGame Lab Gary"
      CSD U3 Variables Initialize_instruction: "Predict: What will get displayed\nin the console?"
      CSD U3 Variables Intro_instruction: "Create your own variable "
      CSD U3 Variables Random_instruction: "Predict: What will get displayed in the\nconsole?"
      CSD U3 Variables Reassign pt2_instruction: "Create and assign a new variable\nin a single line."
      CSD U3 Variables Reassign_instruction: "Predict: What will get displayed in\nthe console?"
      CSD U3 Variables Square Random Loop_instruction: "Test your predictions from\nthe last level."
      CSD U3 Variables Square Random_instruction: "Change the value \"size\" initialized\nto make a larger square."
      CSD U3 Variables Square_instruction: "Change the value \"size\" initialized\nto make a larger square."
      CSD U3 Variables TEMPLATE square_instruction: "Change the value of petalSize\nmultiple times. How does it change your drawing?"
      CSD U3 Variables change circle size_instruction: "Change the value of petalSize\nmultiple times. How does it change your drawing?"
      CSD U3 Variables create and assign_instruction: "Create and assign size in\na single line of code."
      CSD U3 Variables draw loop newVars_instruction: "Extend this project to create\nyour own random art visualization with variables."
      CSD U3 Variables draw loop rgb_instruction: "Assign the variables x1 and y1\nrandom values inside the draw loop and use them to control where the square\nis drawn."
      CSD U3 Variables draw loop xy_instruction: "Assign the variables x1 and y1\nrandom values inside the draw loop and use them to control where the square\nis drawn."
      CSD U3 Variables eyeBrows_instruction: "Predict what will happen when you move\nthe assignment of eyeSize inside the draw loop. Then try it out"
      CSD U3 Variables make a big square_instruction: "Change the value of size multiple\ntimes. How does it change your drawing?"
      CSD U3 Variables make a square_instruction: "Change the value of size multiple\ntimes. How does it change your drawing?"
      CSD U3 Variables multiple assignments_instruction: "Change the value of petalSize\nmultiple times. How does it change your drawing?"
      CSD U3 Variables naming rules v2_instruction: "Change the value of petalSize\nmultiple times. How does it change your drawing?"
      CSD U3 Variables naming rules_instruction: "Change the value of petalSize multiple\ntimes. How does it change your drawing?"
      CSD U3 Variables random assignment_instruction: "Change the value of petalSize\nmultiple times. How does it change your drawing?"
      CSD U3 Variables random draw loop_instruction: "Predict what will happen when\nyou move the assignment of eyeSize inside the draw loop. Then try it out"
      CSD U3 Variables random drawing exemplar_instruction: "Check out this example\nrandomized drawing."
      CSD U3 Variables random with assignment_instruction: "Change the value of petalSize\nmultiple times. How does it change your drawing?"
      CSD U3 Variables use value rect_instruction: "Predict: What will get displayed\nin the console?"
      CSD U3 Variables write_instruction: "Use the write block to display the value\nof size"
      CSD U3 Variables2 expressions in commands_instruction: "Use expressions inside\na drawing command"
      CSD U3 Variables2 expressions in variables_instruction: "Assign the value of\neach expression to a variable and console.log that variable."
      CSD U3 Variables2 expressions_instruction: "Use console.log to display the\nresults of each expression. Then create your own."
      CSD U4 - Events Template_instruction: "Add a large red button to your screen\nusing Design Mode. (Click for full instructions.)"
      CSD U5 black white images pixelation 2_instruction: "Draw a smiley face (click\nhere to see image)"
      CSD U5 black white images pixelation 3_instruction: "Change the width and height\nsliders to find the image (click here to see more)"
      CSD U5 black white images pixelation 4_instruction: "Add eyebrows to the smiley\nface (click here to see the image)"
      CSD U5 black white images pixelation 5_instruction: "Draw anything you like"
      CSD U5 black white images pixelation_instruction: "Complete the X shape by\ntyping 0s and 1s"
      CSDU4 - AppLab - 1_instruction: "Read the documentation for penColor() and\npenWidth() before using them to draw the blue square."
      CSDU4 - AppLab - 2_instruction: "Write a program that acts as a simple calculator.\n(click to see full instructions)"
      CSDU4 - AppLab - 3_instruction: "Use console to check the ending value of num.\n(Click to see full instructions)"
      CSDU4 - AppLab - 4_instruction: " Use the Debug Commands to make a list of\nall the values rolled before a 6. (Click to see full instructions)"
      CSDU4 - Design Mode - 1_instruction: "Add a button that moves the turtle when\nclicked.  (Click to see full instructions)"
      CSDU4 - Design Mode - 10_instruction: "Introducing the setPosition command!\nReplace the moveTo in the button-click event handler to use setPosition to\nmove the button itself to a random location when it's clicked."
      CSDU4 - Design Mode - 11_instruction: "Experiment with different event types\nand select the one that you think is best. (Click to see full instructions)"
      CSDU4 - Design Mode - 12_instruction: "Use the textLabel command to replace\nthe button in your program with a text label. (Click to see full instructions)"
      CSDU4 - Design Mode - 16_instruction: "Add an event handler for the button\nusing the \"Insert and show\" link in the Design Mode Events tab. (Click to\nsee full instructions)."
      CSDU4 - Design Mode - 17_instruction: "Update the ID names and `console.log`\nmessages to match the correct button. (Click to see full instructions.)"
      CSDU4 - Design Mode - 18_instruction: "Fix the layout of the bullseye game.\n(Click to see full instructions)"
      CSDU4 - Design Mode - 2_instruction: "Run a program with two buttons that have\nthe same id to see the warning message in the console. Change the ids to make\nthe program run without getting a warning message."
      CSDU4 - Design Mode - 24_instruction: "Add an Text Input box for the name and\nage. (Click to see full instructions)"
      CSDU4 - Design Mode - 25_instruction: "Add an event handler to the Submit button\nso that when the button is clicked it will display the name entered in the\ntext box to the console.  Use getText to get the value out of the text box.\n(Click to see full instructions)"
      CSDU4 - Design Mode - 26_instruction: "Save the age and name of the user in\nvariables (Click to see full instructions)"
      CSDU4 - Design Mode - 27_instruction: "Output a message to the 'textArea'\n(Click to see full instructions)"
      CSDU4 - Design Mode - 28_instruction: "Write a greeting to the user when they\nhit 'enter' in the text input, using the 'change' event. (Click to see\nfull instructions)"
      CSDU4 - Design Mode - 29_instruction: "Add a dropdown for their guess instead\nof promptNum (Click to see full instructions)"
      CSDU4 - Design Mode - 30_instruction: "Show different die images for the random\nnumber generated. (Click to see full instructions)"
      CSDU4 - Design Mode - 31_instruction: "Set up an event handler to respond to\nkeypress events, and display event.key in the console. Hit keys on the keyboard\nto see what happens. (Click to see full instructions)"
      CSDU4 - Design Mode - 32_instruction: "Try out the keyup and keydown events\nto see how they are different from keypress. (Click to see full instructions)"
      CSDU4 - Design Mode - 33_instruction: "Change the code so the sound will only\nplay when the up arrow is pressed. (Click to see full instructions)"
      CSDU4 - Design Mode - 4_instruction: "Improve the button by choosing a descriptive\nand meaningful ID. (Click to see full instructions)"
      CSDU4 - Design Mode - 5_instruction: "Debug the program by verifying your IDs\nare being referenced properly. (Click to see full instructions)"
      CSDU4 - Design Mode - 6_instruction: "Debug the program by properly ordering\nyour button commands and event handlers. (Click to see full instructions)"
      CSDU4 - Design Mode - 7_instruction: "Debug the program by fixing the logical\nerror within the program. (Click to see full instructions)"
      CSDU4 - Design Mode - 8_instruction: "Move the button to the middle of the\nscreen. (Click to see full instructions)"
      CSDU4 nameAgeTemplate_instruction: "Add an Text Input box for the name and\nage. (Click to see full instructions)"
      CSDU6 - Arrays - expressionsAsIndexes_instruction: "Write a program that displays\na randomly chosen color from the array. (Click to see full instructions)"
      CSDU6 - Arrays - indexPractice_instruction: "Write the contents of the array\nto the screen in numerical order. (Click to see full instructions)"
      CSDU6 - Arrays - length_instruction: "Use list.length to determine the length\nof each array. (Click to see full instructions)"
      CSDU6 - Arrays - lengthMinus1_instruction: "Use list.length - 1 to log the\nlast item in the array to the console. (Click to see full instructions)"
      CSDU6 - for loop - color buttons with for_instruction: "Write the contents\nof the array to the screen in numerical order. (Click to see full instructions)"
      CSDU6 - for loop - color buttons_instruction: "Write the contents of the array\nto the screen in numerical order. (Click to see full instructions)"
      CSDU6 - for loop - why for_instruction: "Write the contents of the array to\nthe screen in numerical order. (Click to see full instructions)"
      CSP Data Unit - Counting Multiple Things_instruction: "If you can count one\nthing you can count multiple things\\r\n\\r\nFind out how many people like something\nother than dogs and cats\\r\n\\r\nCount dogs\\r\nCount cats\\r\nCount total\\r\nDo\nthe math\\r\n\\r\nblank/ blank toal\\r\n\\r\nCan also use this to find percents\nfrom this\\r\n\\r\nx% are dog lovers"
      CSP Data Unit -Counting Records - Easy Way_instruction: "ReadRecords with specific\ncriteria \\r\nfind the length of an array\\r\n"
      CSP Data Unit -Counting Records - Hard Way_instruction: "\\r\n1. ReadRecords\nfor all records\\r\n2. Way to loop through and count\\r\n"
      CSP U4 - JSON Object Intro - Bad Way_instruction: "Trigger both the keyboard\nand mouse event and examine the event objects displayed in the console. Why\nmight an object be the best way to store this information? (Click to see full\ninstructions)"
      CSP U4 - JSON Object Intro - Good Way_instruction: "Create an object with at\nleast 5 values including at least one string and one number. (Click to see\nfull instructions) "
      CSP U4 - Objects - createObject_instruction: "Create an object with at least\n5 values including at least one string and one number. (Click to see full\ninstructions) "
      CSP student contact info_instruction: "Please enter your email address."
      CSPU5 Add Screens to Chaser Game_instruction: "Recreate the game from the \"Chaser\nGame\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)"
      CSPU5 Add a 2nd Screen_instruction: "Make a 2 screen app with a black screen\nand a white screen. (Click to see detailed instructions)"
      CSPU5 Add full screen image to bg of chaser game_instruction: "Recreate the\ngame from the \"Chaser Game\" with a Welcome Screen and Game Over Screen.\n(Click to see full instructions.)"
      CSPU5 Add game over screen_instruction: "Recreate the game from the \"Chaser\nGame\" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)"
      CSPU5 Add onEvent from Design Mode_instruction: "Add an event handler for the\nbutton using the \"Insert and show\" link in the Design Mode Events tab. (Click\nto see full instructions)."
      CSPU5 Add welcome screen to chaser game_instruction: "Recreate the game from\nthe \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to\nsee full instructions.)"
      CSPU5 Adding Screens Template_instruction: "Make a 2 screen app with a black\nscreen and a white screen. (Click to see detailed instructions)"
      CSPU5 Debugging Overlapping Objects and Screen Events_instruction: "Recreate\nthe \"Chaser Game\" from the last lesson using Design Mode. (Click to see\nfull instructions.)"
      CSPU5 First Time Console.log_instruction: "Add a 3 console.log messages and\ntest them out. (Click to see full instructions.)"
      CSPU5 Layering and Deleting in Design Mode_instruction: "Fix the layout of\nthe bullseye game. (Click to see full instructions)"
      CSPU5 Project - Multi Screen App_instruction: "Create your multi-screen app.\n(Click to see full instructions.)"
      CSPU5 Use Console.log to update IDs_instruction: "Update the ID names and `console.log`\nmessages to match the correct button. (Click to see full instructions.)"
      CSPU5 Use setScreen for first time_instruction: "Make a 2 screen app which\ncan switch back and forth between a black screen and a white screen using\nbuttons. (Click to see detailed instructions.)"
      CSPU5_AddImageToChaserGame_instruction: "Introducing the setPosition command!\nReplace the moveTo in the button-click event handler to use setPosition to\nmove the button itself to a random location when it's clicked."
      CSPU5_AddImage_andMakeChaserGame_instruction: "Introducing the setPosition\ncommand! Replace the moveTo in the button-click event handler to use setPosition\nto move the button itself to a random location when it's clicked."
      CSPU5_AddLabelToChaserGame_instruction: "Introducing the setPosition command!\nReplace the moveTo in the button-click event handler to use setPosition to\nmove the button itself to a random location when it's clicked."
      CSPU5_Debugging predict unexpected behavior - two onEvents to one ID_instruction: "Predict\nwhat will happen. Once you've made a prediction, run the code to see what\nhappens. (Click to see full instructions)"
      CSPU5_FinalizeChaserGame_instruction: "Introducing the setPosition command!\nReplace the moveTo in the button-click event handler to use setPosition to\nmove the button itself to a random location when it's clicked."
      CSPU5_Project - Multi Screen App_instruction: "Create your multi-screen app.\n(Click to see full instructions.)"
      CSPU5_U3 - Arrays - Demo App_instruction: "Use the \"My Favorite Things\" app.\nHow might this app be making use of an array? (Click to see full instructions)"
      CSPU5_U3 - Arrays - appendItem_instruction: "Create an array of odd numbers\n1-11 by using appendItem. (Click to see full instructions)"
      CSPU5_U3 - Arrays - assignment_instruction: "Use indexes to change the values\nin this array from 1 to 0. (Click to see full instructions)"
      CSPU5_U3 - Arrays - assignment2_instruction: "Calculate the sum of three values\nstored in an array. (Click to see full instructions)"
      CSPU5_U3 - Arrays - assignment3_instruction: "Increase the value of each value\nin the randomly generated array by 1. (Click to see full instructions)"
      CSPU5_U3 - Arrays - createFirstArray_instruction: "Create an array of the even\nnumbers from 0 to 10 and display its contents with console.log. (Click to\nsee full instructions)"
      CSPU5_U3 - Arrays - expressionsAsIndexes_instruction: "Write a program that\ndisplays a randomly chosen color from the array. (Click to see full instructions)"
      CSPU5_U3 - Arrays - favThings Counting Variable_instruction: "Create a global\nvariable for the current index and use it to display the first item in the\narray. (Click to see full instructions)"
      CSPU5_U3 - Arrays - favThings Next_instruction: "Write code that allows the\nuser to move forward through your list by clicking the \"Next\" button. (Click\nto see full instructions)"
      CSPU5_U3 - Arrays - favThings Prev_instruction: "Write code that allows the\nuser to move backward through your list by clicking the \"Last\" button. (Click\nto see full instructions)"
      CSPU5_U3 - Arrays - favThings addItem_instruction: "Write code that allows\na user to add their own favorite things to the list. (Click to see full instructions)"
      CSPU5_U3 - Arrays - favThings bounds_instruction: "Add if statements to your\nevent handlers that prevent the global index from going out of bounds. (Click\nto see full instructions)"
      CSPU5_U3 - Arrays - favThings createArray_instruction: "Create an array of\nwords describing your favorite things. (Click to see full instructions)"
      CSPU5_U3 - Arrays - favThings firstOutput_instruction: "Use setText to display\nthe first item in the array. (Click to see full instructions)"
      CSPU5_U3 - Arrays - favThings giveIDs_instruction: "Give your UI elements descriptive\nand meaningful IDs. (Click to see full instructions)"
      CSPU5_U3 - Arrays - favThings keepPlaying_instruction: "Make any other improvements\nyou want! (Click to see full instructions)"
      CSPU5_U3 - Arrays - indexPractice_instruction: "Write the contents of the array\nto the screen in numerical order. (Click to see full instructions)"
      CSPU5_U3 - Arrays - insertingItems_instruction: "Insert items into an array\nto form a complete sentence. (Click to see full instructions)"
      CSPU5_U3 - Arrays - insertionErrors_instruction: "Run each command that references\nindexes that are out of bounds and observe the results. (Click to see full\ninstructions)"
      CSPU5_U3 - Arrays - introIndex_instruction: "Display the first and last element\nin the array. Display the number 5 from the array. (Click to see full instructions)"
      CSPU5_U3 - Arrays - length_instruction: "Use list.length to determine the length\nof each array. (Click to see full instructions)"
      CSPU5_U3 - Arrays - lengthMinus1_instruction: "Use list.length - 1 to log the\nlast item in the array to the console. (Click to see full instructions)"
      CSPU5_U3 - Arrays - remove_instruction: "Remove items from an array to form\na complete sentence. (Click to see full instructions)"
      CSPU5_U3 - Arrays - stringsInArrays_instruction: "Write a sentence word by\nword by adding strings to an array. (Click to see full instructions)"
      CSPU5_U3 - Canvas - 200dots_instruction: "Add a loop to your program that draws\n200 dots on your canvas. (Click to see full instructions)"
      CSPU5_U3 - Canvas - One Dot sprayPaint_instruction: "Write code that redraws\nyour image using a dot whose x and y locations use offsetX and offsetY with\na small random value added. (Click to see full instructions)"
      CSPU5_U3 - Canvas - appendToArray_instruction: "Create an array to store each\nevent parameter. Append each event parameter to this array within your event\nhandler. (Click to see full instructions)"
      CSPU5_U3 - Canvas - changeToMouseMove_instruction: "Change your program so\nthat dots are drawn at the location of the mouse as the user moves the mouse\non the canvas. (Click to see full instructions)"
      CSPU5_U3 - Canvas - clickToAdd_instruction: "Change your program so that dots\nare added to the canvas when the user clicks on it. (Click to see full instructions)"
      CSPU5_U3 - Canvas - delete_instruction: "Create a button that deletes the drawing\nby clearing the canvas and removing all stored values. (Click to see full\ninstructions)"
      CSPU5_U3 - Canvas - draw at click point_instruction: "Change your program so\nthat dots are drawn at the location of the mouse click. (Click to see full\ninstructions)"
      CSPU5_U3 - Canvas - freePlay_instruction: "Extend the functionality of one\nof the effects, or create an entirely new one of your own. (Click to see full\ninstructions)"
      CSPU5_U3 - Canvas - introCanvas_instruction: "Add a canvas to your app and\nset it to be the active canvas. Then add a large dot to your canvas. (Click\nto see full instructions)"
      CSPU5_U3 - Canvas - movementFunction fix Orig_instruction: "Modify the \"Original\"\nbutton event handler so that it takes the movement of the mouse into account.\n(Click to see full instructions)"
      CSPU5_U3 - Canvas - movementFunction_instruction: "Write a function that takes\nthe movement of the mouse as input and generates a line width as output. (Click\nto see full instructions)"
      CSPU5_U3 - Canvas - redrawOriginal_instruction: "Write a function that processes\nyour array, redrawing the dots as they originally appeared. (Click to see\nfull instructions)"
      CSPU5_U3 - Canvas - redrawRandom_instruction: "Set up a button and event handler\nfor the random function. (Click to see full instructions)"
      CSPU5_U3 - Canvas - redrawRandom2_instruction: "Write a function that processes\nyour array, redrawing every dot with a random size. (Click to see full instructions)"
      CSPU5_U3 - Canvas - shiftKey_instruction: "Add an if statement to your event\nhandler so dots are only drawn when the shift key is pressed. (Click to see\nfull instructions)"
      CSPU5_U3 - Canvas - sketch_instruction: "Write code that redraws your image\nusing a sketch effect. (Click to see full instructions)"
      CSPU5_U3 - Canvas - sprayPaint_instruction: "Update the spray paint code so\nthat it redraws your image using multiple random dots instead of using a nested\nfor loop. (Click to see full instructions)"
      CSPU5_U3 - Canvas - transparentDots_instruction: "Change the colors of your\ndots so they have a fully transparent stroke and partially transparent fill.\n(Click to see full instructions)"
      CSPU5_U3 - Canvas - usingOffsetXY_instruction: "Add a console.log command inside\nthe function of your event handler. Use it to display the event parameter.\nClick on the screen to see the contents of the event parameter (Click to see\nfull instructions)"
      CSPU5_U3 - Conditional Basics - 6_instruction: "Add a setText after the if\nstatement to \"Nope. Guess again.\" (Click to see full instructions)"
      CSPU5_U3 - Conditionals - Combine AND OR Simple_instruction: "Write an if statement\nthat uses AND and OR to display \"Sleep in!\" if it's the weekend and the\nuser is a teenager. (Click to see full instructions."
      CSPU5_U3 - Conditionals - Combine AND OR and NOT_instruction: "Write an if\nstatement that uses AND and OR to display \"Time to go to school!\" if it's\nnot the weekend and the user is under 18. (Click to see full instructions.)"
      CSPU5_U3 - Conditionals - Simple AND_instruction: "Write an if statement that\nuses AND to display \"You are a teenager.\" if the user enters an age between\n13 and 19. (Click to see full instructions)"
      CSPU5_U3 - Conditionals - Simple OR_instruction: "Write an if statement that\nuses OR to display \"It's the weekend!\" if the user enters a weekend day\nat the prompt. (Click to see full instructions)"
      CSPU5_U3 - Design Mode - Console Log_instruction: "Update the ID names and\n`console.log` messages to match the correct button. (Click to see full instructions.)"
      CSPU5_U3 - Design Mode - Layers and Delete_instruction: "Fix the layout of\nthe bullseye game. (Click to see full instructions)"
      CSPU5_U3 - Design Mode - Multi Screens 2_instruction: "Make a 2 screen app\nwhich can switch back and forth between a black screen and a white screen\nusing buttons. (Click to see detailed instructions.)"
      CSPU5_U3 - Design Mode - Multi Screens_instruction: "Make a 2 screen app with\na black screen and a white screen. (Click to see detailed instructions)"
      CSPU5_U3 - Design Mode - WTF Console Log_instruction: "Add a 3 console.log\nmessages and test them out. (Click to see full instructions.)"
      CSPU5_U3 - Design Mode -Recreate Beyond Buttons_instruction: "Recreate the\ngame from the \"Chaser Game\" with a Welcome Screen and Game Over Screen.\n(Click to see full instructions.)"
      CSPU5_U3 - Design Mode 1_instruction: "Add a large red button to your screen\nusing Design Mode. (Click for full instructions.)"
      CSPU5_U3 - Dice - Dropdown and Score_instruction: "Add guess and score to the\nDice Game (Click to see full instructions)"
      CSPU5_U3 - Dice - Dropdown with Strings_instruction: "Add a dropdown for difficulty\nlevel that prints the difficulty level in the console. (Click to see full\ninstructions)"
      CSPU5_U3 - Dice - If_instruction: "Show different die images for the random\nnumber generated. (Click to see full instructions)"
      CSPU5_U3 - Dice - Nested_instruction: "Use nested if statements to make the\nscoring different for the different game levels. (Click to see full instructions)"
      CSPU5_U3 - High Low - Debug_instruction: "Debug the order of the conditionals\nso that it will actually tell the user when their guess is close. (Click to\nsee full instructions)"
      CSPU5_U3 - High Low - Dropdown_instruction: "Add a dropdown for their guess\ninstead of promptNum (Click to see full instructions)"
      CSPU5_U3 - High Low - Else if_instruction: "Add an else-if statement in order\nto tell the user if their guess is high or low instead of just wrong. (Click\nto see full instructions)"
      CSPU5_U3 - High Low - Else_instruction: "Add an else statement so that the\nprogram will tell the user when they are right and when they are wrong. (Click\nto see full instructions)\\r\n"
      CSPU5_U3 - High Low - If_instruction: "Add code to the if statement that indicates\nthe user guessed the secret number. (Click to see full instructions)"
      CSPU5_U3 - Keys - Add Image URLs_instruction: "Add image URLs to your array.\nReplace the text area with an image and setText with setImageURL. Then test\nyour app! (Click to see full instructions)"
      CSPU5_U3 - Keys - Buttons and Keys_instruction: "Have the program respond the\nsame way for both clicking images on the screen and hitting the up and down\nkeys on the keyboard. (Click to see full instructions)"
      CSPU5_U3 - Keys - Demo App_instruction: "Play with the image scroller. Press\nthe left and right arrows to progress through the images."
      CSPU5_U3 - Keys - Final Image Scroller_instruction: "Update the image scroller\nto respond to buttons and key presses. (Click to see full instructions)"
      CSPU5_U3 - Keys - Functions_instruction: "Write doUpArrow and doDownArrow functions\nand call the functions instead of duplicating the code. (Click to see full\ninstructions)"
      CSPU5_U3 - Keys - Key Up and Down_instruction: "Try out the keyup and keydown\nevents to see how they are different from keypress. (Click to see full instructions)"
      CSPU5_U3 - Keys - Multiple Keys_instruction: "Play a different sound when the\ndown arrow is pressed. (Click to see full instructions)"
      CSPU5_U3 - Loops -  Complex Condition_instruction: "Change the boolean expression\nfor the while loop so that it will stop when both dice are greater than or\nequal to 5. (Click to see full instructions)"
      CSPU5_U3 - Loops - 1_instruction: "Change the condition for the while loop\nto check if the variable num is less than 90. (Click to see full instructions)"
      CSPU5_U3 - Loops - 10_instruction: "Write a program that simulates the rolling\nof two dice. Roll the dice repeatedly until the sum of the dice is either\n7 or 11."
      CSPU5_U3 - Loops - 11_instruction: "Fix the condition so that it keeps rolling\nthe die as long as the value is not a 2 or a 3 instead of rolling infinitely.\n(Click to see full instructions)"
      CSPU5_U3 - Loops - 12_instruction: "Change the code so that it prints the string\n\"Hi\" 5 times. (Click to see full instructions)"
      CSPU5_U3 - Loops - 14_instruction: "Change the loop condition to prevent the\ninfinite loop and stop counting once the count is past 30. (Click to see full\ninstructions)"
      CSPU5_U3 - Loops - 15_instruction: "Count the number of times the sum of the\ndice is 12. (Click to see full instructions)"
      CSPU5_U3 - Loops - 2_instruction: "Try creating an infinite loop using !=,\n> and <. (Click to see full instructions)"
      CSPU5_U3 - Loops - 3_instruction: "Change the if statement to a while loop\nso the program will run until it rolls a 6. (Click to see full instructions)"
      CSPU5_U3 - Loops - 4_instruction: "Use the Debug Commands to make a list of\nall the values rolled before a 6. (Click to see full instructions)"
      CSPU5_U3 - Loops - 5_instruction: "Add code inside the while loop which will\nupdate the variable num so that the condition will eventually become false.\n(Click to see full instructions)"
      CSPU5_U3 - Loops - 6_instruction: "Fix the problem so the loop will run at\nleast once. Change the initial value of num to a dummy value such as -1. (Click\nto see full instructions)"
      CSPU5_U3 - Loops - 7_instruction: "Without adding any lines of code, reorder\nthe code so that it prints all the values of num. (Click to see full instructions)"
      CSPU5_U3 - Loops - 8_instruction: "Debug which number is not getting printed\nand add a write statement to display that value. (Click to see full instructions)"
      CSPU5_U3 - Loops - 9_instruction: " Modify the condition so that it keeps rolling\nas long as both are less than 3. (Click to see full instructions)"
      CSPU5_U3 - Loops - Minus Minus_instruction: "Change the code to count down\nfrom 10 to 1. (Click to see full instructions)"
      CSPU5_U3 - Loops - Plus Plus_instruction: "Change the code to use count++ instead\nof count = count + 1.  (Click to see full instructions)"
      CSPU5_U3 - Loops - Typing in Console_instruction: "Use console to check the\nending value of num. (Click to see full instructions)"
      CSPU5_U3 - Loops - minus = operator_instruction: "Update the code to use the\n-= operator to count from 30 down to 0 by 3's. (Click to see full instructions)"
      CSPU5_U3 - Loops - plus and minus = operator_instruction: "Update the code\nto use the += operator. (Click to see full instructions)"
      CSPU5_U3 - Loops And Arrays - Add 5_instruction: "Add 5 to all the values in\nan array (Click to see full instructions)"
      CSPU5_U3 - Loops And Arrays - Counting Times_instruction: "Count the number\nof times 5 appears in an array. (Click to see full instructions)"
      CSPU5_U3 - Loops And Arrays - Divid by 2_instruction: "Divide every value in\nthe array by 2. (Click to see full instructions)"
      CSPU5_U3 - Loops And Arrays - Find Min_instruction: "Complete the findMinVal\nfunction to find and display the smallest value in an array  (Click to see\nfull instructions)"
      CSPU5_U3 - Loops And Arrays - General Search Param_instruction: "Add a second\nparameter to the search function for the value to search for.  (Click to see\nfull instructions)"
      CSPU5_U3 - Loops And Arrays - Intro For Loop_instruction: "Add a for loop with\na console.log inside and test out the 3 pieces of the for loop. (Click to\nsee full instructions)"
      CSPU5_U3 - Loops And Arrays - Linear Search_instruction: "Visit every element\nin the array and display \"true\" if the value is a 5, and \"false\" otherwise.\n(Click to see full instructions)"
      CSPU5_U3 - Loops And Arrays - Loop Array If_instruction: "Use an if statement\nto only display the values in the array that are greater than 5. (Click to\nsee full instructions)"
      CSPU5_U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: "Create\na function that takes a list parameter and prints if the list contains a 5.\n(Click to see full instructions)"
      CSPU5_U3 - Loops And Arrays - Make it a Function_instruction: "Move the code\nthat searches the list for a 5 into a function called \"search\". (Click to\nsee full instructions)"
      CSPU5_U3 - Loops And Arrays - Print Array_instruction: "Use a for loop to print\nout all the values in an array. (Click to see full instructions)"
      CSPU5_U3 - Loops And Arrays - Printing Single True_instruction: "Process the\narray and display a single \"true\" if the array contains a 5 or a single\n\"false\" if it does not.  (Click to see full instructions)"
      CSPU5_U3 - Loops And Arrays - Search with Boolean Var_instruction: "Make a\nboolean variable to use as a flag to keep track of whether there is a 5 in\nthe array. (Click to see full instructions)"
      CSPU5_U3 - Movie Bot - Multiple If Sequences_instruction: "Add another set\nof if, else if, and else statements inside the question if statement to check\nfor keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)"
      CSPU5_U3 - Movie Bot - Nested Motivation_instruction: "Add a separate set of\nif statements to check for a \"?\" in the input. (Click to see full instructions)"
      CSPU5_U3 - Movie Bot - When Multiple If Statements_instruction: "Add an if\nand else-if statement that checks for please and thank you. (Click to see\nfull instructions)"
      CSPU5_U3 - Movie Bot - toLowerCase_instruction: "Use the toLowerCase command\nto change all user input into lowercase letters after they enter it. (Click\nto see full instructions)"
      CSPU5_U3 - Practice Create Performance Task_instruction: "Design and implement\nyour practice Create Performance Task. (Click to see full instructions)"
      CSPU5_U3 - Return Values - constrainTurtle_instruction: "Use constrain in this\nsimple app to keep the turtle from driving off the screen.  (Click to see\nfull instructions)"
      CSPU5_U3 - Return Values - debuggingConstrain_instruction: "Correct the error\nin constrain so that it returns the appropriate value.  (Click to see full\ninstructions)"
      CSPU5_U3 - Return Values - debuggingMaxVal_instruction: "Correct the error\nin maxVal so that it correctly reports the maximum value.  (Click to see full\ninstructions)"
      CSPU5_U3 - Return Values - useMinVal_instruction: "Call minVal within the console.log\nstatement to calculate the minimum of two values.  (Click to see full instructions)"
      CSPU5_U3 - Return Values - wrapTurtle_instruction: "Write wrap in this simple\napp to let the turtle \"wrap\" to the other side of the screen when it goes\noff.  (Click to see full instructions)"
      CSPU5_U3 - Return Values - writeMaxVal_instruction: "Write the function maxVal\nand then use it within the console.log statement to calculate the maximum\nof two values.  (Click to see full instructions)"
      CSPU5_U3 - Simulation - 1_instruction: "Use a while loop to \"flip a coin 10\ntimes\" and write the values to the screen. (Click to see full instructions)"
      CSPU5_U3 - Simulation - 2.1_instruction: "Change your looping condition so\nthe simulation runs until there are 5 heads flipped. (Click to see full instructions)"
      CSPU5_U3 - Simulation - 2.5_instruction: "Run your simulation to get the full\n10,000 heads! How long did it take? (Click to see full instructions)"
      CSPU5_U3 - Simulation - 2_instruction: "Keep track of how many heads (1's)\nyour program generates and print the results to the screen. (Click to see\nfull instructions)"
      CSPU5_U3 - Simulation - 3_instruction: "Add functionality that counts how many\nheads in a row are flipped. (Click to see full instructions)\\r\n"
      CSPU5_U3 - Simulation - 4_instruction: "Update your while loop's condition\nso the the coin flips until there are three heads in a row. (Click to see\nfull instructions)"
      CSPU5_U3 - Simulation - 5_instruction: "Change your while loop to run until\nyou get a streak of 12 heads. How many flips did it take? (Click to see full\ninstructions)"
      CSPU5_U3 - Simulation - 6_instruction: "Keep adding to your simulation. What\ndo you want to explore next? (Click to see full instructions)"
      CSPU5_U3 - User Input - Save getText To Variable_instruction: "Save the age\nand name of the user in variables (Click to see full instructions)"
      CSPU5_U3 - Variables - Set to Expression with Other Variables_instruction: "Write\nan expression that calculates the player's total score and stores it in the\ntotalScore variable. The calculation is: the player's points times lives\ndivided by the total time. (click to see full instructions)"
      CSPU5_U3 - Variables - Set to Expression_instruction: "Test out the new expressions.\n(Click to see full instructions)"
      CSPU5_U3 Digital Assistant Design_instruction: "Pick a topic for your Digital\nAssistant and create the basic layout with a text input and text area. (Click\nto show full instructions)"
      CSPU5_U3 Digital Assistant Set Text_instruction: "Have your digital assistant\nrepeat back what the user types and include a canned response. (Click to see\nfull instructions)"
      CSPU5_U3 Digital Assistant Target_instruction: "Try out a demo of the Digital\nAssistant!"
      CSPU5_U3 full clicker demo_instruction: "Clicker game - Try it out!"
      CSPU5_U3- Variables - Create And Assign_instruction: "On one line add a variable\ncalled \"lives\" and assign it the value 3. Print it to the console. (Click\nto see full instructions)"
      CSPU5_U3- Variables - Text Mode_instruction: "1. Switch to text mode and type\ninstructions; 2. drag blocks out into text mode; 3. experiment with code completion"
      CSPU5_U3-Design Mode-ID and Event Handler_instruction: "Add an event handler\nfor the button using the \"Insert and show\" link in the Design Mode Events\ntab. (Click to see full instructions)."
      CSPU5_U3-Design Mode-Image_instruction: "Recreate the \"Chaser Game\" from\nthe last lesson using Design Mode. (Click to see full instructions.)"
      CSPU5_U313 Two Buttons with Ids_instruction: "Predict what will happen. Once\nyou've made a prediction, run the code to see what happens. (Click to see\nfull instructions)"
      CSPU5_U313 drag Two Buttons_instruction: "Run a program with two buttons that\nhave the same id to see the warning message in the console. Change the ids\nto make the program run without getting a warning message."
      CSPU5_U3L13 - Debug Id Problem_instruction: "Improve the button by choosing\na descriptive and meaningful ID. (Click to see full instructions)"
      CSPU5_U3L13 - Debugging 1_instruction: "Debug the program by verifying your\nIDs are being referenced properly. (Click to see full instructions)"
      CSPU5_U3L13 - Debugging 2_instruction: "Debug the program by properly ordering\nyour button commands and event handlers. (Click to see full instructions)"
      CSPU5_U3L13 - Debugging 3_instruction: "Debug the program by fixing the logical\nerror within the program. (Click to see full instructions)"
      CSPU5_U3L13 - Debugging IDs case sensitive_instruction: "Debug the program\nby verifying your IDs are being referenced properly. (Click to see full instructions)"
      CSPU5_U3L13 - Project_instruction: "Create your multi-screen app. (Click to\nsee full instructions.)"
      CSPU5_U3L13 - Turtle Driver Project_instruction: "Create a \"turtle driver\"\nthat includes buttons to move the turtle forward and turn it left and right.\n(Click to see full instructions)"
      CSPU5_U3L13 - Turtle move with button_instruction: "Add a button that moves\nthe turtle when clicked.  (Click to see full instructions)"
      CSPU5_U3L13 eventsDetails_instruction: "Add an event handler to the button\nto move the turtle forward. (Click to see full instructions)"
      CSPU5_U3L14 - Assigning Random Value_instruction: "Write a program that simulates\nthe rolling of two dice and reports their individual values as well as the\nsum. (click to see full instructions)"
      CSPU5_U3L14 - Mini Calculator embed_instruction: "You will be prompted for\ntwo numbers, one right after the other.  See what happens.  Enter different\nnumbers until you get the idea."
      CSPU5_U3L14 - User Input Division calculator_instruction: "Write a program\nthat acts as a simple calculator. (click to see full instructions)"
      CSPU5_U3L14 - Variable ReAssignment pt2_instruction: "Trace the code and predict\nwhat you think will be printed to the console. Then add a console.log statement\nat the end of the program to see the last value of someNum to see if your\nfull prediction is correct. (click to see full Instructions)"
      CSPU5_U3L14 - concatenate simple_instruction: "Modify the write statement on\nline 3 to combine text and variables together to make the app display a single\nline of text that shows the player's lives and score. (click to see full\ninstructions)"
      CSPU5_U3L14 - moving memory challenge1_instruction: "Using only the variables\nprovided, assignment (=) and arithmetic (+ - * /) re-assign the values to\nmake the console.log statement display the correct value(s).  (Click to see\nfull instructions)"
      CSPU5_U3L14 - moving memory challenge2_instruction: "Using only the variables\nprovided, assignment (=) and arithmetic (+ - * /) re-assign the values to\nmake the console.log statement display the correct value(s).  (Click to see\nfull instructions)"
      CSPU5_U3L14 - moving memory challenge3_instruction: "Using only the variables\nprovided, assignment (=) and arithmetic (+ - * /) re-assign the values to\nmake the console.log statement display the correct value(s).  (Click to see\nfull instructions)"
      CSPU5_U3L14 - moving memory challenge4_instruction: "Using only the variables\nprovided, assignment (=) and arithmetic (+ - * /) re-assign the values to\nmake the console.log statement display the correct value(s).  (Click to see\nfull instructions)"
      CSPU5_U3L14 - moving memory challenge5_instruction: "Using only the variables\nprovided, assignment (=) and arithmetic (+ - * /) re-assign the values to\nmake the console.log statement display the correct value(s).  (Click to see\nfull instructions)"
      CSPU5_U3L14 - moving memory challenge6_instruction: "Using only the variables\nprovided, assignment (=) and arithmetic (+ - * /) re-assign the values to\nmake the console.log statement display the correct value(s).  (Click to see\nfull instructions)"
      CSPU5_U3L15 - Add reset button to UpDown app_instruction: "Add code so that\nclicking the start over button will reset the game and send you back to the\nmain screen. (Click to see full instructions)"
      CSPU5_U3L15 - DEMO up down count practice app_instruction: "Try out the demo\napp (Click to see full instructions)"
      CSPU5_U3L15 - Debug forget to update var on reset in UpDown app_instruction: "Run\nthe app, and click the up or down button until you get to the gameOverScreen.\nClick 'Start Over' and try the app again. Find and fix the issue in the\ncode. (Click to see full instructions)"
      CSPU5_U3L15 - Debug if never triggers in UpDown app_instruction: "Run the app\nand use the up and down arrows to try to hit the gameOverScreen. You can't!\nFind and fix the issue in the code. (Click to see full instructions)"
      CSPU5_U3L15 - Debugging Simple If-statements =v==_instruction: "Run the app,\nand click the up button. Then restart and run it again, and click the down\nbutton. Find and fix the issue in the code. (Click to see full instructions)"
      CSPU5_U3L15 - Simple If-statements in UpDown App_instruction: "Add an if statement\nso that the app changes screens when the count reaches -5. (Click to see full\ninstructions)"
      CSPU5_U3L15 - add code to make count down work_instruction: "Write code to\nmake the down arrow work as expected. (Click to see full instructions)"
      CSPU5_U3L15 - count upDown bug forget to set text_instruction: "Find the bug\nin the program and fix it. (Click to see full instructions)"
      CSPU5_U3L15 - count upDown bug logic error wrong update_instruction: "Find\nthe bug in the program and fix it. (Click to see full instructions)"
      CSPU5_U3L15 - count upDown bug var not created globally_instruction: "Find\nthe bug in the program and fix it. (Click to see full instructions)"
      CSPU5_U3L15 - global var example count up_instruction: "Look at the code for\nthis app and see how the code works to update the count variable when the\nup arrow is clicked. (Click to see full instructions)."
      CSPU5_U3L15 - mini clicker update score_instruction: "Add code to update the\nscore when the apple is clicked. (Click to see full instructions)"
      CSPU5_U3L15 - practice with setText_instruction: "Use setText to complete the\nclick event handler for the down arrow. (Click to see full instructions)"
      CSPU5_U3L15 - variable scoping problem debugging_instruction: "See if you can\nfigure out why the code is no longer working. (Click to see full instructions)"
      CSPU5_U3L15 click add lives_instruction: "Add lives to the clicker game that\ndecrement by 1 when the background image is clicked (Click to see full instructions)"
      CSPU5_U3L15 full clicker app_instruction: "Complete your clicker game! (Click\nto see full instructions)"
      CSPU5_U3L16 - challenge say hi app_instruction: "Write a greeting to the user\nwhen they hit 'enter' in the text input, using the 'change' event. (Click\nto see full instructions)"
      CSPU5_U3L16 - chaserApp_instruction: "Create your own \"Chaser Game.\" (Click\nto see full instructions)"
      CSPU5_U3L16 - chooseImages_instruction: "Replace the image in your application\nwith one of your own. (Click to see full instructions)"
      CSPU5_U3L16 - doubleQuotes_instruction: "Save a string inside a variable and\nlog it to the console. (Click to see full instructions)"
      CSPU5_U3L16 - intro getText_instruction: "Add an event handler to the Submit\nbutton so that when the button is clicked it will display the name entered\nin the text box to the console.  Use getText to get the value out of the text\nbox. (Click to see full instructions)"
      CSPU5_U3L16 - introSetPosition_instruction: "Move the buttons to the bottom\nof the screen. (Click to see full instructions)"
      CSPU5_U3L16 - introStrings_instruction: "Save a string inside a variable and\nlog it to the console. (Click to see full instructions)"
      CSPU5_U3L16 - newEventTypes_instruction: "Experiment with different event types\nand select the one that you think is best. (Click to see full instructions)"
      CSPU5_U3L16 - outputWithTextArea_instruction: "Output a message to the 'textArea'\n(Click to see full instructions)"
      CSPU5_U3L16 - setPosition to fixed location_instruction: "Introducing the setPosition\ncommand! Replace the moveTo in the button-click event handler to use setPosition\nto move the button itself to a random location when it's clicked."
      CSPU5_U3L16 - setPosition to move button_instruction: "Introducing the setPosition\ncommand! Replace the moveTo in the button-click event handler to use setPosition\nto move the button itself to a random location when it's clicked."
      CSPU5_U3L16 - singleSetPosition_instruction: "Move the button to the middle\nof the screen. (Click to see full instructions)"
      CSPU5_U3L16 - text labels_instruction: "Use the textLabel command to replace\nthe button in your program with a text label. (Click to see full instructions)"
      CSPU5_U3L16 - textInput getText write_instruction: "Add an Text Input box for\nthe name and age. (Click to see full instructions)"
      CSPU5_U3L16 - toUpper_instruction: "Make the name of the user appear in uppercase\n(Click to see full instructions)"
      CSPU5_U3L16 - use images_instruction: "Use the image command to replace the\ntext label in your program with an image. (Click to see full instructions)"
      CSPU5_U3L16 Mad Lib Clear Input_instruction: "Clear the user's previous text\nwhen the Play Again button is clicked (Click to see full instructions) "
      CSPU5_U3L16 Mad Lib Demo_instruction: "Mad Libs Demo - Try it out!"
      CSPU5_U3L16 Mad Lib Student Setup_instruction: "Back to Mad Libs: To get started,\nset up the two screens for your Mad Libs app (Click to show full instructions)"
      CSPU5_U3L16 Mad Lib getText_instruction: "Before setting the text area with\nyour Mad Libs outline, get the user's text and incorporate their responses.\n(Click to see full instructions) "
      CSPU5_U3L16 Mad Lib setText_instruction: "When the Next button is clicked,\nset the text area to have the main outline of your How-to Mad Libs (without\nthe user's input). (Click to see full instructions) "
      CSPU5_U3L16 Mad Lib toUpper_instruction: "Apply the toUpperCase and toLowerCase\nstring functions to the user's text. (Click to see full instructions) "
      CSPU5_U3L18 comparison operators_instruction: "Use console.log to print out\nthe different boolean expressions below to see what information they return.\n(Click to see full instructions)"
      CSPU5_U3L19 - fix the var name syntax error v2_instruction: "Fix the error\nand get it to print the value of both variables (Click to see full instructions)"
      CSPU5_U3L19 - test reassignment of two vars_instruction: "Predict the value\nof a and b. Add console.log statements to find out the actual value of a and\nb. (Click for full instructions)"
      CSPU5_U3L19 - three basic ops of variables_instruction: "Add another variable\ncalled \"lives\" and set the value to 3. Print the value of the variable to\nthe console. (Click to see full instructions)"
      CSPU5_U3L19 - variable reassignment challenge pt2_instruction: "Make a prediction\nabout the ending values of a, b, and c. Then use console.log to check your\nunderstanding (Click to see full instructions)"
      CSPU5_U3L19 - write var and string with same name v2_instruction: "Fix the\ncode so that the values of both variables print to the console. (Click to\nsee full instructions)"
      CSPU5_U3L23 Chatbot Conditionals 1_instruction: "Add if, else if, and else\nstatements to detect the movie genres Comedy, Romance, Action, and Horror.\n(Click to see full instructions)"
      CSPU5_U3L24 Chatbot Basic Conditionals_instruction: "Check out the project\ndescription for instructions. (Click to see full instructions.)"
      CSPU5_U3L24 Nested Conditionals 1_instruction: "Change all of the boolean expressions\nto use includes instead of ==. (Click to see full instructions)"
      CSPU5_U3L24 Nested Conditionals 2_instruction: "Nest your movie genre if statements\ninside the if statements to check for a ? in the input. "
      CSPU5_U3L24 introIncludes_instruction: "Practice using the includes command.\n(Click to see full instructions)"
      CSPU5_U3L25 - drag out key event_instruction: "Set up an event handler to respond\nto keypress events, and display event.key in the console. Hit keys on the\nkeyboard to see what happens. (Click to see full instructions)"
      CSPU5_U3L25 - play sound when up key_instruction: "Change the code so the sound\nwill only play when the up arrow is pressed. (Click to see full instructions)"
      CSPU5_U3L26 AND operator_instruction: "Update the genre and rating if statements\nto give only one movie suggestion at a time. (Click to see full instructions)"
      CSPU5_U3L26 OR operator_instruction: "Update the if statement to use an OR\nto check for a \"?\" as well as who, what, where, when, why, how in the user\ninput. (Click to see full instructions)"
      CSPU5_addDescriptiveIDsToTurtleDriver_instruction: "Improve the button by choosing\na descriptive and meaningful ID. (Click to see full instructions)"
      CSPU5_basic if - DIY secret number_instruction: "Use console.log to print out\nthe different boolean expressions below to see what information they return.\n(Click to see full instructions)"
      CSPU5_basic if - check driving age_instruction: "Use console.log to print out\nthe different boolean expressions below to see what information they return.\n(Click to see full instructions)"
      CSPU5_basic if - voting examle_instruction: "Use console.log to print out the\ndifferent boolean expressions below to see what information they return. (Click\nto see full instructions)"
      CSPU5_basic if-else - driving age_instruction: "Use console.log to print out\nthe different boolean expressions below to see what information they return.\n(Click to see full instructions)"
      CSPU5_clickerGame_v1_template_instruction: "Create your own \"Chaser App\".\n(Click to see full instructions)"
      CSPU5_moveTurtleOnButtonClick_instruction: "Add an event handler to the button\nto move the turtle forward. (Click to see full instructions)"
      CSPU5_playWithEventTypes_instruction: "Debug the program by fixing the logical\nerror within the program. (Click to see full instructions)"
      CSPU5_setPosition to fixed location_instruction: "Introducing the setPosition\ncommand! Replace the moveTo in the button-click event handler to use setPosition\nto move the button itself to a random location when it's clicked."
      CSPU5_turtleDriver_add2ndButton_instruction: "Debug the program by verifying\nyour IDs are being referenced properly. (Click to see full instructions)"
      Calc Circles of Eval .1_instruction: "You’ll be writing a kind of code called\nEvaluation Blocks, because each block of code evaluates to a single value.\nChange the ??? in this code so that the block evaluates to 5."
      Calc Circles of Eval .2_instruction: "This Evaluation Block is a multiplication\nfunction which takes two numbers and returns the product of those numbers.\nEdit this block so that it multiplies 2 * 5"
      Calc Circles of Eval .3_instruction: "Here's a function for addition which\ntakes two numbers and returns their sum. Use this Addition Block to add 3\n+ 6."
      Calc Circles of Eval .4_instruction: "Here we've nested an Addition Block\ninside a Multiplication Block. Complete this code so it multiplies 3 by (4\n+ 1)"
      Calc Circles of Eval 1 (copy 1)_instruction: "Convert this statement to <some_shape>\nof evaluation."
      Calc Circles of Eval 1_instruction: "Every mathematical operator (+, -, *,\n/, and so on) can be represented by an Evaluation Block in code. Change the\nEvaluation Block to match the expression."
      Calc Circles of Eval 2 (copy 1)_instruction: "Convert this statement to <some_shape>\nof evaluation."
      Calc Circles of Eval 2_instruction: "Use a Multiplication Block to complete\nthis code."
      Calc Circles of Eval 3_instruction: "Complete the Evaluation Blocks to match\nthis statement."
      Calc Circles of Eval 4_instruction: "This code is missing a couple of Evaluation\nBlocks - make sure you put everything in the right order."
      Calc Circles of Eval 5_instruction: "Complete the Evaluation Blocks to match\nthis statement."
      Calc Circles of Eval 6_instruction: "Complete the Evaluation Blocks to match\nthis expression."
      Calc Circles of Eval 7_instruction: "Complete the Evaluation Blocks to match\nthis statement."
      Calc Circles of Eval 8_instruction: "Complete the Evaluation Blocks to match\nthis statement."
      Calc Circles of Eval 9_instruction: "Complete the Evaluation Blocks to match\nthis statement."
      Calc Circles of Eval Free Play_instruction: "Free Play: Try using the Evaluation\nBlocks to write some equations of your own. How does nesting the blocks in\ndifferent ways impact their evaluation?"
      Calc Define Funcs 1 (copy 1)_instruction: "Let's look at some more algebraic\nfunctions now. Here's a function translated from the simple algebraic function\nf(x) = x + 1. What would you expect this function to output if provided an\ninput of 15?"
      Calc Define Funcs 1_instruction: "Let's look at some more traditional algebraic\nfunctions now. Here's a function translated from the simple algebraic function\nf(x) = x + 1. What would you expect this function to output if provided an\ninput of 15?"
      Calc Define Funcs 2_instruction: "Write a function f that takes a parameter\nx and returns x - 10. Test your function using f(15)."
      Calc Define Funcs 3_instruction: "We don't have to call our function f every\ntime; create a function called times-ten that should take a parameter x and\nreturn x * 10. Once you've created the function, run times-ten(50)."
      Calc Define Funcs 4_instruction: "Write a function called half that takes a\nnumber x and returns half that number. Once you've written the function,\nuse it to calculate half(21)"
      Calc Define Funcs 5 - multiply 1_instruction: "Oh no! We lost our multiply\nblock! We'll have to create a function to multiply for us. To start off,\nwrite a function \"f\" that takes a parameter \"x\" and returns x*5. Test\nyour function using f(3)."
      Calc Design Recipe 1_instruction: "Let's use the Design Recipe to create a\nfunction called cube - this function should take in a Number and return that\nnumber to the power of 3. Make sure to write two example cases! When you're\ndone, use your new function to calculate cube(7)."
      Calc Design Recipe 2_instruction: "Your school is holding a bake sale, and\nyou need to track the cost of making each cookie, the money paid, and the\ntotal profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\\r\n\\r\nWrite\nthe function cost, which takes in the number of cookies you intend to sell,\nand returns the cost of making those cookies.\\r\n\\r\nTest your function by\ncalculating the cost of 42 cookies"
      Calc Design Recipe 3_instruction: "Write the function sales which takes in\nthe number of cookies sold, and produces the amount of money customers spent\nto buy those cookies (each cookie is sold at $1.50).\\r\n\\r\nTest your function\nby calculating the sales for 135 cookies"
      Calc Design Recipe 4_instruction: "Using the two functions we just wrote, write\nthe function profit, which takes in the number of cookies you sold, and gives\nyou back the total profit you make from selling your cookies, accounting for\nthe cost of baking them.\\r\n\\r\nTest your function by calculating the total\nprofit for 15 cookies."
      Calc Free Play_instruction: "Free Play: Write functions and algorithms of your\nown design!"
      Calc Rocket 1 (copy 1)_instruction: "In the last puzzle you wrote a contract\nfor the function \"rocket-height\" that states it has a range of Number, domain\nof Number, and should return the height of the rocket traveling at 15 m/s\nafter a given number of seconds. Let's write an example case now for the\nheight of the rocket at 3 seconds.\\r\n\\r\n\\r\n\\r\n  \\r\n\\r\n"
      Calc Rocket 1_instruction: "In the last puzzle you wrote a contract for the\nfunction rocket-height that states it has a range of Number, domain of Number,\nand should return the height of the rocket traveling at 15 m/s after a given\nnumber of seconds. Let's write an example case now for the height of the\nrocket at 3 seconds."
      Calc Rocket 2_instruction: "Great, let's do one more example before writing\nthe function - what should the rocket height be after 30 seconds?"
      Calc Vars 1.1_instruction: "Here we've set the age variable to 17 years. Can\nyou write an expression that calculates age in days?"
      Calc Vars 1_instruction: "Variables allow us to name values so that we can\neasily refer to them repeatedly throughout our programs. Here's a variable\ncalled age. Set its value to your age and click run."
      Calc Vars 2 (copy 1)_instruction: "Here we've set the \"age\" variable to\n17 - can you write an expression that calculates \"age\" in months?"
      Calc Vars 2.1_instruction: "Here's a new variable called age-in-months. Use\nthe variable age to set age-in-months."
      Calc Vars 2_instruction: "Can you write an expression that calculates age in\nmonths?"
      Calc Vars 3 (copy 1)_instruction: "Can you add to this code so that it calculates\nhow many hours there are in \"age\" years?"
      Calc Vars 3_instruction: "Can you add to this code so that it uses the \"age\"\nvariable to calculate age in hours?"
      Calc Vars 4_instruction: "We can also set variables by using other variables.\nLet's say you have a brother who is two years younger than you - can you\nset a new variable \"brother-age\" using your \"age\" variable?"
      Choose Your Own Adventure_instruction: "You can do whatever you want in play\nlab! Here's an example of choose your own adventure story in play lab."
      Code Studio Puzzle Challenge 1 - Artist_instruction: "Draw the line. It is\n200 pixels long. "
      Code Studio Puzzle Challenge 1 Artist1_instruction: "Draw the line. It is 200\npixels long. "
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: "Move the Bee to\nthe flower and get all of the nectar."
      Code Studio Puzzle Challenge 10 - Bee_instruction: "Move the Bee to the flower\nand get all of the nectar."
      Code Studio Puzzle Challenge 10b - Bee_instruction: "Move the Bee to the flowers\nand get all of the nectar at each."
      Code Studio Puzzle Challenge 11 - Artist_instruction: "Draw this line by using\nthe variable \"length\". Each line segment is 75 pixels long."
      Code Studio Puzzle Challenge 11b - Artist_instruction: "Draw a square by using\nthe variable length provided."
      Code Studio Puzzle Challenge 12 - Artist_instruction: "The code provided draws\none triangle. Add to it to draw triangles in a hexagon pattern."
      Code Studio Puzzle Challenge 12a - Artist_instruction: "The code provided draws\none triangle. Add to it to draw triangles in a hexagon pattern."
      Code Studio Puzzle Challenge 13 - Artist_instruction: "This is just like a\n\"for\" loop. Complete the code to draw six lines that grow from 50, 60, 70,\n80, 90, to 100 pixels long. "
      Code Studio Puzzle Challenge 14 - Artist_instruction: "This is just like a\n\"for\" loop. Complete the loop to draw 4 squares that grow from 80, 100,\n120, to 140 pixels. "
      Code Studio Puzzle Challenge 2 - Artist_instruction: "Now add a turn and another\nline. The lines are 200 pixels long."
      Code Studio Puzzle Challenge 3 - Artist_instruction: "Draw the square. Each\nside is 100 pixels long."
      Code Studio Puzzle Challenge 4 - Artist_instruction: "Draw the octagon. Each\nside is 100 pixels long."
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: "Move the Bee to\nthe flower and get the nectar."
      Code Studio Puzzle Challenge 5 - Bee_instruction: "Flowers contain a specific\namount of nectar. Move the Bee to the flower and collect nectar with the get\nnectar block."
      Code Studio Puzzle Challenge 6 - Bee_instruction: "Honeycombs can hold a specific\namount of honey. Get the nectar from the flower and make some honey."
      Code Studio Puzzle Challenge 7 - Bee_instruction: "Move the Bee to the flower\nand get the nectar."
      Code Studio Puzzle Challenge 8 - Bee_instruction: "The cloud could be hiding\na flower or a honeycomb. Only get nectar from flowers. Only make honey at\nhoneycombs."
      Code Studio Puzzle Challenge 9 - Bee_instruction: "The cloud could be hiding\na flower or a honeycomb. Only get nectar from flowers. Only make honey at\nhoneycombs."
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: "Draw\nthe line. Each segment is 100 pixels long. "
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: "Complete the\ncode to draw the line. Each segment is 100 pixels long. "
      Code Studio Puzzle Challenge Artist Screencast_instruction: "Draw the line.\nEach segment is 100 pixels long. "
      Code Studio Puzzle Challenge Bee Screencast_instruction: "Move the Bee to the\nflowers and get all of the nectar."
      Code Studio Puzzle Challenge Square - Artist_instruction: "Draw a square by\nusing the variable length provided."
      Code Studio Puzzle Challenge Var - Artist_instruction: "Draw a line by using\na variable \"length\" set to 180."
      Collector Demo_instruction: "Look at all this loot! Help me get as many coins\nas I can so I can improve my farm. I can only use 9 blocks though!"
      Course 2 Bee Loops 1_instruction: "Hi, I'm a bee. Can you help me collect\nthe nectar from these flowers? "
      Course 2 Bee Loops 13_instruction: "Assessment: Use the repeat block to collect\nall of the nectar."
      Course 2 Bee Loops 2_instruction: "Can you do the same task more easily with\na loop?"
      Course 2 Bee Loops 3_instruction: "Now use the new repeat block to collect\nall of the nectar and make all of the honey."
      Course 2 Bee Loops 3__instruction: "Can you use a loop to collect all that\nnectar?"
      Course 2 Bee Loops 4_instruction: "What happens if you loop this sequence 3\ntimes? Don't forget to make the honey at the end!"
      Course 2 Maze Loops 1_instruction: "5 개의 블록들만 사용해서 돼지로 이동시켜 주세요."
      Course 4 2_instruction: "꿀벌이 꽃꿀을 모으고 있습니다. 꽃들에서만 꽃꿀을 모을 수 있게 해 주세요."
      Course 4 Artist 1_instruction: "상자를 그릴 수 있도록 도와주세요.\n(각 선의 길이는 200 픽셀입니다.) "
      Course 4 Artist 10_instruction: "힌트를 다시 보려면 여기를 눌러보세요!\\r\n\\r\n재미있는 모양을 위한 코드가 있습니다. 한 번 실행할 때마다 회전시키면 어떤 일이 일어날까요? 이 모양의 각도는 420도까지 가능하고, 실행할 때마다 화가가 바라보는 방향이 바뀔 것입니다. 그리고 그 각도는 정확히 60도 입니다."
      Course 4 Artist 11_instruction: "자 이제 도전해보세요! 실패하더라도 계속 도전해 보세요. 한 번에 성공하는 사람은 거의 없습니다. 힌트가 필요하다고요? 여기를 눌러보세요!"
      Course 4 Artist 12_instruction: "멋진 디자인을 위한 도움말이나 힌트가 필요하면? 여기를 클릭하세요!\\r\n\\r\n아니면, 자유롭게 디자인해 보세요!"
      Course 4 Artist 13_instruction: "계속 하고 있나요? 빈 캔버스가 있습니다. 마음대로 그려보세요."
      Course 4 Artist 2_instruction: "이 코드를 반복시켜서 회색 사각형을 그려주세요. (각 변의 길이는 300픽셀입니다.)"
      Course 4 Artist 20_instruction: "계속 하고 있나요? 빈 캔버스가 있습니다. 마음대로 그려보세요."
      Course 4 Artist 3_instruction: "이 코드를 실행(또는 실행 누르기) 하면 어떻게 될지 생각해 보세요. 그 다음에 그림을 완성할 때까지 충분히 여러 번 시도해 보세요."
      Course 4 Artist 4_instruction: "원 안에는 얼마나 많은 각이 있을까요? 색 원들을 만들어내기 위해서 필요한 수를 반복 블록에 채워넣어주세요."
      Course 4 Artist 5_instruction: '이 디자인의 나머지 반을 만들어서 대칭이 되도록 만들어 보세요. 삼각형들은 변들이 같고 50 픽셀 길이입니다. 힌트: 추가해야 할 모든 블록들을 찾아내기 위해서 코드를 여러 번 실행시켜봐야 할 수도 있습니다.'
      Course 4 Artist 6_instruction: "이 삼각형들을 그리기 위한 코드를 완성시켜보세요. \\r\n\\r\n각 정삼각형의 한 변의 길이는 100 픽셀입니다. "
      Course 4 Artist 7_instruction: "이번에는 반복을 다른 반복에 넣어서 10개의 삼각형을 그려보세요.\n이러한 것을 중첩 반복이라고 합니다. 힌트: 360도를 돌며 10개의 삼각형을 그려야 합니다.  "
      Course 4 Artist 8_instruction: "이 코드 블록을 여러번 반복시켜 해를 그려보세요."
      Course 4 Artist 8a_instruction: "이 모양이 기억이 나나요? 이제 처음에 아무 블록들이 없는 상태로 만들어내야 합니다!"
      Course 4 Artist 9_instruction: "이 디자인을 10번 반복 시키면서, 한 번 그릴 때마다 회전시켜보세요.\\r\n"
      Course 4 Artist Binary 1_instruction: "여기에 1, 0 로만 이루어진 문자열을 입력해서, 화가를 왼쪽에서 오른쪽으로, 위에서 아래로 움직이는 함수가 있습니다. 화가는 1을 보면 사각형을 채우고, 0이면 무시할 것입니다. \\r\n\\r\n이 코드를 실행시킨 후, 화가가 2진 정보를 이용해서 이 패턴을 그려내는 것을 살펴보세요."
      Course 4 Artist Binary 1a_instruction: "여기에 1, 0 로만 이루어진 문자열을 입력해서, 화가를 왼쪽에서 오른쪽으로, 위에서 아래로 움직이는 함수가 있습니다. 화가는 1을 보면 사각형을 채우고, 0이면 무시할 것입니다. \\r\n\\r\n이 코드를 실행시킨 후, 화가가 2진 정보를 이용해서 이 패턴을 그려내는 것을 살펴보세요."
      Course 4 Artist Binary 2_instruction: "이 이미지를 그려내기 위해서, 어떤 2진 문자열이 8번 반복시켜 줄까요?"
      Course 4 Artist Binary 3_instruction: "3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요."
      Course 4 Artist Binary 4_instruction: "각 2진 문자는 이 그림의 한 줄을 의미합니다. 2진 문자열을 재배치해서 찡그린 얼굴 모양을 웃는 얼굴 모양으로 만들어 주세요."
      Course 4 Artist Binary 5_instruction: "이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것 일까요?"
      Course 4 Artist Binary 6_instruction: "이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?"
      Course 4 Artist Binary 7_instruction: "이 그림을 마무리 해보세요."
      Course 4 Artist Binary Free Play 2_instruction: '자유 플레이: 빈 캔버스가 있습니다. 마음대로 재미있게 그려보세요!'
      Course 4 Artist Binary Free Play 2a_instruction: "좀 더 높은 해상도로 표현할 수 있는 캔버스가 여기 있습니다. - 16 픽셀 * 16 픽셀!\\r\n\\r\n2진 비트 문자열로 어떤 것이 그려지는 지 살펴보세요."
      Course 4 Artist Binary Free Play 2b_instruction: "여기를 눌러 힌트를 살펴보세요."
      Course 4 Artist Binary Free Play_instruction: '자유 플레이: 2진 문자열을 이용해서 자유롭게 그려보세요!'
      Course 4 Artist Binary pre1_instruction: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는 0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\r\n\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면, 그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을 그리도록 해보세요."
      Course 4 Artist Binary ryan_instruction: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는 0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\r\n\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면, 그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을 그리도록 해보세요."
      Course 4 Artist For  Functions 10_instruction: "조금 더 나아가 봅시다. \"사각형 한 변 그리기\" 함수를 이용해서 별 모양을 만들어보세요. 행운을 빕니다!"
      Course 4 Artist For  Functions 11_instruction: "조금 더 나아가 봅시다. \"사각형 한 변 그리기\" 함수를 이용해서 별 모양을 만들어보세요. 행운을 빕니다!"
      Course 4 Artist For Loops 1_instruction: "반복 블록을 1개 사용하여 너비가 50 픽셀인 삼각형을 그려주세요."
      Course 4 Artist For Loops 10_instruction: "자유시간입니다!\n여러분이 배운 블록들을 사용해서 원하는 것을 그려보세요."
      Course 4 Artist For Loops 11_instruction: "이전 스테이지에서 어떤 모양의 변의 길이를 조절하기 위해 사용했던 변수에 대해서 생각해 보세요. 이번에는 \"카운터\" 변수라는 것을 이용해서 같은 작업을 해 보도록 하겠습니다. 이 패턴은 삼각형으로 시작하고, 한 변을 붙이면서 10각형(10개의 변을 가진 다각형) 을 그립니다. 각 변의 길이는 100 픽셀 입니다. "
      Course 4 Artist For Loops 11a_instruction: "자 이제 모두 함께 사용해 봅시다! \"반복(~인 동안)\"과 \"카운터\" 변수를 이용해서, 앞의 것보다 2개 더 많은 변을 가지고 있는 각각의 도형들을 만들어보세요. 각 변의 길이는 각 다각형의 변의 개수의 10배이어야 합니다.\\r\n\\r\n아주 적은 코드가 미리 주어져 있습니다."
      Course 4 Artist For Loops 12_instruction: "꽤 멋져 보이지만, 각 모양을 이전 모양에 붙여서 그리고 싶습니다.\n각 선의 길이는 20 픽셀입니다. 각 모양을 그린 후에는 40 픽셀 만큼 점프를 뛰는\n블록을 사용하면 됩니다. "
      Course 4 Artist For Loops 13_instruction: "흠, 저 모양들은 점점 더 커지는 군요! 이전에 이 문제를 변수를 이용해 해결했었습니다. 카운트 변수를 이용해서 어떻게 각 변의 크기를 줄일 수 있을까요? 일정 거리 만큼 앞으로 움직이지말고, 앞으로 (100/카운터) 픽셀 만큼 움직여 보세요."
      Course 4 Artist For Loops 14_instruction: "일반적인 도형들에 사용하는 각 보다 조금 더 많거나 적게 각을 회전시키면 멋진 효과를 만들어낼 수 있습니다. 이전 레벨에서의 코드를 이용해 실험해 보는데, 89도를 사용하면 이런 비틀어진 사각형 나선 구조를 만들어 낼 수 있습니다."
      Course 4 Artist For Loops 15_instruction: '자유 플레이: "반복(~동안)"을 이용해서 원하는 그림들을 만들어보세요. 여러분이 사용할 수 있는 편리한 변수들을 몇 개 더 추가했습니다.'
      Course 4 Artist For Loops 2_instruction: '50 부터 100 까지 10씩 올리며 카운트하는 반복(~동안) 구조 안에 삼각형을 그리는 코드를 넣어 두었습니다. 참고: "실행"을 누르기 전에 코드를 먼저 살펴보세요.'
      Course 4 Artist For Loops 3_instruction: "이번 퍼즐을 해결하기 위해서, 이전 퍼즐을 참고하세요.\n가장 작은 삼각형의 크기는 한 변이 20 픽셀이고, 가장 큰 삼각형의 크기는 한 변이 200 픽셀입니다.\n각 삼각형들은 바로 전 삼각형 보다 20 픽셀 만큼 씩 더 큽니다.\n"
      Course 4 Artist For Loops 4_instruction: "이 사각형들을 그리려면 배웠던 것들에서 어떤 것을 바꾸면 될까요?\n한 변의 길이가 15 픽셀인 사각형으로 시작하고, 가장 큰 사각형은 한 변이 300 픽셀입니다.\n각 사각형은 바로 전 사각형 보다 15 픽셀 만큼 씩 더 큽니다. "
      Course 4 Artist For Loops 5_instruction: "이전 퍼즐은 참 잘했습니다!\n이번에는 멋진 그림을 그리기 위해서, \"카운터\" 변수 블록을 다시 사용해 보세요. "
      Course 4 Artist For Loops 6_instruction: "자유 플레이: 점점 커지는 도형들을 반복(~동안) 을 이용해 자유롭게 만들어 보세요."
      Course 4 Artist For Loops 6a_instruction: "이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다."
      Course 4 Artist For Loops 7_instruction: "알고리즘에서 반복 구조 안에 들어있는 \"이동하기\" 와 \"돌기\" 블록들은 그대로 두고, \"반복 3회\" 만 지우면 어떻게 될까요? 이 나선형 삼각형에서 각 선분들은 그 이전 선분보다 20 픽셀 씩 더 깁니다."
      Course 4 Artist For Loops 8_instruction: "이전 그림에서 1가지만 바꾸면 이 그림을 만들 수 있습니다. 어떤 것을 바꾼 것인지 찾아낼 수 있나요?\\r\n\\r\n힌트: 뭔가 제거하면 됩니다!"
      Course 4 Artist For Loops 8a_instruction: "이전 이미지에서 1가지만 바꾸면 이 이미지를 만들 수 있습니다. 어떤 것을 바꾼 것인지 찾아낼 수 있나요?"
      Course 4 Artist For Loops 9_instruction: "나선 구조를 만들 수 있나요? 1 픽셀 부터 75 픽셀까지 한 번에 1 픽셀씩 증가시키면서 이동해 보세요."
      Course 4 Artist For Loops Challenge_instruction: "이 이미지를 만들어내기 위해서 어떤 것들을 어떻게 써야 할 지 생각해 낼 수 있을까요?\\r\n\\r\n힌트가 필요한가요? 여기를 클릭하세요."
      Course 4 Artist For Loops Challenge_a_instruction: "이 이미지를 생성하기 위해 공부한 것들에 대해 설명할 수 있습니까?\\r\n\\r\n힌트가 필요하면 여기를 클릭하세요."
      Course 4 Artist For Loops inspire_instruction: "멋진 자유 플레이: 여러분은 이제 이런 패턴을 만들기 위해 필요한 모든 것들을 배웠습니다! 이 그림이 여러분이 느끼기에 멋지다면, 비슷한 것을 한 번 만들어 보세요. 아니면, 만들고 싶은 것을 자유롭게 만들어도 됩니다.\\r\n\\r\n힌트가 필요한가요? 여기를 클릭하세요."
      Course 4 Artist Functions 1_instruction: "반복을 이용해서 한 변의 길이가 100 인 사각형을 만들어 보세요."
      Course 4 Artist Functions 10_instruction: "사각형 위에 꼭 맞는 삼각형을 그리기 위해서 어떤 블록을 추가해야 할까요?"
      Course 4 Artist Functions 11_instruction: "큐브를 그리는 코드를 확인해 보세요 - \"큐브 그리기\"라는 이름의 함수 안에 넣어주세요."
      Course 4 Artist Functions 12.1_instruction: "자 이제 \"8각형 그리기 20\" 이라는 함수를 만들어보세요. 8각형의 각 변의 길이는 20 픽셀입니다."
      Course 4 Artist Functions 12_instruction: "직선을 그리기 위해서 사각형 함수를 반복시켜보세요."
      Course 4 Artist Functions 13.1_instruction: "자 이제, \"오른쪽 위로 점프\"라는 함수를 만들어보세요. 이 함수는 8각형 위에 있는 화가가 오른쪽 위로 움직이게 해서 패턴을 다 그릴 수 있게 해줄 것입니다.\\r\n\\r\n힌트: 여러분이 오른쪽 위로 가려면? 패턴 위에서 8각형의 3/8만큼 점프하면 될 것입니다."
      Course 4 Artist Functions 13_instruction: "새로운 \"사각형의 한 변 그리기\" 함수를 살펴보세요. 함수가 어떻게 만들어졌는지 구조를 살펴보세요. 다음 퍼즐을 하기 위해서는 \"실행\"을 누르면 됩니다."
      Course 4 Artist Functions 14.1_instruction: "자 이제, \"오른쪽 위로 점프\" 함수를 만들어서 이 패턴을 완성할 수 있도록, 화가를 8각형의 오른쪽 위로 이동시켜보세요."
      Course 4 Artist Functions 14_instruction: "잘 했습니다! 이제 새로운 \"사각형의 한 변 그리기\" 함수를 이용해서 사각형을 그려보세요. 사각형의 한 변의 길이는 40 픽셀입니다."
      Course 4 Artist Functions 15_instruction: '조금 더 배워 봅시다. "사각형의 한 변 그리기" 함수를 이용해서 별 모양을 그릴 수 있을까요? 행운을 빕니다! 힌트: 144도를 돌아야 합니다.'
      Course 4 Artist Functions 2_instruction: '20 픽셀 만큼 씩 떨어져 있는 3개의 사각형을 그려보세요. 힌트: 각 사각형의 크기는 100 픽셀입니다.'
      Course 4 Artist Functions 3_instruction: "\"사각형 그리기\" 함수 블록을 이용해서 이 그림을 만들어보세요. 힌트: 각 사각형들은 120 픽셀 만큼 씩 떨어져 있습니다.\\r\n"
      Course 4 Artist Functions 4_instruction: '직접 "함수 블록"을 만들 준비가 되었나요? 도구상자에서 "함수" 블록을 클릭한 후에 "삼각형 그리기" 로 함수 이름을 바꾸세요. 그 다음에 이전에 반복 블록을 이용해서 삼각형을 만들었던 것과 같이 삼각형을 만드세요. 그 다음에 오른쪽 위의 모서리에 있는 저장 후 닫기 를 누르세요. 힌트: 100 픽셀 크기의 삼각형을 만드세요. 행운을 빌어요!'
      Course 4 Artist Functions 5 OLD_instruction: "집을 그리기 위해서 2개의 함수를 사용해 보세요. - 집을 제대로 그리기 위해서, 이 코드에서 어떤 부분을 고쳐야 할까요?"
      Course 4 Artist Functions 5_instruction: "\"사각형 그리기\" 함수 블록을 이용해서 이 그림을 만들어보세요. 힌트: 각 사각형들은 120 픽셀 만큼 씩 떨어져 있습니다.\\r\n"
      Course 4 Artist Functions 6_instruction: "사각형 위에 꼭 맞는 삼각형을 그리기 위해서 어떤 블록을 추가해야 할까요?"
      Course 4 Artist Functions 7_instruction: "사각형 함수를 이용해서 한 줄의 사각형을 그려보세요. 각 사각형의 한 변의 길이는 40 픽셀입니다."
      Course 4 Artist Functions 8_instruction: "함수 블록들을 사용하는 것이 어려운가요? 이 함수를 수정해서 200 픽셀 크기가 되도록 바꿔보세요.\n힌트: \"사각형 그리기\" 함수에서 \"수정하기\"를 눌러서 고치면 됩니다.\n함수 수정을 끝내려면 \"닫기\"를 누르면 됩니다. "
      Course 4 Artist Functions 9_instruction: "함수를 만들기 위해 필요한 거의 모든 코드를 해보았습니다. 하지만 뭔가 빠진 듯 하네요. 이 함수 블록을 완성해주세요."
      Course 4 Artist Functions Inspiration_instruction: "여기를 눌러 힌트를 다시 살펴보세요."
      Course 4 Artist Functions challenge_instruction: "여기를 눌러 힌트를 다시 살펴보세요."
      Course 4 Artist Functions inspire_instruction: "여기를 눌러 멋진 그림을\n다시 살펴보세요."
      Course 4 Artist Inspire_instruction: "멋진 디자인을 위한 도움말이나 힌트가 필요하면? 여기를 클릭하세요!\\r\n\\r\n아니면, 자유롭게 디자인해 보세요!"
      Course 4 Artist Params 1_instruction: "한 변의 길이가 50 픽셀인 사각형을 그리는 함수를 수정해보세요."
      Course 4 Artist Params 10_instruction: "함수 안에서, 다른 함수를 불러 사용할 수 있습니다!\n\"모양\" 함수를 기본으로 활용해서, 50 픽셀 크기로 시작한 후, 20 픽셀 만큼 씩 커지는\n3개의 집 모양을 만들어 보세요. 반복 카운터 구조를 사용하면 꽤 도움이 될 것입니다. "
      Course 4 Artist Params 11_instruction: "How about a function called \"pinwheel\"\nthat takes three parameters - \"sides,\" \"length\" and \"repeat.\" You can\ncalculate how much to turn after each shape using the same math you used to\nfigure out the turns for a shape of \"sides\". Can you recreate this picture?\nHere's a tip each shape is 100 pixel's in length."
      Course 4 Artist Params 12_instruction: "\"바람개비\" 함수를 이용해서 이 모양들을 그려보세요. 각 이미지의 측면 길이는 50 입니다."
      Course 4 Artist Params 13_instruction: '자유 플레이: 여러분들이 만든 함수와 가지고 놀 수 있는 함수들이 더 있습니다. 멋진 것을 그려보세요!'
      Course 4 Artist Params 2_instruction: "That triangle function would be a whole\nlot more useful if it could draw triangles of different sizes. I've added\na parameter for line length, but it doesn't do anything yet. Can you update\nthe function so it uses the \"length\" parameter when it draws each side?\nThe triangle sizes are 150 pixels, 75 pixels and 25 pixels."
      Course 4 Artist Params 3_instruction: "멋져요, 이 삼각형들을 새로운 함수로 만들어보세요.\n첫 번째는 20 픽셀 크기이고, 두 번째는 50, 세 번째는 75 입니다. "
      Course 4 Artist Params 4_instruction: "사각형이라는 이름의 새로운 함수를 추가해주세요. 삼각형 함수와 같이 길이 매개 변수가 있어야 합니다.\n이번에는 크기가 25, 50, 75 인 3개의 사각형을 100 픽셀 간격으로 그려보세요."
      Course 4 Artist Params 5_instruction: "새로운 함수들을 이용해서 모양을 그려보세요.\n쉽게 그리려면 \"카운터\" 매개 변수를 사용하는 반복 구조를 사용하면 됩니다.\n"
      Course 4 Artist Params 6_instruction: "\"모양 그리기\" 함수를 수정해 보세요.\n\"길이\" 매개 변수를 가지고 있습니다. 거기에 \"면\" 매개 변수를 더 추가해 주세요.\n주어진 모양을 그리기 위해서는 360을 면의 개수로 나누면 됩니다.\n힌트: 각 모양의 삼각형은 100 픽셀이고, 육각형은 25 픽셀, 사각형은 50 픽셀입니다. "
      Course 4 Artist Params 7_instruction: "\"???\" 에 적당한 수를 채워 이 모양들을 만들어보세요.\n사각형, 삼각형은 100 픽셀이고, 육각형은 75 픽셀입니다. "
      Course 4 Artist Params 8_instruction: "이 모양은 어떻게 그릴 수 있을까요?\n6개의 변을 가진 육각형을 만드는 새로운 함수에 대한 힌트가 여기 있습니다.\n"
      Course 4 Artist Params 9_instruction: "카운터를 이용한 반복 구조 안에서 그 안에 있는 반복 구조를 없앴을 때가 기억 나나요?\n이번에는 \"모양 그리기\" 함수에 \"면\"과 \"길이\" 매개 변수를 이용해 보세요.\n모양들을 다시 만들 수 있을까요? 사각형 카운터는 5/100/5 이어야 하고, 삼각형 카운터는\n10/100/10, 육각형은 2/100/2 가 되어야 합니다."
      Course 4 Artist Var 9_instruction: "삼각형을 1개 그리는 알고리즘이 있는데, \"변\" 변수를 사용할 수 있도록 수정되어 있습니다.\n3이라는 수를 \"변\" 변수로 바꿔보세요. 힌트: \"변 설정\" 블록을 사용하면 됩니다."
      Course 4 Artist Vars 1_instruction: "정삼각형을 그려보세요.\\r\n\\r\n각 변의 길이는 정확히 100 픽셀이어야 합니다."
      Course 4 Artist Vars 10_instruction: "더 작은 삼각형들의 바깥쪽에 1개의 삼각형을 그리는 알고리즘이 있습니다.\n이 알고리즘을 수정해서 삼각형들을 그리기 위한 \"변\" 변수를 사용할 수 있게 해주세요.\n코드를 살펴보고, 3 이라는 수들을 \"변\" 변수로 바꿔보세요.\n\"변 설정\" 블록을 함께 사용해야 합니다."
      Course 4 Artist Vars 11_instruction: "이전 퍼즐에서와 같은 개념들을 사용하는 좀 더 복잡한 코드입니다.\n- 사각형들로 만들어진 이 그림을 그리기 위해서 \"변\" 변수를 어떻게 설정해야 할까요?"
      Course 4 Artist Vars 12_instruction: "자 이제 \"면\" 변수를 살펴보세요.\n5. 이 알고리즘에 더 많은 면 개수를 추가하면 할 수록, 전체 패턴이 더 커집니다! 그리고 \"길이\"라는 변수가 더 있습니다. 그리고 이제 \"앞으로 이동\" 블록이 없어도 할 수 있습니다. 모양을 만들려면 \"길이\" 변수를 75로 설정하세요."
      Course 4 Artist Vars 13_instruction: "전체 패턴을 화면에 맞추기 위해서는, 도형에 여러 개의 변들이 있을 때 각 변들의 길이를 줄여야 합니다.\n\\r\n이 멋진 패턴을 만들어낸 알고리즘을 새롭게 만들어보세요. 각각의 모양을 정확히 맞추기 위해서 \"변\" 변수와 함께 수학 블록을 사용해서, \"길이\" 변수의 값을 계산할 수 있도록 하면 됩니다. 각 다각형의 둘레는 300 픽셀입니다.\\r\n힌트가 필요한가요? 여기를 눌러보세요."
      Course 4 Artist Vars 14_instruction: "자유 플레이: 확인해보세요! 여러분의 알고리즘은 반복 구조가 한 번 이상 중첩되어있습니다. 두 개의 변수 값들을 바꾸어 멋진 패턴들을 만들어보면서 실험해 보세요.\\r\n\\r\n더 멋지게 만들어 보려면, 색을 사용해 보세요!\n반복 구조들 안에 랜덤색을 사용해서 디자인이 어떻게 변화 되는지 살펴보세요."
      Course 4 Artist Vars 2_instruction: "이번에는 \"앞으로 150 만큼 이동\"을 사용하는 대신에 \"이동\" 블록이 \"길이\"라는 변수에 저장되어있는 값을 이용합니다. 삼각형을 그리기 위해서 \"길이\"를 150 으로 입력해 보세요."
      Course 4 Artist Vars 3_instruction: "여기에 사각형을 그릴 수 있는 반복 구조가 있는데, 뭔가 빠진 것 같습니다.\n각 변의 길이를 얼마로 해야할지 가늠하기 위해서 \"길이\" 변수를 사용하는 함수를 수정해 주세요. "
      Course 4 Artist Vars 4_instruction: "이번에는 너비의 2배 만큼 높이를 가진 사각형을 만들어보세요. \"너비\"라는 변수를 100 으로 설정하면 됩니다. 수학 블록들을 이용해 코드를 완성해 주세요."
      Course 4 Artist Vars 5_instruction: "\"면\" 변수를 이용해서 반복할 횟수를 설정하고 실행시켜보세요."
      Course 4 Artist Vars 6_instruction: "모든 정 다각형들을 만들 수 있는 코드가 있습니다.\n그 값이 4 로 입력되어있는 새 변수가 있습니다. (수학 블록과 함께) 면 수 변수를 사용해서, 다각형의 면들이 몇 개인지에 상관없이 자동으로 회전시켜보세요.\\r\n\\r\n여기를 눌러 힌트를 다시 살펴보세요."
      Course 4 Artist Vars 7_instruction: "이전 퍼즐을 통해서 배웠던 것을 이용하면 됩니다. \"면\" 변수를 사용해서 육각형을 만들어보세요.\\r\n\\r\n변수 값 하나만 변화시키면, 삼각형, 사각형, 오각형,..., 팔각형을 모두 만들 수 있습니다."
      Course 4 Artist Vars 8_instruction: '자유 플레이: 이 도형의 면의 수로 실험해 보세요. 면의 개수가 어떻게 바뀌든지 상관없이, 도형의 크기는 같아지도록 알고리즘을 수정해 주세요. 힌트: 처음 시작하는 길이를 면의 개수로 나누면, 면의 개수가 많아지는 만큼 각 면의 길이는 짧아집니다.'
      Course 4 Artist Vars 9_instruction: "삼각형을 그리기 위해서 면의 수를 직접 사용하지 않고, \"면\" 변수를 사용하는 이 알고리즘을 수정해 보세요. \"면 설정\" 블록을 사용해야 합니다."
      Course 4 Bee 1_instruction: "꿀벌은 구름 아래에 뭐가 있는지 알 수 없습니다.\\r\n\\r\n\"만약\" 블록을 이용해서 구름 아래 꽃이 있는지 확인하세요. \\r\n\\r\n꽃인 경우에만 꽃꿀을 모을 수 있게 해주세요."
      Course 4 Bee 2_instruction: "\"만약/아니면\" 블록으로 꽃인지? 아니면 벌집인지? 확인하도록 해 보세요. 만약 꽃이면 꽃꿀을 모으고... 아니면, 꿀을 만들어보세요!"
      Course 4 Bee 3_instruction: "물체는 꽃이거나 벌집입니다.\n이번에는 \"만약/아니면\" 블록을 이용해서 꽃이면 꽃꿀을 얻고, 아니면(꽃이 아니면 벌집이므로) 꿀을 만들게 해보세요."
      Course 4 Bee 4_instruction: "이 자주색 꽃에는 꽃꿀이 3, 2, 1개 있을 수 있습니다. 이 \"만약/아니면\" 블록은 다른 \"만약/아니면\" 블록과 결합되어서, \"만약/(아닌데 만약/아니면)\" 명령을 만들어낼 수 있습니다. 꽃꿀의 양을 모르는 경우에도 꽃꿀을 모두 얻을 수 있게 해보세요."
      Course 4 Bee 5_instruction: "이 자주색 꽃에는 꽃꿀이 3, 2, 1개 있을 수 있습니다.\n\"만약-아니면\" 블록을 이용해서 만약/(아닌데 만약/아니면) 블록을 만들어보세요. 만든 블록을 꽃꿀의 개수를 모르는 경우에도 모든 꽃꿀을 얻어내도록 사용할 수 있습니다."
      Course 4 Bee 6_instruction: "이 자주색 꽃에는 꽃꿀이 3, 2, 1개 있을 수 있습니다.\n꽃꿀의 개수를 모를 때에도 꽃꿀을 얻을 수 있도록, 만약/(아닌데 만약/아니면) 블록을 만들어보세요."
      Course 4 Bee 7_instruction: "꽃꿀을 얻어내기 위해 필요한 모든 것을 배웠습니다.\n이 자주색 꽃에는 꽃꿀이 3, 2, 1 만큼 있을 수 있습니다."
      Course 4 Bee For Loops 1_instruction: "각 꽃에서 꽃꿀을 모으기 위해서 반복 구조를 사용하세요."
      Course 4 Bee For Loops 10_instruction: "반복 카운팅이 줄어드는 과정에서는 반복이 한 번씩 끝날 때마다 카운터 변수의 값이 줄어듭니다.\n9, 6, 3의 꽃꿀을 모으기 위해서는 카운터 변수에 더할 값이 어떻게 되어야 할까요?"
      Course 4 Bee For Loops 11_instruction: "이 코드에 어떤 오류가 있을까요?\n오류를 찾아 고칠 수 있는지 살펴보고, 벌이 모든 꽃꿀을 모을 수 있도록 해주세요."
      Course 4 Bee For Loops 2_instruction: "여기 새로운 종류의 반복 구조가 있습니다. \"반복(~동안)\" 이라는 블록입니다.\n이 특별한 반복 구조는 1부터 5까지, 한 번 실행하고 1씩 증가시키면서 카운트 합니다. 꽃꿀을 모을 수 있도록 도와주세요."
      Course 4 Bee For Loops 3_instruction: "이 퍼즐은 1부터 3까지 1씩 카운트를 증가시키는 반복 구조를 이용하면 해결할 수 있습니다.\n이제 꽃꿀을 모아보세요!"
      Course 4 Bee For Loops 4_instruction: "이 꽃들에서 모든 꽃꿀을 모아보세요. 더 쉬운 방법이 있을까요?..."
      Course 4 Bee For Loops 5_instruction: "아, 반복(~인 동안) 구조를 사용하면 더 쉽네요!\n반복을 위해 사용한 \"카운터\" 변수를 \"꽃꿀 얻기\" 블록에도 똑같이 사용할 수 있습니다.\n휴! 반복 구조가 많네요. 필요한 코드는 모두 있습니다.\n어떻게 구성되어있는지 살펴보고, 실행시켜보세요. "
      Course 4 Bee For Loops 6_instruction: "카운트다운 반복 구조를 사용할 수도 있습니다.\n이 꽃꿀을 5부터 1까지 카운트다운하면서 모아보세요."
      Course 4 Bee For Loops 7_instruction: "수평 방향으로 얼마나 멀리 가야하는지\n제어할 수 있도록 \"카운터\" 변수를 반복 구조에 사용하세요."
      Course 4 Bee For Loops 8_instruction: "이동하고 꽃꿀을 모으는데 반복 변수를 사용해보세요."
      Course 4 Bee For Loops 9_instruction: "반복(~동안) 구조 안에 있는 마지막 수를 \"증가값\"이라고 합니다. \n한 번 실행보고 나면 카운터 변수의 값이 \"증가값\" 만큼 변화됩니다. 값을 2씩 증가시키면서 이 꽃들의 꽃꿀을 모아보세요."
      Course 4 Bee Loops 5 NEW_instruction: "3개의 꽃이 있습니다. 가장 적은 블록 개수로 꽃꿀을 모을 수 있도록, 3번 반복시키는 명령 패턴을 찾아보세요."
      Course 4 Bee Loops 5a NEW_instruction: "이제 최대한 적은 블록들을 사용해서\n벌집까지 가는 길에 있는 꽃들의 모든 꽃꿀을 모을 수 있도록 해주세요. 마지막에는 꿀을 만들면 됩니다."
      Course 4 Bee Params 1_instruction: "\"꽃꿀 3번 모으기\" 를 이용해서 꽃꿀을 모두 모으기 위한 순서를 만들어 보세요. 꽃꿀을 모으기 위해 돌고 움직인 다음에 원래 위치로 돌아오면 됩니다."
      Course 4 Bee Params 2_instruction: "\"꽃꿀 3번 모으기\" 함수를 수정해서 꽃을 향해 왼쪽으로 도는 대신 오른쪽으로 돌도록 해주세요."
      Course 4 Bee Params 3 (copy 1)_instruction: "양쪽에 꽃들이 있네요!\n양쪽 꽃들에 대해서 같은 함수를 사용하려면, 매개 변수를 1개 사용해야 합니다.\n\"방향\" 매개 변수를 추가해 두었습니다.\n\"방향\" 매개 변수의 값이 0이면 왼쪽으로 회전하고, 1이면 오른쪽으로 회전해야 합니다."
      Course 4 Bee Params 3_instruction: "양쪽에 꽃들이 있네요!\n\"왼쪽\", \"오른쪽\" 이라는 변수와 \"방향\"이라는 매개변수를 \"꽃꿀 3번 얻기\" 함수에 붙여두었습니다.\n\"꽃꿀 3번 얻기\" 함수를 수정해서, \"왼쪽\" 또는 \"오른쪽\" 변수의 값이 전달될 때,\n지정한 방향으로 회전하도록 바꿔보세요.  "
      Course 4 Bee Params 4 (copy 1)_instruction: "모든 꽃들에서 수집하기 위해서 새로운 함수를 사용해보세요. 0은 왼쪽, 1은 오른쪽입니다."
      Course 4 Bee Params 4 - Two WhenRun_instruction: "모든 꽃들에서 수집하기 위해서 새로운 함수를 사용해보세요. 왼쪽/오른쪽 변수를 사용하세요."
      Course 4 Bee Params 4 backup_instruction: "이 모든 꽃꿀들을 1개의 함수로 모을 수 있다면 얼마나 좋을까요?\n\"꽃꿀들\"이라는 매개 변수를 함수에 추가해서, 뽑아낼 꽃꿀의 양을 제어해 보세요.\n아마도 함수 이름을 바꾸고 싶기도 할 것입니다!"
      Course 4 Bee Params 4_instruction: "꽃들에서 모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요. 왼쪽/오른쪽 변수를 사용하세요."
      Course 4 Bee Params 5_instruction: "시험삼아 해보세요. - 방향 변수를 이용해서 \"꽃꿀 5번 모으기\" 함수를 만들어보세요."
      Course 4 Bee Params 6 (copy 1)_instruction: "모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요."
      Course 4 Bee Params 6_instruction: "이 모든 꽃꿀들을 1개의 함수로 모을 수 있다면 얼마나 좋을까요?\n\"꽃꿀 개수\"라는 매개 변수를 함수에 추가해서, 뽑아낼 꽃꿀의 양을 제어해 보세요.\n아마도 함수 이름을 바꾸고 싶기도 할 것입니다!"
      Course 4 Bee Params 7 (copy 1)_instruction: "모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요."
      Course 4 Bee Params 7_instruction: "모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요."
      Course 4 Bee Params 8 Clone 2_instruction: "으, 이번에도 다루어야 할 꿀들이 있네요.\n어떻게 하면, 꽃꿀을 뽑을지, 꿀을 만들지 선택해서 함수가 실행되도록 할 수 있을까요?"
      Course 4 Bee Params 8 Clone_instruction: "으, 이번에도 다루어야 할 꿀들이 있네요.\n어떻게 하면, 꽃꿀을 뽑을지, 꿀을 만들지 선택해서 함수가 실행되도록 할 수 있을까요?"
      Course 4 Bee Params 8 clone 3_instruction: "으, 이번에도 다루어야 할 꿀들이 있네요.\n어떻게 하면, 꽃꿀을 뽑을지, 꿀을 만들지 선택해서 함수가 실행되도록 할 수 있을까요?"
      Course 4 Bee Params 8 new_instruction: "으, 이번에도 다루어야 할 꿀들이 있네요.\n어떻게 하면, 꽃꿀을 뽑을지, 꿀을 만들지 선택해서 함수가 실행되도록 할 수 있을까요?"
      Course 4 Bee Params 8_instruction: "도전해보세요: 으, 이번에도 다루어야 할 꿀들이 있네요.\n꿀의 개수와, 꽃꿀의 개수를 모두 사용하는 함수를 다시 만들어보세요.\n2가지 가지 값들에 대해서 어떻게 해야할까요?"
      Course 4 Bee Params Ex_instruction: "모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요."
      Course 4 Binary 1_instruction: "여기에 1 또는 0 으로만 구성되어있는 2진 문자열을 입력하는 함수가 있습니다. 왼쪽에서 오른쪽으로, 위에서 아래로 내려가면서 0인 곳에서 회전하도록 하는 함수입니다. 2진 표시를 통해 농부가 이미지를 어떻게 그려낼 수 있는지 살펴보세요."
      Course 4 Binary 2_instruction: '8번 반복시켜서 이 이미지를 그릴 수 있는 2진 문자열은 어느 것 일까요? 힌트: "1"은 구덩이를 메웁니다.'
      Course 4 Binary 3_instruction: "하나의 2진 문자열을 반복시켜서 이 패턴을 만들어보세요."
      Course 4 Binary 5 (copy 1)_instruction: "10번 반복시켜서 이 이미지를 만들 수 있는 2진 문자열은 어느 것 일까요?"
      Course 4 Binary 5_instruction: "10번 반복시켜서 이 이미지를 만들 수 있는 2진 문자열은 어느 것 일까요?"
      Course 4 Binary 6 (copy 1)_instruction: "10번 반복시켜서 이 이미지를 만들 수 있는 2진 문자열은 어느 것 일까요?"
      Course 4 Binary 6_instruction: "10번 반복시켜서 이 이미지를 만들 수 있는 2진 문자열은 어느 것 일까요?"
      Course 4 Binary 7_instruction: "10번 반복시켜서 이 이미지를 만들 수 있는 2진 문자열은 어느 것 일까요?"
      Course 4 Binary 8_instruction: "5 비트로 구성된 2진수를 반복시켜서 이 이미지의 대부분을 그려낼 수 있습니다. - 그리고 가장 오른쪽 아래로 이동시키기 위해서 4 비트의 수가 더 필요합니다."
      Course 4 EC 1a_instruction: "규칙이 없습니다. 힌트도 없습니다. 도전해보세요!"
      Course 4 EC 1b_instruction: "규칙이 없습니다. 힌트도 없습니다. 도전해보세요!"
      Course 4 EC 2a_instruction: "**무한 도전** 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!"
      Course 4 EC 2b_instruction: "규칙이 없습니다. 힌트도 없습니다. 도전해보세요!"
      Course 4 EC 2c_instruction: "규칙이 없습니다. 힌트도 없습니다. 도전해보세요!"
      Course 4 EC 2d_instruction: "규칙이 없습니다. 힌트도 없습니다. 도전해보세요!"
      Course 4 EC 3_instruction: '이런 이미지를 그려내기 위해서 이전 레벨에서 배웠던 것들을 사용해 보세요. 참고: 이 코드는 매개변수들을 사용하면 더 간단하게 만들 수 있습니다. '
      Course 4 EC 3a_instruction: '무한 도전: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!'
      Course 4 Maze 1_instruction: "화난 새를 돼지에게 이동시켜주세요!"
      Course 4 Maze 2_instruction: "TNT를 피해 움직이세요!"
      Course 4 Maze 3_instruction: "새를 돼지에게 이동시킬 수 있도록 프로그래밍 해보세요. "
      Course 4 Maze 4_instruction: "이 퍼즐을 풀기 위해서...\n더 적은 블록들을 사용하는 \"반복\" 블록을 사용해보세요."
      Course 4 Maze 5_instruction: "블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요."
      Course 4 Maze 6_instruction: "블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요."
      Course 4 Play Lab For Loops 2_instruction: "이번에는,\n1부터 100까지 홀 수들만 카운팅 해보세요."
      Course 4 Play Lab Params 1_instruction: "\"점프\" 함수는 주 캐릭터가 100 픽셀 만큼 점프하도록 해줍니다.\n점프 함수를 이용해서 모든 깃발들을 모아보세요."
      Course 4 Play Lab Params 10_instruction: "여러분을 위해서 함수를 하나더 추가했습니다.\\r\n\\r\n\"if\" 명령어를 이용해서 \"player_score\" 가 일정 점수를 넘으면 \"level_up\" 함수가 실행되도록 프로그램을 만들어 보세요.\\r\n\\r\n예시: \"player_score\" > 6\\r\n\\r\n게임을 해보고, 레벨4를 통과해서 다음 퍼즐로 가보세요. "
      Course 4 Play Lab Params 2_instruction: "지금 점프로는 닿을 수 없을 만큼 아주 높은 곳에 깃발들이 있습니다.\n\"위\", \"아래\" 화살표를 이용해 멀티 점프가 가능하게 해보세요. \\r\n\\r\n\"높이\" 라는 매개변수를 점프 함수에 추가해야 합니다. \"위\"는 강아지를 200 픽셀 만큼 점프하게 만들고, \"아래\"는 100 픽셀 만큼 점프하도록 해야 합니다.\n\\r\n\\r\n힌트: 점프 함수를 수정해서 \"높이\" 매개변수를 사용할 수 있도록 해야합니다."
      Course 4 Play Lab Params 3_instruction: "점프 함수에 다른 매개 변수를 더 추가해서, 다른 캐릭터들도 사용할 수 있게 되었습니다.\n각각의 캐릭터들은 1부터 시작되는 수로 나타내져 있습니다.\n\"점프\" 함수를 수정해서 \"캐릭터\" 매개 변수로 적당한 캐릭터가 점프하도록 만들어보세요. "
      Course 4 Play Lab Params 4_instruction: "\"순찰\" 함수가 있습니다.\n함수를 수정해서 고양이가 400 픽셀 위로 이동 했다가, 다시 400 픽셀 아래로 이동하게 해보세요."
      Course 4 Play Lab Params 5_instruction: "\"순찰\" 함수에 \"캐릭터\" 매개변수를 추가해서, 원하는 캐릭터를 화면에 나타낼 수 있도록 해보세요.\n캐릭터들은 1, 2, 3 으로 선택할 수 있도록 해주세요."
      Course 4 Play Lab Params 6_instruction: "\"순찰\" 함수에 \"속도\" 매개변수를 더 추가해 보세요. 다른 캐릭터들이 깃발을 잡기 전에 펭귄이 깃발들을 잡을 수 있도록 \"속도\" 매개변수를 \"속도 설정\" 블록에 사용하세요."
      Course 4 Play Lab Params 7_instruction: "자 이제 즐겨보세요. 주어진 코드가 어떻게 동작하게 될지 한 블록씩 살펴보세요. \\r\n\\r\n살펴본 다음에, 강아지 캐릭터를 방향키로 움직여 깃발을 모두 모아보세요."
      Course 4 Play Lab Params 8_instruction: "\"캐릭터가 닿으면\" 블록을 이용해서, 강아지 캐릭터다 다른 캐릭터들에 닿으면, 처음의 가장 위쪽의 가장 왼쪽으로 이동되도록 해 보세요."
      Course 4 Play Lab Params 9_instruction: "이전 단계에서 봤던 게임입니다만, 대부분의 코드가 숨겨져있습니다. 여기에 \"score_points\" 함수가 있습니다.\\r\n\\r\n함수를 수정해서 \"points\" 매개변수를 \"player_score\"의 변수로 추가해 주세요.\\r\n\\r\n\"play_score\" 변수는 강아지가 고양이에게 하트를 붙일 때마다 증가하고, 고양이가 강아지에게 하트를 붙일 때마다 감소해야합니다.\\r\n\\r\n참고:\n\"실행\"을 눌러 실행해 보세요. 강아지가 6 포인트를 얻으면 다음 퍼즐로 갈 수 있습니다. "
      Course 4 Play Lab Vars 1_instruction: "이번에는 코드를 작성할 필요가 없습니다. \"실행\"을 눌러 실행시켜보세요! 이번 게임에서,\n여러분은 고양이보다 더 많은 깃발을 모으기 위해 노력하는 강아지입니다. \"아래\" 방향키를 이용해서\n강아지를 움직여보세요. 그만하려면 \"마치기\"를 누르면 됩니다."
      Course 4 Play Lab Vars 2_instruction: "이전 퍼즐은 공정하지 않았습니다! \"강아지 속도\" 변수의 값을 바꿔서 고양이보다 더 많은 깃발을 모을 수 있도록 해보세요. 10 개의 깃발을 먼저 모으면 이깁니다!"
      Course 4 Play Lab Vars 3_instruction: "이번에는 새로운 종류의 게임입니다!\n왼쪽/오른쪽 화살표를 이용해 움직이고, 위/아래 화살표를 이용해서 점프합니다. 모든 깃발을 모을 수 있는지 해보세요."
      Course 4 Play Lab Vars 4_instruction: "이제 \"높이\" 라는 변수를 사용해서 강아지가 뛰는 높이를 조정할 수 있습니다.\n모든 깃발에 닿을 수 있도록 \"높이\" 변수를 조정해주세요."
      Course 4 Play Lab Vars 5_instruction: "자 이제 게임을 만들어보세요!\n일단 먼저 점수가 필요합니다. 이전 레벨에서 보았던 코드를 다시 만들어서\n점수를 10으로 설정해주세요. "
      Course 4 Play Lab Vars 6 (copy 1)_instruction: "좋아요, 이제 점수 변수를 얻었습니다. 그런데 이제 어떻게 잘 사용할 수 있을까요?\n파이어볼로 적을 맞출 때마다 점수 변수를 붙이는 것은 어떨까요? \"캐릭터 2가 물체에 닿을 때\" 이벤트를 이용해서 파이어볼이 고양이에 닿을 때 점수를 갱신하도록 해보세요. 점수=점수+1 로 설정해서 점수를 올릴 수 있습니다.\n점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요."
      Course 4 Play Lab Vars 6_instruction: "오른쪽 방향키를 이용해 하트를 맞춰보세요.\\r\n\\r\n이 게임에서는 어떻게 포인트를 올려야 할까요?\n강아지가 하트로 고양이를 맞출 때마다 \"점수\" 변수에 1씩 더해보세요.\n\"캐릭터 2가 물체에 닿으면\" 이벤트를 이용해 점수를 업데이트하면 됩니다. \"점수=점수+1\"로 설정해서\n변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요."
      Course 4 Play Lab Vars 7_instruction: "좋아요. 이제 이 게임을 좀더 어렵게 만들어보세요. 강아지(캐릭터 1) 가 고양이(캐릭터 2) 가 발사한\n노란 하트를 맞으면, 점수를 잃어야 합니다. 10 포인트에서 시작하기 때문에 아주 어렵지는 않습니다.\n10 부터 0 까지 포인트를 내려서 이 레벨을 통과해보세요."
      Course 4 Play Lab Vars 8 (copy 1)_instruction: "자, 이제 이 게임을 위한 마지막 작업입니다. - 플레이어가 승리(패) 하도록 해보세요.\n점수의 값을 검사하기 위해 반복 구조를 사용하세요 - 점수가 20 보다 커지면, 적이 없어지도록 하세요.\n점수가 0 보다 작아질 때마다, 플레이어가 없어지도록 해주세요.\n게임이 그렇게 잘 동작하면 \"마침\"을 눌러주세요."
      Course 4 Play Lab Vars 8_instruction: "이 게임에서 강아지가 승리(패) 하게 해보세요.\n무한 반복을 사용해 점수의 값을 확인하세요 - 점수가 20 보다 크면 적(고양이) 이 사라지게 하세요.\n점수가 0 보다 작으면, 플레이어(강아지) 가 사라지게 해주세요.\n게임이 그렇게 잘 동작하면 \"마침\"을 눌러주세요."
      Course 4 Play Lab Vars 9_instruction: "자유롭게 만들어보세요! 여기에는 지금까지 이 과정에서 사용했던 모든 변수들이 모두 있고,\\r\n필요한 몇 가지가 더 있습니다.\\r\n\\r\n도구 상자에 블록들이 아주 많은데 적당히 분류해야할 것 같습니다!\n이제, 각 블록들을 적당한 카테고리로 묶어 두었습니다. 블록들을 충분히 살펴보세요.\n다 살펴본 이후에 반복 구조, 변수, 이벤트를 이용해 게임이나 이야기를 만들어보세요. \\r\n\\r\n힌트: 모든 명령들을 작업 공간에서 살펴보려면 스크롤해 내려보세요."
      Course 4 Play Lab Vars_instruction: "좋아요. 이제 게임의 마지막 단계를 만들어 보세요.\n- 플레이어가 승리(패) 하도록 설정해 보세요. 무한 반복을 이용해 점수 값을 확인하도록 하세요\n- 점수가 20 보다 크면 적이 사라지게 해주세요. 점수가 0 보다 작으면 플레이어가 사라지게 하면 됩니다."
      Course 4 Play Labs For Loops 1_instruction: "강아지가 1부터 100까지 모든 자연수를 말하도록 해보세요.\n1개의 반복 구조와 카운터 블록을 이용해서, 한 번 실행될 때마다 카운터 값을 말하도록 하면 됩니다."
      Course 4 Play Labs For Loops 2_instruction: "이번에는 Olive가 1부터 101사이에 있는 홀수만 셀수 있도록 도와주세요"
      Course 4 Play Labs For Loops 3_instruction: "더 큰 수 만큼씩 카운터 값을 올리면,\n같은 시간에 더 큰 값 범위를 카운트 할 수 있습니다.\n10 부터 1000 까지, 한 번에 10 만큼 씩 증가시키며, 카운트 할 수 있게 해보세요."
      Course 4 Play Labs For Loops 4_instruction: "증가 값을 바꾸는 것도 좋지만, 아직도 일정 값 만큼 변화를 주어 카운팅하고 있습니다.(각 값들은 바로 이전 값에서 똑같은 값 만큼 변합니다.)\n이 반복 구조를 변화시키지 않고, 지수적으로 카운트를 올리고 싶다면 어떻게 할 수 있을까요?\n1, 4, 9, 16, 25 와 같이 (카운터의 제곱값으로) 카운트를 올릴 수는 없을까요?"
      Course 4 Play Labs For Loops 4a_instruction: "자, 이제 단계 7에서의 변수들과 \"카운터\" 변수를 이용해 마술 같은 일을 해봅시다.  \\r\n\\r\n이 퍼즐에서 강아지는 \"증가 값\"에 따라, 0 부터 1000 까지 카운트 할 것입니다.\n처음 \"증가 값\"을 10으로 시작하면 어떻게 되는지 살펴보세요."
      Course 4 Play Labs For Loops 5_instruction: "이전 단계에서는 제곱 씩 카운트 했었습니다. \"카운트^2\"을 \"카운트^3\"으로 바꾸어서\n세제곱으로 카운트하도록 해보세요.(1, 8, 27, 64, 125, 216, 343...)"
      Course 4 Play Labs For Loops 5a_instruction: "In this puzzle, Dog will be your\ntime keeper.\\r\n\\r\nDog will count from 0 to 30 by \"increment\".  The \"increment\"\nvariable will begin with a value of 1.\\r\n\\r\nCan you make it so that each\ntime you click Dog, the increment increases by 2?  Click the forward arrow\nto run the for loop.\\r\n\\r\nRun the loop a couple of times, clicking Dog before\neach one."
      Course 4 Play Labs For Loops 6_instruction: "소수(prime) 는 1 또는 자기 자신으로만 나누어 떨어지는 수라는 것을 알고 있을 것입니다.\n\"소수 판별\" 함수를 이용해서 1부터 100까지의 자연수 중에서, 소수만 말하도록 해보세요."
      Course 4 Play Labs For Loops 6a_instruction: "이번에도 강아지는 \"증가 값\" 이 사용되는 \"반복\" 을 이용해 카운트 하고 있습니다.\\r\n\\r\n자 그럼 이번에는 마법사를 추가해 넣어 보세요. 마법사를 클릭할 때마다 2만큼 커지도록 \"증가 값\"을 바꿔주세요."
      Course 4 Play Labs For Loops 7_instruction: "For 반복을 사용해서 1, 4, 7, 10, 13, 16, 19, 22, 25 순서로 수를 말할 수 있게 해 주세요."
      Course 4 Play Labs For Loops 7a_instruction: "이제 어딘가 도착했네요! \n강아지가 30 을 카운트하기 전에, 마법사를 클릭하는 횟수를 카운팅 할 수 있을까요? \\r\n\\r\n마법사를 클릭하면, \"클릭됨\" 변수의 값이 1씩 증가되도록 블록들을 추가시켜주세요. 이번에는 \"증가 값\"은 무시해도 됩니다.\\r\n\\r\n\"실행\"을 누르면 강아지가 카운트를 시작할 것입니다."
      Course 4 Play Labs For Loops 8_instruction: "자 이제, 캐릭터들이 자기들이 카운트 하는 만큼씩 이동하도록 해보세요.\\r\n\\r\n강아지는 한 번에 카운트에 2 씩 더해 움직여야합니다.(카운트 + 2)\n고양이는 한 번에 2 배씩 카운트를 곱해 움직여야합니다.(카운트 * 2)\n펭귄은 한 번에 카운트를 제곱해 움직여야 합니다.(카운트 ^ 2)\n깃발에 가장 먼저 도착하는 것은 누구일까요?"
      Course 4 Play Labs For Loops 8a_instruction: "게임을 마치려면 \"증가값\" 변수를 다시 사용해야 합니다! 이번 레벨을 통과하기 위해 사용해봅시다.\\r\n\\r\n1) 마법사가 클릭되는 횟수를 계속 검사합니다.\\r\n2) 강아지의 카운트가 30이 되기 전에, 마법사의 클릭 횟수가 10 이상이 되면, 1 만큼 \"증가값\"을 올리고 다시 시작합니다.\\r\n3) 강아지의 카운트가 30이 되었는데, 마법사의 클릭 횟수가 10 보다 작으면, 게임이 끝납니다."
      Course 4 Playlab For Loop Freeplay_instruction: '자유 놀이: 지금까지 배운 모든 것을 사용하여 "for(~동안)" 반복문을 포함하는 게임을 만들어 보세요!'
      Course 4 Playlab For Loops 4b_instruction: "자, 이제 이 두 캐릭터는 경주를 할 것입니다. \\r\n\\r\n캐릭터들은 한 번에 \"카운터(counter)\"만큼씩 이동할 것입니다. 그러나 \"for(~동안)\" 반복문으로 인해 그 \"카운터\" 들은 서로 다른 값을 가질 것입니다. \\r\n\\r\n반복문 중 하나의 증가값을 바꿔서 경주가 무승부가 되도록 해 줄래요?"
      Course 4 Playlab For Loops 5b_instruction: "두 캐릭터가 정확히 같은 장소에서 끝내도록 \"for(~동안)\" 반복문의 간격을 조절하세요."
      Course 4 Playlab For Loops 6b_instruction: "여러분이 재미있게 즐길 수 있는 게임을 만들기 위해 이 \"for(~동안)\" 반복문을 편집하세요.\\r\n\\r\n\"실행\" 버튼을 누르고 유니콘을 네 번 클릭하여 우승하게 해 보세요. "
      Course 4 SCF 1_instruction: "4줄의 육각형들을 그리기 위해서 주어진 함수들을 사용해보세요.\n짝수 줄의 육각형들은 오른쪽으로 얼마나 이동되어 그려져 있을까요?"
      Course 4 SCF 1a_instruction: "어떻게 하면 최대한 가장 적은 블록들을 사용해서, 모든 꽃꿀들을 모을 수 있을까요?"
      Course 4 SCF 1b_instruction: "어떻게 하면 최대한 가장 적은 블록들을 사용해서, 모든 꽃꿀들을 모을 수 있을까요?"
      Course 4 SCF 2_instruction: '이런 이미지를 그려내기 위해서 이전 레벨에서 배웠던 것들을 사용해 보세요. 참고: 매개변수들을 사용하면 더 간단하게 만들 수 있습니다. '
      Course 4 SCF 3 Fail 1_instruction: "어떻게 해야할지 생각해 낼 수 있나요?"
      Course 4 SCF 3 Fail 2_instruction: "어떻게 해야할지 생각해 낼 수 있나요?"
      Course 4 SCF 3_instruction: '이런 이미지를 그려내기 위해서 이전 레벨에서 배웠던 것들을 사용해 보세요. 참고: 매개변수들을 사용하면 더 간단하게 만들 수 있습니다. '
      Course 4 SCFL 1_instruction: "가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요."
      Course 4 SCFL 1a_instruction: "최대한 적은 블록들을 사용해서 스크랫이 도토리를 잡을 수 있게 해주세요."
      Course 4 SCFL 1b_instruction: "최대한 적은 블록들을 사용해서 스크랫이 도토리를 잡을 수 있게 해주세요."
      Course 4 SCFL 2_instruction: "가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요."
      Course 4 SCFL 3_instruction: "어떻게 하면 이 그림을 다시 그려낼 수 있을까요?"
      Course 4 SCFL 4_instruction: "어떻게 하면 이 그림을 다시 그려낼 수 있을까요?"
      Course 4 SCFL 5_instruction: "어떻게 하면 이 그림을 다시 그려낼 수 있을까요?"
      Course 4 SCFL 6_instruction: "어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?"
      Course 4 SCFL 7_instruction: "화가가 물결무늬들을 잡고 싶어합니다! 어떻게 하면 다시 그려낼 수 있을까요?"
      Course 4 SCFP 1_instruction: "매개 변수들을 이용해서 화가가 왼쪽/오른쪽/위쪽/아래쪽으로 x 필셀 만큼 점프 뛰는 함수를 만들어보세요.\n(음수, 양수 모두 사용 가능하도록 만들면 됩니다.)"
      Course 4 SCV 1_instruction: "설명을 다시 보려면 여기를 클릭하세요."
      Course 4 SCV 2_instruction: "설명을 다시 보려면 여기를 클릭하세요."
      Course 4 SCV 3_instruction: "이번에는 잡기 게입입니다! 고양이를 잡으면 2 포인트, 펭귄을 잡으면 3 포인트를 얻게 해보세요.\n10 포인트를 먼저 얻으면 이깁니다!\\r\n하지만, 고양이와 펭귄이 서로 잡으면, 점수를 잃습니다.\\r\n\\r\n위에서 설명한 것처럼 게임이 동작하도록 필요한 블록들을 붙이세요. 방향키를 눌러 강아지를 4방향으로 움직이도록 하려면 어떻게 하면 될까요?\n강아지가 고양이나 펭귄을 잡으면 어떻게 점수를 얻게 할 수 있을까요? 고양이와 펭귄에 동시에 닿으면 어떻게 점수를 잃게 할 수 있을까요?"
      Course 4 SCV 4_instruction: "최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요."
      Course 4 SCV 5_instruction: "최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요."
      Course 4 SCV 6_instruction: "설명을 다시 보려면 여기를 클릭하세요."
      Course 4 SCVP 1_instruction: "매개 변수들을 이용해서 화가가 왼쪽/오른쪽/위쪽/아래쪽으로 x 필셀 만큼 점프 뛰는 함수를 만들어보세요.\n(음수, 양수 모두 사용 가능하도록 만들면 됩니다.)"
      Course 4 Variables Assessment_instruction: "한 변의 크기를 지정하기 위한 변수를 사용해 이 이미지를 만들어보세요.\n각 선의 길이는 50 픽셀입니다."
      Course1BeePuzzle12_instruction: "Get three nectars and then make two honey"
      Course1MazeAssessment1_instruction: "This is a test!\\r\nMove one way, then\nanother to get me to the pig"
      Course1MazeAssessment2_instruction: "This is a test!\\r\nMove one way, then\nanother to get me to the pig."
      Crack Random Substitution_instruction: "소개"
      Crack a Caesar Cipher_instruction: "소개"
      ECSPD Binary Odometer_instruction: "This is another resource you could use\nwith your students."
      Eval Booleans 1_instruction: "Boolean operators (like >, <, =) allow us to\ncompare different values, returning either true or false. Click \"Run\" to\nsee how this expression evaluates."
      Eval Booleans 2_instruction: "Can you set the values so that this expression\nevaluates as true?"
      Eval Booleans 3_instruction: "The string-length function returns the number\nof characters in a string (including spaces!) - make this code evaluate to\ntrue."
      Eval Booleans 4_instruction: "Here's an Evaluation Block called AND - it returns\ntrue if both of its parameters are true, otherwise it returns false. Edit\nthe x variable so that this expression returns true."
      Eval Booleans 5_instruction: "This OR block returns true if either of its parameters\nis true. Otherwise, if both parameters are false it will return false. Set\nthe y variable to a value that will cause this expression to return false."
      Eval Booleans 6_instruction: "Here's one more boolean block called NOT. This\nblock flips true to false, or false to true. If you wrap this block of code\nin a NOT block, it should return true (because we are asking if the two expressions\ndo NOT produce equal values)."
      Eval Booleans Free Play_instruction: "Free Play: Try out some creations of\nyour own using Booleans."
      Eval Booleans_instruction: "Booleans allow us to compare different values,\nreturning \"true\" if the are equal, or \"false\" if they are not. What do\nyou think this code will evaluate to?"
      Eval Cond 1_instruction: "The cond block checks the boolean expressions in\nthe left column, and as soon as it finds one that returns \"true\" it runs\nthe corresponding code on the right. If none of the expressions evaluate to\n\"true,\" it runs the bottom block. Update the \"temperature\" variable so\nthat this block returns \"It's just right.\""
      Eval Cond 2 (copy 1)_instruction: "This condition returns a different shape\nbased on the value of the \"sides\" variable - change the value of \"sides\"\nso that the conditional returns a triangle."
      Eval Cond 2_instruction: "This condition returns a different shape based on\nthe value of the \"sides\" variable - change the value of \"sides\" so that\nthe conditional returns a triangle."
      Eval Cond 3 (copy 1)_instruction: "Can you write a conditional that checks\nthe variable \"age\" and returns \"Old enough to vote and drive\" if age >\n17, \"Old enough to drive\" if age is > 15, and \"Can't drive or vote\" if\nneither conditions is true. Hint: The first condition to return \"true\" wins\n- make sure you put your conditions in the right order."
      Eval Cond 3_instruction: "Can you write a conditional that checks the variable\n\"age\" and returns \"Old enough to vote and drive\" if age > 17, \"Old enough\nto drive\" if age is > 15, and \"Can't drive or vote\" if neither conditions\nis true. Hint: The first condition to return \"true\" wins - make sure you\nput your conditions in the right order."
      Eval Cond 4_instruction: "We can use the string=? function to make conditionals\nthat respond to text input. Here's a function called green shape that takes\na string for the type of shape. Complete the conditions so that the correct\nsolid green shape is returned when the function is run with \"circle\", \"triangle\",\n\"square\", or \"rectangle\"."
      Eval Cond 5_instruction: "Here's a similar function red shape with an additional\nvariable for size. Complete the conditionals so the correct solid red image\nof a given size is drawn for \"circle\", \"triangle\", and \"star\"."
      Eval Cond 6_instruction: "Write a function called food-critic, which takes\nin the name of a food and produces a String that says how you feel about that\nfood. For example, (food-critic “pizza”) might evaluate to “delicious”, but\n(food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two\nfoods to review, but you can you write more if you like!  Don’t forget to\nadd an “else” clause!\\r\nOne example - and part of the definition -  has already\nbeen done for you!"
      Eval Cond 7_instruction: "Free Play: Write a function called green-shape, which\ntakes in the name of a shape and produces a solid green shape. Your function\nshould work with at least “circle”, “star” and “rectangle”, but you can add\nother shapes if you like. You can choose the size of each shape. Don’t forget\nto add an “else” clause!\\r\nOne example - and part of the definition -  has\nalready been done for you!\\r\n"
      Eval Cond 8_instruction: "Free Play: Suppose you want to own a car at 21, or\nhave your own business by 30. Write a function called life-goals, which takes\nin an age and produces a string that describes your life goals by then. Don’t\nforget to add an “else” clause!\\r\n"
      Eval Contracts 1_instruction: "Use the \"star\" function to produce a red star\nwith a 60 pixel radius"
      Eval Contracts 10A_instruction: "Alright let's complete this puzzle with a\nGreen Square that is 175 pixels in size."
      Eval Contracts 11A_instruction: "Can you complete this puzzle to read \"Hello\nWorld\" in the banner?"
      Eval Contracts 2_instruction: "Check out the \"rotate\" function - can you\nuse it to rotate this 90 pixel green square by 45 degrees?"
      Eval Contracts 3_instruction: "Try using the \"text\" function to write this\nteal text at size 40."
      Eval Contracts 4 A_instruction: "The \"scale\" function returns an image that\nis scaled either larger or smaller than the input image. Try scaling this\ncircle by a factor of 10 - how is the resulting image different than if you'd\njust made a circle of that size in the first place?"
      Eval Contracts 4_instruction: "The scale function returns an image that is\neither larger or smaller than the input image. Try scaling this circle by\na factor of 10. How is the returned image different than if you'd just made\na circle of that size in the first place?"
      Eval Contracts 8A_instruction: "Can you complete this puzzle? The big-triangle\nis 200 pixels in size and purple?"
      Eval Contracts A_instruction: "Use the star function to produce a solid red\nstar with a 60 pixel radius"
      Eval Contracts C_instruction: "Check out the rotate function - can you use\nit to rotate this 90 pixel green square by 45 degrees?"
      Eval Contracts E_instruction: "Try using the text function to write \"Hello,\nworld!\" in teal at size 40."
      Eval Contracts shrink_instruction: "Can you complete this image using the \"shrink\"\nfunction block? The radius is 20. "
      Eval Define Funcs 1_instruction: "Here's a new function called green-triangle\nthat takes a single Number for size and produces a green triangle. Use the\nnew function to create a 125 pixel green triangle."
      Eval Define Funcs 2_instruction: "Let's look inside that green-triangle function\nto see how it works. Can you modify it so that the green-triangle function\nalways draws outlined green triangles?"
      Eval Define Funcs 3_instruction: "Here's the start of another new function\ncalled purple-circle with a domain of one Number (the radius) and a range\nof Image. The body of the function is broken though - fix it and then make\na purple circle with 150 pixel radius"
      Eval Define Funcs 4_instruction: "Create a new function called aqua-star that\nhas a Domain of a single Number for radius and returns an aqua star of the\ngiven radius. Run your new function with a radius of 75."
      Eval Define Funcs 5_instruction: "Let's use that aqua-star function to make\na row of different sized stars. From left to right, the stars should have\nradii of 25, 50, and 75."
      Eval Define Funcs Test_instruction: "Here's the start of another new function\ncalled purple-circle with a domain of one Number (the radius) and a range\nof Image. The body of the function is broken though - fix it and then make\na purple circle with 150 pixel radius"
      Eval Defining Vars Free Play 1_instruction: "Free Play: We've provided a function\nthat fills your screen with my-image. Change my-image to see what patterns\nyou can make."
      Eval Design Recipe .1_instruction: "Here's a Design Recipe for a function\ncalled square-circle with domain Number String and range Image. Click Edit\nto write the function definition (you will see two examples provided)."
      Eval Design Recipe 1 (copy 1)_instruction: "We're going to write a function\nthat draws a solid rectangle of any color that is twice wide as it is high.\nStart with an example - draw a solid green rectangle that has a height on\n100 pixels."
      Eval Design Recipe 1_instruction: "Alright, now given the Contract wide-rect:\nNumber String -> Image, write an example - draw a solid green rectangle that\nhas a height of 100 pixels."
      Eval Design Recipe 2 (copy 1)_instruction: "Let's do one more example before\nwriting the function definition - this time draw a solid red rectangle with\na height of 75 pixels."
      Eval Design Recipe 2_instruction: "Let's do one more example before writing\nthe function definition - this time draw a solid red rectangle with a height\nof 75 pixels."
      Eval Design Recipe 3_instruction: "The Design Recipe for wide-rect already\nhas a contract and one example. Can you write a second example and then complete\nthe definition? The wide-rect function should produce a rectangle of given\ncolor that is twice as wide as it is high."
      Eval Design Recipe 4_instruction: "Use the Design Recipe to create a function\nstarburst. When given a number of points and an outer radius, starburst returns\na yellow radial star with given points, and an inner radius that is half the\nouter radius."
      Eval Design Recipe 5_instruction: "Using the Design Recipe, write a function\nstriped-flag that takes two colors and produces a flag that is 250 pixels\nwide, 150 pixels tall, with three even horizontal stripes of given colors,\nin the order color2, color1, color2."
      Eval Design Recipe 6_instruction: "Write a function large-polygon that should\noutput a solid polygon of given sides and color that takes up most of the\nwindow, regardless of the number of sides. To make sure that the polygon doesn't\nget too large as you increase the number of sides, side length should be inversely\nproportional to side number, with a length of (800/sides)."
      Eval Design Recipe Free Play_instruction: "Free Play: Use the Design Recipe\nto create some functions of your own design"
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: "So far we've only dealt with a single\ntype of data, Numbers. Another type of data is a String, which is any combination\nof letters, numbers, or other characters wrapped in quotation marks. Run the\nString \"Hello, world!\" and see what happens."
      Eval Strings Images .2_instruction: "The string-append function takes two Strings\nand returns a single combined String. Add a String \"Universe\" to the second\nargument of string-append."
      Eval Strings Images 1_instruction: "The third type of data we're going to\nuse is an Image. This star function takes in a Number and two Strings, and\nit evaluates to an Image. Use this function to make a solid red star with\nradius of 100."
      Eval Strings Images 2_instruction: "Free Play: Every Evaluation Block is color-coded\nto let you know which data type it returns and which types it needs for its\nparameters. The last parameter of the triangle function takes a String that\ncontrols its color - try some different colors to see what works."
      Eval Strings Images 3_instruction: "Some functions can only take a specific\nset of Strings, such as the second argument of this circle function, which\ncontrols its style. Draw this orange outline circle using the special String\nblock with a dropdown to make sure you only use valid styles."
      Eval Strings Images 4_instruction: "Try using the rectangle block to draw this\nsolid, red rectangle - it is 175 pixels wide and 100 pixels tall."
      Eval Strings Images 5_instruction: "Try using this new Evaluation Block called\noverlay to place a 100 pixel white triangle on top of a 200 pixel red circle."
      Eval Strings Images 6_instruction: "Use the overlay block to place a 75 pixel\nradius yellow star on top of a 150 pixel long blue square."
      Eval Strings Images 7_instruction: "The offset block lets you move an image\nrelative to where it would normally be placed. Use this block to offset the\nsquare by 100 pixels on the y-axis."
      Eval Strings Images 8_instruction: "Here's a different kind of star block\n- it's called radial-star and it allows you to draw stars with any number\nof points! Use it to create a 7 point solid orange star with an inner radius\nof 75 pixels and an outer radius of 175 pixels."
      Eval Strings Images Free Play_instruction: "Free Play: Explore the blocks available\nto create something interesting. Make sure to share your favorite creations."
      Farmer for Authored Hint testing_instruction: "Wow, I found a really deep hole!\nI don't know how many shovelfuls of dirt it needs.  Can you write a program\nthat fills it until the ground is even?  Hint:  Try using the while loop this\ntime."
      Farmer for TTS testing_instruction: "Wow, I found a really deep hole! I don't\nknow how many shovelfuls of dirt it needs.  Can you write a program that fills\nit until the ground is even?  Hint:  Try using the while loop this time."
      Finalize Your Chaser Game v.1_instruction: "Introducing the setPosition command!\nReplace the moveTo in the button-click event handler to use setPosition to\nmove the button itself to a random location when it's clicked."
      Find the Wizard_instruction: "Build whatever you want. This is an example of\na number-guessing game!"
      Food Fight!_instruction: "We've added one last function for you. \\r\n\\r\nUse\nan \"if\" statement to program your game to call the \"level_up\" function\nonly when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample: \"player_score\" > 6\\r\n\\r\nPlay the game, and make it to level 3\nto move to the next puzzle. "
      Food Fight_instruction: "You can make whatever you want in play lab! This is\nan example of a game you can make in play lab."
      FoodFight_instruction: "This is an example of a game you can make in play lab."
      Frequency Analysis_instruction: "Test"
      'Game Lab Workshop: Random_instruction': "Pick a shape block and use calls\nto randomNumber() in place of one or more of the parameters. Maker sure you\nrun it a few times so you can see the effect of randomization."
      Geometric Pattern_instruction: "Project Idea: Create a pattern using geometric\nideas like shapes. This requires persistence and planning!"
      Geometric Sun_instruction: "Project Idea: Create a pattern using geometric\nideas like shapes. This requires persistence and planning!"
      Get To The Goal_instruction: "Build whatever you want. This is an example of\na number-guessing game!"
      'Grade 4 Example PlayLab Project #1_instruction': "Take a look at this project.  Do\nyou see how it was made?"
      'Grade 4 Example PlayLab Project #2_instruction': "Take a look at this project.  Do\nyou see how it was made?"
      Guess The Number 2_instruction: "Build whatever you want. This is an example\nof a number-guessing game!"
      Guess The Number_instruction: "Build whatever you want. This is an example\nof a number-guessing game!"
      Harvester Test_instruction: "It's harvest time! But I forgot what crop I planted\nat which tile. Please help me harvest all my crops, no matter how they were\noriginally planted!"
      Harvesting_instruction: "Uh oh, I lost my map and can't remember what I planted.\nEvery sprout could grow up to be corn, beans, or pumpkins. Can you write some\ncode to pick all the crops, no matter what they are?"
      Infinity_catch_instruction: "방향키를 이용해서 엘사(\"캐릭터 2\") 가 안나를 잡아보세요."
      Infinity_finale_instruction: "원하는대로 만들고 친구들에게 공유해 보세요."
      Infinity_move_collide_instruction: "히로는 \"캐릭터 1\" 입니다. 히로를 오른쪽에 있는 베이맥스에게 움직이고,\n베이맥스에 닿으면 소리가 나게 해보세요."
      Infinity_move_directions_instruction: "베이맥스는 \"캐릭터 2\" 입니다. 이동 블록들을 추가해서 방향키로 베이맥스를 움직여보세요.\n베이맥스를 다른 캐릭터 2개에 닿게 해보세요."
      Infinity_move_right_instruction: "히로는 \"캐릭터 1\" 입니다. 이동 블록을 사용해서 히로가 오른쪽 베이맥스에 닿게 해보세요."
      Infinity_repeat_instruction: "\"반복(무한)\" 블록을 이용해서 안나가 400 픽셀 만큼 씩\n위, 아래로 움직이도록 해보세요."
      Infinity_say_instruction: "말하기 블록을 이용해서 안나가 \"안녕 여러분\" 이라고 말하도록 해 보세요."
      Infinity_shoot_instruction: "베이맥스는 \"캐릭터 2\" 입니다. 베이맥스가 히로에게 로켓을 던지게 해보세요."
      Infinity_shoot_directions_instruction: "히로는 \"캐릭터 3\" 입니다. 히로가 4개의 캐릭터들에게 각각 발사체를 하나씩 쏘도록 해주세요. 1초 간격으로 하나씩 쏘도록 해주세요."
      Infinity_test_instruction: "This is a test Infinity level."
      Infinity_touch_faster_instruction: "더 많은 눈송이들도 터치해보세요."
      Infinity_touch_four_instruction: "안나를 위, 아래, 왼쪽, 오른쪽으로 움직여서 4개의 눈송이들을 터치해보세요."
      Infinity_touch_score_instruction: "안나가 눈송이에 닿으면 점수를 올리도록 만들어보세요. 그 다음에 \"실행\"을 누르고 안나를 움직여 눈송이에 닿게 해보세요."
      Inspirational Artwork_instruction: "Free Play Inspiration: You've now learned\neverything you need to know to make a pattern like this! If this picture inspires\nyou, try to make something similar. Otherwise, create something all your own.\\r\n\n\\r\nWant to know how our inspiration pattern was made? "
      InspirationalArtwork_instruction: "If this picture inspires you, try to make\nsomething similar. Otherwise, create something all your own."
      'Internet Simulator: Broadcast Mode_instruction': "Now use the Internet Simulator\nto send the battleship moves. For setup, join a Room with your group, and\nadd ships to your paper board for each opponent. When playing, all communication\nmust be done through the tool, so no talking, but have fun!\\r\n"
      'Internet Simulator: Broadcast_instruction': "Now use the Internet Simulator\nto send the battleship moves. For setup, join a Room with your group, and\nadd ships to your paper board for each opponent. When playing, all communication\nmust be done through the tool, so no talking, but have fun!\\r\n"
      'Internet Simulator: DNS Mode_instruction': "In this version of the Internet\nSimulator, a Domain Name System (DNS) is provided for you and knows the IP\naddresses of all connected computers. Send a message in the form GET [hostname]\nto the DNS service at address <yourRouterNumber>.15 to get a student's address."
      'Internet Simulator: DNS_instruction': "In this version of the Internet Simulator,\na Domain Name System (DNS) is provided for you and knows the IP addresses\nof all connected computers. Send a message in the form GET [hostname] to the\nDNS service at address <yourRouterNumber>.15 to get a student's address."
      'Internet Simulator: Packets_instruction': "Develop a Protocol for Reliably\nSending a Message.\\r\n\\r\nConstraints:\\r\n- Packets may contain only 8 characters\\r\n-\nPackets may drop with small probability\\r\n- Packets may not arrive in order"
      'Internet Simulator: Routers_instruction': "Send messages with your classmates\n(Click to see full instructions)"
      'Internet Simulator: Sending Binary Messages 1_instruction': "Develop, document,\nand test a protocol that allows you to use Internet Simulator to relay a message.\nSee the worksheet for more detailed instructions.  "
      'Internet Simulator: Sending Binary Messages_instruction': "Develop, document,\nand test a protocol that allows you to use Internet Simulator to relay a message.\nSee the worksheet for more detailed instructions.  "
      'Internet Simulator: Sending Numbers_instruction': "With your partner, develop\na protocol or set of rules for communicating a drawing using only bits. See\nthe worksheet handed out by your teacher for more detailed instructions!"
      'Internet Simulator: Sending Text_instruction': "Work with a partner or in\na small team to develop a protocol that allows you to send formatted text.\nSee the worksheet handed out by your teacher for more detailed instructions!"
      Just for Testing_instruction: "Test instructions"
      K-1 Artist 1 Assessment 1_instruction: "짧은 선은 위쪽으로 그리고 긴 선은 오른쪽으로 그리세요."
      K-1 Artist Loops 1_instruction: "오른쪽으로 4번 이동해서 이 선을 그려보세요."
      K-1 Artist Loops 2_instruction: "1개의 반복 구조를 이용해서 같은 선을 그려보세요."
      K-1 Artist Loops 3_instruction: "이 블록들을 반복시켜서 6개의 선을 그려보세요."
      K-1 Artist Loops 4_instruction: "반복 구조를 사용하면, 이 성의 꼭대기를 그리는데 도움이 될까요?"
      K-1 Artist Loops 5_instruction: "이 계단들을 그리기 위해서 4번 반복시켜보세요."
      K-1 Artist Loops 6_instruction: "2 개의 반복구조가 필요합니다: 하나는 위로 올라가는 것이고,\n다른 하나는 아래로 내려가는 것입니다."
      K-1 Artist Loops 7_instruction: "2개의 반복 구조를 이용해서 이 패턴을 완성해보세요."
      K-1 Artist Loops 8_instruction: "이번 계단은 더 많습니다."
      K-1 Artist Loops 9_instruction: "형성평가: 반복 구조 1개를 사용해서 계단을 그려보세요."
      K-1 Artist Loops Free Play_instruction: "자유 시간입니다. 재미있는 것을 그려보세요!"
      K-1 Artist1 1_instruction: "1개의 선으로 남자의 발을 그려보세요."
      K-1 Artist1 10_instruction: "보물 X 까지 파선(----) 을 그려보세요."
      K-1 Artist1 2_instruction: "선 2개로 고양이 수염을 그려보세요!"
      K-1 Artist1 3_instruction: "왼쪽으로 2개의 선을 그리고, 위쪽으로 2개의 선을 그려 집을 완성해보세요!"
      K-1 Artist1 4_instruction: "선을 위로/옆으로/아래로 그려 성을 완성해보세요!"
      K-1 Artist1 5.5_instruction: "짧은 선들을 사용해서 성의 세번째 타워를 완성해보세요."
      K-1 Artist1 5_instruction: "2개의 선을 그어 이꽃의 줄기를 그려보세요."
      K-1 Artist1 6_instruction: "점프 블록을 사용해서 그림을 완성해보세요!"
      K-1 Artist1 7_instruction: "점프 블록을 사용해서 선을 그리지 말고 이동하세요.\n위로 점프해서 선을 그려주세요."
      K-1 Artist1 8_instruction: "점프, 그리기 블록을 이용해서 파선(----) 을 그려보세요."
      K-1 Artist1 9_instruction: "선을 그린 다음에 점프해서 파선을 만들어보세요."
      K-1 Artist1 Assessment 1_instruction: "짧은 선, 긴 선들을 그려보세요!"
      K-1 Artist1 Assessment 2_instruction: "짧은 파선(----) 들을 그려보세요!"
      K-1 Artist2 1_instruction: "삼각형 아래에 사각형을 그려보세요."
      K-1 Artist2 2_instruction: "집 옆으로 점프해서 사각형을 그려보세요."
      K-1 Artist2 3_instruction: "다른 사각형 위에 사각형을 그려보세요."
      K-1 Artist2 4_instruction: "사각형을 그려 다리를 완성해 보세요."
      K-1 Artist2 5_instruction: "사각형을 그려 다리의 기둥을 완성해보세요."
      K-1 Artist2 6_instruction: "두 개의 사각형을 더 그려 완성 시켜보세요!"
      K-1 Artist2 Assessment1_instruction: '형성평가: 다른 사각형 옆에 사각형을 그려보세요.'
      K-1 Artist2 Free Draw_instruction: "아무거나 그려보세요."
      K-1 Artist2_7_instruction: "옷장 맨 위 서랍에 사각형을 그려보세요."
      K-1 Bee 1_instruction: "제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.\n그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요."
      K-1 Bee 10_instruction: "4번 꽃꿀을 모은 후, 2번 꿀을 만드세요!"
      K-1 Bee 11.5_instruction: "4개의 꿀을 만들기 위해서 4개의 꽃꿀을 모아보세요."
      K-1 Bee 11_instruction: "꽃꿀을 3개 모아 꿀을 만들어보세요."
      K-1 Bee 12_instruction: "꽃꿀을 3개 모은 후, 2개의 꿀을 만들어보세요!"
      K-1 Bee 13_instruction: "꽃꿀을 3개 모은 후, 1개의 꿀을 만들어보세요!"
      K-1 Bee 14_instruction: "꽃꿀로 이동해서 꽃꿀을 얻고, 꿀로 이동해서, 꿀을 만들게 해 주세요."
      K-1 Bee 15_instruction: "2개의 꿀을 만들기 위해서 2개의 꽃꿀을 모아보세요!"
      K-1 Bee 2_instruction: "제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.\n그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요."
      K-1 Bee 3_instruction: "제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.\n그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요."
      K-1 Bee 4_instruction: "꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!"
      K-1 Bee 5_instruction: "꽃꿀을 3개 모은 후, 1개의 꿀을 만들어보세요!"
      K-1 Bee 6_instruction: "꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!"
      K-1 Bee 7_instruction: "꽃꿀을 3개 모은 후, 2개의 꿀을 만들어보세요!"
      K-1 Bee 8_instruction: "꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!"
      K-1 Bee 9_instruction: "꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!"
      K-1 Bee Assessment 1_instruction: "꿀을 만들기 위해, 꽃꿀을 모으세요."
      K-1 Bee Assessment 2_instruction: "꿀을 만들기 위해, 꽃꿀을 모으세요."
      K-1 Bee Loops 1_instruction: "꿀을 만들기 위해, 꽃꿀을 모으세요."
      K-1 Bee Loops 10_instruction: "모든 꽃꿀을 모아 꿀을 만들어보세요."
      K-1 Bee Loops 11_instruction: "모든 꽃꿀과 꿀을 모아보세요."
      K-1 Bee Loops 12_instruction: "모든 꽃꿀과 꿀을 모아보세요."
      K-1 Bee Loops 2_instruction: "1개의 반복 구조를 사용해서 이동한 후, 꽃꿀을 모으고, 꿀을 만드세요!"
      K-1 Bee Loops 3_instruction: "3개의 반복(횟수) 구조를 사용해서, 꽃꿀을 모으고 꿀을 만들어보세요!"
      K-1 Bee Loops 4_instruction: "반복(횟수) 구조를 사용해서, 꽃꿀을 모으고 꿀을 만들고, 이동해 보세요!"
      K-1 Bee Loops 5_instruction: "반복(횟수) 구조를 사용해서, 꽃꿀과 꿀을 모아보세요!"
      K-1 Bee Loops 6_instruction: "1개의 반복(횟수) 구조를 사용해서, 꽃꿀과 꿀을 모으고, 이동해 보세요!"
      K-1 Bee Loops 7_instruction: "꽃꿀을 모아 꿀을 만들어보세요!"
      K-1 Bee Loops 8_instruction: "꽃꿀을 모아 꿀을 만들어보세요!"
      K-1 Bee Loops 9_instruction: "꽃꿀을 모두 모아 꿀을 만들어 보세요."
      K-1 Bee Loops Assessment 1_instruction: "꿀을 만들기 위해서, 꽃꿀을 모으세요.\n이동하기 위해서 반복 구조들을 사용하세요!"
      K-1 Bee Loops Assessment 2_instruction: "반복 구조들을 사용해서 꽃꿀을 모아 꿀을 만들어 주세요!"
      K-1 Bee Puzzle 12_instruction: "Get three nectars and then make two honey"
      K-1 Building a Foundation Assessment_instruction: "3단계 피라미드를 만들어보세요. 한 조각 씩 그려 완성해보세요!"
      K-1 Maze 10_instruction: "TNT를 피해 돼지에게 이동시켜주세요! "
      K-1 Maze 11_instruction: '길을 따라가서 돼지를 잡게 해주세요. TNT를 피해가지 않으면 깃털들이 날리게 될 거에요! 힌트: TNT는 내 아래에 있습니다.'
      K-1 Maze 2_instruction: "오른쪽으로 이동해서 돼지를 잡을 수 있게 해주세요!"
      K-1 Maze 3_instruction: "돼지를 잡을 수 있도록, 저를 아래쪽으로 보내주세요!"
      K-1 Maze 4_instruction: "돼지를 잡을 수 있도록, 저를 위쪽으로 보내주세요!"
      K-1 Maze 5_instruction: "오른쪽으로 이동해서 돼지를 잡을 수 있게 해주세요!"
      K-1 Maze 6_instruction: "돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!"
      K-1 Maze 7_instruction: "돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!"
      K-1 Maze 8_instruction: "돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!"
      K-1 Maze 9_instruction: "돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!"
      K-1 Maze Assessment 1_instruction: "형성평가 -- 돼지에게 이동시켜주세요!"
      K-1 Maze Assessment 12_instruction: "형성평가 레벨"
      K-1 Maze Assessment 13_instruction: "형성평가 레벨"
      K-1 Maze Assessment 2_instruction: "형성평가 -- 돼지에게 이동시켜주세요!"
      K-1 Maze Loops 1_instruction: "저를 돼지에게 이동시켜 주세요."
      K-1 Maze Loops 10_instruction: "돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용해 더 쉽게 해보세요."
      K-1 Maze Loops 11_instruction: "돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하면 쉽습니다."
      K-1 Maze Loops 12_instruction: "돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하면 쉽습니다."
      K-1 Maze Loops 2_instruction: "돼지에게 갈 수 있도록, 반복(횟수) 블록을 사용해보세요."
      K-1 Maze Loops 3_instruction: "돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요."
      K-1 Maze Loops 4_instruction: "저를 돼지에게 이동시켜 주세요."
      K-1 Maze Loops 5_instruction: "돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요."
      K-1 Maze Loops 6_instruction: "돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요."
      K-1 Maze Loops 7_instruction: "돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요."
      K-1 Maze Loops 8_instruction: "돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하세요."
      K-1 Maze Loops 9_instruction: "저를 돼지에게 이동시켜 주세요."
      K-1 Maze Loops Assessment 1_instruction: "지금까지 배웠던 것을 잘 살펴보세요!\n반복(횟수) 구조를 사용해 돼지에게 보내주세요!"
      K-1 Maze Loops Assessment 2_instruction: "돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하세요."
      K-1 Maze Multi 14_instruction: "형성평가 레벨"
      K-1 Maze Multi 15_instruction: "형성평가 레벨"
      K-1 Maze Sequence Assessment 1_instruction: "배운 것을 살펴봅시다!\\r\n한 방향으로 움직이다가 다른 방향으로 움직여서 돼지에게 갈 수 있도록 해주세요."
      K-1 Maze Sequence Assessment 2_instruction: "돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!"
      K-1 Maze debug Assessment 1_instruction: "형성평가: 돼지에게 갈 수 있도록 블록들을 추가하거나 다시 배치 해주세요."
      K-1 artist 1 level 10_instruction: "점프, 그리기 블록을 이용해서 파선(----) 을 그려보세요."
      K-1 artist 1 level 9_instruction: "세 개의 선을 이용하여 이것을 그려보세요."
      K-1 maze debug 1_instruction: "코드를 수정해서 돼지를 잡을 수 있게 해주세요!"
      K-1 maze debug 10_instruction: "돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요."
      K-1 maze debug 11_instruction: "연습해보세요!\\r\n디버깅해서 돼지에게 갈 수 있도록 블록들을 추가하거나 다시 배치 해주세요."
      K-1 maze debug 2_instruction: "어떤 것이 빠졌는지 살펴본 후, 블록들을 추가해서 돼지에게 갈 수 있도록 해주세요!"
      K-1 maze debug 3_instruction: "어떤 것이 빠졌는지 살펴본 후, 블록들을 제거해서 돼지에게 갈 수 있도록 해주세요!"
      K-1 maze debug 4_instruction: "이 블록들을 실행해보고 고쳐주세요! 제가 생각하기에 다른 방향으로 가고 있는 것 같아요."
      K-1 maze debug 5_instruction: "돼지에게 갈 수 있도록 블록들을 추가하거나 다시 배치 해주세요."
      K-1 maze debug 6_instruction: "돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요."
      K-1 maze debug 7_instruction: "돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요."
      K-1 maze debug 8_instruction: "디버깅해서, 돼지에게 갈 수 있도록 블록들을 추가하고 다시 배치 해주세요."
      K-1 maze debug 9_instruction: "돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요."
      K2.0 sequence 1_instruction: "코드를 수정해서 돼지를 잡을 수 있게 해주세요!"
      K2.0 sequence 10_instruction: "Challenge: Move me around the TNT to get to\nthe pig."
      K2.0 sequence 12_instruction: "Let's get that pig! "
      K2.0 sequence 2_instruction: "코드를 수정해서 돼지를 잡을 수 있게 해주세요!"
      K2.0 sequence 3_instruction: "Something is not quite right. REMOVE a block\nto get me to the pig!"
      K2.0 sequence 4_instruction: "Time for a shorter puzzle!  Move one way, then\nanother to get me to the pig."
      K2.0 sequence 4a_instruction: "Try this puzzle again from the start!"
      K2.0 sequence 5_instruction: "돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!"
      K2.0 sequence 6_instruction: "어떤 것이 빠졌는지 살펴본 후, 블록들을 추가해서 돼지에게 갈 수 있도록 해주세요!"
      K2.0 sequence 7_instruction: "Solve this level and get me to the pig!"
      K2.0 sequence 8_instruction: "Debug this level by adding blocks to get me to\nthe pig!"
      K2.0 sequence 9_instruction: TNT를 피해 돼지에게 이동시켜주세요! 
      K2.0 sequence FP_instruction: "Now figure out how to get the pig any way you\ncan!"
      K2.0 sequence pre_instruction: "Play with these blocks to see if you can get\nme to the pig!"
      KTest1_instruction: "Can you make me move South once more to get to the pig?"
      KTest2_instruction: "Trace the path and lead me to the silly pig. Avoid TNT\nor the feathers will fly!"
      Kiki_StarWars_Test_3_instruction: "문장"
      Kiki_StarWars_Test_4_instruction: "문장"
      Kiki_StarWars_Test_5_instruction: "문장"
      Kiki_StarWars_Test_5_Example_instruction: "문장"
      LaurelDebugging4Video1_instruction: "Move Laurel around and get as much gold\nas you can!"
      Limited Quantity of Blocks Test_instruction: "Get me to the pig by adding only\none block"
      Luigi's Pizza 1_instruction: "Welcome to Luigi's Pizza! To order a pizza,\ntype the name of a topping into the cost function, and we'll return the price\nof that pizza. Try ordering a pepperoni pizza to start."
      Luigi's Pizza 2 (copy 1)_instruction: "Right now there are only four choices\navailable at Luigi's pizza - let's fix that! Add a couple of new toppings\nto the conditional block in the \"cost\" function. Once you've added your\ntoppings, test out the function to make sure it works."
      Luigi's Pizza 2_instruction: "Right now there are only four choices available\nat Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional\nblock in the cost function. Once you've added your toppings, test out the\nfunction to make sure it works."
      Luigi's Pizza 3 (copy 1)_instruction: "That's better, everyone loves more\nvariety in their pizza toppings! But you still can't please everyone, and\nfolks are coming in to order toppings that Luigi doesn't have. Instead of\nsaying no to those people, could you update the \"else\" clause so that we\ncharge them a premium for toppings that we don't normally offer?"
      Luigi's Pizza 3_instruction: "That's better, everyone loves more variety in\ntheir pizza toppings! But you still can't please everyone, and folks are\ncoming in to order toppings that Luigi doesn't have. Instead of saying no\nto those people, could you update the else clause so that we charge them a\npremium for toppings that we don't normally offer? Let's charge $10,000\nfor a topping we don't carry."
      Luigi's Pizza 4_instruction: "Free Play: What can you do to make Luigi's cost\nfunction even more useful?"
      MC HOC 2016 Level 1_instruction: "This sheep is coded to 'drop wool' when\nit is 'used.' Use the arrows to walk to the sheep, and press the space bar\nor tap the game space to 'use' it. Collect the wool to win!"
      MC HOC 2016 Level 10_instruction: "이제 자신만의 Minecraft를 만들 수 있습니다! 마음껏 생물들을 생성하고 원하는 일을 지시해보세요. 즐거운 시간 되세요!"
      MC HOC 2016 Level 2-2_instruction: "닭이 움직이지 않는 상태입니다. '이동'과 '회전' 블록을 '생성 시' 슬롯에 넣어 움직이게 해보세요."
      MC HOC 2016 Level 2_instruction: "This chicken has forgotten how to move! Get\nit moving around by putting “Move Forward” and “Turn” commands in the “When\nSpawned” slot. "
      MC HOC 2016 Level 3_instruction: "닭이 움직이는군요. 잘했습니다! 그러고는 멈췄네요. 게임에서 닭은 끊임없이 움직입니다. '영원히 수행' 루프를 추가하여 닭들이 계속 움직이게 하세요."
      MC HOC 2016 Level 4_instruction: "닭들이 모두 같은 방향으로 움직이니 이상하네요. 게임에서는 무작위 이동을 넣어 현실감을 더할 수 있습니다. 닭들이 '무작위 회전'을 하도록 해보세요."
      MC HOC 2016 Level 5_instruction: "소들이 헤매고 있네요! '영원히 수행'에 '한 걸음 다가가기' 블록을 넣고 루프를 만든 뒤 소들이 잔디로 다가가게 하세요."
      MC HOC 2016 Level 6_instruction: "이제 좀비를 생성하세요. 밤이 되면 3마리의 좀비가 생성되도록 '생성' 블록을 사용하세요. 좀비가 자신 쪽으로 오게 하세요. 아침까지 살아남으세요."
      MC HOC 2016 Level 7_instruction: "Now let’s combine what you've learned and\ncreate a new mob! Make a cow, lead it to the pasture, and get it to give you\nmilk."
      MC HOC 2016 Level 8_instruction: "양에게 가는 길이 돌벽으로 막혀 있습니다. 다행히 여기에 크리퍼가 하나 있네요. 크리퍼는 닿으면 폭발합니다. 크리퍼를 사용하여 벽을 폭발시키고 양에게 다가가세요!"
      MC HOC 2016 Level 9_instruction: "Zombies are attacking the village! Code the\nIron Golem to fight them with you. Defeat all the Zombies to save the village!\\r\n"
      MC HOC 2016 Nerop_instruction: "Now let's explore our world! Use the arrows\nto walk around and press the space bar or tap the game space to 'use' items.\nTry getting inside the house by using the door to continue."
      MC HOC 2016 New Drop_instruction: "Minecraft에서 양은 양털을 떨어뜨립니다. '사용했을 때'에 '떨어뜨리기' 블록을 놓은 뒤, 양에게 다가가 양이 아이템을 떨어뜨리게 하세요."
      MC HOC 2016 New Spawn_instruction: "게임에서 생성이란 월드에 뭔가를 더한다는 뜻입니다. '실행 시' 아래 '생성' 블록을 놓고 게임이 시작할 때 뭔가가 생성되게 만드세요."
      MC HOC 2016 New Walk_instruction: "이제 월드를 탐험해 보죠! 화살표 키로 이동하고, 스페이스 바나 게임판을 터치하여 아이템을 사용할 수 있습니다. 문을 사용하여 집 안으로 들어가세요."
      MC HOC 2016 New pn_instruction: "Now let's explore our world! Use the arrows\nto walk around and press the space bar or tap the game space to 'use' items.\nTry getting inside the house by using the door to continue."
      MC HOC 2016 SCORE LEVEL_instruction: "일부 게임에서는 점수를 얻을 수 있습니다. 철 골렘과 술래잡기를 하세요. 철 골렘을 건드리면 점수를 얻을 수 있도록  '1점 추가' 블록을 사용하세요. 5점을 획득하여 승리하세요!"
      MC HOC 2016 Village Test_instruction: "이런! 좀비들에게 포위되었습니다! 철 골렘이 좀비를 쫓아가 공격하는 코드를 짜세요."
      MSM Big Game Empty_instruction: "All variables and functions are currently\nempty stubs. Each puzzle progression will be focused on defining and handful\nof them, and therefore adding functionality."
      MSM Big Game Vars 1 (copy 1)_instruction: "In the Variables toolbox you'll\nsee several variables that define how your game characters look, move, and\ninteract"
      MSM Big Game Vars 1_instruction: "In the Variables toolbox you'll see several\nvariables that define how your game characters look, move, and interact"
      MSM Big Game Vars Backup_instruction: "In the Variables toolbox you'll see\nseveral variables that define how your game characters look, move, and interact"
      MSM Defining Vars 1 (copy 1)_instruction: "Write a program that produces a\n50 pixel solid green triangle."
      MSM Defining Vars 1_instruction: "Write a program that produces a 50 pixel\nsolid green triangle."
      MSM Defining Vars 2 (copy 1)_instruction: "If we wanted to make fifty green\ntriangles, it would be a pain to repeat that block of code 50 times. Let's\ncreate a variable called \"my-shape\" and put the code for a 50 pixel solid\ngreen triangle inside."
      MSM Defining Vars 2_instruction: "If we wanted to make fifty green triangles,\nit would be a pain to repeat that block of code 50 times. Let's create a\nvariable called my-shape and put the code for a 50 pixel solid green triangle\ninside."
      MSM Defining Vars 3 (copy 1)_instruction: "Take your \"my-shape\" variable\nand use it with this provided code to draw two identical green triangles."
      MSM Defining Vars 3_instruction: "Take your my-shape variable and use it with\nthis provided code to draw two identical green triangles that are 50 pixels\nin size."
      MSM Defining Vars 4_instruction: "Edit your my-shape variable so that it draws\n75 pixel solid red stars."
      MSM Play Lab Butterfly 1_instruction: "Help Sam stay on the screen so that\nyou can always see at least a little piece of him. Using the arrow keys, see\nhow far Sam can go to the left while still staying onscreen. You’ll find that\nSam is onscreen as long as his x-coordinate is greater than -50. Then, fill\nin the code to make Sam stay on the screen."
      MSM Play Lab Butterfly 2_instruction: "Now make Sam stay on the right side\nof the screen. You'll have to experiment to see how far he can go and still\nbe partially visible on the screen."
      MSM Play Lab Butterfly 3_instruction: "Now, combine your work to make Sam stay\non both sides of the screen."
      MSM Play Lab Game 2_instruction: "Variables can also be used to control the\nspeed of players in a game. Set the player speed and the enemy speed and see\nhow the movement changes. Speed can be between 2 and 12."
      Middle School Hackathon Pt 1_instruction: "(Click to see full instructions)"
      Middle School Hackathon Pt 2_instruction: "(Click to see full instructions)"
      Mike Pair Programming_instruction: "Here are the instructions"
      Mike Test Bee Conditionals 1_instruction: "This cloud is blocking my view!\nCheck to see if there's a flower under the cloud, and only get nectar if\nthere's a flower. Be careful, it can change!"
      Mike Test Bee Conditionals 2_instruction: "Collect all of the nectar. You can\nonly collect nectar from flowers, but you can check any space to see if there\nis a flower."
      MikeAssessment1_instruction: "Now do it right!"
      MikeStar_instruction: "Draw this."
      MikeStarHard_instruction: "Draw this."
      MikeStarNested_instruction: "Draw this."
      MikeTest1_instruction: "Who knows what you should do?!?!"
      MikeTest2_instruction: "Draw something!"
      MikeTest3_instruction: "Build Something"
      NEW Course 4 Artist Functions 1_instruction: "반복 구조를 이용해서 한 변의 길이가 100 픽셀인 사각형을 그려보세요."
      NEW Course 4 Artist Functions 10.1_instruction: "이 패턴을 그리기 위해서 이전 퍼즐들의 함수들을 사용해보세요."
      NEW Course 4 Artist Functions 10_instruction: "\"수정\"을 누른 후, 함수를 정의한 블록들을 40 픽셀 사각형을 그릴 수 있도록 만들어주세요."
      NEW Course 4 Artist Functions 11_instruction: "한 줄에 6개의 사각형을 그리는 \"사각형 한 줄 그리기\" 함수를 만들어 보세요.\n이전에 만들어 보았던 \"20 크기 사각형 그리기\" 함수를 이용해서 만들면 됩니다."
      NEW Course 4 Artist Functions 12_instruction: "이 패턴을 그리기 위해서, 마지막 퍼즐에서 사용했던\n\"사각형 한 줄 그리기\" 함수를 사용해보세요."
      NEW Course 4 Artist Functions 13_instruction: "\"사각형 한 줄 그리기\" 함수를 이용해서 별 모양을 그려보세요.  "
      NEW Course 4 Artist Functions 14_instruction: "자유 시간입니다! "
      NEW Course 4 Artist Functions 2_instruction: "20 픽셀 만큼 씩 떨어져 있는 3개의 사각형을 그려보세요. 힌트: 각 사각형의 크기는 100 픽셀입니다."
      NEW Course 4 Artist Functions 3_instruction: "여기에 \"함수\"라는 새로운 블록이 있습니다. \"수정하기\"를 눌러 한 변의 길이가 100 픽셀인 사각형을 그릴 수 있도록 코드를 채워보세요. \\r\n\\r\n함수를 모두 수정하면 \"닫기\"를 누른 후 프로그램을 실행시켜보세요."
      NEW Course 4 Artist Functions 4_instruction: "\"사각형 그리기\" 함수를 사용해서 이 패턴을 그려보세요."
      NEW Course 4 Artist Functions 5_instruction: "\"사각형 그리기\" 블록은 어떻게 실행되는 것일까요? \"사각형 그리기\" 함수에서 \"수정하기\"를 눌러보세요.\n수정하기를 눌렀을 때 보이는 것은 \"사각형 그리기\"를 정의한 것입니다.\n함수를 살펴보았으면, \"저장 후 닫기\"를 누른 후, 프로그램을 \"실행\" 시켜 보세요."
      NEW Course 4 Artist Functions 6_instruction: "\"사각형 그리기\" 함수 블록을 이용해서 이 그림을 만들어보세요. 힌트: 각 사각형들은 120 픽셀 만큼 씩 떨어져 있습니다.\\r\n"
      NEW Course 4 Artist Functions 7_instruction: "함수 블록들을 사용하는 것이 어려운가요? 이 함수를 수정해서 200 픽셀 크기가 되도록 바꿔보세요.\n\"사각형 그리기\" 함수에서 \"수정하기\"를 눌러서 고치면 됩니다.\n함수 수정을 끝내려면 \"닫기\"를 누르면 됩니다. "
      NEW Course 4 Artist Functions 8_instruction: "\"삼각형 그리기\"라는 새로운 함수를 만들었습니다.\n한 변의 길이가 100 픽셀인 삼각형을 그릴 수 있도록 함수 정의를 수정해보세요."
      NEW Course 4 Artist Functions 9_instruction: "블록 1개 만 더 추가해서 이 문제를 풀어보세요."
      NEW Course 4 Artist Functions inspire_instruction: "여기를 눌러 멋진 그림을\n다시 살펴보세요."
      NEW Course 4 Artist Params 1_instruction: "한 변의 길이가 50 픽셀 크기인 사각형을 만들 수 있도록\n이 함수를 만들어 보세요. \"수정\"을 눌러 시작하세요."
      NEW Course 4 Artist Params 10_instruction: "\"육각형 그리기\" 함수 블록을 길이 변수값을 바꿀 수 있도록 만들어보세요. 이 정육각형의 한 변의 길이는 100 픽셀입니다. "
      NEW Course 4 Artist Params 11_instruction: "이 모양을 어떻게 그릴지 생각할 수 있나요?\n\"한 변의 길이\" 변수를 사용하기 위해 함수를 수정하세요."
      NEW Course 4 Artist Params 12_instruction: "이 그림을 완성할 수 있겠나요?\n모든 모양의 한 변의 길이는 100 픽셀입니다."
      NEW Course 4 Artist Params 12a_instruction: "이번 이미지는 이전 것과 비슷합니다.\n함수에 \"~동안 반복\" 을 이용해 이 디자인을 만들어보세요."
      NEW Course 4 Artist Params 13_instruction: "\"다각형 그리기\" 함수를 수정해 보세요. \"변의 길이\" 매개 변수가 있습니다. 이제 \"길이\"를 매개 변수로 추가해 보세요. \\r\n각 모양의 둘레의 길이는 200 픽셀입니다. 다각형에서 면의 개수가 달라질 때, 같은 크기로 만드는 공식 기억하고 있으시죠?"
      NEW Course 4 Artist Params 14_instruction: "\"나선 그리기\"를\n\"길이\"와 \"한 변의 길이\" 변수를 이용할 수 있도록 수정하고, 이 모양을 다시 만들어보세요."
      NEW Course 4 Artist Params 15_instruction: "자유 플레이: 여기 여러분들이 작성한 함수들과 가지고 놀 수 있는 몇 개의 함수가 더 있습니다.\n멋진 것들을 그려보세요! 선 그리기로 얼마나 많은 것들을 그릴 수 있는지 해보세요."
      NEW Course 4 Artist Params 2_instruction: "Create a `draw triangle` function\nfrom scratch that makes a triangle with  50 pixel sides."
      NEW Course 4 Artist Params 3_instruction: "이제 한 줄에 5개의 삼각형을 그리는 함수를 사용해보세요.\n각 삼각형들은 30 픽셀씩 떨어져 있습니다.\\r\n"
      NEW Course 4 Artist Params 4_instruction: "이 함수 블록들이 뭔가 다르다는 것을 알아차리셨나요?\n\"실행\"을 눌러 어떤 일이 일어나나 살펴보세요."
      NEW Course 4 Artist Params 5_instruction: "입력 블록의 길이 매개변수에 입력 되어있는??? 를 채워보세요.\n육각형의 한 변의 길이는 100 픽셀입니다. "
      NEW Course 4 Artist Params 6_instruction: "이런 모양들을 그려내기 위해서, \"???\" 로 입력되어있는 \"길이\" 매개 변수의 정확한 값을 채워보세요.\n사각형과 삼각형의 각 변의 길이는 100 픽셀이고 육각형의 한 변의 길이는 75 픽셀입니다."
      NEW Course 4 Artist Params 7_instruction: "이 그림을 완성시켜보세요. 각 삼각형의 변의 길이는 바로 이전 것보다 25 픽셀만큼 더 깁니다. 첫 번째 삼각형의 한 변의 길이는 25 픽셀입니다."
      NEW Course 4 Artist Params 8_instruction: "이 삼각형 함수의 코드는 문제가 있습니다.\n함수를 고쳐서 25, 50, 75 길이의 삼각형을 그려보세요."
      NEW Course 4 Artist Params 9_instruction: "\"사각형 그리기\" 함수의 정의를 \"수정\"해서 매개 변수를 추가해보세요.\n삼각형 그리기와 마찬가지로 길이를 매개 변수로 사용하면 됩니다.\n이번에는 3개의 사각형들을 그리면 됩니다: 한 변의 길이가 25, 50, 75 픽셀이고,\n100 픽셀 만큼씩 떨어져 있습니다."
      NEW Course 4 Artist Params inspire_instruction: "멋진 자유 플레이: 여러분들은 이런 패턴을 만들기 위해 필요한 모든 것들을 배웠습니다.\n이 그림이 멋지다고 생각하면, 비슷하게 다른 것을 만들어보세요. 아니면, 만들고 싶은 것을\n만들어보세요.\\r\n\\r\n이런 멋진 패턴이 어떻게 만들어졌는지 궁금한가요? "
      NEW Course 4 Artist Vars 1.5_instruction: "코드를 살펴보세요. \"길이 설정\" 블록과 \"길이\" 블록이 어떻게 함께 사용될 수 있는지\n이해할 수 있나요? \"실행\"을 눌러 어떻게 실행되는지 살펴보세요. "
      NEW Course 4 Artist Vars 12_instruction: "자 이제, 이전 레벨에서의 알고리즘을 다시 만든 후,\n한 변의 길이가 150인 오각형을 만들어보세요."
      NEW Course 4 Artist Vars 2.5_instruction: "코드를 살펴보세요. \"길이 설정\" 블록과 \"길이\" 블록이 어떻게 함께 사용될 수 있는지\n이해할 수 있나요? \"실행\"을 눌러 어떻게 실행되는지 살펴보세요. "
      NEW Course 4 Artist Vars 2_instruction: "\"길이 설정\" 블록과 \"_번 반복하기\" 블록에 숫자 블록을 넣어, 50 픽셀 크기의 삼각형들을 만들어보세요.\n"
      NEW Course 4 Artist Vars 4 5_instruction: "이전 퍼즐을 멋지게 해결했으니, 이번에는 60 픽셀 크기의 육각형으로 멋진\n디자인을 만들어보세요."
      NEW Course 4 Artist Vars 4_instruction: "다시 한 번 해보세요. \\r\n\\r\n육각형들로 이런 멋진 디자인을 만들기 위해 \"길이\" 변수값을 60으로 설정해 보세요."
      NEW Course 4 Artist Vars 6_instruction: "\"길이\" 변수의 값을 정확히 입력하고 이 변수를 모든 알맞은 위치에 넣어서 100 픽셀짜리 오각형 패턴을 그려보세요. \\r\n\\r\n길이 변수의 값을 한 번만 입력하면, 그 값을 계속 사용할 수 있다는 것을 알 수 있습니다."
      NEW Course 4 Bee For Loops 1_instruction: "각 꽃에서 꽃꿀을 모으기 위해서 반복 구조를 사용하세요."
      NEW Course 4 Bee For Loops 10_instruction: "수평 방향으로 얼마나 멀리 가야하는지\n제어할 수 있도록 \"카운터\" 변수를 반복 구조에 사용하세요."
      NEW Course 4 Bee For Loops 10a_instruction: "자 이제 도전해보세요! 반복에 대해 배웠던 것들을 이용해서, 이 문제를 풀어보세요.\n기억하세요: 어떤 단계들로 진행되는지 이해하기 위해서, 여러 번 실행시켜 봐야 할 거예요."
      NEW Course 4 Bee For Loops 11_instruction: "이동하고 꽃꿀을 모으는데 반복 변수를 사용해보세요."
      NEW Course 4 Bee For Loops 2_instruction: "꿀벌이 모든 꽃꿀을 모울 수 있도록 할 수 있는 코드를 추가해보세요.\n이 퍼즐을 해결하기 위해서, 코드가 얼마나 많이 필요한지 잘 살펴보세요!\n(다음 퍼즐에서는 더 간단한 방법을 배우게 될 것입니다.)"
      NEW Course 4 Bee For Loops 3_instruction: "아! \"반복\" 구조는 더 쉽게 할 수 있어요! 필요한 모든 코드는 여기있으니, 어떻게 사용할지 살펴본 후에\n\"실행\"을 눌러 결과를 살펴보세요. "
      NEW Course 4 Bee For Loops 4 4_instruction: "이제 \"카운터\" 만큼 앞으로 이동시켜야 합니다.\n그 다음에 \"카운터\" 만큼 꽃꿀을 얻으면 됩니다. 이 문제를 해결하기 위해서 \n2 개의 \"반복\" 블록을 사용하세요."
      NEW Course 4 Bee For Loops 4_instruction: "\"반복(~인 동안)\" 구조에서 ??? 부분에, 꿀벌이 모아야 하는 최대 꽃꿀의 양을 입력해 보세요. "
      NEW Course 4 Bee For Loops 5 5_instruction: "\"반복(~인 동안)\" 구조를 사용하기가 어렵나요?\n나머지 꽃꿀을 모을 수 있도록, 꿀벌을 도와주세요."
      NEW Course 4 Bee For Loops 5_instruction: "카운트다운하는데 \"반복(~인 동안)\" 구조를 사용할 수도 있습니다.\n이 꽃꿀을 5 부터 1 까지, 1씩 카운트다운하면서 모아보세요."
      NEW Course 4 Bee For Loops 6_instruction: "반복 함수의 마지막에 있는 수는 \"증가값\"이라고 부릅니다.\n반복 구조가 한 번 실행된 후에, 카운터에는 증가값만큼 더해집니다. 2만큼 증가시켜서\n이 꽃들로부터 모아보세요."
      NEW Course 4 Bee For Loops 7_instruction: "자 이제, \"카운터\" 변수를 수학 블록과 함께 사용해보세요!\n어떻게하면 최대한 적은 블록들로, 이 정원을 돌아다닐 수 있을까요?\n이렇게 3, 6, 9, 12, 15 만큼씩 꽃꿀을 모으려면 어떻게 해야 할까요?\n\"카운터\" 변수를 사용하면 됩니다!\\r\n\\r\n기억하시죠?: 반복 구조가 실행되면, 한 번 실행 하고 난 후에 \"카운터\"\n변수의 값에 그 만큼 더합니다."
      NEW Course 4 Bee For Loops 8_instruction: "잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?"
      NEW Course 4 Bee For Loops 9_instruction: "반복 카운팅이 줄어드는 과정에서는 반복이 한 번씩 끝날 때마다 카운터 변수의 값이 줄어듭니다.\n15, 12, 9, 6, 3의 꽃꿀을 모으기 위해서는 카운터 변수에 더할 값이 어떻게 되어야 할까요?"
      NEW Course 4 Bee For Loops 95_instruction: "여러분이 방금 만든 \"반복\" 조각을 살펴보세요.\n이 퍼즐을 해결하기 위해서는 얼마나 곱해야 할까요? 어떻게 되죠?"
      NEW Course 4 Play Lab Params 11_instruction: "자유 시간입니다!\n도구 상자에 있는 모든 블록들을 이용해보세요. "
      NEW Course 4 Play Lab Params 5 5_instruction: "자! 도움없이 다시 한 번 해보세요.\n캐릭터들이 순찰하도록 하려면 어떻게 해야할까요?"
      NEW Course 4 Play Lab Vars 4 5_instruction: "\"이 코드가 어떤 작업을 하는 것일까요? 실행을 눌러 어떻게 움직이는지 살펴보세요.\""
      NEW Course 4 Play Labs For Loops 7a_instruction: "지금까지 배웠던 것들을 이용해서,\n펭귄이 카운트할 때 마다 한 번씩 앞으로 가도록 해보세요."
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: "자유 시간입니다!\n도구 상자에 있는 모든 블록들을 이용해보세요. "
      NEW Course 4 Play Labs For Loops 8a_instruction: "도전과제: \"반복\" 구조를 사용해서 모든 캐릭터들이 돌아다니면서 자신의 번호를 말하고 난 후,\n화면에서 사라지게 해보세요. "
      NetSim Standalone Automatic DNS_instruction: "In this version of the Internet\nSimulator, a Domain Name System (DNS) is provided for you and knows the IP\naddresses of all connected computers. Send a message in the form GET [hostname]\nto the DNS service at address <yourRouterNumber>.15 to get a student's address."
      NetSim Standalone Broadcast_instruction: "In this version of the Internet Simulator,\nyou can connect to up to 5 other people in a room. When you send messages\nin the room, everyone receives them. What are some of the challenges of this\nsystem, and how might you solve them?\\r\n"
      NetSim Standalone Classroom Routers_instruction: "In this version of the Internet\nSimulator, everyone connects to a router and has a specific address. To send\nmessages, you have to address your message to the specific address of the\nrecipient, and the router will take care of delivering it to the right computer.\nIf there are other routers created in your class, ask for the address of one\nof your classmates and send them a message! View the Log Router to see the\npath the messages have taken through the network."
      NetSim Standalone Freeplay_instruction: "In this configuration, most of the\noptions are turned on, and you can play with them. Have fun!"
      NetSim Standalone Manual DNS_instruction: "In this version of the simulator\nyou can't see the other students' addresses.  Instead, one of you must act\nas a name service, to help share addresses with each other."
      NetSim Standalone Packets TCP_instruction: "Messages on the Internet can take\nmany paths to get to their destination, and sometimes along the way the message\ngets dropped. In this version of the Internet Simulator, there is a 10% chance\nof a packet being dropped, multiple packets may take different paths to the\ndestination, and the default max packet size is set to 6 additional characters.\n"
      NetSim Standalone Routers Addresses_instruction: "For this activity, connect\nto a router with the others in your group. Important note: The router will\nonly properly route messages where the first 4 bits are the To: address and\nthe second 4 bits are the From: address.\\r\n\\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      NetSim Standalone SendAB_instruction: "You and your partner share a single\nwire that can only be in state A or state B. You can set the wire to either\nstate at any time, and you can read the state of the wire at any time. Can\nyou figure out a way to effectively communicate with just this system?"
      NetSim Standalone Sending Numbers Ascii_instruction: "Now that you've transmitted\ninformation represented as decimal numbers, you can map those numbers to text\ncharacters to send text-based information back and forth. With a text-based\nprotocol, you can easily represent and communicate all kinds of information.\n"
      NetSim Standalone Sending Numbers_instruction: "You and your partner can now\nreliably send messages back and forth without extra coordination! While you're\nalways sending bits back and forth, you can also represent those bits as decimal\nnumbers. What kinds of information can you represent with this system? "
      NetSim_AddressingMessages_instruction: "In this version of the simulator, you\nwill connect to a Router instead of directly to another student. Enter an\naddress in the \"To\" box to send a message to another student."
      NetSim_AutomaticDNS_instruction: "In this version of the simulator a DNS service\nis provided for you. Send a message in the form GET [hostname] to the DNS\nservice at address 15 to get a student's address."
      NetSim_ManualDNS_instruction: "In this version of the simulator you can't\nsee the other students' addresses.  Instead, one of you must act as a name\nservice, to help share addresses with each other."
      NetSim_SendAB_instruction: "Connect to another student.  Each of you can set\nthe value of the wire between you to \"A\" or \"B\".  See if you can send\na complete message!"
      NetSim_SendAscii_instruction: "In this version of the simulator, you can send\nnumbers or ASCII characters to one another, one bit at a time."
      NetSim_SendBits_instruction: "Connect to another student.  You can now set\nyour wire to \"0\" or \"1\".  Send a message to your partner!"
      NetSim_SendNumbers_instruction: "In this version of the simulator, you can\nview the decimal representations of the binary you are sending."
      NetSim_SendingABTest_instruction: "This is Sarah's test of making a netsim\nlevel"
      NetSim_Superuser_instruction: "You have loaded NetSim in superuser mode."
      NetSim_Variant1_instruction: "NetSim: Variant 1 allows students to manually\nwork out the timing of sending bits back and forth."
      NetSim_Variant2_instruction: "NetSim: Variant 2: Students connect directly\nto one another and send entire packets back and forth, exploring systems of\nencoding data."
      NetSim_Variant3_instruction: "NetSim: Variant 3: Connects groups of 2-6 students\nwith a router, and explores issues in routing and DNS"
      New Artist Project_instruction: "멋진 그림을 그려보세요!\n여러분의 코드는 프로젝트로 저장되어있기 때문에 언제나 여기로 돌아올 수 있습니다."
      New Course 4 Artist Functions Level 4_instruction: "\"사각형 그리기\" 함수를\n이용해서 이 패턴을 그려보세요."
      New Gumball Project_instruction: "원하는대로 만들고 친구들에게 공유해 보세요."
      New Ice Age Project_instruction: "원하는대로 만들고 친구들에게 공유해 보세요."
      New Infinity Project_instruction: "원하는대로 만들고 친구들에게 공유해 보세요."
      Ninjacat Demo B (copy 1)_instruction: "\\r\nLet’s begin by exploring a simple\nvideogame, and then figuring out how it works. You can use the arrow keys\nto move the ninja left, right and jump - try to catch the unicorn and avoid\nthe dragon!\\r\n\\r\n\\r\n\\r\n  \\r\n\\r\n"
      Ninjacat Demo B_instruction: "Let’s begin by exploring a simple videogame,\nand then figuring out how it works. You can use the arrow keys to move the\nninja up and down - try to catch the unicorn and avoid the dragon! When you\nthink you've figured out how the game works, click \"Finish\""
      Ninjacat Demo No Animate_instruction: "Let’s begin by exploring a simple videogame,\nand then figuring out how it works. You can use the arrow keys to move the\nninja up and down - try to catch the unicorn and avoid the dragon! When you\nthink you've figured out how the game works, click \"Finish\""
      October15 JoL 1_instruction: "Program the artist to design a face for your\njack-o-lantern!"
      October15 bat_instruction: "Freeplay: Here are some functions to play with.  Can\nyou draw a bat?\\r\n"
      October15 ghost 1_instruction: "Give the ghost eyes, using the \"draw a circle\"\nfunction."
      October15 pumpkin 1_instruction: "Finish this jack-o-lantern by drawing the\neyes and nose in any style you would like."
      October15 stars 1_instruction: "Use loops and the \"random integer\" block\nto fill the night sky with stars of different shapes and sizes."
      Overworld Avoid Monsters_instruction: "크리퍼와 마주치는 건 좋지 않습니다. 크리퍼를 조심스럽게 지나쳐서 안전한 집에 도달하세요."
      Overworld Chop Tree - allthethings_instruction: "Wood is a very important resource.\nMany things are made from it. Walk to the tree and use the “destroy block”\ncommand to chop it down."
      Overworld Chop Tree_instruction: "나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 \"블록 부수기\" 명령을 이용해 나무를 베세요."
      Overworld Chop Trees_instruction: "해가 지기 전에 집을 지어야 해요. 집을 지으려면 나무가 많이 필요하죠. 나무 3그루를 모두 베세요."
      Overworld Free Play 20x20_instruction: "축하해요! 모든 퍼즐을 완료했어요! 이제 여태까지 배운 모든 것을 이용해서 채굴하고 건설하며 무언가 독특한 것을 만들어보세요."
      Overworld Free Play_instruction: "여러분은 이 배경에서 플레이하게 될 것입니다. 무엇을 지을지는 여러분이 선택하세요."
      Overworld House Frame - A_instruction: "우리의 집을 만들어보세요!\n이 곳이 좋아 보이네요. 흙 블럭들 위에 집의 기본 구조를 만들어 보세요."
      Overworld House Frame - C_instruction: "우리의 집을 만들어보세요!\n이 곳이 좋아 보이네요. 흙 블럭들 위에 집의 기본 구조를 만들어 보세요."
      Overworld House Frame B_instruction: "벽 하나가 완성되었습니다. 이제 바닥 만들기 계획에 따라서 나머지 집을 지어보세요!\n여기서 많이 반복해야 할 것 입니다."
      Overworld House Frame B2_instruction: "벽 하나가 완성되었습니다. 이제 바닥 만들기 계획에 따라서 나머지 집을 지어보세요!\n여기서 많이 반복해야 할 것 입니다."
      Overworld House Frame C_instruction: "벽 하나가 완성되었습니다. 이제 바닥 만들기 계획에 따라서 나머지 집을 지어보세요!\n여기서 많이 반복해야 할 것 입니다."
      Overworld House Frame Chosen_instruction: "여러분이 원하는 재료를 이용해서, 집의 나머지 부분을 완성해보세요.\n\"repeat\" 명령은 편리하게 사용할 수 있습니다."
      Overworld House Frame_instruction: "집을 만들어 보아요! 여기가 좋겠군요. 흙 블록들 위에 뼈대를 세우세요."
      Overworld Minecart Track_instruction: "땅속 자원을 많이 가지고 지상으로 돌아왔습니다. 이제 여러분의 집에서 난 흙길을 따라 트랙을 건설합니다. 첫 번째 단계는 길을 깨끗이 하는 거예요. 길을 따라서 나무를 정리하세요."
      Overworld Move to Sheep_instruction: "두 번째 \"앞으로 이동\" 명령을 더해서 양에게 도달하세요."
      Overworld Place Wall_instruction: "모든 집은 벽을 짓는 것부터 시작합니다. \"놓기\"와 \"앞으로 이동\" 명령을 반복문 안에 놓아서 집의 첫 번째 부분을 지어보세요."
      Overworld Plant Crops_instruction: "미리 계획을 짜는 것이 좋습니다. 물의 양쪽에 작물을 심으면 나중에 배가 고프지 않아요."
      Overworld Powered Minecart_instruction: "잘했어요! 많은 자원을 모으고 안정적인 집을 지었어요. 이제 지도 가장자리에서 여러분의 집 문까지 레일을 놓으세요."
      Overworld Shear Sheep_instruction: "양털 깎기 시간이에요! 두 마리 양에게서 양털을 채집하려면, \"털 깎기\" 명령을 사용하세요."
      PDAlg 13-16 Sam Extension Puzzle_instruction: "Add a second parameter to \"onscreen?\"\nfor Sam's y coordinate and update the function so it keeps him safe on all\nfour sides."
      PDAlg 17-20 Luigi Extension Puzzle_instruction: "Without modifying your existing\n\"cost\" function, create a new \"coupon\" function that takes a pizza topping\nand coupon code and returns the cost of a pizza with that topping. If the\ncoupon code is correct (you get to decide what it is), apply a 30% discount\nto the pizza."
      PDAlg 8-12 Rocket Height Puzzle_instruction: "Let's write a \"rocket-height\"\nfunction with simple acceleration. Write a function that ensures the rocket\nis at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and\n165 at 4 seconds."
      PDAlg 8-12 ex dr 1_instruction: "The definition in this Design Recipe doesn't\nmatch both examples. Test each example to see which is failing, and then fix\nthe definition to match."
      PDAlg 8-12 ex dr 2_instruction: "This student has created two examples for\nthe function \"apples\" but something's not quite right. How would you direct\nthis student to correct their mistake?"
      PDAlg Big Game History_instruction: "Now that you've played through a Big\nGame level you should see a new entry in your history. Click the Version History\nbutton and you should see at least one version. Each time you go back to a\nBig Game level you'll get a new record in your version history that you can\nrevert back to."
      PDAlg Big Game Remix_instruction: "Here's your Big Game as you last left it.\nTry clicking the Remix button to spin off a new remix of your project.\\r\n\\r\nAny\nchanges you make after you click Remix will be saved on your new remix and\nnot on your main Big Game."
      PDAlg Design Recipe Delete_instruction: "Click the delete button to get rid\nof this function, then try creating and deleting a few of your own."
      PDAlg Design Recipe Examples_instruction: "The definition in this Design Recipe\ndoesn't match both examples. Test each example to see which is failing, and\nthen fix the definition to match."
      PDAlg Design Recipe Required_instruction: "Complete the Design Recipe for the\n\"eggs\" function, making sure to create and test your examples."
      PDAlg Updates Cond_instruction: "When you went to PD in the summer, the Conditional\nblock that you were introduced to was black and allowed any data type to be\nused. This proved to be confusing, given that every other function we've\nseen always produces the same type of data. To help make conditionals clearer\nand more consistent we've replaced the single black block with a separate\nblock for each data type."
      PDAlg Updates Errors_instruction: "Run the provided program and use the error\nmessages to try and track down the bugs."
      PDAlg Updates Space_instruction: "Making use of limited programming space (especially\non small screens) is challenging with a block based language. To help with\nthis we've added a few features. Experiment with this provided code to see\nhow the space can be manipulated to deal with larger programs."
      PDK5 Conditionals 1_instruction: "Purple flowers may have either 1 or 0 nectar,\nbut you don't know which one! Be careful not to collect nectar from a purple\nflower if it doesn't have any. Check if the nectar is equal to 1 by using\nthe if block."
      PDK5 Conditionals 2_instruction: "Try this puzzle that uses conditionals and\nloops together. Use the \"if\" block to decide when to turn. Hint: you only\nneed one more block to complete this puzzle. "
      PDK5 Events 1_instruction: "So far all of the programs we've written are executed\nin order from top to bottom. In this puzzle, we'll use \"Events\" to respond\nto an action on demand. Make the octopus say \"Hello\" only when you click\non the Octopus. "
      PDK5 Functions 1_instruction: "Hello. Me zombie artist. Me love drawing! Help\nme draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels\nshorter than the square length."
      PDK5 Functions 2_instruction: "함수들로 새로운 블록들을 만들어낼 수 있습니다!\n\"사각형 그리기\" 라는 함수에 사각형 1개를 그리는 블록들을 넣었습니다.\n\"사각형 그리기\" 함수를 이용해서 안경을 그려보세요. 사각형들은 75 픽셀 만큼 떨어져 있습니다."
      PDK5 Loops 1_instruction: "Instead of using 5 \"move forward\" blocks, use\nthe \"repeat\" block with a \"move forward\" block inside of it. In computer\nscience, this is called a \"loop.\" "
      PDK5 Loops 3_instruction: "Here's another puzzle to practice loops. What happens\nif you use the repeat block to run the code already provided on the workspace\n4 times?"
      PS - test - pixelation_instruction: "Complete the X shape by typing 0s and\n1s"
      PS FR test 7-25_instruction: "Here are your instructions for this free response.  "
      PS Log test - Define and use turnAround_instruction: "Define a function called\nturnAround. Call the function and then move the turtle forward. (Click to\nsee full instructions)"
      PS copy 2-3 Bee Conditionals 5_instruction: "Be careful not to collect nectar\nfrom a purple flower if it doesn't have any. \\r\nYou must first check if\nthe nectar is equal to 1 using the `if nectar` block."
      PS predictive Applab level test_instruction: "Here are some instructions. "
      Pattern Bee 1_instruction: "What a strange field of goodies! I wonder if there's\na pattern here..."
      Pixelation - AllTheThings 4_instruction: "This pixelation level demonstrates\nthe use of the `hide_encoding_controls` option.  Notice that the level displays\nthe image data in hexadecimal and does not let you change it back to binary."
      Pixelation - AllTheThings 5_instruction: "This pixelation level demonstrates\nthe use of the \"Hide sliders\" option.  Notice that the width and height\nsliders are not available, and the width and height fields are not editable."
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: "Something happened\nto the bits in this image! Find the error and fix it! Hint: a few extra bits\nwere added. You should only need to remove some bits."
      Pixelation - Lesson 14 - Fix bit offset_instruction: "A single extra bit was\ninserted into the stream of bits that make up the C of the Code.org logo.\nThat extra bit bumps all of the other bits down the line which makes the logo\nlook messed up. Hunt down the extra bit and remove it to fix the Code.org\nlogo."
      Pixelation - Lesson 14 - Fix the error_instruction: "Something happened to\nthe bits in this image!  Find error and fix it!  Hint: a few extra bits were\nadded.  You should only need to remove some bits."
      Pixelation - Lesson 14 - Make the Letter A_instruction: "Make a 3x5 letter\n'A'. The widget is setup with the incorrect dimensions. Your first task\nis to set the second byte to the 8-bit binary code for 5: 0000 0101. Then\nstart entering pixel data."
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: "Now make\nyour own image! We've started you off with a 10x10 canvas but you can make\nit whatever size you want. Happy pixeling!"
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: "Now make your\nown image! We've started you off with a 10x10 canvas but you can make it\nwhatever size you want.  Happy pixeling!"
      Pixelation - Lesson 15 - Color Free Play_instruction: "Requirements: The icon\nmust be 16x16 pixels. You must use the Pixelation Widget to encode the bits\nof color information. The image must be encoded with at least 12 bits per\npixel."
      Pixelation - Lesson 15 - Color Shades 4x4_instruction: "We start you out with\nthe 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid\nwith colors using 12-bits per pixel. Here are the requirements: Row 1 - fill\nwith shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4\n- shades of gray."
      Pixelation - Lesson 15 - Color Shades_instruction: "We start you out with the\nrow of shades of red that Maddie created in the video. Experiment with 6-bit\ncolor by filling in the bottom row of the image with shades of a different\ncolor. Here is an example with some shades of blue. Try your own color!"
      Pixelation - Lesson 15 - Complete 3-bit color_instruction: "We start you with\nthe 4x2 image Maddie was creating, but we've left out the last two squares.\nFinish off the image by figuring out which two colors are missing and encode\nthem."
      Pixelation 2_instruction: "Something happened to the bits in this image!  Find\nerror and fix it!"
      Pixelation 4x4 Empty_instruction: "The width and height are now encoded in\nthe pixel data. Can you figure out how to adjust the dimensions?"
      Pixelation Bee_instruction: "This larger image of a bee encodes color with\n12 bits per pixel, but viewing in hex makes it easier to see the color of\neach pixel. If you switch to binary mode - hold on to your hat - it's a lot\nof bits. Here's another mind-blowing thing to try: slide the bits per pixel\nup to 24 bits per pixel. What happens? Can you explain this behavior?"
      Pixelation Flappy_instruction: "Here is a bigger image at 9 bits per pixel.\nWith 9 bits per pixel you can express 512 different colors. Click through\nto see the next image which is even more sophisticated, but easier to understand."
      Pizza on a Plate_instruction: "Project Idea: Create a picture of something\nfamiliar from the real world. This requires persistence and planning!"
      Planning Farmer_instruction: "What a strange field of goodies! I wonder if\nthere's a pattern here..."
      Planter Test_instruction: "Help me plant my fields!"
      Play Lab Rocket 1_instruction: "A rocket blasts off, traveling at 15 meters\nper second... press \"Run\" to see how this word problem looks as an animation."
      Play Lab Rocket 2_instruction: "We've started the Design Recipe for rocket-height\nusing the contract and examples you just wrote. Complete the function definition\nfor rocket-height and run your animation."
      Play Lab Rocket 2B_instruction: "A rocket blasts off, traveling at 15 meters\nper second. Using the Design Recipe, write a function called rocket-height\nthat takes in a number of  seconds that have passed since the rocket took\noff, and produces the height of the rocket at that time."
      Play Lab Rocket 3_instruction: "Awesome, now can you update that function so\nthat our rocket moves more quickly? Make sure to update the purpose statement,\nexamples, and function definition to launch a rocket at 40 meters per second."
      Play Lab Rocket 4 (copy 1)_instruction: "Real rockets start off slowly and\ngain speed over time - let's make ours do the same! Write an exponential\nfunction that describes a rocket that travels at \"seconds\" squared meters\nper second."
      Play Lab Rocket 4_instruction: "Real rockets start off slowly and gain speed\nover time - so let's add some simple acceleration to ours! Can you write\na function that describes a rocket that is at 10 meters at 1 second, 40 meters\nat 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?"
      Play Lab Rocket 5_instruction: "Much better, but let's write one more function\nwith simple acceleration. This time the rocket should be 15 meters at 1 second,\n45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds."
      Play Lab Rocket Free Play_instruction: "Free Play: Experiment with your rocket-height\nfunction to make the rocket fly in different ways. Click \"Finish\" when you\nare done."
      Poorva copy U3L2 Using Simple Commands_instruction: "Draw a 1x1 square above\nand to the left of the turtle's starting position. Click to see full instructions."
      Poorva-test_instruction: "Here are regular instructions for a level. There\nis nothing fancy going on here."
      Practice Create Performance Task_instruction: "Design and implement your practice\nCreate Performance Task. (Click to see full instructions)"
      Project - Final Image Scroller_instruction: "Update the image scroller to respond\nto buttons and key presses. (Click to see full instructions)"
      Project - Finish your canvas app_instruction: "Extend the functionality of\none of the effects, or create an entirely new one of your own. (Click to see\nfull instructions)"
      Project - Make Your Own Clicker Game_instruction: "클리커 게임을 끝내세요\n(힌트를 보려면 여기를 눌러보세요)"
      Project - Your Own Multi Screen App_instruction: "Create your multi-screen\napp. (Click to see full instructions.)"
      Prompt Test_instruction: "Build whatever you want. This is an example of a\nnumber-guessing game!"
      Quantum Bee - Ryan_instruction: "이 구름들이 짜증나게 하네요! 어떤 구름 아래에만 꽃이 있습니다.\n구름들을 하나씩 모두 검사해서 꽃인 경우에만 꽃꿀을 뽑아야 합니다."
      Quantum Bee_instruction: "자주색 꽃들에는 꽃꿀이 1 또는 0 인데,\n어떤 꽃이 1이고 0인지 알 수 없습니다! 자주색 꽃에 꿀이 없으면 뽑지 않도록 주의하세요.\n만약(if) 블록을 사용해서 꽃꿀이 1인지 확인해보면 됩니다."
      Robot Doodle_instruction: "Project Idea: Create a picture of something familiar\nfrom the real world. This requires persistence and planning!"
      Robot Drawing_instruction: "Project Idea: Create a picture of something familiar\nfrom the real world. This requires persistence and planning!"
      Robot_instruction: "Project Idea: Create a picture of something familiar from\nthe real world. This requires persistence and planning!"
      Rocket Height Course A_instruction: "Follow the Design Recipe to create a function\nrocket-height."
      Ryan - 4-5 Bee Conditionals 2_instruction: "꿀벌이 꽃꿀을 원합니다. 모두 꽃은 아니기 때문에, 안개 구름 아래에 꽃이 숨어있는지 모두 살펴보아야 합니다. 꽃이면 꽃꿀을 모으면 됩니다."
      Ryan - Bee Conditionals_instruction: "꿀벌은 지금 꽃꿀이 필요합니다.\n모두 꽃은 아니기 때문에, 안개 구름이 있는 모든 곳에서 꽃이 숨어있는지 확인해 보아야 합니다.\n꽃이 있으면 꿀을 모으면 됩니다."
      Ryan Doily Step 1_instruction: "Now we're going to draw a doily step by step.\nFirst, draw a square."
      Ryan Doily Step 2_instruction: "Now you need to turn and repeat it 20 times!\nHow many degrees do you turn to get 360 after 20 iterations?"
      Ryan Doily Step 3_instruction: "Now you need to turn and repeat it 20 times!\nHow many degrees do you turn to get 360 after 20 iterations?"
      Ryan Test Locked Blocks_instruction: "\"순찰\" 함수가 있습니다.\n함수를 수정해서 고양이가 400 픽셀 위로 이동 했다가, 다시 400 픽셀 아래로 이동하게 해보세요."
      Ryan's clone of C4S15P10_instruction: "We've added one last function for you.\n\\r\n\\r\nUse an \"if\" statement to program your game to call the \"level_up\"\nfunction only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample: \"player_score\" > 6\\r\n\\r\nPlay the game, and make it past level\n4 to move to the next puzzle. "
      Sam the Butterfly 1 (copy 1)_instruction: "This butterfly is named Sam, and\nthe game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels\ntall! As you can see, Sam is free to walk around the yard, and the coordinates\nat the top of the screen update to tell you his location. Use the arrow keys\nto move sam around his yard. Help Sam collect all of the flags to move on."
      Sam the Butterfly 1_instruction: "This bat is named Sam, and the game area\nis Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can\nsee, Sam is free to walk around the yard, and the coordinates at the top of\nthe screen update to tell you his location. Click \"Run\" and then use the\narrow keys to move Sam around his yard, making note of Sam's coordinates\nat different locations. Click \"Finish\" when you're ready to move on."
      Sam the Butterfly 2_instruction: "Sam's mom wants to make sure that she can\nalways see at least a bit of him, so lets write some functions that help make\nsure he doesn't go too far out of the yard. Here's a function called safe-left?\n- it should take a Number for its domain that represents Sam's x-coordinates\nand return true if he's completely visible on screen. If your function works,\nSam shouldn't be able to leave the yard from the left side."
      Sam the Butterfly 3_instruction: "In the last puzzle we kept Sam from leaving\non the left, now let's do the same thing on the right. Complete the safe-right?\nfunction to make sure Sam can't go off the right side of the screen."
      Sam the Butterfly 4_instruction: "Huh, we can keep Sam from leaving on the\nleft, or we can keep him from leaving on the right, but how can we keep him\nsafe from leaving both directions? Try using the and block to program the\nfunction on-screen? to check if Sam is safe-left? and safe-right?"
      Sam the Butterfly 5_instruction: "Free Play: Awesome, we've kept Sam safe\non the left and right! Use this free play stage to experiment with your functions\nand further improve onscreen?"
      Sam the Butterfly 6_instruction: "We've added a new parameter \"y\" to the\n\"on-screen?\" function. Update the function so that it checks that \"safe-left?\"\nAND \"safe-right?\" AND \"safe-up?\" are all true. When you've fixed the\nfunction, try going out of the yard from the left, right, and top sides."
      Sam the Butterfly 7_instruction: "Only one last direction to worry about! Create\na \"safe-down?\" function and update the \"on-screen?\" function so that it\nchecks up, down, left, and right."
      Sam the Butterfly Complete_instruction: "Only one last direction to worry about!\nCreate a \"safe-down?\" function and update the \"on-screen?\" function so\nthat it checks up, down, left, and right."
      SpecialFrozenLevel_instruction: "여러분은 이제 진짜 화가가 된 것 같아요! 겨울왕국을 만들어 보세요."
      Standalone_Artist_1_instruction: "화가 퍼즐에 오신 것을 환영합니다.\n처음으로 오른쪽으로 이동 블럭과 앞으로 이동 블럭을 이용해서 간단한 사각형을 만들어 보겠습니다.\n한 변의 길이는 정확히 100 픽셀이 되어야 합니다."
      Standalone_Artist_2_instruction: "120도, 60도의 각과 150 픽셀 만큼의 길이로 이 다이아몬드를 그려보세요."
      Standalone_Artist_3_instruction: "100 픽셀 길이의 선을 60 도 만큼 씩 회전해 그리면서\n육각형을 그려보세요."
      Standalone_Artist_4_instruction: "이제 반복(loop) 이라는 새로운 블록을 이용할 수 있습니다. 이 블록은 원하는 명령어들을 반복시켜줄 것입니다. 이 명령어들을 6번 반복하면 어떻게 될까요?"
      Standalone_Artist_5.5_instruction: '다이아몬드 모양을 반복 블럭 안에 넣어서 회전시키면서 아주 쉽게 코드를 만드는 방법을 잘 보세요. 순서대로 실행시켜야하는 명령어들을 12번 반복시킬 수 있습니다. 힌트: 다이아몬드 반복(loop) 를 30도만큼 회전시키면 됩니다. 다이아몬드를 또 그릴 필요가 없습니다.'
      Standalone_Artist_5_instruction: "이 다이아몬드 모양을 이용해서 꽃을 그리려면 반복(loop) 을 몇 번 시켜야 할까요?"
      Standalone_Artist_6_instruction: '이 6각형 코드를 반복적으로 이용해서 디자인 해보세요. 한 번 실행할 때마다 몇 도를 회전시켜야 할까요? 힌트: 원의 각도를 반복시키려고 하는 횟수로 나누면 됩니다.'
      Standalone_Artist_7_instruction: '함수는 한번 만들어둔 것을 다시 사용하는 프로그래밍 방법입니다. 이 함수는 꽃을 그려주는데, 이 함수를 이용하면 원하는 만큼의 꽃을 편리하게 그릴 수 있습니다. 이 함수와 점프 블럭을 이용해서 이 꽃들을 그려주세요. 힌트: 꽃들은 150 픽셀만큼 떨어져 있습니다.'
      Standalone_Artist_8_instruction: "\"모양 그리기\" 라는 이름의 6각형 그리기 함수 블럭이 있습니다. 일단 먼저 코드를 실행시켜 어떻게 실행되는지 살펴보고, 실험해 보세요. 사각형, 삼각형, 8각형을 그릴 수 있겠어요?"
      Standalone_Artist_9_instruction: "자 이제 계속해서, 원하는 그림을 마음껏 그려보세요! 원하는 것이 어떤 것이든지, 빈 함수를 이용해 마음대로 만들고 사용할 수 있습니다."
      Standalone_Artist_v2_instruction: "화가 퍼즐에 오신 것을 환영합니다.\n처음으로 오른쪽으로 이동 블럭과 앞으로 이동 블럭을 이용해서 간단한 사각형을 만들어 보겠습니다.\n한 변의 길이는 정확히 100 픽셀이 되어야 합니다."
      StepIntro_instruction: "Here's how to use the \"Step\" button."
      Test Play Lab_instruction: "This is a test play lab level."
      Test of comment block_instruction: "Drag out the subgoal label block you want."
      Testing Quantum Farmer_instruction: "Wow, look at that! \\r\n\\r\nI don't know\nhow many shovelfuls of dirt this hole needs.  \\r\nCan you write a program\nthat keeps using the `fill` block until the ground is even?  "
      Text Compression 1_instruction: "Look for patterns (repeated words or phrases)\nin the text. Enter the patterns you see into the dictionary on the right.\nAs you type entries into the dictionary, the symbol for the entry is inserted\ninto the text in place of the pattern.\\r\n\\r\n"
      The Vigenere Cipher Widget_instruction: "소개"
      The Vigenere Cipher_instruction: "소개"
      Total Artist Clone Me_instruction: "Freeplay: Here are the functions you've\nwritten, and some more for you to play with. Draw something awesome! Play\nwith the pen width to see how different your drawings look!"
      U1L10 NetSim numbers with decimal_instruction: "Invent and test a protocol\nfor encoding and sending text messages. Your protocol must include the letters\na-z, spaces, and common punctuation marks. You may add additional characters\nif you wish. See the worksheet handed out by your teacher for more detailed\ninstructions!"
      U1L11 NetSim numbers with Ascii_instruction: "Work with a partner or in a small\nteam to develop a protocol that allows you to send formatted text. See the\nworksheet handed out by your teacher for more detailed instructions!"
      U1L13 Text Compression_instruction: "Look for patterns (repeated words or phrases)\nin the text. Enter the patterns you see into the dictionary on the right.\nAs you type entries into the dictionary, the symbol for the entry is inserted\ninto the text in place of the pattern."
      U1L4 NetSim SendAB_instruction: "Develop, document, and test a protocol that\nallows you to use Internet Simulator to relay a message. See the worksheet\nfor more detailed instructions.  "
      U1L8 NetSim numbers no decimal_instruction: "Default instructions"
      U1L8 NetSim numbers with decimal_instruction: "With your partner, develop a\nprotocol or set of rules for communicating a drawing using only bits. See\nthe worksheet handed out by your teacher for more detailed instructions!"
      U2 Vigenere_instruction: "Test"
      U2 frequency caesar_instruction: "소개"
      U2 frequency random sub_instruction: "소개"
      U2 vigenere cipher_instruction: "소개"
      U2L04 - NetSim Routers with Addresses_instruction: "Send messages with your\nclassmates (Click to see full instructions)"
      U2L05 - NetSim - Packets and Building TCP_instruction: "Develop a Protocol\nfor Reliably Sending a Message.\\r\n\\r\nConstraints:\\r\n- Packets may contain\nonly 6 characters\\r\n- Packets may drop with small probability\\r\n- Packets\nmay not arrive in order"
      U2L10 NetSim Automatic DNS_instruction: "In this version of the Internet Simulator,\na Domain Name System (DNS) is provided for you and knows the IP addresses\nof all connected computers. Send a message in the form GET [hostname] to the\nDNS service at address <yourRouterNumber>.15 to get a student's address."
      U2L10 NetSim Manual DNS_instruction: "In this version of the simulator you\ncan't see the other students' addresses.  Instead, one of you must act as\na name service, to help share addresses with each other."
      U2L14 frequency random_instruction: "Test"
      U2L2 NetSim Hub Mode_instruction: "Now use the Internet Simulator to send the\nbattleship moves. For setup, join a Room with your group, and add ships to\nyour paper board for each opponent. When playing, all communication must be\ndone through the tool, so no talking, but have fun!\\r\n"
      U2L3 NetSim Hub Mode_instruction: "Use the Internet Simulator to test out your\ngroup's binary communication protocol for battleship. How short can you make\nthe message and response?"
      U2L4 NetSim Routers Addresses_instruction: "For this activity, connect to a\nrouter with the others in your group. Important note: The router will only\nproperly route messages where the first 4 bits are the To: address and the\nsecond 4 bits are the From: address.\\r\n\\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      U2L5 NetSim Classroom Internet_instruction: "For this activity, connect to\na router with the others in your group. The Internet Simulator now provides\na place for you to put the To and From addresses, so you don't have to type\nout the bits manually.\\r\n\\r\n"
      U2L7 NetSim Need for Packets_instruction: "Transfer your favicon to a partner\nacross a network in which the larger a packet grows, the more likely it is\nto be dropped."
      U3 - Arrays - Demo App_instruction: "Use the \"My Favorite Things\" app. How\nmight this app be making use of an array? (Click to see full instructions)"
      U3 - Arrays - appendItem_instruction: "Create an array of odd numbers 1-11\nby using appendItem. (Click to see full instructions)"
      U3 - Arrays - assignment_instruction: "Use indexes to change the values in\nthis array from 1 to 0. (Click to see full instructions)"
      U3 - Arrays - assignment2_instruction: "Calculate the sum of three values stored\nin an array. (Click to see full instructions)"
      U3 - Arrays - assignment3_instruction: "Increase the value of each value in\nthe randomly generated array by 1. (Click to see full instructions)"
      U3 - Arrays - createFirstArray_instruction: "Create an array of the even numbers\nfrom 0 to 10 and display its contents with console.log. (Click to see full\ninstructions)"
      U3 - Arrays - expressionsAsIndexes_instruction: "Write a program that displays\na randomly chosen color from the array. (Click to see full instructions)"
      U3 - Arrays - favThings Counting Variable_instruction: "Create a global variable\nfor the current index and use it to display the first item in the array. (Click\nto see full instructions)"
      U3 - Arrays - favThings Next_instruction: "Write code that allows the user\nto move forward through your list by clicking the \"Next\" button. (Click\nto see full instructions)"
      U3 - Arrays - favThings Prev_instruction: "Write code that allows the user\nto move backward through your list by clicking the \"Last\" button. (Click\nto see full instructions)"
      U3 - Arrays - favThings addItem_instruction: "Write code that allows a user\nto add their own favorite things to the list. (Click to see full instructions)"
      U3 - Arrays - favThings bounds_instruction: "Add if statements to your event\nhandlers that prevent the global index from going out of bounds. (Click to\nsee full instructions)"
      U3 - Arrays - favThings createArray_instruction: "Create an array of words\ndescribing your favorite things. (Click to see full instructions)"
      U3 - Arrays - favThings firstOutput_instruction: "Use setText to display the\nfirst item in the array. (Click to see full instructions)"
      U3 - Arrays - favThings giveIDs_instruction: "Give your UI elements descriptive\nand meaningful IDs. (Click to see full instructions)"
      U3 - Arrays - favThings keepPlaying_instruction: "Make any other improvements\nyou want! (Click to see full instructions)"
      U3 - Arrays - favThings template_instruction: "Give your UI elements descriptive\nand meaningful IDs. (Click to see full instructions)"
      U3 - Arrays - globalVariableIndex_instruction: "Give your UI elements descriptive\nand meaningful IDs. (Click to see full instructions)"
      U3 - Arrays - indexPractice_instruction: "Write the contents of the array to\nthe screen in numerical order. (Click to see full instructions)"
      U3 - Arrays - insertingItems_instruction: "Insert items into an array to form\na complete sentence. (Click to see full instructions)"
      U3 - Arrays - insertionErrors_instruction: "Run each command that references\nindexes that are out of bounds and observe the results. (Click to see full\ninstructions)"
      U3 - Arrays - introIndex_instruction: "Display the first and last element in\nthe array. Display the number 5 from the array. (Click to see full instructions)"
      U3 - Arrays - length_instruction: "Use list.length to determine the length\nof each array. (Click to see full instructions)"
      U3 - Arrays - lengthMinus1_instruction: "Use list.length - 1 to log the last\nitem in the array to the console. (Click to see full instructions)"
      U3 - Arrays - remove_instruction: "Remove items from an array to form a complete\nsentence. (Click to see full instructions)"
      U3 - Arrays - stringsInArrays_instruction: "Write a sentence word by word by\nadding strings to an array. (Click to see full instructions)"
      U3 - Canvas - 200dots_instruction: "Add a loop to your program that draws 200\ndots on your canvas. (Click to see full instructions)"
      U3 - Canvas - One Dot sprayPaint_instruction: "Write code that redraws your\nimage using a dot whose x and y locations use offsetX and offsetY with a small\nrandom value added. (Click to see full instructions)"
      U3 - Canvas - appendToArray_instruction: "Create an array to store each event\nparameter. Append each event parameter to this array within your event handler.\n(Click to see full instructions)"
      U3 - Canvas - changeToMouseMove_instruction: "Change your program so that dots\nare drawn at the location of the mouse as the user moves the mouse on the\ncanvas. (Click to see full instructions)"
      U3 - Canvas - clickToAdd_instruction: "Change your program so that dots are\nadded to the canvas when the user clicks on it. (Click to see full instructions)"
      U3 - Canvas - delete_instruction: "Create a button that deletes the drawing\nby clearing the canvas and removing all stored values. (Click to see full\ninstructions)"
      U3 - Canvas - draw at click point_instruction: "Change your program so that\ndots are drawn at the location of the mouse click. (Click to see full instructions)"
      U3 - Canvas - freePlay_instruction: "Extend the functionality of one of the\neffects, or create an entirely new one of your own. (Click to see full instructions)"
      U3 - Canvas - introCanvas_instruction: "Add a canvas to your app and set it\nto be the active canvas. Then add a large dot to your canvas. (Click to see\nfull instructions)"
      U3 - Canvas - movementFunction fix Orig_instruction: "Modify the \"Original\"\nbutton event handler so that it takes the movement of the mouse into account.\n(Click to see full instructions)"
      U3 - Canvas - movementFunction_instruction: "Write a function that takes the\nmovement of the mouse as input and generates a line width as output. (Click\nto see full instructions)"
      U3 - Canvas - redrawOriginal_instruction: "Write a function that processes\nyour array, redrawing the dots as they originally appeared. (Click to see\nfull instructions)"
      U3 - Canvas - redrawRandom_instruction: "Set up a button and event handler\nfor the random function. (Click to see full instructions)"
      U3 - Canvas - redrawRandom2_instruction: "Write a function that processes your\narray, redrawing every dot with a random size. (Click to see full instructions)"
      U3 - Canvas - shiftKey_instruction: "Add an if statement to your event handler\nso dots are only drawn when the shift key is pressed. (Click to see full instructions)"
      U3 - Canvas - sketch_instruction: "Write code that redraws your image using\na sketch effect. (Click to see full instructions)"
      U3 - Canvas - sprayPaint_instruction: "Update the spray paint code so that\nit redraws your image using multiple random dots instead of using a nested\nfor loop. (Click to see full instructions)"
      U3 - Canvas - transparentDots_instruction: "Change the colors of your dots\nso they have a fully transparent stroke and partially transparent fill. (Click\nto see full instructions)"
      U3 - Canvas - usingOffsetXY_instruction: "Add a console.log command inside\nthe function of your event handler. Use it to display the event parameter.\nClick on the screen to see the contents of the event parameter (Click to see\nfull instructions)"
      U3 - Conditional Basics - 6_instruction: "Add a setText after the if statement\nto \"Nope. Guess again.\" (Click to see full instructions)"
      U3 - Conditionals - Combine AND OR Simple_instruction: "Write an if statement\nthat uses AND and OR to display \"Sleep in!\" if it's the weekend and the\nuser is a teenager. (Click to see full instructions."
      U3 - Conditionals - Combine AND OR and NOT_instruction: "Write an if statement\nthat uses AND and OR to display \"Time to go to school!\" if it's not the\nweekend and the user is under 18. (Click to see full instructions.)"
      U3 - Conditionals - Combine AND and OR_instruction: "Write an if statement\nthat uses AND and OR to display \"Time to go to school!\" if it's not the\nweekend and the user is under 18. (Click to see full instrucitons."
      U3 - Conditionals - Simple AND_instruction: "Write an if statement that uses\nAND to display \"You are a teenager.\" if the user enters an age between 13\nand 19. (Click to see full instructions)"
      U3 - Conditionals - Simple OR_instruction: "Write an if statement that uses\nOR to display \"It's the weekend!\" if the user enters a weekend day at the\nprompt. (Click to see full instructions)"
      U3 - Conditionals - intoOr_instruction: "Add 2 if statements that use the OR\noperator. (Click to see full instructions)"
      U3 - Conditionals - introAND_instruction: "Add 2 if statements that use the\nOR operator. (Click to see full instructions)"
      U3 - Design Mode - Console Log_instruction: "Update the ID names and `console.log`\nmessages to match the correct button. (Click to see full instructions.)"
      U3 - Design Mode - Layers and Delete_instruction: "Fix the layout of the bullseye\ngame. (Click to see full instructions)"
      U3 - Design Mode - Multi Screens 2_instruction: "Make a 2 screen app which\ncan switch back and forth between a black screen and a white screen using\nbuttons. (Click to see detailed instructions.)"
      U3 - Design Mode - Multi Screens_instruction: "Make a 2 screen app with a black\nscreen and a white screen. (Click to see detailed instructions)"
      U3 - Design Mode - Other Events_instruction: "Delete the button and make the\nimage move to a random location when you click on it. (click to see detailed\ninstructions)"
      U3 - Design Mode - WTF Console Log_instruction: "Add a 3 console.log messages\nand test them out. (Click to see full instructions.)"
      U3 - Design Mode -Recreate Beyond Buttons_instruction: "Recreate the game from\nthe \"Chaser Game\" with a Welcome Screen and Game Over Screen. (Click to\nsee full instructions.)"
      U3 - Design Mode 1_instruction: "Add a large red button to your screen using\nDesign Mode. (Click for full instructions.)"
      U3 - Dice - Dropdown and Score_instruction: "Add guess and score to the Dice\nGame (Click to see full instructions)"
      U3 - Dice - Dropdown with Strings_instruction: "Add a dropdown for difficulty\nlevel that prints the difficulty level in the console. (Click to see full\ninstructions)"
      U3 - Dice - If_instruction: "Show different die images for the random number\ngenerated. (Click to see full instructions)"
      U3 - Dice - Nested_instruction: "Use nested if statements to make the scoring\ndifferent for the different game levels. (Click to see full instructions)"
      U3 - High Low - Debug_instruction: "Debug the order of the conditionals so\nthat it will actually tell the user when their guess is close. (Click to see\nfull instructions)"
      U3 - High Low - Dropdown_instruction: "Add a dropdown for their guess instead\nof promptNum (Click to see full instructions)"
      U3 - High Low - Else if_instruction: "Add an else-if statement in order to\ntell the user if their guess is high or low instead of just wrong. (Click\nto see full instructions)"
      U3 - High Low - Else_instruction: "Add an else statement so that the program\nwill tell the user when they are right and when they are wrong. (Click to\nsee full instructions)\\r\n"
      U3 - High Low - If_instruction: "Add code to the if statement that indicates\nthe user guessed the secret number. (Click to see full instructions)"
      U3 - Keys - Add Image URLs_instruction: "Add image URLs to your array. Replace\nthe text area with an image and setText with setImageURL. Then test your app!\n(Click to see full instructions)"
      U3 - Keys - Buttons and Keys_instruction: "Have the program respond the same\nway for both clicking images on the screen and hitting the up and down keys\non the keyboard. (Click to see full instructions)"
      U3 - Keys - Demo App_instruction: "Play with the image scroller. Press the\nleft and right arrows to progress through the images."
      U3 - Keys - Final Image Scroller_instruction: "Update the image scroller to\nrespond to buttons and key presses. (Click to see full instructions)"
      U3 - Keys - Functions_instruction: "Write doUpArrow and doDownArrow functions\nand call the functions instead of duplicating the code. (Click to see full\ninstructions)"
      U3 - Keys - Key Up and Down_instruction: "Try out the keyup and keydown events\nto see how they are different from keypress. (Click to see full instructions)"
      U3 - Keys - Multiple Keys_instruction: "Play a different sound when the down\narrow is pressed. (Click to see full instructions)"
      U3 - Keys - Practice Adding Images with URL_instruction: "Add image URLs to\nyour image array. Test out the add button. Style your image scroller. (Click\nto see full instructions)"
      U3 - Keys - Words to Images_instruction: "Add image URLs to your image array.\nTest out the add button. Style your image scroller. (Click to see full instructions)"
      U3 - Loops -  9 Part 2_instruction: "Change the boolean expression for the\nwhile loop so that it will roll until both dice are greater than 3. (Click\nto see full instructions)"
      U3 - Loops -  Complex Condition_instruction: "Change the boolean expression\nfor the while loop so that it will stop when both dice are greater than or\nequal to 5. (Click to see full instructions)"
      U3 - Loops - 1_instruction: "Change the condition for the while loop to check\nif the variable num is less than 90. (Click to see full instructions)"
      U3 - Loops - 10_instruction: "Write a program that simulates the rolling of\ntwo dice. Roll the dice repeatedly until the sum of the dice is either 7 or\n11."
      U3 - Loops - 11_instruction: "Fix the condition so that it keeps rolling the\ndie as long as the value is not a 2 or a 3 instead of rolling infinitely.\n(Click to see full instructions)"
      U3 - Loops - 12_instruction: "Change the code so that it prints the string\n\"Hi\" 5 times. (Click to see full instructions)"
      U3 - Loops - 13_instruction: "Update the code to count up by 3 instead of 1.\n(Click to see full instructions)"
      U3 - Loops - 14_instruction: "Change the loop condition to prevent the infinite\nloop and stop counting once the count is past 30. (Click to see full instructions)"
      U3 - Loops - 15_instruction: "Count the number of times the sum of the dice\nis 12. (Click to see full instructions)"
      U3 - Loops - 16_instruction: "Find out how many times you have to roll to get\nthe sum of 7 100 times (Click to see full instructions)"
      U3 - Loops - 2_instruction: "Try creating an infinite loop using !=, > and\n<. (Click to see full instructions)"
      U3 - Loops - 3_instruction: "Change the if statement to a while loop so the\nprogram will run until it rolls a 6. (Click to see full instructions)"
      U3 - Loops - 4_instruction: " Use the Debug Commands to make a list of all\nthe values rolled before a 6. (Click to see full instructions)"
      U3 - Loops - 5_instruction: "Add code inside the while loop which will update\nthe variable num so that the condition will eventually become false. (Click\nto see full instructions)"
      U3 - Loops - 6_instruction: "Fix the problem so the loop will run at least\nonce. Change the initial value of num to a dummy value such as -1. (Click\nto see full instructions)"
      U3 - Loops - 7_instruction: "Without adding any lines of code, reorder the\ncode so that it prints all the values of num. (Click to see full instructions)"
      U3 - Loops - 8_instruction: "Debug which number is not getting printed and\nadd a write statement to display that value. (Click to see full instructions)"
      U3 - Loops - 9_instruction: " Modify the condition so that it keeps rolling\nas long as both are less than 3. (Click to see full instructions)"
      U3 - Loops - Continue_instruction: " Use the Debug Commands to to make a list\nof all the values rolled before a 6. (Click to see full instructions)"
      U3 - Loops - Minus Minus_instruction: "Change the code to count down from 10\nto 1. (Click to see full instructions)"
      U3 - Loops - Plus Plus_instruction: "Change the code to use count++ instead\nof count = count + 1.  (Click to see full instructions)"
      U3 - Loops - Typing in Console_instruction: "Use console to check the ending\nvalue of num. (Click to see full instructions)"
      U3 - Loops - minus = operator_instruction: "Update the code to use the -= operator\nto count from 30 down to 0 by 3's. (Click to see full instructions)"
      U3 - Loops - plus and minus = operator_instruction: "Update the code to use\nthe += operator. (Click to see full instructions)"
      U3 - Loops And Arrays - Add 5_instruction: "Add 5 to all the values in an array\n(Click to see full instructions)"
      U3 - Loops And Arrays - Challenge 1_instruction: "Write a function that finds\nand returns the minimum value in an array.   (Click to see full instructions)"
      U3 - Loops And Arrays - Challenge 2_instruction: "Write a function that finds\nand returns the minimum value in an array.   (Click to see full instructions)"
      U3 - Loops And Arrays - Counting Times_instruction: "Count the number of times\n5 appears in an array. (Click to see full instructions)"
      U3 - Loops And Arrays - Divid by 2_instruction: "Divide every value in the\narray by 2. (Click to see full instructions)"
      U3 - Loops And Arrays - Find Max_instruction: "Design a function that displays\nthe smallest number in an array  (Click to see full instructions)"
      U3 - Loops And Arrays - Find Min_instruction: "Complete the findMinVal function\nto find and display the smallest value in an array  (Click to see full instructions)"
      U3 - Loops And Arrays - Functions that Return Value_instruction: "Call findMin\nwithin the console.log statement to calculate the minimum of two values.  (Click\nto see full instructions)"
      U3 - Loops And Arrays - General Search Param_instruction: "Add a second parameter\nto the search function for the value to search for.  (Click to see full instructions)"
      U3 - Loops And Arrays - Intro For Loop_instruction: "Add a for loop with a\nconsole.log inside and test out the 3 pieces of the for loop. (Click to see\nfull instructions)"
      U3 - Loops And Arrays - Linear Search_instruction: "Visit every element in\nthe array and display \"true\" if the value is a 5, and \"false\" otherwise.\n(Click to see full instructions)"
      U3 - Loops And Arrays - Loop Array If_instruction: "Use an if statement to\nonly display the values in the array that are greater than 5. (Click to see\nfull instructions)"
      U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: "Create\na function that takes a list parameter and prints if the list contains a 5.\n(Click to see full instructions)"
      U3 - Loops And Arrays - Make it a Function_instruction: "Move the code that\nsearches the list for a 5 into a function called \"search\". (Click to see\nfull instructions)"
      U3 - Loops And Arrays - Multiple Returns_instruction: "Test out the return\nvalues of the findMax function.  (Click to see full instructions)"
      U3 - Loops And Arrays - Print Array_instruction: "Use a for loop to print out\nall the values in an array. (Click to see full instructions)"
      U3 - Loops And Arrays - Printing Single True_instruction: "Process the array\nand display a single \"true\" if the array contains a 5 or a single \"false\"\nif it does not.  (Click to see full instructions)"
      U3 - Loops And Arrays - Return Index_instruction: "Make the search function\nreturn the index of the search value in the array. (Click to see full instructions)"
      U3 - Loops And Arrays - Return Value_instruction: "Use constrain in this simple\napp to keep the turtle from driving off the screen.  (Click to see full instructions)"
      U3 - Loops And Arrays - Search and Remove_instruction: "Search for 5 in the\narray and remove it from the array. (Click to see full instructions)"
      U3 - Loops And Arrays - Search with Boolean Var_instruction: "Make a boolean\nvariable to use as a flag to keep track of whether there is a 5 in the array.\n(Click to see full instructions)"
      U3 - Loops And Arrays - useFindMin_instruction: "Call findMin within the console.log\nstatement to calculate the minimum of two values.  (Click to see full instructions)"
      U3 - Movie Bot - Multiple If Sequences_instruction: "Add another set of if,\nelse if, and else statements inside the question if statement to check for\nkeywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)"
      U3 - Movie Bot - Nested Motivation_instruction: "Add a separate set of if statements\nto check for a \"?\" in the input. (Click to see full instructions)"
      U3 - Movie Bot - When Multiple If Statements_instruction: "Add an if and else-if\nstatement that checks for please and thank you. (Click to see full instructions)"
      U3 - Movie Bot - toLowerCase_instruction: "Use the toLowerCase command to change\nall user input into lowercase letters after they enter it. (Click to see full\ninstructions)"
      U3 - Practice Create Performance Task_instruction: "Design and implement your\npractice Create Performance Task. (Click to see full instructions)"
      U3 - Read Record - 1.2_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\\r\n"
      U3 - Read Record - 1.5_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\\r\n"
      U3 - Read Record - 1.6_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\\r\n"
      U3 - Read Record - 1_instruction: "Console.log the records returned by a call\nto readRecords. (Click to see full instructions)\\r\n"
      U3 - Read Record - 2_instruction: "Change the table name so that the records\nare read from the new table.(Click to see full instructions)\\r\n"
      U3 - Read Record - 3_instruction: "Change the name of the table in a readRecords\ncommand to read from a table that does not exist. (Click to see full instructions)\\r\n"
      U3 - Read Record - 4.1_instruction: "Print out each record return from the\nreadRecords call individually. (Click to see full instructions)\\r\n"
      U3 - Read Record - 4_instruction: "Print out each record return from the readRecords\ncall individually. (Click to see full instructions)\\r\n"
      U3 - Read Record - 5 and half_instruction: "Print out the name of each movie\nin the records return from the readRecords call. (Click to see full instructions)\\r\n"
      U3 - Read Record - 5_instruction: "Print out the name of each movie in the\nrecords return from the readRecords call. (Click to see full instructions)\\r\n"
      U3 - Return Values - constrainTurtle_instruction: "Use constrain in this simple\napp to keep the turtle from driving off the screen.  (Click to see full instructions)"
      U3 - Return Values - debuggingConstrain_instruction: "Correct the error in\nconstrain so that it returns the appropriate value.  (Click to see full instructions)"
      U3 - Return Values - debuggingMaxVal_instruction: "Correct the error in maxVal\nso that it correctly reports the maximum value.  (Click to see full instructions)"
      U3 - Return Values - debuggingReturns_instruction: "Correct the error in maxVal\nso that it correctly reports the maximum value.  (Click to see full instructions)"
      U3 - Return Values - increase1_instruction: "Call the increase function within\nmoveForward, write, and console.log.  (Click to see full instructions)"
      U3 - Return Values - increase2_instruction: "Change the increase function to\nreturn 3 times the input value. (Click to see full instructions)"
      U3 - Return Values - min1_instruction: "Test out the return values of the findMax\nfunction.  (Click to see full instructions)"
      U3 - Return Values - useFindMin_instruction: "Call findMin within the console.log\nstatement to calculate the minimum of two values.  (Click to see full instructions)"
      U3 - Return Values - useMinVal_instruction: "Call minVal within the console.log\nstatement to calculate the minimum of two values.  (Click to see full instructions)"
      U3 - Return Values - wrapTurtle_instruction: "Write wrap in this simple app\nto let the turtle \"wrap\" to the other side of the screen when it goes off.  (Click\nto see full instructions)"
      U3 - Return Values - writeMaxVal_instruction: "Write the function maxVal and\nthen use it within the console.log statement to calculate the maximum of two\nvalues.  (Click to see full instructions)"
      U3 - Search Terms - 1_instruction: "Create an array of all the movies made\nin 2008 and print it out. (Click to see full instructions)\\r\n"
      U3 - Search Terms - 2_instruction: "Print out all the movies with year 2008\nusing the readRecords search terms. (Click to see full instructions)\\r\n"
      U3 - Search Terms - 3_instruction: "Print whether or not there are movies matching\nthe search criteria (Click to see full instructions)\\r\n"
      U3 - Search Terms - 4_instruction: "Print whether or not there are movies matching\nthe search criteria (Click to see full instructions)\\r\n"
      U3 - Search Terms - 5_instruction: "Print out the cities that are in California\nor have a population of 2,000,000. (Click to see full instructions)\\r\n"
      U3 - Search Terms - 6_instruction: "Print out the cities that are in California\nor have a population of 2,000,000. (Click to see full instructions)\\r\n"
      U3 - Simple Drawing - Comments_instruction: "Do this"
      U3 - Simple Drawing - Ellipse and No Fill_instruction: "Do this"
      U3 - Simple Drawing - Fill_instruction: "Do This"
      U3 - Simple Drawing - No Fill_instruction: "Do this"
      U3 - Simple Drawing - Order of Blocks_instruction: "Do this"
      U3 - Simple Drawing - Oval_instruction: "Do This"
      U3 - Simple Drawing - Personal Drawing_instruction: "DO This"
      U3 - Simple Drawing - Rectangle Width and Height_instruction: "Do This"
      U3 - Simple Drawing - Rectangle_instruction: "Do This"
      U3 - Simple Drawing - Road Ellipse_instruction: "Do This"
      U3 - Simple Drawing - Road Rects and Color_instruction: "Do This"
      U3 - Simple Drawing - Simple Shape Drawing_instruction: "Do This"
      U3 - Simple Drawing - Stroke and Stroke Weight_instruction: "Do this"
      U3 - Simple Drawing - X and Y values_instruction: "Do This"
      U3 - Simple Drawing - regular polygon_instruction: "Do this"
      U3 - Simple Drawing - text_instruction: "Do This"
      U3 - Simulation - 1_instruction: "Use a while loop to \"flip a coin 10 times\"\nand write the values to the screen. (Click to see full instructions)"
      U3 - Simulation - 2.1_instruction: "Change your looping condition so the simulation\nruns until there are 5 heads flipped. (Click to see full instructions)"
      U3 - Simulation - 2.5_instruction: "Run your simulation to get the full 10,000\nheads! How long did it take? (Click to see full instructions)"
      U3 - Simulation - 2_instruction: "Keep track of how many heads (1's) your\nprogram generates and print the results to the screen. (Click to see full\ninstructions)"
      U3 - Simulation - 3_instruction: "Add functionality that counts how many heads\nin a row are flipped. (Click to see full instructions)\\r\n"
      U3 - Simulation - 4_instruction: "Update your while loop's condition so the\nthe coin flips until there are three heads in a row. (Click to see full instructions)"
      U3 - Simulation - 5_instruction: "Change your while loop to run until you get\na streak of 12 heads. How many flips did it take? (Click to see full instructions)"
      U3 - Simulation - 6_instruction: "Keep adding to your simulation. What do you\nwant to explore next? (Click to see full instructions)"
      U3 - Simulation - App_instruction: "Change your code to run the full simulation\nwith 10,000 coins. What was your longest streak of heads? (Click to see full\ninstructions)"
      U3 - Simulation - Template_instruction: "Use a while loop to \"flip 10 coins\"\nand write them to the screen. (Click to see full instructions)"
      U3 - Sprites - Intro Sprites_instruction: "Do This"
      U3 - Sprites and Mod - Create  and Draw Sprite_instruction: "Do This"
      U3 - Sprites and Mod - Mouse Width and Height_instruction: "Do this"
      U3 - Sprites and Mod - Mouse X and Y_instruction: "Do this"
      U3 - Sprites and Mod - Rand Around Mouse_instruction: "Do this"
      U3 - Sprites and Mod - Rand Shape Color_instruction: "Do This"
      U3 - Sprites and Mod - Shape Color_instruction: "Do This"
      U3 - Sprites and Mod - Wrap Many Squares_instruction: "Do This"
      U3 - Sprites and Mod - X and Y Prop_instruction: "Do This"
      U3 - Sprites and Mod - two sprites_instruction: "Do This"
      U3 - User Input - Save getText To Variable_instruction: "Save the age and name\nof the user in variables (Click to see full instructions)"
      U3 - User Input - Saving After Input_instruction: "Save the age of the user\nin a variable using getText() (Click to see full instructions)"
      U3 - User Input and String -  Concat_instruction: "Output a message about age\nin a Text Area (Click to see full instructions)"
      U3 - Variables - Clicker Game_instruction: "Create your improved Chaser-Game\nhere. (Click to see full instructions)"
      U3 - Variables - Debug Scope_instruction: "Why isn't the value of foo changing\ncorrectly? Make a guess. (Click to see full instructions)"
      U3 - Variables - Debugging with Turtle_instruction: "Use your new debugging\ntechniques to get the code to run correctly (Click to see full instructions)"
      U3 - Variables - Decrement_instruction: "Decrement the value of the variable.\n(Click to see full instructions)"
      U3 - Variables - Identify Variables_instruction: "Identify the values printing\nin the terminal with console.log statements. (Click to see full instructions)"
      U3 - Variables - Increment_instruction: "Use the console.log debugging technique\nto see what is happening in this example. Add another variable and increment\nits value. (Click to see full instructions)"
      U3 - Variables - Incrementing Variables_instruction: "Create a repeat loop\nfor the repeated code and use increment to recreate the original program with\nless lines of code! (Click to see full instructions)"
      U3 - Variables - Read Using Turtle_instruction: "Create a second set of variables\nfor x and y position. Move turtle to that new location. (Click to see full\ninstructions)"
      U3 - Variables - Reassigning Variables with Console.log_instruction: "Add another\nreassignment statement at the end of the code to change the value of the variable\nat second time. (Click to see full instructions)"
      U3 - Variables - Set to Expression with Other Variables and Turtle_instruction: "(click\nto see full instructions)"
      U3 - Variables - Set to Expression with Other Variables_instruction: "Write\nan expression that calculates the player's total score and stores it in the\ntotalScore variable. The calculation is: the player's points times lives\ndivided by the total time. (click to see full instructions)"
      U3 - Variables - Set to Expression with Turtle_instruction: "(click to see\nfull)"
      U3 - Variables - Set to Expression_instruction: "Test out the new expressions.\n(Click to see full instructions)"
      U3 - images - bee free play_instruction: "Do this"
      U3 Digital Assistant Design_instruction: "Pick a topic for your Digital Assistant\nand create the basic layout with a text input and text area. (Click to show\nfull instructions)"
      U3 Digital Assistant Set Text_instruction: "Have your digital assistant repeat\nback what the user types and include a canned response. (Click to see full\ninstructions)"
      U3 Digital Assistant Target - Mehal_instruction: "Try out a demo of the Digital\nAssistant!"
      U3 Digital Assistant Target_instruction: "Try out a demo of the Digital Assistant!"
      U3 Digital Assistant Template_instruction: "This is a project template!"
      U3 Digital_instruction: "Choose a specialization topic for your digital assistant.\nCreate a basic digital assistant that takes the user's input and displays\nback a default response."
      U3 Variables consolelog_instruction: "Use the write block to display the value\nof size"
      U3 Variables flower example_instruction: "Change the value of petalSize multiple\ntimes. How does it change your drawing?"
      U3 Variables gray square_instruction: "Change the value of petalSize multiple\ntimes. How does it change your drawing?"
      U3 Variables make a square_instruction: "Change the value of size multiple\ntimes. How does it change your drawing?"
      U3 Variables misconceptions try it_instruction: "Test out your predictions\nfrom the previous level."
      U3 Variables randomize your square_instruction: "Change the value of petalSize\nmultiple times. How does it change your drawing?"
      U3 Variables write_instruction: "Use the write block to display the value of\nsize"
      U3 full clicker demo_instruction: "Clicker game - Try it out!"
      U3 mehal's clone_instruction: "Try out a demo of the Digital Assistant!"
      U3- Variables - Assign Random For Turtle Draw_instruction: "Try writing the\nsame code in text mode."
      U3- Variables - Changing the Value_instruction: "Update the value of 'turnAmount'\nbefore each moveForward so the turtle turns a different amount each time.\n(Click to see full instructions)"
      U3- Variables - Create And Assign_instruction: "On one line add a variable\ncalled \"lives\" and assign it the value 3. Print it to the console. (Click\nto see full instructions)"
      U3- Variables - Text Mode_instruction: "1. Switch to text mode and type instructions;\n2. drag blocks out into text mode; 3. experiment with code completion"
      U3-Design Mode-ID and Event Handler_instruction: "Add an event handler for\nthe button using the \"Insert and show\" link in the Design Mode Events tab.\n(Click to see full instructions)."
      U3-Design Mode-ID_instruction: "Using the Design Mode Events change the button\nID and update the code to match. (Click to see detail instructions)."
      U3-Design Mode-Image_instruction: "Recreate the \"Chaser Game\" from the last\nlesson using Design Mode. (Click to see full instructions.)"
      U313 Two Buttons with Ids_instruction: "Predict what will happen. Once you've\nmade a prediction, run the code to see what happens. (Click to see full instructions)"
      U313 drag Two Buttons_instruction: "Run a program with two buttons that have\nthe same id to see the warning message in the console. Change the ids to make\nthe program run without getting a warning message."
      U313 eventsDetails_instruction: "Run a program with two buttons that have the\nsame id to see the warning message in the console. Change the ids to make\nthe program run without getting a warning message."
      U3L03 - draw rect function_instruction: "Write a function called drawRectangle().\\r\n(Click\nto see full instructions)"
      U3L03 - draw step_instruction: "Write the drawStep function. (Click to see\nfull instructions)"
      U3L03 Creating Procedures 1_instruction: "Write the turnAround() function and\nuse it to make the turtle move as depicted. see: U3L03-turnAndDown.gif"
      U3L03 Define and use turnAround_instruction: "Define a function called turnAround.\nCall the function and then move the turtle forward. (Click to see full instructions)"
      U3L03 Draw a T using turnAround_instruction: "Draw a plus sign using the provided\nversion of turnAround().  (Click to see full instructions)"
      U3L03 Three Steps_instruction: "Define a function called drawSide() which draws\nthree steps and moves the turtle to prepare for the next side (Click to see\nfull instructions)"
      U3L03 choose your own drawing_instruction: "Now choose your own!  Pick one\nof the three drawings shown here and attempt to create it on your own, making\nsmart decisions about how to break the problem down into re-usable functions.  You\nwill review your work with a peer using \"procedures peer review rubric.\"  Check\nit for the requirements.  GIF: U3L3-ProceduresChooseOne.png"
      U3L03 define turnRight and draw a rectangle_instruction: "Define a function\ncalled right() that turns the turtle to the right. Then use this function\nto draw a rectangle, as shown below. (Click to see full instructions)"
      U3L03 draw diamond_instruction: "Create a function called drawDiamond() that\nmakes use of your previous work to draw the complete diamond. (Click to see\nfull instructions)"
      U3L04 - 3 by 3 with functions_instruction: "Make the 3x3 square as efficiently\nas you can. (Click to see full instructions)"
      U3L04 - snowflake_instruction: "Create the design by breaking it down into\nlayers of functions. (Click to see full instructions)"
      U3L04 choose your own drawing_instruction: "Now choose your own!  Pick one\nof the three drawings shown here and attempt to create it on your own, making\nsmart decisions about how to break the problem down into re-usable functions.  You\nwill review your work with a peer using \"procedures peer review rubric.\"  Check\nit for the requirements."
      U3L04 diamond solution_instruction: "Study this solution to the drawDiamond\nproblem.  Notice that the whole program starts by calling drawDiamond() at\nthe top.  The program then follows a chain of function calls.  You can trace\nwhat's happening in the code to see the functions reused.  It's also easy\nto read because the function names describe the expected behavior."
      U3L05_3x3GridEfficiencyChallenge_instruction: "Let's revisit the 3x3 grid\nproblem you did a few lessons ago.  This time the challenge is to program\nthe solution \"as efficiently as possible.\"  Now that you know how to write\nfunctions, it should be easier to break the problem down, and your code should\nbe easier to read and debug.  See the rubric for more details about requirements\nand expectations."
      U3L05_draw3x3GridEfficiently_instruction: "Draw a 3x3 grid above and to the\nright of the turtle. Try to do so with the fewest number of commands possible.\nNOTE: This is a very challenging problem.  You may need to play with it for\na while and tweak it.  You might also consider using pencil and paper to sketch\nyour ideas."
      U3L06 - moveForwardwithParams_instruction: "Use a single command to move the\nturtle to the edge of the screen. (Click to see full instructions)"
      U3L06 Challenge 1 triangle_instruction: "Use the parameterized versions of\nthe turtle commands to create a triangle with sides 100 pixels long. (Click\nto see full instructions)"
      U3L06 Challenge 2 purple square_instruction: "Read the documentation for penColor()\nand penWidth() before using them to draw the blue square."
      U3L06 Challenge 3 fill pink_instruction: "Fill in the background of the screen\nwith your favorite color. (Click to see full instructions)"
      U3L06 Challenge 4 bullseye_instruction: "Create the bullseye using hexadecimal\ncolors and dot(). (Click to see full instructions)"
      U3L06 Challenge 5 overlapping circles_instruction: "This image is created just\nusing dot() and penColor() but, how are we going to get those circles to be\ntransparent?  If you haven't gotten the hint yet: check out the documentation!"
      U3L06 Challenge 6 squiggles_instruction: "Read the documentation for the \"arcLeft\"\nand \"arcRight\" commands and then draw the squiggles as shown. "
      U3L06 Challenge 7 smiley face_instruction: "Use turnTo() and moveTo() to help\ndraw a smiley face. (Click to see full instructions)"
      U3L06 Challenge 8 make your own_instruction: "Create a drawing of your own.\n(Click to see full instructions)"
      U3L07 - Free Play Loops and Random_instruction: "Free Play! Use what you learned\nfrom loops and random to make your own little scene. Have fun."
      U3L07 - Starry Night Starter Code_instruction: "You are going to use loops\nand random numbers to generate an image of starry night sky similar to one\nshown here.  We have given you some starter code to generate the ground and\nsky (just two giant dots), you will add code to this project to make the stars,\ngrass, and moon.  All of the effects are clever applications of turtle dots,\nlines, and colors.  To get started, follow the series of steps suggested in\nthe accompanying worksheet. "
      U3L07 - allSeaGrass_instruction: "Add 50 pieces of seagrass to the image by\nwriting drawAllSeagrass with a loop. (Click to see full instructions)"
      U3L07 - bubbles_instruction: "Add 200 bubbles to the image by writing drawAllBubbles\nwith a loop. (Click to see full instructions)"
      U3L07 - callingFunctionsInLoops_instruction: "Call the function within the\nloop to complete the figure. (Click to see full instructions)"
      U3L07 - createTriangleParam_instruction: "Define a function that accepts a\nparameter to match the function calls and complete the image. (Click to see\nfull instructions)"
      U3L07 - fish_instruction: "Add 15 fish to the image by writing drawAllFish\nwith a loop. (Click to see full instructions)"
      U3L07 - introSquare_instruction: "Use a loop to draw a square. Then add another\nloop to draw many squares each one rotated some amount. (Click to see full\ninstructions)"
      U3L07 - loopsWithRandom_instruction: "Increase the number of iterations to\nfill the screen with white. (Click to see full instructions)"
      U3L07 - randomDots1_instruction: "Increase the number of iterations to fully\nfill the screen with random dots. (Click to see full instructions)"
      U3L07 - randomSquare_instruction: "Draw the figure using a loop. (Click to\nsee full instructions)"
      U3L07 - seaGrass_instruction: "Add a parameter to drawSeagrass that controls\nthe number of waves in the grass. (Click to see full instructions)"
      U3L07 - seaStar_instruction: "Add 5 sea stars to the image by writing drawAllSeaStars\nwith a loop. (Click to see full instructions)"
      U3L07 - sunBeams_instruction: "Add 100 sunbeams to the image by writing drawAllSunbeams\nwith a loop. (Click to see full instructions)"
      U3L07 - topDownDesign_instruction: "Get comfortable with the structure of this\nprogram, then move on to the next exercise. (Click to see full instructions)"
      U3L08 - Enchantment Under the Sea_instruction: "You have been provided with\nstarter code for an “Under the Sea” scene which includes three functions,\none each for the starfish, seagrass, and fish. Create versions of these functions\nwhich accept parameters to allow you to add more variation to your scene.  The\nstudent worksheet provides more details and guidance."
      U3L08 - createTwoParamTriangle_instruction: "Define a function called drawTriangle()\nthat accepts two parameters to set the size and width of the triangle. (Click\nto see full instructions)"
      U3L08 - digitalScene_instruction: "Create the functions you were assigned as\npart of your digital scene. (Click to see full instructions)"
      U3L08 - drawSquareWithParam - for video_instruction: "Use drawSquare() to recreate\nthe image of both squares, this time using parameters. (Click to see full\ninstructions)"
      U3L08 - drawSquareWithParam_instruction: "Use drawSquare() to recreate the\nimage of both squares, this time using parameters. (Click to see full instructions)"
      U3L08 - drawSquaresWithParams_instruction: "Write drawSmallSquare() to draw\na 25px square. (Click to see full instructions)"
      U3L08 - fish_instruction: "Add a parameter to drawFish that changes the size\nof the fish drawn. (Click to see full instructions)"
      U3L08 - freePlay_instruction: "Keep adding to your image by making more calls\nto your new functions with parameters. (Click to see full instructions)"
      U3L08 - individualCode_instruction: "Create the functions you were assigned\nas part of your digital scene. (Click to see full instructions)"
      U3L08 - introUnderTheSea_instruction: "Add an extra fish, starfish, and piece\nof seagrass to the image. Look at, but don't change, the functions that create\nthem. (Click to see full instructions)"
      U3L08 - multiParamFish_instruction: "Add three parameters to your drawFish\nfunction to accept red, green and blue values to make your fish different\ncolors. (Click to see full instructions)"
      U3L08 - multipleLayersofParams_instruction: "Call drawPlusSign() to complete\nthe image. (Click to see full instructions)"
      U3L08 - paramsToStarfish_instruction: "Add a parameter to drawStarfish that\nchanges the size of the starfish drawn. (Click to see full instructions)"
      U3L08 - randomInput_instruction: "Use the randomNumber() blocks to test the\nfunctions you designed with random input. (Click to see full instructions)"
      U3L08 - seaGrass_instruction: "Add a parameter to drawSeagrass that changes\nthe size of the piece of seagrass drawn. (Click to see full instructions)"
      U3L08 - squareTwoParams_instruction: "Call drawSquare() to complete the drawing\nof two squares. (Click to see full instructions)"
      U3L08 - starFish_instruction: "Add an extra fish, starfish, and piece of seagrass\nto the image. Look at, but don't change, the functions that create them.\n(Click to see full instructions)"
      U3L08 - triangleTwoParams_instruction: "Call drawSquare() to complete the drawing\nof two squares. (Click to see full instructions)"
      U3L1 - Simulation - Template_instruction: "Use a while loop to \"flip 10 coins\"\nand write them to the screen. (Click to see full instructions)"
      U3L12 Chaser Template_instruction: "This is a project template!"
      U3L13 - Button with ID_instruction: "Drag a button out onto the screen and\nset its text to \"Go forth!\".  Run the program to make sure you can see the\nbutton."
      U3L13 - Debug Id Problem_instruction: "Improve the button by choosing a descriptive\nand meaningful ID. (Click to see full instructions)"
      U3L13 - Debug Id plus logic problem_instruction: "The last problem was an example\nof syntax error.  App Lab did not understand which object it should be listening\nto for a \"click\" event so it showed an error message in the console to let\nyou know.  Another kind of error is a logical error - the program is valid,\nbut it's not doing what you want it to do.\\r\n\\r\nThis program has 2 errors.\nA (tricky) syntax error and logical error.  Find them, fix them, and make\nthe program work as expected."
      U3L13 - Debugging 1_instruction: "Debug the program by verifying your IDs are\nbeing referenced properly. (Click to see full instructions)"
      U3L13 - Debugging 2_instruction: "Debug the program by properly ordering your\nbutton commands and event handlers. (Click to see full instructions)"
      U3L13 - Debugging 3_instruction: "Debug the program by fixing the logical error\nwithin the program. (Click to see full instructions)"
      U3L13 - Project_instruction: "Create your multi-screen app. (Click to see full\ninstructions.)"
      U3L13 - Turtle Driver Project_instruction: "Create a \"turtle driver\" that\nincludes buttons to move the turtle forward and turn it left and right. (Click\nto see full instructions)"
      U3L13 - Turtle move with button_instruction: "Add a button that moves the turtle\nwhen clicked.  (Click to see full instructions)"
      U3L13 eventsDetails_instruction: "Add an event handler to the button to move\nthe turtle forward. (Click to see full instructions)"
      U3L14 - Assigning Random Value_instruction: "Write a program that simulates\nthe rolling of two dice and reports their individual values as well as the\nsum. (click to see full instructions)"
      U3L14 - Mini Calculator embed_instruction: "You will be prompted for two numbers,\none right after the other.  See what happens.  Enter different numbers until\nyou get the idea."
      U3L14 - Unfortunate Events Free Play_instruction: "Follow the \"Unfortunate\nEvents\" Worksheet and enter your code here to experiment.  We've pre-loaded\nthe code you need to start."
      U3L14 - User Input Division calculator_instruction: "Write a program that acts\nas a simple calculator. (click to see full instructions)"
      U3L14 - Variable ReAssignment pt2_instruction: "Trace the code and predict\nwhat you think will be printed to the console. Then add a console.log statement\nat the end of the program to see the last value of someNum to see if your\nfull prediction is correct. (click to see full Instructions)"
      U3L14 - concatenate simple_instruction: "Modify the write statement on line\n3 to combine text and variables together to make the app display a single\nline of text that shows the player's lives and score. (click to see full\ninstructions)"
      U3L14 - moving memory challenge1_instruction: "Using only the variables provided,\nassignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log\nstatement display the correct value(s).  (Click to see full instructions)"
      U3L14 - moving memory challenge2_instruction: "Using only the variables provided,\nassignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log\nstatement display the correct value(s).  (Click to see full instructions)"
      U3L14 - moving memory challenge3_instruction: "Using only the variables provided,\nassignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log\nstatement display the correct value(s).  (Click to see full instructions)"
      U3L14 - moving memory challenge4_instruction: "Using only the variables provided,\nassignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log\nstatement display the correct value(s).  (Click to see full instructions)"
      U3L14 - moving memory challenge5_instruction: "Using only the variables provided,\nassignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log\nstatement display the correct value(s).  (Click to see full instructions)"
      U3L14 - moving memory challenge6_instruction: "Using only the variables provided,\nassignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log\nstatement display the correct value(s).  (Click to see full instructions)"
      U3L15 - Add reset button to UpDown app_instruction: "Add code so that clicking\nthe start over button will reset the game and send you back to the main screen.\n(Click to see full instructions)"
      U3L15 - DEMO up down count practice app_instruction: "Try out the demo app\n(Click to see full instructions)"
      U3L15 - Debug forget to update var on reset in UpDown app_instruction: "Run\nthe app, and click the up or down button until you get to the gameOverScreen.\nClick 'Start Over' and try the app again. Find and fix the issue in the\ncode. (Click to see full instructions)"
      U3L15 - Debug if never triggers in UpDown app_instruction: "Run the app and\nuse the up and down arrows to try to hit the gameOverScreen. You can't! Find\nand fix the issue in the code. (Click to see full instructions)"
      U3L15 - Debugging Simple If-statements =v==_instruction: "Run the app, and\nclick the up button. Then restart and run it again, and click the down button.\nFind and fix the issue in the code. (Click to see full instructions)"
      U3L15 - Simple If-statements in UpDown App_instruction: "Add an if statement\nso that the app changes screens when the count reaches -5. (Click to see full\ninstructions)"
      U3L15 - add code to make count down work_instruction: "Write code to make the\ndown arrow work as expected. (Click to see full instructions)"
      U3L15 - clicker update score_instruction: "Add code to update the score when\nthe apple is clicked. (Click to see full instructions)"
      U3L15 - count upDown bug forget to set text_instruction: "Find the bug in the\nprogram and fix it. (Click to see full instructions)"
      U3L15 - count upDown bug logic error wrong update_instruction: "Find the bug\nin the program and fix it. (Click to see full instructions)"
      U3L15 - count upDown bug var not created globally_instruction: "Find the bug\nin the program and fix it. (Click to see full instructions)"
      U3L15 - global var example count up_instruction: "Look at the code for this\napp and see how the code works to update the count variable when the up arrow\nis clicked. (Click to see full instructions)."
      U3L15 - mini clicker update score_instruction: "Add code to update the score\nwhen the apple is clicked. (Click to see full instructions)"
      U3L15 - practice with setText_instruction: "Use setText to complete the click\nevent handler for the down arrow. (Click to see full instructions)"
      U3L15 - variable scoping problem debugging_instruction: "See if you can figure\nout why the code is no longer working. (Click to see full instructions)"
      U3L15 click add lives_instruction: "Add lives to the clicker game that decrement\nby 1 when the background image is clicked (Click to see full instructions)"
      U3L15 full clicker app_instruction: "Complete your clicker game! (Click to\nsee full instructions)"
      U3L16 - challenge say hi app_instruction: "Write a greeting to the user when\nthey hit 'enter' in the text input, using the 'change' event. (Click to\nsee full instructions)"
      U3L16 - chaserApp_instruction: "Create your own \"Chaser Game.\" (Click to\nsee full instructions)"
      U3L16 - chooseImages_instruction: "Replace the image in your application with\none of your own. (Click to see full instructions)"
      U3L16 - doubleQuotes_instruction: "Save a string inside a variable and log\nit to the console. (Click to see full instructions)"
      U3L16 - hideAndShow_instruction: "Introducing textInput, getText and write.  First\nrun the starter code several times.  Try to change what's written to the\nscreen when the button is clicked. Then use getText to write to the screen\nwhat the user entered in the text box. GIF: U3L16 - useGetText.gif"
      U3L16 - hideAndShowPractice_instruction: "You are given some starting code\nthat puts an image and two buttons on the screen.  The image is initially\nhidden. Add two new event handlers: one for each button, that when clicked\nhide and show the image."
      U3L16 - image and text labels_instruction: "Introducing the setPosition command!  Replace\nthe moveTo in the button-click event handler to use setPosition to move the\nbutton itself to a random location when it's clicked."
      U3L16 - images and text labels_instruction: "Introducing objects other than\nbuttons! - textLabels and images.  First try replacing your button with a\ntextLabel.  Will the text respond to events just like the button?  Try connecting\nan event handler to it.  We've started you out with code similar to the result\nof the last level, you can copy your code from that level into here if you\nprefer. "
      U3L16 - images_instruction: "Introducing Images.  Try replacing the textLabel\nwith an image..  Will the image respond to events just like the button?  Try\nconnecting an event handler to it.  We've started you out with code similar\nto the result of the last level, you can copy your code from that level into\nhere if you prefer. "
      U3L16 - intro getText_instruction: "Add an event handler to the Submit button\nso that when the button is clicked it will display the name entered in the\ntext box to the console.  Use getText to get the value out of the text box.\n(Click to see full instructions)"
      U3L16 - introSetPosition_instruction: "Move the buttons to the bottom of the\nscreen. (Click to see full instructions)"
      U3L16 - introStrings_instruction: "Save a string inside a variable and log\nit to the console. (Click to see full instructions)"
      U3L16 - nameAgeTemplate_instruction: "Add an Text Input box for the name and\nage. (Click to see full instructions)"
      U3L16 - newEventTypes_instruction: "Experiment with different event types and\nselect the one that you think is best. (Click to see full instructions)"
      U3L16 - outputWithTextArea_instruction: "Output a message to the 'textArea'\n(Click to see full instructions)"
      U3L16 - projectTemplate_instruction: "Create your own \"Chaser App\". (Click\nto see full instructions)"
      U3L16 - quick double click_instruction: "Mini-Project.  The Quick Double-Click\ngame.  In this simple game an object (an image) moves around, or pops up randomly\non the screen, as the user clicks it.  The goal of our game will be to try\nto double-click the object before it moves.  Part of the challenge (and fun)\nhere is creating this app from scratch.  You can look back at your previous\nwork for examples, but it's fun to create something from scratch, too.  Try\nit!  For more details see the Activity guide for this lesson."
      U3L16 - setPosition to move button_instruction: "Introducing the setPosition\ncommand! Replace the moveTo in the button-click event handler to use setPosition\nto move the button itself to a random location when it's clicked."
      U3L16 - setPositionMoveButton_instruction: "Use setPositon to moveButton"
      U3L16 - setupMoveToRandom_instruction: "Modify the code so that the turtle\nmoves to a random screen location when the button is clicked. (Click to see\nfull instructions)"
      U3L16 - singleSetPosition_instruction: "Move the button to the middle of the\nscreen. (Click to see full instructions)"
      U3L16 - stringsVsNumbers_instruction: "Run the program to see how strings and\nnumbers behave with different arithmetic operators. (Click to see full instructions)"
      U3L16 - text labels_instruction: "Use the textLabel command to replace the\nbutton in your program with a text label. (Click to see full instructions)"
      U3L16 - textInput getText write_instruction: "Add an Text Input box for the\nname and age. (Click to see full instructions)"
      U3L16 - toUpper_instruction: "Make the name of the user appear in uppercase\n(Click to see full instructions)"
      U3L16 - use images_instruction: "Use the image command to replace the text\nlabel in your program with an image. (Click to see full instructions)"
      U3L16 Mad Lib Clear Input_instruction: "Clear the user's previous text when\nthe Play Again button is clicked (Click to see full instructions) "
      U3L16 Mad Lib Demo_instruction: "Mad Libs Demo - Try it out!"
      U3L16 Mad Lib Student Setup_instruction: "Back to Mad Libs: To get started,\nset up the two screens for your Mad Libs app (Click to show full instructions)"
      U3L16 Mad Lib getText_instruction: "Before setting the text area with your\nMad Libs outline, get the user's text and incorporate their responses. (Click\nto see full instructions) "
      U3L16 Mad Lib setText_instruction: "When the Next button is clicked, set the\ntext area to have the main outline of your How-to Mad Libs (without the user's\ninput). (Click to see full instructions) "
      U3L16 Mad Lib toUpper_instruction: "Apply the toUpperCase and toLowerCase string\nfunctions to the user's text. (Click to see full instructions) "
      U3L17 - getAndSetKeyValue_instruction: "Create an image like app. (Click to\nsee full instructions)"
      U3L17 - getKeyValue_instruction: "Run the program several times to observe\nhow the setKeyValue commands now always arrive in order. (Click to see full\ninstructions)"
      U3L17 - introCallbacks_instruction: "Run the program several times to observe\nhow the setKeyValue commands now always arrive in order. (Click to see full\ninstructions)"
      U3L17 - introKeyValue_instruction: "Explore your key value pairs with the Data\nViewer. (Click to see full instructions)"
      U3L17 - readKeyValue_instruction: "Explore your key value pairs with the Data\nViewer. (Click to see full instructions)"
      U3L17 - setKeyValue_instruction: "Create and update your key value pairs using\nsetKeyValue. (Click to see full instructions)"
      U3L17 - twoSetKeyValue_instruction: "Run the program several times to observe\nhow often setKeyValue commands arrive out of order. (Click to see full instructions)"
      U3L18 comparison operators_instruction: "Use console.log to print out the different\nboolean expressions below to see what information they return. (Click to see\nfull instructions)"
      U3L18 comparison operators_for_video_instruction: "Use `console.log` to print\nout the different boolean expressions below to see what information they return.\n(Click to see full instructions)"
      U3L19 - Clicker Game Freeplay Area_instruction: "Use this App Lab area to improve\nyour clicker game.  You should start by copy/pasting the code from your old\ngame here.  We're showing a more full set of blocks in the toolbox - some\nof the things you might not have used yet.  Feel free to explore then and\nexperiment if you want to.  Everything else you need should be shown.  Have\nfun!"
      U3L19 - DEMO up down count practice app_instruction: "Try out the demo app\n(Click to see full instructions)"
      U3L19 - Debugging with consoleLog_instruction: "Add console.log() statements\nto find out the value of a and b after the first reassignment statement a\n= b; (Click to see full instructions)"
      U3L19 - Simple If-statements in UpDown App_instruction: "Add an if statement\nso that the app changes screens when the count reaches -5. (Click to see full\ninstructions)"
      U3L19 - Target Clicker App_instruction: "Investigate the new elements of the\n'chaser-game'"
      U3L19 - do concatenate string with var_instruction: "We've given you a piece\nof code from the previous screen.  Try changing the value assigned to foo\nto see the string change. \\r\nDo this: \\r\n1. Try changing the value assigned\nto foo to see the string change. \\r\n2. By only modifying the lines of code\nthat were given to you, try to get the output to say: “The value of foo is:\n9.  And isn’t that fine.” \\r\n"
      U3L19 - fix the var name syntax error v2_instruction: "Fix the error and get\nit to print the value of both variables (Click to see full instructions)"
      U3L19 - fix the var name syntax error_instruction: "Fix the error and get it\nto print the value of both variables (Click to see full instructions)"
      U3L19 - global var example count up_instruction: "Look at the code for this\napp and see how the code works to update the count variable when the up arrow\nis clicked. (Click to see full instructions)."
      U3L19 - practice with setText_instruction: "Add another button that changes\nthe text to the value of a new variable. (Click to see full instructions)"
      U3L19 - test reassignment of two vars_instruction: "Predict the value of a\nand b. Add console.log statements to find out the actual value of a and b.\n(Click for full instructions)"
      U3L19 - three basic ops of variables_instruction: "Add another variable called\n\"lives\" and set the value to 3. Print the value of the variable to the console.\n(Click to see full instructions)"
      U3L19 - try out console log_instruction: "Try out console.log.  Do this: replace\nthe statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).  Run\nthe program and you should see the output show up in the console area below\nthe workspace.  Then try adding a few more console.log statements.  Display\nsome text.  Make another variable and display that.  \\r\nThe app screen will\nbe blank -- that's the point.  With console.log you can test output behind\nthe scenes in a way the user cannot see.  \\r\n\\r\n\\r\nGIF: U3L19-useconsolelog.gif"
      U3L19 - up down count practice app_instruction: "Set up the down button to\ndecrease the value of count by 1 each time it is clicked. (Click to see full\ninstructions)"
      U3L19 - updating variables pt1_instruction: "This app is only SLIGHTLY different\nfrom the previous one, but much more dynamic.  See if you can figure out how\nand why the count is going up.  Once you've figured it out then you should\nbe able to DO THIS: add a button to the app that when clicked makes the count\ngo down, and updates the label.  When you're done the app should work as\nshown in the demonstration.  GIF: U3L19 - upDownCountApp.gif"
      U3L19 - variable reassignment challenge pt2_instruction: "Make a prediction\nabout the ending values of a, b, and c. Then use console.log to check your\nunderstanding (Click to see full instructions)"
      U3L19 - variable reassignment part 1_instruction: "Predict the value of a and\nb. Add console.log statements to find out the actual value of a and b. (Click\nfor full instructions)"
      U3L19 - variable scope problem 2_instruction: "What is happening with foo?\nPlay with the level to try to figure it out. (Click to see full instructions)"
      U3L19 - variable scoping problem debugging_instruction: "See if you can figure\nout why the code is no longer work. (Click to see full instructions)"
      U3L19 - write var and string with same name v2_instruction: "Fix the code so\nthat the values of both variables print to the console. (Click to see full\ninstructions)"
      U3L19 - write var and string with same name_instruction: "Fix the code so that\nthe value of both variables prints to the console. (Click to see full instructions)"
      U3L2 Using Simple Commands (no tooltips)_instruction: "Draw a 1x1 square above\nand to the left of the turtle's starting position. Click to see full instructions."
      U3L2 Using Simple Commands_instruction: "Draw a 1x1 square above and to the\nleft of the turtle's starting position. Click to see full instructions."
      U3L23 Chatbot Conditionals 1_instruction: "Add if, else if, and else statements\nto detect the movie genres Comedy, Romance, Action, and Horror. (Click to\nsee full instructions)"
      U3L23 Chatbot Intro 1a_instruction: "Store the user's input inside a variable\nand log it to the console."
      U3L23 Chatbot Intro 2_instruction: "Use string concatenation to store the user's\ninput and assistant's answer into the conversation variable using the format\n\"User: <input><bot name>: <default response>\" . Log the conversation to\nthe console."
      U3L23 Chatbot Intro 2a_instruction: "Display the conversation onto the \"text_area\"\nelement. Optional: clear the user's input after every \"change\" event."
      U3L23 Chatbot Intro 3_instruction: "Add newline characters \"\\n\" to separate\nthe user's input and the computer's response."
      U3L23 Chatbot Intro 4_instruction: "Use this level to make your chatbot look\nand work better!"
      U3L23 Chatbot Intro_instruction: "Choose a specialization topic for your digital\nassistant. Create a basic digital assistant that takes the user's input and\ndisplays back a default response."
      U3L23 Digital Assistant 1_instruction: "Set the text_area element to display\nthe user's input from the text_input element."
      U3L23 Digital Assistant 2_instruction: "Add the response \"I don't know.\"\nafter each of the user's inputs."
      U3L23 Digital Assistant 3_instruction: "Add the response \"I don't know.\"\nafter each of the user's inputs."
      U3L23 Digital Assistant 4_instruction: "Display the user's input and the digital\nassistant's response on different lines."
      U3L23 Digital Assistant 5_instruction: "Start the user's command with the\nphrase \"User:\" and the digital assistant's response with the phrase \"Bot:\""
      U3L23 Digital Assistant 6_instruction: "When the user hits Run, display the\ntext \"I'm a generic digital assistant. Ask me anything!\""
      U3L24 Basic String Parsing 1_instruction: "Use the function \"userInput.indexOf(<food>)\"\nto check if the strings \"pizza\" or \"soup\" are anywhere in the user's\nresponse."
      U3L24 Chatbot Basic Conditionals_instruction: "Check out the project description\nfor instructions. (Click to see full instructions.)"
      U3L24 Chatbot Conditionals 2_instruction: "Adjust the \"if\" block to make\nthe bot respond \"I don't know that color.\" if the user types anything besides\n\"blue\""
      U3L24 Chatbot Conditionals 3_instruction: "Adjust the \"if/else\" block to\nmake the bot respond to the colors blue, red, and green, and to two additional\ncolors."
      U3L24 Chatbot Keyword Record_instruction: "Use the next level to record your\ndigital assistant's keywords/phrases."
      U3L24 Chatbot Nested Conditionals_instruction: "Add a chained conditional with\nat least 3 \"else if\" statements to your personal assistant."
      U3L24 Nested Conditionals 1_instruction: "Change all of the boolean expressions\nto use includes instead of ==. (Click to see full instructions)"
      U3L24 Nested Conditionals 2_instruction: "Nest your movie genre if statements\ninside the if statements to check for a ? in the input. "
      U3L24 Nested Conditionals Bugs 2_instruction: "Fix the problem with the code\nso that all the conditions can be reached. (Click to see full instructions)"
      U3L24 Nested Conditionals Bugs 3_instruction: "Fix the bugs that still exist\nin this program. Prove that the program works correctly."
      U3L24 Nested Conditionals Bugs_instruction: "Expose the bugs in this problem\nby typing inputs into the user-input box. Track which inputs cause unexpected\noutputs."
      U3L24 introIncludes_instruction: "Practice using the includes command. (Click\nto see full instructions)"
      U3L25 - drag out key event_instruction: "Set up an event handler to respond\nto keypress events, and display event.key in the console. Hit keys on the\nkeyboard to see what happens. (Click to see full instructions)"
      U3L25 - play sound when up key_instruction: "Change the code so the sound will\nonly play when the up arrow is pressed. (Click to see full instructions)"
      U3L25 Chatbot Strings_instruction: "1. Adjust your digital assistant to evaluate\ninputs the same way whether the inputs are capitalized or lowercase. 2. If\na user asks \"What is <phrase>?\", where <phrase> is an input your digital\nassistant does not recognize, make your digital assistant respond \"I don't\nknow what <phrase> is.\""
      U3L25 String Parsing 1_instruction: "Given the string \"Wisdom begins with\nwonder.\" what is the index of the following characters W, t, w, ., d, and\nk? Confirm your expectation using the string.indexOf() function."
      U3L25 String Parsing 2_instruction: "Use str.length to find the length of the\nstrings “Hello World”, “Computer science rocks!\", and “I promise to do my\nhomework every day.”"
      U3L25 String Parsing 3_instruction: "Write a password length checker that writes\n“yes” to the console if a string has a length greater than 10, or “no” if\nit is less than or equal to 10.  Test your function using two strings, one\nthat will satisfy each conditional option."
      U3L25 String Parsing 4_instruction: "You are given the string \"Wisdom begins\nwith wonder.\" Use the string.substring(begin, end) function to print \"begin\"\nand \"nder\" to the console."
      U3L25 String Parsing 5_instruction: "Fill in the function, findBeginNder()\nto get the strings \"begin\" and \"nder\" from a sentence no matter where\nin the sentence they exist.\\r\nPrint the strings and their index to the console.\n"
      U3L25 String Parsing 6_instruction: "Write a function that takes a name (first\nlast) and reorders it (last, first)."
      U3L25 String Parsing 7_instruction: "You are given the string “The earth has\nmusic for those who listen.” Manipulate it using the functions str.toUpperCase()\nand str.toLowerCase()."
      U3L26 AND operator_instruction: "Update the genre and rating if statements\nto give only one movie suggestion at a time. (Click to see full instructions)"
      U3L26 Chatbot Compound Conditionals_instruction: "Update your digital assistant\nto include at least one each of AND, OR, and NOT"
      U3L26 Chatbot Final_instruction: "Update your digital assistant to include\nat least one each of AND, OR, and NOT"
      U3L26 Compound Logic_instruction: "Write a conditional statement that detects\nif a command contains all the phrases \"2000\" \"animated\" and \"G-rated.\"\nIf all these phrases are detected, make Movie Bot respond \"The top grossing\nanimated and G-rated film in the 2000 decade was Finding Nemo.\""
      U3L26 NOT operator_instruction: "Write a conditional statement that detects\nif a command does not contain the phrase \"bad.\" If \"bad\" is not detected,\nmake Movie Bot respond normally. Otherwise, make Movie Bot respond \"Sorry,\nI don't know about bad movies.\" "
      U3L26 OR operator_instruction: "Update the if statement to use an OR to check\nfor a \"?\" as well as who, what, where, when, why, how in the user input.\n(Click to see full instructions)"
      U3L27 Chatbot Final_instruction: "Make your digital assistant awesome and when\nyou are finished, ask one of your classmates to test it for you using the\nactivity guide. As you add features to your digital assistant, track them\non the next level."
      U3L2_Turtle3by3Grid_instruction: "Draw a 3x3 grid to the front and right of\nthe turtle as efficiently as possible. The turtle should end at its original\nlocation, facing its original direction. (Click to see full instructions)"
      U3L2_TurtleSquare_right_instruction: "Draw a square to the front and to the\nright of the starting location. (Click to show full instructions)"
      U4 - Add Row By Hand_instruction: "Add a new record to your table in the Data\nViewer. (Click to see full instructions)"
      U4 - Charts - Export Data_instruction: "Export the data from the “ages” table\nas a CSV file, then remix this app and import the CSV file. (Click to see\nfull instructions)"
      U4 - Charts - Import Data 1_instruction: "Download the CSV file we’ve provided,\nand then use the data viewer to import the data from the file into the “mytable”\ntable. (Click to see full instructions)"
      U4 - Charts - Import Data 2_instruction: "Call readRecords on “mytable” and\nprint each record to the console. (Click to see full instructions)"
      U4 - Charts - Line Chart 1_instruction: "Create a line chart showing the change\nin popularity of “#tbt” over time. (Click to see full instructions)"
      U4 - Charts - Line Chart 2_instruction: "Add a second line to your chart to\nshow the change in popularity of both “#tbt” and “#nofilter” at the same time.\n(Click to see full instructions)"
      U4 - Charts - Line Chart Template_instruction: "This is a template."
      U4 - Charts - Remixing Apps with Data_instruction: "Run this app and see what\nit prints to the console. Then remix the app and run the remixed version to\nsee what happened to the data. (Click to see full instructions)"
      U4 - Charts - Scatter Chart_instruction: "Create a scatter plot of the “rottenTomatoes”\ntable, using the new table and column names. (Click to see full instructions)"
      U4 - Charts - drawChartFromRecords 1_instruction: "Use the drawChartFromRecords\nblock to create a scatter plot from the table in the database. (Click to see\nfull instructions)"
      U4 - Charts - drawChartFromRecords Options 1_instruction: "Add a title to your\nchart and change the colors of your lines using the options parameter of drawChartFromRecords.\n(Click to see full instructions)"
      U4 - Charts - drawChartFromRecords Options 2_instruction: "Look through the\ndrawChartFromRecords API and choose some more options to customize. (Click\nto see full instructions)"
      U4 - Charts - drawChartsFromRecords 1_instruction: "Add screen element, pull\nout drawCharts block, run the program!"
      U4 - CreateRecord - 1_instruction: "Add a createRecord command and run the\nprogram. (Click to see full instructions)"
      U4 - CreateRecord - 2.5_instruction: "Change the table name in createRecord\nthen check the Data Viewer to see the new table. (Click to see  full instructions)"
      U4 - CreateRecord - 2_instruction: "Change the name from \"Alice\" to something\nelse in the createRecord command.  Run the program and use the Data Viewer\nto see the changes to your table. (Click to see full instructions)"
      U4 - CreateRecord - 3_instruction: "Use createRecord to add the song object\nas a record to a table. (Click to see full instructions)"
      U4 - CreateRecord - 4_instruction: "Run the program. Verify the song object\nwas added to the database. Note the callback function now displays the copy\nof the record sent back back by the database. (Click to see full instructions)"
      U4 - CreateRecord - 5_instruction: "Add a property to the JavaScript object,\nthen run the program.  View the data table and see how changing the object\naffects the data table. (Click to see full instructions)"
      U4 - Edit Data Table by Hand_instruction: "View the data table and click edit\nnext to each row.  Add the artists names for each song by hand. (Click to\nsee full instructions)"
      U4 - Exploring Data Tools - Template_instruction: "Use createRecord to add\nthe song object as a record to a table. (Click to see full instructions)"
      U4 - Objects - accessingPropertiesInArray_instruction: "Access the properties\nof the objects stored in an array. (Click to see full instructions)"
      U4 - Objects - arraysOfObjects_instruction: "Create an array called \"students\"\nand add all 5 student objects to the array. (Click to see full instructions)"
      U4 - Objects - createContactObject_instruction: "Construct a new object from\nthe user inputs, and append it to your array. (Click to see full instructions)"
      U4 - Objects - createContactsData_instruction: "Add values to the three contact\nobjects provided in the starter code. (Click to see full instructions)"
      U4 - Objects - createDotNotation_instruction: "Create a student Object yourself.\nAdd properties to your object one at a time using dot notation. (Click to\nsee full instructions)"
      U4 - Objects - createObject_instruction: "Create an object with at least 3\nproperties and display it in the Debug Console. (Click to see full instructions)\n"
      U4 - Objects - dotNotation_instruction: "Use dot notation to display individual\nproperties of the object. (Click to see full instructions)"
      U4 - Objects - eventHandlersToSwitchScreen_instruction: "Attach event handlers\nto the \"Add Contact\" and \"Go Back\" buttons that allow the user to switch\nscreens. (Click to see full instructions)"
      U4 - Objects - eventParameter_instruction: "Trigger both the keyboard and mouse\nevent and examine the event objects displayed in the console. Why might an\nobject be the best way to store this information? (Click to see full instructions)"
      U4 - Objects - exemplarContactsApp_instruction: "Use the Contacts app and then\nadd a contact of your own. (Click to see full instructions)"
      U4 - Objects - loopingArray_instruction: "Loop over your array of students\nand print the name of every students. (Click to see full instructions)"
      U4 - Objects - loopingArray2_instruction: "Loop over your array of students\nand print the name and grade of every student. (Click to see full instructions)"
      U4 - Objects - loopingCompoundConditions_instruction: "Loop over the array\nof students and display the information of students who are present and in\nthe 11th grade. (Click to see full instructions)"
      U4 - Objects - loopingConditions_instruction: "Loop over your array of student\nobjects and display the names of every student who is present in class. (Click\nto see full instructions)"
      U4 - Objects - pullValues_instruction: "Create an event handler for the \"Save\nContact\" button that displays the contents of the 4 text input fields in\nthe console. (Click to see full instructions)"
      U4 - Objects - readStarterCode_instruction: "Familiarize yourself with the\nstarter code and UI elements provided. (Click to see full instructions)"
      U4 - Objects - resetIndexAndShow_instruction: "Add code to your event handler\nfor the \"Save Contact\" button so that when a new contact is added, the inputs\nare cleared, the screen is switched, and the correct contact is shown. (Click\nto see full instructions)"
      U4 - Objects - showContact1_instruction: "Add code to the showCurrentContact\nfunction to show the name of the contact stored at the currentIndex of your\narray. (Click to see full instructions)"
      U4 - Objects - showContact2_instruction: "Add the phone number and birthday\ntext to your text area. (Click to see full instructions)"
      U4 - Objects - showContact3_instruction: "Display the image information for\neach contact. (Click to see full instructions)"
      U4 - Objects - showSampleImage_instruction: "Attach an event handler to the\nimage URL text input so that the user can confirm their image will work as\nexpected. (Click to see full instructions)"
      U4 - Objects - writeWrap_instruction: "Use the wrap function to prevent currentIndex\nfrom leaving the bounds of your array. (Click to see full instructions)"
      U4 - Read Record - 1.2_instruction: "Place a console.log command below the\nreadRecords command. (Click to see full instructions)\\r\n"
      U4 - Read Record - 1.3_instruction: "Add a console.log command inside the callback\nfunction. (Click to see full instructions)\\r\n"
      U4 - Read Record - 1_instruction: "Use console.log to display the records returned\nby a call to readRecords. (Click to see full instructions)\\r\n"
      U4 - Read Record - 2_instruction: "Change the table name so that the records\nare read from the new table. (Click to see full instructions)\\r\n"
      U4 - Read Record - 3_instruction: "Change the name of the table in a readRecords\ncommand to read from a table that does not exist. (Click to see full instructions)\\r\n"
      U4 - Read Record - 4.1_instruction: "Use indexes and dot notation to reference\nvalues in the response from the database. (Click to see full instructions)\\r\n"
      U4 - Read Record - 4_instruction: "Print out each record return from the readRecords\ncall individually. (Click to see full instructions)\\r\n"
      U4 - Read Record - 5_instruction: "Using a for loop, display the title of each\nmovie in your database. (Click to see full instructions)\\r\n"
      U4 - Read Record - part 1 - template_instruction: "Use console.log to display\nthe records returned by a call to readRecords. (Click to see full instructions)\\r\n"
      U4 - ReadRecords - Contacts App 1_instruction: "Use readRecords to copy the\ndata in your database into your \"contacts\" global variable and call showCurrentContact.\n(Click to see full instructions)"
      U4 - ReadRecords - Contacts App 2_instruction: "Create a function called refreshLocalData.\n(Click to see full instructions)"
      U4 - ReadRecords - Contacts App 3_instruction: "Add a call to \"refreshLocalData\"\nto the callback function of the createRecord you use to add a new contact\nto your database. (Click to see full instructions)"
      U4 - ReadRecords - Contacts App 4_instruction: "Create a \"Delete\" button.\n(Click to see full instructions)"
      U4 - ReadRecords - Contacts App 5 make delete work_instruction: "Create an\nevent handler for the \"Delete\" button you created. (Click to see full instructions)"
      U4 - add createRecord to contacts App_instruction: "Add code to your contacts\napp so that newly-added contacts are saved in a table. (Click to see full\ninstructions)"
      U4 - debug column names are case sensitive_instruction: "Change song.title\nto song.Title (capital T).  And run the program.  Check the data table  (Click\nto see full instructions)"
      U4 - deleteRecords 0_instruction: "Use the deleteRecord command with default\nvalues. Verify the record was deleted. (Click for full instructions)."
      U4 - deleteRecords 1_instruction: "Find the id of \"Little Bunny Foo Foo\"\nin the data table \"mySongs\".  Use the deleteRecord command to delete it.  See\nwhat happens when you try to delete an ID a second time. (Click for full Instructions)."
      U4 - deleteRecords 2 delete object_instruction: "Use the song object to delete\nmultiple objects in the database by changing only the \"id\" property. (Click\nfor full Instructions)."
      U4 - deleteRecords 2_instruction: "Using the data viewer, find the id of a\na record you want to delete. Use the deleteRecord command to delete it. (Click\nfor full instructions)."
      U4 - fix contacts by hand in data table_instruction: "Use the data viewer to\nadd rows to the data table.  Add the original hard-coded contacts from your\napp to the database. (Click to see full instructions)"
      U4 - last stage test adding contcts_instruction: "Confirm that new contacts\nyou add are saved to the database.  Verify that after restarting your app,\nthe contacts you added no longer show in the app, but still exist in the database.\n(Click to see full instructions)"
      U4 vigenere cipher 2_instruction: "소개"
      U4L02 - Objects - Template1_instruction: "템플릿"
      U4L02 - Objects - createObject_instruction: "Create an object with at least\n5 values including at least one string and one number. (Click to see full\ninstructions) "
      U4L02 - Objects - eventParameter_instruction: "Trigger both the keyboard and\nmouse event and examine the event objects displayed in the console. Why might\nan object be the best way to store this information? (Click to see full instructions)"
      U4L06 Data Storage 1_instruction: "Fill in your name instead of \"Enter Your\nName\", run the app and click the button. Run it multiple times with different\nnames! Watch the console and use the ‘View Data” button to see how the table\nis updated. As you play around make sure you can explain the purpose of each\nof the circled parts of the diagram.\\r\n\\r\n"
      U4L06 Data Storage 2_instruction: "The app is a continuation of the previous\none we started. Add a text label to collect the users name and use that as\nthe data input for the record.\\r\n\\r\nRun the app and click the button multiple\ntimes and see what happens. Is there a problem you notice? "
      U4L06 Data Storage 3_instruction: "We want to improve the user experience.\nOnce they have submitted their data for storage, it would be nice to clear\nthe textbox.  Update your app to clear the textbox after the data is stored."
      U4L06 Data Storage 4_instruction: "Add a label and drop down box, to your app\nand save the data to your JSON object and add it to your table. Make sure\nto reset the dropdown after the data is stored."
      U4L06 Data Storage 5_instruction: "Add a couple radio buttons or checkboxes\nto our app. Then find a way to collect the data from those. "
      U4L06 Data Storage 6_instruction: " Use one of the getTime() and getUserId()\nblocks to collect additional data. "
      U4L06 Data Storage 7_instruction: "Add a second screen to the sample app we\nhave been building to capture an image from a user. Return to screen 1 after\nthe JSON object has been stored in the table."
      U4L15 Read Data 1_instruction: "Run the level and see what happens. Then edit\nthe code to make it print a different column of information."
      U4L15 Read Data 2_instruction: "Student should create a sentence which puts\ntogether all the pieces from a record.\\r\n\\r\n<<Name>> is <<Age>> years old\nand like <<Food>>"
      U4L15 Read Data 3_instruction: "Print the sentence using the first JSON object\nin the array\\r\n\\r\n"
      U4L15 Read Data 4_instruction: "\\r\nUse a random record from the list of records\nto display your sentence."
      U5 if-else-if movie example_instruction: "Add an else-if statement in order\nto tell the user if their guess is high or low instead of just wrong. (Click\nto see full instructions)"
      U6 - Final Project - Project Level_instruction: "Build your final project here.\n(Click to see full instructions)"
      U6 - updateRecord - Callback Success Parameter_instruction: "Add an if-else\nblock inside the callback function for updateRecord. (Click to see full instructions)"
      U6 - updateRecord - Contacts - Edit UI_instruction: "Set up the UI elements\nneeded to edit contacts. (Click to see full instructions)"
      U6 - updateRecord - Contacts - Edit event handler_instruction: "Write event\nhandlers for the Edit Contacts UI elements. (Click to see full instructions)"
      U6 - updateRecord - Contacts - Save edited contact_instruction: "Use updateRecord\nto store the user's edits in the database. (Click to see full instructions)"
      U6 - updateRecord - Default Block_instruction: "Use updateRecord to change\nthe record for \"Eye of the Tiger.\" (Click to see full instructions)"
      U6 - updateRecord - Update Nonexistent Record_instruction: "Force updateRecord\nto fail by changing the ID of songToUpdate. (Click to see full instructions)"
      Underground Avoiding Lava_instruction: "이 블록들 아래에 용암이 숨어있습니다. 앞으로 이동하기 전에 덮어야 해요. \"if\"(만약) 명령은 여기서 유용할 거에요. 올바른 곳에 \"앞으로 이동\" 명령을 더해서 이 블록을 채굴하세요."
      Underground If Statements_instruction: "퍼즐이 점점 더 어려워지고 있어요. 레드스톤 3개를 채굴하세요. 하지만 용암으로 떨어지지는 마세요. \"if\"(만약) 명령을 사용해서 발견한 용암 위에 조약돌을 놓으세요."
      Underground Iron_instruction: "녹은 용암 속으로 걸어 들어가는 건 좋은 생각이 아니에요. 조약돌을 놓아서 다리를 만든 후 철 블록을 2개 이상 채굴하세요."
      Underground Mine in a Circle_instruction: "다이아몬드 5개와 레드스톤 7개를 얻을 방법을 찾아보세요! 반복 명령 안에서 반복 명령을 사용해서 사각형으로 걸어보세요."
      Underground Mining Coal_instruction: "가장 귀중한 자원은 땅속에서 찾을 수 있어요. 하지만, 땅속은 어두울 수 있지요. 횃불을 2개 이상 놓고 석탄을 2개 이상 채굴하세요."
      Underground Test Level_instruction: "모든 광석을 모아주세요!"
      Unicorn Tag_instruction: "Take a look at this project.  Do you see how it was\nmade?"
      Vigenere_instruction: "Test"
      WhileAdventure_instruction: "Our adventurer wants to collect coins. Can you\nhelp her grab as many as she can using only one remove 1 block?"
      'Widget: Black and White Pixelation_instruction': "Now make your own image!\nWe've started you off with a 10x10 canvas but you can make it whatever size\nyou want. Happy pixeling!"
      'Widget: Color Pixelation_instruction': "Requirements: The icon must be 16x16\npixels. You must use the Pixelation Widget to encode the bits of color information.\nThe image must be encoded with at least 12 bits per pixel."
      'Widget: Text Compression_instruction': "Look for patterns (repeated words\nor phrases) in the text. Enter the patterns you see into the dictionary on\nthe right. As you type entries into the dictionary, the symbol for the entry\nis inserted into the text in place of the pattern."
      XML Scratchpad_instruction: "Using this test level to grab xml for unit tests"
      aE1_instruction: "You chose to make a square napkin! \\r\n\\r\nTo finish, draw\na square with 20 pixel sides. "
      aE2_instruction: "If you place your square loop inside another loop, we call\nthat a nested loop. What do you need to add as an outer loop to make sure\nall 14 napkins line up next to each other?"
      aE3_instruction: "We've got to have a tablecloth!  \\r\n\\r\nTake your row of\n14 napkins and sew 14 of those together with another **outer loop** to make\na cover for our table."
      aE3alternate_instruction: "Alternate"
      aE3alternateB_instruction: "Alternate"
      aE4_instruction: "Alternate"
      aE5_instruction: "Example of puzzle using highest difficulty level shape."
      aE6_instruction: "How many times do you need to loop this to draw half  of\na circle? "
      aE7_instruction: "If you create another loop like this one, but turn left instead\nof right, what happens? \\r\n\\r\nCan you repeat all of that to draw this wave?"
      aE8_instruction: "Now let's loop that whole thing four times to create this\npicture frame. Watch out for the corners - you can't just turn 90 degrees!\n\\r\n\\r\nIf looping a 3 degree turn 60 times makes a half circle, which of\nthese blocks of code will make an additional quarter circle for the corners?"
      aEfreeplay_instruction: "Free Play!"
      allthethings data blocks test_instruction: "Please sign in to test applab levels\n(By design, applab levels only work if signed in. Normally, we make people\nsign in, but this is only enforceable for a whole script and would be annoying\nto do for the allthethings script)."
      allthethings design mode elements_instruction: "Please sign in to test applab\nlevels (By design, applab levels only work if signed in. Normally, we make\npeople sign in, but this is only enforceable for a whole script and would\nbe annoying to do for the allthethings script)."
      allthethings level dataTables_instruction: "Please sign in to test applab levels\n(By design, applab levels only work if signed in. Normally, we make people\nsign in, but this is only enforceable for a whole script and would be annoying\nto do for the allthethings script)."
      allthethings_U3 - Simple Drawing - Rectangle Width and Height_instruction: "Do\nThis"
      allthethings_moviebot_instruction: "This level cloned from \"U3 Digital Assistant\nTarget\""
      allthethings_template_backed1_instruction: "Backed by a template #1. Please\nsign in to test applab levels (By design, applab levels only work if signed\nin. Normally, we make people sign in, but this is only enforceable for a whole\nscript and would be annoying to do for the allthethings script). "
      allthethings_template_backed2_instruction: "Backed by a template #2. Please\nsign in to test applab levels (By design, applab levels only work if signed\nin. Normally, we make people sign in, but this is only enforceable for a whole\nscript and would be annoying to do for the allthethings script)."
      artistDebugVideo1_instruction: "Use the `repeat` loop to add waves to the water."
      artistFunctionsVideo1_instruction: "Follow the instructions to make your own\nfunction."
      artistLoopsK1_instruction: "This is a new type of puzzle called \"Artist\".\nPlay with the level and draw something fun."
      artistLoopsK2_instruction: "Now, use a `repeat` loop to draw this line five\ntimes!"
      artistLoopsK2gradek_artist_loops3_instruction: "Now, use a `repeat` loop to\ndraw this line five times!"
      artistLoopsK3_instruction: "Draw a line eight steps long. This will become\nthe land for our kingdom!"
      artistLoopsK4_instruction: "Now we need a castle with a draw bridge.  Fix the\ncode so that the bridge lays straight instead of falling down."
      artistLoopsK5_instruction: "Now we need to fix the top of the castle. Can you\nloop the code three times?"
      artistLoopsK6_instruction: "Someone is stuck in the tower!  Fix the stairs\nto set them free. "
      artistLoopsK7_instruction: "This tower is lovely, what is downstairs? Build\nanother staircase to find out! "
      artistLoopsK8_instruction: "Wow! There's a garden over there!  Help fix these\nstairs so I can get to it."
      artistLoopsK9_instruction: "**Challenge:**  Lovely! Let's take a walk around\nthe garden."
      artistLoopsKA_instruction: "These stones are in the wrong place.  Help me move\nthem so I don't fall in!"
      artistLoopsKB_instruction: "Look!  It's a theater.  Help me set up the chairs\nso we can all see the stage. "
      artistLoopsKFP_instruction: "Picture time!  Use what you have learned to draw\na picture of what you think the Artist saw on stage."
      beeDebugVideo1_instruction: "모든 꽃꿀을 모으기 위해, 반복 구조를 사용해보세요."
      birdsDebugVideo1_instruction: "Trace the path and lead me to the silly pig.\nAvoid TNT or feathers will fly!"
      brendan hackathon level_instruction: "these are the instructions for my level.  you\nshould do this level and have a good time."
      collector example_instruction: "Put these blocks in order to collect all of\nthe gold and solve the puzzle."
      collectorDebugVideo2_instruction: "Put these blocks in order to collect all\nof the gold and solve the puzzle."
      collectorSkinVideo1_instruction: "Collect all four piles to pass this level."
      collectorSkinVideo2_instruction: "Collect one pile of gold to pass this level."
      course2_playlab_stage17_1_instruction: "Jorge (actor 1) 가 \"Hi\" 라고 말하도록 해볼까요?"
      course2_playlab_stage17_10_instruction: "Waddles의 속도와 배경을 변경하기위해 `when run` 이벤트에 블럭을 추가하세요.\\r\n\\r\n점수를 획득할때까지 Waddles을 움직여보세요"
      course2_playlab_stage17_11_instruction: "자신만의 이야기를 만들어 보세요. 만든 후에는 다른 사람들이 폰에서 볼 수 있도록 알리세요."
      course2_playlab_stage17_2_instruction: "강아지가 어떤 말을 하게 한 후\n고양이가 어떤 말을 하게 해보세요!"
      course2_playlab_stage17_3_instruction: "이 강아지를 고양이에게 가도록 프로그램을 짜보세요!"
      course2_playlab_stage17_4_instruction: "강아지가 고양이에게 가고 강아지가 고양이에게 다가가면 고양이가 \"안녕 \"하도록 프로그램을 짜보세요!"
      course2_playlab_stage17_5_instruction: "문어를 클릭했을 때 'Hello'라고 말하는 프로그램을 만들 수 있나요?"
      course2_playlab_stage17_6_instruction: "위/아래/왼쪽/오른쪽 방향키를 사용해 펭귄이 이리저리 목표지점들로 움직이도록 프로그래밍 해주세요."
      course2_playlab_stage17_7_instruction: "The `repeat forever` block allows you\nto run code over and over forever. Can you attach blocks to move Chomp the\nDino (actor 2) up and down forever?"
      course2_playlab_stage17_8_instruction: "펭귄이 \"Ouch!\"라고 말하고, 공룡에 닿으면 \"충돌 소리\"를 출력하도록 한 후 방향키들을 움직여보세요."
      course2_playlab_stage17_9_instruction: "펭귄이 문어에 닿으면 점수가 올라가게 만든 후 방향키를 눌러 움직여 보세요."
      course3_playlab_stage16_1_instruction: "강아지가 \"hello world\"라고 말하도록 할 수 있을까요?"
      course3_playlab_stage16_2_instruction: "강아지가 어떤 말을 하게 한 후\n고양이가 어떤 말을 하게 해보세요!"
      course3_playlab_stage16_3_instruction: "이 강아지를 고양이에게 가도록 프로그램을 짜보세요!"
      course3_playlab_stage16_4_instruction: "강아지가 고양이에게 가고 강아지가 고양이에게 다가가면 고양이가 \"안녕 \"하도록 프로그램을 짜보세요!"
      course3_playlab_stage16_5_instruction: "문어가 행복한 표정이 되도록 해보세요."
      course3_playlab_stage16_6_instruction: "자신만의 이야기를 만들어 보세요. 만든 후에는 다른 사람들이 폰에서 볼 수 있도록 알리세요."
      course3_playlab_stage17_1_instruction: "문어를 클릭했을 때 'Hello'라고 말하는 프로그램을 만들 수 있나요?"
      course3_playlab_stage17_2_instruction: "위/아래/왼쪽/오른쪽 방향키를 사용해 펭귄이 이리저리 목표지점들로 움직이도록 프로그래밍 해주세요."
      course3_playlab_stage17_3_instruction: "\"repeat forever\" 블럭은 코드를 반복할 수 있도록 해줍니다. 이 블럭을 사용해서 공룡이 위 아래로 반복해서 이동하도록 만들어 볼까요?"
      course3_playlab_stage17_4_instruction: "펭귄이 \"Ouch!\"라고 말하고, 공룡에 닿으면 \"충돌 소리\"를 출력하도록 한 후 방향키들을 움직여보세요."
      course3_playlab_stage17_5_instruction: "펭귄이 문어에 닿으면 점수가 올라가게 만든 후 방향키를 눌러 움직여 보세요."
      course3_playlab_stage17_6_instruction: "Waddles의 속도와 배경을 변경하기 위해 블럭을 추가해 볼까요? 그리고 점수를 획득할 때까지 화살표로 움직여보세요."
      course3_playlab_stage17_7_instruction: "자신만의 이야기를 만들어 보세요. 만든 후에는 다른 사람들이 폰에서 볼 수 있도록 알리세요."
      courseA_artist_loops1_instruction: "This is a new type of puzzle called \"Artist\".\nPlay with the level and draw something fun."
      courseA_artist_loops10_instruction: "Help me put down stones so I don't fall\nin!"
      courseA_artist_loops11_instruction: "Help me build steps to watch the ship\nsail away."
      courseA_artist_loops12_instruction: "The artist saw something funny in the\ndistance.  Draw what you think he saw."
      courseA_artist_loops2_instruction: "Help the artist draw this line two times\nforward."
      courseA_artist_loops3_instruction: "Draw a line forward five times."
      courseA_artist_loops4_instruction: "Now, use a `repeat` loop to draw this line\nfive times!"
      courseA_artist_loops5_instruction: "Draw a line seven steps long. This will\nbecome our horizon."
      courseA_artist_loops6_instruction: "Let's put a nice hill in the back."
      courseA_artist_loops7_instruction: "Use the `repeat` loop to add waves to the\nwater."
      courseA_artist_loops8_instruction: "We need a ladder up to the boat."
      courseA_artist_loops9_instruction: 'Challenge: Fix the stairs.'
      courseA_artist_loops_challenge1_instruction: "You can use a loop to draw many\nlines in a row.\\r\n\\r\nCan you draw a house? Make it look just the way you\nlike it!  Try looking for patterns that repeat!"
      courseA_artist_loops_challenge2_instruction: "Tweet tweet! Can you help me\nmake two bird houses?"
      courseA_artist_loops_challenge3_instruction: "Let's play a game! Draw as many\nX's as you can! Can you get 3 in a row?"
      courseA_collector_loops1_instruction: "Move Laurel around and get as much treasure\nas you can!"
      courseA_collector_loops10_instruction: "Help Laurel get all of the treasure\nfrom this deep valley."
      courseA_collector_loops11_instruction: "Help Laurel get all of the treasure\nfrom this cave."
      courseA_collector_loops12_instruction: "Eureka!  Get as much treasure as you\ncan!"
      courseA_collector_loops2_instruction: "Get all three piles to pass this level."
      courseA_collector_loops3_instruction: "How can Laurel get all five piles of\ntreasure using only one `[E-->]` block?"
      courseA_collector_loops4_instruction: "Fix Laurel's path to get all of this\ntreasure."
      courseA_collector_loops5_instruction: "Use what you learned to get all of the\ntreasure."
      courseA_collector_loops6_instruction: "Add blocks to this code to get all of\nthe treasure."
      courseA_collector_loops7_instruction: "What should you add to this code to\nget all of the treasure?"
      courseA_collector_loops8_instruction: "Write the code to get all of this treasure."
      courseA_collector_loops9_instruction: "**Challenge:** The treasure goes all\nthe way up these stairs!  Write the code to help Laurel get it all."
      courseA_collector_loops_challenge1_instruction: "Can you help me spot some\nbugs? I know which way I want to go, but I'm not sure how many steps to take."
      courseA_collector_loops_challenge2_instruction: "This time you can only use\none of each arrow block. Get all of the treasure! "
      courseA_forVideoTest_artist_instruction: "Use the `repeat` loop to add waves\nto the water."
      courseA_maze_seq1_instruction: "Get the bird to the bad pig!"
      courseA_maze_seq10_instruction: "Challenge: Go around the TNT to get the bird\nto the pig! "
      courseA_maze_seq11_instruction: "Move one way, then another to get the bird\nto the pig."
      courseA_maze_seq12_instruction: "Get that pig! "
      courseA_maze_seq13_instruction: "Get the pig any way you can!"
      courseA_maze_seq2_instruction: "코드를 수정해서 돼지를 잡을 수 있게 해주세요!"
      courseA_maze_seq3_instruction: "Fix the code to get the bird to the pig!"
      courseA_maze_seq4_instruction: "REMOVE a block to get the bird to the pig!"
      courseA_maze_seq4a_instruction: "Get the bird to the pig using the fewest possible\nblocks."
      courseA_maze_seq5_instruction: "Try this one yourself from the beginning."
      courseA_maze_seq6_instruction: "Move one way, then another to get the bird\nto the pig!"
      courseA_maze_seq7_instruction: "Figure out what is missing and then add blocks\nto get the bird to the pig!"
      courseA_maze_seq8_instruction: "Solve this level and get the bird to the pig!"
      courseA_maze_seq9_instruction: "Debug this level by adding blocks to get the\nbird to the pig!"
      courseA_maze_seq_challenge1_instruction: "Debug this level. Remove the extra\nblocks and add the missing blocks. Get the bird to the pig!"
      courseA_maze_seq_challenge2_instruction: "Trace the path and lead me to the\nsilly pig. Avoid TNT or the feathers will fly!"
      courseA_playLab_events1_instruction: "This is a Play Lab level.  Move blocks\nto the workspace and see what happens!"
      courseA_playLab_events2_instruction: "Jorge the Dog wants to say \"Hi there.\"  Can\nyou help him?"
      courseA_playLab_events3_instruction: "Connect the `move left` block to the\n`when left` event block that is already in the workspace."
      courseA_playLab_events4_instruction: "Now, get Jorge to move right when the\n`right` button is clicked."
      courseA_playLab_events5_instruction: "Add events to have Jorge move up and\ndown when the `up` and `down` buttons are pressed."
      courseA_playLab_events6_instruction: "Make this more interesting by changing\nthe background and playing a random sound when Jorge is clicked."
      courseA_playLab_events7_instruction: "Add anything you want to this game.  Can\nyou make the dinosaur disappear when Jorge runs into him?"
      courseA_playlab_events_challenge1_instruction: "Where are my friends hiding?\nCan you write code to show the rest of my friends?"
      courseA_playlab_events_challenge2_instruction: "Let's have a party! Give each\nof my friends something to do when you click or tap them. What do the animals\nsay? What else will happen?"
      courseA_toMakeLoopsVideo_Collector_instruction: "Loops let you do whatever\nis inside over and over again!"
      courseA_video_events_instruction: "Need a better playlab/events combo"
      courseB_artist_loops1_instruction: "This is a new type of puzzle called \"Artist\".\nPlay with the level and draw something fun."
      courseB_artist_loops10_instruction: "Use what you have learned to draw a picture\nof what you think the artist saw when he got home."
      courseB_artist_loops2_instruction: "The Artist is trying to draw a line six\ntimes, but can't get it right.  Can you help?"
      courseB_artist_loops3_instruction: "Help the artist draw a line 7 times to\nmake a garden wall."
      courseB_artist_loops4_instruction: "Now we need to get the soil ready to plant.\nFind the bugs in the code and help the artist prepare the ground. "
      courseB_artist_loops5_instruction: "Time to fix the stairs!  Repeat this pattern\nfive times so the artist can reach the top of the bushes."
      courseB_artist_loops6_instruction: "Climb the vine and see where it goes?"
      courseB_artist_loops7_instruction: "**Challenge:**  It's a hidden garden!\nLet's walk around."
      courseB_artist_loops8_instruction: "Time to head home. Can you fix this ladder\nusing only one block to help the artist get down?"
      courseB_artist_loops9_instruction: "Let's take the short way home, over the\npond. Can you help the artist stay on the stones?"
      courseB_artist_loops_challenge1_instruction: "It's time to toss the dice!\nCan you help me draw these?"
      courseB_artist_loops_challenge2_instruction: "Let's play a game! Draw as many\nX's as you can! Can you get 3 in a row?"
      courseB_collector_loops1_instruction: "This is Laurel the Adventurer!  Can\nyou move her around and get treasure?"
      courseB_collector_loops10_instruction: "Help Laurel get all of the treasure\nfrom this cave."
      courseB_collector_loops11_instruction: "Eureka!  Get as much treasure as you\ncan!"
      courseB_collector_loops2_instruction: "Get all four piles to pass this level."
      courseB_collector_loops3_instruction: "How can Laurel get all five piles of\ntreasure using only one `E -->` block?"
      courseB_collector_loops3_predict1_instruction: "How can Laurel collect all\nfive piles of gold using only one `E -->` block?"
      courseB_collector_loops4_instruction: "Fix Laurel's path to get all of this\ntreasure!"
      courseB_collector_loops5_instruction: "Add to the code from the last puzzle\nto get all of the treasure. "
      courseB_collector_loops6_instruction: "Figure out the code to help Laurel get\nall of the treasure!"
      courseB_collector_loops7_instruction: "Write the code to get all of this treasure."
      courseB_collector_loops8_instruction: "**Challenge: ** The treasure goes all\nthe way down these stairs!  Write the code to help Laurel get it all."
      courseB_collector_loops9_instruction: "*\"Help me get the treasure from this\ndeep valley.\"*"
      courseB_collector_loops_challenge1_instruction: "This time you can only use\none of each arrow block. Get all of the treasure! "
      courseB_collector_loops_challenge2_instruction: "Let's get the treasure! Help\nme across each row then come back to start the next row. Can you find a pattern?"
      courseB_collector_loops_challenge`_instruction: "This time you can only use\none of each arrow block. Get all of the treasure! "
      courseB_collector_prog1_instruction: "This is Laurel the Adventurer!  Can you\nmove her around and get gold?"
      courseB_collector_prog2_instruction: "Four piles of gold!  Collect all four."
      courseB_collector_prog3_instruction: "How can Laurel collect all five piles\nof gold using only one `E -->` block?"
      courseB_maze_seq1_instruction: "Play with these blocks to see what they make\nthe bird do! \\r\n\\r\nGet the bird to the pig to complete the level."
      courseB_maze_seq10_instruction: "Fix the bugs to get the bird to the pig."
      courseB_maze_seq11_instruction: "It's all you!  Get the bird to the pig."
      courseB_maze_seq12_instruction: "Now get that pig any way you can!"
      courseB_maze_seq2_instruction: "*\"A bug! Fix the code to get me to the pig.\"*"
      courseB_maze_seq3_instruction: "*\"Fix the code to get me to the pig!\"*"
      courseB_maze_seq4_instruction: "Add 2 blocks to get the bird to the pig."
      courseB_maze_seq5_instruction: "Now try this puzzle from the start!"
      courseB_maze_seq6_instruction: "Move one way, then another to get the bird\nto the pig!"
      courseB_maze_seq7_instruction: "Figure out what is missing and then add blocks\nto get the bird to the pig!"
      courseB_maze_seq8_instruction: "Your turn!  What do you need to do to get the\nbird to the pig?"
      courseB_maze_seq9_instruction: "Challenge: Move around the TNT to get the bird\nto the pig."
      courseB_maze_seq9_challenge1_instruction: "*Where's that pig hiding now?*"
      courseB_maze_seqCold_instruction: "Challenge: Debug this level by adding blocks\nto get the bird to the pig!"
      courseB_maze_seqOld_instruction: "Go around the TNT to get the bird to the\npig! "
      courseB_maze_seq_challenge1_instruction: "You can only move up to four times\nin each direction. Can you find a path before you run out of blocks?"
      courseB_maze_seq_challenge2_instruction: "Debug this level. These are the right\nblocks, but they're in the wrong order!"
      courseB_playLab_events1_instruction: "See if you can figure out what each block\ndoes."
      courseB_playlab_events2_instruction: "Have Daisy the Dragon say something when\nyou click \"Run\"."
      courseB_playlab_events3_instruction: "Use an event to make Daisy the Dragon\nswitch to a random mood when you click on her."
      courseB_playlab_events4_instruction: "Knight time!  Add an event so that the\nknight moves toward the dragon when the left arrow is clicked."
      courseB_playlab_events5_instruction: "Now add an event so that the knight runs\naway from the dragon when you press the right arrow."
      courseB_playlab_events6_instruction: "Help your knight get all of the flags!\\r\n\\r\nTo\ndo this, you'll need to add events to help the knight move up, down, left,\nand right."
      courseB_playlab_events7_instruction: "Make this game fun by setting the knight\nto vanish when he runs into the dragon on his way to get the flags!  Play\na sound when they collide to make it feel more real."
      courseB_playlab_events8_instruction: "Use your imagination. What can you do\nto make this game more fun?"
      courseB_playlab_eventsFP_instruction: "Use your imagination. What can you do\nto make this game more fun?"
      courseB_playlab_eventsToolbox_instruction: "Finish by playing a sound and making\nthe knight vanish when he runs into the dragon!"
      courseB_playlab_events_challenge1_instruction: "It's time for the Great Animal\nRace! Make the animals move down when you press ▼. Who will run the fastest?"
      courseB_playlab_events_challenge2_instruction: "Let's make the animals disappear\nwhen you click on them! Try playing with the dog now, then help the other\nanimals join in the fun.\\r\nYou can also add sounds and score points to create\na game of Animal Tag!"
      courseB_playlab_events_challenge2_embed_instruction: "Here is your finished\ngame!"
      courseB_playlab_events_challenge2_template_instruction: "Let's make the animals\ndisappear when you click on them! You can also add sounds and score points\nto create a fun game of Animal Tag!"
      courseB_starWars_prog1_instruction: "Help BB-8 get the scrap metal!"
      courseB_starWars_prog10_instruction: "Help BB-8 gather the glowing scrap metal"
      courseB_starWars_prog11_instruction: "Help BB-8 gather the glowing scrap metal"
      courseB_starWars_prog2_instruction: "Help BB-8 gather **all** of the glowing\nscrap metal"
      courseB_starWars_prog3_instruction: "Help BB-8 gather **all** of the glowing\nscrap metal"
      courseB_starWars_prog4_instruction: "Help BB-8 gather the glowing scrap metal"
      courseB_starWars_prog5_instruction: "Help BB-8 gather the glowing scrap metal"
      courseB_starWars_prog6_instruction: "Help BB-8 gather the glowing scrap metal"
      courseB_starWars_prog7_instruction: "Help BB-8 gather the glowing scrap metal"
      courseB_starWars_prog8_instruction: "**Challenge:** Help BB-8 gather the glowing\nscrap metal"
      courseB_starWars_prog9_instruction: "Help BB-8 gather the glowing scrap metal"
      courseC_PlayLab_events1_instruction: "Make Jorge the Dog (actor 1) say \"Hi\nthere.\""
      courseC_PlayLab_events2_instruction: "Can you make Jorge the Dog (actor 1)\nsay something, then have Olive the Cat (actor 2) say something afterward?"
      courseC_PlayLab_events3_instruction: "이 강아지를 고양이에게 가도록 프로그램을 짜보세요!"
      courseC_PlayLab_events4_instruction: "Can you write a program that makes Jorge\n(actor 1) move to Olive the Cat, and have Olive say \"Hi there.\" when Jorge\nreaches her?"
      courseC_PlayLab_events5_instruction: "Can you write a program to make Octavia\nthe Octopus say \"What's new?\" when she is clicked?"
      courseC_PlayLab_events6_instruction: "Now, write a program to make Waddles\nthe Penguin move around using the up / down / left / right keys to hit all\nof the targets!"
      courseC_PlayLab_events7_instruction: "The `repeat forever` block allows you\nto run code over and over forever.  Use this block to move Chomp the Dino\n(actor 2) up and down by 400 pixels forever."
      courseC_PlayLab_events8_instruction: "Can you have Waddles (actor 1) say \"Ouch!\"\nand play a \"hit\" sound if he runs into Chomp? \\r\nWhen you're done, play\nthe game to make that happen."
      courseC_PlayLab_events9_instruction: "Can you add a block to score a point\nwhen Waddles the Penguin (actor1) runs into Octavia the Octopus (actor 3)?\n\\r\nPlay the game and move Waddles with the arrows until you score!"
      courseC_PlayLab_eventsA_instruction: "Add blocks to the `when run` event to\nchange the background scene and the speed of Waddles the Penguin.\\r\n\\r\nPlay\nthe game and move Waddles with the arrows until you score."
      courseC_PlayLab_eventsFP_instruction: "Create your own story. When you're\ndone, click \"Finish\" to share with friends. See story ideas in the hints."
      courseC_PlayLab_events_challenge1_instruction: "Here is a new block that is\nsomewhat complicated. Use it to move Waddles back to the start when he runs\ninto the Dinosaur and when he scores a point. This will make your game more\nchallenging and fun!\\r\n\\r\nPlay the game and move Waddles with the arrows\nuntil you score enough points."
      courseC_PlayLab_events_challenge1_xy_blocks_instruction: "Here is a new block\nthat is somewhat complicated. Use it to move Waddles back to the start when\nhe runs into the Dinosaur and when he scores a point. This will make your\ngame more challenging and fun!\\r\n\\r\nPlay the game and move Waddles with\nthe arrows until you score enough points."
      courseC_artist_loop1_instruction: "Let's add some pizazz!"
      courseC_artist_loops1_instruction: "*\"Zombie.  Draw!\"*\\r\n\\r\nThe zombie\nwants to draw a line from where he is to the garden of sunflowers.  Can you\nhelp him?  \\r\n*(The garden is 250 pixels away)*  "
      courseC_artist_loops1a_instruction: "Get the artist to the center of the play\narea, then draw a bird using a sticker. "
      courseC_artist_loops2_instruction: "Now that the zombie knows his way, help\nhim dig holes along the path to plant more flowers!"
      courseC_artist_loops2a_instruction: "Now, use a loop to spin your bird around\n10 times with a 36 degree turn."
      courseC_artist_loops3_instruction: "Excellent!  Now that the flowers have sprouted,\nhelp the zombie place a friend every 50 pixels to guard over them until they\nare grown."
      courseC_artist_loops3a_instruction: "Now add a bat!"
      courseC_artist_loops4_instruction: "The zombie has found an empty farm!  Can\nyou help him bring it to life by stamping animal stickers every 100 pixels\naround the border?"
      courseC_artist_loops4a_instruction: "Try jumping forward by 75 pixels."
      courseC_artist_loops5_instruction: "Great!  Now it's time to make a fence\ninside to keep the animals out.   \\r\n\\r\n"
      courseC_artist_loops5a_instruction: "Try new stickers!"
      courseC_artist_loops5b_instruction: "Try adding lines!"
      courseC_artist_loops6_instruction: "What should the zombie put inside of the\ngarden?  \\r\n\\r\n\\r\n"
      courseC_artist_loops6a_instruction: "Add another sticker!"
      courseC_artist_loops7a_instruction: "Play with the loops and angles."
      courseC_artist_loops8a_instruction: "Now try something on your own!"
      courseC_artist_loopsPre1a_instruction: "Time to spin that line around!"
      courseC_artist_loopsPrePre1a_instruction: "Get the artist to the center of\nthe play area, then draw a line. "
      courseC_artist_loopsTemplate_instruction: "Excellent!  Now that the flowers\nhave sprouted, help the zombie place a friend every 50 pixels to guard over\nthem until they are grown."
      courseC_artist_loopsTemplateA_instruction: "Get the artist to the center of\nthe play area, then draw a bird using a sticker. "
      courseC_artist_prog1_instruction: "Play with the blocks in the toolbox to see\nwhat they do!"
      courseC_artist_prog2_instruction: "Drag blocks onto the screen to have the\nartist draw over the grey lines in the picture. (Each line is 100 pixels long)"
      courseC_artist_prog3_instruction: "Each side of the inner square is 100 pixels\nand all of the angles are 90 degrees."
      courseC_artist_prog4_instruction: "Finish Starla's rocket so she can chase\nher pet."
      courseC_artist_prog5_instruction: "이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:\n세 변의 길이는 모두 같습니다."
      courseC_artist_prog6_instruction: "Draw this diamond with 200 pixel sides."
      courseC_artist_prog7_instruction: "**Challenge:** This tag is a special one!  Can\nyou figure out how to draw the outline?"
      courseC_artist_prog8_instruction: "One more tag.  This is a triangle for Pi.\\r\n(Each\nside is 150 pixels)"
      courseC_artist_prog_challenge1-doghouse_instruction: "Let's build a dog house\nfor Jorge!"
      courseC_artist_prog_challenge1_instruction: "Draw rooms for each of the animals.\nThere are many different ways to solve this puzzle, so have some fun. The\nshortest possible solution is 6 blocks, but use as many as you like!"
      courseC_artist_prog_challenge2_instruction: "*Help me paint the yellow lines\non this road!*"
      courseC_collector_loops_challenge2_instruction: "Let's hunt for treasure -\nusing loops! Help the collector by debugging this code. Get all of the treasure!"
      courseC_collector_prog1_instruction: "Play around with the blocks to see if\nyou can help Laurel collect some treasure."
      courseC_collector_prog2_instruction: "Move Laurel to the treasure, then use\n`collect` to pick it up."
      courseC_collector_prog3_instruction: "Order these blocks to collect the treasure\nand solve the puzzle."
      courseC_collector_prog4_instruction: "Put these blocks in order to collect\nall of the treasure and solve the puzzle."
      courseC_collector_prog5_instruction: "These blocks are in the wrong order.\nCan you fix them?"
      courseC_collector_prog6_instruction: "Reorder the blocks to collect all of\nthe treasure."
      courseC_collector_prog7_instruction: "Use blocks from the toolbox to collect\nall of the treasure."
      courseC_collector_prog8_instruction: "*\"Keep up the good work! Help me collect\nall of the treasure.\"*"
      courseC_collector_prog9_instruction: "*\"Let's get all of the treasure!\"*"
      courseC_collector_progA_instruction: "Help Laurel collect all of the treasure."
      courseC_collector_progB_instruction: "Collect as many coins as you can to finish\nthe stage!"
      courseC_collector_prog_challenge1_instruction: "Look carefully! Can you collect\nall *10* pieces of treasure?"
      courseC_collector_prog_challenge2_instruction: "There are *20* pieces of treasure\nto be found. Collect at least half to finish this challenge!"
      courseC_harvester_loops1_instruction: "Use loops to pick all of the pumpkins."
      courseC_harvester_loops10_instruction: "Collect all of the corn and all of\nthe pumpkins."
      courseC_harvester_loops11_instruction: "Collect all of the corn and all of\nthe pumpkins."
      courseC_harvester_loops2_instruction: "Can you combine two different loops\nto move toward the pumpkins, then collect them all?"
      courseC_harvester_loops3_instruction: "Collect all of the pumpkins."
      courseC_harvester_loops4_instruction: "Collect all of the corn and all of the\npumpkins."
      courseC_harvester_loops5_instruction: "Collect all of the corn and all of the\npumpkins."
      courseC_harvester_loops6_instruction: "Collect all of the corn and all of the\npumpkins."
      courseC_harvester_loops7_instruction: "Collect all of the corn and all of the\npumpkins."
      courseC_harvester_loops8_instruction: "**Challenge:** Collect all of the corn\nand all of the pumpkins."
      courseC_harvester_loops9_instruction: "Collect all of the corn and all of the\npumpkins."
      courseC_harvester_loops_challenge1_instruction: "Collect all of the corn."
      courseC_harvester_loops_challenge2_instruction: "Collect all of the lettuce.\nAvoid the trees and fields!"
      courseC_maze_debugging1_instruction: "Fix the code to help get Scrat get to\nthe acorn."
      courseC_maze_debugging10_instruction: "Debug this level by rearranging and\nchanging blocks to get me to the pig!"
      courseC_maze_debugging2_instruction: "Use your debugging skills to get Scrat\nto the acorn."
      courseC_maze_debugging3_instruction: "Remove blocks to get Scrat to the acorn!"
      courseC_maze_debugging4_instruction: "Someone has their directions mixed up!\nCan you help?"
      courseC_maze_debugging5_instruction: "Debug this level by rearranging and changing\nblocks."
      courseC_maze_debugging6_instruction: "Figure out what is wrong and get Scrat\nto the acorn."
      courseC_maze_debugging7_instruction: "**Challenge:** Debug this level by rearranging,\nadding, and deleting blocks."
      courseC_maze_debugging8_instruction: "Debug this level to get Scrat to the\nacorn."
      courseC_maze_debugging9_instruction: "Debug this level to get Scrat to the\nacorn."
      courseC_maze_debugging_challenge1_instruction: "*\"Am I just going around in\ncircles?\"*"
      courseC_maze_debugging_challenge2_instruction: "*\"If I turn too often, I might\nget dizzy! Help me reach the acorn with only four `turn` commands.\"*"
      courseC_maze_loops1_instruction: "Can you get the bird to the pig?"
      courseC_maze_loops10_instruction: "You are doing great! Keep it up!"
      courseC_maze_loops11_instruction: "You are almost there! This time, choose\nany path you like!"
      courseC_maze_loops2_instruction: "Can you get the bird to the pig by creating\na loop that uses only one `move forward` block inside of a `repeat`?"
      courseC_maze_loops3_instruction: "Solve this puzzle by creating a loop!"
      courseC_maze_loops4_instruction: "In this puzzle, two `repeat` loops will help\nyou get the bird to the pig with the fewest number of blocks!"
      courseC_maze_loops5_instruction: "*\"Get me to the pig as quickly as possible!\"*"
      courseC_maze_loops6_instruction: "Loops even work with more than one block\ninside!  Can you loop this sequence?"
      courseC_maze_loops7_instruction: "Use what you learned in other puzzles!"
      courseC_maze_loops8_instruction: "Challenge: Combine ideas from the last few\npuzzles to complete this level."
      courseC_maze_loops9_instruction: "You are doing great! Keep it up!"
      courseC_maze_loops_challenge1_instruction: "Now Scrat wants to try using loops\nto find his acorn! "
      courseC_maze_loops_challenge2_instruction: "Let's hunt for treasure - using\nloops! Help the collector by debugging this code. Get all of the treasure!"
      courseC_maze_programming1_instruction: "For this puzzle, drag all of the blocks\ntogether and click \"Run\" to watch it go!"
      courseC_maze_programming2_instruction: "Drag an extra `move forward` block\nout of the toolbox to finish your code."
      courseC_maze_programming3_instruction: "There is one extra block that is going\nto cause the bird to crash. Throw it away by dragging it back to the toolbox."
      courseC_maze_programming4_instruction: "Avoid TNT or feathers will fly!"
      courseC_maze_programming5_instruction: "Avoid the TNT."
      courseC_maze_programming6_instruction: "\"Keep calm and help me find the bad\npig. Otherwise I might get angry!\""
      courseC_maze_programming7_instruction: "**Challenge:** This code has a lot\nof bugs. You'll need to remove some blocks and add others."
      courseC_maze_programming8_instruction: "*\"Keep calm and help me find the bad\npig.\"*"
      courseC_maze_programming8_predict1_instruction: "*\"Keep calm and help me find\nthe bad pig.\"*"
      courseC_maze_programming9_instruction: "*\"Now, help me sneak up on the pig\nany way you want to!\"*"
      courseC_maze_programming_challenge1_instruction: "*\"The pig is hiding! Can\nyou help me find a way around?\"*"
      courseC_maze_programming_challenge2_instruction: "Sometimes there is more than\none way to solve the same problem. Sometimes it's faster to go backwards\nthan it is to go forwards!"
      courseC_puppy_loops10_instruction: "You are doing great! Keep it up!"
      courseC_puppy_loops11_instruction: "You are almost there! This time, choose\nany path you like!"
      courseC_puppy_loops8_instruction: "Challenge: Combine ideas from the last few\npuzzles to complete this level."
      courseC_puppy_loops8courseC_maze_loops8_instruction: "Challenge: Combine ideas\nfrom the last few puzzles to complete this level."
      courseC_puppy_loops9_instruction: "You are doing great! Keep it up!"
      courseC_starWars_loops1_instruction: "BB-8 will pick up any metal scraps along\nthe path where he moves. Use 5 of the same block to get BB-8 to pick up all\nof the scrap metal in the play area."
      courseC_starWars_loops10_instruction: "You are doing great! Keep it up!"
      courseC_starWars_loops10_predict2_instruction: "You are doing great! Keep it\nup!"
      courseC_starWars_loops11_instruction: "You are almost there! This time, choose\nany path you like!"
      courseC_starWars_loops1_predict1_instruction: "BB-8 will pick up any metal\nscraps along the path where he moves. Use 5 of the same block to get BB-8\nto pick up all of the scrap metal in the play area."
      courseC_starWars_loops2_instruction: "Can you get BB-8 to pick up all of the\nscrap metal by creating a loop that uses only one block inside of a `repeat`\nblock?"
      courseC_starWars_loops4_instruction: "In this puzzle, two `repeat` loops will\nhelp you get BB-8 to all of the scrap metal with the fewest number of blocks!"
      courseC_starWars_loops5_instruction: "*Get BB-8 to pick up all the scrap metal\nas quickly as possible!*"
      courseC_starWars_loops6_instruction: "Loops even work with more than one block\ninside!  Can you loop this sequence?"
      courseC_starWars_loops7_instruction: "Can you try to get all the scrap metal\nusing just one loop? Try programming it all out then finding the repeating\ncode to place in a loop."
      courseC_starWars_loops9_instruction: "Use what you have learned to pick up\nall of the scrap metal!"
      courseD_artist_binary1_instruction: "Use the blocks below to have the artist\ndraw \"01010101\" in binary in the first row."
      courseD_artist_binary2_instruction: "Run this code to see how the artist uses\nbinary to draw this pattern."
      courseD_artist_binary3_instruction: "Which of the binary strings below could\nyou loop 8 times to draw this image?"
      courseD_artist_binary4_instruction: "Can you draw this pattern by looping just\nthree binary digits (0s and 1s)?"
      courseD_artist_binary5_instruction: "Each binary string below represents one\nrow of this picture. \\r\n\\r\nCan you rearrange them so it draws a smiley face\ninstead of a frown?"
      courseD_artist_binary6_instruction: "이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것 일까요?"
      courseD_artist_binary7_instruction: "이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?"
      courseD_artist_binary8_instruction: "Finish the code to create this drawing."
      courseD_artist_binary8_predict1_instruction: "Finish the code to create this\ndrawing."
      courseD_artist_binaryFP_instruction: "Here's a higher resolution canvas to\ndraw on - 16 pixels by 16 pixels!\\r\n\\r\nSee what happens when we start to\nget creative with the bits!"
      courseD_artist_binary_challenge1_instruction: "Try using nested loops to complete\nthis drawing."
      courseD_artist_binary_challenge2_instruction: "Try using nested loops to complete\nthis drawing."
      courseD_artist_functions10_instruction: "This time, use lines of 8 hexagons\nwith 25 pixel sides."
      courseD_artist_functions2_instruction: "This time, use the `draw a square`\nfunction to create the glasses. \\r\n"
      courseD_artist_functions3_instruction: "You can make this drawing by adding\na repeat block."
      courseD_artist_functions4_instruction: "Now that you can draw a star, try drawing\nfour stars!"
      courseD_artist_functions5_instruction: "Draw only those three stars to finish\nthis puzzle."
      courseD_artist_functions6_instruction: "Make this window by drawing a square,\nthen turning 90 degrees before drawing another, and so on."
      courseD_artist_functions7_instruction: "Try solving this puzzle by creating\n`draw a window` and calling it five times. Watch out for the door!"
      courseD_artist_functions8_instruction: "Challenge: Create as many functions\nas you think you need to make this drawing of 50 pixel squares."
      courseD_artist_functions9_instruction: "Create this image using only the blocks\nprovided."
      courseD_artist_nestedLoops1_instruction: "Draw a triangle to kickstart this\nstage.  \\r\n(Each side is 100 pixels long and you'll need to turn 120 degrees\nfor each exterior angle.)"
      courseD_artist_nestedLoops10_instruction: "Take the squares from before, but\nthis time only make 7 of them, and lay them out in a row."
      courseD_artist_nestedLoops1a_instruction: "Now loop the triangle 6 times. "
      courseD_artist_nestedLoops2_instruction: "This time, complete the puzzle with\nthe fewest number of blocks possible."
      courseD_artist_nestedLoops3_instruction: "Use your new skills to quickly draw\nthe last row of windows for this building.\\r\n\\r\nThe windows are 20 pixel\nsquares, each 20 pixels apart."
      courseD_artist_nestedLoops4_instruction: "Great!  Do the same thing with these\ncircles.\\r\n"
      courseD_artist_nestedLoops5_instruction: "What happens if you also turn 90\ndegrees between circles?"
      courseD_artist_nestedLoops6_instruction: "Edit blocks within your existing\ncode to make this image."
      courseD_artist_nestedLoops7_instruction: "Use what you've learned to make\nthis drawing.\\r\n"
      courseD_artist_nestedLoops8_instruction: "Using what you have learned in the\nlast couple of puzzles, build this image from the beginning."
      courseD_artist_nestedLoops9_instruction: "**Challenge:** Can you figure out\nhow to make a picture like this?"
      courseD_artist_nestedLoops9_predict1_instruction: "**Challenge:** Can you figure\nout how to make a picture like this?"
      courseD_artist_nestedLoopsFP_instruction: "Now it's your turn.  Take the skills\nyou have learned and make something that you love!"
      courseD_artist_nestedLoopsPre1_instruction: "Create a triangle to kickstart\nthis stage."
      courseD_artist_nestedLoops_challenge1_instruction: "Can you figure out how\nto make a picture like this?"
      courseD_artist_nestedLoops_challenge2_instruction: "Can you figure out how\nto make a picture like this?"
      courseD_artist_project1_instruction: "Draw a small shape, between **20 and\n50** pixels wide.  It can be any shape that you like.  \\r\n"
      courseD_artist_project1a_instruction: "Draw a stair-step pattern that uses\nturns between 75 and 105 degrees."
      courseD_artist_project2_instruction: "Now take your shape and draw two or three\nin a row!"
      courseD_artist_project2a_instruction: "Now, turn around 180 degrees and draw\nthe stair pattern again!"
      courseD_artist_project3_instruction: "Let's spin that line of shapes around!"
      courseD_artist_project3a_instruction: "Spin that shape around 5 or 6 times\nin a circle."
      courseD_artist_project4_instruction: "Time to layer those shapes!"
      courseD_artist_project4a_instruction: "Try playing around with what you've\ncreated. Draw whatever you like!\\r\n- What happens if you use two different\nangles in your stair step pattern?\\r\n- What happens if you make your diamond\npattern longer or shorter?\\r\n- What does it look like to draw two snowflakes\non top of one another?"
      courseD_artist_project5_instruction: "Play with the snowflakes!"
      courseD_artist_ramp11_instruction: "Now make a square using Artist!"
      courseD_artist_ramp12_instruction: "Use what you've learned to draw this triangle\ninside of a square."
      courseD_bee_conditionals1_instruction: "Check to see if there's a flower under\nthe cloud. If there's a flower, get nectar."
      courseD_bee_conditionals10_instruction: "Collect all of the nectar and make\nall of the honey."
      courseD_bee_conditionals1_predict1_instruction: "Check to see if there's a\nflower under the cloud. If there's a flower, get nectar."
      courseD_bee_conditionals2_instruction: "Check underneath every cloud to see\nif it is hiding a flower before you get nectar.  \\r\n"
      courseD_bee_conditionals3_instruction: "Help the bee collect all of the nectar.\n\\r\n\\r\nYou can only collect nectar from flowers, but you can check any space\nto see if there is a flower."
      courseD_bee_conditionals4_instruction: "Get all of the nectar using as few\nblocks as possible."
      courseD_bee_conditionals5_instruction: "Collect all of the nectar using as\nfew blocks as possible"
      courseD_bee_conditionals6_instruction: "Some of these clouds might have honeycombs\nunder them.  Be sure to check if a honeycomb is hiding behind each cloud!"
      courseD_bee_conditionals7_instruction: "Use the `if/else` block to collect\nnectar at flowers and make honey at honeycomb."
      courseD_bee_conditionals7_predict2_instruction: "Use the `if/else` block to\ncollect nectar at flowers and make honey at honeycomb."
      courseD_bee_conditionals8_instruction: "Collect nectar if there is a flower.\\r\nOtherwise,\nmake honey (because there is a honeycomb)."
      courseD_bee_conditionals9_instruction: "Collect all of the nectar or make all\nthe honey."
      courseD_bee_conditionals_challenge1_instruction: "Collect all of the nectar\nor make all the honey."
      courseD_bee_conditionals_challenge2_instruction: "Collect all of the nectar\nor make all the honey."
      courseD_bee_conditionals_challenge3_instruction: "Collect all of the nectar\nor make all the honey."
      courseD_bee_debugging1_instruction: "Fix the error(s) to collect all of the\nnectar."
      courseD_bee_debugging2_instruction: "Fix the error(s) to collect all of the\nnectar."
      courseD_bee_debugging3_instruction: "Fix the error(s) to collect all of the\nnectar and make all of the honey."
      courseD_bee_debugging4_instruction: "Fix the error(s) to make all of the honey."
      courseD_bee_debugging5_instruction: "Challenge: All of the commands that you\nneed are already here...now use your debugging skills to figure out how to\nsolve this puzzle."
      courseD_bee_debugging6_instruction: "Challenge:  Fix the errors to collect\nall of the nectar and make all of the honey."
      courseD_bee_debugging9_instruction: "Help the bee fix the code to get all the\nnectar."
      courseD_bee_debugging_challenge1_instruction: "Watch how the bees gets the\nnectar. Can you use the same kind of pattern to help the bee make all of honey?"
      courseD_bee_debugging_challenge2_instruction: "Watch how the bees gets the\nnectar. Can you use the same kind of pattern to help the bee make all of honey?"
      courseD_bee_nestedLoops1_instruction: "Help the bee collect all of the nectar."
      courseD_bee_nestedLoops2_instruction: "This time, help the bee collect all\nof the nectar using as few blocks as possible."
      courseD_bee_nestedLoops2_predict1_instruction: "This time, help the bee collect\nall of the nectar using as few blocks as possible."
      courseD_bee_nestedLoops3_instruction: "Collect all of the nectar from each\nflower."
      courseD_bee_nestedLoops5_instruction: "Collect all of the nectar from each\nflower and make honey at the honeycomb. "
      courseD_bee_nestedLoops6_instruction: "Make all of the nectar."
      courseD_bee_nestedLoops7_instruction: "Challenge: Figure out how to get all\nof the nectar using only the blocks available."
      courseD_bee_nestedLoops8_instruction: "Collect all of the nectar from each\nflower and make honey at the honeycomb. "
      courseD_bee_nestedLoops9_instruction: "Make all of the honey."
      courseD_bee_nestedLoops9_predict2_instruction: "Make all of the honey."
      courseD_bee_nested_loops_challenge1_instruction: "Let's hunt for treasure\n- using loops! Help the collector reach at least two piles of treasure using\nonly the blocks in your toolbox."
      courseD_bee_nested_loops_challenge2_instruction: "Let's hunt for treasure\n- using loops! Help the collector reach at least two piles of treasure using\nonly the blocks in your toolbox."
      courseD_collector_debugging1_instruction: "Fix the error(s) to collect all\nof the treasure."
      courseD_collector_debugging2_instruction: "Fix the error(s) to collect all\nof the treasure."
      courseD_collector_debugging3_instruction: "Fix the error(s) to collect all\nof the treasure."
      courseD_collector_debugging4_instruction: "Fix the error(s) to collect all\nof the treasure."
      courseD_collector_debugging5_instruction: "Challenge: All of the commands that\nyou need are already here...now use your debugging skills to figure out how\nto solve this puzzle."
      courseD_collector_debugging6_instruction: "Challenge: Use your debugging skills\nto fix the errors and collect all of the treasure."
      courseD_collector_debugging7_instruction: "Challenge: All of the commands that\nyou need are already here...now use your debugging skills to figure out how\nto solve this puzzle."
      courseD_collector_debugging_challenge2_instruction: "Are you an expert of nested\nloops? Use what you have learned so far to collect all of the treasure!"
      courseD_collector_nested_loops_challenge2_instruction: "Let's hunt for treasure\n- using loops! Help the collector reach at least two piles of treasure using\nonly the blocks in your toolbox. It is possible to collect all 4."
      courseD_collector_ramp10_instruction: "Help Laurel collect all of the treasure."
      courseD_collector_ramp8_instruction: "Help Laurel collect all of the treasure."
      courseD_collector_ramp9_instruction: "Help Laurel collect all of the treasure."
      courseD_collector_until_challenge1_instruction: "Are you an expert of nested\nloops? Use what you have learned so far to collect all of the treasure!"
      courseD_debugging_1_instruction: "Fix the error(s) to collect all of the nectar."
      courseD_debugging_2_instruction: "Fix the error(s) to collect all of the nectar."
      courseD_debugging_3_instruction: "모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요."
      courseD_debugging_4_instruction: "Fix the error(s) to make all of the honey."
      courseD_debugging_5_instruction: "Challenge: All of the commands that you need\nare already here...now use your debugging skills to figure out how to solve\nthis puzzle."
      courseD_debugging_6_instruction: "Challenge:  Fix the errors to collect all\nof the nectar and make all of the honey."
      courseD_farmer_condLoops1_instruction: "Use conditionals to make sure that\nyou pick all of the corn, and nothing else."
      courseD_farmer_condLoops2_instruction: "Help the farmer collect both corn and\nlettuce from the field."
      courseD_farmer_condLoops3_instruction: "*\"Corn, lettuce, AND pumpkins! Help\nme harvest them all.\"*"
      courseD_farmer_condLoops4_instruction: "Help the farmer pick all of the lettuce\nin each cluster before moving on to the next bunch."
      courseD_farmer_condLoops4a_instruction: "Help the farmer pick all of the lettuce\nin each cluster before moving on to the next bunch."
      courseD_farmer_condLoops5_instruction: "This field has clusters of corn, lettuce,\nand pumpkins all growing together.  Can you collect them all?"
      courseD_farmer_condLoops6_instruction: "Can you figure out how to pick the\npumpkin?  Make sure to collect all of the corn along the way!"
      courseD_farmer_condLoops7_instruction: "Challenge: Collect all of the corn\nand lettuce, then pick the pumpkin."
      courseD_farmer_condLoops8_instruction: "Collect all of the corn and lettuce,\nthen pick the pumpkin."
      courseD_farmer_condLoops9_instruction: "Collect all of the corn and lettuce,\nthen pick the pumpkin."
      courseD_farmer_condLoops9_predict1_instruction: "Collect all of the corn and\nlettuce, then pick the pumpkin."
      courseD_farmer_condLoops_challenge1_instruction: "Turn right at the pumpkins.\nCollect everything to complete the level. Each hidden crop has only one corn\nor lettuce."
      courseD_farmer_condLoops_challenge2_instruction: "Collect everything to complete\nthe level."
      courseD_farmer_condLoops_challenge2_clone_instruction: "Collect everything\nto complete the level."
      courseD_farmer_conditionals1_instruction: "Move to the pile of dirt and use\nthe `remove` block to remove it."
      courseD_farmer_conditionals10_instruction: "Flatten all of these piles using\nas few blocks as possible. "
      courseD_farmer_conditionals2_instruction: "Move to the hole and fill it with\nsix shovelfuls of dirt, using the `fill` block."
      courseD_farmer_conditionals3_instruction: "Use as few blocks as possible to\nsolve this puzzle."
      courseD_farmer_conditionals4_instruction: "Help the farmer remove this entire\npile using a `while` loop."
      courseD_farmer_conditionals5_instruction: "Help me remove all of this dirt.\n"
      courseD_farmer_conditionals6_instruction: "Use the `while` loop to easily fill\nall of the holes."
      courseD_farmer_conditionals7_instruction: "Fill in the hole at the end of each\nof these paths."
      courseD_farmer_conditionals8_instruction: "Challenge: Fill all of these holes\nusing as few blocks as possible. "
      courseD_farmer_conditionals9_instruction: "Flatten all of these piles using\nas few blocks as possible. "
      courseD_farmer_until_challenge2_instruction: "Use If/Else blocks to follow\nthe curvy path. At each corner, use the `remove 1` command in a loop to clear\nthe piles."
      courseD_farmer_while1_instruction: "Move to the pile of dirt and use the `remove`\nblock to remove it."
      courseD_farmer_while10_instruction: "Flatten all of these piles using as few\nblocks as possible. "
      courseD_farmer_while10_predict2_instruction: "Flatten all of these piles using\nas few blocks as possible. "
      courseD_farmer_while2_instruction: "Move to the hole and fill it with six shovelfuls\nof dirt, using the `fill` block."
      courseD_farmer_while3_instruction: "Use as few blocks as possible to solve\nthis puzzle."
      courseD_farmer_while4_instruction: "Help the farmer remove this entire pile\nusing a `while` loop."
      courseD_farmer_while4_predict1_instruction: "Help the farmer remove this entire\npile using a `while` loop."
      courseD_farmer_while5_instruction: "Help me remove all of this dirt. "
      courseD_farmer_while6_instruction: "Use the `while` loop to easily fill all\nof the holes."
      courseD_farmer_while7_instruction: "Fill in the hole at the end of each of\nthese paths."
      courseD_farmer_while8_instruction: "Challenge: Fill all of these holes using\nas few blocks as possible. "
      courseD_farmer_while9_instruction: "Flatten all of these piles using as few\nblocks as possible. "
      courseD_farmer_while_challenge1_instruction: "Fill all of the holes and remove\nall of the piles."
      courseD_farmer_while_challenge2_instruction: "Fill all of the holes and remove\nall of the piles."
      courseD_harvester_nested_loops_challenge1-broken_instruction: "\"I need some\nhelp on the farm! Help me harvest this corn using only the blocks in your\ntoolbox.\""
      courseD_harvester_nested_loops_challenge1_instruction: "\"I need some help\non the farm! Help me harvest this corn using only the blocks in your toolbox.\""
      courseD_maze_loops_challenge1_instruction: "Let's hunt for treasure - using\nloops! Help the collector reach at least two piles of treasure using only\nthe blocks in your toolbox."
      courseD_maze_nestedLoops3_instruction: "Get the zombie to the sunflower using\nthe fewest number of blocks possible."
      courseD_maze_nestedLoops4_instruction: "Get the zombie to the sunflower using\nthe fewest blocks possible!  "
      courseD_maze_nestedLoops5_instruction: "Get the zombie to the sunflower using\nthe fewest number of blocks possible!"
      courseD_maze_nestedLoops6_instruction: "Get the zombie to the sunflower using\nonly the blocks available."
      courseD_maze_ramp1_instruction: "For this puzzle, drag all of the blocks together\nand click \"Run\" to watch it go!"
      courseD_maze_ramp2_instruction: "Drag an extra `move forward` block out of\nthe toolbox, then attach all blocks to `when run` to finish your code."
      courseD_maze_ramp3_instruction: "There is one extra block that is going to\ncause the bird to crash. Throw it away by dragging it back to the toolbox."
      courseD_maze_ramp4_instruction: "Avoid TNT or feathers will fly!"
      courseD_maze_ramp5_instruction: "Avoid the TNT."
      courseD_maze_ramp6_instruction: "\"Keep calm and help me find the bad pig.\nOtherwise I might get angry!\""
      courseD_maze_ramp7_instruction: "Get the bird to the pig!"
      courseD_maze_until1_instruction: "Get the angry bird to the pig."
      courseD_maze_until10_instruction: "Help the zombie get to the sunflower."
      courseD_maze_until10_predict2_instruction: "Help the zombie get to the sunflower."
      courseD_maze_until2_instruction: "Now, use the `repeat until` loop to do the\nsame thing without specifying how many times to move forward and turn."
      courseD_maze_until3_instruction: "Get the bird to the pig."
      courseD_maze_until4_instruction: "Can you get the zombie to the sunflower using\nonly the blocks that are available?"
      courseD_maze_until5_instruction: "Use the `if` block to help the zombie decide\nwhen to turn, then get the zombie to the sunflower."
      courseD_maze_until6_instruction: "Help the zombie get to the sunflower."
      courseD_maze_until7_instruction: "Help the zombie get to the sunflower."
      courseD_maze_until8_instruction: "Help the zombie get to the sunflower."
      courseD_maze_until9_instruction: "**Challenge:** Avoid the chompers and help\nthe zombie get to the sunflower."
      courseD_maze_until_challenge_instruction: "No hints, just challenge. Get the\nzombie to the sunflower."
      courseD_maze_until_challenge1-delete-this-copy_instruction: "No hints, just\nchallenge. Get the zombie to the sunflower."
      courseD_maze_until_challenge1_instruction: "No hints, just challenge. Get the\nzombie to the sunflower."
      courseD_maze_until_challenge2_instruction: "No hints, just challenge. Get the\nzombie to the sunflower."
      courseD_pixelation_instruction: "Encode an image of anything you like using\nbinary. The binary language will be represented with '0' and '1' only."
      courseD_playLab_cond1_instruction: "Get Pegleg to the dragon to solve this\npuzzle."
      courseD_playLab_cond2_instruction: "Give Pegleg a point every time he makes\nit to the dragon. "
      courseD_playLab_cond3_instruction: "1) Make the dragon change between random\nemotions every second.  \\r\n2) Make it so when Pegleg gets to the dragon,\nhe gets 2 points if the dragon is happy and 1 otherwise."
      courseD_playLab_cond3b_instruction: "1) Make the dragon change between random\nemotions every second.  \\r\n2) Make it so when Pegleg gets to the dragon,\nhe gets 2 points if the dragon is happy and 1 otherwise."
      courseD_playLab_cond4_instruction: "Add some code so that the ninja (actor\n3) starts chasing Pegleg as soon as the game begins.  End the game as a loss\nif the ninja catches him."
      courseD_playLab_cond5_instruction: "Add a `repeat forever` loop that continuously\nchecks if the score is greater than 5, then ends the game as a win when it\nis."
      courseD_playLab_cond6_instruction: "1)  Slow the ninja down before you set\nhim to chase the pirate.  \\r\n\\r\n2)  If the pirate is greater than 225 pixels\ndown, set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase**\nthe pirate.  \\r\n\\r\n3)  If the pirate is in the safe zone, wait one second,\nthen deduct a point as long as he stays beneath the octopus line."
      courseD_playLab_cond6cloneForTest_instruction: "Testing"
      courseD_playLab_condFP_instruction: "Now, build your own game to show off to\nyour friends!"
      courseE_artist_concept1_instruction: "Recreate this image. "
      courseE_artist_concept4_instruction: "Recreate this drawing using 13 blocks\nor fewer."
      courseE_artist_functions1_instruction: "Help the zombie draw glasses using\nsquares with sides of 100 pixels.  \\r\nThe bridge between the glasses is 75\npixels long."
      courseE_artist_functions10_instruction: "This time, use lines of 8 hexagons\nwith 25 pixel sides."
      courseE_artist_functions2_instruction: "This time, use the `draw a square`\nfunction to create the glasses. \\r\n"
      courseE_artist_functions3_instruction: "You can make this drawing by adding\na repeat block."
      courseE_artist_functions4_instruction: "Now that you can draw a star, try drawing\nfour stars!"
      courseE_artist_functions5_instruction: "Draw only those three stars to finish\nthis puzzle."
      courseE_artist_functions6_instruction: "Make this window by drawing a square,\nthen turning 90 degrees before drawing another, and so on."
      courseE_artist_functions7_instruction: "Try solving this puzzle by creating\n`draw a window` and calling it five times. Watch out for the door!"
      courseE_artist_functions8_instruction: "Challenge: Create as many functions\nas you think you need to make this drawing of 50 pixel squares."
      courseE_artist_functions9_instruction: "Create this image using only the blocks\nprovided."
      courseE_artist_functions_challenge_instruction: "Once you define a function,\nyou can call it over and over again - whenever and wherever you want! Try\nthis code to see how it works, then change it to make your own impressive\ndesign!"
      courseE_artist_functions_challenge1_instruction: "Once you define a function,\nyou can call it over and over again - whenever and wherever you want! Try\nthis code to see how it works, then change it to make your own impressive\ndesign!"
      courseE_artist_functions_challenge2_instruction: "Try this code to see how\nit works, then make the program your own!"
      courseE_artist_ramp10_instruction: "Now, drag the code for the last triangle\ninto a new loop to spin it around and make a snowflake!"
      courseE_artist_ramp11_instruction: "Now make a square using Artist!"
      courseE_artist_ramp12_instruction: "Use what you've learned to draw this triangle\ninside of a square."
      courseE_artist_ramp8_instruction: "Now make a square using Artist!"
      courseE_artist_ramp9_instruction: "Use what you've learned to draw this triangle."
      courseE_bee_concept1_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      courseE_bee_concept2_instruction: "Help the bee make all of the honey. You\ncan only make honey at a honeycomb, but you can check any space to see if\nthere is a honeycomb."
      courseE_bee_concept3_instruction: "Collect all of the nectar using  as few\nblocks as possible."
      courseE_bee_concept4_instruction: "Uh oh! The bee is not sure if he should\ncollect nectar or make honey. Can you help him out?"
      courseE_bee_concept5_instruction: "Help the bee collect the nectar from the\nflowers?"
      courseE_bee_functions1_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요."
      courseE_bee_functions10_instruction: "Solve this puzzle by creating a function\nthat helps the bee go get all of the honey before returning back to the main\npath."
      courseE_bee_functions2_instruction: "Use the `get 2 nectar` function to collect\nthe nectar from each flower."
      courseE_bee_functions3_instruction: "함수들은 어떤 작업을 수행하는데 블럭들의 집합이라고 볼 수 있습니다.  \\r\n\\r\n\"5번 모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      courseE_bee_functions4_instruction: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는 함수입니다.  \\r\n\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      courseE_bee_functions5_instruction: "Now write the function to collect nectar\nfrom the flowers."
      courseE_bee_functions6_instruction: "Create a function and call it to collect\nnectar at each flower and make honey at each honeycomb."
      courseE_bee_functions7_instruction: "Create your own function that goes down\na path, gets nectar, makes honey, and then returns the bee to the top of the\npath. Collect all the nectar and make all the honey!"
      courseE_bee_functions8_instruction: "Create a function that collects all of\nthe nectar from each flower."
      courseE_bee_functions9_instruction: "Create a function to collect all of the\nnectar from each flower."
      courseE_bee_ramp14_instruction: "Get nectar while there is nectar, **else**\nmake the honey. "
      courseE_bee_ramp17_instruction: "Use what you have learned to solve this puzzle."
      courseE_collector_ramp10_instruction: "Help Laurel collect all of the treasure."
      courseE_collector_ramp8_instruction: "Help Laurel collect all of the treasure."
      courseE_collector_ramp9_instruction: "Help Laurel collect all of the treasure."
      courseE_farmer_concept1_instruction: "Can you write a program that fills these\nholes until the ground is even?"
      courseE_farmer_concept2_instruction: "Collect all of the pumpkins."
      courseE_farmer_concept3_instruction: "Fill in the hole at the end of each of\nthese paths."
      courseE_farmer_concept4_instruction: "좀더 어려운 것을 해보아요! 반복 구조 안에 반복 구조를 넣어봤는데, 다음 줄을 그리려면 화가를 다시 이전 위치로 돌려 놓아야 해요. 전체 격자를 그리기 위해서 가장 바깥쪽 반복의 끝에 어떤 블록들을 놓아야 할까요?"
      courseE_farmer_functions1_instruction: "Help the farmer get to the pumpkin\nand pick it."
      courseE_farmer_functions10_instruction: "No one knows what these sprouts will\nbecome.  Use `if` statements to write the code to check and harvest each one.   "
      courseE_farmer_functions10b_instruction: "Figure out which function to use\nand which one to delete, then solve this puzzle!"
      courseE_farmer_functions1a_instruction: "Now help the farmer pick the corn,\nlettuce, **and** pumpkin."
      courseE_farmer_functions2_instruction: "Now, there will be a different number\nof pumpkins each time you run the program.   \\r\n\\r\nUse the `while` block\nto pick only as many pumpkins as you need."
      courseE_farmer_functions2a_instruction: "We're going to check lots of squares\nfor crops in the next few puzzles.  Let's move everything into a function\nto make it easier."
      courseE_farmer_functions2aALT_instruction: "We're going to check lots of squares\nfor crops in the next few puzzles.  Let's move everything into a function\nto make it easier."
      courseE_farmer_functions2b_instruction: "Help the farmer pick the corn, lettuce,\nand pumpkin."
      courseE_farmer_functions3_instruction: "What happens when the paths to the\npumpkins are all different lengths?   \\r\n\\r\nGet them all with as few blocks\nas possible."
      courseE_farmer_functions3b_instruction: "Now help the farmer pick the corn,\nlettuce, **and** pumpkin."
      courseE_farmer_functions3c_instruction: "Which set of blocks helps the farmer\ncheck for produce and pick it when it is available? Drag that code into a\nfunction, then call your function from inside the `while path ahead` loops\n(after the `move forward` block)."
      courseE_farmer_functions4_instruction: "Great!  Now you have code that will\nwork to get pumpkins from any size path.\\r\n\\r\nLet's drag that code into\na function so we can use it in lots of ways...but first use it to solve this\npuzzle again."
      courseE_farmer_functions4b_instruction: "Use your new function to solve this\npuzzle."
      courseE_farmer_functions5_instruction: "How can you change your program to\nget this function to work for each of these paths?"
      courseE_farmer_functions5a_instruction: "How can you change your program to\nget this function to work for each of these paths?"
      courseE_farmer_functions5b_instruction: "The crops are now growing in clusters.  Add\nsome new `while` loops to your function to make sure you get all of the produce."
      courseE_farmer_functions5c_instruction: "Your function will come in handy here."
      courseE_farmer_functions6_instruction: "*\"Lettuce try something new!\"*\\r\n\\r\nHere's\nsome code to collect all of the lettuce.  Move it into a function so we can\nuse it later."
      courseE_farmer_functions6b_instruction: "Pick all of the produce."
      courseE_farmer_functions6c_instruction: "What do you need to add this program\nto collect all of the produce?"
      courseE_farmer_functions7_instruction: "Use your functions to solve this puzzle."
      courseE_farmer_functions7b_instruction: "Make a second function that lets the\nfarmer get all of the produce down a path, then brings her back to where she\nbegan."
      courseE_farmer_functions8_instruction: "**Challenge:**  Solve this puzzle with\nas few blocks as possible."
      courseE_farmer_functions8b_instruction: "**Challenge:** Get the farmer to the\npumpkin and collect all of the lettuce and corn along the way. "
      courseE_farmer_functions9_instruction: "Use conditionals to simplify your program."
      courseE_farmer_predict1_instruction: "Pick lettuce if there is lettuce. Otherwise,\npick corn."
      courseE_farmer_ramp11_instruction: "This puzzle also uses nested loops.  Can\nyou figure out how?"
      courseE_farmer_ramp11a_instruction: "Pick lettuce only while there is still\nlettuce to pick. "
      courseE_farmer_ramp12_instruction: "Now use nested loops (`repeat` and `while`)\nto solve this puzzle."
      courseE_farmer_ramp12a_instruction: "Pick lettuce if there is lettuce. Otherwise,\npick corn."
      courseE_farmer_ramp13_instruction: "Pick corn if there is corn, and pick lettuce\nwhile there is lettuce."
      courseE_farmer_ramp15_instruction: "Solve this puzzle using only the blocks\navailable."
      courseE_farmer_ramp16_instruction: "**Challenge:** Solve this puzzle with the\nfewest number of blocks."
      courseE_maze_predict1_instruction: "This code includes a new block. What do\nyou think would happen if you press the \"Run\" block?"
      courseE_maze_ramp1_instruction: "For this puzzle, drag all of the blocks together\nand click \"Run\" to watch it go!"
      courseE_maze_ramp13_instruction: "Time for one last puzzle to pull it all together!"
      courseE_maze_ramp2_instruction: "Drag an extra `move forward` block out of\nthe toolbox, then attach all blocks to `when run` to finish your code."
      courseE_maze_ramp3_instruction: "There is one extra block that is going to\ncause the bird to crash. Throw it away by dragging it back to the toolbox."
      courseE_maze_ramp4_instruction: "Avoid TNT or feathers will fly!"
      courseE_maze_ramp5_instruction: "Avoid the TNT."
      courseE_maze_ramp6_instruction: "\"Keep calm and help me find the bad pig.\nOtherwise I might get angry!\""
      courseE_maze_ramp7_instruction: "Use what you've learned to get the bird to\nthe pig!"
      courseE_maze_ramp_predict1_instruction: "This code includes a new block. What\ndo you think would happen if you press the \"Run\" block?"
      courseE_multi_maze_ramp5_instruction: "Avoid the TNT."
      courseE_playLab_exampleProject2_instruction: "Here's all of your code to choose\na card - try adding some other fun features!"
      courseE_playLab_scaffold1_instruction: "Choose a background and map, and pick\nan actor to be your game's hero."
      courseE_playLab_scaffold2_instruction: "Use event handlers and actions to make\nyour hero move.\\r\n"
      courseE_playLab_scaffold3_instruction: "Add two or more additional actors to\nyour game and make them move."
      courseE_playLab_scaffold4_instruction: "Find some interesting ways to change\nthe score in your game. Get the score to show something other than 0 to continue."
      courseE_playLab_scaffold5_instruction: "Now spend some time making sure the\ngame works the way you want. Include a way to win or lose your game, then\nplay until you meet one of those conditions."
      courseE_playLab_scaffold6_instruction: "You've finished! Now you can play\nyour game or share it with your friends and classmates!"
      courseE_video_createFunctions_instruction: "We don't have a video for creating\nfunctions, yet. This is a placeholder."
      courseF_artist_for1_instruction: "Experiment with the `for` loop and play with\nthe `counter` variable."
      courseF_artist_for10_instruction: "Free Play: Try using the `counter` variable\nwith other drawing elements to make magical images like this one."
      courseF_artist_for2_instruction: "Create this stack of triangles that goes\nfrom 50 pixel to 100 pixel sides."
      courseF_artist_for3_instruction: "These triangles go from 20 pixel sides to\n200 pixel sides, and each triangle is 20 pixels larger than the last. "
      courseF_artist_for4_instruction: "These squares start at 15 pixels long. The\nlargest is 300 pixels long, and each square is 15 pixels larger than the last.\n"
      courseF_artist_for5_instruction: "Just one little change to the code from the\nlast image can create this drawing. Can you figure out what that change is?"
      courseF_artist_for6_instruction: "Recreate your code from the last level, but\nturn 89 degrees to create this twisted square spiral."
      courseF_artist_for7_instruction: "Make three small changes to the code from\nthe last level to get this!"
      courseF_artist_for8_instruction: "Take the angle down to 72 degrees to get\na spiraled pentagon."
      courseF_artist_for9_instruction: "**Inspiration:**  Use the counter inside\nthe `set alpha` block to get this faded center."
      courseF_artist_for_Template_instruction: "Try using some of the code from the\nlast level, but turning 89 degrees to create this twisted square spiral."
      courseF_artist_for_challenge1_instruction: "Can you figure out how to re-create\nthis drawing?"
      courseF_artist_for_challenge2_instruction: "Can you figure out how to re-create\nthis drawing with a single loop?"
      courseF_artist_fwp1_instruction: "Edit the function 'draw a square' to find\nbugs."
      courseF_artist_fwp2_instruction: "Edit the function to accept a parameter called\n`length`."
      courseF_artist_fwp2_predict1_instruction: "Edit the function to accept a parameter\ncalled `length`."
      courseF_artist_fwp3_instruction: "Create a function called 'draw a square'\nand use it to outline these four boxes using parameters."
      courseF_artist_fwp4_instruction: "Edit this function to add a parameter for\nthe number of sides in your polygon."
      courseF_artist_fwp5_instruction: "Use the function from the last puzzle to\ndraw this series of shapes.  "
      courseF_artist_fwp6_instruction: "Challenge: Edit `draw a spiral edge` to use\n`length` and `sides` parameters, then recreate these shapes."
      courseF_artist_fwp7_instruction: "Finish off the `draw a spiral edge` function\nto also ask for a minimum length for the center of the spiral."
      courseF_artist_fwp8_instruction: "Can you figure out how to make this drawing\nusing the function that you just created?"
      courseF_artist_fwp9_instruction: "Freeplay: Draw something awesome! Play with\nthe pen width to see how different your drawings look!"
      courseF_artist_fwp_challenge1_instruction: "Try running this program, and make\nchanges to see what happens. Can you figure out how it works? (Or delete it\nand replace it with something totally different)"
      courseF_artist_fwp_challenge2_instruction: "Use what you learned in the previous\nlevel to draw an image like this. Note: The code becomes more simple if you\nincorporate parameters. "
      courseF_artist_ramp10_instruction: "Now, drag the code for the last triangle\ninto a new loop to spin it around and make a snowflake!"
      courseF_artist_ramp8_instruction: "Now make a square using Artist!"
      courseF_artist_ramp9_instruction: "Use what you've learned to draw this triangle."
      courseF_artist_variables1_instruction: "Let's draw an equilateral triangle\nthat is exactly 50 pixels long on each side."
      courseF_artist_variables10_instruction: "Here's your code from the last puzzle.  Try\nediting the variable in other ways.  "
      courseF_artist_variables2_instruction: "Now draw three of those triangles right\nnext to each other.   "
      courseF_artist_variables3_instruction: "Move the length of 50 into a variable\nso we can use it in the next few puzzles."
      courseF_artist_variables4_instruction: "Now, use the `length` variable to have\nthe artist jump forward and down by `length` pixels between triangles."
      courseF_artist_variables5_instruction: "Add another set of loops at the end\nof your code to add three more triangles. This time, move forward and up!"
      courseF_artist_variables6_instruction: "Now make the triangles to be 60 pixels\nwide, with 60 pixel jumps.  "
      courseF_artist_variables6a_instruction: "Build this design where the squares\nhave 80 pixel sides and the artist jumps 80 pixels over and down between each\none."
      courseF_artist_variables7_instruction: "Draw a triangle with 150 pixels sides.\n"
      courseF_artist_variables8_instruction: "Rebuild the triangle code from the\nlast puzzle, but this time use the `set length to` block to reset the `length`\nvariable to `length`+10 at the end of each loop iteration."
      courseF_artist_variables9_instruction: "See what happens when you repeat the\ncode from the last puzzle 30 times instead of only 3!  Feel free to make your\nlines any color or pattern for some extra zest."
      courseF_artist_variablesFP_instruction: "**Freeplay:** Take what you've learned\nand make your own drawing. "
      courseF_artist_variables_10_instruction: "Here's your code from the last puzzle.  Try\nediting the variable in other ways.  "
      courseF_artist_variables_2_instruction: "Now use another loop to draw three\nof those triangles right next to each other.   \\r\nYou can nest the code from\nyour last puzzle inside.\\r\n"
      courseF_artist_variables_5_instruction: "Add another set of loops at the end\nof your code to add three more triangles. This time, move forward and up!"
      courseF_artist_variables_6_instruction: "OOPS! We actually need the triangles\nto be 60 pixels wide, with 60 pixel jumps.  \\r\nAren't you glad you're using\na variable?"
      courseF_artist_variables_6a_instruction: "Build this design where the squares\nhave 80 pixel sides and the artist jumps 80 pixels over and down between each\none."
      courseF_artist_variables_9_instruction: "See what happens when you repeat the\ncode from the last puzzle 30 times instead of only 3!\\r\n\\r\nFeel free to\nmake your lines any color or pattern for some extra zest."
      courseF_artist_variables_FP_instruction: "**Freeplay:** Take what you've learned\nand make your own drawing. \\r\n\\r\nHow can you use variables with squares,\npentagons, or hexagons?"
      courseF_artist_variables_challenge1_instruction: "You've now learned everything\nyou need to know to make a pattern like this! This puzzle is meant to be difficult.  Can\nyou stick with it until you figure out the solution?"
      courseF_artist_variables_challenge1a_instruction: "You've now learned everything\nyou need to know to make a pattern like this! This puzzle is meant to be difficult.  Can\nyou stick with it until you figure out the solution?"
      courseF_artist_variables_challenge2_instruction: "You've now learned everything\nyou need to know to make a pattern like this! This puzzle is meant to be difficult.  Can\nyou stick with it until you figure out the solution?"
      courseF_bee_conditionals10_instruction: "Collect all of the nectar and make\nall of the honey."
      courseF_bee_conditionals1_predict1_instruction: "Check to see if there's a\nflower under the cloud. If there's a flower, get nectar."
      courseF_bee_conditionals2_instruction: "Check underneath each cloud to see\nif it is hiding a flower before you get nectar.  \\r\n"
      courseF_bee_conditionals3_instruction: "Help the bee collect all of the nectar.\n\\r\n\\r\n"
      courseF_bee_conditionals4_instruction: "Get all of the nectar using as few\nblocks as possible."
      courseF_bee_conditionals5_instruction: "Collect all of the nectar using as\nfew blocks as possible"
      courseF_bee_conditionals7_predict2_instruction: "Use the `if/else` block to\ncollect nectar at flowers and make honey at honeycomb."
      courseF_bee_conditionals8_instruction: "Collect nectar if there is a flower.\\r\nOtherwise,\nmake honey (because there is a honeycomb)."
      courseF_bee_for1_instruction: "Collect the nectar from each flower using the\nfewest blocks possible."
      courseF_bee_for10_instruction: "**Challenge:** Take what you've learned about\n`for` loops and try to solve this problem. "
      courseF_bee_for11_instruction: "What should your increment be to collect 15,\nthen 12, then 9, 6, 3 nectar?"
      courseF_bee_for2_instruction: "Write the code to help the bee collect all of\nthe nectar.\\r\n"
      courseF_bee_for3_instruction: "Try this puzzle using the `for` loop and the\n`counter` variable to see how much shorter your code becomes."
      courseF_bee_for4_instruction: "Help the bee collect all of the nectar."
      courseF_bee_for5_instruction: "Use the `counter` variable twice to solve this\npuzzle."
      courseF_bee_for6_instruction: "Try gathering this nectar by counting down from\n5 to 1 by 1."
      courseF_bee_for7_instruction: "Try collecting these flowers using an increment\nof 2."
      courseF_bee_for8_instruction: "You've got this! What should your increment\nbe to collect 3, 6, 9, 12, 15 nectar?"
      courseF_bee_for9_instruction: "Use the `counter` variable to navigate this\ngarden with the fewest number of blocks possible."
      courseF_bee_for_challenge1_instruction: "Use this for loop to collect all of\nthe nectar. There are a few actions that you will want to repeat 'counter'\ntimes."
      courseF_bee_for_challenge2_instruction: "Solve this puzzle using the fewest\nnumber of blocks possible."
      courseF_bee_for_challenge3_instruction: "Solve this puzzle using the fewest\nnumber of blocks possible."
      courseF_bee_functions2_instruction: "Use the `get only nectar` function to\ncollect the nectar from each flower."
      courseF_bee_functions3_instruction: "Click \"edit\" to put code inside the\n`only make honey` function, then use it to solve this puzzle."
      courseF_bee_functions3a_instruction: "Write a function that gets nectar if\nthe bee is at a flower, otherwise it gets honey.  Use your function to solve\nthe puzzle!"
      courseF_bee_functions4_instruction: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는 함수입니다.  \\r\n\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      courseF_bee_functions5_instruction: "Now write the function to collect nectar\nfrom the flowers."
      courseF_bee_functions5a_instruction: "Use the `move and check` function to\ncollect all of the nectar."
      courseF_bee_functions6_instruction: "Create a function and call it to collect\nall of the nectar at each flower or make all of the honey at each honeycomb."
      courseF_bee_functions7_instruction: "Collect all the nectar and make all the\nhoney!"
      courseF_bee_functions8a_instruction: "Collect all the nectar or make all of\nthe honey!"
      courseF_bee_functions_challenge1_instruction: "Create a new function to collect\nall the nectar and honey while there is a path ahead. Use it to complete the\npuzzle!"
      courseF_bee_functions_challenge2_instruction: "Use everything you have learned\nto complete this puzzle!"
      courseF_bee_functions_challenge2_recursion_instruction: "Collect all the nectar\nor make all of the honey!"
      courseF_bee_fwp2_instruction: "Pull this code into a function, then call the\nfunction to check this row for nectar."
      courseF_bee_fwp3_instruction: "Let's see if the function makes collecting\nthese three rows of nectar any easier."
      courseF_bee_fwp4_instruction: "Add a `length` parameter to the function so\nthat it will still work when the row is a different length."
      courseF_bee_fwp5_instruction: "Use this function to collect the nectar."
      courseF_bee_fwp6_instruction: "Build a short and sweet solution to this puzzle."
      courseF_bee_fwp7_instruction: "**Challenge:** Modify your function to make\nhoney as well."
      courseF_bee_fwp8_instruction: "Use your new function to solve this spiral."
      courseF_bee_fwp9_instruction: "Use your new function to solve this puzzle."
      courseF_bee_fwp9_predict1_instruction: "Use your new function to solve this\npuzzle."
      courseF_bee_fwp_challenge1_instruction: "Use one `for loop` in a function to\ncollect all of the corn. The same `for loop` can count to different maximum\nvalues by using the `length` parameter."
      courseF_bee_fwp_challenge2_instruction: "Use one `for loop` in a function to\ncollect all of the vegetables in the row. Make the `for loop` can count to\ndifferent maximum values by using the `length` parameter. Make your program\nas short as possible by using a second `for loop` outside the function."
      courseF_farmer_ramp11_instruction: "This puzzle also uses nested loops.  Can\nyou figure out how?"
      courseF_maze_predict1_instruction: "This code includes a new block. What do\nyou think would happen if you press the \"Run\" block?"
      courseF_maze_ramp1_instruction: "For this puzzle, connect all of the blocks\nfrom the workspace together below the `when run` event and click \"Run\" to\nwatch it go!"
      courseF_maze_ramp13_instruction: "Time for another Angry Birds puzzle to pull\nit all together!"
      courseF_maze_ramp15_instruction: "Use what you've learned to get the bird\nto the pig!"
      courseF_maze_ramp2_instruction: "Drag a `repeat` block out of the toolbox and\nattach it to the `when run` event.   Place the `move forward` block inside\nto finish your code."
      courseF_maze_ramp4_instruction: "Avoid TNT or feathers will fly!"
      courseF_maze_ramp5_instruction: "Avoid the TNT."
      courseF_maze_ramp6_instruction: "\"Keep calm and help me find the bad pig.\nOtherwise I might get angry!\""
      courseF_maze_ramp7_instruction: "Use what you've learned to get the bird to\nthe pig!"
      courseF_playlab_variables0_instruction: "This is Pirate Pegleg.  He's awfully\nhard to understand these days!"
      courseF_playlab_variables1_instruction: "This is Pirate Pegleg.  He's awfully\nhard to understand these days!"
      courseF_playlab_variables1a_instruction: "Variables can be used to store text\nthat you want to use later.  Have Kiki, the soccer player,  scream \"Goal!\"\nby assigning that text to the `shout` variable."
      courseF_playlab_variables2_instruction: "Now, decode Pirate Pegleg's speech\nby changing the value of the variables in just two places! \\r\n"
      courseF_playlab_variables2a_instruction: "Now, decode Pirate Pegleg's speech\nby changing the value of the variables in just two places! \\r\n"
      courseF_playlab_variables2b RYAN CLONE_instruction: "Insert the variable `color`\ninto the middle of a sentence by putting it into the empty slot in the `join`\nblock."
      courseF_playlab_variables2b_instruction: "Insert the variable `color` into\nthe middle of a sentence by putting it into the empty slot in the `join` block."
      courseF_playlab_variables3_instruction: "The `ask` block will automatically\nstore whatever the user answers into the variable of your choice."
      courseF_playlab_variables3b_instruction: "Help Kiki have a conversation with\nBrian by using the variable `age` in all of the places where age `12` should\nbe used. "
      courseF_playlab_variables3bEdit_instruction: "Help Kiki have a conversation\nwith Brian by using the variable `A1` in all of the places where age `12`\nshould be used. "
      courseF_playlab_variables3b_josh_instruction: "Help Kiki have a conversation\nwith Brian by using the variable `age` in all of the places where age `12`\nshould be used. "
      courseF_playlab_variables4_instruction: "Can you find the correct variable\nin the toolbox to fill in the slot?"
      courseF_playlab_variables4b_instruction: "Put the variables in the correct\nplaces to create this conversation."
      courseF_playlab_variables5_instruction: "Can you find the correct variable\nin the toolbox to fill in the slot?"
      courseF_playlab_variables5b_instruction: "Put all of the variables in the correct\nplace so that Pegleg's story makes sense."
      courseF_playlab_variables5c RYAN Copy_instruction: "Let's combine the `ask`\nblock with an `if/else` statement to make a game!"
      courseF_playlab_variables5c_instruction: "Let's combine the `ask` block with\nan `if/else` statement to have some fun!"
      courseF_playlab_variables6b_instruction: "Join the variables together to make\na fun story that takes more than one speech bubble to tell."
      courseF_playlab_variables6c_instruction: "In the rest of this stage, we're\ngoing to build a game that you control!"
      courseF_playlab_variables7b_instruction: "Create some questions and weave the\nanswers together into your very own story."
      courseF_playlab_variables7c_instruction: "Make the game do something by asking\nthe user to guess a color."
      courseF_playlab_variables8b_instruction: "Use what you've learned to create\nan improv scene between the actors."
      courseF_playlab_variables8c_instruction: "Use the variables to make the game\nmore personal."
      courseF_playlab_variables_challenge1_instruction: "Use these blocks to make\nthe actors share a knock-knock joke. Change the setup and punchline to tell\nyour own joke!"
      courseF_playlab_variables_challenge2_instruction: "Now for a game of tag! This\ngame will use variables to keep track of points.  Tag Cat to get 2 points.\nTag Penguin to get 3 points.  Get exactly 10 points to win!\\r\nBut be careful,\nwhen Cat and Penguin tag each other, they take points away.\\r\n\\r\nAdd the\nblocks necessary to make this game work the way it's been explained.  How\nwill you get Dog to move in all directions using the arrow keys?  How will\nyou add points when Dog tags Cat or Penguin?  How will you subtract points\nwhen Cat and Penguin touch?"
      courseF_video_createFunctions_instruction: "We don't have a video for creating\nfunctions, yet. This is a placeholder."
      course_playlab_variables1_instruction: "This is Pirate Pegleg.  He's awfully\nhard to understand these days!"
      course_playlab_variables2_instruction: "Now, decode Pirate Pegleg's speech\nby changing the value of the variables in just two places! \\r\n"
      course_playlab_variables3_instruction: "Now, decode Pirate Pegleg's speech\nby changing the value of the variables in just two places! \\r\n"
      coursef_explore_CYOA_Witch_instruction: "You can do whatever you want in play\nlab! Here's an example of choose your own adventure story in play lab."
      coursef_explore_playlab2_instruction: "You can do whatever you want in play\nlab! Here's an example of story in play lab."
      coursef_explore_playlab_cat_game_instruction: "You can do whatever you want\nin play lab! Here's an example of game you can make."
      coursef_maze_ramp3_instruction: "There is one extra block that is going to\ncause the bird to crash. Throw it away by dragging it back to the toolbox."
      drawings!_instruction: "Draw the equilateral triangle - all the sides are the\nsame!"
      eventsIntro_instruction: "Need a better playlab/events combo"
      frozen circle function in circle_instruction: "이제 20개의 원을 겹치고, 각각을 18도씩 회전시키세요."
      frozen circle function with parameter_instruction: "원하는 크기로 그릴 수 있는 \"원 그리기\" 블럭이 있습니다. 이 블럭을 사용해 5 크기의 원과 10 크기의 원을 그릴 수 있겠어요?"
      frozen circle function_instruction: "새로운 \"원 그리기\" 블럭을 이용해 10개의 원을 겹쳐 그리세요. 원을 그리기 위해 점프 하는 것을 잊지 마세요."
      frozen circle_instruction: "원은 특별한 도형입니다. 원을 그리기 위해서 물음표 부분에 어떤 수가 들어가야 할까요?"
      frozen cross rotate dense_instruction: '이제 90번 반복해 보세요. 360도를 회전하려면 90도를 몇 번 회전해야 할까요? 힌트: 생각보다 작은 수입니다.'
      frozen cross rotate_instruction: "이제 10번 반복해보세요. 각 선들을 그리면서 회전하기 위해서 몇 도가 필요할까요?"
      frozen cross_instruction: "더하기 기호를 만들기 위해서 이 명령어들을 \"반복\" 블럭 안에 넣어보세요.\n엘사가 앞 뒤로 움직일 수 있는 것 아시죠?"
      frozen diamond mini snowflake_instruction: "모든 눈송이들이 서로 다른 모양을 하고 있다는 것을 아시나요? 평행 사변형을 4번 그리기 위해 \"반복\"블럭을 사용하고, 각각을 90도 만큼씩 회전시켜 새로운 눈송이를 만들어보세요."
      frozen diamond snowflake_instruction: "이제, 평행 사변형을 10번 그릴 수 있도록 반복 블럭을 사용하고, 각각을 36도 만큼씩 오른쪽으로 돌려 새로운 눈송이를 그려보겠습니다."
      frozen diamond_instruction: "이 블록들을 반복 블록 안에 넣어서 평행사변형을 만들어보세요.\n사각형하고 비슷하지만 각이 다릅니다. 4개의 각이 모두 90도가 아니라, 한 가지는 60도 이고 다른 한가지는 120도 입니다."
      frozen freeplay_instruction: "여러분은 이제 진짜 화가가 된 것 같아요! 겨울왕국을 만들어 보세요."
      frozen line_instruction: "안녕하세요! 저는 아렌델의 엘사입니다. 선 1개를 그릴 수 있도록 도와주세요."
      frozen perpendicular_instruction: "이제 두 개의 선을 90도 만큼 교차시켜 그릴 수 있는지 살펴보세요. \"회전\"블럭과 \"이동\" 블럭을 사용해야 할 것 입니다."
      frozen snowflake branch_instruction: "\"눈송이 가지 만들기\" 블럭을 이용해 3개의 가지로 뻗어나가는 그럴 듯한 눈송이를 만들어보세요."
      frozen snowflake full_instruction: "이제 이쁜 눈송이를 만들기 위해 8번 반복해 보세요."
      frozen snowflower_instruction: "아주 복잡한 눈송이 모양도 아주 간단한 모양들을 이용해 만들 수 있습니다. 5크기의 원을 5개, 10크기의 원을 5개 이용해 패턴을 만들 수 있겠어요?"
      frozen square iterative_instruction: "사각형을 만들기 위한 과정에 반 정도 왔습니다. 4개의 선을 모아 사각형을 그려보세요."
      frozen square loop 3x_instruction: "이제 3개의 사각형을 회전시켜 만들어 보세요! 새로운 사각형을 그리기 전에 120도 만큼 회전하는 것을 잊지 마세요."
      frozen square loop_instruction: "안녕하세요. 저는 아렌델의 안나입니다!\n더 적은 블록들을 사용하는 \"반복\" 블록을 이용해서 사각형을 1개 만들어보세요.\n사각형 1개를 만들기 위해서 \"반복\" 블록 안 (???) 값으로 얼마나 넣어야 할까요?"
      frozen square snowflake_instruction: "\"반복\" 블록을 사용해서 사각형을 10번 만들어 보세요.\n삼각형을 한 번씩 그릴 때마다, 회전 블록을 이용해서 36 도 만큼 씩 회전시켜주세요."
      grade1_adventurer_loops1_instruction: "Four piles of gold!  Collect all four."
      grade1_adventurer_loops10_instruction: "Help me get all of the gold from this\ncave."
      grade1_adventurer_loops2_instruction: "How can Laurel collect all five piles\nof gold using only one `E -->` block?"
      grade1_adventurer_loops3_instruction: "Can you fix Laurel's path to get all\nof this gold?"
      grade1_adventurer_loops4_instruction: "Add to the code from the last puzzle\nto get all of the gold. "
      grade1_adventurer_loops5_instruction: "What should you add to this code to\nget all of the gold?"
      grade1_adventurer_loops6_instruction: "Write the code to get all of this gold."
      grade1_adventurer_loops7_challenge_instruction: "**Challenge: ** The gold goes\nall the way down these stairs!  Write the code to help me get it all."
      grade1_adventurer_loops8_challenge_instruction: "Challenge: Try this staircase\nnow! It has an extra spike at the end you'll have to climb."
      grade1_adventurer_loops9_instruction: "Help me get the gold from this deep\nvalley."
      grade1_adventurer_loopsFP_instruction: "Eureka!  Collect as much gold as you\ncan!"
      grade1_adventurer_loopsPre_instruction: "This is Laurel the Adventurer!  Can\nyou move her around and get gold?"
      grade1_artist_loops1_instruction: "The Artist is trying to draw a line six\ntimes, but can't get it right.  Can you help?"
      grade1_artist_loops2_instruction: "Help the artist draw a line 7 times to make\na garden wall."
      grade1_artist_loops3_instruction: "Now we need to get the soil ready to plant.\nFind the bugs in the code and help the artist prepare the ground. "
      grade1_artist_loops4_instruction: "Time to fix the stairs!  Repeat this pattern\nfive times so the artist can reach the top of the bushes."
      grade1_artist_loops5_instruction: "Behind the bushes there is a beautiful vine\nfull of flowers.  Can you climb the vine and see where it goes?"
      grade1_artist_loops6_instruction: "**Challenge:**  It's a hidden garden! Let's\nwalk around."
      grade1_artist_loops7_instruction: "The flowers down here are so pretty.  Let's\ntake a closer look."
      grade1_artist_loops7a_instruction: "**Challenge:**  Lovely! Let's take a walk\naround the garden."
      grade1_artist_loops7b_instruction: "Time to head home. Can you fix this ladder\nto help the artist get down?"
      grade1_artist_loops8_instruction: "Let's take the short way home, over the\npond. Can you help the artist stay on the stones?"
      grade1_artist_loops9_instruction: "I still need a story for this puzzle"
      grade1_artist_loopsFP_instruction: "Use what you have learned to draw a picture\nof what you think the artist saw when he got home."
      grade1_maze_sequence1_instruction: "코드를 수정해서 돼지를 잡을 수 있게 해주세요!"
      grade1_maze_sequence10_instruction: "Move me around the TNT to get to the pig."
      grade1_maze_sequence2_instruction: "코드를 수정해서 돼지를 잡을 수 있게 해주세요!"
      grade1_maze_sequence3_instruction: "Add 2 blocks to get the bird to the pig."
      grade1_maze_sequence4_instruction: "Now try this puzzle from the start!"
      grade1_maze_sequence5_instruction: "Move one way, then another to get me to\nthe pig!"
      grade1_maze_sequence6_instruction: "Figure out what is missing and then add\nblocks to get me to the pig!"
      grade1_maze_sequence7_instruction: "Your turn!  What do you need to do to get\nthe bird to the pig?"
      grade1_maze_sequence8_instruction: "Debug this level by adding blocks to get\nme to the pig!"
      grade1_maze_sequence9_instruction: "Go around the TNT to get me to the pig!\n"
      grade1_maze_sequenceA_instruction: "Challenge: Move me around the TNT to get\nto the pig."
      grade1_maze_sequenceB_instruction: "Fix the bugs to get the bird to the pig."
      grade1_maze_sequenceC_instruction: "It's all you!  Get the bird to the pig."
      grade1_maze_sequenceD_instruction: "Now head any which way to get that pig!"
      grade1_playlab_events1_instruction: "This game is called \"Play Lab\".  See\nif you can figure out what each block does."
      grade1_playlab_events1a_instruction: "Make your robot say \"Hello!\" when the\nbutton is clicked."
      grade1_playlab_events2_instruction: "This program makes Robin fly.  Can you\nget her to vanish when you click her?"
      grade1_playlab_events2a_instruction: "Edit the code so that when the second\nbird is clicked, your program plays a sound!"
      grade1_playlab_events3_instruction: "This program makes Robin fly.  Can you\nmake the robot jump when you press the up button?\\r\n"
      grade1_playlab_events3a_instruction: "When the third bird is clicked, the background\nshould change to a city. Can you add code to make this happen?"
      grade1_playlab_events4_instruction: "Add a block to make Robin vanish when\nshe collides with the robot."
      grade1_playlab_events4a_instruction: "Add code to make something happen when\nthe fourth bird is clicked. Be creative!"
      grade1_playlab_events5_instruction: "Add a block to the 'when run' event\nthat starts the dragon flying."
      grade1_playlab_events5a_instruction: "About My Robot Project! Write code so\nthat clicking on each bird shows a new fact about your robot."
      grade1_playlab_events6_instruction: "Add a block to the 'when actor 1 clicked'\nevent that makes the dragon return to the middle of the screen."
      grade1_playlab_events7_instruction: "Add a block so that when you push the\nleft arrow button, the knight surges toward the dragon."
      grade1_playlab_events8_instruction: "Add a block so that when the knight collides\nwith the dragon, it plays a sound."
      grade1_playlab_events9 RYAN COPY_instruction: "Now, have Robin wait a second,\nthen come back after she vanishes."
      grade1_playlab_events9_instruction: "Now, add a block to keep score each time\nthe knight hits the dragon."
      grade1_playlab_eventsFP_instruction: "Use your imagination. What can you do\nto make this game more fun?"
      grade1_sequence_pre_instruction: "Play with these blocks to see what they make\nthe bird do!"
      grade1_video_frustrationRainbow_instruction: "This video describes the rainbow\nof frustration and introduces persistence."
      grade2_CaringForNewPet_0_instruction: "For this puzzle, drag all of the blocks\ntogether and click \"Run\" to watch it go!"
      grade2_CaringForNewPet_1_instruction: "Drag an extra `move forward` block out\nof the toolbox to finish your code."
      grade2_CaringForNewPet_10_instruction: "저를 돼지에게 이동시켜 주세요."
      grade2_CaringForNewPet_11_instruction: "\"Keep calm and help me find the bad\npig.\""
      grade2_CaringForNewPet_2_instruction: "\"This pig is ruffling my feathers.\"\\r\n\\r\nThere\nis one extra block that is going to cause the bird to crash. Throw it away\nby dragging it back to the toolbox."
      grade2_CaringForNewPet_2courseC_maze_programming3_instruction: "There is one\nextra block that is going to cause the bird to crash. Throw it away by dragging\nit back to the toolbox."
      grade2_CaringForNewPet_3_instruction: "\"Trace the path and lead me to the\nsilly pig. Avoid TNT or feathers will fly!\""
      grade2_CaringForNewPet_3D_instruction: "\"Follow this path to get me to the\npig!\""
      grade2_CaringForNewPet_4_instruction: "\"Keep calm and help me find the bad\npig. Otherwise I might get angry!\""
      grade2_CaringForNewPet_5_instruction: "저를 돼지에게 이동시켜 주세요."
      grade2_CaringForNewPet_6_instruction: "Challenge: Guide me to the green evilness!\n(Watch out for TNT)"
      grade2_CaringForNewPet_7D_instruction: "Challenge: This code has a lot of bugs.\nYou'll need to remove blocks and add blocks."
      grade2_MakeDogTag_1_instruction: "Drag blocks onto the screen to have the artist\ndraw over the grey lines in the picture. (Each line is 100 pixels long)"
      grade2_MakeDogTag_10_instruction: "이제, 그리고 싶은 것들을 그려보세요."
      grade2_MakeDogTag_2_instruction: "This spaceship needs a window!\\r\n\\r\nEach\nside of the inner square is 100 pixels and all of the angles are 90 degrees."
      grade2_MakeDogTag_3_instruction: "고양이를 위한 집을 완성해주세요."
      grade2_MakeDogTag_4_instruction: "이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:\n세 변의 길이는 모두 같습니다."
      grade2_MakeDogTag_5_instruction: "\"Now a tag for Belle!\"\\r\n\\r\nDraw this\ndiamond with 200 pixel sides."
      grade2_MakeDogTag_6_instruction: '자유 플레이: 원하는 것을 그려보세요.'
      grade2_MakeDogTag_7_instruction: "One more tag.  This is a triangle for Pi.\\r\n(Each\nside is 150 pixels)"
      grade2_MakeDogTag_8_instruction: "이제 여러 개의 'V'자를 연결해서, 반복 실행 구조 안에 넣어보세요."
      grade2_MakeDogTag_9_instruction: "Rebuild the code from the last puzzle, but\nthis time, add a left turn of 30 degrees inside the loop. Now, repeat it 24\ntimes instead of 8."
      grade2_MakeDogTag_BFP_instruction: "\"Hi, I'm an artist. You can write code\nto make me draw almost anything.\"\\r\n\\r\nPlay with the blocks in the toolbox\nto see what they do!"
      grade2_MakeDogTag_FP_instruction: "Freeplay: What shape will you make the tag\nfor your pet?"
      grade2_PuppyLoops_1_instruction: "Can you get me to the pig using 5 of the\nsame kind of blocks?"
      grade2_PuppyLoops_10_instruction: "바람개비가 완성되지 않았습니다. 완성하려면 얼마나 반복해야 할까요?"
      grade2_PuppyLoops_2_instruction: "Can you get to the pig by creating a loop\nthat uses only one `move forward` block inside of a `repeat`?"
      grade2_PuppyLoops_3_instruction: "Get me to the pig! Solve this puzzle by creating\na loop!"
      grade2_PuppyLoops_4_instruction: "In this puzzle, two `repeat` loops will help\nyou get to the pig with the fewest number of blocks!"
      grade2_PuppyLoops_5_instruction: "어떻게 하면 돼지에게로 최대한 빠르게 이동할 수 있을까요?"
      grade2_PuppyLoops_6_instruction: "Loops even work with more than one block\ninside!  Can you loop this sequence to get me to the pig?"
      grade2_PuppyLoops_7_instruction: "해바라기로 이동하기 위해서 여러분들이 배운 것들을 사용해보세요!"
      grade2_PuppyLoops_8_instruction: "고양이 수염을 그리는 코드에 문제가 있습니다.\n\\r\n\\r\n고양이 수염의 길이가 같도록 코드를 고쳐주세요."
      grade2_PuppyLoops_9_instruction: "C가 왼쪽으로 그려지는 코드 같습니다!\\r\n\\r\nC를 정확하게 그리려면 어떻게 해야할까요?"
      grade2_collector_10_instruction: "You're almost done! Collect as many pieces\nof treasure as you can to finish the stage!"
      grade2_collector_2_instruction: "Move Laurel to the gold, then use `collect`\nto pick it up."
      grade2_collector_3_instruction: "Put these blocks in order to collect all of\nthe gold and solve the puzzle."
      grade2_collector_4_instruction: "Sequence matters! The blocks you need are\nalready in the workspace, but not connected.  Order these blocks to solve\nthe puzzle."
      grade2_collector_5_instruction: "These blocks are in the wrong order. Can you\nfix them?"
      grade2_collector_6_instruction: "Reorder the blocks to collect all of the treasure."
      grade2_collector_7_instruction: "Challenge puzzle! Use blocks from the toolbox\nto collect all of the treasure."
      grade2_collector_8_instruction: "\"Keep up the good work! Help me collect all\nof the coins.\""
      grade2_collector_9_instruction: "*\"Let's get all of the coins!\"*"
      grade2_collector_9a_instruction: "**Challenge:** Grab all of the coins."
      grade2_collector_A_instruction: "Help Laurel collect all of the treasure."
      grade2_collector_pre1_instruction: "\"Hi, I'm Laurel. Today I'm searching\nfor treasure at the dog park!\" \\r\n\\r\nPlay around with the blocks to see\nif you can help Laurel collect some gold."
      grade2_maze_debuggingFP_instruction: "\"Now, help me sneak up on the pig any\nway you want to!\""
      grade2_maze_debuggingPre_instruction: "Play with these blocks to see what they\nmake the bird do!"
      grade2_maze_intro10_instruction: "Solve this puzzle."
      grade2_maze_intro2_instruction: "Welcome to Code Studio! Here you will learn\nto use blocks to build programs. Press `Run` to run a program now!"
      grade2_maze_intro3_instruction: "The `workspace` is where you will create all\nof your programs. Can you guess what this program does? Press the “Run” button\nto find out."
      grade2_maze_intro4_instruction: "Drag a block from the toolbox into the workspace.\nConnect it to the other blocks."
      grade2_maze_intro6_instruction: "That’s it!  Now we’re ready to try to solve\na few puzzles. "
      grade2_maze_intro7_instruction: "This time, try something a bit more challenging."
      grade2_maze_intro8_instruction: "This is a challenge puzzle.  It is meant to\nbe hard and will probably take you a couple of tries to solve.  If you don’t\nsolve it after several tries, don’t worry!  It will be in the Play Zone at\nthe end of the stage and you can try it again when you’ve had more practice."
      grade2_maze_intro9_instruction: "Solve this puzzle."
      grade2_playlab_project_1_instruction: "위/아래/왼쪽/오른쪽 방향키를 사용해 펭귄이 이리저리 목표지점들로 움직이도록 프로그래밍 해주세요."
      grade2_playlab_project_2_instruction: "The `repeat forever` block allows you\nto run code over and over forever. Can you attach blocks to move Chomp the\nDino (actor 2) up and down forever?"
      grade2_playlab_project_3_instruction: "Can you have Waddles (actor 1) say \"Ouch!\"\nand play a \"hit\" sound if he runs into Chomp? \\r\n\\r\nWhen you're done,\nplay the game to make that happen."
      grade2_playlab_project_4_instruction: "펭귄이 문어에 닿으면 점수가 올라가게 만든 후 방향키를 눌러 움직여 보세요."
      grade2_playlab_project_5_instruction: "Add blocks to the `when run` event to\nchange the background and the speed of Waddles.\\r\n\\r\nPlay the game and move\nWaddles with the arrows until you score."
      grade2_playlab_project_6_instruction: "Create your own story. When you're\ndone, click \"Finish\" to share with friends."
      grade2_puppy_loops2_instruction: "Can you get to the pig by creating a loop\nthat uses only one `move forward` block inside of a `repeat`?"
      grade2_puppy_loops3_instruction: "\"Get me to the pig!\"\\r\n\\r\n Solve this\npuzzle by creating a loop!"
      grade2_puppy_loops4_instruction: "In this puzzle, two `repeat` loops will help\nyou get to the pig with the fewest number of blocks!"
      grade2_puppy_loops5_instruction: "\"Get me to the pig as quickly as possible!\""
      grade2_puppy_loops6_instruction: "\"This pig is ruffling my feathers!\"\\r\n\\r\nLoops\neven work with more than one block inside!  Can you loop this sequence?"
      grade2_puppy_loops7_instruction: "\"Get me to the pig!\"\\r\n\\r\nUse what you\nlearned in other puzzles!"
      grade3_AboutMyRobot_1_instruction: "Make your robot say \"Hello!\" when the\nbutton is clicked."
      grade3_AboutMyRobot_2_instruction: "Edit the code so that when the second bird\nis clicked, your program plays a sound!"
      grade3_AboutMyRobot_3_instruction: "When the third bird is clicked, the background\nshould change to a city. Can you add code to make this happen?"
      grade3_AboutMyRobot_4_instruction: "Add code to make something happen when\nthe fourth bird is clicked. Be creative!"
      grade3_AboutMyRobot_5_instruction: "About My Robot Project! Write code so that\nclicking on each bird shows a new fact about your robot."
      grade3_AboutMyRobot_TeacherIDo_instruction: "Run this puzzle and click on the\nrobot to see what happens!"
      grade3_ConditionalsElse_1_instruction: "구름으로 가려 잘 보이지 않습니다!\n구름 아래에 꽃이 있는지 살펴보고, 꽃이 있는 경우에만 꽃꿀을 모아보세요.\n주의하세요, 계속 바뀝니다!"
      grade3_ConditionalsElse_2_instruction: "구름들이 더 많습니다! \\r\n\\r\n모든 구름 아래에 꽃들이 있는 것은 아니기 때문에 구름 아래에 꽃이 숨어있는지 살펴보고 꽃꿀을 모아야 합니다. \\r\n\\r\n기억하세요: 모든 구름들 아래에 똑같은 것들이 숨겨진 것은 아닙니다!"
      grade3_ConditionalsElse_3_instruction: "Now I just want to make honey. Some\nof these clouds might have honeycombs under them. Be sure to check each cloud!"
      grade3_ConditionalsElse_4_instruction: "이 구름들은 꽃이나 벌집을 가립니다! 만약/아니면 블록을 사용해서 꽃인 경우에 꽃꿀을 모으고, 꽃이 아닌 경우(즉, 벌집인 경우)에는 꿀을 만들도록 해주세요."
      grade3_ConditionalsElse_5_instruction: "There will be either a flower or a\nhoneycomb under each of those clouds!\\r\n\\r\nUse the `if/else` block to collect\nnectar if there is a flower.\\r\nOtherwise, make honey (because there is a\nhoneycomb)."
      grade3_ConditionalsElse_6_instruction: "I am not sure how much nectar this\nflower has, but I know it has either 1, 2, or 3 nectar. \\r\n\\r\nCombine the\nconditional blocks (`if` and/or `if/else`) to only get as much nectar as the\nflower has. \\r\n\\r\nRemember, the amount of nectar can change each time you\nrun the puzzle!"
      grade3_ConditionalsElse_7_instruction: "자주색 꽃은 꽃꿀이 3, 2, 1 중 하나입니다. \n\\r\n\\r\n\"자주색 꽃 확인\" 함수를 완성하고 이용해서 꽃의 모든 꽃꿀들을 모을 수 있도록 해보세요."
      grade3_ConditionalsElse_8_instruction: "Write the function for `check flower\nmake honey`. \\r\n\\r\nYour function should check if the purple flower has 3,\n2, or 1 nectar and get all of the nectar. \\r\nThen, move forward and make\nhoney."
      grade3_ConditionalsElse_9_instruction: "**Assessment:** This cloud is either\nhiding a flower with one nectar or a honeycomb that needs one honey.  \\r\n\\r\nComplete\nthe `get nectar or make honey` function, then call it to collect the nectar\nor honey. \\r\n"
      grade3_ConditionalsElse_TeacherIDo_instruction: "There will be either a flower\nor a honeycomb under each of those clouds!\\r\n\\r\nUse the `if/else` block\nto collect nectar if there is a flower.\\r\nOtherwise, make honey (because\nthere is a honeycomb)."
      grade3_Conditionals_1 BAD_instruction: "꽃꿀을 모두 모으기 위해서 반복 구조를 사용해보세요."
      grade3_Conditionals_1_instruction: "저는 배고픈 꿀벌입니다! \\r\n최소한의 블록만 사용해서 꽃꿀을 모두 모을 수 있게 해주세요."
      grade3_Conditionals_10 BAD_instruction: "꽃들로 부터 꽃꿀을 모으세요. 중첩 반복을 사용하면 됩니다."
      grade3_Conditionals_10_instruction: "와 이번에는 여러 가지들이 있네요!\\r\n\\r\n여러분들이 배운 것들을 이용해 꽃꿀을 모아 꿀을 만들어보세요."
      grade3_Conditionals_11 BAD_instruction: '형성평가: ''~인 동안'' 반복 구조를 이용해서, 이 꽃에서 꽃꿀을 모두 모아보세요.'
      grade3_Conditionals_11_instruction: "자 이제 다 모아봅시다!\\r\n\\r\n지금까지 배운 것들을 이용해서 최소한의 블록들로 꽃꿀이 있는 꽃에서 꽃꿀을 모아 보세요.\n마지막에는 꿀을 만들어야 합니다."
      grade3_Conditionals_12_instruction: "계단 모양의 패턴은 많이 익숙합니다. \\r\n\\r\n최소한의 블록들만 사용해서 꽃꿀이 있는 꽃에서만 꽃꿀을 모아보세요."
      grade3_Conditionals_13_instruction: "Assessment: Collect all of the nectar.\nBe careful not to try to collect nectar from a purple flower if it doesn't\nhave any."
      grade3_Conditionals_2_instruction: "저 꽃꿀들을 보세요!\\r\n\\r\n최소한의 블록들을 사용해서 꽃꿀을 모아 꿀을 만들어보세요.  "
      grade3_Conditionals_3_instruction: "Be careful not to collect nectar from a\npurple flower if it doesn't have any. \\r\nYou must first check if the nectar\nis equal to 1 using the `if nectar` block."
      grade3_Conditionals_4_instruction: "\"만약\" 블록을 사용해서 이 꽃에 꽃꿀이 있는지 확인해보세요."
      grade3_Conditionals_5_instruction: "꽃꿀이 있는 꽃에서만 꽃꿀을 모아보세요."
      grade3_Conditionals_6_instruction: "이 꽃밭에는 빨강 꽃과 자주색 꽃이 있습니다.\n빨강 꽃은 꽃꿀이 얼마나 있는지 나타나있지만, 자주색 꽃에는 얼마나 있는지 알 수 없습니다.\n꽃꿀을 모두 모아 보세요."
      grade3_Conditionals_7_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요."
      grade3_Conditionals_8_instruction: "뭐가 있을까요!\\r\n\\r\n꽃밭을 돌아다니면서 꽃꿀이 있는 꽃들에서만 꽃꿀을 모을 수 있게 도와주세요. "
      grade3_Conditionals_9_instruction: "Help me find all of the nectar using as\nfew blocks as possible!"
      grade3_Conditionals_TeacherIDo_instruction: "Check this flower with an \"if\"\nblock to see if there is any nectar available."
      grade3_Debugging_1_instruction: "이 블록들에는 오류들이 있어서 짜증이 나네요.\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류들을 수정해주세요."
      grade3_Debugging_5_instruction: "That flower looks tasty! \\r\n\\r\nFix the error(s)\nto collect all of the nectar.  You can now use both run and step."
      grade3_Debugging_6_instruction: "달콤한 도전이네요! \\r\n\\r\n모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요."
      grade3_Debugging_7_instruction: "모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요."
      grade3_Debugging_9_instruction: "\"벌벌\" 떨지 마세요! \\r\n\\r\n모든 꽃꿀들을 모아 꿀을 만들 수 있도록, 이 프로그램의 오류들을 고쳐야 합니다."
      grade3_Debugging_TeacherIDo_instruction: "These blocks are really bugging me.\nFix the error(s) to collect all of the nectar and make all of the honey."
      grade3_Loops_1_instruction: "Can you help me collect the nectar from these\nflowers? "
      grade3_Loops_10_instruction: "꿀벌이 엄청 바쁘네요!\\r\n\\r\n최대한 적은 블록들을 사용해서\n꽃꿀을 모으고 꿀을 만들 수 있도록 꿀벌을 도와 주세요."
      grade3_Loops_11_instruction: "이 길의 모양은 다른 것들과 다릅니다. \\r\n\\r\n최대한 적은 블록들을 사용해서 꽃꿀을 모두 모아보세요."
      grade3_Loops_12_instruction: "꿀벌이 꽃꿀을 모으고 꿀을 만들 수 있는 가장 빠른 방법을 찾을 수 있나요?"
      grade3_Loops_2_instruction: "이번에는, 1개의 반복 구조를 사용해서 모든 꿀을 모아보세요."
      grade3_Loops_3_instruction: "모든 꽃꿀을 모으기 위해, 반복 구조를 사용해보세요."
      grade3_Loops_4_instruction: "Now use the `repeat` block to collect all of the\nnectar and make all of the honey."
      grade3_Loops_5_instruction: "와 꽃밭이 이쁘네요!\n7 블록보다 적은 블록을 사용해서 꿀벌이 모든 꽃들을 살펴볼 수 있게 해주세요."
      grade3_Loops_6_instruction: "이 퍼즐을 해결하려면 몇 번 반복해야할까요? \\r\n\\r\n반복 실행 구조는 매우 편리합니다!\n반복 실행 구조를 사용해서 최대한 적은 블록들로 해결해 보세요."
      grade3_Loops_7_instruction: "저 꽃들이 달콤해 보여요!\\r\n\\r\n최대한 적은 블록들을 사용해 각 꽃들에서 꽃꿀을 모아보세요."
      grade3_Loops_8_instruction: "최대한 적은 블록들을 사용해서 모든 꽃꿀을 모으고 꿀을 만들어 보세요."
      grade3_Loops_9_instruction: "최대한 적은 블록들을 사용해서\n각 꽃에서 꽃꿀을 모은 후, 각각의 벌집에 꿀을 만들어 넣어 보세요."
      grade3_Loops_TeacherIDo_instruction: "Those flowers look tasty!\\r\n\\r\nCollect\nnectar from each of the flowers using the fewest blocks possible."
      grade3_RunningFarm_1_instruction: "Use conditionals to make sure that you pick\nall of the corn, but don't disturb the stalks where nothing is growing yet."
      grade3_RunningFarm_10_instruction: "Collect all of the corn and lettuce, then\npick the pumpkin."
      grade3_RunningFarm_11a_instruction: "Collect all of the corn and lettuce, then\npick the pumpkin."
      grade3_RunningFarm_2_instruction: "Help the farmer collect both corn and lettuce\nfrom the field."
      grade3_RunningFarm_3_instruction: "*\"Corn, lettuce, AND pumpkins! Help me\nharvest them all.\"*"
      grade3_RunningFarm_4_instruction: "Help the farmer pick all of the lettuce\nin each cluster before moving on to the next bunch."
      grade3_RunningFarm_5_instruction: "This field has clusters of corn, lettuce,\nand pumpkins all growing together.  Can you collect them all?"
      grade3_RunningFarm_6_instruction: "Can you figure out how to pick the pumpkin?  Make\nsure to collect all of the corn along the way!"
      grade3_RunningFarm_7_instruction: "**Challenge:** Collect all of the corn and\nlettuce, then pick the pumpkin."
      grade3_RunningFarm_8_instruction: "Have wheat and potatoes planted randomly\nat various growth stages. Now we introduce multiple while loops (stacked)\nnested inside a loop. The two while loops in the solution represent different\nwhile loops (while there is potato and while there is wheat)"
      grade3_RunningFarm_9_instruction: "Add Weeds element. Weeds start out in random\nspots in the field and spread more and more rapidly as time goes on.. This\npuzzle is the culminating game-like puzzle. Students should have the event\nblocks (up, down, left, right, spacebar) available in the toolbox to use if\nthey want. The entire field should be planted randomly with mostly wheat,\npotatoes, and a few weeds."
      grade3_RunningFarm_TeacherIDo_instruction: "Teacher I Do: Show students how\nthey can use loops and conditionals to plant and harvest 2 rows of crops."
      grade3_RunningFarm_TeacherIDo2_instruction: "Teacher I Do: Show students how\nto use loops to harvest many crops."
      grade3_bee_Conditionals_new4_instruction: "Now try checking all of these flowers\nwith \"if\" blocks to see if there is any nectar available."
      grade3_bee_conditionals_new1a_instruction: "Help the bee collect all of the\nnectar. \\r\n\\r\nYou can only collect nectar from flowers, but you can check\nany space to see if there is a flower."
      grade3_bee_conditionals_new1b_instruction: "Help the bee collect all of the\nnectar. You can only collect nectar from flowers, but you can check any space\nto see if there is a flower."
      grade3_bee_conditionals_new2_instruction: "Collect all of the nectar using\nas few blocks as possible"
      grade3_bee_conditionals_new2a_instruction: "Get all of the nectar using as\nfew blocks as possible."
      grade3_bee_conditionals_new2b_instruction: "Collect all of the nectar. You\ncan only collect nectar from flowers, but you can check any space to see if\nthere is a flower."
      grade3_bee_conditionals_new3a_instruction: "Collect all of the nectar or make\nall the honey. You can only collect nectar from flowers and make honey from\nhoneycombs. Check any space to see if there is a flower or honeycomb."
      grade3_bee_conditionals_new3b_instruction: "Collect all of the nectar and make\nall of the honey."
      grade3_bee_conditionals_new3c_instruction: "Help the bee collect all of the\nnectar and make all of the honey! Hint: Try using one loop inside of another\nloop."
      grade3_bee_conditionals_quantum1_instruction: "Check to see if there's a flower\nunder the cloud. If there's a flower, get nectar."
      grade3_bee_conditionals_quantum2_instruction: "구름들이 더 많습니다! \\r\n\\r\n모든 구름 아래에 꽃들이 있는 것은 아니기 때문에 구름 아래에 꽃이 숨어있는지 살펴보고 꽃꿀을 모아야 합니다. \\r\n\\r\n기억하세요: 모든 구름들 아래에 똑같은 것들이 숨겨진 것은 아닙니다!"
      grade3_bee_conditionals_quantum3_instruction: "Some of these clouds might have\nhoneycombs under them.  Be sure to check if a honeycomb is hiding behind each\ncloud!"
      grade3_bee_conditionals_quantum4_instruction: "Use the `if/else` block to collect\nnectar at flowers and make honey at honeycomb."
      grade3_bee_conditionals_quantum5_instruction: "Use the `if/else` block to collect\nnectar if there is a flower.\\r\nOtherwise, make honey (because there is a\nhoneycomb)."
      grade3_maze_Loop1_instruction: "Assessment:  Get me to the sunflower using\nonly 5 blocks! "
      grade3_maze_loops1_instruction: "Get the zombie to the sunflower."
      grade3_maze_loops2_instruction: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\r\n\\r\n반복 실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      grade3_maze_loops2a_instruction: "Get the zombie to the sunflower using the\nfewest number of blocks possible."
      grade3_maze_loops3_instruction: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\r\n최소한의 반복 실행 구조를 사용해서 해바라기로 이동시켜주세요."
      grade3_maze_loops4_instruction: "블록들을 최대한 적게 사용해서 해바라기로 이동시켜주세요!"
      grade3_maze_loops5_instruction: "블록들을 최대한 적게 사용해서 해바라기로 이동시켜주세요!"
      grade3_maze_nestedLoops1_instruction: "Can you get me to the pig using 5 of\nthe same kind of blocks?"
      grade3_maze_nestedLoops2_instruction: "Can you get to the pig by creating a\nloop that uses only one `move forward` block inside of a `repeat`?"
      grade3_maze_nestedLoops3_instruction: "Get me to the pig! You can only use\none move forward block this time"
      grade3_maze_nestedLoops4_instruction: "In this puzzle, two `repeat` loops will\nhelp you get to the pig with the fewest number of blocks!"
      grade3_playLab_buildGame_1_instruction: "There is a new block in this lesson,\nthe `random integer` block. It is used to choose a random number. Write a\nprogram where the robot says a random number between 1 and 100!"
      grade3_playLab_buildGame_2_instruction: "We have already created a random integer,\n\"j\", which is either 1 or 0. Now, we need to use it to decide whether our\ncard is red or black. Add a second if statement to the code under `when run`\nto complete this code."
      grade3_playLab_buildGame_3_instruction: "There are 13 different card values\nin a deck of cards, so we'll need to have 13 options. Under the empty `when\nrun` block, add a line that sets the placeholder \"i\" to a random integer\nbetween 1 and 13."
      grade3_playLab_buildGame_4_instruction: "In a deck of cards, a card with value\n1 isn't actually called a \"1\", there's a special name. Write an if statement\nthat checks if the random number is a 1, then tell the computer that the value\nof that card is \"Ace\"."
      grade3_playLab_buildGame_5_instruction: "We can just call the cards from 2\nto 10 by their numbers, so add an if statement that checks whether the number\ngenerated is within those numbers, then sets the card value to the number\ngenerated."
      grade3_playLab_buildGame_6_instruction: "There are three more cards with special\nnames in the deck. Add to your code so that a card number 11 is called a \"Jack\",\na 12 is a \"Queen\" and a 13 is a \"King\""
      grade3_playLab_buildGame_7_instruction: "You already know what color your card\nis, but what suit is it? Add code to the conditional statement \"if card is\nRed\" to choose hearts or diamonds."
      grade3_playLab_buildGame_8_instruction: "Add the second part of the code to\nchoose a suit, copying what you made for a Red card."
      grade3_playLab_buildGame_final_instruction: "Final stage for playlab conditionals\nlevel (could hide entire function so that students just work with point scoring)"
      grade3_playLab_buildGame_final2_instruction: "Here's all of your code to choose\na card - try adding some other fun features!"
      grade3_robotFarmer_ConditionalsIntro4_instruction: "Help the farmer remove\nthis entire pile using a `while` loop."
      grade3_robotFarmer_ConditionalsIntro_1_instruction: "*\"Hi, I'm a farmer.\nI need your help to flatten the field on my farm so it's ready for planting!\"*  \\r\n\\r\nMove\nto the pile of dirt and use the `remove` block to remove it."
      grade3_robotFarmer_ConditionalsIntro_10_instruction: "I'm working late, so\nit's dark out, and I can't tell how large the piles are. Now I don't have\nall the options I used to have on the while block. Move me along the field,\nand if there is a pile, remove it"
      grade3_robotFarmer_ConditionalsIntro_10a_instruction: "Flatten all of these\npiles using as few blocks as possible. "
      grade3_robotFarmer_ConditionalsIntro_11_instruction: "It's still dark outside.\nMove me along the field. If there is a pile, remove it, and if there is a\nhole, fill it in. Hint: use the dropdown menu of options on the \"if\" block."
      grade3_robotFarmer_ConditionalsIntro_11a_instruction: "Flatten all of these\npiles using as few blocks as possible. "
      grade3_robotFarmer_ConditionalsIntro_2_instruction: "Next, move to the hole\nand fill it with six shovelfuls of dirt, using the `fill` block."
      grade3_robotFarmer_ConditionalsIntro_3_instruction: "*\"Move to the pile of\ndirt and tell me how many shovelfuls to remove using as few blocks as possible.\"*"
      grade3_robotFarmer_ConditionalsIntro_4_instruction: "*\"I don't know how much\ndirt is in this pile!\"*\\r\n\\r\nHelp the farmer remove this entire pile using\na `while` loop."
      grade3_robotFarmer_ConditionalsIntro_5_instruction: "Help me remove all of\nthis dirt. "
      grade3_robotFarmer_ConditionalsIntro_6_instruction: "Remove all the piles of\ndirt, using as few blocks as possible. The new options in the dropdown menu\non the \"while\" block tell me if I'm standing on a pile or a hole."
      grade3_robotFarmer_ConditionalsIntro_7_instruction: "Look at all of those holes!  Each\none needs a different amount of dirt.   \\r\n\\r\nYou can use the `while` loop\nto easily fill them all!"
      grade3_robotFarmer_ConditionalsIntro_8_instruction: "Fill in the hole at the\nend of each of these paths."
      grade3_robotFarmer_ConditionalsIntro_9_instruction: "**Challenge:** Fill all\nof these holes using as few blocks as possible. "
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1_instruction: "Help me fill\nin all these holes with 5 shovelfuls of dirt. Hint: you can put a \"repeat\"\nblock inside the \"while\" block."
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo2_instruction: "I'm working\nlate, so it's dark out, and I can't tell how large the piles are. Now I\ndon't have all the options I used to have on the while block. Move me along\nthe field, and if there is a pile, remove it"
      grade4_arist_functions_star0_instruction: "Have you drawn something like this\nstar before? Practice making it one more time by adding a turn and a repeat\nblock."
      grade4_arist_nested_loop_circles1_instruction: "Assessment: Use a nested loop\nto complete the design."
      grade4_arist_nested_loop_flags1_instruction: "Loop the given code to create\na windmill."
      grade4_arist_nested_loop_polygons1_instruction: "Loop this design 10 times.\n\\r\n\\r\nHow much do you have to turn each time you loop?"
      grade4_arist_nested_loop_polygons2_instruction: "Loop this shape 6 times. \\r\n\\r\nHow\nmuch do you have to turn each time you loop? "
      grade4_arist_nested_loop_squares1_instruction: "Can you draw these 10 squares\nof this sidewalk using a nested loop? Each square is 30 pixels."
      grade4_arist_nested_loop_triangles2_instruction: "Now nest this loop inside\nanother loop to draw 10 triangles.  This is called a \"nested\" loop.  "
      grade4_arist_nested_loop_triangles3_instruction: "Can you draw a hexagon by\nlooping the triangle code?"
      grade4_arist_nested_loop_triangles4_instruction: "Draw the teeth in the alligator's\nmouth!"
      grade4_arist_nested_loop_triangles5_instruction: "Create a sun by nesting the\nstarter code in another loop.\\r\n\\r\nTo get this cool design with a hollow\ncenter, you'll need to jump forward by the length of the triangle before\nturning."
      grade4_arist_nested_loop_triangles6_instruction: "Can you draw these 36 triangles\nusing a nested loop?"
      grade4_artist_freeplay_instruction: "You are on your own now! Try out any of\nthe functions you used in this stage or try this new function that will automatically\ngive your image a beautiful background color! This creation will be saved\nto your Projects dashboard so that you can easily edit it any time!"
      grade4_artist_functions1_instruction: "\"나 화가. 좀비... 그리기 좋아..!\" \\r\n\\r\n사각형 안경을 그릴 수 있게 도와주세요. \\r\n\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      grade4_artist_functions2_instruction: "Functions let you define new blocks!\n\\r\n\\r\nWe've moved the blocks needed for drawing a square into a function\ncalled `draw a square`. This time, use the `draw a square` function to create\nthe glasses. \\r\n\\r\nThe squares are 75 pixels apart."
      grade4_artist_functions2a_instruction: "Create this image using only the blocks\nprovided."
      grade4_artist_functions3a_instruction: "Create this image using only the blocks\nprovided."
      grade4_artist_functions3b_instruction: "This time, use lines of 8 hexagons\nwith 25 pixel sides."
      grade4_artist_functionsChallenge0_instruction: "**Challenge:** Create as many\nfunctions as you think you need to make this drawing of 50 pixel squares."
      grade4_artist_functions_challenge_instruction: "Use the suggested functions\nto draw four rows of hexagons. Notice how our even numbered rows are shifted\nto the right?"
      grade4_artist_functions_challenge2_instruction: "Use the suggested functions\nto draw four rows of hexagons. Notice how our even numbered rows are shifted\nto the right?"
      grade4_artist_functions_freeplay_instruction: "You are on your own now! Try\nout any of the functions you used in this stage or try this new function that\nwill automatically give your image a beautiful background color! This creation\nwill be saved to your Projects dashboard so that you can easily edit it any\ntime!"
      grade4_artist_functions_stars0_instruction: "You can make this drawing by adding\na repeat block."
      grade4_artist_functions_stars1_instruction: "Now that you can draw a star,\ntry drawing four stars!"
      grade4_artist_functions_stars2_instruction: "Draw only those three stars to\nfinish this puzzle."
      grade4_artist_functions_stars3_instruction: "That last one is tough if you\nonly use loops. Let's try drawing the same picture using this new 'function'\nthat will help to **draw a star**."
      grade4_artist_functions_windows0_instruction: "Make this window by drawing\na square, then turning 90 degrees before drawing another, and so on."
      grade4_artist_functions_windows1_instruction: "If you can draw one window,\nyou can draw three! Try using your choice of a nested loop or a function here.\nDon't forget the jump block!"
      grade4_artist_functions_windows2_instruction: "Try solving this puzzle by creating\n`draw a window` and calling it five times. Watch out for the door!\\r\n\\r\n-\nThe top windows are 50 pixels away from each other.  \\r\n- The bottom windows\nare 100 pixels below the top set."
      grade4_artist_nestedLoops_challenge_instruction: "Click here to see the full\ninstructions again!\\r\n\\r\nHere is the code for an interesting shape.  What\nhappens when you repeat it multiple times, turning between each iteration?   Notice\nthat the turns in this shape add up to 420 degrees, which means that when\nyour artist is done drawing, it will be facing a different direction than\nwhen you started.  That new direction is exactly 60 degrees to the right of\nwhere you began."
      grade4_artist_nestedLoops_challenge2_instruction: "Now for a challenge!  Feel\nfree to use trial and error. You are not expected to get the image perfect\nthe first time.   Want to see more hints?  Click here!"
      grade4_artist_nested_loop_circles1_instruction: "Assessment: Use a nested loop\nto complete the design."
      grade4_artist_nested_loop_flags1_instruction: "Loop the given code to create\na windmill."
      grade4_artist_nested_loop_polygons1_instruction: "Loop this design 10 times.\n\\r\n\\r\nHow much do you have to turn each time you loop?"
      grade4_artist_nested_loop_polygons2_instruction: "Hi, I'm the Artist! Let's\ncreate some drawings together! For starters, try repeating this shape 6 times.\n\\r\n\\r\nHow much do you have to turn each time you loop? "
      grade4_artist_nested_loop_squares1_instruction: "Can you draw these 10 squares\nof this sidewalk using a nested loop? Each square is 30 pixels."
      grade4_artist_nested_loop_triangles1_instruction: "Complete the code to draw\nthese triangles.  The first one is done for you.  Hint:  3 triangles in a\n360 degree rotation."
      grade4_artist_nested_loop_triangles2_instruction: "Let's make a quick adjustment\nto get completely different image!  \\r\nHint: ? × 10 = 360"
      grade4_artist_nested_loop_triangles3_instruction: "Can you draw a hexagon by\nlooping the triangle code?\\r\nHint: 6 × ? = 360"
      grade4_artist_nested_loop_triangles4_instruction: "Hi! I'm the Artist. Let's\ntry some different types of drawings together. Can you help me draw the bottom\nteeth in the alligator's mouth?"
      grade4_artist_nested_loop_triangles5_instruction: "Create a sun by nesting\nthe starter code in another loop.\\r\n\\r\nTo get this cool design with a hollow\ncenter, you'll need to jump forward by the length of the triangle before\nturning."
      grade4_artist_nested_loop_triangles6_instruction: "Can you draw these 36 triangles\nusing a nested loop?"
      grade4_artist_parameters_squares1_instruction: "Click \"edit\" to fill in the\nfunction definition of \"draw a square\" and add a parameter. It should take\na length parameter, just like the triangle. This time, draw 3 squares: 25,\n50 and 75 pixels in length, each 100 pixels apart."
      grade4_artist_parameters_triangles1_instruction: "Today, we're going to try\nout a different, more powerful function editor. See if you can figure out\nhow to edit the function 'draw a triangle' to find the bugs."
      grade4_artist_parameters_triangles2_instruction: "이 함수 블록들이 뭔가 다르다는 것을 알아차리셨나요?\n\"실행\"을 눌러 어떤 일이 일어나나 살펴보세요."
      grade4_artist_parameters_triangles2b_instruction: "Can you complete this drawing?\nThe sides of each triangle are 25 pixels larger than the last.  The first\ntriangle has 25 pixel sides."
      grade4_artist_parameters_triangles3_instruction: "Can you complete this drawing?\nThe sides of each triangle are 25 pixels larger than the last.  The first\ntriangle has 25 pixel sides."
      grade4_artist_parameters_triangles4_instruction: "The code for this triangle\nfunction is broken. Can you edit the function to fix it, and then make triangles\nof length 25, 50, and 75?"
      grade4_artist_parameters_trianglesx_instruction: "Can you complete this drawing?\nThe sides of each triangle are 25 pixels larger than the last.  The first\ntriangle has 25 pixel sides."
      grade4_bee_conditionals_nested_loops_instruction: "Collect all of the nectar.\nYou can only collect nectar from flowers, but you can check any space to see\nif there is a flower."
      grade4_bee_conditionals_new1_instruction: "Collect all of the nectar. You can\nonly collect nectar from flowers, but you can check any space to see if there\nis a flower."
      grade4_bee_conditionals_new1a_instruction: "Help the bee make all of the honey.\nYou can only make honey at a honeycomb, but you can check any space to see\nif there is a honeycomb."
      grade4_bee_conditionals_new2_instruction: "Can you help the bee collect the\nnectar from the flowers? You can only collect nectar from flowers, but you\ncan check any space to see if there is a flower."
      grade4_bee_conditionals_new2a_instruction: "Make all of the honey. It's actually\nmore efficient to check each space for a honey comb, even when you know some\nare empty."
      grade4_bee_conditionals_new3a_instruction: "Collect all of the nectar or make\nall the honey. You can only collect nectar from flowers and make honey from\nhoneycombs. Check any space to see if there is a flower or honeycomb."
      grade4_bee_conditionals_new3b_instruction: "Uh oh! The bee is not sure if he\nshould collect nectar or make honey. Can you help him out?"
      grade4_bee_conditionals_new3c_instruction: "Help the bee collect all of the\nnectar and make all of the honey! Hint: Try using one loop inside of another\nloop."
      grade4_bee_conditionals_quantum1_instruction: "This cloud is blocking my view!\nCheck to see if there's a flower under the cloud, and only get nectar if\nthere's a flower. Be careful, it can change!"
      grade4_bee_conditionals_quantum2_instruction: "구름들이 더 많습니다! \\r\n\\r\n모든 구름 아래에 꽃들이 있는 것은 아니기 때문에 구름 아래에 꽃이 숨어있는지 살펴보고 꽃꿀을 모아야 합니다. \\r\n\\r\n기억하세요: 모든 구름들 아래에 똑같은 것들이 숨겨진 것은 아닙니다!"
      grade4_bee_conditionals_quantum3_instruction: "Now I just want to make honey.\nSome of these clouds might have honeycombs under them. The way we've been\ngoing about things won't work here. Be sure to check if a honeycomb is hiding\nbehind each cloud!"
      grade4_bee_conditionals_quantum4_instruction: "Sometimes this cloud covers\na flower, and sometimes it covers a honeycomb! Use the if/else block to collect\nnectar if it is a flower, else to make honey (because it is a honeycomb)."
      grade4_bee_conditionals_quantum5_instruction: "There will be either a flower\nor a honeycomb under each of those clouds!\\r\n\\r\nUse the `if/else` block\nto collect nectar if there is a flower.\\r\nOtherwise, make honey (because\nthere is a honeycomb)."
      grade4_bee_functions_instruction: "Have we met before? I'm the farmer! Please\nhelp me remove this pile of dirt and fill this hole."
      grade4_bee_functions1_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요."
      grade4_bee_functions10_instruction: "Create a function to collect all of the\nnectar from each flower."
      grade4_bee_functions11_instruction: "Solve this function by creating a function\nto turn, move forward and make all of the honey, then return the bee to where\nit started and turn back."
      grade4_bee_functions2_instruction: "함수들은 어떤 작업을 수행할 때 사용하는 블럭들의 집합이라고 할 수 있습니다.\n\"꽃꿀 2번 모으기\" 를 이용해서 각 꽃들에서 꽃꿀을 모아보세요."
      grade4_bee_functions3_instruction: "함수들은 어떤 작업을 수행하는데 블럭들의 집합이라고 볼 수 있습니다.  \\r\n\\r\n\"5번 모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      grade4_bee_functions4_instruction: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는 함수입니다.  \\r\n\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      grade4_bee_functions5_instruction: "This puzzle will be deleted!"
      grade4_bee_functions6_instruction: "Now write the function to collect nectar\nfrom the flowers."
      grade4_bee_functions7_instruction: "Create a function and call it to collect\nnectar at each flower and make honey at each honeycomb."
      grade4_bee_functions8_instruction: "Create your own function that goes down\na path, gets nectar, makes honey, and then returns the bee to the top of the\npath. Then collect all the nectar and make all the honey!"
      grade4_bee_functions9_instruction: "Create a function that collects all of\nthe nectar from each flower."
      grade4_bee_nestedLoops0_instruction: "꽃꿀을 모두 모으기 위해서 반복 구조를 사용해보세요."
      grade4_bee_nestedLoops1_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      grade4_bee_nestedLoops2_instruction: "**Challenge:** Figure out how to get\nall of the nectar using only the blocks available."
      grade4_bee_nestedLoops2a_instruction: "Collect all of the nectar using  as\nfew blocks as possible."
      grade4_bee_nestedLoops3_instruction: "중첩 반복 구조를 만들어서 모든 꽃꿀을 모아보세요."
      grade4_bee_nestedLoops4_instruction: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\r\n\\r\n중첩 반복을 사용하면 됩니다. "
      grade4_bee_nestedLoops_assess_instruction: "**Assessment:** Collect all of\nthe nectar and make all of the honey using loops.\\r\n\\r\nHint: There are several\npossible solutions!"
      grade4_designProcess_vid_instruction: "Prepare to build a project within some\ngiven parameters."
      grade4_farmer_functions1_instruction: "*\"Have we met before? I'm the farmer!\"*\\r\n\\r\nHelp\nthe farmer get to the pumpkins and pick them."
      grade4_farmer_functions2_instruction: "Take the code you just wrote it and\nuse it to define a new function. Call the function twice to complete the puzzle."
      grade4_farmer_functions3_instruction: "Try using a couple of repeat blocks\nwithin your function definition."
      grade4_farmer_functions4_instruction: "Swap out your repeat loops for more\nversatile while loops."
      grade4_farmer_functions5_instruction: "Things are going to start getting trickier,\nbut don't give up! You can use the same while loops to check both spaces\nin each pass."
      grade4_farmer_functions6_instruction: "The paths are a different length. You\ncan use a different type of while loop to keep the pattern going as long as\nyou need to."
      grade4_frozen_freeplay_instruction: "여러분은 이제 진짜 화가가 된 것 같아요! 겨울왕국을 만들어 보세요."
      grade4_frozen_functions0_instruction: "Can you figure out what number to replace\nthe question marks with to draw a circle?"
      grade4_frozen_functions1_instruction: "Use the new “draw a circle” function\nto create 10 overlapping circles. Don't forget to jump forward between circles."
      grade4_frozen_functions1a_instruction: "Use the new “Create a circle” block\nto create 10 overlapping circles. Don't forget to jump forward between circles."
      grade4_frozen_functions2_instruction: "Now let's create 20 overlapping circles,\nturning 18 degrees between each circle."
      grade4_frozen_functions3_instruction: "Here's a ”Create circle” block that\ncan make circles of different sizes. Can you use this to create a small circle\nof size 5 and a larger circle of size 10?"
      grade4_frozen_functions4_instruction: "Intricate snow patterns can be created\nwith very simple shapes. Can you make a pattern by repeating 5 circles of\nsize 5 and 5 circles of size 10?"
      grade4_frozen_nested_loop_diamonds1_instruction: "Let’s use a repeat block\nto create a rhombus. Like a square, all sides are equal length, but the angles\nare different. This one has 60 degree and 120 degree angles instead of all\n90 degree angles."
      grade4_frozen_nested_loop_diamonds2_instruction: "Did you know every snowflake\nis a different shape? Let's create a new snowflake by using another “Repeat\"\nblock to repeat a parallelogram 4 times, turning right by 90 degrees between\neach parallelogram."
      grade4_frozen_nested_loop_diamonds3_instruction: "Now, let's create a new\nsnowflake by using the repeat block to repeat a parallelogram 10 times, turning\nright by 36 degrees between each one."
      grade4_frozen_nested_loop_rectangle1_instruction: "Hi, I’m Anna of Arendelle!\nLet’s use a repeat block to create a rectangle. This one is  200 pixels long\nand 100 pixels tall. All of the corners are 90 degree angles."
      grade4_frozen_square_instruction: "Hi, I’m Anna of Arendelle! Let’s make a\nsquare with the “Repeat” block, which uses fewer blocks. How many times (???)\nshould the “Repeat” block loop the blocks inside it to make a square?"
      grade4_frozen_square_loop1_instruction: "Hi, I’m Anna of Arendelle! Let’s make\na square with the “Repeat” block, which uses fewer blocks. How many times\n(???) should the “Repeat” block loop the blocks inside it to make a square?"
      grade4_frozen_square_loop2_instruction: "Let's create three squares, turning\nafter each square. Be sure to turn by 120 degrees before each new square."
      grade4_frozen_square_loop3_instruction: "\"반복\" 블록을 사용해서 사각형을 10번 만들어 보세요.\n삼각형을 한 번씩 그릴 때마다, 회전 블록을 이용해서 36 도 만큼 씩 회전시켜주세요."
      grade4_playLab_proj_example1_instruction: "instructions"
      grade4_playLab_proj_example1a_instruction: "Take a look at this project.  Do\nyou see how it was made?"
      grade4_playLab_proj_example2a_instruction: "Take a look at this project.  Do\nyou see how it was made?"
      grade4_playlab_freeplay_instruction: "It's free play time! Have fun with all\nthe blocks in your tool box. "
      grade4_playlab_test_instruction: "오른쪽 방향키를 이용해 하트를 맞춰보세요.\\r\n\\r\n이 게임에서는 어떻게 포인트를 올려야 할까요?\n강아지가 하트로 고양이를 맞출 때마다 \"점수\" 변수에 1씩 더해보세요.\n\"캐릭터 2가 물체에 닿으면\" 이벤트를 이용해 점수를 업데이트하면 됩니다. \"점수=점수+1\"로 설정해서\n변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요."
      grade4_playlab_test2_instruction: "Here's a function called `jump` that causes\nyour main character to jump up 100 pixels. Run the program and use the jump\nfunction to collect all of the flags by moving the dog with the arrow keys."
      grade4_prompt_test_instruction: "This is a test play lab level."
      grade4_review_artist1_instruction: "Hi, I'm an artist. You can write code\nto make me draw almost anything. Use a few blocks to make me draw over the\ngrey lines in the picture. (Each line is 100 pixels long)"
      grade4_review_artist2_instruction: "이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:\n세 변의 길이는 모두 같습니다."
      grade4_review_artist3_instruction: "The jump block moves the artist without\ndrawing. Draw the dashed line using both the `jump forward` and `move forward`\nblocks. Each line is 50 pixels long."
      grade4_review_bee1_instruction: "Now use the `repeat` block to collect all\nof the nectar and make all of the honey."
      grade4_review_bee2_instruction: "최대한 적은 블록들을 사용해서\n각 꽃에서 꽃꿀을 모은 후, 각각의 벌집에 꿀을 만들어 넣어 보세요."
      grade4_review_bee3_instruction: "꿀벌이 엄청 바쁘네요!\\r\n\\r\n최대한 적은 블록들을 사용해서\n꽃꿀을 모으고 꿀을 만들 수 있도록 꿀벌을 도와 주세요."
      grade4_scaffolded_project1_instruction: "It is amazing how much you have learned!\nLet's put them together to make a game, step by step."
      grade4_scaffolded_project2_instruction: "Now let's get things moving! Use\nevent handlers and actions to make your hero move.\\r\n\\r\nWe've added these\nblocks to your tool box to help you.\\r\n"
      grade4_scaffolded_project3_instruction: "Now that your game has a hero, it's\ntime to start adding other actors and assigning them behaviors. \\r\n\\r\nAdd\ntwo or more additional actors to your game and make them move. Do you want\nto have an actor patrol back and forth? Try using a these new blocks to bring\nthese other components of your game to life!"
      grade4_scaffolded_project4_instruction: "Just getting the actors moving is\na great step, but we need to program some interactions to make this really\nfeel like a game. A simple way to do this is to add or remove points when\nactors collide with projectiles or each other. Find some interesting ways\nto change the score in your game."
      grade4_scaffolded_project4a_instruction: "Just getting the actors moving is\na great step, but we need to program some interactions to make this really\nfeel like a game. A simple way to do this is to add or remove points when\nactors collide with projectiles or each other. Find some interesting ways\nto change the score in your game."
      grade4_scaffolded_project5_instruction: "Now spend some time making sure the\ngame works the way you want. Try including a way to win or lose your game."
      grade4_scaffolded_project6_instruction: "You've finished! Now you can play\nyour game or share it with your friends and classmates!"
      grade5_artist_binary1_instruction: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는 0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\r\n\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면, 그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을 그리도록 해보세요."
      grade5_artist_binary10_instruction: "여기를 눌러 힌트를 살펴보세요."
      grade5_artist_binary11_instruction: "Free Play: Here's a blank canvas for\nyou to draw on.  Have fun!"
      grade5_artist_binary2_instruction: "여기에 1, 0 로만 이루어진 문자열을 입력해서, 화가를 왼쪽에서 오른쪽으로, 위에서 아래로 움직이는 함수가 있습니다. 화가는 1을 보면 사각형을 채우고, 0이면 무시할 것입니다. \\r\n\\r\n이 코드를 실행시킨 후, 화가가 2진 정보를 이용해서 이 패턴을 그려내는 것을 살펴보세요."
      grade5_artist_binary3_instruction: "Which of these binary strings could you\nloop 8 times to draw this image?"
      grade5_artist_binary4_instruction: "Can you draw this pattern by looping just\nthree binary digits (0s and 1s)?"
      grade5_artist_binary5_instruction: "Each binary string represents one row of\nthis picture. Can you rearrange them so it draws a smiley face instead of\na frowny face?"
      grade5_artist_binary6_instruction: "Which 6 digit binary string, repeated 11\ntimes, will draw this image?"
      grade5_artist_binary7_instruction: "이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?"
      grade5_artist_binary8_instruction: "이 그림을 마무리 해보세요."
      grade5_artist_binary9_instruction: "Here's a higher resolution canvas to draw\non - 16 pixels by 16 pixels!\\r\n\\r\nSee what happens when we start to get\ncreative with the bits?"
      grade5_artist_for_loops1_instruction: "반복 블록을 1개 사용하여 너비가 50 픽셀인 삼각형을 그려주세요."
      grade5_artist_for_loops10_instruction: "Can you figure out how to use all of\nthe things you've learned to create this image?\\r\n\\r\nNeed a hint? Click\nhere."
      grade5_artist_for_loops1a_instruction: "Try using a `for loop`to create this\ntriangular design. Don't worry that the numbers are different than the last\npuzzle. As long as you turn by the right number of degrees, the artist will\nmake the correct shape!"
      grade5_artist_for_loops1b_instruction: "Experiment with the `for` loop and\nplay with the `counter` variable."
      grade5_artist_for_loops2_instruction: "Use a `repeat` inside of a `for` loop\nto create this stack of triangles that goes from 50 pixels to 100 pixels."
      grade5_artist_for_loops3_instruction: "These triangles go from 20 pixel sides\nto 200 pixel sides, and each triangle is 20 pixels larger than the last. "
      grade5_artist_for_loops4_instruction: "These squares start at 15 pixels long,\nthe largest is 300 pixels long, and each square is 15 pixels larger than the\nlast. "
      grade5_artist_for_loops5_instruction: "Just one little change to the code from\nthe last image can create this drawing. Can you figure out what that change\nis?\\r\n\\r\nHint:  You need to remove something!"
      grade5_artist_for_loops6_instruction: "If you turn a little bit more or less\nthan you normally would for a shape, it creates a neat effect. Try using some\nof the code from the last level, but turning 89 degrees to create this twisted\nsquare spiral."
      grade5_artist_for_loops7_instruction: "Make three small changes to the code\nfrom the last level to get this!"
      grade5_artist_for_loops7a_instruction: "Take the angle down to 72 degrees to\nget a spiraled pentagon."
      grade5_artist_for_loops7b_instruction: "Use the counter inside the `set alpha`\nblock to get this faded center.\\r\n(This hexagon pattern was made using a\n60 degree turn.)"
      grade5_artist_for_loops8_instruction: "Remember back in a previous stage when\nwe used a variable to control the number of sides in a shape? We are going\nto do the same thing with the `counter` variable now. This pattern starts\nwith a triangle and adds one side at a time until it draws a decagon (10 sides).\nEach side should be 100 pixels long. "
      grade5_artist_for_loops9_instruction: "Let's put it all together!  Using your\nknowledge of `for` loops and the `counter` variable, create this drawing where\neach shape has two more sides than the last.  Make sure that each side is\n10 times as long as the number of sides in the polygon.\\r\n\\r\nVery little\nof the code has been provided for you."
      grade5_artist_for_loopsfreeplay11_instruction: "멋진 자유 플레이: 여러분은 이제 이런 패턴을 만들기 위해 필요한 모든 것들을 배웠습니다! 이 그림이 여러분이 느끼기에 멋지다면, 비슷한 것을 한 번 만들어 보세요. 아니면, 만들고 싶은 것을 자유롭게 만들어도 됩니다.\\r\n\\r\n힌트가 필요한가요? 여기를 클릭하세요."
      grade5_artist_for_loopsfreeplay12_instruction: "Free Play: Try using the `counter`\nvariable with other drawing elements to make magical images like this one."
      grade5_artist_freeplay_instruction: "Create your own project! This creation\nwill be saved to your Projects dashboard so that you can easily edit it any\ntime!"
      grade5_artist_functionparameters10_instruction: "멋진 자유 플레이: 여러분들은 이런 패턴을 만들기 위해 필요한 모든 것들을 배웠습니다.\n이 그림이 멋지다고 생각하면, 비슷하게 다른 것을 만들어보세요. 아니면, 만들고 싶은 것을\n만들어보세요.\\r\n\\r\n이런 멋진 패턴이 어떻게 만들어졌는지 궁금한가요? "
      grade5_artist_functionparameters11_instruction: "자유 플레이: 여기 여러분들이 작성한 함수들과 가지고 놀 수 있는 몇 개의 함수가 더 있습니다.\n멋진 것들을 그려보세요! 선 그리기로 얼마나 많은 것들을 그릴 수 있는지 해보세요."
      grade5_artist_functionparameters7_instruction: "This image is similar to the\nlast. Can you use a `for` loop with your function to make this design?"
      grade5_artist_functionparameters8_instruction: "\"다각형 그리기\" 함수를 수정해 보세요. \"변의 길이\" 매개 변수가 있습니다. 이제 \"길이\"를 매개 변수로 추가해 보세요. \\r\n각 모양의 둘레의 길이는 200 픽셀입니다. 다각형에서 면의 개수가 달라질 때, 같은 크기로 만드는 공식 기억하고 있으시죠?"
      grade5_artist_functionparameters9_instruction: "Challenge: Edit `draw a spiral\nedge` to use `length` and `sides` parameters, then recreate these shapes."
      grade5_artist_functionparameters9a_instruction: "Finish off the `draw a spiral\nedge` function to also ask for a minimum length for the center of the spiral."
      grade5_artist_functionparameters9b_instruction: "Can you figure out how to\nmake this drawing using the function that you just created?"
      grade5_artist_functionparameters_6_instruction: "이 그림을 완성할 수 있겠나요?\n모든 모양의 한 변의 길이는 100 픽셀입니다."
      grade5_artist_parameters_squares1_instruction: "Click \"edit\" to fill in the\nfunction definition of \"draw a square\" and add a parameter. It should take\na length parameter, just like the triangle. This time, draw 3 squares: 25,\n50 and 75 pixels in length, each 100 pixels apart."
      grade5_artist_parameters_squares1a_instruction: "This program looks okay from\nhere, but something isn't working right. See if you can figure out how to\nedit the function 'draw a square' to find the bug."
      grade5_artist_parameters_squares2_instruction: "Create a function called 'draw\na square' and use it to outline these four boxes. Make sure to add a parameter\nfor 'length'! Starting from the upper right, the box widths are 50, 100,\n150, and 200."
      grade5_artist_parameters_squares2a_instruction: "Edit the function to accept\na parameter called `length`."
      grade5_artist_parameters_stars1_instruction: "That last one is tough if you\nonly use loops. Let's try drawing the same picture using this new 'function'\nthat will help to **draw a star**."
      grade5_artist_parameters_triangles1_instruction: "This program looks okay from\nhere, but something isn't working right. See if you can figure out how to\nedit the function 'draw a square' to find the bug."
      grade5_artist_parameters_triangles1a_instruction: "Today, we're going to try\nout a different, more powerful function editor. See if you can figure out\nhow to edit the function 'draw a triangle' to find the bugs."
      grade5_artist_parameters_triangles1aa_instruction: "Click \"edit\" to fill\nin the function definition of \"draw a triangle\" and add a parameter. It\nshould take a length parameter, just like the triangle. This time, draw 3\ntriangles: 25, 50 and 75 pixels in length, each 100 pixels apart."
      grade5_artist_parameters_triangles2_instruction: "This drawing can be easily\ncreated using a new type of function that includes a parameter. The sides\nof each triangle are 25 pixels larger than the last.  The first triangle has\n25 pixel sides. Replace the '???' with the correct values to draw the picture."
      grade5_artist_parameters_triangles2a_instruction: "이 함수 블록들이 뭔가 다르다는 것을 알아차리셨나요?\n\"실행\"을 눌러 어떤 일이 일어나나 살펴보세요."
      grade5_artist_parameters_triangles3_instruction: "The code for this triangle\nfunction is broken.\\r\n\\r\nCan you edit the function to fix it, and then make\ntriangles of length 150, 75, 25?"
      grade5_artist_parameters_triangles4_instruction: "The code for this triangle\nfunction is broken. Can you edit the function to fix it, and then make triangles\nof length 25, 50, and 75?"
      grade5_artist_parameters_trianglesy_instruction: "The code for this triangle\nfunction is broken.\\r\n\\r\nCan you edit the function to fix it, and then make\ntriangles of length 150, 75, 25?"
      grade5_artist_variables_freeplay10_instruction: "Free Play: Experiment with\nthe number of sides this shape has. Can you change the algorithm so that the\noverall size of the shape stays the same, no matter how many sides it has?\nHint: If you divide your starting length by the number of sides, the length\nof each side will get shorter as the number of sides gets higher."
      grade5_artist_variables_freeplay14_instruction: "Free Play: Check it out! Now\nyour algorithm is nested within one more loop. Experiment with changing the\nvalues of your two variables to draw cool patterns.\\r\n\\r\nFor even more effect,\ntry playing with color!  Use random colors inside loops to see how it changes\nyour design."
      grade5_artist_variables_freeplay15_instruction: "Want a second peek at the\ninspiration design or the hints?  Click here!\\r\n\\r\nOtherwise, make a design\nall your own!"
      grade5_artist_variables_freeplay16_instruction: "Still playing?  Here is a\nblank canvas where you can create whatever you want!"
      grade5_artist_variables_hexagons1_instruction: "Let's try it again! \\r\n\\r\nCan\nyou set the `length` variable to 60 to make this cool design with hexagons?"
      grade5_artist_variables_letterT11_instruction: "Here’s more complicated code\nusing the same concepts from the last puzzle - what should you set the \"sides\"\nvariable to in order to draw this picture made of squares?"
      grade5_artist_variables_new1_instruction: "Here is a program that will create\nan image. There are a few things that are wrong with it."
      grade5_artist_variables_octagons13_instruction: "When a shape has lots of sides,\neach side needs to be shorter if you want the whole pattern to fit on the\nscreen. \\r\nLet's recreate the algorithm for this amazing pattern, but instead\nof manually setting the `length` variable, let's use a math block with the\n`sides` variable inside to make sure that each shape fits correctly. The perimeter\nof each polygon is 300 pixels.\\r\nNeed some hints?  Click here."
      grade5_artist_variables_pentagon8_instruction: "Use what you learned in the\nlast puzzle to create this hexagon using the \"sides\" variable.\\r\n\\r\nSee\nhow you could change just one value to draw a triangle,  square, pentagon,\nor octagon?"
      grade5_artist_variables_pentagon9_instruction: "Now, recreate the algorithm\nfrom the last level and create a pentagon with sides of length 150."
      grade5_artist_variables_pentagons1_instruction: "Draw this pattern of pentagons\nwith 100 pixel sides by setting the right value for `length` and dropping\nthe `length` variable into all of the the correct places. \\r\n\\r\nSee how\nyou only have to set the value for `length` once, and the code uses the right\nvalue everywhere?"
      grade5_artist_variables_pentagons12_instruction: "Let's set the \"sides\"\nvariable to 5. The more sides we add to this algorithm, the bigger this whole\npattern gets! Notice that there is another variable called \"length\". We\ncan now use that wherever we have a \"move forward.\" Set the \"length\" variable\nto 75 for this shape."
      grade5_artist_variables_rectangle6_instruction: "Now I want to make a rectangle\nthat is twice as tall as it is wide. We've got a variable called \"width\"\nthat needs to be set to 100. Can you use the math blocks to complete the code?"
      grade5_artist_variables_square7_instruction: "Here’s some code that can draw\nany regular polygon. There’s a new variable called sides that is set to 4.\nCan you use the sides variable (along with the math block) to turn the right\namount regardless of how many sides there are in the polygon?\\r\n\\r\nClick\nhere to go back to the hint!"
      grade5_artist_variables_triangles2_instruction: "Instead of using \"move forward\nby 150,\" the \"move\" block is now referencing a variable called \"length.\"\nCan you set \"length\" to 150 to draw this new triangle?"
      grade5_artist_variables_triangles3_instruction: "Drag a number block to both\nthe `set length` block and the `repeat _ times` block to draw a set of 50\npixel triangles. "
      grade5_bee_for_loops1_instruction: "Use a loop to collect the nectar from each\nflower."
      grade5_bee_for_loops10_instruction: "What should your increment be to collect\n15, then 12, then 9, 6, 3 nectar?"
      grade5_bee_for_loops11_instruction: "**Challenge:** Take what you've learned\nabout `for` loops and try to solve this problem. "
      grade5_bee_for_loops2_instruction: "Add the code necessary to make sure the\nbee collects all the nectar. Look at how much code you need for this puzzle!\n(We'll learn a simpler way in the next puzzle.)"
      grade5_bee_for_loops3_instruction: "Try this puzzle using the `for` loop with\n`counter` variable and see how much shorter your code becomes."
      grade5_bee_for_loops4_instruction: "Help the bee collect all of the nectar."
      grade5_bee_for_loops6_instruction: "You can also use a \"for loop\" to count\ndown. Try gathering this nectar by counting down from 5 to 1 by 1."
      grade5_bee_for_loops7_instruction: "Try collecting these flowers using an increment\nof 2."
      grade5_bee_for_loops8_instruction: "You've got this! What should your increment\nbe to collect 3, 6, 9, 12, 15 nectar?"
      grade5_bee_for_loops9_instruction: "Use the `counter` variable to navigate\nthis garden with the fewest number of blocks possible."
      grade5_bee_parameters_new8_instruction: "That's a great function you've created!\nYou are officially on your own now. Collect all the nectar. Make all the honey."
      grade5_bee_parameters_new9_instruction: "Bonus Challenge! If you are feeling\nambitious, try this puzzle. It is possible to collect all of the nectar and\nmake all of the honey using only a For loop, a Repeat loop, a function call,\nand a turn. Try it all on your own, or view the hints to build it step-by-step.\nGreat job with this stage!"
      grade5_pixelation_instruction: "Encode an image of anything you like using\nbinary. The binary language will be represented with '0' and '1' only."
      grade5_playlab_freeplay_instruction: "It's free play time! Have fun with all\nthe blocks in your tool box. "
      grade5_playlab_parameters_points1_instruction: "Here's the same game but most\nof the code is hidden. We've added a new function called `score_points.`\\r\n\\r\nAdd\na new parameter called `points` to the `player_score` function. \\r\n\\r\nThe\n`score_points` function should be able to both add and remove points from\n`player_score` depending on which actor is hit.\\r\nChanging the score by 1\nwill add a point, while changing the score by -1 will subtract a point.\\r\n\\r\nWhen\nyou're done, click \"Run\" to play.  When Dog scores 6 points, you will move\non to the next puzzle. "
      grade5_playlab_variables1_instruction: "This time you don't have to write\nany code, just hit \"Run\" to play the game! In this game, you're the dog\nwho is trying to collect more flags than the cat. Use the down arrow to control\nthe dog. Press \"Finish\" when you're done playing."
      grade5_playlab_variables10_instruction: "\"순찰\" 함수에 \"캐릭터\" 매개변수를 추가해서, 원하는 캐릭터를 화면에 나타낼 수 있도록 해보세요.\n캐릭터들은 1, 2, 3 으로 선택할 수 있도록 해주세요."
      grade5_playlab_variables11_instruction: "\"순찰\" 함수에 \"속도\" 매개변수를 더 추가해 보세요. 다른 캐릭터들이 깃발을 잡기 전에 펭귄이 깃발들을 잡을 수 있도록 \"속도\" 매개변수를 \"속도 설정\" 블록에 사용하세요."
      grade5_playlab_variables12_instruction: "자 이제 즐겨보세요. 주어진 코드가 어떻게 동작하게 될지 한 블록씩 살펴보세요. \\r\n\\r\n살펴본 다음에, 강아지 캐릭터를 방향키로 움직여 깃발을 모두 모아보세요."
      grade5_playlab_variables13_instruction: "\"캐릭터가 닿으면\" 블록을 이용해서, 강아지 캐릭터다 다른 캐릭터들에 닿으면, 처음의 가장 위쪽의 가장 왼쪽으로 이동되도록 해 보세요."
      grade5_playlab_variables14_instruction: "It's free play time! Have fun with\nall the blocks in your tool box. "
      grade5_playlab_variables1ask_instruction: "This time, when you press 'run',\nyou will see a 'prompt' asking you for a number. This number will be stored\nin a variable used to set the dog's speed.\\r\n\\r\n\\r\nPay attention to how\nthis program is written!"
      grade5_playlab_variables2_instruction: "이전 퍼즐은 공정하지 않았습니다! \"강아지 속도\" 변수의 값을 바꿔서 고양이보다 더 많은 깃발을 모을 수 있도록 해보세요. 10 개의 깃발을 먼저 모으면 이깁니다!"
      grade5_playlab_variables3_instruction: "이번에는 새로운 종류의 게임입니다!\n왼쪽/오른쪽 화살표를 이용해 움직이고, 위/아래 화살표를 이용해서 점프합니다. 모든 깃발을 모을 수 있는지 해보세요."
      grade5_playlab_variables4_instruction: "Now we're using a variable called\n\"height\" to control how high the dog can jump. Update the \"height\" variable\nso that the dog can jump high enough to reach all the flags."
      grade5_playlab_variables5_instruction: "You've seen now how a variable can\nbe used to set the height of an actor's jump. How else could  you use a variable?\\r\n\\r\nLet's\nbuild a game! First we'll need a score. Try setting the 'points' variable\nto give yourself 10 free points!"
      grade5_playlab_variables6_instruction: "오른쪽 방향키를 이용해 하트를 맞춰보세요.\\r\n\\r\n이 게임에서는 어떻게 포인트를 올려야 할까요?\n강아지가 하트로 고양이를 맞출 때마다 \"점수\" 변수에 1씩 더해보세요.\n\"캐릭터 2가 물체에 닿으면\" 이벤트를 이용해 점수를 업데이트하면 됩니다. \"점수=점수+1\"로 설정해서\n변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요."
      grade5_playlab_variables6ask_instruction: "This time, you need 100 points to\nwin!  Don't worry though, you can choose how many points you earn each time\nyou score a hit!\\r\nTry adding the `ask` block and changing the number 1 out\nfor the variable `value`."
      grade5_playlab_variables7_instruction: "좋아요. 이제 이 게임을 좀더 어렵게 만들어보세요. 강아지(캐릭터 1) 가 고양이(캐릭터 2) 가 발사한\n노란 하트를 맞으면, 점수를 잃어야 합니다. 10 포인트에서 시작하기 때문에 아주 어렵지는 않습니다.\n10 부터 0 까지 포인트를 내려서 이 레벨을 통과해보세요."
      grade5_playlab_variables71_instruction: "이전 단계에서 봤던 게임입니다만, 대부분의 코드가 숨겨져있습니다. 여기에 \"score_points\" 함수가 있습니다.\\r\n\\r\n함수를 수정해서 \"points\" 매개변수를 \"player_score\"의 변수로 추가해 주세요.\\r\n\\r\n\"play_score\" 변수는 강아지가 고양이에게 하트를 붙일 때마다 증가하고, 고양이가 강아지에게 하트를 붙일 때마다 감소해야합니다.\\r\n\\r\n참고:\n\"실행\"을 눌러 실행해 보세요. 강아지가 6 포인트를 얻으면 다음 퍼즐로 갈 수 있습니다. "
      grade5_playlab_variables81_instruction: "여러분을 위해서 함수를 하나더 추가했습니다.\\r\n\\r\n\"if\" 명령어를 이용해서 \"player_score\" 가 일정 점수를 넘으면 \"level_up\" 함수가 실행되도록 프로그램을 만들어 보세요.\\r\n\\r\n예시: \"player_score\" > 6\\r\n\\r\n게임을 해보고, 레벨4를 통과해서 다음 퍼즐로 가보세요. "
      grade5_playlab_variables9_instruction: "\"순찰\" 함수가 있습니다.\n함수를 수정해서 고양이가 400 픽셀 위로 이동 했다가, 다시 400 픽셀 아래로 이동하게 해보세요."
      grade5_playlab_variables_freeplay_instruction: "Free Play time! Here are all\nof the variables we've played with so far in this stage, as well as a few\nmore in case you want them. \\r\n\\r\nNotice that there are now so many blocks\nin our toolbox that they need to be organized!  Here, we've put each piece\ninto an appropriate category.  Take some time to explore everything that is\navailable. When you're done browsing, make a game or story using repeats,\nvariables, and events.  \\r\n\\r\nHint: scroll down to see all the commands\nin the workspace."
      grade5_playlab_variables_jump1_instruction: "This puzzle uses a hidden function\nthat makes the dog jump when the 'up' arrow is pressed. The height of the\njumps can be set at the start of the game using the 'jumpPower' variable.\nTry to touch all of the flags!"
      grade5_prompt_test_instruction: "Variables aren't always numbers. What if\nyou wanted to store a word or text? Experiment with the new `ask` block."
      gradeK_sequence_4_instruction: "Try this one yourself from the beginning."
      gradek_adventurer_loops1_instruction: "Three piles of gold!  Collect all three."
      gradek_adventurer_loops10_instruction: "Help me get all of the gold from this\ncave."
      gradek_adventurer_loops2_instruction: "How can Laurel collect all five piles\nof gold using only one `[E-->]` block?"
      gradek_adventurer_loops3_instruction: "Can you fix Laurel's path to get all\nof this gold?"
      gradek_adventurer_loops4_instruction: "Use what you learned to get all of the\ncoins."
      gradek_adventurer_loops4a_instruction: "Add to this code to collect all of\nthe coins."
      gradek_adventurer_loops5_instruction: "What should you add to this code to\nget all of the gold?"
      gradek_adventurer_loops6_instruction: "Write the code to get all of this gold."
      gradek_adventurer_loops7_instruction: "Write the code to get all of this gold."
      gradek_adventurer_loops7_challenge_instruction: "**Challenge:** The gold goes\nall the way up these stairs!  Write the code to help me get it all."
      gradek_adventurer_loops8_instruction: "Help me get all of the gold from this\ndeep valley."
      gradek_adventurer_loops9_instruction: "Help me get all of the gold from this\ncave."
      gradek_adventurer_loopsFP_instruction: "Eureka!  Collect as much gold as you\ncan!"
      gradek_adventurer_loopsPre_instruction: "This is Laurel the Adventurer.  Mover\nher around and get as much gold as you can!"
      gradek_artist_loops1_instruction: "Help the artist draw this line two times\nforward."
      gradek_artist_loops2_instruction: "Our artist is trying to draw a line five\ntimes, but can't get it right.  Can you help?"
      gradek_artist_loops3_instruction: "Now, use a `repeat` loop to draw this line\nfive times!"
      gradek_artist_loops4_instruction: "Draw a line seven steps long. This will\nbecome our horizon."
      gradek_artist_loops5_instruction: "Let's put a nice hill in the back."
      gradek_artist_loops6_instruction: "Use the `repeat` loop to add waves to the\nwater."
      gradek_artist_loops7_instruction: "We need a ladder up to the boat."
      gradek_artist_loops8_instruction: "Challenge: The stairs down to the dock are\nbroken.  Help me fix them."
      gradek_artist_loops9_instruction: "Time to head back to land. Help me put down\nstones so I don't fall in!"
      gradek_artist_loopsA_instruction: "Help me build steps to watch the ship sail\naway."
      gradek_artist_loopsFP_instruction: "The artist saw something funny in the distance.  Draw\nwhat you think he saw."
      gradek_artist_loopsPre_instruction: "This is a new type of puzzle called \"Artist\".\nPlay with the level and draw something fun."
      gradek_playlab_events1_instruction: "Make your robot say \"Hello!\" when the\nbutton is clicked."
      gradek_playlab_events1a_instruction: "Add a block so that when you click the\n\"up\" button, Olive the Cat walks up."
      gradek_playlab_events1c_instruction: "Jorge the Dog wants to say \"Hi there.\"  Can\nyou help him?"
      gradek_playlab_events2_instruction: "Edit the code so that when the second\nbird is clicked, your program plays a sound!"
      gradek_playlab_events2a_instruction: "Add a block so that when you click \"down\"\nOlive the Cat walks down."
      gradek_playlab_events2c_instruction: "Help Jorge the Dog get moving by connecting\nthe `move left` block to the `when left` event block that is already in the\nworkspace."
      gradek_playlab_events3_instruction: "When the third bird is clicked, the background\nshould change to a city. Can you add code to make this happen?"
      gradek_playlab_events3a_instruction: "When the third bird is clicked, the background\nshould change to a city. Can you add code to make this happen?"
      gradek_playlab_events3b_instruction: "Add a button so that Olive the Cat moves\nright when you click the \"right\" button."
      gradek_playlab_events3c_instruction: "Now, get Jorge to move right when the\n`right` button is clicked."
      gradek_playlab_events4_instruction: "Add code to make something happen when\nthe fourth bird is clicked. Be creative!"
      gradek_playlab_events4a_instruction: "Add a block so that Olive the Cat moves\nleft when you click the \"left\" button."
      gradek_playlab_events4c_instruction: "Add events to have Jorge move up and\ndown when the `up` and `down` buttons are pressed."
      gradek_playlab_events5_instruction: "About My Robot Project! Write code so\nthat clicking on each bird shows a new fact about your robot."
      gradek_playlab_events5a_instruction: "About My Robot Project! Write code so\nthat clicking on each bird shows a new fact about your robot."
      gradek_playlab_events5c_instruction: "Make this more interesting by changing\nthe background and playing a random sound when Jorge is clicked."
      gradek_playlab_eventsA_instruction: "Now, have the cat change to a random size\nAND have it play a random sound when you click the center button."
      gradek_playlab_eventsFP_instruction: "Add anything you want to this game.  Can\nyou make the dinosaur disappear when Jorge runs into him?"
      gradek_playlab_eventsPre_instruction: "This is a Play Lab level.  Move blocks\nto the workspace and see what happens!"
      group test_instruction: "Make a game"
      harvey_pixelation_instruction: "Encode an image of anything you like using\nbinary. The binary language will be represented with '0' and '1' only."
      harvey_tictactoe_instruction: "Let's play a game! Draw as many X's as you\ncan! Can you get 3 in a row?"
      jessie-test_instruction: "Lots of instructions"
      k-1 maze 1_instruction: "오른쪽 돼지에게 보내주세요."
      kikiTesta_instruction: "Our adventurer wants to collect coins.  But she can\nonly use 4 blocks to get them.\\r\n\\r\nCan you help her grab as many as she\ncan using just 4 blocks?"
      kikiTesting_instruction: "See all angles of Stevie and Jorge"
      level 'grade3_Loops_10_instruction: "Such a busy bee!\\r\n\\r\nHelp bee collect\nall of the nectar and make all of the honey with the fewest blocks possible."
      level 'grade3_Loops_11_instruction: "The shape of this path is different than\nthe others. \\r\n\\r\nCan you collect all of the nectar using as few blocks\nas possible?"
      level 'grade3_Loops_12_instruction: "Can you find the quickest way for the\nbee to collect all of the nectar and make all of the honey?"
      level 'grade3_Loops_2_instruction: "This time, use a loop to gather all of\nthe nectar."
      level 'grade3_Loops_3_instruction: "Use a `repeat` loop to collect all of the\nnectar."
      level 'grade3_Loops_4_instruction: "Now use the `repeat` block to collect all\nof the nectar and make all of the honey."
      level 'grade3_Loops_5_instruction: "What a beautiful field of flowers!   Help\nthe bee visit each one.  Can you find a way to do it with fewer than 7 blocks?"
      level 'grade3_Loops_6_instruction: "How many times can loops help you in this\npuzzle?  \\r\n\\r\nLoops are your friend! Use a few of them to complete this\npuzzle with the fewest blocks possible."
      level 'grade3_Loops_7_instruction: "Those flowers look tasty!\\r\n\\r\nCollect\nnectar from each of the flowers using the fewest blocks possible."
      level 'grade3_Loops_8_instruction: "Collect all the nectar and make all of\nthe honey using the fewest blocks possible."
      level 'grade3_Loops_9_instruction: "Collect nectar from each flower and make\nhoney at each honeycomb using the fewest blocks possible."
      level grade3_Loops_2_instruction: "This time, use a loop to gather all of the\nnectar."
      love_spring_1_instruction: "Let's celebrate Spring!  We have put some seeds\nin the ground to prepare for the season's flowers.  Can you cover them up\nso that the birds don't eat them?"
      love_spring_2_instruction: "Our flowers are in full bloom!  Now we need the\nbee to grab nectar from each one so he can make plenty of honey back at his\nhive!"
      love_spring_3_instruction: "Figure out how to change this code so that Robin\nchooses a number between 1 and 20.  \\r\n\\r\nWhen you're ready, press \"Run\"\nand play until you guess Robin's number!"
      mike3bit_instruction: "We start you with the 4x2 image Maddie was creating,\nbut we've left out the last few pixels. Finish off the image by figuring\nout which colors are missing and encoding them."
      mike3bitbird_instruction: "Here's an example of an image made with 3-bit color.\nTry changing it to understand how it works. If you want to reset the image,\npress \"Start Over\"."
      mike3bitfreeplay_instruction: "Make something awesome and share it with your\nclassmates! You can copy and paste the value of a pixel to use it repeatedly."
      mike3bitmario_instruction: "A careless binary coder typed in ONE extra 0 or\n1 somewhere within this image's data. The extra bit that is causing Mario\nto glitch out! \\r\n\\r\nDelete the extra bit to restore Mario back to normal!"
      playEventsK1_instruction: "This game is called \"Play Lab\".  See if you can\nfigure out what each block does."
      playEventsK2_instruction: "Jorge wants to say \"Hi there.\"\\r\n\\r\nCan you\nhelp?"
      playEventsK3_instruction: "Jorge wants to be scratched behind the ears!  Can\nyou make it so that when you click Jorge he is happy?"
      playEventsK4_instruction: "Can you make it so that Jorge the dog chases Robin\nthe bird when you click the up arrow?"
      playEventsK5_instruction: "Now add code so that Robin flies away when you click\nthe forward arrow."
      playEventsK6_instruction: "Have Robin talk back to Jorge when you click on\nher."
      playEventsK7_instruction: "What else can you do in this fun scene?"
      playLabDebugVideo1_instruction: "Jorge the Dog wants to say \"Hi there.\"  Can\nyou help him?"
      sample1_instruction: "Our adventurer wants to collect coins.  But she can only\nuse 4 blocks to get them.\\r\n\\r\nCan you help her grab as many as she can\nusing just 4 blocks?"
      sample10_instruction: "Now you can use loops to draw whatever you like!"
      sample10a_instruction: "You have helped the adventurer and her bee!  As a reward,\nplease stay and play around in my magical village. \\r\n\\r\nYou should have\neverything you need to create a game of your own."
      sample2_instruction: "Use what you've learned to help bee gather all of this\nhoney using only the blocks that you have here."
      sample2a_instruction: "Use what you've learned to help bee gather all of this\nhoney using only 4 blocks."
      sample3_instruction: "Now you can help bee make all of the honey using just\nthe blocks in the toolbox."
      sample3assessment_instruction: "Can you figure out how to gather all of this\nnectar in just one try?"
      sample4_instruction: "Our adventurer has found a stash of coins in this cave.\\r\n\\r\nCan\nyou help her grab as many as she can using just 7 blocks?"
      sample5_instruction: "Help bee make all of the honey."
      sample6_instruction: 'Challenge: Help bee get all of the nectar.'
      sample7assessment_instruction: "Can you help bee make all of the honey in just\none try?"
      sample8_instruction: "Look at this trove of coins! How many can you get the\nadventurer to grab?"
      sample9_instruction: "Use loops to help the artist connect all of the dots.\n"
      sample9a_instruction: "The wizard has found his potions!  Use everything you\nhave learned to help him collect them."
      scrat 16 (copy 1)_instruction: "Acorn! Acorn! Acorn! Use an \"if\" block to\nget me there with the fewest number of blocks."
      scrat 16_instruction: "도토리! 도토리! 도토리! \"만약\" 블럭을 이용하면서,\n블럭들을 최대한 적게 사용해서 도토리가 있는 곳으로 보내주세요."
      scrat 17 (copy 1)_instruction: "Ok, let's do that again for practice - this\nisn't very different, but watch out for the <insert obstacle name for Scrat>!"
      scrat 17_instruction: "좋아요, 다시 한 번 해봅시다. - 크게 다르지는 않지만, 벽을 조심해야 해요!"
      scrat 18 (copy 1)_instruction: "The \"If-else\" blocks checks a condition,\nand then does one thing OR another. To get me to the acorn try to use this\nnew block."
      scrat 18_instruction: "\"만약(if)-아니면(else)\" 블럭은 조건을 검사하고, 두 가지 중 하나만 실행합니다. 도토리가 있는 위치로 이동시키기 위해 이 새로운 블럭을 사용하세요."
      scrat 19 (copy 1)_instruction: "One more practice of the \"if-else\" block,\ncan you get it right on your first try?"
      scrat 19_instruction: "\"조건/선택\" 블록을 다시 한 번 사용해 보겠습니다. 한 번에 성공할 수 있겠어요?"
      scrat 20_instruction: "좀 더 복잡한 미로를 해결할 수 있도록 3개의 블럭만 더 더해줄 수 있나요? 그렇게 해준다면, 길이가 얼마나 길던지 상관없이 꺽인 길에서 회전할 수 있게 됩니다. 빨리 빨리요! 얼음이 녹고 있어요!"
      skratDebugVideo1_instruction: "Get Scrat to the Acorn."
      template test_instruction: "what's up"
      testArtistForTestK_instruction: "The Artist is trying to draw a line five times,\nbut can't get it right.  Can you help?"
      test_sarah_instruction: "hi hi"
      u3-old-drawing-view_instruction: "DO This"
      weird_playLab_instruction: "About My Robot Project! Write code so that clicking\non each bird shows a new fact about your robot."
