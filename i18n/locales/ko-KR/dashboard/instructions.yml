ko:
  data:
    instructions:
      2-3 Artist 1 new_instruction: "안녕하세요. 저는 화가입니다. 여러분들이 코드를 작성하면 원하는 모든 것들을 그릴 수 있습니다.\n블록들을 사용해서 그림의 회색 선들을 그려보세요.(각 선들은 100 픽셀 길이입니다.)"
      2-3 Artist 11_instruction: "각 변의 길이가 100 픽셀인, 8각형을 만들어 정지 표지판을 만들어보세요.  \\r\n\\r"
      2-3 Artist 12_instruction: |2
        눈알을 완성하기 위해서 원을 그려보세요!\r
        \r
        만약,
         한 번 움직일 때마다 1도씩 오른쪽으로 움직인다고 한다면, 하나의 원을 완성시키기 위해 몇 번을 반복하면 될까요? 180? 360? 500?
      2-3 Artist 2 new_instruction: '이 집의 벽은 다 완성되지 않았습니다. 각 측면은 100이지만, 완성되지 않은 벽은 50입니다. 벽을 완성해보세요. '
      2-3 Artist 2_instruction: '이 집의 벽은 다 완성되지 않았습니다. 각 측면은 100이지만, 완성되지 않은 벽은 50입니다. 벽을 완성해보세요. '
      2-3 Artist 3.4_instruction: "점프 블록은 선을 그리지 않고 이동하게 해줍니다.\n앞으로 점프, 앞으로 이동하기 블록들을 이용해서 파선을 그려보세요."
      2-3 Artist 3_instruction: 이 모자의 높이는 100픽셀입니다. 70픽셀 더 짧은 모자를 그려보세요.
      2-3 Artist 3new_instruction: "빨간 모자의 높이는 100픽셀입니다.\n이것보다 더 낮은 70픽셀 높이의 검은 모자를 그려보세요.\\r\n(주의: 각 모자의 너비는 50픽셀입니다.)"
      2-3 Artist 4_instruction: 고양이를 위한 집을 완성해주세요.
      2-3 Artist 5_instruction: 똑같은 집을 그릴 수 있도록, "반복 횟수" 블록의 코드를 바꿔주세요. 3개의 블록만 사용하면 됩니다.
      2-3 Artist 6_instruction: "이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:\n세 변의 길이는 모두 같습니다."
      2-3 Artist 7_instruction: "교실의 모두가 창밖을 볼 수 있도록, 창문들을 학교에 그려주세요.\n각 창 틀의 길이는 25 픽셀 크기입니다. "
      2-3 Artist 8_instruction: "한 개의 사각형을 똑같은 크기의 정사각형 2개로 나누어 보세요.\n사각형의 폭은 200 픽셀이고, 높이는 100 픽셀입니다."
      2-3 Artist 9 NEW_instruction: 이 연을 완성해주세요.
      2-3 Artist 9 REPLACEMENT_instruction: 계단 그리기 완료!
      2-3 Artist 9_instruction: 이 연을 완성해주세요.
      2-3 Artist Assessment 1_instruction: "형성 평가: 마지막 이빨을 그려주세요.\n가로 25 픽셀, 세로 25 픽셀입니다."
      2-3 Artist Debugging 1_instruction: 이 모자의 윗 부분은 50 픽셀이 되어야 합니다. 고쳐 주실 수 있나요?
      2-3 Artist Debugging 10_instruction: "내 게임 콘트롤러위의 방향패드의 폭이 너무 좁습니다. \\r\n\\r\n10픽셀 더 넓게 할 수 있나요? \\r\n무엇이 잘못 되었는지 보기 위해 먼저 코드를 실행하세요. \n"
      2-3 Artist Debugging 11_instruction: |-
        내 눈송이가 부서지고 있어요!\r
        \r
        어디가 잘못 된 것 일까요?
      2-3 Artist Debugging 12_instruction: 이 장면에 파도를 추가하고 싶습니다. 도와주시겠어요?
      2-3 Artist Debugging 2_instruction: "고양이 수염을 그리는 코드에 문제가 있습니다.\n\\r\n\\r\n고양이 수염의 길이가 같도록 코드를 고쳐주세요."
      2-3 Artist Debugging 3_instruction: "내 보트에 구멍이 났어요!\\r\n\\r\n선의 끝을 맞추기 위해서는 어떻게 해야할까요?"
      2-3 Artist Debugging 4_instruction: 무엇을 그리려고 하는 것 일까요? 정확한 선들과 각들로 점들을 연결해 주세요.
      2-3 Artist Debugging 5_instruction: "다리와 발을 그리는 코드에 오류가 있습니다.\\r\n\\r\n어떻게 고쳐야 할까요?"
      2-3 Artist Debugging 6_instruction: |-
        다리가 없는 의자에 앉아있는 것 같아요.
        \r
        \r
        코드를 수정해서 나머지 의자 다리를 그려주세요.
      2-3 Artist Debugging 7_instruction: |-
        C가 왼쪽으로 그려지는 코드 같습니다!\r
        \r
        C를 정확하게 그리려면 어떻게 해야할까요?
      2-3 Artist Debugging 8_instruction: |-
        바람개비가 완성되지 않았습니다. 완성하려면 얼마나 반복해야 할까요?
      2-3 Artist Debugging 9_instruction: |-
        뭔가 이상해요!\r
        \r
        줄기를 그리는 코드가 틀렸네요. 화가가 줄기를 정확히 그리려면 어떻게 해야할까요?
      2-3 Artist Debugging Assessment 1_instruction: "형성평가: 이 75 픽셀 크기의 사각형으로는 작은가요? \\r\n\\r\n코드의 어느 부분을 고쳐야할까요?"
      2-3 Artist Free Play_instruction: '자유 플레이: 원하는 것을 그려보세요.'
      2-3 Artist Functions 1 a_instruction: "\"나 화가. 좀비... 그리기 좋아..!\" \\r\n\\r\n사각형 안경을 그릴 수 있게 도와주세요. \\r\n\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      2-3 Artist Functions 1_instruction: "\"나 화가. 좀비... 그리기 좋아..!\" \\r\n\\r\n사각형 안경을 그릴 수 있게 도와주세요. \\r\n\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      2-3 Artist Functions 10_instruction: "여기에 두 개의 함수가 있습니다. 하나는 큰 기어를 그리는 것이고, 하나는 작은 기어를 그리는 것입니다.\n기계의 내부를 그리는데 사용해보세요!"
      2-3 Artist Functions 11 a_instruction: "“사각형 그리기” 함수의 이름을 “육각형 그리기”로 바꿨지만, 여전히 이 함수는 사각형을 그리고 있습니다!\n\"육각형 그리기\" 함수를 수정해서, 한 변의 길이가 50 픽셀인 육각형을 그려보세요. \\r\n\\r\n새로운 함수를 사용하여 그림을 그려보세요."
      2-3 Artist Functions 11.5 a_instruction: "똑같은 '육각형 그리기' 함수가 있습니다. \\r\n\\r\n반복할 때마다 60도씩 회전하는 프로그램을 6번 반복시키면 어떻게 될까요?"
      2-3 Artist Functions 11.5_instruction: "똑같은 '육각형 그리기' 함수가 있습니다. \\r\n\\r\n반복할 때마다 60도씩 회전하는 프로그램을 6번 반복시키면 어떻게 될까요?"
      2-3 Artist Functions 11_instruction: "“사각형 그리기” 함수의 이름을 “육각형 그리기”로 바꿨지만, 여전히 이 함수는 사각형을 그리고 있습니다!\n\"육각형 그리기\" 함수를 수정해서, 한 변의 길이가 50 픽셀인 육각형을 그려보세요. \\r\n\\r\n새로운 함수를 사용하여 그림을 그려보세요."
      2-3 Artist Functions 12 Mike_instruction: "함수를 사용하면 복잡한 모양을 가진 그림을 그리기에 아주 좋습니다. \\r\n\\r\n\"꽃 그리기\" 함수를 사용해서 나머지 꽃 묘목 상자를 채워주세요.\\r\n꽃들은 100 픽셀 간격으로 놓여져 있습니다."
      2-3 Artist Functions 12 a_instruction: "함수를 사용하면 복잡한 모양을 가진 그림을 그리기에 아주 좋습니다. \\r\n\\r\n\"꽃 그리기\" 함수를 사용해서 나머지 꽃 묘목 상자를 채워주세요.\\r\n꽃들은 100 픽셀 간격으로 놓여져 있습니다."
      2-3 Artist Functions 12_instruction: "함수를 사용하면 복잡한 모양을 가진 그림을 그리기에 아주 좋습니다. \\r\n\\r\n\"꽃 그리기\" 함수를 사용해서 나머지 꽃 묘목 상자를 채워주세요.\\r\n꽃들은 100 픽셀 간격으로 놓여져 있습니다."
      2-3 Artist Functions 13_instruction: "4개의 함수를 더 만들었습니다.\n1개 이상의 반복 구조를 이용해 원하는 그림을 만들고 친구들과 공유해 보세요.\n실행을 눌러 살펴보세요."
      2-3 Artist Functions 2_instruction: "함수들로 새로운 블록들을 만들어낼 수 있습니다! \\r\n\\r\n\"사각형 그리기\" 라는 함수에 사각형 1개를 그리는 블록들을 넣었습니다.\n\"사각형 그리기\" 함수를 이용해서 안경을 그려보세요. \n\\r\n\\r\n사각형들은 75 픽셀 만큼 떨어져 있습니다."
      2-3 Artist Functions 3_instruction: "한 변의 길이가 115 인 사각형을 그려 더 큰 안경을 만들어보세요. \\r\n\\r\n사각형들은 이제 45 픽셀 만큼 떨어져 있습니다."
      2-3 Artist Functions 4_instruction: 이제, 함수를 "반복" 블록 안에 넣고 3개의 사각형을 그려보세요.
      2-3 Artist Functions 7_instruction: "2개의 서로 매개 변수가 있는 \"집 그리기\" 함수를 이용해 2개의 집을 그려보세요.\n(힌트: 첫 번째 집은 100 픽셀입니다.)"
      2-3 Artist Functions 9_instruction: "여기 눈송이 함수가 있습니다.\n겨울 풍경을 만들어내기 위해서 실험해보세요! 이 판은 자유 플레이입니다.\n풀어야 할 퍼즐이 아니니까, 재미있게 놀아보세요!"
      2-3 Artist Loops 1_instruction: "셀을 완성하기 위해서, 한 변의 길이가 100 픽셀인 육각형을 만들어보세요.\n생각해보면, 60 도씩 회전하면 됩니다!"
      2-3 Artist Loops 10_instruction: 절반 만큼 만 마지막 단계에서 이동하면 어떻게 될까요?
      2-3 Artist Loops 11_instruction: "자 이제, 만든 것을 모두 *다른* 반복 구조에 넣어보세요!\n바깥쪽 반복 구조에 각도를 더하는 것을 잊지 마세요."
      2-3 Artist Loops 2_instruction: 이제 반복 블럭을 사용해 셀을 조개로 만들어 봅니다.
      2-3 Artist Loops 4_instruction: 반복 구조를 사용해서, 모양을 반복해서 그리면 어떻게 될까요?
      2-3 Artist Loops 5_instruction: 반복 실행에 조그만 변화를 주었을 때, 얼마나 다른 그림이 나올 수 있는지 살펴보세요.
      2-3 Artist Loops 6_instruction: "반복 구조 안에 1번 이동, 1번 회전을 더 추가해서\n디자인이 어떻게 변하는지 살펴보세요."
      2-3 Artist Loops 7_instruction: "반복 구조들을 이용하면 모든 종류의 다각형들을 만들 수 있습니다.\n이 육각형 안에 마름모를 만들어보세요."
      2-3 Artist Loops 8_instruction: 한 반복 안에 2개의 요소를 모두 넣어 보세요.
      2-3 Artist Loops 9_instruction: |-
        같은 요소들을 반복 안에 넣되, 그 둘 사이에 거리를 추가하겠습니다.\r
        이전에 사용했던 것과 같은 코드를 넣고, 바깥쪽 반복의 마지막에 앞으로 이동하는 것을 추가해 보세요.
      2-3 Artist Loops New 1_instruction: "이 로봇의 머리를 그려보세요!\n한 변의 길이가 100 픽셀인 사각형을 그려보세요."
      2-3 Artist Loops New 10_instruction: 이제 여러 개의 'V'자를 연결해서, 반복 실행 구조 안에 넣어보세요.
      2-3 Artist Loops New 11_instruction: "이번에는 멋진 것을 만들어 볼 시간입니다!\n왼쪽으로 30도 회전하기를 추가한 후, 7번 대신에 24번을 반복 시켜보세요."
      2-3 Artist Loops New 12_instruction: "한 변의 길이가 100 픽셀인 다이아몬드를 그려보세요.\n"
      2-3 Artist Loops New 13_instruction: "우리는 몇 개의 코드(회색) 를 가지고 하나의 다이아몬드를 만들어 볼 거에요.\\r\\r 재밌는 패턴을 만들기 위해 회색 코드를 반복해보세요!"
      2-3 Artist Loops New 14_instruction: "다이아몬드 코드를 살펴보고 어떤 패턴들을 만들어낼 수 있는지 생각해보세요.\n각도와 반복 횟수를 변화시켜가면서 테스트 해보세요."
      2-3 Artist Loops New 15_instruction: 이제, 그리고 싶은 것들을 그려보세요.
      2-3 Artist Loops New 2_instruction: |-
        방금 풀었던 퍼즐과 같지만, 이번에는 한 개의 '앞으로 직진' 블럭과 한 개의 '돌기' 블럭만 사용할 수 있습니다.\r
        \r
        이번 퍼즐을 해결하기 위해 '반복' 블럭을 사용할 수 있나요?
      2-3 Artist Loops New 9_instruction: 화살 그림을 완성하기 위해서(양쪽 모두 50 픽셀인) 간단한 V 자를 그려보세요.
      2-3 Artist Match Hex Pic_instruction: '맞추기: 육각형을 완성해보세요.'
      2-3 Artist Match Rho Pic_instruction: '맞추기: 빠진 코드를 완성해보세요.'
      2-3 Artist Match Sq Pic_instruction: '맞추기: 빠진 코드를 채워보세요.'
      2-3 Artist Match Tri pic_instruction: '맞추기: 빠진 코드를 채워주세요.'
      2-3 Artist Nested Loops 1_instruction: 패턴을 그리기 위해서, 이 코드 전체를 '반복' 블록에 넣으세요.
      2-3 Artist Nested Loops 10_instruction: 패턴을 완성시키기 위해서 이 코드를 12번 반복해 보세요.
      2-3 Artist Nested Loops 11_instruction: "이 코드를 4번 반복해서 패턴을 완성해 보세요.\n원을 한 번 그리고 나면, 90도 만큼 회전하세요."
      2-3 Artist Nested Loops 12_instruction: 이 코드를 12번 반복시켜서 곱슬곱슬한 그림을 그려보세요.
      2-3 Artist Nested Loops 2_instruction: "삼각형을 6번 반복해 그리세요. \\r\n\\r\n삼각형을 한 번 그리고 난 후에, 다음 삼각형을 위해 60도씩 회전해야 합니다."
      2-3 Artist Nested Loops 3_instruction: "이 패턴을 그리려면, 삼각형을 12번 반복해서 그려야 합니다. \\r\n\\r\n원 중심의 각(360 도) 을 그리려고 하는 모양의 개수(12 개) 로 나누면,\n모양을 한 번 그린 후 몇 도를 회전시켜야 하는지 알 수 있습니다."
      2-3 Artist Nested Loops 4_instruction: "이 다이아몬드 모양을 12번 반복시켜서 꽃을 그려보세요!\\r\n\\r\n힌트: 12 개의 다이아몬드는 12 개의 삼각형을 그렸던 것과 같은 방법으로 만들면 됩니다. \\r \n한 번 모양을 그린 후에 얼마나 회전시켜야 할까요?"
      2-3 Artist Nested Loops 5_instruction: "이 건물의 창들을 반복문 안에 반복문을 이용해 채워보세요. \\r\n\\r\n창들은 20 픽셀 크기로 20 픽셀 만큼 씩 떨어져 있습니다."
      2-3 Artist Nested Loops 6_instruction: |-
        이 공룡은 꼬리에 8개의 뾰족한 뿔이 나 있습니다.\r
        각 뿔의 길이는 30 픽셀입니다.
        삼각형을 8번 반복해 그려주세요. 1개를 그리면 그 다음에는 앞으로 이동해야 합니다.
      2-3 Artist Nested Loops 7_instruction: "이 삼각형을 10번 반복시켜서 태양을 그려보세요. \\r\n\\r\n삼각형 1개를 그리고 난 후에는 이동하고 회전해야 합니다. \\r\n\\r\n원의 각도 수를 삼각형 수로 나눔으로써 회전 각도를 알 수 있습니다."
      2-3 Artist Nested Loops 8_instruction: "그림에 잔디를 그려보세요.\n\\r\n\\r\n잔디 1개는 50 픽셀 만큼 씩 떨어져 있습니다."
      2-3 Artist Nested Loops 9_instruction: "이 그림에 꽃을 더 그리면 그림이 완성될 것입니다. \\r\n\\r\n꽃을 그리기 위해서 다이아몬드를 12번 반복시켜 그려보세요."
      2-3 Artist Nested Loops Free Play_instruction: "자유 플레이시간입니다.\n중첩 반복을 이용해서 원하는 것을 그려보세요."
      2-3 Bee Conditionals 1_instruction: "안녕하세요! 저는 꿀벌입니다.\n제가 꽃에서 꽃꿀을 모을 수 있게 도와주세요."
      2-3 Bee Conditionals 10_instruction: "자주색 꽃에서는 꿀이 있을 수도 있고 없을 수도 있습니다.\n아무것도 없는 자주색 꽃에서 꽃꿀을 얻어내려고 하지 마세요.\\r\n"
      2-3 Bee Conditionals 11_instruction: "뭐가 있을까요!\\r\n\\r\n꽃밭을 돌아다니면서 꽃꿀이 있는 꽃들에서만 꽃꿀을 모을 수 있게 도와주세요. "
      2-3 Bee Conditionals 12_instruction: 최대한 적은 블록들을 사용해서 꽃꿀을 찾아낼 수 있도록 도와주세요!
      2-3 Bee Conditionals 13_instruction: |-
        와 이번에는 여러 가지들이 있네요!\r
        \r
        여러분들이 배운 것들을 이용해 꽃꿀을 모아 꿀을 만들어보세요.
      2-3 Bee Conditionals 14_instruction: |-
        자 이제 다 모아봅시다!\r
        \r
        지금까지 배운 것들을 이용해서 최소한의 블록들로 꽃꿀이 있는 꽃에서 꽃꿀을 모아 보세요.
        마지막에는 꿀을 만들어야 합니다.
      2-3 Bee Conditionals 15_instruction: "계단 모양의 패턴은 많이 익숙합니다. \\r\n\\r\n최소한의 블록들만 사용해서 꽃꿀이 있는 꽃에서만 꽃꿀을 모아보세요."
      2-3 Bee Conditionals 2_instruction: "저는 배고픈 꿀벌입니다! \\r\n최소한의 블록만 사용해서 꽃꿀을 모두 모을 수 있게 해주세요."
      2-3 Bee Conditionals 3_instruction: "저 꽃꿀들을 보세요!\\r\n\\r\n최소한의 블록들을 사용해서 꽃꿀을 모아 꿀을 만들어보세요.  "
      2-3 Bee Conditionals 4_instruction: 꽃들로부터 꽃꿀을 모아 꿀을 만들 수 있게 도와주세요.
      2-3 Bee Conditionals 5_instruction: "꽃꿀이 없는 자주색 꽃에서 꽃꿀을 모으지 않도록 조심하세요. \\r\n먼저 '꽃꿀이 있으면' 블록을 이용해서 꽃꿀의 양이 1인지 확인해야합니다."
      2-3 Bee Conditionals 6_instruction: '"만약" 블록을 사용해서 이 꽃에 꽃꿀이 있는지 확인해보세요.'
      2-3 Bee Conditionals 7_instruction: 꽃꿀이 있는 꽃에서만 꽃꿀을 모아보세요.
      2-3 Bee Conditionals 8_instruction: "이 꽃밭에는 빨강 꽃과 자주색 꽃이 있습니다.\n빨강 꽃은 꽃꿀이 얼마나 있는지 나타나있지만, 자주색 꽃에는 얼마나 있는지 알 수 없습니다.\n꽃꿀을 모두 모아 보세요."
      2-3 Bee Conditionals 9_instruction: 각 꽃에서 꽃꿀을 모두 모아주세요.
      2-3 Bee Conditionals Assessment 1_instruction: "형성평가: 꽃꿀을 모두 모아주세요.\n자주색 꽃에 꽃꿀이 없으면 꽃꿀을 뽑지 않도록 주의하세요."
      2-3 Bee Debugging 1_instruction: "이 블록들에는 오류들이 있어서 짜증이 나네요.\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류들을 수정해주세요."
      2-3 Bee Debugging 10_instruction: "이 블록들에는 오류들이 있어서 짜증이 나네요. \\r\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류(들)을 수정해주세요."
      2-3 Bee Debugging 2_instruction: |-
        문제점을 찾을 수 있으세요?\r
        모든 꽃꿀을 모을 수 있도록 오류(들)을 수정해주세요.
      2-3 Bee Debugging 3_instruction: |-
        으, 골치아프네요!\r
        \r
        모든 꽃꿀을 모을 수 있도록 오류(들)을 수정해주세요.
      2-3 Bee Debugging 4_instruction: "이 블록들에는 오류들이 있어서 짜증이 나네요.\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류(들)을 수정해주세요."
      2-3 Bee Debugging 5_instruction: "꽃들이 맛있어보여요! \\r\n\\r\n모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요. 단계별 실행을 사용할 수 있습니다."
      2-3 Bee Debugging 6_instruction: |-
        달콤한 도전이네요! \r
        \r
        모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요.
      2-3 Bee Debugging 7_instruction: 모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요.
      2-3 Bee Debugging 8_instruction: |-
        이쁜 꽃들이 아주 많이 있네요! \r
        \r
        모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요.
      2-3 Bee Debugging 9_instruction: |-
        "벌벌" 떨지 마세요! \r
        \r
        모든 꽃꿀들을 모아 꿀을 만들 수 있도록, 이 프로그램의 오류들을 고쳐야 합니다.
      2-3 Bee Debugging Assessment 1_instruction: |-
        형성평가: 이제 여러분들이 아는 것들을 보여줄 시간입니다!\r
        \r
        모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요.
      2-3 Bee Functions 1_instruction: "함수들은 어떤 작업을 수행할 때 사용하는 블럭들의 집합이라고 할 수 있습니다.\n\"꽃꿀 2번 모으기\" 를 이용해서 각 꽃들에서 꽃꿀을 모아보세요."
      2-3 Bee Functions 10_instruction: "퍼즐을 실행 할때마다 자주색 꽃들에는 꽃꿀이 1개 또는 0 개 있을 수 있습니다.   \\r\n\\r\n자주색 꽃에 꽃꿀이 있을 때에만 꽃꿀을 모으는 함수를 만들어보세요."
      2-3 Bee Functions 2_instruction: "함수들은 어떤 작업을 수행하는데 블럭들의 모임이라고 볼 수 있습니다.  \\r\n\\r\n\"5번 모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      2-3 Bee Functions 3_instruction: 각 꽃에서 꽃꿀을 모두 모아주세요.
      2-3 Bee Functions 4_instruction: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는 함수입니다.  \\r\n\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      2-3 Bee Functions 5_instruction: "꽃들에 더 많은 꽃꿀이 들어있어요.\n주어진 함수를 수정해서, 꽃꿀을 4번 얻을 수 있게 하고 모든 꽃들로 부터 모든 꽃꿀을 모으세요."
      2-3 Bee Functions 6_instruction: 이제 같은 함수를 사용해서, 3개의 꽃들로 부터 꽃꿀을 모으도록 해보세요.
      2-3 Bee Functions 7_instruction: "꽃들이 더 멀리 있습니다.\n주어진 함수를 수정해서 꽃들로부터 모든 꽃꿀을 모아보세요."
      2-3 Bee Functions 8_instruction: "꽃꿀을 7번 모으고, 앞으로 이동한 후, 7개의 꿀을 만드는 함수를 만들어보세요.\n그 함수를 사용해서 각 꽃들로부터 꽃꿀을 모으고, 각 벌집에 꿀을 만들어 넣으세요."
      2-3 Bee Functions 9_instruction: 길을 따라 아래로 내려간 후, 꽃꿀을 얻고, 꿀을 만들고, 다시 처음 위치로 돌아가는 함수를 만들어보세요.
      2-3 Bee Functions Assessment 1_instruction: '형성평가: 주어진 함수를 이용해서 각 꽃에서 꽃꿀을 모아보세요.'
      2-3 Bee Functions Assessment 2_instruction: '형성평가: 꿀벌이 앞으로 이동해서 3개의 꿀을 만들고, 다시 돌아오는 함수를 만들어보세요.'
      2-3 Bee Loops 1_instruction: |-
        저 꽃들이 달콤해 보여요!\r
        \r
        최대한 적은 블록들을 사용해 각 꽃들에서 꽃꿀을 모아보세요.
      2-3 Bee Loops 10_instruction: 모든 꽃꿀을 모을 수 있도록, 다른 2개의 반복 구조 안에 반복 구조를 넣으세요.
      2-3 Bee Loops 11_instruction: "이 꽃밭에 있는 꽃들에서 꽃꿀을 모두 모을 수 있도록\n반복 구조들을 사용해 보세요."
      2-3 Bee Loops 12_instruction: "이 꽃밭에 있는 꽃들에서 꽃꿀을 모두 모을 수 있도록\n반복 구조들을 사용해 보세요."
      2-3 Bee Loops 13_instruction: '형성평가: 최대한 적은 블록들을 사용해서 꽃꿀을 모아보세요.'
      2-3 Bee Loops 1A_instruction: "안녕하세요! 여러분? 저는 꿀벌입니다.\n이 꽃들로부터 꽃꿀을 모을 수 있게 도와주세요. "
      2-3 Bee Loops 2_instruction: 최대한 적은 블록들을 사용해서 모든 꽃꿀을 모으고 꿀을 만들어 보세요.
      2-3 Bee Loops 2A_instruction: 이번에는, 1개의 반복 구조를 사용해서 모든 꿀을 모아보세요.
      2-3 Bee Loops 3_instruction: "최대한 적은 블록들을 사용해서\n각 꽃에서 꽃꿀을 모은 후, 각각의 벌집에 꿀을 만들어 넣어 보세요."
      2-3 Bee Loops 3A_instruction: 모든 꽃꿀을 모으기 위해, 반복 구조를 사용해보세요.
      2-3 Bee Loops 3B_instruction: 반복 블록을 사용해서, 꽃꿀을 모두 모으고 꿀을 만들어보세요.
      2-3 Bee Loops 4_instruction: |-
        꿀벌이 엄청 바쁘네요!\r
        \r
        최대한 적은 블록들을 사용해서
        꽃꿀을 모으고 꿀을 만들 수 있도록 꿀벌을 도와 주세요.
      2-3 Bee Loops 4A_instruction: "이 퍼즐을 해결하려면 몇 번 반복해야할까요? \\r\n\\r\n반복 실행 구조는 매우 편리합니다!\n반복 실행 구조를 사용해서 최대한 적은 블록들로 해결해 보세요."
      2-3 Bee Loops 5_instruction: "이 길의 모양은 다른 것들과 다릅니다. \\r\n\\r\n최대한 적은 블록들을 사용해서 꽃꿀을 모두 모아보세요."
      2-3 Bee Loops 6_instruction: 꿀벌이 꽃꿀을 모으고 꿀을 만들 수 있는 가장 빠른 방법을 찾을 수 있나요?
      2-3 Bee Loops 7_instruction: "와 꽃밭이 이쁘네요!\n7 블록보다 적은 블록을 사용해서 꿀벌이 모든 꽃들을 살펴볼 수 있게 해주세요."
      2-3 Bee Loops 8_instruction: "퍼즐을 실행 할때마다 자주색 꽃들이 몇 개의 꽃꿀을 가지고 있는지 알 수 없습니다. \\r\n\\r\n\"꽃꿀이 있으면\" 반복 블록을 이용해서 모든 꽃꿀을 모아보세요. \\r\n\\r\n이 반복 구조는 조건이 참인 동안 계속 반복됩니다. 이 경우에서는 '꽃꿀의 개수>0' 인 동안 반복되는 것입니다."
      2-3 Bee Loops 9_instruction: "반복(~인 동안) 블럭은 그 안에 \"만약\" 조건문이 있는 것과 같습니다.\n반복 블럭 안에 이 코드를 추가해서 같은 역할을 하도록 만들어보세요."
      2-3 Bee Loops Assessment 1_instruction: '형성평가: ''~인 동안'' 반복 구조를 이용해서, 이 꽃에서 꽃꿀을 모두 모아보세요.'
      2-3 Maze 1_instruction: '나쁜 돼지를 잡을 수 있게 도와주세요! "실행하면" 블록 아래에 "앞으로 이동" 블록들을 여러 개 쌓아 붙인 후, "실행"을 눌러보세요. '
      2-3 Maze 10_instruction: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze 11_instruction: "배가 고파요. 꽃으로 움직여주세요!\n블록을 몇 번 반복하면 될까요?"
      2-3 Maze 12 (copy 1)_instruction: '이전의 반복을 블록 두개로 바꿔서 처리해 볼까요?(힌트: "반복횟수" 블록을 사용해 루프를 만들어 보세요)'
      2-3 Maze 12 (copy 2)_instruction: '이전의 반복을 블록 두개로 바꿔서 처리해 볼까요?(힌트: "반복횟수" 블록을 사용해 루프를 만들어 보세요)'
      2-3 Maze 12 (old)_instruction: 반복 횟수 블록을 이용해서, 돼지에게로 이동시켜 주세요.
      2-3 Maze 12 - One Move Block_instruction: 돼지를 잡아요! 하지만이 이번에는 '앞으로 한 칸 이동' 블록만 사용할 수 있습니다. 필요한 다른 블록이 있나요?
      2-3 Maze 12_instruction: 1개의 '반복' 블록 안에 1개의 '앞으로 이동' 블록이 들어있는 반복 실행 구조를 이용해서 돼지에게로 이동시켜주세요.
      2-3 Maze 13 (old)_instruction: 저를 돼지에게 보내주세요. 이번에는 반복(~할 때까지) 블록을 사용하세요.
      2-3 Maze 13_instruction: "2개의 블록만 더 추가해서 돼지에게로 보내주세요.\\r\n(참고: 이 레벨을 깨기 위해서는 마법의 \"반복(횟수)\" 블록을 사용해야 합니다.)"
      2-3 Maze 14 (old)_instruction: '"반복 ~까지" 블록을 사용해서 저를 돼지에게 이동시켜주세요!'
      2-3 Maze 14_instruction: "저를 해바라기로 보내주세요!\n(\"반복 횟수\" 블록이 필요하면 어디에 두어야 할까요?)"
      2-3 Maze 15 (old)_instruction: '"반복 ~까지" 블록을 사용해서 저를 돼지에게 이동시켜주세요!'
      2-3 Maze 15_instruction: 이 퍼즐에서는 두 개의 반복(횟수) 블록을 이용하면 블록들을 최소한으로 사용할 수 있습니다.
      2-3 Maze 16 (old)_instruction: '"반복 ~까지" 블록을 사용해서 저를 돼지에게 이동시켜주세요!'
      2-3 Maze 16 before_instruction: 어떻게 하면 돼지에게로 최대한 빠르게 이동할 수 있을까요?
      2-3 Maze 16_instruction: 반복 실행 구조 안에는 여러 개의 블록을 넣을 수 있습니다! 이 단계들을 반복 실행시켜 좀비를 해바라기로 이동시켜주세요.
      2-3 Maze 2_instruction: 돼지가 내 깃털들을 마구 헤집어 놓으며 다니고 있어요. 저를 돼지에게 보내주세요!
      2-3 Maze 3_instruction: 길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이 날라다니지 않도록 해야 돼!
      2-3 Maze 4_instruction: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze 5_instruction: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze 6_instruction: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날 것 같아!
      2-3 Maze 7_instruction: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze 8_instruction: 저를 돼지에게 이동시켜 주세요.
      2-3 Maze 9_instruction: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze Loops 1_instruction: 5 개의 블록들만 사용해서 돼지로 이동시켜 주세요.
      2-3 Maze Loops 17_instruction: 해바라기로 이동하기 위해서 여러분들이 배운 것들을 사용해보세요!
      2-3 Maze Loops 18_instruction: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\r\n\\r\n반복 실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      2-3 Maze Loops 19_instruction: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\r\n최소한의 반복 실행 구조를 사용해서 해바라기로 이동시켜주세요."
      2-3 Maze Loops 20_instruction: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      2-3 Maze Loops 21_instruction: 블록들을 최대한 적게 사용해서 해바라기로 이동시켜주세요!
      2-3 Maze Loops Assessment 1_instruction: '형성평가: 5개의 블록만 사용해서, 저를 해바라기로 보내주세요! '
      2-3 Maze sq10_instruction: 저를 돼지에게로 이동시켜주세요! 어떤 블록들이 반복되나요?
      2-3 Maze sq10v2_instruction: 저를 돼지에게로 이동시켜주세요! 어떤 블록들이 반복되나요?
      2-3 Maze sq2_instruction: "길을 따라 이동해서, 돼지에게 보내주세요.\nTNT를 피하지 않으면 깃털들이 날리게 됩니다."
      2-3 Maze sq3_instruction: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze sq4_instruction: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날 것 같아!
      2-3 Maze sq5_instruction: 저를 돼지에게 보내주세요! 블록을 몇 번이나 반복해야 할까요?
      2-3 Maze sq6_instruction: '이전의 반복을 블록 두개로 바꿔서 처리해 볼까요?(힌트: "반복횟수" 블록을 사용해 루프를 만들어 보세요)'
      2-3 Maze sq7_instruction: 3개의 블록만 사용해서, 초록색 강도에게 보내주세요.
      2-3 Maze sq8_instruction: "저를 돼지에게 이동시켜주세요!\n(\"반복 횟수\" 블록이 어디에 필요할까요?)"
      2-3 Maze sq9_instruction: 더 적은 블록들을 사용해서 돼지에게 이동시켜주는, 반복 구조를 만들어보세요.
      2-3 maze sq11_instruction: 저를 돼지에게로 이동시켜주세요! 어떤 블록들이 반복되나요?
      2-3 maze sq12_instruction: 이전의 방법을 "반복 횟수" 블록을 이용해서 반복으로 바꿀 수 있을까요?
      2-3 maze sq13_instruction: "이봐요. 저 좀비. 해바라기... 반드시... 가야합니다.\n\"~할 때까지 반복\" 블록을 이용해서 반복 구조를 만들어보세요."
      2-3 maze sq14_instruction: 4개의 블럭만 사용해서 해바라기로 갈 수 있나요?
      2-3 maze sq15_instruction: 5개의 블럭만 사용해서 해바라기로 갈 수 있나요?
      2-3 maze sq16_instruction: "좋아요, 이번에도 비슷한데 약간 다르네요.\n5개의 블록만 가지고 해보세요."
      2-3level1_instruction: 새를 앞으로 이동시켜서, 나쁜 돼지를 잡아보세요.
      20hr_farmer_stage9_1_instruction: 안녕하세요! 저는 농부입니다. 농장에 있는 밭을 고르게 만들어 식물들을 심고 싶어요. 흙더미로 이동해서 "치우기" 블럭을 사용하면 됩니다.
      20hr_farmer_stage9_11_instruction: '아직도 어둡습니다. 밭을 가로질러 가면서 흙더미가 있으면 치우고, 구덩이가 있으면 메울 수 있게 도와주세요. 힌트: "만약" 블럭의 메뉴를 사용해 보세요.'
      20hr_farmer_stage9_2_instruction: 자 이제! 구덩이로 이동한 후, "메우기" 블럭을 2번 사용해 구덩이를 메울 수 있게 도와주세요.
      20hr_farmer_stage9_3_instruction: 블럭을 최대한 적게 사용해서, 흙더미를 치울 수 있는 방법을 알려주세요.
      20hr_farmer_stage9_4_instruction: '4 개의 흙더미를 모두 치울 수 있도록 도와줄 수 있나요? 힌트: "반복" 블럭을 사용해 보세요.'
      20hr_farmer_stage9_5_instruction: '5 번 메워야 하는 구덩이들을 모두 없앨 수 있도록 도와주세요. 힌트: "반복(~인 동안)" 블럭 안에 "반복(횟수)" 블럭을 넣으면 할 수 있습니다.'
      20hr_farmer_stage9_6_instruction: 블럭을 최대한 적게 사용해서 모든 흙더미를 치울 수 있게 도와주세요. "반복(~인 동안)" 블럭에서 선택하면 흙더미 위에 있는지, 구덩이 위에 있는지를 판단해 반복 실행할 수 있습니다.
      20hr_farmer_stage9_7_instruction: 와! 진짜 깊은 구덩이를 발견했어요! 이 구덩이를 없애려면 몇 번 메워야 할 지 모르겠네요. 구덩이를 없앨 때까지 메우는 프로그램을 만들 수 있을까요?
      20hr_farmer_stage9_8_instruction: 블럭을 최대한 적게 사용해서 밭 끝에 있는 구덩이를 메울 수 있게 도와주세요.
      20hr_farmer_stage9_9_instruction: '흙더미를 모두 치울 수 있게 도와주세요. 블럭을 최대한 적게 사용하세요. 힌트: "반복(~인 동안)" 블럭을 사용해 보세요.'
      20hr_maze_stage2_10_instruction: '"반복(~할 때까지)" 블럭은, 짜증나는 돼지에게 도착~할 때까지, 계속 반복시켜 줄 꺼야.'
      20hr_maze_stage2_11_instruction: 이번에는 마지막 연습이야 - 블럭을 4개 만 사용해서 해결 할 수 있겠어?
      20hr_maze_stage2_13_instruction: 이번 것도 비슷한데 약간 달라. 블럭을 5개만 가지고 가능하겠어?
      20hr_maze_stage2_14_instruction: '"만약" 블럭을 이용하면, 언제 돌아야 할지 판단할 수 있어. 힌트: 블럭을 1개 더 사용하면 되지만, 이번에 "만약" 블럭을 사용하는 방법을 배워야, 다음 퍼즐을 해결할 때 사용할 수 있어.'
      20hr_maze_stage2_15_instruction: 음... 이번이 마지막 퍼즐이야!, "만약" 블럭하고 "반복" 블럭을 함께 사용해야 돼.
      20hr_maze_stage2_16_instruction: 나... 해바라기... 가지고 싶어~! "만약" 블럭을 사용해서, 블럭을 최대한 적게 사용해서 해바라기로 보내 줘.
      20hr_maze_stage2_17_instruction: 좋아... 한 번 더 해보자~ - 이번 것도 그렇게 어렵지는 않지만, 식충식물들을 조심해야 돼!
      20hr_maze_stage2_18_instruction: '"조건/선택" 블럭은, 검사를 한 다음에 그 결과에 따라 하나의 작업을 실행해 줘. 이 새로운 블럭을 이용해서, 나를 해바라기로 보내 줘.'
      20hr_maze_stage2_19_instruction: '"조건/선택" 블록을 다시 한 번 사용해 보겠습니다. 한 번에 성공할 수 있겠어요?'
      20hr_maze_stage2_2_instruction: 초록 돼지가 내 깃털들을 마구 헝클어 놓고 있어. 돼지를 찾을 수 있게 도와줘!
      20hr_maze_stage2_20_instruction: 블럭을 3개 더 붙여서, 좀 더 복잡한 미로를 빠져나갈 수 있도록 할 수 있겠어? 네가 성공하면 난, 아무리 크고 복잡한 미로라고 하더라도 거뜬히 통과할 수 있을 거야.
      20hr_maze_stage2_3_instruction: 길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이 헝클어지지 않도록 해야 돼!
      20hr_maze_stage2_4_instruction: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      20hr_maze_stage2_5_instruction: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날 것 같아!
      20hr_maze_stage2_6_instruction: 블럭을 2개 만 더 사용해서, 돼지를 잡을 수 있는 방법이 있어. 어떻게 하는지 알아낼 수 있을까?
      20hr_maze_stage2_7_instruction: 블럭을 3개 만 사용해서, 자기 마음대로 돌아다니는 초록 돼지를 잡을 수 있게 해줘.
      20hr_maze_stage2_8_instruction: 블럭을 최대한 적게 사용해서, 나쁜 돼지를 쫓아낼 수 있게 해줘. "반복(횟수)" 블럭을 한 개 이상 사용하면 될꺼야.
      20hr_maze_stage2_9_instruction: '회색 블럭은 지울 수 없습니다. 3번 반복 실행되는 "반복(횟수)"블럭을 이용해 퍼즐을 해결하세요. 회색 "반복(횟수)" 블럭 안에 3개의 블럭을 넣으세요 : "이동", "이동", "방향 바꾸기"'
      4-5 Artist 1_instruction: "상자 그리기를 완성할 수 있도록 도와주세요.\n(선의 길이는 300 픽셀입니다.) "
      4-5 Artist 10_instruction: "\"실행\"을 눌러 코드를 확인하세요. 그 다음에\n그림을 완성하기 위해서 충분히 반복시키세요. 색은 그때마다 바뀔 것입니다."
      4-5 Artist 11_instruction: "녹색 줄들을 다 그리세요. 줄들의 길이는 300 픽셀로\n15 픽셀 만큼씩 떨어져 있습니다."
      4-5 Artist 2_instruction: 사각형을 완성할 수 있도록 '반복' 블록으로 이 코드를 반복시켜주세요.
      4-5 Artist 3.5_instruction: "그럼 이번에 이 코드를 실행(또는 \"실행\" 누르기) 하면 \n무슨일이 벌어질지 생각해 보세요. 그 다음에 여러 번 반복해서 그림을 완성해 보세요!"
      4-5 Artist 3_instruction: "이 사각형 꽃 침대는 주변 둘레가 600입니다.\n긴 쪽의 길이는 200 입니다. 가능한 적은 블록을 사용하여 사각형을 그려보세요."
      4-5 Artist 4_instruction: "하나의 원 안에는 얼마나 많은 각이 있을까요? 블록들을 반복\n실행해서 무지개색의 원을 한 개 만들어 보세요."
      4-5 Artist 5_instruction: 좀비가 주어진 루프를 이용하여 이 그림을 정확하게 완성하도록 하려면 "???"를 무엇으로 바꿔야 할까요?
      4-5 Artist 6_instruction: "이 정삼각형의 안쪽 각도는 60, 60, 60 도 입니다.\n각 변의 길이는 200 픽셀입니다. 그림을 완성해 보세요."
      4-5 Artist 7_instruction: "이 직각삼각형의 안쪽 각도는 30, 60, 90 도 입니다.\n기울어진 변의 길이는 200 픽셀입니다. 그림을 완성해 보세요."
      4-5 Artist 8_instruction: "축구장의 중앙선은 사이드라인과 *직각*입니다.  \\r\n이 경기장의 둘레는 800 픽셀이고 세로 길이는 240 픽셀입니다. 가로 길이는 얼마일까요? \\r\n\\r\n경계선과 중앙선을 그려보세요."
      4-5 Artist 9_instruction: 디자인이 대칭이 되도록 나머지 반을 그려보세요. 삼각형들은 한 변의 길이가 50 픽셀인 정삼각형입니다.
      4-5 Artist Assessment 1_instruction: "형성평가: 정삼각형을 그릴 수 있도록 반복 구조를 사용해 보세요.\n각 변의 길이는 300 픽셀입니다."
      4-5 Artist For Loops 1_instruction: 너비 블록들에 1부터 10까지 넣어 실행시켜보세요.
      4-5 Artist For Loops 11_instruction: '"반복 ~인 동안" 블록으로 0, 20, 40, 60, 80,..., 200 을 카운트 할 수 있도록 해보세요.'
      4-5 Artist For Loops 12_instruction: "\"부터\" 와 \"까지\" 의 수를 서로 바꾸면 어떻게 될까요?\n\"반복 ~인 동안\" 블록으로 200, 180, 160, 140, 120,...,0 으로 카운트 할 수 있도록 해보세요. "
      4-5 Artist For Loops 13_instruction: "이 디자인은 \"반복 ~인 동안\" 블록이 없어서 아주 많은 블록들을 사용하고 있습니다.\n이 나선 모양을 완성하기 위해서 \"반복 ~인 동안\" 블록을 사용해보세요.\n힌트: 마지막 선은 250 픽셀 크기입니다."
      4-5 Artist For Loops 14_instruction: '코드를 배우기 시작하고나면 더 빠른 방법들이 있다는 것을 알게 됩니다. 삼각 나선구조를 완셩하기 위해서 사용된 블록들을 "for" 블록으로 바꿔보세요. (힌트: 마지막 선의 길이는 300 픽셀입니다.)'
      4-5 Artist For Loops 15_instruction: '코드를 배우기 시작하고나면 더 빠른 방법들이 있다는 것을 알게 됩니다. 육각 나선구조를 완셩하기 위해서 사용된 블록들을 "for" 블록으로 바꿔보세요. (힌트: 마지막 선의 길이는 200 픽셀입니다.)'
      4-5 Artist For Loops 2_instruction: 이것은 for 반복 블록입니다. 1, 2, 3... 10, 을 일일이 입력하는 대신, for 블록 안에 포함되어있는 블록들을 원하는 만큼 반복 실행시켜줍니다. for 블록 안에 to 부분에 10을 넣어보세요.
      4-5 Artist For Loops 3_instruction: "어떻게 하면 1부터 50까지 카운트 할 수 있을까요?\n\"반복 ~인 동안\" 블록을 수정해 보세요."
      4-5 Artist For Loops 4_instruction: '"반복 ~인 동안" 블록으로 1부터 10까지, 1만큼 씩 증가하며 카운트해 보세요.'
      4-5 Artist For Loops 6_instruction: 50, 60, 70, 80, 90 픽셀 크기의 정사각형들을 그려보세요. "사각형 그리기" 함수 블록을 5 번 사용면 됩니다.
      4-5 Artist For Loops 7_instruction: '같은 삼각형들을 그려봅시다. 이번에는 "count with" 블록을 이용해서 크기들을 바꿔보세요. "사각형 그리기" 함수 안에 "카운터" 블록을 넣어보세요. 힌트: 변수 카테고리에 있습니다.'
      4-5 Artist For Loops 8_instruction: 10부터 200까지 10씩 올리며 카운트하면서 반복하도록 "for" 블록 안에 다른 블록들을 넣어 완성 시켜주세요. 반복 카테고리에서 "for" 블럭을 찾을 수 있습니다.
      4-5 Artist For Loops 9_instruction: "이 원들의 크기는 5, 10, 15, 20, 25, 30, 35 입니다.\n\"반복 ~인 동안\" 블록을 사용해서 원들을 그려보세요."
      4-5 Artist Free Draw 1_instruction: "자유롭게 그려보세요!\n무엇이든지 그리고 싶은 것을 그려보세요."
      4-5 Artist Functions 1_instruction: 반복 구조를 이용해서 이 삼각형을 그려보세요.
      4-5 Artist Functions 10a_instruction: 이 코드를 "눈송이 그리기" 함수 안에 넣고 50 값을 "크기" 변수로 바꿔주세요. 이 함수는 100 픽셀 크기의 눈송이들을 만들기 위해서 사용되었습니다.
      4-5 Artist Functions 10b_instruction: '"눈송이 그리기" 함수를 이용해서 서로 다른 크기의 눈송이들을 만들어 보세요. 힌트: 첫 번째 눈송이의 길이는 25이고 그 이후로는 2배씩 커지면 됩니다.'
      4-5 Artist Functions 11_instruction: '이 "육각형 그리기" 함수는 "삼각형 그리기" 함수를 사용합니다. (힌트: 육각형은 6개의 변들로 이루어져 있으며, 각 변의 길이는 100 픽셀입니다.)'
      4-5 Artist Functions 12_instruction: '"웨이브 그리기" 함수를 완성해 봅시다. 각 웨이브는 위아래로 한 번씩 구부러진 모양입니다. 힌트: 5개의 파란 웨이브를 그려보세요.'
      4-5 Artist Functions 13 Free play_instruction: 행성, 별, 로켓, 로봇을 그리기 위한 함수들이 여기 있습니다. 함수들을 자유롭게 이용해서 여러분이 원하는 그림들을 그리고 친구들에게 공유해 보세요.
      4-5 Artist Functions 14 Free play_instruction: 여기 여러가지 함수들을 만들어 드렸습니다. 한 두개 이상의 반복 구조 안에 넣어서 사용해 보세요. 여러분이 원하는 그림들을 만들어서 친구들에게 공유해 보세요. "실행" 을 눌러 예시를 살펴보세요.
      4-5 Artist Functions 15 Assessment_instruction: '형성평가: "사각형 그리기" 블록을 사용해 사각형들을 그려보세요. 사각형들의 각 변의 길이는 50, 100, 15 픽셀입니다.'
      4-5 Artist Functions 2a_instruction: 자 이제 이 블록들을 "작은 삼각형 그리기" 라는 새로운 함수에 넣고, 사용해 보세요.
      4-5 Artist Functions 2b_instruction: 자 이제 주어진 블록들을 이용해서 "작은 삼각형 그리기" 함수를 만들어보세요.
      4-5 Artist Functions 3_instruction: "\"중간 삼각형 그리기\", \"큰 삼각형 그리기\" 함수를 만들어보세요.\n\"작은 삼각형 그리기\" 함수가 주어져 있습니다.\n삼각형들의 크기는 50(작은 삼각형), 100(중간 삼각형), 150(큰 삼각형) 입니다. "
      4-5 Artist Functions 4_instruction: 새로운 "삼각형 그리기" 함수는 매개변수가 있기 때문에, 이전에 보았던 3개의 다른 함수 모두의 기능을 한 번에 할 수 있습니다. 새로운 함수를 사용해서 같은 크기의 삼각형을 3개 그려보세요.
      4-5 Artist Functions 5_instruction: '"삼각형 그리기" 함수를 수정해서 "사각형 그리기" 함수로 만들어 주세요.'
      4-5 Artist Functions 6_instruction: '"사각형 그리기", "삼각형 그리기" 함수를 이용해 집을 그려보세요. (힌트: 사각형의 한 변의 길이는 200 픽셀입니다.)'
      4-5 Artist Functions 6b_instruction: 삼각형/사각형 그리기 함수들을 추가해서 "집 그리기" 함수를 만들어 사용해 보세요.
      4-5 Artist Functions 7_instruction: '"집 그리기" 함수를 이용해서 100, 50 픽셀의 집들을 그려보세요. 두 집은 50 픽셀 만큼 떨어져 있습니다.'
      4-5 Artist Functions 8_instruction: '"꽃 그리기" 함수는 줄기의 높이를 설정할 수 있는 매개 변수가 있습니다. 높이를 200 으로 설정한 다음에 어떻게 되나 살펴보세요.'
      4-5 Artist Functions 9_instruction: 3개의 꽃을 그리세요. 첫 번째 꽃은 높이 100, 그 다음에는 50 만큼 씩 커지게 그리면 됩니다. 꽃들은 100 픽셀 만큼씩 떨어져 있습니다.
      4-5 Artist Patterns 1_instruction: |-
        반복 구조를 이용해서 이 사각형을 그려주세요. \r
        \r
        각 변은 20 픽셀 입니다.
      4-5 Artist Patterns 10_instruction: "이 코드는 두 줄의 육각형을 만들어 줍니다. - 전체 벌집을 다 그리기 위해서 4번 반복 실행하면 됩니다. \\r\n\\r\n힌트: 가장 마지막 반복에서 120 픽셀 만큼 뒤로 뛰어야, 화가가 화면을 벗어나지 않습니다.\\r\n"
      4-5 Artist Patterns 11_instruction: '반 원을 그리기 위해서 얼마나 반복시켜야 할까요? '
      4-5 Artist Patterns 12_instruction: "반복하는 것을 복사하는데 오른쪽으로 돌기를 왼쪽으로 돌기로 바꾸면 어떻게 될까요? \\r\n\\r\n이 웨이브를 만들기 위해서 반복해 주세요."
      4-5 Artist Patterns 13_instruction: "그림 틀을 만들기 위해서 전체를 4번 반복시켜 보세요. 모서리에 주의하세요 - 90도만 돌면 안됩니다! \\r\n\\r\n3도씩 60번 돌면 반 원을 만들 수 있습니다. 이 코드 블록들 중 어느 것으로 모서리에 사분원(1/4 원) 을 만들 수 있을까요?"
      4-5 Artist Patterns 2_instruction: 어떤 반복 구조 안에 다른 반복 구조를 넣으면, 중첩 반복이라고 부릅니다. 15개의 모든 사각형들이 한 줄로 서려면 바깥쪽 반복 구조를 어떻게 추가해야 할까요?
      4-5 Artist Patterns 3_instruction: 좀더 어려운 것을 해보아요! 반복 구조 안에 반복 구조를 넣어봤는데, 다음 줄을 그리려면 화가를 다시 이전 위치로 돌려 놓아야 해요. 전체 격자를 그리기 위해서 가장 바깥쪽 반복의 끝에 어떤 블록들을 놓아야 할까요?
      4-5 Artist Patterns 4_instruction: 이 다이아몬드는 각 변이 50 픽셀이고, 120도 각과 60도 각으로 이루어져 있습니다. 다이아몬드를 그려보세요.
      4-5 Artist Patterns 5.5_instruction: 다이아몬드 격자를 그리기 위해서는 얼마나 많이 반복해야 할까요?
      4-5 Artist Patterns 5_instruction: "자 이제 한 줄에 6개의 다이아몬드를 그려보세요. \n\\r\n\\r\n다이아몬드 코드에서 2번 반복하던 것을 3번 반복으로 고친 것을 잘 보세요. - 왜 그랬을까요?\\r\n"
      4-5 Artist Patterns 6_instruction: 다이아몬드 격자를 그리기 위해서는 얼마나 많이 반복해야 할까요?
      4-5 Artist Patterns 7_instruction: 이전 퍼즐에서 사용했던 코드를 변형해서 더 복잡한 패턴을 만들어보세요. 다이아몬드들이 얼마나 겹쳐 그려지는지 살펴보고, 첫 번째 "뒤로 점프하기"를 100에서 50사이 정도로 바꿔보세요. - 그리고 나서 두 번째 "뒤로 점프하기"는 얼마나 더 멀리 해야 할까요?
      4-5 Artist Patterns 8_instruction: 반복 구조를 사용해서 각 변의 길이가 40 픽셀이면서 내각의 크기가 60 도인 육각형을 만들어 보세요.
      4-5 Artist Patterns 9.5_instruction: 이 코드를 반복시켜서 두 줄로 육각형들을 만들어보세요. 두 번째 줄이 오른쪽으로 얼마나 빗겨 그려져 있는지 살펴보세요.
      4-5 Artist Patterns 9_instruction: "주어진 코드를 3번 반복시켜서 모든 줄을 그려보세요. \\r\n\\r\n각각의 6각형들은 왼쪽 끝에서 오른쪽 끝까지의 너비가 80픽셀입니다."
      4-5 Artist Patterns Free Play_instruction: 마음대로 그리기 - 원하는 패턴을 직접 만들어보세요.
      4-5 Bee Conditionals - FC Test_instruction: "꿀벌은 지금 꽃꿀이 필요합니다.\n모두 꽃은 아니기 때문에, 안개 구름이 있는 모든 곳에서 꽃이 숨어있는지 확인해 보아야 합니다.\n꽃이 있으면 꿀을 모으면 됩니다."
      4-5 Bee Conditionals 1_instruction: "구름으로 가려 잘 보이지 않습니다!\n구름 아래에 꽃이 있는지 살펴보고, 꽃이 있는 경우에만 꽃꿀을 모아보세요.\n주의하세요, 계속 바뀝니다!"
      4-5 Bee Conditionals 2 (copy 1)_instruction: 꿀벌이 꽃꿀을 모으고 있습니다. 꽃들에서만 꽃꿀을 모을 수 있게 해 주세요.
      4-5 Bee Conditionals 2_instruction: "구름들이 더 많습니다! \\r\n\\r\n모든 구름 아래에 꽃들이 있는 것은 아니기 때문에 구름 아래에 꽃이 숨어있는지 살펴보고 꽃꿀을 모아야 합니다. \\r\n\\r\n기억하세요: 모든 구름들 아래에 똑같은 것들이 숨겨진 것은 아닙니다!"
      4-5 Bee Conditionals 3_instruction: "이제 꿀을 만들고 싶습니다.\n이 구름들 중 아래에 벌집이 있을 것입니다. 각 구름을 검사해야합니다!"
      4-5 Bee Conditionals 4_instruction: 이 구름들은 꽃이나 벌집을 가립니다! 만약/아니면 블록을 사용해서 꽃인 경우에 꽃꿀을 모으고, 꽃이 아닌 경우(즉, 벌집인 경우)에는 꿀을 만들도록 해주세요.
      4-5 Bee Conditionals 5_instruction: |-
        이 안개 구름들 아래에는 꽃이나 벌집이 있을 수 있습니다.\r
        \r
        '만약/그렇지않으면' 블록을 이용해서 꽃이면 꽃꿀을 모으고\r
        아니면 (즉, 벌집이라면) 꿀을 만들도록 해보세요.
      4-5 Bee Conditionals 6_instruction: "이 자주색 꽃에는 꽃꿀이 1, 2, 3개 있을 수 있습니다. \\r\n\\r\n이 \"만약\" 블록은 다른 \"만약/아니면\" 블록과 결합되어서, \"만약/(아니고 만약/모두 아니면)\" 명령을 만들어낼 수 있습니다. \n\\r\n\\r\n꽃꿀의 양을 모르는 경우에도 꽃꿀을 모두 얻을 수 있게 해보세요."
      4-5 Bee Conditionals 7_instruction: "자주색 꽃은 꽃꿀이 3, 2, 1 중 하나입니다. \n\\r\n\\r\n\"자주색 꽃 확인\" 함수를 완성하고 이용해서 꽃의 모든 꽃꿀들을 모을 수 있도록 해보세요."
      4-5 Bee Conditionals 8_instruction: "\"꽃을 확인하고 꿀 만들기\" 함수의 내부를 완성해 주세요. \\r\n\\r\n자주색 꽃의 꽃꿀이 3, 2, 1 인 경우에는 모든 꽃꿀을 모으세요. \\r\n그 후에 앞으로 이동해서 꿀을 만들면 됩니다."
      4-5 Bee Conditionals Assessment 1_instruction: "**형성평가:** 이 구름은 한 개의 꽃꿀을 가지고 있는 꽃 아니면 한 개의 꿀을 필요로 하는 벌집을 숨기고 있습니다. \\r\n\\r\n\"꽃꿀을 모으거나 꿀 만들기\" 함수를 완성하고 나서 그 함수를 사용하여 꽃꿀이나 꿀을 모으도록 만들어 주세요.\\r\n"
      4-5 Bee Debugging 1_instruction: "이 블록들이 왜 안되는지 진짜 잘 모르겠어요. \\r\n\\r\n고쳐주세요."
      4-5 Bee Debugging 10_instruction: 오류들을 찾아 고쳐주세요.
      4-5 Bee Debugging 11_instruction: 반복 횟수가 정확한가요?
      4-5 Bee Debugging 2_instruction: 꿀벌이 꽃꿀을 모아 꿀을 만들 수 있도록 도와주세요.
      4-5 Bee Debugging 3_instruction: 오류들을 찾아 고쳐주세요.
      4-5 Bee Debugging 4_instruction: "이 블록들은 제대로 동작하지 않습니다.\n어떤 패턴인가요?"
      4-5 Bee Debugging 5_instruction: 뭔가 틀린 것 같습니다...
      4-5 Bee Debugging 6_instruction: "자주색 꽃에는 꽃꿀이 얼마나 있는지 알 수가 없습니다. \\r\n\\r\n퍼즐이 실행될 때마다 꽃에서 모든 꽃꿀을 뽑을 수 있도록, 블록들을 수정해보세요."
      4-5 Bee Debugging 7_instruction: 함수에 뭔가 빠졌습니다...
      4-5 Bee Debugging 8_instruction: 함수는 맞는데, 정확히 사용되지는 않았습니다.
      4-5 Bee Debugging 9_instruction: 왜 꿀벌이 충분한 꿀을 만들지 못 할까요?
      4-5 Bee Debugging Assessment 1_instruction: '형성평가: 코드를 수정해 주세요.'
      4-5 Bee Nested Loops 1_instruction: 꽃꿀을 모두 모으기 위해서 반복 구조를 사용해보세요.
      4-5 Bee Nested Loops 2_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      4-5 Bee Nested Loops 3_instruction: 중첩 반복 안에 시작 코드를 넣어서 모든 꽃꿀을 모아보세요.
      4-5 Bee Nested Loops 4_instruction: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\r\n\\r\n중첩 반복을 사용하면 됩니다. "
      4-5 Bee Nested Loops 5_instruction: 중첩 반복 구조를 만들어서 모든 꽃꿀을 모아보세요.
      4-5 Bee Nested Loops 6_instruction: 꽃꿀을 모두 모아주세요.
      4-5 Bee Nested Loops 7_instruction: 반복 구조를 다른 반복 구조 안에 넣어 중첩 반복을 만든 후 꽃에서 모든 꽃꿀을 모을 수 있도록 해보세요.
      4-5 Bee Nested Loops 8_instruction: "반복 구조를 중첩해서, 각 꽃에서 꽃꿀을 모두 모아주세요.\n안쪽 반복 블록을 다른 반복 블록으로 바꿔보세요. "
      4-5 Bee Nested Loops 9_instruction: 반복 구조 안에 반복 구조를 중첩시켜서 이 꽃들로 부터 모든 꽃꿀을 모아보세요.
      4-5 Bee Nested Loops Assessment 1_instruction: "**형성평가:** 반복 구조들을 사용해서 모든 꽃꿀을 모으고 꿀을 만드세요."
      4-5 Bee Nested Loops Rows_instruction: 꽃들로 부터 꽃꿀을 모으세요. 중첩 반복을 사용하면 됩니다.
      4-5 Maze 1 (copy 1)_instruction: 여보세요.. 저.. 좀비.. 해바라기.. 가야함..
      4-5 Maze 1_instruction: 여보세요.. 저.. 좀비.. 해바라기.. 가야함..
      4-5 Maze 10_instruction: 4개의 블럭만 사용해서 해바라기로 갈 수 있나요?
      4-5 Maze 11_instruction: 6개의 블록만 사용해서 해바라기로 갈 수 있나요?
      4-5 Maze 12_instruction: "좋아요. 이건 약간 다르네요.\n6개의 블록만으로 해보세요."
      4-5 Maze 13_instruction: 저를 돼지에게 이동시켜 주세요.
      4-5 Maze 14_instruction: 저를 돼지에게 이동시켜주세요! 반복(~할 때까지) 블록을 사용하면 됩니다.
      4-5 Maze 2 (copy 1)_instruction: 좀비를 해바라기로 이동시키되, 식충식물은 피해야 합니다.
      4-5 Maze 2_instruction: 좀비를 해바라기로 이동시키되, 식충식물은 피해야 합니다.
      4-5 Maze 3 (copy 1)_instruction: 해바라기.. 로.. 꼭.. 가야합니다.
      4-5 Maze 3_instruction: 해바라기.. 로.. 꼭.. 가야합니다.
      4-5 Maze 4 (copy 1)_instruction: 더 적은 수의 블럭을 사용하기 위해 "반복"블럭을 사용해 보세요.
      4-5 Maze 4_instruction: 더 적은 수의 블럭을 사용하기 위해 "반복"블럭을 사용해 보세요.
      4-5 Maze 5 (copy 1)_instruction: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      4-5 Maze 5_instruction: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      4-5 Maze 6 (copy 1)_instruction: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      4-5 Maze 6_instruction: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      4-5 Maze 7_instruction: 여보세요.. 저.. 좀비.. 해바라기.. 가야함..
      4-5 Maze 8_instruction: "가능한 적은 블록을 사용해서 좀비가 해바라기로 가도록 해주세요. \\r\n(식충식물들은 피해야 합니다!)"
      4-5 Maze 9_instruction: "\"~할 때까지 반복\" 이라고 부르는 새로운 블럭이 있습니다. \\r\n이 블록은 좀비가 해바라기에게 갈 때까지 명령을 반복하도록 해줍니다. \\r\n\\r\n\"~할 때까지 반복\" 블록을 사용하고 가능한 적은 블록으로 퍼즐을 해결해 보세요."
      4-5 Maze Assessment 1_instruction: '형성평가: 최대한 적은 블록을 사용하여 해바라기로 가기'
      4-5 Maze Conditionals 1_instruction: "\"~할 때까지 반복\" 블록을 이용해서,\n좀비를 해바라기로 이동시켜주세요."
      4-5 Maze Conditionals 10_instruction: "블럭을 3개 더 붙여서, 좀비가 좀 더 복잡한 미로를 빠져나갈 수 있도록 도와주세요.\\r \n\\r \n성공한다면 아무리 크고 복잡한 미로라고 하더라도 거뜬히 통과할 수 있을거예요."
      4-5 Maze Conditionals 2_instruction: "\"~할 때까지 반복\" 블록을 이용해서,\n좀비를 해바라기로 이동시켜주세요."
      4-5 Maze Conditionals 3_instruction: "\"만약\" 블록을 이용하면, 언제 돌아야 할지 판단할 수 있습니다. \\r\n"
      4-5 Maze Conditionals 4_instruction: 음... 이번이 마지막 퍼즐입니다! "만약" 블록과 "반복" 블록을 함께 사용해야 합니다.
      4-5 Maze Conditionals 5_instruction: "\"나 해바라기 원해!\" \\r\n\\r\n\"만약\" 블록을 사용하고 최대한 적은 블록만 사용해서 좀비를 해바라기로 보내주세요."
      4-5 Maze Conditionals 6_instruction: |-
        "해바라기 먹어!" \r
        \r
        "만약" 블록을 사용하고 최대한 적은 블록만 사용해서 좀비를 해바라기로 보내주세요.
      4-5 Maze Conditionals 7_instruction: 이 퍼즐을 해결하는 것이 그리 어렵지는 않지만, 식충 식물을 조심하세요!
      4-5 Maze Conditionals 8_instruction: "\"조건/선택\" 블럭은 조건을 검사한 다음에 그 결과에 따라 하나의 작업을 선택해 실행해 줍니다. \\r\n\\r\n이 블록을 사용해서 저를 해바라기로 보내주세요."
      4-5 Maze Conditionals 9_instruction: |-
        "조건/선택" 블록을 다시 한 번 사용해 보겠습니다. \r
        \r
        손가락으로 따라가 보세요. 한 번에 성공할 수 있겠어요?
      4-5 Maze Conditionals Assessment 1_instruction: "**형성평가:** \"~할 때까지 반복\" 블록과 \"만약/아니면\" 블록을 사용하고 가능한 적은 블록으로 저를 해바라기로 보내주세요."
      4-5 Nested Loops 1_instruction: '이 삼각형들을 그리는 코드를 완성시켜 주세요. 첫 번째 것은 만들어져 있습니다. 힌트: 360 도 방향으로 3개의 삼각형들이 있습니다.'
      4-5 Nested Loops 10_instruction: 이전에 사용되었던 반복 블럭들을 사용해서 마지막 줄의 별들을 그려 주세요. 별들은 50 픽셀씩 떨어져 있습니다. 각 별들의 너비는 30 픽셀입니다.
      4-5 Nested Loops 11_instruction: 중첩 반복을 사용해서 사람다니는 길에 10개의 사각형들을 그려주세요. 각 사각형들은 30 픽셀입니다.
      4-5 Nested Loops 12_instruction: 중첩 반복을 이용해서 36개의 삼각형들을 그려주세요.
      4-5 Nested Loops 2_instruction: "이번에는 반복을 다른 반복에 넣어서 10개의 삼각형을 그려보세요.\n이러한 것을 \"중첩\" 반복이라고 합니다.  "
      4-5 Nested Loops 3_instruction: |-
        다른 반복 안에 시작 코드를 중첩시켜 넣어서 해를 만들어 주세요. \r
        \r
        이렇게 가운데가 빈 멋진 디자인을 얻기 위해서는 회전하기 전에 삼각형의 길이만큼 앞으로 점프해야 합니다.
      4-5 Nested Loops 5_instruction: 주어진 코드를 반복시켜서 풍차를 만들어 주세요.
      4-5 Nested Loops 6_instruction: 삼각형 코드를 반복시켜서 육각형을 그려 주세요.
      4-5 Nested Loops 7_instruction: "이 디자인을 10번 반복시켜주세요. \\r\n\\r \n한 번 반복하고나서 얼마나 회전해야 할까요? (힌트: 360을 10으로 나누면 얼마일까요?)"
      4-5 Nested Loops 8_instruction: "이 디자인을 6번 반복시켜주세요. \\r\n\\r\n한 번 반복하고나서 얼마나 회전해야 할까요? (힌트: 360을 6으로 나누면 얼마일까요?) "
      4-5 Nested Loops 9_instruction: 악어 입 안에 이빨을 그려주세요!
      4-5 Nested Loops Assessment 1_instruction: '형성평가: 중첩 반복을 사용해서 디자인을 완성시켜주세요.'
      4-5 While Loops 1_instruction: 구덩이로 이동해서 "메우기" 블록으로 흙을 2번 메우기 해주세요.
      4-5 While Loops 2_instruction: 흙더미로 이동하고 "치우기 1" 블록으로 흙을 5번 치우기 해주세요.
      4-5 While Loops 3_instruction: "블록을 가능한 적게 사용해서 퍼즐을 해결하세요. \\r\n\\r\n흙더미로 이동해서 흙을 모두 치우고, 구덩이로 이동해서 흙을 모두 메워 주세요."
      4-5 While Loops 4_instruction: "와! 진짜 깊은 구덩이를 발견했습니다. \\r\n\\r\n얼마나 흙을 메워야 할지 모르겠어요. \\r\n\"메우기\" 블록을 사용하여 구덩이가 다 메워질 때까지 계속 흙을 채우는 프로그램을 작성해 보세요.  "
      4-5 While Loops 5_instruction: 와! 이번에는 깊은 구덩이가 2개 입니다. 2개의 구덩이를 모두 채워주세요.
      4-5 While Loops 6_instruction: 와우, 저기 엄청 큰 흙더미가 있네요! 흙더미를 모두 치워보세요.
      4-5 While Loops 7_instruction: 와우, 이제는 3개의 흙더미가 있습니다! 3개의 흙더미를 모두 치워주세요.
      4-5 While Loops 8_instruction: " 진짜 깊은 구덩이와 진짜 큰 흙더미가 있습니다. 구덩이를 메우려면 흙더미를 몇 번 옮겨야 할까요?"
      4-5 While Loops Assessment 1_instruction: 구덩이와 흙더미가 많이 있습니다. 모든 구덩이와 흙더미를 없애주세요.
      App Lab test_instruction: 검사
      Artist - Nested Loops 1_instruction: '이 삼각형들을 그리는 코드를 완성시켜 주세요. 첫 번째 것은 만들어져 있습니다. 힌트: 360 도 방향으로 3개의 삼각형들이 있습니다.'
      Artist - Nested Loops 10_instruction: 이전에 사용되었던 반복 블럭들을 사용해서 마지막 줄의 별들을 그려 주세요. 별들은 50 픽셀씩 떨어져 있습니다. 각 별들의 너비는 30 픽셀입니다.
      Artist - Nested Loops 11_instruction: 중첩 반복을 사용해서 사람다니는 길에 10개의 사각형들을 그려주세요. 각 사각형들은 30 픽셀입니다.
      Artist - Nested Loops 12_instruction: 중첩 반복을 이용해서 36개의 삼각형들을 그려주세요.
      Artist - Nested Loops 5_instruction: 주어진 코드를 반복시켜서 풍차를 만들어 주세요.
      Artist - Nested Loops 6_instruction: 삼각형 코드를 반복시켜서 육각형을 그려 주세요.
      Artist - Nested Loops 9_instruction: 악어 입 안에 이빨을 그려주세요!
      Artist - Nested Loops Assessment 1_instruction: 중첩 반복을 사용해서 디자인을 완성시켜주세요.
      Artist Inspiration_instruction: "멋진 자유 플레이: 여러분들은 이런 패턴을 만들기 위해 필요한 모든 것들을 배웠습니다.\n이 그림이 멋지다고 생각하면, 비슷하게 다른 것을 만들어보세요. 아니면, 만들고 싶은 것을\n만들어보세요.\\r\n\\r\n이런 멋진 패턴이 어떻게 만들어졌는지 궁금한가요? "
      Auto Open Function Editor_instruction: "함수 안에서, 다른 함수를 불러 사용할 수 있습니다!\n\"모양\" 함수를 기본으로 활용해서, 50 픽셀 크기로 시작한 후, 20 픽셀 만큼 씩 커지는\n3개의 집 모양을 만들어 보세요. 반복 카운터 구조를 사용하면 꽤 도움이 될 것입니다. "
      Bee Recommended Blocks test_instruction: 자주색 꽃들은 1 또는 0 의 꽃꿀이 있지만, 정확히 알 수 없습니다. 꽃꿀이 없는 자주색 꽃에서 꿀을 모으지 마세요. if 블록을 사용해서 꽃꿀이 1 만큼 있는지 확인해 주세요.
      Bergeron Robot Maze1_instruction: '나쁜 돼지를 잡을 수 있게 도와주세요! "실행하면" 블록 아래에 "앞으로 이동" 블록들을 여러 개 쌓아 붙인 후, "실행"을 눌러보세요. '
      Brad Spooky House Copy_instruction: "자유 플레이: 여기 여러분들이 작성한 함수들과 가지고 놀 수 있는 몇 개의 함수가 더 있습니다.\n멋진 것들을 그려보세요! 선 그리기로 얼마나 많은 것들을 그릴 수 있는지 해보세요."
      Brad Spooky House_instruction: "자유 플레이: 여기 여러분들이 작성한 함수들과 가지고 놀 수 있는 몇 개의 함수가 더 있습니다.\n멋진 것들을 그려보세요! 선 그리기로 얼마나 많은 것들을 그릴 수 있는지 해보세요."
      Building a Foundation Assessment_instruction: 3단계 피라미드를 만들어보세요. 한 조각 씩 그려 완성해보세요!
      Busy Bee 2_instruction: 이 꿀벌은 아주 바쁘답니다! 단순한 코드를 만들어 낼 수 있는 패턴들을 찾아보세요.
      Busy Bee_instruction: 이 꿀벌은 아주 바쁘답니다! 단순한 코드를 만들어 낼 수 있는 패턴들을 찾아보세요.
      C3-Farmer While Loops 5_instruction: 와! 이번에는 깊은 구덩이가 2개 입니다. 2개의 구덩이를 모두 채워주세요.
      C3-Farmer While Loops 6_instruction: 와우, 저기 엄청 큰 흙더미가 있네요! 흙더미를 모두 치워보세요.
      C3-Farmer While Loops 7_instruction: 와우, 이제는 3개의 흙더미가 있습니다! 3개의 흙더미를 모두 치워주세요.
      C3-Farmer While Loops Assessment 1_instruction: 구덩이와 흙더미가 많이 있습니다. 모든 구덩이와 흙더미를 없애주세요.
      CSP student contact info_instruction: 이메일 주소를 입력해주세요.
      CSPU5_U3L15 full clicker app_instruction: "클리커 게임을 끝내세요\n(힌트를 보려면 여기를 눌러보세요)"
      CSPU5_U3L15 full clicker app_2018_instruction: "클리커 게임을 끝내세요\n(힌트를 보려면 여기를 눌러보세요)"
      Course 2 Bee Loops 1_instruction: "안녕하세요! 여러분? 저는 꿀벌입니다.\n이 꽃들로부터 꽃꿀을 모을 수 있게 도와주세요. "
      Course 2 Maze Loops 1_instruction: 5 개의 블록들만 사용해서 돼지로 이동시켜 주세요.
      Course 4 2_instruction: 꿀벌이 꽃꿀을 모으고 있습니다. 꽃들에서만 꽃꿀을 모을 수 있게 해 주세요.
      Course 4 Artist 1_instruction: "상자를 그릴 수 있도록 도와주세요.\n(각 선의 길이는 200 픽셀입니다.) "
      Course 4 Artist 10_instruction: |-
        힌트를 다시 보려면 여기를 눌러보세요!\r
        \r
        재미있는 모양을 위한 코드가 있습니다. 한 번 실행할 때마다 회전시키면 어떤 일이 일어날까요? 이 모양의 각도는 420도까지 가능하고, 실행할 때마다 화가가 바라보는 방향이 바뀔 것입니다. 그리고 그 각도는 정확히 60도 입니다.
      Course 4 Artist 11_instruction: 자 이제 도전해보세요! 실패하더라도 계속 도전해 보세요. 한 번에 성공하는 사람은 거의 없습니다. 힌트가 필요하다고요? 여기를 눌러보세요!
      Course 4 Artist 12_instruction: |-
        멋진 디자인을 위한 도움말이나 힌트가 필요하면? 여기를 클릭하세요!\r
        \r
        아니면, 자유롭게 디자인해 보세요!
      Course 4 Artist 13_instruction: 계속 하고 있나요? 빈 캔버스가 있습니다. 마음대로 그려보세요.
      Course 4 Artist 2_instruction: 이 코드를 반복시켜서 회색 사각형을 그려주세요. (각 변의 길이는 300픽셀입니다.)
      Course 4 Artist 20_instruction: 계속 하고 있나요? 빈 캔버스가 있습니다. 마음대로 그려보세요.
      Course 4 Artist 3_instruction: 이 코드를 실행(또는 실행 누르기) 하면 어떻게 될지 생각해 보세요. 그 다음에 그림을 완성할 때까지 충분히 여러 번 시도해 보세요.
      Course 4 Artist 4_instruction: 원 안에는 얼마나 많은 각이 있을까요? 색 원들을 만들어내기 위해서 필요한 수를 반복 블록에 채워넣어주세요.
      Course 4 Artist 5_instruction: '이 디자인의 나머지 반을 만들어서 대칭이 되도록 만들어 보세요. 삼각형들은 변들이 같고 50 픽셀 길이입니다. 힌트: 추가해야 할 모든 블록들을 찾아내기 위해서 코드를 여러 번 실행시켜봐야 할 수도 있습니다.'
      Course 4 Artist 6_instruction: "이 삼각형들을 그리기 위한 코드를 완성시켜보세요. \\r\n\\r\n각 정삼각형의 한 변의 길이는 100 픽셀입니다. "
      Course 4 Artist 7_instruction: "이번에는 반복을 다른 반복에 넣어서 10개의 삼각형을 그려보세요.\n이러한 것을 중첩 반복이라고 합니다. 힌트: 360도를 돌며 10개의 삼각형을 그려야 합니다.  "
      Course 4 Artist 8_instruction: 이 코드 블록을 여러번 반복시켜 해를 그려보세요.
      Course 4 Artist 8a_instruction: 이 모양이 기억이 나나요? 이제 처음에 아무 블록들이 없는 상태로 만들어내야 합니다!
      Course 4 Artist 9_instruction: "이 디자인을 10번 반복 시키면서, 한 번 그릴 때마다 회전시켜보세요.\\r\n"
      Course 4 Artist Binary 1_instruction: "여기에 1, 0 로만 이루어진 문자열을 입력해서, 화가를 왼쪽에서 오른쪽으로, 위에서 아래로 움직이는 함수가 있습니다. 화가는 1을 보면 사각형을 채우고, 0이면 무시할 것입니다. \\r\n\\r\n이 코드를 실행시킨 후, 화가가 2진 정보를 이용해서 이 패턴을 그려내는 것을 살펴보세요."
      Course 4 Artist Binary 1a_instruction: "여기에 1, 0 로만 이루어진 문자열을 입력해서, 화가를 왼쪽에서 오른쪽으로, 위에서 아래로 움직이는 함수가 있습니다. 화가는 1을 보면 사각형을 채우고, 0이면 무시할 것입니다. \\r\n\\r\n이 코드를 실행시킨 후, 화가가 2진 정보를 이용해서 이 패턴을 그려내는 것을 살펴보세요."
      Course 4 Artist Binary 2_instruction: 이 이미지를 그려내기 위해서, 어떤 2진 문자열이 8번 반복시켜 줄까요?
      Course 4 Artist Binary 3_instruction: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      Course 4 Artist Binary 4_instruction: 각 2진 문자는 이 그림의 한 줄을 의미합니다. 2진 문자열을 재배치해서 찡그린 얼굴 모양을 웃는 얼굴 모양으로 만들어 주세요.
      Course 4 Artist Binary 5_instruction: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것 일까요?
      Course 4 Artist Binary 6_instruction: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      Course 4 Artist Binary 7_instruction: 이 그림을 마무리 해보세요.
      Course 4 Artist Binary Free Play 2_instruction: '자유 플레이: 빈 캔버스가 있습니다. 마음대로 재미있게 그려보세요!'
      Course 4 Artist Binary Free Play 2a_instruction: |-
        좀 더 높은 해상도로 표현할 수 있는 캔버스가 여기 있습니다. - 16 픽셀 * 16 픽셀!\r
        \r
        2진 비트 문자열로 어떤 것이 그려지는 지 살펴보세요.
      Course 4 Artist Binary Free Play 2b_instruction: 여기를 눌러 힌트를 살펴보세요.
      Course 4 Artist Binary Free Play_instruction: '자유 플레이: 2진 문자열을 이용해서 자유롭게 그려보세요!'
      Course 4 Artist Binary pre1_instruction: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는 0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\r\n\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면, 그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을 그리도록 해보세요."
      Course 4 Artist Binary ryan_instruction: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는 0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\r\n\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면, 그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을 그리도록 해보세요."
      Course 4 Artist For  Functions 10_instruction: 조금 더 나아가 봅시다. "사각형 한 변 그리기" 함수를 이용해서 별 모양을 만들어보세요. 행운을 빕니다!
      Course 4 Artist For  Functions 11_instruction: 조금 더 나아가 봅시다. "사각형 한 변 그리기" 함수를 이용해서 별 모양을 만들어보세요. 행운을 빕니다!
      Course 4 Artist For Loops 1_instruction: 반복 블록을 1개 사용하여 너비가 50 픽셀인 삼각형을 그려주세요.
      Course 4 Artist For Loops 10_instruction: "자유시간입니다!\n여러분이 배운 블록들을 사용해서 원하는 것을 그려보세요."
      Course 4 Artist For Loops 11_instruction: '이전 스테이지에서 어떤 모양의 변의 길이를 조절하기 위해 사용했던 변수에 대해서 생각해 보세요. 이번에는 "카운터" 변수라는 것을 이용해서 같은 작업을 해 보도록 하겠습니다. 이 패턴은 삼각형으로 시작하고, 한 변을 붙이면서 10각형(10개의 변을 가진 다각형) 을 그립니다. 각 변의 길이는 100 픽셀 입니다. '
      Course 4 Artist For Loops 11a_instruction: |-
        자 이제 모두 함께 사용해 봅시다! "반복(~인 동안)"과 "카운터" 변수를 이용해서, 앞의 것보다 2개 더 많은 변을 가지고 있는 각각의 도형들을 만들어보세요. 각 변의 길이는 각 다각형의 변의 개수의 10배이어야 합니다.\r
        \r
        아주 적은 코드가 미리 주어져 있습니다.
      Course 4 Artist For Loops 12_instruction: "꽤 멋져 보이지만, 각 모양을 이전 모양에 붙여서 그리고 싶습니다.\n각 선의 길이는 20 픽셀입니다. 각 모양을 그린 후에는 40 픽셀 만큼 점프를 뛰는\n블록을 사용하면 됩니다. "
      Course 4 Artist For Loops 13_instruction: 흠, 저 모양들은 점점 더 커지는 군요! 이전에 이 문제를 변수를 이용해 해결했었습니다. 카운트 변수를 이용해서 어떻게 각 변의 크기를 줄일 수 있을까요? 일정 거리 만큼 앞으로 움직이지말고, 앞으로 (100/카운터) 픽셀 만큼 움직여 보세요.
      Course 4 Artist For Loops 14_instruction: 일반적인 도형들에 사용하는 각 보다 조금 더 많거나 적게 각을 회전시키면 멋진 효과를 만들어낼 수 있습니다. 이전 레벨에서의 코드를 이용해 실험해 보는데, 89도를 사용하면 이런 비틀어진 사각형 나선 구조를 만들어 낼 수 있습니다.
      Course 4 Artist For Loops 15_instruction: '자유 플레이: "반복(~동안)"을 이용해서 원하는 그림들을 만들어보세요. 여러분이 사용할 수 있는 편리한 변수들을 몇 개 더 추가했습니다.'
      Course 4 Artist For Loops 2_instruction: '50 부터 100 까지 10씩 올리며 카운트하는 반복(~동안) 구조 안에 삼각형을 그리는 코드를 넣어 두었습니다. 참고: "실행"을 누르기 전에 코드를 먼저 살펴보세요.'
      Course 4 Artist For Loops 3_instruction: "이번 퍼즐을 해결하기 위해서, 이전 퍼즐을 참고하세요.\n가장 작은 삼각형의 크기는 한 변이 20 픽셀이고, 가장 큰 삼각형의 크기는 한 변이 200 픽셀입니다.\n각 삼각형들은 바로 전 삼각형 보다 20 픽셀 만큼 씩 더 큽니다.\n"
      Course 4 Artist For Loops 4_instruction: "이 사각형들을 그리려면 배웠던 것들에서 어떤 것을 바꾸면 될까요?\n한 변의 길이가 15 픽셀인 사각형으로 시작하고, 가장 큰 사각형은 한 변이 300 픽셀입니다.\n각 사각형은 바로 전 사각형 보다 15 픽셀 만큼 씩 더 큽니다. "
      Course 4 Artist For Loops 5_instruction: "이전 퍼즐은 참 잘했습니다!\n이번에는 멋진 그림을 그리기 위해서, \"카운터\" 변수 블록을 다시 사용해 보세요. "
      Course 4 Artist For Loops 6_instruction: '자유 플레이: 점점 커지는 도형들을 반복(~동안) 을 이용해 자유롭게 만들어 보세요.'
      Course 4 Artist For Loops 6a_instruction: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      Course 4 Artist For Loops 7_instruction: 알고리즘에서 반복 구조 안에 들어있는 "이동하기" 와 "돌기" 블록들은 그대로 두고, "반복 3회" 만 지우면 어떻게 될까요? 이 나선형 삼각형에서 각 선분들은 그 이전 선분보다 20 픽셀 씩 더 깁니다.
      Course 4 Artist For Loops 8_instruction: |-
        이전 그림에서 1가지만 바꾸면 이 그림을 만들 수 있습니다. 어떤 것을 바꾼 것인지 찾아낼 수 있나요?\r
        \r
        힌트: 뭔가 제거하면 됩니다!
      Course 4 Artist For Loops 8a_instruction: 이전 이미지에서 1가지만 바꾸면 이 이미지를 만들 수 있습니다. 어떤 것을 바꾼 것인지 찾아낼 수 있나요?
      Course 4 Artist For Loops 9_instruction: 나선 구조를 만들 수 있나요? 1 픽셀 부터 75 픽셀까지 한 번에 1 픽셀씩 증가시키면서 이동해 보세요.
      Course 4 Artist For Loops Challenge_instruction: "이 이미지를 만들어내기 위해서 어떤 것들을 어떻게 써야 할 지 생각해 낼 수 있을까요?\\r\n\\r\n힌트가 필요한가요? 여기를 클릭하세요."
      Course 4 Artist For Loops Challenge_a_instruction: |-
        이 이미지를 생성하기 위해 공부한 것들에 대해 설명할 수 있습니까?\r
        \r
        힌트가 필요하면 여기를 클릭하세요.
      Course 4 Artist For Loops inspire_instruction: |-
        멋진 자유 플레이: 여러분은 이제 이런 패턴을 만들기 위해 필요한 모든 것들을 배웠습니다! 이 그림이 여러분이 느끼기에 멋지다면, 비슷한 것을 한 번 만들어 보세요. 아니면, 만들고 싶은 것을 자유롭게 만들어도 됩니다.\r
        \r
        힌트가 필요한가요? 여기를 클릭하세요.
      Course 4 Artist Functions 1_instruction: 반복을 이용해서 한 변의 길이가 100 인 사각형을 만들어 보세요.
      Course 4 Artist Functions 10_instruction: 사각형 위에 꼭 맞는 삼각형을 그리기 위해서 어떤 블록을 추가해야 할까요?
      Course 4 Artist Functions 11_instruction: 큐브를 그리는 코드를 확인해 보세요 - "큐브 그리기"라는 이름의 함수 안에 넣어주세요.
      Course 4 Artist Functions 12.1_instruction: 자 이제 "8각형 그리기 20" 이라는 함수를 만들어보세요. 8각형의 각 변의 길이는 20 픽셀입니다.
      Course 4 Artist Functions 12_instruction: 직선을 그리기 위해서 사각형 함수를 반복시켜보세요.
      Course 4 Artist Functions 13.1_instruction: |-
        자 이제, "오른쪽 위로 점프"라는 함수를 만들어보세요. 이 함수는 8각형 위에 있는 화가가 오른쪽 위로 움직이게 해서 패턴을 다 그릴 수 있게 해줄 것입니다.\r
        \r
        힌트: 여러분이 오른쪽 위로 가려면? 패턴 위에서 8각형의 3/8만큼 점프하면 될 것입니다.
      Course 4 Artist Functions 13_instruction: 새로운 "사각형의 한 변 그리기" 함수를 살펴보세요. 함수가 어떻게 만들어졌는지 구조를 살펴보세요. 다음 퍼즐을 하기 위해서는 "실행"을 누르면 됩니다.
      Course 4 Artist Functions 14.1_instruction: 자 이제, "오른쪽 위로 점프" 함수를 만들어서 이 패턴을 완성할 수 있도록, 화가를 8각형의 오른쪽 위로 이동시켜보세요.
      Course 4 Artist Functions 14_instruction: 잘 했습니다! 이제 새로운 "사각형의 한 변 그리기" 함수를 이용해서 사각형을 그려보세요. 사각형의 한 변의 길이는 40 픽셀입니다.
      Course 4 Artist Functions 15_instruction: '조금 더 배워 봅시다. "사각형의 한 변 그리기" 함수를 이용해서 별 모양을 그릴 수 있을까요? 행운을 빕니다! 힌트: 144도를 돌아야 합니다.'
      Course 4 Artist Functions 2_instruction: '20 픽셀 만큼 씩 떨어져 있는 3개의 사각형을 그려보세요. 힌트: 각 사각형의 크기는 100 픽셀입니다.'
      Course 4 Artist Functions 3_instruction: "\"사각형 그리기\" 함수 블록을 이용해서 이 그림을 만들어보세요. 힌트: 각 사각형들은 120 픽셀 만큼 씩 떨어져 있습니다.\\r\n"
      Course 4 Artist Functions 4_instruction: '직접 "함수 블록"을 만들 준비가 되었나요? 도구상자에서 "함수" 블록을 클릭한 후에 "삼각형 그리기" 로 함수 이름을 바꾸세요. 그 다음에 이전에 반복 블록을 이용해서 삼각형을 만들었던 것과 같이 삼각형을 만드세요. 그 다음에 오른쪽 위의 모서리에 있는 저장 후 닫기 를 누르세요. 힌트: 100 픽셀 크기의 삼각형을 만드세요. 행운을 빌어요!'
      Course 4 Artist Functions 5 OLD_instruction: 집을 그리기 위해서 2개의 함수를 사용해 보세요. - 집을 제대로 그리기 위해서, 이 코드에서 어떤 부분을 고쳐야 할까요?
      Course 4 Artist Functions 5_instruction: "\"사각형 그리기\" 함수 블록을 이용해서 이 그림을 만들어보세요. 힌트: 각 사각형들은 120 픽셀 만큼 씩 떨어져 있습니다.\\r\n"
      Course 4 Artist Functions 6_instruction: 사각형 위에 꼭 맞는 삼각형을 그리기 위해서 어떤 블록을 추가해야 할까요?
      Course 4 Artist Functions 7_instruction: 사각형 함수를 이용해서 한 줄의 사각형을 그려보세요. 각 사각형의 한 변의 길이는 40 픽셀입니다.
      Course 4 Artist Functions 8_instruction: "함수 블록들을 사용하는 것이 어려운가요? 이 함수를 수정해서 200 픽셀 크기가 되도록 바꿔보세요.\n힌트: \"사각형 그리기\" 함수에서 \"수정하기\"를 눌러서 고치면 됩니다.\n함수 수정을 끝내려면 \"닫기\"를 누르면 됩니다. "
      Course 4 Artist Functions 9_instruction: 함수를 만들기 위해 필요한 거의 모든 코드를 해보았습니다. 하지만 뭔가 빠진 듯 하네요. 이 함수 블록을 완성해주세요.
      Course 4 Artist Functions Inspiration_instruction: 여기를 눌러 힌트를 다시 살펴보세요.
      Course 4 Artist Functions challenge_instruction: 여기를 눌러 힌트를 다시 살펴보세요.
      Course 4 Artist Functions inspire_instruction: "여기를 눌러 멋진 그림을\n다시 살펴보세요."
      Course 4 Artist Inspire_instruction: |-
        멋진 디자인을 위한 도움말이나 힌트가 필요하면? 여기를 클릭하세요!\r
        \r
        아니면, 자유롭게 디자인해 보세요!
      Course 4 Artist Params 1_instruction: 한 변의 길이가 50 픽셀인 사각형을 그리는 함수를 수정해보세요.
      Course 4 Artist Params 10_instruction: "함수 안에서, 다른 함수를 불러 사용할 수 있습니다!\n\"모양\" 함수를 기본으로 활용해서, 50 픽셀 크기로 시작한 후, 20 픽셀 만큼 씩 커지는\n3개의 집 모양을 만들어 보세요. 반복 카운터 구조를 사용하면 꽤 도움이 될 것입니다. "
      Course 4 Artist Params 12_instruction: '"바람개비" 함수를 이용해서 이 모양들을 그려보세요. 각 이미지의 측면 길이는 50 입니다.'
      Course 4 Artist Params 13_instruction: '자유 플레이: 여러분들이 만든 함수와 가지고 놀 수 있는 함수들이 더 있습니다. 멋진 것을 그려보세요!'
      Course 4 Artist Params 3_instruction: "멋져요, 이 삼각형들을 새로운 함수로 만들어보세요.\n첫 번째는 20 픽셀 크기이고, 두 번째는 50, 세 번째는 75 입니다. "
      Course 4 Artist Params 4_instruction: "사각형이라는 이름의 새로운 함수를 추가해주세요. 삼각형 함수와 같이 길이 매개 변수가 있어야 합니다.\n이번에는 크기가 25, 50, 75 인 3개의 사각형을 100 픽셀 간격으로 그려보세요."
      Course 4 Artist Params 5_instruction: "새로운 함수들을 이용해서 모양을 그려보세요.\n쉽게 그리려면 \"카운터\" 매개 변수를 사용하는 반복 구조를 사용하면 됩니다.\n"
      Course 4 Artist Params 6_instruction: "\"모양 그리기\" 함수를 수정해 보세요.\n\"길이\" 매개 변수를 가지고 있습니다. 거기에 \"면\" 매개 변수를 더 추가해 주세요.\n주어진 모양을 그리기 위해서는 360을 면의 개수로 나누면 됩니다.\n힌트: 각 모양의 삼각형은 100 픽셀이고, 육각형은 25 픽셀, 사각형은 50 픽셀입니다. "
      Course 4 Artist Params 7_instruction: "\"???\" 에 적당한 수를 채워 이 모양들을 만들어보세요.\n사각형, 삼각형은 100 픽셀이고, 육각형은 75 픽셀입니다. "
      Course 4 Artist Params 8_instruction: "이 모양은 어떻게 그릴 수 있을까요?\n6개의 변을 가진 육각형을 만드는 새로운 함수에 대한 힌트가 여기 있습니다.\n"
      Course 4 Artist Params 9_instruction: "카운터를 이용한 반복 구조 안에서 그 안에 있는 반복 구조를 없앴을 때가 기억 나나요?\n이번에는 \"모양 그리기\" 함수에 \"면\"과 \"길이\" 매개 변수를 이용해 보세요.\n모양들을 다시 만들 수 있을까요? 사각형 카운터는 5/100/5 이어야 하고, 삼각형 카운터는\n10/100/10, 육각형은 2/100/2 가 되어야 합니다."
      Course 4 Artist Var 9_instruction: "삼각형을 1개 그리는 알고리즘이 있는데, \"변\" 변수를 사용할 수 있도록 수정되어 있습니다.\n3이라는 수를 \"변\" 변수로 바꿔보세요. 힌트: \"변 설정\" 블록을 사용하면 됩니다."
      Course 4 Artist Vars 1_instruction: "정삼각형을 그려보세요.\\r\n\\r\n각 변의 길이는 정확히 100 픽셀이어야 합니다."
      Course 4 Artist Vars 10_instruction: "더 작은 삼각형들의 바깥쪽에 1개의 삼각형을 그리는 알고리즘이 있습니다.\n이 알고리즘을 수정해서 삼각형들을 그리기 위한 \"변\" 변수를 사용할 수 있게 해주세요.\n코드를 살펴보고, 3 이라는 수들을 \"변\" 변수로 바꿔보세요.\n\"변 설정\" 블록을 함께 사용해야 합니다."
      Course 4 Artist Vars 11_instruction: "이전 퍼즐에서와 같은 개념들을 사용하는 좀 더 복잡한 코드입니다.\n- 사각형들로 만들어진 이 그림을 그리기 위해서 \"변\" 변수를 어떻게 설정해야 할까요?"
      Course 4 Artist Vars 12_instruction: "자 이제 \"면\" 변수를 살펴보세요.\n5. 이 알고리즘에 더 많은 면 개수를 추가하면 할 수록, 전체 패턴이 더 커집니다! 그리고 \"길이\"라는 변수가 더 있습니다. 그리고 이제 \"앞으로 이동\" 블록이 없어도 할 수 있습니다. 모양을 만들려면 \"길이\" 변수를 75로 설정하세요."
      Course 4 Artist Vars 13_instruction: "전체 패턴을 화면에 맞추기 위해서는, 도형에 여러 개의 변들이 있을 때 각 변들의 길이를 줄여야 합니다.\n\\r\n이 멋진 패턴을 만들어낸 알고리즘을 새롭게 만들어보세요. 각각의 모양을 정확히 맞추기 위해서 \"변\" 변수와 함께 수학 블록을 사용해서, \"길이\" 변수의 값을 계산할 수 있도록 하면 됩니다. 각 다각형의 둘레는 300 픽셀입니다.\\r\n힌트가 필요한가요? 여기를 눌러보세요."
      Course 4 Artist Vars 14_instruction: |-
        자유 플레이: 확인해보세요! 여러분의 알고리즘은 반복 구조가 한 번 이상 중첩되어있습니다. 두 개의 변수 값들을 바꾸어 멋진 패턴들을 만들어보면서 실험해 보세요.\r
        \r
        더 멋지게 만들어 보려면, 색을 사용해 보세요!
        반복 구조들 안에 랜덤색을 사용해서 디자인이 어떻게 변화 되는지 살펴보세요.
      Course 4 Artist Vars 2_instruction: 이번에는 "앞으로 150 만큼 이동"을 사용하는 대신에 "이동" 블록이 "길이"라는 변수에 저장되어있는 값을 이용합니다. 삼각형을 그리기 위해서 "길이"를 150 으로 입력해 보세요.
      Course 4 Artist Vars 3_instruction: "여기에 사각형을 그릴 수 있는 반복 구조가 있는데, 뭔가 빠진 것 같습니다.\n각 변의 길이를 얼마로 해야할지 가늠하기 위해서 \"길이\" 변수를 사용하는 함수를 수정해 주세요. "
      Course 4 Artist Vars 4_instruction: 이번에는 너비의 2배 만큼 높이를 가진 사각형을 만들어보세요. "너비"라는 변수를 100 으로 설정하면 됩니다. 수학 블록들을 이용해 코드를 완성해 주세요.
      Course 4 Artist Vars 5_instruction: '"면" 변수를 이용해서 반복할 횟수를 설정하고 실행시켜보세요.'
      Course 4 Artist Vars 6_instruction: |-
        모든 정 다각형들을 만들 수 있는 코드가 있습니다.
        그 값이 4 로 입력되어있는 새 변수가 있습니다. (수학 블록과 함께) 면 수 변수를 사용해서, 다각형의 면들이 몇 개인지에 상관없이 자동으로 회전시켜보세요.\r
        \r
        여기를 눌러 힌트를 다시 살펴보세요.
      Course 4 Artist Vars 7_instruction: |-
        이전 퍼즐을 통해서 배웠던 것을 이용하면 됩니다. "면" 변수를 사용해서 육각형을 만들어보세요.\r
        \r
        변수 값 하나만 변화시키면, 삼각형, 사각형, 오각형,..., 팔각형을 모두 만들 수 있습니다.
      Course 4 Artist Vars 8_instruction: '자유 플레이: 이 도형의 면의 수로 실험해 보세요. 면의 개수가 어떻게 바뀌든지 상관없이, 도형의 크기는 같아지도록 알고리즘을 수정해 주세요. 힌트: 처음 시작하는 길이를 면의 개수로 나누면, 면의 개수가 많아지는 만큼 각 면의 길이는 짧아집니다.'
      Course 4 Artist Vars 9_instruction: 삼각형을 그리기 위해서 면의 수를 직접 사용하지 않고, "면" 변수를 사용하는 이 알고리즘을 수정해 보세요. "면 설정" 블록을 사용해야 합니다.
      Course 4 Bee 1_instruction: "꿀벌은 구름 아래에 뭐가 있는지 알 수 없습니다.\\r\n\\r\n\"만약\" 블록을 이용해서 구름 아래 꽃이 있는지 확인하세요. \\r\n\\r\n꽃인 경우에만 꽃꿀을 모을 수 있게 해주세요."
      Course 4 Bee 2_instruction: '"만약/아니면" 블록으로 꽃인지? 아니면 벌집인지? 확인하도록 해 보세요. 만약 꽃이면 꽃꿀을 모으고... 아니면, 꿀을 만들어보세요!'
      Course 4 Bee 3_instruction: "물체는 꽃이거나 벌집입니다.\n이번에는 \"만약/아니면\" 블록을 이용해서 꽃이면 꽃꿀을 얻고, 아니면(꽃이 아니면 벌집이므로) 꿀을 만들게 해보세요."
      Course 4 Bee 4_instruction: 이 자주색 꽃에는 꽃꿀이 3, 2, 1개 있을 수 있습니다. 이 "만약/아니면" 블록은 다른 "만약/아니면" 블록과 결합되어서, "만약/(아닌데 만약/아니면)" 명령을 만들어낼 수 있습니다. 꽃꿀의 양을 모르는 경우에도 꽃꿀을 모두 얻을 수 있게 해보세요.
      Course 4 Bee 5_instruction: "이 자주색 꽃에는 꽃꿀이 3, 2, 1개 있을 수 있습니다.\n\"만약-아니면\" 블록을 이용해서 만약/(아닌데 만약/아니면) 블록을 만들어보세요. 만든 블록을 꽃꿀의 개수를 모르는 경우에도 모든 꽃꿀을 얻어내도록 사용할 수 있습니다."
      Course 4 Bee 6_instruction: "이 자주색 꽃에는 꽃꿀이 3, 2, 1개 있을 수 있습니다.\n꽃꿀의 개수를 모를 때에도 꽃꿀을 얻을 수 있도록, 만약/(아닌데 만약/아니면) 블록을 만들어보세요."
      Course 4 Bee 7_instruction: "꽃꿀을 얻어내기 위해 필요한 모든 것을 배웠습니다.\n이 자주색 꽃에는 꽃꿀이 3, 2, 1 만큼 있을 수 있습니다."
      Course 4 Bee For Loops 1_instruction: 각 꽃에서 꽃꿀을 모으기 위해서 반복 구조를 사용하세요.
      Course 4 Bee For Loops 10_instruction: "반복 카운팅이 줄어드는 과정에서는 반복이 한 번씩 끝날 때마다 카운터 변수의 값이 줄어듭니다.\n9, 6, 3의 꽃꿀을 모으기 위해서는 카운터 변수에 더할 값이 어떻게 되어야 할까요?"
      Course 4 Bee For Loops 11_instruction: "이 코드에 어떤 오류가 있을까요?\n오류를 찾아 고칠 수 있는지 살펴보고, 벌이 모든 꽃꿀을 모을 수 있도록 해주세요."
      Course 4 Bee For Loops 2_instruction: "여기 새로운 종류의 반복 구조가 있습니다. \"반복(~동안)\" 이라는 블록입니다.\n이 특별한 반복 구조는 1부터 5까지, 한 번 실행하고 1씩 증가시키면서 카운트 합니다. 꽃꿀을 모을 수 있도록 도와주세요."
      Course 4 Bee For Loops 3_instruction: "이 퍼즐은 1부터 3까지 1씩 카운트를 증가시키는 반복 구조를 이용하면 해결할 수 있습니다.\n이제 꽃꿀을 모아보세요!"
      Course 4 Bee For Loops 4_instruction: 이 꽃들에서 모든 꽃꿀을 모아보세요. 더 쉬운 방법이 있을까요?...
      Course 4 Bee For Loops 5_instruction: "아, 반복(~인 동안) 구조를 사용하면 더 쉽네요!\n반복을 위해 사용한 \"카운터\" 변수를 \"꽃꿀 얻기\" 블록에도 똑같이 사용할 수 있습니다.\n휴! 반복 구조가 많네요. 필요한 코드는 모두 있습니다.\n어떻게 구성되어있는지 살펴보고, 실행시켜보세요. "
      Course 4 Bee For Loops 6_instruction: "카운트다운 반복 구조를 사용할 수도 있습니다.\n이 꽃꿀을 5부터 1까지 카운트다운하면서 모아보세요."
      Course 4 Bee For Loops 7_instruction: "수평 방향으로 얼마나 멀리 가야하는지\n제어할 수 있도록 \"카운터\" 변수를 반복 구조에 사용하세요."
      Course 4 Bee For Loops 8_instruction: 이동하고 꽃꿀을 모으는데 반복 변수를 사용해보세요.
      Course 4 Bee For Loops 9_instruction: "반복(~동안) 구조 안에 있는 마지막 수를 \"증가값\"이라고 합니다. \n한 번 실행보고 나면 카운터 변수의 값이 \"증가값\" 만큼 변화됩니다. 값을 2씩 증가시키면서 이 꽃들의 꽃꿀을 모아보세요."
      Course 4 Bee Loops 5 NEW_instruction: 3개의 꽃이 있습니다. 가장 적은 블록 개수로 꽃꿀을 모을 수 있도록, 3번 반복시키는 명령 패턴을 찾아보세요.
      Course 4 Bee Loops 5a NEW_instruction: "이제 최대한 적은 블록들을 사용해서\n벌집까지 가는 길에 있는 꽃들의 모든 꽃꿀을 모을 수 있도록 해주세요. 마지막에는 꿀을 만들면 됩니다."
      Course 4 Bee Params 1_instruction: '"꽃꿀 3번 모으기" 를 이용해서 꽃꿀을 모두 모으기 위한 순서를 만들어 보세요. 꽃꿀을 모으기 위해 돌고 움직인 다음에 원래 위치로 돌아오면 됩니다.'
      Course 4 Bee Params 2_instruction: '"꽃꿀 3번 모으기" 함수를 수정해서 꽃을 향해 왼쪽으로 도는 대신 오른쪽으로 돌도록 해주세요.'
      Course 4 Bee Params 3 (copy 1)_instruction: "양쪽에 꽃들이 있네요!\n양쪽 꽃들에 대해서 같은 함수를 사용하려면, 매개 변수를 1개 사용해야 합니다.\n\"방향\" 매개 변수를 추가해 두었습니다.\n\"방향\" 매개 변수의 값이 0이면 왼쪽으로 회전하고, 1이면 오른쪽으로 회전해야 합니다."
      Course 4 Bee Params 3_instruction: "양쪽에 꽃들이 있네요!\n\"왼쪽\", \"오른쪽\" 이라는 변수와 \"방향\"이라는 매개변수를 \"꽃꿀 3번 얻기\" 함수에 붙여두었습니다.\n\"꽃꿀 3번 얻기\" 함수를 수정해서, \"왼쪽\" 또는 \"오른쪽\" 변수의 값이 전달될 때,\n지정한 방향으로 회전하도록 바꿔보세요.  "
      Course 4 Bee Params 4 (copy 1)_instruction: 모든 꽃들에서 수집하기 위해서 새로운 함수를 사용해보세요. 0은 왼쪽, 1은 오른쪽입니다.
      Course 4 Bee Params 4 - Two WhenRun_instruction: 모든 꽃들에서 수집하기 위해서 새로운 함수를 사용해보세요. 왼쪽/오른쪽 변수를 사용하세요.
      Course 4 Bee Params 4 backup_instruction: "이 모든 꽃꿀들을 1개의 함수로 모을 수 있다면 얼마나 좋을까요?\n\"꽃꿀들\"이라는 매개 변수를 함수에 추가해서, 뽑아낼 꽃꿀의 양을 제어해 보세요.\n아마도 함수 이름을 바꾸고 싶기도 할 것입니다!"
      Course 4 Bee Params 4_instruction: 꽃들에서 모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요. 왼쪽/오른쪽 변수를 사용하세요.
      Course 4 Bee Params 5_instruction: 시험삼아 해보세요. - 방향 변수를 이용해서 "꽃꿀 5번 모으기" 함수를 만들어보세요.
      Course 4 Bee Params 6 (copy 1)_instruction: 모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요.
      Course 4 Bee Params 6_instruction: "이 모든 꽃꿀들을 1개의 함수로 모을 수 있다면 얼마나 좋을까요?\n\"꽃꿀 개수\"라는 매개 변수를 함수에 추가해서, 뽑아낼 꽃꿀의 양을 제어해 보세요.\n아마도 함수 이름을 바꾸고 싶기도 할 것입니다!"
      Course 4 Bee Params 7 (copy 1)_instruction: 모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요.
      Course 4 Bee Params 7_instruction: 모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요.
      Course 4 Bee Params 8 Clone 2_instruction: "으, 이번에도 다루어야 할 꿀들이 있네요.\n어떻게 하면, 꽃꿀을 뽑을지, 꿀을 만들지 선택해서 함수가 실행되도록 할 수 있을까요?"
      Course 4 Bee Params 8 Clone_instruction: "으, 이번에도 다루어야 할 꿀들이 있네요.\n어떻게 하면, 꽃꿀을 뽑을지, 꿀을 만들지 선택해서 함수가 실행되도록 할 수 있을까요?"
      Course 4 Bee Params 8 clone 3_instruction: "으, 이번에도 다루어야 할 꿀들이 있네요.\n어떻게 하면, 꽃꿀을 뽑을지, 꿀을 만들지 선택해서 함수가 실행되도록 할 수 있을까요?"
      Course 4 Bee Params 8 new_instruction: "으, 이번에도 다루어야 할 꿀들이 있네요.\n어떻게 하면, 꽃꿀을 뽑을지, 꿀을 만들지 선택해서 함수가 실행되도록 할 수 있을까요?"
      Course 4 Bee Params 8_instruction: "도전해보세요: 으, 이번에도 다루어야 할 꿀들이 있네요.\n꿀의 개수와, 꽃꿀의 개수를 모두 사용하는 함수를 다시 만들어보세요.\n2가지 가지 값들에 대해서 어떻게 해야할까요?"
      Course 4 Bee Params Ex_instruction: 모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요.
      Course 4 Binary 1_instruction: 여기에 1 또는 0 으로만 구성되어있는 2진 문자열을 입력하는 함수가 있습니다. 왼쪽에서 오른쪽으로, 위에서 아래로 내려가면서 0인 곳에서 회전하도록 하는 함수입니다. 2진 표시를 통해 농부가 이미지를 어떻게 그려낼 수 있는지 살펴보세요.
      Course 4 Binary 2_instruction: '8번 반복시켜서 이 이미지를 그릴 수 있는 2진 문자열은 어느 것 일까요? 힌트: "1"은 구덩이를 메웁니다.'
      Course 4 Binary 3_instruction: 하나의 2진 문자열을 반복시켜서 이 패턴을 만들어보세요.
      Course 4 Binary 5 (copy 1)_instruction: 10번 반복시켜서 이 이미지를 만들 수 있는 2진 문자열은 어느 것 일까요?
      Course 4 Binary 5_instruction: 10번 반복시켜서 이 이미지를 만들 수 있는 2진 문자열은 어느 것 일까요?
      Course 4 Binary 6 (copy 1)_instruction: 10번 반복시켜서 이 이미지를 만들 수 있는 2진 문자열은 어느 것 일까요?
      Course 4 Binary 6_instruction: 10번 반복시켜서 이 이미지를 만들 수 있는 2진 문자열은 어느 것 일까요?
      Course 4 Binary 7_instruction: 10번 반복시켜서 이 이미지를 만들 수 있는 2진 문자열은 어느 것 일까요?
      Course 4 Binary 8_instruction: 5 비트로 구성된 2진수를 반복시켜서 이 이미지의 대부분을 그려낼 수 있습니다. - 그리고 가장 오른쪽 아래로 이동시키기 위해서 4 비트의 수가 더 필요합니다.
      Course 4 EC 1a_instruction: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 1b_instruction: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 2a_instruction: '**무한 도전** 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!'
      Course 4 EC 2b_instruction: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 2c_instruction: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 2d_instruction: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 3_instruction: '이런 이미지를 그려내기 위해서 이전 레벨에서 배웠던 것들을 사용해 보세요. 참고: 매개변수들을 사용하면 더 간단하게 만들 수 있습니다. '
      Course 4 EC 3a_instruction: '무한 도전: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!'
      Course 4 Maze 1_instruction: 화난 새를 돼지에게 이동시켜주세요!
      Course 4 Maze 2_instruction: TNT를 피해 움직이세요!
      Course 4 Maze 3_instruction: '새를 돼지에게 이동시킬 수 있도록 프로그래밍 해보세요. '
      Course 4 Maze 4_instruction: "이 퍼즐을 풀기 위해서...\n더 적은 블록들을 사용하는 \"반복\" 블록을 사용해보세요."
      Course 4 Maze 5_instruction: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      Course 4 Maze 6_instruction: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      Course 4 Play Lab For Loops 2_instruction: "이번에는,\n1부터 100까지 홀 수들만 카운팅 해보세요."
      Course 4 Play Lab Params 1_instruction: "\"점프\" 함수는 주 캐릭터가 100 픽셀 만큼 점프하도록 해줍니다.\n점프 함수를 이용해서 모든 깃발들을 모아보세요."
      Course 4 Play Lab Params 10_instruction: "여러분을 위해서 함수를 하나더 추가했습니다.\\r\n\\r\n\"if\" 명령어를 이용해서 \"player_score\" 가 일정 점수를 넘으면 \"level_up\" 함수가 실행되도록 프로그램을 만들어 보세요.\\r\n\\r\n예시: \"player_score\" > 6\\r\n\\r\n게임을 해보고, 레벨4를 통과해서 다음 퍼즐로 가보세요. "
      Course 4 Play Lab Params 2_instruction: "지금 점프로는 닿을 수 없을 만큼 아주 높은 곳에 깃발들이 있습니다.\n\"위\", \"아래\" 화살표를 이용해 멀티 점프가 가능하게 해보세요. \\r\n\\r\n\"높이\" 라는 매개변수를 점프 함수에 추가해야 합니다. \"위\"는 강아지를 200 픽셀 만큼 점프하게 만들고, \"아래\"는 100 픽셀 만큼 점프하도록 해야 합니다.\n\\r\n\\r\n힌트: 점프 함수를 수정해서 \"높이\" 매개변수를 사용할 수 있도록 해야합니다."
      Course 4 Play Lab Params 3_instruction: "점프 함수에 다른 매개 변수를 더 추가해서, 다른 캐릭터들도 사용할 수 있게 되었습니다.\n각각의 캐릭터들은 1부터 시작되는 수로 나타내져 있습니다.\n\"점프\" 함수를 수정해서 \"캐릭터\" 매개 변수로 적당한 캐릭터가 점프하도록 만들어보세요. "
      Course 4 Play Lab Params 4_instruction: "\"순찰\" 함수가 있습니다.\n함수를 수정해서 고양이가 400 픽셀 위로 이동 했다가, 다시 400 픽셀 아래로 이동하게 해보세요."
      Course 4 Play Lab Params 5_instruction: "\"순찰\" 함수에 \"캐릭터\" 매개변수를 추가해서, 원하는 캐릭터를 화면에 나타낼 수 있도록 해보세요.\n캐릭터들은 1, 2, 3 으로 선택할 수 있도록 해주세요."
      Course 4 Play Lab Params 6_instruction: '"순찰" 함수에 "속도" 매개변수를 더 추가해 보세요. 다른 캐릭터들이 깃발을 잡기 전에 펭귄이 깃발들을 잡을 수 있도록 "속도" 매개변수를 "속도 설정" 블록에 사용하세요.'
      Course 4 Play Lab Params 7_instruction: "자 이제 즐겨보세요. 주어진 코드가 어떻게 동작하게 될지 한 블록씩 살펴보세요. \\r\n\\r\n살펴본 다음에, 강아지 캐릭터를 방향키로 움직여 깃발을 모두 모아보세요."
      Course 4 Play Lab Params 8_instruction: '"캐릭터가 닿으면" 블록을 이용해서, 강아지 캐릭터다 다른 캐릭터들에 닿으면, 처음의 가장 위쪽의 가장 왼쪽으로 이동되도록 해 보세요.'
      Course 4 Play Lab Params 9_instruction: "이전 단계에서 봤던 게임입니다만, 대부분의 코드가 숨겨져있습니다. 여기에 \"score_points\" 함수가 있습니다.\\r\n\\r\n함수를 수정해서 \"points\" 매개변수를 \"player_score\"의 변수로 추가해 주세요.\\r\n\\r\n\"play_score\" 변수는 강아지가 고양이에게 하트를 붙일 때마다 증가하고, 고양이가 강아지에게 하트를 붙일 때마다 감소해야합니다.\\r\n\\r\n참고:\n\"실행\"을 눌러 실행해 보세요. 강아지가 6 포인트를 얻으면 다음 퍼즐로 갈 수 있습니다. "
      Course 4 Play Lab Vars 1_instruction: "이번에는 코드를 작성할 필요가 없습니다. \"실행\"을 눌러 실행시켜보세요! 이번 게임에서,\n여러분은 고양이보다 더 많은 깃발을 모으기 위해 노력하는 강아지입니다. \"아래\" 방향키를 이용해서\n강아지를 움직여보세요. 그만하려면 \"마치기\"를 누르면 됩니다."
      Course 4 Play Lab Vars 2_instruction: 이전 퍼즐은 공정하지 않았습니다! "강아지 속도" 변수의 값을 바꿔서 고양이보다 더 많은 깃발을 모을 수 있도록 해보세요. 10 개의 깃발을 먼저 모으면 이깁니다!
      Course 4 Play Lab Vars 3_instruction: "이번에는 새로운 종류의 게임입니다!\n왼쪽/오른쪽 화살표를 이용해 움직이고, 위/아래 화살표를 이용해서 점프합니다. 모든 깃발을 모을 수 있는지 해보세요."
      Course 4 Play Lab Vars 4_instruction: "이제 \"높이\" 라는 변수를 사용해서 강아지가 뛰는 높이를 조정할 수 있습니다.\n모든 깃발에 닿을 수 있도록 \"높이\" 변수를 조정해주세요."
      Course 4 Play Lab Vars 5_instruction: "자 이제 게임을 만들어보세요!\n일단 먼저 점수가 필요합니다. 이전 레벨에서 보았던 코드를 다시 만들어서\n점수를 10으로 설정해주세요. "
      Course 4 Play Lab Vars 6 (copy 1)_instruction: "좋아요, 이제 점수 변수를 얻었습니다. 그런데 이제 어떻게 잘 사용할 수 있을까요?\n파이어볼로 적을 맞출 때마다 점수 변수를 붙이는 것은 어떨까요? \"캐릭터 2가 물체에 닿을 때\" 이벤트를 이용해서 파이어볼이 고양이에 닿을 때 점수를 갱신하도록 해보세요. 점수=점수+1 로 설정해서 점수를 올릴 수 있습니다.\n점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요."
      Course 4 Play Lab Vars 6_instruction: |-
        오른쪽 방향키를 이용해 하트를 맞춰보세요.\r
        \r
        이 게임에서는 어떻게 포인트를 올려야 할까요?
        강아지가 하트로 고양이를 맞출 때마다 "점수" 변수에 1씩 더해보세요.
        "캐릭터 2가 물체에 닿으면" 이벤트를 이용해 점수를 업데이트하면 됩니다. "점수=점수+1"로 설정해서
        변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요.
      Course 4 Play Lab Vars 7_instruction: "좋아요. 이제 이 게임을 좀더 어렵게 만들어보세요. 강아지(캐릭터 1) 가 고양이(캐릭터 2) 가 발사한\n노란 하트를 맞으면, 점수를 잃어야 합니다. 10 포인트에서 시작하기 때문에 아주 어렵지는 않습니다.\n10 부터 0 까지 포인트를 내려서 이 레벨을 통과해보세요."
      Course 4 Play Lab Vars 8 (copy 1)_instruction: "자, 이제 이 게임을 위한 마지막 작업입니다. - 플레이어가 승리(패) 하도록 해보세요.\n점수의 값을 검사하기 위해 반복 구조를 사용하세요 - 점수가 20 보다 커지면, 적이 없어지도록 하세요.\n점수가 0 보다 작아질 때마다, 플레이어가 없어지도록 해주세요.\n게임이 그렇게 잘 동작하면 \"마침\"을 눌러주세요."
      Course 4 Play Lab Vars 8_instruction: "이 게임에서 강아지가 승리(패) 하게 해보세요.\n무한 반복을 사용해 점수의 값을 확인하세요 - 점수가 20 보다 크면 적(고양이) 이 사라지게 하세요.\n점수가 0 보다 작으면, 플레이어(강아지) 가 사라지게 해주세요.\n게임이 그렇게 잘 동작하면 \"마침\"을 눌러주세요."
      Course 4 Play Lab Vars 9_instruction: "자유롭게 만들어보세요! 여기에는 지금까지 이 과정에서 사용했던 모든 변수들이 모두 있고,\\r\n필요한 몇 가지가 더 있습니다.\\r\n\\r\n도구 상자에 블록들이 아주 많은데 적당히 분류해야할 것 같습니다!\n이제, 각 블록들을 적당한 카테고리로 묶어 두었습니다. 블록들을 충분히 살펴보세요.\n다 살펴본 이후에 반복 구조, 변수, 이벤트를 이용해 게임이나 이야기를 만들어보세요. \\r\n\\r\n힌트: 모든 명령들을 작업 공간에서 살펴보려면 스크롤해 내려보세요."
      Course 4 Play Lab Vars_instruction: "좋아요. 이제 게임의 마지막 단계를 만들어 보세요.\n- 플레이어가 승리(패) 하도록 설정해 보세요. 무한 반복을 이용해 점수 값을 확인하도록 하세요\n- 점수가 20 보다 크면 적이 사라지게 해주세요. 점수가 0 보다 작으면 플레이어가 사라지게 하면 됩니다."
      Course 4 Play Labs For Loops 1_instruction: "강아지가 1부터 100까지 모든 자연수를 말하도록 해보세요.\n1개의 반복 구조와 카운터 블록을 이용해서, 한 번 실행될 때마다 카운터 값을 말하도록 하면 됩니다."
      Course 4 Play Labs For Loops 2_instruction: 이번에는 Olive가 1부터 101사이에 있는 홀수만 셀수 있도록 도와주세요
      Course 4 Play Labs For Loops 3_instruction: "더 큰 수 만큼씩 카운터 값을 올리면,\n같은 시간에 더 큰 값 범위를 카운트 할 수 있습니다.\n10 부터 1000 까지, 한 번에 10 만큼 씩 증가시키며, 카운트 할 수 있게 해보세요."
      Course 4 Play Labs For Loops 4_instruction: "증가 값을 바꾸는 것도 좋지만, 아직도 일정 값 만큼 변화를 주어 카운팅하고 있습니다.(각 값들은 바로 이전 값에서 똑같은 값 만큼 변합니다.)\n이 반복 구조를 변화시키지 않고, 지수적으로 카운트를 올리고 싶다면 어떻게 할 수 있을까요?\n1, 4, 9, 16, 25 와 같이 (카운터의 제곱값으로) 카운트를 올릴 수는 없을까요?"
      Course 4 Play Labs For Loops 4a_instruction: "자, 이제 단계 7에서의 변수들과 \"카운터\" 변수를 이용해 마술 같은 일을 해봅시다.  \\r\n\\r\n이 퍼즐에서 강아지는 \"증가 값\"에 따라, 0 부터 1000 까지 카운트 할 것입니다.\n처음 \"증가 값\"을 10으로 시작하면 어떻게 되는지 살펴보세요."
      Course 4 Play Labs For Loops 5_instruction: "이전 단계에서는 제곱 씩 카운트 했었습니다. \"카운트^2\"을 \"카운트^3\"으로 바꾸어서\n세제곱으로 카운트하도록 해보세요.(1, 8, 27, 64, 125, 216, 343...)"
      Course 4 Play Labs For Loops 6_instruction: "소수(prime) 는 1 또는 자기 자신으로만 나누어 떨어지는 수라는 것을 알고 있을 것입니다.\n\"소수 판별\" 함수를 이용해서 1부터 100까지의 자연수 중에서, 소수만 말하도록 해보세요."
      Course 4 Play Labs For Loops 6a_instruction: |-
        이번에도 강아지는 "증가 값" 이 사용되는 "반복" 을 이용해 카운트 하고 있습니다.\r
        \r
        자 그럼 이번에는 마법사를 추가해 넣어 보세요. 마법사를 클릭할 때마다 2만큼 커지도록 "증가 값"을 바꿔주세요.
      Course 4 Play Labs For Loops 7_instruction: For 반복을 사용해서 1, 4, 7, 10, 13, 16, 19, 22, 25 순서로 수를 말할 수 있게 해 주세요.
      Course 4 Play Labs For Loops 7a_instruction: "이제 어딘가 도착했네요! \n강아지가 30 을 카운트하기 전에, 마법사를 클릭하는 횟수를 카운팅 할 수 있을까요? \\r\n\\r\n마법사를 클릭하면, \"클릭됨\" 변수의 값이 1씩 증가되도록 블록들을 추가시켜주세요. 이번에는 \"증가 값\"은 무시해도 됩니다.\\r\n\\r\n\"실행\"을 누르면 강아지가 카운트를 시작할 것입니다."
      Course 4 Play Labs For Loops 8_instruction: "자 이제, 캐릭터들이 자기들이 카운트 하는 만큼씩 이동하도록 해보세요.\\r\n\\r\n강아지는 한 번에 카운트에 2 씩 더해 움직여야합니다.(카운트 + 2)\n고양이는 한 번에 2 배씩 카운트를 곱해 움직여야합니다.(카운트 * 2)\n펭귄은 한 번에 카운트를 제곱해 움직여야 합니다.(카운트 ^ 2)\n깃발에 가장 먼저 도착하는 것은 누구일까요?"
      Course 4 Play Labs For Loops 8a_instruction: |-
        게임을 마치려면 "증가값" 변수를 다시 사용해야 합니다! 이번 레벨을 통과하기 위해 사용해봅시다.\r
        \r
        1) 마법사가 클릭되는 횟수를 계속 검사합니다.\r
        2) 강아지의 카운트가 30이 되기 전에, 마법사의 클릭 횟수가 10 이상이 되면, 1 만큼 "증가값"을 올리고 다시 시작합니다.\r
        3) 강아지의 카운트가 30이 되었는데, 마법사의 클릭 횟수가 10 보다 작으면, 게임이 끝납니다.
      Course 4 Playlab For Loop Freeplay_instruction: '자유 놀이: 지금까지 배운 모든 것을 사용하여 "for(~동안)" 반복문을 포함하는 게임을 만들어 보세요!'
      Course 4 Playlab For Loops 4b_instruction: "자, 이제 이 두 캐릭터는 경주를 할 것입니다. \\r\n\\r\n캐릭터들은 한 번에 \"카운터(counter)\"만큼씩 이동할 것입니다. 그러나 \"for(~동안)\" 반복문으로 인해 그 \"카운터\" 들은 서로 다른 값을 가질 것입니다. \\r\n\\r\n반복문 중 하나의 증가값을 바꿔서 경주가 무승부가 되도록 해 줄래요?"
      Course 4 Playlab For Loops 5b_instruction: 두 캐릭터가 정확히 같은 장소에서 끝내도록 "for(~동안)" 반복문의 간격을 조절하세요.
      Course 4 Playlab For Loops 6b_instruction: "여러분이 재미있게 즐길 수 있는 게임을 만들기 위해 이 \"for(~동안)\" 반복문을 편집하세요.\\r\n\\r\n\"실행\" 버튼을 누르고 유니콘을 네 번 클릭하여 우승하게 해 보세요. "
      Course 4 SCF 1_instruction: "4줄의 육각형들을 그리기 위해서 주어진 함수들을 사용해보세요.\n짝수 줄의 육각형들은 오른쪽으로 얼마나 이동되어 그려져 있을까요?"
      Course 4 SCF 1a_instruction: 어떻게 하면 최대한 가장 적은 블록들을 사용해서, 모든 꽃꿀들을 모을 수 있을까요?
      Course 4 SCF 1b_instruction: 어떻게 하면 최대한 가장 적은 블록들을 사용해서, 모든 꽃꿀들을 모을 수 있을까요?
      Course 4 SCF 2_instruction: '이런 이미지를 그려내기 위해서 이전 레벨에서 배웠던 것들을 사용해 보세요. 참고: 매개변수들을 사용하면 더 간단하게 만들 수 있습니다. '
      Course 4 SCF 3 Fail 1_instruction: 어떻게 해야할지 생각해 낼 수 있나요?
      Course 4 SCF 3 Fail 2_instruction: 어떻게 해야할지 생각해 낼 수 있나요?
      Course 4 SCF 3_instruction: '이런 이미지를 그려내기 위해서 이전 레벨에서 배웠던 것들을 사용해 보세요. 참고: 매개변수들을 사용하면 더 간단하게 만들 수 있습니다. '
      Course 4 SCFL 1_instruction: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      Course 4 SCFL 1a_instruction: 최대한 적은 블록들을 사용해서 스크랫이 도토리를 잡을 수 있게 해주세요.
      Course 4 SCFL 1b_instruction: 최대한 적은 블록들을 사용해서 스크랫이 도토리를 잡을 수 있게 해주세요.
      Course 4 SCFL 2_instruction: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      Course 4 SCFL 3_instruction: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      Course 4 SCFL 4_instruction: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      Course 4 SCFL 5_instruction: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      Course 4 SCFL 6_instruction: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      Course 4 SCFL 7_instruction: 화가가 물결무늬들을 잡고 싶어합니다! 어떻게 하면 다시 그려낼 수 있을까요?
      Course 4 SCFP 1_instruction: "매개 변수들을 이용해서 화가가 왼쪽/오른쪽/위쪽/아래쪽으로 x 필셀 만큼 점프 뛰는 함수를 만들어보세요.\n(음수, 양수 모두 사용 가능하도록 만들면 됩니다.)"
      Course 4 SCV 1_instruction: 설명을 다시 보려면 여기를 클릭하세요.
      Course 4 SCV 2_instruction: 설명을 다시 보려면 여기를 클릭하세요.
      Course 4 SCV 3_instruction: |-
        이번에는 잡기 게입입니다! 고양이를 잡으면 2 포인트, 펭귄을 잡으면 3 포인트를 얻게 해보세요.
        10 포인트를 먼저 얻으면 이깁니다!\r
        하지만, 고양이와 펭귄이 서로 잡으면, 점수를 잃습니다.\r
        \r
        위에서 설명한 것처럼 게임이 동작하도록 필요한 블록들을 붙이세요. 방향키를 눌러 강아지를 4방향으로 움직이도록 하려면 어떻게 하면 될까요?
        강아지가 고양이나 펭귄을 잡으면 어떻게 점수를 얻게 할 수 있을까요? 고양이와 펭귄에 동시에 닿으면 어떻게 점수를 잃게 할 수 있을까요?
      Course 4 SCV 4_instruction: 최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요.
      Course 4 SCV 5_instruction: 최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요.
      Course 4 SCV 6_instruction: 설명을 다시 보려면 여기를 클릭하세요.
      Course 4 SCVP 1_instruction: "매개 변수들을 이용해서 화가가 왼쪽/오른쪽/위쪽/아래쪽으로 x 필셀 만큼 점프 뛰는 함수를 만들어보세요.\n(음수, 양수 모두 사용 가능하도록 만들면 됩니다.)"
      Course 4 Variables Assessment_instruction: "한 변의 크기를 지정하기 위한 변수를 사용해 이 이미지를 만들어보세요.\n각 선의 길이는 50 픽셀입니다."
      Course1BeePuzzle12_instruction: 꽃꿀을 3개 모은 후, 2개의 꿀을 만들어보세요.
      CourseF_PlayLab_vars10_instruction: "자유롭게 만들어보세요! 여기에는 지금까지 이 과정에서 사용했던 모든 변수들이 모두 있고,\\r\n필요한 몇 가지가 더 있습니다.\\r\n\\r\n도구 상자에 블록들이 아주 많은데 적당히 분류해야할 것 같습니다!\n이제, 각 블록들을 적당한 카테고리로 묶어 두었습니다. 블록들을 충분히 살펴보세요.\n다 살펴본 이후에 반복 구조, 변수, 이벤트를 이용해 게임이나 이야기를 만들어보세요. \\r\n\\r\n힌트: 모든 명령들을 작업 공간에서 살펴보려면 스크롤해 내려보세요."
      CourseF_PlayLab_vars2_instruction: 이전 퍼즐은 공정하지 않았습니다! "강아지 속도" 변수의 값을 바꿔서 고양이보다 더 많은 깃발을 모을 수 있도록 해보세요. 10 개의 깃발을 먼저 모으면 이깁니다!
      CourseF_PlayLab_vars3_instruction: "이번에는 새로운 종류의 게임입니다!\n왼쪽/오른쪽 화살표를 이용해 움직이고, 위/아래 화살표를 이용해서 점프합니다. 모든 깃발을 모을 수 있는지 해보세요."
      CourseF_PlayLab_vars4_instruction: "이제 \"높이\" 라는 변수를 사용해서 강아지가 뛰는 높이를 조정할 수 있습니다.\n모든 깃발에 닿을 수 있도록 \"높이\" 변수를 조정해주세요."
      CourseF_PlayLab_vars5_instruction: "자 이제 게임을 만들어보세요!\n일단 먼저 점수가 필요합니다. 이전 레벨에서 보았던 코드를 다시 만들어서\n점수를 10으로 설정해주세요. "
      CourseF_PlayLab_vars6_instruction: |-
        오른쪽 방향키를 이용해 하트를 맞춰보세요.\r
        \r
        이 게임에서는 어떻게 포인트를 올려야 할까요?
        강아지가 하트로 고양이를 맞출 때마다 "점수" 변수에 1씩 더해보세요.
        "캐릭터 2가 물체에 닿으면" 이벤트를 이용해 점수를 업데이트하면 됩니다. "점수=점수+1"로 설정해서
        변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요.
      CourseF_PlayLab_vars7_instruction: |-
        오른쪽 방향키를 이용해 하트를 맞춰보세요.\r
        \r
        이 게임에서는 어떻게 포인트를 올려야 할까요?
        강아지가 하트로 고양이를 맞출 때마다 "점수" 변수에 1씩 더해보세요.
        "캐릭터 2가 물체에 닿으면" 이벤트를 이용해 점수를 업데이트하면 됩니다. "점수=점수+1"로 설정해서
        변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요.
      CourseF_PlayLab_vars8_instruction: |-
        오른쪽 방향키를 이용해 하트를 맞춰보세요.\r
        \r
        이 게임에서는 어떻게 포인트를 올려야 할까요?
        강아지가 하트로 고양이를 맞출 때마다 "점수" 변수에 1씩 더해보세요.
        "캐릭터 2가 물체에 닿으면" 이벤트를 이용해 점수를 업데이트하면 됩니다. "점수=점수+1"로 설정해서
        변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요.
      CourseF_PlayLab_vars9_instruction: "좋아요. 이제 이 게임을 좀더 어렵게 만들어보세요. 강아지(캐릭터 1) 가 고양이(캐릭터 2) 가 발사한\n노란 하트를 맞으면, 점수를 잃어야 합니다. 10 포인트에서 시작하기 때문에 아주 어렵지는 않습니다.\n10 부터 0 까지 포인트를 내려서 이 레벨을 통과해보세요."
      Crack Random Substitution_instruction: 소개
      Crack Random Substitution_2018_instruction: 소개
      Crack a Caesar Cipher_instruction: 소개
      Crack a Caesar Cipher_2018_instruction: 소개
      Food Fight!_instruction: "여러분을 위해서 함수를 하나더 추가했습니다.\\r\n\\r\n\"if\" 명령어를 이용해서 \"player_score\" 가 일정 점수를 넘으면 \"level_up\" 함수가 실행되도록 프로그램을 만들어 보세요.\\r\n\\r\n예시: \"player_score\" > 6\\r\n\\r\n게임을 해보고, 레벨4를 통과해서 다음 퍼즐로 가보세요. "
      Function intro Ryan_instruction: '''다리 짓기'' 함수를 두 번 사용해서 횃불로 가는 길을 만드세요.'
      Infinity_catch_instruction: 방향키를 이용해서 엘사("캐릭터 2") 가 안나를 잡아보세요.
      Infinity_finale_instruction: 원하는대로 만들고 친구들에게 공유해 보세요.
      Infinity_move_collide_instruction: "히로는 \"캐릭터 1\" 입니다. 히로를 오른쪽에 있는 베이맥스에게 움직이고,\n베이맥스에 닿으면 소리가 나게 해보세요."
      Infinity_move_directions_instruction: "베이맥스는 \"캐릭터 2\" 입니다. 이동 블록들을 추가해서 방향키로 베이맥스를 움직여보세요.\n베이맥스를 다른 캐릭터 2개에 닿게 해보세요."
      Infinity_move_right_instruction: 히로는 "캐릭터 1" 입니다. 이동 블록을 사용해서 히로가 오른쪽 베이맥스에 닿게 해보세요.
      Infinity_repeat_instruction: "\"반복(무한)\" 블록을 이용해서 안나가 400 픽셀 만큼 씩\n위, 아래로 움직이도록 해보세요."
      Infinity_say_instruction: 말하기 블록을 이용해서 안나가 "안녕 여러분" 이라고 말하도록 해 보세요.
      Infinity_shoot_instruction: 베이맥스는 "캐릭터 2" 입니다. 베이맥스가 히로에게 로켓을 던지게 해보세요.
      Infinity_shoot_directions_instruction: 히로는 "캐릭터 3" 입니다. 히로가 4개의 캐릭터들에게 각각 발사체를 하나씩 쏘도록 해주세요. 1초 간격으로 하나씩 쏘도록 해주세요.
      Infinity_touch_faster_instruction: 더 많은 눈송이들도 터치해보세요.
      Infinity_touch_four_instruction: 안나를 위, 아래, 왼쪽, 오른쪽으로 움직여서 4개의 눈송이들을 터치해보세요.
      Infinity_touch_score_instruction: 안나가 눈송이에 닿으면 점수를 올리도록 만들어보세요. 그 다음에 "실행"을 누르고 안나를 움직여 눈송이에 닿게 해보세요.
      Inspirational Artwork_instruction: "멋진 자유 플레이: 여러분들은 이런 패턴을 만들기 위해 필요한 모든 것들을 배웠습니다.\n이 그림이 멋지다고 생각하면, 비슷하게 다른 것을 만들어보세요. 아니면, 만들고 싶은 것을\n만들어보세요.\\r\n\\r\n이런 멋진 패턴이 어떻게 만들어졌는지 궁금한가요? "
      K-1 Artist 1 Assessment 1_instruction: 짧은 선은 위쪽으로 그리고 긴 선은 오른쪽으로 그리세요.
      K-1 Artist Loops 1_instruction: 오른쪽으로 4번 이동해서 이 선을 그려보세요.
      K-1 Artist Loops 2_instruction: 1개의 반복 구조를 이용해서 같은 선을 그려보세요.
      K-1 Artist Loops 3_instruction: 이 블록들을 반복시켜서 6개의 선을 그려보세요.
      K-1 Artist Loops 4_instruction: 반복 구조를 사용하면, 이 성의 꼭대기를 그리는데 도움이 될까요?
      K-1 Artist Loops 5_instruction: 이 계단들을 그리기 위해서 4번 반복시켜보세요.
      K-1 Artist Loops 6_instruction: "2 개의 반복구조가 필요합니다: 하나는 위로 올라가는 것이고,\n다른 하나는 아래로 내려가는 것입니다."
      K-1 Artist Loops 7_instruction: 2개의 반복 구조를 이용해서 이 패턴을 완성해보세요.
      K-1 Artist Loops 8_instruction: 이번 계단은 더 많습니다.
      K-1 Artist Loops 9_instruction: '형성평가: 반복 구조 1개를 사용해서 계단을 그려보세요.'
      K-1 Artist Loops Free Play_instruction: 자유 시간입니다. 재미있는 것을 그려보세요!
      K-1 Artist1 1_instruction: 1개의 선으로 남자의 발을 그려보세요.
      K-1 Artist1 10_instruction: 보물 X 까지 파선(----) 을 그려보세요.
      K-1 Artist1 2_instruction: 선 2개로 고양이 수염을 그려보세요!
      K-1 Artist1 3_instruction: 왼쪽으로 2개의 선을 그리고, 위쪽으로 2개의 선을 그려 집을 완성해보세요!
      K-1 Artist1 4_instruction: 선을 위로/옆으로/아래로 그려 성을 완성해보세요!
      K-1 Artist1 5.5_instruction: 짧은 선들을 사용해서 성의 세번째 타워를 완성해보세요.
      K-1 Artist1 5_instruction: 2개의 선을 그어 이꽃의 줄기를 그려보세요.
      K-1 Artist1 6_instruction: 점프 블록을 사용해서 그림을 완성해보세요!
      K-1 Artist1 7_instruction: "점프 블록을 사용해서 선을 그리지 말고 이동하세요.\n위로 점프해서 선을 그려주세요."
      K-1 Artist1 8_instruction: 점프, 그리기 블록을 이용해서 파선(----) 을 그려보세요.
      K-1 Artist1 9_instruction: 선을 그린 다음에 점프해서 파선을 만들어보세요.
      K-1 Artist1 Assessment 1_instruction: 짧은 선, 긴 선들을 그려보세요!
      K-1 Artist1 Assessment 2_instruction: 짧은 파선(----) 들을 그려보세요!
      K-1 Artist2 1_instruction: 삼각형 아래에 사각형을 그려보세요.
      K-1 Artist2 2_instruction: 집 옆으로 점프해서 사각형을 그려보세요.
      K-1 Artist2 3_instruction: 다른 사각형 위에 사각형을 그려보세요.
      K-1 Artist2 4_instruction: 사각형을 그려 다리를 완성해 보세요.
      K-1 Artist2 5_instruction: 사각형을 그려 다리의 기둥을 완성해보세요.
      K-1 Artist2 6_instruction: 두 개의 사각형을 더 그려 완성 시켜보세요!
      K-1 Artist2 Assessment1_instruction: '형성평가: 다른 사각형 옆에 사각형을 그려보세요.'
      K-1 Artist2 Free Draw_instruction: 아무거나 그려보세요.
      K-1 Artist2_7_instruction: 옷장 맨 위 서랍에 사각형을 그려보세요.
      K-1 Bee 1_instruction: "제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.\n그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요."
      K-1 Bee 10_instruction: 4번 꽃꿀을 모은 후, 2번 꿀을 만드세요!
      K-1 Bee 11.5_instruction: 4개의 꿀을 만들기 위해서 4개의 꽃꿀을 모아보세요.
      K-1 Bee 11_instruction: 꽃꿀을 3개 모아 꿀을 만들어보세요.
      K-1 Bee 12_instruction: 꽃꿀을 3개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 13_instruction: 꽃꿀을 3개 모은 후, 1개의 꿀을 만들어보세요!
      K-1 Bee 14_instruction: 꽃꿀로 이동해서 꽃꿀을 얻고, 꿀로 이동해서, 꿀을 만들게 해 주세요.
      K-1 Bee 15_instruction: 2개의 꿀을 만들기 위해서 2개의 꽃꿀을 모아보세요!
      K-1 Bee 2_instruction: "제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.\n그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요."
      K-1 Bee 3_instruction: "제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.\n그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요."
      K-1 Bee 4_instruction: 꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 5_instruction: 꽃꿀을 3개 모은 후, 1개의 꿀을 만들어보세요!
      K-1 Bee 6_instruction: 꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 7_instruction: 꽃꿀을 3개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 8_instruction: 꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 9_instruction: 꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee Assessment 1_instruction: 꿀을 만들기 위해, 꽃꿀을 모으세요.
      K-1 Bee Assessment 2_instruction: 꿀을 만들기 위해, 꽃꿀을 모으세요.
      K-1 Bee Loops 1_instruction: 꿀을 만들기 위해, 꽃꿀을 모으세요.
      K-1 Bee Loops 10_instruction: 모든 꽃꿀을 모아 꿀을 만들어보세요.
      K-1 Bee Loops 11_instruction: 모든 꽃꿀과 꿀을 모아보세요.
      K-1 Bee Loops 12_instruction: 모든 꽃꿀과 꿀을 모아보세요.
      K-1 Bee Loops 2_instruction: 1개의 반복 구조를 사용해서 이동한 후, 꽃꿀을 모으고, 꿀을 만드세요!
      K-1 Bee Loops 3_instruction: 3개의 반복(횟수) 구조를 사용해서, 꽃꿀을 모으고 꿀을 만들어보세요!
      K-1 Bee Loops 4_instruction: 반복(횟수) 구조를 사용해서, 꽃꿀을 모으고 꿀을 만들고, 이동해 보세요!
      K-1 Bee Loops 5_instruction: 반복(횟수) 구조를 사용해서, 꽃꿀과 꿀을 모아보세요!
      K-1 Bee Loops 6_instruction: 1개의 반복(횟수) 구조를 사용해서, 꽃꿀과 꿀을 모으고, 이동해 보세요!
      K-1 Bee Loops 7_instruction: 꽃꿀을 모아 꿀을 만들어보세요!
      K-1 Bee Loops 8_instruction: 꽃꿀을 모아 꿀을 만들어보세요!
      K-1 Bee Loops 9_instruction: 꽃꿀을 모두 모아 꿀을 만들어 보세요.
      K-1 Bee Loops Assessment 1_instruction: "꿀을 만들기 위해서, 꽃꿀을 모으세요.\n이동하기 위해서 반복 구조들을 사용하세요!"
      K-1 Bee Loops Assessment 2_instruction: 반복 구조들을 사용해서 꽃꿀을 모아 꿀을 만들어 주세요!
      K-1 Bee Puzzle 12_instruction: 꽃꿀을 3개 모은 후, 2개의 꿀을 만들어보세요.
      K-1 Building a Foundation Assessment_instruction: 3단계 피라미드를 만들어보세요. 한 조각 씩 그려 완성해보세요!
      K-1 Maze 10_instruction: 'TNT를 피해 돼지에게 이동시켜주세요! '
      K-1 Maze 11_instruction: '길을 따라가서 돼지를 잡게 해주세요. TNT를 피해가지 않으면 깃털들이 날리게 될 거에요! 힌트: TNT는 내 아래에 있습니다.'
      K-1 Maze 2_instruction: 오른쪽으로 이동해서 돼지를 잡을 수 있게 해주세요!
      K-1 Maze 3_instruction: 돼지를 잡을 수 있도록, 저를 아래쪽으로 보내주세요!
      K-1 Maze 4_instruction: 돼지를 잡을 수 있도록, 저를 위쪽으로 보내주세요!
      K-1 Maze 5_instruction: 오른쪽으로 이동해서 돼지를 잡을 수 있게 해주세요!
      K-1 Maze 6_instruction: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze 7_instruction: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze 8_instruction: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze 9_instruction: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze Assessment 1_instruction: 형성평가 -- 돼지에게 이동시켜주세요!
      K-1 Maze Assessment 12_instruction: 형성평가 레벨
      K-1 Maze Assessment 13_instruction: 형성평가 레벨
      K-1 Maze Assessment 2_instruction: 형성평가 -- 돼지에게 이동시켜주세요!
      K-1 Maze Loops 1_instruction: 저를 돼지에게 이동시켜 주세요.
      K-1 Maze Loops 10_instruction: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용해 더 쉽게 해보세요.
      K-1 Maze Loops 11_instruction: "돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하면 쉽습니다."
      K-1 Maze Loops 12_instruction: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하면 쉽습니다.
      K-1 Maze Loops 2_instruction: 돼지에게 갈 수 있도록, 반복(횟수) 블록을 사용해보세요.
      K-1 Maze Loops 3_instruction: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 4_instruction: 저를 돼지에게 이동시켜 주세요.
      K-1 Maze Loops 5_instruction: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 6_instruction: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 7_instruction: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 8_instruction: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하세요.
      K-1 Maze Loops 9_instruction: 저를 돼지에게 이동시켜 주세요.
      K-1 Maze Loops Assessment 1_instruction: "지금까지 배웠던 것을 잘 살펴보세요!\n반복(횟수) 구조를 사용해 돼지에게 보내주세요!"
      K-1 Maze Loops Assessment 2_instruction: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하세요.
      K-1 Maze Multi 14_instruction: 형성평가 레벨
      K-1 Maze Multi 15_instruction: 형성평가 레벨
      K-1 Maze Sequence Assessment 1_instruction: |-
        배운 것을 살펴봅시다!\r
        한 방향으로 움직이다가 다른 방향으로 움직여서 돼지에게 갈 수 있도록 해주세요.
      K-1 Maze Sequence Assessment 2_instruction: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze debug Assessment 1_instruction: '형성평가: 돼지에게 갈 수 있도록 블록들을 추가하거나 다시 배치 해주세요.'
      K-1 artist 1 level 10_instruction: 점프, 그리기 블록을 이용해서 파선(----) 을 그려보세요.
      K-1 artist 1 level 9_instruction: 세 개의 선을 이용하여 이것을 그려보세요.
      K-1 maze debug 1_instruction: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      K-1 maze debug 10_instruction: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 11_instruction: |-
        연습해보세요!\r
        디버깅해서 돼지에게 갈 수 있도록 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 2_instruction: 어떤 것이 빠졌는지 살펴본 후, 블록들을 추가해서 돼지에게 갈 수 있도록 해주세요!
      K-1 maze debug 3_instruction: 어떤 것이 빠졌는지 살펴본 후, 블록들을 제거해서 돼지에게 갈 수 있도록 해주세요!
      K-1 maze debug 4_instruction: 이 블록들을 실행해보고 고쳐주세요! 제가 생각하기에 다른 방향으로 가고 있는 것 같아요.
      K-1 maze debug 5_instruction: 돼지에게 갈 수 있도록 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 6_instruction: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 7_instruction: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 8_instruction: 디버깅해서, 돼지에게 갈 수 있도록 블록들을 추가하고 다시 배치 해주세요.
      K-1 maze debug 9_instruction: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K2.0 sequence 1_instruction: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      K2.0 sequence 2_instruction: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      K2.0 sequence 5_instruction: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K2.0 sequence 6_instruction: 어떤 것이 빠졌는지 살펴본 후, 블록들을 추가해서 돼지에게 갈 수 있도록 해주세요!
      K2.0 sequence 9_instruction: 'TNT를 피해 돼지에게 이동시켜주세요! '
      KTest2_instruction: 길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이 헝클어지지 않도록 해야 돼!
      Kiki_StarWars_Test_3_instruction: 문장
      Kiki_StarWars_Test_4_instruction: 문장
      Kiki_StarWars_Test_5_instruction: 문장
      Kiki_StarWars_Test_5_Example_instruction: 문장
      MC Agent Freeplay_instruction: "**무료플레이:** 스스로 직접 탐험해보세요!"
      MC HOC 2016 Level 10_instruction: 이제 자신만의 Minecraft를 만들 수 있습니다! 마음껏 생물들을 생성하고 원하는 일을 지시해보세요. 즐거운 시간 되세요!
      MC HOC 2016 Level 2-2_instruction: 닭이 움직이지 않는 상태입니다. '이동'과 '회전' 블록을 '생성 시' 슬롯에 넣어 움직이게 해보세요.
      MC HOC 2016 Level 3_instruction: '닭이 움직이는군요. 잘했습니다! 그러고는 멈췄네요. 게임에서 닭은 끊임없이 움직입니다. ''영원히 수행'' 루프를 추가하여 닭들이 계속 움직이게 하세요.'
      MC HOC 2016 Level 4_instruction: 닭들이 모두 같은 방향으로 움직이니 이상하네요. 게임에서는 무작위 이동을 넣어 현실감을 더할 수 있습니다. 닭들이 '무작위 회전'을 하도록 해보세요.
      MC HOC 2016 Level 5_instruction: 소들이 헤매고 있네요! '영원히 수행'에 '한 걸음 다가가기' 블록을 넣고 루프를 만든 뒤 소들이 잔디로 다가가게 하세요.
      MC HOC 2016 Level 6_instruction: 이제 좀비를 생성하세요. 밤이 되면 3마리의 좀비가 생성되도록 '생성' 블록을 사용하세요. 좀비가 자신 쪽으로 오게 하세요. 아침까지 살아남으세요.
      MC HOC 2016 Level 8_instruction: 양에게 가는 길이 돌벽으로 막혀 있습니다. 다행히 여기에 크리퍼가 하나 있네요. 크리퍼는 닿으면 폭발합니다. 크리퍼를 사용하여 벽을 폭발시키고 양에게 다가가세요!
      MC HOC 2016 New Drop_instruction: Minecraft에서 양은 양털을 떨어뜨립니다. '사용했을 때'에 '떨어뜨리기' 블록을 놓은 뒤, 양에게 다가가 양이 아이템을 떨어뜨리게 하세요.
      MC HOC 2016 New Spawn_instruction: 게임에서 생성이란 월드에 뭔가를 더한다는 뜻입니다. '실행 시' 아래 '생성' 블록을 놓고 게임이 시작할 때 뭔가가 생성되게 만드세요.
      MC HOC 2016 New Walk_instruction: 이제 월드를 탐험해 보죠! 화살표 키로 이동하고, 스페이스 바나 게임판을 터치하여 아이템을 사용할 수 있습니다. 문을 사용하여 집 안으로 들어가세요.
      MC HOC 2016 SCORE LEVEL_instruction: 일부 게임에서는 점수를 얻을 수 있습니다. 철 골렘과 술래잡기를 하세요. 철 골렘을 건드리면 점수를 얻을 수 있도록  '1점 추가' 블록을 사용하세요. 5점을 획득하여 승리하세요!
      MC HOC 2016 Village Test_instruction: 이런! 좀비들에게 포위되었습니다! 철 골렘이 좀비를 쫓아가 공격하는 코드를 짜세요.
      MC_HOC_2017_01_Cole_instruction: 여정에 필요한 도구를 모두 확보해야 합니다. **방향키**를 사용해 원하는 방향으로 이동하세요. 길목에 있는 상자에 도달하면 성공입니다.
      MC_HOC_2017_01_RETRY_instruction: 'Agent를 감압판 위로 움직인 다음 ''실행''을 누르고 방향키를 사용해 플레이어를 집 밖으로 움직여 상자를 집게 하세요. '
      MC_HOC_2017_02_instruction: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_02_Cole_instruction: 'Agent를 감압판 위로 움직여 {currentPlayerName}이(가) 지도가 있는 곳으로 갈 수 있게 해주세요. '
      MC_HOC_2017_02_Kiki_instruction: Agent가 감압판 위로 가게 한 다음 플레이어를 주황색 네모 칸으로 움직이세요.
      MC_HOC_2017_02_Will_instruction: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_03_Cole_instruction: '코드를 사용해 Agent가 문을 열게 하세요. '
      MC_HOC_2017_03_Kiki_instruction: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04_instruction: 마지막 퍼즐에 사용된 루프의 내용을 바꿔서 Agent가 강폭이 넓은 곳을 건너는 길을 만들 수 있게 도와주세요.
      MC_HOC_2017_04POINT5_Cole_instruction: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04POINT5_RYAN_instruction: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04_Cole_instruction: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04_Kiki_instruction: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_05_instruction: 함수를 사용해 Agent를 감압판으로 움직이세요.
      MC_HOC_2017_05_Cole_instruction: 플레이어를 삽 쪽으로 움직이세요.
      MC_HOC_2017_05_Josh_instruction: 플레이어를 삽 쪽으로 움직이세요.
      MC_HOC_2017_05_Kiki_instruction: 플레이어를 주황색 네모 칸으로 움직이세요.
      MC_HOC_2017_06_Cole_instruction: 코드의 잘못된 부분을 수정해서 Agent가 강을 건너는 다리를 짓게 하세요.
      MC_HOC_2017_06_Josh_instruction: 코드의 잘못된 부분을 수정해서 Agent가 강 위로 다리를 짓게 도와주세요.
      MC_HOC_2017_06_Kiki_instruction: 코드의 잘못된 부분을 수정해서 Agent가 강 위로 다리를 짓게 도와주세요.
      MC_HOC_2017_07_Cole_instruction: 얼음을 제거하고 {currentPlayerName}이(가) 광물 수레로 갈 수 있게 도와주세요.
      MC_HOC_2017_07_Kiki_instruction: 함수를 사용해 주황색 네모 칸으로 가는 길을 만드세요.
      MC_HOC_2017_07a_Kiki_instruction: 주황색 네모 칸으로 가는 길을 만드세요.
      MC_HOC_2017_08_Cole_instruction: 주어진 함수를 이 바이옴에서 사용할 수 있게 바꿔 보세요.
      MC_HOC_2017_08_Kiki_instruction: 함수를 이 퍼즐에서 사용할 수 있게 바꿔 보세요.
      MC_HOC_2017_08_RY_instruction: 함수를 사용해 용암을 건널 방법을 찾으세요.
      MC_HOC_2017_08_Will_instruction: 함수를 사용해 용암을 건널 방법을 찾으세요.
      MC_HOC_2017_09_Cole_instruction: Agent가 플레이어를 위해 길을 만들도록 프로그래밍하세요.
      MC_HOC_2017_09_Kiki_instruction: Agent가 플레이어를 위해 길을 만들고 감압판 위로 움직이게 프로그래밍하세요.
      MC_HOC_2017_10_Cole_instruction: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_10_Cole_old_instruction: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_10_Kiki_instruction: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_10_RETRY_instruction: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_10_RYAN_instruction: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_10_RYAN2_instruction: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_13_Cole_instruction: "**무료플레이:** 스스로 직접 탐험해보세요!"
      MC_HOC_2017_4.5v2_instruction: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_Ali_instruction: 함수를 사용해 용암을 건널 방법을 찾으세요.
      MC_HOC_2017_FP10x10_instruction: "**무료플레이:** 이 레벨의 다이아몬드를 모두 모으기에 도전해볼까요? "
      MC_HOC_2017_FP10x10_RE_instruction: "**무료플레이:** 이 레벨의 다이아몬드를 모두 모으기에 도전해볼까요? "
      MC_HOC_2017_FP20x20_instruction: "**무료플레이:** 스스로 직접 탐험해보세요!"
      MC_HOC_2017_Ryan_03_instruction: 이제 루프를 사용해 Agent가 물 속에 블록을 놓아 강을 건너는 다리를 짓게 도와주세요.
      MC_HOC_2017_Ryan_05_instruction: 플레이어가 목표 지점을 갈 수 있게 선인장을 제거하세요.
      MC_HOC_Kiki_02_instruction: Agent를 감압판 위로 움직이세요.
      Mike Test Bee Conditionals 1_instruction: "구름으로 가려 잘 보이지 않습니다!\n구름 아래에 꽃이 있는지 살펴보고, 꽃이 있는 경우에만 꽃꿀을 모아보세요.\n주의하세요, 계속 바뀝니다!"
      NEW Course 4 Artist Functions 1_instruction: 반복 구조를 이용해서 한 변의 길이가 100 픽셀인 사각형을 그려보세요.
      NEW Course 4 Artist Functions 10.1_instruction: 이 패턴을 그리기 위해서 이전 퍼즐들의 함수들을 사용해보세요.
      NEW Course 4 Artist Functions 10_instruction: '"수정"을 누른 후, 함수를 정의한 블록들을 40 픽셀 사각형을 그릴 수 있도록 만들어주세요.'
      NEW Course 4 Artist Functions 11_instruction: "한 줄에 6개의 사각형을 그리는 \"사각형 한 줄 그리기\" 함수를 만들어 보세요.\n이전에 만들어 보았던 \"20 크기 사각형 그리기\" 함수를 이용해서 만들면 됩니다."
      NEW Course 4 Artist Functions 12_instruction: "이 패턴을 그리기 위해서, 마지막 퍼즐에서 사용했던\n\"사각형 한 줄 그리기\" 함수를 사용해보세요."
      NEW Course 4 Artist Functions 13_instruction: '"사각형 한 줄 그리기" 함수를 이용해서 별 모양을 그려보세요.  '
      NEW Course 4 Artist Functions 14_instruction: '자유 시간입니다! '
      NEW Course 4 Artist Functions 2_instruction: '20 픽셀 만큼 씩 떨어져 있는 3개의 사각형을 그려보세요. 힌트: 각 사각형의 크기는 100 픽셀입니다.'
      NEW Course 4 Artist Functions 3_instruction: "여기에 \"함수\"라는 새로운 블록이 있습니다. \"수정하기\"를 눌러 한 변의 길이가 100 픽셀인 사각형을 그릴 수 있도록 코드를 채워보세요. \\r\n\\r\n함수를 모두 수정하면 \"닫기\"를 누른 후 프로그램을 실행시켜보세요."
      NEW Course 4 Artist Functions 4_instruction: '"사각형 그리기" 함수를 사용해서 이 패턴을 그려보세요.'
      NEW Course 4 Artist Functions 5_instruction: "\"사각형 그리기\" 블록은 어떻게 실행되는 것일까요? \"사각형 그리기\" 함수에서 \"수정하기\"를 눌러보세요.\n수정하기를 눌렀을 때 보이는 것은 \"사각형 그리기\"를 정의한 것입니다.\n함수를 살펴보았으면, \"저장 후 닫기\"를 누른 후, 프로그램을 \"실행\" 시켜 보세요."
      NEW Course 4 Artist Functions 6_instruction: "\"사각형 그리기\" 함수 블록을 이용해서 이 그림을 만들어보세요. 힌트: 각 사각형들은 120 픽셀 만큼 씩 떨어져 있습니다.\\r\n"
      NEW Course 4 Artist Functions 7_instruction: "함수 블록들을 사용하는 것이 어려운가요? 이 함수를 수정해서 200 픽셀 크기가 되도록 바꿔보세요.\n\"사각형 그리기\" 함수에서 \"수정하기\"를 눌러서 고치면 됩니다.\n함수 수정을 끝내려면 \"닫기\"를 누르면 됩니다. "
      NEW Course 4 Artist Functions 8_instruction: "\"삼각형 그리기\"라는 새로운 함수를 만들었습니다.\n한 변의 길이가 100 픽셀인 삼각형을 그릴 수 있도록 함수 정의를 수정해보세요."
      NEW Course 4 Artist Functions 9_instruction: 블록 1개 만 더 추가해서 이 문제를 풀어보세요.
      NEW Course 4 Artist Functions inspire_instruction: "여기를 눌러 멋진 그림을\n다시 살펴보세요."
      NEW Course 4 Artist Params 1_instruction: "한 변의 길이가 50 픽셀 크기인 사각형을 만들 수 있도록\n이 함수를 만들어 보세요. \"수정\"을 눌러 시작하세요."
      NEW Course 4 Artist Params 10_instruction: '"육각형 그리기" 함수 블록을 길이 변수값을 바꿀 수 있도록 만들어보세요. 이 정육각형의 한 변의 길이는 100 픽셀입니다. '
      NEW Course 4 Artist Params 11_instruction: "이 모양을 어떻게 그릴지 생각할 수 있나요?\n\"한 변의 길이\" 변수를 사용하기 위해 함수를 수정하세요."
      NEW Course 4 Artist Params 12_instruction: "이 그림을 완성할 수 있겠나요?\n모든 모양의 한 변의 길이는 100 픽셀입니다."
      NEW Course 4 Artist Params 12a_instruction: "이번 이미지는 이전 것과 비슷합니다.\n함수에 \"~동안 반복\" 을 이용해 이 디자인을 만들어보세요."
      NEW Course 4 Artist Params 13_instruction: "\"다각형 그리기\" 함수를 수정해 보세요. \"변의 길이\" 매개 변수가 있습니다. 이제 \"길이\"를 매개 변수로 추가해 보세요. \\r\n각 모양의 둘레의 길이는 200 픽셀입니다. 다각형에서 면의 개수가 달라질 때, 같은 크기로 만드는 공식 기억하고 있으시죠?"
      NEW Course 4 Artist Params 14_instruction: "\"나선 그리기\"를\n\"길이\"와 \"한 변의 길이\" 변수를 이용할 수 있도록 수정하고, 이 모양을 다시 만들어보세요."
      NEW Course 4 Artist Params 15_instruction: "자유 플레이: 여기 여러분들이 작성한 함수들과 가지고 놀 수 있는 몇 개의 함수가 더 있습니다.\n멋진 것들을 그려보세요! 선 그리기로 얼마나 많은 것들을 그릴 수 있는지 해보세요."
      NEW Course 4 Artist Params 3_instruction: "이제 한 줄에 5개의 삼각형을 그리는 함수를 사용해보세요.\n각 삼각형들은 30 픽셀씩 떨어져 있습니다.\\r\n"
      NEW Course 4 Artist Params 4_instruction: "이 함수 블록들이 뭔가 다르다는 것을 알아차리셨나요?\n\"실행\"을 눌러 어떤 일이 일어나나 살펴보세요."
      NEW Course 4 Artist Params 5_instruction: "입력 블록의 길이 매개변수에 입력 되어있는??? 를 채워보세요.\n육각형의 한 변의 길이는 100 픽셀입니다. "
      NEW Course 4 Artist Params 6_instruction: "이런 모양들을 그려내기 위해서, \"???\" 로 입력되어있는 \"길이\" 매개 변수의 정확한 값을 채워보세요.\n사각형과 삼각형의 각 변의 길이는 100 픽셀이고 육각형의 한 변의 길이는 75 픽셀입니다."
      NEW Course 4 Artist Params 7_instruction: 이 그림을 완성시켜보세요. 각 삼각형의 변의 길이는 바로 이전 것보다 25 픽셀만큼 더 깁니다. 첫 번째 삼각형의 한 변의 길이는 25 픽셀입니다.
      NEW Course 4 Artist Params 8_instruction: "이 삼각형 함수의 코드는 문제가 있습니다.\n함수를 고쳐서 25, 50, 75 길이의 삼각형을 그려보세요."
      NEW Course 4 Artist Params 9_instruction: "\"사각형 그리기\" 함수의 정의를 \"수정\"해서 매개 변수를 추가해보세요.\n삼각형 그리기와 마찬가지로 길이를 매개 변수로 사용하면 됩니다.\n이번에는 3개의 사각형들을 그리면 됩니다: 한 변의 길이가 25, 50, 75 픽셀이고,\n100 픽셀 만큼씩 떨어져 있습니다."
      NEW Course 4 Artist Params inspire_instruction: "멋진 자유 플레이: 여러분들은 이런 패턴을 만들기 위해 필요한 모든 것들을 배웠습니다.\n이 그림이 멋지다고 생각하면, 비슷하게 다른 것을 만들어보세요. 아니면, 만들고 싶은 것을\n만들어보세요.\\r\n\\r\n이런 멋진 패턴이 어떻게 만들어졌는지 궁금한가요? "
      NEW Course 4 Artist Vars 1.5_instruction: "코드를 살펴보세요. \"길이 설정\" 블록과 \"길이\" 블록이 어떻게 함께 사용될 수 있는지\n이해할 수 있나요? \"실행\"을 눌러 어떻게 실행되는지 살펴보세요. "
      NEW Course 4 Artist Vars 12_instruction: "자 이제, 이전 레벨에서의 알고리즘을 다시 만든 후,\n한 변의 길이가 150인 오각형을 만들어보세요."
      NEW Course 4 Artist Vars 2.5_instruction: "코드를 살펴보세요. \"길이 설정\" 블록과 \"길이\" 블록이 어떻게 함께 사용될 수 있는지\n이해할 수 있나요? \"실행\"을 눌러 어떻게 실행되는지 살펴보세요. "
      NEW Course 4 Artist Vars 2_instruction: "\"길이 설정\" 블록과 \"_번 반복하기\" 블록에 숫자 블록을 넣어, 50 픽셀 크기의 삼각형들을 만들어보세요.\n"
      NEW Course 4 Artist Vars 4 5_instruction: "이전 퍼즐을 멋지게 해결했으니, 이번에는 60 픽셀 크기의 육각형으로 멋진\n디자인을 만들어보세요."
      NEW Course 4 Artist Vars 4_instruction: "다시 한 번 해보세요. \\r\n\\r\n육각형들로 이런 멋진 디자인을 만들기 위해 \"길이\" 변수값을 60으로 설정해 보세요."
      NEW Course 4 Artist Vars 6_instruction: "\"길이\" 변수의 값을 정확히 입력하고 이 변수를 모든 알맞은 위치에 넣어서 100 픽셀짜리 오각형 패턴을 그려보세요. \\r\n\\r\n길이 변수의 값을 한 번만 입력하면, 그 값을 계속 사용할 수 있다는 것을 알 수 있습니다."
      NEW Course 4 Bee For Loops 1_instruction: 각 꽃에서 꽃꿀을 모으기 위해서 반복 구조를 사용하세요.
      NEW Course 4 Bee For Loops 10_instruction: "수평 방향으로 얼마나 멀리 가야하는지\n제어할 수 있도록 \"카운터\" 변수를 반복 구조에 사용하세요."
      NEW Course 4 Bee For Loops 10a_instruction: "자 이제 도전해보세요! 반복에 대해 배웠던 것들을 이용해서, 이 문제를 풀어보세요.\n기억하세요: 어떤 단계들로 진행되는지 이해하기 위해서, 여러 번 실행시켜 봐야 할 거예요."
      NEW Course 4 Bee For Loops 11_instruction: 이동하고 꽃꿀을 모으는데 반복 변수를 사용해보세요.
      NEW Course 4 Bee For Loops 2_instruction: "꿀벌이 모든 꽃꿀을 모울 수 있도록 할 수 있는 코드를 추가해보세요.\n이 퍼즐을 해결하기 위해서, 코드가 얼마나 많이 필요한지 잘 살펴보세요!\n(다음 퍼즐에서는 더 간단한 방법을 배우게 될 것입니다.)"
      NEW Course 4 Bee For Loops 3_instruction: "아! \"반복\" 구조는 더 쉽게 할 수 있어요! 필요한 모든 코드는 여기있으니, 어떻게 사용할지 살펴본 후에\n\"실행\"을 눌러 결과를 살펴보세요. "
      NEW Course 4 Bee For Loops 4 4_instruction: "이제 \"카운터\" 만큼 앞으로 이동시켜야 합니다.\n그 다음에 \"카운터\" 만큼 꽃꿀을 얻으면 됩니다. 이 문제를 해결하기 위해서 \n2 개의 \"반복\" 블록을 사용하세요."
      NEW Course 4 Bee For Loops 4_instruction: '"반복(~인 동안)" 구조에서 ??? 부분에, 꿀벌이 모아야 하는 최대 꽃꿀의 양을 입력해 보세요. '
      NEW Course 4 Bee For Loops 5 5_instruction: "\"반복(~인 동안)\" 구조를 사용하기가 어렵나요?\n나머지 꽃꿀을 모을 수 있도록, 꿀벌을 도와주세요."
      NEW Course 4 Bee For Loops 5_instruction: "카운트다운하는데 \"반복(~인 동안)\" 구조를 사용할 수도 있습니다.\n이 꽃꿀을 5 부터 1 까지, 1씩 카운트다운하면서 모아보세요."
      NEW Course 4 Bee For Loops 6_instruction: "반복 함수의 마지막에 있는 수는 \"증가값\"이라고 부릅니다.\n반복 구조가 한 번 실행된 후에, 카운터에는 증가값만큼 더해집니다. 2만큼 증가시켜서\n이 꽃들로부터 모아보세요."
      NEW Course 4 Bee For Loops 7_instruction: |-
        자 이제, "카운터" 변수를 수학 블록과 함께 사용해보세요!
        어떻게하면 최대한 적은 블록들로, 이 정원을 돌아다닐 수 있을까요?
        이렇게 3, 6, 9, 12, 15 만큼씩 꽃꿀을 모으려면 어떻게 해야 할까요?
        "카운터" 변수를 사용하면 됩니다!\r
        \r
        기억하시죠?: 반복 구조가 실행되면, 한 번 실행 하고 난 후에 "카운터"
        변수의 값에 그 만큼 더합니다.
      NEW Course 4 Bee For Loops 8_instruction: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      NEW Course 4 Bee For Loops 9_instruction: "반복 카운팅이 줄어드는 과정에서는 반복이 한 번씩 끝날 때마다 카운터 변수의 값이 줄어듭니다.\n15, 12, 9, 6, 3의 꽃꿀을 모으기 위해서는 카운터 변수에 더할 값이 어떻게 되어야 할까요?"
      NEW Course 4 Bee For Loops 95_instruction: "여러분이 방금 만든 \"반복\" 조각을 살펴보세요.\n이 퍼즐을 해결하기 위해서는 얼마나 곱해야 할까요? 어떻게 되죠?"
      NEW Course 4 Play Lab Params 11_instruction: "자유 시간입니다!\n도구 상자에 있는 모든 블록들을 이용해보세요. "
      NEW Course 4 Play Lab Params 5 5_instruction: "자! 도움없이 다시 한 번 해보세요.\n캐릭터들이 순찰하도록 하려면 어떻게 해야할까요?"
      NEW Course 4 Play Lab Vars 4 5_instruction: "\"이 코드가 어떤 작업을 하는 것일까요? 실행을 눌러 어떻게 움직이는지 살펴보세요.\""
      NEW Course 4 Play Labs For Loops 7a_instruction: "지금까지 배웠던 것들을 이용해서,\n펭귄이 카운트할 때 마다 한 번씩 앞으로 가도록 해보세요."
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: "자유 시간입니다!\n도구 상자에 있는 모든 블록들을 이용해보세요. "
      NEW Course 4 Play Labs For Loops 8a_instruction: "도전과제: \"반복\" 구조를 사용해서 모든 캐릭터들이 돌아다니면서 자신의 번호를 말하고 난 후,\n화면에서 사라지게 해보세요. "
      New Artist Project_instruction: "멋진 그림을 그려보세요!\n여러분의 코드는 프로젝트로 저장되어있기 때문에 언제나 여기로 돌아올 수 있습니다."
      New Basketball Project_instruction: 농구 게임을 직접 만들어보세요. 모든 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      New Bounce Project_instruction: 바운스 게임을 직접 만들어보세요. 화면에 보이는 것들과 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      New Course 4 Artist Functions Level 4_instruction: "\"사각형 그리기\" 함수를\n이용해서 이 패턴을 그려보세요."
      New Gumball Project_instruction: 원하는대로 만들고 친구들에게 공유해 보세요.
      New Ice Age Project_instruction: 원하는대로 만들고 친구들에게 공유해 보세요.
      New Infinity Project_instruction: 원하는대로 만들고 친구들에게 공유해 보세요.
      New Minecraft Hero Project_instruction: "**무료플레이:** 스스로 직접 탐험해보세요!"
      New Sports Project_instruction: "게임을 직접 만들어보세요. 모든 것을 마음대로 할 수 있습니다: 모든 규칙들을 바꿀 수 있고, 여러\n 가지 스포츠게임들을 창의적으로 섞을 수 있습니다! 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요."
      Overworld Avoid Monsters_instruction: 크리퍼와 마주치는 건 좋지 않습니다. 크리퍼를 조심스럽게 지나쳐서 안전한 집에 도달하세요.
      Overworld Avoid Monsters_2018_instruction: 크리퍼와 마주치는 건 좋지 않습니다. 크리퍼를 조심스럽게 지나쳐서 안전한 집에 도달하세요.
      Overworld Chop Tree - allthethings_instruction: 나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 "블록 부수기" 명령을 이용해 나무를 베세요.
      Overworld Chop Tree_instruction: 나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 "블록 부수기" 명령을 이용해 나무를 베세요.
      Overworld Chop Tree_2018_instruction: 나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 "블록 부수기" 명령을 이용해 나무를 베세요.
      Overworld Chop Trees_instruction: 해가 지기 전에 집을 지어야 해요. 집을 지으려면 나무가 많이 필요하죠. 나무 3그루를 모두 베세요.
      Overworld Chop Trees_2018_instruction: 해가 지기 전에 집을 지어야 해요. 집을 지으려면 나무가 많이 필요하죠. 나무 3그루를 모두 베세요.
      Overworld Free Play 20x20_instruction: 축하해요! 모든 퍼즐을 완료했어요! 이제 여태까지 배운 모든 것을 이용해서 채굴하고 건설하며 무언가 독특한 것을 만들어보세요.
      Overworld Free Play 20x20_2018_instruction: 축하해요! 모든 퍼즐을 완료했어요! 이제 여태까지 배운 모든 것을 이용해서 채굴하고 건설하며 무언가 독특한 것을 만들어보세요.
      Overworld House Frame Chosen_instruction: "여러분이 원하는 재료를 이용해서, 집의 나머지 부분을 완성해보세요.\n\"repeat\" 명령은 편리하게 사용할 수 있습니다."
      Overworld House Frame Chosen_2018_instruction: "여러분이 원하는 재료를 이용해서, 집의 나머지 부분을 완성해보세요.\n\"repeat\" 명령은 편리하게 사용할 수 있습니다."
      Overworld Move to Sheep_instruction: 두 번째 "앞으로 이동" 명령을 더해서 양에게 도달하세요.
      Overworld Move to Sheep_2018_instruction: 두 번째 "앞으로 이동" 명령을 더해서 양에게 도달하세요.
      Overworld Place Wall_instruction: 모든 집은 벽을 짓는 것부터 시작합니다. "놓기"와 "앞으로 이동" 명령을 반복문 안에 놓아서 집의 첫 번째 부분을 지어보세요.
      Overworld Place Wall_2018_instruction: 모든 집은 벽을 짓는 것부터 시작합니다. "놓기"와 "앞으로 이동" 명령을 반복문 안에 놓아서 집의 첫 번째 부분을 지어보세요.
      Overworld Plant Crops_instruction: 미리 계획을 짜는 것이 좋습니다. 물의 양쪽에 작물을 심으면 나중에 배가 고프지 않아요.
      Overworld Plant Crops_2018_instruction: 미리 계획을 짜는 것이 좋습니다. 물의 양쪽에 작물을 심으면 나중에 배가 고프지 않아요.
      Overworld Powered Minecart_instruction: 잘했어요! 많은 자원을 모으고 안정적인 집을 지었어요. 이제 지도 가장자리에서 여러분의 집 문까지 레일을 놓으세요.
      Overworld Powered Minecart_2018_instruction: 잘했어요! 많은 자원을 모으고 안정적인 집을 지었어요. 이제 지도 가장자리에서 여러분의 집 문까지 레일을 놓으세요.
      Overworld Shear Sheep_instruction: 양털 깎기 시간이에요! 두 마리 양에게서 양털을 채집하려면, "털 깎기" 명령을 사용하세요.
      Overworld Shear Sheep_2018_instruction: 양털 깎기 시간이에요! 두 마리 양에게서 양털을 채집하려면, "털 깎기" 명령을 사용하세요.
      PDK5 Conditionals 1_instruction: "자주색 꽃들에는 꽃꿀이 1 또는 0 인데,\n어떤 꽃이 1이고 0인지 알 수 없습니다! 자주색 꽃에 꿀이 없으면 뽑지 않도록 주의하세요.\n만약(if) 블록을 사용해서 꽃꿀이 1인지 확인해보면 됩니다."
      PDK5 Functions 2_instruction: "함수들로 새로운 블록들을 만들어낼 수 있습니다!\n\"사각형 그리기\" 라는 함수에 사각형 1개를 그리는 블록들을 넣었습니다.\n\"사각형 그리기\" 함수를 이용해서 안경을 그려보세요. 사각형들은 75 픽셀 만큼 떨어져 있습니다."
      PS copy 2-3 Bee Conditionals 5_instruction: "꽃꿀이 없는 자주색 꽃에서 꽃꿀을 모으지 않도록 조심하세요. \\r\n먼저 '꽃꿀이 있으면' 블록을 이용해서 꽃꿀의 양이 1인지 확인해야합니다."
      Project - Make Your Own Clicker Game_instruction: "클리커 게임을 끝내세요\n(힌트를 보려면 여기를 눌러보세요)"
      Quantum Bee - Ryan_instruction: "이 구름들이 짜증나게 하네요! 어떤 구름 아래에만 꽃이 있습니다.\n구름들을 하나씩 모두 검사해서 꽃인 경우에만 꽃꿀을 뽑아야 합니다."
      Quantum Bee_instruction: "자주색 꽃들에는 꽃꿀이 1 또는 0 인데,\n어떤 꽃이 1이고 0인지 알 수 없습니다! 자주색 꽃에 꿀이 없으면 뽑지 않도록 주의하세요.\n만약(if) 블록을 사용해서 꽃꿀이 1인지 확인해보면 됩니다."
      Ryan - 4-5 Bee Conditionals 2_instruction: "꿀벌은 지금 꽃꿀이 필요합니다.\n모두 꽃은 아니기 때문에, 안개 구름이 있는 모든 곳에서 꽃이 숨어있는지 확인해 보아야 합니다.\n꽃이 있으면 꿀을 모으면 됩니다."
      Ryan - Bee Conditionals_instruction: "꿀벌은 지금 꽃꿀이 필요합니다.\n모두 꽃은 아니기 때문에, 안개 구름이 있는 모든 곳에서 꽃이 숨어있는지 확인해 보아야 합니다.\n꽃이 있으면 꿀을 모으면 됩니다."
      Ryan Test Locked Blocks_instruction: "\"순찰\" 함수가 있습니다.\n함수를 수정해서 고양이가 400 픽셀 위로 이동 했다가, 다시 400 픽셀 아래로 이동하게 해보세요."
      SpecialFrozenLevel_instruction: 여러분은 이제 진짜 화가가 된 것 같아요! 겨울왕국을 만들어 보세요.
      Standalone_Artist_1_instruction: "화가 퍼즐에 오신 것을 환영합니다.\n처음으로 오른쪽으로 이동 블럭과 앞으로 이동 블럭을 이용해서 간단한 사각형을 만들어 보겠습니다.\n한 변의 길이는 정확히 100 픽셀이 되어야 합니다."
      Standalone_Artist_2_instruction: 120도, 60도의 각과 150 픽셀 만큼의 길이로 이 다이아몬드를 그려보세요.
      Standalone_Artist_3_instruction: "100 픽셀 길이의 선을 60 도 만큼 씩 회전해 그리면서\n육각형을 그려보세요."
      Standalone_Artist_4_instruction: 이제 반복(loop) 이라는 새로운 블록을 이용할 수 있습니다. 이 블록은 원하는 명령어들을 반복시켜줄 것입니다. 이 명령어들을 6번 반복하면 어떻게 될까요?
      Standalone_Artist_5.5_instruction: '다이아몬드 모양을 반복 블럭 안에 넣어서 회전시키면서 아주 쉽게 코드를 만드는 방법을 잘 보세요. 순서대로 실행시켜야하는 명령어들을 12번 반복시킬 수 있습니다. 힌트: 다이아몬드 반복(loop) 를 30도만큼 회전시키면 됩니다. 다이아몬드를 또 그릴 필요가 없습니다.'
      Standalone_Artist_5_instruction: 이 다이아몬드 모양을 이용해서 꽃을 그리려면 반복(loop) 을 몇 번 시켜야 할까요?
      Standalone_Artist_6_instruction: '이 6각형 코드를 반복적으로 이용해서 디자인 해보세요. 한 번 실행할 때마다 몇 도를 회전시켜야 할까요? 힌트: 원의 각도를 반복시키려고 하는 횟수로 나누면 됩니다.'
      Standalone_Artist_7_instruction: '함수는 한번 만들어둔 것을 다시 사용하는 프로그래밍 방법입니다. 이 함수는 꽃을 그려주는데, 이 함수를 이용하면 원하는 만큼의 꽃을 편리하게 그릴 수 있습니다. 이 함수와 점프 블럭을 이용해서 이 꽃들을 그려주세요. 힌트: 꽃들은 150 픽셀만큼 떨어져 있습니다.'
      Standalone_Artist_8_instruction: '"모양 그리기" 라는 이름의 6각형 그리기 함수 블럭이 있습니다. 일단 먼저 코드를 실행시켜 어떻게 실행되는지 살펴보고, 실험해 보세요. 사각형, 삼각형, 8각형을 그릴 수 있겠어요?'
      Standalone_Artist_9_instruction: 자 이제 계속해서, 원하는 그림을 마음껏 그려보세요! 원하는 것이 어떤 것이든지, 빈 함수를 이용해 마음대로 만들고 사용할 수 있습니다.
      Standalone_Artist_v2_instruction: "화가 퍼즐에 오신 것을 환영합니다.\n처음으로 오른쪽으로 이동 블럭과 앞으로 이동 블럭을 이용해서 간단한 사각형을 만들어 보겠습니다.\n한 변의 길이는 정확히 100 픽셀이 되어야 합니다."
      Testing Quantum Farmer_instruction: "와! 진짜 깊은 구덩이를 발견했습니다. \\r\n\\r\n얼마나 흙을 메워야 할지 모르겠어요. \\r\n\"메우기\" 블록을 사용하여 구덩이가 다 메워질 때까지 계속 흙을 채우는 프로그램을 작성해 보세요.  "
      The Vigenere Cipher Widget_instruction: 소개
      The Vigenere Cipher Widget_2018_instruction: 소개
      The Vigenere Cipher_instruction: 소개
      Total Artist Clone Me_instruction: "자유 플레이: 여기 여러분들이 작성한 함수들과 가지고 놀 수 있는 몇 개의 함수가 더 있습니다.\n멋진 것들을 그려보세요! 선 그리기로 얼마나 많은 것들을 그릴 수 있는지 해보세요."
      U2 frequency caesar_instruction: 소개
      U2 frequency random sub_instruction: 소개
      U2 vigenere cipher_instruction: 소개
      U3L15 full clicker app_instruction: "클리커 게임을 끝내세요\n(힌트를 보려면 여기를 눌러보세요)"
      U4 vigenere cipher 2_instruction: 소개
      U4L02 - Objects - Template1_instruction: 템플릿
      U4L02 - Objects - Template1_2018_instruction: 템플릿
      Underground Avoiding Lava_instruction: 이 블록들 아래에 용암이 숨어있습니다. 앞으로 이동하기 전에 덮어야 해요. "if"(만약) 명령은 여기서 유용할 거에요. 올바른 곳에 "앞으로 이동" 명령을 더해서 이 블록을 채굴하세요.
      Underground Avoiding Lava_2018_instruction: 이 블록들 아래에 용암이 숨어있습니다. 앞으로 이동하기 전에 덮어야 해요. "if"(만약) 명령은 여기서 유용할 거에요. 올바른 곳에 "앞으로 이동" 명령을 더해서 이 블록을 채굴하세요.
      Underground If Statements_instruction: 퍼즐이 점점 더 어려워지고 있어요. 레드스톤 3개를 채굴하세요. 하지만 용암으로 떨어지지는 마세요. "if"(만약) 명령을 사용해서 발견한 용암 위에 조약돌을 놓으세요.
      Underground If Statements_2018_instruction: 퍼즐이 점점 더 어려워지고 있어요. 레드스톤 3개를 채굴하세요. 하지만 용암으로 떨어지지는 마세요. "if"(만약) 명령을 사용해서 발견한 용암 위에 조약돌을 놓으세요.
      Underground Iron_instruction: 녹은 용암 속으로 걸어 들어가는 건 좋은 생각이 아니에요. 조약돌을 놓아서 다리를 만든 후 철 블록을 2개 이상 채굴하세요.
      Underground Iron_2018_instruction: 녹은 용암 속으로 걸어 들어가는 건 좋은 생각이 아니에요. 조약돌을 놓아서 다리를 만든 후 철 블록을 2개 이상 채굴하세요.
      Underground Mining Coal_instruction: 가장 귀중한 자원은 땅속에서 찾을 수 있어요. 하지만, 땅속은 어두울 수 있지요. 횃불을 2개 이상 놓고 석탄을 2개 이상 채굴하세요.
      Underground Mining Coal_2018_instruction: 가장 귀중한 자원은 땅속에서 찾을 수 있어요. 하지만, 땅속은 어두울 수 있지요. 횃불을 2개 이상 놓고 석탄을 2개 이상 채굴하세요.
      aE7_instruction: "반복하는 것을 복사하는데 오른쪽으로 돌기를 왼쪽으로 돌기로 바꾸면 어떻게 될까요? \\r\n\\r\n이 웨이브를 만들기 위해서 반복해 주세요."
      aE8_instruction: "그림 틀을 만들기 위해서 전체를 4번 반복시켜 보세요. 모서리에 주의하세요 - 90도만 돌면 안됩니다! \\r\n\\r\n3도씩 60번 돌면 반 원을 만들 수 있습니다. 이 코드 블록들 중 어느 것으로 모서리에 사분원(1/4 원) 을 만들 수 있을까요?"
      beeDebugVideo1_instruction: 모든 꽃꿀을 모으기 위해, 반복 구조를 사용해보세요.
      birdsDebugVideo1_instruction: 길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이 날라다니지 않도록 해야 돼!
      bounce_1_instruction: '"왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, "실행하기"를 눌러 보세요. 왼쪽 방향키를 사용해 목표 지점까지 이동시켜 보세요.'
      bounce_10_instruction: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을 때", "공이 라켓을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을 수 있는지 해보세요.
      bounce_10_2018_instruction: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을 때", "공이 라켓을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을 수 있는지 해보세요.
      bounce_10_basketball_instruction: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을 때", "공이 손을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을 수 있는지 해보세요.
      bounce_10_sports_instruction: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을 때", "공이 손을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을 수 있는지 해보세요.
      bounce_11_instruction: '"프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 만들기" 블럭을 한 군데 이상 붙여야 합니다. 그리고 배경도 바꾸어 보고, 상대방 케릭터의 점수가 2배가 되지 않도록 케릭터의 스피드를 바꿔 보세요.'
      bounce_11_2018_instruction: '"프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 만들기" 블럭을 한 군데 이상 붙여야 합니다. 그리고 배경도 바꾸어 보고, 상대방 케릭터의 점수가 2배가 되지 않도록 케릭터의 스피드를 바꿔 보세요.'
      bounce_11_basketball_instruction: 이제 "프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 넣기" 블럭을 한 군데 이상 붙여야 합니다. 그리고 배경도 바꾸어 보고, 상대방 캐릭터의 점수가 2배가 되지 않도록 손의 스피드를 바꿔 보세요.
      bounce_11_sports_instruction: 이제 "프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 넣기" 블럭을 한 군데 이상 붙여야 합니다. 그리고 배경도 바꾸어 보고, 상대방 캐릭터의 점수가 2배가 되지 않도록 손의 스피드를 바꿔 보세요.
      bounce_12_instruction: 바운스 게임을 직접 만들어보세요. 화면에 보이는 것들과 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      bounce_12_2018_instruction: 바운스 게임을 직접 만들어보세요. 화면에 보이는 것들과 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      bounce_12_basketball_instruction: 농구 게임을 직접 만들어보세요. 모든 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      bounce_12_sports_instruction: "게임을 직접 만들어보세요. 모든 것을 마음대로 할 수 있습니다: 모든 규칙들을 바꿀 수 있고, 여러\n 가지 스포츠게임들을 창의적으로 섞을 수 있습니다! 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요."
      bounce_1_2018_instruction: '"왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, "실행하기"를 눌러 보세요. 왼쪽 방향키를 사용해 목표 지점까지 이동시켜 보세요.'
      bounce_1_basketball_instruction: '"왼쪽 방향키가 눌렸을 때" 블록에 다른 블록을 붙인 후, "실행하기"를 눌러 보세요. 왼쪽 방향키를 사용해 목표 지점까지 손을 이동시켜 보세요.'
      bounce_1_sports_instruction: 깃발을 잡으세요! "왼쪽 방향키를 누르면" 블록에 다른 블록을 붙이고, "실행하기"를 눌러 깃발로 이동시키세요.
      bounce_2_instruction: '"오른쪽 방향키가 눌렸을 때", "왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, 양쪽의 목표 지점까지 이동시켜 보세요.'
      bounce_2_2018_instruction: '"오른쪽 방향키가 눌렸을 때", "왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, 양쪽의 목표 지점까지 이동시켜 보세요.'
      bounce_2_basketball_instruction: '"오른쪽 방향키가 눌렸을 때", "왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, 양쪽의 목표 지점까지 손을 이동시켜 보세요.'
      bounce_2_sports_instruction: 이번에는 두 개의 깃발이 있습니다! "왼쪽 방향키를 누르면" 블록과 "오른쪽 방향키를 누르면" 블록에 다른 블록을 붙여 두 가지 방향으로 움직일 수 있도록 해보세요.
      bounce_3_instruction: '"위쪽 방향키가 눌렸을 때" 을 비슷하게 사용해 보세요. 위쪽 목표 지점까지 이동시켜 보세요.'
      bounce_3_2018_instruction: '"위쪽 방향키가 눌렸을 때" 을 비슷하게 사용해 보세요. 위쪽 목표 지점까지 이동시켜 보세요.'
      bounce_4_instruction: 이번에는 4개의 블럭을 사용해야 합니다. 퍼즐을 해결하기 위해서 4개의 목표지점으로 이동시켜 보세요.
      bounce_4_2018_instruction: 이번에는 4개의 블럭을 사용해야 합니다. 퍼즐을 해결하기 위해서 4개의 목표지점으로 이동시켜 보세요.
      bounce_5_instruction: 공을 아래로 내려보낼 것입니다. "라켓에 닿으면" 블럭을 붙여 공이 목표지점에 도착하게 만들어 보세요.
      bounce_5_2018_instruction: 공을 아래로 내려보낼 것입니다. "라켓에 닿으면" 블럭을 붙여 공이 목표지점에 도착하게 만들어 보세요.
      bounce_5_basketball_instruction: 손을 향해 공을 아래로 내려보낼 것입니다. "공이 손에 닿으면" 블럭을 붙여 공이 깃발에 닿는 것을 확인할 수 있게 해보세요.
      bounce_5_sports_instruction: 하키퍽이 플레이어를 향해 아래쪽으로 날라갑니다! "공이 플레이어에 맞으면" 블록을 붙여 깃발을 맞춰보세요.
      bounce_6_instruction: 이번 목표지점은 가장 위쪽 입니다. "공이 부딪치면"블럭을 사용해 퍼즐을 해결해 보세요.
      bounce_6_2018_instruction: 이번 목표지점은 가장 위쪽 입니다. "공이 부딪치면"블럭을 사용해 퍼즐을 해결해 보세요.
      bounce_6_basketball_instruction: 이제 깃발이 가장 위에 있습니다. 이 퍼즐을 풀기 위해서는 "공이 닿으면" 블록의 양쪽에 블록들을 붙여야 합니다.
      bounce_6_sports_instruction: 이제 깃발이 가장 위에 있습니다. 이 퍼즐을 풀기 위해서는 "공이 닿으면" 블록의 양쪽에 블록들을 붙여야 합니다.
      bounce_7_instruction: '"~할 때" 블럭에 블럭들을 붙여보세요. 목표 지점에 닿을 때까지 공이 튀기도록 해보세요. '
      bounce_7_2018_instruction: '"~할 때" 블럭에 블럭들을 붙여보세요. 목표 지점에 닿을 때까지 공이 튀기도록 해보세요. '
      bounce_7_basketball_instruction: '"~할 때" 블록에 다른 블록들을 붙여보세요. 깃발에 닿을 때까지 공이 튀기도록 해보세요.'
      bounce_7_sports_instruction: '"~할 때" 블록에 다른 블록들을 붙여보세요. 깃발에 닿을 때까지 공이 튀기도록 해보세요.'
      course2_maze_seq_challenge1_instruction: 길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이 헝클어지지 않도록 해야 돼!
      course2_playlab_stage17_1_instruction: Jorge (actor 1) 가 "Hi" 라고 말하도록 해볼까요?
      course2_playlab_stage17_10_instruction: |-
        Waddles의 속도와 배경을 변경하기위해 `when run` 이벤트에 블럭을 추가하세요.\r
        \r
        점수를 획득할때까지 Waddles을 움직여보세요
      course2_playlab_stage17_11_instruction: 자신만의 이야기를 만들어 보세요. 만든 후에는 다른 사람들이 폰에서 볼 수 있도록 알리세요.
      course2_playlab_stage17_2_instruction: "강아지가 어떤 말을 하게 한 후\n고양이가 어떤 말을 하게 해보세요!"
      course2_playlab_stage17_3_instruction: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      course2_playlab_stage17_4_instruction: 강아지가 고양이에게 가고 강아지가 고양이에게 다가가면 고양이가 "안녕 "하도록 프로그램을 짜보세요!
      course2_playlab_stage17_5_instruction: 문어를 클릭했을 때 'Hello'라고 말하는 프로그램을 만들 수 있나요?
      course2_playlab_stage17_6_instruction: 위/아래/왼쪽/오른쪽 방향키를 사용해 펭귄이 이리저리 목표지점들로 움직이도록 프로그래밍 해주세요.
      course2_playlab_stage17_8_instruction: "펭귄이 \"Ouch!\"라고 말하고, 공룡에 닿으면 \"충돌 소리\"를 출력하도록 한 후 방향키들을 움직여보세요."
      course2_playlab_stage17_9_instruction: "펭귄이 문어에 닿으면 점수가 올라가게 만든 후 방향키를 눌러 움직여 보세요."
      course3_playlab_stage16_1_instruction: 강아지가 "hello world"라고 말하도록 만들어 보세요.
      course3_playlab_stage16_2_instruction: "강아지가 어떤 말을 하게 한 후\n고양이가 어떤 말을 하게 해보세요!"
      course3_playlab_stage16_3_instruction: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      course3_playlab_stage16_4_instruction: 강아지가 고양이에게 가고 강아지가 고양이에게 다가가면 고양이가 "안녕 "하도록 프로그램을 짜보세요!
      course3_playlab_stage16_5_instruction: 문어가 행복한 표정이 되도록 해보세요.
      course3_playlab_stage16_6_instruction: 자신만의 이야기를 구들이 스마트폰에서 살펴볼 수 있도록 만들어보세요.
      course3_playlab_stage17_1_instruction: 문어를 클릭했을 때 'Hello'라고 말하는 프로그램을 만들 수 있나요?
      course3_playlab_stage17_2_instruction: 위/아래/왼쪽/오른쪽 방향키를 사용해 펭귄이 이리저리 목표지점들로 움직이도록 프로그래밍 해주세요.
      course3_playlab_stage17_3_instruction: '"repeat forever" 블럭은 코드를 반복할 수 있도록 해줍니다. 이 블럭을 사용해서 공룡이 위 아래로 반복해서 이동하도록 만들어 볼까요?'
      course3_playlab_stage17_4_instruction: 펭귄이 "Ouch!"라고 말하고, 공룡에 닿으면 "충돌 소리"를 출력하도록 한 후 방향키들을 움직여보세요.
      course3_playlab_stage17_5_instruction: 펭귄이 문어에 닿으면 점수가 올라가게 만든 후 방향키를 눌러 움직여 보세요.
      course3_playlab_stage17_6_instruction: Waddles의 속도와 배경을 변경하기 위해 블럭을 추가해 볼까요? 그리고 점수를 획득할 때까지 화살표로 움직여보세요.
      course3_playlab_stage17_7_instruction: 자신만의 이야기를 구들이 스마트폰에서 살펴볼 수 있도록 만들어보세요.
      course4_artist_fwp_challenge1_instruction: 프로그램을 실행시켜보고 어떤 일이 일어나는지 살펴보세요. 이해할 수 있을까요?(블럭들을 모두 지우고 완전히 새로 만들어 봐도 됩니다.)
      courseA_maze_seq2_instruction: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      courseA_maze_seq2_2018_instruction: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      courseC_PlayLab_events3_instruction: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      courseC_PlayLab_events3_2018_instruction: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      courseC_artist_prog5_instruction: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      courseC_artist_prog5_2018_instruction: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      courseC_maze_debugging10_instruction: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      courseD_artist_binary1_instruction: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는 0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\r\n\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면, 그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을 그리도록 해보세요."
      courseD_artist_binary1_2018_instruction: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는 0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\r\n\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면, 그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을 그리도록 해보세요."
      courseD_artist_binary4_instruction: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_artist_binary4_2018_instruction: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_artist_binary6_instruction: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary6_2018_instruction: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary7_instruction: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary7_2018_instruction: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_bee_debugging3_instruction: 모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요.
      courseD_bee_nestedLoops3_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      courseD_bee_nestedLoops5_instruction: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\r\n\\r\n중첩 반복을 사용하면 됩니다. "
      courseD_bee_nestedLoops6_2018_instruction: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\r\n최소한의 반복 실행 구조를 사용해서 해바라기로 이동시켜주세요."
      courseD_bee_nestedLoops8_instruction: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\r\n\\r\n중첩 반복을 사용하면 됩니다. "
      courseD_bee_nestedLoops8_2018_instruction: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\r\n\\r\n중첩 반복을 사용하면 됩니다. "
      courseD_bounce_events10_instruction: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을 때", "공이 라켓을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을 수 있는지 해보세요.
      courseD_bounce_events11_instruction: '"프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 만들기" 블럭을 한 군데 이상 붙여야 합니다. 그리고 배경도 바꾸어 보고, 상대방 케릭터의 점수가 2배가 되지 않도록 케릭터의 스피드를 바꿔 보세요.'
      courseD_bounce_events12_instruction: 바운스 게임을 직접 만들어보세요. 화면에 보이는 것들과 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      courseD_bounce_events2_instruction: '"오른쪽 방향키가 눌렸을 때", "왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, 양쪽의 목표 지점까지 이동시켜 보세요.'
      courseD_bounce_events3_instruction: '"위쪽 방향키가 눌렸을 때" 을 비슷하게 사용해 보세요. 위쪽 목표 지점까지 이동시켜 보세요.'
      courseD_bounce_events3s_instruction: '"위쪽 방향키가 눌렸을 때" 을 비슷하게 사용해 보세요. 위쪽 목표 지점까지 이동시켜 보세요.'
      courseD_bounce_events4_instruction: 이번에는 4개의 블럭을 사용해야 합니다. 퍼즐을 해결하기 위해서 4개의 목표지점으로 이동시켜 보세요.
      courseD_bounce_events4s_instruction: 이번에는 4개의 블럭을 사용해야 합니다. 퍼즐을 해결하기 위해서 4개의 목표지점으로 이동시켜 보세요.
      courseD_bounce_events5_instruction: 공을 아래로 내려보낼 것입니다. "라켓에 닿으면" 블럭을 붙여 공이 목표지점에 도착하게 만들어 보세요.
      courseD_bounce_events6_instruction: 이번 목표지점은 가장 위쪽 입니다. "공이 부딪치면"블럭을 사용해 퍼즐을 해결해 보세요.
      courseD_bounce_events7_instruction: '"~할 때" 블럭에 블럭들을 붙여보세요. 목표 지점에 닿을 때까지 공이 튀기도록 해보세요. '
      courseD_debugging_3_instruction: 모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요.
      courseD_maze_nestedLoops4_instruction: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\r\n\\r\n반복 실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops4_2018_instruction: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\r\n\\r\n반복 실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops6_instruction: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\r\n최소한의 반복 실행 구조를 사용해서 해바라기로 이동시켜주세요."
      courseD_maze_nestedLoops6_2018_instruction: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\r\n최소한의 반복 실행 구조를 사용해서 해바라기로 이동시켜주세요."
      courseE_artist_functions1_instruction: "\"나 화가. 좀비... 그리기 좋아..!\" \\r\n\\r\n사각형 안경을 그릴 수 있게 도와주세요. \\r\n\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      courseE_artist_functions1_2018_instruction: "\"나 화가. 좀비... 그리기 좋아..!\" \\r\n\\r\n사각형 안경을 그릴 수 있게 도와주세요. \\r\n\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      courseE_bee_concept1_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      courseE_bee_concept1_2018_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      courseE_bee_functions1_instruction: 각 꽃에서 꽃꿀을 모두 모아주세요.
      courseE_bee_functions1_2018_instruction: 각 꽃에서 꽃꿀을 모두 모아주세요.
      courseE_bee_functions3_instruction: "함수들은 어떤 작업을 수행하는데 블럭들의 집합이라고 볼 수 있습니다.  \\r\n\\r\n\"5번 모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      courseE_bee_functions3_2018_instruction: "함수들은 어떤 작업을 수행하는데 블럭들의 집합이라고 볼 수 있습니다.  \\r\n\\r\n\"5번 모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      courseE_bee_functions4_instruction: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는 함수입니다.  \\r\n\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      courseE_bee_functions4_2018_instruction: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는 함수입니다.  \\r\n\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      courseE_farmer_concept4_instruction: 좀더 어려운 것을 해보아요! 반복 구조 안에 반복 구조를 넣어봤는데, 다음 줄을 그리려면 화가를 다시 이전 위치로 돌려 놓아야 해요. 전체 격자를 그리기 위해서 가장 바깥쪽 반복의 끝에 어떤 블록들을 놓아야 할까요?
      courseF_artist_for7_instruction: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      courseF_artist_for7_2018_instruction: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      courseF_artist_for_challenge1_instruction: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge1_2018_instruction: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge2_instruction: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge2_2018_instruction: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      courseF_bee_for8_instruction: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      courseF_bee_for8_2018_instruction: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      courseF_bee_for_challenge2_instruction: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      courseF_bee_for_challenge2_2018_instruction: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      courseF_bee_for_challenge3_instruction: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      courseF_bee_functions4_instruction: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는 함수입니다.  \\r\n\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      courseF_bee_functions4_2018_instruction: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는 함수입니다.  \\r\n\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      flappy_1_instruction: '"클릭되면"블럭을 붙인 후 "실행하기"를 누르세요. 플래피 버드가 목표 지점에 도착할 수 있도록 화면을 클릭하거나 터치하면 됩니다.'
      flappy_11_instruction: 자신만의 플래피 게임을 만들어보세요. 화면에 보이는 것들과 규칙들, 떨어지는 중력마저도 마음대로 만들어보세요. 친구들이 스마트폰에서 해볼 수 있도록 공유해 보세요.
      flappy_11_2018_instruction: 자신만의 플래피 게임을 만들어보세요. 화면에 보이는 것들과 규칙들, 떨어지는 중력마저도 마음대로 만들어보세요. 친구들이 스마트폰에서 해볼 수 있도록 공유해 보세요.
      flappy_1_2018_instruction: '"클릭되면"블럭을 붙인 후 "실행하기"를 누르세요. 플래피 버드가 목표 지점에 도착할 수 있도록 화면을 클릭하거나 터치하면 됩니다.'
      flappy_2_instruction: 바닥 땅을 만들었습니다. "땅에 떨어지면" 블럭에 다른 블럭을 붙여보세요. 플래피가 땅에 닿으면 게임이 끝나도록 해야합니다.
      flappy_2_2018_instruction: 바닥 땅을 만들었습니다. "땅에 떨어지면" 블럭에 다른 블럭을 붙여보세요. 플래피가 땅에 닿으면 게임이 끝나도록 해야합니다.
      flappy_3_instruction: '"실행하면" 블럭은 프로그램을 실행시켰을 때 코드들이 동작하게 합니다. 목표 지점에 도착하기 위한 레벨, 스피드, 날개 펄럭이기를 설정해 보세요.'
      flappy_3_2018_instruction: '"실행하면" 블럭은 프로그램을 실행시켰을 때 코드들이 동작하게 합니다. 목표 지점에 도착하기 위한 레벨, 스피드, 날개 펄럭이기를 설정해 보세요.'
      flappy_4_instruction: 여러가지 물체에 부딪치지 않도록 플래피 버드를 날려 목적지에 도착하도록 해보세요. "물체에 부딪치면" 블럭을 사용하고, 첫번째 파이프로 들어가면 "게임 끝"이 나오도록 해보세요.
      flappy_4_2018_instruction: 여러가지 물체에 부딪치지 않도록 플래피 버드를 날려 목적지에 도착하도록 해보세요. "물체에 부딪치면" 블럭을 사용하고, 첫번째 파이프로 들어가면 "게임 끝"이 나오도록 해보세요.
      flappy_5_instruction: 스코어보드를 만들고 플래피 버드가 물체를 피해 지나가면 점수가 올라가게 해보세요. "물체를 피하면" 블럭을 사용하고, 첫 번째 파이프에 도착하면 점수가 올라가게 해보세요.
      flappy_5_2018_instruction: 스코어보드를 만들고 플래피 버드가 물체를 피해 지나가면 점수가 올라가게 해보세요. "물체를 피하면" 블럭을 사용하고, 첫 번째 파이프에 도착하면 점수가 올라가게 해보세요.
      flappy_6_instruction: 플래피 버드의 펄럭이면 점수가 어떻게 올라가는지 확인해보세요.
      flappy_6_2018_instruction: 플래피 버드의 펄럭이면 점수가 어떻게 올라가는지 확인해보세요.
      flappy_7_instruction: 자 이번에는 "실행하면" 블럭에 다른 블럭을 붙여 배경 그림을 바꾸어보세요.
      flappy_7_2018_instruction: 자 이번에는 "실행하면" 블럭에 다른 블럭을 붙여 배경 그림을 바꾸어보세요.
      flappy_8_instruction: 화면에 보이는 것들은 언제 든지 바꿀 수 있습니다. 물체를 피해 통과하는 것과 같은 이벤트들이 발생했을 때 랜덤 배경으로 바뀌도록 해보세요.
      flappy_8_2018_instruction: 화면에 보이는 것들은 언제 든지 바꿀 수 있습니다. 물체를 피해 통과하는 것과 같은 이벤트들이 발생했을 때 랜덤 배경으로 바뀌도록 해보세요.
      flappy_9_instruction: 사물들을 뒤섞으려면, 장애물에 부딪혔을 때 게임을 끝내는 대신 점수를 0으로 설정하세요.
      flappy_9_2018_instruction: 사물들을 뒤섞으려면, 장애물에 부딪혔을 때 게임을 끝내는 대신 점수를 0으로 설정하세요.
      frozen circle function in circle_instruction: 이제 20개의 원을 겹치고, 각각을 18도씩 회전시키세요.
      frozen circle function with parameter_instruction: 원하는 크기로 그릴 수 있는 "원 그리기" 블럭이 있습니다. 이 블럭을 사용해 5 크기의 원과 10 크기의 원을 그릴 수 있겠어요?
      frozen circle function_instruction: 새로운 "원 그리기" 블럭을 이용해 10개의 원을 겹쳐 그리세요. 원을 그리기 위해 점프 하는 것을 잊지 마세요.
      frozen circle_instruction: 원은 특별한 도형입니다. 원을 그리기 위해서 물음표 부분에 어떤 수가 들어가야 할까요?
      frozen cross rotate dense_instruction: '이제 90번 반복해 보세요. 360도를 회전하려면 90도를 몇 번 회전해야 할까요? 힌트: 생각보다 작은 수입니다.'
      frozen cross rotate_instruction: 이제 10번 반복해보세요. 각 선들을 그리면서 회전하기 위해서 몇 도가 필요할까요?
      frozen cross_instruction: "더하기 기호를 만들기 위해서 이 명령어들을 \"반복\" 블럭 안에 넣어보세요.\n엘사가 앞 뒤로 움직일 수 있는 것 아시죠?"
      frozen diamond mini snowflake_instruction: 모든 눈송이들이 서로 다른 모양을 하고 있다는 것을 아시나요? 평행 사변형을 4번 그리기 위해 "반복"블럭을 사용하고, 각각을 90도 만큼씩 회전시켜 새로운 눈송이를 만들어보세요.
      frozen diamond snowflake_instruction: 이제, 평행 사변형을 10번 그릴 수 있도록 반복 블럭을 사용하고, 각각을 36도 만큼씩 오른쪽으로 돌려 새로운 눈송이를 그려보겠습니다.
      frozen diamond_instruction: "이 블록들을 반복 블록 안에 넣어서 평행사변형을 만들어보세요.\n사각형하고 비슷하지만 각이 다릅니다. 4개의 각이 모두 90도가 아니라, 한 가지는 60도 이고 다른 한가지는 120도 입니다."
      frozen freeplay_instruction: 여러분은 이제 진짜 화가가 된 것 같아요! 겨울왕국을 만들어 보세요.
      frozen line_instruction: 안녕하세요! 저는 아렌델의 엘사입니다. 선 1개를 그릴 수 있도록 도와주세요.
      frozen perpendicular_instruction: 이제 두 개의 선을 90도 만큼 교차시켜 그릴 수 있는지 살펴보세요. "회전"블럭과 "이동" 블럭을 사용해야 할 것 입니다.
      frozen snowflake branch_instruction: '"눈송이 가지 만들기" 블럭을 이용해 3개의 가지로 뻗어나가는 그럴 듯한 눈송이를 만들어보세요.'
      frozen snowflake full_instruction: 이제 이쁜 눈송이를 만들기 위해 8번 반복해 보세요.
      frozen snowflower_instruction: 아주 복잡한 눈송이 모양도 아주 간단한 모양들을 이용해 만들 수 있습니다. 5크기의 원을 5개, 10크기의 원을 5개 이용해 패턴을 만들 수 있겠어요?
      frozen square iterative_instruction: 사각형을 만들기 위한 과정에 반 정도 왔습니다. 4개의 선을 모아 사각형을 그려보세요.
      frozen square loop 3x_instruction: 이제 3개의 사각형을 회전시켜 만들어 보세요! 새로운 사각형을 그리기 전에 120도 만큼 회전하는 것을 잊지 마세요.
      frozen square loop_instruction: "안녕하세요. 저는 아렌델의 안나입니다!\n더 적은 블록들을 사용하는 \"반복\" 블록을 이용해서 사각형을 1개 만들어보세요.\n사각형 1개를 만들기 위해서 \"반복\" 블록 안 (???) 값으로 얼마나 넣어야 할까요?"
      frozen square snowflake_instruction: "\"반복\" 블록을 사용해서 사각형을 10번 만들어 보세요.\n삼각형을 한 번씩 그릴 때마다, 회전 블록을 이용해서 36 도 만큼 씩 회전시켜주세요."
      grade1_maze_sequence1_instruction: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      grade1_maze_sequence2_instruction: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      grade1_maze_sequence5_instruction: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      grade1_maze_sequence6_instruction: 어떤 것이 빠졌는지 살펴본 후, 블록들을 추가해서 돼지에게 갈 수 있도록 해주세요!
      grade1_maze_sequence9_instruction: 'TNT를 피해 돼지에게 이동시켜주세요! '
      grade2_CaringForNewPet_10_instruction: 저를 돼지에게 이동시켜 주세요.
      grade2_CaringForNewPet_5_instruction: 저를 돼지에게 이동시켜 주세요.
      grade2_MakeDogTag_10_instruction: 이제, 그리고 싶은 것들을 그려보세요.
      grade2_MakeDogTag_3_instruction: |-
        고양이를 위한 집을 완성해주세요.
      grade2_MakeDogTag_4_instruction: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      grade2_MakeDogTag_6_instruction: '자유 플레이: 원하는 것을 그려보세요.'
      grade2_MakeDogTag_8_instruction: 이제 여러 개의 'V'자를 연결해서, 반복 실행 구조 안에 넣어보세요.
      grade2_MakeDogTag_9_instruction: "이번에는 멋진 것을 만들어 볼 시간입니다!\n왼쪽으로 30도 회전하기를 추가한 후, 7번 대신에 24번을 반복 시켜보세요."
      grade2_PuppyLoops_1_instruction: 5 개의 블록들만 사용해서 돼지로 이동시켜 주세요.
      grade2_PuppyLoops_10_instruction: |-
        바람개비가 완성되지 않았습니다. 완성하려면 얼마나 반복해야 할까요?
      grade2_PuppyLoops_2_instruction: 1개의 '반복' 블록 안에 1개의 '앞으로 이동' 블록이 들어있는 반복 실행 구조를 이용해서 돼지에게로 이동시켜주세요.
      grade2_PuppyLoops_4_instruction: 이 퍼즐에서는 두 개의 반복(횟수) 블록을 이용하면 블록들을 최소한으로 사용할 수 있습니다.
      grade2_PuppyLoops_5_instruction: 어떻게 하면 돼지에게로 최대한 빠르게 이동할 수 있을까요?
      grade2_PuppyLoops_7_instruction: 해바라기로 이동하기 위해서 여러분들이 배운 것들을 사용해보세요!
      grade2_PuppyLoops_8_instruction: "고양이 수염을 그리는 코드에 문제가 있습니다.\n\\r\n\\r\n고양이 수염의 길이가 같도록 코드를 고쳐주세요."
      grade2_PuppyLoops_9_instruction: |-
        C가 왼쪽으로 그려지는 코드 같습니다!\r
        \r
        C를 정확하게 그리려면 어떻게 해야할까요?
      grade2_playlab_project_1_instruction: 위/아래/왼쪽/오른쪽 방향키를 사용해 펭귄이 이리저리 목표지점들로 움직이도록 프로그래밍 해주세요.
      grade2_playlab_project_3_instruction: "펭귄이 \"Ouch!\"라고 말하고, 공룡에 닿으면 \"충돌 소리\"를 출력하도록 한 후 방향키들을 움직여보세요."
      grade2_playlab_project_4_instruction: "펭귄이 문어에 닿으면 점수가 올라가게 만든 후 방향키를 눌러 움직여 보세요."
      grade2_playlab_project_5_instruction: |-
        Waddles의 속도와 배경을 변경하기위해 `when run` 이벤트에 블럭을 추가하세요.\r
        \r
        점수를 획득할때까지 Waddles을 움직여보세요
      grade2_puppy_loops2_instruction: 1개의 '반복' 블록 안에 1개의 '앞으로 이동' 블록이 들어있는 반복 실행 구조를 이용해서 돼지에게로 이동시켜주세요.
      grade2_puppy_loops4_instruction: 이 퍼즐에서는 두 개의 반복(횟수) 블록을 이용하면 블록들을 최소한으로 사용할 수 있습니다.
      grade3_ConditionalsElse_1_instruction: "구름으로 가려 잘 보이지 않습니다!\n구름 아래에 꽃이 있는지 살펴보고, 꽃이 있는 경우에만 꽃꿀을 모아보세요.\n주의하세요, 계속 바뀝니다!"
      grade3_ConditionalsElse_2_instruction: "구름들이 더 많습니다! \\r\n\\r\n모든 구름 아래에 꽃들이 있는 것은 아니기 때문에 구름 아래에 꽃이 숨어있는지 살펴보고 꽃꿀을 모아야 합니다. \\r\n\\r\n기억하세요: 모든 구름들 아래에 똑같은 것들이 숨겨진 것은 아닙니다!"
      grade3_ConditionalsElse_3_instruction: "이제 꿀을 만들고 싶습니다.\n이 구름들 중 아래에 벌집이 있을 것입니다. 각 구름을 검사해야합니다!"
      grade3_ConditionalsElse_4_instruction: 이 구름들은 꽃이나 벌집을 가립니다! 만약/아니면 블록을 사용해서 꽃인 경우에 꽃꿀을 모으고, 꽃이 아닌 경우(즉, 벌집인 경우)에는 꿀을 만들도록 해주세요.
      grade3_ConditionalsElse_5_instruction: |-
        이 안개 구름들 아래에는 꽃이나 벌집이 있을 수 있습니다.\r
        \r
        '만약/그렇지않으면' 블록을 이용해서 꽃이면 꽃꿀을 모으고\r
        아니면 (즉, 벌집이라면) 꿀을 만들도록 해보세요.
      grade3_ConditionalsElse_6_instruction: "이 자주색 꽃에는 꽃꿀이 1, 2, 3개 있을 수 있습니다. \\r\n\\r\n이 \"만약\" 블록은 다른 \"만약/아니면\" 블록과 결합되어서, \"만약/(아니고 만약/모두 아니면)\" 명령을 만들어낼 수 있습니다. \n\\r\n\\r\n꽃꿀의 양을 모르는 경우에도 꽃꿀을 모두 얻을 수 있게 해보세요."
      grade3_ConditionalsElse_7_instruction: "자주색 꽃은 꽃꿀이 3, 2, 1 중 하나입니다. \n\\r\n\\r\n\"자주색 꽃 확인\" 함수를 완성하고 이용해서 꽃의 모든 꽃꿀들을 모을 수 있도록 해보세요."
      grade3_ConditionalsElse_8_instruction: "\"꽃을 확인하고 꿀 만들기\" 함수의 내부를 완성해 주세요. \\r\n\\r\n자주색 꽃의 꽃꿀이 3, 2, 1 인 경우에는 모든 꽃꿀을 모으세요. \\r\n그 후에 앞으로 이동해서 꿀을 만들면 됩니다."
      grade3_ConditionalsElse_9_instruction: "**형성평가:** 이 구름은 한 개의 꽃꿀을 가지고 있는 꽃 아니면 한 개의 꿀을 필요로 하는 벌집을 숨기고 있습니다. \\r\n\\r\n\"꽃꿀을 모으거나 꿀 만들기\" 함수를 완성하고 나서 그 함수를 사용하여 꽃꿀이나 꿀을 모으도록 만들어 주세요.\\r\n"
      grade3_ConditionalsElse_TeacherIDo_instruction: |-
        이 안개 구름들 아래에는 꽃이나 벌집이 있을 수 있습니다.\r
        \r
        '만약/그렇지않으면' 블록을 이용해서 꽃이면 꽃꿀을 모으고\r
        아니면 (즉, 벌집이라면) 꿀을 만들도록 해보세요.
      grade3_Conditionals_1 BAD_instruction: 꽃꿀을 모두 모으기 위해서 반복 구조를 사용해보세요.
      grade3_Conditionals_1_instruction: "저는 배고픈 꿀벌입니다! \\r\n최소한의 블록만 사용해서 꽃꿀을 모두 모을 수 있게 해주세요."
      grade3_Conditionals_10 BAD_instruction: 꽃들로 부터 꽃꿀을 모으세요. 중첩 반복을 사용하면 됩니다.
      grade3_Conditionals_10_instruction: |-
        와 이번에는 여러 가지들이 있네요!\r
        \r
        여러분들이 배운 것들을 이용해 꽃꿀을 모아 꿀을 만들어보세요.
      grade3_Conditionals_11 BAD_instruction: '형성평가: ''~인 동안'' 반복 구조를 이용해서, 이 꽃에서 꽃꿀을 모두 모아보세요.'
      grade3_Conditionals_11_instruction: |-
        자 이제 다 모아봅시다!\r
        \r
        지금까지 배운 것들을 이용해서 최소한의 블록들로 꽃꿀이 있는 꽃에서 꽃꿀을 모아 보세요.
        마지막에는 꿀을 만들어야 합니다.
      grade3_Conditionals_12_instruction: "계단 모양의 패턴은 많이 익숙합니다. \\r\n\\r\n최소한의 블록들만 사용해서 꽃꿀이 있는 꽃에서만 꽃꿀을 모아보세요."
      grade3_Conditionals_13_instruction: "형성평가: 꽃꿀을 모두 모아주세요.\n자주색 꽃에 꽃꿀이 없으면 꽃꿀을 뽑지 않도록 주의하세요."
      grade3_Conditionals_2_instruction: "저 꽃꿀들을 보세요!\\r\n\\r\n최소한의 블록들을 사용해서 꽃꿀을 모아 꿀을 만들어보세요.  "
      grade3_Conditionals_3_instruction: "꽃꿀이 없는 자주색 꽃에서 꽃꿀을 모으지 않도록 조심하세요. \\r\n먼저 '꽃꿀이 있으면' 블록을 이용해서 꽃꿀의 양이 1인지 확인해야합니다."
      grade3_Conditionals_4_instruction: '"만약" 블록을 사용해서 이 꽃에 꽃꿀이 있는지 확인해보세요.'
      grade3_Conditionals_5_instruction: 꽃꿀이 있는 꽃에서만 꽃꿀을 모아보세요.
      grade3_Conditionals_6_instruction: "이 꽃밭에는 빨강 꽃과 자주색 꽃이 있습니다.\n빨강 꽃은 꽃꿀이 얼마나 있는지 나타나있지만, 자주색 꽃에는 얼마나 있는지 알 수 없습니다.\n꽃꿀을 모두 모아 보세요."
      grade3_Conditionals_7_instruction: 각 꽃에서 꽃꿀을 모두 모아주세요.
      grade3_Conditionals_8_instruction: "뭐가 있을까요!\\r\n\\r\n꽃밭을 돌아다니면서 꽃꿀이 있는 꽃들에서만 꽃꿀을 모을 수 있게 도와주세요. "
      grade3_Conditionals_9_instruction: 최대한 적은 블록들을 사용해서 꽃꿀을 찾아낼 수 있도록 도와주세요!
      grade3_Conditionals_TeacherIDo_instruction: '"만약" 블록을 사용해서 이 꽃에 꽃꿀이 있는지 확인해보세요.'
      grade3_Debugging_1_instruction: "이 블록들에는 오류들이 있어서 짜증이 나네요.\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류들을 수정해주세요."
      grade3_Debugging_5_instruction: "꽃들이 맛있어보여요! \\r\n\\r\n모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요. 단계별 실행을 사용할 수 있습니다."
      grade3_Debugging_6_instruction: |-
        달콤한 도전이네요! \r
        \r
        모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요.
      grade3_Debugging_7_instruction: 모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요.
      grade3_Debugging_9_instruction: |-
        "벌벌" 떨지 마세요! \r
        \r
        모든 꽃꿀들을 모아 꿀을 만들 수 있도록, 이 프로그램의 오류들을 고쳐야 합니다.
      grade3_Debugging_TeacherIDo_instruction: "이 블록들에는 오류들이 있어서 짜증이 나네요.\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류(들)을 수정해주세요."
      grade3_Loops_10_instruction: |-
        꿀벌이 엄청 바쁘네요!\r
        \r
        최대한 적은 블록들을 사용해서
        꽃꿀을 모으고 꿀을 만들 수 있도록 꿀벌을 도와 주세요.
      grade3_Loops_11_instruction: "이 길의 모양은 다른 것들과 다릅니다. \\r\n\\r\n최대한 적은 블록들을 사용해서 꽃꿀을 모두 모아보세요."
      grade3_Loops_12_instruction: 꿀벌이 꽃꿀을 모으고 꿀을 만들 수 있는 가장 빠른 방법을 찾을 수 있나요?
      grade3_Loops_2_instruction: 이번에는, 1개의 반복 구조를 사용해서 모든 꿀을 모아보세요.
      grade3_Loops_3_instruction: 모든 꽃꿀을 모으기 위해, 반복 구조를 사용해보세요.
      grade3_Loops_4_instruction: 반복 블록을 사용해서, 꽃꿀을 모두 모으고 꿀을 만들어보세요.
      grade3_Loops_5_instruction: "와 꽃밭이 이쁘네요!\n7 블록보다 적은 블록을 사용해서 꿀벌이 모든 꽃들을 살펴볼 수 있게 해주세요."
      grade3_Loops_6_instruction: "이 퍼즐을 해결하려면 몇 번 반복해야할까요? \\r\n\\r\n반복 실행 구조는 매우 편리합니다!\n반복 실행 구조를 사용해서 최대한 적은 블록들로 해결해 보세요."
      grade3_Loops_7_instruction: |-
        저 꽃들이 달콤해 보여요!\r
        \r
        최대한 적은 블록들을 사용해 각 꽃들에서 꽃꿀을 모아보세요.
      grade3_Loops_8_instruction: 최대한 적은 블록들을 사용해서 모든 꽃꿀을 모으고 꿀을 만들어 보세요.
      grade3_Loops_9_instruction: "최대한 적은 블록들을 사용해서\n각 꽃에서 꽃꿀을 모은 후, 각각의 벌집에 꿀을 만들어 넣어 보세요."
      grade3_Loops_TeacherIDo_instruction: |-
        저 꽃들이 달콤해 보여요!\r
        \r
        최대한 적은 블록들을 사용해 각 꽃들에서 꽃꿀을 모아보세요.
      grade3_bee_conditionals_quantum2_instruction: "구름들이 더 많습니다! \\r\n\\r\n모든 구름 아래에 꽃들이 있는 것은 아니기 때문에 구름 아래에 꽃이 숨어있는지 살펴보고 꽃꿀을 모아야 합니다. \\r\n\\r\n기억하세요: 모든 구름들 아래에 똑같은 것들이 숨겨진 것은 아닙니다!"
      grade3_maze_Loop1_instruction: '형성평가: 5개의 블록만 사용해서, 저를 해바라기로 보내주세요! '
      grade3_maze_loops2_instruction: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\r\n\\r\n반복 실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      grade3_maze_loops3_instruction: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\r\n최소한의 반복 실행 구조를 사용해서 해바라기로 이동시켜주세요."
      grade3_maze_loops4_instruction: 블록들을 최대한 적게 사용해서 해바라기로 이동시켜주세요!
      grade3_maze_loops5_instruction: 블록들을 최대한 적게 사용해서 해바라기로 이동시켜주세요!
      grade3_maze_nestedLoops1_instruction: 5 개의 블록들만 사용해서 돼지로 이동시켜 주세요.
      grade3_maze_nestedLoops2_instruction: 1개의 '반복' 블록 안에 1개의 '앞으로 이동' 블록이 들어있는 반복 실행 구조를 이용해서 돼지에게로 이동시켜주세요.
      grade3_maze_nestedLoops3_instruction: "2개의 블록만 더 추가해서 돼지에게로 보내주세요.\\r\n(참고: 이 레벨을 깨기 위해서는 마법의 \"반복(횟수)\" 블록을 사용해야 합니다.)"
      grade3_maze_nestedLoops4_instruction: 이 퍼즐에서는 두 개의 반복(횟수) 블록을 이용하면 블록들을 최소한으로 사용할 수 있습니다.
      grade3_robotFarmer_ConditionalsIntro_11_instruction: '아직도 어둡습니다. 밭을 가로질러 가면서 흙더미가 있으면 치우고, 구덩이가 있으면 메울 수 있게 도와주세요. 힌트: "만약" 블럭의 메뉴를 사용해 보세요.'
      grade3_robotFarmer_ConditionalsIntro_6_instruction: 블럭을 최대한 적게 사용해서 모든 흙더미를 치울 수 있게 도와주세요. "반복(~인 동안)" 블럭에서 선택하면 흙더미 위에 있는지, 구덩이 위에 있는지를 판단해 반복 실행할 수 있습니다.
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1_instruction: '5 번 메워야 하는 구덩이들을 모두 없앨 수 있도록 도와주세요. 힌트: "반복(~인 동안)" 블럭 안에 "반복(횟수)" 블럭을 넣으면 할 수 있습니다.'
      grade4_arist_nested_loop_circles1_instruction: '형성평가: 중첩 반복을 사용해서 디자인을 완성시켜주세요.'
      grade4_arist_nested_loop_flags1_instruction: 주어진 코드를 반복시켜서 풍차를 만들어 주세요.
      grade4_arist_nested_loop_polygons1_instruction: "이 디자인을 10번 반복시켜주세요. \\r\n\\r \n한 번 반복하고나서 얼마나 회전해야 할까요? (힌트: 360을 10으로 나누면 얼마일까요?)"
      grade4_arist_nested_loop_polygons2_instruction: "이 디자인을 6번 반복시켜주세요. \\r\n\\r\n한 번 반복하고나서 얼마나 회전해야 할까요? (힌트: 360을 6으로 나누면 얼마일까요?) "
      grade4_arist_nested_loop_squares1_instruction: 중첩 반복을 사용해서 사람다니는 길에 10개의 사각형들을 그려주세요. 각 사각형들은 30 픽셀입니다.
      grade4_arist_nested_loop_triangles2_instruction: "이번에는 반복을 다른 반복에 넣어서 10개의 삼각형을 그려보세요.\n이러한 것을 \"중첩\" 반복이라고 합니다.  "
      grade4_arist_nested_loop_triangles3_instruction: 삼각형 코드를 반복시켜서 육각형을 그려 주세요.
      grade4_arist_nested_loop_triangles4_instruction: 악어 입 안에 이빨을 그려주세요!
      grade4_arist_nested_loop_triangles5_instruction: |-
        다른 반복 안에 시작 코드를 중첩시켜 넣어서 해를 만들어 주세요. \r
        \r
        이렇게 가운데가 빈 멋진 디자인을 얻기 위해서는 회전하기 전에 삼각형의 길이만큼 앞으로 점프해야 합니다.
      grade4_arist_nested_loop_triangles6_instruction: 중첩 반복을 이용해서 36개의 삼각형들을 그려주세요.
      grade4_artist_functions1_instruction: "\"나 화가. 좀비... 그리기 좋아..!\" \\r\n\\r\n사각형 안경을 그릴 수 있게 도와주세요. \\r\n\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      grade4_artist_functions2_instruction: "함수들로 새로운 블록들을 만들어낼 수 있습니다! \\r\n\\r\n\"사각형 그리기\" 라는 함수에 사각형 1개를 그리는 블록들을 넣었습니다.\n\"사각형 그리기\" 함수를 이용해서 안경을 그려보세요. \n\\r\n\\r\n사각형들은 75 픽셀 만큼 떨어져 있습니다."
      grade4_artist_functions_challenge_instruction: "4줄의 육각형들을 그리기 위해서 주어진 함수들을 사용해보세요.\n짝수 줄의 육각형들은 오른쪽으로 얼마나 이동되어 그려져 있을까요?"
      grade4_artist_functions_challenge2_instruction: "4줄의 육각형들을 그리기 위해서 주어진 함수들을 사용해보세요.\n짝수 줄의 육각형들은 오른쪽으로 얼마나 이동되어 그려져 있을까요?"
      grade4_artist_nestedLoops_challenge_instruction: |-
        힌트를 다시 보려면 여기를 눌러보세요!\r
        \r
        재미있는 모양을 위한 코드가 있습니다. 한 번 실행할 때마다 회전시키면 어떤 일이 일어날까요? 이 모양의 각도는 420도까지 가능하고, 실행할 때마다 화가가 바라보는 방향이 바뀔 것입니다. 그리고 그 각도는 정확히 60도 입니다.
      grade4_artist_nestedLoops_challenge2_instruction: 자 이제 도전해보세요! 실패하더라도 계속 도전해 보세요. 한 번에 성공하는 사람은 거의 없습니다. 힌트가 필요하다고요? 여기를 눌러보세요!
      grade4_artist_nested_loop_circles1_instruction: '형성평가: 중첩 반복을 사용해서 디자인을 완성시켜주세요.'
      grade4_artist_nested_loop_flags1_instruction: 주어진 코드를 반복시켜서 풍차를 만들어 주세요.
      grade4_artist_nested_loop_polygons1_instruction: "이 디자인을 10번 반복시켜주세요. \\r\n\\r \n한 번 반복하고나서 얼마나 회전해야 할까요? (힌트: 360을 10으로 나누면 얼마일까요?)"
      grade4_artist_nested_loop_squares1_instruction: 중첩 반복을 사용해서 사람다니는 길에 10개의 사각형들을 그려주세요. 각 사각형들은 30 픽셀입니다.
      grade4_artist_nested_loop_triangles1_instruction: '이 삼각형들을 그리는 코드를 완성시켜 주세요. 첫 번째 것은 만들어져 있습니다. 힌트: 360 도 방향으로 3개의 삼각형들이 있습니다.'
      grade4_artist_nested_loop_triangles5_instruction: |-
        다른 반복 안에 시작 코드를 중첩시켜 넣어서 해를 만들어 주세요. \r
        \r
        이렇게 가운데가 빈 멋진 디자인을 얻기 위해서는 회전하기 전에 삼각형의 길이만큼 앞으로 점프해야 합니다.
      grade4_artist_nested_loop_triangles6_instruction: 중첩 반복을 이용해서 36개의 삼각형들을 그려주세요.
      grade4_artist_parameters_squares1_instruction: "\"사각형 그리기\" 함수의 정의를 \"수정\"해서 매개 변수를 추가해보세요.\n삼각형 그리기와 마찬가지로 길이를 매개 변수로 사용하면 됩니다.\n이번에는 3개의 사각형들을 그리면 됩니다: 한 변의 길이가 25, 50, 75 픽셀이고,\n100 픽셀 만큼씩 떨어져 있습니다."
      grade4_artist_parameters_triangles2_instruction: "이 함수 블록들이 뭔가 다르다는 것을 알아차리셨나요?\n\"실행\"을 눌러 어떤 일이 일어나나 살펴보세요."
      grade4_artist_parameters_triangles2b_instruction: 이 그림을 완성시켜보세요. 각 삼각형의 변의 길이는 바로 이전 것보다 25 픽셀만큼 더 깁니다. 첫 번째 삼각형의 한 변의 길이는 25 픽셀입니다.
      grade4_artist_parameters_triangles3_instruction: 이 그림을 완성시켜보세요. 각 삼각형의 변의 길이는 바로 이전 것보다 25 픽셀만큼 더 깁니다. 첫 번째 삼각형의 한 변의 길이는 25 픽셀입니다.
      grade4_artist_parameters_triangles4_instruction: "이 삼각형 함수의 코드는 문제가 있습니다.\n함수를 고쳐서 25, 50, 75 길이의 삼각형을 그려보세요."
      grade4_artist_parameters_trianglesx_instruction: 이 그림을 완성시켜보세요. 각 삼각형의 변의 길이는 바로 이전 것보다 25 픽셀만큼 더 깁니다. 첫 번째 삼각형의 한 변의 길이는 25 픽셀입니다.
      grade4_bee_conditionals_quantum1_instruction: "구름으로 가려 잘 보이지 않습니다!\n구름 아래에 꽃이 있는지 살펴보고, 꽃이 있는 경우에만 꽃꿀을 모아보세요.\n주의하세요, 계속 바뀝니다!"
      grade4_bee_conditionals_quantum2_instruction: "구름들이 더 많습니다! \\r\n\\r\n모든 구름 아래에 꽃들이 있는 것은 아니기 때문에 구름 아래에 꽃이 숨어있는지 살펴보고 꽃꿀을 모아야 합니다. \\r\n\\r\n기억하세요: 모든 구름들 아래에 똑같은 것들이 숨겨진 것은 아닙니다!"
      grade4_bee_conditionals_quantum4_instruction: 이 구름들은 꽃이나 벌집을 가립니다! 만약/아니면 블록을 사용해서 꽃인 경우에 꽃꿀을 모으고, 꽃이 아닌 경우(즉, 벌집인 경우)에는 꿀을 만들도록 해주세요.
      grade4_bee_conditionals_quantum5_instruction: |-
        이 안개 구름들 아래에는 꽃이나 벌집이 있을 수 있습니다.\r
        \r
        '만약/그렇지않으면' 블록을 이용해서 꽃이면 꽃꿀을 모으고\r
        아니면 (즉, 벌집이라면) 꿀을 만들도록 해보세요.
      grade4_bee_functions1_instruction: 각 꽃에서 꽃꿀을 모두 모아주세요.
      grade4_bee_functions2_instruction: "함수들은 어떤 작업을 수행할 때 사용하는 블럭들의 집합이라고 할 수 있습니다.\n\"꽃꿀 2번 모으기\" 를 이용해서 각 꽃들에서 꽃꿀을 모아보세요."
      grade4_bee_functions3_instruction: "함수들은 어떤 작업을 수행하는데 블럭들의 집합이라고 볼 수 있습니다.  \\r\n\\r\n\"5번 모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      grade4_bee_functions4_instruction: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는 함수입니다.  \\r\n\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      grade4_bee_nestedLoops0_instruction: 꽃꿀을 모두 모으기 위해서 반복 구조를 사용해보세요.
      grade4_bee_nestedLoops1_instruction: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      grade4_bee_nestedLoops3_instruction: 중첩 반복 구조를 만들어서 모든 꽃꿀을 모아보세요.
      grade4_bee_nestedLoops4_instruction: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\r\n\\r\n중첩 반복을 사용하면 됩니다. "
      grade4_frozen_freeplay_instruction: 여러분은 이제 진짜 화가가 된 것 같아요! 겨울왕국을 만들어 보세요.
      grade4_frozen_functions0_instruction: 원을 그리려면, 물음표로 표시된 부분에 어떤 수를 넣어야 할까?
      grade4_frozen_functions1a_instruction: 새로운 "원 그리기" 블럭을 이용해 10개의 원을 겹쳐 그리세요. 원을 그리기 위해 점프 하는 것을 잊지 마세요.
      grade4_frozen_functions2_instruction: 이제 20개의 원을 겹치고, 각각을 18도씩 회전시키세요.
      grade4_frozen_functions3_instruction: 원하는 크기로 그릴 수 있는 "원 그리기" 블럭이 있습니다. 이 블럭을 사용해 5 크기의 원과 10 크기의 원을 그릴 수 있겠어요?
      grade4_frozen_functions4_instruction: 아주 복잡한 눈송이 모양도 아주 간단한 모양들을 이용해 만들 수 있습니다. 5크기의 원을 5개, 10크기의 원을 5개 이용해 패턴을 만들 수 있겠어요?
      grade4_frozen_nested_loop_diamonds2_instruction: 모든 눈송이들이 서로 다른 모양을 하고 있다는 것을 아시나요? 평행 사변형을 4번 그리기 위해 "반복"블럭을 사용하고, 각각을 90도 만큼씩 회전시켜 새로운 눈송이를 만들어보세요.
      grade4_frozen_nested_loop_diamonds3_instruction: 이제, 평행 사변형을 10번 그릴 수 있도록 반복 블럭을 사용하고, 각각을 36도 만큼씩 오른쪽으로 돌려 새로운 눈송이를 그려보겠습니다.
      grade4_frozen_square_instruction: "안녕하세요. 저는 아렌델의 안나입니다!\n더 적은 블록들을 사용하는 \"반복\" 블록을 이용해서 사각형을 1개 만들어보세요.\n사각형 1개를 만들기 위해서 \"반복\" 블록 안 (???) 값으로 얼마나 넣어야 할까요?"
      grade4_frozen_square_loop1_instruction: "안녕하세요. 저는 아렌델의 안나입니다!\n더 적은 블록들을 사용하는 \"반복\" 블록을 이용해서 사각형을 1개 만들어보세요.\n사각형 1개를 만들기 위해서 \"반복\" 블록 안 (???) 값으로 얼마나 넣어야 할까요?"
      grade4_frozen_square_loop2_instruction: 이제 3개의 사각형을 회전시켜 만들어 보세요! 새로운 사각형을 그리기 전에 120도 만큼 회전하는 것을 잊지 마세요.
      grade4_frozen_square_loop3_instruction: "\"반복\" 블록을 사용해서 사각형을 10번 만들어 보세요.\n삼각형을 한 번씩 그릴 때마다, 회전 블록을 이용해서 36 도 만큼 씩 회전시켜주세요."
      grade4_playlab_freeplay_instruction: "자유 시간입니다!\n도구 상자에 있는 모든 블록들을 이용해보세요. "
      grade4_playlab_test_instruction: |-
        오른쪽 방향키를 이용해 하트를 맞춰보세요.\r
        \r
        이 게임에서는 어떻게 포인트를 올려야 할까요?
        강아지가 하트로 고양이를 맞출 때마다 "점수" 변수에 1씩 더해보세요.
        "캐릭터 2가 물체에 닿으면" 이벤트를 이용해 점수를 업데이트하면 됩니다. "점수=점수+1"로 설정해서
        변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요.
      grade4_playlab_test2_instruction: "\"점프\" 함수는 주 캐릭터가 100 픽셀 만큼 점프하도록 해줍니다.\n점프 함수를 이용해서 모든 깃발들을 모아보세요."
      grade4_review_artist1_instruction: "안녕하세요. 저는 화가입니다. 여러분들이 코드를 작성하면 원하는 모든 것들을 그릴 수 있습니다.\n블록들을 사용해서 그림의 회색 선들을 그려보세요.(각 선들은 100 픽셀 길이입니다.)"
      grade4_review_artist2_instruction: "이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:\n세 변의 길이는 모두 같습니다."
      grade4_review_artist3_instruction: "점프 블록은 선을 그리지 않고 이동하게 해줍니다.\n앞으로 점프, 앞으로 이동하기 블록들을 이용해서 파선을 그려보세요."
      grade4_review_bee1_instruction: 반복 블록을 사용해서, 꽃꿀을 모두 모으고 꿀을 만들어보세요.
      grade4_review_bee2_instruction: "최대한 적은 블록들을 사용해서\n각 꽃에서 꽃꿀을 모은 후, 각각의 벌집에 꿀을 만들어 넣어 보세요."
      grade4_review_bee3_instruction: |-
        꿀벌이 엄청 바쁘네요!\r
        \r
        최대한 적은 블록들을 사용해서
        꽃꿀을 모으고 꿀을 만들 수 있도록 꿀벌을 도와 주세요.
      grade5_artist_binary1_instruction: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는 0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\r\n\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면, 그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을 그리도록 해보세요."
      grade5_artist_binary10_instruction: 여기를 눌러 힌트를 살펴보세요.
      grade5_artist_binary11_instruction: '자유 플레이: 빈 캔버스가 있습니다. 마음대로 재미있게 그려보세요!'
      grade5_artist_binary2_instruction: "여기에 1, 0 로만 이루어진 문자열을 입력해서, 화가를 왼쪽에서 오른쪽으로, 위에서 아래로 움직이는 함수가 있습니다. 화가는 1을 보면 사각형을 채우고, 0이면 무시할 것입니다. \\r\n\\r\n이 코드를 실행시킨 후, 화가가 2진 정보를 이용해서 이 패턴을 그려내는 것을 살펴보세요."
      grade5_artist_binary3_instruction: 이 이미지를 그려내기 위해서, 어떤 2진 문자열이 8번 반복시켜 줄까요?
      grade5_artist_binary4_instruction: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      grade5_artist_binary5_instruction: 각 2진 문자는 이 그림의 한 줄을 의미합니다. 2진 문자열을 재배치해서 찡그린 얼굴 모양을 웃는 얼굴 모양으로 만들어 주세요.
      grade5_artist_binary6_instruction: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것 일까요?
      grade5_artist_binary7_instruction: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      grade5_artist_binary8_instruction: 이 그림을 마무리 해보세요.
      grade5_artist_binary9_instruction: |-
        좀 더 높은 해상도로 표현할 수 있는 캔버스가 여기 있습니다. - 16 픽셀 * 16 픽셀!\r
        \r
        2진 비트 문자열로 어떤 것이 그려지는 지 살펴보세요.
      grade5_artist_for_loops1_instruction: 반복 블록을 1개 사용하여 너비가 50 픽셀인 삼각형을 그려주세요.
      grade5_artist_for_loops10_instruction: |-
        이 이미지를 생성하기 위해 공부한 것들에 대해 설명할 수 있습니까?\r
        \r
        힌트가 필요하면 여기를 클릭하세요.
      grade5_artist_for_loops5_instruction: |-
        이전 그림에서 1가지만 바꾸면 이 그림을 만들 수 있습니다. 어떤 것을 바꾼 것인지 찾아낼 수 있나요?\r
        \r
        힌트: 뭔가 제거하면 됩니다!
      grade5_artist_for_loops6_instruction: 일반적인 도형들에 사용하는 각 보다 조금 더 많거나 적게 각을 회전시키면 멋진 효과를 만들어낼 수 있습니다. 이전 레벨에서의 코드를 이용해 실험해 보는데, 89도를 사용하면 이런 비틀어진 사각형 나선 구조를 만들어 낼 수 있습니다.
      grade5_artist_for_loops7_instruction: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      grade5_artist_for_loops8_instruction: '이전 스테이지에서 어떤 모양의 변의 길이를 조절하기 위해 사용했던 변수에 대해서 생각해 보세요. 이번에는 "카운터" 변수라는 것을 이용해서 같은 작업을 해 보도록 하겠습니다. 이 패턴은 삼각형으로 시작하고, 한 변을 붙이면서 10각형(10개의 변을 가진 다각형) 을 그립니다. 각 변의 길이는 100 픽셀 입니다. '
      grade5_artist_for_loops9_instruction: |-
        자 이제 모두 함께 사용해 봅시다! "반복(~인 동안)"과 "카운터" 변수를 이용해서, 앞의 것보다 2개 더 많은 변을 가지고 있는 각각의 도형들을 만들어보세요. 각 변의 길이는 각 다각형의 변의 개수의 10배이어야 합니다.\r
        \r
        아주 적은 코드가 미리 주어져 있습니다.
      grade5_artist_for_loopsfreeplay11_instruction: |-
        멋진 자유 플레이: 여러분은 이제 이런 패턴을 만들기 위해 필요한 모든 것들을 배웠습니다! 이 그림이 여러분이 느끼기에 멋지다면, 비슷한 것을 한 번 만들어 보세요. 아니면, 만들고 싶은 것을 자유롭게 만들어도 됩니다.\r
        \r
        힌트가 필요한가요? 여기를 클릭하세요.
      grade5_artist_functionparameters10_instruction: "멋진 자유 플레이: 여러분들은 이런 패턴을 만들기 위해 필요한 모든 것들을 배웠습니다.\n이 그림이 멋지다고 생각하면, 비슷하게 다른 것을 만들어보세요. 아니면, 만들고 싶은 것을\n만들어보세요.\\r\n\\r\n이런 멋진 패턴이 어떻게 만들어졌는지 궁금한가요? "
      grade5_artist_functionparameters11_instruction: "자유 플레이: 여기 여러분들이 작성한 함수들과 가지고 놀 수 있는 몇 개의 함수가 더 있습니다.\n멋진 것들을 그려보세요! 선 그리기로 얼마나 많은 것들을 그릴 수 있는지 해보세요."
      grade5_artist_functionparameters7_instruction: "이번 이미지는 이전 것과 비슷합니다.\n함수에 \"~동안 반복\" 을 이용해 이 디자인을 만들어보세요."
      grade5_artist_functionparameters8_instruction: "\"다각형 그리기\" 함수를 수정해 보세요. \"변의 길이\" 매개 변수가 있습니다. 이제 \"길이\"를 매개 변수로 추가해 보세요. \\r\n각 모양의 둘레의 길이는 200 픽셀입니다. 다각형에서 면의 개수가 달라질 때, 같은 크기로 만드는 공식 기억하고 있으시죠?"
      grade5_artist_functionparameters_6_instruction: |-
        이 그림을 완성할 수 있겠나요?
        모든 모양의 한 변의 길이는 100 픽셀입니다.
      grade5_artist_parameters_squares1_instruction: "\"사각형 그리기\" 함수의 정의를 \"수정\"해서 매개 변수를 추가해보세요.\n삼각형 그리기와 마찬가지로 길이를 매개 변수로 사용하면 됩니다.\n이번에는 3개의 사각형들을 그리면 됩니다: 한 변의 길이가 25, 50, 75 픽셀이고,\n100 픽셀 만큼씩 떨어져 있습니다."
      grade5_artist_parameters_triangles2a_instruction: "이 함수 블록들이 뭔가 다르다는 것을 알아차리셨나요?\n\"실행\"을 눌러 어떤 일이 일어나나 살펴보세요."
      grade5_artist_parameters_triangles4_instruction: "이 삼각형 함수의 코드는 문제가 있습니다.\n함수를 고쳐서 25, 50, 75 길이의 삼각형을 그려보세요."
      grade5_artist_variables_freeplay10_instruction: '자유 플레이: 이 도형의 면의 수로 실험해 보세요. 면의 개수가 어떻게 바뀌든지 상관없이, 도형의 크기는 같아지도록 알고리즘을 수정해 주세요. 힌트: 처음 시작하는 길이를 면의 개수로 나누면, 면의 개수가 많아지는 만큼 각 면의 길이는 짧아집니다.'
      grade5_artist_variables_freeplay14_instruction: |-
        자유 플레이: 확인해보세요! 여러분의 알고리즘은 반복 구조가 한 번 이상 중첩되어있습니다. 두 개의 변수 값들을 바꾸어 멋진 패턴들을 만들어보면서 실험해 보세요.\r
        \r
        더 멋지게 만들어 보려면, 색을 사용해 보세요!
        반복 구조들 안에 랜덤색을 사용해서 디자인이 어떻게 변화 되는지 살펴보세요.
      grade5_artist_variables_freeplay15_instruction: |-
        멋진 디자인을 위한 도움말이나 힌트가 필요하면? 여기를 클릭하세요!\r
        \r
        아니면, 자유롭게 디자인해 보세요!
      grade5_artist_variables_freeplay16_instruction: 계속 하고 있나요? 빈 캔버스가 있습니다. 마음대로 그려보세요.
      grade5_artist_variables_hexagons1_instruction: "다시 한 번 해보세요. \\r\n\\r\n육각형들로 이런 멋진 디자인을 만들기 위해 \"길이\" 변수값을 60으로 설정해 보세요."
      grade5_artist_variables_letterT11_instruction: "이전 퍼즐에서와 같은 개념들을 사용하는 좀 더 복잡한 코드입니다.\n- 사각형들로 만들어진 이 그림을 그리기 위해서 \"변\" 변수를 어떻게 설정해야 할까요?"
      grade5_artist_variables_octagons13_instruction: "전체 패턴을 화면에 맞추기 위해서는, 도형에 여러 개의 변들이 있을 때 각 변들의 길이를 줄여야 합니다.\n\\r\n이 멋진 패턴을 만들어낸 알고리즘을 새롭게 만들어보세요. 각각의 모양을 정확히 맞추기 위해서 \"변\" 변수와 함께 수학 블록을 사용해서, \"길이\" 변수의 값을 계산할 수 있도록 하면 됩니다. 각 다각형의 둘레는 300 픽셀입니다.\\r\n힌트가 필요한가요? 여기를 눌러보세요."
      grade5_artist_variables_pentagon8_instruction: |-
        이전 퍼즐을 통해서 배웠던 것을 이용하면 됩니다. "면" 변수를 사용해서 육각형을 만들어보세요.\r
        \r
        변수 값 하나만 변화시키면, 삼각형, 사각형, 오각형,..., 팔각형을 모두 만들 수 있습니다.
      grade5_artist_variables_pentagon9_instruction: "자 이제, 이전 레벨에서의 알고리즘을 다시 만든 후,\n한 변의 길이가 150인 오각형을 만들어보세요."
      grade5_artist_variables_pentagons1_instruction: "\"길이\" 변수의 값을 정확히 입력하고 이 변수를 모든 알맞은 위치에 넣어서 100 픽셀짜리 오각형 패턴을 그려보세요. \\r\n\\r\n길이 변수의 값을 한 번만 입력하면, 그 값을 계속 사용할 수 있다는 것을 알 수 있습니다."
      grade5_artist_variables_pentagons12_instruction: "자 이제 \"면\" 변수를 살펴보세요.\n5. 이 알고리즘에 더 많은 면 개수를 추가하면 할 수록, 전체 패턴이 더 커집니다! 그리고 \"길이\"라는 변수가 더 있습니다. 그리고 이제 \"앞으로 이동\" 블록이 없어도 할 수 있습니다. 모양을 만들려면 \"길이\" 변수를 75로 설정하세요."
      grade5_artist_variables_rectangle6_instruction: 이번에는 너비의 2배 만큼 높이를 가진 사각형을 만들어보세요. "너비"라는 변수를 100 으로 설정하면 됩니다. 수학 블록들을 이용해 코드를 완성해 주세요.
      grade5_artist_variables_square7_instruction: |-
        모든 정 다각형들을 만들 수 있는 코드가 있습니다.
        그 값이 4 로 입력되어있는 새 변수가 있습니다. (수학 블록과 함께) 면 수 변수를 사용해서, 다각형의 면들이 몇 개인지에 상관없이 자동으로 회전시켜보세요.\r
        \r
        여기를 눌러 힌트를 다시 살펴보세요.
      grade5_artist_variables_triangles2_instruction: 이번에는 "앞으로 150 만큼 이동"을 사용하는 대신에 "이동" 블록이 "길이"라는 변수에 저장되어있는 값을 이용합니다. 삼각형을 그리기 위해서 "길이"를 150 으로 입력해 보세요.
      grade5_artist_variables_triangles3_instruction: "\"길이 설정\" 블록과 \"_번 반복하기\" 블록에 숫자 블록을 넣어, 50 픽셀 크기의 삼각형들을 만들어보세요.\n"
      grade5_bee_for_loops1_instruction: 각 꽃에서 꽃꿀을 모으기 위해서 반복 구조를 사용하세요.
      grade5_bee_for_loops2_instruction: "꿀벌이 모든 꽃꿀을 모울 수 있도록 할 수 있는 코드를 추가해보세요.\n이 퍼즐을 해결하기 위해서, 코드가 얼마나 많이 필요한지 잘 살펴보세요!\n(다음 퍼즐에서는 더 간단한 방법을 배우게 될 것입니다.)"
      grade5_bee_for_loops6_instruction: "카운트다운하는데 \"반복(~인 동안)\" 구조를 사용할 수도 있습니다.\n이 꽃꿀을 5 부터 1 까지, 1씩 카운트다운하면서 모아보세요."
      grade5_bee_for_loops8_instruction: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      grade5_playlab_freeplay_instruction: "자유 시간입니다!\n도구 상자에 있는 모든 블록들을 이용해보세요. "
      grade5_playlab_variables1_instruction: "이번에는 코드를 작성할 필요가 없습니다. \"실행\"을 눌러 실행시켜보세요! 이번 게임에서,\n여러분은 고양이보다 더 많은 깃발을 모으기 위해 노력하는 강아지입니다. \"아래\" 방향키를 이용해서\n강아지를 움직여보세요. 그만하려면 \"마치기\"를 누르면 됩니다."
      grade5_playlab_variables10_instruction: "\"순찰\" 함수에 \"캐릭터\" 매개변수를 추가해서, 원하는 캐릭터를 화면에 나타낼 수 있도록 해보세요.\n캐릭터들은 1, 2, 3 으로 선택할 수 있도록 해주세요."
      grade5_playlab_variables11_instruction: '"순찰" 함수에 "속도" 매개변수를 더 추가해 보세요. 다른 캐릭터들이 깃발을 잡기 전에 펭귄이 깃발들을 잡을 수 있도록 "속도" 매개변수를 "속도 설정" 블록에 사용하세요.'
      grade5_playlab_variables12_instruction: "자 이제 즐겨보세요. 주어진 코드가 어떻게 동작하게 될지 한 블록씩 살펴보세요. \\r\n\\r\n살펴본 다음에, 강아지 캐릭터를 방향키로 움직여 깃발을 모두 모아보세요."
      grade5_playlab_variables13_instruction: '"캐릭터가 닿으면" 블록을 이용해서, 강아지 캐릭터다 다른 캐릭터들에 닿으면, 처음의 가장 위쪽의 가장 왼쪽으로 이동되도록 해 보세요.'
      grade5_playlab_variables14_instruction: "자유 시간입니다!\n도구 상자에 있는 모든 블록들을 이용해보세요. "
      grade5_playlab_variables2_instruction: 이전 퍼즐은 공정하지 않았습니다! "강아지 속도" 변수의 값을 바꿔서 고양이보다 더 많은 깃발을 모을 수 있도록 해보세요. 10 개의 깃발을 먼저 모으면 이깁니다!
      grade5_playlab_variables3_instruction: "이번에는 새로운 종류의 게임입니다!\n왼쪽/오른쪽 화살표를 이용해 움직이고, 위/아래 화살표를 이용해서 점프합니다. 모든 깃발을 모을 수 있는지 해보세요."
      grade5_playlab_variables4_instruction: "이제 \"높이\" 라는 변수를 사용해서 강아지가 뛰는 높이를 조정할 수 있습니다.\n모든 깃발에 닿을 수 있도록 \"높이\" 변수를 조정해주세요."
      grade5_playlab_variables6_instruction: |-
        오른쪽 방향키를 이용해 하트를 맞춰보세요.\r
        \r
        이 게임에서는 어떻게 포인트를 올려야 할까요?
        강아지가 하트로 고양이를 맞출 때마다 "점수" 변수에 1씩 더해보세요.
        "캐릭터 2가 물체에 닿으면" 이벤트를 이용해 점수를 업데이트하면 됩니다. "점수=점수+1"로 설정해서
        변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에 1 씩) 올려서 이 레벨을 통과해보세요.
      grade5_playlab_variables7_instruction: "좋아요. 이제 이 게임을 좀더 어렵게 만들어보세요. 강아지(캐릭터 1) 가 고양이(캐릭터 2) 가 발사한\n노란 하트를 맞으면, 점수를 잃어야 합니다. 10 포인트에서 시작하기 때문에 아주 어렵지는 않습니다.\n10 부터 0 까지 포인트를 내려서 이 레벨을 통과해보세요."
      grade5_playlab_variables71_instruction: "이전 단계에서 봤던 게임입니다만, 대부분의 코드가 숨겨져있습니다. 여기에 \"score_points\" 함수가 있습니다.\\r\n\\r\n함수를 수정해서 \"points\" 매개변수를 \"player_score\"의 변수로 추가해 주세요.\\r\n\\r\n\"play_score\" 변수는 강아지가 고양이에게 하트를 붙일 때마다 증가하고, 고양이가 강아지에게 하트를 붙일 때마다 감소해야합니다.\\r\n\\r\n참고:\n\"실행\"을 눌러 실행해 보세요. 강아지가 6 포인트를 얻으면 다음 퍼즐로 갈 수 있습니다. "
      grade5_playlab_variables81_instruction: "여러분을 위해서 함수를 하나더 추가했습니다.\\r\n\\r\n\"if\" 명령어를 이용해서 \"player_score\" 가 일정 점수를 넘으면 \"level_up\" 함수가 실행되도록 프로그램을 만들어 보세요.\\r\n\\r\n예시: \"player_score\" > 6\\r\n\\r\n게임을 해보고, 레벨4를 통과해서 다음 퍼즐로 가보세요. "
      grade5_playlab_variables9_instruction: "\"순찰\" 함수가 있습니다.\n함수를 수정해서 고양이가 400 픽셀 위로 이동 했다가, 다시 400 픽셀 아래로 이동하게 해보세요."
      grade5_playlab_variables_freeplay_instruction: "자유롭게 만들어보세요! 여기에는 지금까지 이 과정에서 사용했던 모든 변수들이 모두 있고,\\r\n필요한 몇 가지가 더 있습니다.\\r\n\\r\n도구 상자에 블록들이 아주 많은데 적당히 분류해야할 것 같습니다!\n이제, 각 블록들을 적당한 카테고리로 묶어 두었습니다. 블록들을 충분히 살펴보세요.\n다 살펴본 이후에 반복 구조, 변수, 이벤트를 이용해 게임이나 이야기를 만들어보세요. \\r\n\\r\n힌트: 모든 명령들을 작업 공간에서 살펴보려면 스크롤해 내려보세요."
      k-1 maze 1_instruction: 오른쪽 돼지에게 보내주세요.
      level 'grade3_Loops_10_instruction: |-
        꿀벌이 엄청 바쁘네요!\r
        \r
        최대한 적은 블록들을 사용해서
        꽃꿀을 모으고 꿀을 만들 수 있도록 꿀벌을 도와 주세요.
      level 'grade3_Loops_11_instruction: "이 길의 모양은 다른 것들과 다릅니다. \\r\n\\r\n최대한 적은 블록들을 사용해서 꽃꿀을 모두 모아보세요."
      level 'grade3_Loops_12_instruction: 꿀벌이 꽃꿀을 모으고 꿀을 만들 수 있는 가장 빠른 방법을 찾을 수 있나요?
      level 'grade3_Loops_2_instruction: 이번에는, 1개의 반복 구조를 사용해서 모든 꿀을 모아보세요.
      level 'grade3_Loops_3_instruction: 모든 꽃꿀을 모으기 위해, 반복 구조를 사용해보세요.
      level 'grade3_Loops_4_instruction: 반복 블록을 사용해서, 꽃꿀을 모두 모으고 꿀을 만들어보세요.
      level 'grade3_Loops_5_instruction: "와 꽃밭이 이쁘네요!\n7 블록보다 적은 블록을 사용해서 꿀벌이 모든 꽃들을 살펴볼 수 있게 해주세요."
      level 'grade3_Loops_6_instruction: "이 퍼즐을 해결하려면 몇 번 반복해야할까요? \\r\n\\r\n반복 실행 구조는 매우 편리합니다!\n반복 실행 구조를 사용해서 최대한 적은 블록들로 해결해 보세요."
      level 'grade3_Loops_7_instruction: |-
        저 꽃들이 달콤해 보여요!\r
        \r
        최대한 적은 블록들을 사용해 각 꽃들에서 꽃꿀을 모아보세요.
      level 'grade3_Loops_8_instruction: 최대한 적은 블록들을 사용해서 모든 꽃꿀을 모으고 꿀을 만들어 보세요.
      level 'grade3_Loops_9_instruction: "최대한 적은 블록들을 사용해서\n각 꽃에서 꽃꿀을 모은 후, 각각의 벌집에 꿀을 만들어 넣어 보세요."
      level grade3_Loops_2_instruction: 이번에는, 1개의 반복 구조를 사용해서 모든 꿀을 모아보세요.
      scrat 16 (copy 1)_instruction: "도토리! 도토리! 도토리! \"만약\" 블럭을 이용하면서,\n블럭들을 최대한 적게 사용해서 도토리가 있는 곳으로 보내주세요."
      scrat 16_instruction: "도토리! 도토리! 도토리! \"만약\" 블럭을 이용하면서,\n블럭들을 최대한 적게 사용해서 도토리가 있는 곳으로 보내주세요."
      scrat 17_instruction: 좋아요, 다시 한 번 해봅시다. - 크게 다르지는 않지만, 벽을 조심해야 해요!
      scrat 18 (copy 1)_instruction: '"만약(if)-아니면(else)" 블럭은 조건을 검사하고, 두 가지 중 하나만 실행합니다. 도토리가 있는 위치로 이동시키기 위해 이 새로운 블럭을 사용하세요.'
      scrat 18_instruction: '"만약(if)-아니면(else)" 블럭은 조건을 검사하고, 두 가지 중 하나만 실행합니다. 도토리가 있는 위치로 이동시키기 위해 이 새로운 블럭을 사용하세요.'
      scrat 19 (copy 1)_instruction: '"조건/선택" 블록을 다시 한 번 사용해 보겠습니다. 한 번에 성공할 수 있겠어요?'
      scrat 19_instruction: '"조건/선택" 블록을 다시 한 번 사용해 보겠습니다. 한 번에 성공할 수 있겠어요?'
      scrat 20_instruction: 좀 더 복잡한 미로를 해결할 수 있도록 3개의 블럭만 더 더해줄 수 있나요? 그렇게 해준다면, 길이가 얼마나 길던지 상관없이 꺽인 길에서 회전할 수 있게 됩니다. 빨리 빨리요! 얼음이 녹고 있어요!
