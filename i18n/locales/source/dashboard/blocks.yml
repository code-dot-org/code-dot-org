---
en:
  data:
    blocks:
      Dancelab_atTimestamp:
        text: after [TIMESTAMP][0] [UNIT][1]
        options:
          UNIT:
            '"measures"': measures
            '"seconds"': seconds
      Dancelab_changeColorBy:
        text: change [COLOR][0] [METHOD][1] by [AMOUNT][2]
        options:
          METHOD:
            '"hue"': hue
            '"saturation"': saturation
            '"brightness"': brightness
      Dancelab_changeMoveEachLR:
        text: "[GROUP][0] do [MOVE][1] [DIR][2] forever"
        options:
          GROUP:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          MOVE:
            '"next"': "(Next)"
            '"prev"': "(Previous)"
            '"rand"': "(Random)"
            MOVES.Roll: Body Roll
            MOVES.ClapHigh: Clap High
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Clown: Gangnam
            MOVES.Kick: Star
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
          DIR:
            '1': "→"
            "-1": "←"
      Dancelab_changeMoveLR:
        text: "[SPRITE][0] do [MOVE][1] [DIR][2] forever"
        options:
          MOVE:
            '"next"': "(Next)"
            '"prev"': "(Previous)"
            '"rand"': "(Random)"
            MOVES.Roll: Body Roll
            MOVES.ClapHigh: Clap High
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Clown: Gangnam
            MOVES.Kick: Star
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
          DIR:
            '1': "→"
            "-1": "←"
      Dancelab_changePropBy:
        text: change [SPRITE][0] [PROPERTY][1] by [VAL][2]
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
      Dancelab_doMoveEachLR:
        text: "[GROUP][0] do [MOVE][1] [DIR][2] once"
        options:
          GROUP:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          MOVE:
            '"rand"': "(Random)"
            MOVES.XBend: Bend
            MOVES.Roll: Body Roll
            MOVES.XClapSide: Clap
            MOVES.ClapHigh: Clap High
            MOVES.Dab: Dab
            MOVES.XFever: Disco
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Clown: Gangnam
            MOVES.XHeadHips: Head + Hips
            MOVES.XHop: Hop
            MOVES.XHighKick: Kick
            MOVES.XKnee: Knee
            MOVES.XKneel: Kneel
            MOVES.XOle: Ole
            MOVES.XArmsSide: Reach
            MOVES.XSlide: Slide
            MOVES.Kick: Star
            MOVES.XArmsUp: Stretch
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
          DIR:
            '1': "→"
            "-1": "←"
      Dancelab_doMoveLR:
        text: "[SPRITE][0] do [MOVE][1] [DIR][2] once"
        options:
          MOVE:
            '"rand"': "(Random)"
            MOVES.XBend: Bend
            MOVES.Roll: Body Roll
            MOVES.XClapSide: Clap
            MOVES.ClapHigh: Clap High
            MOVES.Dab: Dab
            MOVES.XFever: Disco
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Clown: Gangnam
            MOVES.XHeadHips: Head + Hips
            MOVES.XHop: Hop
            MOVES.XHighKick: Kick
            MOVES.XKnee: Knee
            MOVES.XKneel: Kneel
            MOVES.XOle: Ole
            MOVES.XArmsSide: Reach
            MOVES.XSlide: Slide
            MOVES.Kick: Star
            MOVES.XArmsUp: Stretch
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
          DIR:
            '1': "→"
            "-1": "←"
      Dancelab_eval:
        text: eval [CODE][0]
      Dancelab_everySeconds:
        text: 'every [N][0] [UNIT][1] '
        options:
          UNIT:
            '"measures"': measures
            '"seconds"': seconds
      Dancelab_everySecondsRange:
        text: 'every [N][0] [UNIT][1] from [START][2] to [STOP][3] '
        options:
          UNIT:
            measures: Measures
            seconds: Seconds
      Dancelab_everyVerseChorus:
        text: 'every [UNIT][0] '
        options:
          UNIT:
            '"verse"': verse
            '"chorus"': chorus
      Dancelab_getEnergy:
        text: get [RANGE][0]
        options:
          RANGE:
            '"low"': bass
            '"mid"': mid
            '"high"': treble
      Dancelab_getProp:
        text: "[SPRITE][0] [PROPERTY][1]"
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"tint"': tint
      Dancelab_getTime:
        text: current time in [UNIT][0]
        options:
          UNIT:
            '"measures"': measures
            '"seconds"': seconds
      Dancelab_ifDanceIs:
        text: |-
          if [SPRITE][0] is doing [DANCE][1]
           [DO1][2] [DO2][3]
        options:
          DANCE:
            MOVES.ClapHigh: Clap High
            MOVES.Clown: Gangnam
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Roll: Body Roll
            MOVES.Kick: Star
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
      Dancelab_ifTime:
        text: |-
          if [UNIT][0] is [OP][1] [N][2]
           [DO1][3] [DO2][4]
        options:
          UNIT:
            '"measures"': measures
            '"seconds"': seconds
          OP:
            '">"': ">"
            '"<"': "\\<"
            '"="': "="
      Dancelab_jumpTo:
        text: "[SPRITE][0] jump to [LOCATION][1]"
        options:
          LOCATION:
            "{x: 200, y: 100}": top
            "{x: 200, y: 300}": bottom
            "{x: 100, y: 200}": left
            "{x: 300, y: 200}": right
            "{x: 200, y: 200}": center
            "{x: 100, y: 100}": top left
            "{x: 300, y: 100}": top right
            "{x: 100, y: 300}": bottom left
            "{x: 300, y: 300}": bottom right
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": random
      Dancelab_layoutSprites:
        text: layout [GROUP][0] as a [FORMAT][1]
        options:
          GROUP:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          FORMAT:
            '"border"': border
            '"inner"': inside square
            '"circle"': circle
            '"grid"': grid
            '"row"': row
            '"column"': column
            '"x"': criss-cross
            '"plus"': plus
            '"random"': random
      Dancelab_makeNewDanceSprite:
        text: |-
          make a new [COSTUME][0]
           called [NAME][1] at [LOCATION][2]
        options:
          COSTUME:
            '"ALIEN"': Alien
            '"BEAR"': Bear
            '"CAT"': Cat
            '"DOG"': Dog
            '"DUCK"': Duck
            '"FROG"': Frog
            '"MOOSE"': Moose
            '"PINEAPPLE"': Pineapple
            '"ROBOT"': Robot
            '"SHARK"': Shark
            '"UNICORN"': Unicorn
          LOCATION:
            "{x: 200, y: 100}": top
            "{x: 200, y: 300}": bottom
            "{x: 100, y: 200}": left
            "{x: 300, y: 200}": right
            "{x: 200, y: 200}": center
            "{x: 100, y: 100}": top left
            "{x: 300, y: 100}": top right
            "{x: 100, y: 300}": bottom left
            "{x: 300, y: 300}": bottom right
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": random
      Dancelab_makeNewDanceSpriteGroup:
        text: |-
          make [N][0] new [COSTUME][1]
           in a [LAYOUT][2]
        options:
          'N':
            '2': '2'
            '3': '3'
            '4': '4'
            '5': '5'
            '6': '6'
            '7': '7'
            '8': '8'
            '9': '9'
            '10': '10'
            '11': '11'
            '12': '12'
            '13': '13'
            '14': '14'
            '15': '15'
            '16': '16'
            '17': '17'
            '18': '18'
            '19': '19'
            '20': '20'
          COSTUME:
            '"ALIEN"': Aliens
            '"BEAR"': Bears
            '"CAT"': Cats
            '"DOG"': Dogs
            '"DUCK"': Ducks
            '"FROG"': Frogs
            '"MOOSE"': Moose
            '"PINEAPPLE"': Pineapples
            '"ROBOT"': Robots
            '"SHARK"': Sharks
            '"UNICORN"': Unicorns
          LAYOUT:
            '"border"': border
            '"inner"': inside square
            '"circle"': circle
            '"grid"': grid
            '"row"': row
            '"column"': column
            '"x"': criss-cross
            '"plus"': plus
            '"random"': random
      Dancelab_mixColors:
        text: mix [COLOR1][0] and [COLOR2][1]
      Dancelab_nMeasures:
        text: "[N][0] measures"
      Dancelab_onPointerDown:
        text: on pointer down
      Dancelab_onPointerDrag:
        text: on pointer drag
      Dancelab_onPointerUp:
        text: on pointer up
      Dancelab_randomColor:
        text: random color
      Dancelab_setBackground:
        text: set background color [COLOR][0]
      Dancelab_setBackgroundEffect:
        text: |-
          set background effect
          [EFFECT][0] [PALETTE][1]
        options:
          EFFECT:
            '"none"': None
            ? "['circles','color_cycle', 'diamonds', 'disco_ball', 'fireworks', 'swirl', 'kaleidoscope', 'lasers', 'splatter', 'rainbow', 'snowflakes', 'text', 'galaxy', 'sparkles', 'spiral', 'disco', 'stars'][randomInt(0,16)]"
            : "(Random)"
            '"circles"': Circles
            '"color_cycle"': Colors
            '"diamonds"': Diamonds
            '"disco_ball"': Disco Ball
            '"fireworks"': Fireworks
            '"swirl"': Hypno
            '"kaleidoscope"': Kaleidoscope
            '"lasers"': Laser Dance Floor
            '"splatter"': Paint Splatter
            '"rainbow"': Rainbow
            '"snowflakes"': Snow
            '"text"': Song Names
            '"galaxy"': Space
            '"sparkles"': Sparkles
            '"spiral"': Spiral
            '"disco"': Squares
            '"stars"': Stars
          PALETTE:
            '"rave"': Black and White
            '"cool"': Cool
            '"electronic"': Electronic
            '"iceCream"': Ice Cream
            '"default"': Light
            '"neon"': Neon
            '"tropical"': Tropical
            '"vintage"': Vintage
            '"warm"': Warm
      Dancelab_setBackgroundEffectWithPalette:
        text: |-
          set background effect
          [EFFECT][0] [PALETTE][1]
        options:
          EFFECT:
            '"none"': None
            '"rand"': "(Random)"
            '"circles"': Circles
            '"color_cycle"': Colors
            '"diamonds"': Diamonds
            '"disco_ball"': Disco Ball
            '"fireworks"': Fireworks
            '"swirl"': Hypno
            '"kaleidoscope"': Kaleidoscope
            '"lasers"': Laser Dance Floor
            '"splatter"': Paint Splatter
            '"rainbow"': Rainbow
            '"snowflakes"': Snow
            '"text"': Song Names
            '"galaxy"': Space
            '"sparkles"': Sparkles
            '"spiral"': Spiral
            '"disco"': Squares
            '"stars"': Stars
          PALETTE:
            '"rave"': Black and White
            '"cool"': Cool
            '"electronic"': Electronic
            '"iceCream"': Ice Cream
            '"default"': Light
            '"neon"': Neon
            '"tropical"': Tropical
            '"vintage"': Vintage
            '"warm"': Warm
      Dancelab_setDanceSpeed:
        text: set [SPRITE][0] dance speed to [SPEED][1]
        options:
          SPEED:
            '1': normal
            '2': fast
            '4': very fast
            '0.5': slow
            '0.25': very slow
      Dancelab_setDanceSpeedEach:
        text: set [GROUP][0] dance speed to [SPEED][1]
        options:
          GROUP:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          SPEED:
            '1': normal
            '2': fast
            '4': very fast
            '0.5': slow
            '0.25': very slow
      Dancelab_setForegroundEffect:
        text: set foreground effect [EFFECT][0]
        options:
          EFFECT:
            '"none"': None
            ? "['bubbles', 'confetti', 'hearts_red', 'music_notes', 'pineapples', 'pizzas', 'smiling_poop', 'rain', 'floating_rainbows', 'smile_face', 'spotlight', 'color_lights', 'raining_tacos'][randomInt(0,12)]"
            : "(Random)"
            '"bubbles"': Bubbles
            '"confetti"': Confetti
            '"hearts_red"': Hearts
            '"music_notes"': Music Notes
            '"pineapples"': Pineapples
            '"pizzas"': Pizzas
            '"smiling_poop"': Poop
            '"rain"': Rain
            '"floating_rainbows"': Rainbows
            '"smile_face"': Smiles
            '"spotlight"': Spotlight
            '"color_lights"': Stage Lights
            '"raining_tacos"': Tacos
      Dancelab_setForegroundEffectExtended:
        text: set foreground effect [EFFECT][0]
        options:
          EFFECT:
            '"none"': None
            '"rand"': "(Random)"
            '"bubbles"': Bubbles
            '"confetti"': Confetti
            '"hearts_red"': Hearts
            '"music_notes"': Music Notes
            '"pineapples"': Pineapples
            '"pizzas"': Pizzas
            '"smiling_poop"': Poop
            '"rain"': Rain
            '"floating_rainbows"': Rainbows
            '"smile_face"': Smiles
            '"spotlight"': Spotlight
            '"color_lights"': Stage Lights
            '"raining_tacos"': Tacos
      Dancelab_setProp:
        text: 'set [SPRITE][0] [PROPERTY][1] to [VAL][2] '
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"tint"': tint
      Dancelab_setPropEach:
        text: set [GROUP][0] [PROPERTY][1] to [VAL][2]
        options:
          GROUP:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"tint"': tint
      Dancelab_setPropRandom:
        text: randomize [SPRITE][0] [PROPERTY][1]
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"tint"': tint
      Dancelab_setTint:
        text: set [SPRITE][0] tint to [VAL][1]
      Dancelab_setTintEach:
        text: set [THIS][0] tint to [VAL][1]
        options:
          THIS:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
      Dancelab_setTintInline:
        text: set [SPRITE][0] tint to [VAL][1]
      Dancelab_setVisible:
        text: set [SPRITE][0] visible to [VISIBILITY][1]
        options:
          VISIBILITY:
            'true': visible
            'false': invisible
      Dancelab_setVisibleEach:
        text: set [THIS][0] visibility to [VISIBILITY][1]
        options:
          THIS:
            sprites: all
            '"ALIEN"': all aliens
            '"BEAR"': all bears
            '"CAT"': all cats
            '"DOG"': all dogs
            '"DUCK"': all ducks
            '"FROG"': all frogs
            '"MOOSE"': all moose
            '"PINEAPPLE"': all pineapples
            '"ROBOT"': all robots
            '"SHARK"': all sharks
            '"UNICORN"': all unicorns
          VISIBILITY:
            'true': visible
            'false': invisible
      Dancelab_startMapping:
        text: "[SPRITE][0] begins [PROPERTY][1] following [RANGE][2]"
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"tint"': tint
          RANGE:
            '"bass"': bass
            '"mid"': mid
            '"treble"': treble
      Dancelab_stopMapping:
        text: "[SPRITE][0] stops [PROPERTY][1] following [RANGE][2]"
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
            '"rotation"': rotation
            '"x"': horizontal position
            '"y"': vertical position
            '"direction"': movement direction
            '"tint"': tint
          RANGE:
            '"bass"': bass
            '"mid"': mid
            '"treble"': treble
      Dancelab_whenKey:
        text: when [KEY][0] pressed
        options:
          KEY:
            '"up"': up
            '"left"': left
            '"down"': down
            '"right"': right
            '"space"': space
            '"enter"': enter
            '"a"': a
            '"b"': b
            '"c"': c
            '"d"': d
            '"e"': e
            '"f"': f
            '"g"': g
            '"h"': h
            '"i"': i
            '"j"': j
            '"k"': k
            '"l"': l
            '"m"': m
            '"n"': 'n'
            '"o"': o
            '"p"': p
            '"q"': q
            '"r"': r
            '"s"': s
            '"t"': t
            '"u"': u
            '"v"': v
            '"w"': w
            '"x"': x
            '"y"': 'y'
            '"z"': z
            '"0"': '0'
            '"1"': '1'
            '"2"': '2'
            '"3"': '3'
            '"4"': '4'
            '"5"': '5'
            '"6"': '6'
            '"7"': '7'
            '"8"': '8'
            '"9"': '9'
      Dancelab_whenPeak:
        text: when [RANGE][0] peak
        options:
          RANGE:
            '0': bass
            '1': mid
            '2': treble
      Dancelab_whenSetup:
        text: setup
      Dancelab_whenSetupSong:
        text: 'setup [SONG][0] '
        options:
          SONG:
            '"macklemore90"': Macklemore - Can't Hold Us
            '"hammer"': MC Hammer - U Can't Touch This
            '"peas"': The Black Eyed Peas - I Got a Feeling
      gamelab_add:
        text: add [SPRITE][0] to group [THIS][1]
      gamelab_addBehaviorSimple:
        text: sprite [SPRITE][0] begins [BEHAVIOR][1]
      gamelab_addBehaviorUntil:
        text: sprite [SPRITE][0] begins [BEHAVIOR][1] until [CONDITION][2]
      gamelab_beginBehavior:
        text: begin [BEHAVIOR][0]
      gamelab_bounceOff:
        text: "[SPRITE][0] bounces off of [TARGET][1]"
      gamelab_bounceOffEdges:
        text: "[SPRITE][0] bounces off of edges"
      gamelab_changeColor:
        text: change [COLOR][0] [METHOD][1] by [AMOUNT][2]
        options:
          METHOD:
            '"tint"': tint
            '"tone"': tone
            '"shade"': shade
      gamelab_changeColorBy:
        text: change [COLOR][0] [METHOD][1] by [AMOUNT][2]
        options:
          METHOD:
            '"hue"': hue
            '"saturation"': saturation
            '"brightness"': brightness
      gamelab_changePropBy:
        text: change [SPRITE][0] [PROPERTY][1] by [VAL][2]
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      gamelab_clickedOn:
        text: when [SPRITE][0] clicked
      gamelab_comment:
        text: 'comment: [COMMENT][0]'
      gamelab_console.log:
        text: log message [MESSAGE][0]
      gamelab_createNewSprite:
        text: "make a new sprite \n called [NAME][0] \n with costume [COSTUME][1] \n at [LOCATION][2]"
      gamelab_debugSprite:
        text: debug [SPRITE][0] [VAL][1]
        options:
          VAL:
            'true': 'true'
            'false': 'false'
      gamelab_destroy:
        text: remove [THIS][0]
      gamelab_displace:
        text: "[THIS][0] blocks [SPRITE][1] from moving"
      gamelab_distance:
        text: distance from [LOCATION1][0] to [LOCATION2][1]
      gamelab_draggable:
        text: being draggable
      gamelab_edgesDisplace:
        text: edges block [SPRITE][0] from moving
      gamelab_enableDebug:
        text: enable debugging
      gamelab_eval:
        text: eval [CODE][0]
      gamelab_firstTouched:
        text: first touched sprite
      gamelab_forEachSpriteWithCostume:
        text: |-
          for each [VALUE][0] sprite
           do [STATEMENT][1]
      gamelab_getAnim:
        text: "[SPRITE][0] [COSTUME][1]"
        options:
          COSTUME:
            '"costume"': costume
      gamelab_getDirection:
        text: "[SPRITE][0] movement direction"
      gamelab_getFrameDelay:
        text: "[THIS][0] frame delay"
      gamelab_getProp:
        text: "[SPRITE][0] [PROPERTY][1]"
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
      gamelab_groupLength:
        text: number of sprites in [THIS][0]
      gamelab_hasBehavior:
        text: "[SPRITE][0] is currently [BEHAVIOR][1]"
      gamelab_hideTitleScreen:
        text: hide title screen
      gamelab_hsbColor:
        text: |-
          HSB color
           H[HUE][0]S[SATURATION][1]B[BRIGHTNESS][2]
      gamelab_isTouching:
        text: "[THIS][0] is touching [TARGET][1]"
      gamelab_isTouchingEdges:
        text: "[SPRITE][0] is touching edges"
      gamelab_joystickDirection:
        text: joystick direction
      gamelab_jumpTo:
        text: "[SPRITE][0] jump to [LOCATION][1]"
      gamelab_keyDown:
        text: key is down [KEY][0]
      gamelab_locationAdd:
        text: "[LOC1][0] [OPERATOR][1] [LOC2][2]"
        options:
          OPERATOR:
            "'plus'": "\\+"
            "'minus'": "\\-"
      gamelab_locationAt:
        text: 'location x: [X][0] y: [Y][1]'
      gamelab_locationConstant:
        text: "[DIR][0]"
        options:
          DIR:
            "'north'": north
            "'south'": south
            "'east'": east
            "'west'": west
      gamelab_locationDelta:
        text: "[DISTANCE][0] pixels [DIR][1] of [LOCATION][2]"
        options:
          DIR:
            "'north'": north
            "'south'": south
            "'east'": east
            "'west'": west
            "'random'": random
      gamelab_locationEast:
        text: east
      gamelab_locationMouse:
        text: mouse location
      gamelab_locationNorth:
        text: north
      gamelab_locationOf:
        text: location of [SPRITE][0]
      gamelab_locationSouth:
        text: south
      gamelab_locationWest:
        text: west
      gamelab_location_picker:
        text: "[LOCATION][0]"
      gamelab_location_variable_get:
        text: location of [VAR][0]
      gamelab_location_variable_set:
        text: set location of [VAR][0] to [VAL][1]
      gamelab_makeNewGroup:
        text: make a new group
      gamelab_mirrorSprite:
        text: "[SPRITE][0] face [DIRECTION][1]"
        options:
          DIRECTION:
            '"right"': right
            '"left"': left
      gamelab_mixColors:
        text: mix [COLOR1][0] and [COLOR2][1]
      gamelab_mouseDown:
        text: mouse is down
      gamelab_mouseLocation:
        text: mouse location
      gamelab_moveDown:
        text: "[THIS][0] move down"
      gamelab_moveForward:
        text: move [SPRITE][0] [DISTANCE][1] pixels forward
      gamelab_moveInDirection:
        text: move [SPRITE][0] [DISTANCE][1] pixels [DIRECTION][2]
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      gamelab_moveInDirection2:
        text: move [SPRITE][0] pixels [DISTANCE][1] toward [DIRECTION][2]
      gamelab_moveLeft:
        text: "[THIS][0] move left"
      gamelab_moveRight:
        text: "[THIS][0] move right"
      gamelab_moveToward:
        text: move [SPRITE][0] distance [DISTANCE][1] toward [TARGET][2]
      gamelab_moveUp:
        text: "[THIS][0] move up"
      gamelab_playSound:
        text: playSound [SOUND][0]
      gamelab_pointInDirection:
        text: point [SPRITE][0] [DIRECTION][1]
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      gamelab_pointToward:
        text: point [SPRITE][0] toward [LOCATION][1]
      gamelab_randColor:
        text: random color
      gamelab_randomColor:
        text: random color
      gamelab_randomLocation:
        text: random location
      gamelab_removeAllBehaviors:
        text: "[SPRITE][0] stops everything"
      gamelab_removeBehaviorSimple:
        text: sprite [SPRITE][0] stops [BEHAVIOR][1]
      gamelab_removeTint:
        text: remove color from [THIS][0]
      gamelab_secondTouched:
        text: second touched sprite
      gamelab_setAnimation:
        text: change [THIS][0] costume to [ANIMATION][1]
      gamelab_setBackground:
        text: set background color [COLOR][0]
      gamelab_setDirection:
        text: set [SPRITE][0] movement direction [DIRECTION][1]
      gamelab_setFrameDelay:
        text: set [THIS][0] frame delay [VAL][1]
      gamelab_setPosition:
        text: move [THIS][0] to the [POSITION][1] position
        options:
          POSITION:
            "{x: 50, y: 50}": top left
            "{x: 200, y: 50}": top center
            "{x: 350, y: 50}": top right
            "{x: 50, y: 200}": center left
            "{x: 200, y: 200}": center
            "{x: 350, y: 200}": center right
            "{x: 50, y: 350}": bottom left
            "{x: 200, y: 350}": bottom center
            "{x: 350, y: 350}": bottom right
            '"random"': random
      gamelab_setProp:
        text: set [SPRITE][0] [PROPERTY][1] to [VAL][2]
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
            '"tint"': tint
      gamelab_setSizes:
        text: set [SPRITE][0] [PROPERTY][1] to [N][2]%
        options:
          PROPERTY:
            '"scale"': size
            '"width"': width
            '"height"': height
      gamelab_setTint:
        text: change color of [THIS][0] to [COLOR][1]
      gamelab_setup:
        text: setup
      gamelab_showTitleScreen:
        text: show title screen [BREAK][0] title [TITLE][1] text [SUBTITLE][2]
      gamelab_spriteCostume:
        text: "[COSTUME][0]"
      gamelab_spriteDirection:
        text: "[DIRECTION][0]"
        options:
          DIRECTION:
            '"North"': North
            '"East"': East
            '"South"': South
            '"West"': West
      gamelab_spriteSay:
        text: sprite [SPRITE][0] say [TEXT][1]
      gamelab_spritesWhere:
        text: sprites where [PROPERTY][0] is [VALUE][1]
        options:
          PROPERTY:
            '"scale"': size
            '"x"': x position
            '"y"': y position
            '"costume"': costume
            '"direction"': movement direction
            '"rotation"': rotation or direction
            '"tint"': tint
      gamelab_spritesWhereFirst:
        text: first [VALUE][0]
      gamelab_spritesWhereGenerator:
        text: sprites where [PROPERTY][0] [OP][1] [VALUE][2]
        options:
          PROPERTY:
            '"scale"': size
            '"x"': x position
            '"y"': y position
            '"costume"': costume
            '"direction"': movement direction
            '"rotation"': rotation or direction
            '"tint"': tint
          OP:
            '"="': "="
            '">"': ">"
            '"<"': "\\<"
      gamelab_spritesWhereLast:
        text: last [VALUE][0]
      gamelab_spritesWhereRandom:
        text: random in group [VALUE][0]
      gamelab_thisBeginsBehaviorSimple:
        text: sprite [SPRITE][0] begins [BEHAVIOR][1]
        options:
          SPRITE:
            abc: this sprite
      gamelab_turn:
        text: "[SPRITE][0] turn [DIRECTION][1] [N][2] degrees"
        options:
          DIRECTION:
            '"right"': right
            '"left"': left
      gamelab_whenDownArrow:
        text: when down arrow pressed
      gamelab_whenJoystick:
        text: when joystick
      gamelab_whenKey:
        text: when [KEY][0] pressed
        options:
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      gamelab_whenLeftArrow:
        text: when left arrow pressed
      gamelab_whenMouseClicked:
        text: when mouse clicked
      gamelab_whenPressedAndReleased:
        text: "when [DIR][0] pressed \n[STATEMENT1][1]when released \n[STATEMENT2][2]"
        options:
          DIR:
            "'up'": up
            "'down'": down
            "'left'": left
            "'right'": right
      gamelab_whenRightArrow:
        text: when right arrow pressed
      gamelab_whenStartAndStopTouching:
        text: |-
          when [SPRITE1][0] starts touching [SPRITE2][1] [STATEMENT1][2]when they stop touching
           [STATEMENT2][3]
      gamelab_whenTouching:
        text: when [SPRITE1][0] touches [SPRITE2][1]
      gamelab_whenTouchingAny:
        text: when [SPRITE][0] touches any [GROUP][1]
      gamelab_whenTrue:
        text: when [CONDITION][0] true
      gamelab_whenUpArrow:
        text: when up arrow pressed
      gamelab_whileDownArrow:
        text: while down arrow pressed
      gamelab_whileJoystick:
        text: while joystick
      gamelab_whileKey:
        text: while [KEY][0] pressed
        options:
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      gamelab_whileLeftArrow:
        text: while left arrow pressed
      gamelab_whileRightArrow:
        text: while right arrow pressed
      gamelab_whileTouching:
        text: while [SPRITE1][0] is touching [SPRITE2][1]
      gamelab_whileUpArrow:
        text: while up arrow pressed
      gamelab_xLocationOf:
        text: x coordinate of [SPRITE][0]
      gamelab_yLocationOf:
        text: y coordinate of [SPRITE][0]
      Mikelab_addBehaviorSimple:
        text: sprite [SPRITE][0] begins [BEHAVIOR][1]
      Mikelab_changeAnim:
        text: set [SPRITE][0]'s to costume to [COSTUME][1]
      Mikelab_changePropBy:
        text: change [PROPERTY][0] of [SPRITE][1] by [VAL][2]
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_checkAnim:
        text: "[SPRITE][0] is a [COSTUME][1]"
      Mikelab_createNewSprite:
        text: "make a new [COSTUME][0] \n called [NAME][1] at [LOCATION][2]"
        options:
          LOCATION:
            "{x: 200, y: 100}": top
            "{x: 200, y: 300}": bottom
            "{x: 100, y: 200}": left
            "{x: 300, y: 200}": right
            "{x: 200, y: 200}": center
            "{x: 100, y: 100}": top left
            "{x: 300, y: 100}": top right
            "{x: 100, y: 300}": bottom left
            "{x: 300, y: 300}": bottom right
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": Random
      Mikelab_destroy:
        text: remove [SPRITE][0]
      Mikelab_displace:
        text: "[TARGET][0] blocks [SPRITE][1] from moving"
      Mikelab_eval:
        text: eval [CODE][0]
      Mikelab_getAnim:
        text: "[SPRITE][0]'s costume"
      Mikelab_getProp:
        text: "[SPRITE][0]'s [PROPERTY][1]"
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_groupChangeAnim:
        text: change [SELECT][0] [COSTUME][1] into [COSTUME2][2]
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupChangePropBy:
        text: change [PROPERTY][0] of [SELECT][1] [COSTUME][2] by [VAL][3]
        options:
          SELECT:
            '"all"': all
            '"this"': this
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_groupCreateNewSprite:
        text: make a new [COSTUME][0] at [LOCATION][1]
        options:
          LOCATION:
            "{x: 200, y: 100}": top
            "{x: 200, y: 300}": bottom
            "{x: 100, y: 200}": left
            "{x: 300, y: 200}": right
            "{x: 200, y: 200}": center
            "{x: 100, y: 100}": top left
            "{x: 300, y: 100}": top right
            "{x: 100, y: 300}": bottom left
            "{x: 300, y: 300}": bottom right
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": Random
      Mikelab_groupDestroy:
        text: remove [SELECT][0] [COSTUME][1]
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupDisplace:
        text: all [COSTUME][0] block [COSTUME2][1] from moving
      Mikelab_groupEdgesDisplace:
        text: edges block [COSTUME][0] from moving
      Mikelab_groupGetProp:
        text: "[SELECT][0] [COSTUME][1]'s [PROPERTY][2]"
        options:
          SELECT:
            '"average"': average
            '"this"': this
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_groupRemoveAllBehaviors:
        text: stop [SELECT][0] [COSTUME][1] behaviors
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupRemoveBehaviorSimple:
        text: "[SELECT][0] [COSTUME][1] stops [BEHAVIOR][2]"
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupRemoveTint:
        text: remove color from [SELECT][0] [COSTUME][1]
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupSetProp:
        text: set [PROPERTY][0] of [SELECT][1] [COSTUME][2] to [VAL][3]
        options:
          SELECT:
            '"all"': all
            '"this"': this
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_groupSetTint:
        text: change color of [SELECT][0] [COSTUME][1] to [COLOR][2]
        options:
          SELECT:
            '"all"': all
            '"this"': this
      Mikelab_groupWhenClickedOn:
        text: when [COSTUME][0] clicked
      Mikelab_groupWhenXTouchesY:
        text: when[COSTUME][0] touches [COSTUME2][1]
      Mikelab_groupWhileClicked:
        text: while clicking on [COSTUME][0]
      Mikelab_groupWhileTouchingAny:
        text: |-
          while[COSTUME][0] is touching [COSTUME2][1]
          [STATEMENT][2]
      Mikelab_hasBehavior:
        text: "[SPRITE][0] is currently [BEHAVIOR][1]"
      Mikelab_ifDanceIs:
        text: |-
          if [SPRITE][0] is doing [DANCE][1]
           [DO1][2] [DO2][3]
        options:
          DANCE:
            MOVES.ClapHigh: Clap High
            MOVES.Clown: Gangnam
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double Down
            MOVES.Drop: Drop
            MOVES.Floss: Floss
            MOVES.Fresh: Fresh
            MOVES.Roll: Body Roll
            MOVES.Kick: Star
            MOVES.ThisOrThat: This or That
            MOVES.Thriller: Zombie
            MOVES.Rest: None
      Mikelab_isAnim:
        text: "[SPRITE][0]'s costume is [COSTUME][1]"
      Mikelab_locationAt:
        text: 'location x: [X][0] y: [Y][1]'
      Mikelab_location_picker:
        text: "[LOCATION][0]"
      Mikelab_randomColor:
        text: random color
      Mikelab_removeAllBehaviors:
        text: sprite[SPRITE][0] stops all behaviors
      Mikelab_removeBehaviorSimple:
        text: sprite [SPRITE][0] stops [BEHAVIOR][1]
      Mikelab_removeTint:
        text: remove color from [SPRITE][0]
      Mikelab_setBG:
        text: set background to [BG][0]
        options:
          BG:
            '"https://studio.code.org/api/v1/animation-library/04L4sdTODkNZF1OHf4qO_I.Al3QP43wA/category_backgrounds/city.png"': city
            '"https://studio.code.org/api/v1/animation-library/UieRK0NBKD3xVHtSJxcUTAuhzLM1D_Hq/category_backgrounds/continuous_grass.png"': continuous grass
            '"https://studio.code.org/api/v1/animation-library/nfgysU3t3P8XnUBAf9LjIy2JTHtdXpTj/category_backgrounds/desert_road.png"': desert road
            '"https://studio.code.org/api/v1/animation-library/4FnSIFL33P0PH_C_DnKOse2QbZCdtaJJ/category_backgrounds/farm_land.png"': farm land
            '"https://studio.code.org/api/v1/animation-library/vrlUwPslp0VK_KJcPQ9OPZNb.Ms5eBL5/category_backgrounds/floating_grass.png"': floating grass
            '"https://studio.code.org/api/v1/animation-library/ZjjFGjO0xNEZGEweTgANloehQrxwIXVM/category_backgrounds/front_of_house.png"': front of house
            '"https://studio.code.org/api/v1/animation-library/1K7z7Kc3EeXsLV693byb0xxoJSJ4Du7e/category_backgrounds/kitchen.png"': 'kitchen '
            '"https://studio.code.org/api/v1/animation-library/4bsf67OUrcX.t1wbIcE_xygGKxOkiQ6f/category_backgrounds/living_room.png"': living room
            '"https://studio.code.org/api/v1/animation-library/cJKusc1WPgWvCvgdwRX1gk8Zk0FggcVj/category_backgrounds/meadow.png"': meadow
            '"https://studio.code.org/api/v1/animation-library/4gC7uWaaRI4aDyrncCFO_wY_67vYhr4C/category_backgrounds/park_view.png"': park view
            '"https://studio.code.org/api/v1/animation-library/5K0h1rGe5ql4J9TdlqggIzGZYzbD38pF/category_backgrounds/pine_trees.png"': pine trees
            '"https://studio.code.org//api/v1/animation-library/WJjQlG1rFhbVmPfcuI_wy6tpwI6mHYnM/category_backgrounds/soccer_field.png"': soccer field
            '"https://studio.code.org/api/v1/animation-library/Thvd6E7yU59nfop.zZKGWKoR8VLZDTq./category_backgrounds/stage.png"': stage
            '"https://studio.code.org/api/v1/animation-library/RblQqWAuW0EkLfYuRVK4LRc0uY_76fvi/category_backgrounds/subway.png"': subway
            '"https://studio.code.org/api/v1/animation-library/ZY0THG5IedwCgmWVIhiPdJH59OORnmgT/category_backgrounds/sun_and_rainbow.png"': sun and rainbow
            '"https://studio.code.org/api/v1/animation-library/_aXeLwM1Ge.ZDVJoON.cAlR3iwhKJJvl/category_backgrounds/sunshine_showers.png"': sunshine showers
            '"https://studio.code.org/api/v1/animation-library/.51KpEhDOyXg4dbDaAnm0dEWLAj1GZwy/category_backgrounds/tennis_court.png"': tennis court
            '"https://studio.code.org/api/v1/animation-library/yatDsUkvGtT_.fSv68qi1d4YJDMHdGnS/category_backgrounds/tree_island.png"': tree island
            '"https://studio.code.org/api/v1/animation-library/INSgmsgsLuIk1Aqp7g72h9nLFez.NX0p/category_backgrounds/underground.png"': underground
      Mikelab_setProp:
        text: set [PROPERTY][0] of [SPRITE][1] to [VAL][2]
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      Mikelab_setTint:
        text: change color of [SPRITE][0] to [COLOR][1]
      Mikelab_showScoreboard:
        text: scoreboard label [LABEL][0] text color [TEXTCOLOR][1] color [COLOR][2] value [VALUE][3] corner [CORNER][4]
        options:
          CORNER:
            '"right"': right
            '"left"': left
      Mikelab_showText:
        text: show text [TEXT][0] [PREPOSITION][1] [SPRITE][2]
        options:
          PREPOSITION:
            '"above"': above
            '"below"': below
      Mikelab_sprite:
        text: new [COSTUME][0] sprite at [LOCATION][1]
        options:
          LOCATION:
            "{x: 200, y: 100}": top
            "{x: 200, y: 300}": bottom
            "{x: 100, y: 200}": left
            "{x: 300, y: 200}": right
            "{x: 200, y: 200}": center
            "{x: 100, y: 100}": top left
            "{x: 300, y: 100}": top right
            "{x: 100, y: 300}": bottom left
            "{x: 300, y: 300}": bottom right
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": Random
      Mikelab_whenClickedOn:
        text: when [SPRITE][0] clicked
      Mikelab_whenKeyPressed:
        text: when [KEY][0] pressed
        options:
          KEY:
            '"up"': up arrow
            '"down"': down arrow
            '"left"': left arrow
            '"right"': right arrow
            '"space"': spacebar
            '"w"': W
            '"a"': A
            '"s"': S
            '"d"': D
      Mikelab_whenKeyReleased:
        text: when [KEY][0] released
        options:
          KEY:
            '"up"': up arrow
            '"down"': down arrow
            '"left"': left arrow
            '"right"': right arrow
            '"space"': spacebar
            '"w"': W
            '"a"': A
            '"s"': S
            '"d"': D
      Mikelab_whenMouseClicked:
        text: when mouse clicked
      Mikelab_whenMouseReleased:
        text: when mouse released
      Mikelab_whenTouchesAny:
        text: when[SPRITE][0] touches any sprite
      Mikelab_whileClicked:
        text: while clicking on[SPRITE][0]
      Mikelab_whileKeyPressed:
        text: while [KEY][0] stays pressed
        options:
          KEY:
            '"up"': up arrow
            '"down"': down arrow
            '"left"': left arrow
            '"right"': right arrow
            '"space"': spacebar
      Mikelab_whileTouchingAny:
        text: |-
          while[SPRITE][0] is touching any sprite
          [STATEMENT][1]
      Mikelab_worldSeconds:
        text: number of seconds
      Mikelab_xLocationOf:
        text: x coordinate of [SPRITE][0]
      Mikelab_yLocationOf:
        text: y coordinate of [SPRITE][0]
      RyanLab_moveForward:
        text: move forward
      RyanLab_readSound:
        text: read with sound
      RyanLab_readToConsole:
        text: read to console
      RyanLab_turnLeft:
        text: turn left
      RyanLab_turnRight:
        text: turn right
      SpriteLab2Beta_spriteSay:
        text: sprite [SPRITE][0] say [TEXT][1] for [SECONDS][2] seconds
      Vector_createSpriteWith:
        text: |-
          create sprite
          do[STATEMENT][0]
      Vector_log:
        text: log message [MESSAGE][0]
      Vector_positionCenter:
        text: center
      Vector_push:
        text: set velocity [VECTOR][0]
      Vector_randomLocation:
        text: random location
      Vector_setColor:
        text: set color to [COLOR][0]
      Vector_setSize:
        text: set width [WIDTH][0] height [HEIGHT][1]
      Vector_teleportTo:
        text: set position [POSITION][0]
      Vector_vectorNorth:
        text: north
      Vector_where:
        text: each sprite where [PROPERTY][0] is [VALUE][1] do[STATEMENT][2]
        options:
          PROPERTY:
            "'shapeColor'": color
      aalab_addBehaviorForDuration:
        text: aalab sprite [SPRITE][0] begins [BEHAVIOR][1] for [SECONDS][2] seconds
      aalab_addBehaviorSimpleFlexible:
        text: aalab sprite [SPRITE][0] begins [BEHAVIOR][1]
      aalab_addBehaviorUntilBoolean:
        text: aalab sprite [SPRITE][0] begins [BEHAVIOR][1] until [CONDITION][2]
      aalab_addToSpriteGroup:
        text: add sprite [SPRITE][0] to group [GROUP][1]
      aalab_allSpritesWithAnimation:
        text: aalab all [ANIMATION][0]
      aalab_changeAnimMike:
        text: set [SPRITE][0]'s to costume to [COSTUME][1]
      aalab_changePropByFlexible:
        text: aalab change [SPRITE][0] [PROPERTY][1] by [VAL][2]
        options:
          PROPERTY:
            '"scale"': size
            '"rotation"': rotation
            '"x"': x position
            '"y"': y position
            '"direction"': movement direction
      aalab_clickedOn:
        text: "[CONDITION][0] [SPRITE][1] clicked"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
      aalab_createNewSprite:
        text: "aalab make a new sprite \n called [NAME][0] \n with costume [COSTUME][1] \n at [LOCATION][2]"
      aalab_createNewSpriteAdvanced:
        text: "make a new sprite called [NAME][0] \n with costume [COSTUME][1] \n at [LOCATION][2]"
      aalab_createNewSpriteAnon:
        text: aalab make new [ANIMATION\_NAME][0] sprite at [LOCATION][1]
      aalab_createNewSpriteAnonReturn:
        text: aalab make new [ANIMATION\_NAME][0] sprite at [LOCATION][1]
      aalab_createPropertyGroup:
        text: |-
          make a new sprite group called [VAR][0]
           of all [COSTUME][1] sprites
      aalab_createSpriteGroup:
        text: make a new sprite group called [VAR][0]
      aalab_getSpritesByName:
        text: any sprite named [NAME][0]
      aalab_getThisSprite:
        text: "[CHOICE][0] sprite"
        options:
          CHOICE:
            '"this"': this
            '"other"': other
      aalab_jumpTo:
        text: "[SPRITE][0] jump to [LOCATION][1]"
      aalab_keyPressed:
        text: "[CONDITION][0] [KEY][1] pressed"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
      aalab_nameStringSay:
        text: "[NAMESTRING][0] says [MESSAGE][1]"
      aalab_prompt:
        text: ask question [MESSAGE][0]
      aalab_removeOneAndAll:
        text: aalab remove [THIS][0]
      aalab_setBG:
        text: set background to [BG][0]
        options:
          BG:
            '"https://studio.code.org/api/v1/animation-library/04L4sdTODkNZF1OHf4qO_I.Al3QP43wA/category_backgrounds/city.png"': city
            '"https://studio.code.org/api/v1/animation-library/UieRK0NBKD3xVHtSJxcUTAuhzLM1D_Hq/category_backgrounds/continuous_grass.png"': continuous grass
            '"https://studio.code.org/api/v1/animation-library/nfgysU3t3P8XnUBAf9LjIy2JTHtdXpTj/category_backgrounds/desert_road.png"': desert road
            '"https://studio.code.org/api/v1/animation-library/4FnSIFL33P0PH_C_DnKOse2QbZCdtaJJ/category_backgrounds/farm_land.png"': farm land
            '"https://studio.code.org/api/v1/animation-library/vrlUwPslp0VK_KJcPQ9OPZNb.Ms5eBL5/category_backgrounds/floating_grass.png"': floating grass
            '"https://studio.code.org/api/v1/animation-library/ZjjFGjO0xNEZGEweTgANloehQrxwIXVM/category_backgrounds/front_of_house.png"': front of house
            '"https://studio.code.org/api/v1/animation-library/1K7z7Kc3EeXsLV693byb0xxoJSJ4Du7e/category_backgrounds/kitchen.png"': 'kitchen '
            '"https://studio.code.org/api/v1/animation-library/4bsf67OUrcX.t1wbIcE_xygGKxOkiQ6f/category_backgrounds/living_room.png"': living room
            '"https://studio.code.org/api/v1/animation-library/cJKusc1WPgWvCvgdwRX1gk8Zk0FggcVj/category_backgrounds/meadow.png"': meadow
            '"https://studio.code.org/api/v1/animation-library/4gC7uWaaRI4aDyrncCFO_wY_67vYhr4C/category_backgrounds/park_view.png"': park view
            '"https://studio.code.org/api/v1/animation-library/5K0h1rGe5ql4J9TdlqggIzGZYzbD38pF/category_backgrounds/pine_trees.png"': pine trees
            '"https://studio.code.org//api/v1/animation-library/WJjQlG1rFhbVmPfcuI_wy6tpwI6mHYnM/category_backgrounds/soccer_field.png"': soccer field
            '"https://studio.code.org/api/v1/animation-library/Thvd6E7yU59nfop.zZKGWKoR8VLZDTq./category_backgrounds/stage.png"': stage
            '"https://studio.code.org/api/v1/animation-library/RblQqWAuW0EkLfYuRVK4LRc0uY_76fvi/category_backgrounds/subway.png"': subway
            '"https://studio.code.org/api/v1/animation-library/ZY0THG5IedwCgmWVIhiPdJH59OORnmgT/category_backgrounds/sun_and_rainbow.png"': sun and rainbow
            '"https://studio.code.org/api/v1/animation-library/_aXeLwM1Ge.ZDVJoON.cAlR3iwhKJJvl/category_backgrounds/sunshine_showers.png"': sunshine showers
            '"https://studio.code.org/api/v1/animation-library/.51KpEhDOyXg4dbDaAnm0dEWLAj1GZwy/category_backgrounds/tennis_court.png"': tennis court
            '"https://studio.code.org/api/v1/animation-library/yatDsUkvGtT_.fSv68qi1d4YJDMHdGnS/category_backgrounds/tree_island.png"': tree island
            '"https://studio.code.org/api/v1/animation-library/INSgmsgsLuIk1Aqp7g72h9nLFez.NX0p/category_backgrounds/underground.png"': underground
      aalab_setVariable:
        text: aalab set [NAME][0] to [VALUE][1]
      aalab_speakerSaysConsole:
        text: "[SPRITE][0] says [MESSAGE][1]"
      aalab_spriteSay:
        text: sprite [SPRITE][0] say [TEXT][1] for [SECONDS][2] seconds
      aalab_whenTouching:
        text: "[CONDITION][0] [SPRITE1][1] touches [SPRITE2][2]"
        options:
          CONDITION:
            '"when"': when
            '"while"': while
      binary_drawBin:
        text: draw binary [BIN][0]
      binary_drawBinScreen:
        text: |-
          draw screen
           [B1][0]
           [B2][1]
           [B3][2]
           [B4][3]
           [B5][4]
           [B6][5]
           [B7][6]
           [B8][7]
      binary_drawDec:
        text: draw decimal [DEC][0]
      binary_drawPixelHere:
        text: set pixel [VAL][0]
        options:
          VAL:
            '0': 'off'
            '1': 'on'
            '"toggle"': toggle
      binary_drawString:
        text: draw string [STR][0]
      binary_goTo:
        text: jump to [LOC][0]
      binary_goToHome:
        text: jump to top left
      binary_gridSize:
        text: set grid size [SIZE][0]
      binary_move:
        text: move [DIR][0]
        options:
          DIR:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
      binary_whenKey:
        text: when [KEY][0] pressed
        options:
          KEY:
            '"up"': up
            '"down"': down
            '"left"': left
            '"right"': right
            '"space"': space
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      craft_ifPath:
        text: |-
          if path [DIR][0]
          [STATEMENT][1]
        options:
          DIR:
            "'ahead'": ahead
            "'right'": to the right
            "'left'": to the left
      craft_ifStandingOn:
        text: |-
          if standing on [TYPE][0]
          [STATEMENT][1]
        options:
          TYPE:
            "'blueCoralBlock'": blue coral
            "'redCoralBlock'": red coral
            "'sand'": sand
            "'wool_blue'": deep water
            "'planksOak'": oak planks
            "'seaLantern'": sea lantern
      craft_ifStandingOnLimit:
        text: |-
          if standing on [TYPE][0]
          [STATEMENT][1]
        options:
          TYPE:
            "'sand'": sand
            "'darkPrismarine'": dark prismarine
            "'seaLantern'": sea lantern
      craft_log:
        text: log message [MESSAGE][0]
      craft_moveForward:
        text: move forward
      craft_placeBlock:
        text: place [blockType][0]
        options:
          blockType:
            '"strippedOak"': stripped oak
            '"strippedDarkOak"': stripped dark oak
            '"stoneBricks"': stone bricks
            '"mossyStoneBricks"': mossy stone bricks
            '"crackedStoneBricks"': cracked stone bricks
            '"decorativeStoneBricks"': decorative stone bricks
            '"blueCoralBlock"': blue coral block
            '"pinkCoralBlock"': pink coral block
            '"magentaCoralBlock"': magenta coral block
            '"redCoralBlock"': red coral block
            '"yellowCoralBlock"': yellow coral block
            '"blueDeadCoralBlock"': blue dead coral block
            '"pinkDeadCoralBlock"': pink dead coral block
            '"magentaDeadCoralBlock"': magenta dead coral block
            '"readDeadCoralBlock"': red dead coral block
            '"yellowDeadCoralBlock"': yellow dead coral block
            '"prismarine"': prismarine
            '"darkPrismarine"': dark prismarine
            '"seaLantern"': sea lantern
            '"packedIce"': packed ice
            '"blueIce"': blue ice
            '"blackConcrete"': black concrete
            '"seaGrass"': sea grass
            '"kelp"': kelp
            '"polishedGranite"': polished granite
      craft_placePrismarine:
        text: place prismarine
      craft_placeTorch:
        text: place torch
      craft_repeatUntilConduit:
        text: |-
          repeat until conduit completed
          [STATEMENT][0]
      craft_repeatUntilGoal:
        text: |-
          repeat until goal
          [STATEMENT][0]
      craft_spawnEntity:
        text: spawn [ENTITY][0]
        options:
          ENTITY:
            '"cod"': cod
            '"dolphin"': dolphin
            '"salmon"': salmon
            '"seaTurtle"': sea turtle
            '"squid"': squid
            '"tropicalFish"': tropical fish
      craft_turn:
        text: turn [DIR][0]
        options:
          DIR:
            right: right ↻
            left: left ↺
