{
  "https://studio.code.org/s/coursee-2021/lessons/1/levels/1": {
    "dsls": {
      "markdown": "# Follow the Algorithm\n\nPlay a game and think about what commands are needed to get the right result.\n"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/2/levels/1": {
    "display_name": "This is Sprite Lab"
  },
  "https://studio.code.org/s/coursee-2021/lessons/2/levels/2": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing will happen.",
              "correct": false,
              "feedback": "Incorrect. The tumbleweed will begin tumbling"
            },
            {
              "text": "The tumbleweed will float to the top of the screen",
              "correct": false,
              "feedback": "Incorrect. The tumbleweed will begin tumbling"
            },
            {
              "text": "The tumbleweed will begin tumbling",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The tumbleweed will blink on and off.",
              "correct": false,
              "feedback": "Incorrect. The tumbleweed will begin tumbling"
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. What will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2021/lessons/2/levels/3": {
    "short_instructions": "Change the tumbleweed into any kind of fish!",
    "long_instructions": "Let's make a fish tank!  \n\nChange the tumbleweed sprite into any kind of fish by clicking [blockly block][0].\n\nBe sure to also update this sprite's costume in [blockly block][1].",
    "teacher_markdown": "This lesson contains a **mini-project** called _Swimming Fish_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Student must have at least one fish sprite with an active behavior.",
    "behavior_names": {
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/2/levels/4": {
    "short_instructions": "Change the fish's behavior so that it swims left and right.",
    "long_instructions": "The fish is getting dizzy! \n\nChange the fish's behavior so that it swims left and right.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Swimming Fish_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Students must have at least one fish sprite with an active behavior.\n-   The fish sprite needs to move left and right. This can be done by changing its behavior to `swimming left and right`.",
    "callouts": {
      "spritelab_comment": "Use this block to leave yourself or your teacher notes about how your code works."
    },
    "behavior_names": {
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/2/levels/5": {
    "short_instructions": "Use the `set background color` block to make the background any color.",
    "long_instructions": "Our fish tank needs some water! \n\nUse [blockly block][0] to make the background any color. We recommend blue!",
    "teacher_markdown": "This lesson contains a **mini-project**. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Student must change the background to something other than white.",
    "behavior_names": {
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/2/levels/6": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/coursee-2021/lessons/2/levels/7": {
    "short_instructions": "The fish is adventurous and wants to meet new creatures in the sea. Add another sprite to the fish tank. This sprite can have any costume other than the one you use for your fish!",
    "long_instructions": "The fish is adventurous and wants to meet new creatures in the sea. Add another sprite to the fish tank. This sprite can have any costume other than the one you use for your fish!",
    "teacher_markdown": "This lesson contains a **mini-project** called _Swimming Fish_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Student must create exactly two unique sprites, and one must be a fish.",
    "behavior_names": {
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/2/levels/8": {
    "short_instructions": "Add a behavior to the fish's new friend.",
    "long_instructions": "What do you want your fish’s new friend to do?\n\nAdd a behavior and watch them go!",
    "teacher_markdown": "This lesson contains a **mini-project** called _Swimming Fish_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Each sprite must have an active behavior.",
    "behavior_names": {
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/2/levels/9": {
    "short_instructions": "Use some new blocks from the toolbox to make your fish tank special!",
    "long_instructions": "We've added a lot of new blocks to the toolbox.   \n\nPlay with them to make your fish tank special!",
    "teacher_markdown": "This lesson contains a **mini-project** called _Swimming Fish_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/coursee-2021/lessons/3/levels/1": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing will happen.",
              "correct": false,
              "feedback": "Incorrect. The alien will begin moving up and down on the screen."
            },
            {
              "text": "The alien will begin patrolling from right to left.",
              "correct": false,
              "feedback": "Incorrect. The alien will begin moving up and down on the screen."
            },
            {
              "text": "The alien will begin moving up and down on the screen.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The alien will disappear off the top of the screen.",
              "correct": false,
              "feedback": "Incorrect. The blue alien will begin moving up and down on the screen."
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. What will happen after you click on the alien?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2021/lessons/3/levels/2": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/coursee-2021/lessons/3/levels/3": {
    "short_instructions": "Replace the behavior block in the `sprite begins` block to a different one that will make the alien start spinning!",
    "long_instructions": "The alien was proud of its dancing skills on Mars, but now it can only move side-to-side.\n\nReplace the behavior block in [blockly block][0] to a different one that will make the alien start spinning!",
    "teacher_markdown": "This lesson contains a **mini-project** called _Alien Dance Moves_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Student must click the sprite after pressing `Run`.\n-   The sprite needs to spin.",
    "behavior_names": {
      "spinning left": "spinning left",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "swimming left and right": "swimming left and right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/3/levels/4": {
    "short_instructions": "Create a new sprite that looks like a different alient. Make the new sprite start any behavior you want when it's clicked.",
    "long_instructions": "Create another sprite that looks like a _different_ alien. [][0] <img src=\"https://studio.code.org/api/v1/animation-library/gamelab/gML8dYrd8SrxAUuLbIjp7o5ghB38oFCc/category_fantasy/alien_06.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/YZJ8zB597zBIgcZIO8zOE0S75e918A2P/category_fantasy/alien_11.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/HrAMVb0UAVU47lc2nT3gCdvX_jYryNLD/category_fantasy/alien_10.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/mj2ti2iXM44mDQz.rcLgzlE_41.J15kR/category_fantasy/alien_03.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/H68UnAuzfpkcmpvQUCSvEU5GnRrjpEmd/category_fantasy/alien_07.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/6CfTmOl4M7ZK4NBT3yGSTvcGtqfnGwlL/category_fantasy/alien_05.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/FYKNgp2UPGiPvHDYlQg1t1zBAMwIy6k4/category_fantasy/alien_12.png\" width=\"3%\"/>\n\nMake the new sprite start any behavior you want when it's clicked. Try using a new move this time!\n\n[blockly block][1]",
    "teacher_markdown": "This lesson contains a **mini-project**. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Student must create a pink alien sprite.\n-   The pink alien sprite must start a behavior when clicked.",
    "behavior_names": {
      "spinning left": "spinning left",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "swimming left and right": "swimming left and right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/3/levels/5": {
    "short_instructions": "Create a third sprite that looks like a yellow alien, make it do a dance when clicked, and set all of your aliens to stand in a horizontal line.",
    "long_instructions": "_Create an alien dance crew!_\n\nMake a third sprite, and have it begin a behavior when clicked.",
    "teacher_markdown": "This lesson contains a **mini-project**. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Students must create three sprites with different costumes.\n-   Each sprite needs to start a behavior when clicked.",
    "behavior_names": {
      "spinning left": "spinning left",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "swimming left and right": "swimming left and right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/3/levels/6": {
    "short_instructions": "Using a \"when up pressed\" event, make it so that when a key is pressed, an alien changes color!",
    "long_instructions": "Let's try using a different kind of event.\n\nThis event is triggered when you press an arrow key: [blockly block][0]\n\nFor this event, make it so that when a key is pressed, one of your aliens changes color!",
    "teacher_markdown": "This lesson contains a **mini-project** called _Alien Dance Moves_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Student must change the color of each of the three alien sprites.",
    "behavior_names": {
      "spinning left": "spinning left",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "swimming left and right": "swimming left and right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/3/levels/7": {
    "short_instructions": "Add an event that makes each alien stop moving after 3 seconds.",
    "long_instructions": "These aliens are running wild! Let's calm them down.\n\nAdd an event that makes each alien stop moving after 5 seconds, using [blockly block][0]!",
    "teacher_markdown": "This lesson contains a **mini-project**. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   All alien sprites must stop their behaviors.",
    "behavior_names": {
      "jittering": "jittering",
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/3/levels/8": {
    "short_instructions": "Make one alien being or stop a behavior when another alien touches it. Use the `when touches` event.",
    "long_instructions": "Fun is contagious!\n\nUse [blockly block][0] to make one alien begin or stop a behavior when another alien touches it.",
    "teacher_markdown": "This lesson contains a **mini-project**. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer!\n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   A sprite needs to begin a new behavior when another sprite touches it.",
    "behavior_names": {
      "jittering": "jittering",
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/3/levels/9": {
    "short_instructions": "Now create your own alien disco!",
    "long_instructions": "Now create your own alien disco! Looking for inspiration? Try these ideas:\n\n-   Create another alien that does another move when clicked.\n-   Make aliens do more dance moves when they touch each other.",
    "teacher_markdown": "This lesson contains a **mini-project**. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/coursee-2021/lessons/4/levels/1": {
    "dsls": {
      "content1": "description here",
      "markdown": "# Super Digital Citizen\n\n## How can we be upstanders when we see cyberbullying?\n"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/5/levels/1": {
    "dsls": {
      "markdown": "# Private and Personal Information\n\n## What information about you is OK to share online?\n"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/6/levels/1": {
    "long_instructions": "<img src=\"https://studio.code.org/api/v1/animation-library/gamelab/uRkXIcSlbIAZ46WKaW.dFu.g3062psWS/category_people/pink_dress_wave.png\" style=\"height:80px\"> _\"Hello, world! My name is Rikki, and here are some things I'd to share about me!\"_\n\n**Explore:** Rikki is using Sprite Lab to create an _interactive poster_ about herself that she can share on the web.  \n\nRikki has given you permission to check out her poster. You can even edit her code! \n\nPlay with Rikki's poster and code for a bit, then click **Finish**.",
    "placeholder_texts": {
      "b63151482630edd1589a9ac24d107c49": "That's me! Rikki! I like to code, hangout with Thuy, and eat ice cream!",
      "810896b14fc6615f0c76628b9b6a727e": "That's my best friend Thuy! She's really good at sports!",
      "8e985f60f328934accd78e7649584840": "Ice cream is my favorite treat!",
      "31ba97bb501bb1f5b448221be09bad32": "That's my corgi, Lollipop! I should teach her how to code!",
      "6f97975a0bda0c9219915161149cbb26": "That's my computer! I code on it ALL the time!"
    },
    "behavior_names": {
      "wobbling": "wobbling",
      "moving with arrow keys": "moving with arrow keys",
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/6/levels/2": {
    "long_instructions": " _\"Rikki here! I'll help you make a cool poster!\"_\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/blockly/media/p5lab/animation-previews/category_people.png\" style=\"height:80px; border-width:1px; border-style:solid; border-color:black; border-radius:10px\">\n<p style=\"text-align: center\">\nPeople\n</p>\n</div>\n\n## Do This\n\n1.  Click the **Costumes** tab at the top-left of your screen (next to **Code**). \n2.  Edit the starting costume, or add a new one that you like. Look for the \"_People_\" category!\n3.  Change the sprite's costume to your own in the code below.\n4.  Set the sprite's size to whatever you like.",
    "teacher_markdown": "This lesson contains a **mini-project**. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "callouts": {
      "": "Click here!"
    },
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/6/levels/3": {
    "long_instructions": " _\"Say something about yourself, and make sure it's SAFE!\"_\n\nUse [blockly block][0] and [blockly block][1] (in the `World` blocks category) to share information about yourself when your sprite is clicked! \n\n**Just be sure the information you share is SAFE.**\n\n* * *\n\n#### Examples of SAFE vs UNSAFE Information\n\n| SAFE                | UNSAFE                |\n| ------------------- | --------------------- |\n| first name          | full name             |\n| favorite things     | home address          |\n| respectful opinions | phone number or email |",
    "teacher_markdown": "This lesson contains a **mini-project** called _Interactive Poster_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "placeholder_texts": {
      "ed076287532e86365e841e92bfc50d8c": "Hello World!"
    },
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/6/levels/4": {
    "long_instructions": " _\"Add more sprites to your poster! Don't forget to give them costumes!\"_\n\nAdd **at least two** other sprites to your poster. Give each sprite a unique costume!",
    "teacher_markdown": "This lesson contains a **mini-project** called _Interactive Poster_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Student must create at least three sprites.",
    "placeholder_texts": {
      "ed076287532e86365e841e92bfc50d8c": "Hello World!"
    },
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/6/levels/5": {
    "long_instructions": " _\"Tell the world more about yourself through your new sprites!\"_\n\nMake your other sprites print information when they are clicked. Be sure whatever you share is SAFE!",
    "teacher_markdown": "This lesson contains a **mini-project** called _Interactive Poster_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "placeholder_texts": {
      "ed076287532e86365e841e92bfc50d8c": "Hello World!",
      "6ae99d4d2de5e3cbd29fec87ae7d76eb": "Hey!"
    },
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/6/levels/6": {
    "short_instructions": "Keep going! Try adding more features to your poster to make it even better. ",
    "long_instructions": " _\"Wow! Your poster is so cool!\"_\n\nThis is your project, so keep going! Here are a few ideas to make your poster even better:\n\n-   Add a background. Choose a background that fits your poster.\n-   Add behaviors. Make each of your sprites react differently when clicked.\n-   Add more events. Use the other blocks in the **Events** blocks category.\n-   Add sounds.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Interactive Poster_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/coursee-2021/lessons/7/levels/1": {
    "dsls": {
      "markdown": "# Digital Sharing\n\nIn this lesson you'll consider the challenges and benefits of respecting ownership and copyright, particularly in digital environments.\n"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/levels/2": {
    "short_instructions": "Play with the blocks in the toolbox to see what they do!",
    "long_instructions": "_\"Hi, I'm an artist. You can write code to make me draw almost anything.\"_\n\nPlay with the blocks in the toolbox to see what they do!"
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/levels/3": {
    "short_instructions": "Drag blocks onto the screen to have the artist draw over the grey lines in the picture. (Each line is 100 pixels long)",
    "long_instructions": "_\"Let's make a cage for my pet monster!\"_\n\nDrag blocks onto the screen to have the artist draw over the grey lines in the picture.\\\n(Each line is 100 pixels long)",
    "authored_hints": {
      "courseC_artist_prog2_a": "_\"If you use the [blockly block][0] block, I will draw a line.\"_",
      "courseC_artist_prog2_b": "Having trouble turning the corner? Use the [blockly block][0] block."
    },
    "callouts": {
      "slider": "You can slow your program down here."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/levels/5": {
    "short_instructions": "Each side of the inner square is 100 pixels and all of the angles are 90 degrees.",
    "long_instructions": "_\"This spaceship needs a window!\"_\n\nEach side of the inner square is 100 pixels and all of the angles are 90 degrees.",
    "authored_hints": {
      "courseC_artist_prog3_a": "To create this window, just draw a square with 100 pixel sides.\n\n-   move forward\n-   turn\n-   move forward\n-   turn\n-   move forward\n-   turn\n-   move forward",
      "courseC_artist_prog3_b": "Want to make shorter code? Try using a loop in this puzzle."
    },
    "function_definitions": {
      "draw flame": {
        "name": "draw flame",
        "parameters": {
          "x": "x"
        }
      },
      "draw fire": {
        "name": "draw fire"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/levels/6": {
    "short_instructions": "Finish Starla's rocket so she can chase her pet.",
    "long_instructions": "_\"Oh no!  Starla's pet alien just flew away! Let's help the spacewoman!\"_\n\nFinish Starla's rocket so she can chase her pet.\\\n(Each side of the triangle is 100 pixels long and has 120 degree outer angles.)",
    "authored_hints": {
      "courseC_artist_prog4_a": "To finish the rocket, just draw the triangle on top!",
      "courseC_artist_prog4_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
      "courseC_artist_prog4_c": "To draw a triangle, you will want to:\n\n-   move forward\n-   turn left 120 degrees\n-   move forward\n-   turn left 120 degrees\n-   move forward"
    },
    "function_definitions": {
      "booster": {
        "name": "booster"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/levels/7": {
    "display_name": "Pet Name Tag",
    "bubble_choice_description": "This pet's name tag is a special shape!",
    "short_instructions": "**Challenge:** This pet's name tag is a special shape!  This pet's name tag is a special shape!",
    "long_instructions": "**Challenge:** This pet's name tag is a special shape!  \n\nCan you figure out how to draw the outline?\\\n(The long side is 150 pixels and each of the short sides are 75 pixels.)",
    "authored_hints": {
      "courseC_artist_prog7_a": "Every angle is either 45 or 90 degrees.",
      "courseC_artist_prog7_b": "Does it work at the first step?\\\nHow about the second?\\\nWhere does it go wrong?",
      "courseC_artist_prog7_c": "You can use the dropdown menu on the turn blocks to see which angle you need!",
      "courseC_artist_prog7_d": "You will want to:\n\n-   move forward\n-   turn right 45 degrees\n-   move forward\n-   turn right 90 degrees\n-   move forward\n-   turn right 45 degrees\n\nRepeat this pattern 2 times!",
      "courseC_artist_prog7_e": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/levels/8": {
    "display_name": "Star",
    "bubble_choice_description": "Create this star pattern by looping a sequence",
    "short_instructions": "Create this star pattern by looping a sequence of \"move forward\" and \"turn right by 144 degrees\" blocks.",
    "long_instructions": "You can create this star by looping a sequence of `move forward` and `turn right by 144 degrees` blocks."
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/levels/9": {
    "short_instructions": "Use loops to draw this staircase.",
    "long_instructions": "Loops sure make writing code easier!\n\nUse loops to draw this staircase.\n\n-   Each stairstep is 50 pixels long and 50 pixels tall\n-   You will need to turn 90 degrees in each direction"
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/levels/10": {
    "short_instructions": "Edit your loop to draw this staircase.",
    "long_instructions": "This staircase is much bigger, but it takes the same amount of code as the last puzzle!\n\nFix this loop to complete the puzzle."
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/levels/11": {
    "display_name": "Octagon",
    "bubble_choice_description": "Look for a pattern and make this code shorter using loops.",
    "short_instructions": "Look for a pattern and make this code shorter using loops.",
    "long_instructions": "**Challenge:** Look for a pattern and make this code shorter using loops."
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/extras?level_name=courseC_artist_prog_challenge1_2021": {
    "display_name": "Pet House",
    "bubble_choice_description": "Draw rooms for each of the animals. ",
    "short_instructions": "Draw rooms for each of the animals. ",
    "long_instructions": "Draw rooms for each of the animals. There are many different ways to solve this puzzle, so have some fun! Each square has a side length of 100 pixels.",
    "authored_hints": {
      "courseC_artist_prog_challenge1_a": "You can draw this as a rectangle with a line in the middle or two different squares!"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/8/extras?level_name=courseC_artist_prog_challenge2a_2021": {
    "display_name": "Road",
    "bubble_choice_description": "Help me paint the yellow lines on this road!",
    "short_instructions": "_\"Help me paint the yellow lines on this road!\"_",
    "long_instructions": "_\"Help me paint the yellow lines on this road!\"_\n\nThe three line segments have lengths of 150, 100, and 200 pixels!",
    "authored_hints": {
      "courseC_artist_prog_challenge2_a": "After you draw the first line, turn left before you draw your second line.",
      "courseC_artist_prog_challenge2_b": "After you draw the second line, turn right before you draw your third line."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/1": {
    "short_instructions": "Draw a triangle to kickstart this stage.\\\n(Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)",
    "authored_hints": {
      "courseD_artist_nestedLoops1_a": "The easiest way to draw this is to move forward and use right turns.",
      "courseD_artist_nestedLoops1_b": "You can draw this triangle with a `repeat` loop with two blocks inside. Which blocks do you need?",
      "courseD_artist_nestedLoops1_c": "Try writing the steps on paper and looking for patterns that can be simplified with loops."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/2": {
    "short_instructions": "Now loop the triangle 6 times. ",
    "long_instructions": "Now loop the triangle 6 times. \n\nAfter each triangle, you'll need to turn 60 degrees before drawing the next. ",
    "authored_hints": {
      "courseD_artist_nestedLoops1a_a": "You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.\n\n[][0]",
      "courseD_artist_nestedLoops1a_b": "If you create your triangle with a loop, the artist should be facing the same way as they started. This will make the 60 degree turns a lot easier.",
      "courseD_artist_nestedLoops1a_c": "If you want colors, use the `set color` block in your code. You don't have to match the colors in the template image."
    },
    "callouts": {
      "courseD_artist_nestedLoops1a_1": "You don't have to use colors to get this puzzle right. If you want to, this `random color` block makes it easy!"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/4": {
    "short_instructions": "This time, complete the puzzle with the fewest number of blocks possible.",
    "long_instructions": "This time, complete the puzzle with the fewest number of blocks possible.\n\nAfter each triangle, you'll need to turn 60 degrees before drawing the next.\nSee how much easier this is with **nested loops**?",
    "authored_hints": {
      "courseD_artist_nestedLoops2_a": "Nest your loops by surrounding your triangle code with another `repeat` loop.",
      "courseD_artist_nestedLoops2_b": "Remember to put the `turn` block inside of the loop so that the artist turns after each triangle."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/5": {
    "short_instructions": "Use your new skills to quickly draw the last row of windows for this building.\n\nThe windows are 20 pixel squares, each 20 pixels apart.",
    "authored_hints": {
      "courseD_artist_nestedLoops3_a": "Try using the `jump forward` block to get from the top of one square to the place where you will start the next. \n\nIf your squares are 20 pixels tall and they are 20 pixels apart, how far do you need to jump?",
      "courseD_artist_nestedLoops3_b": "Don't forget to use a nested loop to solve this puzzle quickly. ",
      "courseD_artist_nestedLoops3_c": "Start by using a `repeat` loop to make one square.  Next, repeat that square 8 times, jumping 40 pixels in between. "
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/6": {
    "short_instructions": "Great!  Do the same thing with these circles.",
    "long_instructions": "Great!  Do the same thing with these circles. \n\n-   Each circle is made by moving 1 pixel before turning 1 degree, 360 times.\n-   Each circle begins just 50 pixels from where the last one ended",
    "authored_hints": {
      "courseD_artist_nestedLoops4_d": "To solve this correctly, you'll need to move **before** you turn, or else your circles will be off by the tiniest little amount!",
      "courseD_artist_nestedLoops4_a": "To make a circle:\n\n-   Repeat 360 times\n    -   Move forward 1 pixel\n    -   Turn left 1 degree",
      "courseD_artist_nestedLoops4_b": "Don't forget to jump forward by 50 pixels between circles.",
      "courseD_artist_nestedLoops4_c": "Use a nested loop to draw your circles 4 times."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/7": {
    "short_instructions": "What happens if you also turn 90 degrees between circles?",
    "long_instructions": "What happens if you also turn 90 degrees between circles?\n\n(To get this image, you still need to jump 50 pixels between circles)",
    "authored_hints": {
      "courseD_artist_nestedLoops5_a": "To do this easily:\n\n-   repeat 4 times\n    -   make a circle\n    -   jump forward 50 pixels\n    -   turn right 90 degrees",
      "courseD_artist_nestedLoops5_b": "To make a circle you'll need to set a repeat loop to repeat 360 times. Inside the loop, move forward 1 pixel and turn by 1 degree."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/8": {
    "short_instructions": "Use what you've learned to make this drawing.",
    "long_instructions": "Use what you've learned to make this drawing.\n\n-   The squares each have **100 pixel sides** and **90 degree angles**\n-   You will need to turn **60 degrees between each square**. Why? Because there are 6 squares, and 360 degrees (a full turn around) divided by 6 is 60 degrees.\n-   Make sure you jump **50 pixels to get to the next square**",
    "authored_hints": {
      "courseD_artist_nestedLoops7_a": "You'll need to use nested loops here. First, use a loop to draw a square. What will the outer loop do if the inner loop draws a square?",
      "courseD_artist_nestedLoops7_b": "Use a nested loop, where the inner loop is the code for a square.\n\n-   repeat 6 times\n    -   make square\n    -   jump forward by **50 pixels**\n    -   turn **60 degrees**"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/9": {
    "short_instructions": "Using what you have learned in the last couple of puzzles, build this image from the beginning.",
    "long_instructions": "Using what you have learned in the last couple of puzzles, build this image from the beginning.\n\n-   Each hexagon has **50 pixel sides** and **60 degree turns**",
    "authored_hints": {
      "courseD_artist_nestedLoops8_a": "To have 8 hexagons in your drawing, you'll need to turn **45 degrees** between each of them. Why? Because 360 degrees (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.",
      "courseD_artist_nestedLoops8_b": "If you're stuck, start by looking at the last puzzle, then change the things that are different.",
      "courseD_artist_nestedLoops8_c": "Use a nested loop:\n\n-   Repeat 8 times\n    -   draw a hexagon\n    -   jump forward 50 pixels\n    -   turn right 45 degrees"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/10": {
    "short_instructions": "**Challenge:** Can you figure out how to make a picture like this?",
    "long_instructions": "**Challenge:** Can you figure out how to make a picture like this?\n\n-   Both shapes have **50 pixel sides**\n-   Between each pair of shapes, you will need to jump forward the length of a side, and turn 45 degrees.",
    "authored_hints": {
      "courseD_artist_nestedLoops9_a": "Start by using a nested loop like you had before, but this time, make it with squares.",
      "courseD_artist_nestedLoops9_b": "Add a second set of nested loops to the end of the first set, but this time use triangles.",
      "courseD_artist_nestedLoops9_c": "Use two nested loops:\n\n-   Repeat 8 times\n    -   draw a square\n    -   jump forward 50 pixels\n    -   turn right by 45 degrees\n-   Repeat 8 times\n    -   draw a triangle\n    -   jump forward 50 pixels\n    -   turn right by 45 degrees"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/11": {
    "short_instructions": "Take the squares from before, but this time only make 7 of them, and lay them out in a row."
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/12": {
    "short_instructions": "**Challenge:** Can you figure out how to make a picture like this?",
    "long_instructions": "**Challenge:** Can you figure out how to make a picture like this?\n\n-   Both shapes have 50 pixel sides",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "A",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "B",
              "correct": false,
              "feedback": "Incorrect.  The inner loop makes a pentagon, and the outer loop repeats it 4 times in a circle."
            },
            {
              "text": "C",
              "correct": false,
              "feedback": "Incorrect.  The inner loop makes a pentagon, and the outer loop repeats it 4 times in a circle."
            },
            {
              "text": "None of the above",
              "correct": false,
              "feedback": "Incorrect.  The inner loop makes a pentagon, and the outer loop repeats it 4 times in a circle."
            }
          ],
          "markdown": "<table>\n<tr><td>A</td><td><img src=\"https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png\" width=\"100px\" style=\"mix-blend-mode: multiply;\"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src=\"https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png\" width=\"100px\" style=\"mix-blend-mode: multiply;\"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src=\"https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png\" width=\"80px\" style=\"mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);\"/></td></tr>\n</table>\n\n<br/><br/>\n\n",
          "questions": [
            {
              "text": "Take a good look at the code below. Which drawing will this program make when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/levels/13": {
    "short_instructions": "Now it's your turn.  Take the skills you have learned and make something that you love!",
    "long_instructions": "Now it's your turn.  Take the skills you have learned and make something that you love!\n\nNeed an idea?  Try to make one of these:\n\n[expandable][0]\n[expandable][1]\n[expandable][2]",
    "authored_hints": {
      "courseD_artist_nestedLoopsFP_a": "<img src=\"https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png\" width=\"200px\"/>\n\nThis image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.",
      "courseD_artist_nestedLoopsFP_b": "<img src=\"https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png\" width=\"200px\"/>\n\nThis image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).",
      "courseD_artist_nestedLoopsFP_c": "<img src=\"https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png\" width=\"200px\"/>\n\nThis image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/extras?level_name=courseD_artist_nestedLoops_challenge1_2021": {
    "short_instructions": "Can you figure out how to make a picture like this?",
    "long_instructions": "Can you figure out how to make a picture like this?\n\n-   Both shapes have **50 pixel sides.**\n-   The _octagons_ are made with **45 degree** turns.\n-   The _triangles_ are made with **120 degree** turns.",
    "authored_hints": {
      "courseD_artist_nestedLoops_challenge1_a": "Start by changing the color to blue, then create an octagon with 50 pixel sides and 45 degree left turns.",
      "courseD_artist_nestedLoops_challenge1_b": "Add the code to change the color to green, and make a triangle with 50 pixel sides and 120 degree left turns.",
      "courseD_artist_nestedLoops_challenge1_c": "After you've drawn both shapes, you will need to jump forward by 50 pixels before you turn right by 90 degrees.",
      "courseD_artist_nestedLoops_challenge1_d": "Put all of your code inside of a `repeat 4 times` loop to finish it off."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/9/extras?level_name=courseD_artist_nestedLoops_challenge2_2021": {
    "short_instructions": "Fix the code to make this picture!",
    "long_instructions": "This code is just a little bit off!  Can you fix it to make the correct drawing in the workspace?\n\n-   The first inner loop should make an octagon.\n-   The second inner loop should make a hexagon.\n-   The third inner loop should make a square.",
    "authored_hints": {
      "courseD_artist_nestedLoops_challenge2_a": "To draw a regular octagon, the artist needs to turn 45 degrees 8 times.",
      "courseD_artist_nestedLoops_challenge2_b": "To draw a square, the artist needs to turn 90 degrees 4 times."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/10/levels/1": {
    "short_instructions": "Draw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  ",
    "long_instructions": "[][0] _“Hi, I’m Elsa of Arendelle, help me draw a shape.”_\n\nDraw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  \n\n<hr/>\n\nYou can try making a polygon, like one of these:\\\n[][1]\n[][2]\n[][3]  \n\nOr even an abstract shape, like one of these:\\\n[][4]\n[][5]\n[][6]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Snowflake #1_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
      "courseD_artist_project1_b": "Remember that `move forward` draws a line, while `jump forward` does not."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/10/levels/2": {
    "short_instructions": "Now take your shape and draw two or three in a row!",
    "long_instructions": "[][0] _“Now, let’s draw more than one.”_\n\nNow take your shape and draw two or three in a row by jumping forward some number of pixels.  \n\n-   If you jump forward by **less** than the width of your shape, they might overlap\n-   If you jump forward by **more** than the width of your shape, you will get a gap\n\n<hr/>\n\nYour row might end up straight like with these:\n\n[][1]\n[][2]\n[][3]\n<br/>  <br/>\n\nOr, your shapes might move around like one of these: \n\n[][4]\n[][5]\n[][6]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Snowflake #1_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseD_artist_project2_a": "Remember that `move forward` draws a line, while `jump forward` does not.",
      "courseD_artist_project2_b": "After you draw and move the first time, you can repeat the code by adding a loop around the outside."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/10/levels/3": {
    "short_instructions": "Let's spin that line of shapes around!",
    "long_instructions": "[][0] _\"Let’s make it into a snowflake.\"_\n\nNext, jump Elsa back to the center using the `jump to 200 over and 200 down` block, and spin her around to draw the line of shapes again and again in a bunch of different directions.\n\nWhat amazing snowflakes you can make!\n\n* * *\n\nTake a look at these examples with polygons:\\\n[][1]\n[][2]\n[][3]\n\nAbstract shapes might make a snowflake more like one of these:\\\n[][4]\n[][5]\n[][6]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Snowflake #1_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseD_artist_project3_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
      "courseD_artist_project3_b": "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n-   Try 72 degrees if you are repeating the outer loop 5 times\n-   Try 60 degrees if you are repeating the outer loop 6 times"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/10/levels/4": {
    "short_instructions": "Time to layer those shapes!",
    "long_instructions": "[][0] _\"What happens if we draw snowflakes on top of each other?\"_\n\nTry layering two different shapes of snowflakes on top of one another with a little turn in between - see what you get! ",
    "teacher_markdown": "This lesson contains a **mini-project** called _Snowflake #1_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseD_artist_project4_a": "Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:\n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" />\n\nHere's a set of hexagons with squares:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" />",
      "courseD_artist_project4_b": "To try this, draw your first snowflake, turn, then draw a second snowflake."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/10/levels/5": {
    "short_instructions": "Play with the snowflakes!",
    "long_instructions": "[][0] _\"Get creative with shapes and angles to see what kind of new snowflakes we can draw!\"_",
    "teacher_markdown": "This lesson contains a **mini-project** called _Snowflake #1_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! ",
    "authored_hints": {
      "courseD_artist_project4_a": "Lines of 2 hexagons and 4 triangles:\n\n<img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/10/levels/6": {
    "short_instructions": "Draw a stair-step pattern that uses turns between 75 and 105 degrees.",
    "long_instructions": "[][0] _\"Let’s try something new. This time, skate in a zig-zag.\"_\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" style=\"float: left; margin: 0 15px 15px 0;\" />\n\nDraw a stair-step pattern that uses turns between 75 and 105 degrees -- but make sure that your left and right turns use the same angle.\\\n(You will see why later.)",
    "teacher_markdown": "This lesson contains a **mini-project** called _Snowflake #2_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseD_artist_project1a_a": "This stair step uses a 76 degree turn and repeats 4 times.\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" />",
      "courseD_artist_project1a_b": "These patterns are a lot like the stair steps from other puzzles, but using a different angle."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/10/levels/7": {
    "short_instructions": "Now, turn around 180 degrees and draw the stair pattern again!",
    "long_instructions": "[][0] _\"Now let’s turn and go back the way we came.\"_\n\nTurn around 180 degrees and draw the exact same stair pattern again!  \n\n-   The rest of this stage will be easier if you put all of your code inside of a loop to make Elsa  draw, turn around 180 degrees, draw, then turn around 180 degrees again.\n\n<hr/>\n\nHere is an example of stairs that use a 76 degree turn:\n\n[][1]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Snowflake #2_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseD_artist_project2a_a": "This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.\n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/10/levels/8": {
    "short_instructions": "Spin that shape around 5 or 6 times in a circle.",
    "long_instructions": "[][0] _\"Let’s spin and make it into a snowflake.\"_\n\nSpin that shape around 5 or 6 times in a circle.\n\n-   If you choose 5 times,  try a turn of 72 degrees\n-   If you choose 6 times,  try a turn of 60 degrees\n    <hr/>\n\nHere's an example of Elsa turning a pattern 6 times:\n\n[][1]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Snowflake #2_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseD_artist_project3a_a": "You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/10/levels/9": {
    "short_instructions": "Try playing around with what you've created. Draw whatever you like!\n\n-   What happens if you use two different angles in your stair step pattern?\n-   What happens if you make your diamond pattern longer or shorter?\n-   What does it look like to draw two snowflakes on top of one another?",
    "long_instructions": "[][0]  _\"Now, what should we do? Let’s explore and create our own winter wonderland!\"_\n\nTry playing around with what you've created. Draw whatever you like!\n\n-   What happens if you use two different angles in your stair step pattern?\n-   What happens if you make your diamond pattern longer or shorter?\n-   What does it look like to draw two snowflakes on top of one another?",
    "teacher_markdown": "This lesson contains a **mini-project** called _Snowflake #2_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseD_artist_project4a_a": "Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)\n\n<img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/11/levels/1": {
    "dsls": {
      "markdown": "# Songwriting\n\nUse the concept of the chorus in a song to learn about defining and calling functions.\n"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/2": {
    "display_name": "Homestead",
    "short_instructions": "Write code to get the Agent to the pressure plate, then press \"Run\" and use the arrow keys to move the player out of the house to collect the chest. ",
    "long_instructions": "The door is locked, but the Agent is here to help!\n\nSnap a `move forward` block to the bottom of the `when run` block in the workspace to get the Agent to the pressure plate [PressurePlate_Up], then press \"Run\" and use the arrow keys to move out of the house to collect the **chest** [chest].",
    "authored_hints": {
      "MC_HOC_2017_01_RETRY_a": "Drag one `move forward` block from the toolbox to the workspace, and snap it into place beneath the `when run` block.",
      "MC_HOC_2017_01_RETRY_b": "Don't forget to click \"Run\" to run the code for the Agent.",
      "MC_HOC_2017_01_RETRY_c": "Once the Agent has run all of its code, you can move the player with the arrow keys!"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/3": {
    "display_name": "The Farm",
    "short_instructions": "Move the Agent to the pressure plate so that {currentPlayerName} can get to the map. ",
    "long_instructions": "{currentPlayerName} is headed on an adventure! To help, get the **map** [map_empty] behind the locked door on the right. \n\nSnap the code into the workspace to move the Agent to the pressure plate [PressurePlate_Up] so that {currentPlayerName} can get through. ",
    "authored_hints": {
      "MC_HOC_2017_02_Cole_a": "Move the Agent forward two spaces to stand on the pressure plate.  That will open the door for your player.",
      "MC_HOC_2017_02_Cole_b": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
      "MC_HOC_2017_02_Cole_c": "Once the Agent has opened the door, use the arrow keys to move the player to the map!",
      "MC_HOC_2017_02_Cole_d": "Make sure the Agent is following the path outlined on the map!"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/5": {
    "display_name": "The Woods",
    "short_instructions": "Code the Agent to open the gate. ",
    "long_instructions": "{currentPlayerName} continues on the adventure and needs the **compass** [compass] to prepare for the trip.  \n\nCode the Agent to open the gate. ",
    "authored_hints": {
      "MC_HOC_2017_03_Cole_a": "Once you get the Agent to the pressure plate, you can use your arrow keys to walk the player to the compass!",
      "MC_HOC_2017_03_Cole_b": "Does the code feel a little long?  Try using a `repeat` loop and see if you can figure out how to make it shorter!"
    },
    "callouts": {
      "MC_HOC_2017_03_Cole_1": "This is a `repeat` loop!  Click it into the workspace and add code that you want to run over and over."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/6": {
    "display_name": "The Swamp",
    "short_instructions": "Get the Agent to the pressure plate.",
    "long_instructions": "The Agent can move across water!  \n\nUse a `repeat` loop to solve this puzzle and help {currentPlayerName} get to the **bucket** [bucket_empty] behind the door. ",
    "authored_hints": {
      "MC_HOC_2017_04_Cole_a": "The Agent needs to `move forward` 7 times.  How can you use a `repeat` loop to make that happen?",
      "MC_HOC_2017_04_Cole_c": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
      "MC_HOC_2017_04_Cole_b": "Once the Agent gets to the pressure plate, the Agent will open the door for the player."
    },
    "callouts": {
      "MC_HOC_2017_04_Cole_a": "The Agent can hover over water, but the player can't!"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/7": {
    "display_name": "The Desert",
    "short_instructions": "Get the Agent to the pressure plate.",
    "long_instructions": "You made it across! \n\nNow, get {currentPlayerName} safely through the maze to collect the **axe** [diamond_axe]",
    "authored_hints": {
      "MC_HOC_2017_04POINT5_RYAN_b": "Use the `turn right` block to change the agent's direction ",
      "MC_HOC_2017_04POINT5_RYAN_a": "The Agent only needs to get to the first pressure plate to let Alex or Steve through to the axe."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/8": {
    "display_name": "The River",
    "short_instructions": "Get the player to the shovel.",
    "long_instructions": "Oh no, the bridge is out! \n\nCode the Agent to rebuild the bridge using the [blockly block][0] block so that {currentPlayerName} can get to the **shovel** [diamond_shovel].",
    "authored_hints": {
      "MC_HOC_2017_05_Cole_a": "Did you know that you can put more than one piece of code inside of a loop?  Try moving forward **and** placing a plank inside of a `repeat` to complete this puzzle.",
      "MC_HOC_2017_05_Cole_b": "Get the Agent across the river, building a bridge as you go."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/9": {
    "display_name": "High Tide",
    "short_instructions": "Fix this code to get the Agent to build a bridge across this river.",
    "long_instructions": "Another river, but this one is much wider! \n\nFix this code to help the Agent build a bridge so that {currentPlayerName} can get to the **pickaxe** [diamond_pickaxe]. ",
    "authored_hints": {
      "MC_HOC_2017_06_Cole_a": "How many times does this loop run?  How many times _should_ it run?",
      "MC_HOC_2017_06_Cole_b": "Help the Agent build a bridge all the way across the water! "
    },
    "callouts": {
      "MC_HOC_2017_06_Cole_1": "You cannot throw these blocks away, but you can edit them!"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/11": {
    "short_instructions": "Use the `build bridge` function twice to make a path to the Redstone Torch.",
    "long_instructions": "A **function** named `build bridge` is in your workspace.  All of the code you need to cross the river is built right in! \n\nSnap the small, green [blockly block][0] function block into your workspace twice to fix the path and get {currentPlayerName} to the Redstone Torch [redstone_torch].",
    "authored_hints": {
      "Function_intro_Ryan_b": "If you call the functions correctly, this is the path you will travel...",
      "Function_intro_Ryan_a": "You can call a function many times inside of your program!  Try calling it twice to solve this puzzle."
    },
    "callouts": {
      "Function_intro_Ryan_1": "This little instruction tells the computer to run the BIG chunk of code with the same name in the workspace."
    },
    "function_definitions": {
      "build bridge": {
        "name": "build bridge"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/12": {
    "display_name": "Snowy Pass",
    "short_instructions": "Destroy the ice and get {currentPlayerName} to the Minecart.",
    "long_instructions": "There's ice in the way!  \n\nThe `clear path` function can help you destroy the ice and get {currentPlayerName} to the Minecart [minecart_normal]! ",
    "authored_hints": {
      "MC_HOC_2017_07_Cole_c": "All you need to have the Agent do is clear the path to the Minecart.",
      "MC_HOC_2017_07_Cole_a": "To solve this puzzle, figure out what the `clear path` function does and call it as many times as you need using the small green `clear path` block from the toolbox.",
      "MC_HOC_2017_07_Cole_b": "Try mixing the function blocks with other blocks from the toolbox to help you solve this puzzle."
    },
    "function_definitions": {
      "clear path": {
        "name": "clear path"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/13": {
    "display_name": "The Cave",
    "short_instructions": "Use the functions to finish this minecart track.",
    "long_instructions": "Can you spot the difference between the two functions in your workspace? \n\nUse these functions with other code from the toolbox to clear a path for the Minecart, then collect the **Flint and Steel** [flint_and_steel]. \n ",
    "authored_hints": {
      "MC_HOC_2017_10_Cole_b": "Don't know where to go?  See if you can find the dotted line!",
      "MC_HOC_2017_10_Cole_a": "Use functions to make solving this puzzle easier!"
    },
    "function_definitions": {
      "fix long path": {
        "name": "fix long path"
      },
      "fix short path": {
        "name": "fix short path"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/14": {
    "display_name": "The Nether Fortress",
    "short_instructions": "Use the functions to find a way across the lava.",
    "long_instructions": "Look at the functions below.  How can you use them to avoid the Ghasts and help {currentPlayerName} make it safely to the **Enchanted Book** [book_enchanted]?  ",
    "authored_hints": {
      "MC_HOC_2017_08_RY_a": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
      "MC_HOC_2017_08_RY_b": "There are LOTS of ways to solve this puzzle.  Try a few!",
      "MC_HOC_2017_08_RY_c": "Try following the dotted line for a simple path through the lava."
    },
    "callouts": {
      "MC_HOC_2017_08_RY_1": "The Agent can hover over lava, but Steve and Alex can't!  "
    },
    "function_definitions": {
      "build short bridge": {
        "name": "build short bridge"
      },
      "build long bridge": {
        "name": "build long bridge"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/12/levels/16": {
    "display_name": "Freeplay",
    "short_instructions": "**Freeplay:**  Time to explore on your own!",
    "long_instructions": "**Freeplay:** Now it's up to you! Use the Agent's code to help you explore this world.",
    "authored_hints": {
      "MC_HOC_2017_13_Cole_a": "Try having the Agent build some minecart tracks so you can explore the world!"
    },
    "function_definitions": {
      "function 1": {
        "name": "function 1"
      },
      "function 2": {
        "name": "function 2"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/1": {
    "long_instructions": "Here is a puzzle that uses a function that we have defined. ",
    "function_definitions": {
      "draw a square": {
        "name": "draw a square"
      },
      "draw ear stems": {
        "name": "draw ear stems"
      }
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing. The function is not called in the program.",
              "correct": false,
              "feedback": "Incorrect. The function is actually called two times in the program."
            },
            {
              "text": "The artist will draw a single square.",
              "correct": false,
              "feedback": "Incorrect. The function is actually called two times in the program."
            },
            {
              "text": "The artist will draw two squares that overlap.",
              "correct": false,
              "feedback": "Incorrect. The length of each side of the square is only 100 pixels, but the artist jumps by 175 pixels between functions."
            },
            {
              "text": "The artist will draw two squares with a small gap in between.",
              "correct": true,
              "feedback": "Correct! The function is called two times in the program, with a jump in between."
            }
          ],
          "questions": [
            {
              "text": "What will happen when you press \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/2": {
    "short_instructions": "Use the `draw a square` function to create the glasses. ",
    "long_instructions": "Here is a function called `draw a square`. Use it to complete this drawing. \n\n* * *\n\nThe squares are 75 pixels apart.",
    "authored_hints": {
      "courseD_artist_functions2_b": "The function should not contain your whole program, just the part that draws a square with 100 pixel sides.",
      "courseD_artist_functions2_c": "Make sure that you use the green `draw a square` block to \"call\" your function. Otherwise, the code in your function will not run.\n\n[blockly block][0]",
      "courseD_artist_functions2_a": "Your program should:\n\n-   Use your function\n-   Move forward 100 + 75 pixels\n-   Use your function again"
    },
    "callouts": {
      "courseD_artist_functions2_1": "When this green block runs, all of the code in the function will run. What should the artist do after drawing the first square?"
    },
    "function_definitions": {
      "draw a square": {
        "name": "draw a square"
      },
      "draw ear stems": {
        "name": "draw ear stems"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/3": {
    "short_instructions": "Build a function that will create this star.",
    "long_instructions": "Build a function that will create this star.\n\n* * *\n\n-   Each arm of the star is 25 pixels long\n-   You need to turn 45 degrees to get 8 arms\n-   It is okay to go forward and backward over the same arm",
    "function_definitions": {
      "draw a star": {
        "name": "draw a star"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/4": {
    "short_instructions": "Draw only those three stars to finish this puzzle.",
    "long_instructions": "When is drawing three stars harder than drawing four? When you also have to jump over the moon!\n\nDraw only those three stars to finish this puzzle.\n\n* * *\n\n-   The jump between the first and second star is **200** pixels\n-   The jump between the second and third is **100** pixels",
    "authored_hints": {
      "courseD_artist_functions5_a": "Don't give up!  Remember what you have been learning.",
      "courseD_artist_functions5_b": "Functions make it easy to call saved code at any time, not just from inside a loop!",
      "courseD_artist_functions5_c": "Start by creating your `draw a star` function, then use this function to draw the three stars!"
    },
    "function_definitions": {
      "draw a star": {
        "name": "draw a star"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/5": {
    "short_instructions": "Try solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!",
    "long_instructions": "Drawing all of these windows individually would be a pain!  \n\nTry solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!\n\n* * *\n\n-   Each window is made up of four **25** pixel squares.\n-   The top windows are a **100** pixel jump away from each other.  \n-   The bottom windows are a **150** pixel jump below the top set.",
    "authored_hints": {
      "courseD_artist_functions7_a": "Try creating your function first then add windows one at a time.",
      "courseD_artist_functions7_b": "To get from the top windows to the bottom windows, simply turn the artist right, jump 150 pixels, then turn the artist right again!  Now the artist will be facing the correct direction to finish the rest of the house!"
    },
    "function_definitions": {
      "draw a window": {
        "name": "draw a window"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/6": {
    "short_instructions": "Create a function for a single square.",
    "long_instructions": "_\"Functions easy!\"_\n\nWe are going to build up to something fancy!  Start by creating a function for this square.",
    "callouts": {
      "courseD_artist_functions8_1": "Your blocks to create functions have been moved under this label in the toolbox."
    },
    "function_definitions": {
      "draw a square": {
        "name": "draw a square"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/7": {
    "short_instructions": "Call the `draw a square` function from inside your `draw a line of squares` function to make this even easier!",
    "long_instructions": "_\"Zombie get dizzy.\"_\n\nCall the `draw a square` function from inside your `draw a line of squares` function to make this even easier!\n\n* * *\n\n-   The squares are _50_ pixels apart.",
    "authored_hints": {
      "courseD_artist_functions8_f": "You only need one `move forward` block if you're doing this correctly!",
      "courseD_artist_functions8_a": "Start by making a function for a square, then try making a function for a line of squares.",
      "courseD_artist_functions8_d": "To make a line of squares,\n\n-   repeat 3 times\n    -   draw a square\n    -   jump forward **100 pixels**"
    },
    "function_definitions": {
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/8": {
    "short_instructions": "Add one more function that creates this stack of staggered squares.",
    "long_instructions": "Add one more function that creates this stack of staggered squares using the `draw a line of squares` function.",
    "authored_hints": {
      "courseD_artist_functions8_f": "This is easier than it looks!  You shouldn't need any `move` or `jump` blocks here!",
      "courseD_artist_functions8_a": "The second line of squares is just a 180 degree turn different than the first!",
      "courseD_artist_functions8_c": "At the end of each line of squares, the artist only needs to turn 180 degrees before drawing the next line of squares.  Put the whole thing in a repeat loop to set you up for the next exercise!"
    },
    "function_definitions": {
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      },
      "do something": {
        "name": "do something"
      },
      "staggered squares": {
        "name": "staggered squares"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/9": {
    "short_instructions": "Use everything you've learned so far to recreate this design.",
    "authored_hints": {
      "courseD_artist_functions8_f": "You only need one `move forward` block, but you will need quite a few `jump forward` and/or `jump backward` blocks!",
      "courseD_artist_functions8_a": "Start by making a function for a square, then try making a function for a line of squares.\n\nHow would you use the `draw a line of squares` function to make this image?",
      "courseD_artist_functions8_d": "To make a line of squares,\n\n-   repeat 3 times\n    -   draw a square with a side length of **50 pixels**\n    -   jump forward **100 pixels**",
      "courseD_artist_functions8_b": "Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?\n\n[][0]",
      "courseD_artist_functions8_c": "At the end of each set of staggered squares, the artist will need to jump down and backward before he draws the next set of staggered squares.",
      "courseD_artist_functions8_g": "[][0]"
    },
    "function_definitions": {
      "do something": {
        "name": "do something"
      },
      "staggered squares": {
        "name": "staggered squares"
      },
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/10": {
    "short_instructions": "**Challenge:** Create this image using only the blocks provided.",
    "long_instructions": "**Challenge:** Create this image using the limited blocks provided. \n\n-   Each triangle has sides of **50 pixels**  \n-   To draw a diamond, you will need to alternate between turning **60 degrees and 120 degrees**.",
    "authored_hints": {
      "courseD_artist_functions9_e": "Can you spot all four places that the `line of triangles` can be used in this drawing?\n\n[][0]",
      "courseD_artist_functions9_a": "This puzzle can be broken into three parts:\n\n-   make the `draw a triangle` function\n-   make the `draw a line of triangles` function\n-   use your `draw a line of triangles` function four times to complete the drawing",
      "courseD_artist_functions9_b": "This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line.",
      "courseD_artist_functions9_c": "To draw a line of triangles:\n\n-   repeat 4 times\n    -   draw a triangle\n    -   jump forward 50 pixels",
      "courseD_artist_functions9_d": "To draw the diamond:\n\n-   repeat 2 times\n    -   draw a line of triangles\n    -   turn 60 degrees\n    -   draw a line of triangles\n    -   turn 120 degrees"
    },
    "function_definitions": {
      "do something": {
        "name": "do something"
      },
      "draw triangle": {
        "name": "draw triangle"
      },
      "draw line of triangles": {
        "name": "draw line of triangles"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/11": {
    "short_instructions": "This time, use lines of 8 hexagons with 25 pixel sides.",
    "long_instructions": "This time, use lines of 8 hexagons with 25 pixel sides.\n\n-   To make each hexagon, repeat the side 6 times, turning 60 degrees.\n-   Jump 25 pixels between each hexagon.\n-   To draw a diamond, you will need to alternate between turning 60 degrees and 120 degrees.",
    "authored_hints": {
      "courseD_artist_functions10_b": "This drawing is a lot like the last one, but the `draw line` function is now drawing a different shape.",
      "courseD_artist_functions10_a": "To avoid using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.",
      "courseD_artist_functions10_c": "Do you see where this drawing could use a function called `line of hexagons`?\n\n[][0]"
    },
    "function_definitions": {
      "do something": {
        "name": "do something"
      },
      "draw hexagon": {
        "name": "draw hexagon"
      },
      "draw line of hexagons": {
        "name": "draw line of hexagons"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/levels/12": {
    "short_instructions": "**Inspiration:** Use what you've learned to make whatever you want!",
    "long_instructions": "**Inspiration:** Use what you've learned to make whatever you want!  \n\nCan you make something like this pinwheel?\n\n[expandable][0]",
    "function_definitions": {
      "draw hexagon": {
        "name": "draw hexagon"
      },
      "draw line of hexagons": {
        "name": "draw line of hexagons"
      },
      "staggered squares": {
        "name": "staggered squares"
      },
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/extras?level_name=courseE_artist_functions_challenge1_2021": {
    "short_instructions": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
    "long_instructions": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
    "authored_hints": {
      "courseE_artist_functions_challenge1_a": "If you call the function one more time, you can create the same design in the final corner.",
      "courseE_artist_functions_challenge1_b": "You can also `jump to` other positions or change the whole design however you want!"
    },
    "callouts": {
      "courseE_artist_functions_challenge1_callout1": "Keep this program going by adding more code to the bottom.",
      "courseE_artist_functions_challenge1_callout2": "If you don't like this design, change it to anything you want!"
    },
    "function_definitions": {
      "my design": {
        "name": "my design"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/13/extras?level_name=courseE_artist_functions_challenge2_2021": {
    "short_instructions": "Try this code to see how it works, then make the program your own!",
    "long_instructions": "Not only can you jump to some pre-set locations, like the corners of the canvas, you can also use a `jump to` command to get to absolutely any spot you like! Try this code to see how it works, then make the program your own!\n\n[blockly block][0]",
    "authored_hints": {
      "courseE_artist_functions_challenge1_a": "[blockly block][0]\n\nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!\n\n[][1]"
    },
    "callouts": {
      "courseE_artist_functions_challenge2_callout1": "Keep this program going by adding more code to the bottom.",
      "courseE_artist_functions_challenge2_callout2": "If you don't like this design, change it to anything you want!"
    },
    "function_definitions": {
      "my design": {
        "name": "my design"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/2": {
    "short_instructions": "Collect a boat from the chest.",
    "long_instructions": "You need supplies for the voyage ahead. Collect a **boat** [][0] from the **chest** [][1]."
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/3": {
    "short_instructions": "Head to the end of the dock.",
    "long_instructions": "Boats are much easier than swimming in open water! Head to the end of the dock to hop aboard."
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/4": {
    "short_instructions": "Head across the open seas to the cod.",
    "long_instructions": "Grab the oars and pilot your boat across the open seas to catch the **cod** [][0]."
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/6": {
    "short_instructions": "Use a loop to get to the dolphin.",
    "long_instructions": "Let's feed the cod to the **dolphin** [][0]. Use a repeat until block to get across the ocean faster."
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/7": {
    "short_instructions": "Explore the shipwreck to reach the chest.",
    "long_instructions": "There's a **nautilus shell** [][0] hidden somewhere! Explore the shipwreck to reach the **chest** [][1]."
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/8": {
    "short_instructions": "Navigate through the ice to reach the salmon.",
    "long_instructions": "Looks freezing out there! Catch a **salmon** [][0] on your way to the underwater ruins."
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/10": {
    "short_instructions": "Search these underwater ruins for a chest.",
    "long_instructions": "You found the underwater ruins. Search the sandstone for a **chest** [][0] containing **prismarine** [][1] treasure.",
    "authored_hints": {
      "aquatic7": "You can use the if path block to help you make the right turns."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/11": {
    "long_instructions": "First icebergs, now lava? Get through this volcanic island and find the **tropical fish** [][0] in the coral reef."
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/12": {
    "short_instructions": "Use the coral as waypoints to reach the treasure.",
    "long_instructions": "You made it to the reef, now search for the **Heart of the Sea** [][0] ! Use the blue and red coral to reach the treasure **chest** [][1].",
    "authored_hints": {
      "voyage_aquatic_9a": "See the red and blue coral blocks? Use them as guideposts to turn right and left through the reef."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/13": {
    "short_instructions": "Get to the entrance of this Ocean Monument.",
    "long_instructions": "There is a **squid** [][0] hiding somewhere in this Ocean Monument, can you find it?",
    "authored_hints": {
      "voyage_aquatic_10a": "See the **Sea Lanterns** [][0]? How can you use a conditional with them to get through the Ocean Monument?"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/14": {
    "short_instructions": "Build a conduit with Prismarine inside the Ocean Monument.",
    "long_instructions": "Build a wall of **prismarine** [][0] around the black concrete. This will activate the **conduit** [][1] and complete your challenge!"
  },
  "https://studio.code.org/s/coursee-2021/lessons/14/levels/16": {
    "short_instructions": "Design your own underwater environment, it’s up to you!",
    "long_instructions": "Congratulations! The open aquatic world awaits you. Build a coral reef! A volcano! A shipwreck! It's up to you."
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/1": {
    "short_instructions": "Move to the pile of dirt and use the `remove` block to remove it.",
    "long_instructions": "_\"Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting!\"_  \n\nMove to the pile of dirt and use the `remove` block to remove it.",
    "authored_hints": {
      "courseD_farmer_while1_a": "You will need to move forward four times to get to the pile. Can you use a `repeat` loop for this?",
      "courseD_farmer_while1_b": "Use the `remove 1` block when you are standing on the pile of dirt to remove it."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/2": {
    "short_instructions": "Move to the hole and fill it with six shovelfuls of dirt, using the `fill` block.",
    "authored_hints": {
      "courseD_farmer_while2_a": "You will only need to move once to get to the hole.",
      "courseD_farmer_while2_b": "You will need the `fill 1` block six times. Can you use a loop to make this simpler?"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/3": {
    "short_instructions": "Use as few blocks as possible to solve this puzzle.",
    "long_instructions": "_\"Move to the pile of dirt and tell me how many shovelfuls to remove.\"_\n\nUse as few blocks as possible to solve this puzzle.",
    "authored_hints": {
      "courseD_farmer_while3_a": "A loop can help you simplify your code here.",
      "courseD_farmer_while3_b": "You shouldn't need any `turn` blocks to get to the pile."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/5": {
    "short_instructions": "Help the farmer remove this entire pile using a `while` loop.",
    "long_instructions": "_\"I don't know how much dirt is in this pile!\"_\n\nHelp the farmer remove this entire pile using a `while` loop.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing will happen.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            },
            {
              "text": "The farmer will never stop removing dirt.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            },
            {
              "text": "The farmer will remove dirt as long as there is a pile, then stop when the pile is gone.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The farmer will remove dirt only once.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. What will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/6": {
    "short_instructions": "While there is a pile, remove dirt.",
    "long_instructions": "Oh my!  This pile is so big that it's hard to guess how much dirt is in it.  \n\n* * *\n\nWe've added a new block to the toolbox called the `while there is a pile` block.  Use this to remove dirt only while there is still some to scoop! ",
    "authored_hints": {
      "courseE_farmer_ramp12_a": "Instead of using a `repeat` loop to tell the farmer how many times to shovel dirt, now you can use a `while there is a pile` block.  ",
      "courseE_farmer_ramp12_b": "You only need to move forward once to get to the dirt."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/7": {
    "short_instructions": "While there is a pile, remove dirt.",
    "long_instructions": "Let's try that again, but with more piles!",
    "authored_hints": {
      "courseE_farmer_ramp11b_a": "You can nest your `while` loop inside of a `repeat` loop to make your code shorter."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/8": {
    "short_instructions": "While there is lettuce, pick lettuce!",
    "long_instructions": "Now the harvester needs to pick all of the lettuce.  Use `while there is lettuce` inside of a `repeat` loop to get it all!"
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/9": {
    "short_instructions": "Now use nested loops to solve this puzzle.",
    "long_instructions": "Pick all of the lettuce.",
    "authored_hints": {
      "courseE_farmer_ramp12_b": "You will still need to use a `repeat` loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/11": {
    "short_instructions": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
    "long_instructions": "The lettuce is now only at the end of the path.\\\nTravel down the path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
    "authored_hints": {
      "courseE_farmer_ramp12b_b": "You will still need to use an `until` loop first, then use a `while` loop once you get to the lettuce."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/12": {
    "short_instructions": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
    "long_instructions": "The lettuce is scattered all over the garden.\\\nTravel down each path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
    "authored_hints": {
      "courseE_farmer_ramp12d_b": "You will still need to put your `until` and `while` loops inside of a `repeat` loop to solve this puzzle!"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/13": {
    "short_instructions": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
    "long_instructions": "The lettuce is scattered all over the garden.\\\nTravel down each path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
    "authored_hints": {
      "courseE_farmer_ramp12e_b": "The solution to this puzzle will look a lot like the solution to the last puzzle, but turning in the other direction."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/15": {
    "short_instructions": "Move forward until you reach the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
    "long_instructions": "**Challenge**: The only way to get all of the crops is to move forward until you get to the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
    "authored_hints": {
      "courseE_farmer_ramp12f_b": "Use an `if/else` block to help the farmer decide if she needs to turn right or left."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/15/levels/16": {
    "short_instructions": "Move forward until you reach the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
    "long_instructions": "Move forward until you get to the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
    "authored_hints": {
      "courseE_farmer_ramp12G_b": "Use an `if/else` block to help the farmer decide if she needs to turn right or left."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/2": {
    "short_instructions": "Help the harvester get to the pumpkin and pick it.",
    "long_instructions": "_\"Have we met before? I'm the harvester!\"_\n\nHelp the harvester get to the pumpkin and pick it.",
    "authored_hints": {
      "courseE_farmer_functions1_a": "The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have.",
      "courseE_farmer_functions1_b": "You only need to pick one pumpkin, but could you use a loop to get to it?"
    },
    "callouts": {
      "courseE_farmer_functions1_2": "The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have."
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/3": {
    "short_instructions": "Help the harvester pick all of the corn, then the pumpkin.",
    "long_instructions": "_\"Oooh, veggies are cropping up everywhere!\"_\n\nNow help the harvester pick all of the corn on the way to the pumpkin at the end.\n\n* * *\n\n##### Note: Every square on the way to the pumpkin either has **1** corn or nothing at all.  Use the provided `check for corn` function to make sure you get everything.",
    "authored_hints": {
      "courseE_farmer_functions1a_a": "Make sure you read through the function definition. Can you tell what it does?",
      "courseE_farmer_functions1a_b": "Use a `repeat until` block to get to the pumpkin!"
    },
    "callouts": {
      "courseE_farmer_functions1a_1": "This veggie is unknown.  It changes each time you run the program."
    },
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/4": {
    "short_instructions": "Help the harvester pick the corn and pumpkins.",
    "long_instructions": "Use the function to help the harvester pick the corn and pumpkins.\n\n* * *\n\n##### Each sprout will either grow _one_ corn or nothing.",
    "authored_hints": {
      "courseE_farmer_functions2b_a": "You can `repeat until pumpkin` to get to the ends of the two paths.",
      "courseE_farmer_functions2b_b": "There is no corn on the connecting path, so you can just move along it and turn.",
      "courseE_farmer_functions2b_c": "You will need two separate `repeat until` blocks to get all of the crops."
    },
    "callouts": {
      "courseE_farmer_functions1a_1": "This veggie is unknown.  It changes each time you run the program."
    },
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/5": {
    "short_instructions": "Help the farmer pick the corn and pumpkins using the `corn and pumpkin` function.",
    "long_instructions": "_\"I feel so functional!\"_\n\nNow there are multiple pumpkins in each patch!  Look carefully at the function definitions below to figure out how to use each one.\n\n* * *\n\n##### Each sprout will either grow _one_ corn or nothing.",
    "authored_hints": {
      "courseE_farmer_functions2ba_a": "Use the green `get all pumpkins` block to make sure you get all of the pumpkins!"
    },
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/6": {
    "short_instructions": "Try on a longer path.",
    "long_instructions": "Great!  Try your functions out on a longer path.",
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/7": {
    "short_instructions": "This function calls other functions!",
    "long_instructions": "Did you notice that there was a lot of repeated code in that last puzzle?  We can save space by calling that code `pick along path` and using a new function to call the other functions!\n\nUse `pick along path` to solve this puzzle again using fewer blocks.",
    "authored_hints": {
      "coursee_farmer_functions3c1_2018_a": "You'll need to use the `pick along path` function three times to solve this puzzle.",
      "coursee_farmer_functions3c1_2018_b": "What code do you need to add to get around the corners?"
    },
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/8": {
    "short_instructions": "Create a function that sends the harvester down a square path to pick a single head of lettuce from the middle of each row.",
    "long_instructions": "_\"Functions **lettuce** do more with less work!\"_\n\nCreate a function that sends the harvester down a square path to pick a single head of lettuce from the middle of each row.",
    "authored_hints": {
      "courseE_farmer_functions7a1_2018_a": "Create your function under the `functions` section in the toolbox.",
      "courseE_farmer_functions7a1_2018_b": "Don't forget to use your function when you're done making it!"
    },
    "function_definitions": {
      "garden square": {
        "name": "garden square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/9": {
    "short_instructions": "Is your function still helpful?",
    "long_instructions": "Try writing your function again. Is it still helpful?  How can you make it work for this puzzle?",
    "authored_hints": {
      "courseE_farmer_functions8a1_2018a": "Start this puzzle off by coding the same function you made in the last puzzle.",
      "courseE_farmer_functions8a1_2018b": "After the function runs the first time, you'll need to make one extra turn before you can run it again."
    },
    "function_definitions": {
      "garden square": {
        "name": "garden square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/10": {
    "short_instructions": "Is your function still helpful?",
    "long_instructions": "**This puzzle is a-MAZE-ing!**\n\nIs your function still helpful for this puzzle?",
    "authored_hints": {
      "courseE_farmer_functions9a1_2018a": "You'll use the same function that you made in the last couple of puzzles.",
      "courseE_farmer_functions9a1_2018b": "Use the same steps from the previous puzzle to solve the first half of this puzzle.",
      "courseE_farmer_functions9a1_2018c": "You'll need to `turn` a few times and `move forward` to get to the last crop of lettuce before you can call your function again."
    },
    "function_definitions": {
      "garden square": {
        "name": "garden square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/11": {
    "short_instructions": "Use everything that you've learned so far to solve this puzzle!",
    "long_instructions": "**Challenge:** Use everything that you've learned so far to solve this puzzle in 19 blocks or less!",
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      },
      "pumpkin square": {
        "name": "pumpkin square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/12": {
    "short_instructions": "Solve this puzzle in 23 blocks or less.",
    "long_instructions": "Solve this puzzle in 23 blocks or less.\n\n* * *\n\n##### Each sprout will either grow _one_ corn or nothing. To find the best solution, you will need to edit the functions directly.",
    "callouts": {
      "courseE_farmer_functions1a_1": "This veggie is unknown.  It changes each time you run the program."
    },
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "check for corn": {
        "name": "check for corn"
      },
      "corn rectangle": {
        "name": "corn rectangle"
      },
      "lettuce stairs": {
        "name": "lettuce stairs"
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/16/levels/13": {
    "long_instructions": "Figure out which function to use and which one to delete, then solve this puzzle!",
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "pumpkin square": {
        "name": "pumpkin square"
      },
      "check square for corn": {
        "name": "check square for corn"
      },
      "get produce": {
        "name": "get produce"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The harvester will pick two pumpkins.",
              "correct": false,
              "feedback": "Incorrect. The harvester goes forward until the end of the path, then turns around and moves back until she picks the lettuce."
            },
            {
              "text": "The harvester will pick all of the pumpkins.",
              "correct": false,
              "feedback": "Incorrect. The harvester goes forward until the end of the path, then turns around and moves back until she picks the lettuce."
            },
            {
              "text": "The harvester will pick the lettuce.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The harvester will pick the corn.",
              "correct": false,
              "feedback": "Incorrect. The harvester goes forward until the end of the path, then turns around and moves back until she picks the lettuce."
            }
          ],
          "questions": [
            {
              "text": "Look at the functions defined below. What will the harvester pick?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2021/lessons/17/levels/1": {
    "dsls": {
      "markdown": "# Designing for Accessibility\n\n* In the world of computer science, **accessibility** is about creating technology for people with disabilities.\n* Disabilities include physical, auditory, visual, and many others.\n* Disabilities are diverse and impact people in different ways, including how they use technology like **smartphone apps**.\n* Designing apps that are accessible for people with disabilities makes those apps better for everyone else as well!\n\n![](https://images.code.org/0c670d0d9078657a870df0ca799492cb-image-1557166420066.png)\n"
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/18/levels/1": {
    "dsls": {
      "description": "You have reached the end of Course E! Choose a project to create.",
      "display_name": "End of Course Project"
    },
    "sublevels": {
      "CourseE_Project_SpriteLab_examples_2021": {
        "display_name": "Monster Dance (SpriteLab)",
        "short_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "long_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "behavior_names": {
          "moving west": "moving west",
          "spinning right": "spinning right",
          "growing": "growing",
          "swimming left and right": "swimming left and right",
          "moving east": "moving east",
          "moving north": "moving north",
          "patrolling": "patrolling",
          "moving south": "moving south",
          "jittering": "jittering",
          "wandering": "wandering",
          "shrinking": "shrinking",
          "spinning left": "spinning left",
          "moving west2": "moving west2",
          "spinning right2": "spinning right2",
          "growing2": "growing2",
          "swimming left and right2": "swimming left and right2",
          "moving east2": "moving east2",
          "moving north2": "moving north2",
          "patrolling2": "patrolling2",
          "moving south2": "moving south2",
          "jittering2": "jittering2",
          "wandering2": "wandering2",
          "shrinking2": "shrinking2",
          "spinning left2": "spinning left2",
          "moving with arrow keys": "moving with arrow keys",
          "driving with arrow keys": "driving with arrow keys",
          "fluttering": "fluttering",
          "wobbling": "wobbling",
          "moving west and looping": "moving west and looping",
          "moving east and looping": "moving east and looping"
        }
      },
      "CourseE_Project_SpriteLab_cupcake_examples_2021": {
        "display_name": "Cupcake Dance (SpriteLab)",
        "short_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "long_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "behavior_names": {
          "moving west": "moving west",
          "spinning right": "spinning right",
          "growing": "growing",
          "swimming left and right": "swimming left and right",
          "moving east": "moving east",
          "moving north": "moving north",
          "patrolling": "patrolling",
          "moving south": "moving south",
          "jittering": "jittering",
          "wandering": "wandering",
          "shrinking": "shrinking",
          "spinning left": "spinning left",
          "moving west2": "moving west2",
          "spinning right2": "spinning right2",
          "growing2": "growing2",
          "swimming left and right2": "swimming left and right2",
          "moving east2": "moving east2",
          "moving north2": "moving north2",
          "patrolling2": "patrolling2",
          "moving south2": "moving south2",
          "jittering2": "jittering2",
          "wandering2": "wandering2",
          "shrinking2": "shrinking2",
          "spinning left2": "spinning left2",
          "moving with arrow keys": "moving with arrow keys",
          "driving with arrow keys": "driving with arrow keys",
          "fluttering": "fluttering",
          "wobbling": "wobbling",
          "moving west and looping": "moving west and looping",
          "moving east and looping": "moving east and looping"
        }
      },
      "Course E: Artist Project_examples_2021": {
        "display_name": "Pattern Artist",
        "short_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "long_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "function_definitions": {
          "my function": {
            "name": "my function"
          }
        }
      },
      "Course E: Frozen Project_examples_2021": {
        "display_name": "Snowflake Flowers",
        "short_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "long_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "function_definitions": {
          "small flower": {
            "name": "small flower"
          },
          "LOGIC FLOWERS2": {
            "name": "LOGIC FLOWERS2"
          },
          "LOGIC FLOWER": {
            "name": "LOGIC FLOWER"
          },
          "LOGIC FLOWERS": {
            "name": "LOGIC FLOWERS"
          },
          "draw a star": {
            "name": "draw a star",
            "description": "draw a star with given points and sides of given length",
            "parameters": {
              "points": "points",
              "length": "length"
            }
          },
          "draw a circle": {
            "name": "draw a circle",
            "description": "draw a circle of given radius",
            "parameters": {
              "radius": "radius"
            }
          },
          "draw a pinwheel": {
            "name": "draw a pinwheel",
            "parameters": {
              "sides": "sides",
              "length": "length",
              "repeat": "repeat"
            }
          },
          "draw a triangle": {
            "name": "draw a triangle",
            "parameters": {
              "length": "length"
            }
          },
          "draw a shape": {
            "name": "draw a shape",
            "parameters": {
              "sides": "sides",
              "length": "length"
            }
          },
          "draw a house": {
            "name": "draw a house",
            "parameters": {
              "length": "length"
            }
          },
          "draw a square": {
            "name": "draw a square",
            "parameters": {
              "length": "length",
              "sides": "sides"
            }
          }
        }
      }
    }
  },
  "https://studio.code.org/s/coursee-2021/lessons/18/levels/2": {
    "dsls": {
      "description": "You have reached the end of Course E! Choose a project to create.",
      "display_name": "End of Course Project"
    },
    "sublevels": {
      "CourseE_Project_SpriteLab_2021": {
        "display_name": "Create a Sprite Lab project",
        "behavior_names": {
          "wandering": "wandering",
          "moving east": "moving east",
          "spinning left": "spinning left",
          "spinning right": "spinning right",
          "shrinking": "shrinking",
          "growing": "growing",
          "moving south": "moving south",
          "swimming left and right": "swimming left and right",
          "moving north": "moving north",
          "jittering": "jittering",
          "moving west": "moving west",
          "patrolling": "patrolling"
        }
      },
      "Course E: Artist Project_2021": {
        "display_name": "Create an Artist project"
      },
      "Course E: Frozen Project_2021": {
        "display_name": "Create a Frozen project"
      }
    }
  }
}