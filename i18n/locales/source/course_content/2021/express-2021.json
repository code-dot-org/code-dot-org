{
  "https://studio.code.org/s/express-2021/lessons/1/levels/2": {
    "short_instructions": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
    "long_instructions": "For this puzzle, drag all of the blocks together and click \"Run\" to watch it go!",
    "authored_hints": {
      "courseC_maze_programming1_0": "Make sure all of the blocks have been fully snapped together, then click \"Run\" again."
    },
    "callouts": {
      "grade2_CaringForNewPet_0_1": "After connecting all the blocks, press \"Run\" to start your program."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/3": {
    "short_instructions": "Drag an extra `move forward` block out of the toolbox to finish your code.",
    "long_instructions": "Drag an extra [blockly block][0] block out of the toolbox to finish your code.",
    "authored_hints": {
      "courseC_maze_programming2_a": "To use a [blockly block][0] block, drag it out of the toolbox and snap it to the [blockly block][1] block.",
      "courseC_maze_programming2_b": "Make sure all of the blocks have been fully snapped together, then click \"Run\" again."
    },
    "callouts": {
      "courseC_maze_programming2_1": "This is the toolbox. It’s where you’ll find extra blocks to complete your puzzles."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/4": {
    "short_instructions": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
    "long_instructions": "_\"This pig is ruffling my feathers.\"_\n\nThere is one extra block that is going to cause the bird to crash.\\\nThrow it away by unhooking it from the grey blocks and dragging it back to the toolbox.",
    "authored_hints": {
      "courseC_maze_programming3_a": "Try running the code first to see where it goes wrong.",
      "courseC_maze_programming3_b": "[][0]\n\nTo delete a block from the middle of your code, drag all of the blocks to another part of the workspace.\n\nDrag the block you want to delete back to the toolbox.\n\nFinally, put your other blocks back where they belong."
    },
    "callouts": {
      "courseC_maze_programming3_2": "You can drag extra blocks to the toolbox to throw them away.",
      "courseC_maze_programming3_3": "These blocks are stone and cannot be thrown away."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/5": {
    "short_instructions": "Avoid TNT or feathers will fly!",
    "long_instructions": "_\"Trace the path and lead me to the silly pig.\"_ \n\nAvoid TNT or feathers will fly!",
    "authored_hints": {
      "courseC_maze_programming4_a": "Remember that when you turn, you are turning from the _bird's_ point of view.  If you turn right, the bird will point down.",
      "courseC_maze_programming4_b": "To follow the path:\n\n-   move forward\n-   turn one way\n-   move forward\n-   turn back the other way\n-   move forward"
    },
    "callouts": {
      "courseC_maze_programming4_1": "This is your block limit.  It tells you how many of these blocks you have left to use."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/6": {
    "short_instructions": "Avoid the TNT.",
    "long_instructions": "_\"Follow this path to get me to the pig!\"_\n\nAvoid the TNT.",
    "authored_hints": {
      "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
      "courseC_maze_programming5_b": "The bird will need to make one turn to complete this puzzle. Can you figure out which way?",
      "courseC_maze_programming5_c": "The solution will have two `move forward` blocks, a turn, and two more `move forward` blocks."
    },
    "callouts": {
      "": "These blocks don't have numbers on them. You can use as many as you want!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/7": {
    "short_instructions": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
    "long_instructions": "_\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"_\n\nGet the bird to the pig and avoid the TNT.",
    "authored_hints": {
      "courseC_maze_programming6_a": "There are two ways to solve this puzzle!",
      "courseC_maze_programming6_b": "Follow your finger from the bird to the pig, which steps did you take?",
      "courseC_maze_programming6_c": "Remember you have to turn first, since the bird starts facing a wall.",
      "courseC_maze_programming6_d": "Feel stuck?  Look at this path!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/8": {
    "short_instructions": "**Challenge:** This code has a lot of bugs. You'll need to remove some blocks and add others.",
    "long_instructions": "_\"It's time to get angry!\"_\n\n**Challenge:** This code has a lot of bugs. You'll need to remove some blocks and add others.",
    "authored_hints": {
      "courseC_maze_programming7_a": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
      "courseC_maze_programming7_b": "If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper."
    },
    "callouts": {
      "courseC_maze_programming7_1": "This is your first challenge puzzle! These are meant to be hard and may take several tries.",
      "courseC_maze_programming7_2": "These blocks are made of stone and can't be thrown away."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/9": {
    "short_instructions": "_\"Keep calm and help me find the bad pig.\"_",
    "long_instructions": "_\"Keep calm and help me find the bad pig.\"_",
    "authored_hints": {
      "courseC_maze_programming8_a": "Remember you can use the \"Step\" button to look through your code line-by-line if you get stuck.",
      "courseC_maze_programming8_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/10": {
    "short_instructions": "_\"Keep calm and help me find the bad pig.\"_",
    "long_instructions": "_\"Keep calm and help me find the bad pig.\"_",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bird will end up one step short of the pig.",
              "correct": false,
              "feedback": "Incorrect. This code gets the bird perfectly to the pig."
            },
            {
              "text": "The bird will make it to the pig.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bird will run into the TNT.",
              "correct": false,
              "feedback": "Incorrect. This code gets the bird perfectly to the pig."
            },
            {
              "text": "The bird will run into the wall.",
              "correct": false,
              "feedback": "Incorrect. This code gets the bird perfectly to the pig."
            }
          ],
          "questions": [
            {
              "text": "Read through the code below very carefully. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/11": {
    "short_instructions": "_\"Now, help me sneak up on the pig any way you want to!\"_",
    "long_instructions": "_\"Now, help me sneak up on the pig any way you want to!\"_"
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/12": {
    "short_instructions": "The pig is hiding, and the goal is to find it. ",
    "long_instructions": "The bird needs your help! The pig is hiding, and the goal is to find it. ",
    "authored_hints": {
      "courseC_maze_programming_challenge1_a": "There are many ways to get to the pig. Use your finger to find a path and then program it!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/1/levels/13": {
    "short_instructions": "Sometimes there is more than one way to solve the same problem. Sometimes it's faster to go backwards than it is to go forwards!",
    "long_instructions": "Sometimes there is more than one way to solve the same problem. Sometimes it's faster to go backwards than it is to go forwards!",
    "authored_hints": {
      "courseC_maze_programming_challenge2_a": "_\"If you send me backwards, be extra careful that I turn the correct way!\"_",
      "courseC_maze_programming_challenge2_b": "The shortest solution uses only 5 blocks, but it uses this block:\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/2/levels/2": {
    "short_instructions": "Fix the code to help get Scrat get to the acorn.",
    "long_instructions": "This code isn't quite right!  \n\nFix the code to help Scrat get to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging1_a": "-   Does everything work after the first step?\n-   Does it still work after the second?\n-   Where does it go wrong?",
      "courseC_maze_debugging1_b": "There is 1 block you need to add to complete this puzzle."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/2/levels/3": {
    "short_instructions": "Use your debugging skills to get Scrat to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging2_a": "There is a lot of valuable code in the workspace.  Don't just delete it all and start over!",
      "courseC_maze_debugging2_b": "-   Does everything work after the first step?\n-   Does it still work after the second?\n-   Where does it go wrong?",
      "courseC_maze_debugging2_c": "Can't figure out what's wrong? Try running the code a couple of times to see what happens."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/2/levels/4": {
    "short_instructions": "Remove blocks to get Scrat to the acorn!",
    "long_instructions": "Something is not quite right. \n\nRemove blocks to get Scrat to the acorn!",
    "authored_hints": {
      "courseC_maze_debugging3_a": "To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.\n\nDrag the block you want to delete back to the toolbox.\n\nFinally, put your other blocks back where they belong.\n\n[][0]",
      "courseC_maze_debugging3_b": "Can't figure out what's wrong? Try running the code a couple of times to see what happens."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/2/levels/5": {
    "short_instructions": "Someone has their directions mixed up! Can you help?",
    "authored_hints": {
      "courseC_maze_debugging4_a": "Use the \"Step\" button to run through the instructions one at a time.  Does that help you find the line where things go wrong?",
      "courseC_maze_debugging4_b": "One of the turns is making Scrat go in the wrong direction. Can you figure out which one?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/2/levels/6": {
    "short_instructions": "Debug this level by rearranging and changing blocks.",
    "authored_hints": {
      "courseC_maze_debugging5_a": "There are lots of helpful blocks in the workspace already.  Don't delete them all! \n\nUse the \"Step\" button to go through and figure out where the code goes wrong.",
      "courseC_maze_debugging5_c": "You can change the direction of the turn block by clicking on the dropdown.",
      "courseC_maze_debugging5_b": "Try saying what Scrat should do out loud.  Is it the same as the code in the workspace?  What goes wrong?"
    },
    "callouts": {
      "courseC_maze_debugging5_1": "These blocks are locked and cannot be deleted!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/2/levels/7": {
    "short_instructions": "Figure out what is wrong and get Scrat to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging6_a": "-   What is Scrat supposed to do?\n-   What does Scrat do?\n-   What does that tell you?",
      "courseC_maze_debugging6_b": "Once you've found and fixed the first bug, go through the debugging process again to find the second one.\n\nRepeat the process until the program works!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/2/levels/8": {
    "short_instructions": "**Challenge:** Debug this level by rearranging, adding, and deleting blocks.",
    "authored_hints": {
      "courseC_maze_debugging7_a": "-   Does everything work at the first step?\n-   How about the second step?\n-   Where does it go wrong?",
      "courseC_maze_debugging7_b": "Don't forget to use the \"Step\" button to run the program line by line!",
      "courseC_maze_debugging7_c": "After you find and fix the first bug, make sure to use the debugging process again to find the next one.\n\nRepeat the debugging process until the program works!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/2/levels/9": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Scrat will reach the acorn. There are no bugs in the code.",
              "correct": false,
              "feedback": "Incorrect. First, Scrat turns the wrong direction, then Scrat doesn't move forward enough times to reach the acorn."
            },
            {
              "text": "Scrat will not reach the acorn because he turns the wrong way.",
              "correct": true,
              "feedback": "Correct! First, Scrat turns the wrong direction, then Scrat doesn't move forward enough times to reach the acorn."
            },
            {
              "text": "Scrat will not reach the acorn because there are not enough `move forward` blocks.",
              "correct": true,
              "feedback": "Correct! First, Scrat turns the wrong direction, then Scrat doesn't move forward enough times to reach the acorn."
            },
            {
              "text": "Scrat will not move from the first block.",
              "correct": false,
              "feedback": "There are two bugs in this code. First, Scrat turns the wrong direction, then Scrat doesn't move forward enough times to reach the acorn."
            }
          ],
          "questions": [
            {
              "text": "Look for bugs in this code. Will Scrat reach the acorn or is there a problem?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/2/levels/10": {
    "short_instructions": "Use the blocks in the toolbox to build your program. Get the Scrat to the acorn.",
    "callouts": {
      "express_maze_debugging9_2019_1": "Drag blocks from the toolbox into your workspace."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/2/extras?level_name=courseC_maze_debugging_challenge1_2021": {
    "short_instructions": "Help Scrat decide which way to turn to get to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging_challenge1_a": "Left or right? It's up to you!",
      "courseC_maze_debugging_challenge1_b": "Scrat's path is the shape of a rectangle! He needs to turn the same way each time.",
      "courseC_maze_debugging_challenge1_c": "If you are getting stuck, you can always start over and find a new way!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/2/extras?level_name=courseC_maze_debugging_challenge2_2021": {
    "short_instructions": "Help Scrat reach the acorn with only four `turn` commands.",
    "long_instructions": "If Scrat turns too often, he might get dizzy! Help him reach the acorn with only four `turn` commands.",
    "authored_hints": {
      "courseC_maze_debugging_challenge2_b": "If you are getting stuck, try debugging the code.  Where does it go wrong?",
      "courseC_maze_debugging_challenge2_c": "There are two different paths you can follow by just moving forward and turning four times. If you find one way to use a loop, there may be even more!\n\n[][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/2": {
    "short_instructions": "Play around with the blocks to see if you can help Laurel collect some treasure.",
    "long_instructions": "**Free Play:** This is Laurel the Adventurer! Move her around and get as much treasure as you can. Use the `collect` block to pick up the treasure!\n\nDrag blocks into the workspace and try to figure out how to get treasure.  Get at least one item to pass this level.",
    "authored_hints": {
      "courseC_collector_prog1_a": "When you are standing on a space with treasure, use the [blockly block][0] block to pick it up.",
      "courseC_collector_prog1_b": "The most simple solution would be to move forward once, then collect treasure."
    },
    "callouts": {
      "courseC_collector_prog1_1": "Do you see some new blocks in the toolbox?  Don't worry, we will show you how to use them in another lesson."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/3": {
    "short_instructions": "Move Laurel to the treasure, then use `collect` to pick it up.",
    "long_instructions": "Move Laurel to the treasure, then use the [blockly block][0] block to pick it up.",
    "authored_hints": {
      "courseC_collector_prog2_a": "You can use four [blockly block][0] blocks or use the [blockly block][1] block to make your program shorter.",
      "courseC_collector_prog2_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/4": {
    "short_instructions": "Order these blocks to collect the treasure and solve the puzzle.",
    "long_instructions": "_\"Sequence matters!\"_ \n\nThe blocks you need are already in the workspace, but not connected.\\\nOrder these blocks to collect the treasure and solve the puzzle.",
    "authored_hints": {
      "courseC_collector_prog3_a": "The program will only run the blocks that are connected to the [blockly block][0] block.",
      "courseC_collector_prog3_b": "Try using the \"Step\" button to run your code one line at a time.  Do you see where the code goes wrong?",
      "courseC_collector_prog3_c": "If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/5": {
    "short_instructions": "Put these blocks in order to collect all of the treasure and solve the puzzle.",
    "long_instructions": "_\"Sequence matters!\"_\n\nThe blocks you need are already in the workspace, but not connected.  \n\nPut these blocks in order to collect all of the treasure and solve the puzzle.",
    "authored_hints": {
      "courseC_collector_prog4_a": "If you get stuck, try writing out the steps on a piece of paper.",
      "courseC_collector_prog4_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.",
      "courseC_collector_prog4_c": "Try this option for a path."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/6": {
    "short_instructions": "These blocks are in the wrong order. Can you fix them?",
    "long_instructions": "_\"Help me collect each bit of treasure!\"_\n\nThese blocks are in the wrong order. Can you fix them?",
    "authored_hints": {
      "courseC_collector_prog5_a": "\"Does it work at the first step?\nDoes it work at the second step? \nWhere do things go wrong?\"",
      "courseC_collector_prog5_b": "If you fixed one bug and the program still doesn't work, use the steps above to find more bugs.",
      "courseC_collector_prog5_c": "If you get stuck, try writing out the steps on a piece of paper.",
      "courseC_collector_prog5_d": "Follow the path to collect the treasure."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/7": {
    "short_instructions": "Reorder the blocks to collect all of the treasure.",
    "long_instructions": "_\"Help me collect all of the treasure!\"_\n\nThese blocks are in the wrong order. Reorder them to collect all of the treasure.",
    "authored_hints": {
      "courseC_collector_prog6_a": "Can you figure out what is going wrong?  \n\nTry using the \"Step\" button to find errors by running your code line by line.",
      "courseC_collector_prog6_b": "Stuck?  Try this path to collect the treasure."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/8": {
    "short_instructions": "Use blocks from the toolbox to collect all of the treasure.",
    "long_instructions": "**Challenge:** _\"What is going on here?\"_\n\nEven if we put these in the right order, there will still be some missing.\\\nUse blocks from the toolbox to collect all of the treasure.",
    "authored_hints": {
      "courseC_collector_prog7_a": "There is already a lot of great code in the workspace.  You don't need to delete any of it to solve this puzzle.  ",
      "courseC_collector_prog7_b": "Don't see the block you need to get the adventurer moving in the right direction?  Pull one from the toolbox.",
      "courseC_collector_prog7_c": "Having trouble seeing a route to collect all of the treasure?  Try this path!"
    },
    "callouts": {
      "courseC_collector_prog7_1": "You can take more blocks from the toolbox if you need them!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/9": {
    "short_instructions": "_\"Keep up the good work! Help me collect all of the treasure.\"_",
    "long_instructions": "_\"Keep up the good work! Help me collect all of the treasure.\"_"
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/10": {
    "short_instructions": "_\"Let's get all of the treasure!\"_",
    "long_instructions": "_\"Let's get all of the treasure!\"_"
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/11": {
    "short_instructions": "Help Laurel collect all of the treasure.",
    "long_instructions": "Help Laurel collect all of the treasure."
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/12": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Laurel will collect 4 pieces of treasure using this code.",
              "correct": false,
              "feedback": "Incorrect.  Laurel tries to collect treasure where there is none and it causes an error."
            },
            {
              "text": "Laurel will try to collect treasure where there is not any and it causes an error.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "Laurel will collect all of the treasure.",
              "correct": false,
              "feedback": "Incorrect.  Laurel tries to collect treasure where there is none and it causes an error."
            },
            {
              "text": "Laurel will collect 1 piece of treasure using this code.",
              "correct": false,
              "feedback": "Incorrect.  Laurel tries to collect treasure where there is none and it causes an error."
            }
          ],
          "questions": [
            {
              "text": "Look at this code carefully. What do you think will happen when the program runs?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/3/levels/13": {
    "short_instructions": "You're almost done! Collect as many pieces of treasure as you can to finish the stage!",
    "long_instructions": "You're almost done!  \n\nCollect as many pieces of treasure as you can to finish the stage!"
  },
  "https://studio.code.org/s/express-2021/lessons/3/extras?level_name=courseC_collector_prog_challenge1_2021": {
    "short_instructions": "Look carefully! Can you collect all **10** pieces of treasure?",
    "authored_hints": {
      "courseC_collector_prog_challenge1_a": "You can use the `collect` block many times to collect the extra treasure."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/3/extras?level_name=courseC_collector_prog_challenge2_2021": {
    "short_instructions": "Collect at least **10** pieces of treasure to finish this challenge!",
    "long_instructions": "There are 20 pieces of treasure in this cave. Collect at least **10** to finish the challenge!",
    "authored_hints": {
      "courseC_collector_prog_challenge1_a": "You can use more than one `collect` block at each space.",
      "courseC_collector_prog_challenge1_b": "Lost your way?  Try this path to solve the puzzle!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/4/levels/2": {
    "short_instructions": "Play with the blocks in the toolbox to see what they do!",
    "long_instructions": "_\"Hi, I'm an artist. You can write code to make me draw almost anything.\"_\n\nPlay with the blocks in the toolbox to see what they do!"
  },
  "https://studio.code.org/s/express-2021/lessons/4/levels/3": {
    "short_instructions": "Drag blocks onto the screen to have the artist draw over the grey lines in the picture. (Each line is 100 pixels long)",
    "long_instructions": "_\"Let's make a cage for my pet monster!\"_\n\nDrag blocks onto the screen to have the artist draw over the grey lines in the picture.\\\n(Each line is 100 pixels long)",
    "authored_hints": {
      "courseC_artist_prog2_a": "_\"If you use the [blockly block][0] block, I will draw a line.\"_",
      "courseC_artist_prog2_b": "Having trouble turning the corner? Use the [blockly block][0] block."
    },
    "callouts": {
      "slider": "You can slow your program down here."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/4/levels/4": {
    "short_instructions": "Each side of the inner square is 100 pixels and all of the angles are 90 degrees.",
    "long_instructions": "_\"This spaceship needs a window!\"_\n\nEach side of the inner square is 100 pixels and all of the angles are 90 degrees.",
    "authored_hints": {
      "courseC_artist_prog3_a": "To create this window, just draw a square with 100 pixel sides.\n\n-   move forward\n-   turn\n-   move forward\n-   turn\n-   move forward\n-   turn\n-   move forward",
      "courseC_artist_prog3_b": "Want to make shorter code? Try using a loop in this puzzle."
    },
    "function_definitions": {
      "draw flame": {
        "name": "draw flame",
        "parameters": {
          "x": "x"
        }
      },
      "draw fire": {
        "name": "draw fire"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/4/levels/5": {
    "short_instructions": "Finish Starla's rocket so she can chase her pet.",
    "long_instructions": "_\"Oh no!  Starla's pet alien just flew away! Let's help the spacewoman!\"_\n\nFinish Starla's rocket so she can chase her pet.\\\n(Each side of the triangle is 100 pixels long and has 120 degree outer angles.)",
    "authored_hints": {
      "courseC_artist_prog4_a": "To finish the rocket, just draw the triangle on top!",
      "courseC_artist_prog4_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
      "courseC_artist_prog4_c": "To draw a triangle, you will want to:\n\n-   move forward\n-   turn left 120 degrees\n-   move forward\n-   turn left 120 degrees\n-   move forward"
    },
    "function_definitions": {
      "booster": {
        "name": "booster"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/4/levels/6": {
    "short_instructions": "Finish this tag by drawing a rectangle around the outside.\n(The long sides are 200 pixels each and the short sides are each 100 pixels)",
    "long_instructions": "_\"Maybe we should make a tag for each of our pets in case they get lost!\"_\n\nFinish this tag by drawing a rectangle around the outside.\\\n(The long sides are 200 pixels each and the short sides are each 100 pixels)",
    "authored_hints": {
      "courseC_artist_prog5_a": "Slow the slider down all the way until you can run your code line-by-line to see where things go wrong.",
      "courseC_artist_prog5_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.",
      "courseC_artist_prog5_c": "You can use the drop down menus in the blocks to change what they do!",
      "courseC_artist_prog5_d": "Each turn should be 90 degrees to the right."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/4/levels/7": {
    "short_instructions": "Draw this diamond with 200 pixel sides.",
    "long_instructions": "_\"Now a tag for Belle!\"_\n\nDraw this square with 200 pixel sides.",
    "authored_hints": {
      "courseC_artist_prog6_a": "The artist is already facing the correct way to draw his first line.",
      "courseC_artist_prog6_b": "This diamond is really just a square that's standing on its corner.",
      "courseC_artist_prog6_c": "Since this diamond is also a square, be sure to turn 90 degrees at the corners."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/4/levels/8": {
    "display_name": "Pet Name Tag",
    "bubble_choice_description": "This pet's name tag is a special shape!",
    "short_instructions": "**Challenge:** This pet's name tag is a special shape!  This pet's name tag is a special shape!",
    "long_instructions": "**Challenge:** This pet's name tag is a special shape!  \n\nCan you figure out how to draw the outline?\\\n(The long side is 150 pixels and each of the short sides are 75 pixels.)",
    "authored_hints": {
      "courseC_artist_prog7_a": "Every angle is either 45 or 90 degrees.",
      "courseC_artist_prog7_b": "Does it work at the first step?\\\nHow about the second?\\\nWhere does it go wrong?",
      "courseC_artist_prog7_c": "You can use the dropdown menu on the turn blocks to see which angle you need!",
      "courseC_artist_prog7_d": "You will want to:\n\n-   move forward\n-   turn right 45 degrees\n-   move forward\n-   turn right 90 degrees\n-   move forward\n-   turn right 45 degrees\n\nRepeat this pattern 2 times!",
      "courseC_artist_prog7_e": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/4/levels/9": {
    "short_instructions": "One more tag.  This is a triangle for Pi.\n(Each side is 150 pixels)",
    "long_instructions": "One more tag.  This is a triangle for Pi.\\\n(Each side is 150 pixels)"
  },
  "https://studio.code.org/s/express-2021/lessons/4/levels/10": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The artist will draw a triangle with three equal sides.",
              "correct": false,
              "feedback": "Incorrect.  The artist draws a square."
            },
            {
              "text": "The artist will draw a single line.",
              "correct": false,
              "feedback": "Incorrect.  The artist draws a square."
            },
            {
              "text": "The artist will draw a square.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The artist will draw a pentagon",
              "correct": false,
              "feedback": "Incorrect. The artist draws a square."
            }
          ],
          "questions": [
            {
              "text": "Look carefully at the code below. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/4/extras?level_name=courseC_artist_prog_challenge1_2021": {
    "display_name": "Pet House",
    "bubble_choice_description": "Draw rooms for each of the animals. ",
    "short_instructions": "Draw rooms for each of the animals. ",
    "long_instructions": "Draw rooms for each of the animals. There are many different ways to solve this puzzle, so have some fun! Each square has a side length of 100 pixels.",
    "authored_hints": {
      "courseC_artist_prog_challenge1_a": "You can draw this as a rectangle with a line in the middle or two different squares!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/4/extras?level_name=courseC_artist_prog_challenge2a_2021": {
    "display_name": "Road",
    "bubble_choice_description": "Help me paint the yellow lines on this road!",
    "short_instructions": "_\"Help me paint the yellow lines on this road!\"_",
    "long_instructions": "_\"Help me paint the yellow lines on this road!\"_\n\nThe three line segments have lengths of 150, 100, and 200 pixels!",
    "authored_hints": {
      "courseC_artist_prog_challenge2_a": "After you draw the first line, turn left before you draw your second line.",
      "courseC_artist_prog_challenge2_b": "After you draw the second line, turn right before you draw your third line."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/5/levels/1": {
    "display_name": "This is Sprite Lab"
  },
  "https://studio.code.org/s/express-2021/lessons/5/levels/2": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing will happen.",
              "correct": false,
              "feedback": "Incorrect. The tumbleweed will begin tumbling"
            },
            {
              "text": "The tumbleweed will float to the top of the screen",
              "correct": false,
              "feedback": "Incorrect. The tumbleweed will begin tumbling"
            },
            {
              "text": "The tumbleweed will begin tumbling",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The tumbleweed will blink on and off.",
              "correct": false,
              "feedback": "Incorrect. The tumbleweed will begin tumbling"
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. What will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/5/levels/3": {
    "short_instructions": "Change the tumbleweed into any kind of fish!",
    "long_instructions": "Let's make a fish tank!  \n\nChange the tumbleweed sprite into any kind of fish by clicking [blockly block][0].\n\nBe sure to also update this sprite's costume in [blockly block][1].",
    "teacher_markdown": "This lesson contains a **mini-project** called _Swimming Fish_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Student must have at least one fish sprite with an active behavior.",
    "behavior_names": {
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/5/levels/4": {
    "short_instructions": "Change the fish's behavior so that it swims left and right.",
    "long_instructions": "The fish is getting dizzy! \n\nChange the fish's behavior so that it swims left and right.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Swimming Fish_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Students must have at least one fish sprite with an active behavior.\n-   The fish sprite needs to move left and right. This can be done by changing its behavior to `swimming left and right`.",
    "callouts": {
      "spritelab_comment": "Use this block to leave yourself or your teacher notes about how your code works."
    },
    "behavior_names": {
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/5/levels/5": {
    "short_instructions": "Use the `set background color` block to make the background any color.",
    "long_instructions": "Our fish tank needs some water! \n\nUse [blockly block][0] to make the background any color. We recommend blue!",
    "teacher_markdown": "This lesson contains a **mini-project**. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Student must change the background to something other than white.",
    "behavior_names": {
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/5/levels/6": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/express-2021/lessons/5/levels/7": {
    "short_instructions": "The fish is adventurous and wants to meet new creatures in the sea. Add another sprite to the fish tank. This sprite can have any costume other than the one you use for your fish!",
    "long_instructions": "The fish is adventurous and wants to meet new creatures in the sea. Add another sprite to the fish tank. This sprite can have any costume other than the one you use for your fish!",
    "teacher_markdown": "This lesson contains a **mini-project** called _Swimming Fish_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Student must create exactly two unique sprites, and one must be a fish.",
    "behavior_names": {
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/5/levels/8": {
    "short_instructions": "Add a behavior to the fish's new friend.",
    "long_instructions": "What do you want your fish’s new friend to do?\n\nAdd a behavior and watch them go!",
    "teacher_markdown": "This lesson contains a **mini-project** called _Swimming Fish_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\n\nThis level will validate a student’s code by checking that the following conditions have been met:\n\n-   Each sprite must have an active behavior.",
    "behavior_names": {
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/5/levels/9": {
    "short_instructions": "Use some new blocks from the toolbox to make your fish tank special!",
    "long_instructions": "We've added a lot of new blocks to the toolbox.   \n\nPlay with them to make your fish tank special!",
    "teacher_markdown": "This lesson contains a **mini-project** called _Swimming Fish_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/1": {
    "short_instructions": "Make a prediction!",
    "long_instructions": "Make a prediction! Study the code.\n\n-   Both planes will move one space along the grid.\n-   Both planes will start moving and not stop.\n-   One plane will move first, and the other plane will move second.\n-   The planes will crash.",
    "behavior_names": {
      "moving east": "moving east",
      "moving west": "moving west",
      "mystery behavior": "mystery behavior",
      "wandering": "wandering",
      "running east": "running east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "patrolling": "patrolling"
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Both planes will move one space along the grid, then stop.",
              "correct": false,
              "feedback": "Incorrect. These sprites have \"behaviors\" which keep running until they are told to stop."
            },
            {
              "text": "Both planes will start moving and not stop.",
              "correct": true,
              "feedback": "Correct! These behaviors tell the planes to start moving and keep going."
            },
            {
              "text": "One plane will move first, and the other plane will move later.",
              "correct": false,
              "feedback": "Incorrect. Each block of code in Sprite Lab runs instantly after the next."
            },
            {
              "text": "The planes will crash.",
              "correct": false,
              "feedback": "Incorrect. The planes are not positioned in a way that will make them touch."
            }
          ],
          "questions": [
            {
              "text": "Read the code, then make a prediction."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/2": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/3": {
    "display_name": "Making Sprites",
    "bubble_choice_description": "Practice making sprites.\r\n",
    "short_instructions": "Make a sprite.",
    "long_instructions": "# Making Sprites\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nTo make a sprite, open the **Sprites** category of the toolbox and drag out this block:\n\n[blockly block][1]\n\n## Do This\n\n-   Connect a `make new sprite` block under the `when run` block.\n-   Choose a costume for your sprite.\n-   Press the \"Run\" button when your code is finished.",
    "callouts": {
      "sprites_category": "Click here to open the Sprites category."
    },
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/4": {
    "display_name": "Positioning Sprites",
    "bubble_choice_description": "Practice making sprites and choosing their locations.",
    "short_instructions": "Choose a new position for your sprite on the screen.",
    "long_instructions": "# Positioning Sprites\n\nEach sprite has a **location**. You can set the location by clicking the pin on this block: [blockly block][0]\n\n## Do This\n\n<div style=\"float:right\">\n\n[expandable][1]\n\n</div>\n\n-   Find the new block in the **Locations** category of the toolbox and drag it into your workspace.\n-   Connect it to the `make new sprite` block you added before.\n-   Click the pin [][2] on the location block then choose a new position for your sprite on the screen.\n-   Press Run when you are finished with your code.",
    "callouts": {
      "locations_category": "Click here to open the Locations category."
    },
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/5": {
    "display_name": "Positioning Sprites",
    "bubble_choice_description": "Practice making sprites and choosing their locations.",
    "short_instructions": "Make four sprites.",
    "long_instructions": "# More Sprites\n\nNow, let's add even more sprites to this program.\n\n## Do This\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\n-   Click the image to the right to expand it.\n-   Make four sprites. Choose any costumes you like.\n-   Position each one in a different corner of the screen like the image.",
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/6": {
    "display_name": "Sprite Properties",
    "bubble_choice_description": "Learn to change the size of sprites.",
    "short_instructions": "Use the new block in the Sprites category to change the size of the second sprite.",
    "long_instructions": "# Sprite Properties\n\nSprites have more properties, including a **size** that can be set with code. Here are two sprites, but one is larger than the other. Use the new block in the **Sprites** category to change the size of the second sprite.\n\n## Do This\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\n-   Use a `set size` block to resize the second sprite. You can make it bigger or smaller.\n\n_Hint:_ The default sprite size is 100, so choose any other number.",
    "callouts": {
      "sprites_category2": "Look for a new block here."
    },
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/7": {
    "display_name": "Sprite Behaviors",
    "bubble_choice_description": "Give a sprite a behavior.",
    "short_instructions": "Give a sprite a behavior.",
    "long_instructions": "# Behaviors\n\nSprites can have their own behaviors, which are actions they will do over and over while the program runs. To give a sprite a behavior, you need to use a `sprite begins` block with a behavior block. \n\n## Do This\n\n<div style=\"float:right\">\n\n[expandable][0][expandable][1][expandable][2]\n\n</div>\n\n-   Drag out a `sprite begins` block from the **Behaviors** toolbox category.\n\n-   Drag out a green behavior block. Connect the blocks in your workspace.\n\n-   Press \"Run\" to see what happens.\n\n-   Explore different behaviors to see what they do.\n\n-   _Challenge:_ Have your sprite begin two different behaviors at the same time.",
    "callouts": {
      "behaviors_category": "Click here to open the Behaviors category."
    },
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "moving west": "moving west"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/8": {
    "display_name": "Desert Scene",
    "bubble_choice_description": "Create a scene. Practice making sprites and choosing their locations.",
    "short_instructions": "Add code to create a desert scene with different sprites.",
    "long_instructions": "# Desert Scene\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nAdd code to create a desert scene with different sprites. You can click the picture to the right for an example.\n\n## Do This\n\n-   Make four sprites. Choose any costumes you like.\n-   Position each one in a different corner of the screen. \n\n[expandable][1]\n\n-   Change the size of your sprites to make your final image look more realistic.",
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/9": {
    "display_name": "Resize the fruit.",
    "bubble_choice_description": "The strawberries are too big! Practice resizing sprites.",
    "short_instructions": "Change the size of the sprites so the banana is bigger than the strawberries.",
    "long_instructions": "# Sprite Sizes\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nCode to create strawberry and banana sprites is below, but the sprites are the wrong size. Change the size of the sprites so the banana is bigger than the strawberries.\n\n## Do This\n\n-   Add two `set size` blocks to the program.\n    <details><summary>Where is this block?</summary>This block is in the <strong>Sprites</strong> category of the toolbox. <xml><block type=\"gamelab_setProp\"><title name=\"PROPERTY\">\"scale\"</title><value name=\"SPRITE\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"face_strawberry_1\"</title></block></value><value name=\"VAL\"><block type=\"math_number\"><title name=\"NUM\">50</title></block></value></block></xml></details>\n\n-   Make the strawberry sprites smaller.\n\n-   Make the banana sprite bigger.\n\n_Hint:_ The default size is 100.",
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/10": {
    "display_name": "Animate a Sailing Ship",
    "bubble_choice_description": "Practice moving sprites and using behaviors.",
    "short_instructions": "Make a ship sprite and have it sail across the water.",
    "long_instructions": "# Animate a sailing ship\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nMake a ship sprite and have it sail across the water.\n\n## Do This\n\n-   Make a new ship sprite.\n-   Move the sprite so it sits upon the water.\n-   Make the sprite move across the screen with a behavior.\n-   _Bonus:_ Use a second behavior, such as \"wobbling\" or \"fluttering\", to make the ship more life-like as it moves.",
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/11": {
    "display_name": "A Breezy Day",
    "bubble_choice_description": "Practice using behaviors.",
    "short_instructions": "Make the cloud move across the screen. Make the sun spin. Make the butterfly wander around.",
    "long_instructions": "# A Breezy Day\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nThere is already code to create the sprites. Add to this program to give each sprite a behavior.\n\n## Do This\n\n-   Add a `sprite begins` block for each sprite costume in your program.\n-   Pick behaviors for each sprite:\n    -   Make the cloud move across the screen.\n    -   Make the sun spin.\n    -   Make the butterfly wander around.\n    -   _Bonus:_ Use additional behaviors to make the butterfly appear more life-like.",
    "authored_hints": {
      "behavior_list": "Try using behaviors such as \"moving east and looping\", \"spinning right\", and \"wandering\"."
    },
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/6/levels/12": {
    "display_name": "Blank",
    "bubble_choice_description": "Pick your own costumes or draw them yourself!",
    "short_instructions": "Now it's your turn to create whatever you want!",
    "long_instructions": "# Free Play - Make a Scene\n\nNow it's your turn to create whatever you want!\n\n## Do This\n\n-   Add sprites. Give them costumes and locations.\n-   Set the size of your sprites so they look the way you want.\n-   Bring your sprites to life with behaviors!",
    "behavior_names": {
      "moving west and looping": "moving west and looping",
      "moving east": "moving east",
      "moving east and looping": "moving east and looping",
      "moving west": "moving west",
      "wandering": "wandering",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "fluttering": "fluttering",
      "wobbling": "wobbling"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/1": {
    "short_instructions": "Make a prediction!",
    "long_instructions": "Make a prediction! Study the code.\n\n-   The sprite will just spin right.\n-   The sprite will just move east.\n-   The sprite will spin and move at the same time.\n-   The sprite will spin first and then move later.",
    "callouts": {
      "behaviors_edit": "Click here to see how this behavior works."
    },
    "behavior_names": {
      "mystery behavior": "mystery behavior",
      "wandering": "wandering",
      "running east": "running east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "moving east": "moving east"
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The sprite will just spin right.",
              "correct": false,
              "feedback": "Incorrect. The sprite will also move east."
            },
            {
              "text": "The sprite will just move east.",
              "correct": false,
              "feedback": "Incorrect. The sprite has not stopped spinning, so it will do both simultaneously."
            },
            {
              "text": "The sprite will spin and move at the same time.",
              "correct": true,
              "feedback": "Correct! Both behaviors will happen simultaneously."
            },
            {
              "text": "The sprite will spin first and then move later.",
              "correct": false,
              "feedback": "Incorrect. In Sprite Lab, connected blocks happen immediately after each the last one, so both behaviors will happen simultaneously."
            }
          ],
          "questions": [
            {
              "text": "Read the code, then make a prediction."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/2": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/3": {
    "short_instructions": "Make a sprite, then change its size and give it a behavior.",
    "long_instructions": "# Quick Review\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nIn this lesson, we'll be doing more with sprites and behaviors. First, let's practice what you learned in the last lesson.\n\n## Do This\n\n-   Make a sprite.\n-   Set the sprite's size.\n-   Begin any behavior.",
    "behavior_names": {
      "patrolling": "patrolling",
      "wobbling": "wobbling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/4": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Make the sprite begin a second behavior after some time has passed.",
    "long_instructions": "# Time Events\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nEvents make it easy to change what happens over time as your program runs. Use an [blockly block][1] event to make the sprite begin a new behavior after some time has passed.\n\n## Do This\n\n-   Add an `at 3 seconds` event block to your workspace.\n-   Connect a `sprite begins` block under this event.\n\nThe sprite should begin a second behavior after some time has passed.",
    "callouts": {
      "events_category": "Click here to open the Events category."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "wobbling": "wobbling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/5": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Make the sprite's size, position, or rotation change when the user presses a key. ",
    "long_instructions": "# Key Events\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nEvents make it possible to create programs that are interactive. Use the [blockly block][1] event block to change the sprite's _size_, _position_, or _rotation_ when the user presses a key. \n\n## Do This\n\n-   Add a `when key pressed` **event** block to your workspace.\n-   Connect a `change` block under this event.\n-   Press the arrow keys on your screen or keyboard after pressing Run.",
    "authored_hints": {
      "changePropBlock": "You will also need this block:\n\n[blockly block][0]"
    },
    "callouts": {
      "whenKey": "Use the new event block found here."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "wobbling": "wobbling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/6": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Make the sprite move one way, then another way.",
    "long_instructions": "# Switching Behaviors\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nIf you want to switch from one behavior to another, you need to _stop_ the old behavior and _begin_ the new behavior  at the same time. You can use a new block to make sprites stop their current behaviors.\n\n[blockly block][1]\n\nYou'll need to connect a behavior to this block, such as `moving east`.\n\n## Do This\n\n-   Run the code and see what happens.\n-   Add behaviors to each `stops` and `begins` block to make the sprite change from moving east to moving west at 2 seconds.",
    "behavior_names": {
      "moving east": "moving east",
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/7": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Make the sprite spin one way, then another way.",
    "long_instructions": "# Opposite Behaviors\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nSome behaviors do opposite things, like `moving east`/`moving west`, `growing`/`shrinking`, or `spinning right`/`spinning left`. If a sprite has two opposite behaviors it might seem like the sprite isn't do anything at all. \n\n## Do This\n\n-   Run the code and see what happens at 3 seconds.\n-   Add a `sprite stops` block under the event.\n-   Use this block to stop the old behavior.\n\n_The sprite should now spin one way, then another way._",
    "callouts": {
      "stops_block": "New blocks here!"
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/8": {
    "display_name": "Blast Off!",
    "bubble_choice_description": "Make the ship move after a few second have passed. Practice adding behaviors with events.",
    "short_instructions": "Use an event to make the ship begin moving forward after 8 seconds.",
    "long_instructions": "# Blast Off!\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nThis ship is ready to go! Use an [blockly block][1] event to make the ship begin moving forward after 8 seconds.\n\n## Do This\n\n-   Add an `at 8 seconds` event block to your workspace.\n-   Connect a `sprite begins` block under this event.\n-   Give the sprite a behavior to make it \"blast off\" (move right) across the screen after 8 seconds.",
    "behavior_names": {
      "patrolling": "patrolling",
      "wobbling": "wobbling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/9": {
    "display_name": "Learning to Fly",
    "bubble_choice_description": "A problem in this code is stopping the bird. Get the code into the right order.",
    "short_instructions": "Change the order of the code underneath \"at 2 seconds\" so that the sprite only stops the old behaviors.",
    "long_instructions": "# Debug - Order Matters\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\nThere is a bug in this code. \n\n## Do This\n\n-   Run the code to see what happens. Click below to read about the bug.\n    <details><summary>What's the bug?</summary>After 2 seconds, the bird should fly away. Instead, it just stops.</details>\n-   Change the order of the code underneath `at 2 seconds` so that the sprite only stops the **old** behaviors.",
    "callouts": {
      "stopAllBug": "This block is in the wrong order."
    },
    "behavior_names": {
      "moving east": "moving east",
      "moving north": "moving north",
      "patrolling": "patrolling",
      "moving with arrow keys": "moving with arrow keys",
      "wobbling": "wobbling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "driving with arrow keys": "driving with arrow keys",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/10": {
    "display_name": "Do a barrel roll",
    "bubble_choice_description": "Make the plane spin one way, and the other. Practice controlling behaviors with events.",
    "short_instructions": "Make the plane sprite spin left when you press one key, and right when you press the other key. ",
    "long_instructions": "# Do a Barrel Roll!\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nLet's make the plane sprite spin left when you press one key, and right when you press the other key. \n\nDo you remember this block?\n\n[blockly block][1]\n\n## Do This\n\n-   Read the code below carefully.\n-   Run the code and press both arrows to see what happens.\n    <details><summary><strong>What's the bug?</strong></summary>When you press the first arrow key, the plane spins, but the program stops working when you press the second arrow key.</details>\n-   Add an `sprite stops` block under each event.\n-   Use this block to stop the opposite behavior.\n\n_The sprite should now spin in either direction when you press each arrow key._",
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/11": {
    "display_name": "Shrink and Grow",
    "bubble_choice_description": "Make the sprite change sizes with the arrow keys. Practice controlling behaviors with events.",
    "short_instructions": "Make the sprite shrink when you press one key, and grow when you press the other key. ",
    "long_instructions": "# Shrink and Grow\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nLet's make the sprite shrink when you press one key, and grow when you press the other key. \n\nDo you remember this block?\n\n[blockly block][1]\n\n## Do This\n\n-   Read the code below carefully.\n-   Run the code and press both arrows to see what happens.\n    <details><summary><strong>What's the bug?</strong></summary>When you press an arrow key, the sprite begins one behavior. When you press the second arrow key, the sprite seems to stop responding.</details>\n-   Add an `sprite stops` block under each event.\n-   Use this block to stop the opposite behavior.\n\n_The sprite should now shrink or grow when you press each arrow key._",
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/12": {
    "display_name": "Puff up the fish",
    "bubble_choice_description": "Make the pufferfish quickly expand in size! Practice using events.",
    "short_instructions": "Use the \"while key pressed\" event block to repeatedly change the sprite's size while the user presses a key.",
    "long_instructions": "# When vs. While\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nThe [blockly block][1] block has two important options. It can be triggered \"when\" a key is first pressed (one time) or \"while\" the key is pressed (over and over again).\nSetting this block to \"while\" can make your interactive animations faster and smoother. Use the `when/while key pressed` event block to repeatedly change the sprite's _size_ while the user presses a key.\n\n## Do This\n\n-   Add a `key pressed` event to your workspace. Set it to either \"when\" or while\".\n-   Connect a `change size by` **action** block under this event.\n-   Press the arrow keys on your screen or keyboard after pressing Run.\n\n_Extra Challenge:_ Make the sprite get bigger when you press \"up\" and smaller when you press \"down\".",
    "authored_hints": {
      "changeProp": "You will also need this block:\n\n[blockly block][0]"
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "wobbling": "wobbling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/13": {
    "display_name": "Penguin on the move",
    "bubble_choice_description": "Make a sprite move around using the arrow keys. ",
    "short_instructions": "Change each \"when key pressed\" block to \"while key pressed\" to make the sprite's movement faster and smoother.",
    "long_instructions": "# When vs. While\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nThe [blockly block][1] has two important options. It can be triggered \"when\" a key is first pressed (one time) or \"while\" the key is pressed (over and over again).\nSetting this block to \"while\" can make your interactive animations faster and smoother. The `when key pressed` event block makes the sprite move with the keys, but it feels slow and clunky.\n\n## Do This\n\n-   Run the program and press the arrow keys to see how the sprite moves.\n-   Change each `when key pressed` block to `while key pressed` to make the sprite's movement faster and smoother.",
    "callouts": {
      "whenToWhile": "Try changing when to while."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "wobbling": "wobbling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/7/levels/14": {
    "display_name": "Blank",
    "bubble_choice_description": "Pick your own costumes or draw them yourself!",
    "long_instructions": "# Free Play - Make a Scene\n\nThis is the project you created during the last lesson. With events you can now make different things happen over time or when the user presses a key.\n\n## Do This\n\n-   Add events to your program.\n-   Add code under each event to change your sprites, their properties, or their behaviors.",
    "behavior_names": {
      "moving west and looping": "moving west and looping",
      "moving east": "moving east",
      "moving east and looping": "moving east and looping",
      "moving west": "moving west",
      "wandering": "wandering",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "fluttering": "fluttering",
      "wobbling": "wobbling"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/8/levels/1": {
    "short_instructions": "Run the code and play with the pet! When you are done, click **Finish**.",
    "long_instructions": "# Virtual Pet\n\nWhoa! Check out this cool pet! \n\n## Do This:\n\n-   Play with the virtual pet program.\n-   Read the code to see how it works. You can even make changes!\n-   What happens when the pet touches the other sprites?\n-   What happens when you click the pet?\n\nRun the code and play with the pet! When you are done, click **Finish**.",
    "behavior_names": {
      "patrolling": "patrolling",
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "moving with arrow keys": "moving with arrow keys",
      "driving with arrow keys": "driving with arrow keys",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/8/levels/2": {
    "short_instructions": "Now it's your turn to create your own virtual pet! Let's start by making sprites for your PET and its FOOD.",
    "long_instructions": "_Now it's your turn to create your own virtual pet! Let's start by making sprites for your PET and its FOOD._\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\n## Do This\n\n1.  (Optional) Click the **Costumes** tab to add new costumes to your project.\n2.  Make two sprites with different costumes.\n3.  Choose different locations for your sprites.\n4.  Change the size of your sprites with a `set size` block.",
    "teacher_markdown": "This lesson contains a **mini-project**. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "callouts": {
      "vp_costumes": "Click here to add new costumes to your project!"
    },
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/8/levels/3": {
    "short_instructions": "Next let's make it so the user can move the food to your pet with the \"being draggable\" behavior.",
    "long_instructions": "_Next let's make it so the user can move the food to your pet with the \"being draggable\" behavior:_ \n[blockly block][0]\n\n<div style=\"float:right\">\n\n[expandable][1]\n\n</div>\n\n## Do This\n\n1.  Add a `sprite begins` block to your code. Select your food sprite's costume.\n2.  Find the \"being draggable\" behavior and add it to your code.\n3.  Press \"Run\". \n\n_You should now be able to move the food sprite around on the screen by clicking or tapping it._",
    "teacher_markdown": "This lesson contains a **mini-project** called _Virtual Pet_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "behavior_names": {
      "wandering": "wandering",
      "wandering2": "wandering2",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "moving east2": "moving east2",
      "shrinking": "shrinking",
      "spinning left2": "spinning left2",
      "growing": "growing",
      "spinning right2": "spinning right2",
      "moving south": "moving south",
      "shrinking2": "shrinking2",
      "swimming left and right": "swimming left and right",
      "growing2": "growing2",
      "moving south2": "moving south2",
      "swimming left and right2": "swimming left and right2",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "moving north2": "moving north2",
      "patrolling": "patrolling",
      "jittering2": "jittering2",
      "moving west2": "moving west2",
      "patrolling2": "patrolling2"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/8/levels/4": {
    "short_instructions": "Now, let's use a new \"when touching\" event block to make your pet grow when it eats!",
    "long_instructions": "_Now, let's use a new \"when touching\" event block to make your pet grow when it eats!_\n[blockly block][0]\n\n<div style=\"float:right\">\n\n[expandable][1]\n\n</div>\n\n## Do This\n\n1.  Drag out a `when touches` event block. Select your two sprites.\n2.  Use a `change size` block below this event to make your pet grow.\n\n**Optional Challenge:**\n\n-   Play a sound when your pet eats its food.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Virtual Pet_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/express-2021/lessons/8/levels/5": {
    "short_instructions": "Next let's add another \"draggable\" sprite for your pet to play with. This could be a toy or even a friend.",
    "long_instructions": "_Next let's add another \"draggable\" sprite for your pet to play with. This could be a toy or even a friend._\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\n## Do This:\n\n1.  Make another new sprite.\n2.  Choose a costume to represent your pet's toy or friend.\n3.  (Optional) Change the size of your new sprite.\n4.  Give the new sprite the \"being draggable\" behavior.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Virtual Pet_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "callouts": {
      "vp_costumes": "Click here to add new costumes to your project!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/8/levels/6": {
    "short_instructions": "Give your pet a behavior when the new sprite touches it.",
    "long_instructions": "_Now, let's show your pet's excitement by giving it a behavior when the new sprite touches it._\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\n## Do This:\n\n1.  Add another `when touches` block to your code. Select your pet and its toy or friend.\n2.  Use a `sprite begins` block to give your pet a new behavior _when the new sprite touches it._\n\n**Optional Challenge:**\n\n-   Play a sound to show your pet's excitment.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Virtual Pet_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/express-2021/lessons/8/levels/7": {
    "short_instructions": "Great job! What else can you add to your program? Try anything you like!",
    "long_instructions": "_Great job! What else can you add to your program? Try anything you like!_\n\nTry these ideas:\n\n-   Add another sprite that interacts with your pet in a different way.\n-   Use a `when pet clicked` block to make your pet _stop_ any behaviors.\n-   Experiment with different behaviors. Combine behaviors that make the sprite _move_ with behaviors like \"fluttering\", \"jittering\", and \"wobbling\" to make things more lifelike.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Virtual Pet_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/express-2021/lessons/9/levels/2": {
    "short_instructions": "Drag the [blockly block][0] block into the workspace, and connect it inside the [blockly block][1] block.",
    "long_instructions": "Drag the [blockly block][0] block into the workspace, and connect it inside the [blockly block][1]\n block. \n\n Choose `cat` or `sloth` to create your first dancer.\n\n-   _You can also click the lightbulb to the left if you want more information or extra challenges._",
    "authored_hints": {
      "validation": "**How do I pass this level?**\n\n-   Make sure a dancer appears on the screen.\n\n_This level ends after 4 measures._",
      "challenges": "**Optional Challenges**\n\n-   Choose a different song to play.\n-   Move your dancer to a new location.\n-   Make more than one dancer."
    },
    "callouts": {
      "dance_callout_01": "Choose the type of dancer here."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/9/levels/4": {
    "short_instructions": "Make the cat do a dance move when you press a key.",
    "long_instructions": "The [blockly block][0] block lets you run code when you press the arrow buttons. \nUse the [blockly block][1] block to make the cat clap!\n\n_Make sure to press your \"up arrow\" key or [][2] after clicking the Run button!_",
    "authored_hints": {
      "validation": "**How do I pass this level?**\n\n-   The dancer must perform a move.\n-   You must press an arrow key.\n\n_This level ends after 4 measures._",
      "challenges": "**Optional Challenge**\n\nUse more than one [blockly block][0] block."
    },
    "callouts": {
      "dance_callout_11_a": "Add this block to your program.",
      "arrow_buttons": "Press the arrow buttons to control your dancer."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/9/levels/5": {
    "short_instructions": "It's time for a dance-off! Program each dancer to move when you press different keys. Choose your favorite move for each dancer or set it to \"(Random)\" for something totally unpredictable! ",
    "long_instructions": "It's time for a dance-off! Program each dancer to move when you press different keys. Choose your favorite move for each dancer or set it to `(Random)` for something totally unpredictable!",
    "authored_hints": {
      "validation": "**How do I pass this level?**\n\n-   Both dancers must perform a move.\n-   You must press the arrow keys.\n\n_This level ends after 6 measures._",
      "challenges": "**Optional Challenge**\n\n-   Make a dancer respond to the left and right arrow keys."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/9/levels/7": {
    "short_instructions": "Make your dancer start a new move after the fourth measure.",
    "long_instructions": "Let's get the dancers moving in time with the music!\n\nConnect the [blockly block][0] block to a [blockly block][1] block from the toolbox. \n\nYour dancer should start a new move after the fourth measure.\n\n**Measures** are used to count time in music. In this tutorial, a measure is four beats long.",
    "authored_hints": {
      "validation": "**How do I pass this level?**\n\n-   The dancer needs to switch to a new move after 4 measures.\n\n_The level ends after 7 measures._"
    },
    "callouts": {
      "dance_callout_02": "Add this block to your program!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/9/levels/8": {
    "short_instructions": "Now make the dancer start a new move after 6 measures!",
    "long_instructions": "_Now we're grooving!_ \n\nAdd an [blockly block][0] block to your workspace. Make the dancer start a new move after 6 measures.",
    "authored_hints": {
      "validation": "**How do I pass this level?**\n\n-   After 6 measures, your dancer needs to be doing a different dance than it was after 4 measures.\n\n_The level ends after 11 measures._",
      "challenges": "**Optional Challenge**\n\n-   Change the background whenever the dancers switch moves."
    },
    "callouts": {
      "dance_callout_05": "Add a new event to your program."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/9/levels/9": {
    "short_instructions": "Set up a group of backup dancers around the lead dancer in the middle.",
    "long_instructions": "Use this new block to set up a group of smaller backup dancers around a lead dancer in the middle. \n\n  [blockly block][0]\n\nNow you can create a bunch of backup dancers all at once!",
    "authored_hints": {
      "validation": "**How do I pass this level?**\n\n-   Create one lead dancer and a group of backup dancers within the first 4 measures of the song.\n\n_This level ends after 7 measures._",
      "challenges": "**Optional Challenge**\n\n-   Create multiple groups of backup dancers."
    },
    "callouts": {
      "dance_party_11_5_groups": "New block!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/9/levels/11": {
    "short_instructions": "Change the size of the group of backup dancers.",
    "long_instructions": "Every dancer has a set of _properties_ that controls what it looks like.\n\nUse [blockly block][0] under a green event block to make dancers appear closer or farther away.",
    "authored_hints": {
      "validation": "**How do I pass this level?**\n\n-   Change the size of at least one dancer.\n\n_This level ends after 6 measures._",
      "challenges": "**Optional Challenge**\n\n-   Experiment by changing other properties such as width or rotation."
    },
    "callouts": {
      "setprop_hint": "New block!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/9/levels/12": {
    "short_instructions": "Try changing the tint of one of your dancers (or an entire group)!",
    "long_instructions": "Dancers have a \"tint\" property that can add a layer of color. Try changing the tint of one of your dancers (or an entire group)!",
    "authored_hints": {
      "validation": "**How do I pass this level?**\n\n-   Change the tint of at least one dancer.\n\n_This level ends after 6 measures._",
      "tint_hint": "Did you notice that your dancers don't change to the exact color you choose? This is because **tints** mix the color you choose with the colors of the dancer."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/9/levels/13": {
    "short_instructions": "Be creative with these new blocks!",
    "long_instructions": "This **new block** is a special kind of event that is triggered over and over.\n\n[blockly block][0]\n\nBy placing the other new blocks in your toolbox inside the repeat block you can repeatedly change dancers' properties over time. Be creative and have fun!\n\n_When you are done press the Finish button._",
    "authored_hints": {
      "validation": "**How do I pass this level?**\n\n-   Just press the \"Finish\" button!",
      "repeat_every_ideas": "**Need some ideas?**\n\n-   Repeatedly change a dancer's size to make it grow.\n-   Repeatedly change a dancer's rotation to make it spin.\n\n_You can also use negative numbers to create an opposite effect!_",
      "next_previous": "**Optional Challenge**\n\n-   You can also use this new event block to cycle through a list of dance moves by setting the move to `(Random)`, `(Next)`, or `(Previous)`.\n    <xml><block type=\"Dancelab_changeMoveEachLR\">\n    <title name=\"GROUP\">???</title>\n    <title name=\"MOVE\">\"rand\"</title>\n    <title name=\"DIR\">-1</title>\n    </block></xml>"
    },
    "callouts": {
      "new_block_3": "New block!",
      "new_block_4": "New block!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/9/levels/15": {
    "short_instructions": "Get your groove on! Create a dance of your own to share with your friends.",
    "long_instructions": "Get your groove on! Create a dance of your own to share with your friends."
  },
  "https://studio.code.org/s/express-2021/lessons/9/extras?level_name=CourseD_Dance_2020_bonus1_2021": {
    "display_name": "Back and Forth",
    "short_instructions": "Back and Forth! (Click \"More\" for details)",
    "long_instructions": "# Back and Forth!\n\nSometimes you might want to create a pattern of dance moves you choose. This new block lets you do just that.\n\n[blockly block][0]\n\nThe moves you choose above will repeat in sequence forever.\n\n-   Create an alternating routine for the lead dancer at the front!\n-   Use different numbers to change the rate at which the moves alternate. Try `1` or `0.5` to alternate more quickly!",
    "authored_hints": {
      "alternate": "The alternate block is in the \"Dancers\" category."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/9/extras?level_name=CourseD_Dance_2020_bonus3_2021": {
    "display_name": "Get In Formation",
    "short_instructions": "Let's Get in Formation! (Click \"More\" for details)",
    "long_instructions": "# Let's Get in Formation!\n\nCheck out this dance that uses the [blockly block][0] block to change the backup dancers' formation throughout the dance. Try one of these ideas to extend it:\n\n-   Create a second group of dancers in a different layout\n-   Change layout when a key is pressed\n-   Change a property when the dancers change formation"
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/2": {
    "short_instructions": "BB-8 will pick up any metal scraps along the path where he moves. Use 5 of the same block to get BB-8 to pick up all of the scrap metal in the play area.",
    "long_instructions": "[][0] _\"Go get the scrap metal, BB-8!\"_ \n\nUse five of the same blocks to get the scrap metal. Scrap metal glows like this: [][1]",
    "authored_hints": {
      "courseC_starWars_loops1_a": "When BB-8 rolls over scrap metal he picks it up automatically.",
      "courseC_starWars_loops1_b": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.",
      "courseC_starWars_loops1_c": "You will want to `move forward` five times to solve this puzzle."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/3": {
    "short_instructions": "BB-8 will pick up any metal scraps along the path where he moves. Use 5 of the same block to get BB-8 to pick up all of the scrap metal in the play area.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "BB-8 will not move.",
              "correct": false,
              "feedback": "Incorrect. The repeat block will make the BB-8 move forward 5 times."
            },
            {
              "text": "BB-8 will move only one space",
              "correct": false,
              "feedback": "Incorrect. The repeat block will make the BB-8 move forward 5 times."
            },
            {
              "text": "BB-8 will move 5 times and get all of the scrap metal",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "BB-8 will move only 3 spaces.",
              "correct": false,
              "feedback": "Incorrect. The repeat block will make the BB-8 move forward 5 times."
            }
          ],
          "questions": [
            {
              "text": "What do you think will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/5": {
    "short_instructions": "To get all the scrap metal, try creating a loop that uses only one block inside of a `repeat` block.",
    "long_instructions": "[][0] _\"Go BB-8!\"_\n\nTo get all the scrap metal, try creating a loop that uses only one block inside of a `repeat` block.",
    "authored_hints": {
      "courseC_starWars_loops2_a": "To repeat code, drag out a `repeat` loop, then put the block you want inside of it."
    },
    "callouts": {
      "courseC_starWars_loops2": "You only have one of these blocks available in this puzzle."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/6": {
    "short_instructions": "In this puzzle, two `repeat` loops will help you get BB-8 to all of the scrap metal with the fewest number of blocks!",
    "long_instructions": "[][0] _\"Keep it up, BB-8.\"_\n\nIn this puzzle, two `repeat` loops will help you get BB-8 to all of the scrap metal with the fewest number of blocks!",
    "authored_hints": {
      "courseC_starWars_loops4_c": "Clicking on the small arrow next to \"left\" on the turn block will let you change it to  \"right\".",
      "courseC_starWars_loops4_a": "Use two `repeat` blocks.",
      "courseC_starWars_loops4_b": "Each `repeat` loop will have only one command inside of it: `move forward`."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/7": {
    "short_instructions": "Get BB-8 to pick up all the scrap metal as quickly as possible!",
    "long_instructions": "[][0] _\"Go BB-8!\"_",
    "authored_hints": {
      "courseC_starWars_loops5_a": "The best solution uses a single `move forward`, then a turn, then a loop."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/8": {
    "short_instructions": "Loops even work with more than one block inside!  Can you loop this sequence?",
    "long_instructions": "[][0] _\"Can you get it all?\"_\n\nLoops even work with more than one block inside!  Can you loop this sequence?",
    "authored_hints": {
      "courseC_starWars_loops6_a": "Try writing all of the moves down on a piece of paper and looking for a pattern.",
      "courseC_starWars_loops6_b": "If you want to use less code, you can put one `repeat` loop inside of another!\\\nThis is called a **nested loop**."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/9": {
    "short_instructions": "Can you try to get all the scrap metal using just one loop? Try programming it all out then finding the repeating code to put in a loop.",
    "long_instructions": "[][0] _\"You can do it!\"_\n\nCan you try to get all the scrap metal using just one loop? Try programming it all out then finding the repeating code to put in a loop.",
    "authored_hints": {
      "courseC_starWars_loops7_a": "This pattern looks harder than it is! Start with a simple stair step. Does that cover all of the scrap metal?",
      "courseC_starWars_loops7_b": "If you are having trouble with this puzzle, try writing all of the moves on a piece of paper and looking for a pattern.",
      "courseC_starWars_loops7_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/10": {
    "long_instructions": "[][0] _\"Keep it up, BB-8.\"_\n\n**Challenge:** Combine ideas from the last few puzzles to complete this level.",
    "authored_hints": {
      "course_starWars_loops8_a": "Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!",
      "course_starWars_loops8_b": "Think of the first half of this problem as a stair step problem. How did you solve that before?",
      "course_starWars_loops8_c": "Take a look at this path.\n\n[][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/11": {
    "short_instructions": "Use what you have learned to pick up all of the scrap metal!",
    "long_instructions": "[][0] _\"Keep going!\"_\n\nUse what you have learned to pick up all of the scrap metal!",
    "authored_hints": {
      "course_starWars_loops9_b": "You can put more than one block inside a `repeat` loop.",
      "course_starWars_loops9_c": "You do not need to turn left to solve this puzzle. All of your turns can be to the right.\n\n[][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/12": {
    "short_instructions": "You are doing great! Keep it up!",
    "long_instructions": "[][0]\n _\"Go BB-8!\"_\n\nYou are doing great! Keep it up!",
    "authored_hints": {
      "courseC_starWars_loops10_a": "Doesn't this pattern look like a giant set of stair steps? See if you can use what you learned from previous puzzles to get all of the turns.",
      "courseC_starWars_loops10_b": "If you want to use less code, you can put one `repeat` loop inside of another!\\\nThis is called a **nested loop**.",
      "courseC_starWars_loops10_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/13": {
    "short_instructions": "You are doing great! Keep it up!",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "BB-8 will travel too far in the first loop.",
              "correct": false,
              "feedback": "Incorrect. The first loop only lets BB-8 move forward 2 spaces, when it needs to move forward by 3 spaces."
            },
            {
              "text": "BB-8 will not travel far enough in the first loop in order to get all of the scrap metal.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "BB-8 will collect all of the scrap metal with no problems.",
              "correct": false,
              "feedback": "Incorrect. The first loop only lets BB-8 move forward 2 spaces, when it needs to move forward by 3 spaces."
            },
            {
              "text": "BB-8 will turn the wrong direction after the first loop.",
              "correct": false,
              "feedback": "Incorrect. The first loop only lets BB-8 move forward 2 spaces, when it needs to move forward by 3 spaces."
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/10/levels/14": {
    "short_instructions": "You are almost there! This time, choose any path you like!",
    "long_instructions": "[][0] _\"Keep going, BB-8!\"_\n\nYou are almost there! This time, choose any path you like!"
  },
  "https://studio.code.org/s/express-2021/lessons/10/extras?level_name=courseC_maze_loops_challenge1a_2021": {
    "short_instructions": "Now Scrat wants to try using loops to find his acorn! ",
    "authored_hints": {
      "courseC_maze_loops_challenge1_a": "Think about this path as being two different pieces. Each one has a pattern you can repeat.",
      "courseC_maze_loops_challenge1_b": "Can you remember how to use loops to repeat a staircase pattern?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/10/extras?level_name=courseC_collector_loops_challenge2_2021": {
    "short_instructions": "Get at least **5** pieces of treasure!",
    "long_instructions": "_\"Let's hunt for treasure!\"_\n\nHelp the collector get at least **5** pieces of treasure.",
    "authored_hints": {
      "courseC_maze_loops_challenge2_b": "Use loops so you don't run out of `collect` blocks!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/11/levels/1": {
    "short_instructions": "Get the artist to the center of the play area, then draw a sticker. ",
    "long_instructions": "**Free Play:** Let's build something bigger, one step at a time!\n\nGet the artist to the center of the play area using the [blockly block][0] block, then use the [blockly block][1] block to make something appear.\n\n* * *\n\nPress \"Finish\" when you are happy with what you've made.\n\n[expandable][2]\n[expandable][3]\n[expandable][4]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Sticker Design_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseC_artist_loops1a_a": "This is the first block you will need:\n\n[blockly block][0]",
      "courseC_artist_loops1a_b": "Use this block to draw the sticker!\n\n[blockly block][0]"
    },
    "callouts": {
      "jumpto_callout": "This block is very important for this project. Be sure to use it!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/11/levels/2": {
    "short_instructions": "Change the direction your sticker is facing by adding a `turn` command to your code. ",
    "long_instructions": "Change the direction your sticker is facing by adding a `turn` command to your code. \n\n* * *\n\nPress \"Finish\" when you are happy with what you've made.\n\n[expandable][0]\n[expandable][1]\n[expandable][2]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Sticker Design_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseC_artist_loops1b_a": "This is the first block you will need:\n\n[blockly block][0]\n\nYou can choose either left or right and any number of degrees."
    },
    "callouts": {
      "sticker2": "Add this to the middle of your program."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/11/levels/3": {
    "short_instructions": "Now, use a loop to make more copies of your sticker. Try changing the numbers in the turn and repeat blocks to make different patterns.",
    "long_instructions": "Now, use a loop to make more copies of your sticker. Try changing the numbers in the `turn` and `repeat` blocks to make different patterns.\n\n* * *\n\nPress \"Finish\" when you are happy with what you've made.\n\n[expandable][0]\n[expandable][1]\n[expandable][2]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Sticker Design_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseC_artist_loops2a_a": "Inside your loop, you will want to jump to the middle, then turn, then draw a sticker.",
      "courseC_artist_loops2a_b": "Click on the number at the top of the `repeat` loop to change how many times it repeats."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/11/levels/4": {
    "short_instructions": "Now add a second sticker!",
    "long_instructions": "So much fun!  \n\nNow, add a second sticker right on top of the first one to make an image like the ones below.\n\n* * *\n\nPress \"Finish\" when you are happy with what you've made.\n\n[expandable][0]\n[expandable][1]\n[expandable][2]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Sticker Design_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting.\n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseC_artist_loops3a_a": "You will want to add just one block inside of your loop, after the first sticker.",
      "courseC_artist_loops3a_b": "Your program should look like this!\n\n[blockly block][0]\n\nYou can use any stickers you like!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/11/levels/5": {
    "short_instructions": "Edit your code so that you jump forward between drawing the two stickers.",
    "long_instructions": "Edit your code so that you jump forward between drawing the two stickers. In this puzzle, make sure you have `jump to the middle center position` inside of your loop, so you stay in the center!\n\n* * *\n\nPress \"Finish\" when you are happy with what you've made.\n\n[expandable][0]\n[expandable][1]\n[expandable][2]\n[expandable][3]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Sticker Design_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseC_artist_loops4a_a": "Use this block to jump forward:\n\n[blockly block][0]\n\nDon't forget to change how far!",
      "courseC_artist_loops4a_b": "Your program should look like this!\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/11/levels/6": {
    "short_instructions": "Try adding lines!",
    "long_instructions": "What happens when you `move forward` then `move backward` by 100, 200, or 400 pixels somewhere inside the loop?  \n\n-   Try using the `set pattern` block before you start your loop to make a work of art!\n\n* * *\n\n[expandable][0]\n[expandable][1]\n[expandable][2]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Sticker Design_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseC_artist_loops5b_a": "Use this block to set the pattern of your lines:\n\n[blockly block][0]",
      "courseC_artist_loops5b_b": "To make a design like the one above, you will want to move backward the same amount that you move forward.",
      "courseC_artist_loops5b_c": "Your program should look like this!\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/11/levels/7": {
    "short_instructions": "Add another sticker!",
    "long_instructions": "Add a third sticker anywhere in the loop that you want! What does it look like now?\n\n-   Change the pattern on your brush for more variety!\n\n* * *\n\n[expandable][0]\n[expandable][1]\n[expandable][2]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Sticker Design_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseC_artist_loops6a_a": "To make a design like the one above, jump forward less than 75 pixels between each sticker."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/11/levels/8": {
    "short_instructions": "Play with the loops and angles.",
    "long_instructions": "Try changing the `repeat` loop to run a different number of times.  How far do you have to turn to go around in a full circle?\n\n-   Try changing how many times you spin\n    -   Try a 60 degree turn for 6 times around\n    -   Try a 20 degree turn for 18 times around\n\n* * *\n\nThe first image uses a pirate, a ninja, and a giraffe. They loop 18 times with a 20 degree turn.\n\n[expandable][0]\n[expandable][1]\n[expandable][2]\n[expandable][3]",
    "teacher_markdown": "This lesson contains a **mini-project** called _Sticker Design_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseC_artist_loops7a_a": "A circle has 360 degrees. Multiply the degrees in your turn times the number of times you repeat. Does it equal 360?\nCheck the suggested rotations to see that this works!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/11/levels/9": {
    "short_instructions": "Now try something on your own!",
    "long_instructions": "Now make something on your own.  What happens when you make two separate circles of different stickers?\n\n* * *\n\nNeed an idea? Try making a design like this one.\n\n[expandable][0]",
    "teacher_markdown": "This level is a “free play”. These levels have some characteristics you may want to explore before starting. \n\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have created something they like. There is no one right answer! \n-   Example solutions are available for this level which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/1": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "long_instructions": "_\"This is going to **BEE** great!\"_\n\nHelp the bee collect all of the nectar.",
    "authored_hints": {
      "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
      "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
    },
    "callouts": {
      "stepButton": "Try stepping through your code one block at a time."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/2": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "long_instructions": "Help the bee collect all of the nectar.",
    "authored_hints": {
      "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
      "courseD_bee_nestedLoops1_b": "Try writing code for one side of the square first. Can you loop this to get all of the nectar?",
      "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/4": {
    "short_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "long_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bee will move forward and get nectar only one time.",
              "correct": false,
              "feedback": "Incorrect.  The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            },
            {
              "text": "The bee will get only 2 units of nectar.",
              "correct": false,
              "feedback": "Incorrect.  The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            },
            {
              "text": "The bee will get all of the nectar.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bee will turn the wrong direction.",
              "correct": false,
              "feedback": "Incorrect.  The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            }
          ],
          "questions": [
            {
              "text": "Look closely at the nested loops below. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/5": {
    "display_name": "Get the Nectar",
    "bubble_choice_description": "Collect all of the nectar using as few blocks as possible.",
    "short_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "long_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "authored_hints": {
      "courseD_bee_nestedLoops2_a": "To solve this puzzle, you will need to nest one `repeat` loop inside of another.",
      "courseD_bee_nestedLoops2_b": "Can't figure out where to put the loops? Try writing the code on paper step-by-step and look for a pattern.",
      "courseD_bee_nestedLoops2_c": "Remember you can put more than one block inside of a loop."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/6": {
    "short_instructions": "Get the zombie to the sunflower using the fewest number of blocks possible.",
    "long_instructions": "_\"Zombie hungry!\"_\n\nGet the zombie to the sunflower using the fewest number of blocks possible.",
    "authored_hints": {
      "courseD_maze_nestedLoops3_a": "To solve this puzzle, you will need to \"nest\" one `repeat` loop inside of another `repeat` loop.",
      "courseD_maze_nestedLoops3_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern.",
      "courseD_maze_nestedLoops3_c": "Try writing code for one straight piece of path and a turn. Can you repeat this to get to the sunflower?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/7": {
    "short_instructions": "Get the zombie to the sunflower using the fewest blocks possible!  ",
    "long_instructions": "Get the zombie to the sunflower using the fewest blocks possible!  ",
    "authored_hints": {
      "courseD_maze_nestedLoops4_a": "Try using this path through the maze.\n\n[][0]",
      "courseD_maze_nestedLoops4_b": "If the loop pattern is hard to see, try coding it all out first and see what code repeats over and over before you put the loops in.",
      "courseD_maze_nestedLoops4_c": "Try using one `repeat` loop inside of another to cut down on the amount of code you need."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/8": {
    "short_instructions": "Get the zombie to the sunflower using the fewest number of blocks possible!",
    "authored_hints": {
      "courseD_maze_nestedLoops5_a": "Look for a stair-step pattern in this maze to find where a nested loop can be used.",
      "courseD_maze_nestedLoops5_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/9": {
    "short_instructions": "Get the zombie to the sunflower using only the blocks available.",
    "long_instructions": "_\"Must eat sunflower!\"_\n\nGet the zombie to the sunflower using only the blocks available.",
    "authored_hints": {
      "courseD_maze_nestedLoops6_a": "If you are stuck, try writing out the code out on paper without loops first and look for patterns.",
      "courseD_maze_nestedLoops6_b": "Nesting `repeat` loops can help decrease the number of blocks used.",
      "courseD_maze_nestedLoops6_c": "It will take two sets of nested `repeat` loops to solve this puzzle."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/10": {
    "display_name": "Challenge: Get the Nectar",
    "bubble_choice_description": "Figure out how to get all of the nectar using only the blocks available.",
    "short_instructions": "Challenge: Figure out how to get all of the nectar using only the blocks available.",
    "long_instructions": "**Challenge:** Figure out how to get all of the nectar using only the blocks available.",
    "authored_hints": {
      "courseD_bee_nestedLoops7_a": "You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.",
      "courseD_bee_nestedLoops7_b": "You will need to use all three of the available `repeat` blocks to solve this puzzle.",
      "courseD_bee_nestedLoops7_c": "Nest your blocks three deep, like this:\n\n-   repeat 4\n    -   repeat 3\n        -   repeat 12\n            -   get nectar\n        -   move forward\n    -   turn right"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/11": {
    "display_name": "Get Nectar and Make Honey",
    "bubble_choice_description": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
    "short_instructions": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
    "long_instructions": "Collect all of the nectar from each flower and make honey at the honeycomb. "
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/12": {
    "display_name": "Make the honey.",
    "bubble_choice_description": "Make all of the honey.",
    "short_instructions": "Make all of the honey.",
    "long_instructions": "Make all of the honey.\n\n[][0]"
  },
  "https://studio.code.org/s/express-2021/lessons/12/levels/13": {
    "short_instructions": "Make all of the honey.",
    "long_instructions": "Make all of the honey.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "4",
              "correct": false,
              "feedback": "Incorrect. The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            },
            {
              "text": "8",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "10",
              "correct": false,
              "feedback": "Incorrect. The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            },
            {
              "text": "12",
              "correct": false,
              "feedback": "Incorrect. The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. How much honey will the bee make when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/12/extras?level_name=courseD_harvester_nested_loops_challenge1_2021": {
    "short_instructions": "\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"",
    "long_instructions": "_\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"_",
    "authored_hints": {
      "courseD_harvester_nested_loops_challenge1_a": "Try following this path to reach all of the corn! ",
      "courseD_harvester_nested_loops_challenge1_b": "To collect more than one piece of corn, you need to use `pick corn` more than one time.",
      "courseD_harvester_nested_loops_challenge1_c": "You will need to put a small loop inside of your main loop to solve this puzzle!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/12/extras?level_name=courseD_collector_nested_loops_challenge2_2021": {
    "short_instructions": "Help the collector reach at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
    "long_instructions": "_\"Let's hunt for treasure - using loops!\"_ \n\nHelp the collector reach at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
    "authored_hints": {
      "courseD_bee_nested_loops_challenge2_a": "Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!",
      "courseD_bee_nested_loops_challenge2_b": "To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the _entire_ cave!",
      "courseD_bee_nested_loops_challenge2_c": "The shortest program that reaches all the treasure uses only one `collect` block and two turns.",
      "courseD_bee_nested_loops_challenge2_d": "**Solution:**\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/13/levels/1": {
    "short_instructions": "Draw a hexagon with **50** pixel long sides.  ",
    "long_instructions": "[][0] _“Hi, I’m Elsa of Arendelle, help me draw a shape.”_\n\nDraw a hexagon with 50 pixel long sides.  \n\n* * *\n\nTo draw a hexagon, you will need to: \n\n-   move forward by **50** pixels\n-   turn right by **60** degrees\n-   repeat a total of **6** times",
    "authored_hints": {
      "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
      "courseD_artist_project1_b": "Remember that `move forward` draws a line, while `jump forward` does not."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/13/levels/2": {
    "short_instructions": "Now, turn right by **60** degrees, then draw a straight line **150** pixels long and jump back to the center of the play area.",
    "long_instructions": "[][0] _“Good job!”_\n\nAfter your hexagon, turn right by **60** degrees, then draw a line that is **150** pixels long.   \n\nFinish by putting Elsa back to the center of the play area, using the [blockly block][1] block.",
    "authored_hints": {
      "courseD_artist_project1_b": "Remember that `move` draws a line, while `jump` does not.",
      "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/13/levels/3": {
    "short_instructions": "Nest all of the code inside of another `repeat` loop and run it a total of **6** times. ",
    "long_instructions": "[][0] _“Let’s make a snowflake.”_\n\nTo turn this code into a snowflake, nest all of the code inside of another `repeat` loop and run it a total of **6** times.  You should only need to add one block."
  },
  "https://studio.code.org/s/express-2021/lessons/13/levels/4": {
    "short_instructions": "Add a tiny shape to the end of your line!",
    "long_instructions": "[][0] _\"Let's make our snowflakes special!\"_\n\n**Inspiration:** Where do you need to add code if you want to draw a tiny square at the tip of each long line?\n\n* * *\n\nYou can try whatever you want in this puzzle, but here is an idea:\n\nTry making a tiny square at the end of each line\n\n-   Each side should be 15 pixels long\n-   You should turn by 90 degrees\n-   Repeat those actions a total of 4 times"
  },
  "https://studio.code.org/s/express-2021/lessons/13/levels/5": {
    "short_instructions": "Play with the snowflakes!",
    "long_instructions": "[][0] _\"Try changing the shapes or the lengths of the lines to make this your own!\"_\n\n<br/>  \n\n**Inspiration:** You can change your drawing in any way you want, but here is an idea:\n\n-   Try switching the types of shape in the middle of the snowflake with the one at the end of each line!",
    "authored_hints": {
      "1": "If you are switching your shapes, don't forget that you will need to switch their angles, too!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/13/levels/6": {
    "short_instructions": "Try changing your long 150 pixel line into 6 short lines of **25** pixels, with little turns at the end.",
    "long_instructions": "[][0] _\"Let’s try something new. This time, skate in a zig-zag.\"_\n\n<br/>  \n\n**Inspiration:** Try changing your long 150 pixel line into 6 short lines of **25** pixels\n\n-   Turn by **45** degrees in alternate directions after each short line to get a zig-zag look\n-   Where do you need to put a new `repeat` block to make this happen?\n-   How many times do you have to repeat your pattern of 2 short lines to get 6 total?"
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/1": {
    "short_instructions": "Add a second `move forward` block to reach the sheep.",
    "long_instructions": "Add a second `move forward` block to reach the sheep.",
    "authored_hints": {
      "mc_1_a": "The `move forward` block is at the top of the toolbox.",
      "mc_1_b": "Make sure both `move forward` blocks are snapped to the `when run` block."
    },
    "callouts": {
      "craft_run_button_callout": "Hit \"Run\" to try your program",
      "craft_drag_block_callout": "Drag a \"move forward\" block and snap it below the other block"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/2": {
    "short_instructions": "Wood is a very important resource. Many things are made from it. Walk to the tree and use the “destroy block” command to chop it down.",
    "long_instructions": "Wood is a very important resource. Many things are made from it. Walk to the tree and use the `destroy` block command to chop it down.",
    "authored_hints": {
      "mc_2_a": "You need to `move forward` twice to stand in front of the tree.",
      "mc_2_b": "The `destroy block` command cuts down the tree in front of you."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/3": {
    "short_instructions": "Sheep-shearing time! Use the “shear” command to gather wool from both sheep.",
    "long_instructions": "Sheep-shearing time! Use the `shear` command to gather wool from both sheep.",
    "authored_hints": {
      "mc_3_a": "The `shear` block gets the sheep in front of you. Are you facing the sheep?",
      "mc_3_b": "If you need to change the way you are facing, use a `turn` block.",
      "mc_3_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/4": {
    "short_instructions": "We need to build a house before the sun goes down. Houses require a lot of wood. Cut down all 3 trees.",
    "authored_hints": {
      "mc_4_a": "You can chop down trees in any order. What path takes the smallest number of blocks?",
      "mc_4_b": "The `destroy block` command cuts down the tree in front of you."
    },
    "callouts": {
      "craft_callout_preplaced": "We've put some blocks here to get you started"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/5": {
    "short_instructions": "Every house starts with a wall. Build the first part of your house by putting the \"place\" and \"move forward\" commands inside the repeat loop.",
    "long_instructions": "Every house starts with a wall. Build the first part of your house by putting the `place` and `move forward` commands inside the repeat loop.",
    "authored_hints": {
      "mc_5_a": "Use the `place` block first, and then the `move` block.",
      "mc_5_b": "Make sure both blocks are inside of the `repeat` loop to run the code more than once.",
      "mc_5_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
    },
    "callouts": {
      "craft_inside_repeat": "Repeat actions by placing blocks in here"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/6": {
    "short_instructions": "Build the rest of your house from any material you'd like. The \"repeat\" command will come in handy.",
    "long_instructions": "Build the rest of your house from any material you'd like. The `repeat` command will come in handy.",
    "authored_hints": {
      "mc_6_a": "Click the arrow on the `place` block to choose what you want to place.",
      "mc_6_b": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.",
      "mc_6_c": "You can put more than one block inside of a `repeat` loop."
    },
    "callouts": {
      "craft_callout_preplaced_house": "This code will start building your house. Can you finish it?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/7": {
    "short_instructions": "It’s good to plan ahead. Plant crops on both sides of the water so you don’t get hungry later on.",
    "authored_hints": {
      "mc_7_a": "Use the `plant crop` block to plant a crop in the space where you are standing.",
      "mc_7_b": "Both stripes of dark brown land by the water need to be filled with crops.",
      "mc_7_c": "You can put more than one block inside of a `repeat` loop."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/8": {
    "short_instructions": "Running into a Creeper is a bad idea. Carefully move past the Creepers and reach the safety of your home.",
    "authored_hints": {
      "mc_8_a": "There are a few paths you can take. Which is the shortest?",
      "mc_8_b": "Use `repeat` loops to simplify your code.",
      "mc_8_c": "Your goal is to get into the doorway of the house at the top of the screen."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/9": {
    "short_instructions": "Great job! You’ve gathered lots of resources and built a modest home. Now lay rail from the edge of the map to the door of your house.",
    "authored_hints": {
      "mc_13_a": "Use `place rail` to lay rail on the square you are standing in.",
      "mc_13_b": "Use `repeat` loops to make your code shorter."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/10": {
    "short_instructions": "You’ll find the most valuable resources underground, but it can get dark. Place at least 2 torches and mine at least 2 coal.",
    "authored_hints": {
      "mc_9_a": "Are you facing the right way? The `destroy block` mines the block in front of you.",
      "mc_9_b": "The black specks in the wall are coal! Use `destroy block` on these to mine the coal.",
      "mc_9_c": "Use `place torch` to put a torch in the space where you are standing."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/11": {
    "short_instructions": "Lava is hiding beneath some of these blocks, which you'll need to cover up before moving forward. An \"if\" command will come in handy here. Add a \"move forward\" command in the correct place to mine these blocks.",
    "long_instructions": "Lava is hiding beneath some of these blocks, which you'll need to cover up before moving forward. An `if` command will come in handy here. Add a `move forward` command in the correct place to mine these blocks.",
    "authored_hints": {
      "mc_11_a": "All of the code is in place to check for lava and deal with it. All you need to do is add a block to move.",
      "mc_11_b": "Should your `move forward` command go inside of the `if` statement or after?"
    },
    "callouts": {
      "craft_callout_moveforward": "This code will check for lava, can you add a command to move forward?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/12": {
    "short_instructions": "Now things are getting tricky. Mine 3 redstone, but don’t fall in the lava. Use an \"If\" command to place cobblestone over any lava you uncover.",
    "long_instructions": "Now things are getting tricky. Mine 3 redstone, but don’t fall in the lava. Use an `if` command to place cobblestone over any lava you uncover.",
    "authored_hints": {
      "mc_12_a": "The spaces with red speckles are where you will find Redstone.",
      "mc_12_b": "Can you use a `repeat` loop to make your code shorter?",
      "mc_12_c": "Use an `if` statement to check spaces for lava, then place cobblestones. "
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/13": {
    "short_instructions": "Walking into molten lava is a bad idea. Place cobblestone to create a bridge, then mine at least two of the iron blocks.",
    "authored_hints": {
      "mc_10_a": "The iron blocks are the speckled spaces behind the torch! How are you going to get over there?",
      "mc_10_b": "When you are standing at the edge of the lava, use `place cobblestone ahead` to make a safe path. Then, you can walk over it!",
      "mc_10_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
    },
    "callouts": {
      "craft_what_is_iron": "Mine this iron!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/14/levels/14": {
    "short_instructions": "Congratulations! You've completed all our puzzles! Now mine, build, and create something unique by using everything you've learned so far.",
    "teacher_markdown": "This is a free-play level. This is not only a great place to point students who are progressing quickly, but a place for all students to really express their creativity. While students are not actually required to write any code in this level, doing so will allow them to apply what they have learned in a way that is more meaningful to them. Encourage your students to take their time here."
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/2": {
    "short_instructions": "Check to see if there's a flower under the cloud. If there's a flower, get nectar.",
    "long_instructions": "_\"This cloud is blocking my view!\"_\n\nCheck to see if there's a flower under the cloud. If there's a flower, get nectar.",
    "authored_hints": {
      "courseD_bee_conditionals1_a": "You will need to use an `if` block to check to see if there is a flower beneath the cloud before you try to get nectar."
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bee will move to the cloud and try to get nectar, no matter what. ",
              "correct": false,
              "feedback": "Incorrect. The `if at flower` block assures that the bee will only try to get nectar if there is a flower under the cloud."
            },
            {
              "text": "The bee will move to the cloud and only try to get nectar if there is a flower underneath.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bee will move to the cloud and then do nothing, no matter what. ",
              "correct": false,
              "feedback": "Incorrect. The `if at flower` block assures that the bee will try to get nectar if there is a flower under the cloud."
            },
            {
              "text": "The bee will not reach the cloud. ",
              "correct": false,
              "feedback": "Incorrect. The `if at flower` block assures that the bee will only try to get nectar if there is a flower under the cloud."
            }
          ],
          "questions": [
            {
              "text": "The cloud is blocking the view. There could be a flower under this cloud. If there is a flower, the bee will need to collect nectar once. If there is not a flower the bee should do nothing. Take a good look at the code below. What do you think will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/3": {
    "short_instructions": "Check underneath every cloud to see if it is hiding a flower before you get nectar.  ",
    "long_instructions": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar. If there is a flower underneath the cloud, the bee will need to get nectar _once_.  \n\nRemember: Not all clouds hide the same thing!",
    "authored_hints": {
      "courseD_bee_conditionals2_a": "Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.",
      "courseD_bee_conditionals2_c": "You don't have to check for honeycombs, there will only be flowers or blank spaces under the clouds."
    },
    "callouts": {
      "4_5_Bee_Conditionals_2_1": "Remember, check to see if EVERY cloud has a FLOWER. You don't have to check for honeycombs at all."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/4": {
    "short_instructions": "Help the bee collect all of the nectar. \n\nYou can only collect nectar from flowers, but you can check any space to see if there is a flower.",
    "long_instructions": "You can only collect nectar from flowers, but you can check any space to see if there is a flower. If there is a flower under any of these clouds, the bee will need to collect nectar _once_.",
    "authored_hints": {
      "courseD_bee_conditionals3_a": "Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.",
      "courseD_bee_conditionals3_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/5": {
    "short_instructions": "Get all of the nectar using as few blocks as possible.",
    "long_instructions": "In this puzzle, we know that every flower has exactly one nectar, but the flowers aren't spaced evenly.\n\nGet all of the nectar using as few blocks as possible.",
    "authored_hints": {
      "courseD_bee_conditionals4_a": "You can still treat every space as if there is a cloud over it, even though you can see the whole path.",
      "courseD_bee_conditionals4_b": "Use an `if` statement inside your loop to check each space for nectar. "
    }
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/6": {
    "short_instructions": "Collect all of the nectar using as few blocks as possible",
    "authored_hints": {
      "courseD_bee_conditionals5_a": "If you use an `if at flower` block, you can solve this using a nested loop. Write a program for the left and bottom paths, then repeat everything twice!",
      "courseD_bee_conditionals5_c": "To continue down the path, the bee will need to `move forward`. As it moves, the bee needs to check for a flower. `if there is a flower`, the bee should `get nectar`."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/7": {
    "short_instructions": "Some of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud!",
    "long_instructions": "_\"Now I just want to make honey.\"_\n\nSome of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud! If there is a honeycomb, the bee will only need to make honey _once_.",
    "authored_hints": {
      "courseD_bee_conditionals6_a": "Make sure to use an `if` statement to check for honeycomb beneath each cloud.",
      "courseD_bee_conditionals6_b": "In this case, you do not need to check for flowers under the clouds.",
      "courseD_bee_conditionals6_c": "Is there a loop you can use to make your code simpler?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/9": {
    "short_instructions": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
    "long_instructions": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb. Remember: if there is a flower, the bee only needs to get nectar _once_. If there is a honeycomb, the bee only needs to make honey _once_.",
    "authored_hints": {
      "courseD_bee_conditionals7_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge.",
      "courseD_bee_conditionals7_b": "If there is not a flower under the cloud, there must be a honeycomb, so you don't need to think about the case of an empty space."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/10": {
    "short_instructions": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
    "long_instructions": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb. Remember: there will only ever be _one_ honeycomb or _one_ flower behind each cloud.",
    "authored_hints": {
      "courseD_bee_conditionals7_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bee will get nectar at each flower and make honey at each honeycomb.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bee will try to get nectar from both flowers and honeycomb.",
              "correct": false,
              "feedback": "Incorrect. The `if at flower` block lets the bee get nectar at each flower and make honey at each honeycomb."
            },
            {
              "text": "The bee will try to get honey from both flowers and honeycomb.",
              "correct": false,
              "feedback": "Incorrect. Incorrect. The `if at flower` block lets the bee get nectar at each flower and make honey at each honeycomb.."
            },
            {
              "text": "The bee will try to get honey and nectar from both flowers and honeycomb.",
              "correct": false,
              "feedback": "Incorrect. Incorrect. The `if at flower` block lets the bee get nectar at each flower and make honey at each honeycomb.."
            }
          ],
          "questions": [
            {
              "text": "Look carefully at the code below.  What do you think will happen after you click \"Run\"? Remember: there will only ever be *one* honeycomb or *one* flower behind each cloud."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/11": {
    "short_instructions": "Collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
    "long_instructions": "**Challenge:** There will be either a flower or a honeycomb under each of those clouds!\n\nCollect nectar once if there is a flower.\nOtherwise, make honey once (because there is a honeycomb).",
    "authored_hints": {
      "courseD_bee_conditionals8_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge.",
      "courseD_bee_conditionals8_b": "This puzzle is tricky, because you can't check blank squares, nectar, _and_ honey with just one single conditional.\n\nOnly check for nectar and honey at the end of your path."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/12": {
    "short_instructions": "Collect all of the nectar or make all the honey.",
    "long_instructions": "Collect all of the nectar or make all the honey. You can only collect nectar from flowers and make honey from honeycombs. Check any space to see if there is a flower or honeycomb. There will only ever be one flower or one honeycomb behind each cloud."
  },
  "https://studio.code.org/s/express-2021/lessons/15/levels/13": {
    "short_instructions": "Collect all of the nectar and make all of the honey.",
    "long_instructions": "Conditionals can be helpful, even when you know exactly what is in each spot!\n\nCollect all of the nectar and make all of the honey."
  },
  "https://studio.code.org/s/express-2021/lessons/15/extras?level_name=courseD_bee_conditionals_challenge1_2021": {
    "short_instructions": "Collect all the nectar and make all the honey.",
    "long_instructions": "Collect all of the nectar and make all of the honey. You can only collect nectar from flowers and make honey from honeycombs. Check every space to see if there is a flower or honeycomb.",
    "authored_hints": {
      "courseD_bee_conditionals_challenge1_a": "Can you find a path that reaches every flower and honeycomb without hitting any trees? The best path is a spiral.",
      "courseD_bee_conditionals_challenge1_b": "In this puzzle, each space could have a flower, a honey comb, or nothing.  That means you can repeat your `if/else` conditional at each square."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/15/extras?level_name=courseD_bee_conditionals_challenge2_2021": {
    "short_instructions": "Collect all of the nectar and make all the honey.",
    "long_instructions": "Collect all of the nectar and make all the honey. You can collect all of the nectar in one flower by using the `while nectar > 0` loop.",
    "authored_hints": {
      "courseD_bee_conditionals_challenge1_b": "Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:\n\n[blockly block][0]"
    },
    "callouts": {
      "courseD_bee_conditionals_challenge2_1": "Use this loop to collect all of the nectar (or honey) from one flower (or honeycomb)."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/1": {
    "short_instructions": "Move to the pile of dirt and use the `remove` block to remove it.",
    "long_instructions": "_\"Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting!\"_  \n\nMove to the pile of dirt and use the `remove` block to remove it.",
    "authored_hints": {
      "courseD_farmer_while1_a": "You will need to move forward four times to get to the pile. Can you use a `repeat` loop for this?",
      "courseD_farmer_while1_b": "Use the `remove 1` block when you are standing on the pile of dirt to remove it."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/2": {
    "short_instructions": "Move to the hole and fill it with six shovelfuls of dirt, using the `fill` block.",
    "authored_hints": {
      "courseD_farmer_while2_a": "You will only need to move once to get to the hole.",
      "courseD_farmer_while2_b": "You will need the `fill 1` block six times. Can you use a loop to make this simpler?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/3": {
    "short_instructions": "Use as few blocks as possible to solve this puzzle.",
    "long_instructions": "_\"Move to the pile of dirt and tell me how many shovelfuls to remove.\"_\n\nUse as few blocks as possible to solve this puzzle.",
    "authored_hints": {
      "courseD_farmer_while3_a": "A loop can help you simplify your code here.",
      "courseD_farmer_while3_b": "You shouldn't need any `turn` blocks to get to the pile."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/5": {
    "short_instructions": "Help the farmer remove this entire pile using a `while` loop.",
    "long_instructions": "_\"I don't know how much dirt is in this pile!\"_\n\nHelp the farmer remove this entire pile using a `while` loop.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing will happen.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            },
            {
              "text": "The farmer will never stop removing dirt.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            },
            {
              "text": "The farmer will remove dirt as long as there is a pile, then stop when the pile is gone.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The farmer will remove dirt only once.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. What will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/6": {
    "short_instructions": "Help the farmer remove this entire pile using a `while` loop.",
    "long_instructions": "_\"I don't know how much dirt is in this pile!\"_\n\nHelp the farmer remove this entire pile using a `while` loop.",
    "authored_hints": {
      "courseD_farmer_conditionals4_a": "Instead of using a `repeat` loop, use a `while` loop to keep digging until the pile is gone.",
      "courseD_farmer_conditionals4_b": "This looks very similar to an earlier puzzle, the only difference is which loop you need."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/7": {
    "short_instructions": "Help me remove all of this dirt. ",
    "authored_hints": {
      "courseD_farmer_conditionals5a_a": "Try nesting a `while` loop inside of a `repeat` loop.",
      "courseD_farmer_conditionals5a_b": "The farmer needs to move forward a total of five times to get to the end of the row. What else does the farmer need to do?",
      "courseD_farmer_conditionals5a_c": "Move forward 5 times. Each time you move forward, remove the pile of dirt by using the `while there is a pile` block."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/8": {
    "short_instructions": "Use the `while` loop to easily fill all of the holes.",
    "long_instructions": "Look at all of those holes!  Each one needs a different amount of dirt.   \n\nYou can use the `while` loop to easily fill them all!",
    "authored_hints": {
      "courseD_farmer_conditionals6_a": "Make sure you're using the `while` loop to figure out how many times to fill each hole.",
      "courseD_farmer_conditionals6_b": "Notice that the farmer needs to move forward and down several times in a stair-step pattern.",
      "courseD_farmer_conditionals6_c": "The stair step pattern uses the following blocks\n\n-   move forward\n-   fill hole\n-   turn right\n-   move forward\n-   fill hole\n-   turn left\n\nHow many times do you need to use this stair step pattern?\n\nMake sure you are using the `while there is a hole` to fill the hole."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/9": {
    "short_instructions": "Fill in the hole at the end of each of these paths.",
    "authored_hints": {
      "courseD_farmer_conditionals8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.",
      "courseD_farmer_conditionals8_b": "Putting a `while path ahead` loop inside of a repeat loop can help you in this puzzle.",
      "courseD_farmer_conditionals8_c": "What do you need to do at the end of each path?"
    },
    "callouts": {
      "courseD_farmer_while7_2018_PathAhead": "You'll need to use the `while path ahead` block in order to solve this puzzle."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/10": {
    "short_instructions": "Challenge: Fill all of these holes using as few blocks as possible. ",
    "long_instructions": "**Challenge:** Fill all of these holes using as few blocks as possible. ",
    "authored_hints": {
      "courseD_farmer_conditionals8_a": "You are going to need to use more than one `while` loop.",
      "courseD_farmer_conditionals8_b": "Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.",
      "courseD_farmer_conditionals8_c": "Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/11": {
    "short_instructions": "Flatten all of these piles using as few blocks as possible. "
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/12": {
    "short_instructions": "Flatten all of these piles using as few blocks as possible. "
  },
  "https://studio.code.org/s/express-2021/lessons/16/levels/13": {
    "short_instructions": "Flatten all of these piles using as few blocks as possible. ",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing. This code will leave only level ground.",
              "correct": false,
              "feedback": "Incorrect. There is no code to remove dirt from the pile."
            },
            {
              "text": "This code will leave the pile completely untouched.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "This code will leave the holes completely untouched.",
              "correct": false,
              "feedback": "Incorrect. The `while` loop will handle any size loop, but there is no code to remove dirt from the pile."
            },
            {
              "text": "This code will leave the last hole untouched.",
              "correct": false,
              "feedback": "Incorrect. There is no code to remove dirt from the pile."
            }
          ],
          "questions": [
            {
              "text": "Take a good look at the code below. What will be left at the end of this puzzle?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/16/extras?level_name=courseD_farmer_while_challenge1_2021": {
    "short_instructions": "Fill all of the holes and remove all of the piles.",
    "long_instructions": "Fill all of the holes and remove all of the piles.",
    "authored_hints": {
      "courseD_farmer_while_challenge1_a": "Each hole or pile is located one space **backward** from the end of the path.",
      "courseD_farmer_while_challenge1_b": "If you use a `while` loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt or fill any hole, no matter where she is.",
      "courseD_farmer_conditionals8_c": "It is possible to solve this without using any `repeat` loops. To do this, you will need to use four `while` loops."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/2": {
    "short_instructions": "Collect a boat from the chest.",
    "long_instructions": "You need supplies for the voyage ahead. Collect a **boat** [][0] from the **chest** [][1]."
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/3": {
    "short_instructions": "Head to the end of the dock.",
    "long_instructions": "Boats are much easier than swimming in open water! Head to the end of the dock to hop aboard."
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/4": {
    "short_instructions": "Head across the open seas to the cod.",
    "long_instructions": "Grab the oars and pilot your boat across the open seas to catch the **cod** [][0]."
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/6": {
    "short_instructions": "Use a loop to get to the dolphin.",
    "long_instructions": "Let's feed the cod to the **dolphin** [][0]. Use a repeat until block to get across the ocean faster."
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/7": {
    "short_instructions": "Explore the shipwreck to reach the chest.",
    "long_instructions": "There's a **nautilus shell** [][0] hidden somewhere! Explore the shipwreck to reach the **chest** [][1]."
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/8": {
    "short_instructions": "Navigate through the ice to reach the salmon.",
    "long_instructions": "Looks freezing out there! Catch a **salmon** [][0] on your way to the underwater ruins."
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/10": {
    "short_instructions": "Search these underwater ruins for a chest.",
    "long_instructions": "You found the underwater ruins. Search the sandstone for a **chest** [][0] containing **prismarine** [][1] treasure.",
    "authored_hints": {
      "aquatic7": "You can use the if path block to help you make the right turns."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/11": {
    "long_instructions": "First icebergs, now lava? Get through this volcanic island and find the **tropical fish** [][0] in the coral reef."
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/12": {
    "short_instructions": "Use the coral as waypoints to reach the treasure.",
    "long_instructions": "You made it to the reef, now search for the **Heart of the Sea** [][0] ! Use the blue and red coral to reach the treasure **chest** [][1].",
    "authored_hints": {
      "voyage_aquatic_9a": "See the red and blue coral blocks? Use them as guideposts to turn right and left through the reef."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/13": {
    "short_instructions": "Get to the entrance of this Ocean Monument.",
    "long_instructions": "There is a **squid** [][0] hiding somewhere in this Ocean Monument, can you find it?",
    "authored_hints": {
      "voyage_aquatic_10a": "See the **Sea Lanterns** [][0]? How can you use a conditional with them to get through the Ocean Monument?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/14": {
    "short_instructions": "Build a conduit with Prismarine inside the Ocean Monument.",
    "long_instructions": "Build a wall of **prismarine** [][0] around the black concrete. This will activate the **conduit** [][1] and complete your challenge!"
  },
  "https://studio.code.org/s/express-2021/lessons/17/levels/16": {
    "short_instructions": "Design your own underwater environment, it’s up to you!",
    "long_instructions": "Congratulations! The open aquatic world awaits you. Build a coral reef! A volcano! A shipwreck! It's up to you."
  },
  "https://studio.code.org/s/express-2021/lessons/18/levels/1": {
    "short_instructions": "Get the angry bird to the pig.",
    "authored_hints": {
      "courseD_maze_until1_a": "Are there any sequences you can loop to make your code shorter?",
      "courseD_maze_until1_b": "Try using a nested loop to solve this puzzle."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/18/levels/3": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bird will not move at all.",
              "correct": false,
              "feedback": "Incorrect. The code makes the bird move forward while there is a path, then turn left.  It keeps doing this until it reaches the pig!"
            },
            {
              "text": "The bird will make it to the pig.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bird will move forward and run into the TNT.",
              "correct": false,
              "feedback": "Incorrect. The code makes the bird move forward while there is a safe path, then turn left.  It keeps doing this until it reaches the pig!"
            },
            {
              "text": "The bird turns the wrong way.",
              "correct": false,
              "feedback": "The code makes the bird move forward while there is a path, then turn left.  It keeps doing this until it reaches the pig!."
            }
          ],
          "questions": [
            {
              "text": "Take a close look at the code below. What do you think will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/18/levels/4": {
    "short_instructions": "Get the bird to the pig.",
    "authored_hints": {
      "courseD_maze_until3_a": "-   What does your code do?\n-   What is it supposed to do?\n-   What does that tell you?",
      "courseD_maze_until3_b": "If you are getting stuck, try writing out the steps on a piece of paper and looking for places where they repeat.",
      "courseD_maze_until3_c": "Is there a stair step pattern you can follow for this puzzle?",
      "courseD_maze_until3_d": "Don't forget to use the `repeat until` block to make your code shorter."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/18/levels/5": {
    "short_instructions": "Can you get the zombie to the sunflower using only the blocks that are available?",
    "long_instructions": "_\"Dear person. Me zombie. Me hungry. Must... get... to sunflower...\"_\n\nCan you get the zombie to the sunflower using only the blocks that are available?",
    "authored_hints": {
      "courseD_maze_until4_a": "Use the \"Step\" button to go through your code line by line.\n\n-   Does everything work at the first step?\n-   Does everything work at the second step?\n-   Where does it go wrong?",
      "courseD_maze_until4_b": "Is there a stair step pattern you can follow for this puzzle?",
      "courseD_maze_until4_c": "Don't forget to use the `repeat until` block to make your code shorter."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/18/levels/6": {
    "short_instructions": "Use the `if` block to help the zombie decide when to turn, then get the zombie to the sunflower.",
    "long_instructions": "Use the `if` block to help the zombie decide when to turn, then get the zombie to the sunflower.",
    "authored_hints": {
      "courseD_maze_until5_b": "To use only one `move forward`, put it inside the `repeat until sunflower` block."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/18/levels/7": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until6_b": "To use only one `move forward`, put it inside the `repeat until sunflower` block."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/18/levels/8": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until7_a": "You don't need your code to be any longer than last time, just because the maze is!",
      "courseD_maze_until7_b": "Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/18/levels/9": {
    "short_instructions": "**Challenge:** Avoid the chompers and help the zombie get to the sunflower.",
    "long_instructions": "**Challenge:** Avoid the chompers and help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until8_c": "Remember to use the `repeat until` block to get you to the sunflower!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/18/levels/10": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower."
  },
  "https://studio.code.org/s/express-2021/lessons/18/levels/11": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The zombie will pass the correct path and end up going back and forth forever.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The zombie will make it to the sunflower.",
              "correct": false,
              "feedback": "Incorrect. The zombie will pass the correct path and end up going back and forth forever."
            },
            {
              "text": "The zombie will turn right on the first path and go around in circles forever.",
              "correct": false,
              "feedback": "Incorrect. The zombie will pass the correct path and end up going back and forth forever."
            },
            {
              "text": "The zombie will be stuck at the end of the path forward.",
              "correct": false,
              "feedback": "In this code, the zombie will pass the correct path and end up going back and forth forever."
            }
          ],
          "questions": [
            {
              "text": "Look carefully at the code below. What will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/19/levels/2": {
    "short_instructions": "Use conditionals to make sure that you pick corn only when it's there.",
    "long_instructions": "_\"Corn you help me harvest today?\"_\n\nHelp the harvester check her row of corn to see if anything is ready to pick.  Use conditionals to look at each sprout.  Every stalk will have either **0 or 1** pieces of corn ready to harvest.",
    "authored_hints": {
      "courseD_farmer_condLoops1_a": "You will need to look for corn 5 times, using a repeat loop.",
      "courseD_farmer_condLoops1_b": "Make sure to use an `if at corn` block or you might try to pick something that's not there!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/19/levels/3": {
    "short_instructions": "Help the harvester collect both corn and lettuce from the field.",
    "long_instructions": "_\"Lettuce collect both crops from this row!\"_\n\nThis garden is all mixed up, it has both **corn and lettuce**!  \n\nHelp the harvester pick the items that are ready for harvesting.  Each plant will have either **one** corn or **one** lettuce.",
    "authored_hints": {
      "courseD_farmer_condLoops2_a": "The best way to do this is to nest `if` statements by placing one inside of the other.  ",
      "courseD_farmer_condLoops2_b": "For this puzzle, you should have one `if/else` statement and one plain `if` statement.",
      "courseD_farmer_condLoops2_c": "Your `if` statement could look a lot like this:\n\n-   if at corn\n    -   pick corn\n-   else\n    -   if at lettuce\n        -   pick lettuce\n\nIf there is nothing there, you won't pick anything!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/19/levels/4": {
    "short_instructions": "_\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"_",
    "long_instructions": "_\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"_\n\nEach plant will have either one piece of corn, one head of lettuce, or one pumpkin.",
    "authored_hints": {
      "courseD_farmer_condLoops3_a": "To get all of the items, try nesting `if` statements three deep.\n\nThis means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.",
      "courseD_farmer_condLoops3_b": "For this puzzle, you should have two `if/else` statements and one plain `if` statement."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/19/levels/5": {
    "short_instructions": "Help the harvester pick all of the lettuce in each cluster before moving on to the next bunch.",
    "long_instructions": "_\"Gosh! Now the lettuce is growing in clusters!\"_  \n\nThe harvester wants to pick everything from her lettuce garden. Each plant will now have more than one head of lettuce on it, so the harvester will need to keep picking while there is still lettuce growing.  \n\n##### (Remember: This garden only has lettuce!)",
    "authored_hints": {
      "grade3_RunningFarm_4courseD_farmer_condLoops4": "No one knows how many heads of lettuce will grow from each sprout.\n\nUse a `while there is lettuce` loop to keep picking until each piece has been gathered.",
      "grade3_RunningFarm_4courseD_farmer_condLoops4_b": "The `while` loop will handle empty spaces as well! Since there is no lettuce, it will not pick any and let the code move on.",
      "grade3_RunningFarm_4courseD_farmer_condLoops4_c": "You can use either a `while path ahead` loop or a `repeat` loop to go through all of the crops."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/19/levels/6": {
    "short_instructions": "Collect all of the corn and lettuce, then grab the pumpkin at the end.",
    "long_instructions": "_\"What a bountiful crop!\"_\n\nThis field has clusters of corn and lettuce growing together -- with one pumpkin at the end.  Can you harvest everything?",
    "authored_hints": {
      "courseD_farmer_condLoops5_a": "There is a new loop: `repeat until at pumpkin`. Can you see how to use it in this puzzle?",
      "courseD_farmer_condLoops5_b": "There could be more than one corn or lettuce plant in each spot. Use a `while` loop to gather all of them!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/19/levels/7": {
    "short_instructions": "Can you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
    "long_instructions": "_\"Let's take this one step further!\"_\n\nCan you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
    "authored_hints": {
      "courseD_farmer_condLoops6_a": "Use a `while path ahead` loop or a `if path ahead / else` block to move the farmer down each piece of the spiral.",
      "courseD_farmer_condLoops6_b": "You only need to check for corn during most of the harvest.  Just pick one pumpkin at the very end of your program."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/19/levels/8": {
    "short_instructions": "Challenge: Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "**Challenge:** Collect all of the corn and lettuce, then pick the pumpkin.",
    "authored_hints": {
      "courseD_farmer_condLoops7_a": "Notice that the easiest path to get to all of the crops is still a spiral.\n\n[][0]",
      "courseD_farmer_condLoops7_b": "Try using `while path ahead` to keep the harvester moving the right number of steps."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/19/levels/9": {
    "short_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "Collect all of the corn and lettuce, then pick the pumpkin."
  },
  "https://studio.code.org/s/express-2021/lessons/19/levels/10": {
    "short_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "Collect all of the corn and lettuce, then pick the pumpkin."
  },
  "https://studio.code.org/s/express-2021/lessons/19/levels/11": {
    "short_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The harvester will collect all of the crops.",
              "correct": false,
              "feedback": "Incorrect. There is no code here for picking the pumpkin."
            },
            {
              "text": "The harvester will not pick any of the crops with the path she is taking.",
              "correct": false,
              "feedback": "Incorrect. The code will have the harvester repeatedly make a stairstep pattern and pick as much corn or lettuce as she comes across. She will not pick the pumpkin."
            },
            {
              "text": "The harvester will pick all of the crops, except the pumpkin.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The harvester will only pick the pumpkin.",
              "correct": false,
              "feedback": "Incorrect. The code will have the harvester repeatedly make a stairstep pattern and pick as much corn or lettuce as she comes across. She will not pick the pumpkin."
            }
          ],
          "markdown": "The sprouts in this puzzle will be either corn or lettuce.\n<br/>\n",
          "questions": [
            {
              "text": "Take a close look at the code below. What will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/19/extras?level_name=courseD_farmer_condLoops_challenge1_2021": {
    "short_instructions": "Collect everything to complete the level. Each hidden crop has only one corn or lettuce.",
    "long_instructions": "The pumpkins mark the place where you should `turn right`. Otherwise keep going forward, but remember to collect all of the lettuce or corn along the way. \n\n**Each hidden crop has only one corn or lettuce.**",
    "authored_hints": {
      "courseD_farmer_condLoops_challenge1_a": "The \"Step\" button could be very helpful in this challenge.",
      "courseD_farmer_condLoops_challenge1_b": "Normally you would just `pick pumpkin` if you are at a pumpkin. What else do you need to do if you're at a pumpkin?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/19/extras?level_name=courseD_farmer_condLoops_challenge2_2021": {
    "short_instructions": "Collect everything to complete the level.",
    "long_instructions": "_\"It's a very varied vegetable maze!\"_ \n\nTurn right at pumpkins, turn left at lettuce. Collect everything to complete the level.",
    "authored_hints": {
      "courseD_farmer_condLoops_challenge2_a": "The amount of each vegetable in each space can change. A `while` loop can help!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/2": {
    "display_name": "Homestead",
    "short_instructions": "Write code to get the Agent to the pressure plate, then press \"Run\" and use the arrow keys to move the player out of the house to collect the chest. ",
    "long_instructions": "The door is locked, but the Agent is here to help!\n\nSnap a `move forward` block to the bottom of the `when run` block in the workspace to get the Agent to the pressure plate [PressurePlate_Up], then press \"Run\" and use the arrow keys to move out of the house to collect the **chest** [chest].",
    "authored_hints": {
      "MC_HOC_2017_01_RETRY_a": "Drag one `move forward` block from the toolbox to the workspace, and snap it into place beneath the `when run` block.",
      "MC_HOC_2017_01_RETRY_b": "Don't forget to click \"Run\" to run the code for the Agent.",
      "MC_HOC_2017_01_RETRY_c": "Once the Agent has run all of its code, you can move the player with the arrow keys!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/3": {
    "display_name": "The Farm",
    "short_instructions": "Move the Agent to the pressure plate so that {currentPlayerName} can get to the map. ",
    "long_instructions": "{currentPlayerName} is headed on an adventure! To help, get the **map** [map_empty] behind the locked door on the right. \n\nSnap the code into the workspace to move the Agent to the pressure plate [PressurePlate_Up] so that {currentPlayerName} can get through. ",
    "authored_hints": {
      "MC_HOC_2017_02_Cole_a": "Move the Agent forward two spaces to stand on the pressure plate.  That will open the door for your player.",
      "MC_HOC_2017_02_Cole_b": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
      "MC_HOC_2017_02_Cole_c": "Once the Agent has opened the door, use the arrow keys to move the player to the map!",
      "MC_HOC_2017_02_Cole_d": "Make sure the Agent is following the path outlined on the map!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/5": {
    "display_name": "The Woods",
    "short_instructions": "Code the Agent to open the gate. ",
    "long_instructions": "{currentPlayerName} continues on the adventure and needs the **compass** [compass] to prepare for the trip.  \n\nCode the Agent to open the gate. ",
    "authored_hints": {
      "MC_HOC_2017_03_Cole_a": "Once you get the Agent to the pressure plate, you can use your arrow keys to walk the player to the compass!",
      "MC_HOC_2017_03_Cole_b": "Does the code feel a little long?  Try using a `repeat` loop and see if you can figure out how to make it shorter!"
    },
    "callouts": {
      "MC_HOC_2017_03_Cole_1": "This is a `repeat` loop!  Click it into the workspace and add code that you want to run over and over."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/6": {
    "display_name": "The Swamp",
    "short_instructions": "Get the Agent to the pressure plate.",
    "long_instructions": "The Agent can move across water!  \n\nUse a `repeat` loop to solve this puzzle and help {currentPlayerName} get to the **bucket** [bucket_empty] behind the door. ",
    "authored_hints": {
      "MC_HOC_2017_04_Cole_a": "The Agent needs to `move forward` 7 times.  How can you use a `repeat` loop to make that happen?",
      "MC_HOC_2017_04_Cole_c": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
      "MC_HOC_2017_04_Cole_b": "Once the Agent gets to the pressure plate, the Agent will open the door for the player."
    },
    "callouts": {
      "MC_HOC_2017_04_Cole_a": "The Agent can hover over water, but the player can't!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/7": {
    "display_name": "The Desert",
    "short_instructions": "Get the Agent to the pressure plate.",
    "long_instructions": "You made it across! \n\nNow, get {currentPlayerName} safely through the maze to collect the **axe** [diamond_axe]",
    "authored_hints": {
      "MC_HOC_2017_04POINT5_RYAN_b": "Use the `turn right` block to change the agent's direction ",
      "MC_HOC_2017_04POINT5_RYAN_a": "The Agent only needs to get to the first pressure plate to let Alex or Steve through to the axe."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/8": {
    "display_name": "The River",
    "short_instructions": "Get the player to the shovel.",
    "long_instructions": "Oh no, the bridge is out! \n\nCode the Agent to rebuild the bridge using the [blockly block][0] block so that {currentPlayerName} can get to the **shovel** [diamond_shovel].",
    "authored_hints": {
      "MC_HOC_2017_05_Cole_a": "Did you know that you can put more than one piece of code inside of a loop?  Try moving forward **and** placing a plank inside of a `repeat` to complete this puzzle.",
      "MC_HOC_2017_05_Cole_b": "Get the Agent across the river, building a bridge as you go."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/9": {
    "display_name": "High Tide",
    "short_instructions": "Fix this code to get the Agent to build a bridge across this river.",
    "long_instructions": "Another river, but this one is much wider! \n\nFix this code to help the Agent build a bridge so that {currentPlayerName} can get to the **pickaxe** [diamond_pickaxe]. ",
    "authored_hints": {
      "MC_HOC_2017_06_Cole_a": "How many times does this loop run?  How many times _should_ it run?",
      "MC_HOC_2017_06_Cole_b": "Help the Agent build a bridge all the way across the water! "
    },
    "callouts": {
      "MC_HOC_2017_06_Cole_1": "You cannot throw these blocks away, but you can edit them!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/11": {
    "short_instructions": "Use the `build bridge` function twice to make a path to the Redstone Torch.",
    "long_instructions": "A **function** named `build bridge` is in your workspace.  All of the code you need to cross the river is built right in! \n\nSnap the small, green [blockly block][0] function block into your workspace twice to fix the path and get {currentPlayerName} to the Redstone Torch [redstone_torch].",
    "authored_hints": {
      "Function_intro_Ryan_b": "If you call the functions correctly, this is the path you will travel...",
      "Function_intro_Ryan_a": "You can call a function many times inside of your program!  Try calling it twice to solve this puzzle."
    },
    "callouts": {
      "Function_intro_Ryan_1": "This little instruction tells the computer to run the BIG chunk of code with the same name in the workspace."
    },
    "function_definitions": {
      "build bridge": {
        "name": "build bridge"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/12": {
    "display_name": "Snowy Pass",
    "short_instructions": "Destroy the ice and get {currentPlayerName} to the Minecart.",
    "long_instructions": "There's ice in the way!  \n\nThe `clear path` function can help you destroy the ice and get {currentPlayerName} to the Minecart [minecart_normal]! ",
    "authored_hints": {
      "MC_HOC_2017_07_Cole_c": "All you need to have the Agent do is clear the path to the Minecart.",
      "MC_HOC_2017_07_Cole_a": "To solve this puzzle, figure out what the `clear path` function does and call it as many times as you need using the small green `clear path` block from the toolbox.",
      "MC_HOC_2017_07_Cole_b": "Try mixing the function blocks with other blocks from the toolbox to help you solve this puzzle."
    },
    "function_definitions": {
      "clear path": {
        "name": "clear path"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/13": {
    "display_name": "The Cave",
    "short_instructions": "Use the functions to finish this minecart track.",
    "long_instructions": "Can you spot the difference between the two functions in your workspace? \n\nUse these functions with other code from the toolbox to clear a path for the Minecart, then collect the **Flint and Steel** [flint_and_steel]. \n ",
    "authored_hints": {
      "MC_HOC_2017_10_Cole_b": "Don't know where to go?  See if you can find the dotted line!",
      "MC_HOC_2017_10_Cole_a": "Use functions to make solving this puzzle easier!"
    },
    "function_definitions": {
      "fix long path": {
        "name": "fix long path"
      },
      "fix short path": {
        "name": "fix short path"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/14": {
    "display_name": "The Nether Fortress",
    "short_instructions": "Use the functions to find a way across the lava.",
    "long_instructions": "Look at the functions below.  How can you use them to avoid the Ghasts and help {currentPlayerName} make it safely to the **Enchanted Book** [book_enchanted]?  ",
    "authored_hints": {
      "MC_HOC_2017_08_RY_a": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
      "MC_HOC_2017_08_RY_b": "There are LOTS of ways to solve this puzzle.  Try a few!",
      "MC_HOC_2017_08_RY_c": "Try following the dotted line for a simple path through the lava."
    },
    "callouts": {
      "MC_HOC_2017_08_RY_1": "The Agent can hover over lava, but Steve and Alex can't!  "
    },
    "function_definitions": {
      "build short bridge": {
        "name": "build short bridge"
      },
      "build long bridge": {
        "name": "build long bridge"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/20/levels/16": {
    "display_name": "Freeplay",
    "short_instructions": "**Freeplay:**  Time to explore on your own!",
    "long_instructions": "**Freeplay:** Now it's up to you! Use the Agent's code to help you explore this world.",
    "authored_hints": {
      "MC_HOC_2017_13_Cole_a": "Try having the Agent build some minecart tracks so you can explore the world!"
    },
    "function_definitions": {
      "function 1": {
        "name": "function 1"
      },
      "function 2": {
        "name": "function 2"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/1": {
    "long_instructions": "Here is a puzzle that uses a function that we have defined. ",
    "function_definitions": {
      "draw a square": {
        "name": "draw a square"
      },
      "draw ear stems": {
        "name": "draw ear stems"
      }
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing. The function is not called in the program.",
              "correct": false,
              "feedback": "Incorrect. The function is actually called two times in the program."
            },
            {
              "text": "The artist will draw a single square.",
              "correct": false,
              "feedback": "Incorrect. The function is actually called two times in the program."
            },
            {
              "text": "The artist will draw two squares that overlap.",
              "correct": false,
              "feedback": "Incorrect. The length of each side of the square is only 100 pixels, but the artist jumps by 175 pixels between functions."
            },
            {
              "text": "The artist will draw two squares with a small gap in between.",
              "correct": true,
              "feedback": "Correct! The function is called two times in the program, with a jump in between."
            }
          ],
          "questions": [
            {
              "text": "What will happen when you press \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/2": {
    "short_instructions": "Use the `draw a square` function to create the glasses. ",
    "long_instructions": "Here is a function called `draw a square`. Use it to complete this drawing. \n\n* * *\n\nThe squares are 75 pixels apart.",
    "authored_hints": {
      "courseD_artist_functions2_b": "The function should not contain your whole program, just the part that draws a square with 100 pixel sides.",
      "courseD_artist_functions2_c": "Make sure that you use the green `draw a square` block to \"call\" your function. Otherwise, the code in your function will not run.\n\n[blockly block][0]",
      "courseD_artist_functions2_a": "Your program should:\n\n-   Use your function\n-   Move forward 100 + 75 pixels\n-   Use your function again"
    },
    "callouts": {
      "courseD_artist_functions2_1": "When this green block runs, all of the code in the function will run. What should the artist do after drawing the first square?"
    },
    "function_definitions": {
      "draw a square": {
        "name": "draw a square"
      },
      "draw ear stems": {
        "name": "draw ear stems"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/3": {
    "short_instructions": "Build a function that will create this star.",
    "long_instructions": "Build a function that will create this star.\n\n* * *\n\n-   Each arm of the star is 25 pixels long\n-   You need to turn 45 degrees to get 8 arms\n-   It is okay to go forward and backward over the same arm",
    "function_definitions": {
      "draw a star": {
        "name": "draw a star"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/4": {
    "short_instructions": "Draw only those three stars to finish this puzzle.",
    "long_instructions": "When is drawing three stars harder than drawing four? When you also have to jump over the moon!\n\nDraw only those three stars to finish this puzzle.\n\n* * *\n\n-   The jump between the first and second star is **200** pixels\n-   The jump between the second and third is **100** pixels",
    "authored_hints": {
      "courseD_artist_functions5_a": "Don't give up!  Remember what you have been learning.",
      "courseD_artist_functions5_b": "Functions make it easy to call saved code at any time, not just from inside a loop!",
      "courseD_artist_functions5_c": "Start by creating your `draw a star` function, then use this function to draw the three stars!"
    },
    "function_definitions": {
      "draw a star": {
        "name": "draw a star"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/5": {
    "short_instructions": "Try solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!",
    "long_instructions": "Drawing all of these windows individually would be a pain!  \n\nTry solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!\n\n* * *\n\n-   Each window is made up of four **25** pixel squares.\n-   The top windows are a **100** pixel jump away from each other.  \n-   The bottom windows are a **150** pixel jump below the top set.",
    "authored_hints": {
      "courseD_artist_functions7_a": "Try creating your function first then add windows one at a time.",
      "courseD_artist_functions7_b": "To get from the top windows to the bottom windows, simply turn the artist right, jump 150 pixels, then turn the artist right again!  Now the artist will be facing the correct direction to finish the rest of the house!"
    },
    "function_definitions": {
      "draw a window": {
        "name": "draw a window"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/6": {
    "short_instructions": "Create a function for a single square.",
    "long_instructions": "_\"Functions easy!\"_\n\nWe are going to build up to something fancy!  Start by creating a function for this square.",
    "callouts": {
      "courseD_artist_functions8_1": "Your blocks to create functions have been moved under this label in the toolbox."
    },
    "function_definitions": {
      "draw a square": {
        "name": "draw a square"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/7": {
    "short_instructions": "Call the `draw a square` function from inside your `draw a line of squares` function to make this even easier!",
    "long_instructions": "_\"Zombie get dizzy.\"_\n\nCall the `draw a square` function from inside your `draw a line of squares` function to make this even easier!\n\n* * *\n\n-   The squares are _50_ pixels apart.",
    "authored_hints": {
      "courseD_artist_functions8_f": "You only need one `move forward` block if you're doing this correctly!",
      "courseD_artist_functions8_a": "Start by making a function for a square, then try making a function for a line of squares.",
      "courseD_artist_functions8_d": "To make a line of squares,\n\n-   repeat 3 times\n    -   draw a square\n    -   jump forward **100 pixels**"
    },
    "function_definitions": {
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/8": {
    "short_instructions": "Add one more function that creates this stack of staggered squares.",
    "long_instructions": "Add one more function that creates this stack of staggered squares using the `draw a line of squares` function.",
    "authored_hints": {
      "courseD_artist_functions8_f": "This is easier than it looks!  You shouldn't need any `move` or `jump` blocks here!",
      "courseD_artist_functions8_a": "The second line of squares is just a 180 degree turn different than the first!",
      "courseD_artist_functions8_c": "At the end of each line of squares, the artist only needs to turn 180 degrees before drawing the next line of squares.  Put the whole thing in a repeat loop to set you up for the next exercise!"
    },
    "function_definitions": {
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      },
      "do something": {
        "name": "do something"
      },
      "staggered squares": {
        "name": "staggered squares"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/9": {
    "short_instructions": "Use everything you've learned so far to recreate this design.",
    "authored_hints": {
      "courseD_artist_functions8_f": "You only need one `move forward` block, but you will need quite a few `jump forward` and/or `jump backward` blocks!",
      "courseD_artist_functions8_a": "Start by making a function for a square, then try making a function for a line of squares.\n\nHow would you use the `draw a line of squares` function to make this image?",
      "courseD_artist_functions8_d": "To make a line of squares,\n\n-   repeat 3 times\n    -   draw a square with a side length of **50 pixels**\n    -   jump forward **100 pixels**",
      "courseD_artist_functions8_b": "Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?\n\n[][0]",
      "courseD_artist_functions8_c": "At the end of each set of staggered squares, the artist will need to jump down and backward before he draws the next set of staggered squares.",
      "courseD_artist_functions8_g": "[][0]"
    },
    "function_definitions": {
      "do something": {
        "name": "do something"
      },
      "staggered squares": {
        "name": "staggered squares"
      },
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/10": {
    "short_instructions": "**Challenge:** Create this image using only the blocks provided.",
    "long_instructions": "**Challenge:** Create this image using the limited blocks provided. \n\n-   Each triangle has sides of **50 pixels**  \n-   To draw a diamond, you will need to alternate between turning **60 degrees and 120 degrees**.",
    "authored_hints": {
      "courseD_artist_functions9_e": "Can you spot all four places that the `line of triangles` can be used in this drawing?\n\n[][0]",
      "courseD_artist_functions9_a": "This puzzle can be broken into three parts:\n\n-   make the `draw a triangle` function\n-   make the `draw a line of triangles` function\n-   use your `draw a line of triangles` function four times to complete the drawing",
      "courseD_artist_functions9_b": "This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line.",
      "courseD_artist_functions9_c": "To draw a line of triangles:\n\n-   repeat 4 times\n    -   draw a triangle\n    -   jump forward 50 pixels",
      "courseD_artist_functions9_d": "To draw the diamond:\n\n-   repeat 2 times\n    -   draw a line of triangles\n    -   turn 60 degrees\n    -   draw a line of triangles\n    -   turn 120 degrees"
    },
    "function_definitions": {
      "do something": {
        "name": "do something"
      },
      "draw triangle": {
        "name": "draw triangle"
      },
      "draw line of triangles": {
        "name": "draw line of triangles"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/11": {
    "short_instructions": "This time, use lines of 8 hexagons with 25 pixel sides.",
    "long_instructions": "This time, use lines of 8 hexagons with 25 pixel sides.\n\n-   To make each hexagon, repeat the side 6 times, turning 60 degrees.\n-   Jump 25 pixels between each hexagon.\n-   To draw a diamond, you will need to alternate between turning 60 degrees and 120 degrees.",
    "authored_hints": {
      "courseD_artist_functions10_b": "This drawing is a lot like the last one, but the `draw line` function is now drawing a different shape.",
      "courseD_artist_functions10_a": "To avoid using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.",
      "courseD_artist_functions10_c": "Do you see where this drawing could use a function called `line of hexagons`?\n\n[][0]"
    },
    "function_definitions": {
      "do something": {
        "name": "do something"
      },
      "draw hexagon": {
        "name": "draw hexagon"
      },
      "draw line of hexagons": {
        "name": "draw line of hexagons"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/12": {
    "function_definitions": {
      "draw line of polygons": {
        "name": "draw line of polygons"
      },
      "draw polygon": {
        "name": "draw polygon"
      },
      "do something": {
        "name": "do something"
      }
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The artist will solve the puzzle correctly.",
              "correct": false,
              "feedback": "Incorrect. The loop uses \"draw polygon\" instead of \"draw line of polygons\"."
            },
            {
              "text": "The artist will draw four squares in a window pattern.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The artist will draw only one line of squares.",
              "correct": false,
              "feedback": "Incorrect. The program does not call \"draw line of polygons\"."
            },
            {
              "text": "The artist will draw four squares on top of one another.",
              "correct": false,
              "feedback": "Incorrect. The loop turns 90 degrees between calls to \"draw polygon\"."
            }
          ],
          "questions": [
            {
              "text": "What will happen when you press the \"Run\" button?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/21/levels/13": {
    "short_instructions": "**Inspiration:** Use what you've learned to make whatever you want!",
    "long_instructions": "**Inspiration:** Use what you've learned to make whatever you want!  \n\nCan you make something like this pinwheel?",
    "function_definitions": {
      "draw hexagon": {
        "name": "draw hexagon"
      },
      "draw line of hexagons": {
        "name": "draw line of hexagons"
      },
      "staggered squares": {
        "name": "staggered squares"
      },
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/extras?level_name=courseE_artist_functions_challenge1_2021": {
    "short_instructions": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
    "long_instructions": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
    "authored_hints": {
      "courseE_artist_functions_challenge1_a": "If you call the function one more time, you can create the same design in the final corner.",
      "courseE_artist_functions_challenge1_b": "You can also `jump to` other positions or change the whole design however you want!"
    },
    "callouts": {
      "courseE_artist_functions_challenge1_callout1": "Keep this program going by adding more code to the bottom.",
      "courseE_artist_functions_challenge1_callout2": "If you don't like this design, change it to anything you want!"
    },
    "function_definitions": {
      "my design": {
        "name": "my design"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/21/extras?level_name=courseE_artist_functions_challenge2_2021": {
    "short_instructions": "Try this code to see how it works, then make the program your own!",
    "long_instructions": "Not only can you jump to some pre-set locations, like the corners of the canvas, you can also use a `jump to` command to get to absolutely any spot you like! Try this code to see how it works, then make the program your own!\n\n[blockly block][0]",
    "authored_hints": {
      "courseE_artist_functions_challenge1_a": "[blockly block][0]\n\nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!\n\n[][1]"
    },
    "callouts": {
      "courseE_artist_functions_challenge2_callout1": "Keep this program going by adding more code to the bottom.",
      "courseE_artist_functions_challenge2_callout2": "If you don't like this design, change it to anything you want!"
    },
    "function_definitions": {
      "my design": {
        "name": "my design"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/1": {
    "short_instructions": "Help the harvester get to the pumpkin and pick it.",
    "long_instructions": "_\"Have we met before? I'm the harvester!\"_\n\nHelp the harvester get to the pumpkin and pick it.",
    "authored_hints": {
      "courseE_farmer_functions1_a": "The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have.",
      "courseE_farmer_functions1_b": "You only need to pick one pumpkin, but could you use a loop to get to it?"
    },
    "callouts": {
      "courseE_farmer_functions1_2": "The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/2": {
    "short_instructions": "Help the harvester pick all of the corn, then the pumpkin.",
    "long_instructions": "_\"Oooh, veggies are cropping up everywhere!\"_\n\nNow help the harvester pick all of the corn on the way to the pumpkin at the end.\n\n* * *\n\n##### Note: Every square on the way to the pumpkin either has **1** corn or nothing at all.  Use the provided `check for corn` function to make sure you get everything.",
    "authored_hints": {
      "courseE_farmer_functions1a_a": "Make sure you read through the function definition. Can you tell what it does?",
      "courseE_farmer_functions1a_b": "Use a `repeat until` block to get to the pumpkin!"
    },
    "callouts": {
      "courseE_farmer_functions1a_1": "This veggie is unknown.  It changes each time you run the program."
    },
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/3": {
    "short_instructions": "Help the harvester pick the corn and pumpkins.",
    "long_instructions": "Use the function to help the harvester pick the corn and pumpkins.\n\n* * *\n\n##### Each sprout will either grow _one_ corn or nothing.",
    "authored_hints": {
      "courseE_farmer_functions2b_a": "You can `repeat until pumpkin` to get to the ends of the two paths.",
      "courseE_farmer_functions2b_b": "There is no corn on the connecting path, so you can just move along it and turn.",
      "courseE_farmer_functions2b_c": "You will need two separate `repeat until` blocks to get all of the crops."
    },
    "callouts": {
      "courseE_farmer_functions1a_1": "This veggie is unknown.  It changes each time you run the program."
    },
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/4": {
    "short_instructions": "Help the farmer pick the corn and pumpkins using the `corn and pumpkin` function.",
    "long_instructions": "_\"I feel so functional!\"_\n\nNow there are multiple pumpkins in each patch!  Look carefully at the function definitions below to figure out how to use each one.\n\n* * *\n\n##### Each sprout will either grow _one_ corn or nothing.",
    "authored_hints": {
      "courseE_farmer_functions2ba_a": "Use the green `get all pumpkins` block to make sure you get all of the pumpkins!"
    },
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/5": {
    "short_instructions": "Try on a longer path.",
    "long_instructions": "Great!  Try your functions out on a longer path.",
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/6": {
    "short_instructions": "This function calls other functions!",
    "long_instructions": "Did you notice that there was a lot of repeated code in that last puzzle?  We can save space by calling that code `pick along path` and using a new function to call the other functions!\n\nUse `pick along path` to solve this puzzle again using fewer blocks.",
    "authored_hints": {
      "coursee_farmer_functions3c1_2018_a": "You'll need to use the `pick along path` function three times to solve this puzzle.",
      "coursee_farmer_functions3c1_2018_b": "What code do you need to add to get around the corners?"
    },
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/7": {
    "short_instructions": "We don't have a video for creating functions, yet. This is a placeholder."
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/8": {
    "short_instructions": "Create a function that sends the harvester down a square path to pick a single head of lettuce from the middle of each row.",
    "long_instructions": "_\"Functions **lettuce** do more with less work!\"_\n\nCreate a function that sends the harvester down a square path to pick a single head of lettuce from the middle of each row.",
    "authored_hints": {
      "courseE_farmer_functions7a1_2018_a": "Create your function under the `functions` section in the toolbox.",
      "courseE_farmer_functions7a1_2018_b": "Don't forget to use your function when you're done making it!"
    },
    "function_definitions": {
      "garden square": {
        "name": "garden square"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/9": {
    "short_instructions": "Is your function still helpful?",
    "long_instructions": "Try writing your function again. Is it still helpful?  How can you make it work for this puzzle?",
    "authored_hints": {
      "courseE_farmer_functions8a1_2018a": "Start this puzzle off by coding the same function you made in the last puzzle.",
      "courseE_farmer_functions8a1_2018b": "After the function runs the first time, you'll need to make one extra turn before you can run it again."
    },
    "function_definitions": {
      "garden square": {
        "name": "garden square"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/10": {
    "short_instructions": "Is your function still helpful?",
    "long_instructions": "**This puzzle is a-MAZE-ing!**\n\nIs your function still helpful for this puzzle?",
    "authored_hints": {
      "courseE_farmer_functions9a1_2018a": "You'll use the same function that you made in the last couple of puzzles.",
      "courseE_farmer_functions9a1_2018b": "Use the same steps from the previous puzzle to solve the first half of this puzzle.",
      "courseE_farmer_functions9a1_2018c": "You'll need to `turn` a few times and `move forward` to get to the last crop of lettuce before you can call your function again."
    },
    "function_definitions": {
      "garden square": {
        "name": "garden square"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/11": {
    "short_instructions": "Use everything that you've learned so far to solve this puzzle!",
    "long_instructions": "**Challenge:** Use everything that you've learned so far to solve this puzzle in 19 blocks or less!",
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      },
      "pumpkin square": {
        "name": "pumpkin square"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/12": {
    "short_instructions": "Solve this puzzle in 23 blocks or less.",
    "long_instructions": "Solve this puzzle in 23 blocks or less.\n\n* * *\n\n##### Each sprout will either grow _one_ corn or nothing. To find the best solution, you will need to edit the functions directly.",
    "callouts": {
      "courseE_farmer_functions1a_1": "This veggie is unknown.  It changes each time you run the program."
    },
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "check for corn": {
        "name": "check for corn"
      },
      "corn rectangle": {
        "name": "corn rectangle"
      },
      "lettuce stairs": {
        "name": "lettuce stairs"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/22/levels/13": {
    "long_instructions": "Figure out which function to use and which one to delete, then solve this puzzle!",
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "pumpkin square": {
        "name": "pumpkin square"
      },
      "check square for corn": {
        "name": "check square for corn"
      },
      "get produce": {
        "name": "get produce"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The harvester will pick two pumpkins.",
              "correct": false,
              "feedback": "Incorrect. The harvester goes forward until the end of the path, then turns around and moves back until she picks the lettuce."
            },
            {
              "text": "The harvester will pick all of the pumpkins.",
              "correct": false,
              "feedback": "Incorrect. The harvester goes forward until the end of the path, then turns around and moves back until she picks the lettuce."
            },
            {
              "text": "The harvester will pick the lettuce.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The harvester will pick the corn.",
              "correct": false,
              "feedback": "Incorrect. The harvester goes forward until the end of the path, then turns around and moves back until she picks the lettuce."
            }
          ],
          "questions": [
            {
              "text": "Look at the functions defined below. What will the harvester pick?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/1": {
    "short_instructions": "Make a prediction!",
    "long_instructions": "Make a prediction! Study the code.",
    "callouts": {
      "variablesPredict": "Look closely at the code below this point."
    },
    "behavior_names": {
      "moving east": "moving east",
      "moving west": "moving west",
      "mystery behavior": "mystery behavior",
      "wandering": "wandering",
      "running east": "running east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "patrolling": "patrolling"
    },
    "placeholder_texts": {
      "f6429fe0f1a76611670df7e1234af936": "What is your name?"
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The program will print \"Hello name!\"",
              "correct": false,
              "feedback": "Incorrect. The name block will be replaced with whatever you type in."
            },
            {
              "text": "The program will greet you with the name you type in.",
              "correct": true,
              "feedback": "Correct! What you type is used in place of the name block."
            },
            {
              "text": "The sprite will change sizes.",
              "correct": false,
              "feedback": "Incorrect. Text is printed to the screen."
            },
            {
              "text": "The computer will ask another question.",
              "correct": false,
              "feedback": "Incorrect. Only one question is asked, right when the program begins."
            }
          ],
          "questions": [
            {
              "text": "This program lets you answer a question by typing with your keyboard. The `print` block shows text on the screen. Make a prediction: What will happen after answering the question?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/2": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/3": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Make two sprites with different locations.",
    "long_instructions": "# Quick Review\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nIn this lesson, we'll be learning a lot about adding text to your project. Before that, let's practice something you've already learned.\n\n## Do This\n\n-   Make two sprites with different costumes.\n-   Give each sprite a different location.",
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/4": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Use the \"print\" block to make text appear on the screen.",
    "long_instructions": "# Printing Text\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nTo make text appear on the screen you can use the print block: [blockly block][1]\n\n## Do This\n\n-   Find the `print` block in the **World** category and add it to your program.\n-   Type a message into the right side of the block to make that text appear above your sprites.\n\n_You might print text for lots of reasons:_\n\n-   _To make characters talk._\n-   _To describe a scene._\n-   _To give instructions for a game._",
    "callouts": {
      "print_block": "Find the print block here!",
      "text_print_finish": "Did your message print above? If so, hit 'Finish'. If not, hit 'Reset', change your code, and hit 'Run' again."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/5": {
    "short_instructions": "Use events to make more text appear on the screen over time.",
    "long_instructions": "# Using Text with Events\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nTo make more text appear on the screen over time, you'll need to use events.\n\n## Do This\n\n-   Choose any block from the **Events** category and add it to your program.\n-   Connect a new `print` block under the event.\n-   Run your program and make the second message appear after the first.\n\n_Changing text over time makes your project more engaging:_\n\n-   _Characters can have a conversation._\n-   _You can tell a story._",
    "callouts": {
      "events_category": "Click here to open the Events category."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/6": {
    "short_instructions": "Add a prompt to the screen.",
    "long_instructions": "# Prompts (Part 1)\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nIt's time to start learning how to use **prompts**. Prompts make it possible to get words and other text from the user and use them later in your program. The text the user types into the prompt is stored in a **variable**.\n\n[blockly block][1]\n\n## Do This\n\n-   Find the `prompt user` block in the **World** category and add it to your program.\n-   In the top part of the block, type in a question you'd like to ask.\n-   Change `???` to the label you want to use by clicking \"**Rename this variable**.\"\n-   Press \"Run\", then answer the prompt by typing something in.\n\n_Nothing else will happen yet, but that's okay!_",
    "callouts": {
      "prompt_block": "Find the prompt block here!"
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    },
    "placeholder_texts": {
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/7": {
    "short_instructions": "Use the \"when answered\" block to print the text from the variable after the prompt is answered.",
    "long_instructions": "# Prompts (Part 2)\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nTo use the information stored in the variable, we first need to wait for the user to answer. You now have a new event block that is triggered as soon as a prompt is answered:\n\n[blockly block][1]\n\n## Do This\n\n-   Drag the new `when answered` block into your program. Make sure the variable name matches the one in your prompt!\n-   Connect a `print` block under this new event. \n-   Make sure all the variable labels match!\n-   Press \"Run\", then type something into the prompt.\n\n_Whatever message you type should be printed to the top of the screen._",
    "callouts": {
      "answered_block": "Look for a new block here!"
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    },
    "placeholder_texts": {
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/8": {
    "short_instructions": "Combine the text stored in variables with other text.",
    "long_instructions": "# Prompts (Part 3)\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nNow let's get a little fancier. You can combine the text stored in variables with other text:\n\n[blockly block][1]\n\n## Do This\n\n-   Look through the new blocks in the **World** category.\n-   Use these blocks with your `print` block so that it combines other text with the text from the variable.\n-   You might want to change the question you are asking or the label of your variable.\n\n_This level is challenging! Click the lightbulb to the left if you would like to see an example._",
    "authored_hints": {
      "prompt_example": "[blockly block][0]"
    },
    "callouts": {
      "join_blocks": "Look for new blocks here!"
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    },
    "placeholder_texts": {
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/9": {
    "display_name": "Using Text for Speech",
    "bubble_choice_description": "Use `print` blocks to make two sprites have a conversation.",
    "short_instructions": "Use the `print` block to make two characters have a conversation.",
    "long_instructions": "# Using Text for Speech\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nLet's use the `print` block to make two characters have a conversation. This program has been started for you. You can just add `print` blocks to it or you can make any other changes you like!\n\n## Do This\n\n-   Place a `print` block under each `at seconds` block.\n-   Type in your own text to make the animals have a conversation.",
    "callouts": {
      "text_generic_finish": "Are you finished? If so, hit 'Finish'. If not, hit 'Reset', change your code, and hit 'Run' again."
    },
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "moving with arrow keys": "moving with arrow keys",
      "driving with arrow keys": "driving with arrow keys",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    },
    "placeholder_texts": {
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/10": {
    "display_name": "Text from prompts",
    "bubble_choice_description": "Add an event block so the text gets printed correctly.",
    "short_instructions": "Add an event block so the text gets printed correctly.",
    "long_instructions": "# Printing text from prompts\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nThis program has been started for you, but there is a bug. The text is getting printed too early!\n\n## Do This\n\n-   Read the code carefully and Run the program to see what happens.\n-   Add a `when answered` block to your workspace.\n-   Rearrange your code so the text from the prompt prints correctly at the right time.",
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "moving with arrow keys": "moving with arrow keys",
      "driving with arrow keys": "driving with arrow keys",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    },
    "placeholder_texts": {
      "c529a06c3f8518b63ff6dfac482b335c": "Name this planet:",
      "44506356d48394cd903b579df9de9117": ", earthling!",
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/11": {
    "display_name": "Name the robot!",
    "bubble_choice_description": "A mistake in the code is messing up what the robot is saying. Find and fix the mistake.",
    "short_instructions": "Fix the bug so the text prints correctly.",
    "long_instructions": "# Joining Text with Variables\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nThis program has a bug that makes the text get printed incorrectly. Run the program without changing anything to see what's wrong, then try fixing the problem!\n\n[blockly block][1]\n\n## Do This\n\n-   Read the code below carefully.\n-   Run the code and enter a name to see what happens.\n    <details><summary><strong>What's the bug?</strong></summary>The text that gets printed should have spaces around the name, but the spaces are missing.</details>\n-   Fix the bug.",
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "moving with arrow keys": "moving with arrow keys",
      "driving with arrow keys": "driving with arrow keys",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    },
    "placeholder_texts": {
      "5bd698afd23bccde289bb0b4aa72a518": "Name the robot.",
      "34088af1fb721900963462375b3bbe23": "the robot!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/12": {
    "display_name": "Variable Labels",
    "bubble_choice_description": "A mistake in the code is messing up this greeting card. Find and fix the mistake.",
    "short_instructions": "Fix the bug so the text prints correctly.",
    "long_instructions": "# Variable Labels\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nEach time you use a variable, the label (like \"name\" or \"age\") should match. This program has **two** prompts, but the text doesn't get printed because of a mistake with variable labels. Run the program without changing anything to see what's wrong, then try fixing the problem!\n\n## Do This\n\n-   Read the code below carefully.\n-   Run the code and enter a name and age to see what happens.\n    <details><summary><strong>What's the bug?</strong></summary>The `when answered` block uses the wrong variable, so the text is never displayed.</details>\n-   Fix the bug so that all the text gets printed correctly.",
    "authored_hints": {
      "when_answered_var": "Try changing the label of the variable in the `when answered` block. Because there are multiple prompts, use the label for the _last_ prompt that will be answered.\n\n[blockly block][0]"
    },
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "moving with arrow keys": "moving with arrow keys",
      "driving with arrow keys": "driving with arrow keys",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    },
    "placeholder_texts": {
      "ff4d94eeb46da1dbec33fa9cfc2749ee": "Who is having a birthday?",
      "d1210f945885351b13feb9bbb868aeef": "How old will they be?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/13": {
    "display_name": "Big Text",
    "bubble_choice_description": "\"Title screens\" are another way to add text. Try them out here!",
    "short_instructions": "Add big text to your program with a title screen, then hide the title screen using an event.",
    "long_instructions": "# Title Screens\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nYou can add big text to your program with a title screen. This block makes the text appear until you replace it or hide it. In this level, you'll use two new blocks.\n\n<table>\n<tr><td>\n<xml><block type=\"gamelab_showTitleScreen\">\n      <value name=\"TITLE\">\n        </value>\n        <value name=\"SUBTITLE\">\n        </value>\n    </block></xml>\n    </td><td>\n    <xml>\n    <block type=\"gamelab_hideTitleScreen\"/></xml>\n    </td>\n</tr>\n</table>\n\n## Do This\n\n-   Make a program that displays a title screen, and then hides it _at 3 seconds_.",
    "callouts": {
      "title_block": "Look for two new blocks here!",
      "text_answer_finish": "Did a title screen show for 3 seconds? If so, hit 'Finish'. If not, hit 'Reset', change your code, and hit 'Run' again."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    },
    "placeholder_texts": {
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/14": {
    "display_name": "Prompting for Colors",
    "bubble_choice_description": "Ask the user for the name of a color and use it in your program.",
    "short_instructions": "Add a prompt for the variable called \"color\".",
    "long_instructions": "# Prompting for Colors\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nWith prompts, you can actually ask the user for a _color_ and use it later in your program. This program has been started for you.\n\n## Do This\n\n-   Read the code below carefully.\n-   Add a prompt for the variable called `color`.\n-   Run your program and enter the name of a color.\n\n_The background of your project should change to that color!_\n\n<details><summary><strong>There are 140 color names that Sprite Lab can recognize. Click here to see the full list!</strong></summary>\n<table>\n<tr>\n <td style=\"background-color:black; width:20px; border-radius: 5px;\"></td> <td>black</td> </tr><tr>\n <td style=\"background-color:navy; width:20px; border-radius: 5px;\"></td> <td>navy</td> </tr><tr>\n <td style=\"background-color:darkblue; width:20px; border-radius: 5px;\"></td> <td>darkblue</td> </tr><tr>\n <td style=\"background-color:mediumblue; width:20px; border-radius: 5px;\"></td> <td>mediumblue</td> </tr><tr>\n <td style=\"background-color:blue; width:20px; border-radius: 5px;\"></td> <td>blue</td> </tr><tr>\n <td style=\"background-color:darkgreen; width:20px; border-radius: 5px;\"></td> <td>darkgreen</td> </tr><tr>\n <td style=\"background-color:green; width:20px; border-radius: 5px;\"></td> <td>green</td> </tr><tr>\n <td style=\"background-color:teal; width:20px; border-radius: 5px;\"></td> <td>teal</td> </tr><tr>\n <td style=\"background-color:darkcyan; width:20px; border-radius: 5px;\"></td> <td>darkcyan</td> </tr><tr>\n <td style=\"background-color:deepskyblue; width:20px; border-radius: 5px;\"></td> <td>deepskyblue</td> </tr><tr>\n <td style=\"background-color:darkturquoise; width:20px; border-radius: 5px;\"></td> <td>darkturquoise</td> </tr><tr>\n <td style=\"background-color:mediumspringgreen; width:20px; border-radius: 5px;\"></td> <td>mediumspringgreen</td> </tr><tr>\n <td style=\"background-color:lime; width:20px; border-radius: 5px;\"></td> <td>lime</td> </tr><tr>\n <td style=\"background-color:springgreen; width:20px; border-radius: 5px;\"></td> <td>springgreen</td> </tr><tr>\n <td style=\"background-color:aqua; width:20px; border-radius: 5px;\"></td> <td>aqua</td> </tr><tr>\n <td style=\"background-color:cyan; width:20px; border-radius: 5px;\"></td> <td>cyan</td> </tr><tr>\n <td style=\"background-color:midnightblue; width:20px; border-radius: 5px;\"></td> <td>midnightblue</td> </tr><tr>\n <td style=\"background-color:dodgerblue; width:20px; border-radius: 5px;\"></td> <td>dodgerblue</td> </tr><tr>\n <td style=\"background-color:lightseagreen; width:20px; border-radius: 5px;\"></td> <td>lightseagreen</td> </tr><tr>\n <td style=\"background-color:forestgreen; width:20px; border-radius: 5px;\"></td> <td>forestgreen</td> </tr><tr>\n <td style=\"background-color:seagreen; width:20px; border-radius: 5px;\"></td> <td>seagreen</td> </tr><tr>\n <td style=\"background-color:darkslategray; width:20px; border-radius: 5px;\"></td> <td>darkslategray</td> </tr><tr>\n <td style=\"background-color:darkslategrey; width:20px; border-radius: 5px;\"></td> <td>darkslategrey</td> </tr><tr>\n <td style=\"background-color:limegreen; width:20px; border-radius: 5px;\"></td> <td>limegreen</td> </tr><tr>\n <td style=\"background-color:mediumseagreen; width:20px; border-radius: 5px;\"></td> <td>mediumseagreen</td> </tr><tr>\n <td style=\"background-color:turquoise; width:20px; border-radius: 5px;\"></td> <td>turquoise</td> </tr><tr>\n <td style=\"background-color:royalblue; width:20px; border-radius: 5px;\"></td> <td>royalblue</td> </tr><tr>\n <td style=\"background-color:steelblue; width:20px; border-radius: 5px;\"></td> <td>steelblue</td> </tr><tr>\n <td style=\"background-color:darkslateblue; width:20px; border-radius: 5px;\"></td> <td>darkslateblue</td> </tr><tr>\n <td style=\"background-color:mediumturquoise; width:20px; border-radius: 5px;\"></td> <td>mediumturquoise</td> </tr><tr>\n <td style=\"background-color:indigo; width:20px; border-radius: 5px;\"></td> <td>indigo</td> </tr><tr>\n <td style=\"background-color:darkolivegreen; width:20px; border-radius: 5px;\"></td> <td>darkolivegreen</td> </tr><tr>\n <td style=\"background-color:cadetblue; width:20px; border-radius: 5px;\"></td> <td>cadetblue</td> </tr><tr>\n <td style=\"background-color:cornflowerblue; width:20px; border-radius: 5px;\"></td> <td>cornflowerblue</td> </tr><tr>\n <td style=\"background-color:rebeccapurple; width:20px; border-radius: 5px;\"></td> <td>rebeccapurple</td> </tr><tr>\n <td style=\"background-color:mediumaquamarine; width:20px; border-radius: 5px;\"></td> <td>mediumaquamarine</td> </tr><tr>\n <td style=\"background-color:dimgray; width:20px; border-radius: 5px;\"></td> <td>dimgray</td> </tr><tr>\n <td style=\"background-color:dimgrey; width:20px; border-radius: 5px;\"></td> <td>dimgrey</td> </tr><tr>\n <td style=\"background-color:slateblue; width:20px; border-radius: 5px;\"></td> <td>slateblue</td> </tr><tr>\n <td style=\"background-color:olivedrab; width:20px; border-radius: 5px;\"></td> <td>olivedrab</td> </tr><tr>\n <td style=\"background-color:slategray; width:20px; border-radius: 5px;\"></td> <td>slategray</td> </tr><tr>\n <td style=\"background-color:slategrey; width:20px; border-radius: 5px;\"></td> <td>slategrey</td> </tr><tr>\n <td style=\"background-color:lightslategray; width:20px; border-radius: 5px;\"></td> <td>lightslategray</td> </tr><tr>\n <td style=\"background-color:lightslategrey; width:20px; border-radius: 5px;\"></td> <td>lightslategrey</td> </tr><tr>\n <td style=\"background-color:mediumslateblue; width:20px; border-radius: 5px;\"></td> <td>mediumslateblue</td> </tr><tr>\n <td style=\"background-color:lawngreen; width:20px; border-radius: 5px;\"></td> <td>lawngreen</td> </tr><tr>\n <td style=\"background-color:chartreuse; width:20px; border-radius: 5px;\"></td> <td>chartreuse</td> </tr><tr>\n <td style=\"background-color:aquamarine; width:20px; border-radius: 5px;\"></td> <td>aquamarine</td> </tr><tr>\n <td style=\"background-color:maroon; width:20px; border-radius: 5px;\"></td> <td>maroon</td> </tr><tr>\n <td style=\"background-color:purple; width:20px; border-radius: 5px;\"></td> <td>purple</td> </tr><tr>\n <td style=\"background-color:olive; width:20px; border-radius: 5px;\"></td> <td>olive</td> </tr><tr>\n <td style=\"background-color:gray; width:20px; border-radius: 5px;\"></td> <td>gray</td> </tr><tr>\n <td style=\"background-color:grey; width:20px; border-radius: 5px;\"></td> <td>grey</td> </tr><tr>\n <td style=\"background-color:skyblue; width:20px; border-radius: 5px;\"></td> <td>skyblue</td> </tr><tr>\n <td style=\"background-color:lightskyblue; width:20px; border-radius: 5px;\"></td> <td>lightskyblue</td> </tr><tr>\n <td style=\"background-color:blueviolet; width:20px; border-radius: 5px;\"></td> <td>blueviolet</td> </tr><tr>\n <td style=\"background-color:darkred; width:20px; border-radius: 5px;\"></td> <td>darkred</td> </tr><tr>\n <td style=\"background-color:darkmagenta; width:20px; border-radius: 5px;\"></td> <td>darkmagenta</td> </tr><tr>\n <td style=\"background-color:saddlebrown; width:20px; border-radius: 5px;\"></td> <td>saddlebrown</td> </tr><tr>\n <td style=\"background-color:darkseagreen; width:20px; border-radius: 5px;\"></td> <td>darkseagreen</td> </tr><tr>\n <td style=\"background-color:lightgreen; width:20px; border-radius: 5px;\"></td> <td>lightgreen</td> </tr><tr>\n <td style=\"background-color:mediumpurple; width:20px; border-radius: 5px;\"></td> <td>mediumpurple</td> </tr><tr>\n <td style=\"background-color:darkviolet; width:20px; border-radius: 5px;\"></td> <td>darkviolet</td> </tr><tr>\n <td style=\"background-color:palegreen; width:20px; border-radius: 5px;\"></td> <td>palegreen</td> </tr><tr>\n <td style=\"background-color:darkorchid; width:20px; border-radius: 5px;\"></td> <td>darkorchid</td> </tr><tr>\n <td style=\"background-color:yellowgreen; width:20px; border-radius: 5px;\"></td> <td>yellowgreen</td> </tr><tr>\n <td style=\"background-color:sienna; width:20px; border-radius: 5px;\"></td> <td>sienna</td> </tr><tr>\n <td style=\"background-color:brown; width:20px; border-radius: 5px;\"></td> <td>brown</td> </tr><tr>\n <td style=\"background-color:darkgray; width:20px; border-radius: 5px;\"></td> <td>darkgray</td> </tr><tr>\n <td style=\"background-color:darkgrey; width:20px; border-radius: 5px;\"></td> <td>darkgrey</td> </tr><tr>\n <td style=\"background-color:lightblue; width:20px; border-radius: 5px;\"></td> <td>lightblue</td> </tr><tr>\n <td style=\"background-color:greenyellow; width:20px; border-radius: 5px;\"></td> <td>greenyellow</td> </tr><tr>\n <td style=\"background-color:paleturquoise; width:20px; border-radius: 5px;\"></td> <td>paleturquoise</td> </tr><tr>\n <td style=\"background-color:lightsteelblue; width:20px; border-radius: 5px;\"></td> <td>lightsteelblue</td> </tr><tr>\n <td style=\"background-color:powderblue; width:20px; border-radius: 5px;\"></td> <td>powderblue</td> </tr><tr>\n <td style=\"background-color:firebrick; width:20px; border-radius: 5px;\"></td> <td>firebrick</td> </tr><tr>\n <td style=\"background-color:darkgoldenrod; width:20px; border-radius: 5px;\"></td> <td>darkgoldenrod</td> </tr><tr>\n <td style=\"background-color:mediumorchid; width:20px; border-radius: 5px;\"></td> <td>mediumorchid</td> </tr><tr>\n <td style=\"background-color:rosybrown; width:20px; border-radius: 5px;\"></td> <td>rosybrown</td> </tr><tr>\n <td style=\"background-color:darkkhaki; width:20px; border-radius: 5px;\"></td> <td>darkkhaki</td> </tr><tr>\n <td style=\"background-color:silver; width:20px; border-radius: 5px;\"></td> <td>silver</td> </tr><tr>\n <td style=\"background-color:mediumvioletred; width:20px; border-radius: 5px;\"></td> <td>mediumvioletred</td> </tr><tr>\n <td style=\"background-color:indianred; width:20px; border-radius: 5px;\"></td> <td>indianred</td> </tr><tr>\n <td style=\"background-color:peru; width:20px; border-radius: 5px;\"></td> <td>peru</td> </tr><tr>\n <td style=\"background-color:chocolate; width:20px; border-radius: 5px;\"></td> <td>chocolate</td> </tr><tr>\n <td style=\"background-color:tan; width:20px; border-radius: 5px;\"></td> <td>tan</td> </tr><tr>\n <td style=\"background-color:lightgray; width:20px; border-radius: 5px;\"></td> <td>lightgray</td> </tr><tr>\n <td style=\"background-color:lightgrey; width:20px; border-radius: 5px;\"></td> <td>lightgrey</td> </tr><tr>\n <td style=\"background-color:thistle; width:20px; border-radius: 5px;\"></td> <td>thistle</td> </tr><tr>\n <td style=\"background-color:orchid; width:20px; border-radius: 5px;\"></td> <td>orchid</td> </tr><tr>\n <td style=\"background-color:goldenrod; width:20px; border-radius: 5px;\"></td> <td>goldenrod</td> </tr><tr>\n <td style=\"background-color:palevioletred; width:20px; border-radius: 5px;\"></td> <td>palevioletred</td> </tr><tr>\n <td style=\"background-color:crimson; width:20px; border-radius: 5px;\"></td> <td>crimson</td> </tr><tr>\n <td style=\"background-color:gainsboro; width:20px; border-radius: 5px;\"></td> <td>gainsboro</td> </tr><tr>\n <td style=\"background-color:plum; width:20px; border-radius: 5px;\"></td> <td>plum</td> </tr><tr>\n <td style=\"background-color:burlywood; width:20px; border-radius: 5px;\"></td> <td>burlywood</td> </tr><tr>\n <td style=\"background-color:lightcyan; width:20px; border-radius: 5px;\"></td> <td>lightcyan</td> </tr><tr>\n <td style=\"background-color:lavender; width:20px; border-radius: 5px;\"></td> <td>lavender</td> </tr><tr>\n <td style=\"background-color:darksalmon; width:20px; border-radius: 5px;\"></td> <td>darksalmon</td> </tr><tr>\n <td style=\"background-color:violet; width:20px; border-radius: 5px;\"></td> <td>violet</td> </tr><tr>\n <td style=\"background-color:palegoldenrod; width:20px; border-radius: 5px;\"></td> <td>palegoldenrod</td> </tr><tr>\n <td style=\"background-color:lightcoral; width:20px; border-radius: 5px;\"></td> <td>lightcoral</td> </tr><tr>\n <td style=\"background-color:khaki; width:20px; border-radius: 5px;\"></td> <td>khaki</td> </tr><tr>\n <td style=\"background-color:aliceblue; width:20px; border-radius: 5px;\"></td> <td>aliceblue</td> </tr><tr>\n <td style=\"background-color:honeydew; width:20px; border-radius: 5px;\"></td> <td>honeydew</td> </tr><tr>\n <td style=\"background-color:azure; width:20px; border-radius: 5px;\"></td> <td>azure</td> </tr><tr>\n <td style=\"background-color:sandybrown; width:20px; border-radius: 5px;\"></td> <td>sandybrown</td> </tr><tr>\n <td style=\"background-color:wheat; width:20px; border-radius: 5px;\"></td> <td>wheat</td> </tr><tr>\n <td style=\"background-color:beige; width:20px; border-radius: 5px;\"></td> <td>beige</td> </tr><tr>\n <td style=\"background-color:whitesmoke; width:20px; border-radius: 5px;\"></td> <td>whitesmoke</td> </tr><tr>\n <td style=\"background-color:mintcream; width:20px; border-radius: 5px;\"></td> <td>mintcream</td> </tr><tr>\n <td style=\"background-color:ghostwhite; width:20px; border-radius: 5px;\"></td> <td>ghostwhite</td> </tr><tr>\n <td style=\"background-color:salmon; width:20px; border-radius: 5px;\"></td> <td>salmon</td> </tr><tr>\n <td style=\"background-color:antiquewhite; width:20px; border-radius: 5px;\"></td> <td>antiquewhite</td> </tr><tr>\n <td style=\"background-color:linen; width:20px; border-radius: 5px;\"></td> <td>linen</td> </tr><tr>\n <td style=\"background-color:lightgoldenrodyellow; width:20px; border-radius: 5px;\"></td> <td>lightgoldenrodyellow</td> </tr><tr>\n <td style=\"background-color:oldlace; width:20px; border-radius: 5px;\"></td> <td>oldlace</td> </tr><tr>\n <td style=\"background-color:red; width:20px; border-radius: 5px;\"></td> <td>red</td> </tr><tr>\n <td style=\"background-color:fuchsia; width:20px; border-radius: 5px;\"></td> <td>fuchsia</td> </tr><tr>\n <td style=\"background-color:magenta; width:20px; border-radius: 5px;\"></td> <td>magenta</td> </tr><tr>\n <td style=\"background-color:deeppink; width:20px; border-radius: 5px;\"></td> <td>deeppink</td> </tr><tr>\n <td style=\"background-color:orangered; width:20px; border-radius: 5px;\"></td> <td>orangered</td> </tr><tr>\n <td style=\"background-color:tomato; width:20px; border-radius: 5px;\"></td> <td>tomato</td> </tr><tr>\n <td style=\"background-color:hotpink; width:20px; border-radius: 5px;\"></td> <td>hotpink</td> </tr><tr>\n <td style=\"background-color:coral; width:20px; border-radius: 5px;\"></td> <td>coral</td> </tr><tr>\n <td style=\"background-color:darkorange; width:20px; border-radius: 5px;\"></td> <td>darkorange</td> </tr><tr>\n <td style=\"background-color:lightsalmon; width:20px; border-radius: 5px;\"></td> <td>lightsalmon</td> </tr><tr>\n <td style=\"background-color:orange; width:20px; border-radius: 5px;\"></td> <td>orange</td> </tr><tr>\n <td style=\"background-color:lightpink; width:20px; border-radius: 5px;\"></td> <td>lightpink</td> </tr><tr>\n <td style=\"background-color:pink; width:20px; border-radius: 5px;\"></td> <td>pink</td> </tr><tr>\n <td style=\"background-color:gold; width:20px; border-radius: 5px;\"></td> <td>gold</td> </tr><tr>\n <td style=\"background-color:peachpuff; width:20px; border-radius: 5px;\"></td> <td>peachpuff</td> </tr><tr>\n <td style=\"background-color:navajowhite; width:20px; border-radius: 5px;\"></td> <td>navajowhite</td> </tr><tr>\n <td style=\"background-color:moccasin; width:20px; border-radius: 5px;\"></td> <td>moccasin</td> </tr><tr>\n <td style=\"background-color:bisque; width:20px; border-radius: 5px;\"></td> <td>bisque</td> </tr><tr>\n <td style=\"background-color:mistyrose; width:20px; border-radius: 5px;\"></td> <td>mistyrose</td> </tr><tr>\n <td style=\"background-color:blanchedalmond; width:20px; border-radius: 5px;\"></td> <td>blanchedalmond</td> </tr><tr>\n <td style=\"background-color:papayawhip; width:20px; border-radius: 5px;\"></td> <td>papayawhip</td> </tr><tr>\n <td style=\"background-color:lavenderblush; width:20px; border-radius: 5px;\"></td> <td>lavenderblush</td> </tr><tr>\n <td style=\"background-color:seashell; width:20px; border-radius: 5px;\"></td> <td>seashell</td> </tr><tr>\n <td style=\"background-color:cornsilk; width:20px; border-radius: 5px;\"></td> <td>cornsilk</td> </tr><tr>\n <td style=\"background-color:lemonchiffon; width:20px; border-radius: 5px;\"></td> <td>lemonchiffon</td> </tr><tr>\n <td style=\"background-color:floralwhite; width:20px; border-radius: 5px;\"></td> <td>floralwhite</td> </tr><tr>\n <td style=\"background-color:snow; width:20px; border-radius: 5px;\"></td> <td>snow</td> </tr><tr>\n <td style=\"background-color:yellow; width:20px; border-radius: 5px;\"></td> <td>yellow</td> </tr><tr>\n <td style=\"background-color:lightyellow; width:20px; border-radius: 5px;\"></td> <td>lightyellow</td> </tr><tr>\n <td style=\"background-color:ivory; width:20px; border-radius: 5px;\"></td> <td>ivory</td> </tr><tr>\n <td style=\"background-color:white; width:20px; border-radius: 5px;\"></td> <td>white</td> </tr>\n</table>\n\n</details>",
    "callouts": {
      "text_color_finish": "Did the background change color when you answered the question? If so, hit 'Finish'. If not, hit 'Reset', change your code, and hit 'Run' again."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    },
    "placeholder_texts": {
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/23/levels/15": {
    "display_name": "Start from Scratch",
    "bubble_choice_description": "Create your own program using text, prompts, and variables!",
    "short_instructions": "Create your own program using text, prompts, and variables!",
    "long_instructions": "<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nCreate your own program using text, prompts, and variables!\n\n## Do This\n\n-   Add at least one sprite to your project.\n-   Add at least one prompt.\n-   Use the variable for your prompt somewhere else in your program:\n    -   Printed text\n    -   Title screen\n    -   Changing the background color.\n\nYou can also add whatever you like to your code, including more sprites, behaviors, sounds, and more!",
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "moving with arrow keys": "moving with arrow keys",
      "driving with arrow keys": "driving with arrow keys",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    },
    "placeholder_texts": {
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/24/levels/1": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The artist will draw a triangle with 50 pixel sides.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The artist will draw a 50-sided polygon with 3 pixel sides.",
              "correct": false,
              "feedback": "Incorrect. The variable `length` would need to be in the `repeat` loop for that to happen."
            },
            {
              "text": "The artist will draw three open sides with 50 degree turns.",
              "correct": false,
              "feedback": "Incorrect.  The `length` variable would need to be used in the `turn` block for that to happen."
            },
            {
              "text": "The computer will prompt the user for a number.",
              "correct": false,
              "feedback": "The `length` variable is set to 50 and is being used in the `move forward by` block, so the artist will draw a triangle with 50 pixel sides."
            }
          ],
          "questions": [
            {
              "text": "We have set the variable \"length\" to 50. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/24/levels/3": {
    "short_instructions": "Draw a triangle with 150 pixels sides. ",
    "long_instructions": "Let's start this section by drawing a triangle with 150 pixel sides. \n\nBe sure to use the `length` variable and a repeat loop.",
    "authored_hints": {
      "courseF_artist_variables7_a": "Start your code by using the `set length` block. Set the length variable to 150.",
      "courseF_artist_variables7_b": "You can use a `repeat` loop to make your code for the triangle simpler.",
      "courseF_artist_variables7_c": "You will want to turn left 120 degrees to make the corners of the triangle."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/24/levels/4": {
    "short_instructions": "Rebuild the triangle code from the last puzzle, but this time use the `set length to` block to reset the `length` variable to `length`+10 at the end of each loop iteration.",
    "long_instructions": "Rebuild the triangle code from the last puzzle, but this time also add a new block to add 10 to `length` each time the loop finishes.\n\n[blockly block][0]\n\nThe length of the first side of the triangle is 150 pixels.",
    "authored_hints": {
      "courseF_artist_variables8_b": "Remember to start your code for the triangle with the `set length` block, and start it at 150 pixels.",
      "courseF_artist_variables8_c": "Make sure to use the `repeat` loop to draw your triangle.",
      "courseF_artist_variables8_a": "Try putting the \n\n[blockly block][0]\n\nblock inside your loop at the end."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/24/levels/5": {
    "short_instructions": "See what happens when you repeat the code from the last puzzle 30 times instead of only 3!  Feel free to make your lines any color or pattern for some extra zest.",
    "long_instructions": "Time to make some art!  \n\nSee what happens when you repeat the code from the last puzzle **30** times instead of only 3!\n\nFeel free to make your lines any color or pattern for some extra zest.",
    "authored_hints": {
      "courseF_artist_variables9_a": "For this puzzle, all you need to do is change how many times the loop repeats.",
      "courseF_artist_variables9_b": "Make sure the block that changes `length` are within your loop so the lines keep getting longer."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/24/levels/6": {
    "short_instructions": "Here's your code from the last puzzle.  Try editing the variable in other ways.  ",
    "long_instructions": "Here's your code from the last puzzle.  Try editing the variable in other ways.  \n\n-   What happens if you start out with `length` less than 150? \n-   What happens if you change `length` by a number greater or less than 10?\n-   What happens if you turn by 119 or 121 degrees?",
    "authored_hints": {
      "courseF_artist_variables10_a": "Have fun with this level! See what little changes can do to your code.",
      "courseF_artist_variables10_b": "You can try multiple things, and run your code multiple times."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/24/levels/7": {
    "short_instructions": "**Freeplay:** Take what you've learned and make your own drawing. ",
    "long_instructions": "**Freeplay:** Take what you've learned and make your own drawing. \n\nHow can you use variables with squares, pentagons, or hexagons?",
    "teacher_markdown": "This level is a “free play”. These levels have some characteristics you may want to explore before starting. \n\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have created something they like. There is no one right answer! \n-   Example solutions are available for this level which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "polygon_table": "Want to try other polygons? \n\nUse the number of sides in your `repeat` and the angle in your `turn` block.\nTry these:\n\n|   Shape  | Sides | Angle |\n| :------: | :---: | :---: |\n| triangle |   3   |  120° |\n|  square  |   4   |  90°  |\n| pentagon |   5   |  72°  |\n|  hexagon |   6   |  60°  |\n|  octagon |   8   |  45°  |\n|  nonagon |   9   |  40°  |\n|  decagon |   10  |  36°  |"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/25/levels/1": {
    "short_instructions": "Collect all honey and make all the nectar!",
    "long_instructions": "Collect all honey and make all the nectar!"
  },
  "https://studio.code.org/s/express-2021/lessons/25/levels/2": {
    "short_instructions": "Finish this code so that the bee can collect all of the honey and nectar.",
    "callouts": {
      "courseF_bee_functions_1_2018_1": "You can find your variables under here!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/25/levels/3": {
    "short_instructions": "Change the starting value of the variable so that the bee can collect all of the honey and nectar.",
    "long_instructions": "Change the starting value of the variable so that the bee can collect all of the honey and nectar."
  },
  "https://studio.code.org/s/express-2021/lessons/25/levels/4": {
    "short_instructions": "Change the variable by 1 at the end of the loop.",
    "long_instructions": "In this puzzle, each patch is one space further away, and has one more nectar to get one more honey to make. Add 1 to the variable each time you go through the loop.",
    "authored_hints": {
      "courseF_bee_variables_3_2021_1": "To add one to the variable, you can use this code in your program:\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/25/levels/5": {
    "short_instructions": "Add one to the number of times the loop repeats.",
    "long_instructions": "This puzzle follows the same pattern, but it is extended to a fourth path. Add one to the number of times the main loop repeats to continue the pattern.",
    "authored_hints": {
      "courseF_bee_variables_3_2021_1": "To continue the pattern, increase the number of repeats:\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/25/levels/6": {
    "short_instructions": "Edit the code to work for this puzzle.",
    "long_instructions": "_What's different this time?_\n\nIn the last couple puzzles, we needed to change the variable by one for each new patch. This time, each patch is two spaces further, and has two more nectar to get and two more honey to make.",
    "authored_hints": {
      "courseF_bee_variables_4_2021_1": "Instead of adding 1  to the variable, add 2 each time instead."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/25/levels/7": {
    "short_instructions": "Finish the code to solve this puzzle.",
    "long_instructions": "Finish the code to solve this puzzle.\n\n-   What should the value of the variable be at the start?\n-   How many times should you go through the main loop?\n-   How much should you change the variable by each time?"
  },
  "https://studio.code.org/s/express-2021/lessons/25/levels/8": {
    "display_name": "a - Start from scratch",
    "bubble_choice_description": "Create your own code to solve this puzzle.",
    "short_instructions": "Create your own code to solve this puzzle.",
    "long_instructions": "Create your own code to solve this puzzle."
  },
  "https://studio.code.org/s/express-2021/lessons/25/levels/9": {
    "display_name": "b - Challenge",
    "bubble_choice_description": "Now give this puzzle a try!",
    "short_instructions": "**Challenge** Now give this puzzle a try!",
    "long_instructions": "Do you recognize this \"staircase\" pattern from other lessons? Give this puzzle a try!"
  },
  "https://studio.code.org/s/express-2021/lessons/25/levels/10": {
    "display_name": "c - Challenge",
    "bubble_choice_description": "This puzzle is a little different.  What do you need to do to solve it?",
    "short_instructions": "This puzzle is a little different.  What do you need to do to solve it?",
    "long_instructions": "This puzzle is a little different.  What do you need to do to solve it?"
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/1": {
    "short_instructions": "Collect the nectar from each flower using the fewest blocks possible.",
    "authored_hints": {
      "courseF_bee_for1_b": "You will need two blocks in your ‘repeat’ loop to collect all of the nectar."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/2": {
    "short_instructions": "Write the code to help the bee collect all of the nectar.",
    "long_instructions": "Write the code to help the bee collect all of the nectar.\n\nYou will need lots of blocks for this challenge, but we'll learn an easier way in the next puzzle.",
    "authored_hints": {
      "courseF_bee_for2_a": "If you’re confused, work one flower at a time, and test often.",
      "courseF_bee_for2_b": "Remember to move forward between each loop, so you reach each flower."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/3": {
    "short_instructions": "Write the code to help the bee collect all of the nectar.",
    "long_instructions": "Here is a new way to write the same code. This code uses a \"for loop\". Look closely and see if you can figure out how it is similar or different to the code you wrote before. You can even swap out the new code below or the old code - it works exactly the same way!"
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/5": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bee will move forward and collect all of the nectar from every flower. ",
              "correct": false,
              "feedback": "Incorrect. The `for` loop will let the bee collect the right amount of nectar, but it is only set to reach 4 flowers."
            },
            {
              "text": "The bee will move forward and collect all of the nectar from every flower, except for one.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bee will move forward and collect one nectar from each flower. ",
              "correct": false,
              "feedback": "Incorrect. The `for` loop will let the bee collect the right amount of nectar, but it is only set to reach 4 flowers."
            },
            {
              "text": "The bee will move forward and collect one nectar from flowers number 1 and 4. ",
              "correct": false,
              "feedback": "Incorrect. The `for` loop will let the bee collect the right amount of nectar, but it is only set to reach 4 flowers."
            }
          ],
          "markdown": "Ah!  The use of `for` loops makes this puzzle a lot easier!\n\n\n",
          "questions": [
            {
              "text": "Read the code below. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/6": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "authored_hints": {
      "courseF_bee_for4_a": "Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.",
      "courseF_bee_for4_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
      "courseF_bee_for4_c": "Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!"
    },
    "callouts": {
      "courseF_bee_for4_1": "You will find the `for` loop in here!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/7": {
    "short_instructions": "Try gathering this nectar by counting down from 5 to 1 by 1.",
    "long_instructions": "You can also use a `for` loop to count down. \n\nTry gathering this nectar by counting down from **5** to **1** by **1**.",
    "authored_hints": {
      "courseF_bee_for6_a": "Don't forget to use a `counter` variable inside your `repeat` loop.",
      "courseF_bee_for6_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
      "courseF_bee_for6_c": "Your loop should count **from 5 to 1**."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/8": {
    "short_instructions": "Try collecting these flowers using an increment of 2.",
    "long_instructions": "The last number in your `for` loop is called the **\"increment\"**.  Each time the loop is run, the counter variable changes by the value of the **increment**.\n\nTry collecting these flowers using an **increment** of 2.",
    "authored_hints": {
      "courseF_bee_for7_a": "Your `for` loop will need to count from 1 to 7 by 2.",
      "courseF_bee_for7_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
      "courseF_bee_for7_c": "Remember to use the `counter` variable in your `repeat` loop."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/9": {
    "display_name": "Increments",
    "bubble_choice_description": "You've got this! Keep practicing with increments that count up.",
    "short_instructions": "You've got this! What should your increment be to collect 3, 6, 9, 12, 15 nectar?",
    "long_instructions": "You've got this!  \n\nWhat should your **increment** be to collect 3, 6, 9, 12, 15 nectar?",
    "authored_hints": {
      "courseF_bee_for8_a": "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?",
      "courseF_bee_for8_b": "In this puzzle, you will need to move in a stair step pattern to get to the flowers.",
      "courseF_bee_for8_c": "Your loop will count _from 3 to 15_ with some increment. What is it?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/10": {
    "display_name": "Increments",
    "bubble_choice_description": "Practice with increments that count down.",
    "short_instructions": "What should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
    "long_instructions": "If your loop is counting down, the increment is **subtracted** from your counter variable each time through. \n\nWhat should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
    "authored_hints": {
      "courseF_bee_for11_a": "How much less is 12 than 15?\\\nHow much less is 9 than 12?\n\nDo you see a pattern?"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/11": {
    "display_name": "Variables",
    "bubble_choice_description": "Use a variable twice within the loop.",
    "short_instructions": "Use the `counter` variable twice to solve this puzzle.",
    "long_instructions": "Use the `counter` variable twice to solve this puzzle.",
    "authored_hints": {
      "courseF_bee_for5_a": "This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops, both inside the same `for` loop.",
      "courseF_bee_for5_b": "Use the `counter` variable in each loop so the bee moves different distances between each flower.",
      "courseF_bee_for5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/12": {
    "display_name": "Math Blocks",
    "bubble_choice_description": "Let's combine variables with a little math!",
    "short_instructions": "Use the `counter` variable to navigate this garden with the fewest number of blocks possible.",
    "long_instructions": "Now, let's combine the `counter` variable with a `math` block! \n\nHow can you use the `counter` variable to navigate this garden with the fewest number of blocks possible?",
    "authored_hints": {
      "courseF_bee_for9_a": "Try doing some math with the counter variable.\n\nWhat do you have to do to the counter at each flower to equal the amount of nectar you need to collect?",
      "courseF_bee_for9_c": "It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.",
      "courseF_bee_for9_b": "**Remember:** If your loop is counting up, the increment is added to your `counter` variable each time through."
    },
    "callouts": {
      "courseF_bee_for9_1": "You will find the `math` block in here."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/levels/13": {
    "display_name": "Challenge",
    "bubble_choice_description": "Combine everything you've learned to solve this puzzle.",
    "short_instructions": "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. ",
    "long_instructions": "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. \n\nRemember: You may have to run through solutions multiple times before you figure out all of the steps.",
    "authored_hints": {
      "courseF_bee_for10_a": "Can you find a pattern between the number of steps you need to take and the number of nectars to gather?",
      "courseF_bee_for10_b": "The first set of flowers has a total of **14 flowers**. To get to this first set, the bee must buzz down **7 squares** (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?",
      "courseF_bee_for10_c": "In the puzzle, the first set of flowers has **14** flowers, the second set has **10** flowers, third set has **6** flowers, and the fourth set has **2** flowers.\n\nIn this drawing, notice there are **7** red squares, **5** orange squares, **3** green squares, and **1** blue block. \n\n[][0]\n\nHow do the numbers relate?",
      "courseF_bee_for10_d": "You'll need to have 2 repeats, one will use a math block."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/extras?level_name=courseF_bee_for_challenge1_2021": {
    "short_instructions": "Use this `for loop` to collect all of the nectar. ",
    "long_instructions": "You can use this `for loop` to collect all of the nectar. Un-bee-lievable!\n\nThere are a few actions that you will want to `repeat 'counter' times`.",
    "function_definitions": {
      "move and get nectar with counter": {
        "name": "move and get nectar with counter"
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/26/extras?level_name=courseF_bee_for_challenge2_2021": {
    "short_instructions": "Solve this puzzle using the fewest number of blocks possible.",
    "long_instructions": "Solve this puzzle with the fewest number of blocks possible.",
    "authored_hints": {
      "courseF_bee_for_challenge2_a": "Take a look at this option for movement:  \n\n[][0]",
      "courseF_bee_for_challenge2_b": "Try using two `for` loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.",
      "courseF_bee_for_challenge2_c": "Notice that one `for` loop needs several regular loops inside that repeat `counter` times to make the increasing stair pattern. \n\nThe other `for` loop only needs one regular loop to make `counter` amount of honey.",
      "courseF_bee_for_challenge2_d": "**Solution:**\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/27/levels/2": {
    "display_name": "For Loops Freeplay (Beginning)",
    "short_instructions": "Experiment with the `for` loop and play with the `counter` variable.",
    "long_instructions": "**Free Play:** Experiment with the `for` loop and the `counter` variable.  \n\nDrag out a few blocks and see what happens.  ",
    "authored_hints": {
      "courseF_artist_for1_a": "Can you draw something like this:\n\n[][0]"
    },
    "callouts": {
      "courseF_artist_for1_1": "The toolbox is in \"category\" mode to make more room for your code.  The `for` loops live in here."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/27/levels/3": {
    "short_instructions": "Add two blocks to create the spiral.",
    "long_instructions": "For loops are great for creating spirals with the artist. Let's try one now!\n\n## Do This\n\n-   Add a block to move forward - using the `counter` variable.\n-   Add a turn block."
  },
  "https://studio.code.org/s/express-2021/lessons/27/levels/4": {
    "short_instructions": "Recreate your code from the last level, but turn 89 degrees to create this twisted square spiral.",
    "long_instructions": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect.\n\nRecreate your code from the last level, but turn 89 degrees to create this twisted square spiral.",
    "authored_hints": {
      "courseF_artist_for6_a": "Your `for` loop will count from 15 to 300 by 15.",
      "courseF_artist_for6_b": "Put a `move forward` and a `turn` block within this `for` loop.",
      "courseF_artist_for6_c": "All you have to change is the number of degrees in the `turn` block."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/27/levels/5": {
    "short_instructions": "Make three small changes to the code from the last level to get this!",
    "long_instructions": "Make three small changes to the code from the last level to get this!  ",
    "authored_hints": {
      "courseF_artist_for7_a": "The pen is thinner in this puzzle. You will need to set it to `1` before you start.",
      "courseF_artist_for7_b": "Notice that this spiral turns right instead of left!",
      "courseF_artist_for7_c": "The `for` loop in this puzzle goes from 15 to 300 by 2.",
      "courseF_artist_for7_d": "This image is made by turning just 89 degrees."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/27/levels/6": {
    "short_instructions": "Take the angle down to 72 degrees to get a spiraled pentagon.",
    "authored_hints": {
      "courseF_artist_for8_a": "Keep everything else the same in your code, only the turn angle needs to change.",
      "courseF_artist_for8_b": "If you want, you can choose a different color for your spiral!"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/27/levels/7": {
    "short_instructions": "**Inspiration:**  Use the counter inside the `set alpha` block to get this faded center.",
    "long_instructions": "**Inspiration:** Use the counter inside the `set alpha` block to get something like this faded center.\\\n(This hexagon pattern was made using a 60 degree turn.)",
    "authored_hints": {
      "courseF_artist_for9_a": "If you put the `set alpha` block inside of your `for` loop, and use the `counter` variable to change it, you can create a design like this.",
      "courseF_artist_for9_b": "The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is."
    }
  },
  "https://studio.code.org/s/express-2021/lessons/27/levels/8": {
    "short_instructions": "Free Play: Try using the `counter` variable with other drawing elements to make magical images like this one.",
    "long_instructions": "**Free Play:** Try using the `counter` variable with other drawing elements to make magical images like this one.\n\n[][0]",
    "teacher_markdown": "This level is a “free play”. These levels have some characteristics you may want to explore before starting. \n\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have created something they like. There is no one right answer! \n-   Example solutions are available for this level which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseF_artist_for10_a": "The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.",
      "courseF_artist_for10_b": "The image in the drawing uses a turn of 61 degrees.",
      "courseF_artist_for10_c": "Want to know how the sample image was done?\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/27/extras?level_name=courseF_artist_for_challenge1_2021": {
    "short_instructions": "Can you figure out how to re-create this drawing?",
    "long_instructions": "Can you figure out how to re-create this drawing? \n\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\" width=\"350px\"/>",
    "authored_hints": {
      "courseF_artist_for_challenge1_a": "The `pen width` is 1. The first square has 50 pixel sides, and each square is 50 pixels wider than the last.",
      "courseF_artist_for_challenge1_b": "The opacity on the brush is always `counter`/2.",
      "courseF_artist_for_challenge1_c": "After you make each square, don't forget to jump backward, turn, jump again, then turn back!",
      "courseF_artist_for_challenge1_d": "**Solution:**\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/27/extras?level_name=courseF_artist_for_challenge2_2021": {
    "short_instructions": "Can you figure out how to re-create this drawing with a single loop?",
    "long_instructions": "Can you figure out how to re-create this drawing with a single loop? \n\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\" width=\"350px\"/>",
    "authored_hints": {
      "courseF_artist_for_challenge2_c": "The `for loop` goes from 5 to 250 by 2. ",
      "courseF_artist_for_challenge2_a": "The color change happens using the `set color with red, green, blue` block.  Red is set constant at 255, green is always the value of `counter`, and blue is always `255 - counter`.",
      "courseF_artist_for_challenge2_b": "The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.",
      "courseF_artist_for_challenge2_d": "**Solution:**\n\n[blockly block][0]\n\n[][1]"
    }
  },
  "https://studio.code.org/s/express-2021/lessons/28/levels/1": {
    "dsls": {
      "description": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
      "display_name": "Project Examples"
    },
    "sublevels": {
      "CourseE_Project_SpriteLab_cupcake_examples_2021": {
        "display_name": "Cupcake Dance (SpriteLab)",
        "short_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "long_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "behavior_names": {
          "moving west": "moving west",
          "spinning right": "spinning right",
          "growing": "growing",
          "swimming left and right": "swimming left and right",
          "moving east": "moving east",
          "moving north": "moving north",
          "patrolling": "patrolling",
          "moving south": "moving south",
          "jittering": "jittering",
          "wandering": "wandering",
          "shrinking": "shrinking",
          "spinning left": "spinning left",
          "moving west2": "moving west2",
          "spinning right2": "spinning right2",
          "growing2": "growing2",
          "swimming left and right2": "swimming left and right2",
          "moving east2": "moving east2",
          "moving north2": "moving north2",
          "patrolling2": "patrolling2",
          "moving south2": "moving south2",
          "jittering2": "jittering2",
          "wandering2": "wandering2",
          "shrinking2": "shrinking2",
          "spinning left2": "spinning left2",
          "moving with arrow keys": "moving with arrow keys",
          "driving with arrow keys": "driving with arrow keys",
          "fluttering": "fluttering",
          "wobbling": "wobbling",
          "moving west and looping": "moving west and looping",
          "moving east and looping": "moving east and looping"
        }
      },
      "CourseD_EOC_dance_examples_2021": {
        "display_name": "Disco Party",
        "short_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "long_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects."
      },
      "CourseD_EOC_artist_example2021": {
        "display_name": "Beach Scene (Artist)",
        "short_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "long_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "function_definitions": {
          "draw a star": {
            "name": "draw a star",
            "description": "draw a star with given points and sides of given length",
            "parameters": {
              "points": "points",
              "length": "length"
            }
          },
          "draw a circle": {
            "name": "draw a circle",
            "description": "draw a circle of given radius",
            "parameters": {
              "radius": "radius"
            }
          },
          "draw a pinwheel": {
            "name": "draw a pinwheel",
            "parameters": {
              "sides": "sides",
              "length": "length",
              "repeat": "repeat"
            }
          },
          "draw a triangle": {
            "name": "draw a triangle",
            "parameters": {
              "length": "length"
            }
          },
          "draw a shape": {
            "name": "draw a shape",
            "parameters": {
              "sides": "sides",
              "length": "length"
            }
          },
          "draw a house": {
            "name": "draw a house",
            "parameters": {
              "length": "length"
            }
          },
          "draw a square": {
            "name": "draw a square",
            "parameters": {
              "length": "length"
            }
          }
        }
      },
      "Course E: Frozen Project_examples_2021": {
        "display_name": "Snowflake Flowers",
        "short_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "long_instructions": "You are about to start your final project. Before you begin, spend some time looking at the example projects.",
        "function_definitions": {
          "small flower": {
            "name": "small flower"
          },
          "LOGIC FLOWERS2": {
            "name": "LOGIC FLOWERS2"
          },
          "LOGIC FLOWER": {
            "name": "LOGIC FLOWER"
          },
          "LOGIC FLOWERS": {
            "name": "LOGIC FLOWERS"
          },
          "draw a star": {
            "name": "draw a star",
            "description": "draw a star with given points and sides of given length",
            "parameters": {
              "points": "points",
              "length": "length"
            }
          },
          "draw a circle": {
            "name": "draw a circle",
            "description": "draw a circle of given radius",
            "parameters": {
              "radius": "radius"
            }
          },
          "draw a pinwheel": {
            "name": "draw a pinwheel",
            "parameters": {
              "sides": "sides",
              "length": "length",
              "repeat": "repeat"
            }
          },
          "draw a triangle": {
            "name": "draw a triangle",
            "parameters": {
              "length": "length"
            }
          },
          "draw a shape": {
            "name": "draw a shape",
            "parameters": {
              "sides": "sides",
              "length": "length"
            }
          },
          "draw a house": {
            "name": "draw a house",
            "parameters": {
              "length": "length"
            }
          },
          "draw a square": {
            "name": "draw a square",
            "parameters": {
              "length": "length",
              "sides": "sides"
            }
          }
        }
      }
    }
  },
  "https://studio.code.org/s/express-2021/lessons/28/levels/2": {
    "dsls": {
      "description": "You have reached the end of Course E! Choose a project to create.",
      "display_name": "End of Course Project"
    },
    "sublevels": {
      "CourseE_Project_SpriteLab_2021": {
        "display_name": "Create a Sprite Lab project",
        "behavior_names": {
          "wandering": "wandering",
          "moving east": "moving east",
          "spinning left": "spinning left",
          "spinning right": "spinning right",
          "shrinking": "shrinking",
          "growing": "growing",
          "moving south": "moving south",
          "swimming left and right": "swimming left and right",
          "moving north": "moving north",
          "jittering": "jittering",
          "moving west": "moving west",
          "patrolling": "patrolling"
        }
      },
      "CourseD_EOC_dance_2021": {
        "display_name": "Create a dance",
        "short_instructions": "Create your own dance!",
        "long_instructions": "Create your own dance!"
      },
      "Course E: Artist Project_2021": {
        "display_name": "Create an Artist project"
      },
      "Course E: Frozen Project_2021": {
        "display_name": "Create a Frozen project"
      }
    }
  }
}