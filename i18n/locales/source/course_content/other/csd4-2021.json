{
  "https://studio.code.org/s/csd4-2021/lessons/8/levels/1": {
    "dsls": {
      "title": "CS Discoveries Rapid Survey!"
    }
  },
  "https://studio.code.org/s/csd4-2021/lessons/9/levels/1": {
    "short_instructions": "Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.",
    "long_instructions": "## Do More Durham\n\nWhat social issue do you think this app was designed to address?\n\nHow does it accomplish this?"
  },
  "https://studio.code.org/s/csd4-2021/lessons/9/levels/2": {
    "long_instructions": "## Water Conservation\n\n-   What social issue do you think this app was designed to address?\n-   How does it accomplish this?"
  },
  "https://studio.code.org/s/csd4-2021/lessons/9/levels/3": {
    "long_instructions": "## Four Square\n\nWhat social issue do you think this app was designed to address?\n\nHow does it accomplish this?"
  },
  "https://studio.code.org/s/csd4-2021/lessons/11/levels/1": {
    "long_instructions": "# Do This\n\nExplore this app. Keep a list of different design elements you see (buttons, text boxes, etc).\n\nShare any interesting features in these apps with your team."
  },
  "https://studio.code.org/s/csd4-2021/lessons/11/levels/2": {
    "long_instructions": "# Do This\n\nExplore this app. Keep a list of different design elements you see (buttons, text boxes, etc).\n\nShare any interesting features in these apps with your team."
  },
  "https://studio.code.org/s/csd4-2021/lessons/11/levels/3": {
    "display_name": "Pet Chooser App",
    "long_instructions": "# Do This\n\nExplore this app. Keep a list of different design elements you see (buttons, text boxes, etc).\n\nShare any interesting features in these apps with your team."
  },
  "https://studio.code.org/s/csd4-2021/lessons/11/levels/4": {
    "display_name": "Pet Chooser App",
    "long_instructions": "# Do This\n\nExplore this app. Keep a list of different design elements you see (buttons, text boxes, etc).\n\nShare any interesting features in these apps with your team.",
    "teacher_markdown": "[][0]\n\nThere are two distinct forms of processing.\n\n1.  Comparing - the user's choice is compared to the correct answer\n2.  If/then - if they are the same, the app displays the \"correct\" message; if they are different, the app displays the \"incorrect\" message\n\nNote that this app is very similar to the birthday app students saw on the last level in that it uses the same two types of processing.  Use this similarity to compare how the same types of processing can be used in very different types of apps.\n\n[/][0]"
  },
  "https://studio.code.org/s/csd4-2021/lessons/11/levels/5": {
    "display_name": "Pet Chooser App",
    "long_instructions": "# Do This\n\nExplore this app. Keep a list of different design elements you see (buttons, text boxes, etc).\n\nShare any interesting features in these apps with your team.",
    "teacher_markdown": "[][0]\n\nThe processing used in this app is searching or finding a match.   \n\n-   Find a match for the user's birthday in the calendar, and use the day of the week.\n-   Find a match for the day of the week in the list of authors and the days they were born.\n\nThere is, of course, some more processing that happens in this app, but the focus in this exercise is on the searching/finding a match part of the process.\n\n[/][0]"
  },
  "https://studio.code.org/s/csd4-2021/lessons/11/levels/6": {
    "display_name": "Pet Chooser App",
    "long_instructions": "# Do This\n\nExplore this app. Keep a list of different design elements you see (buttons, text boxes, etc).\n\nShare any interesting features in these apps with your team."
  },
  "https://studio.code.org/s/csd4-2021/lessons/14/levels/1": {
    "display_name": "Intro to Design Mode",
    "long_instructions": "## Questions to Consider\n\n-   Where in App Lab can you design the user interface of your app?\n-   What are some types of elements that you can add to your app?",
    "teacher_markdown": "## Discussion Goals\n\nThe purpose of this video is to give students a quick tour of design mode in App Lab, which they will be using for the rest of the unit.  Students should know how to switch to design mode so that they can create the user interface of the app.  They should also recognize the various elements that can be added in design mode.  These are similar to those that they saw in the activity guide for Paper Prototypes, two lessons previously."
  },
  "https://studio.code.org/s/csd4-2021/lessons/14/levels/2": {
    "short_instructions": "Add a large red button to your screen using Design Mode. (Click for full instructions.)",
    "long_instructions": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n[expandable][0]\n\n<br/>\n\nClick to expand\n\n</div>\n\n# Creating a digital prototype\n\nUsing the prototype to the right (click the image to enlarge it) you're going to create a digital prototype of the example app \"Recycling Finder\". We've already added a few of the elements for you, including the title, but it doesn't look quite right yet. We'll go over each element of this as we go, but for now let's **just focus on the title**.\n\n<!--<img src=\"https://images.code.org/66633526e03550bedb8503fefdc2ece3-image-1502921575904.png\" style=\"width: 300px; float: right; clear: both;\">-->\n\n# Do This\n\n-   **Make sure you are in Design Mode,** the switch appears above your app window on the left.\n-   **Click on the title text** to view its properties.\n-   **Change the property \"text\"** to \"Recycling Finder\".\n-   **Change the \"font size\"** to make the title larger.\n-   **Change the \"text alignment\"** so the title is centered on the screen.\n\n_Note: Make sure you click **\"Run\"** before moving on to save your progress._",
    "teacher_markdown": "Students will be using App Lab to create a simple prototype for their app.  Students who want to go further in making their apps functional can learn more about App Lab, watch demo videos, and work through tutorials at [https://code.org/educate/applab][0]."
  },
  "https://studio.code.org/s/csd4-2021/lessons/14/levels/3": {
    "long_instructions": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n[expandable][0]\n\n<br/>\n\nClick to expand\n\n</div>\n\n# Adding more text\n\nEach screen of your app is composed of multiple design _elements_. You can drag out elements from the \"Design Toolbox\" on the left side of the workspace. To add more blocks of text, just drag out additional \"label\" elements.\n\n# Do This\n\n-   **Drag out a new \"label\" element** and place it where the \"home\\_description\" text should be.\n-   **Change the id** to match the prototype (home\\_description)\n-   **Change the field \"text\"** to match the prototype.\n-   **Resize** the text area by clicking and dragging the bottom right corner.\n-   **Change any other properties** to make the text look like you want it to."
  },
  "https://studio.code.org/s/csd4-2021/lessons/14/levels/4": {
    "long_instructions": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n[expandable][0]\n\n<br/>\n\nClick to expand\n\n</div>\n\n# Adding images\n\nThe prototype just has a plain black square where the logo should be - let's add an image to spice it up. The \"image\" element allows you to either upload an image from your computer or select from a library of graphic icons.\n\n# Do This\n\n-   **Drag out a new \"image\" element** and place between the description and the title.\n-   **Change the id** to match the prototype.\n-   **Click the \"Choose...\" link** next to the \"image\" field.\n-   **Select the \"Icons\" tab** and choose an icon for your logo.\n-   **Change the color** of the icon using the \"icon color\" field."
  },
  "https://studio.code.org/s/csd4-2021/lessons/14/levels/5": {
    "long_instructions": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n[expandable][0]\n\n<br/>\n\nClick to expand\n\n</div>\n\n# Adding buttons\n\nButtons allow your user to interact with your app. This prototype screen will need three buttons (each shaded gray on the prototype.) We've already added the Search button, so you just need to add Contact and About.\n\n# Do This\n\n-   **Drag out a new \"button\" element** for each of the two remaining buttons.\n-   **Change the ids** to match the prototype.\n-   **Change the text** to match the prototype.\n-   **Modify other properties** to make the screen look like you'd like.\n\n<img src=\"https://images.code.org/4cab6a5233cf07df0d8e312932762012-image-1444314797615.gif\" style=\"width: 500px;\">"
  },
  "https://studio.code.org/s/csd4-2021/lessons/14/levels/6": {
    "long_instructions": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n[expandable][0]\n\n<br/>\n\nClick to expand\n\n</div>\n\n# Making a Search Box\n\nThe search box in our prototype can be created using a \"Text Input\" element. This is a box that your user can type into, and later your software can read what was entered and do something with it.\n\n# Do This\n\n-   **Add a Text Input** element.\n-   **Change the id** to match the prototype.\n-   **Add a Label** with the text \"Location\" next to your text input."
  },
  "https://studio.code.org/s/csd4-2021/lessons/14/levels/7": {
    "long_instructions": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n[expandable][0]\n\n<br/>\n\nClick to expand\n\n</div>\n\n# Checkboxes\n\nThe type of recyclables you're searching for can be set using \"Checkbox\" elements. We already added a checkbox and label for glass, so you just need to add ones for paper and plastic.\n\n# Do This\n\n-   **Add a Checkbox** for each of the options.\n-   **Change the ids** to match the prototype.\n-   **Add labels** to describe each checkbox."
  },
  "https://studio.code.org/s/csd4-2021/lessons/14/levels/8": {
    "long_instructions": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n[expandable][0]\n\n<br/>\n\nClick to expand\n\n</div>\n\n# Finishing Touches\n\nBy now you should have a fairly complete (though non-functional) digital version of the paper prototype we started with. All that's left to do is check back over your paper prototype and add any final touches you might have missed.\n\n# Do This\n\n-   **Check over the prototype** to make sure you've included everything.\n-   **Read through your IDs** and fix any that aren't descriptive.\n-   **Clean up** any rough edges by resizing or moving around elements."
  },
  "https://studio.code.org/s/csd4-2021/lessons/15/levels/1": {
    "dsls": {
      "markdown": "# Mocking Up Your App\n\nNow that you have some practice laying out elements in App Lab, you can start working on mocking your own app. With your group, divvy up the screens so that everyone is working on a different screen.\n\nBecause you'll be dividing the work up, you'll want to do some planning ahead of time to decide on a common look and feel for your pages. For example, you'll want to agree on things such as:\n\n* Where do navigation buttons go?\n* What colors will you use for backgrounds, text, and buttons\n* What's the general style and layout?\n\n# Namespacing\n\nIn the next lesson you will combine all of your team members' screens into one app. To make sure that the IDs on one page don't conflict with another you'll need to include a unique _namespace_ for your page. This will be something you add to the beginning of every id so that your element ids don't conflict with others when you merge everyone's screens together. Your namespace should be the ID of your screen with an underscore at the end. For example, if you are making the home page, you might use \"home_\" as your namespace - leading to ids such as:\n\n* \"home_title\"\n* \"home_loginButton\"\n* \"home_logo\"\n",
      "teacher_markdown": "#### Namespacing\n\nEnsuring that all students are both creating unique IDs for all elements and properly namespacing them will go a long way towards avoiding issues in the next lesson, so it pays to be a stickler here. You can provide students with the optional Screen Design Activity Guide to keep track of their element IDs.\n\n#### Working together, apart\n\nEven more so than the the paper prototyping activity, it is easy for students in this lesson to forget that they need to consider how their choices affect their team. Encourage active discussion among teams as they design screens to ensure that they are all working towards a common goal.\n"
    }
  },
  "https://studio.code.org/s/csd4-2021/lessons/15/levels/2": {
    "display_name": "App Project: Screen Design",
    "long_instructions": "# Mocking Up Your App\n\nUsing your paper prototype, create a digital version of your screen using the Design Mode elements you've learned about.\n\n# Do This\n\n-   Rename the screen to match your _namespace_.\n-   Use the built-in elements to lay out your app screen, giving each a proper ID\n    -   For example, if your namespace is `home_` you might create IDs like:\n        -   `home_title`\n        -   `home_login_button`\n        -   `home_logo`\n-   For any components of your app that can't be recreated with the built in elements you can either:\n    -   Redesign to utilize built in elements\n    -   Find an image to use in place of your element\n    -   Draw the element using your preferred image editor\n-   Make sure that you and your teammates are regularly looking at each other's designs to ensure consistent style"
  },
  "https://studio.code.org/s/csd4-2021/lessons/16/levels/1": {
    "long_instructions": "# Recycling App 2.0\n\nThese levels return to the Recycling App you started in Lesson 14. Our goal is to expand that app by adding new screens, such as an About or Contact screen.\n\n# Adding a New Screen\n\nTo complete the recycling app, you're going to need more than just a home screen. To create more screens, just click the dropdown at the top of the app display and select \"New Screen...\"\n\n<img src=\"https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png\" style=\"width: 200px\">\n\n# Do This\n\n-   **Create a New Screen** and give it the ID \"about\".",
    "teacher_markdown": "#### Catching Up\n\nIf students missed the previous lesson, or were unable to complete the home screen, you can have them import this completed version of the home screen <a href=\"https://studio.code.org/projects/applab/Y3yxoz85-vy5Hpq8R4qOTQ/\" target=\"_blank\" rel=\"noopener noreferrer\">https\\://studio.code.org/projects/applab/Y3yxoz85-vy5Hpq8R4qOTQ/</a>. See the <a href=\"5\">Screen Import Map</a> for details."
  },
  "https://studio.code.org/s/csd4-2021/lessons/16/levels/2": {
    "long_instructions": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n[expandable][0]\n\n<br/>\n\nClick to expand\n\n</div>\n\n# Design the About Screen\n\nTo add elements to your new About screen, you'll need to first select it from the screens dropdown.\n\n# Do This\n\n-   **Complete the About screen** using the prototype to the right.\n-   **Use the screens dropdown** to switch between your Home and About screens."
  },
  "https://studio.code.org/s/csd4-2021/lessons/16/levels/3": {
    "long_instructions": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n[expandable][0]\n\n<br/>\n\nClick to expand\n\n</div>\n\n# Screen Import\n\nIn addition to adding new blank screens, you can import screens from \"Import Screen...\" To import a screen from someone else, you'll need them to give you the sharing URL.\n\n**Note:** Screens you import _must not_ share any IDs with elements already in your app!\n\n# Do This\n\nAnother student has created a search results screen that you can import into your app. Their app's share link is **<a href=\"https://studio.code.org/projects/applab/XkcpDVj8MJWQvUr9OSgIlA/\" target=\"_blank\" rel=\"noopener noreferrer\">https\\://studio.code.org/projects/applab/XkcpDVj8MJWQvUr9OSgIlA/</a>**\n\n-   **Select \"Import Screen...** from the screens dropdown.\n-   **Copy and paste the above url** into the import screens dialog.\n-   **Select the screen** you wish to import.\n-   **Click Import** to import the screen.\n-   **Use the screens dropdown** to switch between your Home, About, and Search screens."
  },
  "https://studio.code.org/s/csd4-2021/lessons/16/levels/4": {
    "long_instructions": "# Contact Screen Import\n\nYet another student created a Contact screen that you can import into your app. Their share link is **<a href =\"https://studio.code.org/projects/applab/QUAOln68kifScEwQauwNqw/\" target=\"_blank\" rel=\"noopener noreferrer\">https\\://studio.code.org/projects/applab/QUAOln68kifScEwQauwNqw/</a>**\n\n# Do This\n\n-   **Select \"Import Screen...** from the screens dropdown.\n-   **Copy and paste the above url** into the import screens dialog.\n-   **Select the screen** you wish to import.\n-   **Click Import** to import the screen.\n-   **Use the screens dropdown** to make sure your app has Home, About, Contact, and Search screens."
  },
  "https://studio.code.org/s/csd4-2021/lessons/16/levels/5": {
    "long_instructions": "# Button Events\n\nWith our screens in place, it's time to start actually _programming_ the app so that it responds to button clicks. For each button on each screen, you'll want to add an `onEvent` block that watches for that button to be clicked and responds appropriately. To start off with we'll just watch the `home_search_btn` button and print something to the console when it's clicked\n\n# Do This\n\nYou're now in Code Mode (you can use the buttons above your app to switch between Code Mode and Design Mode). This is where you can write the code that will respond to users interacting with your app.\n\n[][0]\n\n-   **Drag out an `onEvent` block** from the code toolbox.\n-   **Select `home_search_btn`** from the \"id\" dropdown.\n-   **Drag out a `console.log` block** from the variables drawer.\n-   **Run your app**.\n-   **Click the Search button** and look for messages in the console."
  },
  "https://studio.code.org/s/csd4-2021/lessons/16/levels/6": {
    "long_instructions": "# Changing Screens On Click\n\nThe `setScreen` block will change your app to whichever screen you specify. If you place a `setScreen` block _inside_ an `onEvent` block, you can program your buttons to change to the correct screen.\n\n# Do This\n\nUsing the `onEvent` block that you've created, make your program change to the \"search\" screen when the `home_search_btn` is clicked.\n\n-   **Drag out a `setScreen` block** an put it inside the `onEvent` block.\n-   **Select \"search\"** from the `setScreen` dropdown.\n-   **Run your app** and test the `home_search_btn` button."
  },
  "https://studio.code.org/s/csd4-2021/lessons/16/levels/7": {
    "long_instructions": "# Wire Up the Other Buttons\n\nNow that you've made one button work, just follow the same pattern for all of your others.\n\n# Do This\n\n-   For each button, create an event that links to the appropriate screen when the button is pressed.\n-   Run your app and test that all of the buttons work."
  },
  "https://studio.code.org/s/csd4-2021/lessons/17/levels/1": {
    "display_name": "App Project: Screen Import",
    "long_instructions": "# Back To Your App\n\nNow that you've had some practice with importing screens, it's time to start working on your team's app.\n\n# Do This\n\nEach member of your team is going to create their own copy of the app, with all of the team members' screens imported in. This will be your copy of the app, and the copy that you will start to add code to in the next lesson.  (Don't forget that you'll also need to import your own screen into this project.)\n\n-   Collect all of the sharing urls for your team's pages, **including your own**\n    -   Each team member can find the share url for their own screen by going back to the last level of the previous lesson, or by finding the screen in their [projects directory][0]\n-   Import each of the screens, one at a time\n    -   If you run into an ID error with one of the screens, discuss the issue with the screen's creator so it can be fixed and imported\n-   Delete the default \"screen1\"\n-   Set the main screen as the default\n\nDon't worry about adding any code at this point; we'll get to that in the next level.",
    "teacher_markdown": "#### Breaking for the Day\n\nDepending on how much time you have in class, this can be a great point to break for the day. This and the next level can be quite time consuming, so if you are running short on time, consider jumping to the Screen Pair activity described in the Extension Activities for this lesson.\n\n#### Team Time\n\nThough students are working on their individual copies of their team app at this point, encourage teams to be active and vocal through this portion of the lesson. Any issues that students encounter when importing their teammates' screens can only be resolved through teamwork, and will likely be a problem for all members of the team."
  },
  "https://studio.code.org/s/csd4-2021/lessons/17/levels/2": {
    "display_name": "App Project: Linking Screens",
    "long_instructions": "# Linking Screens\n\nWith all of your screens in place you can start adding events that will change the screens. When you're done with this step you'll actually have an interactive prototype!\n\n# Do This\n\nFor each screen of your app:\n\n-   Find all of the button IDs\n-   For each button, add an event handler that watches that ID\n-   In each event handler, use `setScreen()` to move the the right screen\n-   Test it all out!\n\nDepending on the number of screens and buttons your app has, this can be a pretty involved process. Make sure that you test your work often, using `console.log()` blocks to debug any strange behavior with your app. When you think you've got the whole thing working, compare your app with other members of your group to see if they work the same."
  },
  "https://studio.code.org/s/csd4-2021/lessons/20/levels/1": {
    "display_name": "App Project: Bugs and Features",
    "long_instructions": "# Improving and Iterating\n\nYou've put your app in front of users, gathered feedback, and identified bugs and new features - time to do something about it.\n\n# Do This\n\nEach team member is going to implement select features and bug fixes on their own version of the team's app. Start by selecting a sticky note from the **To Do** column of your team's chart and moving it to the **Doing** column. For each sticky you tackle:\n\n-   Add a comment to the top of your program describing the feature or bug fix you are implementing\n-   Work on your iteration until it works. Try to stay focused on only the single feature or bug that you've selected.\n-   When done, move your sticky to the **Done** column, pick a new one, and start the process over.",
    "teacher_markdown": "#### Implementing Features and Fixes Individually\n\nBecause App Lab is difficult for large groups of students to work on simultaneously, we have students work on implementing features and fixes individually or in pairs. The benefit of this approach is that it allows the team as a whole to explore more potential features than if they were working all on the same app, but it also means that each team member's app will diverge further from the others as more changes are made.\n\nAs an optional extension activity you could provide a day of work for students to share their changes with each other and attempt to integrate all of the added features into a single app.\n\n#### Keeping Track of Changes\n\nThe more features students add to their app, the more likely they are to introduce new unforeseen bugs. To ensure that students always keep the most recent working copy of their app, encourage them make a remix before adding any new features. Make sure students leave the remix alone and return to this level to do their programming - this will ensure that when they go to submit their app for your review it is the most recent version."
  },
  "https://studio.code.org/s/csd4-2021/lessons/21/levels/1": {
    "dsls": {
      "title": "CS Discoveries Rapid Survey!"
    }
  },
  "https://studio.code.org/s/csd4-2021/lockable/1/levels/1": {
    "dsls": {
      "title": "User Centered Design: Post-Project Test"
    }
  },
  "https://studio.code.org/s/csd4-2021/lessons/22/levels/1": {
    "dsls": {
      "markdown": "# CS Discoveries Post-Course Survey\n\n**Your input and feedback is important to us!** We use it to:\n\n* understand your experience\n* make improvements to the course\n\nThanks for taking the time to help make CS Discoveries even better!\n\n<a class=\"btn btn-large btn-success\" href=\"/s/csd-post-survey-2021/lockable/1/levels/1/page/1\" target=\"top\">Click here to complete the CS Discoveries Post-Course Survey</a>\n\n(opens in a new tab)\n\n<br>\n\n\n\n\n\n",
      "teacher_markdown": "This level appears at the end of every unit. **Please have your students complete this survey at the end of their final unit!** Students only need to take the survey once at the end of the course.\n\n* The results are vital for us (code.org) to sustain our courses and make improvements.\n* There will be a teacher survey as well where you can provide your own input. You will be notified via email about the teacher survey.\n\n**Instructions for Unlocking the Survey for Students:** [[google doc](https://docs.google.com/document/d/170NdiEBwcLEsLHQqgPy_zdNKFZfO-rS9aCAFCcEYhzY/view)] [[pdf](https://docs.google.com/document/d/170NdiEBwcLEsLHQqgPy_zdNKFZfO-rS9aCAFCcEYhzY/export?format=pdf)]\n\nIf students click the link and see an error message about the survey being locked, please follow the steps in the instructions above to unlock the survey for students.\n\n\n"
    }
  }
}