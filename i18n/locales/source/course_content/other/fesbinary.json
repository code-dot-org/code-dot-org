{
  "https://studio.code.org/s/fesbinary/stage/1/puzzle/2": {
    "short_instructions": "Encode an image of anything you like using binary. The binary language will be represented with '0' and '1' only.",
    "long_instructions": "# Make your own image of any size\n\n[][0]\n[][1]\n[][2]\n[][3]\n[][4]\n[][5]\n[][6]\n\n**Directions:**\n\n-   Encode an image of anything you like using `binary`.\n-   The binary language will be represented with `0` and `1` only.\n-   You might want to do some planning and sketching with graph paper first. \n-   Depict something, perhaps your name written out, your initials, an icon or logo of some sort.\n-   Get creative! The image doesn't have to be a perfect square, it can be long and skinny."
  },
  "https://studio.code.org/s/fesbinary/stage/2/puzzle/1": {
    "short_instructions": "Each binary string represents one row of this picture. Can you rearrange them so it draws a smiley face instead of a frowny face?",
    "function_names": {
      "draw": "draw",
      "draw bit": "draw bit"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/2/puzzle/2": {
    "short_instructions": "Can you draw this pattern by looping just three binary digits (0s and 1s)?",
    "function_names": {
      "draw": "draw",
      "draw bit": "draw bit"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/2/puzzle/3": {
    "short_instructions": "Finish this drawing.",
    "function_names": {
      "draw": "draw",
      "draw bit": "draw bit"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/2/puzzle/4": {
    "short_instructions": "Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!\n\nSee what happens when we start to get creative with the bits?",
    "function_names": {
      "draw": "draw",
      "draw bit": "draw bit"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/2/puzzle/5": {
    "short_instructions": "Free Play: Here's a blank canvas for you to draw on.  Have fun!",
    "function_names": {
      "draw": "draw",
      "draw bit": "draw bit"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/1": {
    "dsls": {
      "title": "Binary Drawing",
      "markdown": "<h1>Draw with Binary</h1>\n \n<h3>Binary is a way of representing information using only two options. In this case, <b>off</b> and <b>on</b>.\n<br/>\nHere, we're going to use the number <b>0</b> as code for \"off\" and the number <b>1</b> as code for \"on\".\n<br/>\n<table>\n<tr><td><img src=\"https://images.code.org/50283881d577c17ac6f1d1648d8f361f-image-1483640342574.09.14.png\" width=\"75px\"/></td><td><img src=\"https://images.code.org/ba6f0a000b18f2dd87160e6255e8a71c-image-1483640355103.09.24.png\" width=\"90px\"/></td></tr>\n<tr padding=\"0px\"><td align=\"center\"><b>0</b></td><td align=\"center\"><b>1</b></td></tr>\n</table><img src=\"https://images.code.org/934883837aa59bca1d5c1ded0e0ac675-image-1483640120036.51.06.png\" float=\"left\"/><h3>In this stage, we've provided you with a grid of \"pixels\" that you can walk through and make designs by turning on certain squares!</h3>\n\n![](https://images.code.org/c53e00cde9acbae72d02fb9cc2a20e53-image-1483639858942.png)\n\n\n"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/2": {
    "short_instructions": "Use the blocks below to have the artist draw \"01010101\" in binary in the first row.",
    "long_instructions": "We've provided you with a grid of \"pixels\" that you can walk through and make designs by turning on only certain squares.\n\nUse the blocks below to have the artist draw \"01010101\" in binary in the first row.",
    "authored_hints": {
      "courseD_artist_binary1_a": "Replace the \"???\" in the text block with the binary image you want, in zeroes and ones.",
      "courseD_artist_binary1_b": "The artist will draw a white space for every 1 and a black space for every 0.",
      "courseD_artist_binary1_c": "This is how you can input your binary code:\n\n[][0]"
    },
    "function_names": {
      "draw bit": "draw bit",
      "draw": "draw"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/3": {
    "short_instructions": "Run this code to see how the artist uses binary to draw this pattern.",
    "long_instructions": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  \n\n* * *\n\nThe artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n\n* * *\n\n**Run this code to see how the artist uses binary to draw this pattern.**",
    "authored_hints": {
      "courseD_artist_binary2_a": "Just click `Run` to see this program in action!"
    },
    "function_names": {
      "draw": "draw",
      "draw bit": "draw bit"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/4": {
    "short_instructions": "Run this code to see how the artist uses binary to draw this pattern.",
    "long_instructions": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  \n\n* * *\n\nThe artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n\n* * *\n\n**Run this code to see how the artist uses binary to draw this pattern.**",
    "authored_hints": {
      "courseD_artist_binary2_a": "Just click `Run` to see this program in action!"
    },
    "function_names": {
      "draw": "draw",
      "draw bit": "draw bit"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/5": {
    "short_instructions": "Which of the binary strings below could you loop 8 times to draw this image?",
    "authored_hints": {
      "courseD_artist_binary3_a": "One of the four binary patterns in the toolbox will solve this puzzle!",
      "courseD_artist_binary3_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet."
    },
    "function_names": {
      "draw bit": "draw bit",
      "draw": "draw"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/6": {
    "short_instructions": "Can you draw this pattern by looping just three binary digits (0s and 1s)?",
    "authored_hints": {
      "courseD_artist_binary4_a": "Look at the first three squares on the top row. Could you repeat these three to get the whole pattern?",
      "courseD_artist_binary4_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "function_names": {
      "draw bit": "draw bit",
      "draw": "draw"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/7": {
    "short_instructions": "Each binary string below represents one row of this picture. \n\nCan you rearrange them so it draws a smiley face instead of a frown?",
    "authored_hints": {
      "courseD_artist_binary5_a": "Try running the code first to see what you have to work with.",
      "courseD_artist_binary5_b": "You only need to switch two rows to make a smile.",
      "courseD_artist_binary5_c": "If you are having trouble figuring this puzzle out, try writing the binary lines down on a piece of paper and looking for a pattern."
    },
    "function_names": {
      "draw bit": "draw bit",
      "draw": "draw"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/8": {
    "short_instructions": "Which 6 digit binary string, repeated 11 times, will draw this image?",
    "authored_hints": {
      "courseD_artist_binary6_a": "Start at the top left. How far do you have to read before the pattern starts to repeat?",
      "courseD_artist_binary6_b": "You can build your binary string a bit at a time, and keep testing!"
    },
    "function_names": {
      "draw bit": "draw bit",
      "draw": "draw"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/9": {
    "short_instructions": "What is the shortest binary string that you can repeat to draw this image?",
    "authored_hints": {
      "courseD_artist_binary7_a": "Start at the top left. How far do you have to read before the pattern starts to repeat?",
      "courseD_artist_binary7_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "function_names": {
      "draw bit": "draw bit",
      "draw": "draw"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/10": {
    "short_instructions": "Finish the code to create this drawing.",
    "authored_hints": {
      "courseD_artist_binary8_a": "The spiral can be confusing sometimes. Isolate each horizontal line in your mind as you create this design.",
      "courseD_artist_binary8_b": "Try running the code first to see what you have to work with.",
      "courseD_artist_binary8_c": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet."
    },
    "function_names": {
      "draw": "draw",
      "draw bit": "draw bit"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/3/puzzle/11": {
    "short_instructions": "Finish the code to create this drawing.",
    "function_names": {
      "draw": "draw",
      "draw bit": "draw bit"
    },
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Take a close look at the code below.  Which image will it create after you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "A",
              "correct": false,
              "feedback": "Incorrect."
            },
            {
              "text": "B",
              "correct": false,
              "feedback": "Incorrect."
            },
            {
              "text": "C",
              "correct": false,
              "feedback": "Incorrect."
            },
            {
              "text": "D",
              "correct": true,
              "feedback": "Correct!"
            }
          ],
          "markdown": "<table>\n<tr>\n\n<td style=\"padding: 0 30px 0 0;\"> <b>A)</b> <img src=\"https://images.code.org/ca3e26e5b3008075d06db82c2831ab0b-image-1489438562132.43.39a.png\" width=\"100px\"/></td>\n\n<td style=\"padding: 0 20px 0 0;\"> <b>B)</b> <img src=\"https://images.code.org/6da194be0b14a041291648c12a307495-image-1489438503416.43.39.png\" width=\"100px\"/></td>\n\n<td style=\"padding: 0 20px 0 0;\"> <b>C)</b> <img src=\"https://images.code.org/dfaa00e3a6260742671d1ac4455fb5d5-image-1489438562133.43.39b.png\" width=\"100px\"/></td>\n\n\n<td style=\"padding: 0 20px 0 0;\"> <b>D)</b> <img src=\"https://images.code.org/7fc63ed5875b9f9785d0e88aec6eae47-image-1489439110649.43.39d.png\" width=\"100px\"/></td>\n</tr></table>\n<br/>\n\n"
        }
      }
    ]
  },
  "https://studio.code.org/s/fesbinary/stage/4/puzzle/3": {
    "short_instructions": "We start you with the 4x2 image Maddie was creating, but we've left out the last few pixels. Finish off the image by figuring out which colors are missing and encoding them.",
    "long_instructions": "# 3-Bit Color\n\n**Directions:**\n\n-   We start you with the 4x2 image Maddie was creating, but we've left out the last few pixels. \n-   Finish off the image by figuring out which colors are missing and encoding them."
  },
  "https://studio.code.org/s/fesbinary/stage/4/puzzle/4": {
    "short_instructions": "Here's an example of an image made with 3-bit color. Try changing it to understand how it works. If you want to reset the image, press \"Start Over\".",
    "long_instructions": "# 3-Bit Color\n\nHere's an example of an image made with 3-bit color. Try changing it to understand how it works. \n\n_If you want to reset the image, press \"Start Over\"._"
  },
  "https://studio.code.org/s/fesbinary/stage/4/puzzle/5": {
    "short_instructions": "A careless binary coder typed in ONE extra 0 or 1 somewhere within this image's data. The extra bit that is causing Mario to glitch out! \n\nDelete the extra bit to restore Mario back to normal!",
    "long_instructions": "# 3-Bit Color\n\n**Challenge:** \n\nA careless binary coder typed in ONE extra 0 or 1 somewhere within this image's data. The extra bit that is causing Mario to glitch out! \n\nDelete the extra bit to restore Mario back to normal!\n\n[][0]"
  },
  "https://studio.code.org/s/fesbinary/stage/4/puzzle/6": {
    "short_instructions": "Make something awesome and share it with your classmates! You can copy and paste the value of a pixel to use it repeatedly.",
    "long_instructions": "# 3-Bit Color\n\nYou have one last chance to experiment and get creative with the pixelation widget. Make something awesome and share it with your classmates!\n\n-   _Hint:_ You can copy and paste the value of a pixel to use it repeatedly."
  },
  "https://studio.code.org/s/fesbinary/stage/5/puzzle/1": {
    "dsls": {
      "markdown": "# Problem Solving - Computers and Logic: Lesson 6 - Processing with Bits\n\n## Background\n\nIn this lesson you'll learn how computers process binary information as you design bit-level filters of simple images.\n\n# Resources\n\n* [Pixel Filtering](https://docs.google.com/document/d/1R92qKHBC8Bz3P3YXVSziyfpijJ0gMYob2j5RncWdWsA/edit?usp=sharing) - Activity Guide ([PDF](https://docs.google.com/document/d/1R92qKHBC8Bz3P3YXVSziyfpijJ0gMYob2j5RncWdWsA/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1R92qKHBC8Bz3P3YXVSziyfpijJ0gMYob2j5RncWdWsA/export?format=doc))\n"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/5/puzzle/2": {
    "long_instructions": "# 3 Bit Colors\n\nEach pixel is a square on a screen that emits light. Each pixel can have a certain number of bits assigned to it, and bits per pixel determine the colors that can be rendered.\n\nIn this tool we're using 3 bits to define the one large black pixel. The first bit affects the red tint. The second bit affects the green tint. The third bit affects the blue tint.\n\n# Do This\n\n-   Click the \"Run\" button to start the widget\n-   Click on the light bulbs to turn on or off each color and see what happens to your pixel\n-   See how many different colors you can create with just three bits\n-   Write down the binary associated with each color you come up with"
  },
  "https://studio.code.org/s/fesbinary/stage/5/puzzle/3": {
    "long_instructions": "# Filtering Pixels\n\nIf you've ever used Instagram you've probably encountered an image filter. Image filters read in each pixel, process it in some way, and the return the filtered pixel. In this tool we're going to start by filtering just a single pixel before moving on to a full image.\n\n# Do This\n\n-   Try changing the color drop downs in the Filter section\n-   Click on the top row of lightbulbs in the Diagram section to see how the filter will convert the input (top bulbs) to the output (bottom bulbs)\n-   Look at how the numbers in the Binary section reflect changes to the colors\n-   Based on how the bits change, can you formulate what replace is doing? Talk to your partner and see if you can figure it out.\n-   Complete the Level 2 table in your Activity Guide"
  },
  "https://studio.code.org/s/fesbinary/stage/5/puzzle/4": {
    "long_instructions": "# Filtering Images\n\nNow that we've seen how a single pixel can be filtered to change its color, let's try applying a filter to an image made of multiple pixels. The filter you create will be applied to each pixel in the image - and you still have the light bulbs available to experiment with how your filter will work with individual colors.\n\n# Do This\n\nHere's a picture of a red mushroom - you're going to try and turn it into a yellow mushroom.\n\n-   First, determine which bit needs to change in order to turn red into yellow\n-   Once you've figured out which bit needs changing, use the filter dropdowns to make all of the red areas turn yellow\n-   After you've got the filter working so that the red has turned yellow, see if you can come up with filters that turn the mushroom other colors\n\n_How many tries did it take you to find the right filter?_"
  },
  "https://studio.code.org/s/fesbinary/stage/5/puzzle/5": {
    "long_instructions": "# Combining Filters\n\nNow that you've played with filtering a single color channel, it's time to see what happens if we filter more than one color.\n\n# Do This\n\n-   Using the color dropdowns in the filter section, build a filter that changes the value of more than one color channel\n-   Click on the top row of lightbulbs in the Diagram section to see how the filter will convert the input (top bulbs) to the output (bottom bulbs)\n-   Look at how the numbers in the Binary section reflect changes to the colors\n-   Complete the Level 4 table in your Activity Guide"
  },
  "https://studio.code.org/s/fesbinary/stage/5/puzzle/6": {
    "long_instructions": "# Combining Filters\n\nSometimes you'll need to filter more than one pixel to get the color change that you want.\n\n# Do This\n\nCheck out Mario, he's lookin' pretty good in his red hat and overalls. Your job it to set up the filter so he looks like Luigi, with a green hat and overalls.\n\n-   First, determine which bit(s) needs to change in order to the change you want\n-   Once you've figured out which bit needs changing, set the filter dropdown appropriately\n-   After you've got the filter working so that, try to come up with other filters that change _only_ his hat and overalls - how many different clothing colors can you come up with?\n\n_How many tries did it take you to find the right filter?_"
  },
  "https://studio.code.org/s/fesbinary/stage/5/puzzle/7": {
    "long_instructions": "# UnFiltering\n\nBit filters can be used to _undo_ filtering as well. Here's an image of a bird that's been filtered from it's original colors. Can you get it back to normal?\n\n# Do This\n\n<img src=\"https://images.code.org/c15636bda16e8792c59ac955332e37a5-image-1471372091393.22.56.png\" style=\"float:right; width: 200px\"/>\nHere's what our bird should look like. Use the filter to get him back to normal.\n\n-   Decide which colors (and so which bits) you need to change. You might need to write your thoughts with pencil and paper.\n-   Once you know which bits need changing, set the filter dropdown appropriately to test your answer\n-   After you've fixed the image, write down both your process and your final filter in the Level 6 section of your Activity Guide\n\n_How many tries did it take you to find the right filter?_"
  },
  "https://studio.code.org/s/fesbinary/stage/5/puzzle/8": {
    "long_instructions": "# Free Play\n\nDo as you will, make something awesome"
  },
  "https://studio.code.org/s/fesbinary/stage/6/puzzle/1": {
    "short_instructions": "Choose a background and map, and pick an actor to be your game's hero.",
    "long_instructions": "It is amazing how much you have learned! Let's make a game step by step.\n\nUsing new blocks in your toolbox, choose a new background, then pick an actor to be in your game.",
    "authored_hints": {
      "courseE_playLab_scaffold1_a": "The `set actor 1 to ??? image` block can be used to add an actor to the stage.",
      "courseE_playLab_scaffold1_b": "Put the `set actor` block under `when run` to make your actor appear at the beginning of the program.",
      "courseE_playLab_scaffold1_c": "Use `set ??? background` to choose a background for your scene."
    }
  },
  "https://studio.code.org/s/fesbinary/stage/6/puzzle/2": {
    "short_instructions": "Use events and actions to make your hero move. Get to the targets.",
    "long_instructions": "Use  blocks like events and actions to make your player move when you press the arrow keys.  \n\nGet the player to the targets to complete this puzzle.",
    "authored_hints": {
      "courseE_playLab_scaffold1_a": "Pull on the dropdown menu of the `when ____ arrow` event to change the direction the block controls.",
      "courseE_playLab_scaffold1_b": "You should have four `when arrow` event blocks, with a direction to move underneath each.",
      "courseE_playLab_scaffold1_c": "When you are done, you should be able to move your hero with the arrow keys!"
    }
  },
  "https://studio.code.org/s/fesbinary/stage/6/puzzle/3": {
    "short_instructions": "Add two or more additional actors to your game and make them move.",
    "long_instructions": "Let's add some more characters to your game!\n\nUse the `set actor` block to add more characters then move to the goal to complete this puzzle.",
    "callouts": {
      "courseE_playLab_scaffold3_1": "Get the actor to this flag to move on to the next level."
    }
  },
  "https://studio.code.org/s/fesbinary/stage/6/puzzle/4": {
    "short_instructions": "Find some interesting ways to change the score in your game. Get the score to show something other than 0 to continue.",
    "long_instructions": "Multiple characters and getting the actors moving is a great start to a game, but we need to do more to make this feel like a real game. Let's add a score!\n\nUse event blocks like the `when actor touches` to change the score or win the game. Score 5 points or win the game to complete this puzzle.",
    "authored_hints": {
      "courseE_playLab_scaffold4_a": "Use `score point` to add a point, and `remove point` to subtract one."
    }
  },
  "https://studio.code.org/s/fesbinary/stage/6/puzzle/5": {
    "short_instructions": "Great job! You have all the basic components of a working game. Now spend some time making sure the game works the way you want.",
    "long_instructions": "Great job! You have all the basic components of a working game. Now spend some time making sure the game works the way you want. When you are done, click \"Finish\"!"
  },
  "https://studio.code.org/s/fesbinary/stage/6/puzzle/6": {
    "short_instructions": "You've finished! Now you can play your game or share it with your friends and classmates!",
    "long_instructions": "You've finished! Now you can play your game or share it with your friends and classmates!"
  }
}