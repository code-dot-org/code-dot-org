{
  "https://studio.code.org/s/netsim/stage/1/puzzle/1": {
    "dsls": {
      "content1": "description here",
      "markdown": "# Code.org's Internet Simulator\n\n_Note: This instructions listed in this tutorial are for teachers wishing to use the Internet Simulator as a standalone tool, separate from the Code.org Computer Science Principles curriculum. If you are planning to use the activities designed as part of the Code.org CSP curriculum, then please head to the [CSP curriculum page.](https://code.org/educate/csp)_\n\n### Contents\nThere are 3 pages of background and information contained here:\n\n* What is the Internet Simulator? Overview (see below)\n* [setup instructions](/s/netsim/stage/1/puzzle/2)\n* [FAQ](/s/netsim/stage/1/puzzle/3)\n \n### What is the Internet Simulator? An Overview:\n\nThe Internet Simulator is a tool developed by Code.org for our new high school [Computer Science Principles](https://code.org/educate/csp) class. The tool is designed to let students get a hands on experience experimenting with (and solving) different kinds of problems associated with networked computers. The Internet Simulator is used in multiple lessons throughout Units 1 and 2 in our curriculum to successively build up the different layers of the Internet. \n\nIf you are considering using the tool in your classroom with activities you design, we would recommend you get familiar with the tool via our [lesson plans](https://curriculum.code.org/csp/unit1). **The setup instructions** on the next page are for teachers who would like to use the Internet Simulator separate from the Code.org CSP curriculum. \n\nThe tool itself doesn't _teach_ these concepts, but rather provides an environment for multiple students to come together and send binary, decimal, or ascii based messages to each other or other classmates.  **The environment can be configured** in a variety of ways to expose different kinds of problems, visualize data and connections between hosts, and support learning of various concepts related to the Internet.\n\nThe Internet Simulator was designed to be used in a *classroom* with students working collaboratively in-person to solve problems. Often these problems involve inventing a communcation protocol, or inventing ways to encode information in a structred way that makes transporting it over the Internet feasible. \n\n**In Code.org's Computer Science Principles curriculum** we typically structure lessons and activities in the following way:\n\n* **First present students with a challenge**\n * e.g. The physical internet is inherently unreliable and can drop messages\n* **Give an opportunity to experiment with the simulator to get a sense of issues** \n * e.g. look at the router logs to discover that 10-20% of all messages are dropped and packets can be routed out of order\n* **Give an opportunity to invent their own solution to the challenge** \n  * e.g. invent their own protocol for how to reliably send messages on this unreliable network\n* **Finally, students research how that protocol or invention works \"in the real world\"**\n * e.g. Research how TCP really works and watch a video\n\n### What Can The Internet Simulator be Configured To Do?\n\nAt its most basic, the Internet Simulator can communicate a single bit of information via a single shared wire with no coordination or synchronization.  At it's most advanced it can simulate unreliable connections over multiple routers, using IP addresses, a DNS, and fixed sized packets requiring the creation of protocols similar to TCP/IP or HTTP. \n\nWe have set up the Internet Simulator in a variety of configurations that are conducive to teaching certain topics.  But if using the Internet Simulator for class you should be aware of some user interface settings that you may wish to control or tell your students to setup in a particular way.  \n\nFor example: one of the features of the Internet Simulator is that you can show the binary, decimal, hex and ASCII representations of any data you send around.  In some configurations the user can also set the \"chunk size\" to dictate how bits are interpreted.  For a lesson of your own design, you might choose one of the configurations we have provided, but might need to mandate that students only show a particular representation of the bits, or maybe you want the chunk size to be set to a particular value.\n\nThe larger point is that the configurations provided here are meant to be a starting point for teaching a particular topic.  You might need to employ some ingenuity and teaching strategies to further refine the use of the Simulator to fit your needs.\n\n\n <br><br>\n<img src=\"https://images.code.org/0bf9799b2bec2756c1664b84e12cbe27-image-1438642671141.57.13.png\" width=\"600px\" style=\"margin:0 100px\"/>\n<br><br>\n\n\n\n    \n\n\n_Next up: Setup instructions_\n\n<a class=\"btn btn-large btn-primary next-stage submitButton\">Continue</a>\n"
    }
  },
  "https://studio.code.org/s/netsim/stage/1/puzzle/2": {
    "dsls": {
      "content1": "description here",
      "markdown": "# Internet Simulator: Setup Instructions\n\n1. **Create a section in Code Studio.** For the students in your class to be able to communicate with each other, they all need to be associated with the same section in Code Studio. Signed in as a teacher account, you will need to create a section that all of your students join. To create a section:\n * Navigate to the [sections](https://code.org/teacher-dashboard#/sections) area of the teacher dashboard\n * Click the 'New Section' button. We recommend choosing Login Type 'Email' and 'cspunit1' for the course. \n <br>\n<img src=\"https://images.code.org/9e9961a44b0a2f76ab92e6f9634d8f55-image-1438640255737.17.04.png\" width=\"600px\" />\n<br><br>\n2. **Have students join your section.** Once the section is created, click the 'Manage Students' link for the section. You will see a section code that you can ask students to join once they have created their own Code Studio accounts.\n<br>\n<img src=\"https://images.code.org/9b8863dbb5a8e229e9bc1c4fc74ddd22-image-1438641516264.png\" width=\"400px\" />\n<br><br>\n3. **Provide students with the URL to the Internet Simulator version you want to use.** We have created several different configuations of the Internet Simulator available at [code.org/internetsimulator](http://code.org/internetsimulator). When you find a configuration that works for your activity, share the URL with students. If they are all in the same section, then they will automatically be able to connect with each other when they arrive at the same URL.  \n\n_Next up: Frequently Asked Questions_\n\n<a class=\"btn btn-large btn-primary next-stage submitButton\">Continue</a>\n\n"
    }
  },
  "https://studio.code.org/s/netsim/stage/1/puzzle/3": {
    "dsls": {
      "content1": "description here",
      "markdown": "# Internet Simulator: FAQ\n\n#### Where can I find the activities you've designed to use with the Internet Simulator?\nThe activities we've designed for our Computer Science Principles curriculum, including the specific Internet Simulator configurations can be found in the Unit lesson plans [here](https://code.org/educate/csp). Many of the lesson plans have \"Teacher Tips & Tricks\" support videos that show demonstrations of the Internet Simulator used as a part of the classroom activities. You can use these activities as is, or feel free to modify to best suit your class!\n\n#### Can I customize the Internet Simulator for my class?\nRight now, we unfortunately don't have a way for people outside of Code.org to create specific configurations and instructions for the Internet Simulator. We've tried to expose a variety of different configurations that can hopefully work for your classroom and activity. Long-term, we'd love to have a way to let others configure the tool.\n\n#### My students can't see each other when they go to the URL I give them for the Internet Simulator. What do I do?\nFor students to see each other in the lobby of the Internet Simulator, they'll need to be in the same section. Double check that you've completed the section setup instructions from the previous page, and that the students in question have joined that specific section code. Also, some students may be in multiple sections if they've done coursework with Code.org before, so make sure they know the name of your section and have picked it in the dropdown before entering the lobby.\n\n\n<a class=\"btn btn-large btn-primary next-stage submitButton\">Continue</a>\n"
    }
  },
  "https://studio.code.org/s/netsim/stage/2/puzzle/1": {
    "short_instructions": "You and your partner share a single wire that can only be in state A or state B. You can set the wire to either state at any time, and you can read the state of the wire at any time. Can you figure out a way to effectively communicate with just this system?",
    "long_instructions": "# Sending bits with the Internet Simulator\n\nYou and your partner share a single wire that can only be in state A or state B. You can set the wire to either state at any time, and you can read the state of the wire at any time. Can you figure out a way to effectively communicate with just this system?\n\nYour teacher will hand out more specific instructions for this activity."
  },
  "https://studio.code.org/s/netsim/stage/3/puzzle/1": {
    "short_instructions": "You and your partner can now reliably send messages back and forth without extra coordination! While you're always sending bits back and forth, you can also represent those bits as decimal numbers. What kinds of information can you represent with this system? ",
    "long_instructions": "# Sending Numbers with the Internet Simulator\n\nYou and your partner can now reliably send messages back and forth without extra coordination! While you're always sending bits back and forth, you can also represent those bits as decimal numbers. What kinds of information can you represent with this system? \n\nYour teacher will hand out more specific instructions for this activity."
  },
  "https://studio.code.org/s/netsim/stage/4/puzzle/1": {
    "short_instructions": "Now that you've transmitted information represented as decimal numbers, you can map those numbers to text characters to send text-based information back and forth. With a text-based protocol, you can easily represent and communicate all kinds of information. ",
    "long_instructions": "# Sending Text with the Internet Simulator\n\nNow that you've transmitted information represented as decimal numbers, you can map those numbers to text characters to send text-based information back and forth. With a text-based protocol, you can easily represent and communicate all kinds of information. \n\nYour teacher will hand out more specific instructions for this activity."
  },
  "https://studio.code.org/s/netsim/stage/5/puzzle/1": {
    "short_instructions": "In this version of the Internet Simulator, you can connect to up to 5 other people in a room. When you send messages in the room, everyone receives them. What are some of the challenges of this system, and how might you solve them?",
    "long_instructions": "# Broadcast messages in the Internet Simulator\n\nIn this version of the Internet Simulator, you can connect to up to 5 other people in a room. When you send messages in the room, everyone receives them. What are some of the challenges of this system, and how might you solve them?\n\nYour teacher will hand out more specific instructions for this activity."
  },
  "https://studio.code.org/s/netsim/stage/6/puzzle/1": {
    "short_instructions": "In this version of the Internet Simulator, everyone connects to a router and has a specific address. To send messages, you have to address your message to the specific address of the recipient, and the router will take care of delivering it to the right computer. If there are other routers created in your class, ask for the address of one of your classmates and send them a message! View the Log Router to see the path the messages have taken through the network.",
    "long_instructions": "# Routing messages\n\nIn this version of the Internet Simulator, everyone connects to a router and has a specific address. To send messages, you have to address your message to the specific address of the recipient, and the router will take care of delivering it to the right computer. If there are other routers created in your class, ask for the address of one of your classmates and send them a message! View the Log Router to see the path the messages have taken through the network.\n\nYour teacher will hand out more specific instructions for this activity."
  },
  "https://studio.code.org/s/netsim/stage/7/puzzle/1": {
    "short_instructions": "Messages on the Internet can take many paths to get to their destination, and sometimes along the way the message gets dropped. In this version of the Internet Simulator, there is a 10% chance of a packet being dropped, multiple packets may take different paths to the destination, and the default max packet size is set to 6 additional characters. ",
    "long_instructions": "# Packets and Making a Reliable Internet\n\nMessages on the Internet can take many paths to get to their destination, and sometimes along the way the message gets dropped. In this version of the Internet Simulator:\n\n-   There is a 10% chance of a packet being dropped\n-   Multiple packets may take different paths to the destination\n-   The default max packet size is set to 6 additional characters\n\nYour teacher will hand out more specific instructions for this activity."
  },
  "https://studio.code.org/s/netsim/stage/8/puzzle/1": {
    "short_instructions": "In this version of the simulator you can't see the other students' addresses.  Instead, one of you must act as a name service, to help share addresses with each other.",
    "long_instructions": "# Introduction to DNS\n\nIn this version of the simulator you can't see the other students' addresses.  Instead, one of you must act as a name service, to help share addresses with each other. From the DNS tab in the left column, one person can take over as DNS.\n\nYour teacher will hand out more specific instructions for this activity."
  },
  "https://studio.code.org/s/netsim/stage/9/puzzle/1": {
    "short_instructions": "In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.",
    "long_instructions": "# Domain Name System (DNS)\n\nIn this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. You can only see the hostnames of other connected computers.\\\n[][0]\n\nThe address of the DNS is always \\<yourRouterNumber>.15. Send a message with protocol `GET [hostname]`, for example `GET Bob2`, to the DNS to get another student's address. You can keep track of the responses in the Notes section in the DNS tab.\\\n[][1]\n\nYour teacher will hand out more specific instructions for this activity."
  },
  "https://studio.code.org/s/netsim/stage/10/puzzle/1": {
    "short_instructions": "In this configuration, most of the options are turned on, and you can play with them. Have fun!",
    "long_instructions": "# Internet Simulator Freeplay\n\nIn this version of the Internet Simulator, most of the options are turned on and are configurable. Messages can be sent to any router within the class, and messages will take different paths to reach their destination.\n\nYour teacher will hand out more specific instructions for this activity."
  }
}