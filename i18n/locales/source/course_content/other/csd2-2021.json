{
  "https://studio.code.org/s/csd2-2021/lessons/1/levels/1": {
    "dsls": {
      "content1": "Look through these sample web pages and decide what purpose they serve their creators and visitors.",
      "markdown": "# Sample Personal Web Pages\n\n<div style=\"float: left; text-align:center;\"><strong>The Cutest Dog</strong><br /><a href=\"https://codeprojects.org/uqvtQ_zKapQ2XocJkdGZypbJWM1nDMCpts1dN7NZ9wQ\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/be0c20dba6319b34dc07a9f87ae615fa-image-1565304900473.png\" alt=\"Dog Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>My Trip</strong><br /><a href=\"https://codeprojects.org/qNceXIsgEYKraWZxd0Lq9uOO7Jj3yBfcp8pHR4uXq8c\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/51b787b6a25663e092b3f55e051e9a94-image-1565630570417.png\" alt=\"Trip Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>Musical Instruments</strong><br /><a href=\"https://codeprojects.org/HxtpYQ-r79cNzFpnSfGyhMuNKEOTdyH5PPeUpDimEeY\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/82323a78b17b69101dd6e98a6a21c55c-image-1565630573896.png\" alt=\"Instrument Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>Recycling Club</strong><br /><a href=\"https://codeprojects.org/HxtpYQ-r79cNzFpnSfGyhBiffg8HpOk2lRx1kd5sgaw\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/5b0044bfd92d44c97cd74d82f1933daa-image-1565630578147.png\" alt=\"Recycling Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>Haikus</strong><br /><a href=\"https://codeprojects.org/PPGOslHhH0Od4yEOHHdnjLT4-x4yfDMStUTlMUZy6Cc\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/40892c338c78da445310ddfb7cf63127-image-1565630595445.png\" alt=\"Haiku Sample Page\"></a></div>\n\n\n\n"
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/2/levels/1": {
    "long_instructions": "<img src=\"https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg\" style=\"width:400px; float:right\">\n\n# Welcome to Web Lab!\n\nThe platform you are in is called Web Lab. There are three main parts of the screen in Web Lab.\n\n# Do This\n\n-   Try typing something in the workspace.\n-   Press <img src=\"https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png\" style=\"width:150px\"> to see it in the preview area!",
    "teacher_markdown": "After giving students some time to explore the tool, ask them to share out anything that they have discovered.  The video on the next level will give them a short tour, so it's okay if they don't notice everything."
  },
  "https://studio.code.org/s/csd2-2021/lessons/2/levels/2": {
    "display_name": "Video: Intro to Web Lab - Part 1",
    "long_instructions": "## Question to consider:\n\n-   What are the different parts of Web Lab, and what are they used for?",
    "teacher_markdown": "## Discussion Goals\n\nWhile there are no broad learning goals for this video, students should understand that the instructions for Web Lab levels appear in the wide panel at the top, and the bottom three panels, from left to right, include the list of files that they are working on, the area where they type in their code, and the area where they see the results of their code.  For now, they do not need to worry about every button, as they will be explained later, but they should understand that the inspector tool helps them to link parts of the web page with code that created them, and the refresh and save button allows them to update their webpage if it does not automatically update when they change the code.\n\nAlthough it's not part of the video, the instructions pane will also often include drop down questions and answers that students can use when they are completing an activity, and in some levels the tabs at the top of the instructions pane will take students to a \"Help and Tips\" area that includes reference information relevant to the activities."
  },
  "https://studio.code.org/s/csd2-2021/lessons/2/levels/3": {
    "display_name": "Explore HTML",
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**How do I use the Inspector Tool?**]\n\nThe Inspector Tool is a great way to learn more about unfamiliar code in Web Lab. To turn on the Inspector Tool, click <img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png\" style=\"width:100px\">. You will know that the Inspector Tool is on because the button will turn white and say \"Inspector: On\". Once you turn on the Inspector Tool, you can hover over anything in the preview area and Web Lab will highlight the code that is making that part of the page appear.\n\n:::\n\n</div>\n\n# Explore HTML\n\nThis is a web page written in HTML, the language of the web. You'll learn more about how it works, but first explore it by using the Inspector Tool.\n\n# Do This\n\n-   Click the Tip \"How do I use the Inspector Tool?\" on the right to learn how to use the Inspector Tool.\n-   Follow the instructions in the web page to explore the web page and discuss with a partner how it is working.",
    "teacher_markdown": "## Using the Tool\n\nAs students explore the site, make sure that they understand how to use the inspector tool, the drop down tips on the right side of the instruction pane, and the \"Help and Tips\" tab, which will give them access to the previous video.\n\n## HTML Discussion\n\nYou should bring students back together once they've spent a couple minutes looking through this level. The discussion prompts listed in the level should be used in a standard Think-Pair-Share structure.\n\n-   What text is appearing in both the code and the web page?\n-   How is this language communicating extra information about the way to represent text?\n\nThe goal of the discussion is to call out the features of HTML that students are noticing. The two primary takeaways (reinforced in the subsequent video as well) are that HTML uses a system of tags to surround content and indicate what it is and how it should be displayed."
  },
  "https://studio.code.org/s/csd2-2021/lessons/2/levels/4": {
    "display_name": "Video: Intro to Web Lab - Part 2",
    "long_instructions": "## Questions to consider:\n\n-   Why are HTML tags useful?\n-   What does the paragraph tag do?",
    "teacher_markdown": "## Discussion Goals\n\n**Key Vocabulary:**\n\n-   **HTML** - Hypertext Markup Language, a language used to create web pages\n-   **HTML Element** - A piece of a website, marked by a start tag and often closed with an end tag\n-   **HTML Tag** - The special set of characters that indicates the start and end of an HTML element and that element's type\n\nAs student discuss HTML tags, make sure they understand that HTML tags are used to structure, or organize, content on the screen.  Talking about the organization, structure, or role of the content in the page (heading, paragraph, list, etc.) is more accurate than talking about specific aspects of its appearance (such as size or spacing).  \n\nAlthough certain structural roles may be associated with appearance (headings are larger), HTML does not specify anything in particular about the appearance.  This allows users with different needs, such as the visually impaired, to interact with the structured content in a way that makes the most sense for them.  Later in the unit, students will learn about styles and CSS, which allows them to specify exact size, color, and spacing to their HTML elements.\n\nThe paragraph tag separates text into paragraphs.  You may want to follow up this question by asking students how they think a web browser for the blind might deal with paragraphs.  For example, while sighted people may use spacing and new lines to separate out paragraphs, what should a screen reader do?"
  },
  "https://studio.code.org/s/csd2-2021/lessons/2/levels/5": {
    "long_instructions": "# Add Text to the Body\n\nWhen you start any Web Lab project, it will automatically add `<!DOCTYPE>`, `<html>`, `<head>`, and `<body>` tags to your project. When you add content to your projects, you'll need to do it between the `<body>` and `</body>` tags because it should be part of the body of your webpage.\n\n# Do This\n\n-   Write three separate sentences about any topic you like inside of the body tags of your web page.\n-   Hit \"Refresh and Save\" if you don't see the changes in the preview area.\n-   Compare your work with a neighbor. Make sure you're placing code in the same place.",
    "teacher_markdown": "# Using the Tool\n\nAs students work on this level, make sure they see that there is a new map level available to them in the \"Help and Tips\" tab.  This is a great place to look for extra resources that will help them to complete a level."
  },
  "https://studio.code.org/s/csd2-2021/lessons/2/levels/6": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What is a paragraph element?**]\n\nParagraphs are marked by opening(`<p>`) and closing(`</p>`) tags. Paragraphs in HTML can be any length of text from one word to a bunch of sentences. Paragraphs group together sets of sentences and put some space between that group of text and the next group of text.\n\n:::\n\n::: details [**How do I make multiple paragraphs?**]\n\nHere's an example of several paragraph tags in a row. This code would be placed inside of the body of your web page.\n\n    <p>This is a paragraph. It has two sentences.</p>\n    <p>This is another paragraph.</p>\n\n:::\n\n</div>\n\n# Use Paragraph Tags\n\nThe `<p>` `</p>` tags or \"paragraph\" start and end tags are placed around text to indicate that it is part of a paragraph. Placing text between paragraph start and end tags lets the computer know that it should be treated differently, often just spacing it out from other text.\n\n# Do This\n\n-   Place the text you just wrote inside at least two separate paragraphs by surrounding it with `<p>` and `</p>` tags\n-   Compare the results with a neighbor. What has changed about the way your text is displayed?",
    "teacher_markdown": "## Using the Tool\n\nThis level contains a new tab, \"Key Concepts\", that gives guidance on how student work can be evaluated.  This makes the level particularly useful as assessment.  Students can see how their work is evaluated by clicking on the \"Key Concepts\" tab.  Later, any teacher feedback will appear in the same area."
  },
  "https://studio.code.org/s/csd2-2021/lessons/2/levels/7": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What is a paragraph element?**]\n\nParagraphs are marked by opening( `<p>` ) and closing( `</p>` ) tags. Paragraphs in HTML can be any length of text from one word to a bunch of sentences. Paragraphs group together sets of sentences and put some space between that group of text and the next group of text.\n\n:::\n::: details [**Why does HTML seem to work even when it's broken?**]\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\n\n:::\n\n::: details [**Why does the code sometimes turn pink?**]\n\nWeb Lab is programmed to automatically detect some mistakes in HTML.  When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\n\n:::\n\n</div>\n\n# Debug: Fix the Broken Tags\n\nThis simple web page has some issues which are preventing the content from being displayed correctly. Identify and fix the issues. This practice is also called \"debugging\" your code.\n\n# Do This\n\n-   Fix the broken code so that the web page displays correctly\n-   Compare the problems you fixed with a neighbor",
    "teacher_markdown": "## Debugging\n\nAs students begin to debug, this is a great time to emphasize a positive culture around debugging.  This is a central skill that students will develop throughout the course.  Emphasize that debugging is a normal part of the programming process, and that all programmers, even experts get bugs.  More information can be found in the \"Debugging Guide\" linked at on the CS Discoveries curriculum page at <https://curriculum.code.org/csd>."
  },
  "https://studio.code.org/s/csd2-2021/lessons/3/levels/1": {
    "display_name": "Pair Programming",
    "long_instructions": "## Questions to consider:\n\n-   Why do you think professional programmers use pair programming?\n-   How do you think pair programming will help you to program better?",
    "teacher_markdown": "## Discussion Goals\n\nThe goals of this discussion center less around particular answers to this question and more around promoting positive attitudes toward pair programming.  As students discuss its potential benefits, make sure they understand that this is an industry standard practice, not just something done by learners in the classroom."
  },
  "https://studio.code.org/s/csd2-2021/lessons/3/levels/2": {
    "display_name": "Heading Sizes",
    "long_instructions": "# Two heads are better than one!\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What is a bug?**]\nBugs are mistakes in code which causes it not to work as planned.\n:::\n\n::: details [**What is debugging?**]\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \n:::\n\n::: details [**What are some examples of bugs?**]\n\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\n:::\n\n::: details [**Why does the code sometimes turn pink?**]\n\nWeb Lab is programmed to automatically detect some mistakes in HTML.  When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\n:::\n\n::: details [**Why does HTML seem to work even when it's broken?**]\n\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\n\n:::\n\n</div>\n\nThis HTML code has some bugs that are making the code pink.\n\nDo This:\n\n-   Work with your partner to fix the HTML bugs so that none of the code is pink.\n-   Together, come up with one piece of debugging advice.",
    "teacher_markdown": "# Debugging\n\nStudents may note that when code is organized and uses whitespace, it's much easier to find bugs, but any reasonable piece of advice around debugging could work here.\n\nAllow students to share out their advice, and continue to emphasize that getting bugs is a normal part of programming.  Students will be introduced to a formal debugging process later in the lesson."
  },
  "https://studio.code.org/s/csd2-2021/lessons/3/levels/3": {
    "display_name": "Intro to Headings",
    "long_instructions": "# Headings\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What are headings?**]\nHeadings are the different sized section titles throughout a web page. Headings add structure to your web page by breaking it up so it's easier for a user to read.\n:::\n\n::: details [**How do I make different sized headings?**]\nHeadings come in 6 different sizes.  The most common heading is \\<h1> The number 1 in the HTML tag designates that this is the biggest heading. The smallest heading is \\<h6>. You can also try the \\<h2>, \\<h3>, \\<h4>, and \\<h5> tags which get smaller as the number gets larger.\n:::\n\n::: details [**What is HTML?**]\nHTML stands for Hypertext Markup Language. HTML is used to add structure to the content of a web page. HTML uses tags to specify where certain structures start and end. These tags are sets of characters not found in the English language so that the content and structure can be differentiated. \n:::\n\n::: details [**What is an HTML element?**]\n\nAn HTML element is a piece of a website that is marked by a start tag and sometimes closed with an end tag. The element also includes the content inside the tags. For example: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n:::\n\n::: details [**What is an HTML tag?**]\n\nAn HTML tag is the special set of characters that tells the machine where the start or end of an HTML element is and what type it is.\n:::\n\n</div>\n\nSo far, you've organized your content into paragraphs.  Another way HTML allows you to organize your code is by using **headings**.  A heading is a short piece of text that goes at the top of a section of content, like a title.\n\n# Do This:\n\n-   Find the headings in the web page below and use the Inspector Tool to see the code that makes them.\n-   Make sure you and your partner agree on what the tags do.\n-   Change the code so that \"Drawing\" and \"2 years\" match the headings on the rest of the page."
  },
  "https://studio.code.org/s/csd2-2021/lessons/3/levels/4": {
    "display_name": "Heading Sizes",
    "long_instructions": "# Heading Sizes\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What are headings?**]\n\nHeadings are the different sized section titles throughout a web page. Headings add structure to your web page by breaking it up so it's easier for a user to read.\n:::\n\n::: details [**How do I make different sized headings?**]\nHeadings come in 6 different sizes.  The most common heading is `<h1>` The number 1 in the HTML tag designates that this is the biggest heading. The smallest heading is `<h6>`. You can also try the `<h2>`, `<h3>`, `<h4>`, and `<h5>` tags which get smaller as the number gets larger.\n:::\n\n::: details [**What is HTML?**]\nHTML stands for Hypertext Markup Language. HTML is used to add structure to the content of a web page. HTML uses tags to specify where certain structures start and end. These tags are sets of characters not found in the English language so that the content and structure can be differentiated. \n:::\n\n::: details [**What is an HTML element?**]\n\nAn HTML element is a piece of a website that is marked by a start tag and sometimes closed with an end tag. The element also includes the content inside the tags. For example: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n:::\n\n::: details [**What is an HTML tag?**]\n\nAn HTML tag is the special set of characters that tells the machine where the start or end of an HTML element is and what type it is.\n:::\n\n</div>\n\nHeadings can come in different sizes.  In this page, there are six different sized headings, but they are all mixed up.  Can you and your partner figure out how to fix them?\n\nDo This:\n\n-   Use the inspector tool to figure out what makes the headings different sizes\n-   Make sure you and your partner agree on what the different heading tags do.\n-   Change the tags so that the headings are in order from biggest to smallest, and the text says the correct size, as in the picture below. \n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15 PM.png\" style=\"width:100px; float:left\">"
  },
  "https://studio.code.org/s/csd2-2021/lessons/3/levels/5": {
    "dsls": {
      "answers": [
        {
          "text": "https://images.code.org/a4e973cc13db380ca1e1efeb4263974f-image-1473432905067.53.47 AM.png",
          "correct": false
        },
        {
          "text": "https://images.code.org/1c660b4e54a3e835250597cb261d8e17-image-1473432905068.54.08 AM.png",
          "correct": true
        },
        {
          "text": "https://images.code.org/22e9ae6a04afd8251b29939a6fa63411-image-1473432905069.54.25 AM.png",
          "correct": false
        },
        {
          "text": "https://images.code.org/0eee565202089d44a6bb5633603c45e0-image-1473432905069.54.50 AM.png",
          "correct": false
        }
      ],
      "content1": "Look at the code below and predict how the headings will be displayed. Choose from one of the options on the right.",
      "markdown": "<pre>\n&lt;h3&gt; Eggs &lt;/h3&gt;\n&lt;h1&gt; Bacon &lt;/h1&gt;\n&lt;h6&gt; Waffles &lt;/h6&gt;\n</pre>\n",
      "teacher_markdown": "<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/Screen-Shot-2017-04-27-at-10.38.03-AM.png\" style=\"width:200px; float:right\">\n\n**Level Types:** This multiple choice question that asks students to choose how HTML headings will display on a web page. You can see which students have answered the question correctly by going to that level and pulling out the Teacher Panel from the right hand side.  Students who have successfully answered the question will have a green bubble.  Students have as many chances as they like to answer correctly, so guessing and checking can also lead to a correct answer.\n\n<div class=\"clear\"></div>\n",
      "title": "Headings Quick Check"
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/3/levels/6": {
    "display_name": "Video: Debugging",
    "long_instructions": "## Questions to consider:\n\n-   What is debugging?\n-   What are the four steps to debugging?",
    "teacher_markdown": "Students should identify debugging as the process of finding and fixing problems in their code.\nThe four steps of the debugging process are describe the bug, hunt for the bug, try out small solutions (or change your code), and document what you have learned.\n\nYou may also want to reference the [Guide to Debugging][0] found on the CS Discoveries curriculum page."
  },
  "https://studio.code.org/s/csd2-2021/lessons/3/levels/7": {
    "dsls": {
      "description": "Try out what you've learned on one or more of the following activities.",
      "display_name": "HTML Headings"
    },
    "sublevels": {
      "CSD U2 Headings challenge debug 1_2021": {
        "display_name": "Debug the missing paragraph",
        "bubble_choice_description": "Use your debugging skills to figure out why the paragraph has disappeared.",
        "long_instructions": "# Debug: Missing Paragraph\r\n\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML.  When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\nSomeone has submitted a bug report on this web page.  Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nThree paragraphs, one each | The turtle paragraph is missing\r\n on dogs, turtles, and birds | \r\n \r\n \r\n# Do this\r\n\r\n * Find and fix the problem that is causing the bug\r\n "
      },
      "CSD U2 Headings challenge debug 2_2021": {
        "display_name": "Debug the pink tags",
        "bubble_choice_description": "Use your debugging skills to figure out why the tags are pink.",
        "long_instructions": "# Debug: Pink Tags\r\n\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML. When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\nSomeone has submitted a bug report on this web page.  Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nThe code should not be pink | There is pink code near line 8 and line 14\r\n \r\n # Do this\r\n * Find and fix the problem that is causing the bug",
        "teacher_markdown": "This is a teacher note."
      },
      "CSD U2 Headings challenge debug 3_2021": {
        "display_name": "Debug the Subheadings",
        "bubble_choice_description": "Use your debugging skills to figure out why some subheadings are smaller than others.",
        "long_instructions": "# Debug: Pink Tags\r\n\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML. When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\nSomeone has submitted a bug report on this web page.  Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nThe code should not be pink | There is pink code near line 12 and line 14\r\n \r\n # Do this\r\n * Find and fix the problem that is causing the bug.",
        "teacher_markdown": "This is a teacher note."
      },
      "CSD U2 Headings challenge debug 4_2021": {
        "display_name": "Add Larger Heading",
        "bubble_choice_description": "Add a large heading to the top of a web page.",
        "long_instructions": "# Add Larger Heading\r\n\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML. When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\nHere's a great article on modes of transportation. Can you add a catchy, large heading and title it?\r\n \r\n # Do this\r\n * Add a larger heading at the top of the article.",
        "teacher_markdown": "This is a teacher note."
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/3/levels/8": {
    "display_name": "Headings and Paragraphs",
    "long_instructions": "# Headings and Paragraphs\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What is a paragraph element?**]\n\nParagraphs are marked by opening(`<p>`) and closing(`</p>`) tags as well. Paragraphs in HTML can be any length of text from one word to a bunch of sentences. All of your text in your web page should be contained in an HTML element (headings or paragraphs). Paragraphs group together sets of sentences and put some space between that group of text and the next group of text.\n\n:::\n\n::: details [**How do I create multiple paragraphs?**]\n\nParagraphs are marked by opening (`<p>`) and closing (`</p>`) tags as well. To create more than one paragraph you will want multiple sets of opening and closing `<p>` tags. For example\n\n        <p>\n            This is a paragraph.\n        </p>\n        <p>\n            This is another paragraph.\n        </p>\n\n:::\n\n::: details [**What are headings?**]\nHeadings are the different sized section titles throughout a web page. Headings add structure to your web page by breaking it up so it's easier for a user to read.\n:::\n\n::: details [**How do I make different sized headings?**]\nHeadings come in 6 different sizes. So far you have primarily used the biggest one `<h1>`. The number 1 in the HTML tag designates that this is the biggest heading. The smallest heading is `<h6>`. You can also try the `<h2>`, `<h3>`, `<h4>`, and `<h5>` tags which get smaller as the number gets larger.\n:::\n\n::: details [**What is HTML?**]\nHTML stands for Hypertext Markup Language. HTML is used to add structure to the content of a web page. HTML uses tags to specify where certain structures start and end. These tags are sets of characters not found in the English language so that the content and structure can be differentiated. \n:::\n\n::: details [**What is an HTML element?**]\nAn HTML element is a piece of a website that is marked by a start tag and sometimes closed with an end tag. The element also includes the content inside the tags. For example: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n:::\n\n::: details [**What is an HTML tag?**]\n\nAn HTML tag is the special set of characters that tells the machine where the start or end of an HTML element is and what type it is.\n\n:::\n\n</div>\n\nThe author of this page added in a lot of content, but did not think about structure.  All of the text is mashed together.\n\nDo This:\n\n-   Look through the content with your partner and decide what you think the best structure should be.\n-   Use your heading and paragraph tags to code the structure into the page."
  },
  "https://studio.code.org/s/csd2-2021/lessons/3/levels/9": {
    "dsls": {
      "description": "Here are some extra HTML codes to try out, and a Free Play area to use them in.",
      "display_name": "HTML Headings"
    },
    "sublevels": {
      "CSD Web Headings line break_2021": {
        "display_name": "Extra Code: Line Break",
        "bubble_choice_description": "Learn how to make new lines without starting a new paragraph.  You can use this code to add poems or lists to your page.",
        "long_instructions": "# Extra Code: Line Break\r\n\r\nIn some situations, like a poem or a list, you'll want to start a new line inside the same paragraph, like you might do in poetry.  You can use the line break `<br>` tag for this.\r\n\r\n# Do This\r\n* Read the HTML and look for where the line break `<br>` code is used to separate the lines in the poem.\r\n* Add two more line breaks to separate out the other lines in the poem.\r\n\r\n**Tip:** The `<br>` tag is useful for writing addresses or poems.\r\n\r\n**Note:** Use the `<br>` tag to enter line breaks, not to separate paragraphs. Always separate each paragraph with its own set of `<p>` and `</p>` tags!"
      },
      "CSD Web Headings hr_2021": {
        "display_name": "Extra Code: Horizontal Rule",
        "bubble_choice_description": "Learn the code for making a horizontal rule and practice using it.",
        "long_instructions": "# Extra Code: Horizontal Rule\r\n\r\nIn some situations, you'll want to insert a horizontal line, or rule, to break up themes in your page. You can use the horizontal rule `<hr>` tag for this.\r\n\r\n# Do This\r\n* Read the HTML and look for where the `<hr>` code is used to add a horizontal rule in the web page.\r\n* Add more horizontal rules to break up the page by theme.\r\n\r\n"
      },
      "CSD Web Headings Special Character 1_2021": {
        "display_name": "Extra Code: Special Character \"<\"",
        "bubble_choice_description": "Learn the code for the special character \"<\" and practice using it.",
        "long_instructions": "# Extra Code: Special Character \"<\"\r\n\r\nAs you have learned, the character `<` is used for tags. If we want the character to show up as < in a paragraph, we need to use the special code `&lt;`.\r\n\r\n# Do This\r\n* Read the HTML and look for where the `&lt;` code is used.\r\n* Use `&lt;` to add a less than sign \"<\" and \"3\" wherever you see the word \"heart\" to make the page more fun!"
      },
      "CSD Web Headings Special Character 2_2021": {
        "display_name": "Extra Code: Special Character \">\"",
        "bubble_choice_description": "Learn the code for the special character \">\" and practice using it.",
        "long_instructions": "# Extra Code: Special Character \">\"\r\n\r\nAs you have learned, the character `>` is used to close tags. If these symbols are also in your text, the browser might mix them with tags. To avoid this, we should use the special code `&gt;` anywhere we want \">\" to show up on a web page.\r\n<br> Your teacher is making an online worksheet to teach younger students how to use the greater than sign in math and needs your help adding the proper sign.\r\n\r\n# Do This\r\n* Read the HTML and look for where the `&gt;` code is already used twice.\r\n* Use the special code to add \">\" where needed to complete the teacher's worksheet."
      },
      "CSD Web Headings Special Character 3_2021": {
        "display_name": "Extra Code: Special Character \"&\"",
        "bubble_choice_description": "Learn the code for the special character \"&\" and practice using it.",
        "long_instructions": "# Extra Code: Special Character \"&\"\r\n\r\nThe ampersand character (**&**) can cause errors in your HTML code because it is actually used for other special characters like less than symbols (**<** is encoded as `&lt;`), and double quotation marks (**\"** is encoded as`&quot`). \r\n\r\nTo use the **&** character in a paragraph correctly, you need the special code `&amp;`.\r\n*Yes, you need an ampersand to encode an ampersand!*\r\n<br>In this activity, you'll make up a list some of your favorite things and practice using ampersands. \r\n\r\n# Do This\r\n* Read the HTML and look for where the `&amp;` code is used correctly.\r\n* Replace the ampersand that is causing pink code with the special code for the symbol.\r\n* Fill in the blank categories or add your own using the new code. Try to come up with answers that use the symbol!\r\n"
      },
      "CSD Web Headings Free Play_2021": {
        "display_name": "HTML Free Play",
        "bubble_choice_description": "Try using the new code you have learned to create your own HTML page. ",
        "long_instructions": "# Free Play\r\n\r\nNow that you have learned how to create HTML headings and code special characters, you can put your skills to the test! \r\n\r\n# Do This\r\n* Create your own HTML page using the new code.\r\n* Be creative and have fun with it!"
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/4/levels/1": {
    "dsls": {
      "description": "Here are some HTML tags that you may have seen in the past couple of lessons.  You can use them to review the tags you might want for your web page.",
      "display_name": "HTML Review"
    },
    "sublevels": {
      "CSD Web Dev bubble choice p tag_2021": {
        "display_name": "Paragraphs",
        "bubble_choice_description": "Add paragraph tags to separate the paragraphs",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**What is a paragraph element?**]\r\n\r\nParagraphs are marked by opening(`<p>`) and closing(`</p>`) tags. Paragraphs in HTML can be any length of text from one word to a bunch of sentences. Paragraphs group together sets of sentences and put some space between that group of text and the next group of text.\r\n\r\n:::\r\n\r\n::: details [**How do I make multiple paragraphs?**]\r\n\r\nHere's an example of several paragraph tags in a row. This code would be placed inside of the body of your web page.\r\n\r\n```\r\n<p>This is a paragraph. It has two sentences.</p>\r\n<p>This is another paragraph.</p>\r\n```\r\n\r\n:::\r\n</div>\r\n\r\n# Use Paragraph Tags\r\n\r\nThe `<p>` `</p>` tags or \"paragraph\" start and end tags are placed around text to indicate that it is part of a paragraph. Placing text between paragraph start and end tags lets the computer know that it should be treated differently, often just spacing it out from other text.\r\n\r\n# Do This\r\n\r\n* Use `<p>` tags to separate the content into different paragraphs."
      },
      "CSD Web Dev bubble choice p tag 2_2021": {
        "display_name": "Debug: Paragraph Tag",
        "bubble_choice_description": "Find the bugs caused by incorrect paragraph tags.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**What is a paragraph element?**]\r\n\r\nParagraphs are marked by opening(`<p>`) and closing(`</p>`) tags. Paragraphs in HTML can be any length of text from one word to a bunch of sentences. Paragraphs group together sets of sentences and put some space between that group of text and the next group of text.\r\n\r\n:::\r\n\r\n::: details [**How do I make multiple paragraphs?**]\r\n\r\nHere's an example of several paragraph tags in a row. This code would be placed inside of the body of your web page.\r\n\r\n```\r\n<p>This is a paragraph. It has two sentences.</p>\r\n<p>This is another paragraph.</p>\r\n```\r\n\r\n:::\r\n</div>\r\n\r\n# Use Paragraph Tags\r\n\r\nThe `<p>` `</p>` tags or \"paragraph\" start and end tags are placed around text to indicate that it is part of a paragraph. Placing text between paragraph start and end tags lets the computer know that it should be treated differently, often just spacing it out from other text.\r\n\r\n# Do This\r\n\r\n* Fix the code so that none of the tags turn pink."
      },
      "CSD Web Dev choice level p tag 3_2021": {
        "display_name": "Debug the missing paragraph",
        "bubble_choice_description": "Use your debugging skills to figure out why the paragraph has disappeared.",
        "long_instructions": "# Debug: Missing Paragraph\r\n\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML.  When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\nIt looks like the second paragraph is missing. Can you fix the bug? \r\n \r\n# Do this\r\n\r\n * Find and fix the problem that is causing the bug."
      },
      "CSD Web Dev choice level headings 1_2021": {
        "display_name": "Debug: Headings",
        "bubble_choice_description": "Fix the bugs caused by incorrect heading tags.",
        "long_instructions": "# Debug: Headings\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML. When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\nThere are a few issues with this page's headings. Can you fix them?\r\n\r\n# Do This\r\n- Fix all of the pink errors.\r\n- Adjust the heading tags to be the appropriate size, if necessary.\r\n"
      },
      "CSD Web Dev choice level headings 2_2021": {
        "display_name": "Add Larger Heading",
        "bubble_choice_description": "Add a large heading to the top of a web page.",
        "long_instructions": "# Add Larger Heading\r\n\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML. When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\nHere's a page about animals of the sea. Can you add a catchy, large heading and title it?\r\n \r\n# Do this\r\n * Add a larger heading at the top of the page."
      },
      "CSD Web Dev bubble choice br tag_2021": {
        "display_name": "Line Break",
        "bubble_choice_description": "Separate the lines of the haiku using the <br> tag.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n</div>\r\n\r\n# Line Break\r\n\r\nIn some situations, like a poem or a list, you'll want to start a new line inside the same paragraph, like you might do in poetry. You can use the line break `<br>` tag for this.\r\n\r\n**Tip**: The `<br>` tag is useful for writing addresses or poems. It does not need a closing tag!\r\n\r\n**Note**: Use the `<br>` tag to enter line breaks, not to separate paragraphs. Always separate each paragraph with its own set of `<p>` and `</p>` tags!\r\n\r\n# Do This\r\n\r\n* Separate each line using `<br>` tags."
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/4/levels/2": {
    "dsls": {
      "description": "Check out these new tags that will let you add lists to your web page.",
      "display_name": "HTML Lists"
    },
    "sublevels": {
      "CSD Web Dev choice level ul 1_2021": {
        "display_name": "Create bulleted list",
        "bubble_choice_description": "Create a list of unordered elements",
        "long_instructions": "# Unordered Lists\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What are the two types of lists?**]\r\nThere are two types of lists in HTML, ordered and unordered lists.\r\n\r\n:::\r\n\r\n::: details [**What is an unordered list?**]\r\n\r\nAn unordered list is just a set of bulleted items.\r\n<br /><br />An unordered list element has the tag `<ul>`. This is an abbreviation for <strong>U</strong>nordered <strong>L</strong>ist. Each item in the list is marked by a list item element `<li>`. This is an abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list item element is a child element, which means that it goes inside of its parent element, the unordered list (`<ul>`).\r\n\r\n:::\r\n\r\n\r\n::: details [**How do I make an unordered list?**]\r\n\r\nMaking an unordered list has two steps: making the list and adding the list items.  To make the unordered list, write the unordered list tags `<ul></ul>`.  Next, add your list items **inside** the unordered list tags.  To make each list item, use the list item tags `<li></li>` and write the list item inside the tags.\r\n<br /><br />\r\nIt can be helpful to indent your `<li>` tags so it's clear they are contained in the `<ul>` tag.\r\n\r\n:::\r\n\r\n\r\n\r\n</div>\r\n\r\nLook at how the given code creates an unordered list, then create your own list of desserts.\r\n\r\n# Do This\r\n\r\n* Look at how the `<ul>` and `<li>` tags are used to create an unordered list.\r\n* Use the `<ul>` and `<li>` tags to create your own list.\r\n\r\n::: details [**Show me another example of working code.**]\r\n\r\n<table border=\"1\">\r\n<tr>\r\n<td>Example</td>\r\n<td>Result</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```\r\n <ul>\r\n \t<li>Red </li>\r\n    <li>Green </li>\r\n    <li>Blue</li>\r\n </ul>\r\n```\r\n</td>\r\n<td><img src=\"https://images.code.org/25d4dfc9b6c448d0da305df66aa1dfb7-image-1473444368948.05.32 PM.png\" style=\"width:200px\"></td>\r\n</tr>\r\n</table>\r\n\r\n\r\n:::"
      },
      "CSD Web Dev choice level ol 1_2021": {
        "display_name": "Create ordered list",
        "bubble_choice_description": "Use the <ol> tag to create a numbered list",
        "long_instructions": "# Ordered Lists\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What are the two types of lists?**]\r\n There are two types of lists in HTML, ordered and unordered lists.\r\n:::\r\n\r\n::: details [**What is an ordered list?**]\r\n\r\nAn ordered list is a set of bulleted items which are numbered.\r\n<br /><br />\r\nAn ordered list element has the tag `<ol>` . This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist. Each item in the list is marked by a list item element `<li>`;. This is an abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list item element is a child element, which means that it goes inside of its parent element, the ordered list (`<ol>`).\r\n:::\r\n\r\n\r\n::: details [**How do I make an ordered list?**]\r\n\r\nMaking an ordered list has two steps: making the list and adding the list items.  To make the ordered list, write the ordered list tags `<ol></ol>`.  Next, add your list items **inside** the ordered list tags.  To make each list item, use the list item tags `<li></li>` and write the list item inside the tags.\r\n\r\nIt can be helpful to indent your `<li>` tags so it's clear they are contained in the `<ol>` tag.\r\n:::\r\n\r\n\r\n\r\n</div>\r\n\r\nAn ordered list is like an unordered (bulleted) list, but it has numbers. Just use the `<ol>` tag instead of `<ul>`.\r\n\r\n# Do This\r\n\r\n* Use the `<ol>` and `<li>` tags to structure this content into an ordered list.\r\n\r\n::: details [**Show me an example of working code.**]\r\n\r\n<table border=\"1\">\r\n<tr>\r\n<td>Example</td>\r\n<td>Result</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```\r\n<ol>\r\n  <li>Step 1 </li>\r\n  <li>Step 2 </li>\r\n  <li>Step 3 </li>\r\n</ol>\r\n```\r\n</td>\r\n<td><img src=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04 PM.png\" style=\"width:200px\"></td>\r\n</tr>\r\n</table>\r\n\r\n\r\n:::"
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/4/levels/3": {
    "long_instructions": "# Add HTML\n\nNext, you should add the HTML to your page.\n\n# Do This\n\n-   Add HTML to make the page you sketched in your project guide."
  },
  "https://studio.code.org/s/csd2-2021/lessons/4/levels/4": {
    "long_instructions": "# Review your Page\n\nNext, check to make sure your page has everything you want.\n\n# Do This\n\n-   Check to make sure all the **content** is there.\n-   Check that the HTML tags **structure** the content correctly.\n-   Make sure your code is organized, readable and free of bugs."
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/1": {
    "dsls": {
      "markdown": "# Sample Website\n\nClick the website below to discover some new types of styling for your pages.\n\n[![](https://images.code.org/4343b7c16ca18f6d2c003bf95d756f42-image-1585189253769.png)](https://codeprojects.org/g4ZEsGYTllMm_2Ien3QDtJ4wya6onDyRVzRjWiKNdLo/)\n"
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/2": {
    "display_name": "Exploration: Adding Style",
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**How do I switch between files?**]\n\nClick the name of the file you want to look at in the menu on the left side of the screen.\n\n:::\n\n</div>\n\n# Adding Style\n\nThis Web Lab project is using a new language to add style to the page. With a partner explore both the `index.html` and `style.css` files. Be ready to discuss the following questions.\n\n-   What changes is this new language making to the page?\n-   How is this language different from HTML?\n-   How are the `index.html` and `style.css` files connected?",
    "teacher_markdown": "Have students explore this level with a partner. Afterwards lead a short share out so that partners can share with the class their responses to the three questions in the instructions. The subsequent video should help reinforce what students discovered so there's no need to lead a lengthy debrief conversation."
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/3": {
    "display_name": "Video: Intro to CSS",
    "long_instructions": "## Questions to Consider\n\n-   How is the style of a web page different from structure?\n-   Why might you want your web page to have a certain style?",
    "teacher_markdown": "## Discussion Goals\n\n**Key Vocabulary**\n\n-   **CSS** - Cascading Style Sheets; a language used to describe how HTML elements should be styled\n-   **CSS Selector** - the part of a CSS rule-set that defines which HTML elements the style should be applied to\n\nStudents should understand that the structure of the page is there to organize the information in a logical way, but doesn't tell the computer how to display it.  So, for example, the structure could include different headings and paragraphs, but would say nothing about the color of text or how big it is displayed.  The style of the page is the specifics of its appearance.  Without a particular style, each web browser would decide how to display different web page elements on their own.\n\nStyles are important to allow web developers to decide exactly how a web page looks on the screen.  Because styles are separate from structure and content, web developers can change the style of an entire page very easily, without having to make any changes to the structure and content of the web page.  This means that it's very easy for web pages to have an individual look and feel that is unified across the entire page.\n\n**Images in the Video**\n\nAround the 40 second mark, the video briefly mentions that students have learned how to add images to their website. In a previous version of the curriculum when this video was originally recorded, students learned images before learning CSS. In the current version of the curriculum, students haven't learned how to add images to their webpages (yet). It's a small moment in the video, but if students ask about it, use the moment to build excitement since students will be learning about images in just a few lessons!"
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/4": {
    "long_instructions": "<div class=\"no-pullthrough\" \n style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What colors can I use in CSS?**]\nCSS includes most common color names (red, blue, green, etc.), and many uncommon ones.  You can see a full list of CSS color names at <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  You can still use colors that are not included in the named list, but you will need to use their RGB values.  You can read more about using colors in CSS at <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\n:::\n\n::: details [**How does the code work?**]\n\nHere is the code that is making the `h1` heading red:\n\n    h1 {\n      color: red;\n    }\n\n-   `h1` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces.\n-   `color: red;` is the rule that makes the text inside the `h1` tags red.\n    -   `color` is the _property_.  It explains what the rule is about, in this case the text color.\n    -   `red` is the _value_.  It explains how the rule should be applied, in this case making the text red.\n\n:::\n\n::: details [**Why do I need all the punctuation?**]\n\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the style sheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\n\n:::\n::: details [**What is a style sheet?**]\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n\n:::\n\n::: details [**What is CSS?**]\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n:::\n\n</div>\n\n# CSS and Text Color\n\nThis HTML file uses a style sheet (\"style.css\") to give the page a particular style.  The style sheet contains information about what each of the HTML elements should look like.\n\n# Do this\n\n-   Find the code in the style sheet (click on \"style.css\" in the files list) that is making the h1 heading red.\n-   Change the code for the color of the h1 heading from `red` to a different color."
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/5": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What colors can I use in CSS?**]\nCSS includes most common color names (red, blue, green, etc.), and many uncommon ones.  You can see a full list of CSS color names at <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>.  You can still use colors that are not included in the named list, but you will need to use their RGB values.  You can read more about using colors in CSS at <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n:::\n::: details [**How does the code work?**]\n\nHere is the code that is making the `h1` header red:\n\n    h1 {\n      color: red;\n    }\n\n-   `h1` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces.\n-   `color: red;` is the rule that makes the text inside the `h1` tags red.\n    -   `color` is the _property_.  It explains what the rule is about, in this case the text color.\n    -   `red` is the _value_.  It explains how the rule should be applied, in this case making the text red.\n\n:::\n::: details [**How do I make a new rule-set?**]\n\nTo make a new rule set, you'll need a selector and a list of rules.  The selector is the name of the tag you want the rules to be applied to.  The rules are a list of property and value pairs.  You'll also need to pay careful attention to the punctuation in the rule set.  Look at the code below for an example of how the code should look.  You'll need to change the specifics for your page.\n\n    h1 {\n      color: red;\n    }\n\n-   `h1` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces.\n-   `color: red;` is the rule that makes the text inside the `h1` tags red.\n    -   `color` is the _property_.  It explains what the rule is about, in this case the text color.\n    -   `red` is the _value_.  It explains how the rule should be applied, in this case making the text red.\n\n:::\n::: details [**Why do I need all the punctuation?**]\n\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the style sheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\n\n:::\n::: details [**What is a style sheet?**]\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n\n:::\n::: details [**What is CSS?**]\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n:::\n\n</div>\n\n# Making a new CSS rule-set\n\nThe block of code that gives rules for a particular tag is called a _rule-set_.  You can make a new rule set by copying the pattern you see in the rule-set for the `h1` tag.\n\n# Do this\n\n-   Find the CSS rule-set in the style sheet that determines the styles for the `h1` tag.\n-   Using the same pattern, write a new CSS rule-set that will determine the style for the `h3` tag.\n-   Add code to set a different color for the `h3` tags."
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/6": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**How does the code work?**]\n\nHere is the code that is controlling the paragraph text size:\n\n    p {\n      font-size: 14px;\n    }\n\n-   `p` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces. The `p` stands for paragraph.\n-   `font-size: 14px;` is the rule that makes the text inside the `p` tags a particular size.\n    -   `font-size` is the _property_.  It explains what the rule is about, in this case the text size.\n    -   `14px` is the _value_.  It explains how the rule should be applied, in this case making the text 14 pixels big.\n\n:::\n::: details [**What does `px` mean / What is a pixel?**]\n\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\n\n:::\n::: details [**Why do I need all the punctuation?**]\n\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the style sheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\n\n:::\n::: details [**What is a style sheet?**]\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n\n:::\n::: details [**What is CSS?**]\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n:::\n\n</div>\n\n# Changing text size\n\nYou can control other things besides colors by using other properties.\n\n# Do This\n\n-   Find the CSS rule-set in the style sheet that determines the style for the paragraph tag.\n-   Change the text size of the paragraphs and the headings."
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/7": {
    "display_name": "Video: Intro to CSS Part 2",
    "long_instructions": "## Question to Consider\n\n-   How does the web page know what stylesheet it should be using?",
    "teacher_markdown": "## Discussion Goals\n\nMake sure all the students understand how to link to their stylesheet from each web page."
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/8": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**What is a style sheet?**]\n\nA style sheet is a document that controls how a web page will appear. External style sheets are separate files that are linked to the HTML page. [Click Here to learn more about style sheets][0].\n\n:::\n\n::: details [**What is CSS?**]\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n:::\n\n::: details [**How do I create a new style sheet?**]\nTo create a new style sheet, click on the \"Add CSS\" button above the code area.\n:::\n\n::: details [**What should I name my style sheet?**]\nYou can name your style sheet anything, but it's better to choose a relevant name, such as \"style.css\" or \"aboutmestyles.css\" so that it's clear what the file is.  Your file should always end in the \".css\" extension.\n:::\n\n::: details [**How do I rename a file?**]\nTo rename a file, you can right click (or control click) on the file name and choose the \"Rename\" option.  This will allow you to type in a new file name.  Clicking on a file name after it is already highlighted will also allow you to rename the file.\n:::\n\n::: details [**How do I link a style sheet to a web page?**]\n\nTo link a style sheet to a web page, open up the code for the web page.  Inside the head tag, add the following code `<link rel=\"stylesheet\" href=\"style.css\">`.  Then change \"style.css\" to the name of your style sheet.\n\n:::\n\n</div>\n\n# Adding a Style Sheet\n\nThis developer has been working on some style for the page, but has forgotten to add the stylesheet so none of them work!\n\n# Do This\n\n-   Inside the HTML page, add the code that will link the style sheet to the web page: `<link rel=\"stylesheet\" href=\"style.css\">`\n\n<img src=\"https://images.code.org/8547566ed80fc36c7184d1bf16578e99-image-1636648304895.png\" style=\" max-width:500px\">\n\n-   Verify that the website updates to include new colors and fonts from the `style.css` file"
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/9": {
    "dsls": {
      "description": "Try out your new skills on these different challenges!",
      "display_name": "Styling Text with CSS"
    },
    "sublevels": {
      "CSD Web Headings Forgot Dash in Font Size_2021": {
        "display_name": "Debug the font size",
        "bubble_choice_description": "Use your debugging skills to figure out why the font size isn't changing.",
        "long_instructions": "# Debug: Wrong Font Size\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML.  When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\nSomeone has submitted a bug report on this web page.  Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nParagraph font size to be 24px | Paragraph font is the default size\r\n \r\n # Do this\r\n * Find and fix the problem that is causing the bug."
      },
      "CSD Web Headings Missing Paragraph Tag_2021": {
        "display_name": "Debug the missing paragraph style",
        "bubble_choice_description": "Use your debugging skills to figure out why the paragraph style is not being applied.",
        "long_instructions": "# Debug: Missing Paragraph Style\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML.  When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nParagraph color is gray| Paragraph color is black\r\n \r\n # Do this\r\n * Find and fix the problem that is causing the bug.\r\n"
      },
      "CSD Web Headings Wrong Tag in Rule Set_2021": {
        "display_name": "Debug the missing heading style",
        "bubble_choice_description": "Use your debugging skills to figure out why the heading style is not being applied.",
        "long_instructions": "# Debug: Missing Heading Style\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML.  When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nHeading color is green | Heading color is black\r\n \r\n # Do this\r\n * Find and fix the problem that is causing the bug\r\n\r\n"
      },
      "CSD Web Headings Stylesheet Not Linked_2021": {
        "display_name": "Debug the missing styles",
        "bubble_choice_description": "Use your debugging skills to figure out why none of the styles are being applied.",
        "long_instructions": "# Debug: Missing Styles\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a bug?**]\r\nBugs are mistakes in code which causes it not to work as planned.\r\n:::\r\n\r\n\r\n::: details [**What is debugging?**]\r\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \r\n:::\r\n\r\n\r\n::: details [**What are some examples of bugs?**]\r\n\r\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why does the code sometimes turn pink?**]\r\n\r\nWeb Lab is programmed to automatically detect some mistakes in HTML.  When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\r\n\r\n:::\r\n\r\n::: details [**Why does HTML seem to work even when it's broken?**]\r\n\r\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\r\n\r\n:::\r\n</div>\r\n\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nHeading 1 color is blue | Heading 1 color is black\r\nHeading 2 color is green | Heading 2 color is black\r\nParagraph font is 12px | Paragraph font is default size\r\n \r\n # Do this\r\n * Find and fix the problem that is causing the bug"
      },
      "CSD Web Headings Add Heading Rule_2021": {
        "display_name": "Add a heading rule-set",
        "bubble_choice_description": "Add a rule-set for the heading of this article.",
        "long_instructions": "# Add Heading Rule\r\nHere is an opportunity to be creative and customize the heading.\r\n\r\n \r\n # Do this\r\n * Add a rule-set for the heading."
      },
      "CSD Web Headings Add Paragraph Rule_2021": {
        "display_name": "Add a paragraph rule-set",
        "bubble_choice_description": "Add a rule-set for the paragraph of this ad.",
        "long_instructions": "# Add Paragraph Rule\r\nHere is an opportunity to be creative and customize the paragraph.\r\n\r\n \r\n # Do this\r\n * Add a rule-set for the paragraph.\r\n"
      },
      "CSD Web Headings Add Style Sheet_2021": {
        "display_name": "Add a style sheet",
        "bubble_choice_description": "Add a style sheet and rule-sets to this article.",
        "long_instructions": "# Add Style Sheet\r\nHere is an opportunity to be creative and practice everything you have learned about style.\r\n\r\n \r\n # Do this\r\n * Add a style sheet and rule-sets.\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/10": {
    "display_name": "Add a style sheet",
    "bubble_choice_description": "Add a style sheet and rule-sets to this article.",
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**What is a style sheet?**]\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n:::\n\n::: details [**What is CSS?**]\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n:::\n\n::: details [**How do I create a new style sheet?**]\nTo create a new style sheet, click on the \"Add CSS\" button above the code area.\n:::\n\n::: details [**What should I name my style sheet?**]\nYou can name your style sheet anything, but it's better to choose a relevant name, such as \"style.css\" or \"aboutmestyles.css\" so that it's clear what the file is.  Your file should always end in the \".css\" extension.\n:::\n\n::: details [**How do I rename a file?**]\nTo rename a file, you can right click (or control click) on the file name and choose the \"Rename\" option.  This will allow you to type in a new file name.  Clicking on a file name after it is already highlighted will also allow you to rename the file.\n:::\n\n::: details [**How do I add a style sheet to a web page?**]\n\nTo add a style sheet to a web page, open up the code for the web page.  Inside the head tag, add the following code `<link rel=\"stylesheet\" href=\"style.css\">`.  Then change \"style.css\" to the name of your style sheet.\n\n:::\n\n</div>\n\n# Style this page!\n\nHere is an opportunity to be creative and have some fun with styles.\n\n# Do this\n\n-   Link the stylesheet to the web page.\n-   Make the paragraph text a different size.\n-   Make the paragraph text a different color."
  },
  "https://studio.code.org/s/csd2-2021/lessons/6/levels/11": {
    "dsls": {
      "description": "There are lots of different ways to style text.  Use the challenges below to get new ideas for your web page.",
      "display_name": "Challenges and Extra Code"
    },
    "sublevels": {
      "CSD U2 text style font family_2021": {
        "display_name": "Extra Code: Font Family",
        "bubble_choice_description": "Learn to use different font styles.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**How does the code work?**]\r\n\r\nHere is the code that is controlling the paragraph font:\r\n\r\n```\r\np {\r\n  font-family: cursive;\r\n}\r\n```\r\n\r\n* `p` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces. The `p` stands for paragraph.\r\n* `font-family: cursive;` is the rule that makes the text inside the `p` tags a particular font.\r\n  * `font-family` is the _property_.  It explains what the rule is about, in this case the font.\r\n  * `cursive` is the _value_.  It explains how the rule should be applied, in this case making the text cursive.\r\n\r\n:::\r\n\r\n::: details [**What are the possible values for font family?**]\r\n\r\nYou can choose between \"serif\", \"sans-serif\", \"cursive\", \"fantasy\", and \"monospace\".  You can also try more specific fonts as described in <a href=\"http://www.w3schools.com/cssref/css_websafe_fonts.asp\" target=\"_new\">W3Schools - CSS Web Safe Font Combinations</a>\r\n\r\n:::\r\n\r\n::: details [**Why do I need all the punctuation?**]\r\n\r\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the stylesheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\r\n\r\n:::\r\n\r\n::: details [**What is a stylesheet?**]\r\n\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n\r\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n\r\n:::\r\n</div>\r\n\r\n# Changing the Font\r\n\r\n* Find the CSS rule-set in the style sheet that determines the style for the paragraph tag.\r\n* Change the font family and choose which one you like the best.\r\n  * Choose from \"serif\", \"sans-serif\", \"cursive\", \"fantasy\", and \"monospace\"\r\n* Add a font family rule for the h1 or h3 tags.",
        "teacher_markdown": "## Note on fonts and font families\r\n\r\nFor a web browser to display a font, the font **must** be available on the device the web browser is running on.  There's no guarantee that any device has a particular font, so it's much safer to use font **families**, which allow for many different fonts that have the same general look at feel.\r\n\r\nIf students want to specify an exact font, they'll need to use a font from the web, so the browser can download that specific font to use when rendering the page.  More information on these fonts can be found at [Google Fonts](https://fonts.google.com/) and [W3Schools](https://www.w3schools.com/Css/css3_fonts.asp)."
      },
      "CSD U2 text style decoration_2021": {
        "display_name": "Extra Code: Underlining",
        "bubble_choice_description": "Put lines under, over, or through your text.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**How does the code work?**]\r\nHere is the code that makes the `h1` elements underlined:\r\n\r\n```\r\nh1 {\r\n  text-decoration: underline;\r\n}\r\n```\r\n\r\n* `h1` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces. The `p` stands for paragraph.\r\n* `text-decoration: underline;` is the rule that makes the text inside the `h1` tag underlined.\r\n  * `text-decoration` is the _property_.  It explains what the rule is about, in this case where the line goes.\r\n  * `underline` is the _value_.  It explains how the rule should be applied, in this case making the test underlined.\r\n:::\r\n\r\n::: details [**What are the possible values for text decoration?**]\r\nYou can choose between \"underline\", \"overline\", and \"line-through\".  You can read more about the text-decoration property at <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\" target=\"_new\">W3Schools - CSS text-decoration Property</a>\r\n:::\r\n\r\n::: details [**Why do I need all the punctuation?**]\r\n\r\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the stylesheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\r\n\r\n:::\r\n::: details [**What is a stylesheet?**]\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n\r\n\r\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Underlining\r\n\r\n* Find the code in the style sheet that makes the h4 tag double underlined.\r\n* Change the text decoration to something else.\r\n  * Choose from \"underline\", \"overline\", and \"line-through\"\r\n* Add a text decoration rule for the paragraph, h1, h2 or h3 tag.\r\n"
      },
      "CSD U2 text style text align_2021": {
        "display_name": "Extra Code: Align text",
        "bubble_choice_description": "Align text to the right or center of the page.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**How does the code work?**]\r\n\r\nHere is the code that is controlling the paragraph text alignment:\r\n\r\n```\r\np {\r\n  text-align: left;\r\n}\r\n```\r\n\r\n* `p` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces. The `p` stands for paragraph.\r\n* `text-align: left;` is the rule that makes the text inside the `p` tags align to the left side of the paragraph.\r\n  * `text-align` is the _property_.  It explains what the rule is about, in this case the text alignment.\r\n  * `left` is the _value_.  It explains how the rule should be applied, in this case making the text align to the left side of the paragraph.\r\n\r\n:::\r\n\r\n::: details [**Why doesn't `text-align: left;` do anything?**]\r\n\r\nMost properties have default values.  The default values are the styles that an element will have automatically, before you add your style sheet.  The default value for `text-align` is `left`, so it doesn't change from how it already looked.\r\n\r\n:::\r\n\r\n::: details [**What are the possible values for text align?**]\r\n\r\nYou can choose between \"left\", \"right\", and \"center\".  You can read more about the text-align property at <a href=\"http://www.w3schools.com/cssref/pr_text_text-align.asp\" target=\"_new\">W3Schools - CSS text-align Property</a>\r\n\r\n:::\r\n\r\n::: details [**Why do I need all the punctuation?**]\r\n\r\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the style sheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\r\n\r\n:::\r\n::: details [**What is a style sheet?**]\r\n\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n<br/><br/>\r\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n\r\n:::\r\n</div>\r\n\r\n# Text Alignment\r\n\r\nThe `text-align` property sets the horizontal (side to side) position of the text within each line.\r\n\r\n* Find the CSS code that is making the \"From Wikipedia\" in the `h6` tag align to the right.\r\n* Change the `h1` tag so that it is aligned to the center of the page.\r\n* Change the alignment of the paragraph tag, too."
      },
      "CSD U2 text style letter spacing_2021": {
        "display_name": "Extra Code: Letter Spacing",
        "bubble_choice_description": "Space letters further out and closer to each other.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**How does the code work?**]\r\n\r\nHere is the code that is controlling the paragraph text alignment:\r\n\r\n```\r\np {\r\n  letter-spacing: 5px;\r\n}\r\n```\r\n\r\n* `p` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces. The `p` stands for paragraph.\r\n* `letter-spacing: 5px;` is the rule that makes the characters inside the `p` tags be spaced out by 5 pixels each.\r\n  * `letter-spacing` is the _property_.  It explains what the rule is about, in this case the space between each character.\r\n  * `5px` is the _value_.  It explains how the rule should be applied, in this case making each character spaced 5 pixels from each other.\r\n\r\n:::\r\n\r\n::: details [**What does `px` mean / What is a pixel?**]\r\n\r\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why doesn't `letter-spacing: 0px;` do anything?**]\r\n\r\nMost properties have default values.  The default values are the styles that an element will have automatically, before you add your style sheet.  The default value for `letter-spacing` is `0`, so it doesn't change from how it already looked.\r\n\r\n:::\r\n\r\n::: details [**What are the possible values for letter spacing?**]\r\n\r\nYou can choose between negative and positive numbers. Negative numbers space the letters closer to each other while positive numbers space the letters out further.\r\n\r\n:::\r\n\r\n::: details [**Why do I need all the punctuation?**]\r\n\r\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the style sheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\r\n\r\n:::\r\n\r\n::: details [**What is a style sheet?**]\r\n\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n<br/><br/>\r\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n:::\r\n</div>\r\n\r\n# Letter Spacing\r\n\r\nThe `letter-spacing` property sets the space between each letter between text elements.\r\n\r\n* Find the CSS code that is making the letters in \"Orchids!\" in the `h1` tag be spaced out more than normal.\r\n* Change the `h2` tag so that the letters are spaced out by two pixels.\r\n* Change the letter spacings of the paragraph and `h3` tags as well."
      },
      "CSD U2 text style text shadow_2021": {
        "display_name": "Extra Code: Text Shadow",
        "bubble_choice_description": "Learn how to give your text a shadow",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**How does the code work?**]\r\n\r\nHere is the code that is controlling the text shadow:\r\n\r\n```\r\np {\r\n  text-shadow: 5px 5px blue;\r\n}\r\n```\r\n\r\n\r\nhe `text-shadow` property gives text a \"shadow\", meaning that it ill create a duplicate of the text but slightly shifted to make it look like a shadow. The first value is how much the shadow will be shifted horizontal and the second value will be how much the shadow will be shifted vertically. And if you want, you can change the color along with other properties. Read more about it at <a href=\"https://www.w3schools.com/cssref/css3_pr_text-shadow.asp\" target=\"_new\">W3Schools - CSS text-shadow Property</a>\r\n\r\n:::\r\n\r\n::: details [**What does `px` mean / What is a pixel?**]\r\n\r\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\r\n\r\n\r\n:::\r\n\r\n::: details [**Why doesn't <code>text-shadow: 0px 0px;</code> do anything?**]\r\n\r\nMost properties have default values.  The default values are the styles that an element will have automatically, before you add your style sheet.  The default value for `text-shadow` is `0px 0px`, so it doesn't change from how it already looked.\r\n\r\n:::\r\n\r\n::: details [**What are the possible values for text shadow??**]\r\n\r\nYou can choose between negative and positive numbers. Negative numbers move the shadow either left or up while positive numbers move the shadow to the right or down.\r\n\r\n:::\r\n\r\n::: details [**Why do I need all the punctuation?**]\r\n\r\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the style sheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\r\n\r\n:::\r\n\r\n::: details [**What is a style sheet?**]\r\n\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n<br/><br/>\r\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n:::\r\n</div>\r\n\r\n# Text Shadow\r\n\r\nThe `text-shadow` property sets a shadow for the text elements.\r\n\r\n* Find the CSS code that is giving the letters in \"Stradivarius Violins\" a shadow in the `h1` tag.\r\n* Give the `h2` tag a shadow spaced two pixels to the right and up from the original text.\r\n* Give a text shadow to other tags as well.\r\n"
      },
      "CSD U2 text style freeplay_2021": {
        "display_name": "Free Play",
        "bubble_choice_description": "Make a web page using the new code.",
        "long_instructions": "# Free Play\r\n\r\nUse your new knowledge to create a new page with as many styles as possible."
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/7/levels/1": {
    "dsls": {
      "description": "Here are some CSS properties that you may have seen in the past couple of lessons.  You can use them to review the styles you might want for your web page.",
      "display_name": "CSS Review"
    },
    "sublevels": {
      "CSD Web Dev choice level add rule_2021": {
        "display_name": "Add a heading rule-set",
        "bubble_choice_description": "Add a rule-set for the heading of this article.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a style sheet?**]\r\n\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n\r\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n\r\n:::\r\n\r\n::: details [**How do I create a new style sheet?**]\r\nTo create a new style sheet, click on the \"Add CSS\" button above the code area.\r\n:::\r\n\r\n::: details [**What should I name my style sheet?**]\r\nYou can name your style sheet anything, but it's better to choose a relevant name, such as \"style.css\" or \"aboutmestyles.css\" so that it's clear what the file is.  Your file should always end in the \".css\" extension.\r\n:::\r\n\r\n::: details [**How do I rename a file?**]\r\nTo rename a file, you can right click (or control click) on the file name and choose the \"Rename\" option.  This will allow you to type in a new file name.  Clicking on a file name after it is already highlighted will also allow you to rename the file.\r\n:::\r\n\r\n::: details [**How do I link a style sheet to a web page?**]\r\n\r\nTo link a style sheet to a web page, open up the code for the web page.  Inside the head tag, add the following code `<link rel=\"stylesheet\" href=\"style.css\">`.  Then change \"style.css\" to the name of your style sheet.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Add Heading Rule\r\nHere is an opportunity to be creative and customize the heading.\r\n\r\n \r\n # Do this\r\n * Add a rule-set for the heading."
      },
      "CSD Web Dev choice level color_2021": {
        "display_name": "Change text color",
        "bubble_choice_description": "Use CSS to change the color of the headings and paragraphs",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a style sheet?**]\r\n\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n\r\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n\r\n:::\r\n\r\n::: details [**How do I create a new style sheet?**]\r\nTo create a new style sheet, click on the \"Add CSS\" button above the code area.\r\n:::\r\n\r\n::: details [**What should I name my style sheet?**]\r\nYou can name your style sheet anything, but it's better to choose a relevant name, such as \"style.css\" or \"aboutmestyles.css\" so that it's clear what the file is.  Your file should always end in the \".css\" extension.\r\n:::\r\n\r\n::: details [**How do I rename a file?**]\r\nTo rename a file, you can right click (or control click) on the file name and choose the \"Rename\" option.  This will allow you to type in a new file name.  Clicking on a file name after it is already highlighted will also allow you to rename the file.\r\n:::\r\n\r\n::: details [**How do I link a style sheet to a web page?**]\r\n\r\nTo link a style sheet to a web page, open up the code for the web page.  Inside the head tag, add the following code `<link rel=\"stylesheet\" href=\"style.css\">`.  Then change \"style.css\" to the name of your style sheet.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Change Text Color\r\n\r\nChange the color of both the heading and the text.\r\n \r\n# Do this\r\n* Add a rule-set for the heading to make it a different color.\r\n* Add a rule-set for the paragraphs to make them another color.\r\n"
      },
      "CSD Web Dev choice level text-align_2021": {
        "display_name": "Align text",
        "bubble_choice_description": "Align the authors names to the right",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a style sheet?**]\r\n\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n\r\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n\r\n:::\r\n\r\n::: details [**How do I create a new style sheet?**]\r\nTo create a new style sheet, click on the \"Add CSS\" button above the code area.\r\n:::\r\n\r\n::: details [**What should I name my style sheet?**]\r\nYou can name your style sheet anything, but it's better to choose a relevant name, such as \"style.css\" or \"aboutmestyles.css\" so that it's clear what the file is.  Your file should always end in the \".css\" extension.\r\n:::\r\n\r\n::: details [**How do I rename a file?**]\r\nTo rename a file, you can right click (or control click) on the file name and choose the \"Rename\" option.  This will allow you to type in a new file name.  Clicking on a file name after it is already highlighted will also allow you to rename the file.\r\n:::\r\n\r\n::: details [**How do I link a style sheet to a web page?**]\r\n\r\nTo link a style sheet to a web page, open up the code for the web page.  Inside the head tag, add the following code `<link rel=\"stylesheet\" href=\"style.css\">`.  Then change \"style.css\" to the name of your style sheet.\r\n\r\n:::\r\n</div>\r\n\r\n# Align Text\r\n\r\nWe want the names of the authors to align to the right side of the page.\r\n \r\n# Do this\r\n* Figure out which tag holds the authors' names.\r\n* Add a rule-set for that tag to move it to the right side of the screen.\r\n\r\n<img src = \"https://images.code.org/bca0fa67b636689b10f8f8af0d6f80e5-image-1591386436072.46.30 PM.png\"  width=\"40%\" align=\"right\">"
      },
      "CSD Web Dev choice level font-size_2021": {
        "display_name": "Change font family",
        "bubble_choice_description": "Use CSS to change the font family of the headings and paragraphs",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a style sheet?**]\r\n\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n\r\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n\r\n:::\r\n\r\n::: details [**How do I create a new style sheet?**]\r\nTo create a new style sheet, click on the \"Add CSS\" button above the code area.\r\n:::\r\n\r\n::: details [**What should I name my style sheet?**]\r\nYou can name your style sheet anything, but it's better to choose a relevant name, such as \"style.css\" or \"aboutmestyles.css\" so that it's clear what the file is.  Your file should always end in the \".css\" extension.\r\n:::\r\n\r\n::: details [**How do I rename a file?**]\r\nTo rename a file, you can right click (or control click) on the file name and choose the \"Rename\" option.  This will allow you to type in a new file name.  Clicking on a file name after it is already highlighted will also allow you to rename the file.\r\n:::\r\n\r\n::: details [**How do I link a style sheet to a web page?**]\r\n\r\nTo link a style sheet to a web page, open up the code for the web page.  Inside the head tag, add the following code `<link rel=\"stylesheet\" href=\"style.css\">`.  Then change \"style.css\" to the name of your style sheet.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Change Font Family\r\n\r\nChange the font family of both the heading and the text. There are several font families including `cursive`, `fantasy`, `serif`, and `monospace`.\r\n\r\n# Do this\r\n* Add a rule-set for one of the heading types to make it a different font family.\r\n* Add a rule-set for the paragraphs to make them another font family."
      },
      "CSD Web Dev choice level font-family_2021": {
        "display_name": "Change font size",
        "bubble_choice_description": "Change the size of the fonts for the paragraphs and headings using CSS",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What is a style sheet?**]\r\n\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n\r\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n\r\n:::\r\n\r\n::: details [**How do I create a new style sheet?**]\r\nTo create a new style sheet, click on the \"Add CSS\" button above the code area.\r\n:::\r\n\r\n::: details [**What should I name my style sheet?**]\r\nYou can name your style sheet anything, but it's better to choose a relevant name, such as \"style.css\" or \"aboutmestyles.css\" so that it's clear what the file is.  Your file should always end in the \".css\" extension.\r\n:::\r\n\r\n::: details [**How do I rename a file?**]\r\nTo rename a file, you can right click (or control click) on the file name and choose the \"Rename\" option.  This will allow you to type in a new file name.  Clicking on a file name after it is already highlighted will also allow you to rename the file.\r\n:::\r\n\r\n::: details [**How do I link a style sheet to a web page?**]\r\n\r\nTo link a style sheet to a web page, open up the code for the web page.  Inside the head tag, add the following code `<link rel=\"stylesheet\" href=\"style.css\">`.  Then change \"style.css\" to the name of your style sheet.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Change Font Size\r\n\r\nChange the font size of both the heading and the text. You can specify the font size in terms of `px` (e.g. `16px`).\r\n\r\n# Do this\r\n* Add a rule-set for the heading to make it a different font size.\r\n* Add a rule-set for the paragraphs to make them another font size."
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/7/levels/2": {
    "dsls": {
      "description": "Check out how you can get even more colors by using RGB codes.",
      "display_name": "RGB Colors"
    },
    "sublevels": {
      "CSD U2 RGB intro_2021": {
        "display_name": "Introduction to RGB",
        "bubble_choice_description": "Learn about RGB and how it can be used to make custom colors.",
        "long_instructions": "# RGB Colors\r\n\r\nAll colors, whether they have names or not, can be described by the level of red, green, and blue light it takes to make them.  This is called an RGB value (short for Red-Green-Blue).  You can use the widget on your left to try out different RGB values and see what colors they make.\r\n\r\n* Use the sliders to adjust the levels of red, green, and blue light.\r\n* For each of the colors below, match it to its RGB value.\r\n\r\nA) red: 216, green: 191, blue: 216 - rgb(216,191,216)\r\n\r\nB) red: 255, green: 239, blue: 213 - rgb(255,239,213)\r\n\r\nC) red: 250, green: 128, blue: 114 - rgb(250,128,114)\r\n\r\nD) red: 70, green: 130, blue: 180 - rgb(70, 130, 180)\r\n\r\nE) red: 107, green: 142, blue: 35 - rgb(107,142,35)\r\n\r\n\r\n<div style=\"font-size: 16px\">\r\n\r\n::: details [**Why do red and green make yellow?**]\r\n\r\nWhen you mix paint, red and green make brown, but RGB color mixing uses light instead of paint, so the colors mix differently.  RGB uses _additive color mixing_.  In additive color mixing, red and green make yellow, red and blue make magenta, and blue and green make cyan.  When you mix the three primary colors together (red, green, and blue), they make white.  You can read more at <a href=\"https://en.wikipedia.org/wiki/Additive_color\" target=\"_new\">Wikipedia - Additive Color</a>\r\n\r\n:::\r\n\r\n::: details [**How many colors can I make with RGB color mixing?**]\r\n\r\nYou can make over sixteen million different colors with RGB color mixing.\r\n\r\n:::\r\n</div>\r\n"
      },
      "CSD U2 rgb practice shades_2021": {
        "display_name": "Using RGB Colors",
        "bubble_choice_description": "Add RGB colors to a website.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How does the code work?**]\r\nFor the code to work, you need to both create a class and add elements to the class.\r\n\r\nThe class is created in the style sheet, with the following code.\r\n\r\n```\r\n.red0 {\r\n  color: rgb(128,0,0);\r\n}\r\n```\r\n\r\nThis code creates a class called `red0` and makes everything in the class our dark red, which has the RGB values of (128,0,0).\r\n\r\nThe code that adds a `p` element to the red0 class is `<p class=\"red0\">`.  The `class=\"red0\"` inside the opening tag adds everything inside the tag to the class.\r\n:::\r\n\r\n::: details [**What rules can be added to a class rule-set?**]\r\n\r\nA class rule-set can have the same rules as any other type of selector.  If a rule does not apply to the content of the class (for example, using `font-size` on an element with no text), then the computer will ignore that rule, but still use the rules that work.\r\n\r\n:::\r\n\r\n::: details [**Why does the selector have a period in front of it?**]\r\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\r\n:::\r\n\r\n::: details [**Why would a web developer use classes?**]\r\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\r\n:::\r\n\r\n::: details [**I used different RGB values, but mine work, too.**]\r\n\r\nBecause RGB creates millions of different colors, some are so similar that people have a hard time telling them apart.  That means that there are multiple RGB values that are close enough to work for our dark red color.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Using RGB\r\n\r\nYou can use RGB values to get the exact color you want\r\n\r\n# Do This\r\n* Find the CSS rule-set in the style sheet that gives the red words their style.\r\n* Update the styles for the green and blue words to try different colors using RGB codes.\r\n* Add any other rules you'd like for your page.\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/7/levels/3": {
    "long_instructions": "# Add HTML\n\nNext, you should add the HTML to your page.\n\n# Do This\n\n-   Add HTML to make the page you sketched in your project guide.",
    "teacher_markdown": "**New Style, New Project**: To give students opportunities to create a variety of projects and help emphasize their newfound CSS skills, this project is **not** linked to the previous HTML Mini-Project in Lesson 4. If students would like to build off of their previous work, they can go back and copy-and-paste their HTML Code into this project. Or, they can use this as an opportunity to build a completely new website to suit their personality."
  },
  "https://studio.code.org/s/csd2-2021/lessons/7/levels/4": {
    "long_instructions": "# Add CSS Styles\n\nNext, you should add the styles to your page.\n\n# Do This\n\n-   Add CSS properties to make the styles you described in your project guide."
  },
  "https://studio.code.org/s/csd2-2021/lessons/7/levels/5": {
    "long_instructions": "# Review your Page\n\nNext, check to make sure your page has everything you want.\n\n# Do This\n\n-   Check to make sure all the **content** is there.\n-   Check that the HTML tags **structure** the content correctly.\n-   Check that the CSS properties **style** the content correctly.\n-   Make sure your code is organized, readable and free of bugs."
  },
  "https://studio.code.org/s/csd2-2021/lessons/9/levels/1": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**How do I add images?**]\n\nThe `<img>` tag allows you to show images on your web page. <br><br>\n\nExample:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the \\<img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. <br><br>\n\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. <br><br>\n\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\n\n:::\n\n::: details [**Why does an image tag not have a closing tag?**]\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\n:::\n\n::: details [**What is an attribute?**]\n\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag.\n\nFor example \\<img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\n\n:::\n\n</div>\n\n# Images\n\nA Dog vs Cat web page has been started for you. The dog image has already been added to the below web page. \n\n# Do this\n\n-   Look at the code that made the dog image appear\n-   Use an image tag to add the `cat.jpeg` image to the page below the cat heading",
    "teacher_markdown": "Students may come across some image tags that include a slash at the end, like this: \n`<img src=\"imgURL.jpg\" alt=\"my image\" />`\n\nThese ending slashes are there to indicate that this tag is self-closing, but they are optional and have no effect on the web page."
  },
  "https://studio.code.org/s/csd2-2021/lessons/9/levels/2": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**How do I add images?**]\n\nThe `<img>` tag allows you to show images on your web page. \n\nExample:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \n\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \n\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\n\n:::\n\n::: details [**Why does an image tag not have a closing tag?**]\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\n:::\n\n::: details [**What is an attribute?**]\n\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag.\n\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\n\n:::\n\n</div>\n\n# Giving Credit\n\nWhen using someone else's image, you should give credit to the original creator (this is also called _attribution_). The easiest way to do this is to add text below the image that identifies the creator and website it came from. You may also add information about the publishing license.\n\n# Do this\n\n-   Add information about where the image came from and its license.\n\n*(This image was found at pixabay and was uploaded by the user \"Alexas\\_Fotos\", who used a \"free for commercial use\" and \"no attribution required\" license.)*",
    "teacher_markdown": "Because of the type of license used, students are not legally required to include attribution, but it is a good habit for them to get into when developing their websites."
  },
  "https://studio.code.org/s/csd2-2021/lessons/9/levels/3": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**How do I add images?**]\n\nThe `<img>` tag allows you to show images on your web page. \n\nExample:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \n\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \n\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\n:::\n\n::: details [**Why does an image tag not have a closing tag?**]\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\n:::\n\n::: details [**What is an attribute?**]\n\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \n\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\n\n:::\n\n</div>\n\n# The Details Matter\n\nThe `src` attribute needs to point to the _exact_ filename of the image you want to use. That means you need to pay attention to spelling, capitalization, and the file extension. Each of the three images on this page is broken because of an improper `src` attribute. \n\n# Do This\n\n-   Using the file menu for reference, fix each of the image tags.\n-   When you are finished, each image should display correctly in the webpage preview.\n\n_Note: Even though the images are not loading properly, our website is still showing descriptive text of what should be there because we used `alt` attributes. Cool!_"
  },
  "https://studio.code.org/s/csd2-2021/lessons/9/levels/4": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**How do I add images?**]\n\nThe `<img>` tag allows you to show images on your web page. <br><br>\n\nExample:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \n\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \n\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\n:::\n\n::: details [**Why does an image tag not have a closing tag?**]\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\n:::\n\n::: details [**What is an attribute?**]\n\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \n\nFor example `<img>` tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\n\n:::\n\n</div>\n\n# Choosing a Good Name\n\nIt's important for images to have good names, ones that are easy to understand and use characters that are good for links.  This project's image names have some problems.\n\n# Do This\n\n-   For each image, fix the name according to the following rules:\n    -   Avoid special characters such as `&`, `?`, `%`, `/`, `(`, etc.\n    -   Make sure the name has a specific meaning that helps you know what the image is.\n    -   Use dashes (`-`) or underscores (`_`) instead of spaces.\n    -   Keep the names as short as possible and still have a clear meaning.\n-   Choose your favorite image and add it to the web page.\n    -   Don't forget the attribution!\n\n| Image | Amphibian                       | Attribution                                                                              |\n| ----- | ------------------------------- | ---------------------------------------------------------------------------------------- |\n| [][0] |    **kani bushfrog**            | Rison Thumboor - Wikimedia Commons - CC-BY-SA                                            |\n| [][1] |    **paedophryne amauensis**    | Rittmeyer EN, Allison A, Gründler MC, Thompson DK, Austin CC - Wikimedia Commons - CC-BY |\n| [][2] |    **red eyed tree frog**       | Carey James Balboa - Wikimedia Commons - Public Domain                                   |\n| [][3] |    **fire salamander**          | Cristo Vlahos - Wikimedia Commons - CC-BY                                                |\n| [][4] |    **axolotl**                  | th1098 - Wikimedia Commons - CC-BY-SA                                                    |"
  },
  "https://studio.code.org/s/csd2-2021/lessons/9/levels/5": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**How do I add images?**]\n\nThe `<img>` tag allows you to show images on your web page. \n\nExample:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \n\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \n\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\n:::\n\n::: details [**Why does an image tag not have a closing tag?**]\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\n:::\n\n::: details [**What is an attribute?**]\n\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \n\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\n\n:::\n\n</div>\n\n# Uploading Images\n\nYou can upload images that you've found elsewhere using the **Add Image** button. Go find an image of a different type of pet that you like and download it to your computer (using right-click \"Save As\").\n\nOnce you have your images, click [][0] and upload the image from your computer into your project, where you can then use it in your page.\n\n# Do This\n\n-   Find an image you are allowed to use and upload it to this project.\n-   Make sure the file name follows your naming rules.\n-   Use the `<img>` tag to display the image(s) in your website.\n    -   Make sure to add an `alt` attribute!\n-   Add the attribution information below the image.",
    "teacher_markdown": "# Recommended Search Engines\n\nBecause we can't know which sites might be blocked in your district, we've avoided pointing students to a specific search engine. Not all search engines make it easy to set Creative Commons filters - some of the easiest include:\n\n-   [Creative Commons Search][0]\n-   [Google Image Advanced Search][1]\n-   [Wikimedia Commons][2]\n-   [Flickr Creative Commons][3]\n\nAs with any site with crowdsourced content, search engine results will change from day to day, and some of those results may be inappropriate for the classroom.  You may want to check these sites shortly before displaying them to the class, and decide what is best for your classroom."
  },
  "https://studio.code.org/s/csd2-2021/lessons/9/levels/6": {
    "dsls": {
      "description": "Practice your new skills here.",
      "display_name": "Adding Images"
    },
    "sublevels": {
      "CSD U2 image debug match_pilot_2021": {
        "dsls": {
          "answers": [
            {
              "text": "https://images.code.org/6015fb13fa76d32072de2762d7d363ba-image-1553717013288.02.34%20PM.png"
            },
            {
              "text": "https://images.code.org/555e64ae1a9a586d902f1ed254e4e00c-image-1553717003484.03.01 PM.png"
            },
            {
              "text": "https://images.code.org/e3b9be5444661a34eefe9bfa89e94cbc-image-1553717006899.02.47 PM.png"
            },
            {
              "text": "https://images.code.org/0ffde880f790f497b2aaef29f40272f4-image-1553717010350.02.40 PM.png"
            },
            {
              "text": "https://images.code.org/a86b628a71ae0415fe48dfd8a19ee69a-image-1553717016038.02.24 PM.png"
            }
          ],
          "content1": "Match the buggy HTML code with the description of its bug.",
          "questions": [
            {
              "text": "The `src` attribute is spelled incorrectly."
            },
            {
              "text": "The `src` and `alt` attributes are switched"
            },
            {
              "text": "The file extension (.jpg) is missing from the image address"
            },
            {
              "text": "The image address is not given as a `src` attribute"
            },
            {
              "text": "There is a space in the file name"
            }
          ],
          "teacher_markdown": "Although this level can be used to assess student understanding of the syntax of the `<img>` tag, its main purpose is to make students aware of the most common types of bugs they may encounter when adding images to web pages.\n"
        }
      },
      "CSD U2 Image Tag No End Quote_2021": {
        "display_name": "Debug the missing image",
        "bubble_choice_description": "Use your debugging skills to figure out why the image is not appearing.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How do I add images?**]\r\n\r\nThe `<img>` tag allows you to show images on your web page. \r\n\r\n\r\nExample:\r\n```\r\n<img src=\"dog.png\" alt=\"dog jumping\">\r\n```\r\n\r\n\r\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \r\n\r\n\r\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \r\n\r\n\r\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\r\n:::\r\n\r\n::: details [**Why does an image tag not have a closing tag?**]\r\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\r\n:::\r\n\r\n::: details [**What is an attribute?**]\r\n\r\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \r\n\r\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Debug: Missing Image\r\n\r\nSomeone has submitted a bug report on this web page. Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------\r\nThere is an image of balloons | There is no image\r\n# Do This\r\n* Find and fix the problem that is causing the bug."
      },
      "CSD U2 Image Tag Mispelled src_2021": {
        "display_name": "Debug the missing image 2",
        "bubble_choice_description": "Use your debugging skills to figure out why the alt text, but not the image, is appearing.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How do I add images?**]\r\n\r\nThe `<img>` tag allows you to show images on your web page. \r\n\r\n\r\nExample:\r\n```\r\n<img src=\"dog.png\" alt=\"dog jumping\">\r\n```\r\n\r\n\r\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \r\n\r\n\r\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \r\n\r\n\r\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\r\n:::\r\n\r\n::: details [**Why does an image tag not have a closing tag?**]\r\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\r\n:::\r\n\r\n::: details [**What is an attribute?**]\r\n\r\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \r\n\r\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Debug: Missing Image\r\n\r\nSomeone has submitted a bug report on this web page. Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------\r\nThere is an image of Half Dome | There is alt text but no image\r\n# Do This\r\n* Find and fix the problem that is causing the bug."
      },
      "CSD U2 Image Tag Inconsistent Spelling_2021": {
        "display_name": "Debug the missing image 3",
        "bubble_choice_description": "Use your debugging skills to figure out why the image is not appearing.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How do I add images?**]\r\n\r\nThe `<img>` tag allows you to show images on your web page. \r\n\r\n\r\nExample:\r\n```\r\n<img src=\"dog.png\" alt=\"dog jumping\">\r\n```\r\n\r\n\r\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \r\n\r\n\r\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \r\n\r\n\r\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\r\n:::\r\n\r\n::: details [**Why does an image tag not have a closing tag?**]\r\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\r\n:::\r\n\r\n::: details [**What is an attribute?**]\r\n\r\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \r\n\r\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Debug: Missing Image\r\n\r\nSomeone has submitted a bug report on this web page. Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------\r\nThere is a second Pikachu image | There is alt text but no image\r\n# Do This\r\n* Find and fix the problem that is causing the bug.\r\n"
      },
      "CSD U2 Image Tag Add Alt_2021": {
        "display_name": "Add alt to existing images",
        "bubble_choice_description": "Add alt attributes to describe existing images.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How do I add images?**]\r\n\r\nThe `<img>` tag allows you to show images on your web page. \r\n\r\n\r\nExample:\r\n```\r\n<img src=\"dog.png\" alt=\"dog jumping\">\r\n```\r\n\r\n\r\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \r\n\r\n\r\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \r\n\r\n\r\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\r\n:::\r\n\r\n::: details [**Why does an image tag not have a closing tag?**]\r\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\r\n:::\r\n\r\n::: details [**What is an attribute?**]\r\n\r\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \r\n\r\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Add alt to Existing Images\r\n\r\nThe `alt` attribute is short for alternative text. As you may have seen on web pages that do not load properly, alt text appears to describe the image that is not rendering.\r\n\r\n# Do This\r\n* Read the HTML and look at where images are used.\r\n* Add a descriptive `alt` attribute to each image."
      },
      "CSD U2 Image Tag Add Image Link_2021": {
        "display_name": "Add image link",
        "bubble_choice_description": "Add an image link to make the image appear in the web page.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How do I add images?**]\r\n\r\nThe `<img>` tag allows you to show images on your web page. \r\n\r\n\r\nExample:\r\n```\r\n<img src=\"dog.png\" alt=\"dog jumping\">\r\n```\r\n\r\n\r\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \r\n\r\n\r\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \r\n\r\n\r\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\r\n:::\r\n\r\n::: details [**Why does an image tag not have a closing tag?**]\r\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\r\n:::\r\n\r\n::: details [**What is an attribute?**]\r\n\r\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \r\n\r\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Add Image Link\r\n\r\nAn image has already been uploaded for you. The next step is to link it to the web page.\r\n\r\n# Do This\r\n* Add an image link for the image \"gymnast.gif\".\r\n"
      },
      "CSD U2 Image Tag Add Image_2021": {
        "display_name": "Add new image",
        "bubble_choice_description": "Add an image to this recipe.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How do I add images?**]\r\n\r\nThe `<img>` tag allows you to show images on your web page. \r\n\r\n\r\nExample:\r\n```\r\n<img src=\"dog.png\" alt=\"dog jumping\">\r\n```\r\n\r\n\r\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \r\n\r\n\r\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \r\n\r\n\r\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\r\n:::\r\n\r\n::: details [**Why does an image tag not have a closing tag?**]\r\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\r\n:::\r\n\r\n::: details [**What is an attribute?**]\r\n\r\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \r\n\r\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Add Image\r\n\r\nHere you can practice adding a new image to a web page.\r\n\r\n# Do This\r\n* Add an image to the end of this cake recipe.\r\n* Don't forget to use the `add image` button and include an image tag in your code.\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/9/levels/7": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**How do I add images?**]\n\nThe `<img>` tag allows you to show images on your web page. \n\nExample:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \n\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \n\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\n:::\n\n::: details [**Why does an image tag not have a closing tag?**]\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\n:::\n\n::: details [**What is an attribute?**]\n\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \n\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\n\n:::\n\n</div>\n\n# All about you!\n\nYou can use images to make a web page more personal.\n\n# Do This\n\n-   Add an image to the page.\n-   Make sure to follow the rules about copyright, naming, and using good coding styles."
  },
  "https://studio.code.org/s/csd2-2021/lessons/9/levels/8": {
    "dsls": {
      "description": "Find an extra challenge or a new type of code here.",
      "display_name": "Adding Images"
    },
    "sublevels": {
      "CSD U2 Image Tag Height Width Attributes_2021": {
        "display_name": "Extra Code: Height and Width Attributes",
        "bubble_choice_description": "Learn how to customize the height and width of images.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How do I add images?**]\r\n\r\nThe `<img>` tag allows you to show images on your web page. \r\n\r\n\r\nExample:\r\n```\r\n<img src=\"dog.png\" alt=\"dog jumping\">\r\n```\r\n\r\n\r\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \r\n\r\n\r\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \r\n\r\n\r\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\r\n:::\r\n\r\n::: details [**Why does an image tag not have a closing tag?**]\r\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\r\n:::\r\n\r\n::: details [**What is an attribute?**]\r\n\r\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \r\n\r\nFor example `<img>` tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Height and Width Attributes\r\n\r\nImages are not always the right size for a webpage. Luckily, there are width and height attributes to set how many pixels tall and wide an image is. Add the attributes inside the image tag using `height=\"\"` and `width=\"\"`.\r\n\r\n# Do This\r\n* Read the HTML and look at how the height and width attribute are used.\r\n* Add height and width attributes to make the other images smaller.\r\n"
      },
      "CSD U2 Image Tag Illustrated Story_2021": {
        "display_name": "Challenge: Make an Illustrated Story",
        "bubble_choice_description": "Use your new skills to create an illustrated story. ",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How do I add images?**]\r\n\r\nThe `<img>` tag allows you to show images on your web page. \r\n\r\n\r\nExample:\r\n```\r\n<img src=\"dog.png\" alt=\"dog jumping\">\r\n```\r\n\r\n\r\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \r\n\r\n\r\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \r\n\r\n\r\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\r\n:::\r\n\r\n::: details [**Why does an image tag not have a closing tag?**]\r\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\r\n:::\r\n\r\n::: details [**What is an attribute?**]\r\n\r\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \r\n\r\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Make an Illustrated Story\r\n\r\nPut your new image tag skills to the test and create an illustrated story. As an extra challenge, include code from past lessons, such as special characters and style sheets.\r\n\r\n# Do This\r\n* Create an illustrated story of your choice using text and images.\r\n"
      },
      "CSD U2 Image Tag How-To_2021": {
        "display_name": "Challenge: Make a How-To Guide",
        "bubble_choice_description": "Create a how-to guide to help others learn a new skill. ",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How do I add images?**]\r\n\r\nThe `<img>` tag allows you to show images on your web page. \r\n\r\n\r\nExample:\r\n```\r\n<img src=\"dog.png\" alt=\"dog jumping\">\r\n```\r\n\r\n\r\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the <img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. \r\n\r\n\r\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. \r\n\r\n\r\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag.\r\n:::\r\n\r\n::: details [**Why does an image tag not have a closing tag?**]\r\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\r\n:::\r\n\r\n::: details [**What is an attribute?**]\r\n\r\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \r\n\r\nFor example <img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Make a How-To Guide\r\n\r\nUse your new image skills to share another skill that you have. As an extra challenge, include code from past lessons, such as special characters and style sheets.\r\n\r\n# Do This\r\n* Create an illustrated how-to guide to help someone learn a new skill."
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/10/levels/1": {
    "dsls": {
      "markdown": "# Personal Website Exemplars\n\nClick the websites below to check out personal websites other students have made.\n\n## Examples\n\n<div style=\"float: left; text-align:center;\"><strong>The Cutest Dog</strong><br /><a href=\"https://codeprojects.org/vfqqBSl9WL5EmWlRTaCuyGL523thd_RLmA6fZjoahHo/\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/be0c20dba6319b34dc07a9f87ae615fa-image-1565304900473.png\" alt=\"Dog Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>My Trip</strong><br /><a href=\"https://codeprojects.org/HxtpYQ-r79cNzFpnSfGyhHHDE0tb28ed-9-scxvFYE0\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/51b787b6a25663e092b3f55e051e9a94-image-1565630570417.png\" alt=\"Trip Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>Musical Instruments</strong><br /><a href=\"https://codeprojects.org/HxtpYQ-r79cNzFpnSfGyhMuNKEOTdyH5PPeUpDimEeY\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/82323a78b17b69101dd6e98a6a21c55c-image-1565630573896.png\" alt=\"Instrument Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>Recycling Club</strong><br /><a href=\"https://codeprojects.org/HxtpYQ-r79cNzFpnSfGyhBiffg8HpOk2lRx1kd5sgaw\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/5b0044bfd92d44c97cd74d82f1933daa-image-1565630578147.png\" alt=\"Recycling Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>Haikus</strong><br /><a href=\"https://codeprojects.org/HxtpYQ-r79cNzFpnSfGyhLgd_3k2ffeKaGZZO7Ebvgs\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/40892c338c78da445310ddfb7cf63127-image-1565630595445.png\" alt=\"Haiku Sample Page\"></a></div>\n"
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/11/levels/1": {
    "dsls": {
      "markdown": "# Sample Websites\n\nClick the website below to discover some new types of styling for your pages.\n\n|Sample 1| Sample 2|Sample 3|\n|-|-|-|\n|[![](https://images.code.org/7c31d954229b205eff20e4a131271845-image-1585070245513.png)](https://studio.code.org/projects/weblab/-lbgSOg0xktagjHqalYTlPvYzGmfV3OyQxwifLBmmWE/view)|[![](https://images.code.org/00410044eee7dedc993ec9d6c8887444-image-1589309900750.56.13 PM.png)](https://studio.code.org/projects/weblab/3ZP18hc29B_ZMG2Yh17zXJfOZ_97JAa882aj9oJScME/view)|[![](https://images.code.org/c67c9e9b8e44094a403e3974db09e2e3-image-1589314612876.15.47 PM.png)](https://studio.code.org/projects/weblab/Hdfq1QJEwNjrbpI8x7qwPO6ZHgLyywZOxGRKqIZGp8Y/view)|\n\n\n"
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/11/levels/2": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What does the body selector do?**]\n\nBecause the content of the web page is all inside the `body` tag, the body selector gives style rules for everything on the web page.\n\n:::\n\n::: details [**What does the border-style property do?**]\n\nThe `border-style` property determines what kind of border (solid, dotted, dashed, etc.) the element has.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\n\n:::\n\n::: details [**What does the border-radius property do?**]\n\nThe `border-radius` property determines the radius of the curves at the corners of the element.  A bigger radius makes a bigger, softer curve, and a smaller radius makes a smaller, sharper curve.  A radius of zero makes a regular corner.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\n\n:::\n\n::: details [**What does the float property do?**]\n\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\n\n:::\n\n</div>\n\n# Layout and Style\n\n-   Look through web page below for new styles.\n-   Open the style sheet\n-   With your partner, discuss which parts of the CSS code you think are making the page appear different.\n    -   What makes the entire page blue?\n    -   How are the images positioned to the left of all the other elements?\n\nIn the next few levels, you'll be changing and adding new styles on this page."
  },
  "https://studio.code.org/s/csd2-2021/lessons/11/levels/3": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**How does the code work?**]\n\nHere is the code that is making the background of the page blue:\n\n    body {\n      background-color: lightblue;\n    }\n\n-   `body` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the body element is the entire page.\n-   `background-color: lightblue;` is the rule that makes the entire page light blue.\n    -   `background-color` is the _property_.  It explains what the rule is about, in this case the color of the background.\n    -   `lightblue` is the _value_.  It explains how the rule should be applied, in this case making the background light blue.\n\n:::\n\n::: details [**What colors can I use in CSS?**]\n\nCSS includes most common color names (red, blue, green, etc.), and many uncommon ones.  You can see a full list of CSS color names at <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  You can still use colors that are not included in the named list, but you will need to use their RGB values.  You can read more about using colors in CSS at <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\n\n:::\n\n::: details [**What does the background-color property do?**]\n\nThe `background-color` property determines the color of the background of an element.  You can read more about the property at <a href=\"http://www.w3schools.com/cssref/pr_background-color.asp\" target=\"_new\">W3Schools - CSS background-color Property</a>\n\n:::\n\n::: details [**What if an element inside the page has a different background color from the body?**]\n\nYou can see the answer to this question by adding a `background-color` rule to the `p` tag.  The paragraphs will have the background color in the rule for the `p` tag, and the rest of the page will follow the rule for the `body` tag.\n\n:::\n\n::: details [**What is a style sheet?**]\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n\n:::\n\n::: details [**What is CSS?**]\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n    h2 {\n      color: blue;\n      font-family: cursive;\n    }\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n:::\n\n</div>\n\n# Background Color\n\n-   Find the code in the style sheet that is making the background of the entire page light blue.\n-   Change the code to make the page a different color.\n-   Try to change the background color of just the paragraphs."
  },
  "https://studio.code.org/s/csd2-2021/lessons/11/levels/4": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What does the body selector do?**]\n\nBecause the content of the web page is all inside the `body` tag, the body selector gives style rules for everything on the web page.\n\n:::\n\n::: details [**What does the color property do?**]\n\nThe `color` property specifies the color of the text.  If there’s no text, it won’t do anything. Read more at <a href=\"http://www.w3schools.com/cssref/pr_text_color.asp\" target=\"_new\"> W3Schools - CSS color Property</a>\n\n:::\n\n::: details [**What does the text-align property do?**]\n\nThe `text-align` property aligns the text to the left, right, or center. You can read more at <a href=\"http://www.w3schools.com/cssref/pr_text_text-align.asp\" target=\"_new\">W3Schools - CSS text-align Property</a>\n\n:::\n\n::: details [**What does the text-decoration property do?**]\n\nThe `text-decoration` property puts a line over, under, or through a piece of text.  You can read more about the property at <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\" target=\"_new\">W3Schools - CSS text-decoration Property</a>\n\n:::\n\n::: details [**What does the font-family property do?**]\n\nThe `font-family` property changes the font of the text.  It gives a general description of the type of font that should be used, but each browser might display the font slightly differently.  Read more at <a href=\"http://www.w3schools.com/cssref/pr_font_font-family.asp\" target=\"_new\">W3chools - CSS font-family Property</a>\n\n:::\n\n::: details [**What does the font-size property do?**]\n\nThe `font-size` property changes the size of the text.  You can use general terms, such as `small`, `medium`, and `large`, or you can specify the exact size in pixels, such as `20px`. Read more at <a href=\"http://www.w3schools.com/cssref/pr_font_font-size.asp\" target=\"_new\">W3Schools - CSS font-size Property</a>\n\n:::\n\n::: details [**What is a stylesheet?**]\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n\n:::\n\n::: details [**What is CSS?**]\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n:::\n\n</div>\n\n# The Body Element\n\n-   Find the `body` rule-set in the style sheet.\n-   Discuss with a partner what you think will happen if you add `text-align`, `color`, or other text properties to the `body` rule set.\n-   Try out some different properties to check your guesses."
  },
  "https://studio.code.org/s/csd2-2021/lessons/11/levels/5": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**How does the code work?**]\nHere is the code that is making the image float on the left hand side of the page:\n\n    img {\n      float: left;\n    }\n\n-   `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\n-   `float: left;` is the rule that makes the image float to the left.\n    :::\n\n::: details [**What does the `float` property do?**]\n\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\n\n:::\n\n</div>\n\n# Float\n\n-   Look at the `float` property inside your `img` rule-set\n-   Discuss with your partner what you think the property does.\n-   Change the value from `left` to `right`."
  },
  "https://studio.code.org/s/csd2-2021/lessons/11/levels/6": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**How does the code work?**]\n\nHere is the code that is making the image its current size:\n\n    img {\n    \twidth: 250px;\n    }\n\n-   `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\n-   `width: 250px` is the rule that makes the image 250 pixels wide.  It also changes the height so that the image does not stretch.\n\n:::\n\n::: details [**What does the `width` property do?**]\n\nThe `width` property determines how wide the element will be.  Most of the time, you will define the width in pixels, which makes the element take up an exact amount of space on the screen.  Defining the width will also change the height so that the image does not stretch, unless you have also defined the height.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\" target=\"_new\">W3Schools - CSS width Property</a>\n\n:::\n\n::: details [**What does the `height` property do?**]\n\nThe `height` property determines how tall the element will be.  Most of the time, you will define the height in pixels, which makes the element take up an exact amount of space on the screen.  Defining the height will also change the width so that the image does not stretch, unless you have also defined the width.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\" target=\"_new\">W3Schools - CSS height Property</a>\n\n:::\n\n::: details [**What does `px` mean / What is a pixel?**]\n\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\n\n:::\n\n::: details [**Why does using a width and height rule at the same time sometimes stretch out the image?**]\n\nWhen the width of an images changes, the height must change by the same percentage, otherwise the image will stretch.  For example, if you double the width of an image, you must also double the height, or the image will be stretched horizonally.  When you only define the width or the height, the computer will automatically change the other property so that the image looks the same.\n\n:::\n\n</div>\n\n# Width and Height\n\n-   Find the property in the style sheet that controls the width of the images.\n-   Change the width of the images to be larger or smaller.\n-   Create a new rule with a `height` property to control the height of the images.\n-   Use the `width` property in the `p` rule-set to change the width of your paragraphs."
  },
  "https://studio.code.org/s/csd2-2021/lessons/11/levels/7": {
    "dsls": {
      "description": "Practice your new skills here.",
      "display_name": "Styling Elements"
    },
    "sublevels": {
      "CSD U2 layout style debug spelling_2021": {
        "display_name": "Debug some images",
        "bubble_choice_description": "Figure out why the images are not the correct height and debug this page.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**How does the code work?**]\r\n\r\nHere is the code that is making the image its current size:\r\n\r\n```\r\nimg {\r\n\twidth: 250px;\r\n}\r\n```\r\n\r\n* `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\r\n* `width: 250px` is the rule that makes the image 250 pixels wide.  It also changes the height so that the image does not stretch.\r\n\r\n:::\r\n\r\n::: details [**What does the `width` property do?**]\r\n\r\nThe `width` property determines how wide the element will be.  Most of the time, you will define the width in pixels, which makes the element take up an exact amount of space on the screen.  Defining the width will also change the height so that the image does not stretch, unless you have also defined the height.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\" target=\"_new\">W3Schools - CSS width Property</a>\r\n\r\n:::\r\n\r\n::: details [**What does the `height` property do?**]\r\n\r\nThe `height` property determines how tall the element will be.  Most of the time, you will define the height in pixels, which makes the element take up an exact amount of space on the screen.  Defining the height will also change the width so that the image does not stretch, unless you have also defined the width.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\" target=\"_new\">W3Schools - CSS height Property</a>\r\n\r\n:::\r\n\r\n::: details [**What does `px` mean / What is a pixel?**]\r\n\r\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\r\n\r\n:::\r\n\r\n::: details [**Why does using a width and height rule at the same time sometimes stretch out the image?**]\r\n\r\nWhen the width of an images changes, the height must change by the same percentage, otherwise the image will stretch.  For example, if you double the width of an image, you must also double the height, or the image will be stretched horizonally.  When you only define the width or the height, the computer will automatically change the other property so that the image looks the same.\r\n\r\n:::\r\n</div>\r\n\r\n# Debug the Images\r\n\r\nThese images are all supposed to be 100 pixels high, but the height property is not working.  Find the bug and make the images all the same height."
      },
      "CSD U2 layout style debug link_2021": {
        "display_name": "Debug the style",
        "bubble_choice_description": "Figure out why the images are not the correct height and debug this page.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**How does the code work?**]\r\n\r\nHere is the code that is making the image its current size:\r\n\r\n    img {\r\n    \twidth: 250px;\r\n    }\r\n\r\n* `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\r\n* `width: 250px` is the rule that makes the image 250 pixels wide.  It also changes the height so that the image does not stretch.\r\n\r\n:::\r\n\r\n::: details [**What does the `width` property do?**]\r\n\r\nThe `width` property determines how wide the element will be.  Most of the time, you will define the width in pixels, which makes the element take up an exact amount of space on the screen.  Defining the width will also change the height so that the image does not stretch, unless you have also defined the height.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\" target=\"_new\">W3Schools - CSS width Property</a>\r\n\r\n:::\r\n\r\n::: details [**What does the `height` property do?**]\r\n\r\nThe `height` property determines how tall the element will be.  Most of the time, you will define the height in pixels, which makes the element take up an exact amount of space on the screen.  Defining the height will also change the width so that the image does not stretch, unless you have also defined the width.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\" target=\"_new\">W3Schools - CSS height Property</a>\r\n\r\n:::\r\n\r\n::: details [**What does `px` mean / What is a pixel?**]\r\n\r\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\r\n\r\n:::\r\n\r\n::: details [**Why does using a width and height rule at the same time sometimes stretch out the image?**]\r\n\r\nWhen the width of an images changes, the height must change by the same percentage, otherwise the image will stretch.  For example, if you double the width of an image, you must also double the height, or the image will be stretched horizonally.  When you only define the width or the height, the computer will automatically change the other property so that the image looks the same.\r\n\r\n:::\r\n</div>\r\n\r\n# Debug the Style\r\n\r\nNone of the styles are working for this page.  Debug the code, then change the styles to something you like.\r\n"
      },
      "CSD U2 layout style debug heading_2021": {
        "display_name": "Debug the Heading",
        "bubble_choice_description": "Figure out what's wrong with the code even though the preview looks like it is correct.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n\r\n\r\n::: details [**What does `head` do?**]\r\n\r\nThe `<head></head>` tags contain information, called metadata, about your web page. Metadata is not displayed on your web page and content you want on your actual page should not go here.\r\n:::\r\n\r\n\r\n::: details [**What does `body` do?**]\r\n\r\nBetween the `<body></body>` tags is where you want to be the content of your web page. It should contain the body of the web page, including all text, media, links, etc. that you want people to see on your page.\r\n\r\n:::\r\n\r\n</div>\r\n\r\n# Debug the Headings\r\n\r\nThe preview for this page looks fine and all of the HTML and CSS elements are being displayed correctly. But if you look in the code, something isn't quite right that could cause problems later on. Can you spot what code is in the wrong area and fix it?\r\n\r\n*Note: Fixing the code won't cause any changes in the preview, but your code will be better organized*\r\n"
      },
      "CSD U2 layout style new body rules_2021": {
        "display_name": "Add New Rules",
        "bubble_choice_description": "Right now there are very few rules for the body of this page. Add some more to make it look cool!",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n\r\n</div>\r\n\r\n# Add New Rules\r\n\r\nThe rules for the body right now are not very exciting. Add some more to make it look cool! You can also add or change other rules.\r\n"
      },
      "CSD U2 layout style image width_2021": {
        "display_name": "Fix Image Width",
        "bubble_choice_description": "Fix the issue with images being different sizes from each other.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n\r\n::: details [**What does the `width` property do?**]\r\n\r\nThe `width` property determines how wide the element will be.  Most of the time, you will define the width in pixels, which makes the element take up an exact amount of space on the screen.  Defining the width will also change the height so that the image does not stretch, unless you have also defined the height.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\" target=\"_new\">W3Schools - CSS width Property</a>\r\n\r\n:::\r\n\r\n::: details [**What does `px` mean / What is a pixel?**]\r\n\r\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\r\n\r\n:::\r\n</div>\r\n\r\n# Change the Width\r\nThe images here are all different sizes with some of them way too big. Create a rule that makes the width of all the images the same and sizes them down!\r\n"
      },
      "CSD U2 layout style image float_2021": {
        "display_name": "Fix Image Position",
        "bubble_choice_description": "Make it so the images are next to the text",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**What does the float property do?**]\r\n\r\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Change the Position\r\nMove the images using the `float` property so that they are to the side of the text rather than below it.\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/11/levels/8": {
    "long_instructions": "# Try it out!\n\nNow that you've seen some different ways to style, it's time to try it out yourself.  Here's a web page you've seen before, but it needs some style!\n\n# Do This\n\n-   Give the webpage a background color.\n-   Make all the images go to the right of the page.\n-   Make all of the text a different color.\n-   Add any other styles you want."
  },
  "https://studio.code.org/s/csd2-2021/lessons/11/levels/9": {
    "dsls": {
      "description": "Try extra challenges or learn some new code.",
      "display_name": "Styling Elements"
    },
    "sublevels": {
      "CSD U2 layout style border_2021": {
        "display_name": "Extra Code: Create Borders",
        "bubble_choice_description": "Create borders around the elements on your page.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What colors can I use in CSS?**]\r\nCSS includes most common color names (red, blue, green, etc.), and many uncommon ones.  You can see a full list of CSS color names at <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  You can still use colors that are not included in the named list, but you will need to use their RGB values.  You can read more about using colors in CSS at <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\r\n:::\r\n\r\n::: details [**How does the code work?**]\r\nHere is the code that is making the image borders:\r\n\r\n```\r\nimg {\r\n  border-color: saddlebrown;\r\n  border-width: 4px;\r\n  border-style: solid;\r\n  border-radius: 10px;\r\n}\r\n```\r\n\r\n* `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\r\n* `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` are the rules that make the border.\r\n:::\r\n\r\n::: details [**What does the `border-style` property do?**]\r\nThe `border-style` property determines what kind of border (solid, dotted, etc.) the element has.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\r\n:::\r\n\r\n::: details [**What does the `border-radius` property do?**]\r\nThe `border-radius` property determines the radius of the curves at the corners of the element.  A bigger radius makes a bigger, softer curve, and a smaller radius makes a smaller, sharper curve.  A radius of zero makes a regular corner.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\r\n:::\r\n\r\n::: details [**What does the `float` property do?**]\r\n\r\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Borders\r\n\r\n* Find the rules in the style sheet that set image borders color and width.\r\n* Change the color and width of your borders.\r\n* Try out some different border styles.\r\n  * Choose from `dotted`, `dashed`, `solid`, and `double`\r\n* Put a border on another type of page element, such as one of the headings or the paragraphs.\r\n"
      },
      "CSD U2 layout style borderradius_2021": {
        "display_name": "Extra Code: Rounded Corners",
        "bubble_choice_description": "Make the corners of your images rounded.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How does the code work?**]\r\nHere is the code that is making the image borders:\r\n\r\n```\r\nimg {\r\n  border-color: saddlebrown;\r\n  border-width: 4px;\r\n  border-style: solid;\r\n  border-radius: 10px;\r\n}\r\n```\r\n\r\n* `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\r\n* `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` are the rules that make the border.\r\n:::\r\n\r\n::: details [**What does the `border-style` property do?**]\r\nThe `border-style` property determines what kind of border (solid, dotted, etc.) the element has.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\r\n:::\r\n\r\n::: details [**What does the `border-radius` property do?**]\r\nThe `border-radius` property determines the radius of the curves at the corners of the element.  A bigger radius makes a bigger, softer curve, and a smaller radius makes a smaller, sharper curve.  A radius of zero makes a regular corner.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\r\n:::\r\n\r\n::: details [**What does the `float` property do?**]\r\n\r\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Border Radius\r\n\r\n* Look at the `border-radius` property inside your `img` rule-set\r\n* Discuss with your partner what you think the property does.\r\n* Try different values for border radius and decide which one you like the best."
      },
      "CSD U2 layout style margin_2021": {
        "display_name": "Extra Code: Margins",
        "bubble_choice_description": "Control the amount of space around each element in your page.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How does the code work?**]\r\nHere is the code that is putting extra space around the images:\r\n\r\n    img {\r\n        margin: 10px;\r\n    }\r\n\r\n* `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\r\n\r\n* `margin: 10px;` is the rule that puts 10 pixels of space around the image.\r\n:::\r\n\r\n::: details [**What does the `margin` property do?**]\r\n\r\nThe `margin` property determines how much space will be around the image.  Most of the time, you will define in the margin in pixels.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_margin.asp\" target=\"_new\">W3Schools - CSS margin Property</a>\r\n:::\r\n\r\n::: details [**What does `px` mean / What is a pixel?**]\r\n\r\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Margin\r\n\r\nMargins specify how much space should be around an element.\r\n\r\n* Find the `margin` property in the `img` rule-set.\r\n* Change the margin to be larger, and discuss the effect with a partner.\r\n* Choose another element type and give it a margin, too."
      },
      "CSD U2 layout style background-url_2021": {
        "display_name": "Extra Code: Background Image (url)",
        "bubble_choice_description": "Learn how to add background images using a url.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n<details>\r\n\r\n<summary>\r\n</summary>\r\n\r\n\r\n\r\n</details>\r\n</div>\r\n\r\n# Background Image\r\n\r\nThe background of an element can be set to any  image that you would like! Just like when inserting a photo, you can use the image's url name.\r\n* Find the property in the style sheet that controls the background image.\r\n* Change the image to one of your choice.\r\n"
      },
      "CSD U2 layout style animal challenge_2021": {
        "display_name": "Challenge: Animal Webpage",
        "bubble_choice_description": "Complete this challenge that asks you to style a web page about animals.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n</div>\r\n\r\n# Challenge: Style Animal Web Page\r\n\r\nA basic web page about endangered animal species has been provided for you. Complete these challenges to add style to it:\r\n* Create a background color or image for the page.\r\n* Make the images have a consistent height or width.\r\n* Give each heading unique styles: font family, color, size, decoration, etc.\r\n* Float all the images to the left.\r\n* Put a margin and green border around the images.\r\n* Add any other style or content to customize the page!"
      },
      "CSD U2 layout style dessert challenge_2021": {
        "display_name": "Challenge: Dessert Webpage",
        "bubble_choice_description": "Complete this challenge that asks you to style a web page about desserts.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n</div>\r\n\r\n# Challenge: Style Dessert Web Page\r\n\r\nA basic web page about desserts has been provided for you. Complete these challenges to add style to it:\r\n* Create a background color or image for the page.\r\n* Fix heading sizes so it looks better.\r\n* Give each heading unique styles: font family, color, size, decoration, etc.\r\n* Round the edges of the images.\r\n* Add another dessert with a description and image (give proper citation!).\r\n* Add any other style or content to customize the page!\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/13/levels/1": {
    "dsls": {
      "content1": "description here",
      "markdown": "# Your Personal Web Page\n\nIn the next few levels, you'll be completing and publishing your personal web page.  This is your chance to share your ideas with the world, and also to show all the things that you have learned.\n\nYou'll need...\n\n* Your completed project guide\n* The images you downloaded\n* The project rubric\n\nHere are the things you have learned...\n\n* How to use HTML to structure the content of your page\n* How to use CSS to style the text, colors, and layout of your page\n* How to format your code to make it easier to read\n* How to debug HTML and CSS code\n* How to use use images in a responsible way\n* How to protect your personal information online\n\n## Examples\n\n<div style=\"float: left; text-align:center;\"><strong>The Cutest Dog</strong><br /><a href=\"https://codeprojects.org/vfqqBSl9WL5EmWlRTaCuyGL523thd_RLmA6fZjoahHo/\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/be0c20dba6319b34dc07a9f87ae615fa-image-1565304900473.png\" alt=\"Dog Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>My Trip</strong><br /><a href=\"https://codeprojects.org/HxtpYQ-r79cNzFpnSfGyhHHDE0tb28ed-9-scxvFYE0\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/51b787b6a25663e092b3f55e051e9a94-image-1565630570417.png\" alt=\"Trip Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>Musical Instruments</strong><br /><a href=\"https://codeprojects.org/HxtpYQ-r79cNzFpnSfGyhMuNKEOTdyH5PPeUpDimEeY\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/82323a78b17b69101dd6e98a6a21c55c-image-1565630573896.png\" alt=\"Instrument Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>Recycling Club</strong><br /><a href=\"https://codeprojects.org/HxtpYQ-r79cNzFpnSfGyhBiffg8HpOk2lRx1kd5sgaw\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/5b0044bfd92d44c97cd74d82f1933daa-image-1565630578147.png\" alt=\"Recycling Sample Page\"></a></div>\n<div style=\"float: left; text-align:center;\"><strong>Haikus</strong><br /><a href=\"https://codeprojects.org/HxtpYQ-r79cNzFpnSfGyhLgd_3k2ffeKaGZZO7Ebvgs\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px;\" src=\"https://images.code.org/40892c338c78da445310ddfb7cf63127-image-1565630595445.png\" alt=\"Haiku Sample Page\"></a></div>\n",
      "teacher_markdown": "# Planning Checkpoint\n\nCheck over student plans before allowing them to continue on the rest of the levels.\n"
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/13/levels/2": {
    "long_instructions": "# Upload Images\n\nNext, you'll need to upload all of your images into your project.\n\n# Do This\n\n-   Upload all of the images listed in your project guide into your project.\n-   Make sure each image file name uses good naming conventions"
  },
  "https://studio.code.org/s/csd2-2021/lessons/13/levels/3": {
    "long_instructions": "# Add HTML\n\nNext, you should add the HTML to your page.\n\n# Do This\n\n-   Add HTML to make the page you sketched in your project guide.\n-   Double check that the page has everything you want, and make any changes you need."
  },
  "https://studio.code.org/s/csd2-2021/lessons/13/levels/4": {
    "long_instructions": "# Add Styles\n\nNext, style the page according to your plan.\n\n# Do This\n\n-   In the stylesheet, add CSS rule sets for your tags.\n-   Check to make sure that the page looks right, then make any adjustments"
  },
  "https://studio.code.org/s/csd2-2021/lessons/13/levels/5": {
    "long_instructions": "# Review Your Project\n\nYou're almost ready to publish your project, but you should check one more time that you have fulfilled all the requirements for this project.\n\n# Do This\n\n-   Check that you are comfortable sharing all the information that's on your site.\n-   Check that all of your images are correctly attributed, and that you have the right to put them on your site.\n-   Check that your project includes everything included in the project rubric.\n-   Use comments and whitespace to make your website readable.\n-   Ask a classmate to help you find any potential problems with your site."
  },
  "https://studio.code.org/s/csd2-2021/lessons/13/levels/6": {
    "display_name": "Publishing Your Website",
    "long_instructions": "## Questions to Consider\n\n-   What do you think your responsibilities are as a website publisher?\n-   Why might you want to see the code or remix someone else's site?",
    "teacher_markdown": "## Discussion Goals\n\nThe video content is fairly straightforward, but this is your last check in with students before they publish, so it's a good time to make sure they have full thought through the implications of publishing to the entire world.  They should make sure that they are not sharing any sensitive information, and that they have the rights to use all the content on the page.\n\nAs they began to share, they should also think about how they respect the work of other website publishers, in particular their classmates.  You may want to take some time to establish classroom norms around how they talk about and give feedback on their classmates' sites, as well as guidelines for using code that others have written. "
  },
  "https://studio.code.org/s/csd2-2021/lessons/13/levels/7": {
    "long_instructions": "# Share Your Project\n\nIt's time to share your project with the world!\n\n# Do This\n\n-   Click the [][0] button at the top of this page.\n-   Copy the URL it gives you, and email it to the people you want to see your page."
  },
  "https://studio.code.org/s/csd2-2021/lessons/13/levels/8": {
    "dsls": {
      "title": "CS Discoveries Rapid Survey!"
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/14/levels/1": {
    "dsls": {
      "markdown": "# Problem Solving Websites\n\nHere are some websites that were created to solve a problem.  Choose two sites and use them to complete the activity guide.\n\n[<img src=\"https://images.code.org/752da9829923228ba71fd32499c2a5bf-image-1566856199999.png\" style=\"float: left; margin: 10px\">](https://codeprojects.org/3zq0Xy-f0olOr1uy1wzTzdFqvq4bGQx0zi_PrWM5p8Y)\n\n[<img src=\"https://images.code.org/3dbd54718965bf83f0695422d5600b0c-image-1566240318585.png\" style=\"float: left; margin: 10px\">](https://codeprojects.org/0YXSEeSdj7HHu8NqZndJKlRz7dO1Vxj8o70HhBSfTHU/)\n\n[<img src=\"https://images.code.org/37b9660399cb69d5c0bbc2603e2c43da-image-1566240321606.png\" style=\"float: left; margin: 10px\">](https://codeprojects.org/kMDTPWRtSww05TgT-ZnhnNjpStohzsZGRmBxRTtV6cA/)\n\n[<img src=\"https://images.code.org/7331e5d4b1dda825360217270212ed46-image-1566240324800.png\" style=\"float: left; margin: 10px\">](https://codeprojects.org/5FQC3-_R1-LCbwW5oRUVt2h7BKe-N5OBaBr_OfTlxpk/)\n"
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/15/levels/1": {
    "long_instructions": "Questions to Consider:\n\n-   What are the advantages to working in a team?\n-   What are some tips for teams to work well together?",
    "teacher_markdown": "**Goals for Discussion**\n\nThe goal of this video is to help students come into teamwork with a positive attitude, and give them a few suggestions for how to make their teams run more smoothly.\n\nStudents may have different ideas for the advantages of working on a team, but they should note that people can get more done in a team, and that bringing in a diversity of ideas will make a project better.\n\nTips mentioned in the video are to\n\n1.  Have a plan\n2.  Give everyone a special role\n3.  Celebrate successes of your teammates\n4.  Have fun!\n5.  Figure out everyone's strengths\n6.  Listen to and respect everyone's ideas\n7.  Be confident in sharing your ideas"
  },
  "https://studio.code.org/s/csd2-2021/lessons/15/levels/2": {
    "long_instructions": "Question to consider:\n\n-   What are three tips for dealing with disagreement?",
    "teacher_markdown": "**Discussion Goals**\n\nStudents should understand that disagreement is a normal part of teamwork and have strategies for constructively dealing with disagreement in their teams.\n\nTips in the video are:\n\n1.  Appreciate that your team has lots of ideas, even if you don't agree with all of them.\n2.  Be curious about the other ideas, and try to understand what is good about them.\n3.  Compromise with your teammates, taking goo parts of lots of ideas and putting them together."
  },
  "https://studio.code.org/s/csd2-2021/lessons/17/levels/1": {
    "dsls": {
      "markdown": "# Sample Website\n\nClick the website below to discover some new ways to style elements.\n\n[![](https://images.code.org/71a3cb8e9708093b17b9c75eb0723d10-image-1588247512749.49.53 AM.png)](https://codeprojects.org/zu24LsgcyFFFLdZo9Q3vpBvDu3RpEDrNHtOLnEKNhZE)\n"
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/17/levels/2": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**How does the code work?**]\nFor the code to work, you need a class, a rule-set, and elements added to the class.\n\nThe img-top class is created in the style sheet, and it includes three class rules in its rule-set.\n\n    .top-img {\n      height: 50px;\n      border-radius: 5px;\n      margin: 10px;\n    }\n\nCode in the HTML file adds elements to the classes using attributes inside the tags.  For example, the code to add an image to the `img-top` class is `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\">`.  This pattern can be used in most tags.\n:::\n\n::: details [**What rules can be added to a class rule-set?**]\n\nA class rule-set can have the same rules as any other type of selector.  If a rule does not apply to the content of the class (for example, using `font-size` on an element with no text), then the computer will ignore that rule, but still use the rules that work.\n:::\n\n::: details [**Why does the selector have a period in front of it?**]\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\n:::\n\n::: details [**Why would a web developer use classes?**]\n\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\n\n:::\n\n</div>\n\n# Using Classes\n\nThis waterfall page uses classes to make the images at the top of the page a different style from the images in the main part of the page.\n\n# Do This\n\n-   Find the CSS rule set in the `style.css` file that makes the images at the top smaller than the ones on the main part of the page.\n-   Add a new rule to one of the classes, and check to see that it only affects the images in that class."
  },
  "https://studio.code.org/s/csd2-2021/lessons/17/levels/3": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**How does the code work?**]\nFor the code to work, you need a class, a rule-set, and elements added to the class.\n\nThe img-top class is created in the style sheet, and it includes three class rules in its rule-set.\n\n    .top-img {\n      height: 50px;\n      border-radius: 5px;\n      margin: 10px;\n    }\n\nCode in the HTML file adds elements to the classes using attributes inside the tags.  For example, the code to add an image to the `img-top` class is `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\">`.  This pattern can be used in most tags.\n:::\n\n::: details [**What rules can be added to a class rule-set?**]\n\nA class rule-set can have the same rules as any other type of selector.  If a rule does not apply to the content of the class (for example, using `font-size` on an element with no text), then the computer will ignore that rule, but still use the rules that work.\n:::\n\n::: details [**Why does the selector have a period in front of it?**]\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\n:::\n\n::: details [**Why would a web developer use classes?**]\n\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\n\n:::\n\n</div>\n\n# The Four Humors\n\nThis page describes the four humors, but only one of them is styled with a special class.\n\n# Do This\n\n-   Look through the code to see how the \"sanguine\" class works.\n-   Add a new class for one of the other humors.\n    -   Add the class and rule-set in the `style.css` file.\n    -   Add elements to the class in the `index.html` file."
  },
  "https://studio.code.org/s/csd2-2021/lessons/17/levels/4": {
    "dsls": {
      "description": "Practice your new skills here.",
      "display_name": "Using Classes"
    },
    "sublevels": {
      "CSD U2 classes months_2021": {
        "display_name": "Using Classes: Your Favorite Month",
        "bubble_choice_description": "Choose a month and add in a class to make it stand out on this web page.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How does the code work?**]\r\nFor the code to work, you need a class, a rule-set, and elements added to the class.\r\n\r\nThe img-top class is created in the style sheet, and it includes three class rules in its rule-set.\r\n\r\n```\r\n.top-img {\r\n  height: 50px;\r\n  border-radius: 5px;\r\n  margin: 10px;\r\n}\r\n```\r\n\r\nCode in the HTML file adds elements to the classes using attributes inside the tags.  For example, the code to add an image to the `img-top` class is `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\"> `.  This pattern can be used in most tags.\r\n:::\r\n\r\n::: details [**What rules can be added to a class rule-set?**]\r\n\r\nA class rule-set can have the same rules as any other type of selector.  If a rule does not apply to the content of the class (for example, using `font-size` on an element with no text), then the computer will ignore that rule, but still use the rules that work.\r\n:::\r\n\r\n::: details [**Why does the selector have a period in front of it?**]\r\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\r\n:::\r\n\r\n::: details [**Why would a web developer use classes?**]\r\n\r\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Your Favorite Month\r\n\r\nThis page lists information on the different months of the year.\r\n\r\n# Do This\r\n\r\n* Create a class for your favorite month so that it looks different from the others.  Use at least three properties in the CSS rule-set.\r\n"
      },
      "CSD U2 classes seasons_2021": {
        "display_name": "Debug: Classes",
        "bubble_choice_description": "Use your debugging skills to figure out why the Autumn class isn't working on this web page.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How does the code work?**]\r\nFor the code to work, you need a class, a rule-set, and elements added to the class.\r\n\r\nThe img-top class is created in the style sheet, and it includes three class rules in its rule-set.\r\n\r\n```\r\n.top-img {\r\n  height: 50px;\r\n  border-radius: 5px;\r\n  margin: 10px;\r\n}\r\n```\r\n\r\nCode in the HTML file adds elements to the classes using attributes inside the tags.  For example, the code to add an image to the `img-top` class is `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\"> `.  This pattern can be used in most tags.\r\n:::\r\n\r\n::: details [**What rules can be added to a class rule-set?**]\r\n\r\nA class rule-set can have the same rules as any other type of selector.  If a rule does not apply to the content of the class (for example, using `font-size` on an element with no text), then the computer will ignore that rule, but still use the rules that work.\r\n:::\r\n\r\n::: details [**Why does the selector have a period in front of it?**]\r\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\r\n:::\r\n\r\n::: details [**Why would a web developer use classes?**]\r\n\r\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Debug: The Four Seasons\r\n\r\nThis page has a separate class for each of the four seasons, but the autumn class isn't working.\r\n\r\n# Do this\r\n\r\n* Find the bug in the autumn class and fix the code so that the class makes the text a dark red.\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/17/levels/5": {
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**How does the code work?**]\nFor the code to work, you need a class, a rule-set, and elements added to the class.\n\nThe img-top class is created in the style sheet, and it includes three class rules in its rule-set.\n\n    .top-img {\n      height: 50px;\n      border-radius: 5px;\n      margin: 10px;\n    }\n\nCode in the HTML file adds elements to the classes using attributes inside the tags.  For example, the code to add an image to the `img-top` class is `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\">`.  This pattern can be used in most tags.\n:::\n\n::: details [**What rules can be added to a class rule-set?**]\n\nA class rule-set can have the same rules as any other type of selector.  If a rule does not apply to the content of the class (for example, using `font-size` on an element with no text), then the computer will ignore that rule, but still use the rules that work.\n:::\n\n::: details [**Why does the selector have a period in front of it?**]\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\n:::\n\n::: details [**Why would a web developer use classes?**]\n\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\n\n:::\n\n</div>\n\n# Haikus!\n\nThis page has several different haikus.\n\n# Do This\n\n-   Choose one haiku and give it a special look by creating a class for its paragraph and heading tags.  Use at least three CSS properties.\n\n<details><summary>What does the <strong>&lt;br&gt;</strong> tag do?</summary>\n\nThe \\<br> tag is used here to start a new line inside the same paragraph. In the code below, each poem is still treated like one big paragraph. However, the \\<br> tag puts each line of the haiku is on its own line. <em>You do not need to add any CSS or classes to the \\<br> tags.</em>\n\n</details>"
  },
  "https://studio.code.org/s/csd2-2021/lessons/17/levels/6": {
    "dsls": {
      "description": "Try extra challenges or learn some new code.",
      "display_name": "Using Classes"
    },
    "sublevels": {
      "CSD U2 classes music_2021": {
        "display_name": "Individual Ids",
        "bubble_choice_description": "Learn how to use the id attribute to give  a style to a single element.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How does the code work?**]\r\nFor the code to work, you need a class, a rule-set, and elements added to the class.\r\n\r\nThe img-top class is created in the style sheet, and it includes three class rules in its rule-set.\r\n\r\n```\r\n.top-img {\r\n  height: 50px;\r\n  border-radius: 5px;\r\n  margin: 10px;\r\n}\r\n```\r\n\r\nCode in the HTML file adds elements to the classes using attributes inside the tags.  For example, the code to add an image to the `img-top` class is `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\"> `.  This pattern can be used in most tags.\r\n:::\r\n\r\n::: details [**What rules can be added to a class rule-set?**]\r\n\r\nA class rule-set can have the same rules as any other type of selector.  If a rule does not apply to the content of the class (for example, using `font-size` on an element with no text), then the computer will ignore that rule, but still use the rules that work.\r\n:::\r\n\r\n::: details [**Why does the selector have a period in front of it?**]\r\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\r\n:::\r\n\r\n::: details [**Why would a web developer use classes?**]\r\n\r\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Individual Ids\r\n\r\nYou can also use the `id` attribute to single out just one element for a rule-set.  \r\n\r\n# Do This\r\n\r\n* Look at the image element with the `<img id=\"notes\" src=\"Raseone-Music.png\" alt=\"music notes\">` tag, and notice the `id` attribute.\r\n* In `style.css`, look at the rule-set with the `#notes` selector.  Notice how it uses a `#` instead of a period.\r\n* Add a new image into the page from the available files, and give it its own style.\r\n"
      },
      "CSD web classes freeplay_2021": {
        "display_name": "Free Play",
        "bubble_choice_description": "Make a web page using the new code.",
        "long_instructions": "# Free Play\r\n\r\nUse your new knowledge to create a new page styled with classes."
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/18/levels/1": {
    "long_instructions": "# Upload Images\n\nUpload all of your team's images into your project.\n\n# Do This\n\n-   Upload all of the images listed in your team's web site plan into your project.\n-   Double check that each image file name uses good naming conventions.\n-   Double check that everyone on the team has the exact same images with the exact same names."
  },
  "https://studio.code.org/s/csd2-2021/lessons/19/levels/1": {
    "long_instructions": "# Making a Multi-page Site\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What are hyperlinks?**]\n\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n::: details [**How do I add a hyperlink?**]\n\nYou can <strong>add hyperlinks to your web page using the `<a>` element</strong>.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n</div>\n\nA web site should include more than one web page, and they should connect to each other.   Here's an example of a project with multiple pages that are connected by hyperlinks (the blue underlined words that take you to another page when you click on them).\n\n# Do This\n\n-   Use the inspector tool to see the code that creates the hyperlinks on the top of index.html.\n-   Discuss with your partner how you think that code works."
  },
  "https://studio.code.org/s/csd2-2021/lessons/19/levels/2": {
    "long_instructions": "# Adding Links\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What are hyperlinks?**]\n\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n::: details [**How do I add a hyperlink?**]\n\nYou can <strong>add hyperlinks to your web page using the `<a>` element</strong>.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br /><br />\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n</div>\n\nThis page is almost working, but one of the pages is not linked.\n\n# Do This\n\n-   Look at the working links and see how they work.\n-   Add code that will link from the index page to the Charles Bridge page.\n-   Add code that will link the Charles Bridge page to the index page."
  },
  "https://studio.code.org/s/csd2-2021/lessons/19/levels/3": {
    "long_instructions": "# Naming Links\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What are hyperlinks?**]\n\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n::: details [**How do I add a hyperlink?**]\n\nYou can <strong>add hyperlinks to your web page using the `<a>` element</strong>.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br /><br />\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n::: details [**What are good rules for naming links?**]\n\nLink names should make it easy for the user to know where they are going.  Some good rules are:\n\n1.  Give the link a good description that makes sense even without reading all the text around it. For example, \"go here\" or \"learn more\" don't tell you where you are going or what you are learning.\n2.  Give a link name in regular text, rather that just repeating the URL in the link name. For example, \"Home\" or \"Home Page\" are easier to read than \"index.html\".\n3.  Don't link too much text.  Readers will not understand specifically what the link is about.\n\n:::\n\n</div>\n\nJust like images and files, links should have clear names that help someone understand what page they are linked to.\n\n# Do This\n\n-   Read the code or click on the links to see where they go.\n-   Change the names of the links to make it clear where they will take you."
  },
  "https://studio.code.org/s/csd2-2021/lessons/19/levels/4": {
    "long_instructions": "# Naming New Pages\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What are hyperlinks?**]\n\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n::: details [**How do I add a hyperlink?**]\n\nYou can <strong>add hyperlinks to your web page using the `<a>` element</strong>.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br /><br />\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n</div>\n\nYou'll need to follow the same rules for naming html pages that you did for naming images.  This page has some problems caused by poorly named HTML files.\n\n# Do This\n\n-   Click on the links in \"index.html\" and see which ones are broken.\n-   Change the file names and link `href` attributes so that they follow good naming conventions such as:\n    -   Avoid special characters such as `&`, `?`, `%`, `/`, etc.\n    -   Make sure the name has a specific meaning that helps you know what the page is\n    -   Use dashes (`-`) or underscores (`_`) instead of spaces.\n    -   Keep the names as short as possible and still have a clear meaning."
  },
  "https://studio.code.org/s/csd2-2021/lessons/19/levels/5": {
    "long_instructions": "# Navigation Bar\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What are hyperlinks?**]\n\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n::: details [**How do I add a hyperlink?**]\n\nYou can <strong>add hyperlinks to your web page using the `<a>` element</strong>.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br /><br />\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n</div>\n\nMost web sites use navigation bars to help you find your way around a site.  They should be the same on every page.\n\n# Do This\n\n-   Look over the navigation bar on \"index.html\".\n-   Add the same navigation bar to the other three pages."
  },
  "https://studio.code.org/s/csd2-2021/lessons/19/levels/6": {
    "long_instructions": "# Adding New Pages\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What are hyperlinks?**]\n\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n::: details [**How do I add a hyperlink?**]\n\nYou can <strong>add hyperlinks to your web page using the `<a>` element</strong>.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br /><br />\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n</div>\n\nTo make your multi-page website, you'll need to add multiple pages to your project. To practice, let's split the content on this sample page into two pages and link them together.\n\n# Do This\n\n-   Add a new HTML file by clicking  [][0].  The new file will appear in the files list on the left side of the workspace.\n-   Rename the file, either by right clicking it and choosing \"Rename\", or by clicking on it when it's already highlighted.  **Make sure the name is unique, descriptive and ends in \".html\"**.\n-   Use HTML to fill out your new page. (You can use content from the main page.)\n-   Link to your new page from \"index.html\"\n-   Link back to the index from your new page."
  },
  "https://studio.code.org/s/csd2-2021/lessons/19/levels/7": {
    "dsls": {
      "description": "Try extra challenges or learn some new code.",
      "display_name": "Creating Links"
    },
    "sublevels": {
      "CSD U2 external links_2021": {
        "display_name": "External Links",
        "bubble_choice_description": "Link to other people's pages on the World Wide Web.",
        "long_instructions": "# Linking External Pages\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**What are hyperlinks?**]\r\n\r\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\r\n\r\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\r\n\r\n```\r\n\r\n<a href=\"houses.html\"> Unique Houses </a>\r\n\r\n```\r\n:::\r\n\r\n\r\n::: details [**How do I add a hyperlink?**]\r\n\r\nYou can <strong>add hyperlinks to your web page using the `<a>` element</strong>.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\r\n\r\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br /><br />\r\n\r\n```\r\n\r\n<a href=\"houses.html\"> Unique Houses </a>\r\n\r\n```\r\n:::\r\n\r\n::: details [**How do I find the URL for a website?**]\r\n\r\nGo to whatever website you want to link to and copy the text in the address bar (e.g. \"https://www.google.com\" for Google). Then you can use that address for your own links.\r\n\r\n:::\r\n\r\n::: details [**How do I make external links?**]\r\n\r\nPut the entire url (including \"http://\")  into the the href attribute of the `<a>` tag, like this:\r\n\r\n```\r\n<a href=\"https://www.google.com\">Click me to go to Google</a>\r\n```\r\n:::\r\n</div>\r\n\r\nYou can also make links that lead to other websites like Google using the `<a>` tag.\r\n\r\n# Do this:\r\n* Look at the code that links to Google and see how it works\r\n* Link your favorite websites and tell us why you like them!\r\n\r\n"
      },
      "CSD U2 image links_2021": {
        "display_name": "Images as Links",
        "bubble_choice_description": "Turn your images into links.",
        "long_instructions": "# Images as Links\r\n\r\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**What are hyperlinks?**]\r\n\r\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\r\n\r\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\r\n\r\n```\r\n\r\n<a href=\"houses.html\"> Unique Houses </a>\r\n\r\n```\r\n:::\r\n\r\n\r\n::: details [**How do I add a hyperlink?**]\r\n\r\nYou can <strong>add hyperlinks to your web page using the `<a>` element</strong>.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\r\n\r\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br /><br />\r\n\r\n```\r\n\r\n<a href=\"houses.html\"> Unique Houses </a>\r\n\r\n```\r\n:::\r\n\r\n::: details [**How do I find the URL for a website?**]\r\n\r\nGo to whatever website you want to link to and copy the text in the address bar (e.g. \"https://www.google.com\" for Google). Then you can use that address for your own links.\r\n\r\n:::\r\n\r\n::: details [**How do I make external links?**]\r\n\r\nPut the entire url (including \"http://\")  into the the href attribute of the `<a>` tag, like this:\r\n\r\n```\r\n<a href=\"https://www.google.com\">Click me to go to Google</a>\r\n```\r\n:::\r\n</div>\r\n\r\nYou have learned that the text you type between the `<a>` and `</a>` tags is what the visitors to your page will see and click on when using links. You can actually add other tags and content, such as images, to this space in your code as well.\r\n\r\n# Do this:\r\n* Look at the code that makes the first two images on the `index.html` page into links.\r\n* Use that same code pattern to turn the second two images into links, too.\r\n\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/20/levels/1": {
    "long_instructions": "# Your Group Project\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**What are hyperlinks?**]\n\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n::: details [**How do I add a hyperlink?**]\n\nYou can <strong>add hyperlinks to your web page using the `<a>` element</strong>.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br /><br />\n\n    <a href=\"houses.html\"> Unique Houses </a>\n\n:::\n\n</div>\n\nHere is your group project.  It already has an index page, but you'll need to create all of the other pages.\n\n# Do This\n\n-   Double check all of the page names in your website plan to make sure they follow good naming conventions.\n    -   Check with the rest of your group if you need to change a page name.\n-   Create a new page for each of the pages in your website plan.\n-   Inside each new page, create an HTML comment that describes the page and who is in charge of it.\n-   Check to make sure everyone in your group has the exact same list of HTML pages."
  },
  "https://studio.code.org/s/csd2-2021/lessons/20/levels/2": {
    "long_instructions": "# Add Your Content and HTML\n\nNow add all of the HTML you will need for your project, including links to the stylesheet and other pages.\n\nIf you are responsible for the navigation bar, add it here, too.\n\n# Do This\n\n-   Add HTML to the pages.\n-   Test your links to make sure that they work.\n-   Check that all of your images are displaying."
  },
  "https://studio.code.org/s/csd2-2021/lessons/20/levels/3": {
    "long_instructions": "# Share Your Content and HTML\n\nShare your web page with your teammates, and copy and paste the code for their pages into your project.\n\n# Do This\n\n-   \"Share\" your page, and give the link to your teammates.\n-   Get the \"Share\" link from each of your teammates and click the \"View Code\" link at the bottom of the screen.\n-   Copy the HTML from your teammates' pages into your project.\n-   Copy and paste the correct navigation bar onto each page.\n-   Check that all of the links and images work correctly."
  },
  "https://studio.code.org/s/csd2-2021/lessons/20/levels/4": {
    "long_instructions": "# Add Your Styles\n\nNow add all of the CSS you are responsible for, including your classes.\n\n# Do This\n\n-   Add CSS rule sets to the stylesheet.\n-   Check that all of your pages are displaying the correct styles."
  },
  "https://studio.code.org/s/csd2-2021/lessons/20/levels/5": {
    "long_instructions": "# Share Your Styles\n\nNow share all of the CSS styles and classes with your teammates.\n\n# Do This\n\n-   Use the \"Share\" link from each of your teammates and click \"View Code\" to see their HTML and CSS.\n-   Open each of your teammates' stylesheets and copy and paste their code into your stylesheet.\n-   Check the stylesheet to make sure that there are no conflicts (two rule sets for the same tag or style).\n-   Check that all of your pages are displaying the correct styles."
  },
  "https://studio.code.org/s/csd2-2021/lessons/20/levels/6": {
    "long_instructions": "# Check Your Work\n\nYour site is done!  Check to make sure it meets the requirements.\n\n# Do This\n\n-   Check that your site looks the same as your teammates' sites.\n-   Check that your site includes everything from the project guide.\n-   Check that your site meets the requirements of the project in the rubric."
  },
  "https://studio.code.org/s/csd2-2021/lessons/21/levels/1": {
    "display_name": "Final Website",
    "long_instructions": "# Use Feedback\n\nNow it's time to use the peer feedback to make your site even better.\n\n# Do This\n\n-   Use the plan that your team came up with to improve your website."
  },
  "https://studio.code.org/s/csd2-2021/lessons/21/levels/2": {
    "dsls": {
      "title": "CS Discoveries Rapid Survey!"
    }
  },
  "https://studio.code.org/s/csd2-2021/lockable/1/levels/1": {
    "dsls": {
      "title": "Web Development Post-Project Test"
    }
  },
  "https://studio.code.org/s/csd2-2021/lessons/22/levels/1": {
    "dsls": {
      "markdown": "# CS Discoveries Post-Course Survey\n\n**Your input and feedback is important to us!** We use it to:\n\n* understand your experience\n* make improvements to the course\n\nThanks for taking the time to help make CS Discoveries even better!\n\n<a class=\"btn btn-large btn-success\" href=\"/s/csd-post-survey-2021/lockable/1/levels/1/page/1\" target=\"top\">Click here to complete the CS Discoveries Post-Course Survey</a>\n\n(opens in a new tab)\n\n<br>\n\n\n\n\n\n",
      "teacher_markdown": "This level appears at the end of every unit. **Please have your students complete this survey at the end of their final unit!** Students only need to take the survey once at the end of the course.\n\n* The results are vital for us (code.org) to sustain our courses and make improvements.\n* There will be a teacher survey as well where you can provide your own input. You will be notified via email about the teacher survey.\n\n**Instructions for Unlocking the Survey for Students:** [[google doc](https://docs.google.com/document/d/170NdiEBwcLEsLHQqgPy_zdNKFZfO-rS9aCAFCcEYhzY/view)] [[pdf](https://docs.google.com/document/d/170NdiEBwcLEsLHQqgPy_zdNKFZfO-rS9aCAFCcEYhzY/export?format=pdf)]\n\nIf students click the link and see an error message about the survey being locked, please follow the steps in the instructions above to unlock the survey for students.\n\n\n"
    }
  }
}