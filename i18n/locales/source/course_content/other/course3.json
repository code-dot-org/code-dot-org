{
  "short_instructions": {
    "https://studio.code.org/s/course3/stage/2/puzzle/1": "Dear person. Me zombie. Must... get... to sunflower.",
    "https://studio.code.org/s/course3/stage/2/puzzle/2": "Get the zombie to the sunflower, but avoid the chomper!",
    "https://studio.code.org/s/course3/stage/2/puzzle/3": "Must... get... to sunflower.",
    "https://studio.code.org/s/course3/stage/2/puzzle/4": "Use the \"repeat\" block to solve the puzzle quickly...",
    "https://studio.code.org/s/course3/stage/2/puzzle/5": "Can you solve this puzzle using the fewest number of blocks possible?",
    "https://studio.code.org/s/course3/stage/2/puzzle/6": "Get me to the sunflower using the fewest number of blocks possible!",
    "https://studio.code.org/s/course3/stage/2/puzzle/7": "Get the zombie to the sunflower quickly!  Can you solve the puzzle in fewer than 11 blocks?",
    "https://studio.code.org/s/course3/stage/2/puzzle/8": "Get the zombie to the sunflower using as few blocks as you can.  \n(Avoid the chompers!)",
    "https://studio.code.org/s/course3/stage/2/puzzle/9": "Now we have a new block called `repeat until`.  \nThis will let us keep looping commands until the zombie gets the sunflower.  \n\nUse the new `repeat until` block to solve this puzzle in as few commands as possible.",
    "https://studio.code.org/s/course3/stage/2/puzzle/10": "Can you get to the sunflower using only four blocks?",
    "https://studio.code.org/s/course3/stage/2/puzzle/11": "Can you get to the sunflower using only six blocks?",
    "https://studio.code.org/s/course3/stage/2/puzzle/12": "Ok, this is slightly different. Can you do it in only six blocks?",
    "https://studio.code.org/s/course3/stage/2/puzzle/13": "Assessment: Get to the sunflower using as few blocks as possible.",
    "https://studio.code.org/s/course3/stage/2/extras?level_name=course3_maze_debugging_challenge1": "_\"Am I just going around in circles?\"_",
    "https://studio.code.org/s/course3/stage/2/extras?level_name=course3_maze_debugging_challenge2": "_\"If I turn too often, I might get dizzy! Help me reach the acorn with only four `turn` commands.\"_",
    "https://studio.code.org/s/course3/stage/3/puzzle/1": "Help me finish drawing my box. (Each line is 300 pixels long) ",
    "https://studio.code.org/s/course3/stage/3/puzzle/2": "Loop this code using the `repeat` block to complete the square.",
    "https://studio.code.org/s/course3/stage/3/puzzle/3": "This rectangular flower bed has a perimeter of 600. The long side has a length of 200. Draw the rectangle using as few blocks as possible.",
    "https://studio.code.org/s/course3/stage/3/puzzle/4": "Try to figure out what happens if you run this code (or just press \"Run\" and try it). Next, repeat the code enough times to complete the drawing!",
    "https://studio.code.org/s/course3/stage/3/puzzle/5": "How many degrees are in a circle?  Loop the blocks to create a circle of colors.",
    "https://studio.code.org/s/course3/stage/3/puzzle/6": "What can we replace \"???\" with to make sure that the zombie completes this drawing using the loop provided?",
    "https://studio.code.org/s/course3/stage/3/puzzle/7": "This equilateral triangle has angles of 60, 60, and 60 degrees. Each side is 200 pixels. Complete the drawing.",
    "https://studio.code.org/s/course3/stage/3/puzzle/8": "This right triangle has angles of 30, 60, and 90 degrees. The slanted side's length (length of the hypotenuse) is 200 pixels. Complete the drawing.",
    "https://studio.code.org/s/course3/stage/3/puzzle/9": "The halfway line on a soccer field is perpendicular to the sidelines.  \nThis rectangle has a perimeter of 800 pixels total, and it is 240 pixels long. How tall is it?   \n\nDraw the bounds and the halfway line.",
    "https://studio.code.org/s/course3/stage/3/puzzle/10": "Draw the right half of this image so that the design is symmetrical. The triangles are equilateral and have sides that are 50 pixels long.",
    "https://studio.code.org/s/course3/stage/3/puzzle/11": "Complete the green lines. The lines are 300 pixels long and 15 pixels apart.",
    "https://studio.code.org/s/course3/stage/3/puzzle/12": "Assessment: Use a loop to draw the equilateral triangle. Each side is 300 pixels.",
    "https://studio.code.org/s/course3/stage/3/puzzle/15": "Free Draw!  Draw whatever you are inspired to create.",
    "https://studio.code.org/s/course3/stage/5/puzzle/1": "\"Me zombie artist. Me love drawing!\"  \n\nHelp the zombie draw square glasses.  \n\nThe bridge between the glasses is 25 pixels shorter than the width of the squares, which is 100 pixels.",
    "https://studio.code.org/s/course3/stage/5/puzzle/2": "Functions let you define new blocks! \n\nWe've moved the blocks needed for drawing a square into a function called `draw a square`. This time, use the `draw a square` function to create the glasses. \n\nThe squares are 75 pixels apart.",
    "https://studio.code.org/s/course3/stage/5/puzzle/3": "Edit the function to draw a square with a side length of 115 to draw the bigger glasses. \n\nThe squares are now 45 pixels apart.",
    "https://studio.code.org/s/course3/stage/5/puzzle/4": "Now, put the function inside of a loop to draw these three squares.",
    "https://studio.code.org/s/course3/stage/5/puzzle/5": "We've renamed the `draw a square` function to `draw a hexagon`, but it's still giving us squares! Can you modify the `draw a hexagon` function to draw a hexagon with 50 pixel sides? \n\nDraw the image using the new function!",
    "https://studio.code.org/s/course3/stage/5/puzzle/6": "Here's that same `draw a hexagon` function. \n\nWhat happens if you loop the main program 6 times, turning 60 degrees each time you loop?",
    "https://studio.code.org/s/course3/stage/5/puzzle/7": "Functions are really great for drawing complex things multiple times. \n\nCan you use the `draw a flower` function to fill the rest of the planter box?\nThe plants are all 100 pixels apart.",
    "https://studio.code.org/s/course3/stage/5/puzzle/8": "Freeplay: Here is a snowflake function. Experiment with it to create a winter scene! This is a free play level, so there is no puzzle to solve. Have fun!",
    "https://studio.code.org/s/course3/stage/5/puzzle/9": "Freeplay: Here are two functions, one to draw a big gear and one to draw a small gear. Use them to draw the inside of a machine!",
    "https://studio.code.org/s/course3/stage/5/extras?level_name=course3_artist_functions_challenge1": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
    "https://studio.code.org/s/course3/stage/5/extras?level_name=course3_artist_functions_challenge2": "Try this code to see how it works, then make the program your own!",
    "https://studio.code.org/s/course3/stage/6/puzzle/1": "Collect all the nectar from each flower.",
    "https://studio.code.org/s/course3/stage/6/puzzle/2": "Functions are blocks of code that perform a task. Use the \"get 2 nectar\" function to collect the nectar from each flower.",
    "https://studio.code.org/s/course3/stage/6/puzzle/3": "Functions are blocks of code that perform a task.  \n\nUse the `get 5` function to get 5 nectars at a time.",
    "https://studio.code.org/s/course3/stage/6/puzzle/4": "The `move and get nectar` function turns the bee, collects nectar, and then returns the bee to where it started.  \n\nUse the function to collect all of the nectar.",
    "https://studio.code.org/s/course3/stage/6/puzzle/5": "There is now more nectar at the flowers. Edit the given function so that it collects 4 nectars and use it to collect all of the nectar from the flowers.",
    "https://studio.code.org/s/course3/stage/6/puzzle/6": "Now use the same function to collect nectar from the three flowers.",
    "https://studio.code.org/s/course3/stage/6/puzzle/7": "Create your own function that gets 7 nectar, moves forward, and makes 7 honey. Use the function to collect nectar at each flower and make honey at each honeycomb.",
    "https://studio.code.org/s/course3/stage/6/puzzle/8": "Create your own function that goes down a path, gets nectar, makes honey, and then returns the bee to the top of the path.",
    "https://studio.code.org/s/course3/stage/6/puzzle/9": "Purple flowers change between either 1 or 0 nectar each time you run the puzzle.   \n\nCreate a function that collects nectar only from purple flowers that have nectar.",
    "https://studio.code.org/s/course3/stage/6/puzzle/10": "Assessment: Use the given function to collect nectar from each flower.",
    "https://studio.code.org/s/course3/stage/6/puzzle/11": "Assessment: Create a function to turn, move forward and make 3 honey, then return the bee to where it started and turn back.",
    "https://studio.code.org/s/course3/stage/6/extras?level_name=course3_bee_functions_challenge1": "You are on your own for this challenge. This could \"bee\" harder than it looks!",
    "https://studio.code.org/s/course3/stage/6/extras?level_name=course3_bee_functions_challenge2": "You are on your own for this challenge!",
    "https://studio.code.org/s/course3/stage/7/puzzle/1": "This cloud is blocking my view! Check to see if there's a flower under the cloud, and only get nectar if there's a flower. Be careful, it can change!",
    "https://studio.code.org/s/course3/stage/7/puzzle/2": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds hide the same thing!",
    "https://studio.code.org/s/course3/stage/7/puzzle/3": "Now I just want to make honey. Some of these clouds might have honeycombs under them. Be sure to check each cloud!",
    "https://studio.code.org/s/course3/stage/7/puzzle/4": "Sometimes this cloud covers a flower, and sometimes it covers a honeycomb! Use the if/else block to collect nectar if it is a flower, else to make honey (because it is a honeycomb).",
    "https://studio.code.org/s/course3/stage/7/puzzle/5": "There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
    "https://studio.code.org/s/course3/stage/7/puzzle/6": "I am not sure how much nectar this flower has, but I know it has either 1, 2, or 3 nectar. \n\nCombine the conditional blocks (`if` and/or `if/else`) to only get as much nectar as the flower has. \n\nRemember, the amount of nectar can change each time you run the puzzle!",
    "https://studio.code.org/s/course3/stage/7/puzzle/7": "These flowers can have 3, 2, or 1 nectar. \n\nComplete the `check purple flower` function and use it to collect all of the nectar at the flowers.",
    "https://studio.code.org/s/course3/stage/7/puzzle/8": "Write the function for `check flower make honey`. \n\nYour function should check if the purple flower has 3, 2, or 1 nectar and get all of the nectar. \nThen, move forward and make honey.",
    "https://studio.code.org/s/course3/stage/7/puzzle/9": "**Assessment:** This cloud is either hiding a flower with one nectar or a honeycomb that needs one honey.  \n\nComplete the `get nectar or make honey` function, then call it to collect the nectar or honey. ",
    "https://studio.code.org/s/course3/stage/7/extras?level_name=course3_farmer_condLoops_challenge1": "Turn right at the pumpkins. Collect everything to complete the level. Each hidden crop has only one corn or lettuce.",
    "https://studio.code.org/s/course3/stage/7/extras?level_name=course3_farmer_condLoops_challenge2": "Collect everything to complete the level.",
    "https://studio.code.org/s/course3/stage/8/puzzle/1": "Use the `repeat until` block to get the zombie to the sunflower.",
    "https://studio.code.org/s/course3/stage/8/puzzle/2": "Use the `repeat until` block to get the zombie to the sunflower.",
    "https://studio.code.org/s/course3/stage/8/puzzle/3": "Use the `if` block to help me decide when to turn. ",
    "https://studio.code.org/s/course3/stage/8/puzzle/4": "Ok, solve this one just like the last puzzle, but you need to remember how you used the `if` and `repeat until` blocks together.",
    "https://studio.code.org/s/course3/stage/8/puzzle/5": "\"Me want sunflower!\"  \n\nUse an `if` statement to get the zombie to the sunflower with the fewest number of blocks.",
    "https://studio.code.org/s/course3/stage/8/puzzle/6": "\"Eat sunflower!\"\n\nUse an `if` statement to get the zombie to the sunflower with the fewest number of blocks.",
    "https://studio.code.org/s/course3/stage/8/puzzle/7": "The solution to this puzzle isn't very different, but watch out for the chompers!",
    "https://studio.code.org/s/course3/stage/8/puzzle/8": "The `if/else` block checks a condition, and then does one thing OR another. \n\nUse this new block to get me to the sunflower.",
    "https://studio.code.org/s/course3/stage/8/puzzle/9": "One more practice puzzle with the `if/else` block!\n\nTrace it with your finger to see if you can figure it out on your first try.",
    "https://studio.code.org/s/course3/stage/8/puzzle/10": "Can you add just 3 blocks to help the zombie solve a more complex maze? \n\nIf you do it right, he can walk any curvy path no matter the length!",
    "https://studio.code.org/s/course3/stage/8/puzzle/11": "**Assessment:** Use a `repeat until` and an `if/else` block to get me to the sunflower in as few blocks as possible.",
    "https://studio.code.org/s/course3/stage/8/extras?level_name=course3_maze_until_challenge1": "No hints, just challenge. Get the zombie to the sunflower.",
    "https://studio.code.org/s/course3/stage/8/extras?level_name=course3_farmer_until_challenge2": "Use If/Else blocks to follow the curvy path. At each corner, use the `remove 1` command in a loop to clear the piles.",
    "https://studio.code.org/s/course3/stage/11/puzzle/1": "Complete the code to draw these triangles.  The first one is done for you.  Hint:  3 triangles in a 360 degree rotation.",
    "https://studio.code.org/s/course3/stage/11/puzzle/2": "Now nest this loop inside another loop to draw 10 triangles.  This is called a \"nested\" loop.  ",
    "https://studio.code.org/s/course3/stage/11/puzzle/3": "Can you draw a hexagon by looping the triangle code?",
    "https://studio.code.org/s/course3/stage/11/puzzle/4": "Draw the teeth in the alligator's mouth!",
    "https://studio.code.org/s/course3/stage/11/puzzle/5": "Create a sun by nesting the starter code in another loop.\n\nTo get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.",
    "https://studio.code.org/s/course3/stage/11/puzzle/6": "Loop the given code to create a windmill.",
    "https://studio.code.org/s/course3/stage/11/puzzle/7": "Loop this design 10 times. \n\nHow much do you have to turn each time you loop?",
    "https://studio.code.org/s/course3/stage/11/puzzle/8": "Can you draw these 10 squares of this sidewalk using a nested loop? Each square is 30 pixels.",
    "https://studio.code.org/s/course3/stage/11/puzzle/9": "Loop this shape 6 times. \n\nHow much do you have to turn each time you loop? ",
    "https://studio.code.org/s/course3/stage/11/puzzle/10": "Can you draw these 36 triangles using a nested loop?",
    "https://studio.code.org/s/course3/stage/11/puzzle/11": "Assessment: Use a nested loop to complete the design.",
    "https://studio.code.org/s/course3/stage/11/extras?level_name=course2_artist_nestedLoops_challenge1": "Can you figure out how to make a picture like this?",
    "https://studio.code.org/s/course3/stage/11/extras?level_name=course2_artist_nestedLoops_challenge2": "Can you figure out how to make a picture like this?",
    "https://studio.code.org/s/course3/stage/12/puzzle/1": "Move me to the hole and fill it with two shovelfuls of dirt, using the `fill` block.",
    "https://studio.code.org/s/course3/stage/12/puzzle/2": "Move me to the pile of dirt and remove it with 5 shovel scoops, using the `remove 1` block.",
    "https://studio.code.org/s/course3/stage/12/puzzle/3": "Use as few blocks as possible to complete this puzzle!  \n\nMove me to the pile and remove all the dirt, then move to the hole and fill it completely.",
    "https://studio.code.org/s/course3/stage/12/puzzle/4": "Wow, look at that! \n\nI don't know how many shovelfuls of dirt this hole needs.  \nCan you write a program that keeps using the `fill` block until the ground is even?  ",
    "https://studio.code.org/s/course3/stage/12/puzzle/5": "Wow, now there are two deep holes! Can you write a program that fills them both until the ground is even?",
    "https://studio.code.org/s/course3/stage/12/puzzle/6": "Wow, now there is a large pile of dirt! Can you write a program that removes all of it so the ground is even?",
    "https://studio.code.org/s/course3/stage/12/puzzle/7": "Wow, now there are three piles of dirt! Can you write a program that removes each of them until the ground is even?",
    "https://studio.code.org/s/course3/stage/12/puzzle/8": " There is a really deep hole and a really large pile of dirt.  How many shovelfuls of dirt need to be moved around to make the ground flat?",
    "https://studio.code.org/s/course3/stage/12/puzzle/9": "There are a lot of holes and piles.  Help me to fill and remove them to make the ground flat.",
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge3": "Create a new function to collect all the nectar and honey while there is a path ahead. Use it to complete the puzzle!",
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge4": "Use everything you have learned to complete this puzzle!",
    "https://studio.code.org/s/course3/stage/13/puzzle/1": "Use a loop to collect all of the nectar.",
    "https://studio.code.org/s/course3/stage/13/puzzle/2": "Collect all of the nectar from each flower. Use a nested loop. ",
    "https://studio.code.org/s/course3/stage/13/puzzle/3": "Collect all of the nectar by putting the starter code inside another loop.",
    "https://studio.code.org/s/course3/stage/13/puzzle/4": "Collect all of the nectar by creating a nested loop.",
    "https://studio.code.org/s/course3/stage/13/puzzle/5": "Collect all of the nectar from each flower and make honey at the honeycomb. \n\nUse a nested loop. ",
    "https://studio.code.org/s/course3/stage/13/puzzle/6": "These purple flowers have different amount of nectar each time you run the puzzle. \n\nUse the `while nectar` loop to collect all of the nectar. \n\nThis loop will run as long as the condition is true, in this case `nectar > 0`.",
    "https://studio.code.org/s/course3/stage/13/puzzle/7": "Put this loop inside another loop to create a nested loop and collect all of the nectar from the flowers.",
    "https://studio.code.org/s/course3/stage/13/puzzle/8": "Can you use a while loop inside of two other loops to collect all of the nectar?",
    "https://studio.code.org/s/course3/stage/13/puzzle/9": "Collect all of the nectar from these flowers by nesting a while loop inside a repeat.",
    "https://studio.code.org/s/course3/stage/13/puzzle/10": "Gather nectar from the rows of flowers! Use a nested loop.",
    "https://studio.code.org/s/course3/stage/13/puzzle/11": "Assessment: Use a `while` loop to collect all of the nectar from these flowers.",
    "https://studio.code.org/s/course3/stage/13/puzzle/12": "**Assessment:** Collect all of the nectar and make all of the honey using loops.",
    "https://studio.code.org/s/course3/stage/13/extras?level_name=course3_bee_debugging_challenge1": "Watch how the bee gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
    "https://studio.code.org/s/course3/stage/13/extras?level_name=course3_collector_debugging_challenge2": "Are you an expert of nested loops? Use what you have learned so far to collect all of the treasure!",
    "https://studio.code.org/s/course3/stage/14/puzzle/1": "These blocks are really bugging me. \n\nCan you fix them?",
    "https://studio.code.org/s/course3/stage/14/puzzle/2": "Help the bee get the nectar and make honey.",
    "https://studio.code.org/s/course3/stage/14/puzzle/3": "Find the errors and fix them.",
    "https://studio.code.org/s/course3/stage/14/puzzle/4": "These blocks don't work. What's the pattern?",
    "https://studio.code.org/s/course3/stage/14/puzzle/5": "Something isn't right here...",
    "https://studio.code.org/s/course3/stage/14/puzzle/6": "The purple flower has a different amount of nectar each time you run the puzzle. \n\nFix the blocks to get all of the nectar from the flower each time.",
    "https://studio.code.org/s/course3/stage/14/puzzle/7": "The function is missing something...",
    "https://studio.code.org/s/course3/stage/14/puzzle/8": "This function is fine, but it isn't used properly.",
    "https://studio.code.org/s/course3/stage/14/puzzle/9": "Why isn't the bee making enough honey?",
    "https://studio.code.org/s/course3/stage/14/puzzle/10": "Find the errors and fix them.",
    "https://studio.code.org/s/course3/stage/14/puzzle/11": "Does this count correctly?",
    "https://studio.code.org/s/course3/stage/14/puzzle/12": "Assessment: Fix the code.",
    "https://studio.code.org/s/course3/stage/15/puzzle/1": "Attach a block to the \"when left arrow\" block and press \"Run\". Move the paddle using the left arrow to reach the finish target.",
    "https://studio.code.org/s/course3/stage/15/puzzle/2": "Attach a block to the \"when right arrow\" and \"when left arrow\" blocks. Move the paddle to reach both finish targets.",
    "https://studio.code.org/s/course3/stage/15/puzzle/3": "Now try something similar with the \"when up arrow\" block. Move the paddle to the finish target at the top.",
    "https://studio.code.org/s/course3/stage/15/puzzle/4": "This time you need to add four blocks. Move the paddle to all four finish targets to complete this puzzle.",
    "https://studio.code.org/s/course3/stage/15/puzzle/5": "We're going to send a ball flying down towards the paddle. Attach a block to the \"when ball hits paddle\" block to ensure the ball reaches the finish target.",
    "https://studio.code.org/s/course3/stage/15/puzzle/6": "Now the finish target is on the top. You need to attach blocks to both of the \"when ball hits\" blocks to solve this puzzle.",
    "https://studio.code.org/s/course3/stage/15/puzzle/7": "Attach blocks to each of the \"when\" blocks. Bounce the ball until it hits the finish target.",
    "https://studio.code.org/s/course3/stage/15/puzzle/8": "There is now a goal at the top. Attach the \"score point\" and \"score opponent point\" blocks to the \"when ball in goal\" and \"when ball misses paddle\" blocks to make a game. See how many points you can score before your opponent scores twice.",
    "https://studio.code.org/s/course3/stage/15/puzzle/9": "You can now attach blocks to the \"when run\" block. You have to attach the new \"launch new ball\" block in more than one place. Also, try changing the scene or the speed of the paddle and the ball and see how many points you can score before your opponent scores twice.",
    "https://studio.code.org/s/course3/stage/15/puzzle/10": "Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones.",
    "https://studio.code.org/s/course3/stage/16/extras?level_name=course3_playLab_challenge1": "Something should happen when you get enough points or when you run out of points. Add some code to the `win game` and `lose game` functions to make the game work the way it should. \nClick the hints for ideas!",
    "https://studio.code.org/s/course3/stage/21/puzzle/1": "Draw this square using a loop.\n\nEach side is 20 pixels long.",
    "https://studio.code.org/s/course3/stage/21/puzzle/2": "If you place your square loop inside another loop, we call that a nested loop. What do you need to add as an outer loop to make sure all 15 squares line up next to each other?",
    "https://studio.code.org/s/course3/stage/21/puzzle/3": "Now let's go one level deeper! We've nested that whole block of code into another loop, but you need to get the artist back in place to draw the next line. Which of these code blocks can you place at the end of the outermost loop to draw the whole grid?",
    "https://studio.code.org/s/course3/stage/21/puzzle/4": "This diamond has 50 pixel sides and angles of 120 and 60 degrees. Use a loop to draw it.",
    "https://studio.code.org/s/course3/stage/21/puzzle/5": "Repeat this code to make a row of 6 diamonds. \n\nNotice that we changed our diamond code to repeat 3 times instead of 2 - why do you think that is?",
    "https://studio.code.org/s/course3/stage/21/puzzle/6": "How many times do you need to repeat this block to draw the full grid of diamonds?",
    "https://studio.code.org/s/course3/stage/21/puzzle/7": "Let's modify the code from the last puzzle to make this more complex pattern. Notice how the diamonds overlap now, try changing the first \"jump backwards\" from 100 to 50 (half as far) - now how far should the artist go in the second \"jump backwards\"?",
    "https://studio.code.org/s/course3/stage/21/puzzle/8": "Use a loop to draw this hexagon with 40 pixel sides and 60 degree angles.",
    "https://studio.code.org/s/course3/stage/21/puzzle/9": "Now repeat this code 3 times and draw the whole row. \n\nEach hexagon is 80 pixels wide from the furthest points left to right.",
    "https://studio.code.org/s/course3/stage/21/puzzle/10": "Let's loop this code to draw two rows of hexagons. Notice how our second row is shifted to the right.",
    "https://studio.code.org/s/course3/stage/21/puzzle/11": "This code draws two rows of hexagons - loop the whole thing 4 times to draw the whole honeycomb. \n\nYou'll need to jump back 120 pixels in your outermost loop to make sure the artist doesn't draw off the screen.",
    "https://studio.code.org/s/course3/stage/21/puzzle/12": "How many times do you need to loop this to draw a half circle? ",
    "https://studio.code.org/s/course3/stage/21/puzzle/13": "If you create another loop like this one, but turn left instead of right, what happens? \n\nCan you repeat all of that to draw this wave?",
    "https://studio.code.org/s/course3/stage/21/puzzle/14": "Now let's loop that whole thing four times to create this picture frame. Watch out for the corners - you can't just turn 90 degrees! \n\nIf looping a 3 degree turn 60 times makes a half circle, which of these blocks of code will make an additional quarter circle for the corners?",
    "https://studio.code.org/s/course3/stage/21/puzzle/15": "Free play - try your hand at making a pattern of your own!"
  },
  "long_instructions": {
    "https://studio.code.org/s/course3/stage/2/puzzle/7": "Get the zombie to the sunflower quickly!  \n\nCan you solve the puzzle in fewer than 11 blocks?",
    "https://studio.code.org/s/course3/stage/2/puzzle/9": "Now we have a new block called `repeat until`.  \nThis will let us keep looping commands until the zombie gets the sunflower.  \n\nUse the new `repeat until` block to solve this puzzle in as few commands as possible.",
    "https://studio.code.org/s/course3/stage/2/puzzle/13": "**Assessment:** Get to the sunflower using as few blocks as possible.",
    "https://studio.code.org/s/course3/stage/2/extras?level_name=course3_maze_debugging_challenge1": "_\"Am I just going around in circles?\"_",
    "https://studio.code.org/s/course3/stage/2/extras?level_name=course3_maze_debugging_challenge2": "_\"If I turn too often, I might get dizzy! Help me reach the pig with only four `turn` commands.\"_",
    "https://studio.code.org/s/course3/stage/3/puzzle/1": "Help me finish drawing my box. (Each line is 300 pixels long) ",
    "https://studio.code.org/s/course3/stage/3/puzzle/2": "Loop this code using the `repeat` block to complete the square.",
    "https://studio.code.org/s/course3/stage/3/puzzle/3": "This rectangular flower bed has a perimeter of 600.  \nThe long side has a length of 200. \n\nDraw the rectangle using as few blocks as possible.",
    "https://studio.code.org/s/course3/stage/3/puzzle/4": "Try to figure out what happens if you run this code (or just press \"Run\" and try it). \n\nNext, repeat the code enough times to complete the drawing!",
    "https://studio.code.org/s/course3/stage/3/puzzle/5": "How many degrees are in a circle?  \n\nLoop the blocks to create a circle of colors.",
    "https://studio.code.org/s/course3/stage/3/puzzle/6": "What can we replace \"???\" with to make sure that the zombie completes this drawing using the loop provided?",
    "https://studio.code.org/s/course3/stage/3/puzzle/7": "This equilateral triangle has angles of 60, 60, and 60 degrees. Each side is 200 pixels. Complete the drawing.",
    "https://studio.code.org/s/course3/stage/3/puzzle/8": "This right triangle has angles of 30, 60, and 90 degrees.  The slanted side's length (length of the hypotenuse) is 200 pixels. \n\nComplete the drawing.",
    "https://studio.code.org/s/course3/stage/3/puzzle/9": "The halfway line on a soccer field is _perpendicular_ to the sidelines.  \nThis rectangle has a perimeter of 800 pixels total, and it is 240 pixels long. How tall is it?   \n\nDraw the bounds and the halfway line.",
    "https://studio.code.org/s/course3/stage/3/puzzle/10": "Draw the right half of this image so that the design is symmetrical. \nThe triangles are equilateral and have sides that are 50 pixels long.",
    "https://studio.code.org/s/course3/stage/3/puzzle/11": "Complete the green lines.  \n\nThe lines are 300 pixels long and 15 pixels apart.",
    "https://studio.code.org/s/course3/stage/3/puzzle/12": "**Assessment:** Use a loop to draw the equilateral triangle. Each side is 300 pixels.",
    "https://studio.code.org/s/course3/stage/3/puzzle/15": "Free Draw!  Draw whatever you are inspired to create.",
    "https://studio.code.org/s/course3/stage/5/puzzle/1": "\"Me zombie artist. Me love drawing!\" \n\nHelp the zombie draw square glasses.  \n\nThe bridge between the glasses is 25 pixels shorter than the width of the squares, which is 100 pixels.",
    "https://studio.code.org/s/course3/stage/5/puzzle/2": "Functions let you define new blocks! \n\nWe've moved the blocks needed for drawing a square into a function called `draw a square`. This time, use the `draw a square` function to create the glasses. \n\nThe squares are 75 pixels apart.",
    "https://studio.code.org/s/course3/stage/5/puzzle/3": "Edit the function to draw a square with a side length of 115 to draw the bigger glasses. \n\nThe squares are now 45 pixels apart.",
    "https://studio.code.org/s/course3/stage/5/puzzle/4": "Now, put the function inside of a loop to draw these three squares.",
    "https://studio.code.org/s/course3/stage/5/puzzle/5": "We've renamed the `draw a square` function to `draw a hexagon`, but it's still giving us squares!  \n\nCan you modify the `draw a hexagon` function to draw a hexagon with 50 pixel sides? \n\nDraw the image using the new function!",
    "https://studio.code.org/s/course3/stage/5/puzzle/6": "Here's that same `draw a hexagon` function. \n\nWhat happens if you loop the main program 6 times, turning 60 degrees each time you loop?",
    "https://studio.code.org/s/course3/stage/5/puzzle/7": "Functions are really great for drawing complex things multiple times. \n\nCan you use the `draw a flower` function to fill the rest of the planter box?\nThe plants are all 100 pixels apart.",
    "https://studio.code.org/s/course3/stage/5/puzzle/8": "**Freeplay:** Here is a snowflake function. Experiment with it to create a winter scene! \n\nThis is a free play level, so there is no puzzle to solve. Have fun!",
    "https://studio.code.org/s/course3/stage/5/puzzle/9": "**Freeplay:** Here are two functions, one to draw a big gear and one to draw a small gear.  \n\nUse them to draw the inside of a machine!",
    "https://studio.code.org/s/course3/stage/5/extras?level_name=course3_artist_functions_challenge1": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
    "https://studio.code.org/s/course3/stage/5/extras?level_name=course3_artist_functions_challenge2": "Not only can you jump to some pre-set locations, like the corners of the canvas, you can also use a `jump to` command to get to absolutely any spot you like! Try this code to see how it works, then make the program your own!\n\n<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">???</title>\n    <title name=\"YPOS\">???</title>\n    </block></xml>",
    "https://studio.code.org/s/course3/stage/6/puzzle/2": "Functions are blocks of code that perform a task.  \n\nUse the `get 2 nectar` function to collect the nectar from each flower.",
    "https://studio.code.org/s/course3/stage/6/puzzle/3": "Functions are blocks of code that perform a task.  \n\nUse the `get 5` function to get 5 nectars at a time.",
    "https://studio.code.org/s/course3/stage/6/puzzle/4": "The `move and get nectar` function turns the bee, collects nectar, and then returns the bee to where it started.  \n\nUse the function to collect all of the nectar.",
    "https://studio.code.org/s/course3/stage/6/puzzle/9": "Purple flowers change between either 1 or 0 nectar each time you run the puzzle.   \n\nCreate a function that collects nectar only from purple flowers that have nectar.",
    "https://studio.code.org/s/course3/stage/6/puzzle/10": "**Assessment:** Use the given function to collect nectar from each flower.",
    "https://studio.code.org/s/course3/stage/6/puzzle/11": "**Assessment:** Create a function to turn, move forward and make 3 honey, then return the bee to where it started and turn back.",
    "https://studio.code.org/s/course3/stage/6/extras?level_name=course3_bee_functions_challenge1": "You are on your own for this challenge.  This could \"bee\" harder than it looks!",
    "https://studio.code.org/s/course3/stage/6/extras?level_name=course3_bee_functions_challenge2": "You are on your own for this challenge!",
    "https://studio.code.org/s/course3/stage/7/puzzle/1": "This cloud is blocking my view! \n\nCheck to see if there's a flower under the cloud, and only get nectar if there's a flower.  \nBe careful, it can change!",
    "https://studio.code.org/s/course3/stage/7/puzzle/2": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar.  \n\nRemember: Not all clouds hide the same thing!",
    "https://studio.code.org/s/course3/stage/7/puzzle/4": "Sometimes this cloud covers a flower, and sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar only if it is a flower.  \nElse, make honey (because it is a honeycomb).",
    "https://studio.code.org/s/course3/stage/7/puzzle/5": "There will be either a flower or a honeycomb under each of those clouds!\n\nUse the `if/else` block to collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
    "https://studio.code.org/s/course3/stage/7/puzzle/6": "I am not sure how much nectar this flower has, but I know it has either 1, 2, or 3 nectar. \n\nCombine the conditional blocks (`if` and/or `if/else`) to only get as much nectar as the flower has. \n\nRemember, the amount of nectar can change each time you run the puzzle!",
    "https://studio.code.org/s/course3/stage/7/puzzle/7": "These flowers can have 3, 2, or 1 nectar. \n\nComplete the `check purple flower` function and use it to collect all of the nectar at the flowers.",
    "https://studio.code.org/s/course3/stage/7/puzzle/8": "Write the function for `check flower make honey`. \n\nYour function should check if the purple flower has 3, 2, or 1 nectar and get all of the nectar. \nThen, move forward and make honey.",
    "https://studio.code.org/s/course3/stage/7/puzzle/9": "**Assessment:** This cloud is either hiding a flower with one nectar or a honeycomb that needs one honey.  \n\nComplete the `get nectar or make honey` function, then call it to collect the nectar or honey. ",
    "https://studio.code.org/s/course3/stage/7/extras?level_name=course3_farmer_condLoops_challenge1": "The pumpkins mark the place where you should turn. _Turn right at the pumpkins._ Otherwise keep going forward, but remember to collect all of the lettuce or corn along the way. \n\n**Each hidden crop has only one corn or lettuce.**",
    "https://studio.code.org/s/course3/stage/7/extras?level_name=course3_farmer_condLoops_challenge2": "_\"It's a vegetable maze!\"_ \n\nTurn right at pumpkins, turn left at the lettuce. Collect everything to complete the level.",
    "https://studio.code.org/s/course3/stage/8/puzzle/1": "Use the `repeat until` block to get the zombie to the sunflower.",
    "https://studio.code.org/s/course3/stage/8/puzzle/2": "Use the `repeat until` block to get the zombie to the sunflower.",
    "https://studio.code.org/s/course3/stage/8/puzzle/3": "Use the `if` block to help me decide when to turn. ",
    "https://studio.code.org/s/course3/stage/8/puzzle/4": "Ok, solve this one just like the last puzzle, but you need to remember how you used the `if` and `repeat until` blocks together.",
    "https://studio.code.org/s/course3/stage/8/puzzle/5": "\"Me want sunflower!\"  \n\nUse an `if` statement to get the zombie to the sunflower with the fewest number of blocks.",
    "https://studio.code.org/s/course3/stage/8/puzzle/6": "\"Eat sunflower!\"\n\nUse an `if` statement to get the zombie to the sunflower with the fewest number of blocks.",
    "https://studio.code.org/s/course3/stage/8/puzzle/7": "The solution to this puzzle isn't very different, but watch out for the chompers!",
    "https://studio.code.org/s/course3/stage/8/puzzle/8": "The `if/else` block checks a condition, and then does one thing OR another. \n\nUse this new block to get me to the sunflower.",
    "https://studio.code.org/s/course3/stage/8/puzzle/9": "One more practice puzzle with the `if/else` block!\n\nTrace it with your finger to see if you can figure it out on your first try.",
    "https://studio.code.org/s/course3/stage/8/puzzle/10": "Can you add just 3 blocks to help the zombie solve a more complex maze? \n\nIf you do it right, he can walk any curvy path no matter the length!",
    "https://studio.code.org/s/course3/stage/8/puzzle/11": "**Assessment:** Use a `repeat until` and an `if/else` block to get me to the sunflower in as few blocks as possible.",
    "https://studio.code.org/s/course3/stage/8/extras?level_name=course3_maze_until_challenge1": "No hints, just challenge. Get the zombie to the sunflower.",
    "https://studio.code.org/s/course3/stage/8/extras?level_name=course3_farmer_until_challenge2": "Use If/Else blocks to follow the curvy path. At each corner, use the `remove 1` command in a loop to clear the piles.",
    "https://studio.code.org/s/course3/stage/11/puzzle/1": "Complete the code to draw these triangles.  The first one is done for you.  Hint:  3 triangles in a 360 degree rotation.",
    "https://studio.code.org/s/course3/stage/11/puzzle/2": "Now nest this loop inside another loop to draw 10 triangles.  \nThis is called a \"nested\" loop.  ",
    "https://studio.code.org/s/course3/stage/11/puzzle/3": "Can you draw a hexagon by looping the triangle code?",
    "https://studio.code.org/s/course3/stage/11/puzzle/4": "Draw the teeth in the alligator's mouth!",
    "https://studio.code.org/s/course3/stage/11/puzzle/5": "Create a sun by nesting the starter code in another loop.\n\nTo get this cool design with a hollow center, you'll need to jump forward by the length of the triangle before turning.",
    "https://studio.code.org/s/course3/stage/11/puzzle/6": "Loop the given code to create a windmill.",
    "https://studio.code.org/s/course3/stage/11/puzzle/7": "Loop this design 10 times. \n\nHow much do you have to turn each time you loop?",
    "https://studio.code.org/s/course3/stage/11/puzzle/8": "Can you draw these 10 squares of this sidewalk using a nested loop? \n\nEach square is 30 pixels.",
    "https://studio.code.org/s/course3/stage/11/puzzle/9": "Loop this shape 6 times. \n\nHow much do you have to turn each time you loop? ",
    "https://studio.code.org/s/course3/stage/11/puzzle/10": "Can you draw these 36 triangles using a nested loop?",
    "https://studio.code.org/s/course3/stage/11/puzzle/11": "**Assessment:** Use a nested loop to complete the design.",
    "https://studio.code.org/s/course3/stage/11/extras?level_name=course2_artist_nestedLoops_challenge1": "Can you figure out how to make a picture like this?\n\n-   Both shapes have **50 pixel sides.**\n-   The _octagons_ are made with **45 degree** turns.\n-   The _triangles_ are made with **120 degree** turns.",
    "https://studio.code.org/s/course3/stage/11/extras?level_name=course2_artist_nestedLoops_challenge2": "Can you figure out how to make a picture like this?\n\n-   The first inner loop should make an octagon.\n-   The second inner loop should make a hexagon.\n-   The third inner loop should make a square.",
    "https://studio.code.org/s/course3/stage/12/puzzle/1": "Move me to the hole and fill it with two shovelfuls of dirt, using the `fill` block.",
    "https://studio.code.org/s/course3/stage/12/puzzle/2": "Move me to the pile of dirt and remove it with 5 shovel scoops, using the `remove 1` block.",
    "https://studio.code.org/s/course3/stage/12/puzzle/3": "Use as few blocks as possible to complete this puzzle!  \n\nMove me to the pile and remove all the dirt, then move to the hole and fill it completely.",
    "https://studio.code.org/s/course3/stage/12/puzzle/4": "Wow, look at that! \n\nI don't know how many shovelfuls of dirt this hole needs.  \nCan you write a program that keeps using the `fill` block until the ground is even?  ",
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge3": "Create a new function to collect all the nectar and honey while there is a path ahead. Use it to complete the puzzle!",
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge4": "Use everything you have learned to complete this puzzle!",
    "https://studio.code.org/s/course3/stage/13/puzzle/2": "Collect all of the nectar from each flower. \n\nUse a nested loop. ",
    "https://studio.code.org/s/course3/stage/13/puzzle/5": "Collect all of the nectar from each flower and make honey at the honeycomb. \n\nUse a nested loop. ",
    "https://studio.code.org/s/course3/stage/13/puzzle/6": "These purple flowers have different amount of nectar each time you run the puzzle. \n\nUse the `while nectar` loop to collect all of the nectar. \n\nThis loop will run as long as the condition is true, in this case `nectar > 0`.",
    "https://studio.code.org/s/course3/stage/13/puzzle/11": "**Assessment:** Use a `while` loop to collect all of the nectar from these flowers.",
    "https://studio.code.org/s/course3/stage/13/puzzle/12": "**Assessment:** Collect all of the nectar and make all of the honey using loops.",
    "https://studio.code.org/s/course3/stage/13/extras?level_name=course3_bee_debugging_challenge1": "Watch how the bee gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
    "https://studio.code.org/s/course3/stage/13/extras?level_name=course3_collector_debugging_challenge2": "Are you an expert of nested loops? Use what you have learned so far to collect all of the treasure!",
    "https://studio.code.org/s/course3/stage/14/puzzle/1": "These blocks are really bugging me. \n\nCan you fix them?",
    "https://studio.code.org/s/course3/stage/14/puzzle/6": "The purple flower has a different amount of nectar each time you run the puzzle. \n\nFix the blocks to get all of the nectar from the flower each time.",
    "https://studio.code.org/s/course3/stage/14/puzzle/12": "**Assessment:** Fix the code.",
    "https://studio.code.org/s/course3/stage/16/extras?level_name=course3_playLab_challenge1": "_The **squirrels** are terrified to see that a **dinosaur** has come to town! Can the brave **knight** keep them all from panicking?_\n\nRules:\n\n1.  _Touching the squirrels scores you points._\n2.  _Touching the dinosaur takes many points away._\n\nHere is a different kind of game that has already been started for you! Play it to see how it works. \n\nSomething should happen when you get enough points or when you run out of points. Add some code to the `win game` and `lose game` functions to make the game work the way it should. \nClick the hints for ideas!",
    "https://studio.code.org/s/course3/stage/21/puzzle/1": "Draw this square using a loop.\n\nEach side is 20 pixels long.",
    "https://studio.code.org/s/course3/stage/21/puzzle/2": "If you place your square loop inside another loop, we call that a nested loop. \n\nWhat do you need to add as an outer loop to make sure all 15 squares line up next to each other?",
    "https://studio.code.org/s/course3/stage/21/puzzle/3": "Now let's go one level deeper! We've nested that whole block of code into another loop, but you need to get the artist back in place to draw the next line. Which of these code blocks can you place at the end of the outermost loop to draw the whole grid?",
    "https://studio.code.org/s/course3/stage/21/puzzle/4": "This diamond has 50 pixel sides and angles of 120 and 60 degrees. \n\nUse a loop to draw it.",
    "https://studio.code.org/s/course3/stage/21/puzzle/5": "Repeat this code to make a row of 6 diamonds. \n\nNotice that we changed our diamond code to repeat 3 times instead of 2 - why do you think that is?",
    "https://studio.code.org/s/course3/stage/21/puzzle/6": "How many times do you need to repeat this block to draw the full grid of diamonds?",
    "https://studio.code.org/s/course3/stage/21/puzzle/7": "Let's modify the code from the last puzzle to make this more complex pattern. Notice how the diamonds overlap now, try changing the first \"jump backwards\" from 100 to 50 (half as far) - now how far should the artist go in the second \"jump backwards\"?",
    "https://studio.code.org/s/course3/stage/21/puzzle/8": "Use a loop to draw this hexagon with 40 pixel sides and 60 degree angles.",
    "https://studio.code.org/s/course3/stage/21/puzzle/9": "Now repeat this code 3 times and draw the whole row. \n\nEach hexagon is 80 pixels wide from the furthest points left to right.",
    "https://studio.code.org/s/course3/stage/21/puzzle/10": "Let's loop this code to draw two rows of hexagons. \n\nNotice how our second row is shifted to the right.",
    "https://studio.code.org/s/course3/stage/21/puzzle/11": "This code draws two rows of hexagons - loop the whole thing 4 times to draw the whole honeycomb. \n\nYou'll need to jump back 120 pixels in your outermost loop to make sure the artist doesn't draw off the screen.",
    "https://studio.code.org/s/course3/stage/21/puzzle/12": "How many times do you need to loop this to draw a half circle?",
    "https://studio.code.org/s/course3/stage/21/puzzle/13": "If you create another loop like this one, but turn left instead of right, what happens? \n\nCan you repeat all of that to draw this wave?",
    "https://studio.code.org/s/course3/stage/21/puzzle/14": "Now let's loop that whole thing four times to create this picture frame. Watch out for the corners - you can't just turn 90 degrees! \n\nIf looping a 3 degree turn 60 times makes a half circle, which of these blocks of code will make an additional quarter circle for the corners?",
    "https://studio.code.org/s/course3/stage/21/puzzle/15": "Free play - try your hand at making a pattern of your own!"
  },
  "authored_hints": {
    "https://studio.code.org/s/course3/stage/2/puzzle/4": {
      "4-5_Maze_4_a": "If you are having a hard time figuring out where to put the repeat, try coding everything out and looking for a pattern."
    },
    "https://studio.code.org/s/course3/stage/2/puzzle/5": {
      "4-5_Maze_5_a": "Try using a `repeat` loop anytime you need to `move forward` more than two steps.",
      "4-5_Maze_5_b": "You can use more than one `repeat` loop in a puzzle."
    },
    "https://studio.code.org/s/course3/stage/2/puzzle/6": {
      "4-5_Maze_6_a": "Try tracing out a path with your finger.  \nIs it the shortest path you can find?"
    },
    "https://studio.code.org/s/course3/stage/2/puzzle/7": {
      "4-5_Maze_7_a": "**Want to get your code as small as it can be?** \n\nLook for patterns in your blocks. Do you see something that repeats?  Try putting a loop around it instead!"
    },
    "https://studio.code.org/s/course3/stage/2/puzzle/10": {
      "4-5_Maze_10_a": "If you can't see how to use loops to solve the puzzle right away, try solving it the long way first, then looking for a pattern.\n\nWhat should you put a `repeat` around to make the code shorter?"
    },
    "https://studio.code.org/s/course3/stage/2/extras?level_name=course3_maze_debugging_challenge1": {
      "courseC_maze_debugging_challenge1_a": "Left or right? It's up to you!",
      "courseC_maze_debugging_challenge1_b": "Scrat's path is the shape of a rectangle! He needs to turn the same way each time!",
      "courseC_maze_debugging_challenge1_c": "If you are getting stuck, you can always start over, or remove all the code and find your own way!"
    },
    "https://studio.code.org/s/course3/stage/2/extras?level_name=course3_maze_debugging_challenge2": {
      "courseC_maze_debugging_challenge2_a": "One way to solve this is to add more steps forward in between the turns.",
      "courseC_maze_debugging_challenge2_b": "If you are getting stuck, you can always start over or remove all the code and find your own way!",
      "courseC_maze_debugging_challenge2_c": "There are two different paths you can follow just using `move forward`, and only four turns. If you find a way to use the `repeat` block, there may be even more!\n\n[][0]"
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/1": {
      "4-5_Artist_1_a": "[][0]"
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/3": {
      "4-5_Artist_3_a": "If the flower bed is 600 pixels around and two of the sides are 200 pixels long, here is how to figure out what the short sides add up to:\n\n**600 - 200 - 200 = 200**\n\nThat means both short sides add up to 200 pixels.\n\n**What is 200 / 2?**",
      "4-5_Artist_3_b": "If you can't see where the `repeat` loop goes right away, try coding out the whole solution and look for a pattern."
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/5": {
      "4-5_Artist_4_a": "There are 360 degrees in a circle! \n\nThat's how many times you need to repeat this code (turning 1 degree at a time) before the circle is done!"
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/6": {
      "4-5_Artist_5_a": "Trial and error is a great method, but you can also solve the problem by dividing the 90 degree angle into thirds.\n\n**90 / 3 = \\_\\_\\_\\_\\_**"
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/8": {
      "4-5_Artist_7_a": "Which angle is the smallest?  At which angle is the artist standing? "
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/9": {
      "4-5_Artist_8_a": "The long sides are 240 pixels each.  That means that the 2 short sides must total:\n\n**800 - 240 - 240 = 320**\n\nWhat is **320/2** ? ",
      "4-5_Artist_8_b": "This image can be done 2 ways!  \n\n-   Draw two rectangles that are **120** long and **160** tall, with an overlapping side\n\n-   Draw one rectangle that is **240** long and **160** tall, then add a line in the middle."
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/10": {
      "4-5_Artist_9_a": "When a triangle is an equilateral, all sides and all angles are the same.  ",
      "4-5_Artist_9_b": "You will need to draw three triangles of the same size. Don't forget to jump to your new position after each one."
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/11": {
      "4-5_Artist_11_a": "Within your loop, make sure the artist jumps backwards and upwards after drawing each line."
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/12": {
      "4-5_Artist_Assessment_1_a": "You only need to draw the outside triangle to complete this puzzle."
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/1": {
      "2-3_Artist_Functions_1_a": "The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.",
      "2-3_Artist_Functions_1_b": "It is okay to draw overlapping lines to make your glasses."
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/2": {
      "2-3_Artist_Functions_2_a": "Your program should:\n\n-   Use function\n-   Move forward 100 + 75 pixels\n-   Use function"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/3": {
      "2-3_Artist_Functions_3_a": "**115 + 45 = 160**"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/4": {
      "2-3_Artist_Functions_4_a": "The artist needs to turn 120 degrees between each square to complete this design."
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/5": {
      "2-3_Artist_Functions_11_a": "You will need to change not only the number and length of sides within the function, but also the angle the artist turns between each side."
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/7": {
      "2-3_Artist_Functions_12_a": "Try running the code first to see what you need to add."
    },
    "https://studio.code.org/s/course3/stage/5/extras?level_name=course3_artist_functions_challenge1": {
      "courseE_artist_functions_challenge1_a": "If you call the function one more time, you can create the same design in the final corner. You can also `jump to` other positions or change the whole thing around however you want!"
    },
    "https://studio.code.org/s/course3/stage/5/extras?level_name=course3_artist_functions_challenge2": {
      "courseE_artist_functions_challenge1_a": "<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n\nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!\n\n[][0]"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/4": {
      "2-3_Bee_Functions_4_a": "You don't have to use a loop with a function. Try moving, using the function, then moving and using the function again."
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/6": {
      "2-3_Bee_Functions_6_a": "You don't have to use a loop with a function. Try moving, using the function, then moving and using the function again."
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/7": {
      "2-3_Bee_Functions_8_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\n\n[][0]"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/8": {
      "2-3_Bee_Functions_8_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
      "2-3_Bee_Functions_8_b": "Remember to build your code inside of the green function block.\n\n[][0]"
    },
    "https://studio.code.org/s/course3/stage/6/extras?level_name=course3_bee_functions_challenge1": {
      "courseE_bee_functions_challenge1_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
      "courseE_bee_functions_challenge1_b": "Remember to build your code inside of the green function block."
    },
    "https://studio.code.org/s/course3/stage/6/extras?level_name=course3_bee_functions_challenge2": {
      "courseE_bee_functions_challenge1_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
      "courseE_bee_functions_challenge1_b": "Remember to build your code inside of the green function block."
    },
    "https://studio.code.org/s/course3/stage/7/puzzle/4": {
      "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge."
    },
    "https://studio.code.org/s/course3/stage/7/puzzle/5": {
      "remember_quantum": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge."
    },
    "https://studio.code.org/s/course3/stage/7/puzzle/6": {
      "4-5 Bee Conditionals 6_a": "You can solve this puzzle using only the blocks on the workspace.  What order should they go in?",
      "4-5 Bee Conditionals 6_b": "Make sure that you are checking to see if the flower has more than **0** nectar at least **3** times to solve this puzzle."
    },
    "https://studio.code.org/s/course3/stage/7/extras?level_name=course3_farmer_condLoops_challenge1": {
      "courseD_farmer_condLoops_challenge1_a": "The `STEP` button could be very helpful in this challenge.",
      "courseD_farmer_condLoops_challenge1_b": "Normally you would just `pick pumpkin` if you are at a pumpkin. What else do you need to do if you're at a pumpkin?"
    },
    "https://studio.code.org/s/course3/stage/7/extras?level_name=course3_farmer_condLoops_challenge2": {
      "courseD_farmer_condLoops_challenge2_a": "The amount of each vegetable in each space varies. Use `while` loops for these."
    },
    "https://studio.code.org/s/course3/stage/11/puzzle/3": {
      "4-5_Nested_Loops_6_a": "Don't forget to make a turn after your inner loop.\n\nYou'll be looping 6 triangles over 360 degrees.\n\n**360 / 6 = ?**"
    },
    "https://studio.code.org/s/course3/stage/11/puzzle/7": {
      "4-5_Nested_Loops_7_a": "This design will loop 10 times over 360 degrees.\n\n**360 / 10 = ?**"
    },
    "https://studio.code.org/s/course3/stage/11/puzzle/9": {
      "4-5_Nested_Loops_8_a": "You will be looping this shape 6 times over 360 degrees.\n\n**360 / 6 = ?**"
    },
    "https://studio.code.org/s/course3/stage/11/puzzle/10": {
      "4-5_Nested_Loops_12_a": "**360 / 36 = ?**"
    },
    "https://studio.code.org/s/course3/stage/11/extras?level_name=course2_artist_nestedLoops_challenge1": {
      "courseD_artist_nestedLoops_challenge1_a": "Start by making a nested loop to create four octagons. Turn 45 degrees to make the octagon. Jump, then turn 90 degrees after each one.",
      "courseD_artist_nestedLoops_challenge1_b": "Add code to draw a triangle inside of your nested loop. Use 120 degree turns for your triangle.",
      "courseD_artist_nestedLoops_challenge1_c": "Use a nested loop:\n\n-   Repeat 8 times\n    -   draw an octagon\n    -   draw a triangle\n    -   jump forward 50 pixels\n    -   turn right by 90 degrees"
    },
    "https://studio.code.org/s/course3/stage/11/extras?level_name=course2_artist_nestedLoops_challenge2": {
      "courseD_artist_nestedLoops_challenge2_a": "To draw a regular octagon, the artist needs to turn 45 degrees 8 times.",
      "courseD_artist_nestedLoops_challenge2_b": "To draw a square, the artist needs to turn 90 degrees 4 times."
    },
    "https://studio.code.org/s/course3/stage/12/puzzle/8": {
      "4-5_While_Loops_8_a": "Each item will need its own `while` loop."
    },
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge3": {
      "courseF_bee_functions_challenge1_a": "You can use the functions in the tool box to help you. You can call a function inside of another function's definition!"
    },
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge4": {
      "courseF_bee_functions_challenge2_a": "If there is a path to the right, you should do the following:\n\n-   Get any nectar or make any honey.\n-   Turn right towards the side path.\n-   Move to the end of the side path.\n-   Turn right.\n\nIf you repeat the above actions twice, you will be ready to move back down the main path.\n\n**Only click for another hint if you want to see the full solution!**",
      "courseF_bee_functions_challenge2_b": "**Solution:**\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_untilBlocked\">\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"maze_if\">\n                    <title name=\"DIR\">isPathRight</title>\n                    <statement name=\"DO\">\n                      <block type=\"procedures_callnoreturn\" id=\"function\">\n                        <mutation name=\"move and check\"/>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation/>\n    <title name=\"NAME\">check nectar or honey</title>\n    <statement name=\"STACK\">\n      <block type=\"bee_ifElseFlower\">\n        <title name=\"LOC\">atFlower</title>\n        <statement name=\"DO\">\n          <block type=\"bee_whileNectarAmount\">\n            <title name=\"ARG1\">nectarRemaining</title>\n            <title name=\"OP\">&gt;</title>\n            <title name=\"ARG2\">0</title>\n            <statement name=\"DO\">\n              <block type=\"maze_nectar\"/>\n            </statement>\n          </block>\n        </statement>\n        <statement name=\"ELSE\">\n          <block type=\"bee_whileNectarAmount\">\n            <title name=\"ARG1\">honeyAvailable</title>\n            <title name=\"OP\">&gt;</title>\n            <title name=\"ARG2\">0</title>\n            <statement name=\"DO\">\n              <block type=\"maze_honey\"/>\n            </statement>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" deletable=\"false\" movable=\"false\" editable=\"false\">\n    <mutation/>\n    <title name=\"NAME\">move and check</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n            <mutation name=\"check nectar or honey\"/>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"maze_untilBlocked\">\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n</xml>"
    },
    "https://studio.code.org/s/course3/stage/13/puzzle/10": {
      "4-5_Bee_Nested_Loops_Rows_a": "Try treating this puzzle like a long rectangle where the bee needs to move forward, then turn left several times to complete the path."
    },
    "https://studio.code.org/s/course3/stage/13/extras?level_name=course3_bee_debugging_challenge1": {
      "courseD_bee_debugging_challenge1_a": "Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?",
      "courseD_bee_debugging_challenge1_b": "On the way back, have the bee follow the same pattern. How much honey does the bee need to make each time it moves over a honey comb?",
      "courseD_bee_debugging_challenge1_c": "After the bee makes it to the bottom row, have it repeat these commands:\n\n-   Repeat 2 times:\n    -   Move forward\n    -   Make 3 honey\n-   Move backward"
    },
    "https://studio.code.org/s/course3/stage/13/extras?level_name=course3_collector_debugging_challenge2": {
      "courseD_collector_debugging_challenge2_a": "Start by focusing on collect TWO gems from each of the first two piles.\n\n[][0]\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n</xml>",
      "courseD_collector_debugging_challenge2_b": "Next, collect the remaining gems in this row.\n\n[][0]\nAdd these blocks to your program.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n\n        </statement>\n      </block>\n\n</xml>",
      "courseD_collector_debugging_challenge2_c": "Finally, collect the remaining treasure. Add these blocks to your program.\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>",
      "courseD_collector_debugging_challenge2_d": "Here is the complete solution for this puzzle.\n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"controls_repeat\">\n                <title name=\"TIMES\">2</title>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveForward</title>\n                    <next>\n                      <block type=\"controls_repeat\">\n                        <title name=\"TIMES\">2</title>\n                        <statement name=\"DO\">\n                          <block type=\"collector_collect\"/>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
    },
    "https://studio.code.org/s/course3/stage/14/puzzle/1": {
      "4-5_Bee_Debugging_1_a": "If you are having trouble figuring out what's not right, try running it to see where things go wrong."
    },
    "https://studio.code.org/s/course3/stage/16/extras?level_name=course3_playLab_challenge1": {
      "courseE_playLab_challenge1_a": "Here are some things you could do when the player wins the game:\n\n-   Make the dinosaur vanish.\n-   Stop the squirrels.\n-   Make the squirrels and knight happy.\n-   Set a new background.\n-   Make the knight thank the player for helping.\n-   Make all of the actors vanish and show a \"You Win!\" message.",
      "courseE_playLab_challenge1_b": "Here are some things you could do when the player loses the game:\n\n-   Make the knight vanish.\n-   Make the squirrels sad.\n-   Make the dinosaur say something.\n-   Set a new background.\n-   Make all of the actors vanish and show a \"Game Over\" message."
    },
    "https://studio.code.org/s/course3/stage/21/puzzle/2": {
      "4-5_Artist_Patterns_2_a": "Notice that since the squares are 20 pixels long, you'll need to jump 20 pixels before you start your next square."
    },
    "https://studio.code.org/s/course3/stage/21/puzzle/3": {
      "4-5_Artist_Patterns_3_a": "Be careful to pull out the full block of \"code from the toolbar each time you try a new one.",
      "4-5_Artist_Patterns_3_b": "If your code becomes too confusing, you can always click \"Start Over\" and try again!"
    },
    "https://studio.code.org/s/course3/stage/21/puzzle/5": {
      "4-5_Artist_Patterns_5_a": "Now, when the artist finished each diamond, he's facing the opposite direction from where he needs to be to start the next one.  \n\nHow many degrees does he need to be turned to set himself straight?"
    },
    "https://studio.code.org/s/course3/stage/21/puzzle/12": {
      "4-5_Artist_Patterns_11_a": "If there are 360 degrees in a circle and each loop turns 3 degrees, how many times would you need to loop draw half of a full circle?"
    }
  },
  "callouts": {
    "https://studio.code.org/s/course3/stage/5/extras?level_name=course3_artist_functions_challenge1": {
      "courseE_artist_functions_challenge1_callout1": "Keep this program going by adding more code to the bottom.",
      "courseE_artist_functions_challenge1_callout2": "If you don't like this design, change it to anything you want!"
    },
    "https://studio.code.org/s/course3/stage/5/extras?level_name=course3_artist_functions_challenge2": {
      "courseE_artist_functions_challenge2_callout1": "Keep this program going by adding more code to the bottom.",
      "courseE_artist_functions_challenge2_callout2": "If you don't like this design, change it to anything you want!"
    },
    "https://studio.code.org/s/course3/stage/7/puzzle/2": {
      "4_5_Bee_Conditionals_2_1": "Remember, check to see if EVERY cloud has a FLOWER. You don't have to check for honeycombs at all."
    },
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge3": {
      "courseF_bee_functions_challenge1_1": "What code should you put in this function?",
      "courseF_bee_functions_challenge1_2": "The \"check nectar or honey\" function can be used here if edit it to make honey multiple times."
    },
    "https://studio.code.org/s/course3/stage/13/extras?level_name=course3_bee_debugging_challenge1": {
      "courseD_bee_debugging_challenge1_callout1": "Use this command to move the bee backward."
    },
    "https://studio.code.org/s/course3/stage/16/extras?level_name=course3_playLab_challenge1": {
      "courseC_PlayLab_events_challenge1_1": "This block lets you move actors to different parts of the game space."
    },
    "https://studio.code.org/s/course3/stage/21/puzzle/15": {
      "4-5_Artist_Patterns_Free_Play_1": "All of your favorite blocks are now organized into categories.  Click on these words to see where everything went!"
    }
  },
  "block_categories": {
    "https://studio.code.org/s/course3/stage/6/extras?level_name=course3_bee_functions_challenge1": {
      "Actions": "Actions",
      "Loops": "Loops",
      "Conditionals": "Conditionals",
      "Functions": "Functions"
    },
    "https://studio.code.org/s/course3/stage/6/extras?level_name=course3_bee_functions_challenge2": {
      "Actions": "Actions",
      "Loops": "Loops",
      "Functions": "Functions"
    },
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge3": {
      "Default": "Default",
      "Actions": "Actions",
      "Loops": "Loops",
      "Conditionals": "Conditionals",
      "Functions": "Functions",
      "Math": "Math"
    },
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge4": {
      "Default": "Default",
      "Actions": "Actions",
      "Loops": "Loops",
      "Conditionals": "Conditionals",
      "Functions": "Functions",
      "Math": "Math"
    },
    "https://studio.code.org/s/course3/stage/16/extras?level_name=course3_playLab_challenge1": {
      "Actions": "Actions",
      "Events": "Events",
      "Loops": "Loops",
      "Conditionals": "Conditionals",
      "Functions": "Functions"
    },
    "https://studio.code.org/s/course3/stage/21/puzzle/15": {
      "Actions": "Actions",
      "Brushes": "Brushes",
      "Loops": "Loops",
      "Math": "Math",
      "Logic": "Logic",
      "Functions": "Functions",
      "Variables": "Variables"
    }
  },
  "function_names": {
    "https://studio.code.org/s/course3/stage/3/puzzle/3": {
      "draw a flower": "draw a flower"
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/7": {
      "draw a tree": "draw a tree"
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/8": {
      "draw triangle": "draw triangle",
      "draw a circle": "draw a circle",
      "draw a car": "draw a car"
    },
    "https://studio.code.org/s/course3/stage/3/puzzle/9": {
      "draw circle": "draw circle",
      "draw goal": "draw goal"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/1": {
      "draw ear stems": "draw ear stems"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/2": {
      "draw a square": "draw a square",
      "draw ear stems": "draw ear stems"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/3": {
      "draw a square": "draw a square",
      "draw ear stems": "draw ear stems"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/4": {
      "draw a square": "draw a square"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/5": {
      "draw a hexagon": "draw a hexagon"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/6": {
      "draw a hexagon": "draw a hexagon"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/7": {
      "draw a flower": "draw a flower"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/8": {
      "draw a snowflake": "draw a snowflake"
    },
    "https://studio.code.org/s/course3/stage/5/puzzle/9": {
      "big gear": "big gear",
      "small gear": "small gear"
    },
    "https://studio.code.org/s/course3/stage/5/extras?level_name=course3_artist_functions_challenge1": {
      "my design": "my design",
      "do something": "do something"
    },
    "https://studio.code.org/s/course3/stage/5/extras?level_name=course3_artist_functions_challenge2": {
      "my design": "my design",
      "do something": "do something"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/2": {
      "get 2 nectar": "get 2 nectar"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/3": {
      "get 5": "get 5"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/4": {
      "move and get nectar": "move and get nectar"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/5": {
      "move and get 4": "move and get 4"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/6": {
      "move and get 4": "move and get 4"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/7": {
      "get 7 nectar make 7 honey": "get 7 nectar make 7 honey"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/8": {
      "get 7 make 7": "get 7 make 7"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/9": {
      "collect purple nectar": "collect purple nectar"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/10": {
      "get 7": "get 7"
    },
    "https://studio.code.org/s/course3/stage/6/puzzle/11": {
      "move and get 3": "move and get 3"
    },
    "https://studio.code.org/s/course3/stage/6/extras?level_name=course3_bee_functions_challenge1": {
      "do something": "do something",
      "get 3 nectar or honey": "get 3 nectar or honey"
    },
    "https://studio.code.org/s/course3/stage/6/extras?level_name=course3_bee_functions_challenge2": {
      "do something": "do something",
      "move and collect": "move and collect"
    },
    "https://studio.code.org/s/course3/stage/7/puzzle/7": {
      "check purple flower": "check purple flower"
    },
    "https://studio.code.org/s/course3/stage/7/puzzle/8": {
      "check flower make honey": "check flower make honey"
    },
    "https://studio.code.org/s/course3/stage/7/puzzle/9": {
      "get nectar or make honey": "get nectar or make honey"
    },
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge3": {
      "check nectar or honey": "check nectar or honey",
      "row of nectar": "row of nectar",
      "rowOfNectar": "rowOfNectar"
    },
    "https://studio.code.org/s/course3/stage/12/extras?level_name=course3_bee_functions_challenge4": {
      "check nectar or honey": "check nectar or honey",
      "row of nectar": "row of nectar",
      "rowOfNectar": "rowOfNectar",
      "move and check": "move and check"
    },
    "https://studio.code.org/s/course3/stage/14/puzzle/7": {
      "make 3 honey": "make 3 honey"
    },
    "https://studio.code.org/s/course3/stage/14/puzzle/8": {
      "get 5 nectar": "get 5 nectar"
    },
    "https://studio.code.org/s/course3/stage/14/puzzle/9": {
      "make all honey": "make all honey"
    },
    "https://studio.code.org/s/course3/stage/16/extras?level_name=course3_playLab_challenge1": {
      "win game": "win game",
      "lose game": "lose game",
      "keep playing": "keep playing"
    }
  }
}