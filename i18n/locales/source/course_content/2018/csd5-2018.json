{
  "display_name": {
    "https://studio.code.org/s/csd5-2018/stage/1/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/2/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/3/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/2": "Black and White Pixelation Widget",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/3": "Black and White Pixelation Widget",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/4": "Black and White Pixelation Widget",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/5": "Black and White Pixelation Widget",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/6": "Black and White Pixelation Widget",
    "https://studio.code.org/s/csd5-2018/stage/5/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/5/puzzle/8": "Binary and Data",
    "https://studio.code.org/s/csd5-2018/stage/6/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/7/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/8/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/9/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/10/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/10/puzzle/3": "Collecting Information About Users",
    "https://studio.code.org/s/csd5-2018/stage/10/puzzle/4": "Collecting Information About Users",
    "https://studio.code.org/s/csd5-2018/stage/11/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/12/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/13/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/14/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/15/puzzle/1": "Lesson Overview",
    "https://studio.code.org/s/csd5-2018/stage/15/puzzle/2": "Sample App"
  },
  "short_instructions": {
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/2": "Complete the X shape by typing 0s and 1s",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/3": "Draw a smiley face (click here to see image)",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/4": "Change the width and height sliders to find the image (click here to see more)",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/5": "Add eyebrows to the smiley face (click here to see the image)",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/6": "Draw anything you like"
  },
  "long_instructions": {
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/2": "# Do This\n\nComplete the \"X\" shape by typing 0s and 1s. You can always click \"Readable Format\" if you want to clean up your work.",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/3": "# Do This\n\nUse the pixelation widget to draw a smiley face\n\n[][0]",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/4": "# Do This\n\nThe width and height sliders are set incorrectly for this image so it doesn't look like anything. Change them until you find the image.\n\n[][0]",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/5": "# Do This\n\nAdd eyebrows to this smiley face. Remember to use the \"Readable Format\" if you get stuck.\n\n[][0]",
    "https://studio.code.org/s/csd5-2018/stage/4/puzzle/6": "# Do This\n\nNow it's your turn. Draw anything you want in the pixelation widget. Feel free to change the width and height of your image if you wish.",
    "https://studio.code.org/s/csd5-2018/stage/5/puzzle/2": "# 5-Bit Number\n\nWhen you only had four bits, the highest number that you could make was fifteen.  Now you'll have a chance to work with more bits to make higher numbers.\n\nIn this activity, the dots are replaced with numbers, but you still add up everything that's showing to see what number the binary code stands for.  The left-most bit doesn't have a number yet, so you'll have to give it one.\n\n# Do This\n\n-   Click on the bits to turn them on and off, and see the different numbers you can make.\n-   With your partner, discuss the pattern in the numbers.  Decide what number you think should go in the left most box.\n-   Click \"Edit\" to change the value of the left most bit.\n-   Once you've decided on the value, try to make the following numbers: 16, 27, 31",
    "https://studio.code.org/s/csd5-2018/stage/5/puzzle/3": "# 6-Bit Number\n\nThis widget helps you to calculate 6-bit binary numbers.\n\n# Do This\n\n-   With your partner, answer the following questions:\n    1.  What's the biggest number you can make with this widget?\n    2.  The record for most skips by a dog and person in one minute is 59.  How would you encode 59 in binary?",
    "https://studio.code.org/s/csd5-2018/stage/5/puzzle/4": "# Decoding multiple numbers\n\nHere's a widget that can calculate numbers of 4, 5, or 6 bits.  You can use it to find the two world records encoded in the binary string below.\n\n[][0]\n\n1.  Most number of people lifted and thrown in two minutes. (4 bits)\n2.  Most canned drinks opened by a parrot in one minute. (6 bits)\n\n# Do This\n\n-   Decode the two numbers from the binary string.",
    "https://studio.code.org/s/csd5-2018/stage/5/puzzle/5": "# Decoding multiple numbers\n\nHere's a widget that can calculate numbers up to to eight bits. You can use it to find the values of the two world records below.\n\nDon't forget to make sure that the \"1\" bit is always the right most bit.  If you have extra bits on the left side of the widget, just keep them turned off.\n\n[][0]\n\n1.  Longest tail on a dog (in inches) (5 bits)\n2.  Most spoons balanced on someone's face (5 bits)\n\n# Do This\n\n-   Decode the two numbers from a the binary string.\n    -   _Hint: You'll need to read the numbers in order, with the first answer using the first five bits, and the second answer using the five bits after that._",
    "https://studio.code.org/s/csd5-2018/stage/5/puzzle/6": "# Decoding multiple numbers\n\nHere's a new bit string.  This time, you don't know the bit length of the two numbers.  Try to decode the numbers without knowing the bit length.\n\n[][0]\n\n1.  Largest wind chime, in feet (? bits)\n2.  Furthest arrow shot with someone's feet (in feet) (? bits)\n\n# Do This\n\n-   Try to decode the two numbers from the binary string.\n-   Discuss with your partner why you cannot know for sure whether your answer is correct.",
    "https://studio.code.org/s/csd5-2018/stage/5/puzzle/7": "# Bit Length\n\nIf you don't know how many bits long each number is, you won't be able to decode a string of numbers.\n\nFor example, the following binary string could be decoded many different ways.\n\n[][0]\n\nIf you split the string like this, the string reads 10, 84.\n\n[][1] [][2]\n\nIf you split it like this, the string reads 42, 20.\n\n[][3] [][4]\n\nTo solve this problem, people agree on a fixed length for every number.  The following string uses the same two numbers, but each number takes up exactly eight bits, no matter how many bits it actually needs.\n\n[][5]\n\n# Do This\n\n-   Use the binary widget to decode the string that uses eight bit numbers.\n-   Check you answer with a partner to see whether you got the same answer.",
    "https://studio.code.org/s/csd5-2018/stage/10/puzzle/2": "Watch this video to learn how this problem is solved by Netflix. As you watch think about what data is being collected and where it's coming from.",
    "https://studio.code.org/s/csd5-2018/stage/10/puzzle/3": "Watch this video to learn how this problem is solved by Waze. As you watch think about what data is being collected and where it's coming from.",
    "https://studio.code.org/s/csd5-2018/stage/10/puzzle/4": "Watch this video to learn how this problem is solved by Amazon. As you watch think about what data is being collected and where it's coming from.",
    "https://studio.code.org/s/csd5-2018/stage/11/puzzle/3": "# Pizza Party\n\nThe pizza party data has been put into an app for you, and the answers from another class have been added.  Because this is an app, we can automate the creation of the bar chart from the given data.\n\n# Do This\n\n-   Click \"Run\" to see the list of answers that the classes have given.\n-   Discuss with a partner what you think the chart of this data will look like.\n-   Click \"Show Chart\" to see for yourself.\n\n# Spreadsheet Version\n\nThe pizza party data has also been put into a spreadsheet for you, if you would like to use it instead.  To use the spreadsheet, you'll need to make your own copy of it.\n\n-   This link will make you your own copy of the \"Pizza Topping Choices\" data: [Pizza Topping Choices][0]\n-   You can also download a CSV version of the file [here][1].",
    "https://studio.code.org/s/csd5-2018/stage/11/puzzle/4": "# Pizza Party\n\nWhen people work with data, they know to leave off answers that don't make sense, and that some answers, such as \"peppers\", \"pepppers\" and \"green peppers\", actually meant the same thing. Computers don't know how to do this, so we have to clean the data before the computer is able to use it.\n\nThis version of the app has a second column for data to be cleaned.\n\n## Do this\n\n-   Click \"Run\" to see the new list of answers to be cleaned.\n-   Click on each answer that needs to be cleaned and correct it so that the computer will chart it properly. (You may want to delete some answers entirely.)\n-   When you are finished, click \"Show Chart\" to see the new chart of cleaned answers.",
    "https://studio.code.org/s/csd5-2018/stage/15/puzzle/2": "# Sample App\n\nHere is an example of an app that uses data to help the user solve a problem.  With a partner, play through the app a few times to see how it works.\n\nDiscuss the following questions with your partner:\n\n-   What choice does the app help the user to make? \n-   What data does it use to make that recommendation?\n-   How do you think the creators of the app decided on the algorithm that they use to make the choice?"
  }
}