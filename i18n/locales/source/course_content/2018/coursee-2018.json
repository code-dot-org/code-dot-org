{
  "https://studio.code.org/s/coursee-2018/lessons/1/levels/1": {
    "title": "My Robotic Friends"
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/1": {
    "dsls": {
      "content1": "Test Markdown Textbook Page",
      "markdown": "# **In this lesson...**\n\n### Have you ever wanted to tell someone exactly what to do? Do they always listen to you?\n\n### Today, you'll be telling a machine what to do, step by step- and it will listen!\n\n---\n\n## **Blocks to Know**\n\n![](https://images.code.org/b2376dc67948e29247931dec5e9fef8f-image-1524678585868.png)\n\n![](https://images.code.org/bd2de01f2c3b86109329b10eb544a6e6-image-1524678600994.png)\n\n![](https://images.code.org/db76d28bb3dbabdb78edb2cf54c6cb11-image-1524678618646.png)\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/3": {
    "short_instructions": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
    "long_instructions": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
    "authored_hints": {
      "courseC_maze_programming1_a": "If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.",
      "courseC_maze_programming1_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "callouts": {
      "grade2_CaringForNewPet_0_1": "After connecting all the blocks, press \"Run\" to start your program."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/4": {
    "short_instructions": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
    "long_instructions": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
    "authored_hints": {
      "courseC_maze_programming2_a": "To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.",
      "courseC_maze_programming2_b": "Make sure all 3 blocks are clicked together and attached to the `when run` block."
    },
    "callouts": {
      "courseC_maze_programming2_1": "This is the toolbox. It’s where you’ll find extra blocks to complete your puzzles."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/5": {
    "short_instructions": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
    "long_instructions": "_\"This pig is ruffling my feathers.\"_\n\nThere is one extra block that is going to cause the bird to crash.\\\nThrow it away by removing it from the other blocks and dragging it back to the toolbox.",
    "authored_hints": {
      "courseC_maze_programming3_a": "[][0]\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong."
    },
    "callouts": {
      "courseC_maze_programming3_2": "You can drag extra blocks to the toolbox to throw them away.",
      "stone_block_2": "Grey blocks are made of stone and cannot be thrown away."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/6": {
    "short_instructions": "Use the new `comment` block to leave yourself quick reminders.",
    "long_instructions": "_\"I'm confused. Help me remember how to solve this maze.\"_  \n\n* * *\n\nTo pass this puzzle, solve the maze and use the new [blockly block][0] block to leave yourself quick reminders. They can help you remember what you were doing and why!   \n\nComments are only used for **you**, they don't affect the play area.",
    "authored_hints": {
      "courseC_maze_programming4_a": "Comments are also helpful when other people try to read your code.",
      "courseC_maze_programming4_b": "Add a comment when you change directions- what would have happened if you turned the other way?"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/7": {
    "short_instructions": "Avoid TNT or feathers will fly!",
    "long_instructions": "_\"Trace the path and lead me to the silly pig.\"_ \n\nAvoid TNT or feathers will fly!",
    "authored_hints": {
      "courseC_maze_programming4_a": "You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.",
      "courseC_maze_programming4_b": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig."
    },
    "callouts": {
      "courseC_maze_programming4_1": "This is your block limit.  It tells you how many of these blocks you have left to use."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/8": {
    "short_instructions": "Avoid the TNT.",
    "long_instructions": "_\"Follow this path to get me to the pig!\"_\n\nAvoid the TNT.",
    "authored_hints": {
      "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
      "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
      "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "callouts": {
      "": "These blocks don't have numbers on them. You can use as many as you want!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/9": {
    "short_instructions": "Pay attention to the sequence and see if you can figure out how to get to that pig!",
    "long_instructions": "Pay attention to the sequence and see if you can figure out how to get to that pig!",
    "authored_hints": {
      "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
      "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
      "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "callouts": {
      "": "These blocks don't have numbers on them. You can use as many as you want!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/10": {
    "short_instructions": "Navigate this maze to help the bird find the pig!",
    "long_instructions": "**Challenge:** Navigate this maze to help the bird find the pig!",
    "authored_hints": {
      "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
      "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
      "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/11": {
    "short_instructions": "Help the bird get to the pig.",
    "long_instructions": "Help the bird get to the pig."
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/12": {
    "short_instructions": "Get the bird to the pig.",
    "long_instructions": "Get the bird to the pig."
  },
  "https://studio.code.org/s/coursee-2018/lessons/2/levels/13": {
    "dsls": {
      "content1": "Test Markdown Textbook Page",
      "markdown": "# **You just learned \"algorithms\"!**  \n\n\n\n### **An algorithm is just a list of steps to finish a task**. The fun thing about algorithms is that you get to decide what happens, step by step.  \n\n### When you write an algorithm for a machine, this is called a **program**.  \n\n---\n\n## **Vocab to Know**\n\n* ### **Algorithm** - A list of steps to finish a task\n\n* ### **Program** - An algorithm that has been coded into something that can be run by a machine\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/3/levels/1": {
    "title": "translation missing: en-US.data.unplugged.BuildingAFoundation_2018.title"
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/1": {
    "dsls": {
      "content1": "Test Markdown Textbook Page",
      "markdown": "# In this lesson...\n\n### What do you think of when you think about bugs? \n\n### When most people think about bugs, they think about creepy crawly things. In computer science, bugs aren't alive, but they can still be tricky.\n\n### The puzzles in this lesson have already been solved for you! But not so fast- they don't seem to be working yet. Are bugs behind all this? \n\n---\n\n## Blocks to Know\n\n![](https://images.code.org/b2376dc67948e29247931dec5e9fef8f-image-1524678585868.png)\n\n![](https://images.code.org/bd2de01f2c3b86109329b10eb544a6e6-image-1524678600994.png)\n\n![](https://images.code.org/db76d28bb3dbabdb78edb2cf54c6cb11-image-1524678618646.png)\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/3": {
    "short_instructions": "Fix the code to help get Scrat get to the acorn.",
    "long_instructions": "This code isn't quite right!  \n\nFix the code to help Scrat get to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging1_a": "-   Does everything work after the first step?\n-   Does it still work after the second?\n-   Where does it go wrong?",
      "courseC_maze_debugging1_b": "There is 1 block you need to add to complete this puzzle."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/4": {
    "short_instructions": "Use your debugging skills to get Scrat to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging2_a": "There is a lot of valuable code in the workspace.  Don't just delete it all and start over!",
      "courseC_maze_debugging2_b": "-   Does everything work after the first step?\n-   Does it still work after the second?\n-   Where does it go wrong?",
      "courseC_maze_debugging2_c": "Can't figure out what's wrong? Try running the code a couple of times to see what happens."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/5": {
    "short_instructions": "Remove blocks to get Scrat to the acorn!",
    "long_instructions": "Something is not quite right. \n\nRemove blocks to get Scrat to the acorn!",
    "authored_hints": {
      "courseC_maze_debugging3_a": "To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.\n\nDrag the block you want to delete back to the toolbox.\n\nFinally, put your other blocks back where they belong.\n\n[][0]",
      "courseC_maze_debugging3_b": "Can't figure out what's wrong? Try running the code a couple of times to see what happens."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/6": {
    "short_instructions": "Someone has their directions mixed up! Can you help?",
    "authored_hints": {
      "courseC_maze_debugging4_a": "Use the \"Step\" button to run through the instructions one at a time.  Does that help you find the line where things go wrong?",
      "courseC_maze_debugging4_b": "One of the turns is making Scrat go in the wrong direction. Can you figure out which one?"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/7": {
    "short_instructions": "Debug this level by rearranging and changing blocks.",
    "authored_hints": {
      "courseC_maze_debugging5_a": "There are lots of helpful blocks in the workspace already.  Don't delete them all! \n\nUse the \"Step\" button to go through and figure out where the code goes wrong.",
      "courseC_maze_debugging5_c": "You can change the direction of the turn block by clicking on the dropdown.",
      "courseC_maze_debugging5_b": "Try saying what Scrat should do out loud.  Is it the same as the code in the workspace?  What goes wrong?"
    },
    "callouts": {
      "courseC_maze_debugging5_1": "These gray blocks are locked and cannot be deleted!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/8": {
    "short_instructions": "Figure out what is wrong and get Scrat to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging6_a": "-   What is Scrat supposed to do?\n-   What does Scrat do?\n-   What does that tell you?",
      "courseC_maze_debugging6_b": "Once you've found and fixed the first bug, go through the debugging process again to find the second one.\n\nRepeat the process until the program works!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/9": {
    "short_instructions": "**Challenge:** Debug this level by rearranging, adding, and deleting blocks.",
    "authored_hints": {
      "courseC_maze_debugging7_a": "-   Does everything work at the first step?\n-   How about the second step?\n-   Where does it go wrong?",
      "courseC_maze_debugging7_b": "Don't forget to use the \"Step\" button to run the program line by line!",
      "courseC_maze_debugging7_c": "After you find and fix the first bug, make sure to use the debugging process again to find the next one.\n\nRepeat the debugging process until the program works!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/10": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The program won't fail. Scrat will get to the acorn.",
              "correct": false,
              "feedback": "Incorrect. Scrat goes the wrong way after his final turn."
            },
            {
              "text": "Scrat will go the wrong way after his final turn.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "Scrat takes one too few steps and ends up short of the acorn.",
              "correct": false,
              "feedback": "Incorrect. Taking one too few steps happens after Scrat turns the wrong way."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The first error is that Scrat goes the wrong way after his final turn. "
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. What is the first bug that will make this program fail?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/11": {
    "short_instructions": "Debug this level to get Scrat to the acorn."
  },
  "https://studio.code.org/s/coursee-2018/lessons/4/levels/12": {
    "dsls": {
      "content1": "Test Markdown Textbook Page",
      "markdown": "# **You just learned \"debugging\"!**\n\n### **A bug is something that goes wrong.** It is an error in a program. When you find and fix those errors, you are **debugging** a problem.\n\n### You have to practice **persistence**, another word for not giving up, in order to find and fix all the bugs.\n\n---\n\n## **Vocab to Know**\n\n* ### **Bug** - Part of a program that does not work correctly\n\n* ### **Debugging** - Finding and fixing problems in an algorithm or program\n\n* ### **Persistence** - Not giving up\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/levels/2": {
    "short_instructions": "Play with the blocks in the toolbox to see what they do!",
    "long_instructions": "_\"Hi, I'm an artist. You can write code to make me draw almost anything.\"_\n\nPlay with the blocks in the toolbox to see what they do!"
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/levels/3": {
    "short_instructions": "Drag blocks onto the screen to have the artist draw over the grey lines in the picture. (Each line is 100 pixels long)",
    "long_instructions": "_\"Let's make a cage for my pet monster!\"_\n\nDrag blocks onto the screen to have the artist draw over the grey lines in the picture.\\\n(Each line is 100 pixels long)",
    "authored_hints": {
      "courseC_artist_prog2_a": "_\"If you use the [blockly block][0] block, I will draw a line.\"_",
      "courseC_artist_prog2_b": "Having trouble turning the corner? Use the [blockly block][0] block."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/levels/4": {
    "short_instructions": "Each side of the inner square is 100 pixels and all of the angles are 90 degrees.",
    "long_instructions": "_\"This spaceship needs a window!\"_\n\nEach side of the inner square is 100 pixels and all of the angles are 90 degrees.",
    "authored_hints": {
      "courseC_artist_prog3_a": "To create this window, just draw a square with 100 pixel sides.\n\n-   move forward\n-   turn\n-   move forward\n-   turn\n-   move forward\n-   turn\n-   move forward",
      "courseC_artist_prog3_b": "Want to make shorter code? Try using a loop in this puzzle."
    },
    "function_definitions": {
      "draw flame": {
        "name": "draw flame",
        "parameters": {
          "x": "x"
        }
      },
      "draw fire": {
        "name": "draw fire"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/levels/5": {
    "short_instructions": "Finish Starla's rocket so she can chase her pet.",
    "long_instructions": "_\"Oh no!  Starla's pet alien just flew away! Let's help the spacewoman!\"_\n\nFinish Starla's rocket so she can chase her pet.\\\n(Each side of the triangle is 100 pixels long and has 120 degree outer angles.)",
    "authored_hints": {
      "courseC_artist_prog4_a": "To finish the rocket, just draw the triangle on top!",
      "courseC_artist_prog4_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
      "courseC_artist_prog4_c": "To draw a triangle, you will want to:\n\n-   move forward\n-   turn left 120 degrees\n-   move forward\n-   turn left 120 degrees\n-   move forward"
    },
    "function_definitions": {
      "booster": {
        "name": "booster"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/levels/6": {
    "short_instructions": "Finish this tag by drawing a rectangle around the outside.\n(The long sides are 200 pixels each and the short sides are each 100 pixels)",
    "long_instructions": "_\"Maybe we should make a tag for each of our pets in case they get lost!\"_\n\nFinish this tag by drawing a rectangle around the outside.\\\n(The long sides are 200 pixels each and the short sides are each 100 pixels)",
    "authored_hints": {
      "courseC_artist_prog5_a": "Slow the slider down all the way until you can run your code line-by-line to see where things go wrong.",
      "courseC_artist_prog5_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.",
      "courseC_artist_prog5_c": "You can use the drop down menus in the blocks to change what they do!",
      "courseC_artist_prog5_d": "Each turn should be 90 degrees to the right."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/levels/7": {
    "short_instructions": "Draw this diamond with 200 pixel sides.",
    "long_instructions": "_\"Now a tag for Belle!\"_\n\nDraw this square with 200 pixel sides.",
    "authored_hints": {
      "courseC_artist_prog6_a": "The artist is already facing the correct way to draw his first line.",
      "courseC_artist_prog6_b": "This diamond is really just a square that's standing on its corner.",
      "courseC_artist_prog6_c": "Since this diamond is also a square, be sure to turn 90 degrees at the corners."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/levels/8": {
    "short_instructions": "**Challenge:** This tag is a special one!  Can you figure out how to draw the outline?",
    "long_instructions": "**Challenge:** This tag is a special one!  \n\nCan you figure out how to draw the outline?\\\n(The long side is 150 pixels and each of the short sides are 75 pixels.)",
    "authored_hints": {
      "courseC_artist_prog7_a": "Every angle is either 45 or 90 degrees.",
      "courseC_artist_prog7_b": "Does it work at the first step?\\\nHow about the second?\\\nWhere does it go wrong?",
      "courseC_artist_prog7_c": "You can use the dropdown menu on the turn blocks to see which angle you need!",
      "courseC_artist_prog7_d": "You will want to:\n\n-   move forward\n-   turn right 45 degrees\n-   move forward\n-   turn right 90 degrees\n-   move forward\n-   turn right 45 degrees\n\nRepeat this pattern 2 times!",
      "courseC_artist_prog7_e": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/levels/9": {
    "short_instructions": "One more tag.  This is a triangle for Pi.\n(Each side is 150 pixels)",
    "long_instructions": "One more tag.  This is a triangle for Pi.\\\n(Each side is 150 pixels)"
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/levels/10": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The artist will draw a triangle with three equal sides.",
              "correct": false,
              "feedback": "Incorrect.  The artist draws a square."
            },
            {
              "text": "The artist will draw a single line.",
              "correct": false,
              "feedback": "Incorrect.  The artist draws a square."
            },
            {
              "text": "The artist will draw a square.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The artist draws a square."
            }
          ],
          "questions": [
            {
              "text": "Look carefully at the code below. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/extras?level_name=courseC_artist_prog_challenge1_2018": {
    "short_instructions": "Draw rooms for each of the animals. ",
    "long_instructions": "Draw rooms for each of the animals. There are many different ways to solve this puzzle, so have some fun! Each square has a side length of 100 pixels.",
    "authored_hints": {
      "courseC_artist_prog_challenge1_a": "You can draw this as a rectangle with a line in the middle or two different squares!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/5/extras?level_name=courseC_artist_prog_challenge2a_2018": {
    "short_instructions": "_\"Help me paint the yellow lines on this road!\"_",
    "long_instructions": "_\"Help me paint the yellow lines on this road!\"_\n\nThe three line segments have lengths of 150, 100, and 200 pixels!",
    "authored_hints": {
      "courseC_artist_prog_challenge2_a": "After you draw the first line, turn left before you draw your second line.",
      "courseC_artist_prog_challenge2_b": "After you draw the second line, turn right before you draw your third line."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/6/levels/1": {
    "title": "translation missing: en-US.data.unplugged.courseB_unplugged_loopyMRF_2018.title"
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/1": {
    "dsls": {
      "content1": "Test Markdown Textbook Page",
      "markdown": "# In this lesson...\n\n### Imagine you want your character to move forward **5** times. This would be pretty easy- just drag out **5** move forward blocks. Now, imagine you want your character to move forward **5,000** times! \n\n### How long would it take you to drag out **5,000** blocks? \n\n### Wish there was an easy way to do this? There is!\n\n---\n\n## Blocks to Know\n\n![](https://images.code.org/2d949be303e653f4ea203cc00f0b06c3-image-1524697677509.png)\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/3": {
    "short_instructions": "Move forward by 60 pixels to complete this puzzle.",
    "long_instructions": "What a lovely day!  \n\nHelp the Artist cover his flowers before the winter by moving forward by 60 pixels."
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/4": {
    "short_instructions": "Move forward five times and make this colored line.",
    "long_instructions": "Add some beauty by repeating that step five times, changing to a random color between each move."
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/6": {
    "short_instructions": "Use a `repeat` loop to draw five colored dashes.",
    "long_instructions": "Draw the colorful line 5 times again, this time using a `repeat` loop."
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/7": {
    "short_instructions": "What happens when you add a 72 degree right turn after everything else inside your loop?",
    "long_instructions": "What happens when you add a 72 degree right turn after everything else inside your loop?"
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/8": {
    "short_instructions": "Use loops to draw this staircase.",
    "long_instructions": "Loops sure make writing code easier!\n\nUse loops to draw this staircase.\n\n-   Each stairstep is 50 pixels long and 50 pixels tall\n-   You will need to turn 90 degrees in each direction"
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/9": {
    "short_instructions": "Edit your loop to draw this staircase.",
    "long_instructions": "This staircase is much bigger, but it takes the same amount of code as the last puzzle!\n\nFix this loop to complete the puzzle."
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/10": {
    "short_instructions": "Look for a pattern and make this code shorter using loops!",
    "long_instructions": "Look for a pattern and make this code shorter using loops!"
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/11": {
    "short_instructions": "Look for a pattern and make this code shorter using loops.",
    "long_instructions": "**Challenge:** Look for a pattern and make this code shorter using loops."
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/12": {
    "short_instructions": "Solve this puzzle by drawing a square.",
    "long_instructions": "Solve this puzzle by drawing a square with 200 pixel sides."
  },
  "https://studio.code.org/s/coursee-2018/lessons/7/levels/13": {
    "dsls": {
      "content1": "Test Markdown Textbook Page",
      "markdown": "# **You just learned \"loops\"!**  \n\n### **A loop is the action of doing something over and over again.** Another word for doing something again is repeat.\n\n### Loops are really useful for repeating patterns. It might be helpful to write out your program without any loops first, then try to find a pattern. \n\n### When you see one, stick that pattern into a `repeat` block!\n\n---\n\n## **Vocab to Know**\n\n* ### **Loop** - The action of doing something over and over again\n\n* ### **Repeat** - Do something again\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/1": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "long_instructions": "_\"This is going to **BEE** great!\"_\n\nHelp the bee collect all of the nectar.",
    "authored_hints": {
      "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
      "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/2": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "long_instructions": "\"_This is going to **BEE** great!_\"\n\nHelp the bee collect all of the nectar.",
    "authored_hints": {
      "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
      "courseD_bee_nestedLoops1_b": "Try writing code for one side of the square first. Can you loop this to get all of the nectar?",
      "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/3": {
    "dsls": {
      "content1": "Test Markdown Textbook Page",
      "markdown": "# **In this lesson...**\n\n### Have you ever wondered what would happen if you put a loop *inside another loop*? \n\n### It might just make you go loopy!\n\n### If a normal loop is good at repeating patterns, what do you think a loop inside another loop would be good at? Let's find out!\n\n---\n\n## **Blocks to Know**\n\n![](https://images.code.org/cecea12a6973648b56512ff0990da6fb-image-1524759116715.gif)\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/5": {
    "short_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "long_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bee will move forward and get nectar only one time.",
              "correct": false,
              "feedback": "Incorrect.  The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            },
            {
              "text": "The bee will get only 2 units of nectar.",
              "correct": false,
              "feedback": "Incorrect.  The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            },
            {
              "text": "The bee will get all of the nectar.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            }
          ],
          "questions": [
            {
              "text": "Look closely at the nested loops below. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/6": {
    "short_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "long_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "authored_hints": {
      "courseD_bee_nestedLoops2_a": "To solve this puzzle, you will need to nest one `repeat` loop inside of another.",
      "courseD_bee_nestedLoops2_b": "Can't figure out where to put the loops? Try writing the code on paper step-by-step and look for a pattern.",
      "courseD_bee_nestedLoops2_c": "Remember you can put more than one block inside of a loop."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/7": {
    "short_instructions": "Get the zombie to the sunflower using the fewest number of blocks possible.",
    "long_instructions": "_\"Zombie hungry!\"_\n\nGet the zombie to the sunflower using the fewest number of blocks possible.",
    "authored_hints": {
      "courseD_maze_nestedLoops3_a": "To solve this puzzle, you will need to \"nest\" one `repeat` loop inside of another `repeat` loop.",
      "courseD_maze_nestedLoops3_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern.",
      "courseD_maze_nestedLoops3_c": "Try writing code for one straight piece of path and a turn. Can you repeat this to get to the sunflower?"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/8": {
    "short_instructions": "Get the zombie to the sunflower using the fewest blocks possible!  ",
    "long_instructions": "Get the zombie to the sunflower using the fewest blocks possible!  ",
    "authored_hints": {
      "courseD_maze_nestedLoops4_a": "Try using this path through the maze.\n\n[][0]",
      "courseD_maze_nestedLoops4_b": "If the loop pattern is hard to see, try coding it all out first and see what code repeats over and over before you put the loops in.",
      "courseD_maze_nestedLoops4_c": "Try using one `repeat` loop inside of another to cut down on the amount of code you need."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/9": {
    "short_instructions": "Get the zombie to the sunflower using the fewest number of blocks possible!",
    "authored_hints": {
      "courseD_maze_nestedLoops5_a": "Look for a stair-step pattern in this maze to find where a nested loop can be used.",
      "courseD_maze_nestedLoops5_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/10": {
    "short_instructions": "Get the zombie to the sunflower using only the blocks available.",
    "long_instructions": "_\"Must eat sunflower!\"_\n\nGet the zombie to the sunflower using only the blocks available.",
    "authored_hints": {
      "courseD_maze_nestedLoops6_a": "If you are stuck, try writing out the code out on paper without loops first and look for patterns.",
      "courseD_maze_nestedLoops6_b": "Nesting `repeat` loops can help decrease the number of blocks used.",
      "courseD_maze_nestedLoops6_c": "It will take two sets of nested `repeat` loops to solve this puzzle."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/11": {
    "short_instructions": "Challenge: Figure out how to get all of the nectar using only the blocks available.",
    "long_instructions": "**Challenge:** Figure out how to get all of the nectar using only the blocks available.",
    "authored_hints": {
      "courseD_bee_nestedLoops7_a": "You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.",
      "courseD_bee_nestedLoops7_b": "You will need to use all three of the available `repeat` blocks to solve this puzzle.",
      "courseD_bee_nestedLoops7_c": "Nest your blocks three deep, like this:\n\n-   repeat 4\n    -   repeat 3\n        -   repeat 12\n            -   get nectar\n        -   move forward\n    -   turn right"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/12": {
    "short_instructions": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
    "long_instructions": "Collect all of the nectar from each flower and make honey at the honeycomb. "
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/13": {
    "short_instructions": "Make all of the honey.",
    "long_instructions": "Make all of the honey."
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/14": {
    "short_instructions": "Make all of the honey.",
    "long_instructions": "Make all of the honey.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "4",
              "correct": false,
              "feedback": "Incorrect. The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            },
            {
              "text": "8",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "12",
              "correct": false,
              "feedback": "Incorrect. The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. How much honey will the bee make when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/8/levels/15": {
    "dsls": {
      "content1": "Test Markdown Textbook Page",
      "markdown": "# **You just learned \"nested loops\"!**\n\n### **A nested loop is a loop within a loop.** Think of it like an outer loop, with another loop that got all comfy and cozy and nested inside the outer loop. \n\n### Nested loops are great for repeating patterns of patterns. They can be very powerful if used correctly!\n\n---\n\n## **Vocab to Know**\n\n### __Nested Loops__ - A loop within a loop\n\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/9/levels/1": {
    "short_instructions": "Draw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  ",
    "long_instructions": "[][0] _“Hi, I’m Elsa of Arendelle, help me draw a shape.”_\n\nDraw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  \n\n<hr/>\n\nYou can try making a polygon, like one of these:\\\n[][1]\n[][2]\n[][3]  \n\nOr even an abstract shape, like one of these:\\\n[][4]\n[][5]\n[][6]",
    "authored_hints": {
      "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
      "courseD_artist_project1_b": "Remember that `move forward` draws a line, while `jump forward` does not."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/9/levels/2": {
    "short_instructions": "Now take your shape and draw two or three in a row!",
    "long_instructions": "[][0] _“Now, let’s draw more than one.”_\n\nNow take your shape and draw two or three in a row by jumping forward some number of pixels.  \n\n-   If you jump forward by **less** than the width of your shape, they might overlap\n-   If you jump forward by **more** than the width of your shape, you will get a gap\n\n<hr/>\n\nYour row might end up straight like with these:\n\n[][1]\n[][2]\n[][3]\n<br/>  <br/>\n\nOr, your shapes might move around like one of these: \n\n[][4]\n[][5]\n[][6]",
    "authored_hints": {
      "courseD_artist_project2_a": "Remember that `move forward` draws a line, while `jump forward` does not.",
      "courseD_artist_project2_b": "After you draw and move the first time, you can repeat the code by adding a loop around the outside."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/9/levels/3": {
    "short_instructions": "Let's spin that line of shapes around!",
    "long_instructions": "[][0] _\"Let’s make it into a snowflake.\"_\n\nNext, jump Elsa back to the center using the `jump to 200 over and 200 down` block, and spin her around to draw the line of shapes again and again in a bunch of different directions.\n\nWhat amazing snowflakes you can make!\n\n* * *\n\nTake a look at these examples with polygons:\\\n[][1]\n[][2]\n[][3]\n\nAbstract shapes might make a snowflake more like one of these:\\\n[][4]\n[][5]\n[][6]",
    "authored_hints": {
      "courseD_artist_project3_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
      "courseD_artist_project3_b": "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n-   Try 72 degrees if you are repeating the outer loop 5 times\n-   Try 60 degrees if you are repeating the outer loop 6 times"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/9/levels/4": {
    "short_instructions": "Time to layer those shapes!",
    "long_instructions": "[][0] _\"What happens if we draw snowflakes on top of each other?\"_\n\nTry layering two different shapes of snowflakes on top of one another with a little turn in between - see what you get! ",
    "authored_hints": {
      "courseD_artist_project4_a": "Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:\n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" />\n\nHere's a set of hexagons with squares:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" />",
      "courseD_artist_project4_b": "To try this, draw your first snowflake, turn, then draw a second snowflake."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/9/levels/5": {
    "short_instructions": "Play with the snowflakes!",
    "long_instructions": "[][0] _\"Get creative with shapes and angles to see what kind of new snowflakes we can draw!\"_",
    "authored_hints": {
      "courseD_artist_project4_a": "Lines of 2 hexagons and 4 triangles:\n\n<img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/9/levels/6": {
    "short_instructions": "Draw a stair-step pattern that uses turns between 75 and 105 degrees.",
    "long_instructions": "[][0] _\"Let’s try something new. This time, skate in a zig-zag.\"_\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" style=\"float: left; margin: 0 15px 15px 0;\" />\n\nDraw a stair-step pattern that uses turns between 75 and 105 degrees -- but make sure that your left and right turns use the same angle.\\\n(You will see why later.)",
    "authored_hints": {
      "courseD_artist_project1a_a": "This stair step uses a 76 degree turn and repeats 4 times.\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" />",
      "courseD_artist_project1a_b": "These patterns are a lot like the stair steps from other puzzles, but using a different angle."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/9/levels/7": {
    "short_instructions": "Now, turn around 180 degrees and draw the stair pattern again!",
    "long_instructions": "[][0] _\"Now let’s turn and go back the way we came.\"_\n\nTurn around 180 degrees and draw the exact same stair pattern again!  \n\n-   The rest of this stage will be easier if you put all of your code inside of a loop to make Elsa  draw, turn around 180 degrees, draw, then turn around 180 degrees again.\n\n<hr/>\n\nHere is an example of stairs that use a 76 degree turn:\n\n[][1]",
    "authored_hints": {
      "courseD_artist_project2a_a": "This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.\n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/9/levels/8": {
    "short_instructions": "Spin that shape around 5 or 6 times in a circle.",
    "long_instructions": "[][0] _\"Let’s spin and make it into a snowflake.\"_\n\nSpin that shape around 5 or 6 times in a circle.\n\n-   If you choose 5 times,  try a turn of 72 degrees\n-   If you choose 6 times,  try a turn of 60 degrees\n    <hr/>\n\nHere's an example of Elsa turning a pattern 6 times:\n\n[][1]",
    "authored_hints": {
      "courseD_artist_project3a_a": "You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/9/levels/9": {
    "short_instructions": "Try playing around with what you've created. Draw whatever you like!\n\n-   What happens if you use two different angles in your stair step pattern?\n-   What happens if you make your diamond pattern longer or shorter?\n-   What does it look like to draw two snowflakes on top of one another?",
    "long_instructions": "[][0]  _\"Now, what should we do? Let’s explore and create our own winter wonderland!\"_\n\nTry playing around with what you've created. Draw whatever you like!\n\n-   What happens if you use two different angles in your stair step pattern?\n-   What happens if you make your diamond pattern longer or shorter?\n-   What does it look like to draw two snowflakes on top of one another?",
    "authored_hints": {
      "courseD_artist_project4a_a": "Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)\n\n<img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/10/levels/1": {
    "title": "Conditionals"
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/1": {
    "dsls": {
      "content1": "Test Markdown Textbook Page",
      "markdown": "# **In this lesson...**\n\n### **Conditions** are things that can be true or false. \n\n### You will learn how to use conditions in a program to make things happen `while`, `until`, or `if` something is true!\n---\n\n## **Blocks to Know**\n\n![](https://images.code.org/8c6cc9ffa31c916fc970c67382d83b8d-image-1524770260439.png)\n\n![](https://images.code.org/c2fbbaf80b348d47ba2dac4497ae2624-image-1524770272898.png)\n\n![](https://images.code.org/6b90e2dfb025609f8762014ff0ba51dc-image-1524770241058.png)\n\n\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/3": {
    "short_instructions": "Help the farmer remove this entire pile using a `while` loop.",
    "long_instructions": "_\"I don't know how much dirt is in this pile!\"_\n\nHelp the farmer remove this entire pile using a `while` loop.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing will happen.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            },
            {
              "text": "The farmer will never stop removing dirt.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            },
            {
              "text": "The farmer will remove dirt as long as there is a pile, then stop when the pile is gone.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. What will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/4": {
    "short_instructions": "While there is a pile, remove dirt.",
    "long_instructions": "Oh my!  This pile is so big that it's hard to guess how much dirt is in it.  \n\n* * *\n\nWe've added a new block to the toolbox called the `while there is a pile` block.  Use this to remove dirt only while there is still some to scoop! ",
    "authored_hints": {
      "courseE_farmer_ramp12_a": "Instead of using a `repeat` loop to tell the farmer how many times to shovel dirt, now you can use a `while there is a pile` block.  ",
      "courseE_farmer_ramp12_b": "You only need to move forward once to get to the dirt."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/5": {
    "short_instructions": "While there is a pile, remove dirt.",
    "long_instructions": "Let's try that again, but with more piles!",
    "authored_hints": {
      "courseE_farmer_ramp11b_a": "You can nest your `while` loop inside of a `repeat` loop to make your code shorter."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/6": {
    "short_instructions": "While there is lettuce, pick lettuce!",
    "long_instructions": "Now the harvester needs to pick all of the lettuce.  Use `while there is lettuce` inside of a `repeat` loop to get it all!"
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/7": {
    "short_instructions": "Now use nested loops to solve this puzzle.",
    "long_instructions": "Pick all of the lettuce.",
    "authored_hints": {
      "courseE_farmer_ramp12_b": "You will still need to use a `repeat` loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/9": {
    "short_instructions": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
    "long_instructions": "The lettuce is now only at the end of the path.\\\nTravel down the path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
    "authored_hints": {
      "courseE_farmer_ramp12b_b": "You will still need to use an `until` loop first, then use a `while` loop once you get to the lettuce."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/10": {
    "short_instructions": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
    "long_instructions": "The lettuce is scattered all over the garden.\\\nTravel down each path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
    "authored_hints": {
      "courseE_farmer_ramp12d_b": "You will still need to put your `until` and `while` loops inside of a `repeat` loop to solve this puzzle!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/11": {
    "short_instructions": "Move forward until you reach the lettuce, then pick it all using a `while` loop.",
    "long_instructions": "The lettuce is scattered all over the garden.\\\nTravel down each path **until** you reach a head of lettuce, then continue to pick it **while** there is still some left.  ",
    "authored_hints": {
      "courseE_farmer_ramp12e_b": "The solution to this puzzle will look a lot like the solution to the last puzzle, but turning in the other direction."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/13": {
    "short_instructions": "Move forward until you reach the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
    "long_instructions": "**Challenge**: The only way to get all of the crops is to move forward until you get to the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
    "authored_hints": {
      "courseE_farmer_ramp12f_b": "Use an `if/else` block to help the farmer decide if she needs to turn right or left."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/14": {
    "short_instructions": "Move forward until you reach the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
    "long_instructions": "Move forward until you get to the lettuce, then turn left **if** there is a path to the left.  Otherwise, turn right.",
    "authored_hints": {
      "courseE_farmer_ramp12G_b": "Use an `if/else` block to help the farmer decide if she needs to turn right or left."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/11/levels/15": {
    "dsls": {
      "content1": "Test Markdown Textbook Page",
      "markdown": "# **You just learned \"conditionals\"!**\n\n### Conditionals are super useful in computer science. Imagine logging in to your favorite website and typing in your password. The website has to use conditionals to check *if* the password you entered matches the password it has saved for your username. \n\n### `If` it matches, log in! \n\n### `Else`, give the user an error.  \n\n---\n\n## **Vocab to Know**\n\n* ### **Condition** - Something a program checks before allowing an action\n\n* ### **Conditionals** - Statements that only run under certain conditions\n\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/12/levels/1": {
    "title": "translation missing: en-US.data.unplugged.courseE_unplugged_privateInformation_2018.title"
  },
  "https://studio.code.org/s/coursee-2018/lessons/14/levels/1": {
    "title": "translation missing: en-US.data.unplugged.SongwritingParameters_2018.title"
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/1": {
    "display_name": "Homestead",
    "short_instructions": "Write code to get the Agent to the pressure plate, then press \"Run\" and use the arrow keys to move the player out of the house to collect the chest. ",
    "long_instructions": "The door is locked, but the Agent is here to help!\n\nSnap a `move forward` block to the bottom of the `when run` block in the workspace to get the Agent to the pressure plate [PressurePlate_Up], then press \"Run\" and use the arrow keys to move out of the house to collect the **chest** [chest].",
    "authored_hints": {
      "MC_HOC_2017_01_RETRY_a": "Drag one `move forward` block from the toolbox to the workspace, and snap it into place beneath the `when run` block.",
      "MC_HOC_2017_01_RETRY_b": "Don't forget to click \"Run\" to run the code for the Agent.",
      "MC_HOC_2017_01_RETRY_c": "Once the Agent has run all of its code, you can move the player with the arrow keys!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/2": {
    "display_name": "The Farm",
    "short_instructions": "Move the Agent to the pressure plate so that {currentPlayerName} can get to the map. ",
    "long_instructions": "{currentPlayerName} is headed on an adventure! To help, get the **map** [map_empty] behind the locked door on the right. \n\nSnap the code into the workspace to move the Agent to the pressure plate [PressurePlate_Up] so that {currentPlayerName} can get through. ",
    "authored_hints": {
      "MC_HOC_2017_02_Cole_a": "Move the Agent forward two spaces to stand on the pressure plate.  That will open the door for your player.",
      "MC_HOC_2017_02_Cole_b": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
      "MC_HOC_2017_02_Cole_c": "Once the Agent has opened the door, use the arrow keys to move the player to the map!",
      "MC_HOC_2017_02_Cole_d": "Make sure the Agent is following the path outlined on the map!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/3": {
    "display_name": "The Woods",
    "short_instructions": "Code the Agent to open the gate. ",
    "long_instructions": "{currentPlayerName} continues on the adventure and needs the **compass** [compass] to prepare for the trip.  \n\nCode the Agent to open the gate. ",
    "authored_hints": {
      "MC_HOC_2017_03_Cole_a": "Once you get the Agent to the pressure plate, you can use your arrow keys to walk the player to the compass!",
      "MC_HOC_2017_03_Cole_b": "Does the code feel a little long?  Try using a `repeat` loop and see if you can figure out how to make it shorter!"
    },
    "callouts": {
      "MC_HOC_2017_03_Cole_1": "This is a `repeat` loop!  Click it into the workspace and add code that you want to run over and over."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/4": {
    "display_name": "The Swamp",
    "short_instructions": "Get the Agent to the pressure plate.",
    "long_instructions": "The Agent can move across water!  \n\nUse a `repeat` loop to solve this puzzle and help {currentPlayerName} get to the **bucket** [bucket_empty] behind the door. ",
    "authored_hints": {
      "MC_HOC_2017_04_Cole_a": "The Agent needs to `move forward` 7 times.  How can you use a `repeat` loop to make that happen?",
      "MC_HOC_2017_04_Cole_c": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
      "MC_HOC_2017_04_Cole_b": "Once the Agent gets to the pressure plate, the Agent will open the door for the player."
    },
    "callouts": {
      "MC_HOC_2017_04_Cole_a": "The Agent can hover over water, but the player can't!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/5": {
    "display_name": "The Desert",
    "short_instructions": "Get the Agent to the pressure plate.",
    "long_instructions": "You made it across! \n\nNow, get {currentPlayerName} safely through the maze to collect the **axe** [diamond_axe]",
    "authored_hints": {
      "MC_HOC_2017_04POINT5_RYAN_b": "Use the `turn right` block to change the agent's direction ",
      "MC_HOC_2017_04POINT5_RYAN_a": "The Agent only needs to get to the first pressure plate to let Alex or Steve through to the axe."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/6": {
    "display_name": "The River",
    "short_instructions": "Get the player to the shovel.",
    "long_instructions": "Oh no, the bridge is out! \n\nCode the Agent to rebuild the bridge using the [blockly block][0] block so that {currentPlayerName} can get to the **shovel** [diamond_shovel].",
    "authored_hints": {
      "MC_HOC_2017_05_Cole_a": "Did you know that you can put more than one piece of code inside of a loop?  Try moving forward **and** placing a plank inside of a `repeat` to complete this puzzle.",
      "MC_HOC_2017_05_Cole_b": "Get the Agent across the river, building a bridge as you go."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/7": {
    "display_name": "High Tide",
    "short_instructions": "Fix this code to get the Agent to build a bridge across this river.",
    "long_instructions": "Another river, but this one is much wider! \n\nFix this code to help the Agent build a bridge so that {currentPlayerName} can get to the **pickaxe** [diamond_pickaxe]. ",
    "authored_hints": {
      "MC_HOC_2017_06_Cole_a": "How many times does this loop run?  How many times _should_ it run?",
      "MC_HOC_2017_06_Cole_b": "Help the Agent build a bridge all the way across the water! "
    },
    "callouts": {
      "MC_HOC_2017_06_Cole_1": "You cannot throw these blocks away, but you can edit them!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/8": {
    "short_instructions": "Use the `build bridge` function twice to make a path to the Redstone Torch.",
    "long_instructions": "A **function** named `build bridge` is in your workspace.  All of the code you need to cross the river is built right in! \n\nSnap the small, green [blockly block][0] block into your workspace twice to fix the path and get {currentPlayerName} to the Redstone Torch [redstone_torch].",
    "authored_hints": {
      "Function_intro_Ryan_b": "If you call the functions correctly, this is the path you will travel...",
      "Function_intro_Ryan_a": "You can call a function many times inside of your program!  Try calling it twice to solve this puzzle."
    },
    "callouts": {
      "Function_intro_Ryan_1": "This little instruction tells the computer to run the BIG chunk of code with the same name in the workspace."
    },
    "function_definitions": {
      "build bridge": {
        "name": "build bridge"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/9": {
    "display_name": "Snowy Pass",
    "short_instructions": "Destroy the ice and get {currentPlayerName} to the Minecart.",
    "long_instructions": "There's ice in the way!  \n\nThe `clear path` function can help you destroy the ice and get {currentPlayerName} to the Minecart [minecart_normal]! ",
    "authored_hints": {
      "MC_HOC_2017_07_Cole_c": "All you need to have the Agent do is clear the path to the Minecart.",
      "MC_HOC_2017_07_Cole_a": "To solve this puzzle, figure out what the `clear path` function does and call it as many times as you need using the small green `clear path` block from the toolbox.",
      "MC_HOC_2017_07_Cole_b": "Try mixing the function blocks with other blocks from the toolbox to help you solve this puzzle."
    },
    "function_definitions": {
      "clear path": {
        "name": "clear path"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/10": {
    "display_name": "The Cave",
    "short_instructions": "Use the functions to finish this minecart track.",
    "long_instructions": "Can you spot the difference between the two functions in your workspace? \n\nUse these functions with other code from the toolbox to clear a path for the Minecart, then collect the **Flint and Steel** [flint_and_steel]. \n ",
    "authored_hints": {
      "MC_HOC_2017_10_Cole_b": "Don't know where to go?  See if you can find the dotted line!",
      "MC_HOC_2017_10_Cole_a": "Use functions to make solving this puzzle easier!"
    },
    "function_definitions": {
      "fix long path": {
        "name": "fix long path"
      },
      "fix short path": {
        "name": "fix short path"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/11": {
    "display_name": "The Nether Fortress",
    "short_instructions": "Use the functions to find a way across the lava.",
    "long_instructions": "Look at the functions below.  How can you use them to avoid the Ghasts and help {currentPlayerName} make it safely to the **Enchanted Book** [book_enchanted]?  ",
    "authored_hints": {
      "MC_HOC_2017_08_RY_a": "Press \"Run\"!\n\nYou can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.",
      "MC_HOC_2017_08_RY_b": "There are LOTS of ways to solve this puzzle.  Try a few!",
      "MC_HOC_2017_08_RY_c": "Try following the dotted line for a simple path through the lava."
    },
    "callouts": {
      "MC_HOC_2017_08_RY_1": "The Agent can hover over lava, but Steve and Alex can't!  "
    },
    "function_definitions": {
      "build short bridge": {
        "name": "build short bridge"
      },
      "build long bridge": {
        "name": "build long bridge"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/15/levels/12": {
    "display_name": "Freeplay",
    "short_instructions": "**Freeplay:**  Time to explore on your own!",
    "long_instructions": "**Freeplay:** Now it's up to you! Use the Agent's code to help you explore this world.",
    "authored_hints": {
      "MC_HOC_2017_13_Cole_a": "Try having the Agent build some minecart tracks so you can explore the world!"
    },
    "function_definitions": {
      "function 1": {
        "name": "function 1"
      },
      "function 2": {
        "name": "function 2"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/2": {
    "short_instructions": "Help the harvester get to the pumpkin and pick it.",
    "long_instructions": "_\"Have we met before? I'm the harvester!\"_\n\nHelp the harvester get to the pumpkin and pick it.",
    "authored_hints": {
      "courseE_farmer_functions1_a": "The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have.",
      "courseE_farmer_functions1_b": "You only need to pick one pumpkin, but could you use a loop to get to it?"
    },
    "callouts": {
      "courseE_farmer_functions1_2": "The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/3": {
    "short_instructions": "Help the harvester pick all of the corn, then the pumpkin.",
    "long_instructions": "_\"Oooh, veggies are cropping up everywhere!\"_\n\nNow help the harvester pick all of the corn on the way to the pumpkin at the end.\n\n* * *\n\n##### Note: Every square on the way to the pumpkin either has **1** corn or nothing at all.  Use the provided `check for corn` function to make sure you get everything.",
    "authored_hints": {
      "courseE_farmer_functions1a_a": "Make sure you read through the function definition. Can you tell what it does?",
      "courseE_farmer_functions1a_b": "Use a `repeat until` block to get to the pumpkin!"
    },
    "callouts": {
      "courseE_farmer_functions1a_1": "This veggie is unknown.  It changes each time you run the program."
    },
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/4": {
    "short_instructions": "Help the harvester pick the corn and pumpkins.",
    "long_instructions": "Use the function to help the harvester pick the corn and pumpkins.\n\n* * *\n\n##### Each sprout will either grow _one_ corn or nothing.",
    "authored_hints": {
      "courseE_farmer_functions2b_a": "You can `repeat until pumpkin` to get to the ends of the two paths.",
      "courseE_farmer_functions2b_b": "There is no corn on the connecting path, so you can just move along it and turn.",
      "courseE_farmer_functions2b_c": "You will need two separate `repeat until` blocks to get all of the crops."
    },
    "callouts": {
      "courseE_farmer_functions1a_1": "This veggie is unknown.  It changes each time you run the program."
    },
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/5": {
    "short_instructions": "Use the functions below to help the farmer pick the corn and pumpkins.",
    "long_instructions": "_\"I feel so functional!\"_\n\nNow there are multiple pumpkins in each patch!  Look carefully at the function definitions below to figure out how to use each one.\n\n* * *\n\n##### Each sprout will either grow _one_ corn or nothing.",
    "authored_hints": {
      "courseE_farmer_functions2ba_a": "Use the green `get all pumpkins` block to make sure you get all of the pumpkins!"
    },
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/6": {
    "short_instructions": "Try on a longer path.",
    "long_instructions": "Great!  Try your functions out on a longer path.",
    "function_definitions": {
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/7": {
    "short_instructions": "This function calls other functions!",
    "long_instructions": "Did you notice that there was a lot of repeated code in that last puzzle?  We can save space by calling that code `pick along path` and using a new function to call the other functions!\n\nUse `pick along path` to solve this puzzle again using fewer blocks.",
    "authored_hints": {
      "coursee_farmer_functions3c1_2018_a": "You'll need to use the `pick along path` function three times to solve this puzzle.",
      "coursee_farmer_functions3c1_2018_b": "What code do you need to add to get around the corners?"
    },
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/8": {
    "short_instructions": "We don't have a video for creating functions, yet. This is a placeholder."
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/9": {
    "short_instructions": "Create a function that sends the harvester down a square path to pick a single head of lettuce from the middle of each row.",
    "long_instructions": "_\"Functions **lettuce** do more with less work!\"_\n\nCreate a function that sends the harvester down a square path to pick a single head of lettuce from the middle of each row.",
    "authored_hints": {
      "courseE_farmer_functions7a1_2018_a": "Create your function under the `functions` section in the toolbox.",
      "courseE_farmer_functions7a1_2018_b": "Don't forget to use your function when you're done making it!"
    },
    "function_definitions": {
      "garden square": {
        "name": "garden square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/10": {
    "short_instructions": "Is your function still helpful?",
    "long_instructions": "Try writing your function again. Is it still helpful?  How can you make it work for this puzzle?",
    "authored_hints": {
      "courseE_farmer_functions8a1_2018a": "Start this puzzle off by coding the same function you made in the last puzzle.",
      "courseE_farmer_functions8a1_2018b": "After the function runs the first time, you'll need to make one extra turn before you can run it again."
    },
    "function_definitions": {
      "garden square": {
        "name": "garden square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/11": {
    "short_instructions": "Is your function still helpful?",
    "long_instructions": "**This puzzle is a-MAZE-ing!**\n\nIs your function still helpful for this puzzle?",
    "authored_hints": {
      "courseE_farmer_functions9a1_2018a": "You'll use the same function that you made in the last couple of puzzles.",
      "courseE_farmer_functions9a1_2018b": "Use the same steps from the previous puzzle to solve the first half of this puzzle.",
      "courseE_farmer_functions9a1_2018c": "You'll need to `turn` a few times and `move forward` to get to the last crop of lettuce before you can call your function again."
    },
    "function_definitions": {
      "garden square": {
        "name": "garden square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/12": {
    "short_instructions": "Use everything that you've learned so far to solve this puzzle!",
    "long_instructions": "**Challenge:** Use everything that you've learned so far to solve this puzzle in 19 blocks or less!",
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "check square for corn": {
        "name": "check square for corn"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      },
      "pumpkin square": {
        "name": "pumpkin square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/13": {
    "short_instructions": "Solve this puzzle in 23 blocks or less.",
    "long_instructions": "Solve this puzzle in 23 blocks or less.\n\n* * *\n\n##### Each sprout will either grow _one_ corn or nothing. To find the best solution, you will need to edit the functions directly.",
    "callouts": {
      "courseE_farmer_functions1a_1": "This veggie is unknown.  It changes each time you run the program."
    },
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "check for corn": {
        "name": "check for corn"
      },
      "corn rectangle": {
        "name": "corn rectangle"
      },
      "lettuce stairs": {
        "name": "lettuce stairs"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/16/levels/14": {
    "long_instructions": "Figure out which function to use and which one to delete, then solve this puzzle!",
    "function_definitions": {
      "pick along path": {
        "name": "pick along path"
      },
      "pumpkin square": {
        "name": "pumpkin square"
      },
      "check square for corn": {
        "name": "check square for corn"
      },
      "get produce": {
        "name": "get produce"
      },
      "get all pumpkins": {
        "name": "get all pumpkins"
      }
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The harvester will pick two pumpkins.",
              "correct": false,
              "feedback": "Incorrect. The harvester goes forward until the end of the path, then turns around and moves back until she picks the lettuce."
            },
            {
              "text": "The harvester will pick all of the pumpkins.",
              "correct": false,
              "feedback": "Incorrect. The harvester goes forward until the end of the path, then turns around and moves back until she picks the lettuce."
            },
            {
              "text": "The harvester will pick the lettuce.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The harvester will pick the corn.",
              "correct": false,
              "feedback": "Incorrect. The harvester goes forward until the end of the path, then turns around and moves back until she picks the lettuce."
            }
          ],
          "questions": [
            {
              "text": "Look at the functions defined below. What will the harvester pick?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/17/levels/1": {
    "title": "Digital Sharing"
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/1": {
    "long_instructions": "Here is a puzzle that uses a function that we have defined. ",
    "function_definitions": {
      "draw a square": {
        "name": "draw a square"
      },
      "draw ear stems": {
        "name": "draw ear stems"
      }
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing. The function is not called in the program.",
              "correct": false,
              "feedback": "Incorrect. The function is actually called two times in the program."
            },
            {
              "text": "The artist will draw a single square.",
              "correct": false,
              "feedback": "Incorrect. The function is actually called two times in the program."
            },
            {
              "text": "The artist will draw two squares that overlap.",
              "correct": false,
              "feedback": "Incorrect. The length of each side of the square is only 100 pixels, but the artist jumps by 175 pixels between functions."
            },
            {
              "text": "The artist will draw two squares with a small gap in between.",
              "correct": true,
              "feedback": "Correct! The function is called two times in the program, with a jump in between."
            }
          ],
          "questions": [
            {
              "text": "What will happen when you press \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/2": {
    "short_instructions": "Use the `draw a square` function to create the glasses. ",
    "long_instructions": "Here is a function called `draw a square`. Use it to complete this drawing. \n\n* * *\n\nThe squares are 75 pixels apart.",
    "authored_hints": {
      "courseD_artist_functions2_b": "The function should not contain your whole program, just the part that draws a square with 100 pixel sides.",
      "courseD_artist_functions2_c": "Make sure that you use the green `draw a square` block to \"call\" your function. Otherwise, the code in your function will not run.\n\n[blockly block][0]",
      "courseD_artist_functions2_a": "Your program should:\n\n-   Use your function\n-   Move forward 100 + 75 pixels\n-   Use your function again"
    },
    "callouts": {
      "courseD_artist_functions2_1": "When this green block runs, all of the code in the function will run. What should the artist do after drawing the first square?"
    },
    "function_definitions": {
      "draw a square": {
        "name": "draw a square"
      },
      "draw ear stems": {
        "name": "draw ear stems"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/3": {
    "short_instructions": "Build a function that will create this star.",
    "long_instructions": "Build a function that will create this star.\n\n* * *\n\n-   Each arm of the star is 25 pixels long\n-   You need to turn 45 degrees to get 8 arms\n-   It is okay to go forward and backward over the same arm",
    "function_definitions": {
      "draw a star": {
        "name": "draw a star"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/4": {
    "short_instructions": "Draw only those three stars to finish this puzzle.",
    "long_instructions": "When is drawing three stars harder than drawing four? When you also have to jump over the moon!\n\nDraw only those three stars to finish this puzzle.\n\n* * *\n\n-   The jump between the first and second star is **200** pixels\n-   The jump between the second and third is **100** pixels",
    "authored_hints": {
      "courseD_artist_functions5_a": "Don't give up!  Remember what you have been learning.",
      "courseD_artist_functions5_b": "Functions make it easy to call saved code at any time, not just from inside a loop!",
      "courseD_artist_functions5_c": "Start by creating your `draw a star` function, then use this function to draw the three stars!"
    },
    "function_definitions": {
      "draw a star": {
        "name": "draw a star"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/5": {
    "short_instructions": "Try solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!",
    "long_instructions": "Drawing all of these windows individually would be a pain!  \n\nTry solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!\n\n* * *\n\n-   Each window is made up of four **25** pixel squares.\n-   The top windows are a **100** pixel jump away from each other.  \n-   The bottom windows are a **150** pixel jump below the top set.",
    "authored_hints": {
      "courseD_artist_functions7_a": "Try creating your function first then add windows one at a time.",
      "courseD_artist_functions7_b": "To get from the top windows to the bottom windows, simply turn the artist right, jump 150 pixels, then turn the artist right again!  Now the artist will be facing the correct direction to finish the rest of the house!"
    },
    "function_definitions": {
      "draw a window": {
        "name": "draw a window"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/6": {
    "short_instructions": "Create a function for a single square.",
    "long_instructions": "_\"Functions easy!\"_\n\nWe are going to build up to something fancy!  Start by creating a function for this square.",
    "callouts": {
      "courseD_artist_functions8_1": "Your blocks to create functions have been moved under this label in the toolbox."
    },
    "function_definitions": {
      "draw a square": {
        "name": "draw a square"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/7": {
    "short_instructions": "Call the `draw a square` function from inside your `draw a line of squares` function to make this even easier!",
    "long_instructions": "_\"Zombie get dizzy.\"_\n\nCall the `draw a square` function from inside your `draw a line of squares` function to make this even easier!\n\n* * *\n\n-   The squares are _50_ pixels apart.",
    "authored_hints": {
      "courseD_artist_functions8_f": "You only need one `move forward` block if you're doing this correctly!",
      "courseD_artist_functions8_a": "Start by making a function for a square, then try making a function for a line of squares.",
      "courseD_artist_functions8_d": "To make a line of squares,\n\n-   repeat 3 times\n    -   draw a square\n    -   jump forward **100 pixels**"
    },
    "function_definitions": {
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/8": {
    "short_instructions": "Add one more function that creates this stack of staggered squares.",
    "long_instructions": "Add one more function that creates this stack of staggered squares using the `draw a line of squares` function.",
    "authored_hints": {
      "courseD_artist_functions8_f": "This is easier than it looks!  You shouldn't need any `move` or `jump` blocks here!",
      "courseD_artist_functions8_a": "The second line of squares is just a 180 degree turn different than the first!",
      "courseD_artist_functions8_c": "At the end of each line of squares, the artist only needs to turn 180 degrees before drawing the next line of squares.  Put the whole thing in a repeat loop to set you up for the next exercise!"
    },
    "function_definitions": {
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      },
      "do something": {
        "name": "do something"
      },
      "staggered squares": {
        "name": "staggered squares"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/9": {
    "short_instructions": "Use everything you've learned so far to recreate this design.",
    "authored_hints": {
      "courseD_artist_functions8_f": "You only need one `move forward` block, but you will need quite a few `jump forward` and/or `jump backward` blocks!",
      "courseD_artist_functions8_a": "Start by making a function for a square, then try making a function for a line of squares.\n\nHow would you use the `draw a line of squares` function to make this image?",
      "courseD_artist_functions8_d": "To make a line of squares,\n\n-   repeat 3 times\n    -   draw a square with a side length of **50 pixels**\n    -   jump forward **100 pixels**",
      "courseD_artist_functions8_b": "Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?\n\n[][0]",
      "courseD_artist_functions8_c": "At the end of each set of staggered squares, the artist will need to jump down and backward before he draws the next set of staggered squares.",
      "courseD_artist_functions8_g": "[][0]"
    },
    "function_definitions": {
      "do something": {
        "name": "do something"
      },
      "staggered squares": {
        "name": "staggered squares"
      },
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/10": {
    "short_instructions": "**Challenge:** Create this image using only the blocks provided.",
    "long_instructions": "**Challenge:** Create this image using the limited blocks provided. \n\n-   Each triangle has sides of **50 pixels**  \n-   To draw a diamond, you will need to alternate between turning **60 degrees and 120 degrees**.",
    "authored_hints": {
      "courseD_artist_functions9_e": "Can you spot all four places that the `line of triangles` can be used in this drawing?\n\n[][0]",
      "courseD_artist_functions9_a": "This puzzle can be broken into three parts:\n\n-   make the `draw a triangle` function\n-   make the `draw a line of triangles` function\n-   use your `draw a line of triangles` function four times to complete the drawing",
      "courseD_artist_functions9_b": "This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line.",
      "courseD_artist_functions9_c": "To draw a line of triangles:\n\n-   repeat 4 times\n    -   draw a triangle\n    -   jump forward 50 pixels",
      "courseD_artist_functions9_d": "To draw the diamond:\n\n-   repeat 2 times\n    -   draw a line of triangles\n    -   turn 60 degrees\n    -   draw a line of triangles\n    -   turn 120 degrees"
    },
    "function_definitions": {
      "do something": {
        "name": "do something"
      },
      "draw triangle": {
        "name": "draw triangle"
      },
      "draw line of triangles": {
        "name": "draw line of triangles"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/11": {
    "short_instructions": "This time, use lines of 8 hexagons with 25 pixel sides.",
    "long_instructions": "This time, use lines of 8 hexagons with 25 pixel sides.\n\n-   To make each hexagon, repeat the side 6 times, turning 60 degrees.\n-   Jump 25 pixels between each hexagon.\n-   To draw a diamond, you will need to alternate between turning 60 degrees and 120 degrees.",
    "authored_hints": {
      "courseD_artist_functions10_b": "This drawing is a lot like the last one, but the `draw line` function is now drawing a different shape.",
      "courseD_artist_functions10_a": "To avoid using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.",
      "courseD_artist_functions10_c": "Do you see where this drawing could use a function called `line of hexagons`?\n\n[][0]"
    },
    "function_definitions": {
      "do something": {
        "name": "do something"
      },
      "draw hexagon": {
        "name": "draw hexagon"
      },
      "draw line of hexagons": {
        "name": "draw line of hexagons"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/12": {
    "function_definitions": {
      "draw line of polygons": {
        "name": "draw line of polygons"
      },
      "draw polygon": {
        "name": "draw polygon"
      },
      "do something": {
        "name": "do something"
      }
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The artist will solve the puzzle correctly.",
              "correct": false,
              "feedback": "Incorrect. The loop uses \"draw polygon\" instead of \"draw line of polygons\"."
            },
            {
              "text": "The artist will draw four squares in a window pattern.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The artist will draw only one line of squares.",
              "correct": false,
              "feedback": "Incorrect. The program does not call \"draw line of polygons\"."
            },
            {
              "text": "The artist will draw four squares on top of one another.",
              "correct": false,
              "feedback": "Incorrect. The loop turns 90 degrees between calls to \"draw polygon\"."
            }
          ],
          "questions": [
            {
              "text": "What will happen when you press the \"Run\" button?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/levels/13": {
    "short_instructions": "**Inspiration:** Use what you've learned to make whatever you want!",
    "long_instructions": "**Inspiration:** Use what you've learned to make whatever you want!  \n\nCan you make something like this pinwheel?",
    "function_definitions": {
      "draw hexagon": {
        "name": "draw hexagon"
      },
      "draw line of hexagons": {
        "name": "draw line of hexagons"
      },
      "staggered squares": {
        "name": "staggered squares"
      },
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw square": {
        "name": "draw square"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/extras?level_name=courseE_artist_functions_challenge1_2018": {
    "short_instructions": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
    "long_instructions": "Once you define a function, you can call it over and over again - whenever and wherever you want! Try this code to see how it works, then change it to make your own impressive design!",
    "authored_hints": {
      "courseE_artist_functions_challenge1_a": "If you call the function one more time, you can create the same design in the final corner.",
      "courseE_artist_functions_challenge1_b": "You can also `jump to` other positions or change the whole design however you want!"
    },
    "callouts": {
      "courseE_artist_functions_challenge1_callout1": "Keep this program going by adding more code to the bottom.",
      "courseE_artist_functions_challenge1_callout2": "If you don't like this design, change it to anything you want!"
    },
    "function_definitions": {
      "my design": {
        "name": "my design"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/18/extras?level_name=courseE_artist_functions_challenge2_2018": {
    "short_instructions": "Try this code to see how it works, then make the program your own!",
    "long_instructions": "Not only can you jump to some pre-set locations, like the corners of the canvas, you can also use a `jump to` command to get to absolutely any spot you like! Try this code to see how it works, then make the program your own!\n\n[blockly block][0]",
    "authored_hints": {
      "courseE_artist_functions_challenge1_a": "[blockly block][0]\n\nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is _before_ the command is run!\n\n[][1]"
    },
    "callouts": {
      "courseE_artist_functions_challenge2_callout1": "Keep this program going by adding more code to the bottom.",
      "courseE_artist_functions_challenge2_callout2": "If you don't like this design, change it to anything you want!"
    },
    "function_definitions": {
      "my design": {
        "name": "my design"
      },
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/levels/1": {
    "short_instructions": "Collect all of the nectar from each flower.",
    "long_instructions": "_\"Can you BEE-lieve all of these flowers?\"_\n\nCollect all of the nectar from each flower. ",
    "authored_hints": {
      "courseE_bee_concept1_b": "Are there any patterns that _repeat_ here?",
      "courseE_bee_concept1_a": "If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/levels/2": {
    "short_instructions": "Can you write a program that fills these holes until the ground is even?",
    "authored_hints": {
      "courseE_farmer_concept1_a": "A `while there is a hole` block will help you fill any hole until it's flat.",
      "courseE_farmer_concept1_b": "You can use a stair step pattern to get to the holes."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/levels/3": {
    "short_instructions": "Help the bee make all of the honey. ",
    "long_instructions": "Help the bee make all of the honey.  \n\nYou can only make honey at a honeycomb, but you can check any space to see if there is a honeycomb.",
    "authored_hints": {
      "courseE_bee_concept2_a": "Would a `while` loop help here?",
      "courseE_bee_concept2_d": "With this `while` loop you  can check empty spaces to see if the amount of honey is > 0. This does the same as the `while there is honey` loop. ",
      "courseE_bee_concept2_b": "You can use `while` loops to move to the end of each path, and to collect all of the honey from each space.",
      "courseE_bee_concept2_c": "Which way should the bee turn after each path?"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/levels/4": {
    "short_instructions": "Collect all of the nectar using  as few blocks as possible.",
    "authored_hints": {
      "courseE_bee_concept3a_a": "Try using nested `repeat` or `while` loops to solve this puzzle.",
      "courseE_bee_concept3a_b": "If you can't figure out where to put the loops, try writing your code step-by-step and looking for patterns."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/levels/5": {
    "short_instructions": "Recreate this image. ",
    "long_instructions": "Recreate this image. \n\n-   The hexagons have sides of 50 pixels\n-   The hexagons are 100 pixels apart\n-   The pen widths of the hexagons are 1 pixel, 4 pixels, and 8 pixels.",
    "authored_hints": {
      "courseE_artist_concept1_a": "The hexagons have 50 pixel sides and 60 degree turns to the right.",
      "courseE_artist_concept1_b": "Try using a function here so you don't have to write the code for a hexagon over and over again.",
      "courseE_artist_concept1_c": "Use the `set width` block before each function call to change the pen width."
    },
    "function_definitions": {
      "draw a hexagon": {
        "name": "draw a hexagon"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/levels/6": {
    "short_instructions": "Uh oh! The bee is not sure if he should collect nectar or make honey. Can you help him out?",
    "authored_hints": {
      "courseE_bee_concept4_a": "An `if/else` statement could really help you out here.",
      "courseE_bee_concept4_b": "The stair step pattern can help you get through all of the flowers and honeycombs.",
      "courseE_bee_concept4_c": "If you are at a flower, how many times do you have to get nectar? Is this the same number for all flowers?"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/levels/7": {
    "short_instructions": "Collect all of the pumpkins.",
    "authored_hints": {
      "courseE_farmer_concept2_a": "The paths are all the same length, but they are a different number of squares apart.  A loop isn't ideal here. Try a function.",
      "courseE_farmer_concept2_b": "A function which turns, goes down the path, gathers pumpkins, and returns to the main horizontal path could be helpful here.",
      "courseE_farmer_concept2_c": "Your main program can call this function with the green `do something` block."
    },
    "function_definitions": {
      "get pumpkin": {
        "name": "get pumpkin"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/levels/8": {
    "short_instructions": "Help the bee collect the nectar from the flowers?",
    "long_instructions": "Can you help the bee collect the nectar from the flowers? \n\nYou can only collect nectar from flowers, but you can check any space to see if there is a flower.",
    "authored_hints": {
      "courseE_bee_concept5_a": "The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side.",
      "courseE_bee_concept5_c": "Here's a picture of a rectangular path the bee could take.\n\n[][0]",
      "courseE_bee_concept5_b": "You can check every square for a flower using the `if` block, even if you already know there's not one there."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/levels/9": {
    "short_instructions": "Fill in the hole at the end of each of these paths.",
    "authored_hints": {
      "grade3_robotFarmer_ConditionalsIntro_8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.",
      "grade3_robotFarmer_ConditionalsIntro_8_b": "What should you do once you've reached the end of a path?",
      "grade3_robotFarmer_ConditionalsIntro_8_c": "Use a `repeat` loop to run your code multiple times for each straight path."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/levels/10": {
    "short_instructions": "Recreate this drawing.",
    "long_instructions": "Recreate this drawing. \n\nEach square has a side length of **20 pixels** and there are **15 squares per row**.",
    "authored_hints": {
      "courseE_artist_concept4_a": "There are several ways to solve this puzzle. Can you make a plan?",
      "courseE_artist_concept4_b": "Try creating one square. Then make a line of squares.  What comes next?",
      "courseE_artist_concept4_c": "After drawing a line of squares, you can either turn around and draw another line of squares going left, or you can jump back to the left side of the figure to draw another line of squares going right. Which do you prefer?"
    },
    "function_definitions": {
      "draw a square": {
        "name": "draw a square"
      },
      "draw a line of squares": {
        "name": "draw a line of squares"
      },
      "draw a plane of squares": {
        "name": "draw a plane of squares"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/extras?level_name=courseE_artist_concept_challenge1_2018": {
    "short_instructions": "Help the artist draw this unique shape. ",
    "long_instructions": "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\" width=\"200px\"/>\n\nNow for a challenge!\n\nHere is a design that uses only blocks that you have already been shown.  Can you figure out how to recreate it?  Feel free to use trial and error. You don't have to draw it perfectly the first time.",
    "authored_hints": {
      "courseE_artist_concept_challenge1_a": "The half-hexagon has a **length of 30** and turns right by **60 degrees**.  ",
      "courseE_artist_concept_challenge1_b": "The 2/3 triangle has a **length of 80** and turns right by **120 degrees**. ",
      "courseE_artist_concept_challenge1_c": "This is the design you want to repeat to make the full shape:\n\n[][0]"
    },
    "function_definitions": {
      "do something": {
        "name": "do something"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/19/extras?level_name=courseE_artist_concept_challenge2_2018": {
    "short_instructions": "Create five pinwheel designs using the code below.",
    "long_instructions": "Create five pinwheel designs using the code below.",
    "authored_hints": {
      "courseE_artist_concept_challenge2_a": "Once you define a function, you can call it over and over again - whenever and wherever you want!",
      "courseE_artist_concept_challenge2_b": "You can jump to different positions on the canvas using this command:\n\n[blockly block][0]"
    },
    "function_definitions": {
      "draw pinwheel": {
        "name": "draw pinwheel"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/20/levels/1": {
    "display_name": "This is Sprite Lab"
  },
  "https://studio.code.org/s/coursee-2018/lessons/20/levels/2": {
    "long_instructions": "**Make a prediction**: What do you think will happen when you run this code?",
    "contained levels": [
      {
        "long_instructions": "**Make a prediction**: What do you think will happen when you run this code?"
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/20/levels/3": {
    "short_instructions": "Change Dusty (the tumbleweed) to a fish.",
    "long_instructions": "Let's make a fish tank!  \n\nChange Dusty (the tumbleweed) to a fish."
  },
  "https://studio.code.org/s/coursee-2018/lessons/20/levels/4": {
    "short_instructions": "Change the fish's behavior so that it swims around the tank.",
    "long_instructions": "The fish is getting dizzy! \n\nChange the fish's behavior so that it swims around the tank."
  },
  "https://studio.code.org/s/coursee-2018/lessons/20/levels/5": {
    "short_instructions": "Use the `set background color` block to make the background blue.",
    "long_instructions": "Our fish tank needs some water! \n\nUse [blockly block][0] to make the background blue."
  },
  "https://studio.code.org/s/coursee-2018/lessons/20/levels/6": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/coursee-2018/lessons/20/levels/7": {
    "short_instructions": "Our fish is getting a little lonely. Add another sprite to the fish tank.",
    "long_instructions": "Our fish is getting a little lonely. Add another sprite to the fish tank."
  },
  "https://studio.code.org/s/coursee-2018/lessons/20/levels/8": {
    "short_instructions": "Add a behavior to the fish's new friend.",
    "long_instructions": "What do you want your fish’s new friend to do?   \n\nAdd a behavior and watch them go!"
  },
  "https://studio.code.org/s/coursee-2018/lessons/20/levels/9": {
    "short_instructions": "Use some new blocks from the toolbox to make your fish tank special!",
    "long_instructions": "We've added a lot of new blocks to the toolbox.   \n\nPlay with them to make your fish tank special!"
  },
  "https://studio.code.org/s/coursee-2018/lessons/21/levels/1": {
    "short_instructions": "What do you think will happen when you click on the alien?  ",
    "long_instructions": "**Make a prediction:** Here’s a sprite called `alien1`! \n\nWhat do you think will happen when you click on it?  ",
    "contained levels": [
      {
        "short_instructions": "What do you think will happen when you click on the alien?  ",
        "long_instructions": "**Make a prediction:** Here’s a sprite called `alien1`!   \n\nWhat do you think will happen when you click on it?  "
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/21/levels/2": {
    "short_instructions": "Change the behavior inside the `___ begins ___` block to make the alien start spinning around.",
    "long_instructions": "The alien was proud of its dancing skills on Mars, but now it can only move side-to-side.  \n\nCan you change the behavior inside the [blockly block][0] block to make it start spinning around?  ",
    "behavior_names": {
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "spinning left": "spinning left",
      "swimming left and right": "swimming left and right"
    },
    "behavior_descriptions": {
      "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\"": "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\"",
      "rotate a sprite to its left": "rotate a sprite to its left",
      "move a sprite horizontally, reversing direction if it touches the edges of the screen": "move a sprite horizontally, reversing direction if it touches the edges of the screen"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/21/levels/3": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/coursee-2018/lessons/21/levels/4": {
    "short_instructions": "Create a new sprite called `alien2`, then make it do a different dance move when it's clicked.  ",
    "long_instructions": "Create a new sprite called `alien2`.  \n\nMake it do a different dance move when it's clicked.  "
  },
  "https://studio.code.org/s/coursee-2018/lessons/21/levels/5": {
    "short_instructions": "Create a third sprite called `alien3` and get all of your aliens to stand in a line. ",
    "long_instructions": "Create a third sprite called `alien3`.  \n\nCan you set all of your aliens to stand in a straight line? It's an alien dance crew!"
  },
  "https://studio.code.org/s/coursee-2018/lessons/21/levels/6": {
    "short_instructions": "Add code to change the color of each alien when it gets clicked.",
    "long_instructions": "We can change all kinds of things in this program when you click on the sprites.  Let’s change their color!  \n\n**Add code to change the color of each alien when it gets clicked.**"
  },
  "https://studio.code.org/s/coursee-2018/lessons/21/levels/7": {
    "short_instructions": "Use the `stops everything` block to make each alien stop moving when it is clicked.",
    "long_instructions": "These aliens are running wild!  \n\nUse the [blockly block][0] block to make each alien stop moving when it is clicked.",
    "behavior_names": {
      "jittering": "jittering",
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    },
    "behavior_descriptions": {
      "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\"": "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\""
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/21/levels/8": {
    "short_instructions": "Add a new bell sprite called `myBell` that makes all the aliens start doing the same dance move when it's clicked.",
    "long_instructions": "Finally, add a new bell sprite called `myBell`.  \n\nWhen you click on it, make all the aliens start doing the same dance move!"
  },
  "https://studio.code.org/s/coursee-2018/lessons/21/levels/9": {
    "short_instructions": "Now create your own alien disco!",
    "long_instructions": "Now create your own alien disco! Looking for inspiration? Try these ideas:\n\n-   Create two bell sprites, and make the aliens do a different dance move for each\n-   Make the aliens do a new dance move whenever they touch each other",
    "behavior_names": {
      "jittering": "jittering",
      "swimming left and right": "swimming left and right",
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    },
    "behavior_descriptions": {
      "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\"": "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\""
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/22/levels/1": {
    "short_instructions": "What do you think will happen if you press \"Run\" and then click on her?",
    "long_instructions": "This is Geraldine, your new pet giraffe.  \n\nWhat do you think will happen if you press \"▶ Run\" and then click on her?",
    "contained levels": [
      {
        "short_instructions": "What do you think will happen when you click on the alien?  ",
        "long_instructions": "**Make a prediction:** This is Geraldine, your new pet giraffe.\n\nWhat do you think will happen if you press \"▶ Run\" and then click on her?"
      }
    ]
  },
  "https://studio.code.org/s/coursee-2018/lessons/22/levels/2": {
    "short_instructions": "Create an **event** so that when Geraldine touches the puddle, her color changes to brown.",
    "long_instructions": "There's a mud puddle over in the corner.  \n\nCreate an **event** so that when Geraldine touches the puddle, her color changes to brown.",
    "behavior_names": {
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "spinning left": "spinning left",
      "swimming left and right": "swimming left and right"
    },
    "behavior_descriptions": {
      "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\"": "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\"",
      "rotate a sprite to its left": "rotate a sprite to its left",
      "move a sprite horizontally, reversing direction if it touches the edges of the screen": "move a sprite horizontally, reversing direction if it touches the edges of the screen"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/22/levels/3": {
    "short_instructions": "Add a new soap sprite to the screen.  Can you make it so that when the giraffe and the soap touch, the giraffe goes back to its normal color?",
    "long_instructions": "We can’t have a dirty giraffe wandering around!  \n\n1.  Add a new soap sprite to the screen.\n2.  Can you make it so that when the giraffe and the soap touch, the giraffe goes back to its normal color?\n\n* * *\n\nTo reset the color, use this block:\n[blockly block][0]"
  },
  "https://studio.code.org/s/coursee-2018/lessons/22/levels/4": {
    "short_instructions": "Add a behavior to your soap to make it draggable, then drag it over to clean the giraffe!",
    "long_instructions": "We don't want to wait for the giraffe to clean itself every time.  \n\nAdd a behavior to your soap to make it draggable, then drag it over to clean the giraffe!",
    "behavior_names": {
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    },
    "behavior_descriptions": {
      "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\"": "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\""
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/22/levels/5": {
    "short_instructions": "Add actions to each event so that when the giraffe collides with each sprite, it shrinks by 5.",
    "long_instructions": "All of this play takes energy!  \n\nAdd actions to each event so the giraffe gets a little smaller (shrinks by 5) each time it collides with another sprite.  ",
    "behavior_names": {
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    },
    "behavior_descriptions": {
      "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\"": "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\""
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/22/levels/6": {
    "short_instructions": "Add an apple that returns the giraffe back to regular size when they touch.",
    "long_instructions": "A balanced diet is important! We have to feed the giraffe to get its strength back.  \n\nAdd an apple to the scene and have it return the giraffe back to regular size when the two sprites touch.  ",
    "behavior_names": {
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    },
    "behavior_descriptions": {
      "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\"": "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\""
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/22/levels/7": {
    "short_instructions": "Freeplay: What more can you make your giraffe do? ",
    "long_instructions": "Freeplay: What more can you make your giraffe do? \n\n-   Can you add more special items for your virtual pet?  \n-   Can you give her some friends?  ",
    "behavior_names": {
      "shrinking": "shrinking",
      "patrolling": "patrolling",
      "wandering": "wandering",
      "growing": "growing",
      "jittering": "jittering",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "moving west": "moving west",
      "spinning right": "spinning right"
    },
    "behavior_descriptions": {
      "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\"": "Moves back and forth in one direction. To change the direction a sprite is patrolling, change its \"movement direction\""
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/23/levels/1": {
    "display_name": "Video: CS Matters"
  },
  "https://studio.code.org/s/coursee-2018/lessons/23/levels/2": {
    "display_name": "Geometric Sun",
    "short_instructions": "Project Idea: Create a pattern using geometric ideas like shapes. This requires persistence and planning!",
    "long_instructions": "**Project Idea:** Create a pattern using geometric ideas like shapes. This requires persistence and planning!",
    "callouts": {
      "4-5_Artist_Patterns_Free_Play_1": "All of your favorite blocks are now organized into categories.  Click on these words to see where everything went!"
    },
    "function_definitions": {
      "draw a door": {
        "name": "draw a door"
      },
      "draw grass": {
        "name": "draw grass"
      },
      "draw windows": {
        "name": "draw windows"
      },
      "rectangle": {
        "name": "rectangle",
        "description": "lol"
      },
      "sun": {
        "name": "sun"
      },
      "diamond": {
        "name": "diamond"
      },
      "window": {
        "name": "window"
      },
      "draw a house": {
        "name": "draw a house"
      },
      "triangle": {
        "name": "triangle"
      },
      "square": {
        "name": "square",
        "description": "lol"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/23/levels/3": {
    "display_name": "Robot Doodle",
    "short_instructions": "Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!",
    "long_instructions": "**Project Idea:** Create a picture of something familiar from the real world. This requires persistence and planning!",
    "callouts": {
      "4-5_Artist_Patterns_Free_Play_2": "Try using the new `comment` block under this label to leave yourself notes inside your program!"
    },
    "function_definitions": {
      "25 pixel square": {
        "name": "25 pixel square"
      },
      "draw head": {
        "name": "draw head"
      },
      "draw eye": {
        "name": "draw eye"
      }
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/23/levels/4": {
    "display_name": "Bunny ",
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "being hungry": "being hungry",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "swimming left and right": "swimming left and right"
    },
    "behavior_descriptions": {
      "move a sprite, changing its direction randomly": "move a sprite, changing its direction randomly",
      "move a sprite to the right across the screen": "move a sprite to the right across the screen",
      "rotate a sprite to its left": "rotate a sprite to its left",
      "rotate a sprite to its right": "rotate a sprite to its right",
      "change the size of a sprite": "change the size of a sprite",
      "move a sprite downwards across the screen": "move a sprite downwards across the screen",
      "move a sprite horizontally, reversing direction if it touches the edges of the screen": "move a sprite horizontally, reversing direction if it touches the edges of the screen",
      "move a sprite upwards across the screen": "move a sprite upwards across the screen",
      "randomly change the size of a sprite": "randomly change the size of a sprite",
      "move a sprite to the left across the screen": "move a sprite to the left across the screen",
      "move a sprite across the screen, reversing direction if it touches the edges": "move a sprite across the screen, reversing direction if it touches the edges"
    },
    "placeholder_texts": {
      "40d7755b0c04b15ca69f0f8d8c510f91": "Feed the bunny!",
      "498cd895eb5a102c5aeb977e2b928dee": "Thank you!"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/23/levels/5": {
    "display_name": "Dogger Example",
    "function_definitions": {
      "stop_everything": {
        "name": "stop_everything"
      },
      "lose": {
        "name": "lose"
      }
    },
    "behavior_names": {
      "drive left": "drive left",
      "drive right": "drive right",
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling"
    },
    "behavior_descriptions": {
      "move a sprite, changing its direction randomly": "move a sprite, changing its direction randomly",
      "move a sprite to the right across the screen": "move a sprite to the right across the screen",
      "rotate a sprite to its left": "rotate a sprite to its left",
      "rotate a sprite to its right": "rotate a sprite to its right",
      "change the size of a sprite": "change the size of a sprite",
      "move a sprite downwards across the screen": "move a sprite downwards across the screen",
      "move a sprite horizontally, reversing direction if it touches the edges of the screen": "move a sprite horizontally, reversing direction if it touches the edges of the screen",
      "move a sprite upwards across the screen": "move a sprite upwards across the screen",
      "randomly change the size of a sprite": "randomly change the size of a sprite",
      "move a sprite to the left across the screen": "move a sprite to the left across the screen",
      "move a sprite across the screen, reversing direction if it touches the edges": "move a sprite across the screen, reversing direction if it touches the edges"
    },
    "placeholder_texts": {
      "e8a10c04d72b2f135dabe360c4bdd534": "You win!",
      "8437002ea42b64a5fd68abfb2ab8dae0": "Game over.",
      "c865bfd8e0c78020ace8e1376d3cc9ad": "You lost."
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/24/levels/1": {
    "dsls": {
      "content1": "description here",
      "markdown": "# The Design Process\nDesigning software means solving lots of little problems, all the time. The main problem in software design is what to create in the first place.\n\nThis process is useful for all kinds of things, but we are going to focus on using it for app design.\n\n<!-- Translate the terms \"Define\", \"Prepare\", \"Try\", \"Reflect\" and change font size and positioning as needed-->\n<div style=\"position: relative; text-align: center; font-size: 1em\">\n  <img src=\"https://images.code.org/a157e5f67444573e19e980a507db16fb-image-1563319667694.png\" alt=\"Design Process\" style=\"width: 50%;\">\n  <div style=\"position: absolute; top: 24%; left: 49.8%; transform: translateX(-49.8%); font-weight: bold;\">Define</div> \n  <div style=\"position: absolute; top: 52%; left: 61%; transform: translateX(-61%); font-weight: bold;\">Prepare</div>\n  <div style=\"position: absolute; top: 79%; left: 49.8%; transform: translateX(-49.8%); font-weight: bold;\">Try</div>\n  <div style=\"position: absolute; top: 52%; left: 39%; transform: translateX(-39%); font-weight: bold;\">Reflect</div>\n</div>\n\n* **Define**\n  * What kind of app would you like to create?\n  * What are your constraints?\n  * What does success look like?\n* **Prepare**\n  * Brainstorm / research possible elements\n  * Compare pros and cons\n  * Make a plan\n* **Try**\n  * Put your plan into action\n* **Reflect**\n  * How do your results compare to the goals you set while defining the app?\n  * What can you learn from this or do better next time?\n  * What new problems have you discovered?\n\n# What it Looks Like\nOver the course of the next several weeks, you will have the opportunity to experiment with some existing games and design your own game based off of what you have learned.  After creating your game, you will get the chance to present it to others and receive feedback.  These steps are all critically important in the software industry, and getting practice with the elements of the design process will help you create better products more efficiently.  \n\nHere is what the coming weeks will hold as we learn more about the design process:\n\n1. **Define & Prepare**\n   * Play existing games to get ideas and understand limitations\n   * Brainstorm and plan your new or modified app\n1. **Try**\n   * Follow your plan to build an app\n1. **Reflect & Edit**\n   * Swap apps with another group to help make your projects better\n1. **Present**\n   * Show off your final product!\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/25/levels/1": {
    "display_name": "Course E Artist Project"
  },
  "https://studio.code.org/s/coursee-2018/lessons/25/levels/2": {
    "display_name": "Course E Sprite Lab Project",
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling"
    },
    "behavior_descriptions": {
      "move a sprite, changing its direction randomly": "move a sprite, changing its direction randomly",
      "move a sprite to the right across the screen": "move a sprite to the right across the screen",
      "rotate a sprite to its left": "rotate a sprite to its left",
      "rotate a sprite to its right": "rotate a sprite to its right",
      "change the size of a sprite": "change the size of a sprite",
      "move a sprite downwards across the screen": "move a sprite downwards across the screen",
      "move a sprite horizontally, reversing direction if it touches the edges of the screen": "move a sprite horizontally, reversing direction if it touches the edges of the screen",
      "move a sprite upwards across the screen": "move a sprite upwards across the screen",
      "randomly change the size of a sprite": "randomly change the size of a sprite",
      "move a sprite to the left across the screen": "move a sprite to the left across the screen",
      "move a sprite across the screen, reversing direction if it touches the edges": "move a sprite across the screen, reversing direction if it touches the edges"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/26/levels/1": {
    "dsls": {
      "markdown": "# Project Presentations\n\nTime to present your projects! Your teacher will provide more details on how you will be presenting your work to your classmates.\n"
    }
  },
  "https://studio.code.org/s/coursee-2018/lessons/27/levels/1": {
    "title": "translation missing: en-US.data.unplugged.Internet_2018.title"
  },
  "https://studio.code.org/s/coursee-2018/lessons/28/levels/1": {
    "title": "translation missing: en-US.data.unplugged.Crowdsourcing_2018.title"
  }
}