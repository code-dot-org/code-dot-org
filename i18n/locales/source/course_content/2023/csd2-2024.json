{
  "https://studio.code.org/s/csd2-2024/lessons/1/levels/1": {
    "dsls": {
      "content1": "Look through these sample web pages and decide what purpose they serve their creators and visitors.",
      "markdown": "# Sample Personal Web Pages\n\n<div style=\"float: left; text-align:center; width:33%\"><strong>Template A</strong><br />(Click the image to view template)<br /><a href=\"https://codeprojects.org/projects/weblab/kkb1upGQja7Hy4NAa72uQxwu87jDa_DO1aiav2Qhzk8\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px; width: 100%;\" src=\"https://images.code.org/301502f3280461ed7b9f16bf5ed11bb8-image-1677189841902.png\" alt=\"Template A page\"></a></div>\n<div style=\"float: left; text-align:center; width:33%\"><strong>Template B</strong><br />(Click the image to view template)<br /><a href=\"https://codeprojects.org/projects/weblab/hQCSn2We5tss6ZiOPTGJYq6PXHkwOIAztnd3ArJbezc\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px; width: 100%;\" src=\"https://images.code.org/e9839b33b809a72773d9190f5378e295-image-1677194056589.png\" alt=\"Template B page\"></a></div>\n<div style=\"float: left; text-align:center; width:34%\"><strong>Template C</strong><br />(Click the image to view template)<br /><a href=\"https://codeprojects.org/projects/weblab/Z3m2fWClc10iTgxiLnOfTqZHApYrFXgx8YqgCwAvXvs\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px; width: 100%;\" src=\"https://images.code.org/c030607ab7c9eacdffc613aff3992381-image-1677194170313.png\" alt=\"Template C page\"></a></div>\n<hr style=\"clear: both\" />\n<div style=\"float: left; text-align:center; width:33%\"><strong>Template D</strong><br />(Click the image to view template)<br /><a href=\"https://codeprojects.org/projects/weblab/asJPWlR18HPsC30w8nGM7Zm1jPurD_wNyEKstYWjh_Q\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px; width: 100%;\" src=\"https://images.code.org/e53aaca3962f75b7279cb8f39b2b8237-image-1677194195497.png\" alt=\"Template D page\"></a></div>\n<div style=\"float: left; text-align:center; width:33%\"><strong>Template E</strong><br />(Click the image to view template)<br /><a href=\"https://codeprojects.org/projects/weblab/I888qmIAVN8JACK6jHeRtIz17b77g5-XcvkkxF8ztZ8\" target=\"_new\"><img style=\"border-radius:10px; margin: 10px; width: 100%;\" src=\"https://images.code.org/68afb5ea16d9e61545c68254570ce39e-image-1677194239625.png\" alt=\"Template E page\"></a></div>\n<hr style=\"clear: both\" />\n"
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/1/levels/2": {
    "dsls": {
      "title": "Web Development Rapid Survey!"
    },
    "sublevels": {
      "csd-pulse-check-survey-preamble_2019_pilot_copy2_csd2_2024": {
        "dsls": {
          "markdown": "### Please take a moment to respond to these **five quick questions**.\n\n<small>\n<em>Code.org takes your privacy seriously.</em> Your responses here will be kept <strong>anonymous</strong>. Your teacher can see responses for the whole class, but without names attached.\n</small>\n"
        }
      },
      "intro-pulse-survey-q1_csd2_2024": {
        "dsls": {
          "answers": [
            {
              "text": "This is the first I am learning about computer science",
              "correct": true
            },
            {
              "text": "I have done smaller computer science activities (for example: an hour of code), but this is my first longer class",
              "correct": true
            },
            {
              "text": "I have already taken classes or done longer online tutorials on computer science",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "What prior experiences have you had with computer science?"
            }
          ]
        }
      },
      "intro-pulse-survey-q2_csd2_2024": {
        "dsls": {
          "answers": [
            {
              "text": "This is the first I am learning about Web Development",
              "correct": true
            },
            {
              "text": "I have done smaller Web Development activities (for example: an hour of code), but this is my first longer class",
              "correct": true
            },
            {
              "text": "I have already taken classes or done longer online tutorials on Web Development",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "What prior experiences have you had with Web Development?"
            }
          ]
        }
      },
      "intro-pulse-survey-q5_csd2_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Strongly agree",
              "correct": true
            },
            {
              "text": "Agree",
              "correct": true
            },
            {
              "text": "Slightly agree",
              "correct": true
            },
            {
              "text": "Neither",
              "correct": true
            },
            {
              "text": "Slightly disagree",
              "correct": true
            },
            {
              "text": "Disagree",
              "correct": true
            },
            {
              "text": "Strongly disagree",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "I like computer science."
            }
          ]
        }
      },
      "intro-pulse-survey-q3_csd2_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Strongly agree",
              "correct": true
            },
            {
              "text": "Agree",
              "correct": true
            },
            {
              "text": "Slightly agree",
              "correct": true
            },
            {
              "text": "Neither",
              "correct": true
            },
            {
              "text": "Slightly disagree",
              "correct": true
            },
            {
              "text": "Disagree",
              "correct": true
            },
            {
              "text": "Strongly disagree",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "I have the ability to learn computer science"
            }
          ]
        }
      },
      "intro-pulse-survey-q4_csd2_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Strongly agree",
              "correct": true
            },
            {
              "text": "Agree",
              "correct": true
            },
            {
              "text": "Slightly agree",
              "correct": true
            },
            {
              "text": "Neither",
              "correct": true
            },
            {
              "text": "Slightly disagree",
              "correct": true
            },
            {
              "text": "Disagree",
              "correct": true
            },
            {
              "text": "Strongly disagree",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "I want to take more computer science classes in the future"
            }
          ]
        }
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/2/levels/1": {
    "long_instructions": "<img src=\"https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg\" style=\"width:400px; float:right\">\n\n_This level follows a video that you may have watched with your class. If you missed the video, you can watch it in the Help and Tips tab of this level._\n\n# Welcome to Web Lab!\n\nThe platform you are in is called Web Lab. There are three main parts of the screen in Web Lab.\n\nIn this level, let's get to know our partner for pair programming.\n\n# Do This\n\n**Driver:**\n\n1.  Type the name of your Navigator, their favorite color, and their favorite animal on different lines in the workspace.\n    -   ::: details [**Show Me How**]\n        <img src=\"https://images.code.org/83389d6311fca78df6d77ca1629529cb-weblab-start.gif\" width=\"350\" />\n        :::\n2.  Press <img src=\"https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png\" style=\"width:150px\"> to see it in the preview area!\n\nDoes the preview match how you typed it in the workspace?",
    "teacher_markdown": "After giving students some time to explore the tool, ask them to share out anything that they have discovered.  The video on the next level will give them a short tour, so it's okay if they don't notice everything."
  },
  "https://studio.code.org/s/csd2-2024/lessons/2/levels/2": {
    "display_name": "Explore HTML",
    "long_instructions": "_This level follows a video that you may have watched with your class. If you missed the video, you can watch it in the Help and Tips tab of this level._\n\n# Explore HTML\n\nThis is a web page written in HTML, the language of the web. You'll learn more about how it works, but first explore it by using the Inspector Tool.\n\n# Do This\n\n1.  Click on the Inspector Tool <img src=\"https://images.code.org/3d14dbc171be8931ad334259c60b0bd6-image-1692224009052.png\" style=\"width:100px\">. _You will know that the Inspector Tool is on because the button will say \"Inspector: On\" and lines of code will highlight when hover over content._\n2.  Once you turn on the Inspector Tool, you can hover over anything in the preview area and Web Lab will highlight the code that is making that part of the page appear. Notice that some parts of the code have special `< >` markers surrounding the words\n3.  **With your Navigator:** Use the inspector tool and try to determine which `< >` code create the following effects on the website:\n    -   What code makes the text bigger and bolder?\n    -   What code makes text appear as a list?\n    -   What code makes the text appear on separate lines?\n    -   What's a piece of code that doesn't appear to do anything on the screen?"
  },
  "https://studio.code.org/s/csd2-2024/lessons/2/levels/3": {
    "long_instructions": "_This level follows a video that you may have watched with your class. If you missed the video, you can watch it in the Help and Tips tab of this level._\n\n# Add Text to the Body\n\nWhen you start any Web Lab project, it will automatically add `<!DOCTYPE>`, `<html>`, `<head>`, and `<body>` tags to your project. When you add content to your projects, you'll need to do it between the `<body>` and `</body>` tags because it should be part of the body of your webpage.\n\nAnother student, Sofia, has already started adding text to her webpage. She started to add paragraph tags so each sentence would appear on its own line, but hasn't finished\n\n<img src=\"https://images.code.org/391e34e673c238090ce87c314b3fdd7e-weblab-inspector.gif\" style=\"width:300px; float:right; margin-left: 10px; margin-right: 10px;\">\n\n# Do This\n\n1.  Finish adding `<p>` and `</p>` tags to Sofia's code so each sentence appears on a separate line\n2.  Use the Inspector tool to verify that each line appears on its own\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/cdc75459cb46bd58d5af50df0ca56e3d-image-1677101838977.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/2/levels/4": {
    "long_instructions": "# Use Paragraph Tags\n\nThe `<p>` `</p>` tags or \"paragraph\" start and end tags are placed around text to indicate that it is part of a paragraph. Placing text between paragraph start and end tags lets the computer know that it should be treated differently, often just spacing it out from other text.\n\n# Do This\n\n1.  Click in between the `<body>` and `</body>` tags - this is where you'll add your code\n2.  Create two paragraphs that ask a question and answer it. This can be a trivia question, a riddle, or a joke.\n    -   For example: \"What continent has the largest land mass?\" - \"Asia\"\n3.  Place the text you just wrote inside two separate paragraphs by surrounding each line with `<p>` and `</p>` tags"
  },
  "https://studio.code.org/s/csd2-2024/lessons/2/levels/5": {
    "display_name": "Debugging: Fix Paragraphs",
    "bubble_choice_description": "This simple web page has some issues which are preventing the content from being displayed correctly. Identify and fix the issues.",
    "long_instructions": "# Do This\n\n1.  Fix the broken code so that the web page displays correctly with each sentence on its own line."
  },
  "https://studio.code.org/s/csd2-2024/lessons/2/levels/6": {
    "dsls": {
      "description": "Try out what you've learned on one or more of the following activities.",
      "display_name": "Practice Levels"
    },
    "sublevels": {
      "CSD U2L2 - PracA_2024": {
        "display_name": "Creating Paragraphs",
        "bubble_choice_description": "Revisit the first level from this lesson to write your name, favorite color, and favorite animal using paragraph tags",
        "long_instructions": "# Create your own Paragraphs\r\n\r\nNow that we know how to add `<p>` tags to our code, let's re-do the first level from this lesson and write our name, favorite color, and favorite animal on separate lines\r\n\r\n# Do This\r\n\r\n1) Use `<p>` and `</p>` tags to write your name, your favorite color, and your favorite animal on separate lines\r\n\t- Don't forget to type these in between the `<body>` and `</body>` tags!\r\n- Use the Inspector tool to verify that each line appears on its own\r\n\r\n::: details [🔎 **Show Me How** 🔍]\r\n\r\n<img src=\"https://images.code.org/bb90825c9ad962e4727169769002c4c9-image-1677102715568.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::\r\n\r\n![]()"
      },
      "CSD U2L2 - PracB_2024": {
        "display_name": "Alternating Stories",
        "bubble_choice_description": "Work with your neighbor to tell a Fortunately / Unfortunately story using paragraph tags",
        "long_instructions": "# Fortunately / Unfortunately Stories\r\n\r\nA Fortunately / Unfortunately story is a story that starts with an initial sentence, and then alternates between sentences that start with \"fortunately\" and \"unfortunately\". For example:\r\n- A man needed to go to the grocery store to buy some milk\r\n- Fortunately, he had a car that he could drive to the store\r\n- Unfortunately, the car was out of gas\r\n- Fortunately, there was a gas station nearby that he could walk to\r\n- Unfortunately, the path to the gas station went through the swamp that was infested with crocodiles\r\n\r\n# Do This\r\n\r\n1) Work with your partner to add alternating sentences to the story below. One person should add the \"fortunately\" sentences, and the other person should add the \"unfortunately\" sentences\r\n\t- Be sure to use `<p>` and `</p>` tags so each line of the story appears as a separate line\r\n- Repeat this until the story is at least 8 lines long"
      },
      "CSD U2L2 - PracD_2024": {
        "display_name": "* Pyramid",
        "bubble_choice_description": "Use paragraph tags to create a sideways pyramid out of * symbols.",
        "long_instructions": "<img src=\"https://images.code.org/f46513c66a55ea4f41b18b361b593247-image-1665177535123.png\" style=\"float:right; width: 20%; margin-left: 10px; margin-right: 10px\" />\r\n\r\n# * Pyramid\r\n\r\nUse paragraph tags to create a sideways pyramid out of `*` symbols. Each line of the pyramid should be its own paragraph\r\n\r\n# Do This\r\n\r\n1) Recreate a pyramid out of `*` symbols that is 5 `*`'s long.\r\n\t- Be sure to use `<p>` and `</p>` tags so each line of the pyramid appears as a separate line\r\n    \r\n::: details [🔎 **Show Me How** 🔍]\r\n\r\n`<body>`\r\n\r\n`<p>` * `</p>`\r\n    \r\n`<p>` * * `</p>`\r\n    \r\n`<p>` * * * `</p>`\r\n\r\n_keep going!_\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/2/levels/7": {
    "display_name": "Fixing Dialogue",
    "bubble_choice_description": "Help a writer fix their website so each line of dialogue appears on a separate line",
    "long_instructions": "<img src=\"https://images.code.org/5bf8426612c7c7696edddb0b66c73428-dialogue.png\" style=\"float: right; width: 25%; margin-left: 10px; margin-right: 10px\" />\n\n# Fixing Dialogue\n\nA screenwriter tried to copy-and-paste their dialogue from a play into a webpage, but the formatting got all messed up. Can you separate each piece of dialogue so it's on it's own line?\n\n# Do This\n\n1.  Separate the dialogue into separate lines so each person is speaking on their own line\n2.  Use `<p>` and `</p>` tags so each line appears correctly on the website",
    "mini_rubric": {
      "rubric_key_concept": "Use correct HTML syntax to create text paragraphs",
      "rubric_performance_level_1": "All texts is contained within paragraph tags. The resulting webpage matches the preview in the level instructions.",
      "rubric_performance_level_2": "At least some text has been separated out into a paragraph through proper use of paragraph tags. The resulting webpage partially matches the preview in the level instructions",
      "rubric_performance_level_3": "There is at least one paragraph tag in the text, but it may not be used properly (e.g. missing closing tag, paragraphs created outside of the body element).",
      "rubric_performance_level_4": "There are no paragraph tags in the text."
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/2/levels/8": {
    "long_instructions": "# Fixing Dialogue Reflection\n\n🤔 Take a minute to reflect on the last level where you were tasked with fixing dialogue and answer the following questions:\n\n1.  ✔️ How do you think you did according to the Rubric below and why?\n2.  🏁 How did you know how to complete this assessment?\n3.  👍🏼 What was easy about the task? / ❗ What was the most challenging? \n\n<hr>\n\n[][0]",
    "teacher_markdown": "Use this reflection as an opportunity to gain insight into how the students completed the assessment level and the choices they made with the HTML tags as well as identify any misconceptions that should be cleared up."
  },
  "https://studio.code.org/s/csd2-2024/lessons/2/levels/9": {
    "dsls": {
      "description": "Try out what you've learned on one or more of the following activities.",
      "display_name": "Challenge Levels"
    },
    "sublevels": {
      "CSD U2L2 - ChalB_2024": {
        "display_name": "Debugging: Fix Typos",
        "bubble_choice_description": "Sometimes mistakes appear in our code because we mis-type or misspell something. Try to fix the errors in the code below by fixing the spelling mistakes",
        "long_instructions": "# Debug: Fix the Typos\r\n\r\nSometimes mistakes appear in our code because we mis-type or misspell something. Try to fix the errors in the code below by fixing the spelling mistakes\r\n\r\n# Do This\r\n\r\n1) Fix the broken code so that the web page displays correctly. Hint: there are 3 errors in the code below.\r\n* Compare the problems you fixed with a neighbor"
      },
      "CSD U2L2 - ChalC_2024": {
        "display_name": "Debugging: Out of Order",
        "bubble_choice_description": "All of the code is out of order! Can we rearrange the code so it is formatted correctly?",
        "long_instructions": "# Debug: Out of Order\r\n\r\nEven though the preview of this webpage looks just fine, all of the code is out of order! This will cause problems later, so it's important everything is formatted and nested correctly. Can we rearrange the code so it is formatted correctly?\r\n\r\n# Do This\r\n\r\n1) Re-arrange the code using copy-and-paste so the tags are in the correct order and nested correctly\r\n* Compare the problems you fixed with a neighbor"
      },
      "CSD U2L2 - ChalD_2024": {
        "display_name": "Write a Poem",
        "bubble_choice_description": "Use paragraph tags to write you own poetry, with each line separated by paragraph tags!",
        "long_instructions": "<img src=\"https://images.code.org/f4fe6889cc77a1a01edb9b865d2c6931-image-1665178064418.png\" style=\"float:right; width:20%; margin-left: 10px; margin-right: 10px\" />\r\n\r\n# Write a Poem\r\n\r\nUse paragraph tags to write your own poetry, with each line separated by paragraph tags!\r\n\r\n# Do This\r\n\r\n- Write a poem that is at least 5 lines long!\r\n* Use `<p>` and `</p>` tags to separate the poem onto separate lines\r\n\r\n::: details [**What is this example poem? Who is Caia Lomeli?**]\r\nCaia is a poet and computer science student. In both scenarios, Caia takes the building blocks of language and uses them to create her own vision. [Click here to learn more about Caia and how she merges poetry with computer science](https://www.youtube.com/watch?v=vT9imQY8Dsc)\r\n:::"
      },
      "CSD U2L2 - ChalE_2024": {
        "display_name": "ASCII Art",
        "bubble_choice_description": "ASCII Art is a type of artwork what just uses keyboard characters to create images. Each image is just a combination of letters or symbols or piece of punctuation from the keyboard.",
        "long_instructions": "<img src=\"https://images.code.org/5392b99f7b64b32b7eec26473a87410a-image-1665180946859.png\" style=\"float:right; width:20%; margin-left: 10px; margin-right: 10px\" />\r\n\r\n# ASCII Art\r\n\r\nASCII Art is a type of artwork what just uses keyboard characters to create images. Each image is just a combination of letters or symbols or piece of punctuation from the keyboard.\r\n\r\n# Do This\r\n\r\n- Create your own ASCII art, using `<p>` and `</p>` tags to separate the image onto separate lines. You could try to draw a design, or even just spell your name with ASCII symbols\r\n\t- If in doubt: try creating designs using just the `*` symbol, like stars or mountains or letters\r\n    - Use `&nbsp;` in order to create space between characters in your design\r\n\r\n<img src=\"https://images.code.org/ca3daf17075cff0ab44575b623f5296e-image-1665181088272.png\" style=\"width: 500px\" />"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/1": {
    "long_instructions": "# Explore Heading Tags\n\nHTML defines six levels of headings, and these heading elements are H1, H2, H3, H4, H5, and H6. The H1 element is the highest or most important level, and the H6 element is the least important.\n\nThese different heading levels help to communicate the organization and hierarchy of the content on a page. For example, headings with an equal or higher ranking indicate the start of a new section, and headings with a lower rank indicate the start of a new subsection that is part of a higher-ranked section.\n\n# Do This\n\n1.  Turn on the Inspector Tool.\n2.  Hover over each of the bold headings on the web page to find out which heading size was used.\n3.  Discuss with your partner:\n    -   When would you use each of these headings?\n        -   For example, which heading would you use for a web page title ... when might you use the H6 heading?"
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/2": {
    "display_name": "Intro to Headings",
    "long_instructions": "# Headings\n\nSo far, you've organized your content into paragraphs.  Another way HTML allows you to organize your code is by using **headings**.  A heading is a short piece of text that goes at the top of a section of content, like a title.\n\n# Do This:\n\n1.  Find the headings in the web page below and use the Inspector Tool to see the code that makes them.\n2.  Make sure you and your partner agree on what the tags do.\n3.  Change the code so that \"Drawing\" and \"2 years\" match the headings on the rest of the page.\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/f98617a07b46476bc721e8c1124b2515-image-1677103360748.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/3": {
    "display_name": "Heading Sizes",
    "long_instructions": "<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15 PM.png\" style=\"width:100px; float:right; margin-left: 20px;\">\n\n# Heading Sizes\n\nHeadings can come in different sizes.  In this page, there are six different sized headings, but they are all mixed up.  Can you and your partner figure out how to fix them?\n\n# Do This:\n\n1.  Use the inspector tool to figure out what makes the headings different sizes\n2.  Make sure you and your partner agree on what the different heading tags do.\n3.  Change the tags so that the headings are in order from biggest to smallest, and the text says the correct size, as in the picture to the right. \n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/175d9275ad58855cceabe8af40304bb8-image-1677103878953.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/4": {
    "dsls": {
      "answers": [
        {
          "text": "https://images.code.org/a4e973cc13db380ca1e1efeb4263974f-image-1473432905067.53.47 AM.png",
          "correct": false
        },
        {
          "text": "https://images.code.org/1c660b4e54a3e835250597cb261d8e17-image-1473432905068.54.08 AM.png",
          "correct": true
        },
        {
          "text": "https://images.code.org/22e9ae6a04afd8251b29939a6fa63411-image-1473432905069.54.25 AM.png",
          "correct": false
        },
        {
          "text": "https://images.code.org/0eee565202089d44a6bb5633603c45e0-image-1473432905069.54.50 AM.png",
          "correct": false
        }
      ],
      "content1": "Look at the code below and predict how the headings will be displayed. Choose from one of the options on the right.",
      "markdown": "<pre>\n&lt;h3&gt; Eggs &lt;/h3&gt;\n&lt;h1&gt; Bacon &lt;/h1&gt;\n&lt;h6&gt; Waffles &lt;/h6&gt;\n</pre>\n",
      "teacher_markdown": "<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/Screen-Shot-2017-04-27-at-10.38.03-AM.png\" style=\"width:200px; float:right\">\n\n**Level Types:** This multiple choice question that asks students to choose how HTML headings will display on a web page. You can see which students have answered the question correctly by going to that level and pulling out the Teacher Panel from the right hand side.  Students who have successfully answered the question will have a green bubble.  Students have as many chances as they like to answer correctly, so guessing and checking can also lead to a correct answer.\n\n<div class=\"clear\"></div>\n",
      "title": "Headings Quick Check"
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/5": {
    "display_name": "Create bulleted list",
    "bubble_choice_description": "Create a list of unordered elements",
    "long_instructions": "# Unordered Lists\n\nThere are two types of lists in HTML, ordered and unordered lists.\n\nAn **unordered list** is just a set of _bulleted_ items.\n<br /><br />An unordered list element has the tag `<ul>`. This is an abbreviation for <strong>U</strong>nordered <strong>L</strong>ist. \n\nEach item in the list is marked by a list item element `<li>`. This is an abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list item element is a child element, which means that it goes **_inside_** of its parent element, the unordered list (`<ul>`).\n\nTake a look at how the given code below creates an unordered list. Pay special attention to the whitespace and indentation of the `<li>`.\n\n# Do This\n\n1.  Look at how the `<ul>` and `<li>` tags are used to create an unordered list.\n2.  Use the `<ul>` and `<li>` tags to create your own dessert list.\n\n::: details [**Show me another example of working code.**]\n\n<table border=\"1\">\n<tr>\n<td>Example</td>\n<td>Result</td>\n</tr>\n<tr>\n<td>\n\n     <ul>\n     \t<li>Red </li>\n        <li>Green </li>\n        <li>Blue</li>\n     </ul>\n\n</td>\n<td><img src=\"https://images.code.org/25d4dfc9b6c448d0da305df66aa1dfb7-image-1473444368948.05.32 PM.png\" style=\"width:200px\"></td>\n</tr>\n</table>\n<br>\n\n**More resources are in the \"Help and Tips\" tab**\n:::"
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/6": {
    "display_name": "Create ordered list",
    "bubble_choice_description": "Use the <ol> tag to create a numbered list",
    "long_instructions": "# Ordered Lists\n\nAn ordered list is like an unordered (bulleted) list, but it has numbers. Just use the `<ol>` tag instead of `<ul>`.\n\nThis is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist. \n\nJust like your bulleted list, each item in the ordered (numbered) list is marked by a list item element `<li>`;. This is an abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list item element is a child element, which means that it goes **_inside_** of its parent element, the ordered list (`<ol>`).\n\n# Do This\n\n1.  Use the `<ol>` and `<li>` tags to structure this content into an ordered list.\n\n::: details [**Show me an example of working code.**]\n\n<table border=\"1\">\n<tr>\n<td>Example</td>\n<td>Result</td>\n</tr>\n<tr>\n<td>\n\n    <ol>\n      <li>Step 1 </li>\n      <li>Step 2 </li>\n      <li>Step 3 </li>\n    </ol>\n\n</td>\n<td><img src=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04 PM.png\" style=\"width:200px\"></td>\n</tr>\n</table>\n<br>\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::\n\n<br>\n\n::: details [🔎 **Show Me How to Complete This Level** 🔍]\n\n<img src=\"https://images.code.org/9f363fa113de0a836d7b5cc2e8ce2122-image-1677099429754.gif\" style=\"width:500px\">\n<br>\n<br>\n**More resources are in the \"Help and Tips\" tab**\n\n:::"
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/7": {
    "display_name": "Create ordered list",
    "bubble_choice_description": "Use the <ol> tag to create a numbered list",
    "long_instructions": "# Comments\n\nHTML comments are an essential aspect of web design and development. They are used to add notes and explanations to your code, making it easier for yourself and others to understand and maintain. By using comments correctly, you can ensure that your code is well-organized and easy to understand, leading to a smoother development process.\n\nAdding a comment in HTML is done by using the `<!--` and `-->` tags. Anything that is placed between these tags **will not be displayed** in the browser, but **will** be visible when looking at the source code.\n\n_`<!-- This is a comment -->`_\n\n# Do This\n\n1.  Use the comment tag to \"comment out\" the information _about_ the content.\n\n::: details [🔎 **Show Me How To Complete This Level** 🔍]\n\n<img src=\"https://images.code.org/5f156a02fb203e3f072b2bab62b64c04-image-1703009877688.gif\" style=\"width:700px\">\n<br>\n<br>\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/8": {
    "dsls": {
      "description": "Try out what you've learned on one or more of the following activities.",
      "display_name": "HTML Headings"
    },
    "sublevels": {
      "CSD U2 Headings challenge debug 1_2024": {
        "display_name": "Debug the missing paragraph",
        "bubble_choice_description": "Use your debugging skills to figure out why the paragraph has disappeared.",
        "long_instructions": "*This level follows a video that you may have watched with your class. If you missed the video, you can watch it in the Help and Tips tab of this level.*\r\n\r\n# Debug: Missing Paragraph\r\n\r\nSomeone has submitted a bug report on this web page.  Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nThree paragraphs, one each | The turtle paragraph is missing\r\n on dogs, turtles, and birds | \r\n \r\n \r\n# Do this\r\n\r\n1) Find and fix the problem that is causing the bug\r\n "
      },
      "CSD U2 Headings challenge debug 2_2024": {
        "display_name": "Debug the pink tags",
        "bubble_choice_description": "Use your debugging skills to figure out why the tags are pink.",
        "long_instructions": "*This level follows a video that you may have watched with your class. If you missed the video, you can watch it in the Help and Tips tab of this level.*\r\n\r\n# Debug: Pink Tags\r\n\r\n\r\nSomeone has submitted a bug report on this web page.  Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nThe code should not be pink | There is pink code near lines 8, 13 and 14\r\n \r\n# Do this\r\n1) Find and fix the problem that is causing the bug",
        "teacher_markdown": "This is a teacher note."
      },
      "CSD U2 Headings challenge debug 3_2024": {
        "display_name": "Debug the Subheadings",
        "bubble_choice_description": "Use your debugging skills to figure out why some subheadings are smaller than others.",
        "long_instructions": "*This level follows a video that you may have watched with your class. If you missed the video, you can watch it in the Help and Tips tab of this level.*\r\n\r\n# Debug: Pink Tags\r\n\r\n\r\nSomeone has submitted a bug report on this web page.  Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nThe code should not be pink | There is pink code near line 12 and line 14\r\n \r\n# Do this\r\n1) Find and fix the problem that is causing the bug.",
        "teacher_markdown": "This is a teacher note."
      },
      "CSD U2 Headings challenge debug 4_2024": {
        "display_name": "Add Larger Heading",
        "bubble_choice_description": "Add a large heading to the top of a web page.",
        "long_instructions": "*This level follows a video that you may have watched with your class. If you missed the video, you can watch it in the Help and Tips tab of this level.*\r\n\r\n# Add Larger Heading and List\r\n\r\nHere's a great article on modes of transportation. Can you add a catchy, large heading and title it?\r\n \r\n# Do this\r\n1) Add a larger heading at the top of the article.\r\n \r\n   * **Bonus Challenge:** Can you turn the subheadings into a bulleted list? \t\r\n \r\n\t*Hint: see Level 8b for inspiration*\r\n    \r\n::: details [🔎 **Show Me How** 🔍]\r\n\r\n<img src=\"https://images.code.org/c90540fbacf4f7de6e8c92325dac4b35-image-1677099108113.gif\" style=\"width:500px\">\r\n<br>\r\n<br>\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::\r\n\r\n",
        "teacher_markdown": "This is a teacher note."
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/9": {
    "display_name": "Headings and Paragraphs",
    "long_instructions": "# Headings, Paragraphs, and Lists\n\nThe author of this page added in a lot of content, but did not think about structure.  All of the text is mashed together.\n\n# Do This:\n\n1.  Look through the content with your partner and decide what you think the best structure should be.\n2.  Add comments to the code to clarify the structure.\n3.  Use your heading, paragraph, and list tags to code the structure into the page.",
    "mini_rubric": {
      "rubric_key_concept": "Use HTML to create a web page that includes hierarchical headings, paragraphs, lists, and images.\r\n\r\nUnderstand the need for precision when using computer languages and use appropriate syntax.\r\n",
      "rubric_performance_level_1": "All content is contained in tags, uses paragraph tags, multiple sized headings, and at least one list in a logically consistent way. Comments are used to define sections of code.",
      "rubric_performance_level_2": "All content is contained in tags, uses paragraph, heading tags, and a list in a reasonable way.",
      "rubric_performance_level_3": "Most content is contained in tags.  At least one heading tag is used.",
      "rubric_performance_level_4": "Little or no content is contained in tags."
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/10": {
    "long_instructions": "# Headings, Paragraphs, and Lists Reflection\n\n🤔 Take a minute to reflect on the last level where you were tasked with deciding what tags would provide the best structure for the content and answer the following questions:\n\n1.  ✔️ How do you think you did according to the Rubric below and why?\n2.  🏁 How did you know how to complete this assessment?\n3.  👍🏼 What was easy about the task? / ❗ What was the most challenging? \n\n<hr>\n\n[][0]",
    "teacher_markdown": "Use this reflection as an opportunity to gain insight into how the students completed the assessment level and the choices they made with the HTML tags as well as identify any misconceptions that should be cleared up."
  },
  "https://studio.code.org/s/csd2-2024/lessons/3/levels/11": {
    "dsls": {
      "description": "Here are some extra HTML codes to try out, and a Free Play area to use them in.",
      "display_name": "HTML Headings"
    },
    "sublevels": {
      "CSD Web Headings line break_2024": {
        "display_name": "Extra Code: Line Break",
        "bubble_choice_description": "Learn how to make new lines without starting a new paragraph.  You can use this code to add poems or lists to your page.",
        "long_instructions": "# Extra Code: Line Break\r\n\r\nIn some situations, like a poem or a list, you'll want to start a new line inside the same paragraph, like you might do in poetry.  You can use the line break `<br>` tag for this.\r\n\r\n# Do This\r\n1) Read the HTML and look for where the line break `<br>` code is used to separate the lines in the poem.\r\n2) Add two more line breaks to separate out the other lines in the poem.\r\n\r\n**Tip:** The `<br>` tag is useful for writing addresses or poems.\r\n\r\n**Note:** Use the `<br>` tag to enter line breaks, not to separate paragraphs. Always separate each paragraph with its own set of `<p>` and `</p>` tags!"
      },
      "CSD Web Headings hr_2024": {
        "display_name": "Extra Code: Horizontal Rule",
        "bubble_choice_description": "Learn the code for making a horizontal rule and practice using it.",
        "long_instructions": "# Extra Code: Horizontal Rule\r\n\r\nIn some situations, you'll want to insert a horizontal line, or rule, to break up themes in your page. You can use the horizontal rule `<hr>` tag for this.\r\n\r\n# Do This\r\n1) Read the HTML and look for where the `<hr>` code is used to add a horizontal rule in the web page.\r\n2) Add more horizontal rules to break up the page by theme.\r\n\r\n"
      },
      "CSD Web Headings Special Character 3_2024": {
        "display_name": "Extra Code: Special Character \"&\"",
        "bubble_choice_description": "Learn the code for the special character \"&\" and practice using it.",
        "long_instructions": "# Extra Code: Special Character \"&\"\r\n\r\nThe ampersand character (**&**) can cause errors in your HTML code because it is actually used for other special characters like less than symbols (**<** is encoded as `&lt;`), and double quotation marks (**\"** is encoded as`&quot`). \r\n\r\nTo use the **&** character in a paragraph correctly, you need the special code `&amp;`.\r\n*Yes, you need an ampersand to encode an ampersand!*\r\n<br>In this activity, you'll make up a list some of your favorite things and practice using ampersands. \r\n\r\n# Do This\r\n1) Read the HTML and look for where the `&amp;` code is used correctly.\r\n* Replace the ampersand that is causing pink code with the special code for the symbol.\r\n* Fill in the blank categories or add your own using the new code. Try to come up with answers that use the symbol!\r\n"
      },
      "CSD Web Headings Free Play_2024": {
        "display_name": "Your Favorite Books",
        "bubble_choice_description": "Try using the new code you have learned to create your own HTML page about your favorite books. ",
        "long_instructions": "# Your Favorite Books\r\n\r\nNow that you have learned how to create HTML headings, lists, and code special characters, you can put your skills to the test! \r\n\r\n# Do This\r\n1) Create a web page about your favorite books!\r\n\t- For example, this web page could include information about your favorite genre of books and then a list of your top 3 favorites!\r\n    - You could even do favorite books and use the horizontal rule tag to separate the descriptions of each one!\r\n    \r\nYou may not be able to create the \"perfect\" web page just yet, but you can develop a **prototype** that shows your general idea!",
        "teacher_markdown": "This level does not contain an exemplar because of how open-ended the directions are. Instead, we encourage you to consider this as a focused free-play level: students are free to design a web page based on their own interests and creative expression, but focused in a particular area to give some initial guidance. This can be an opportunity to gain insights and offer feedback on the skills students demonstrate while building their web page, even if they do not finish the level completely. This type of level can also reinforce the Problem Solving Process as students ideate and develop a web page of their own choosing (Define - Prepare - Try - Reflect).\r\n\r\nAs students develop more skills throughout the unit, they may decide to use an idea from this level as the basis for one of their projects or to continue developing on their own time."
      },
      "CSD Web Headings Free Play2_2024": {
        "display_name": "Your Favorite Movies",
        "bubble_choice_description": "Try using the new code you have learned to create your own HTML page about your favorite movies. ",
        "long_instructions": "# Your Favorite Movies\r\n\r\nNow that you have learned how to create HTML headings, lists, and code special characters, you can put your skills to the test! \r\n\r\n# Do This\r\n1) Create a web page about your favorite movies!\r\n\t- For example, this web page could include information about your favorite genre of movies and then a list of your top 3 favorites!\r\n    - You could even do favorite movies and use the horizontal rule tag to separate the descriptions of each one!\r\n    \r\nYou may not be able to create the \"perfect\" web page just yet, but you can develop a **prototype** that shows your general idea!",
        "teacher_markdown": "This level does not contain an exemplar because of how open-ended the directions are. Instead, we encourage you to consider this as a focused free-play level: students are free to design a web page based on their own interests and creative expression, but focused in a particular area to give some initial guidance. This can be an opportunity to gain insights and offer feedback on the skills students demonstrate while building their web page, even if they do not finish the level completely. This type of level can also reinforce the Problem Solving Process as students ideate and develop a web page of their own choosing (Define - Prepare - Try - Reflect).\r\n\r\nAs students develop more skills throughout the unit, they may decide to use an idea from this level as the basis for one of their projects or to continue developing on their own time."
      },
      "CSD Web Headings Free Play3_2024": {
        "display_name": "Your Favorite Games",
        "bubble_choice_description": "Try using the new code you have learned to create your own HTML page about your favorite games. ",
        "long_instructions": "# Your Favorite Games\r\n\r\nNow that you have learned how to create HTML headings, lists, and code special characters, you can put your skills to the test! \r\n\r\n# Do This\r\n1) Create a web page about your favorite games!\r\n\t- For example, this web page could include information about your favorite type of games and then a list of your top 3 favorites!\r\n    - You could even do favorite games and use the horizontal rule tag to separate the descriptions of each one!\r\n    \r\nYou may not be able to create the \"perfect\" web page just yet, but you can develop a **prototype** that shows your general idea!",
        "teacher_markdown": "This level does not contain an exemplar because of how open-ended the directions are. Instead, we encourage you to consider this as a focused free-play level: students are free to design a web page based on their own interests and creative expression, but focused in a particular area to give some initial guidance. This can be an opportunity to gain insights and offer feedback on the skills students demonstrate while building their web page, even if they do not finish the level completely. This type of level can also reinforce the Problem Solving Process as students ideate and develop a web page of their own choosing (Define - Prepare - Try - Reflect).\r\n\r\nAs students develop more skills throughout the unit, they may decide to use an idea from this level as the basis for one of their projects or to continue developing on their own time."
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/5/levels/1": {
    "dsls": {
      "description": "Here are some HTML tags that you may have seen in the past couple of lessons.  You can use them to review the tags you might want for your web page.",
      "display_name": "HTML Review"
    },
    "sublevels": {
      "CSD Web Dev bubble choice p tag_2024": {
        "display_name": "Paragraphs",
        "bubble_choice_description": "Add paragraph tags to separate the paragraphs",
        "long_instructions": "\r\n\r\n# Use Paragraph Tags\r\n\r\nThe `<p>` `</p>` tags or \"paragraph\" start and end tags are placed around text to indicate that it is part of a paragraph. Placing text between paragraph start and end tags lets the computer know that it should be treated differently, often just spacing it out from other text.\r\n\r\n# Do This\r\n\r\n1) Use `<p>` tags to separate the content into different paragraphs."
      },
      "CSD Web Dev bubble choice p tag 2_2024": {
        "display_name": "Debug: Paragraph Tag",
        "bubble_choice_description": "Find the bugs caused by incorrect paragraph tags.",
        "long_instructions": "\r\n\r\n# Use Paragraph Tags\r\n\r\nThe `<p>` `</p>` tags or \"paragraph\" start and end tags are placed around text to indicate that it is part of a paragraph. Placing text between paragraph start and end tags lets the computer know that it should be treated differently, often just spacing it out from other text.\r\n\r\n# Do This\r\n\r\n1) Fix the code so that none of the tags turn pink."
      },
      "CSD Web Dev choice level p tag 3_2024": {
        "display_name": "Debug the missing paragraph",
        "bubble_choice_description": "Use your debugging skills to figure out why the paragraph has disappeared.",
        "long_instructions": "# Debug: Missing Paragraph and List\r\n\r\n\r\nIt looks like a paragraph is missing from the preview and the lists aren't quite right. Can you find and fix the bugs? \r\n \r\n# Do this\r\n\r\n1) Find and fix the problems that are causing the bugs."
      },
      "CSD Web Dev choice level headings 1_2024": {
        "display_name": "Debug: Headings",
        "bubble_choice_description": "Fix the bugs caused by incorrect heading tags.",
        "long_instructions": "# Debug: Headings\r\n\r\nThere are a few issues with this page's headings. Can you fix them?\r\n\r\n# Do This\r\n1) Fix all of the pink errors.\r\n- Adjust the heading tags to be the appropriate size, if necessary.\r\n"
      },
      "CSD Web Dev choice level headings 2_2024": {
        "display_name": "Add Larger Heading",
        "bubble_choice_description": "Add a large heading to the top of a web page.",
        "long_instructions": "# Add Larger Heading\r\n\r\n\r\nHere's a page about animals of the sea. Can you add a catchy, large heading and title it?\r\n \r\n# Do this\r\n1) Add a larger heading at the top of the page."
      },
      "CSD Web Dev choice level list 1_2024": {
        "display_name": "Debug Ordered List",
        "bubble_choice_description": "Use your debugging skills to figure out why the list is not showing up correctly.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n</div>\r\n\r\n# Debug Ordered List\r\n\r\nThere are some issues with this page's list. Can you fix them?\r\n\r\n# Do This\r\n\r\n1) Find and fix the problems that are causing the bugs.\r\n"
      },
      "CSD Web Dev bubble choice br tag_2024": {
        "display_name": "Line Break",
        "bubble_choice_description": "Separate the lines of the haiku using the <br> tag.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n</div>\r\n\r\n# Line Break\r\n\r\nIn some situations, like a poem or a list, you'll want to start a new line inside the same paragraph, like you might do in poetry. You can use the line break `<br>` tag for this.\r\n\r\n**Tip**: The `<br>` tag is useful for writing addresses or poems. It does not need a closing tag!\r\n\r\n**Note**: Use the `<br>` tag to enter line breaks, not to separate paragraphs. Always separate each paragraph with its own set of `<p>` and `</p>` tags!\r\n\r\n# Do This\r\n\r\n1) Separate each line using `<br>` tags."
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/5/levels/2": {
    "long_instructions": "# Add HTML\n\nNext, you should add the HTML to your page.\n\n# Do This\n\n1.  Add HTML to make the page you sketched for your chosen user in your project guide.\n2.  Remember, you need to have:\n    -   At least 3 different heading sizes\n    -   At least 3 paragraph tags\n    -   At least 3 lists\n3.  Don't forget to use of good white space and indentation as well as comments throughout your page to make your code more readable!"
  },
  "https://studio.code.org/s/csd2-2024/lessons/5/levels/3": {
    "long_instructions": "# Review your Page\n\nNext, check to make sure your page has everything your users wants.\n\n# Do This\n\n1.  Check to make sure all the **content** is there.\n2.  Check that the HTML tags **structure** the content correctly.\n3.  Make sure your code is organized, readable and free of bugs."
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/1": {
    "dsls": {
      "markdown": "# Sample Website\n\nClick the website below to discover some new types of styling for your pages.\n\n[![](https://images.code.org/4343b7c16ca18f6d2c003bf95d756f42-image-1585189253769.png)](https://codeprojects.org/g4ZEsGYTllMm_2Ien3QDtJ4wya6onDyRVzRjWiKNdLo/)\n"
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/2": {
    "display_name": "Exploration: Adding Style",
    "long_instructions": "# Adding Style\n\nThis Web Lab project is using a new language to add style to the page. With a partner explore both the `index.html` and `style.css` files. Be ready to discuss the following questions.\n\n1.  What changes is this new language making to the page?\n2.  How is this language different from HTML?\n3.  How are the `index.html` and `style.css` files connected?",
    "teacher_markdown": "Have students explore this level with a partner. Afterwards lead a short share out so that partners can share with the class their responses to the three questions in the instructions. The subsequent video should help reinforce what students discovered so there's no need to lead a lengthy debrief conversation."
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/3": {
    "long_instructions": "_This level follows a video that you may have watched with your class. If you missed the video, you can watch it in the Help and Tips tab of this level._\n\n# CSS and Text Color\n\nThis HTML file uses a style sheet (\"style.css\") to give the page a particular style.  The style sheet contains information about what each of the HTML elements should look like.\n\n# Do this\n\n1.  Find the code in the style sheet (click on \"style.css\" in the files list) that is making the h1 heading red.\n2.  Change the code for the color of the h1 heading from `red` to a different color.\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/52d3ecf74984a32f497e02bb06d2d046-image-1677099970107.gif\" style=\"width:500px\">\n<br>\n<br>\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::"
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/4": {
    "long_instructions": "# Making a new CSS rule-set\n\nThe block of code that gives rules for a particular tag is called a _rule-set_.  You can make a new rule set by copying the pattern you see in the rule-set for the `h1` tag.\n\n# Do this\n\n1.  Find the CSS rule-set in the style sheet that determines the styles for the `h1` tag.\n2.  Using the same pattern, write a new CSS rule-set that will determine the style for the `h3` tag.\n3.  Add code to set a different color for the `h3` tags.\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/46aa79de55c17d0d793e87d5e1369192-image-1677100227094.gif\" style=\"width:500px\">\n<br>\n<br>\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::\n\n[][0]",
    "mini_rubric": {
      "rubric_key_concept": "Apply formatting in a web page using CSS",
      "rubric_performance_level_1": "The `h3` headings are a new color (not black).  There is no extra code in the stylesheet, and there are no syntax errors in the code.",
      "rubric_performance_level_2": "The `h3` headings are a new color (not black).",
      "rubric_performance_level_3": "The `h3` headings have a special rule-set in the stylesheet, and the color property is used, but there are enough errors that the text does not change color.",
      "rubric_performance_level_4": "There is no special rule-set for `h3` headings or the color property is not used in the rule-set."
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/5": {
    "display_name": "Using RGB Colors",
    "bubble_choice_description": "Add RGB colors to a website.",
    "long_instructions": "# Using RGB\n\nExperiment with the RGB values in the CSS style sheet. \n\n# Do This\n\n1.  Find the CSS rule-set in the style sheet that gives the h1 tag its style. Change _only_ the first 0 to 255.\n2.  Find the CSS rule-set in the style sheet that gives the p tag its style. Change _only_ the second 0 to 255.\n3.  Find the CSS rule-set in the style sheet that gives the h3 tag its style. Change _only_ the third 0 to 255.\n\n::: details [🔎 **Show Me How** 🔍]\n\n    h1 {\n      color: rgb( 255 , 0, 0);\n    }\n    h3 {\n      color: rgb( 0 , 0 , 255);\n    }\n    p {\n      color: rgb( 0 , 255, 0);\n    }\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::\n\n<br>\n\n**Discuss the results with your neighbor:**\n\n1.  What did each of those changes do to the color of your HTML components? \n2.  What do you think that means for each of those values in the RGB code?"
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/6": {
    "display_name": "Using RGB Colors",
    "bubble_choice_description": "Add RGB colors to a website.",
    "long_instructions": "# Use An RGB Tool\n\nExperiment with a useful tool that gives you the RGB values for the colors you want.\n\n# Do This\n\n1.  Watch the gif below to see how to use an RGB color tool\n\n<img src=\"https://images.code.org/11868c7bc12174b1bca9e73ba0fccab0-image-1664408522035.gif\" style=\"width:300px;margin:20px\">\n\n2.  Once you see how to use the tool to get the RGB color values you want, go into the stylesheet and use the tool to give color to the HTML elements on this page."
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/7": {
    "long_instructions": "# Changing text size\n\nYou can control other things besides colors by using other properties.\n\n# Do This\n\n1.  Find the CSS rule-set in the style sheet that determines the style for the paragraph tag.\n2.  Change the text size of the paragraphs and the headings.\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/434c688b4a14001191f2b0b4ca1a3427-image-1677100717309.gif\" style=\"width:500px\">\n<br>\n<br>\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/8": {
    "long_instructions": "_This level follows a video that you may have watched with your class. If you missed the video, you can watch it in the Help and Tips tab of this level._\n\n# Adding a Style Sheet\n\nThis developer has been working on some style for the page, but has forgotten to add the stylesheet so none of them work!\n\n# Do This\n\n1.  Inside the HTML page, add the code that will link the style sheet to the web page: `<link rel=\"stylesheet\" href=\"style.css\">`\n\n<img src=\"https://images.code.org/8547566ed80fc36c7184d1bf16578e99-image-1636648304895.png\" style=\" max-width:500px\">\n\n2.  Verify that the website updates to include new colors and fonts from the `style.css` file\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/4867c03c6b418d96f5f37f59b5b8c529-image-1714491561628.gif\" style=\"width:600px\">\n<br>\n<br>\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::\n\n[][0]\n\n[][1]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/9": {
    "dsls": {
      "description": "Try out your new skills on these different challenges!",
      "display_name": "Styling Text with CSS"
    },
    "sublevels": {
      "CSD Web Headings Forgot Dash in Font Size_2024": {
        "display_name": "Debug the font size",
        "bubble_choice_description": "Use your debugging skills to figure out why the font size isn't changing.",
        "long_instructions": "# Debug: Wrong Font Size\r\n\r\nSomeone has submitted a bug report on this web page.  Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nParagraph font size to be 24px | Paragraph font is the default size\r\n \r\n# Do this\r\n1) Find and fix the problem that is causing the bug."
      },
      "CSD Web Headings Missing Paragraph Tag_2024": {
        "display_name": "Debug the missing paragraph style",
        "bubble_choice_description": "Use your debugging skills to figure out why the paragraph style is not being applied.",
        "long_instructions": "# Debug: Missing Paragraph Style\r\n\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nParagraph color is gray| Paragraph color is black\r\n \r\n# Do this\r\n1) Find and fix the problem that is causing the bug.\r\n"
      },
      "CSD Web Headings Wrong Tag in Rule Set_2024": {
        "display_name": "Debug the missing heading style",
        "bubble_choice_description": "Use your debugging skills to figure out why the heading style is not being applied.",
        "long_instructions": "# Debug: Missing Heading Style\r\n\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nHeading color is green | Heading color is black\r\n \r\n# Do this\r\n1) Find and fix the problem that is causing the bug\r\n\r\n"
      },
      "CSD Web Headings Debug RGB_2024": {
        "display_name": "Debug the RGB color style",
        "bubble_choice_description": "Use your debugging skills to figure out why the RGB style is not being applied.",
        "long_instructions": "# Debug: RGB Color Style\r\n\r\n|What I expected to happen          |   What happened instead |\r\n| :-------------------------        | ---------------------: |\r\n|Title background is a light purple |Title background is white|\r\n|Subheadings are a shade of purple  |Subheadings are black    |\r\n \r\n# Do this\r\n1) Find and fix the problem that is causing the bug.\r\n"
      },
      "CSD Web Headings Stylesheet Not Linked_2024": {
        "display_name": "Debug the missing styles",
        "bubble_choice_description": "Use your debugging skills to figure out why none of the styles are being applied.",
        "long_instructions": "# Debug: Missing Styles\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\nHeading 1 color is blue | Heading 1 color is black\r\nHeading 2 color is green | Heading 2 color is black\r\nParagraph font is 12px | Paragraph font is default size\r\n \r\n# Do this\r\n1) Find and fix the problem that is causing the bug"
      },
      "CSD Web Headings Add Heading Rule_2024": {
        "display_name": "Add a heading rule-set",
        "bubble_choice_description": "Add a rule-set for the heading of this article.",
        "long_instructions": "# Add Heading Rule\r\nHere is an opportunity to be creative and customize the heading.\r\n\r\n \r\n# Do this\r\n1) Add a rule-set for the heading."
      },
      "CSD Web Headings Add Paragraph Rule_2024": {
        "display_name": "Add a paragraph rule-set",
        "bubble_choice_description": "Add a rule-set for the paragraph of this ad.",
        "long_instructions": "# Add Paragraph Rule\r\nHere is an opportunity to be creative and customize the paragraph.\r\n\r\n \r\n# Do this\r\n1) Add a rule-set for the paragraph.\r\n"
      },
      "CSD Web Headings Add Style Sheet_2024": {
        "display_name": "Add a style sheet",
        "bubble_choice_description": "Add a style sheet and rule-sets to this article.",
        "long_instructions": "# Add Style Sheet\r\nHere is an opportunity to be creative and practice everything you have learned about style.\r\n\r\n \r\n# Do this\r\n1) Add a style sheet and rule-sets.\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/10": {
    "display_name": "Add a style sheet",
    "bubble_choice_description": "Add a style sheet and rule-sets to this article.",
    "long_instructions": "# Style this page!\n\nHere is an opportunity to be creative and have some fun with styles.\n\n# Do this\n\n1.  Link the stylesheet to the web page.\n2.  Make the paragraph text a different size.\n3.  Make the paragraph text a different color.\n    -   It is your choice whether to use a named color or use an RGB color.",
    "mini_rubric": {
      "rubric_key_concept": "Create a stylesheet and link to the sheet in the HTML. The stylesheet includes a rule that changes the paragraph element of a webpage.",
      "rubric_performance_level_1": "The paragraphs are a new color and size, and there are no errors or inconsistencies in the HTML or CSS code.",
      "rubric_performance_level_2": "The paragraphs are a new color or size.",
      "rubric_performance_level_3": "The paragraphs have a special rule-set in the stylesheet, and the color or size property is used, but there are enough errors that the text does not change color or size.  There is HTML code that attempts to link the stylesheet to the web page.",
      "rubric_performance_level_4": "There is no special rule-set for paragraphs or the color or size properties are not used in the rule-set.  There is no code to link the stylesheet to the web page."
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/11": {
    "long_instructions": "# Style the Page Reflection\n\n🤔 Take a minute to reflect on the last level where you were tasked with linking the stylsheet and styling the paragraph's color and size and answer the following questions:\n\n1.  ✔️ How do you think you did according to the Rubric below and why?\n2.  🏁 How did you know how to complete this assessment?\n3.  👍🏼 What was easy about the task? / ❗ What was the most challenging? \n    -   What did you do to overcome the challenging part?\n4.  ❓ What questions do you still have?\n\n<hr>\n\n[][0]",
    "teacher_markdown": "Use this reflection as an opportunity to gain insight into how the students completed the assessment level and the choices they made with the CSS rule sets and properties as well as identify any misconceptions that should be cleared up."
  },
  "https://studio.code.org/s/csd2-2024/lessons/6/levels/12": {
    "dsls": {
      "description": "There are lots of different ways to style text.  Use the challenges below to get new ideas for your web page.",
      "display_name": "Challenges and Extra Code"
    },
    "sublevels": {
      "CSD U2 text style font family_2024": {
        "display_name": "Extra Code: Font Family",
        "bubble_choice_description": "Learn to use different font styles.",
        "long_instructions": "\r\n# Changing the Font\r\n\r\n1) Find the CSS rule-set in the style sheet that determines the style for the paragraph tag.\r\n* Change the font family and choose which one you like the best.\r\n  * Choose from \"serif\", \"sans-serif\", \"cursive\", \"fantasy\", and \"monospace\"\r\n* Add a font family rule for the h1 or h3 tags.",
        "teacher_markdown": "## Note on fonts and font families\r\n\r\nFor a web browser to display a font, the font **must** be available on the device the web browser is running on.  There's no guarantee that any device has a particular font, so it's much safer to use font **families**, which allow for many different fonts that have the same general look at feel.\r\n\r\nIf students want to specify an exact font, they'll need to use a font from the web, so the browser can download that specific font to use when rendering the page.  More information on these fonts can be found at [Google Fonts](https://fonts.google.com/) and [W3Schools](https://www.w3schools.com/Css/css3_fonts.asp)."
      },
      "CSD U2 text style decoration_2024": {
        "display_name": "Extra Code: Underlining",
        "bubble_choice_description": "Put lines under, over, or through your text.",
        "long_instructions": "\r\n\r\n# Underlining\r\n\r\n1) Find the code in the style sheet that makes the h4 tag double underlined.\r\n* Change the text decoration to something else.\r\n  * Choose from \"underline\", \"overline\", and \"line-through\"\r\n* Add a text decoration property for the paragraph, h1, h2 or h3 tag.\r\n"
      },
      "CSD U2 text style text align_2024": {
        "display_name": "Extra Code: Align text",
        "bubble_choice_description": "Align text to the right or center of the page.",
        "long_instructions": "\r\n# Text Alignment\r\n\r\nThe `text-align` property sets the horizontal (side to side) position of the text within each line.\r\n\r\n# Do This\r\n1) Find the CSS code that is making the \"From Wikipedia\" in the `h6` tag align to the right.\r\n* Change the `h1` tag so that it is aligned to the center of the page.\r\n* Change the alignment of the paragraph tag, too."
      },
      "CSD U2 text style letter spacing_2024": {
        "display_name": "Extra Code: Letter Spacing",
        "bubble_choice_description": "Space letters further out and closer to each other.",
        "long_instructions": "# Letter Spacing\r\n\r\nThe `letter-spacing` property sets the space between each letter between text elements.\r\n\r\n1) Find the CSS code that is making the letters in \"Orchids!\" in the `h1` tag be spaced out more than normal.\r\n* Change the `h2` tag so that the letters are spaced out by two pixels.\r\n* Change the letter spacings of the paragraph and `h3` tags as well."
      },
      "CSD U2 text style text shadow_2024": {
        "display_name": "Extra Code: Text Shadow",
        "bubble_choice_description": "Learn how to give your text a shadow",
        "long_instructions": "\r\n# Text Shadow\r\n\r\nThe `text-shadow` property sets a shadow for the text elements.\r\n\r\n# Do This\r\n1) Find the CSS code that is giving the letters in \"Stradivarius Violins\" a shadow in the `h1` tag.\r\n* Give the `h2` tag a shadow spaced two pixels to the right and up from the original text.\r\n* Give a text shadow to other tags as well.\r\n"
      },
      "CSD U2 text style freeplay_2024": {
        "display_name": "Create Your Own Web Page!",
        "bubble_choice_description": "Use what you know so far to create a web page about something you love!",
        "long_instructions": "# Create a New Web Page\r\n\r\nUse what you have learned so far to create a web page about something you enjoy, such as a hobby, a school club, your favorite subject, sport, movie, or book! "
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/8/levels/1": {
    "long_instructions": "# Explore Image Tags\n\nAdding images to our web pages is a powerful skill that will make your pages more appealing to users!\n\nAn image tag consist of some new components, namely the **src** attribute and the **alt** attribute.\n\nThe **src** attribute stands for \"source\" and the value of this attribute will be the name of the image file you want on your web page.\n\nThe **alt** attribute stands for \"alternate text\" and the value should be a short descriptive word or two about the image. If an image does not load on a web page, it is this alternate text that will show up instead.\n\n# Do This\n\n1.  Turn on the Inspector Tool.\n2.  Hover over the image on the web page to find the tag used.\n3.  Discuss with your partner:\n    -   How do you think they knew what the name of the image should be for the **src** (source) attribute? Where did they find this information here in Web Lab?\n    -   What did they put as the alternate text? Do you think that is descriptive enough?\n    -   What else do you notice about the image tag?"
  },
  "https://studio.code.org/s/csd2-2024/lessons/8/levels/2": {
    "long_instructions": "# Images\n\nA Dog vs Cat web page has been started for you. The dog image has already been added to the below web page. \n\n# Do this\n\n1.  Look at the code that made the dog image appear\n2.  Use an image tag to add the `cat.jpeg` image to the page below the cat heading\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/b3ca42dd2b72b58ecf0441bfdcf6b4d6-image-1677101299432.gif\" style=\"width:500px\">\n<br>\n<br>\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::\n\n[][0]",
    "teacher_markdown": "Students may come across some image tags that include a slash at the end, like this: \n`<img src=\"imgURL.jpg\" alt=\"my image\" />`\n\nThese ending slashes are there to indicate that this tag is self-closing, but they are optional and have no effect on the web page."
  },
  "https://studio.code.org/s/csd2-2024/lessons/8/levels/3": {
    "long_instructions": "# Giving Credit\n\nWhen using someone else's image, you should give credit to the original creator (this is also called _attribution_). The easiest way to do this is to add text below the image that identifies the creator and website it came from. You may also add information about the publishing license.\n\n# Do this\n\n1.  Add information about where the image came from and its license.\n\n*(This image was found at pixabay and was uploaded by the user \"Alexas\\_Fotos\", who used a \"free for commercial use\" and \"no attribution required\" license.)*\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/7f86d112e8df1147e1bb278718851a95-image-1677101558159.png\" style=\"width:300px\">\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::",
    "teacher_markdown": "Because of the type of license used, students are not legally required to include attribution, but it is a good habit for them to get into when developing their websites."
  },
  "https://studio.code.org/s/csd2-2024/lessons/8/levels/4": {
    "long_instructions": "# The Details Matter\n\nThe `src` attribute needs to point to the _exact_ filename of the image you want to use. That means you need to pay attention to spelling, capitalization, and the file extension. Each of the three images on this page is broken because of an improper `src` attribute. \n\n# Do This\n\n1.  Using the file menu for reference, fix each of the image tags.\n2.  When you are finished, each image should display correctly in the webpage preview.\n\n_Note: Even though the images are not loading properly, our website is still showing descriptive text of what should be there because we used `alt` attributes. Cool!_"
  },
  "https://studio.code.org/s/csd2-2024/lessons/8/levels/5": {
    "long_instructions": "# Choosing a Good Name\n\nIt's important for images to have good names, ones that are easy to understand and use characters that are good for links.  This project's image names have some problems.\n\n# Do This\n\n1.  For each image, fix the name according to the following rules:\n    -   Avoid special characters such as `&`, `?`, `%`, `/`, `(`, etc.\n    -   Make sure the name has a specific meaning that helps you know what the image is.\n    -   Use dashes (`-`) or underscores (`_`) instead of spaces.\n    -   Keep the names as short as possible and still have a clear meaning.\n2.  Choose your favorite image and add it to the web page.\n    -   Don't forget the attribution!\n\n| Image | Amphibian                       | Attribution                                                                              |\n| ----- | ------------------------------- | ---------------------------------------------------------------------------------------- |\n| [][0] |    **kani bushfrog**            | Rison Thumboor - Wikimedia Commons - CC-BY-SA                                            |\n| [][1] |    **paedophryne amauensis**    | Rittmeyer EN, Allison A, Gründler MC, Thompson DK, Austin CC - Wikimedia Commons - CC-BY |\n| [][2] |    **red eyed tree frog**       | Carey James Balboa - Wikimedia Commons - Public Domain                                   |\n| [][3] |    **fire salamander**          | Cristo Vlahos - Wikimedia Commons - CC-BY                                                |\n| [][4] |    **axolotl**                  | th1098 - Wikimedia Commons - CC-BY-SA                                                    |\n\n<br>\n<br>\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/87cf1fd073c7fc85d6f49815eeda30d4-image-1677102354124.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::\n\n[][5]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/8/levels/6": {
    "long_instructions": "# Uploading Images\n\nYou can upload images that you've found elsewhere using the **Add Image** button. Go find an image of a different type of pet that you like and download it to your computer (using right-click \"Save As\").\n\nOnce you have your images, click [][0] and upload the image from your computer into your project, where you can then use it in your page.\n\n# Do This\n\n1.  Find an image you are allowed to use and upload it to this project.\n2.  Make sure the file name follows your naming rules.\n3.  Use the `<img>` tag to display the image(s) in your website.\n    -   Make sure to add an `alt` attribute!\n4.  Add the attribution information below the image.\n\n::: details [🔎 **Show Me How to Upload** 🔍]\n\n<img src=\"https://images.code.org/f1a3996ea260e0874669f232988d64ec-image-1677103155741.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::\n\n[][1]",
    "teacher_markdown": "# Recommended Search Engines\n\nBecause we can't know which sites might be blocked in your district, we've avoided pointing students to a specific search engine. Not all search engines make it easy to set Creative Commons filters - some of the easiest include:\n\n-   [Creative Commons Search][0]\n-   [Google Image Advanced Search][1]\n-   [Wikimedia Commons][2]\n-   [Flickr Creative Commons][3]\n\nAs with any site with crowdsourced content, search engine results will change from day to day, and some of those results may be inappropriate for the classroom.  You may want to check these sites shortly before displaying them to the class, and decide what is best for your classroom."
  },
  "https://studio.code.org/s/csd2-2024/lessons/8/levels/7": {
    "dsls": {
      "description": "Practice your new skills here.",
      "display_name": "Adding Images"
    },
    "sublevels": {
      "CSD U2 image debug match_2024": {
        "dsls": {
          "answers": [
            {
              "text": "https://images.code.org/9e5367ff3c78372af28a4518cfb3aaa8-image-1648053867494.png"
            },
            {
              "text": "https://images.code.org/993c973fa31b14cb6827eb7cb6d53c40-image-1648053902975.png"
            },
            {
              "text": "https://images.code.org/41b12f31a9084638e4625fecaff916d5-image-1648054026831.png"
            },
            {
              "text": "https://images.code.org/030d30152c42faf0891259af025b9884-image-1648054068540.png"
            },
            {
              "text": "https://images.code.org/eb2e2f9a15688cc4b2d80f4c401223b1-image-1648054098000.png"
            }
          ],
          "markdown": "# Matching\n\n**Each of the items below have a bug. Match the description to the correct bug.**\n\n## A: ![](https://images.code.org/e3b9be5444661a34eefe9bfa89e94cbc-image-1553717006899.02.47%20PM.png)\n\n## B: ![](https://images.code.org/0ffde880f790f497b2aaef29f40272f4-image-1553717010350.02.40%20PM.png)\n\n## C: ![](https://images.code.org/555e64ae1a9a586d902f1ed254e4e00c-image-1553717003484.03.01%20PM.png)\n\n## D: ![](https://images.code.org/a86b628a71ae0415fe48dfd8a19ee69a-image-1553717016038.02.24%20PM.png)\n\n## E: ![](https://images.code.org/6015fb13fa76d32072de2762d7d363ba-image-1553717013288.02.34%20PM.png)\n",
          "questions": [
            {
              "text": "The `src` attribute is spelled incorrectly."
            },
            {
              "text": "The `src` and `alt` attributes are switched"
            },
            {
              "text": "The file extension (.jpg) is missing from the image address"
            },
            {
              "text": "The image tag is incorrect and missing a `src` attribute"
            },
            {
              "text": "There is a space in the file name"
            }
          ],
          "teacher_markdown": "Although this level can be used to assess student understanding of the syntax of the `<img>` tag, its main purpose is to make students aware of the most common types of bugs they may encounter when adding images to web pages.\n"
        }
      },
      "CSD U2 Image Tag No End Quote_2024": {
        "display_name": "Debug the missing image",
        "bubble_choice_description": "Use your debugging skills to figure out why the image is not appearing.",
        "long_instructions": "\r\n# Debug: Missing Image\r\n\r\nSomeone has submitted a bug report on this web page. Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------\r\nThere is an image of balloons | There is no image\r\n# Do This\r\n1) Find and fix the problem that is causing the bug."
      },
      "CSD U2 Image Tag Mispelled src_2024": {
        "display_name": "Debug the missing image 2",
        "bubble_choice_description": "Use your debugging skills to figure out why the alt text, but not the image, is appearing.",
        "long_instructions": "\r\n# Debug: Missing Image\r\n\r\nSomeone has submitted a bug report on this web page. Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------\r\nThere is an image of Half Dome | There is alt text but no image\r\n# Do This\r\n1) Find and fix the problem that is causing the bug."
      },
      "CSD U2 Image Tag Inconsistent Spelling_2024": {
        "display_name": "Debug the missing image 3",
        "bubble_choice_description": "Use your debugging skills to figure out why the image is not appearing.",
        "long_instructions": "# Debug: Missing Image\r\n\r\nSomeone has submitted a bug report on this web page. Can you fix the bug?\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------\r\nThere is a second Pikachu image | There is alt text but no image\r\n# Do This\r\n1) Find and fix the problem that is causing the bug.\r\n"
      },
      "CSD U2 Image Tag Add Alt_2024": {
        "display_name": "Add alt to existing images",
        "bubble_choice_description": "Add alt attributes to describe existing images.",
        "long_instructions": "# Add alt to Existing Images\r\n\r\nThe `alt` attribute is short for alternative text. As you may have seen on web pages that do not load properly, alt text appears to describe the image that is not rendering.\r\n\r\n# Do This\r\n1) Read the HTML and look at where images are used.\r\n* Add a descriptive `alt` attribute to each image.\r\n\r\n::: details [🔎 **Show Me How** 🔍]\r\n\r\n<img src=\"https://images.code.org/de41602de97a82f6e4ed94fdbad776bd-image-1677103499039.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n\r\n:::\r\n\r\n![]()"
      },
      "CSD U2 Image Tag Add Image Link_2024": {
        "display_name": "Add image link",
        "bubble_choice_description": "Add an image link to make the image appear in the web page.",
        "long_instructions": "# Add Image Link\r\n\r\nAn image has already been uploaded for you. The next step is to link it to the web page.\r\n\r\n# Do This\r\n1) Add an image link for the image \"gymnast.gif\".\r\n\r\n::: details [🔎 **Show Me How** 🔍]\r\n\r\n<img src=\"https://images.code.org/de0868aea055a3c42a4a4371892c2b93-image-1677104053660.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n\r\n:::\r\n\r\n![]()"
      },
      "CSD U2 Image Tag Add Image_2024": {
        "display_name": "Add new image",
        "bubble_choice_description": "Add an image to this recipe.",
        "long_instructions": "# Add Image\r\n\r\nHere you can practice adding a new image to a web page.\r\n\r\n# Do This\r\n1) Add an image to the end of this cake recipe.\r\n* Don't forget to use the `add image` button and include an image tag in your code.\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/8/levels/8": {
    "long_instructions": "# All about you!\n\nYou can use images to make a web page more personal.\n\n# Do This\n\n1.  Add an image to the page.\n2.  Make sure to follow the rules about copyright, naming, and using good coding styles.",
    "mini_rubric": {
      "rubric_key_concept": "Structure content on a web page using HTML (Add an image to a web page).  Accurately attribute others when using their work.",
      "rubric_performance_level_1": "The image displays properly and an `alt` attribute gives a reasonable text description of the image.  No unnecessary code is included in the`img` tag.  There is accurate attribution and the image is named appropriately.",
      "rubric_performance_level_2": "The image displays properly and is being used according to its copyright license description.",
      "rubric_performance_level_3": "The `img` tag is used and a source address for the image is provided, but there may be minor syntax errors or misspellings that prevent the image from being displayed properly.  The image may not be available for legal use on the web page.",
      "rubric_performance_level_4": "The `img` tag is not used or no source address is given for the image."
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/8/levels/9": {
    "long_instructions": "# All About You Reflection\n\n🤔 Take a minute to reflect on the last level where you were tasked with adding images to a web page and answer the following questions:\n\n1.  ✔️ How do you think you did according to the Rubric below and why?\n2.  🏁 How did you know how to complete this assessment?\n3.  👍🏼 What was easy about the task? / ❗ What was the most challenging? \n    -   What did you do to overcome the challenging part?\n4.  ❓ What questions do you still have?\n\n<hr>\n\n[][0]",
    "teacher_markdown": "Use this reflection as an opportunity to gain insight into how the students completed the assessment level and the choices they made with adding images as well as identify any misconceptions that should be cleared up."
  },
  "https://studio.code.org/s/csd2-2024/lessons/8/levels/10": {
    "dsls": {
      "description": "Find an extra challenge or a new type of code here.",
      "display_name": "Adding Images"
    },
    "sublevels": {
      "CSD U2 Image Tag Height Width Attributes_2024": {
        "display_name": "Sizing Images in CSS",
        "bubble_choice_description": "Learn how to customize the height and width of images.",
        "long_instructions": "\r\n# Height and Width Attributes\r\n\r\nImages are not always the right size for a webpage. Luckily, there are width and height properties in CSS to set how many pixels tall or wide we want an image to be. _Make sure you **don't set both** \"width\" and \"height\" or you may distort the image._\r\n\r\n# Do This\r\n1) Find the rule set for the image tags in the CSS file.\r\n2) Add the width property with a value of your choice to make the other images smaller.\r\n   - Example: `width: 300px;`\r\n"
      },
      "CSD U2 Image Tag Illustrated Story_2024": {
        "display_name": "Challenge: Make an Illustrated Story",
        "bubble_choice_description": "Use your new skills to create an illustrated story. ",
        "long_instructions": "\r\n\r\n# Make an Illustrated Story\r\n\r\nPut your new image tag skills to the test and create an illustrated story. As an extra challenge, include code from past lessons, such as special characters and style sheets.\r\n\r\n# Do This\r\n1) Create an illustrated story of your choice using text and images.\r\n"
      },
      "CSD U2 Image Tag How-To_2024": {
        "display_name": "Challenge: Make a How-To Guide",
        "bubble_choice_description": "Create a how-to guide to help others learn a new skill. ",
        "long_instructions": "\r\n# Make a How-To Guide\r\n\r\nUse your new image skills to share another skill that you have. As an extra challenge, include code from past lessons, such as special characters and style sheets.\r\n\r\n# Do This\r\n1) Create an illustrated how-to guide to help someone learn a new skill."
      },
      "CSD U2 Image Tag Recipe_2024": {
        "display_name": "Challenge: Make a Recipe",
        "bubble_choice_description": "Create a recipe for your favorite food.",
        "long_instructions": "\r\n# Make a Recipe\r\n\r\nUse your new image skills to share the recipe for a recipe that your family cooks for a holiday or other special occasion. Include images of the necessary ingredients.\r\n\r\n# Do This\r\n1) Think of a recipe and google search the ingredients\r\n1) Upload pictures of the ingredients to Web Lab\r\n1) Add the images to the webpage\r\n1) Add the ordered list of steps to the webpage\r\n"
      },
      "CSD U2 images freeplay_2024": {
        "display_name": "Add to your Web Page!",
        "bubble_choice_description": "Add images to the web page you made in a previous challenge level",
        "long_instructions": "# Add to your Webpage\r\n\r\nUse your new knowledge to add to the web page about something you enjoy in Lesson 6. The webpage you created in Level 12, challenge f has been transferred below - add some images to it!"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/9/levels/1": {
    "dsls": {
      "markdown": "# Sample Websites\n\nClick the website below to discover some new types of styling for your pages.\n\n|Sample 1| Sample 2|Sample 3|\n|-|-|-|\n|[![](https://images.code.org/7c31d954229b205eff20e4a131271845-image-1585070245513.png)](https://studio.code.org/projects/weblab/-lbgSOg0xktagjHqalYTlPvYzGmfV3OyQxwifLBmmWE/view)|[![](https://images.code.org/00410044eee7dedc993ec9d6c8887444-image-1589309900750.56.13 PM.png)](https://studio.code.org/projects/weblab/3ZP18hc29B_ZMG2Yh17zXJfOZ_97JAa882aj9oJScME/view)|[![](https://images.code.org/c67c9e9b8e44094a403e3974db09e2e3-image-1589314612876.15.47 PM.png)](https://studio.code.org/projects/weblab/Hdfq1QJEwNjrbpI8x7qwPO6ZHgLyywZOxGRKqIZGp8Y/view)|\n\n\n"
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/9/levels/2": {
    "long_instructions": "# Layout and Style\n\n# Do This\n\n1.  Look through web page below for new styles.\n2.  Open the style sheet\n3.  With your partner, discuss which parts of the CSS code you think are making the page appear different.\n    -   What makes the entire page blue?\n    -   How are the images positioned to the left of all the other elements?\n\nIn the next few levels, you'll be changing and adding new styles on this page."
  },
  "https://studio.code.org/s/csd2-2024/lessons/9/levels/3": {
    "long_instructions": "# Background Color\n\n# Do This\n\n1.  Find the code in the style sheet that is making the background of the entire page light blue.\n2.  Change the code to make the page a different color.\n3.  Try to change the background color of just the paragraphs.\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/21bb8db7bbf2e1898873794497e5528f-image-1677104615356.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n\n:::\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/9/levels/4": {
    "long_instructions": "# The Body Element\n\n# Do This\n\n1.  Find the `body` rule-set in the style sheet.\n2.  Discuss with a partner what you think will happen if you add `text-align`, `color`, or other text properties to the `body` rule set.\n3.  Try out some different properties to check your guesses."
  },
  "https://studio.code.org/s/csd2-2024/lessons/9/levels/5": {
    "long_instructions": "# Float\n\n# Do This\n\n1.  Look at the `float` property inside your `img` rule-set\n2.  Discuss with your partner what you think the property does.\n3.  Change the value from `left` to `right`."
  },
  "https://studio.code.org/s/csd2-2024/lessons/9/levels/6": {
    "long_instructions": "# Width and Height\n\n# Do This\n\n1.  Find the property in the style sheet that controls the width of the images.\n2.  Change the width of the images to be larger or smaller.\n3.  Create a new rule with a `height` property to control the height of the images.\n4.  Use the `width` property in the `p` rule-set to change the width of your paragraphs."
  },
  "https://studio.code.org/s/csd2-2024/lessons/9/levels/7": {
    "dsls": {
      "description": "Practice your new skills here.",
      "display_name": "Styling Elements"
    },
    "sublevels": {
      "CSD U2 layout style debug spelling_2024": {
        "display_name": "Debug some images",
        "bubble_choice_description": "Figure out why the images are not the correct height and debug this page.",
        "long_instructions": "# Debug the Images\r\n\r\nThese images are all supposed to be 100 pixels high, but the height property is not working.  \r\n\r\n# Do This\r\n\r\n1) Find the bug and make the images all the same height."
      },
      "CSD U2 layout style debug link_2024": {
        "display_name": "Debug the style",
        "bubble_choice_description": "Figure out why the images are not the correct height and debug this page.",
        "long_instructions": "# Debug the Style\r\n\r\nNone of the styles are working for this page.  \r\n\r\n# Do This\r\n1) Debug the code, then change the styles to something you like.\r\n"
      },
      "CSD U2 layout style debug heading_2024": {
        "display_name": "Debug the Heading",
        "bubble_choice_description": "Figure out what's wrong with the code even though the preview looks like it is correct.",
        "long_instructions": "# Debug the Headings\r\n\r\nThe preview for this page looks fine and all of the HTML and CSS elements are being displayed correctly. But if you look in the code, something isn't quite right that could cause problems later on. \r\n\r\n# Do This\r\n1) Can you spot what code is in the wrong area and fix it?\r\n\r\n*Note: Fixing the code won't cause any changes in the preview, but your code will be better organized*\r\n"
      },
      "CSD U2 layout style new body rules_2024": {
        "display_name": "Add New Rules",
        "bubble_choice_description": "Right now there are very few rules for the body of this page. Add some more to make it look cool!",
        "long_instructions": "# Add New Rules\r\n\r\nThe rules for the body right now are not very exciting. \r\n\r\n# Do This\r\n1) Add some more to make it look cool! \r\n2) You can also add or change other rules.\r\n"
      },
      "CSD U2 layout style image width_2024": {
        "display_name": "Fix Image Width",
        "bubble_choice_description": "Fix the issue with images being different sizes from each other.",
        "long_instructions": "# Change the Width\r\nThe images here are all different sizes with some of them way too big. \r\n\r\n# Do This\r\n1) Create a rule that makes the width of all the images the same and sizes them down!\r\n"
      },
      "CSD U2 layout style image float_2024": {
        "display_name": "Fix Image Position",
        "bubble_choice_description": "Make it so the images are next to the text",
        "long_instructions": "# Change the Position\r\n\r\n# Do This\r\n1) Move the images using the `float` property so that they are to the side of the text rather than below it.\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/9/levels/8": {
    "long_instructions": "# Try it out!\n\nNow that you've seen some different ways to style, it's time to try it out yourself.  Here's a web page you've seen before, but it needs some style!\n\n# Do This\n\n1.  Give the webpage a background color.\n2.  Make all the images go to the right of the page.\n3.  Make all of the text a different color.\n4.  Add any other styles you want.",
    "mini_rubric": {
      "rubric_key_concept": "Create rules that affect entire groups of elements; apply formatting in a web page using CSS.",
      "rubric_performance_level_1": "The background, images, and text have all been styled as described in the instructions.  There are no syntax errors or extra code (that does not function) in the stylesheet.",
      "rubric_performance_level_2": "The background, images, and text have all been styled as described in the instructions, but there may be minimal errors or non-functioning code in the stylesheet.",
      "rubric_performance_level_3": "Rule-sets have been created in the style-sheet to style the background, images, and text, but there are major errors that prevent the code from working properly.",
      "rubric_performance_level_4": "There are no rule-sets in the stylesheet, or the rule-sets do not have the necessary selectors to style the background or images in the pages."
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/9/levels/9": {
    "long_instructions": "# Try It Out Reflection\n\n🤔 Take a minute to reflect on the last level where you were tasked with adding style to HTML elements using CSS and answer the following questions:\n\n1.  ✔️ How do you think you did according to the Rubric below and why?\n2.  🏁 How did you know how to complete this assessment?\n3.  👍🏼 What was easy about the task? / ❗ What was the most challenging? \n    -   What did you do to overcome the challenging part?\n4.  ❓ What questions do you still have?\n\n<hr>\n\n[][0]",
    "teacher_markdown": "Use this reflection as an opportunity to gain insight into how the students completed the assessment level and the choices they made with styling HTML elements with CSS as well as identify any misconceptions that should be cleared up."
  },
  "https://studio.code.org/s/csd2-2024/lessons/9/levels/10": {
    "dsls": {
      "description": "Try extra challenges or learn some new code.",
      "display_name": "Styling Elements"
    },
    "sublevels": {
      "CSD U2 layout style border_2024": {
        "display_name": "Extra Code: Create Borders",
        "bubble_choice_description": "Create borders around the elements on your page.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**What colors can I use in CSS?**]\r\nCSS includes most common color names (red, blue, green, etc.), and many uncommon ones.  You can see a full list of CSS color names at <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  You can still use colors that are not included in the named list, but you will need to use their RGB values.  You can read more about using colors in CSS at <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\r\n:::\r\n\r\n::: details [**How does the code work?**]\r\nHere is the code that is making the image borders:\r\n\r\n```\r\nimg {\r\n  border-color: saddlebrown;\r\n  border-width: 4px;\r\n  border-style: solid;\r\n  border-radius: 10px;\r\n}\r\n```\r\n\r\n* `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\r\n* `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` are the rules that make the border.\r\n:::\r\n\r\n::: details [**What does the `border-style` property do?**]\r\nThe `border-style` property determines what kind of border (solid, dotted, etc.) the element has.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\r\n:::\r\n\r\n::: details [**What does the `border-radius` property do?**]\r\nThe `border-radius` property determines the radius of the curves at the corners of the element.  A bigger radius makes a bigger, softer curve, and a smaller radius makes a smaller, sharper curve.  A radius of zero makes a regular corner.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\r\n:::\r\n\r\n::: details [**What does the `float` property do?**]\r\n\r\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Borders\r\n\r\n* Find the rules in the style sheet that set image borders color and width.\r\n* Change the color and width of your borders.\r\n* Try out some different border styles.\r\n  * Choose from `dotted`, `dashed`, `solid`, and `double`\r\n* Put a border on another type of page element, such as one of the headings or the paragraphs.\r\n"
      },
      "CSD U2 layout style borderradius_2024": {
        "display_name": "Extra Code: Rounded Corners",
        "bubble_choice_description": "Make the corners of your images rounded.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How does the code work?**]\r\nHere is the code that is making the image borders:\r\n\r\n```\r\nimg {\r\n  border-color: saddlebrown;\r\n  border-width: 4px;\r\n  border-style: solid;\r\n  border-radius: 10px;\r\n}\r\n```\r\n\r\n* `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\r\n* `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` are the rules that make the border.\r\n:::\r\n\r\n::: details [**What does the `border-style` property do?**]\r\nThe `border-style` property determines what kind of border (solid, dotted, etc.) the element has.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\r\n:::\r\n\r\n::: details [**What does the `border-radius` property do?**]\r\nThe `border-radius` property determines the radius of the curves at the corners of the element.  A bigger radius makes a bigger, softer curve, and a smaller radius makes a smaller, sharper curve.  A radius of zero makes a regular corner.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\r\n:::\r\n\r\n::: details [**What does the `float` property do?**]\r\n\r\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Border Radius\r\n\r\n* Look at the `border-radius` property inside your `img` rule-set\r\n* Discuss with your partner what you think the property does.\r\n* Try different values for border radius and decide which one you like the best."
      },
      "CSD U2 layout style margin_2024": {
        "display_name": "Extra Code: Margins",
        "bubble_choice_description": "Control the amount of space around each element in your page.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\r\n\r\n::: details [**How does the code work?**]\r\nHere is the code that is putting extra space around the images:\r\n\r\n    img {\r\n        margin: 10px;\r\n    }\r\n\r\n* `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\r\n\r\n* `margin: 10px;` is the rule that puts 10 pixels of space around the image.\r\n:::\r\n\r\n::: details [**What does the `margin` property do?**]\r\n\r\nThe `margin` property determines how much space will be around the image.  Most of the time, you will define in the margin in pixels.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_margin.asp\" target=\"_new\">W3Schools - CSS margin Property</a>\r\n:::\r\n\r\n::: details [**What does `px` mean / What is a pixel?**]\r\n\r\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Margin\r\n\r\nMargins specify how much space should be around an element.\r\n\r\n* Find the `margin` property in the `img` rule-set.\r\n* Change the margin to be larger, and discuss the effect with a partner.\r\n* Choose another element type and give it a margin, too."
      },
      "CSD U2 layout style background-url_2024": {
        "display_name": "Extra Code: Background Image (url)",
        "bubble_choice_description": "Learn how to add background images using a url.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n<details>\r\n\r\n<summary>\r\n</summary>\r\n\r\n\r\n\r\n</details>\r\n</div>\r\n\r\n# Background Image\r\n\r\nThe background of an element can be set to any  image that you would like! Just like when inserting a photo, you can use the image's url name.\r\n* Find the property in the style sheet that controls the background image.\r\n* Change the image to one of your choice.\r\n"
      },
      "CSD U2 layout style animal challenge_2024": {
        "display_name": "Challenge: Animal Webpage",
        "bubble_choice_description": "Complete this challenge that asks you to style a web page about animals.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n</div>\r\n\r\n# Challenge: Style Animal Web Page\r\n\r\nA basic web page about endangered animal species has been provided for you. Complete these challenges to add style to it:\r\n* Create a background color or image for the page.\r\n* Make the images have a consistent height or width.\r\n* Give each heading unique styles: font family, color, size, decoration, etc.\r\n* Float all the images to the left.\r\n* Put a margin and green border around the images.\r\n* Add any other style or content to customize the page!"
      },
      "CSD U2 layout style dessert challenge_2024": {
        "display_name": "Challenge: Dessert Webpage",
        "bubble_choice_description": "Complete this challenge that asks you to style a web page about desserts.",
        "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n</div>\r\n\r\n# Challenge: Style Dessert Web Page\r\n\r\nA basic web page about desserts has been provided for you. Complete these challenges to add style to it:\r\n* Create a background color or image for the page.\r\n* Fix heading sizes so it looks better.\r\n* Give each heading unique styles: font family, color, size, decoration, etc.\r\n* Round the edges of the images.\r\n* Add another dessert with a description and image (give proper citation!).\r\n* Add any other style or content to customize the page!\r\n"
      },
      "CSD U2 css elements freeplay_2024": {
        "display_name": "Add to your Web Page!",
        "bubble_choice_description": "Add images to the web page you started in a previous challenge level!",
        "long_instructions": "# Add to your CSS Webpage\r\n\r\nUse your new knowledge and skills to add to the page you started in Lesson 6. The webpage you created about something you enjoy in Level 11, challenge f has been transferred below - add some style to your images!"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/10/levels/1": {
    "dsls": {
      "description": "Here are some CSS properties that you may have seen in the past couple of lessons.  You can use them to review the styles you might want for your web page.",
      "display_name": "CSS Review"
    },
    "sublevels": {
      "CSD Web Dev choice level add rule_2024": {
        "display_name": "Add a heading rule-set",
        "bubble_choice_description": "Add a rule-set for the heading of this article.",
        "long_instructions": "# Add Heading Rule\r\nHere is an opportunity to be creative and customize the heading.\r\n\r\n \r\n# Do this\r\n1) Add a rule-set for the heading."
      },
      "CSD Web Dev choice level color_2024": {
        "display_name": "Change text color",
        "bubble_choice_description": "Use CSS to change the color of the headings and paragraphs",
        "long_instructions": "# Change Text Color\r\n\r\nChange the color of both the heading and the text.\r\n \r\n# Do this\r\n1) Add a rule-set for the heading to make it a different color.\r\n  * Practice using a named color for the heading.\r\n* Add a rule-set for the paragraphs to make them another color.\r\n  * Practice using an RGB color for the paragraphs.\r\n"
      },
      "CSD Web Dev choice level text-align_2024": {
        "display_name": "Align text",
        "bubble_choice_description": "Align the authors names to the right",
        "long_instructions": "\r\n# Align Text\r\n\r\nWe want the names of the authors to align to the right side of the page.\r\n \r\n# Do this\r\n1) Figure out which tag holds the authors' names.\r\n* Add a rule-set for that tag to move it to the right side of the screen.\r\n\r\n<img src = \"https://images.code.org/bca0fa67b636689b10f8f8af0d6f80e5-image-1591386436072.46.30 PM.png\"  width=\"40%\" align=\"right\">"
      },
      "CSD Web Dev choice level font-size_2024": {
        "display_name": "Change font family",
        "bubble_choice_description": "Use CSS to change the font family of the headings and paragraphs",
        "long_instructions": "# Change Font Family\r\n\r\nChange the font family of both the heading and the text. There are several font families including `cursive`, `fantasy`, `serif`, and `monospace`.\r\n\r\n# Do this\r\n1) Add a rule-set for one of the heading types to make it a different font family.\r\n* Add a rule-set for the paragraphs to make them another font family."
      },
      "CSD Web Dev choice level font-family_2024": {
        "display_name": "Change font size",
        "bubble_choice_description": "Change the size of the fonts for the paragraphs and headings using CSS",
        "long_instructions": "\r\n# Change Font Size\r\n\r\nChange the font size of both the heading and the text. You can specify the font size in terms of `px` (e.g. `16px`).\r\n\r\n# Do this\r\n1) Add a rule-set for the heading to make it a different font size.\r\n* Add a rule-set for the paragraphs to make them another font size."
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/10/levels/2": {
    "dsls": {
      "description": "Choose a user to start styling their page by adding a stylesheet to the HTML code!",
      "display_name": "Mini-Project Choices"
    },
    "sublevels": {
      "CSD web CSS project HTML_2024": {
        "display_name": "Lesson 5 User",
        "bubble_choice_description": "Choose this level if you created an HTML web page for a user during the previous mini-project.",
        "long_instructions": "# Add CSS File\r\n\r\nThe HTML code you wrote for your user in the previous mini-project has been carried over to this level so that you can style the web page according to your user's requests in your project guide. \r\n\r\nIn order to start styling the web page for our user, we need to add the CSS file.\r\n\r\n# Do This\r\n1) Add the CSS file to the project.\r\n2) Rename your CSS file to \"style.css\"\r\n3) Add the link for your CSS file in the `head` tag.\r\n"
      },
      "CSD L10_Savannah_2024": {
        "display_name": "NEW User: Savannah",
        "bubble_choice_description": "Choose this level to style Savannah's Animal Shelter web page!",
        "long_instructions": "# Add CSS File\r\n\r\nThe HTML code for Savannah's animal shelter page has already been provided for you. Your job will be to style it for her according to her requests in your project guide.\r\n\r\nIn order to start styling the web page for your user, you need to add the CSS file.\r\n\r\n# Do This\r\n1) Add the CSS file to the project.\r\n2) Rename your CSS file to \"style.css\"\r\n3) Add the link for your CSS file in the `head` tag.\r\n"
      },
      "CSD L10_Sofia_2024": {
        "display_name": "NEW User: Sofia",
        "bubble_choice_description": "Choose this level to style Sofia's computer repair and technology services web page!",
        "long_instructions": "# Add CSS File\r\n\r\nThe HTML code for Sofia's computer repair and technology services page has already been provided for you. Your job will be to style it for her according to her requests in your project guide.\r\n\r\nIn order to start styling the web page for your user, you need to add the CSS file.\r\n\r\n# Do This\r\n1) Add the CSS file to the project.\r\n2) Rename your CSS file to \"style.css\"\r\n3) Add the link for your CSS file in the `head` tag.\r\n"
      },
      "CSD L10_Pedro_2024": {
        "display_name": "NEW User: Pedro",
        "bubble_choice_description": "Choose this level to style Pedro's makeup line web page!",
        "long_instructions": "# Add CSS File\r\n\r\nThe HTML code for Pedro's makeup line page has already been provided for you. Your job will be to style it for him according to his requests in your project guide.\r\n\r\nIn order to start styling the web page for your user, you need to add the CSS file.\r\n\r\n# Do This\r\n1) Add the CSS file to the project.\r\n2) Rename your CSS file to \"style.css\"\r\n3) Add the link for your CSS file in the `head` tag.\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/10/levels/3": {
    "dsls": {
      "description": "Choose your user to add their images!",
      "display_name": "Mini-Project Choices"
    },
    "sublevels": {
      "CSD web CSS project HTML-2_2024": {
        "display_name": "Lesson 5 User-Add Images",
        "bubble_choice_description": "Choose this level if you created an HTML web page for a user during the previous mini-project.",
        "long_instructions": "# Add Images\r\n\r\nBefore you start adding style in the CSS file, lets add the images your user would like on the page.\r\n\r\n<a href=\"https://drive.google.com/drive/folders/1m0_KRExxFfTXs_pJr5I44wZuaVV5LJMd?usp=drive_link\" target=\"_blank\">Click here</a> to view and download the images **Alana** would like on her resume web page.\r\n\r\n<a href=\"https://drive.google.com/drive/folders/1mEqPXR3UiikwlcozvLva470pNkS_Pbpu?usp=drive_link\" target=\"_blank\">Click here</a> to view and download the images **Denzel** would like on his baking web page.\r\n\r\n<a href=\"https://drive.google.com/drive/folders/1pWejvaPlWNPzOgR9GMkbpusMPXUZeeRv?usp=drive_link\" target=\"_blank\">Click here</a> to view and download the images **Kiri** would like on her restaurant web page.\r\n\r\n# Do This\r\n1) Open the folder of images for your user and download each one and add them to the web page project.\r\n2) Add the given images to the user's HTML web page according to your plan in your project guide.\r\n3) Make sure you add comments to describe your images for anyone looking at the code.\r\n4) Don't forget to include an \"alt\" attribute for each image.\r\n5) Finally, make sure you cite the images and give credit to their creator:\r\n   - _All images were created by chatGPT and are under the CC0 1.0 creative commons license._"
      },
      "CSD L10_Savannah-2_2024": {
        "display_name": "User: Savannah-Add Images",
        "bubble_choice_description": "Choose this level to style Savannah's Animal Shelter web page!",
        "long_instructions": "# Add Images\r\n\r\nBefore you start adding style in the CSS file, lets add the images your user would like on the page.\r\n\r\n# Do This\r\n1) Add the given images to the user's web page according to your plan in your project guide.\r\n2) Make sure you add comments to describe your images for anyone looking at the code.\r\n3) Don't forget to include an \"alt\" attribute for each image.\r\n4) Finally, make sure you cite the images and give credit to their creator:\r\n   - _All images were created by chatGPT and are under the CC0 1.0 creative commons license._\r\n"
      },
      "CSD L10_Sofia-2_2024": {
        "display_name": "User: Sofia-Add Images",
        "bubble_choice_description": "Choose this level to style Sofia's computer repair and technology services web page!",
        "long_instructions": "# Add Images\r\n\r\nBefore you start adding style in the CSS file, lets add the images your user would like on the page.\r\n\r\n# Do This\r\n1) Add the given images to the user's web page according to your plan in your project guide.\r\n2) Make sure you add comments to describe your images for anyone looking at the code.\r\n3) Don't forget to include an \"alt\" attribute for each image.\r\n4) Finally, make sure you cite the images and give credit to their creator:\r\n   - _All images were created by chatGPT and are under the CC0 1.0 creative commons license._\r\n"
      },
      "CSD L10_Pedro-2_2024": {
        "display_name": "User: Pedro-Add Images",
        "bubble_choice_description": "Choose this level to style Pedro's makeup line web page!",
        "long_instructions": "# Add Images\r\n\r\nBefore you start adding style in the CSS file, lets add the images your user would like on the page.\r\n\r\n# Do This\r\n1) Add the given images to the user's web page according to your plan in your project guide.\r\n2) Make sure you add comments to describe your images for anyone looking at the code.\r\n3) Don't forget to include an \"alt\" attribute for each image.\r\n4) Finally, make sure you cite the images and give credit to their creator:\r\n   - _All images were created by chatGPT and are under the CC0 1.0 creative commons license._\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/10/levels/4": {
    "dsls": {
      "description": "Choose your user to add style!",
      "display_name": "Mini-Project Choices"
    },
    "sublevels": {
      "CSD web CSS project HTML-3_2024": {
        "display_name": "Lesson 5 User - Add Style",
        "bubble_choice_description": "Choose this level if you created an HTML web page for a user during the previous mini-project.",
        "long_instructions": "# Add Style\r\n\r\nAdd rule sets to your CSS stylesheet to style your user's web page!\r\n\r\n# Do This\r\n1) Add style for each of the elements on your user's page:\r\n   - the body\r\n   - headings\r\n   - paragraphs\r\n   - lists\r\n   - images\r\n2) Refer to your project guide to make sure you are styling each of the elements according to your user's request. These can include:\r\n   - background color\r\n   - font color\r\n   - font family\r\n   - font size\r\n3) You also have the option to add the following style to enhance your user's page even more:\r\n   - text alignment\r\n   - text decoration\r\n   - letter spacing\r\n   - text shadow\r\n   - image size\r\n   - border style\r\n   - border radius\r\n   - border color\r\n   - margin\r\n   - float"
      },
      "CSD L10_Savannah-3_2024": {
        "display_name": "User: Savannah-Add Style",
        "bubble_choice_description": "Choose this level to style Savannah's Animal Shelter web page!",
        "long_instructions": "# Add Style\r\n\r\nAdd rule sets to your CSS stylesheet to style your user's web page!\r\n\r\n# Do This\r\n1) Add style for each of the elements on your user's page:\r\n   - the body\r\n   - headings\r\n   - paragraphs\r\n   - lists\r\n   - images\r\n2) Refer to your project guide to make sure you are styling each of the elements according to your user's request. These include:\r\n   - background color\r\n   - font color\r\n   - font family\r\n   - font size\r\n3) You also have the option to add the following style to enhance your user's page even more:\r\n   - text alignment\r\n   - text decoration\r\n   - letter spacing\r\n   - text shadow\r\n   - image size\r\n   - border style\r\n   - border radius\r\n   - border color\r\n   - margin\r\n   - float"
      },
      "CSD L10_Sofia-3_2024": {
        "display_name": "User: Sofia - Add Style",
        "bubble_choice_description": "Choose this level to style Sofia's computer repair and technology services web page!",
        "long_instructions": "# Add Style\r\n\r\nAdd rule sets to your CSS stylesheet to style your user's web page!\r\n\r\n# Do This\r\n1) Add style for each of the elements on your user's page:\r\n   - the body\r\n   - headings\r\n   - paragraphs\r\n   - lists\r\n   - images\r\n2) Refer to your project guide to make sure you are styling each of the elements according to your user's request. These include:\r\n   - background color\r\n   - font color\r\n   - font family\r\n   - font size\r\n3) You also have the option to add the following style to enhance your user's page even more:\r\n   - text alignment\r\n   - text decoration\r\n   - letter spacing\r\n   - text shadow\r\n   - image size\r\n   - border style\r\n   - border radius\r\n   - border color\r\n   - margin\r\n   - float"
      },
      "CSD L10_Pedro-3_2024": {
        "display_name": "User: Pedro - Add Style",
        "bubble_choice_description": "Choose this level to style Pedro's makeup line web page!",
        "long_instructions": "# Add Style\r\n\r\nAdd rule sets to your CSS stylesheet to style your user's web page!\r\n\r\n# Do This\r\n1) Add style for each of the elements on your user's page:\r\n   - the body\r\n   - headings\r\n   - paragraphs\r\n   - lists\r\n   - images\r\n2) Refer to your project guide to make sure you are styling each of the elements according to your user's request. These include:\r\n   - background color\r\n   - font color\r\n   - font family\r\n   - font size\r\n3) You also have the option to add the following style to enhance your user's page even more:\r\n   - text alignment\r\n   - text decoration\r\n   - letter spacing\r\n   - text shadow\r\n   - image size\r\n   - border style\r\n   - border radius\r\n   - border color\r\n   - margin\r\n   - float"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/10/levels/5": {
    "dsls": {
      "description": "Choose your user to review the page!",
      "display_name": "Mini-Project Choices"
    },
    "sublevels": {
      "CSD web CSS project HTML-4_2024": {
        "display_name": "Lesson 5 User - Review",
        "bubble_choice_description": "Choose this level if you created an HTML web page for a user during the previous mini-project.",
        "long_instructions": "# Review your Page\r\n\r\nFinally, check to make sure the web page has everything your user wants.\r\n\r\n# Do This\r\n1) Check to make sure all of the images are there.\r\n2) Check that the HTML tags structure for the images is correct.\r\n3) Check that the CSS properties style all of the elements correctly and as the user requested.\r\n4) Make sure your added images as well as your CSS code is organized, readable, commented, and free of bugs."
      },
      "CSD L10_Savannah-4_2024": {
        "display_name": "User: Savannah-Review",
        "bubble_choice_description": "Choose this level to style Savannah's Animal Shelter web page!",
        "long_instructions": "# Review your Page\r\n\r\nFinally, check to make sure the web page has everything your user wants.\r\n\r\n# Do This\r\n1) Check to make sure all of the images are there.\r\n2) Check that the HTML tags structure for the images is correct.\r\n3) Check that the CSS properties style all of the elements correctly and as the user requested.\r\n4) Make sure your added images as well as your CSS code is organized, readable, commented, and free of bugs."
      },
      "CSD L10_Sofia-4_2024": {
        "display_name": "User: Sofia - Review",
        "bubble_choice_description": "Choose this level to style Sofia's computer repair and technology services web page!",
        "long_instructions": "# Review your Page\r\n\r\nFinally, check to make sure the web page has everything your user wants.\r\n\r\n# Do This\r\n1) Check to make sure all of the images are there.\r\n2) Check that the HTML tags structure for the images is correct.\r\n3) Check that the CSS properties style all of the elements correctly and as the user requested.\r\n4) Make sure your added images as well as your CSS code is organized, readable, commented, and free of bugs."
      },
      "CSD L10_Pedro-4_2024": {
        "display_name": "User: Pedro - Review",
        "bubble_choice_description": "Choose this level to style Pedro's makeup line web page!",
        "long_instructions": "# Review your Page\r\n\r\nFinally, check to make sure the web page has everything your user wants.\r\n\r\n# Do This\r\n1) Check to make sure all of the images are there.\r\n2) Check that the HTML tags structure for the images is correct.\r\n3) Check that the CSS properties style all of the elements correctly and as the user requested.\r\n4) Make sure your added images as well as your CSS code is organized, readable, commented, and free of bugs."
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/11/levels/1": {
    "dsls": {
      "markdown": "# Sample Website\n\nClick the website below to discover some new ways to style elements.\n\n[![](https://images.code.org/71a3cb8e9708093b17b9c75eb0723d10-image-1588247512749.49.53 AM.png)](https://codeprojects.org/zu24LsgcyFFFLdZo9Q3vpBvDu3RpEDrNHtOLnEKNhZE)\n"
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/11/levels/2": {
    "long_instructions": "# Using Classes\n\nThis waterfall page uses classes to make the images at the top of the page a different style from the images in the main part of the page.\n\n# Do This\n\n1.  Find the CSS rule set in the `style.css` file that makes the images at the top smaller than the ones on the main part of the page.\n2.  Add a new rule to one of the classes, and check to see that it only affects the images in that class."
  },
  "https://studio.code.org/s/csd2-2024/lessons/11/levels/3": {
    "long_instructions": "# The Four Ghosts\n\nThis page describes the four ghosts from Pac Man and Mrs. Pac man, but only one of them is styled with a special class.\n\n# Do This\n\n1.  Look through the code to see how the \"blinky\" class works.\n2.  Add a new class attribute in the `index.html` file for each of the other three ghosts.\n3.  Add a class rule-set in the `style.css` file for each of the three ghosts.\n4.  Add properties to each rule set to style the ghost's image and paragraph differently.\n\n::: details [🔎 **Show Me How** 🔍]\n\n<img src=\"https://images.code.org/c7087e291c5d954a2f958be5f449db01-image-1677109951954.gif\" style=\"width:500px\">\n\n<br>\n\n**More resources in the \"Help and Tips\" tab**\n\n:::\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/11/levels/4": {
    "long_instructions": "# Young Adult Novels\n\nLet's continue practicing using classes with this article on different young adult novels.\n\n# Do This\n\n1.  Give each heading and paragraph tag class attribute names.\n    -   _The first novel's heading and paragraph has already been done as an example._\n2.  Go into the stylesheet and give each novel heading and paragraph a different style including:\n    -   Color\n    -   Font\n    -   Border style\n    -   Border color\n    -   Background color\n3.  Add any other stylings you think make the article look better!"
  },
  "https://studio.code.org/s/csd2-2024/lessons/11/levels/5": {
    "dsls": {
      "description": "Practice your new skills here.",
      "display_name": "Using Classes"
    },
    "sublevels": {
      "CSD U2 classes months_2024": {
        "display_name": "Using Classes: Your Favorite Month",
        "bubble_choice_description": "Choose a month and add in a class to make it stand out on this web page.",
        "long_instructions": "# Your Favorite Month\r\n\r\nThis page lists information on the different months of the year.\r\n\r\n# Do This\r\n\r\n1) Create a class for your favorite month so that it looks different from the others.\r\n2) Create a new rule set for your favorite month and use at least three properties to style it.\r\n"
      },
      "CSD U2 classes seasons_2024": {
        "display_name": "Debug: Classes",
        "bubble_choice_description": "Use your debugging skills to figure out why the Autumn class isn't working on this web page.",
        "long_instructions": "# Debug: The Four Seasons\r\n\r\nThis page has a separate class for each of the four seasons, but the autumn class isn't working.\r\n\r\n# Do this\r\n\r\n1) Find the bug in the autumn class and fix the code so that the class makes the text a dark red.\r\n"
      },
      "CSD classes travel_2024": {
        "display_name": "Debug Image Classes",
        "bubble_choice_description": "Use your debugging skills to figure out why the images aren't being styled correctly on this web page.",
        "long_instructions": "# Debug Image Classes\r\n\r\nEach group of images should have a slightly different style for their borders. It looks like there are multiple bugs with the classes for these images preventing this from happening.\r\n\r\n# Do This\r\n\r\n1) Look through both the html and the stylesheet to find and fix all the bugs."
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/11/levels/6": {
    "long_instructions": "# Haikus!\n\nThis page has several different haikus.\n\n# Do This\n\n1.  Choose one haiku and give it a special look by creating a class to style its paragraph, heading tags, and image.  \n2.  Use at least three CSS properties to style the special haiku.\n\n<details><summary>What does the <strong>&lt;br&gt;</strong> tag do?</summary>\n\nThe \\<br> tag is used here to start a new line inside the same paragraph. In the code below, each poem is still treated like one big paragraph. However, the \\<br> tag puts each line of the haiku is on its own line. <em>You do not need to add any CSS or classes to the \\<br> tags.</em>\n\n</details>",
    "mini_rubric": {
      "rubric_key_concept": "Create classes that can be referenced and affected as a group.",
      "rubric_performance_level_1": "The class and rule-set are created correctly, all elements of the of the chosen haiku are included, and there are at least three rules between in the rule-sets",
      "rubric_performance_level_2": "A class and rule-set are created and most elements in the chosen haiku section of the website is affected by this class, but there may be a few minor errors for some parts of text, or there may be fewer than three rules in the rule-set.",
      "rubric_performance_level_3": "A class and rule-set are created, and at least some elements in the website are in that class, but there may be major errors that prevent the text from being styled.",
      "rubric_performance_level_4": "No class or rule sets are created, or no website elements are put in the class."
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/11/levels/7": {
    "long_instructions": "# Haikus Reflection\n\n🤔 Take a minute to reflect on the last level where you were tasked with giving one haiku a special look using a class attribute and answer the following questions:\n\n1.  ✔️ How do you think you did according to the Rubric below and why?\n2.  🏁 How did you know how to complete this assessment?\n3.  👍🏼 What was easy about the task? / ❗ What was the most challenging? \n    -   What did you do to overcome the challenging part?\n4.  ❓ What questions do you still have?\n\n<hr>\n\n[][0]",
    "teacher_markdown": "Use this reflection as an opportunity to gain insight into how the students completed the assessment level and the choices they made with creating classes and styling them in CSS as well as identify any misconceptions that should be cleared up."
  },
  "https://studio.code.org/s/csd2-2024/lessons/11/levels/8": {
    "dsls": {
      "description": "Try extra challenges or learn some new code.",
      "display_name": "Using Classes"
    },
    "sublevels": {
      "CSD U2 classes music_2024": {
        "display_name": "Individual Ids",
        "bubble_choice_description": "Learn how to use the id attribute to give  a style to a single element.",
        "long_instructions": "# Individual Ids\r\n\r\nYou can also use the `id` attribute to single out just one element for a rule-set.  \r\n\r\n# Do This\r\n\r\n1) Look at the image element with the `<img id=\"notes\" src=\"Raseone-Music.png\" alt=\"music notes\">` tag, and notice the `id` attribute.\r\n* In `style.css`, look at the rule-set with the `#notes` selector.  Notice how it uses a `#` instead of a period.\r\n* Add a new image into the page from the available files, and give it its own style.\r\n"
      },
      "CSD U2 classes dance_2024": {
        "display_name": "Missing Classes!",
        "bubble_choice_description": "Figure out what html elements need which classes in order to fix the web page.",
        "long_instructions": "\r\n\r\n# Missing Classes\r\n\r\nThis website about different types of dances doesn't look quite right. Can you fix it?\r\n\r\n# Do This\r\n\r\n1) Look at the stylesheet to see the different classes that are created but missing from the index page.\r\n2) Figure out what html elements need which classes in order to make the web page look like the image below.\r\n\r\n<br>\r\n\r\n<img src=\"https://images.code.org/050f0c22b5d74e1dd4bf0f7591eebf00-webpageOverview.png\" style=\"width:1000px;\">\r\n"
      },
      "CSD web classes freeplay_2024": {
        "display_name": "Add to your Web Page!",
        "bubble_choice_description": "Use your new knowledge to add to the web page you started in a previous challenge level",
        "long_instructions": "# Add CSS to Your Webpage\r\n\r\nUse your new knowledge and skills to add to the page you started in Lesson 6 about something you enjoy! The webpage you created for that lesson in Level 11, challenge f has been transferred below - add some CSS classes to your webpage!"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/12/levels/1": {
    "long_instructions": "# Div + Flex\n\nThe HTML division tag, called \"div\" for short, is a special element that lets you group similar sets of content together on a web page inside a container. It is a multi-purpose tag that you can use to do several things including helping with web layouts and CSS. Ultimately, you'll almost always use it to style whatever it contains.\n\nFlexbox gives us a more efficient way to align and distribute space among items in a `div` container, even when their size is unknown and/or dynamic (thus the word \"flex\"). \n\n## Do This\n\n1.  Take a look at the web page below and notice the `div` container around the images.\n2.  Go look at the CSS file and notice the flex properites applied to the `div`.\n3.  Discuss with your neighbor: What do you think each of the properties applied to the `div` tag does to the webpage layout?\n    -   Try using the CSS comment out code `/*   */` to comment out one line at a time to see what happens to the layout.\n        -   **For example:**\n            -   _Add CSS comments to the first property which will look like this: `/* display: flex; */`_\n            -   _Then delete those comments and add CSS comments to the next line:  `/* flex-direction: row-reverse; */`_\n            -   _Then delete those comments and continue adding CSS comments to each line, one at a time._"
  },
  "https://studio.code.org/s/csd2-2024/lessons/12/levels/2": {
    "long_instructions": "# Display, Direction and Wrap\n\nThe first three steps we typically follow when applying Flex properties are: 1) establish the layout, 2) define the flow direction and if items should wrap, and 3) define how the items should be distributed. Let's try out the **first two steps**:  **1) establish flex layout** and **2) define the direction and wrap**.\n\n# Do This\n\n1.  Add a `div` container around the image tags.\n2.  Add the class name `.container` to the `div` tag.\n3.  Add the following Flex properties to the container:\n    -   Establish flex layout with `display: flex;`\n    -   Define the flow direction with `flex-direction: row;`. \n    -   Define if items should wrap with `flex-wrap: wrap;`.\n4.  Change the size of your Preview window to see the wrapping effects (see gif below).\n5.  Change the values for the `flex-direction` property to see what each one does: \n    -   Value options include:\n        -   `row`\n        -   `row-reverse`\n        -   `column`\n        -   `column-reverse`\n6.  Change the values for the `flex-wrap` property to see what each one does: \n    -   Value options include:\n        -   `wrap`\n        -   `nowrap`\n        -   `wrap-reverse`\n\n<br>\n\n::: details [🔎 **Show Me How To Complete This Level** 🔍]\n\n<img src=\"https://images.code.org/ca4e91d3af0695944b52bd7e4e7adc8c-image-1708131687846.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n<br>\n\n::: details [**Show Me How To Resize The Preview Window**]\n\n<img src=\"https://images.code.org/3af3419482a8b0d3c7d8929e61547c21-image-1705694267212.gif\" style=\"width: 250px\">\n\n:::\n\n<br>\n\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1f5t7oUfV-5PRtcKrJVskrb_Mt_r8941VT-Qa-07mP9o/edit?usp=sharing\">Flexbox Cheat Sheet</a> when needed!**\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/12/levels/3": {
    "long_instructions": "# Justify-content\n\n<img src=\"https://images.code.org/4a2f654dc61d5c8779e54cc60c232c5b-image-1705695054809.png\" style=\"width:250px; float:right\">\n\nAfter we enable flex for container items, define the flow direction and whether items should wrap or not, the next step is to define how the items in the container should be distributed **horizontally** across the container. We will do this with the `justify-content`property.\n\nThis property has 6 value options. Assign each one to make the page look like the image to the right. \n\n# Do This\n\n1.  Add the `justify-content` property to each of the 6 `div` container rules in the stylesheet. \n2.  Match the image on the right by applying the correct value with each of the `justify-content` properties. Value options include: \n    -   `flex-start;`\n    -   `flex-end;`\n    -   `center;`\n    -   `space-between;`\n    -   `space-around;`\n    -   `space-evenly;`\n\n_**Note:** The exact spacing around and between the boxes may be slightly different depending on the size of your results window._\n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/30c761d5a043755d354d6cf681837581-image-1708132194572.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n<br>\n\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1f5t7oUfV-5PRtcKrJVskrb_Mt_r8941VT-Qa-07mP9o/edit?usp=sharing\">Flexbox Cheat Sheet</a> when needed!**\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/12/levels/4": {
    "long_instructions": "# Align-items\n\n<img src=\"https://images.code.org/cd04b1032608e317581d3594b0398ce9-image-1705612237846.png\" style=\"height:400px; float:right\">\n\nAfter we go through our first 3 steps of enabling flex, defining the flow direction, whether items should wrap or not, and defining how the items should be distributed **horizontally**, we have the option of defining how the items should be distributed in the container **vertically**. We can do this with the `align-items` property.\n\nThis property has 5 value options. Your job is to add the `align-items` property to each container and decide which of the five values to use for each container to make the page look like the image to the right.\n\n# Do This\n\n1.  Add the `align-items` property for each of the 5 `div` container rules in the stylesheet. \n2.  Match the image on the right by applying the correct value with each of the `align-items` properties. Value options include: \n    -   `flex-start;`\n    -   `flex-end;`\n    -   `center;`\n    -   `baseline;`\n    -   `stretch;`\n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/19b363bad8181febe0dd965c7c510e64-image-1708132429364.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n<br>\n\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1f5t7oUfV-5PRtcKrJVskrb_Mt_r8941VT-Qa-07mP9o/edit?usp=sharing\">Flexbox Cheat Sheet</a> when needed!**\n\n[][0]\n\n[][1]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/12/levels/5": {
    "long_instructions": "<img src=\"https://images.code.org/c7afaee5b4a49c64784c68161fa05e6e-image-1719418615121.png\" style=\"width:200px; float: right;\">\n\n# Align-content\n\nYou can use `align-content` to set how **multiple lines** of items are spaced apart from each other. This property determines the spacing _between_ lines and **only has an affect when there is more than one line** of content.\n\nSince this property _only has an effect when you have more than one line of content_, it should only be used when you have more than one line of content that is _set to wrap_. Make sure your \"Preview\" window is resized so that there are two lines of content as the image shows.\n\nThis property has 6 value options. Assign each one to make the page look like the image to the right.\n\n_**Note: the default appearance for all images before adding the `align-content` property is to be stretched to fill the container.**_\n\n# Do This\n\n1.  Add the `align-content` property to each of the 6 div container rules in the stylesheet.\n2.  Match the image on the right by applying the correct value with each of the align-items properties. Value options include:\n    -   `flex-start;`\n    -   `flex-end;`\n    -   `center;`\n    -   `space-between;`\n    -   `space-around;`\n    -   `stretch;`\n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/dc67c2760fb18c1d95cd45324eec5be1-image-1708132609366.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n<br>\n\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1f5t7oUfV-5PRtcKrJVskrb_Mt_r8941VT-Qa-07mP9o/edit?usp=sharing\">Flexbox Cheat Sheet</a> when needed!**"
  },
  "https://studio.code.org/s/csd2-2024/lessons/12/levels/6": {
    "dsls": {
      "description": "Try out what you've learned on one or more of the following activities.",
      "display_name": "Practice Levels"
    },
    "sublevels": {
      "CSD U2L12 Div Flex SB_5": {
        "display_name": "Inversed Properties",
        "bubble_choice_description": "Practice horizontal and vertical alignment for columns!",
        "long_instructions": "<img src=\"https://images.code.org/107ac2b9d9f38277965fe7e74dfeae0a-image-1705710465806.png\" style=\"width:250px; float: right;\">\r\n\r\n# Inversed Properties?\r\n\r\nA really interesting thing happens when we define our `flex-direction` to be in **columns** ... the `justify-content` and `align-items` **switch!!** \r\n\r\nThis means that if we have columns, we'll use `align-items` (or `align-content` if there's more than one line) to determine alignment **across** the container and `justify-content` will determine alignment **vertically**.\r\n\r\n**You might want to make note of this on your <a href=\"https://docs.google.com/document/d/1f5t7oUfV-5PRtcKrJVskrb_Mt_r8941VT-Qa-07mP9o/edit?usp=sharing\">Flexbox Cheat Sheet</a>!**\r\n\r\nAll containers have flex established and `flex-direction: column` property already defined. \r\n\r\n_When in columns, before the \"align\" and \"justify\" have been defined, the default horizontal alignment is \"stretch\" and the default vertical alignment is at the top of the container._\r\n\r\n# Do This\r\n \r\n1. Add the `align-items` property with the correct value to horizontally align the images in each container to look like the picture to the right.\r\n2. Add the `justify-content` property with the correct value to vertically align the images in each container to look like the picture to the right.\r\n\r\n<br>\r\n\r\n\r\n::: details [🔎 **Show Me How To Get Started** 🔍]\r\n\r\n<img src=\"https://images.code.org/9bd307f49ccc9eafc8f4aa956d2c00bf-image-1708133232036.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::\r\n\r\n"
      },
      "CSD U2L12 Div Flex SB_6": {
        "display_name": "Which Properties?",
        "bubble_choice_description": "Can you figure out which Flex properties were used with each container?",
        "long_instructions": "<img src=\"https://images.code.org/ce09cccb20efba7f78af22e52bfbed46-image-1705713180877.png\" style=\"width:250px; float: right;\">\r\n\r\n# Which properties?\r\n\r\nCan you figure out which Flex properties were used with each container to create the image to the right?\r\n\r\nAll containers have `display`, `flex-direction`, and `flex-wrap` already defined. Can you figure out which horizontal and vertical alignment properties each container has?\r\n\r\n# Do This\r\n\r\n1. Examine the image to the right to figure out which containers should get which horizontal and vertical alignment properties.\r\n2. Add the correct properties and values to each container's ruleset in the CSS file.\r\n   - As before, you may need to resize your \"Preview\" window to determine if you've matched the image.\r\n\r\n<br>\r\n\r\n::: details [🔎 **Show Me How To Get Started** 🔍]\r\n\r\n<img src=\"https://images.code.org/88a2f94e85079d5288bcd1f25ab1a9af-image-1708194006281.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::\r\n\r\n<br>\r\n\r\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1f5t7oUfV-5PRtcKrJVskrb_Mt_r8941VT-Qa-07mP9o/edit?usp=sharing\">Flexbox Cheat Sheet</a> when needed!**\r\n\r\n"
      },
      "CSD U2L12 Div Flex SB_7": {
        "display_name": "Basic Steps",
        "bubble_choice_description": "Let's practice the all 3 steps we learned in the Skill Building levels!",
        "long_instructions": "<img src=\"https://images.code.org/6c141a3fd9261923fbdf7f174f1ad980-image-1705714479018.png\" style=\"width: 450px; float: right;\">\r\n\r\n# Basic Steps\r\n\r\nLet's practice the all 3 steps we learned in the Skill Building levels: \r\n1. Establish flex layout.\r\n2. Define the flow direction and if items should wrap.\r\n3. Define how the items should be distributed horizontally across the container.\r\n\r\nWe will also define how the items should be distributed vertically. \r\n\r\n# Do This\r\n\r\nFor both `div` containers:\r\n1. Establish flex layout.\r\n2. Define which direction the images should be placed.\r\n3. Define if items should wrap or not.\r\n4. Define how the content should be spaced horizontally across the container.\r\n5. Define how the items should be spaced vertially in the container.\r\n\r\n_Note: Your result should look like the image to the right when you view the Preview in fullscreen (click on this icon <img src=\"https://images.code.org/9469294a2b49f74d387cef70267b75b9-image-1704931709204.png\">located next to the Inspector tool)._\r\n\r\n<br>\r\n\r\n::: details [🔎 **Show Me How To Get Started** 🔍]\r\n\r\n<img src=\"https://images.code.org/5c6552ea1f47f44542d745efe64635b3-image-1708194283187.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::\r\n\r\n![]()"
      },
      "CSD U2L12 Div Flex SB_8": {
        "display_name": "Find All The Bugs!",
        "bubble_choice_description": "Can you find all the bugs to fix the image gallery?",
        "long_instructions": "<img src=\"https://images.code.org/206a7742149ba08385f454fb98910893-image-1705777723042.png\" style=\"float:right; width: 350px;\">\r\n\r\n# Find All The Bugs!\r\n\r\nTrinity was making this webpage to blog about her love of Super Mario but she has run into some problems. She had the page looking like the image to the right but then she wasn't paying attention and changed some stuff and can't figure out where the bugs are. Can you help her?\r\n\r\n# Do This\r\n\r\n1. Look through both the HTML file and the CSS file to see if you can find and fix all 4 bugs to get Trinity's page to look like the image to the right.\r\n\r\n![]()"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/12/levels/7": {
    "long_instructions": "<img src=\"https://images.code.org/c23e6ee57283f815bfe70987365ca8c3-image-1706114255476.png\" style=\"float: right; width: 400px; margin-left: 10px;\">\n\n# Wonders of the World\n\nBrodie is making a web page of the ancient and new Wonders of the World. He would like the user to be able to test their knowledge by looking at the gallery of images to guess what each wonder is and then scroll down to the bottom of the page to check the answers and see if they were right. Can you help him make sure the order of the images match the answers?\n\n# Do This\n\n1.  Put all of the images inside a container.\n2.  Style the container's layout so that the layout of the images matches the order of the answers.\n    -   _An example of the what layout should look like is provided to the right._\n\n[][0]",
    "mini_rubric": {
      "rubric_key_concept": "Create a `div` container and a ruleset for the container that uses Flexbox properties.",
      "rubric_performance_level_1": "Added a `div` container with a class attribute around the images in the HTML. Added a rule for the class attribute in the CSS. Used correct Flexbox properties to match the image in the instructions.",
      "rubric_performance_level_2": "Added a `div` container with a class attribute around the images in the HTML. Added a rule for the class attribute in the CSS. Used Flexbox properties but the result does not necessarily match the image in the instructions.",
      "rubric_performance_level_3": "Added a `div` container but did not use a class attribute in the `div` tag. Added a rule for the div in the CSS but did not use all needed Flexbox properties resulting in a page that does not necessarily match the image in the instructions.",
      "rubric_performance_level_4": "There are no rule sets in the stylesheet for the `div` container, or the rule sets do not have the necessary Flexbox properties to style the images as shown in the instructions."
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/12/levels/8": {
    "long_instructions": "# Wonders of the World Reflection\n\n🤔 Take a minute to reflect on the last level where you were tasked with putting images inside a `div` container and then using Flexbox to define the correct layout and answer the following questions:\n\n1.  ✔️ How do you think you did according to the Rubric below and why?\n2.  🏁 How did you know how to complete this assessment?\n3.  👍🏼 What was easy about the task? / ❗ What was the most challenging? \n    -   What did you do to overcome the challenging part?\n4.  ❓ What questions do you still have?\n\n<hr>\n\n[][0]",
    "teacher_markdown": "Use this reflection as an opportunity to gain insight into how the students completed the assessment level and the choices they made with using `div` containers and Flexbox layout as well as identify any misconceptions that should be cleared up."
  },
  "https://studio.code.org/s/csd2-2024/lessons/12/levels/9": {
    "dsls": {
      "description": "Find an extra challenge or a new type of code here.",
      "display_name": "Div and Flex"
    },
    "sublevels": {
      "CSD U2L12 Div Flex SB_10": {
        "display_name": "Flex-flow",
        "bubble_choice_description": "Learn how to use a shorthand property to set the  direction and wrap in one line",
        "long_instructions": "<img src=\"https://images.code.org/a25f8ff2757895ad8f610ce604ba9fcf-image-1706287438413.png\" style=\"float: right; width: 200px;\">\r\n\r\n# Flex-flow\r\n\r\n`flex-flow` is shorthand for the `flex-direction` and `flex-wrap` properties, which together define the flex container's set up. The default value is `flex-flow: row nowrap;` which establishes the direction as \"row\" and the wrap as \"no wrap\". See if you can use this new shorthand property to match the image on the right. \r\n\r\nThe first container has been styled for you with `flex-flow: column wrap;`. \r\n\r\n_Don't forget that when you use column for the direction, the horizontal and vertical alignment properties switch!_\r\n\r\n# Do This\r\n\r\n1. Give each container the `flex-flow` property and appropriate values according to the image.\r\n2. Define the horizontal alignment for each container to match the image to the right.\r\n3. Define the vertical alignment for each container to match the image to the right."
      },
      "CSD U2L12 Div Flex CH_2": {
        "display_name": "Gap spacing",
        "bubble_choice_description": "Learn a new property to control the spacing between rows and columns",
        "long_instructions": "<img src=\"https://images.code.org/904a09e6a6bdb840557b0e5d800ec9ed-image-1706747985587.png\" style=\"width:300px; float:right;\">\r\n\r\n# Row & Column \"Gap\"\r\n\r\nThe **gap property** explicitly controls the space **between** flex items. It applies that spacing _only between items_ not on the outer edges.\r\n\r\nThe behavior could be thought of as a _minimum space_. If the space is bigger somehow (if you had `justify-content: space-between;` for example) then the gap will only take effect if that space would end up smaller.\r\n\r\n`grid-gap` accepts one or two values:\r\n* A single value sets both `grid-row-gap` and `column-gap` by the same value\r\n   - _See the spacing between the rows and columns of the items in the first, purple container to the right._\r\n* When two values are used, the first sets the `grid-row-gap` and the second sets the `column-gap`\r\n   - _See the different spacing between the rows and columns of the items in the second, teal container to the right._\r\n\r\n# Do This\r\n\r\n1. Assign the gap property to each container in the CSS to match the spacing of the items in the image to the right.\r\n   - Give the 1st container the `grid-gap` property and define both the row and column spacing to be 50px.\r\n   - Give the 2nd container the `grid-gap` property and define the spacing to be 10px between the rows and 50px between the columns.\r\n   - Give the 3rd container the `grid-gap` property and define the spacing to be 50px between the rows and 10px between the columns.\r\n   - Give the 4th container the `grid-row-gap` property and define the spacing between the rows to be 60px.\r\n   - Give the 5th container the `column-gap` property and define the spacing between the columns to be 60px.\r\n   - Give the 6th container the `grid-gap` property and define the spacing between rows to be 25px and spacing between columns to be 70px.\r\n\r\n![]()"
      },
      "CSD U2L12 Div Flex CH_1": {
        "display_name": "Child Selectors",
        "bubble_choice_description": "Learn how to style an element within a container differently than the rest!",
        "long_instructions": "# Child Selector\r\n\r\nThe \"child selector\" selects all elements that are the \"children\" of a specified element.\r\n\r\n::: details [🔎**Click Here For a Visual of the \"Parent\"/\"Child\" Relationship**]\r\n\r\n<div style=\"width:800px;\">\r\n<img src=\"https://images.code.org/6bad3f9c0f70ee2c9b8d214557fe9444-image-1706819626262.png\" style=\"width: 50%; float:left;\">\r\n<img src=\"https://images.code.org/76f33c385256c63653553adee40ea82c-image-1706818742325.png\" style=\"width: 50%; float: right;\">\r\n</div>\r\n\r\n\r\n\r\n:::\r\n\r\n<hr style=\"display: block; clear: left;\">\r\n\r\n\r\nTo style child elements you will use the `>` character in the selector of the rule, like this: \r\n```\r\ndiv > p {\r\n font-family: serif;\r\n}\r\n``` \r\n\r\n# Do This\r\n\r\n::: details [✔️ **FIRST, EXPAND ME TO SEE HOW THE CHILD SELECTOR WORKS!** ✔️]\r\n\r\n<br>\r\n\r\n**In the HTML file:**\r\n\r\nFind the `div` class with the \"parent\" class attribute in the HTML. \r\n- Notice how paragraphs 1, 2, and 4 are direct children within the container \r\n- Notice how paragraph 3 is inside the container **but** in its _own_ container. This makes paragraph 3 a \"descendant\" of the parent container but _not_ a _direct child_.\r\n- Notice how paragraphs 5 & 6 are not in the container at all.\r\n\r\n**In the CSS file:**\r\n\r\nFind the rule for the paragraph tags that are children of the parent container in the CSS file.\r\n- The rule looks like this: <img src=\"https://images.code.org/7a3c58d67c23f9c3e29223f30f27bf83-image-1706313834923.png\" style=\"width:250px;\">\r\n\r\n**In the Preview Window:**\r\n\r\nNotice how only the paragraphs that are children of the parent container are getting the yellow background color!\r\n\r\n:::\r\n\r\n<br>\r\n\r\n**YOUR TURN!**\r\n\r\n1. Add a rule to the CSS file that uses the child selector to style the images within the container.\r\n2. Give those images the following properties:\r\n   - Width of 75px\r\n   - Solid border style\r\n   - 30px margin\r\n\r\n::: details [💪🏽 **Extra Challenge!**]\r\n\r\nCan you figure out how to use the child selector to style just the _first two images in the container_?\r\n- Give those two images the following properties:\r\n   - Yellow border color\r\n   - 25px border radius\r\n\r\n:::\r\n"
      },
      "CSD U2L12 Div Flex CH_3": {
        "display_name": "Descendant Selectors",
        "bubble_choice_description": "Learn how to style the same type of elements within a container even if they aren't \"direct children\"!",
        "long_instructions": "# Descendant Selector\r\n\r\nIf you did the previous challenge level you learned what an HTML \"child\" is and a \"child selector\" does. _If you did not do the previous challenge level, consider completing it and then coming back to this level. You can also read the documentation on \"CSS Selectors\" in the **Help and Tips** tab_.\r\n\r\n<hr>\r\n\r\nThe ability to select child elements in a parent is awesome, but what if you want to select **all** the same type of elements within a **parent**, even if it's **not a direct child**?\r\n\r\nEasy! We use the **Descendant Selector**!!\r\n\r\n::: details [🔎**Click Here For a Visual of the \"Parent\"/\"Child\"/\"Descendant\" Relationship**]\r\n\r\n<br>\r\nIn this example, the descendant selector will style <b>all</b> the paragraph tags in the main, parent container ... even the one that is not a direct child, but a \"descendant.\"\r\n<div style=\"width:800px;\">\r\n<img src=\"https://images.code.org/6bad3f9c0f70ee2c9b8d214557fe9444-image-1706819626262.png\" style=\"width: 50%; float:left;\">\r\n<img src=\"https://images.code.org/6c071a78847757a0747519c2d9df1eeb-image-1706893386759.png\" style=\"width: 50%; float: right;\">\r\n</div>\r\n\r\n\r\n\r\n:::\r\n\r\n<hr style=\"display: block; clear: left;\">\r\n\r\nTo use a descendant selector, you will format the selector of the rule, like this: \r\n```\r\ndiv p {\r\n font-family: serif;\r\n}\r\n``` \r\n\r\n# Do This\r\n\r\n::: details [✔️ **FIRST, EXPAND ME TO SEE HOW THE DESCENDANT SELECTOR WORKS!** ✔️]\r\n\r\n**In the HTML file:**\r\n\r\nFind the `div` class with the \"parent\" class attribute in the HTML. \r\n- Notice how paragraphs 1, 2, and 4 are within the container, while paragraph 3 is a \"descendant\" of the parent container but not a direct child since it is in its _own_ container, and paragraphs 5 & 6 are not in the container at all.\r\n\r\n**In the CSS file:**\r\n\r\nFind the rule for the paragraph tags that are children of the parent container in the CSS file.\r\n- The rule looks like this: \r\n   <img src=\"https://images.code.org/670d8651173dab087a69ca2603b0ea08-image-1706313408574.png\" style=\"width:250px;\">\r\n\r\n**In the Preview Window:**\r\n\r\nNotice how only **ALL** of the paragraphs in the parent container are getting the yellow background color!\r\n\r\n:::\r\n\r\n<br>\r\n\r\n**YOUR TURN!**\r\n\r\n1. Add a rule to the CSS file that uses the descent selector to style **ALL** the images within the container.\r\n2. Give those images the following properties:\r\n   - Width of 100px\r\n   - Yellow border color\r\n   - A  margin of 5px\r\n   \r\n::: details [**EXTRA CHALLENGE**]\r\n\r\nAdd a rule to the CSS file that uses the **child selector** to style just the first two images in the container.\r\n- Give those two images the following properties:\r\n   - width of 115px\r\n   - Red border color\r\n   - 15px border radius\r\n\r\n:::\r\n\r\n![]()"
      },
      "CSD U2L12 Div Flex CH_4": {
        "display_name": "Image Gallery Cards",
        "bubble_choice_description": "Learn how to create an image gallery with information underneath each image!",
        "long_instructions": "<img src=\"https://images.code.org/075a7cf5c1e8fabe115e9f44dda4b274-image-1709228773267.png\" style=\"float: right; width: 200px;\">\r\n\r\n# Image Gallery Cards\r\n\r\nThere are many times when we want to create some sort of image gallery with information about each image underneath. This is easier than it sounds when we use `div` containers, Flex and some CSS styles we already know! Let's see how!\r\n\r\n# Do This\r\n\r\n**In the HTML file:**\r\n1) Add a div with a \"gallery\" class around ALL content after the main page title.\r\n2) Add a child div with a \"ramen-card\" class around EACH set of image, h3 tag and paragraph.\r\n   \r\n   :::details [*Click Me To See What This Code Should Look Like*]\r\n   ```\r\n   <div class=\"ramen-card\">\r\n   \t\t<img>\r\n        \t<h3> </h3>\r\n     \t<p> </p>\r\n   </div>\r\n   ```\r\n   :::\r\n   \r\n3) Add one more child div with a \"content\" class around EACH set of h3 tag and paragraph.\r\n   \r\n   :::details [*Click Me To See What This Code Should Look Like*]\r\n   ```\r\n   <div class=\"ramen-card\">\r\n   \t\t<img>\r\n        \t<div class=\"content\">\r\n        \t\t<h3> </h3>\r\n     \t\t\t<p> </p>\r\n            </div>\r\n   </div>\r\n   ```\r\n   :::\r\n\r\n<br>\r\n\r\n**In the CSS file:**\r\n1) Add the following styles to the \"gallery\" rule set:\r\n\r\n   :::details [**Click Me To See The List of \"gallery\" Class Styles**]\r\n   - Establish flex layout\r\n   - Set the flex content to wrap\r\n   - Define the items to be centered horizontally\r\n   - Set a margin of 20px to keep the cards from getting too close to each other\r\n   :::\r\n\r\n<br>\r\n\r\n2) Add the following styles to the \"ramen-card\" rule set:\r\n\r\n\t:::details [**Click Me To See The List of \"ramen-card\" Class Styles**]\r\n   - Set the width to 325px\r\n   - Define the border to be solid, 2px wide, and a color of your choice\r\n   - Align the text in the center\r\n   - Set a margin of 10px\r\n   - Establish flex layout for the content within \r\n   - Set the layout direction to be in a column\r\n   - Align the items to be vertically centered\r\n   :::\r\n\r\n<br>\r\n\r\n3) Add the following style to the \"content\" rule set:\r\n\r\n\t:::details [**Click Me To See The List of \"content\" Class Styles**]\r\n   - Set the padding to be 10px\r\n   :::\r\n   \r\n<br>\r\n\r\n4) Add the following style to apply to all **paragraphs within containers the \"ramen-card\" class**:\r\n\r\n   :::details [**Click Me To See The List of Paragraph Styles**]\r\n   - Set the font size to be 17px\r\n   :::\r\n\r\n<br>\r\n\r\n5) Add the following styles to the `h3` headings:\r\n\r\n   :::details [**Click Me To See The List of `h3` Styles**]\r\n   - Set the bottom margin to be 10px (or less)\r\n   :::\r\n\r\n<br>\r\n\r\n6) Add the following styles to the images:\r\n\r\n   :::details [**Click Me To See The List of Image Styles**]\r\n   - Set the width to be 100%\r\n   :::\r\n\r\n<br>\r\n\r\n<div>\r\n<img src=\"https://images.code.org/6a4727a01f98a68d5836dc6cbf02a20c-image-1709229413339.png\" style=\"float: left; width: 150px; margin-right: 10px;\">\r\n\r\n**Extra Challenge:** Try playing around with the image style ... can you make the image have a border and spaced within the card to look like the image to the left?\r\n</div>\r\n\r\n\r\n"
      },
      "CSD web flex freeplay_2024": {
        "display_name": "Add to your Web Page!",
        "bubble_choice_description": "Use your new knowledge to add to the web page you started in a previous challenge level",
        "long_instructions": "# Add Flex Layout to Your Webpage\r\n\r\nUse your new knowledge and skills to add to the page you started in Lesson 6 about something you enjoy! The webpage you created for that lesson in Level 11, challenge f has been transferred below - add Flexbox layouts to your webpage!"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/13/levels/1": {
    "long_instructions": "<img src=\"https://images.code.org/55f2ee057f721d2819b2de7ef2d49bff-image-1707238959417.png\" style=\"float: right; width: 300px;\">\n\n# What Do You Notice? What Do You Wonder?\n\nCan you spot some **new** stuff going on!\n\n# Do This\n\n1.  Resize the Preview Window to see items grow and shrink!\n\n**In the HTML file:**\n\n1.  Take a look at the items in the `div` container.\n2.  Discuss with your neighbor - What do you notice? What do you wonder?\n\n**In the CSS file:**\n\n1.  Take a look at the rule sets below the comments that say \"CHECK ME OUT!\"\n2.  Discuss with your neighbor - What do you notice? What do you wonder?\n3.  Find the `width: 10%` property and change it to `30%`\n    -   Since `flex-shrink` will only affect items when there is not enough space in the container, this will allow you to see the 5th item shrink to allow room for the other items that are not supposed to shrink.\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/13/levels/2": {
    "long_instructions": "# Flex-grow\n\nThe `flex-grow` property specifies how much a flex item will grow relative to the rest of the flex items.\n\nThe last item stretches to fill the remaining space. Item 3 below has `flex-grow` set to `5` which means it will grow up to 5 times more than the other items or until the container is filled.\n\n<img src=\"https://images.code.org/0fd52bfb0eaed029b17aea3763cb66b8-image-1707149814516.png\" width=\"500px;\">\n\n# Do This\n\n**In the HTML file:**\n\n1.  Give the third child item a class attribute of \"grow\"\n\n**In the CSS file:**\n\n1.  Add a rule in the CSS file for the third child item using its class attribute as the selector.\n2.  Give the third child item a `flex-grow` property with a value of 5.\n3.  Resize the Preview Window to see the size change accordingly.\n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/2a31f9874fd0e4b956c438b291b4fb28-image-1708194627627.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n<br>\n\n::: details [**Show Me How To Resize The Preview Window**]\n\n<img src=\"https://images.code.org/3af3419482a8b0d3c7d8929e61547c21-image-1705694267212.gif\" style=\"width: 250px\">\n\n:::\n\n<br>\n\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a> when needed!**\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/13/levels/3": {
    "long_instructions": "# Flex-shrink\n\nThe `flex-shrink` property sets the shrink factor for a flex item. This is used when items do not fit inside a container. Just like `flex-grow`, the `flex-shrink` property sets the shrinkage relative to other items.\n\nThe last item has a `flex-shrink` of 4. This means it will shrink up to 4 times or until the container is filled.\n\n<img src=\"https://images.code.org/1d3762f9bd00910147eab3cf089b1a53-image-1707150013873.png\" style=\"width:600px;\">\n\n# Do This\n\n**In the HTML file:**\n\n1.  Give the 3rd child item a class attribute of \"shrink\"\n\n**In the CSS file:**\n\n1.  Add a rule in the CSS file for the third child item using its class attribute as the selector.\n2.  Give the third child item a `flex-shrink` property with a value of 4.\n3.  Resize the Preview Window to see the size change accordingly.\n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/2dd301c0f539d40b9f2a34c1e0caf8f7-image-1708194795663.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n<br>\n\n::: details [**Show Me How To Resize The Preview Window**]\n\n<img src=\"https://images.code.org/3af3419482a8b0d3c7d8929e61547c21-image-1705694267212.gif\" style=\"width: 250px\">\n\n:::\n\n<br>\n\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a> when needed!**\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/13/levels/4": {
    "long_instructions": "# Order Property\n\nSince Flex is a layout system that arranges items in rows and columns, the position of each item can be specified with the `order` property. The `order` property sets the item order relative to the other items inside the container.\n\nEach items inside the container in the image below has set its own `order`.\n\n<img src=\"https://images.code.org/3e5855bb042ec23279cd6f7c48d183e0-image-1707768941755.png\" style=\"width:600px;\">\n\n# Do This\n\n**In the HTML file:**\n\n1.  Give each child item inside the \"flex-order\" parent a specific class attribute:\n    -   Give the first item the class attribute \"item-a\"\n    -   Give the second item the class attribute \"item-b\"\n    -   Give the third item the class attribute \"item-c\"\n    -   Give the fourth item the class attribute \"item-d\"\n\n**In the CSS file:**\n\n1.  Add a rule in the CSS file for each of the child items using their class attribute as the selector.\n2.  Set each item's order using the `order` property:\n    -   Set the order of \"item-a\" to be `3`\n    -   Set the order of \"item-b\" to be `2`\n    -   Set the order of \"item-c\" to be `4`\n    -   Set the order of \"item-d\" to be `1`\n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/c4332742b74e3c62c41378bf896cb247-image-1708195178617.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n<br>\n\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a> when needed!**\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/13/levels/5": {
    "long_instructions": "# Align-self\n\nThe `align-self` property aligns an item in a flex container. It is important to remember, that this property _overrides_ the container's `align-items` value.\n\nThe second item in the image below has an `align-self` value of `flex-end`.\n\n<img src=\"https://images.code.org/878fc7cab1febedb425fcc9b6a548576-image-1707153107070.png\" style=\"width:600px;\">\n\n# Do This\n\n**In the HTML file:**\n\n1.  Give the second child item inside the \"flex-align\" parent a class attribute of \"align\"\n\n**In the CSS file:**\n\n1.  Add a rule in the CSS file for the second child item using its class attribute as the selector.\n2.  Give the item the `align-self` property.\n3.  Try out the different values: \n    -   `flex-end`\n    -   `flex-start`\n    -   `center`\n    -   `stretch`\n    -   `baseline` _(you will only see a visual difference with this value if the items have different heights)_\n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/b04422f4497e4d969c0c929321e998e9-image-1708195354299.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n<br>\n\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a> when needed!**\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/13/levels/6": {
    "dsls": {
      "description": "Try out what you've learned on one or more of the following activities.",
      "display_name": "Practice Levels"
    },
    "sublevels": {
      "CSD U2L13 practice_1": {
        "display_name": "Grow Based On Content",
        "bubble_choice_description": "Practice setting the `flex-grow` property based on if you want items to grow equally or not!",
        "long_instructions": "# Grow Based on Container Content!\r\n\r\nLet's do some more practice with the `flex-grow` property! It turns out, this property can do some cool stuff for our children elements!\r\n\r\nFor example, if we give all child elements a value of `0`, this means that the elements will grow based on the content inside it! So, if one element has more content, it will be larger than the others in the container. Pretty handy!\r\n\r\nNow, if we want all of our child elements to take an equal portion of the parent container, then we can give all of our children a `flex-grow` value of `1`! \r\n\r\nLet's give this a try!\r\n\r\n# Do This\r\n\r\n**In the CSS file:**\r\n1. Add the `flex-grow` property to the first container and set the child elements grow based on the content inside the container. _See above description to remember what that value should be._\r\n2. Add the `flex-grow` property to the second container and set the child elements take an equal portion of the parent container. _See above description to remember what the value should be._\r\n\r\n**In the HTML file:**\r\n1. Add some more text to **one** of the paragraph in the **\"grow0\"** container to see the item sizes adjusting based on the content!\r\n   * _This is the default for all Flex items._\r\n\r\n<br>\r\n\r\n::: details [🔎 **Show Me How To Get Started** 🔍]\r\n\r\n<img src=\"https://images.code.org/60de46cd998cf0ce27d03153e647673a-image-1708195640074.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::\r\n\r\n<br>\r\n\r\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a> when needed!**\r\n\r\n![]()"
      },
      "CSD U2L13 practice_2": {
        "display_name": "Step Layout",
        "bubble_choice_description": "Practice setting the `align-self` property to create some steps!",
        "long_instructions": "<img src=\"https://images.code.org/436a2703e4959673c6232f2669a4d0a8-steps.png\" style=\"float: right; width: 300px;\">\r\n\r\n# Simple Steps\r\n\r\nWe can do some fun stuff without layouts using Flex child properties! Let's practice both the `flex-grow` and `align-self` properties to make us some steps!\r\n\r\n# Do This\r\n\r\n**In the HTML file:**\r\n1. Make note of the class attribute names for each of the paragraph tags in the \"steps\" parent container.\r\n\r\n**In the CSS file:**\r\n1. Add a rule to set all child paragraph elements to take up an equal portion of the parent container.\r\n   - _Hint: you will need to use a child selector. See the \"Help & Tips\" tab to find out more about child selectors._\r\n2. Add a rule set for **each** of the paragraph elements to look like steps.\r\n   - _Hint: you will need to use the `align-self` property for each of the elements._\r\n\r\n<br>\r\n\r\n::: details [🔎 **Show Me How To Get Started** 🔍]\r\n\r\n<img src=\"https://images.code.org/3bd1faf95c594601a1c97a55569f953f-image-1708195963394.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::\r\n\r\n<br>\r\n\r\n\r\n\r\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a> when needed!**\r\n\r\n"
      },
      "CSD U2L13 practice_3": {
        "display_name": "Ordered Steps",
        "bubble_choice_description": "Practice setting the `order` property to order the steps from practice level b!",
        "long_instructions": "<img src=\"https://images.code.org/7678fb60183ec04054c5f5eb9a9c41a6-orderedSteps.png\" style=\"float: right; width: 300px;\">\r\n\r\n# Ordered Steps\r\n\r\nLet's practice ordering our items by changing the order of the steps from the previous practice level b so that they look like the image to the right!\r\n\r\n_You should make sure you have completed the previous practice level b before completing this practice level._\r\n\r\nDon't forget, a value of `0` is the default. Giving a negative value, like `-1` will move the item to the left of the other items and giving a value greater than 0, like `1`, will move the item to the right of the other items. \r\n\r\nAnd of course, we can always give our items a specific number value to order our items in the order we want, like `1`, `2`, `3`, etc.\r\n\r\n# Do This\r\n\r\n**In the CSS file:**\r\n1. Add the `order` property to each of the paragraph child elements to match the image to the right!\r\n\r\n\r\n<br>\r\n\r\n::: details [🔎 **Show Me How To Get Started** 🔍]\r\n\r\n<img src=\"https://images.code.org/b382ff5c92c673cb41539d187033b689-image-1708196235525.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::\r\n\r\n<br>\r\n\r\n\r\n\r\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a> when needed!**\r\n\r\n![]()"
      },
      "CSD U2L13 practice_4": {
        "display_name": "Debug Me!",
        "bubble_choice_description": "Help Mya fix her code!",
        "long_instructions": "<img src=\"https://images.code.org/f87f8c9a96258a34f4863a45d65bfaa5-image-1707328140478.png\" style=\"float: right; width: 300px;\">\r\n\r\n# Debug Me!\r\n\r\nOh no! Mya was making a page on the Earth's Ecosystems but she can't quite get the images in the right place! Please help her debug the code so that her page matches the one in the image to the right!\r\n\r\n\r\n# Do This\r\n\r\n1. Can you find and fix the bugs for each of the image order and alignment layouts in the CSS file to make the page match the image to the right?\r\n   - _Make sure you view the Preview Window in fullscreen to see if it matches!_\r\n   <img src=\"https://images.code.org/dec58ad35b370fd2db9346b8b639d218-image-1707328680065.png\" style=\"width: 250px;\">\r\n\r\n<br>\r\n\r\n<img src=\"https://images.code.org/2e2aa789388abcb84fd701adb5023d9f-image-1707769633508.png\" style=\"width:150px; float: left;\">\r\n\r\n_**Tip:** You might find it helpful to change the `width` of the images to a smaller size while you are debugging so that you can see more images in your Preview Window and see the immediate debugging effects without having to view fullscreen. Just remember to change the `width` back when you find and fix all the bugs!_\r\n\r\n\r\n\r\n<br>\r\n\r\n\r\n\r\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a> when needed!**\r\n\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/13/levels/7": {
    "long_instructions": "<img src=\"https://images.code.org/f76a2fe814e5bd440ee7cad7093bb5ee-image-1707427214244.png\" style=\"float: right; width: 400px; margin: 10px;\">\n\n# Match The Image\n\nZoie is trying to style her web page to match the layout in the image to the right. Can you help her?\n\n# Do This\n\nNotice the order, size, alignment, and spacing of the items in the example image.\n\n1.  Adjust the order of the items to match the example.\n2.  Identify any items that are aligned differently from others within the container and apply `align-self` to achieve the same effect.\n3.  Determine which items need to be larger than others and appy `flex-grow` to thesee items, consider their proportion in the example image.\n\n_Make sure you adjust the Preview Window to see if you've matched the image example._\n\n<br>\n\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a> when needed!**\n\n[][0]",
    "mini_rubric": {
      "rubric_key_concept": "Correct application and understanding of `order`, `align-self`, and `flex-grow` properties are demonstrated.",
      "rubric_performance_level_1": "Added an `order` property to child paragraphs and images to match the layout of the image in the instructions. Added an `align-self` property to paragraphs to match the image in the instructions. Added a `flex-grow` property to paragraph(s) to match the image in the instructions.",
      "rubric_performance_level_2": "Added `order`, `align-self`, and `flex-grow` properties to child paragraphs and images but the result does not exactly match the image in the instructions.",
      "rubric_performance_level_3": "Added either `order`, `align-self`, or `flex-grow` properties to child paragraphs and/or images, but not all of the needed properties to match the image in the instructions. ",
      "rubric_performance_level_4": "There are no `order`, `align-self`, or `flex-grow` properties added for child paragraphs or images in order to match the image in the instructions."
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/13/levels/8": {
    "long_instructions": "# Match the Image Reflection\n\n🤔 Take a minute to reflect on the last level where you were tasked with applying Flexbox child properties to match the image and answer the following questions:\n\n1.  ✔️ How do you think you did according to the Rubric below and why?\n2.  🏁 How did you know how to complete this assessment?\n3.  👍🏼 What was easy about the task? / ❗ What was the most challenging? \n    -   What did you do to overcome the challenging part?\n4.  ❓ What questions do you still have?\n\n<hr>\n\n[][0]",
    "teacher_markdown": "Use this reflection as an opportunity to gain insight into how the students completed the assessment level and the choices they made with using Flexbox children properties as well as identify any misconceptions that should be cleared up."
  },
  "https://studio.code.org/s/csd2-2024/lessons/13/levels/9": {
    "dsls": {
      "description": "Expand your Flexbox skills with these challenges.",
      "display_name": "Challenge Levels"
    },
    "sublevels": {
      "CSD U2L13 challenge_1": {
        "display_name": "Flex-basis",
        "bubble_choice_description": "Learn about another Flex child property that determines the size of your item!",
        "long_instructions": "# Flex-basis\r\n\r\n`flex-basis` is another child Flex property that is used to establish the size of your item. Think of it as the same thing as defining an element's `width`.\r\n\r\nThe default value for this property is `auto` which sets the **ideal size of the element based on its content**. We can also set a specific size for our elements by defining the value of `flex-basis`. \r\n\r\n# Do This\r\n\r\n**In the CSS file:**\r\n1. Add the `flex-basis` property to the first container and set value to `auto`\r\n   - _This will set the \"ideal size\" of the element based on its content._\r\n2. Add the `flex-basis` property to the second container and set value to `150px`\r\n   - _This will explicitly set the size of the element to `150px`\r\n\r\n**In the HTML file:**\r\n1. Add some more text to **one** of the paragraphs in the **\"basis-auto\"** container. \r\n   * Notice how the element will expand as much as it can while still keeping the other two elements at their ideal size based on their content.\r\n   * _This is the default for all Flex items._\r\n2. Add some more text to **one** of the paragraphs in the **\"basis-fixed\"** container.\r\n   * Notice how the element's width does not change since you set it to be 150px.\r\n\r\n<br>\r\n\r\n\r\n\r\n**Don't forget to add this property to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a>!**\r\n\r\n"
      },
      "CSD U2L13 challenge_2": {
        "display_name": "Flex Shorthand",
        "bubble_choice_description": "\"Flex\" your skills and learn how to combine `flex-grow`, `flex-shrink`, and `flex-basis` into shorthand!",
        "long_instructions": "# Flex Property\r\n\r\nThe \"flex\" property is the shorthand for `flex-grow`, `flex-shrink` and `flex-basis` combined into one line. When we use it in CSS, it looks like this:\r\n\r\n```\r\ndiv {\r\n  flex: 1 0 auto;\r\n}\r\n```\r\n\r\nThis example sets the `flex-grow` to 1, the `flex-shrink` to 0, and the `flex-basis` to auto. An easy way to think of this and remember the order is to imagine you are setting the **\"max\"**, **\"min\"**, and **\"ideal size\"**. \r\n\r\n_Check out the previous challenge level or the \"Help & Tips\" tab to learn about `flex-basis`!_\r\n\r\nLet's check out what some commonly used value combinations for the `flex` property will do!\r\n\r\n# Do This\r\n\r\n**In the CSS file:**\r\n\r\n::: details [1. Set the child elements of \"flex1\" to not grow when there is free space, to shrink when there is not enough space, and their size to be based on their content _(expand me to get more instructions)_]\r\n- **Add the `flex` property to the \"flex1\" child elements with the following three values:**\r\n   - **Set the first \"grow\" value to 0.** This will make the items _inflexible_ when there is some free space left in the container. \r\n   - **Set the second \"shrink\" value to 1.** This will allow the elements to shrink to their minimum size when there is not enough space in the container. \r\n   - **Set the third \"ideal size\" value to \"auto\".** This will size the items based on their content.\r\n:::\r\n\r\n<br>\r\n\r\n::: details [2. Set the child elements of \"flex2\" to grow to absorb any extra space, to shrink when there is not enough space, and their size to be based on their content _(expand me to get more instructions)_]\r\n- **Add the `flex` property to the \"flex2\" child elements with the following three values:**\r\n   - **Set the first \"grow\" value to 1.** This will make the items absorb any extra space left in the container. \r\n   - **Set the second \"shrink\" value to 1.** This will allow the elements to shrink to their minimum size when there is not enough space in the container. \r\n   - **Set the third \"ideal size\" value to \"auto\".** This will size the items based on their content.\r\n:::\r\n\r\n<br>\r\n\r\n::: details [3. Set the child elements of \"flex3\" to not grow when there is free space, to not shrink when there is not enough space, and their size to be based on their content _(expand me to get more instructions)_]\r\n- **Add the `flex` property to the \"flex3\" child elements with the following three values:**\r\n   - **Set the first \"grow\" value to 0.** This will make the items _inflexible_ when there is some free space left in the container. \r\n   - **Set the second \"shrink\" value to 0.** This will not allow the elements to shrink even in an overflow situation. \r\n   - **Set the third \"ideal size\" value to \"auto\".** This will size the items based on their content.\r\n:::\r\n\r\n<br>\r\n\r\n4. Resize the Preview Window to see the differences between the three layouts. \r\n   - Make sure you fully expand the Preview Window as well as shrink the window to be very, very small.\r\n\r\n\r\n<br>\r\n\r\n\r\n\r\n**Make sure to add this to your <a href=\"https://docs.google.com/document/d/1lrkMGcPwjKo4g5uyvVfaXpFb7kRUfdtqcsqLRtaDWYM/edit?usp=sharing\">Flexbox Children Cheat Sheet</a>!**\r\n\r\n"
      },
      "CSD U2L13 challenge_3": {
        "display_name": "Create a gallery",
        "bubble_choice_description": "Are you ready for the challenge of creating a gallery of images and text?",
        "long_instructions": "<img src=\"https://images.code.org/64f4b332b22925829e3c59594b59e805-image-1707240051330.png\" style=\"float: right; width: 400px;\">\r\n\r\n# Info Card Layout Challenge\r\n\r\nWhen we start putting elements into containers within containers and using Flexbox properties and children properties, we unlock the ability to give our web pages some cool layouts! \r\n\r\nLet's see if we can turn the bottom half of this page into a nice, image and info gallery like the image on the right!\r\n\r\n# Do This\r\n\r\n::: details [**In the HTML file:**]\r\n1. Find the \"gallery\" container.\r\n2. Add a `div` container around each paragraph in the gallery with the class attribute \"info\"\r\n3. Add a `div` container around each image in the gallery with the class attribute \"image\"\r\n4. Add a `div` container around each of the image and paragraph groups with the class attribute \"image-card\"\r\n\r\n**_The `div` tags for the first two groups of images and paragraphs have been done for you. Use them as examples for the remaining four groups of images and paragraphs._**\r\n:::\r\n\r\n<br>\r\n\r\n::: details [**In the CSS file:**]\r\n1. Establish Flex layout and \"wrap\" for the \"gallery\" container.\r\n2. Set the content of the \"image-card\" to grow at a value of 1 so they all grow at the same rate.\r\n3. Establish Flex layout for the \"image-card\" so that _its_ child elements can use Flex too\r\n4. Set the \"info\" container content to align itself to the center.\r\n\r\n:::\r\n\r\n<br>\r\n\r\n::: details [**EXTRA CHALLENGE**]\r\nCan you figure out how to set the order of the \"image-card\" for the giant squid to be the first image in the gallery, just like the image above?\r\n\r\n_Hint: You will probably have to give the \"image-card\" a different class attribute in order to set its order! 🤔 Hmmm ... but then how will it continue to have the same properties as the \"image-card\"?_ 🤔\r\n:::\r\n\r\n<br>\r\n\r\n_Make sure you click on the \"expand\" icon often to see the web page in full screen._ <br><img src=\"https://images.code.org/567dfb99176eca65ae2f69fd18c22448-image-1707239268931.png\" style=\"width: 250px;\">\r\n\r\n![]()"
      },
      "CSD web flex2 freeplay_2024": {
        "display_name": "Add to your Web Page!",
        "bubble_choice_description": "Use your new knowledge to add to the web page you started in a previous challenge level",
        "long_instructions": "# Add More Flex Layout to Your Webpage\r\n\r\nUse your new knowledge and skills to add to the page you started in Lesson 6 about something you enjoy! The webpage you created for that lesson in Level 11, challenge f has been transferred below - add additional Flexbox layouts to your webpage!"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/14/levels/1": {
    "dsls": {
      "description": "Demonstrate your skills with one of these users.",
      "display_name": "Chapter 1 Project - Option 1 Choices"
    },
    "sublevels": {
      "CSD U2L14 Option 1-1": {
        "display_name": "User: Angelina",
        "bubble_choice_description": "Angelina would like you to style her page on creating comic books.",
        "long_instructions": "# User: Angelina\r\n\r\nAngelina creates comic books and would like you to style her “A Beginner’s Guide to Comic Book Creations” page to look like the sketch on pages 4-5 of your project guide.\r\n\r\n# Do This\r\n\r\n**In the HTML file:**\r\n1. Add class names to elements that will need to be styled differently from others of the same kind.\r\n\r\n\r\n**In the CSS file:**\r\n1. Add needed rules for your `div` containers to establish Flex layout where needed to meet your user's requests.\r\n2. Add needed Flex properties to achieve your user's desired layout.\r\n3. Add your user's requested styles to images and/or paragraphs.\r\n"
      },
      "CSD U2L14 Option 1-2": {
        "display_name": "User: Ken",
        "bubble_choice_description": "Ken would like you to style his page about his soccer club.",
        "long_instructions": "# User: Ken\r\n\r\nKen has a soccer club and would like you to style his \"Lightining Strikers FC\" page to look like the sketch on page 6 of your project guide.\r\n\r\n# Do This\r\n\r\n**In the HTML file:**\r\n1. Add class names to elements that will need to be styled differently from others of the same kind.\r\n\r\n**In the CSS file:**\r\n1. Add needed rules for your div containers to establish Flex layout where needed to meet your user's requests.\r\n2. Add needed Flex properties to achieve your user's desired layout.\r\n3. Add your user's requested styles to images and/or paragraphs.\r\n"
      },
      "CSD U2L14 Option 1-": {
        "display_name": "User: Jamila",
        "bubble_choice_description": "Jamila would like you to style her page about endangered species awareness.",
        "long_instructions": "# User: Jamila\r\n\r\nJamila has a passion for animals and would like you to style her \"Wild Guardian\" page about endangered species to look like the sketch on page 7 of your project guide.\r\n\r\n# Do This\r\n\r\n**In the HTML file:**\r\n1. Add class names to elements that will need to be styled differently from others of the same kind.\r\n\r\n**In the CSS file:**\r\n1. Add needed rules for your div containers to establish Flex layout where needed to meet your user's requests.\r\n2. Add needed Flex properties to achieve your user's desired layout.\r\n3. Add your user's requested styles to images and/or paragraphs.\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/14/levels/2": {
    "dsls": {
      "description": "Demonstrate your skills by modifying the layout of your user's web page.",
      "display_name": "Chapter 1 Project - Option 2 Choices"
    },
    "sublevels": {
      "CSD ch1 project L5 User_2024": {
        "display_name": "Lesson 5 User",
        "bubble_choice_description": "Choose this level if you have been building a web page for a user since Lesson 5.",
        "long_instructions": "# Modify the Web Page Layout\r\n\r\nYou have been working so hard throughout this chapter to style a web page for a user! Everything looks good except your user has requested some modifications to the layout of the page (_a very common request of web developers_).\r\n\r\nOkay web developer ... go tackle this challenge!\r\n\r\n# Do This\r\n1) Add needed `div` containers that will allow you to apply Flex layouts as needed.\r\n   - _This may require you to move around some of your HTML content._\r\n2) Add classes as needed to your containers and/or other HTML elements that will require a different style than others of the same type.\r\n3) Add rule sets and properties in your CSS file to modify the layout according to your user's requests.\r\n4) Make sure you use comments and white space to ensure readability. \r\n5) Double check your user's requests to ensure you have made all requested modifications."
      },
      "CSD L14_Savannah_2024": {
        "display_name": "User: Savannah",
        "bubble_choice_description": "Choose this level if you previously styled Savannah's Animal Shelter web page!",
        "long_instructions": "# Modify the Web Page Layout\r\n\r\nYou have been working so hard throughout this chapter to style a web page for a user! Everything looks good except your user has requested some modifications to the layout of the page (_a very common request of web developers_).\r\n\r\nOkay web developer ... go tackle this challenge!\r\n\r\n# Do This\r\n1) Add needed `div` containers that will allow you to apply Flex layouts as needed.\r\n   - _This may require you to move around some of your HTML content._\r\n2) Add classes as needed to your containers and/or other HTML elements that will require a different style than others of the same type.\r\n3) Add rule sets and properties in your CSS file to modify the layout according to your user's requests.\r\n4) Make sure you use comments and white space to ensure readability. \r\n5) Double check your user's requests to ensure you have made all requested modifications."
      },
      "CSD L14_Sofia_2024": {
        "display_name": "User: Sofia ",
        "bubble_choice_description": "Choose this level if you previously styled Sofia's computer repair and technology services web page!",
        "long_instructions": "# Modify the Web Page Layout\r\n\r\nYou have been working so hard throughout this chapter to style a web page for a user! Everything looks good except your user has requested some modifications to the layout of the page (_a very common request of web developers_).\r\n\r\nOkay web developer ... go tackle this challenge!\r\n\r\n# Do This\r\n1) Add needed `div` containers that will allow you to apply Flex layouts as needed.\r\n   - _This may require you to move around some of your HTML content._\r\n2) Add classes as needed to your containers and/or other HTML elements that will require a different style than others of the same type.\r\n3) Add rule sets and properties in your CSS file to modify the layout according to your user's requests.\r\n4) Make sure you use comments and white space to ensure readability. \r\n5) Double check your user's requests to ensure you have made all requested modifications."
      },
      "CSD L14_Pedro_2024": {
        "display_name": "User: Pedro ",
        "bubble_choice_description": "Choose this level if you previously styled Pedro's makeup line web page!",
        "long_instructions": "# Modify the Web Page Layout\r\n\r\nYou have been working so hard throughout this chapter to style a web page for a user! Everything looks good except your user has requested some modifications to the layout of the page (_a very common request of web developers_).\r\n\r\nOkay web developer ... go tackle this challenge!\r\n\r\n# Do This\r\n1) Add needed `div` containers that will allow you to apply Flex layouts as needed.\r\n   - _This may require you to move around some of your HTML content._\r\n2) Add classes as needed to your containers and/or other HTML elements that will require a different style than others of the same type.\r\n3) Add rule sets and properties in your CSS file to modify the layout according to your user's requests.\r\n4) Make sure you use comments and white space to ensure readability. \r\n5) Double check your user's requests to ensure you have made all requested modifications."
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/14/levels/3": {
    "dsls": {
      "description": "Demonstrate your skills and knowledge by building a webpage for a new user from start to finish!",
      "display_name": "Chapter 1 Project - Option 3"
    },
    "sublevels": {
      "CSD U2 upload images_2024": {
        "display_name": "Step 1: Add User's Images",
        "bubble_choice_description": "Add your user's images to your project.",
        "long_instructions": "# Upload Images\r\n\r\nFirst, you'll need to upload all of your images into your project.\r\n\r\n<a href=\"https://drive.google.com/drive/folders/14tduKS_9kzp-Aa2hgiU7NWmCum-hs4pt?usp=drive_link\" target=\"_blank\">Click here</a> to view and download the images Angelina would like on her comic book web page.\r\n\r\n<a href=\"https://drive.google.com/drive/folders/1XxG1RTn3pdY_QadltVsf6bTnIYkUNn6Y?usp=drive_link\" target=\"_blank\">Click here</a> to view and download the images Ken would like on his soccer club web page.\r\n\r\n<a href=\"https://drive.google.com/drive/folders/1qcS9LwMziMCIXQ49DbnjPtzmewdAMXpD?usp=drive_link\" target=\"_blank\">Click here</a> to view and download the images Jamila would like on her endangered species web page.\r\n\r\n***If YOU are the user, you'll need to go find images for your web page and upload them.***\r\n\r\n# Do This\r\n1) Upload all of the images you will need based on your user's wireframe design in your project guide.\r\n* Make sure each image file name uses good naming conventions\r\n"
      },
      "CSD U2 add content_2024": {
        "display_name": "Step 2: Add User Content",
        "bubble_choice_description": "Next step is to add your user's content to the web page.",
        "long_instructions": "# Add HTML\r\n\r\nNext, you need to add the HTML to your page. Refer to the handout with the web page content your user would like on their web page.\r\n\r\n# Do This\r\n1) Add content with HTML to make the page you sketched in your project guide.\r\n* Double check that the page has everything your user wants, and make any changes you need.\r\n"
      },
      "CSD U2 CSS_2024": {
        "display_name": "Step 3: Add Style",
        "bubble_choice_description": "Finally, add your user's style requests and layout to the page.",
        "long_instructions": "# Add Styles\r\n\r\nNext, style the page according to your user's requests and your plan. Refer to your user's design sketch in your project guide.\r\n\r\n# Do This\r\n1) In the stylesheet, add CSS rule sets for your tags.\r\n* Check to make sure that the page looks right, then make any adjustments"
      },
      "CSD U2 project review_2024": {
        "display_name": "Step 4: Review The Page",
        "bubble_choice_description": "You're almost ready to publish your user's web page! Let's review it first!",
        "long_instructions": "# Review Your Project\r\n\r\nYou're almost ready to publish the web page for your user, but you should check one more time that you have fulfilled all the requirements for this project.\r\n\r\n# Do This\r\n1) Check that your project includes everything your user asked for - including content, style, and layout requests.\r\n2) Make sure you used comments and whitespace to make your website readable.\r\n3) Make sure you included image citations.\r\n3) If _you_ were the user, check that you are comfortable sharing all the information that's on your site.\r\n   - Check that all of your images are correctly attributed, and that you have the right to put them on your site.\r\n4) Ask a classmate to help you find any potential problems with your site.\r\n"
      },
      "CSD U2 project share_2024": {
        "display_name": "Step 5: Publish The Page",
        "bubble_choice_description": "It's finished! Time to publish the page you made for your user!",
        "long_instructions": "*This level follows a video that you may have watched with your class. If you missed the video, you can watch it in the Help and Tips tab of this level.*\r\n\r\n# Share Your Project\r\n\r\nIt's time to share your user's web page!\r\n\r\n# Do This\r\n1) Click the ![](https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27 AM.png) button at the top of this page.\r\n* Copy the URL it gives you, and email it to the people you want to see your page.\r\n\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/14/levels/4": {
    "dsls": {
      "title": "CS Discoveries Rapid Survey!"
    },
    "sublevels": {
      "csd-pulse-check-survey-preamble_2019_pilot_2024": {
        "dsls": {
          "markdown": "### Please take a moment to respond to these **five quick questions**.\n\n<small>\n<em>Code.org takes your privacy seriously.</em> Your responses here will be kept <strong>anonymous</strong>. Your teacher can see responses for the whole class, but without names attached.\n</small>\n"
        }
      },
      "csd-pulse-check-survey-1-q1 U2Ch1_2019_pilot_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Strongly agree",
              "correct": true
            },
            {
              "text": "Agree",
              "correct": true
            },
            {
              "text": "Slightly agree",
              "correct": true
            },
            {
              "text": "Neither",
              "correct": true
            },
            {
              "text": "Slightly disagree",
              "correct": true
            },
            {
              "text": "Disagree",
              "correct": true
            },
            {
              "text": "Strongly disagree",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "I like computer science."
            }
          ]
        }
      },
      "csd-pulse-check-survey-1-q2 U2Ch1_2019_pilot_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Strongly agree",
              "correct": true
            },
            {
              "text": "Agree",
              "correct": true
            },
            {
              "text": "Slightly agree",
              "correct": true
            },
            {
              "text": "Neither",
              "correct": true
            },
            {
              "text": "Slightly disagree",
              "correct": true
            },
            {
              "text": "Disagree",
              "correct": true
            },
            {
              "text": "Strongly disagree",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "I have the ability to learn computer science."
            }
          ]
        }
      },
      "csd-pulse-check-survey-1-q3 U2Ch1_2019_pilot_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Strongly agree",
              "correct": true
            },
            {
              "text": "Agree",
              "correct": true
            },
            {
              "text": "Slightly agree",
              "correct": true
            },
            {
              "text": "Neither",
              "correct": true
            },
            {
              "text": "Slightly disagree",
              "correct": true
            },
            {
              "text": "Disagree",
              "correct": true
            },
            {
              "text": "Strongly disagree",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "I like this computer science class."
            }
          ]
        }
      },
      "csd-pulse-check-survey-1-q4 U2Ch1_2019_pilot_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Strongly agree",
              "correct": true
            },
            {
              "text": "Agree",
              "correct": true
            },
            {
              "text": "Slightly agree",
              "correct": true
            },
            {
              "text": "Neither",
              "correct": true
            },
            {
              "text": "Slightly disagree",
              "correct": true
            },
            {
              "text": "Disagree",
              "correct": true
            },
            {
              "text": "Strongly disagree",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "I feel comfortable in this computer science class."
            }
          ]
        }
      },
      "csd-pulse-check-survey-1-q5 U2Ch1_2019_pilot_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Strongly agree",
              "correct": true
            },
            {
              "text": "Agree",
              "correct": true
            },
            {
              "text": "Slightly agree",
              "correct": true
            },
            {
              "text": "Neither",
              "correct": true
            },
            {
              "text": "Slightly disagree",
              "correct": true
            },
            {
              "text": "Disagree",
              "correct": true
            },
            {
              "text": "Strongly disagree",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "I want to take more computer science classes in the future."
            }
          ]
        }
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/17/levels/1": {
    "long_instructions": "# Making a Multi-page Site\n\nA web site should include more than one web page, and they should connect to each other.   Here's an example of a project with multiple pages that are connected by hyperlinks (the blue underlined words that take you to another page when you click on them).\n\n# Do This\n\n1.  Use the inspector tool to see the code that creates the hyperlinks on the top of index.html.\n2.  Discuss with your partner how you think that code works."
  },
  "https://studio.code.org/s/csd2-2024/lessons/17/levels/2": {
    "long_instructions": "# Adding Links\n\nThis page is almost working, but one of the pages is not linked.\n\n# Do This\n\n1.  Look at the working links and see how they work.\n2.  Add code that will link from the index page to the Charles Bridge page.\n3.  Add code that will link the Charles Bridge page to the index page.\n\n::: details [**Show Me How**]\n\n<img src=\"https://images.code.org/9952d3e678e24bab44d4d25b83c9f955-image-1677110606717.gif\" style=\"width:500px\">\n\n<br>\n\n**More resources in the \"Help and Tips\" tab**\n\n:::\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/17/levels/3": {
    "long_instructions": "# Naming Links\n\nJust like images and files, links should have clear names that help someone understand what page they are linked to.\n\n# Do This\n\n1.  Read the code or click on the links to see where they go.\n2.  Change the names of the links to make it clear where they will take you."
  },
  "https://studio.code.org/s/csd2-2024/lessons/17/levels/4": {
    "long_instructions": "# Naming New Pages\n\nYou'll need to follow the same rules for naming html pages that you did for naming images.  This page has some problems caused by poorly named HTML files.\n\n# Do This\n\n1.  Click on the links in \"index.html\" and see which ones are broken.\n2.  Change the file names and link `href` attributes so that they follow good naming conventions such as:\n    -   Avoid special characters such as `&`, `?`, `%`, `/`, etc.\n    -   Make sure the name has a specific meaning that helps you know what the page is\n    -   Use dashes (`-`) or underscores (`_`) instead of spaces.\n    -   Keep the names as short as possible and still have a clear meaning.\n3.  Make sure all link are working with the new file names.\n4.  **Bonus:** Add a \"Back to home\" link to the Scotcharoos page."
  },
  "https://studio.code.org/s/csd2-2024/lessons/17/levels/5": {
    "dsls": {
      "description": "Practice your new skills here.",
      "display_name": "Using Hyperlinks"
    },
    "sublevels": {
      "CSD U2 nav bar_2024": {
        "display_name": "Navigation Bar",
        "bubble_choice_description": "Add a navigation bar to all of the web pages.",
        "long_instructions": "# Navigation Bar\r\n\r\nMost web sites use navigation bars to help you find your way around a site.  They should be the same on every page.\r\n\r\n# Do This\r\n1) Look over the navigation bar on \"index.html\".\r\n* Add the same navigation bar to the other three pages."
      },
      "CSD U2 hyperlink practice2_2024": {
        "display_name": "Debug Hyperlinks",
        "bubble_choice_description": "Find and fix all the bugs in each of the hyperlink tags on each html page.",
        "long_instructions": "# Broken Hyperlinks\r\n\r\nNone of the hyperlinks are working on any of the pages for this site. Can you debug the code and fix them all?\r\n\r\n# Do This\r\n\r\n1) Find and fix all the bugs in each of the hyperlink tags on each html page."
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/17/levels/6": {
    "long_instructions": "# Adding New Pages\n\nTo make your multi-page website, you'll need to add multiple pages to your project. To practice, let's split the content on this sample page into two pages and link them together.\n\n# Do This\n\n1.  Add a new HTML file by clicking  [][0].  The new file will appear in the files list on the left side of the workspace.\n2.  Rename the file, either by right clicking it and choosing \"Rename\", or by clicking on it when it's already highlighted.  **Make sure the name is unique, descriptive and ends in \".html\"**.\n3.  Use HTML to fill out your new page. (You can use content from the main page.)\n4.  Link to your new page from \"index.html\"\n5.  Link back to the index from your new page.",
    "mini_rubric": {
      "rubric_key_concept": "Creating a digital artifact, linking within a multi-page site\r\n",
      "rubric_performance_level_1": "A new page has been created and given a unique and descriptive name ending in “.html”. There is a link from the index.html page to the new page and from the new page back to index.html",
      "rubric_performance_level_2": "There is at least one one working link from one HTML page to another\r\n",
      "rubric_performance_level_3": "There is an `<a>` tag, but syntax errors or problems with the page name may prevent it from working\r\n",
      "rubric_performance_level_4": "No new page was created and there are no links\r\n"
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/17/levels/7": {
    "long_instructions": "# Adding New Pages Reflection\n\n🤔 Take a minute to reflect on the last level where you were tasked with adding new HTML files and creating hyperlinks and answer the following questions:\n\n1.  ✔️ How do you think you did according to the Rubric below and why?\n2.  🏁 How did you know how to complete this assessment?\n3.  👍🏼 What was easy about the task? / ❗ What was the most challenging? \n    -   What did you do to overcome the challenging part?\n4.  ❓ What questions do you still have?\n\n<hr>\n\n[][0]",
    "teacher_markdown": "Use this reflection as an opportunity to gain insight into how the students completed the assessment level and the choices they made with adding HTML files and hyperlinks as well as identify any misconceptions that should be cleared up."
  },
  "https://studio.code.org/s/csd2-2024/lessons/17/levels/8": {
    "dsls": {
      "description": "Try extra challenges or learn some new code.",
      "display_name": "Creating Links"
    },
    "sublevels": {
      "CSD U2 external links_2024": {
        "display_name": "External Links",
        "bubble_choice_description": "Link to other people's pages on the World Wide Web.",
        "long_instructions": "# Linking External Pages\r\n\r\n\r\nYou can also make links that lead to other websites like Google using the `<a>` tag.\r\n\r\n# Do this:\r\n1) Look at the code that links to Google and see how it works\r\n* Link your favorite websites and tell us why you like them!\r\n\r\n"
      },
      "CSD U2 image links_2024": {
        "display_name": "Images as Links",
        "bubble_choice_description": "Turn your images into links.",
        "long_instructions": "# Images as Links\r\n\r\nYou have learned that the text you type between the `<a>` and `</a>` tags is what the visitors to your page will see and click on when using links. You can actually add other tags and content, such as images, to this space in your code as well.\r\n\r\n# Do this:\r\n1) Look at the code that makes the first two images on the `index.html` page into links.\r\n* Use that same code pattern to turn the second two images into links, too.\r\n\r\n"
      },
      "CSD U2 links buttons_2024": {
        "display_name": "Button Links",
        "bubble_choice_description": "Learn how to style hyperlinks to make them look like buttons",
        "long_instructions": "# Button Links\r\n\r\nTake a look at the image below of the five hyperlinks that have been styled to look like buttons. Can you figure out what properties and values you will need to use to make the links look like this?\r\n\r\n<img src=\"https://images.code.org/d50aa0a8bfa5620990273c394baadeb3-image-1677527856343.png\" style=\"width:350px\">\r\n\r\n# Do This\r\n\r\n1) Find the CSS rule for hyperlinks in your stylesheet.\r\n2) Add the following properties to the hyperlink rule-set with values of your choice:\r\n   * border-style\r\n   * border-color\r\n   * border-radius\r\n   * padding\r\n   * text-decoration\r\n      * *Select \"none\" for this property*\r\n3) Add the optional properties to the hyperlink rule-set with values of your choice to make the buttons more visually appealing:\r\n   * background-color\r\n   * color\r\n\r\n"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/18/levels/1": {
    "long_instructions": "<img src=\"https://images.code.org/55f2ee057f721d2819b2de7ef2d49bff-image-1707238959417.png\" style=\"float: right; width: 300px;\">\n\n# What Do You Notice? What Do You Wonder?\n\nThere are some cool things happening with our hyperlinks! Can you spot them?\n\n# Do This\n\n1.  Hover over the hyperlinks in the Preview Window.\n2.  Click on a hyperlink _very slowly_.\n3.  Discuss with your neighbor - What do you notice? What do you wonder?\n\n**In the CSS file:**\n\n1.  Take a look at the rule sets below the comments that say \"CHECK ME OUT!\"\n2.  Discuss with your neighbor - What do you notice? What do you wonder?\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/18/levels/2": {
    "long_instructions": "# Anchor Tag States\n\nAn anchor (`<a>`) tag has four states:\n\n1.  **link**: when the link has not yet been clicked\n2.  **visited**: when the link has been clicked (clicking a link \"visits\" that linked page, hence the name \"visited\")\n3.  **hover**: when the mouse is hovered over, but not clicked, the link\n4.  **active**: the moment the mouse is actively clicking down on the link\n\nWe style these states using pseudo-classes. In the example below, we specify the anchor element selector, a colon, and the name of the anchor state:\n\n    a:hover {\n      color: yellow;\n    }\n\nLet's give the first two states a try!\n\n# Do This\n\n**In the CSS file:**\n\n1.  Add a rule to style the \"link\" state of the `<a>` element.\n    -   The selector of your rule should look like this: `a:link`\n    -   Add the `color` property with a value of your choice.\n    -   Add the `font-size` property with the value of your choice.\n    -   This will define what your link looks like when it has not been clicked - Add any other properties of your choice.\n\n<br>\n\n2.  Add a rule to style the \"visited\" state of the `<a>` element.\n    -   The selector of your rule should look like this: `a:visited`\n    -   Add the `color` property with a different color than the \"link\" state.\n    -   Add the `font-size` property with a different value than the \"link\" state.\n    -   This will define what your link looks like when it has been clicked - Add any other properties of your choice.\n\n**In the Preview Window:**\n\n1.  Click on the link. A new tab with \"google.com\" should open. Come back to Web Lab to see the changes to the look of your link.\n    -   _You may need to click the \"Refresh and Save\" button to see the \"visited\" style applied to your hyperlink_\n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/c4c850b4e8f10814b57afae9a9ee141f-image-1708196522992.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::"
  },
  "https://studio.code.org/s/csd2-2024/lessons/18/levels/3": {
    "long_instructions": "# Anchor Tag States - \"hover\" & \"active\"\n\nWe applied two of the four states for the anchor (`<a>`) tag in the previous level. Let's try the other two states - \"hover\" and \"active.\"\n\n-   **hover**: when the mouse is hovered over, but not clicked, the link\n-   **active**: the moment the mouse is actively clicking down on the link\n\n# Do This\n\n**In the CSS file:**\n\n1.  Add a rule to style the \"hover\" state of the `<a>` element.\n    -   The selector of your rule should look like this: `a:hover`\n    -   Add the `color` property with a dark color value of your choice.\n    -   Add the `background-color` property with a bright color value of your choice.\n    -   Add the `font-size` property with the value of your choice that is larger than 16px.\n    -   **Optional:** Add the `border-radius` property to give the background color rounded edges.\n    -   This will define what your link looks like when the mouse is hovering over it - Add any other properties of your choice.\n\n<br>\n\n2.  Add a rule to style the \"active\" state of the `<a>` element.\n    -   The selector of your rule should look like this: `a:active`\n    -   Add the `color` property with a different color than the \"hover\" state.\n    -   Add the `background-color` property with a different color than the \"hover\" state.\n    -   Add the `text-decoration-style` property with a value of your choice.\n    -   This will define what your link looks _as it is being clicked_ - Add any other properties of your choice.\n\n**In the Preview Window:**\n\n1.  Click the \"Refresh and Save\" button to make sure your styles have been applied.\n2.  Hover over the link to see your \"hover\" styling. \n3.  **_Slowly_** click on the link to see your \"active\" styling.\n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/658813d064f69739a87cf1285f8d2fab-image-1708196841495.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::"
  },
  "https://studio.code.org/s/csd2-2024/lessons/18/levels/4": {
    "long_instructions": "# Anchor Pseudo-class Order\n\nIt is recommended that if you are going to use all four states for an anchor tag, you create your rule sets in CSS in the following order:\n\n1.  link\n2.  visited\n3.  hover\n4.  active\n\nSetting these out of order on your CSS can create unforeseen actions as the cascading style of CSS can have one property overriding another. In short, if there are competing rule sets, styles declared later typically override those declared earlier.\n\n**One way to remember the right order is with the phrase \"LOVE, HATE\" - LV, HA (Link, Visited, Hover, Active).**\n\n# Do This\n\n**In the CSS file:**\n\n1.  Add a rule for each of the states for the `<a>` element in the right order.\n    -   `a:link`\n    -   `a:visited`\n    -   `a:hover`\n    -   `a:active`\n2.  Style each state with a different color and font size.\n3.  Add any other different styles to each state of your choice.\n\n**In the Preview Window:**\n\n1.  Click the \"Refresh and Save\" button to make sure your styles have been applied.\n2.  Test each state to make sure they work\n    -   Hover over the link to see your \"hover\" styling. \n    -   _Slowly_ click on the link to see your \"active\" styling.\n    -   Click on the link and come back to Web Lab to see if the link changed to your \"visited\" style. \n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/2f5beba5755add94ceae9df3522428f8-image-1708196980711.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/18/levels/5": {
    "long_instructions": "# Combine Pseudo-class with Classes\n\nWhat if you have more than one hyperlink and you want to style them differently? Normally when we have several of the same element but we want to style one of them differently we would give that element a class attribute. Good news! We can do the same thing with pseudo-classes!\n\nTo do this, we would use our class attribute in our selector, instead of the anchor tag like this:\n\n    .special:visited {\n      color: purple;\n    }\n\nLet's try it!\n\n# Do This\n\n**In the HTML file:**\n\n1.  Give the first hyperlink a \"highlight\" class attribute.\n\n**In the CSS file:**\n\n1.  Add a rule for the \"hover\" state of the anchor tag using its \"highlight\" class attribute in the selector.\n    -   `.highlight:hover`\n2.  Style this state with a different background-color and large font size.\n3.  Add any other different styles to each state of your choice.\n\n**In the Preview Window:**\n\n1.  Click the \"Refresh and Save\" button to make sure your styles have been applied.\n2.  Hover over the first link to see your \"hover\" styling.\n3.  Hover over the second link to confirm it does not have any \"hover\" styling.\n\n<br>\n\n::: details [🔎 **Show Me How To Get Started** 🔍]\n\n<img src=\"https://images.code.org/e78d1254d55db0e3fc7c07d1d9fddc19-image-1708197128500.gif\" style=\"width:500px\">\n\n**More resources are in the \"Help and Tips\" tab**\n:::\n\n[][0]"
  },
  "https://studio.code.org/s/csd2-2024/lessons/18/levels/6": {
    "dsls": {
      "description": "Practice your new skills!",
      "display_name": "Practice Using Pseudo-classes"
    },
    "sublevels": {
      "CSD U2L18 prac_1": {
        "display_name": "Debug - state order",
        "bubble_choice_description": "Debug the order of the anchor tag pseudo-class states.",
        "long_instructions": "# Debugging State Order\r\n\r\nHelp! Jade is trying to style the four anchor element states using pseudo-classes but some of the states aren't responding as expected. Please help Jade by finding and fixing the bugs!\r\n\r\nWhat I expected to happen | What happened instead\r\n----------|----------------\r\n<img src=\"https://images.code.org/e9aecf969ec1c4043d6c469bfc265f48-image-1707774566474.gif\" style=\"width: 250px\"> | Styles for the \"active\" and \"hover\" states do not appear to be working as defined in the CSS file.\r\n\r\n\r\n# Do This\r\n\r\n1. Find and fix any bugs so that the four states will work appropriately!\r\n\r\n**Don't forget to click \"Refresh and Save\" to see if everything is working as expected.**"
      },
      "CSD U2L18 prac_2": {
        "display_name": "Debug - Pseudo-classes",
        "bubble_choice_description": "Debug the selectors when styling links with pseudo-classes",
        "long_instructions": "# Debugging Pseudo-classes\r\n\r\nHelp! Gloria is trying to style the hyperlink so that the font gets larger and has a different color when you hover over it. But it isn't working. Please help her by finding and fixing the bugs!\r\n\r\nWhat I expected to happen  |\t What happened instead\r\n----------|----------------\r\n**The link has a different style when you hover over and click on it.** | _Nothing_\r\n\r\n\r\n# Do This\r\n\r\n1. Find and fix any bugs so that the hover and active pseudo-classes will work appropriately!\r\n\r\n**Don't forget to click \"Refresh and Save\" to see if everything is working as expected.**"
      },
      "CSD U2L18 prac_3": {
        "display_name": "Debug - Pseudo-classes",
        "bubble_choice_description": "Debug the selectors when combining classes with pseudo-classes",
        "long_instructions": "# Debugging Pseudo-classes\r\n\r\nHelp! Lorenzo is trying to style the hyperlink so that the font gets larger and has a different color when you hover over it. But it isn't working. Please help him by finding and fixing the bugs!\r\n\r\nWhat I expected to happen  |\t What happened instead\r\n----------|----------------\r\n**Each link has its own style and each link's style changes when you hover over them.** | _The links don't have the defined \"link\" state style and their \"hover\" styles aren't working._\r\n\r\n\r\n# Do This\r\n\r\n1. Find and fix any bugs so that the hover pseudo-class will work appropriately!\r\n\r\n**Don't forget to click \"Refresh and Save\" to see if everything is working as expected.**"
      },
      "CSD U2L18 prac_4": {
        "display_name": "Adding Hover Styles",
        "bubble_choice_description": "Practice adding \"hover\" pseudo-class styling to draw attention to the buttons.",
        "long_instructions": "# Adding Hover Styling\r\n\r\nAlana is creating this page about Animal Kingdom oddities. She has links styled as buttons that the user can click on to learn more about each strange animal but she would like each button's style to change when the user hovers over them in the hope that it will draw their attention and motivate them to click on the links. \r\n\r\nCan you help her give each button an appealing, yet unique style?\r\n\r\n\r\n# Do This\r\n\r\n**In the HTML file:**\r\n1. Give each `<a>` tag a different class attribute.\r\n\r\n**In the CSS file:**\r\n1. Add a rule set for each hyperlink using its class attribute in combination with the \"hover\" pseudo-class.\r\n2. Give each hyperlink a unique style. Consider using any of the following suggestions:\r\n   - Adding different font colors\r\n   - Adding different background colors\r\n   - Adding different font styles\r\n   - Increasing the font size\r\n   - Changing the border styles\r\n   - Changing the border colors\r\n   - Changing the border radius\r\n3. Make sure to test the links on each page to ensure they are working as expected.\r\n\r\n**Don't forget to click \"Refresh and Save\" to see if everything is working as expected.**\r\n\r\n<br>\r\n\r\n::: details [🔎 **Show Me How To Get Started** 🔍]\r\n\r\n<img src=\"https://images.code.org/b91cae0431b9f50fae36a1b5af160ae1-image-1708197517853.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::\r\n\r\n![]()"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/18/levels/7": {
    "long_instructions": "# Adding Pseudo-classes\n\nMelissa is making this web page about video game development. Can you help her add all four pseudo-class states for her hyperlink?\n\n# Do This\n\n1.  Add a rule set in the CSS file for each of the pseudo-class states to style the `<a>` element in order to achieve the following styles:\n    -   \"orchid\" color link the same size as the paragraph text\n    -   link turns to the \"whitesmoke\" color with a \"rebeccapurple\" color background and larger text when the mouse hovers over it\n    -   link turns red if the user clicks on it\n    -   link turns \"black\" color with the \"orchid\" color background _as the user clicks_ on it\n\n**Don't forget to click \"Refresh and Save\" to see if everything is working as expected.**",
    "mini_rubric": {
      "rubric_key_concept": "Adding all four pseudo-class states for the anchor tag.",
      "rubric_performance_level_1": "Adds all four pseudo-class states for the anchor tag with the specific styles in the directions for each state. States added to the CSS file in the correct order.",
      "rubric_performance_level_2": "Adds all four pseudo-class states for the anchor tag with the specific styles in the directions for each state. One or two of the states are in the wrong order resulting in those styles not affecting the link.",
      "rubric_performance_level_3": "Adds two of the four pseudo-class states for the anchor tag with the specific styles in the directions in the CSS file.",
      "rubric_performance_level_4": "Does not add any of the four pseudo-class states for the anchor tag. "
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/18/levels/8": {
    "long_instructions": "# Adding Pseudo-classes Reflection\n\n🤔 Take a minute to reflect on the last level where you were tasked with adding and styling pseudo-classes and answer the following questions:\n\n1.  ✔️ How do you think you did according to the Rubric below and why?\n2.  🏁 How did you know how to complete this assessment?\n3.  👍🏼 What was easy about the task? / ❗ What was the most challenging? \n    -   What did you do to overcome the challenging part?\n4.  ❓ What questions do you still have?\n\n<hr>\n\n[][0]",
    "teacher_markdown": "Use this reflection as an opportunity to gain insight into how the students completed the assessment level and the choices they made with adding and styling pseudo-classes as well as identify any misconceptions that should be cleared up."
  },
  "https://studio.code.org/s/csd2-2024/lessons/18/levels/9": {
    "dsls": {
      "description": "Enhance your pseudo-class skills!",
      "display_name": "Pseudo-class Challanges"
    },
    "sublevels": {
      "CSD U2L18 chall_1": {
        "display_name": "Hidden Text",
        "bubble_choice_description": "Learn how to use the \"hover\" pseudo-class to hide and reveal text!",
        "long_instructions": "# Simple Hidden Tip with Hover\r\n\r\nNot only can we use the `hover` pseudo-class to draw a user's attention to a hyperlink on our page, but we can also it to **style other elements too**!\r\n\r\nLet's see how we can code our CSS to have a \"tip\" appear when we hover over a `<div>` element.\r\n\r\n# Do This\r\n\r\n**In the CSS file:**\r\n1. Add the following properties to the paragraph rule set:\r\n   - `display: none;`\r\n   - `background-color: yellow;`\r\n2. Add a rule set to style the paragraph child of the div tag with the \"hover\" pseudo-class. \r\n   - Your selector should look like this: `div:hover p`\r\n   - Add the following property: `display: block;`\r\n3. Hover over the `div` to see what happens!\r\n\r\n**Don't forget to click \"Refresh and Save\" to see if everything is working as expected.**"
      },
      "CSD U2L18 chall_2": {
        "display_name": "Image Emphasis",
        "bubble_choice_description": "Learn how to use the \"hover\" pseudo-class to bring a user's attention to an image!",
        "long_instructions": "<img src=\"https://images.code.org/e19b6fd29ec3cad6dd2a99669ff8a145-image-1707950878809.gif\" style=\"width:300px; float:right;\">\r\n\r\n# Image Emphasis with Hover\r\n\r\nNot only can we use the `hover` pseudo-class to draw a user's attention to a hyperlink on our page, but we can also it to **style other elements too**!\r\n\r\nLet's see how we can code our images with the \"hover\" pseudo-class to bring attention to them.\r\n\r\n# Do This\r\n\r\n**In the CSS file:**\r\n1. Add a rule set to style the images with the \"hover\" pseudo-class. \r\n   - Add the following properties:\r\n      - Increased width of the image\r\n      - \"fushia\" border color\r\n      - A defined `border-width` to at least 10px\r\n   - Add any other properties you think will make the image stand out and bring a user's attention to it!\r\n3. Hover over the the images to see what happens!\r\n\r\n**Don't forget to click \"Refresh and Save\" to see if everything is working as expected.**\r\n\r\n"
      },
      "CSD U2L18 chall_3": {
        "display_name": "Revealed Secret",
        "bubble_choice_description": "Learn another way to use the \"hover\" pseudo-class with a `div` tag to reveal text!",
        "long_instructions": "# Reveal The Cracked Message\r\n\r\nNot only can we use the `hover` pseudo-class to draw a user's attention to a hyperlink on our page, but we can also it to **style other elements too**!\r\n\r\nLet's see how we can style a `<div>` element to change the font and background color to make text appear!\r\n\r\n# Do This\r\n\r\n**In the CSS file:**\r\n1. Add a rule set to style the `div`with the \"hover\" pseudo-class. \r\n   - Add the following properties to the rule set:\r\n      - Set the color of the tex to \"black\"\r\n      - Set the background color to \"yellow\"\r\n3. Hover over the `div` to see what happens!\r\n\r\n**Don't forget to click \"Refresh and Save\" to see if everything is working as expected.**"
      },
      "CSD U2L18 chall_4": {
        "display_name": "Responsive Page Elements",
        "bubble_choice_description": "Learn how to create responsive image cards!",
        "long_instructions": "<img src=\"https://images.code.org/13aeb64e1e339b1319ea917c801d19d2-image-1709232083439.gif\" style=\"float: right; width: 350px;\">\r\n\r\n# Transforming Image Cards\r\n\r\nBack in Chapter 1, you learned how to create \"product cards\" - an image gallery with information about each image underneath. With our \"hover\" pseudo-class, we can make these cards even more visually appealing and responsive to our users by using two new properties: `transform` and `transition`. \r\n\r\nThe `transform` property applies 2D or 3D transformation to an element. This property allows you to rotate, scale, and move elements! There are _many_ value options!\r\n\r\nThe `transition` property specifies the duration and time for `transform` property. The syntax of this property looks like this: `transition: property duration timing;`\r\n\r\n_We'll also see how to change our mouse cursor when we hover over an image card using CSS to draw attention to them._\r\n\r\nLet's try this out!\r\n\r\n# Do This\r\n\r\n**In the CSS file:**\r\n1) Add a rule for the \"hover\" pseudo-class for the \"ramen-card\" class.\r\n2) Add the `transform` property with the value of `translateY(-15px)`\r\n   - _This will set the card to move up by 15 pixels._\r\n2) Add the `transition` property to the \"ramen-card\" rule set with a value of `transform 0.3s ease-in-out;`\r\n   - _This will set the type of transition to \"transform\" (which we just set in step 2), with a 0.3 duration for the transition, and to ease in and out of the transition._\r\n4) Add the `cursor` property with a value of `pointer` to the \"ramen-card\" rule set.\r\n\r\n**BONUS:** Play around with different `transform` values! Here's a list of some to try:\r\n- `translateX(px);` - moves the card left or right depending on if the number px is positive or negative\r\n- `translate(x, y);` - moves the card left/right and up/down depending on if the number for eachc px is positive or negative\r\n- `scale(x, y);` - resizes the card in both directions. For example, `scale(1.5, 1.5);` will have your card get bigger by 1.5 on both axis.\r\n- `scaleX(x);` - resizes the card horizontally\r\n- `scaleY(y);` - resizes the card vertically\r\n- `rotate(deg);` - rotates the card by the number degrees indicated. Note: the value in the parenthesis should be written as follows: `rotate(20deg);`\r\n\r\n**HAVE FUN WITH THESE RESPONSIVE TECHNIQUES!**"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lessons/19/levels/1": {
    "long_instructions": "# Upload Images\n\nUpload all of your team's images into your project.\n\n# Do This\n\n1.  Upload all of the images listed in your team's web site plan into your project.\n2.  Double check that each image file name uses good naming conventions.\n3.  Double check that everyone on the team has the exact same images with the exact same names."
  },
  "https://studio.code.org/s/csd2-2024/lessons/20/levels/1": {
    "long_instructions": "# Your Group Project\n\nHere is your group project.  It already has an index page, but you'll need to create all of the other pages.\n\n# Do This\n\n1.  Double check all of the page names in your website plan to make sure they follow good naming conventions.\n    -   Check with the rest of your group if you need to change a page name.\n2.  Create a new page for each of the pages in your website plan.\n3.  Inside each new page, create a temporary paragraph tag that describes the page and who is in charge of it.\n4.  Check to make sure everyone in your group has the exact same list of HTML pages."
  },
  "https://studio.code.org/s/csd2-2024/lessons/20/levels/2": {
    "long_instructions": "# Add Your Content and HTML\n\nNow add all of the HTML you will need for your project, including links to the stylesheet and other pages.\n\nIf you are responsible for the navigation bar, add it here, too.\n\n# Do This\n\n1.  Add HTML to the pages.\n2.  Test your links to make sure that they work.\n3.  Check that all of your images are displaying."
  },
  "https://studio.code.org/s/csd2-2024/lessons/20/levels/3": {
    "long_instructions": "# Share Your Content and HTML\n\nShare your web page with your teammates, and copy and paste the code for their pages into your project.\n\n# Do This\n\n1.  \"Share\" your page, and give the link to your teammates.\n2.  Get the \"Share\" link from each of your teammates and click the \"View Code\" link at the bottom of the screen.\n3.  Copy the HTML from your teammates' pages into your project.\n4.  Copy and paste the correct navigation bar onto each page.\n5.  Check that all of the links and images work correctly."
  },
  "https://studio.code.org/s/csd2-2024/lessons/20/levels/4": {
    "long_instructions": "# Add Your Styles\n\nNow add all of the CSS you are responsible for, including your classes.\n\n# Do This\n\n1.  Add CSS rule sets to the stylesheet.\n2.  Check that all of your pages are displaying the correct styles."
  },
  "https://studio.code.org/s/csd2-2024/lessons/20/levels/5": {
    "long_instructions": "# Share Your Styles\n\nNow share all of the CSS styles and classes with your teammates.\n\n# Do This\n\n1.  Use the \"Share\" link from each of your teammates and click \"View Code\" to see their HTML and CSS.\n2.  Open each of your teammates' stylesheets and copy and paste their code into your stylesheet.\n3.  Check the stylesheet to make sure that there are no conflicts (two rule sets for the same tag or style).\n4.  Check that all of your pages are displaying the correct styles."
  },
  "https://studio.code.org/s/csd2-2024/lessons/20/levels/6": {
    "long_instructions": "# Check Your Work\n\nYour site is done!  Check to make sure it meets the requirements.\n\n# Do This\n\n1.  Check that your site looks the same as your teammates' sites.\n2.  Check that your site includes everything from the project guide.\n3.  Check that your site meets the requirements of the project in the rubric."
  },
  "https://studio.code.org/s/csd2-2024/lessons/21/levels/1": {
    "display_name": "Final Website",
    "long_instructions": "# Use Feedback\n\nNow it's time to use the peer feedback to make your site even better.\n\n# Do This\n\n1.  Use the plan that your team came up with to improve your website."
  },
  "https://studio.code.org/s/csd2-2024/lessons/21/levels/2": {
    "dsls": {
      "title": "End-Of-Unit Survey!"
    },
    "sublevels": {
      "Student End of Unit Survey - Intro+TeacherMD_csd2_2024": {
        "dsls": {
          "markdown": "### Please take a moment to respond to these **three quick questions**.\n\n_Code.org takes your privacy seriously._ Your responses here will be kept <strong>anonymous</strong>. Your teacher can see responses for the whole class, but without names attached.\n",
          "teacher_markdown": "**Teacher End-Of-Unit Surveys:** While your students complete the survey, we would appreciate you completing a quick teacher survey\n\n## [Click Here for Teacher Survey](https://studio.code.org/form/teacher_csd_unit_survey?survey_data%5Bunit_number%5D=2)\n"
        }
      },
      "Student End of Unit Survey - Q1_copy1_2024": {
        "dsls": {
          "answers": [
            {
              "text": "all of the concepts ",
              "correct": true
            },
            {
              "text": "most of the concepts, but not all of them",
              "correct": true
            },
            {
              "text": "about half of the concepts, but not all of them",
              "correct": true
            },
            {
              "text": "some of the concepts, but not most of them",
              "correct": true
            },
            {
              "text": "very few or none of the concepts",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "Thinking about what I learned in this unit, I feel like I understand..."
            }
          ]
        }
      },
      "Student End of Unit Survey - Q2_copy1_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Strongly agree",
              "correct": true
            },
            {
              "text": "Agree",
              "correct": true
            },
            {
              "text": "Slightly agree",
              "correct": true
            },
            {
              "text": "Neither",
              "correct": true
            },
            {
              "text": "Slightly disagree",
              "correct": true
            },
            {
              "text": "Disagree",
              "correct": true
            },
            {
              "text": "Strongly disagree",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "I can really be myself in this computer science class."
            }
          ]
        }
      },
      "Student End of Unit Survey - Q3_copy1_2024": {
        "long_instructions": "What else would you like your teacher to know about this class? For example: what did you like best about the class, or what is one thing that could make the class better?\r\n\r\n(Your responses are anonymous. Your teacher can see responses for the whole class, but without names attached)"
      }
    }
  },
  "https://studio.code.org/s/csd2-2024/lockable/1/levels/1": {
    "dsls": {
      "title": "Web Development Post-Project Test"
    },
    "sublevels": {
      "CSD U2 MC Q1_2024": {
        "dsls": {
          "answers": [
            {
              "text": "HTML",
              "correct": false
            },
            {
              "text": "CSS",
              "correct": true
            },
            {
              "text": "Tag",
              "correct": false
            },
            {
              "text": "Heading",
              "correct": false
            },
            {
              "text": "Element",
              "correct": false
            }
          ],
          "questions": [
            {
              "text": "Which word is best defined as \"a language used to describe how HTML elements should be styled\"?"
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 6**\n"
        }
      },
      "CSD U2 MC Q2_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Change the background color",
              "correct": true
            },
            {
              "text": "Add an image",
              "correct": false
            },
            {
              "text": "Add a link",
              "correct": false
            },
            {
              "text": "Change the font size",
              "correct": true
            },
            {
              "text": "Add text",
              "correct": false
            }
          ],
          "questions": [
            {
              "text": "Which of these tasks are most appropriate for CSS? (Select all that apply)"
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 6, 9, 11**\n\nCSS is used to style a web page. Changing the background color and font size are style changes.\nHTML is used to add content, such as images, links, and text.\n"
        }
      },
      "CSD U2 MC Q3_2024": {
        "dsls": {
          "answers": [
            {
              "text": "![](https://images.code.org/c6bc7e8a8cf8f1657d0a1f64db16166c-Q3A.png)",
              "correct": true
            },
            {
              "text": "![](https://images.code.org/452f76834bf0e2f515609b91e2cc93ab-Q3B.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/fc4436f26aab128b600627593df6fabe-Q3C.png)",
              "correct": true
            },
            {
              "text": "![](https://images.code.org/6d583761b5ad33fead10f5a20fa1dfb8-Q3D.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/47f793758bfc9dfdb7acdbb2cd463bec-Q3E.png)",
              "correct": false
            }
          ],
          "questions": [
            {
              "text": "Which are you more likely to find in a CSS file? (Select all that apply)"
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 6, 9, 11**\n\nIn CSS files, rules are found inside curly braces `{}` and each rule consists of a property name and a value, separated by a colon `:`. HTML tags use `<>`.\n"
        }
      },
      "CSD U2 MC Q4_2024": {
        "dsls": {
          "answers": [
            {
              "text": "![](https://images.code.org/d49981e345a88ce58647add3ba6807bc-Q4A.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/540bb99c455f60eef6b53dbc2a331800-Q4B.png)",
              "correct": true
            },
            {
              "text": "![](https://images.code.org/190cfc23694120427d44f5906d8010f6-Q4C.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/74ea8b1198ccf40d8db98e24bec9d736-Q4D.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/ff1b9a3fb0056055aee686115100e6f4-Q4E.png)",
              "correct": false
            }
          ],
          "markdown": "Given the following website, what would you add to the CSS file so the images of clouds and rainbows have a height of 50 px?\n\n\n![](https://images.code.org/38a38bae67a6e5649ea73a2764789caa-Q4Q.png)\n",
          "questions": [
            {
              "text": " "
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 11**\n\nThe image of clouds and the image of rainbows both have the class weather. To write a style rule-set for that class, the selector for the rule-set has a `.` before the class name.\n"
        }
      },
      "CSD U2 MC Q6_2024": {
        "dsls": {
          "answers": [
            {
              "text": "![](https://images.code.org/dc571a891739ecd66b791a79e791c800-Q5A.png)",
              "correct": true
            },
            {
              "text": "![](https://images.code.org/a0a6bbb84c540cf54a56a18d3c3d7350-Q5B.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/f2e692ea730b4355824599dd81b9c182-Q5C.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/e2ef2fed28f1e1cb61ac4b7a79fa516d-Q5D.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/c2506628884c40faee24f4b963d5b9aa-Q5E.png)",
              "correct": false
            }
          ],
          "markdown": "<img src=\"https://images.code.org/9998bbd054bfd8f796732c6a9b5910dc-Q5Q.png\">\n",
          "questions": [
            {
              "text": "Given this webpage, predict the HTML."
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 3**\n\nHeadings are the different sized section titles throughout a web page. There are different sized headings which are marked by the number next to the h in the heading tag. They go from `<h1>` to `<h6>`.\n",
          "title": "Question 1"
        }
      },
      "CSD U2 MC Q7_2024": {
        "dsls": {
          "answers": [
            {
              "text": "There should not be an `alt` attribute",
              "correct": false
            },
            {
              "text": "`img` should be `image`",
              "correct": false
            },
            {
              "text": "Add a starting quotation mark to the name of the `rainbow.jpg` file",
              "correct": true
            },
            {
              "text": "Add a closing `</img>` tag",
              "correct": false
            },
            {
              "text": "No change is necessary",
              "correct": false
            }
          ],
          "questions": [
            {
              "text": "Debug the following image tag `<img src=rainbow.jpg\" alt=\"a rainbow\">`"
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 8**\n"
        }
      },
      "CSD U2 MC Q8_2024": {
        "dsls": {
          "answers": [
            {
              "text": "![](https://images.code.org/ac762e4fe3140059502bb732b090ad6f-Q7A.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/0fa7bd96dbfa60be99c5dd71ed9951dd-Q7B.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/19afd172367c596ac262dfa63fec531f-Q7C.png)",
              "correct": true
            },
            {
              "text": "![](https://images.code.org/31dc21ab905ced882b83096b77e8c905-Q7D.png)",
              "correct": false
            },
            {
              "text": "![](https://images.code.org/eb3daf7e55fc47da35adce7e68bdfa07-Q7E.png)",
              "correct": false
            }
          ],
          "markdown": "| Webpage      | HTML |\n| ----------- | ----------- |\n| <img src=\"https://images.code.org/09e13c1790fd937ec1aa2d1e54c438b2-CSDunit2csswebpage.png\" style=\"height: 200px\">      | <img src=\"https://images.code.org/97c4c191ff04d6cb949998db4a1e1540-CSDunit2csshtml.png\" style=\"height: 200px\">       |\n",
          "questions": [
            {
              "text": "Given this webpage and HTML, predict the CSS."
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 6, 9**\n\nThe size of `<h1>` is smaller than the size of `<p>`. Since `<h1>` is normally larger than `<p>`, this must mean there are rules in the CSS that change the font-size of one or both of these tags. In addition, `<p>` is the color blue.\n"
        }
      },
      "CSD U2 MC Q10_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Your birthday",
              "correct": false
            },
            {
              "text": "Your address",
              "correct": false
            },
            {
              "text": "Your phone number",
              "correct": false
            },
            {
              "text": "Your name",
              "correct": false
            },
            {
              "text": "All of the above",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "Which of the following is an example of your digital footprint?"
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 4**\n"
        }
      },
      "CSD U2 MC Q11_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Posted anonymously",
              "correct": false
            },
            {
              "text": "Images are high quality",
              "correct": false
            },
            {
              "text": "Lots of ads",
              "correct": false
            },
            {
              "text": "Sources are cited",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "Which of the following elements most likely increase a website's trustworthiness?"
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 16**\n"
        }
      },
      "CSD U2 MC Q12_2024": {
        "dsls": {
          "answers": [
            {
              "text": "Items will wrap from top to bottom",
              "correct": false
            },
            {
              "text": "Items will overflow the container without wrapping",
              "correct": false
            },
            {
              "text": "Items will align vertically until reaching the container's maximum width",
              "correct": false
            },
            {
              "text": "Items will wrap onto a new column beside the first",
              "correct": true
            }
          ],
          "questions": [
            {
              "text": "When `flex-wrap` is set to `wrap` and `flex-direction` is `column`, how will flex items behave in a container that exceeds its height?"
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 12**\n\n`flex-wrap: wrap` will cause the items to wrap onto a new column when the items exceed its height\n"
        }
      },
      "CSD U2 MC Q13_2024": {
        "dsls": {
          "answers": [
            {
              "text": "`align-items: space-between;` and `justify-content: center;`",
              "correct": false
            },
            {
              "text": "`justify-content: space-between;` and `align-items: center;`",
              "correct": true
            },
            {
              "text": "`justify-content: space-around;` and `align-items: flex-start;",
              "correct": false
            },
            {
              "text": "`align-items: space-evenly;` and `justify-content: center;`",
              "correct": false
            },
            {
              "text": "`justify-content: center;` and `align-items: center`",
              "correct": false
            }
          ],
          "markdown": "What Flex properties have been applied to create the layout pictured below?\n\n![](https://images.code.org/c989bcd81ee0840026244f87feaa7e9a-image-1708623399848.png)\n",
          "questions": [
            {
              "text": " "
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 12**\n\n"
        }
      },
      "CSD U2 MC Q14_2024": {
        "dsls": {
          "answers": [
            {
              "text": "It has no effect since `align-items` is set to `flex-start`.",
              "correct": false
            },
            {
              "text": "It overrides `align-items`, aligning the item at the end of the container.",
              "correct": true
            },
            {
              "text": "It makes the item align in the center of the container.",
              "correct": false
            },
            {
              "text": "It causes the item to grow to fill the container.",
              "correct": false
            }
          ],
          "questions": [
            {
              "text": "In a flex container with `align-items: flex-start`, one child item has `align-self: flex-end`. What impact does `align-self` have on this item?"
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 13**\n\n"
        }
      },
      "CSD U2 Match Q1_2024": {
        "dsls": {
          "answers": [
            {
              "text": "specifies the color of text"
            },
            {
              "text": "specifies the size of a font"
            },
            {
              "text": "places an element on the left or right side of the screen and allows text and other elements to wrap around it"
            }
          ],
          "content1": "Match CSS with their definitions",
          "questions": [
            {
              "text": "color"
            },
            {
              "text": "font-size"
            },
            {
              "text": "float"
            }
          ],
          "teacher_markdown": "**Content: Unit 2 Lesson 6, 9, 11**\n\n\n\n"
        }
      },
      "CSD U2 FR Q1_2024": {
        "long_instructions": "What is the purpose of copyright?",
        "teacher_markdown": "**Content: Unit 2 Lesson 8**\r\n\r\nCopyright is intended to protect the rights of content creators. These rights include being recognized as the creator when the work is displayed, or deciding who can use and make money off the work."
      }
    }
  }
}