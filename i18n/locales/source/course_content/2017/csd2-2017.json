{
  "display_name": {
    "https://studio.code.org/s/csd2-2017/stage/3/puzzle/3": "Video: Intro to Web Lab - Part 1",
    "https://studio.code.org/s/csd2-2017/stage/3/puzzle/4": "Explore HTML",
    "https://studio.code.org/s/csd2-2017/stage/3/puzzle/5": "Video: Intro to Web Lab - Part 2",
    "https://studio.code.org/s/csd2-2017/stage/3/puzzle/6": "HTML Tags",
    "https://studio.code.org/s/csd2-2017/stage/4/puzzle/2": "Pair Programming",
    "https://studio.code.org/s/csd2-2017/stage/4/puzzle/3": "Intro to Headings",
    "https://studio.code.org/s/csd2-2017/stage/4/puzzle/4": "Heading Sizes",
    "https://studio.code.org/s/csd2-2017/stage/4/puzzle/6": "Headings and Paragraphs",
    "https://studio.code.org/s/csd2-2017/stage/4/puzzle/7": "Headings in HTML",
    "https://studio.code.org/s/csd2-2017/stage/6/puzzle/6": "Lists in HTML",
    "https://studio.code.org/s/csd2-2017/stage/7/puzzle/2": "Images in HTML",
    "https://studio.code.org/s/csd2-2017/stage/7/puzzle/6": "Creative Commons Search",
    "https://studio.code.org/s/csd2-2017/stage/8/puzzle/7": "Formatting HTML",
    "https://studio.code.org/s/csd2-2017/stage/8/puzzle/8": "Challenge",
    "https://studio.code.org/s/csd2-2017/stage/9/puzzle/2": "Hyperlinks",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/2": "Exploration: Adding Style",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/6": "CSS and Style Sheets",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/11": "CSS Text Properties",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/4": "The Body Element",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/11": "Layout Properties",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/2": "RGB Widget",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/7": "CSS Classes",
    "https://studio.code.org/s/csd2-2017/stage/14/puzzle/2": "Final Personal Website"
  },
  "long_instructions": {
    "https://studio.code.org/s/csd2-2017/stage/3/puzzle/2": "<img src=\"https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg\" style=\"width:400px; float:right\">\n\n# Welcome to Web Lab!\n\nThe platform you are in is called Web Lab. There are three main parts of the screen in Web Lab.\n\n# Do This\n\n-   Try typing something in the workspace.\n-   Press <img src=\"https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png\" style=\"width:150px\"> to see it in the preview area!",
    "https://studio.code.org/s/csd2-2017/stage/3/puzzle/4": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n<details>\n\n<summary><strong>How do I use the Inspector Tool?</strong>\n\n</summary>\n\nThe Inspector Tool is a great way to learn more about unfamiliar code in Web Lab. To turn on the Inspector Tool, click <img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png\" style=\"width:100px\">. You will know that the Inspector Tool is on because the button will turn white and say \"Inspector: On\". Once you turn on the Inspector Tool, you can hover over anything in the preview area and Web Lab will highlight the code that is making that part of the page appear.\n\n</details>\n</div>\n\n# Explore HTML\n\nThis is a web page written in HTML, the language of the web. You'll learn more about how it works, but first explore it by using the Inspector Tool.\n\n# Do This\n\n-   Click the Tip \"How do I use the Inspector Tool?\" on the right to learn how to use the Inspector Tool.\n-   Follow the instructions in the web page to explore the web page and discuss with a partner how it is working.",
    "https://studio.code.org/s/csd2-2017/stage/3/puzzle/7": "# Add Text to the Body\n\nWhen you start any Web Lab project, it will automatically add `<!DOCTYPE>`, `<html>`, `<head>`, and `<body>` tags to your project. When you add content to your projects, you'll need to do it between the `<body>` and `</body>` tags because it should be part of the body of your webpage.\n\n# Do This\n\n-   Write three separate sentences about any topic you like inside of the body tags of your web page.\n-   Hit \"Refresh and Save\" if you don't see the changes in the preview area.\n-   Compare your work with a neighbor. Make sure you're placing code in the same place.",
    "https://studio.code.org/s/csd2-2017/stage/3/puzzle/8": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What is a paragraph element?</strong></summary>\n\nParagraphs are marked by opening(`<p>`) and closing(`</p>`) tags. Paragraphs in HTML can be any length of text from one word to a bunch of sentences. Paragraphs group together sets of sentences and put some space between that group of text and the next group of text.\n\n</details>\n<details>\n<summary><strong>How do I make multiple paragraphs?</strong>\n</summary>\n\nHere's an example of several paragraph tags in a row. This code would be placed inside of the body of your web page.\n\n    <p>This is a paragraph. It has two sentences.</p>\n    <p>This is another paragraph.</p>\n\n</details>\n</div>\n\n# Use Paragraph Tags\n\nThe `<p>` tag or \"paragraph\" tag is placed around text to indicate that it is part of a paragraph. Placing text in a paragraph tag lets the computer know that it should be displayed differently, usually just by spacing it out from other text.\n\n# Do This\n\n-   Place the text you just wrote inside at least two separate paragraphs by surrounding it with `<p>` and `</p>` tags\n-   Compare the results with a neighbor. What has changed about the way your text is displayed?",
    "https://studio.code.org/s/csd2-2017/stage/3/puzzle/9": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>What is a paragraph element?</strong>\n</summary>\nParagraphs are marked by opening( `<p>` ) and closing( `</p>` ) tags. Paragraphs in HTML can be any length of text from one word to a bunch of sentences. Paragraphs group together sets of sentences and put some space between that group of text and the next group of text.\n</details>\n<details>\n<summary>\n<strong>Why does HTML seem to work even when it's broken?</strong>\n</summary>\nHTML is read by your web browser to generate web pages. Since people often make little mistakes when writing their web pages, browsers are programmed to make a best guess of what you intended to do. Sometimes different browsers are even programmed to make different guesses! The only way to ensure your code looks like you intend is make sure you're always using tags correctly.\n</details>\n<details>\n<summary>\n<strong>Why does the code sometimes turn pink?</strong>\n</summary>\n\nWeb Lab is programmed to automatically detect some mistakes in HTML.  When it notices a mistake, it turns that code pink.  The mistake might be in pink, or it might be somewhere before the pink code.  You'll need to carefully debug to find your mistake.\n\n</details>\n</div>\n\n# Debug: Fix the Broken Tags\n\nThis simple web page has some issues which are preventing the content from being displayed correctly. Identify and fix the issues. This practice is also called \"debugging\" your code.\n\n# Do This\n\n-   Fix the broken code so that the web page displays correctly\n-   Compare the problems you fixed with a neighbor",
    "https://studio.code.org/s/csd2-2017/stage/4/puzzle/3": "# Headings\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What are headings?</strong></summary>\n\nHeadings are the different sized section titles throughout a web page. Headings add structure to your web page by breaking it up so its easier for a user to read.\n\n</details>\n<details>\n<summary><strong>How do I make different sized headings?</strong></summary>\n\nHeadings come in 6 different sizes. So far you have primarily used the biggest one: \\<h1>. The number '1' in the HTML tag designates that this is the biggest heading. The smallest heading is \\<h6>. You can also try the \\<h2>, \\<h3>, \\<h4>, and \\<h5> tags, which get smaller as the number gets larger.\n\n</h1>\n</details>\n<details>\n<summary><strong>What is HTML?</strong></summary>\n\nHTML stands for Hypertext Markup Language. HTML is used to add structure to the content of a web page. HTML uses tags to specify where certain structures start and end. These tags are sets of characters not found in the English language so that the content and structure can be differentiated. \n\n</details>\n<details>\n<summary><strong>What is an HTML element?</strong></summary>\n\nAn HTML element is a piece of a website that is marked by a start tag and sometimes closed with an end tag. The element also includes the content inside the tags. For example: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n\n</details>\n<details>\n<summary><strong>What is an HTML tag?</strong></summary>\n\nAn HTML tag is the special set of characters that tells the machine where the start or end of an HTML element is and what type it is.\n\n</details>\n</div>\n\nSo far, you've organized your content into paragraphs.  Another way HTML allows you to organize your code is by using **headings**.  A heading is a short piece of text that goes at the top of a section of content, like a title.\n\nDo This:\n\n-   Find the headings in the web page below and use the Inspector Tool to see the code that makes them.\n-   Make sure you and your partner agree on what the tags do.\n-   Change the code so that \"Drawing\" and \"2 years\" match the headings on the rest of the page.",
    "https://studio.code.org/s/csd2-2017/stage/4/puzzle/4": "# Heading Sizes\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>What are headings?</strong>\n\n</summary>\nHeadings are the different sized section titles throughout a web page. Headings add structure to your web page by breaking it up so its easier for a user to read.\n</details>\n<details>\n<summary><strong>How do I make different sized headings?</strong>\n\n</summary>\nHeadings come in 6 different sizes.  The most common heading is &lt;h1&gt; The number 1 in the HTML tag designates that this is the biggest heading. The smallest heading is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, and &lt;h5&gt; tags which get smaller as the number gets larger.\n</details>\n<details>\n<summary><strong>What is HTML?</strong>\n\n</summary>\nHTML stands for Hypertext Markup Language. HTML is used to add structure to the content of a web page. HTML uses tags to specify where certain structures start and end. These tags are sets of characters not found in the English language so that the content and structure can be differentiated. \n</details>\n<details>\n<summary><strong>What is an HTML element?</strong>\n\n</summary>\nAn HTML element is a piece of a website that is marked by a start tag and sometimes closed with an end tag. The element also includes the content inside the tags. For example: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n</details>\n<details>\n<summary><strong>What is an HTML tag?</strong>\n\n</summary>\n\nAn HTML tag is the special set of characters that tells the machine where the start or end of an HTML element is and what type it is.\n\n</details>\n</div>\n\nHeadings can come in different sizes.  In this page, there are six different sized headings, but they are all mixed up.  Can you and your partner figure out how to fix them?\n\nDo This:\n\n-   Use the inspector tool to figure out what makes the headings different sizes\n-   Make sure you and your partner agree on what the different heading tags do.\n-   Change the tags so that the headings are in order from biggest to smallest, and the text says the correct size, as in the picture below. \n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15 PM.png\" style=\"width:100px; float:left\">",
    "https://studio.code.org/s/csd2-2017/stage/4/puzzle/6": "# Headings and Paragraphs\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What is a paragraph element?</strong>\n</summary>\n\nParagraphs are marked by opening(`<p>`) and closing(`</p>`) tags as well. Paragraphs in HTML can be any length of text from one word to a bunch of sentences. All of your text in your web page should be contained in an HTML element (headings or paragraphs). Paragraphs group together sets of sentences and put some space between that group of text and the next group of text.\n\n</details>\n<details>\n<summary><strong>How do I create multiple paragraphs?</strong>\n</summary>\n\nParagraphs are marked by opening(`<p>`) and closing(`</p>`) tags as well. To create more than one paragraph you will want multiple sets of opening and closing `<p>` tags. For example\n\n<pre>\n&lt;p&gt;\n  This is a paragraph.\n&lt;/p&gt;\n&lt;p&gt;\n  This is another paragraph.\n&lt;/p&gt;\n</pre>\n\n</details>\n<details>\n<summary><strong>What are headings?</strong>\n</summary>\n\nHeadings are the different sized section titles throughout a web page. Headings add structure to your web page by breaking it up so its easier for a user to read.\n\n</details>\n<details>\n<summary><strong>How do I make different sized headings?</strong>\n</summary>\n\nHeadings come in 6 different sizes. So far you have primarily used the biggest one \\<h1>. The number 1 in the HTML tag designates that this is the biggest heading. The smallest heading is \\<h6>. You can also try the \\<h2>, \\<h3>, \\<h4>, and \\<h5> tags which get smaller as the number gets larger.\n\n</details>\n<details>\n<summary><strong>What is HTML?</strong>\n</summary>\n\nHTML stands for Hypertext Markup Language. HTML is used to add structure to the content of a web page. HTML uses tags to specify where certain structures start and end. These tags are sets of characters not found in the English language so that the content and structure can be differentiated. \n\n</details>\n<details>\n<summary><strong>What is an HTML element?</strong>\n</summary>\n\nAn HTML element is a piece of a website that is marked by a start tag and sometimes closed with an end tag. The element also includes the content inside the tags. For example:\n\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n\n</details>\n<details>\n<summary><strong>What is an HTML tag?</strong>\n</summary>\n\nAn HTML tag is the special set of characters that tells the machine where the start or end of an HTML element is and what type it is.\n\n</details>\n</div>\n\nThe author of this page added in a lot of content, but did not think about structure.  All of the text is mashed together.\n\nDo This:\n\n-   Look through the content with your partner and decide what you think the best structure should be.\n-   Use your heading and paragraph tags to code the structure into the page.",
    "https://studio.code.org/s/csd2-2017/stage/4/puzzle/10": "# Start Your Project\n\nNow that you have a plan for your personal website, you can start coding it here.  Don't worry if you can't do everything you want today.  You'll have plenty of chances to improve your work as you learn more about developing websites.\n\n# Do This\n\n-   Use HTML to create the page that you sketched out.  Make sure it includes\n    -   At least **two headings of different sizes**\n    -   At least **one paragraph**\n-   **Reflect** on your page by comparing to your sketch and showing it to your partner",
    "https://studio.code.org/s/csd2-2017/stage/6/puzzle/2": "# Lists\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What are the two types of lists?</strong>\n</summary>\n There are two types of lists in HTML, ordered and unordered lists.\n</details>\n\n<details>\n<summary><strong>What is an unordered list?</strong>\n</summary>\n\nAn unordered list is just a set of bulleted items.\n\nAn unordered list element has the tag `<ul> </ul>`. This is an abbreviation for <strong>U</strong>nordered <strong>L</strong>ist. Each item in the list is marked by a list item element `<li> </li>`. This is an abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list item element is a child element, which means that it goes inside of its parent element, the unordered list.\n\n</details>\n\n<details>\n<summary><strong>How do I make an unordered list?</strong>\n</summary>\n\nMaking an unordered list has two steps: making the list and adding the list items.  To make the unordered list, write the unordered list tags `<ul> </ul>`.  Next, add your list items **inside** the unordered list tags.  To make each list item, use the list item tags `<li> </li>` and write the list item inside the tags.\n\nIt can be helpful to indent your `<li> </li>` tags so it's clear they are contained in the `<ul> </ul>` tags.\n\n</details>\n\n<details>\n<summary><strong>What is an ordered list?</strong>\n</summary>\n\nAn ordered list is a set of bulleted items which are numbered.\n\nAn ordered list element has the tags `<ol> </ol>`. This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist. Each item in the list is marked by a list item element `<li> </li>`. This is an abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list item element is a child element, which means that it goes inside of its parent element, the ordered list.\n\n</details>\n\n<details>\n<summary><strong>How do I make an ordered list?</strong>\n</summary>\n\nMaking an ordered list has two steps: making the list and adding the list items. To make the ordered list, write the ordered list tags `<ol> </ol>`. Next, add your list items **inside** the ordered list tags. To make each list item, use the list item tags `<li> </li>` and write the list item inside the tags.\n\nIt can be helpful to indent your `<li> </li>` tags so it's clear they are contained in the `<ol> </ol>` tags.\n\n</details>\n</div>\n\nYou can also use HTML to make different types of lists on your web page.  This recipe includes two different types of lists, one ordered (with numbers) and one unordered (with bullets).\n\n# Do This\n\n-   Use the inspector tool to see the code that is making the two different kinds of lists.\n-   Make sure you and your partner agree on what the different tags do.\n-   Fix the code so that the second item in each list displays correctly",
    "https://studio.code.org/s/csd2-2017/stage/6/puzzle/3": "# Ordered Lists\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What are the two types of lists?</strong>\n</summary>\n There are two types of lists in HTML, ordered and unordered lists.\n</details>\n<details>\n<summary><strong>What is an ordered list?</strong>\n</summary>\n\nAn ordered list is a set of bulleted items which are numbered.\n\nAn ordered list element has the tag `<ol>` . This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist. Each item in the list is marked by a list item element `<li>`;. This is an abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list item element is a child element, which means that it goes inside of its parent element, the ordered list (`<ol>`).\n\n</details>\n\n<details>\n<summary><strong>How do I make an ordered list?</strong>\n</summary>\n\nMaking an ordered list has two steps: making the list and adding the list items.  To make the ordered list, write the ordered list tags `<ol></ol>`.  Next, add your list items **inside** the ordered list tags.  To make each list item, use the list item tags `<li></li>` and write the list item inside the tags.\n\nIt can be helpful to indent your `<li>` tags so it's clear they are contained in the `<ol>` tag.\n\n</details>\n\n<details>\n<summary><strong>Show me working code.</strong>\n</summary>\n\n<table border=\"1\">\n<tr>\n<td>Example</td>\n<td>Result</td>\n</tr>\n<tr>\n<td><pre> &lt;ol&gt; <br>   &lt;li&gt;Step 1 &lt;/li&gt; <br>   &lt;li&gt;Step 2 &lt;/li&gt; <br>   &lt;li&gt;Step 3 &lt;/li&gt; <br> &lt;/ol&gt; </pre></td>\n<td><img src=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04 PM.png\" style=\"width:200px\"></td>\n</tr>\n</table>\n\n</details>\n</div>\n\nThis page should include an ordered list, but it's missing the list tags.\n\n# Do This\n\n-   Use the `<ol>` and `<li>` tags to structure this content into an ordered list that looks like the one below.\n\n_Hint: There will be NO NUMBERS in your code._ \n\n[][0]",
    "https://studio.code.org/s/csd2-2017/stage/6/puzzle/4": "# Unordered Lists\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What are the two types of lists?</strong>\n</summary>\n There are two types of lists in HTML, ordered and unordered lists.\n</details>\n<details>\n<summary><strong>What is an unordered list?</strong>\n</summary>\n\nAn unordered list is just a set of bulleted items.\n<br /><br />An unordered list element has the tag \\<ul> . This is an abbreviation for <strong>U</strong>nordered <strong>L</strong>ist. Each item in the list is marked by a list item element \\<li>. This is an abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list item element is a child element, which means that it goes inside of its parent element, the unordered list (\\<ul>).\n\n</details>\n\n<details>\n<summary><strong>How do I make an unordered list?</strong>\n</summary>\n\nMaking an unordered list has two steps: making the list and adding the list items.  To make the unordered list, write the unordered list tags `<ul></ul>`.  Next, add your list items **inside** the unordered list tags.  To make each list item, use the list item tags `<li></li>` and write the list item inside the tags.\n\nIt can be helpful to indent your \\<li> tags so it's clear they are contained in the \\<ul> tag.\n\n</details>\n\n<details>\n<summary><strong>Show me working code.</strong>\n</summary>\n\n<table border=\"1\">\n<tr>\n<td>Example</td>\n<td>Result</td>\n</tr>\n<tr>\n<td><pre> &lt;ul&gt; <br>   &lt;li&gt;Red &lt;/li&gt; <br>   &lt;li&gt;Green &lt;/li&gt; <br>   &lt;li&gt;Blue&lt;/li&gt; <br> &lt;/ul&gt; </pre></td>\n<td><img src=\"https://images.code.org/25d4dfc9b6c448d0da305df66aa1dfb7-image-1473444368948.05.32 PM.png\" style=\"width:200px\"></td>\n</tr>\n</table>\n\n</details>\n</div>\n\nThis page should have an unordered list, but it's missing the list tags.\n\n# Do This\n\n-   Use the `<ul>` and `<li>` tags to structure the content into an unordered list like the picture below.\n\n[][0]",
    "https://studio.code.org/s/csd2-2017/stage/6/puzzle/8": "# Create a New Page for Your Website.\n\nHere's your project from before.  You'll be adding another page.  Your new page can be a top 10 list, a recipe, or anything you like.\n\n# Do This\n\n-   Add a new HTML file by clicking  [][0].  The new file will appear in the files list on the left side of the workspace.\n-   Rename the file, either by right clicking it and choosing \"Rename\", or by clicking on it when it's already highlighted.  **Make sure the name is unique, descriptive and ends in \".html\"**.\n-   Use HTML to fill out your new page.  It should include:\n    -   a list\n    -   a heading",
    "https://studio.code.org/s/csd2-2017/stage/7/puzzle/3": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How do I add images?</strong></summary>\n\nThe `<img>` tag allows you to show images on your web page. <br><br>\n\nExample:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the \\<img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. <br><br>\n\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. <br><br>\n\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag. To mark this we put the `/` which usually goes in the close tag at the end of the image tag.\n\n</details>\n<details>\n<summary><strong>Why does an image tag not have a closing tag?</strong></summary>\n\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\n\n</details>\n<details>\n<summary><strong>What is an attribute?</strong></summary>\n\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \n\nFor example \\<img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\n\n</details>\n</div>\n\n# Images\n\nA Dog vs Cat web page has been started for you. The dog image has already been added to the below web page. Use an image tag to add the `cat.jpeg` image to the page below the cat heading.",
    "https://studio.code.org/s/csd2-2017/stage/7/puzzle/4": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How do I add images?</strong>\n</summary>\n\nThe `<img>` tag allows you to show images on your web page. <br><br>\n\nExample:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the \\<img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. <br><br>\n\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. <br><br>\n\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag. To mark this we put the `/` which usually goes in the close tag at the end of the image tag.\n\n</details>\n<details>\n<summary><strong>Why does an image tag not have a closing tag?</strong>\n</summary>\n\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\n\n</details>\n<details>\n<summary><strong>What is an attribute?</strong>\n</summary>\n\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \n\nFor example \\<img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\n\n</details>\n</div>\n\n# The Details Matter\n\nThe `src` attribute needs to point to the _exact_ filename of the image you want to use. That means you need to pay attention to spelling, capitalization, and the file extension. Each of the three images on this page is broken because of an improper `src` attribute. Using the file menu for reference, fix each of the image tags.\n\n_Note: Even though the images are not loading properly, our website is still showing descriptive text of what should be there because we used `alt` attributes. Cool!_",
    "https://studio.code.org/s/csd2-2017/stage/7/puzzle/5": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How do I add images?</strong></summary>\n\nThe `<img>` tag allows you to show images on your web page. <br><br>\n\nExample:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the \\<img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. <br><br>\n\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. <br><br>\n\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag. To mark this we put the `/` which usually goes in the close tag at the end of the image tag.\n\n</details>\n<details>\n<summary><strong>Why does an image tag not have a closing tag?</strong></summary>\n\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\n\n</details>\n<details>\n<summary><strong>What is an attribute?</strong></summary>\n\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \n\nFor example \\<img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\n\n</details>\n</div>\n\n# Uploading Images\n\nYou can upload images that you've found elsewhere using the **Add Image** button. Go find an image of a different type of pet that you like and download it to your computer (using right-click \"Save As\").\n\nOnce you have your images, click [][0] and upload the image from your computer into your project, where you can then use it in your page.\n\n# Do This\n\n-   Upload at least one image into this web page\n-   Use the `<img>` tag to display the image(s) in your website.\n-   Make sure to add an `alt` attribute.",
    "https://studio.code.org/s/csd2-2017/stage/7/puzzle/7": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How do I add images?</strong></summary>\n\nThe `<img>` tag allows you to show images on your web page. <br><br>\n\nExample:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nIn order to tell the browser which file to use, extra information, called an **attribute**, is added to the \\<img> tag inside the brackets. The attribute `src` stands for **s**ou**rc**e and tell the name of the image. Image files names include extensions which tell the computer which type of image they are working with. Common extensions are .jpg, .jpeg, .png. <br><br>\n\nIn addition to have the src attribute, image elements also have the `alt` attribute which describe the image. This is important in case the image doesn’t load or for people who have trouble with their eyesight. <br><br>\n\nAn `<img>` tag is an example of a  **self-closing tag** because it starts and closes in one tag. To mark this we put the `/` which usually goes in the close tag at the end of the image tag.\n\n</details>\n<details>\n<summary><strong>Why does an image tag not have a closing tag?</strong></summary>\n\nAn image tag doesn't need a closing tag because there is no text content which must be wrapped in tags. The content that shows on the screen is specified through the tags attributes.\n\n</details>\n<details>\n<summary><strong>What is an attribute?</strong></summary>\n\nAttributes are extra information included in a tag.  Attributes have names and values. The name tells what type of information is being provided and then the value gives the specific information for that tag. \n\nFor example \\<img> tags have two attributes, src and alt. src specifies the name of the image file and alt tells the browser in readable text what the image is.\n\n</details>\n</div>\n\n# Giving Credit\n\nWhen using a Creative Commons licensed image, you need to give credit to the original creator (this is also called _attribution_). There are lots of ways to provide attribution, but the easiest way is to add text below the image that identifies the creator and website it came from.\n\n# Do This\n\nIn this page we've already added and attributed an image of a frog. Use the Creative Commons search engine to find another image of an amphibian. Add your found image to this page, along with proper attribution, including:\n\n-   The name of the creator (if available)\n-   The website it was found on (e.g. commons.wikimedia.org)\n-   The license it was published under (e.g. CC-BY)",
    "https://studio.code.org/s/csd2-2017/stage/7/puzzle/8": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n<h2>\nChecklist\n</h2>\n\n<input type=\"checkbox\" style=\"float: left\"><span style=\"display: block; margin-left: 20px; margin-bottom: 10px\">Ensure that your image is properly licensed</span>\n<input type=\"checkbox\" style=\"float: left\"><span style=\"display: block; margin-left: 20px; margin-bottom: 10px\">Upload image into Web Lab</span>\n<input type=\"checkbox\" style=\"float: left\"><span style=\"display: block; margin-left: 20px; margin-bottom: 10px\">Create an image tag with a descriptive alt attribute</span>\n<input type=\"checkbox\" style=\"float: left\"><span style=\"display: block; margin-left: 20px; margin-bottom: 10px\">If the image isn't your own, add attribution underneath<br/>\n\n</div>\n\n# Adding Images to Your Site\n\nYou've already created some pages with great content on your website, now you can add some images!\n\n# Do This\n\nUsing either your own images or those found through a Commons Search, add some images to the pages you've already created. Get creative! Use the checklist to the right to keep track of the steps you need to follow when adding images.",
    "https://studio.code.org/s/csd2-2017/stage/8/puzzle/2": "# Debugging\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What is a bug?</strong>\n</summary>\nBugs are mistakes in code which causes it not to work as planned.\n</details>\n<details>\n<summary><strong>What is debugging?</strong>\n</summary>\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug.\n</details>\n<details>\n<summary><strong>What are some examples of bugs?</strong>\n</summary>\n\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\n\n</details>\n</div>\n\nComputer code is written by humans, and all humans make mistakes. Part of being a good computer scientist is finding your mistakes and fixing them. In computer science we call mistakes **bugs**. The process of finding and fixing those bugs is called **debugging**.  Over the next couple levels you are going to work on your debugging skills.\n\n# Do This\n\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56 AM.png\" style=\"float:right;border:black solid 5px;\">\n\n-   Look at the web page code, and discuss with your partner what is causing the following two bugs:\n    -   The heading is not big enough.\n    -   The second item on the list doesn't have a number.\n-   Fix all the bugs in the code so that the final result matches the image on the right.",
    "https://studio.code.org/s/csd2-2017/stage/8/puzzle/3": "# Debugging\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What is a bug?</strong>\n\n</summary>\n\nBugs are mistakes in code which causes it not to work as planned.\n\n</details>\n<details>\n<summary><strong>What is debugging?</strong>\n</summary>\n\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug.\n\n</details>\n<details>\n<summary><strong>What are some examples of bugs?</strong>\n</summary>\n\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\n\n</details>\n</div>\n\nMore debugging practice!  This page is a little more challenging to debug than the last one.\n\n# Do This\n\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38 AM.png\" style=\"float:right;border:5px black solid;width:250px\">\n\n-   Discuss with your partner what you think the bugs are in this page.\n-   Find and fix all the bugs so that your page matches the one on the right.",
    "https://studio.code.org/s/csd2-2017/stage/8/puzzle/4": "# Debugging\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What is a bug?</strong>\n</summary>\n\nBugs are mistakes in code which causes it not to work as planned.\n\n</details>\n<details>\n<summary><strong>What is debugging?</strong>\n</summary>\n\nDebugging is the process of finding and fixing bugs.  Debugging is a problem solving process so use your problem solving steps as you try to debug. \n\n</details>\n<details>\n<summary><strong>What are some examples of bugs?</strong>\n</summary>\n\nBugs can be anything that causes code not to work as planned.  Some examples are misspelling, putting code in the wrong place, using the wrong tag, or forgetting to close a tag.\n\n</details>\n<details>\n<summary><strong>Why does the inspector sometimes stop working?</strong>\n</summary>\n\nSometimes there are so many bugs in the HTML that the inspector cannot read the code properly and it stops working completely, even on the parts of the code that are correct.  Once the bugs are corrected, the inspector will work again.\n\n</details>\n</div>\n\nThis page has images in it. Images make finding bugs a little more tricky. Can you debug this page?\n\n# Do This\n\n-   Discuss with your partner what is causing the bugs in this page.\n-   Fix the bugs so that your page matches the target page shown below.\n\n[][0]",
    "https://studio.code.org/s/csd2-2017/stage/8/puzzle/5": "# Formatting\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What is whitespace?</strong>\n</summary>\n\nWhitespace refers to any character that shows up as a blank space on the screen, such as a space, a tab, or a new line. Whitespace helps separate different parts of the document to make it easier to read.  For example, in HTML code new elements are usually put on a new line, even though it doesn't make any difference in how the page is displayed.\n\n</details>\n<details>\n<summary><strong>What is indentation?</strong>\n</summary>\n\nIndentation is the placement of text farther to the right, or left, to separate it from surrounding text.  Indentation helps to convey the program's structure.  In HTML, elements that are inside other elements are usually indented.  Here is an example:\n\n<pre>\n   &lt;body&gt;\n      &lt;p&gt;This paragraph is inside the \"body\" element.&lt;/p&gt;\n   &lt;/body&gt;\n</pre>\n\n</details>\n<details>\n<summary><strong>What is formatting?</strong>\n</summary>\n\nFormatting is arranging text in a way that makes it easier to understand.  HTML is usually formatted using indentation.  That means that elements that are inside other elements are further to the right in code.  Here is an example:\n\n<pre>\n   &lt;body&gt;\n      &lt;p&gt;This paragraph is inside the \"body\" element.&lt;/p&gt;\n   &lt;/body&gt;\n</pre>\n\n</details>\n<details>\n<summary><strong>Why does the inspector sometimes stop working?</strong>\n</summary>\n\nSometimes there are so many bugs in the HTML that the inspector cannot read the code properly and it stops working completely, even on the parts of the code that are correct.  Once the bugs are corrected, the inspector will work again.\n\n</details>\n</div>\n\nThe way that you write your code can make it easier or harder to find bugs.  If you use **whitespace** and **indentation**, it will make it easier to read and easier to fix.\n\n# Do This\n\n-   Look at the code with your partner and discuss how you should format the code to make it easier to read.\n-   Make the code easier to read by adding new lines and indentation.\n-   Fix all the bugs so that your page matches the target page below.\n\n[][0]",
    "https://studio.code.org/s/csd2-2017/stage/8/puzzle/6": "# Comments\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What is whitespace?</strong></summary>\n\nWhitespace refers to any character that shows up as a blank space on the screen, such as a space, a tab, or a new line. Whitespace helps separate different parts of the document to make it easier to read.  For example, in HTML code new elements are usually put on a new line, even though it doesn't make any difference in how the page is displayed.\n\n</details>\n<details>\n<summary>\n<strong>What is indentation?</strong>\n</summary>\nIndentation is the placement of text farther to the right, or left, to separate it from surrounding text.  Indentation helps to convey the program's structure.  In HTML, elements that are inside other elements are usually indented.  Here is an example:\n<pre>\n   &lt;body&gt;\n      &lt;p&gt;This paragraph is inside the \"body\" element.&lt;/p&gt;\n   &lt;/body&gt;\n</pre>\n</details>\n<details>\n<summary>\n<strong>What is formatting?</strong>\n</summary>\n\nFormatting is arranging text in a way that makes it easier to understand.  HTML is usually formatted using indentation.  That means that elements that are inside other elements are further to the right in code.  Here is an example:\n\n<pre>\n   &lt;body&gt;\n      &lt;p&gt;This paragraph is inside the \"body\" element.&lt;/p&gt;\n   &lt;/body&gt;\n</pre>\n\n</details>\n</div>\n\nYou can add **comments** to your code to explain the different parts of the code and what it should create.  Comments can help you to debug, and will also help other people who are trying to understand your code.\n\n<pre>\n&lt;!-- this is a comment --&gt;\n</pre>\n\n# Do This\n\n-   Look at the code with your partner and find the comments.\n-   Use the comments to help you fix the bugs in the HTML.",
    "https://studio.code.org/s/csd2-2017/stage/8/puzzle/8": "# Challenge\n\nCheck with your teacher before starting on this challenge.\n\nThis page is only partially finished, and it has some bugs.  Luckily, there are comments that should help you to finish the page as the author intended.\n\n# Do This\n\n-   Look at the code and with your partner and discuss what the page should look like.\n-   Work together to finish the page, paying attention to formatting.\n-   Compare with another pair to see whether your pages are the same.",
    "https://studio.code.org/s/csd2-2017/stage/9/puzzle/3": "# Making a Multi-page Site\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What are hyperlinks?</strong>\n</summary>\n\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n<pre>\n&lt;a href=”houses.html”&gt; Unique Houses &lt;/a&gt;\n</pre>\n\n</details>\n<details>\n<summary><strong>How do I add a hyperlink?</strong>\n</summary>\n\nYou can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n<pre>\n&lt;a href=”houses.html”&gt; Unique Houses &lt;/a&gt;\n</pre>\n\n</details>\n</div>\n\nA web site should include more than one web page, and they should connect to each other.   Here's an example of a project with multiple pages that are connected by hyperlinks (the blue underlined words that take you to another page when you click on them).\n\n# Do This\n\n-   Use the inspector tool to see the code that creates the hyperlinks on the top of index.html.\n-   Discuss with your partner how you think that code works.\n-   Click on recipe.html in the files list on the left hand side.  Add a hyperlink to the top of this page that will take you back to index.html.",
    "https://studio.code.org/s/csd2-2017/stage/9/puzzle/4": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>What are hyperlinks?</strong>\n</summary>\n\nHyperlinks can connect to local web pages or external web pages. To add navigation to your website you will need to add hyperlinks which connect your individual web pages. You can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n<pre>\n&lt;a href=”houses.html”&gt; Unique Houses &lt;/a&gt;\n</pre>\n\n</details>\n<details>\n<summary>\n<strong>How do I add a hyperlink?</strong>\n</summary>\n\nYou can **add hyperlinks to your web page using the `<a>` element**.  The text you want to display as the hyperlink goes between the opening and closing hyperlink tags. The `<a>` element has an attribute `href` which is the location to link to.  The location of a local page is just the file path for that page. <br> <br>\n\nFor example to link to the unique houses page you would add the following code inside your `<body>` element. <br><br>\n\n<pre>\n&lt;a href=”houses.html”&gt; Unique Houses &lt;/a&gt;\n</pre>\n\n</details>\n</div>\n\n# Create a Navigation Bar\n\nHere's your project from before.  You'll be linking the two pages by creating a **navigation bar** at the top of the page.  Websites usually have the same navigation bar across all of their pages so you can get back and forth between things on the site.  You can see an example of a navigation bar on <a href=\"https://studio.code.org/projects/weblab/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co/\" target=\"_new\">this page</a>\n\n# Do This\n\n-   In your home page (index.html), add two hyperlinks at the top of the page, one to your lists page, and one to the home page.\n    -   _Even though it might seem strange to link a page to itself, it's less confusing if the navigation bar is exactly the same on every page._\n-   Copy the code for the navigation bar, then add it to the top of your lists page.\n-   Test your links in the preview area by clicking on them.",
    "https://studio.code.org/s/csd2-2017/stage/9/puzzle/6": "# Create and Name Your New Page\n\nBefore you start coding, you should make sure that you have all the pages that you need in your project.\n\n# Do This\n\n-   Create a new HTML page and rename it. (Look at <a href=\"/s/csd2/stage/6/puzzle/8\" target=\"_new\">Lesson 6 Level 8</a> if you've forgotten how.)\n-   Repeat this process for any other pages you want to add.",
    "https://studio.code.org/s/csd2-2017/stage/9/puzzle/7": "# Upload Images\n\nNext, you'll need to upload all of your images into your project.\n\n# Do This\n\n-   Download all the images you want onto your computer. Visit <a href=\"/s/csd2/stage/7/puzzle/5\" target=\"_new\">Lesson 7 Level 5</a> for help if you need it.\n    -   Make sure you have the right to use these images.\n    -   Write down all of the attribution information that you need.\n    -   Upload all of the images into your project.  Visit <a href=\"/s/csd2/stage/7/puzzle/5\" target=\"_new\">Lesson 7 Level 5</a> if you've forgotten how.",
    "https://studio.code.org/s/csd2-2017/stage/9/puzzle/8": "# Add HTML\n\nNext, you should add the HTML to your pages.\n\n# Do This\n\n-   For each of the new pages that you've created, add HTML to make the page you sketched in your project guide.\n-   You may also add more HTML to the pages you've already created.",
    "https://studio.code.org/s/csd2-2017/stage/9/puzzle/9": "# Navigation Bar and Footer\n\nEach of your pages needs a navigation bar and a footer.\n\n# Do This\n\n-   For each page, make sure it has a navigation bar that links to other pages in your site.  For a review of the navigation bar, go to <a href=\"/s/csd2/stage/9/puzzle/4\" target=\"_new\">Lesson 9 Level 4</a>.\n-   For each page, make sure it has a footer at the bottom that explains the copyright information for your page. (Go to <a href=\"https://creativecommons.org/choose/\" target=\"_new\">Creative Commons</a> for help in creating this HTML.)",
    "https://studio.code.org/s/csd2-2017/stage/9/puzzle/10": "# Review Your Project\n\nYou're almost ready to publish your project, but you should check one more time that you have fulfilled all the requirements for this project.\n\n# Do This\n\n-   Check that you are comfortable sharing all the information that's on your site.\n-   Check that all of your images are correctly attributed, and that you have the right to put them on your site.\n-   Check that your project includes everything included in the project rubric.\n-   Use comments and whitespace to make your website readable.\n-   Ask your partner to help you find any potential problems with your site.",
    "https://studio.code.org/s/csd2-2017/stage/9/puzzle/11": "# Share Your Project\n\nIt's time to share your project with the world!\n\n# Do This\n\n-   Click the [][0] button at the top of this page.\n-   Copy the URL it gives you, and email it to the people you want to see your page.",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/2": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n<details>\n\n<summary><strong>How do I switch between files?</strong></summary>\n\nClick the name of the file you want to look at in the menu on the left side of the screen.\n\n</details>\n</div>\n\n# Adding Style\n\nThis Web Lab project is using a new language to add style to the page. With a partner explore both the `index.html` and `style.css` files. Be ready to discuss the following questions.\n\n-   What changes is this new language making to the page?\n-   How is this language different from HTML?\n-   How are the `index.html` and `style.css` files connected?",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/4": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What colors can I use in CSS?</strong></summary>\nCSS includes most common color names (red, blue, green, etc.), and many uncommon ones.  You can see a full list of CSS color names at <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>.  You can still use colors that are not included in the named list, but you will need to use their RGB values.  You can read more about using colors in CSS at <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n</details><details>\n<summary><strong>How does the code work?</strong></summary>\nHere is the code that is making the `h1` heading red:\n\n<pre>h1 {\n  color: red;\n}</pre>\n\n-   `h1` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces.\n-   `color: red;` is the rule that makes the text inside the `h1` tags red.\n    -   `color` is the _property_.  It explains what the rule is about, in this case the text color.\n    -   `red` is the _value_.  It explains how the rule should be applied, in this case making the text red.\n        </details>\n        <details>\n        <summary><strong>Why do I need all the punctuation?</strong></summary>\n        The punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the style sheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\n        </details>\n        <details>\n        <summary><strong>What is a style sheet?</strong></summary>\n        A style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n        </details>\n        <details>\n        <summary><strong>What is CSS?</strong></summary>\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n<pre>h2 {\n   color: blue;\n   font-family: cursive;\n}\n</pre>\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n</details>\n</div>\n\n# CSS and Text Color\n\nThis HTML file uses a style sheet (\"style.css\") to give the page a particular style.  The style sheet contains information about what each of the HTML elements should look like.\n\n-   Find the code in the style sheet (click on \"style.css\" in the files list) that is making the h1 heading red.\n-   Change the code for the color of the h1 heading from `red` to a different color.",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/5": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What colors can I use in CSS?</strong></summary>\n\nCSS includes most common color names (red, blue, green, etc.), and many uncommon ones.  You can see a full list of CSS color names at <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>.  You can still use colors that are not included in the named list, but you will need to use their RGB values.  You can read more about using colors in CSS at <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n\n</details>\n<details>\n<summary><strong>How does the code work?</strong></summary>\nHere is the code that is making the `h1` header red:\n\n<pre>h1 {\n  color: red;\n}</pre>\n\n-   `h1` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces.\n-   `color: red;` is the rule that makes the text inside the `h1` tags red.\n    -   `color` is the _property_.  It explains what the rule is about, in this case the text color.\n    -   `red` is the _value_.  It explains how the rule should be applied, in this case making the text red.\n        </details>\n        <details>\n        <summary><strong>How do I make a new rule-set?</strong></summary>\n\nTo make a new rule set, you'll need a selector and a list of rules.  The selector is the name of the tag you want the rules to be applied to.  The rules are a list of property and value pairs.  You'll also need to pay careful attention to the punctuation in the rule set.  Look at the code below for an example of how the code should look.  You'll need to change the specifics for your page.\n\n<pre>h1 {\n  color: red;\n}</pre>\n\n-   `h1` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces.\n-   `color: red;` is the rule that makes the text inside the `h1` tags red.\n    -   `color` is the _property_.  It explains what the rule is about, in this case the text color.\n    -   `red` is the _value_.  It explains how the rule should be applied, in this case making the text red.\n        </details>\n        <details>\n        <summary><strong>Why do I need all the punctuation?</strong></summary>\n\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the style sheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\n\n</details>\n<details>\n<summary><strong>What is a style sheet?</strong></summary>\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n\n</details>\n<details>\n<summary><strong>What is CSS?</strong></summary>\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n<pre>h2 {\n   color: blue;\n   font-family: cursive;\n</pre>\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n</details>\n</div>\n\n# Making a new CSS rule-set\n\nThe block of code that gives rules for a particular tag is called a _rule-set_.  You can make a new rule set by copying the pattern you see in the rule-set for the `h1` tag.\n\n-   Find the CSS rule-set in the style sheet that determines the styles for the h1 tag.\n-   Using the same pattern, write a new CSS rule-set that will determine the style for the h3 tag.\n-   Add code to set a different color for the h3 tags.",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/7": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How does the code work?</strong></summary>\nHere is the code that is controlling the paragraph text size:\n\n<pre>p {\n  font-size: 14px;\n}</pre>\n\n-   `p` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces. The `p` stands for paragraph.\n-   `font-size: 14px;` is the rule that makes the text inside the `p` tags a particular size.\n    -   `font-size` is the _property_.  It explains what the rule is about, in this case the text size.\n    -   `14px` is the _value_.  It explains how the rule should be applied, in this case making the text 14 pixels big.\n        </details>\n        <details>\n        <summary><strong>What does `px` mean / What is a pixel?</strong></summary>\n\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\n\n</details>\n<details>\n<summary><strong>Why do I need all the punctuation?</strong></summary>\n\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the style sheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\n\n</details>\n<details>\n<summary><strong>What is a style sheet?</strong></summary>\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n\n</details>\n<details>\n<summary><strong>What is CSS?</strong></summary>\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n<pre>h2 {\n   color: blue;\n   font-family: cursive;\n</pre>\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n</details>\n</div>\n\n# Changing text size\n\nYou can control other things besides colors by using other properties.\n\n-   Find the CSS rule-set in the style sheet that determines the style for the paragraph tag.\n-   Change the text size of the paragraphs to be bigger.\n-   Add a new rule to your rule-set for your h3 tag to make the text bigger or smaller.",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/8": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How does the code work?</strong></summary>\n\nHere is the code that is controlling the paragraph font:\n\n<pre>p {\n  font-family: cursive;\n}</pre>\n\n-   `p` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces. The `p` stands for paragraph.\n-   `font-family: cursive;` is the rule that makes the text inside the `p` tags a particular font.\n    -   `font-family` is the _property_.  It explains what the rule is about, in this case the font.\n    -   `cursive` is the _value_.  It explains how the rule should be applied, in this case making the text cursive.\n\n</details>\n<details>\n<summary><strong>What are the possible values for font family?</strong></summary>\n\nYou can choose between \"serif\", \"sans-serif\", \"cursive\", \"fantasy\", and \"monospace\".  You can also try more specific fonts as described in <a href=\"http://www.w3schools.com/cssref/css_websafe_fonts.asp\">W3Schools - CSS Web Safe Font Combinations</a>\n\n</details>\n<details>\n<summary><strong>Why do I need all the punctuation?</strong></summary>\n\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the stylesheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\n\n</details>\n<details>\n<summary><strong>What is a stylesheet?</strong></summary>\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n\n</details>\n<details>\n<summary><strong>What is CSS?</strong></summary>\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n<pre>h2 {\n   color: blue;\n   font-family: cursive;\n</pre>\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n</details>\n</div>\n\n# Changing the Font\n\n-   Find the CSS rule-set in the style sheet that determines the style for the paragraph tag.\n-   Change the font family and choose which one you like the best.\n    -   Choose from \"serif\", \"sans-serif\", \"cursive\", \"fantasy\", and \"monospace\"\n-   Add a font family rule for the h1 or h3 tags.",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/9": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How does the code work?</strong></summary>\nHere is the code that makes the `h1` elements underlined:\n\n<pre>h1 {\n  text-decoration: underline;\n}</pre>\n\n-   `h1` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces. The `p` stands for paragraph.\n-   `text-decoration: underline;` is the rule that makes the text inside the `h1` tag underlined.\n    -   `text-decoration` is the _property_.  It explains what the rule is about, in this case where the line goes.\n    -   `underline` is the _value_.  It explains how the rule should be applied, in this case making the test underlined.\n        </details>\n        <details>\n        <summary><strong>What are the possible values for text decoration?</strong></summary>\n        You can choose between \"underline\", \"overline\", and \"line-through\".  You can read more about the text-decoration property at <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\">W3Schools - CSS text-decoration Property</a>\n        </details>\n        <details>\n        <summary><strong>Why do I need all the punctuation?</strong></summary>\n\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the stylesheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\n\n</details>\n<details>\n<summary><strong>What is a stylesheet?</strong></summary>\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n</details>\n<details>\n<summary><strong>What is CSS?</strong></summary>\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n<pre>h2 {\n   color: blue;\n   font-family: cursive;\n</pre>\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n</details>\n</div>\n\n# Underlining\n\n-   Find the code in the style sheet that makes the h1 tag underlined.\n-   Change the text decoration and see which one you like.\n    -   Choose from \"underline\", \"overline\", and \"line-through\"\n-   Add a text decoration rule for the paragraph or h3 tag.",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/10": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**How does the code work?**\n\n</summary>\nHere is the code that is controlling the paragraph text alignment:\n\n<pre>p {\n  text-align: left;\n}</pre>\n\n-   `p` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces. The `p` stands for paragraph.\n-   `text-align: left;` is the rule that makes the text inside the `p` tags align to the left side of the paragraph.\n    -   `text-align` is the _property_.  It explains what the rule is about, in this case the text alignment.\n    -   `left` is the _value_.  It explains how the rule should be applied, in this case making the text align to the left side of the paragraph.\n        </details>\n        <details>\n        <summary>\n\n**Why doesn't `text-align: left;` do anything?**\n\n</summary>\nMost properties have default values.  The default values are the styles that an element will have automatically, before you add your style sheet.  The default value for `text-align` is `left`, so it doesn't change from how it already looked.\n</details>\n<details>\n<summary>\n\n**What are the possible values for text align?**\n\n</summary>\nYou can choose between \"left\", \"right\", and \"center\".  You can read more about the text-align property at <a href=\"http://www.w3schools.com/cssref/pr_text_text-align.asp\">W3Schools - CSS text-align Property</a>\n</details>\n<details>\n<summary>\n\n**Why do I need all the punctuation?**\n\n</summary>\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the style sheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\n</details>\n<details>\n<summary>\n\n**What is a style sheet?**\n\n</summary>\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n</details>\n<details>\n<summary>\n\n**What is CSS?**\n\n</summary>\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n<pre>h2 {\n   color: blue;\n   font-family: cursive;\n</pre>\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n</details>\n\n</details>\n</div>\n\n# Text Alignment\n\nThe `text-align` property sets the horizontal (side to side) position of the text within each line.\n\n-   Find the \"text-align\" property in the paragraph tag.\n-   Change the paragraph alignment.\n    -   Choose from \"left\", \"right\", and \"center\"",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/13": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What is a style sheet?</strong></summary>\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n</details>\n<details>\n<summary><strong>What is CSS?</strong></summary>\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n<pre>h2 {\n   color: blue;\n   font-family: cursive;\n</pre>\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n</details>\n<details>\n<summary><strong>How do I create a new style sheet?</strong></summary>\nTo create a new style sheet, click on the \"Add CSS\" button above the code area.\n</details>\n<details>\n<summary><strong>What should I name my style sheet?</strong></summary>\n\nYou can name your style sheet anything, but it's better to choose a relevant name, such as \"style.css\" or \"aboutmestyles.css\" so that it's clear what the file is.  Your file should always end in the \".css\" extension.\n\n</details>\n<details>\n<summary><strong>How do I rename a file?</strong></summary>\n\nTo rename a file, you can right click (or control click) on the file name and choose the \"Rename\" option.  This will allow you to type in a new file name.  Clicking on a file name after it is already highlighted will also allow you to rename the file.\n\n</details>\n<details>\n<summary><strong>How do I add a style sheet to a web page?</strong></summary>\n\nTo add a style sheet to a web page, open up the code for the web page.  Inside the head tag, add the following code `<link rel=\"stylesheet\" href=\"style.css\">`.  Then change \"style.css\" to the name of your style sheet.\n\n</details>\n</div>\n\n# Adding a Style Sheet\n\nThis is your project from before.  In the next level, you'll have a chance to add some different styles to it, but first, you need to add a style sheet, name it, and link it to your html page.\n\n1.  Create a new style sheet for your project.\n2.  Rename the style sheet file.\n3.  Add your style sheet to your HTML page.\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/weblab_stylesheet.png\" style=\" max-width:500px\">",
    "https://studio.code.org/s/csd2-2017/stage/10/puzzle/14": "# Adding Styles\n\nNow you can style the text on your personal web site!\n\n-   Open your style sheet and add styling of your choice to your project. Be sure to use at least 3 different CSS properties.\n\n# Checklist\n\n-   At least 3 of the following CSS Properties are used:\n    -   `font-size`\n    -   `font-family`\n    -   `color`\n    -   `text-decoration`\n    -   `text-align`\n\nIf you’ve used at least 3 of the properties from the checklist, you can explore some additional text properties to add to your project.",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/2": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What does the `body` selector do?</strong></summary>\n\nBecause the content of the web page is all inside the `body` tag, the body selector gives style rules for everything on the web page.\n\n</details>\n<details>\n<summary><strong>What does the `border-style` property do?</strong></summary>\n\nThe `border-style` property determines what kind of border (solid, dotted, dashed, etc.) the element has.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\">W3Schools - CSS border-style Property</a>\n\n</details>\n<details>\n<summary><strong>What does the `border-radius` property do?</strong></summary>\n\nThe `border-radius` property determines the radius of the curves at the corners of the element.  A bigger radius makes a bigger, softer curve, and a smaller radius makes a smaller, sharper curve.  A radius of zero makes a regular corner.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\">W3Schools - CSS3 border-radius property</a>\n\n</details>\n<details>\n<summary><strong>What does the `float` property do?</strong></summary>\n\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\">W3Schools - CSS float Property</a>\n\n</details>\n</div>\n\n# Layout and Style\n\n-   Look through web page below for new styles.\n-   Open the style sheet\n-   With your partner, discuss which parts of the CSS code you think are making the page appear different.\n    -   What makes the entire page blue?\n    -   How are the images positioned to the left of all the other elements?\n    -   What made the image corners rounded?\n\nIn the next few levels, you'll be changing and adding new styles on this page.",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/3": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How does the code work?</strong></summary>\n\nHere is the code that is making the background of the page blue:\n\n<pre>body {\n  background-color: lightblue;\n}</pre>\n\n-   `body` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the body element is the entire page.\n-   `background-color: lightblue;` is the rule that makes the entire page light blue.\n    -   `background-color` is the _property_.  It explains what the rule is about, in this case the color of the background.\n    -   `lightblue` is the _value_.  It explains how the rule should be applied, in this case making the background light blue.\n        </details>\n        <details>\n        <summary><strong>What colors can I use in CSS?</strong></summary>\n\nCSS includes most common color names (red, blue, green, etc.), and many uncommon ones.  You can see a full list of CSS color names at <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>.  You can still use colors that are not included in the named list, but you will need to use their RGB values.  You can read more about using colors in CSS at <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n\n</details>\n<details>\n<summary><strong>What does the `background-color` property do?</strong></summary>\n\nThe `background-color` property determines the color of the background of an element.  You can read more about the property at <a href=\"http://www.w3schools.com/cssref/pr_background-color.asp\">W3Schools - CSS background-color Property</a>\n\n</details>\n<details>\n<summary><strong>What if an element inside the page has a different background color from the body?</strong></summary>\n\nYou can see the answer to this question by adding a `background-color` rule to the `p` tag.  The paragraphs will have the background color in the rule for the `p` tag, and the rest of the page will follow the rule for the `body` tag.\n\n</details>\n<details>\n<summary><strong>What is a style sheet?</strong></summary>\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n\n</details>\n<details>\n<summary><strong>What is CSS?</strong></summary>\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n<pre>h2 {\n   color: blue;\n   font-family: cursive;\n</pre>\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n</details>\n</div>\n\n# Background Color\n\n-   Find the code in the style sheet that is making the background of the entire page light blue.\n-   Change the code to make the page a different color.\n-   Try to change the background color of just the paragraphs.",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/5": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n<details>\n\n<summary><strong>What does the `body` selector do?</strong></summary>\n\nBecause the content of the web page is all inside the `body` tag, the body selector gives style rules for everything on the web page.\n\n</details>\n<details>\n<summary><strong>What does the `color` property do?</strong></summary>\n\nThe `color` property specifies the color of the text.  If there’s no text, it won’t do anything. Read more at <a href=\"http://www.w3schools.com/cssref/pr_text_color.asp\"> W3Schools - CSS color Property</a>\n\n</details>\n<details>\n<summary><strong>What does the `text-align` property do?</strong></summary>\n\nThe `text-align` property aligns the text to the left, right, or center. You can read more at <a href=\"http://www.w3schools.com/cssref/pr_text_text-align.asp\">W3Schools - CSS text-align Property</a>\n\n</details>\n<details>\n<summary><strong>What does the `text-decoration` property do?</strong></summary>\n\nThe `text-decoration` property puts a line over, under, or through a piece of text.  You can read more about the property at <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\">W3Schools - CSS text-decoration Property</a>\n\n</details>\n<details>\n<summary><strong>What does the `font-family` property do?</strong></summary>\n\nThe `font-family` property changes the font of the text.  It gives a general description of the type of font that should be used, but each browser might display the font slightly differently.  Read more at <a href=\"http://www.w3schools.com/cssref/pr_font_font-family.asp\">W3chools - CSS font-family Property</a>\n\n</details>\n<details>\n<summary><strong>What does the `font-size` property do?</strong></summary>\n\nThe `font-size` property changes the size of the text.  You can use general terms, such as `small`, `medium`, and `large`, or you can specify the exact size in pixels, such as `20px`. Read more at <a href=\"http://www.w3schools.com/cssref/pr_font_font-size.asp\">W3Schools - CSS font-size Property</a>\n\n</details>\n<details>\n<summary><strong>What is a stylesheet?</strong></summary>\n\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\n\n</details>\n<details>\n<summary><strong>What is CSS?</strong></summary>\n\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\n\nHere’s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\n\n<pre>h2 {\n   color: blue;\n   font-family: cursive;\n</pre>\n\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\n\n</details>\n</div>\n\n# The Body Element\n\n-   Find the `body` rule-set in the style sheet.\n-   Discuss with a partner what you think will happen if you add `text-align`, `color`, or other text properties to the `body` rule set.\n-   Try out some different properties to check your guesses.",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/6": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>What colors can I use in CSS?</strong></summary>\n\nCSS includes most common color names (red, blue, green, etc.), and many uncommon ones.  You can see a full list of CSS color names at <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>.  You can still use colors that are not included in the named list, but you will need to use their RGB values.  You can read more about using colors in CSS at <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n\n</details>\n<details>\n<summary><strong>How does the code work?</strong></summary>\n\nHere is the code that is making the image borders:\n\n<pre>img {\n  border-color: saddlebrown;\n  border-width: 4px;\n  border-style: solid;\n  border-radius: 10px;\n}</pre>\n\n-   `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\n-   `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` are the rules that make the border.\n    </details>\n    <details>\n    <summary><strong>What does the <code>border-style</code> property do?</strong></summary>\n\nThe `border-style` property determines what kind of border (solid, dotted, etc.) the element has.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\">W3Schools - CSS border-style Property</a>\n\n</details>\n<details>\n<summary><strong>What does the <code>border-radius</code> property do?</strong></summary>\n\nThe `border-radius` property determines the radius of the curves at the corners of the element.  A bigger radius makes a bigger, softer curve, and a smaller radius makes a smaller, sharper curve.  A radius of zero makes a regular corner.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\">W3Schools - CSS3 border-radius property</a>\n\n</details>\n<details>\n<summary><strong>What does the <code>float</code> property do?</strong></summary>\n\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\">W3Schools - CSS float Property</a>\n\n</details>\n</div>\n\n# Borders\n\n-   Find the rules in the style sheet that set image borders color and width.\n-   Change the color and width of your borders.\n-   Try out some different border styles.\n    -   Choose from `dotted`, `dashed`, `solid`, and `double`\n-   Put a border on another type of page element, such as one of the headings or the paragraphs.",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/7": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How does the code work?</strong></summary>\n\nHere is the code that is making the image borders:\n\n<pre>img {\n  border-color: saddlebrown;\n  border-width: 4px;\n  border-style: solid;\n  border-radius: 10px;\n}</pre>\n\n-   `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\n-   `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` are the rules that make the border.\n    </details>\n    <details>\n    <summary><strong>What does the `border-style` property do?</strong>\n    </summary>\n\nThe `border-style` property determines what kind of border (solid, dotted, etc.) the element has.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\">W3Schools - CSS border-style Property</a>\n\n</details>\n<details>\n<summary><strong>What does the <code>border-radius</code>code> property do?</strong>\n\n</summary>\n\nThe `border-radius` property determines the radius of the curves at the corners of the element.  A bigger radius makes a bigger, softer curve, and a smaller radius makes a smaller, sharper curve.  A radius of zero makes a regular corner.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\">W3Schools - CSS3 border-radius property</a>\n\n</details>\n<details>\n<summary><strong>What does the <code>float</code> property do?</strong>\n</summary>\n\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\">W3Schools - CSS float Property</a>\n\n</details>\n</div>\n\n# Border Radius\n\n-   Look at the `border-radius` property inside your `img` rule-set\n-   Discuss with your partner what you think the property does.\n-   Try different values for border radius and decide which one you like the best.",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/8": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n<details>\n\n<summary><strong>How does the code work?</strong></summary>\n\nHere is the code that is making the image float on the left hand side of the page:\n\n<pre>img {\n  float: left;\n}</pre>\n\n-   `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\n-   `float: left;` is the rule that makes the image float to the left.\n    </details>\n    <details>\n    <summary><strong>What does the <code>float</code> property do?</strong></summary>\n\nThe `float` property makes an element \"float\", meaning that the elements that come after it all flow around it.  If the `float` value is `left`, the element will float to the left, and the elements after it will show up on its right.  If the `float` value is `right`, the element will float to the right, and the elements after it will show up on its left.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\">W3Schools - CSS float Property</a>\n\n</details>\n</div>\n\n# Float\n\n-   Look at the `float` property inside your `img` rule-set\n-   Discuss with your partner what you think the property does.\n-   Change the value from `left` to `right`.",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/9": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How does the code work?</strong></summary>\nHere is the code that is making the image its current size:\n\n<pre>img {\n\twidth: 250px;\n}</pre>\n\n-   `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\n-   `width: 250px` is the rule that makes the image 250 pixels wide.  It also changes the height so that the image does not stretch.\n    </details>\n    <details>\n    <summary><strong>What does the `width` property do?</strong></summary>\n\nThe `width` property determines how wide the element will be.  Most of the time, you will define in the width in pixels, which makes the element take up an exact amount of space on the screen.  Defining the width will also change the height so that the image does not stretch, unless you have also defined the height.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\">W3Schools - CSS width Property</a>\n\n</details>\n<details>\n<summary><strong>What does the `height` property do?</strong></summary>\n\nThe `height` property determines how tall the element will be.  Most of the time, you will define in the height in pixels, which makes the element take up an exact amount of space on the screen.  Defining the height will also change the width so that the image does not stretch, unless you have also defined the width.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\">W3Schools - CSS width Property</a>\n\n</details>\n<details>\n<summary><strong>What does `px` mean / What is a pixel?</strong></summary>\n\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\n\n</details>\n<details>\n<summary><strong>Why does using a width and height rule at the same time sometimes stretch out the image?</strong></summary>\n\nWhen the width of an images changes, the height must change by the same percentage, otherwise the image will stretch.  For example, if you double the width of an image, you must also double the height, or the image will be stretched horizonally.  When you only define the width or the height, the computer will automatically change the other property so that the image looks the same.\n\n</details>\n</div>\n\n# Width and Height\n\n-   Find the property in the style sheet that controls the width of the images.\n-   Change the width of the images to be larger or smaller.\n-   Create a new rule with a `height` property to control the height of the images.\n-   Use the `width` property in the `p` rule-set to change the width of your paragraphs.",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/10": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>How does the code work?</strong></summary>\n\nHere is the code that is putting extra space around the images:\n\n<pre>img {\n\tmargin: 10px;\n}</pre>\n\n-   `img` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces, in this case, the images.\n-   `margin: 10px;` is the rule that puts 10 pixels of space around the image.\n    </details>\n    <details>\n    <summary><strong>What does the `margin` property do?</strong></summary>\n\nThe `margin` property determines how much space will be around the image.  Most of the time, you will define in the margin in pixels.  You can read more about this property at <a href=\"http://www.w3schools.com/cssref/pr_margin.asp\">W3Schools - CSS margin Property</a>\n\n</details>\n<details>\n<summary><strong>What does `px` mean / What is a pixel?</strong></summary>\n\nPixel, which is abbreviated `px`, is how elements are measured in CSS.  It’s the size of a single point of light on the screen.\n\n</details>\n</div>\n\n# Margin\n\nMargins specify how much space should be around an element.\n\n-   Find the `margin` property in the `img` rule-set.\n-   Change the margin to be larger, and discuss the effect with a partner.\n-   Choose another element type and give it a margin, too.",
    "https://studio.code.org/s/csd2-2017/stage/11/puzzle/12": "# Personal Web Site\n\nTry out some of these new CSS properties on your personal web site.\n\n-   Add styling of your choice to your web site. Be sure to use at least three new CSS properties.\n\n# Checklist\n\n-   At least three of the following CSS Properties are used:\n\n    -   `background-color`\n    -   `height`\n    -   `width`\n    -   `border-style`\n    -   `border-radius`\n    -   `border-width`\n    -   `float`\n    -   `margin`\n\nWe encourage you to use more than three, though!  Explore additional CSS properties and add them to your page.",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/2": "# RGB Colors\n\nAll colors, whether they have names or not, can be described by the level of red, green, and blue light it takes to make them.  This is called an RGB value (short for Red-Green-Blue).  You can use the widget on your left to try out different RGB values and see what colors they make.\n\n-   **Click \"Run\" to start the widget on the left,** and use the sliders to adjust the levels of red, green, and blue light.\n-   For each of the colors below, match it to its RGB value.\n\nA) red: 216, green: 191, blue: 216 - rgb(216,191,216)\n\nB) red: 255, green: 239, blue: 213 - rgb(255,239,213)\n\nC) red: 250, green: 128, blue: 114 - rgb(250,128,114)\n\nD) red: 70, green: 130, blue: 180 - rgb(70, 130, 180)\n\nE) red: 107, green: 142, blue: 35 - rgb(107,142,35)\n\n<div style=\"font-size: 16px\">\n<br />\n<details>\n\n<summary><strong>Why do red and green make yellow?</strong></summary>\n\nWhen you mix paint, red and green make brown, but RGB color mixing uses light instead of paint, so the colors mix differently.  RGB uses _additive color mixing_.  In additive color mixing, red and green make yellow, red and blue make magenta, and blue and green make cyan.  When you mix the three primary colors together (red, green, and blue), they make white.  You can read more at <a href=\"https://en.wikipedia.org/wiki/Additive_color\">Wikipedia - Additive Color</a>\n\n</details>\n<details>\n<summary><strong>How many colors can I make with RGB color mixing?</strong></summary>\n\n<p>\nYou can make over sixteen million different colors with RGB color mixing.\n</p>\n\n</details>\n</div>",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/3": "# Winter Color\n\nIn the next few levels, you'll be finding seasonal colors for a website.  Here, you'll need to find the RGB values for a wintery blue color.\n\n-   Click \"Run\" to start the widget.\n-   Adjust the levels until you match the wintery blue color at the bottom of the widget.\n-   Write the RGB values on your activity guide.  You will need them in the next activity.\n\n<div style=\"font-size: 16px\">\n<br />\n<details>\n\n<summary><strong>How do I make a color lighter?</strong></summary>\n<p>To make a color lighter, you need to add more light (increase the level of the slider).  If you have already added the maximum amount of blue light, you will need to add more red and green light to make your blue lighter.</p></details>\n<details>\n<summary><strong>Why do red and green make yellow?</strong></summary>\n\nWhen you mix paint, red and green make brown, but RGB color mixing uses light instead of paint, so the colors mix differently.  RGB uses _additive color mixing_.  In additive color mixing, red and green make yellow, red and blue make magenta, and blue and green make cyan.  When you mix the three primary colors together (red, green, and blue), they make white.  You can read more at <a href=\"https://en.wikipedia.org/wiki/Additive_color\">Wikipedia - Additive Color</a>\n\n</details>\n<details>\n<summary><strong>How many colors can I make with RGB color mixing?</strong></summary>\n\n<p>You can make make over sixteen million different colors with RGB color mixing.</p>\n\n</details>\n</div>",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/4": "# Summer Color\n\nFind the RGB values for a summery yellow color.\n\n-   Click \"Run\" to start the widget.\n-   Adjust the levels until you match the summery yellow at the bottom of the widget.\n-   Write the RGB values on your activity guide.  You will need them in the next activity.\n\n<div style=\"font-size: 16px\">\n<br />\n<details>\n\n<summary><strong>Why do red and green make yellow?</strong></summary>\n\nWhen you mix paint, red and green make brown, but RGB color mixing uses light instead of paint, so the colors mix differently.  RGB uses _additive color mixing_.  In additive color mixing, red and green make yellow, red and blue make magenta, and blue and green make cyan.  When you mix the three primary colors together (red, green, and blue), they make white.  You can read more at <a href=\"https://en.wikipedia.org/wiki/Additive_color\">Wikipedia - Additive Color</a>\n\n</details>\n<details>\n<summary><strong>How many colors can I make with RGB color mixing?</strong></summary>\n\n<p>You can make make over sixteen million different colors with RGB color mixing.</p>\n\n</details>\n</div>",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/5": "# Spring and Autumn Colors\n\nChoose RGB values for spring and autumn colors.\n\n-   Click \"Run\" to start the widget.\n-   Adjust the levels until you find a spring color you like, then write down the values on your activity guide.\n-   Do the same for an autumn color.   You will need the RGB values for the next activity.\n\n<div style=\"font-size: 16px\">\n<br />\n<details>\n\n<summary><strong>Where can I see the whole range of color types?</strong></summary>\nYou can find many options for colors at <a href=\"http://www.w3schools.com/colors/colors_picker.asp\">W3Schools - HTML Color Picker</a></details>\n<details>\n<summary><strong>Why do red and green make yellow?</strong></summary>\n\nWhen you mix paint, red and green make brown, but RGB color mixing uses light instead of paint, so the colors mix differently.  RGB uses _additive color mixing_.  In additive color mixing, red and green make yellow, red and blue make magenta, and blue and green make cyan.  When you mix the three primary colors together (red, green, and blue), they make white.  You can read more at <a href=\"https://en.wikipedia.org/wiki/Additive_color\">Wikipedia - Additive Color</a>\n\n</details>\n<details>\n<summary><strong>How many colors can I make with RGB color mixing?</strong></summary>\n\n<p>You can make make over sixteen million different colors with RGB color mixing.</p>\n\n</details>\n</div>",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/6": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>How does the code work?</strong>\n</summary>\nFor the code to work, you need to both create a winter class and add elements to the class.\n\nThe class is created in the style sheet, with the following code.\n\n<pre>.winter {\n  color: rgb(195,230,255);\n}</pre>\n\nThis code creates a class called `winter` and makes everything in the class our winter blue, which has the RGB values of (195,230,255).\n\nThe code that adds a `h5` element to the winter class is `<h5 class=\"winter\">`.  The `class=winter` inside the opening tag adds everything inside the tag to the class.\n\n</details>\n<details>\n<summary>\n<strong>Why does the selector have a period in front of it?</strong>\n\n</summary>\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\n</details>\n<details>\n<summary>\n<strong>Why would a web developer use classes?</strong>\n\n</summary>\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\n</details>\n<details>\n<summary>\n<strong>I got different RGB values, but mine are right, too.</strong>\n\n</summary>\n\nBecause RGB creates millions of different colors, some are so similar that people have a hard time telling them apart.  That means that there are multiple RGB values that are close enough to work for our winter color.\n\n</details>\n</div>\n\n# Classes\n\nIn this page, the web developer has used classes to give some of the words our winter color.\n\n-   Look at the HTML code for the winter words.  Why is \"snowy\" the only winter word without the winter color?\n-   Add code to the HTML that will give \"snowy\" the same winter blue as the other words.\n-   Look inside the style sheet to find the rule that makes all the words in the winter class blue, and check whether your RGB numbers are close to the ones in the style sheet.  \n-   Discuss with your partner how the code works.",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/8": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>How does the code work?</strong>\n\n</summary>\nFor the code to work, you need to both create a winter class and add elements to the class.\n\nThe class is created in the style sheet, with the following code.\n\n<pre>.winter {\n  color: rgb(195,230,255);\n}</pre>\n\nThis code creates a class called `winter` and makes everything in the class our winter blue, which has the RGB values of (195,230,255).\n\nThe code that adds a `h5` element to the winter class is `<h5 class=\"winter\">`.  The `class=winter` inside the opening tag adds everything inside the tag to the class.\n\n</details>\n<details>\n<summary>\n<strong>What rules can be added to a class rule-set?</strong>\n\n</summary>\n\nA class rule-set can have the same rules as any other type of selector.  If a rule does not apply to the content of the class (for example, using `font-size` on an element with no text), then the computer will ignore that rule, but still use the rules that work.\n\n</details>\n<details>\n<summary>\n<strong>Why does the selector have a period in front of it?</strong>\n\n</summary>\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\n</details>\n<details>\n<summary>\n<strong>Why would a web developer use classes?</strong>\n\n</summary>\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\n</details>\n<details>\n<summary>\n<strong>I got different RGB values, but mine are right, too.</strong>\n\n</summary>\n\nBecause RGB creates millions of different colors, some are so similar that people have a hard time telling them apart.  That means that there are multiple RGB values that are close enough to work for our winter color.\n\n</details>\n</div>\n\n# Adding Rules\n\nYour winter words should all have the same color and font.\n\n-   Find the CSS rule-set in the style sheet that gives the winter words their style.\n-   Add a rule that changes the font of the winter words.  It can be any font, but it will need to be different from that of the other three seasons.\n-   Add any other rules you'd like for your winter words.",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/9": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>How does the code work?</strong>\n\n</summary>\nFor the code to work, you need to both create a spring class and add elements to the class.\n\nThe spring class is already created in the style sheet, but it doesn't have any rules.\n\n<pre>.spring {\n  color: rgb(195,230,255);\n}</pre>\n\nLook at the rules in the `winter` class for clues to how to make rules for the summer class.\n\nYou will also need to add some elements to the spring class inside your HTML file.\n\nThe code in the HTML file that adds a `h5` element to the winter class is `<h5 class=\"winter\">`.  Use this pattern to add elements to the spring class, too.\n\n</details>\n<details>\n<summary>\n<strong>What rules can be added to a class rule-set?</strong>\n\n</summary>\n\nA class rule-set can have the same rules as any other type of selector.  If a rule does not apply to the content of the class (for example, using `font-size` on an element with no text), then the computer will ignore that rule, but still use the rules that work.\n\n</details>\n<details>\n<summary>\n<strong>Why does the selector have a period in front of it?</strong>\n\n</summary>\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\n</details>\n<details>\n<summary>\n<strong>Why would a web developer use classes?</strong>\n\n</summary>\n\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\n\n</details>\n</div>\n\n# Spring Class\n\nNow that your winter class is ready, you can start on the other seasons.\n\n-   Find the empty CSS rule-set in the style sheet that gives the spring words their style.\n-   Add two rules, one to give the text your spring color for earlier in the lesson, and another to give the text a different font, font size, or decoration.\n-   Add the spring class to the spring elements in the HTML page.",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/10": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>How does the code work?</strong>\n\n</summary>\nFor the code for the winter class to work, it needs to both create a winter class and add elements to the class.\n\nThe class is created in the style sheet, with the following code.\n\n<pre>.winter {\n  color: rgb(195,230,255);\n}</pre>\n\nThis code creates a class called `winter` and makes everything in the class our winter blue, which has the RGB values of (195,230,255).\n\nThe code that adds a `h5` element to the winter class is `<h5 class=\"winter\">`.  The `class=winter` inside the opening tag adds everything inside the tag to the class.\n\n</details>\n<details>\n<summary>\n<strong>How do I create a new rule-set?</strong>\n\n</summary>\nYou can create a new rule-set by following the pattern that the `winter` and `spring` classes used in the style sheet.\n<pre>.winter {\n  color: rgb(195,230,255);\n}</pre>\n\nThe selector name and the color values will be different, but the following pattern is always the same.\n\n<pre>.classname {\n  property1: value1;\n  property2: value2;\n}</pre>\n\n</details>\n<details>\n<summary>\n<strong>Why does the selector have a period in front of it?</strong>\n\n</summary>\nIn CSS, a period in front of a selector means that the selector is the name of a class.  If there is no period, it means that the selector is the name of an HTML tag.\n</details>\n<details>\n<summary>\n<strong>Why would a web developer use classes?</strong>\n\n</summary>\n\nA web developer uses classes when some elements should be styled differently than others, even if they are the same tag.  Classes can also be used to give elements that have different tags the same style.\n\n</details>\n</div>\n\n# Summer and Autumn Classes\n\n-   Inside the style sheet, create a new rule-set for a \"summer\" class.\n-   Add a rule to set the text in the summer class to your summer RGB color.\n-   Add the summer class to the summer elements in the HTML page.\n-   Do the same for the autumn class.",
    "https://studio.code.org/s/csd2-2017/stage/13/puzzle/11": "# Free Play Styling\n\nYour turn to decide what you want to style! Play with the classes styling and RGB colors to improve your personal website.\n\n-   Make sure you have completed the checklist below.\n-   Take a screenshot of your home page and save it somewhere on your computer so you can find it later.\n\n## Checklist\n\n-   Somewhere on your site, give text a particular color using RGB values.\n-   On your lists page, give all the list items the same background color.\n-   Use classes to style at least two other elements of your personal website",
    "https://studio.code.org/s/csd2-2017/stage/14/puzzle/2": "# Personal Website\n\nThis is it! You have been working on your Personal Website for the whole unit. Put the finishing touches on it and submit it to your teacher! Remember to use the problem solving process as your guide in preparing your final product.\n\n# Do This\n\n-   Define: Read the rubric so you know what is expected\n-   Plan: Decide what you still need to work on and put those things in priority order\n-   Try: Implement your improvements to your personal website.\n-   Reflect: Get feedback from a classmate and decide what of that feedback to act on.\n\nDon't forget to take a screenshot of your home page and save it somewhere on your computer so you can find it later (_Need help with how to screenshot? Check out this <a href=\"http://www.take-a-screenshot.org/\">website </a>._)"
  }
}