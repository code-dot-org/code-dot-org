{
  "https://studio.code.org/s/express-2017/stage/2/puzzle/2": {
    "short_instructions": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
    "long_instructions": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
    "authored_hints": {
      "courseC_maze_programming1_a": "If Scrat isn't getting to the acorn, make sure all three of the blocks have been fully snapped together, then click \"Run\" again.",
      "courseC_maze_programming1_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "callouts": {
      "grade2_CaringForNewPet_0_1": "After connecting all the blocks, press \"Run\" to start your program."
    }
  },
  "https://studio.code.org/s/express-2017/stage/2/puzzle/3": {
    "short_instructions": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
    "long_instructions": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
    "authored_hints": {
      "courseC_maze_programming2_a": "To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.",
      "courseC_maze_programming2_b": "Make sure all three `move forward` blocks are attached to the `when run` block."
    },
    "callouts": {
      "courseC_maze_programming2_1": "This is the toolbox. It’s where you’ll find extra blocks to complete your puzzles."
    }
  },
  "https://studio.code.org/s/express-2017/stage/2/puzzle/4": {
    "short_instructions": "There is one extra block that is going to cause Scrat to crash. Throw it away by dragging it back to the toolbox.",
    "long_instructions": "There is one extra block that is going to cause Scrat to crash.\\\nThrow it away by disconnecting it from the other blocks and dragging it back to the toolbox.",
    "authored_hints": {
      "courseC_maze_programming3_a": "[][0]\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.",
      "courseC_maze_programming3_b": "Remember that turns to the right and left are from Scrat's perspective."
    },
    "callouts": {
      "courseC_maze_programming3_2": "You can drag extra blocks to the toolbox to throw them away."
    }
  },
  "https://studio.code.org/s/express-2017/stage/2/puzzle/5": {
    "short_instructions": "Avoid the cracked ice to keep Scrat safe!",
    "long_instructions": "Avoid the cracked ice to keep Scrat safe!",
    "authored_hints": {
      "courseC_maze_programming4_a": "You can turn right or left from Scrat's point of view. If you are facing right, turning right will make you point downwards.",
      "courseC_maze_programming4_b": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the acorn.",
      "courseC_maze_programming4_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "callouts": {
      "courseC_maze_programming4_1": "This is your block limit.  It tells you how many of these blocks you have left to use."
    }
  },
  "https://studio.code.org/s/express-2017/stage/2/puzzle/6": {
    "short_instructions": "Avoid the cracked ice.",
    "long_instructions": "Avoid the cracked ice!",
    "authored_hints": {
      "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
      "courseC_maze_programming5_b": "How far do you need to move to get to the corner?",
      "courseC_maze_programming5_c": "You will need to turn left at the corner to get to the acorn."
    },
    "callouts": {
      "": "These blocks don't have numbers on them. You can use as many as you want!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/2/puzzle/7": {
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "This code uses a new block. What do you think will happen when you press \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "Nothing. Scrat will not move at all.",
              "correct": false,
              "feedback": "Incorrect. Putting the 'move forward' block inside the 'repeat' block will cause Scrat to move forward three times."
            },
            {
              "text": "Scrat will move forward three times, turn, then move forward three more times, making it to the acorn!",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "Scrat will move forward, then turn and crash.",
              "correct": false,
              "feedback": "Incorrect. Putting the 'move forward' block inside the 'repeat' block will cause Scrat to move forward three times."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "Putting the 'move forward' block inside the 'repeat' block will cause Scrat to move forward three times. He then turns and moves forward another three times, making it to the acorn!"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/2/puzzle/9": {
    "short_instructions": "Help Scrat get to the acorn using a loop!",
    "long_instructions": "Help Scrat get to the acorn using a loop!",
    "authored_hints": {
      "courseC_maze_programming6a_a": "Use a `repeat` loop to get Scrat moving!"
    },
    "callouts": {
      "courseD_maze_ramp6_1": "Whatever code you put in here will repeat as many times as you tell it to, then continue to run the rest of the program."
    }
  },
  "https://studio.code.org/s/express-2017/stage/2/puzzle/10": {
    "short_instructions": "Help Scrat get to the acorn!",
    "long_instructions": "Help Scrat get to the acorn!",
    "authored_hints": {
      "courseD_scrat_programming6_a": "There are two ways to solve this puzzle!",
      "courseD_scrat_programming6_b": "Remember to turn first before moving, since Scrat is facing the wrong direction.",
      "courseD_scrat_programming6_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "callouts": {
      "courseD_maze_ramp6_1": "Whatever code you put in here will repeat as many times as you tell it to, then continue to run the rest of the program."
    }
  },
  "https://studio.code.org/s/express-2017/stage/2/puzzle/11": {
    "short_instructions": "Use what you've learned to get Scrat to the acorn!",
    "long_instructions": "**Challenge:** Use what you've learned to get Scrat to the acorn!",
    "authored_hints": {
      "courseD_maze_ramp7_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
      "courseD_maze_ramp7_a": "Use repeat blocks to run either a single block or a chunk of code over and over.",
      "courseD_maze_ramp7_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "callouts": {
      "courseD_maze_ramp7_1": "This is your first challenge puzzle! These are meant to be hard and may take several tries."
    }
  },
  "https://studio.code.org/s/express-2017/stage/2/puzzle/13": {
    "short_instructions": "Now make a square using Artist!",
    "long_instructions": "Great!  Now let's use that `repeat` loop to make a square using Artist!  The blocks for artist are a little different than other puzzles, but the idea is the same.\n\n* * *\n\n##### Each side of the square has a length of 200 pixels, and you will need to turn 90 degrees to make each angle.",
    "authored_hints": {
      "courseE_artist_ramp8_a": "To draw a side, use the `move forward by 100 pixels` block, and change the 100 to a 200.",
      "courseE_artist_ramp8_b": "To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.\n\nDon't forget to turn afterward!",
      "courseE_artist_ramp8_c": "Your loop should have two blocks inside of it: `move forward` and `turn right by 90 degrees`."
    },
    "callouts": {
      "courseE_artist_ramp8_1": "You can change this number.",
      "courseE_artist_ramp8_2": "Click here to type in the number of times to repeat your code."
    }
  },
  "https://studio.code.org/s/express-2017/stage/2/puzzle/15": {
    "short_instructions": "Use what you've learned to draw this triangle.",
    "long_instructions": "Use what you've learned to draw this triangle.\n\n* * *\n\n##### The sides are each 100 pixels long. You will need to turn 120 degrees at each corner.",
    "authored_hints": {
      "courseD_artist_ramp12_a": "How is this similar to a square?  How is it different?",
      "courseD_artist_ramp12_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
      "courseD_artist_ramp12_c": "To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/puzzle/2": {
    "short_instructions": "Fix the code to help get Scrat get to the acorn.",
    "long_instructions": "This code isn't quite right!  \n\nFix the code to help Scrat get to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging1_a": "-   Does everything work after the first step?\n-   Does it still work after the second?\n-   Where does it go wrong?",
      "courseC_maze_debugging1_b": "There is 1 block you need to add to complete this puzzle."
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/puzzle/3": {
    "short_instructions": "Use your debugging skills to get Scrat to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging2_a": "There is a lot of valuable code in the workspace.  Don't just delete it all and start over!",
      "courseC_maze_debugging2_b": "-   Does everything work after the first step?\n-   Does it still work after the second?\n-   Where does it go wrong?",
      "courseC_maze_debugging2_c": "Can't figure out what's wrong? Try running the code a couple of times to see what happens."
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/puzzle/4": {
    "short_instructions": "Remove blocks to get Scrat to the acorn!",
    "long_instructions": "Something is not quite right. \n\nRemove blocks to get Scrat to the acorn!",
    "authored_hints": {
      "courseC_maze_debugging3_a": "To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.\n\nDrag the block you want to delete back to the toolbox.\n\nFinally, put your other blocks back where they belong.\n\n[][0]",
      "courseC_maze_debugging3_b": "Can't figure out what's wrong? Try running the code a couple of times to see what happens."
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/puzzle/5": {
    "short_instructions": "Someone has their directions mixed up! Can you help?",
    "authored_hints": {
      "courseC_maze_debugging4_a": "Use the \"Step\" button to run through the instructions one at a time.  Does that help you find the line where things go wrong?",
      "courseC_maze_debugging4_b": "One of the turns is making Scrat go in the wrong direction. Can you figure out which one?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/puzzle/6": {
    "short_instructions": "Debug this level by rearranging and changing blocks.",
    "authored_hints": {
      "courseC_maze_debugging5_a": "There are lots of helpful blocks in the workspace already.  Don't delete them all! \n\nUse the \"Step\" button to go through and figure out where the code goes wrong.",
      "courseC_maze_debugging5_b": "Try saying what Scrat should do out loud.  Is it the same as the code in the workspace?  What goes wrong?"
    },
    "callouts": {
      "courseC_maze_debugging5_1": "Grey blocks cannot be deleted!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/puzzle/7": {
    "short_instructions": "Figure out what is wrong and get Scrat to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging6_a": "-   What is Scrat supposed to do?\n-   What does Scrat do?\n-   What does that tell you?",
      "courseC_maze_debugging6_b": "Once you've found and fixed the first bug, go through the debugging process again to find the second one.\n\nRepeat the process until the program works!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/puzzle/8": {
    "short_instructions": "**Challenge:** Debug this level by rearranging, adding, and deleting blocks.",
    "authored_hints": {
      "courseC_maze_debugging7_a": "-   Does everything work at the first step?\n-   How about the second step?\n-   Where does it go wrong?",
      "courseC_maze_debugging7_b": "Don't forget to use the \"Step\" button to run the program line by line!",
      "courseC_maze_debugging7_c": "After you find and fix the first bug, make sure to use the debugging process again to find the next one.\n\nRepeat the debugging process until the program works!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/puzzle/9": {
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Look closely at the code below.  What is the first bug that will make this program fail? "
            }
          ],
          "answers": [
            {
              "text": "The program won't fail. Scrat will get to the acorn.",
              "correct": false,
              "feedback": "Incorrect. Scrat goes the wrong way after his final turn."
            },
            {
              "text": "Scrat will go the wrong way after his final turn.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "Scrat takes one too few steps and ends up short of the acorn.",
              "correct": false,
              "feedback": "Incorrect. Taking one too few steps happens after Scrat turns the wrong way."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The first error is that Scrat goes the wrong way after his final turn. "
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/4/puzzle/10": {
    "short_instructions": "Debug this level to get Scrat to the acorn."
  },
  "https://studio.code.org/s/express-2017/stage/4/extras?level_name=courseC_maze_debugging_challenge1": {
    "short_instructions": "Help Scrat decide which way to turn to get to the acorn.",
    "authored_hints": {
      "courseC_maze_debugging_challenge1_a": "Left or right? It's up to you!",
      "courseC_maze_debugging_challenge1_b": "Scrat's path is the shape of a rectangle! He needs to turn the same way each time.",
      "courseC_maze_debugging_challenge1_c": "If you are getting stuck, you can always start over and find a new way!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/extras?level_name=courseC_maze_debugging_challenge2": {
    "short_instructions": "Help Scrat reach the acorn with only four `turn` commands.",
    "long_instructions": "If Scrat turns too often, he might get dizzy! Help him reach the acorn with only four `turn` commands.",
    "authored_hints": {
      "courseC_maze_debugging_challenge2_b": "If you are getting stuck, try debugging the code.  Where does it go wrong?",
      "courseC_maze_debugging_challenge2_c": "There are two different paths you can follow by just moving forward and turning four times. If you find one way to use a loop, there may be even more!\n\n[][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/extras?level_name=courseD_bee_debugging_challenge1": {
    "short_instructions": "Watch how the bees gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
    "long_instructions": "Watch how the bees gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
    "authored_hints": {
      "courseD_bee_debugging_challenge1_a": "Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?",
      "courseD_bee_debugging_challenge1_b": "On the way back, have the bee follow the same pattern. How much honey does the bee need to make each time it moves over a honey comb?",
      "courseD_bee_debugging_challenge1_c": "After the bee makes it to the bottom row, have it repeat these commands:\n\n-   Repeat 2 times:\n    -   Move forward\n    -   Make 3 honey\n-   Move backward"
    },
    "callouts": {
      "courseD_bee_debugging_challenge1_callout1": "Use this command to move the bee backward."
    }
  },
  "https://studio.code.org/s/express-2017/stage/4/extras?level_name=courseD_collector_debugging_challenge2": {
    "short_instructions": "Are you an expert at nested loops? Use what you have learned so far to collect all the treasure!",
    "authored_hints": {
      "courseD_collector_debugging_challenge2_a": "Start by collecting just **two** gems from each of the first **two** piles.\n\n[][0]\nUse these blocks.\n\n[blockly block][1]",
      "courseD_collector_debugging_challenge2_b": "Next, collect the remaining gems in this row.\n\n[][0]\nAdd these blocks to your program.\n\n[blockly block][1]",
      "courseD_collector_debugging_challenge2_c": "Finally, collect the remaining treasure. Add these blocks to your program.\n\n[blockly block][0]",
      "courseD_collector_debugging_challenge2_d": "Here is the complete solution for this puzzle.\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/2": {
    "short_instructions": "Move forward by 60 pixels to complete this puzzle.",
    "long_instructions": "What a lovely day!  \n\nHelp the Artist cover his flowers before the winter by moving forward by 60 pixels."
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/3": {
    "short_instructions": "Move forward five times and make this colored line.",
    "long_instructions": "Add some beauty by repeating that step five times, changing to a random color between each move."
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/5": {
    "short_instructions": "Use a `repeat` loop to draw five colored dashes.",
    "long_instructions": "Draw the colorful line 5 times again, this time using a `repeat` loop."
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/6": {
    "short_instructions": "What happens when you add a 72 degree right turn after everything else inside your loop?",
    "long_instructions": "What happens when you add a 72 degree right turn after everything else inside your loop?"
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/7": {
    "short_instructions": "Use loops to draw this staircase.",
    "long_instructions": "Loops sure make writing code easier!\n\nUse loops to draw this staircase.\n\n-   Each stairstep is 50 pixels long and 50 pixels tall\n-   You will need to turn 90 degrees in each direction"
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/8": {
    "short_instructions": "Edit your loop to draw this staircase.",
    "long_instructions": "This staircase is much bigger, but it takes the same amount of code as the last puzzle!\n\nFix this loop to complete the puzzle."
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/9": {
    "short_instructions": "Look for a pattern and make this code shorter using loops!",
    "long_instructions": "Look for a pattern and make this code shorter using loops!"
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/10": {
    "short_instructions": "Look for a pattern and make this code shorter using loops.",
    "long_instructions": "**Challenge:** Look for a pattern and make this code shorter using loops."
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/11": {
    "short_instructions": "Solve this puzzle by drawing a square.",
    "long_instructions": "Solve this puzzle by drawing a square with 200 pixel sides."
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/12": {
    "short_instructions": "Get the artist to the center of the play area, then draw a bird using a sticker. ",
    "long_instructions": "**Free Play:** Let's build something bigger, one step at a time!  You can make anything you want, but we're going to show you how to make something like this!\n\n[expandable][0]\n\nUse the `jump to 200 over 200 down` to get the artist to the center of the play area, then use the `draw a sticker` block to make a bird appear.  \n\n* * *\n\nPress \"Finish\" when you are happy with what you've made.",
    "authored_hints": {
      "courseC_artist_loops1a_a": "This is the first block you will need:\n\n[blockly block][0]",
      "courseC_artist_loops1a_b": "Use this block to draw the sticker!\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/13": {
    "short_instructions": "Now, use a loop to spin your bird around 12 times with a 30 degree turn.",
    "long_instructions": "Now, use a loop to spin your bird around 12 times with a 30 degree turn.",
    "authored_hints": {
      "courseC_artist_loops2a_a": "Inside your loop, you will want to jump to 200 over 200 down, then draw the bird sticker, then turn 30 degrees.",
      "courseC_artist_loops2a_b": "Click on the number at the top of the `repeat` loop to change how many times it repeats."
    }
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/14": {
    "short_instructions": "Now add a bat!",
    "long_instructions": "So much fun!  \n\nNow, add a bat sticker right after the bird to make an image like the one below.\n\n* * *\n\n[expandable][0]",
    "authored_hints": {
      "courseC_artist_loops3a_a": "You will want to add just one block inside of your loop, after the bird sticker.",
      "courseC_artist_loops3a_b": "Use the drop down menu on the `draw sticker` block to find the bat sticker."
    }
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/15": {
    "short_instructions": "Try jumping forward by 75 pixels.",
    "long_instructions": "Add a block to your code so that the artist jumps forward by 75 pixels between stamping the bird and the bat. In this puzzle, make sure you have `jump to 200 over 200 down` inside of your loop, so you stay in the center!\n\n* * *\n\n[expandable][0]",
    "authored_hints": {
      "courseC_artist_loops4a_a": "Use this block to jump forward:\n\n[blockly block][0]\n\nDon't forget to change how far!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/16": {
    "short_instructions": "Try adding lines!",
    "long_instructions": "What happens when you `move forward` then `move backward` by 100, 200, or 400 pixels somewhere inside the loop?  \n\n-   Try using the `set pattern` block before you start your loop to make a work of art!\n    * * *\n    [expandable][0]",
    "authored_hints": {
      "courseC_artist_loops5b_a": "Use this block to set the pattern of your lines:\n\n[blockly block][0]",
      "courseC_artist_loops5b_b": "To make a design like the one above, you will want to move backward the same amount that you move forward."
    }
  },
  "https://studio.code.org/s/express-2017/stage/6/puzzle/17": {
    "short_instructions": "Now try something on your own!",
    "long_instructions": "Now make something on your own.  What happens when you make two separate circles of different stickers?\n\n* * *\n\nNeed an idea? Try making a design like this one.\n\n[expandable][0]"
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/1": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "long_instructions": "_\"This is going to **BEE** great!\"_\n\nHelp the bee collect all of the nectar.",
    "authored_hints": {
      "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
      "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
    }
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/2": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "long_instructions": "\"_This is going to **BEE** great!_\"\n\nHelp the bee collect all of the nectar.",
    "authored_hints": {
      "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
      "courseD_bee_nestedLoops1_b": "Try writing code for one side of the square first. Can you loop this to get all of the nectar?",
      "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
    }
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/4": {
    "short_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "long_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Look closely at the nested loops below.  What will happen when you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "The bee will move forward and get nectar only one time.",
              "correct": false,
              "feedback": "Incorrect.  The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            },
            {
              "text": "The bee will get only 2 units of nectar.",
              "correct": false,
              "feedback": "Incorrect.  The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            },
            {
              "text": "The bee will get all of the nectar.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/5": {
    "short_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "long_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "authored_hints": {
      "courseD_bee_nestedLoops2_a": "To solve this puzzle, you will need to nest one `repeat` loop inside of another.",
      "courseD_bee_nestedLoops2_b": "Can't figure out where to put the loops? Try writing the code on paper step-by-step and look for a pattern.",
      "courseD_bee_nestedLoops2_c": "Remember you can put more than one block inside of a loop."
    }
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/6": {
    "short_instructions": "Get the zombie to the sunflower using the fewest number of blocks possible.",
    "long_instructions": "_\"Zombie hungry!\"_\n\nGet the zombie to the sunflower using the fewest number of blocks possible.",
    "authored_hints": {
      "courseD_maze_nestedLoops3_a": "To solve this puzzle, you will need to \"nest\" one `repeat` loop inside of another `repeat` loop.",
      "courseD_maze_nestedLoops3_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern.",
      "courseD_maze_nestedLoops3_c": "Try writing code for one straight piece of path and a turn. Can you repeat this to get to the sunflower?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/7": {
    "short_instructions": "Get the zombie to the sunflower using the fewest blocks possible!  ",
    "long_instructions": "Get the zombie to the sunflower using the fewest blocks possible!  ",
    "authored_hints": {
      "courseD_maze_nestedLoops4_a": "Try using this path through the maze.\n\n[][0]",
      "courseD_maze_nestedLoops4_b": "If the loop pattern is hard to see, try coding it all out first and see what code repeats over and over before you put the loops in.",
      "courseD_maze_nestedLoops4_c": "Try using one `repeat` loop inside of another to cut down on the amount of code you need."
    }
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/8": {
    "short_instructions": "Get the zombie to the sunflower using the fewest number of blocks possible!",
    "authored_hints": {
      "courseD_maze_nestedLoops5_a": "Look for a stair-step pattern in this maze to find where a nested loop can be used.",
      "courseD_maze_nestedLoops5_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern."
    }
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/9": {
    "short_instructions": "Get the zombie to the sunflower using only the blocks available.",
    "long_instructions": "_\"Must eat sunflower!\"_\n\nGet the zombie to the sunflower using only the blocks available.",
    "authored_hints": {
      "courseD_maze_nestedLoops6_a": "If you are stuck, try writing out the code out on paper without loops first and look for patterns.",
      "courseD_maze_nestedLoops6_b": "Nesting `repeat` loops can help decrease the number of blocks used.",
      "courseD_maze_nestedLoops6_c": "It will take two sets of nested `repeat` loops to solve this puzzle."
    }
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/10": {
    "short_instructions": "Challenge: Figure out how to get all of the nectar using only the blocks available.",
    "long_instructions": "**Challenge:** Figure out how to get all of the nectar using only the blocks available.",
    "authored_hints": {
      "courseD_bee_nestedLoops7_a": "You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.",
      "courseD_bee_nestedLoops7_b": "You will need to use all three of the available `repeat` blocks to solve this puzzle.",
      "courseD_bee_nestedLoops7_c": "Nest your blocks three deep, like this:\n\n-   repeat 4\n    -   repeat 3\n        -   repeat 12\n            -   get nectar\n        -   move forward\n    -   turn right"
    }
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/11": {
    "short_instructions": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
    "long_instructions": "Collect all of the nectar from each flower and make honey at the honeycomb. "
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/12": {
    "short_instructions": "Make all of the honey.",
    "long_instructions": "Make all of the honey."
  },
  "https://studio.code.org/s/express-2017/stage/7/puzzle/13": {
    "short_instructions": "Make all of the honey.",
    "long_instructions": "Make all of the honey.",
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Look closely at the code below. How much honey will the bee make when you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "4",
              "correct": false,
              "feedback": "Incorrect. The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            },
            {
              "text": "8",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "12",
              "correct": false,
              "feedback": "Incorrect. The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/7/extras?level_name=courseD_harvester_nested_loops_challenge1": {
    "short_instructions": "\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"",
    "long_instructions": "_\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"_",
    "authored_hints": {
      "courseD_harvester_nested_loops_challenge1_a": "Try following this path to reach all of the corn! ",
      "courseD_harvester_nested_loops_challenge1_b": "To collect more than one piece of corn, you need to use `pick corn` more than one time.",
      "courseD_harvester_nested_loops_challenge1_c": "You will need to put a small loop inside of your main loop to solve this puzzle!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/7/extras?level_name=courseD_collector_nested_loops_challenge2": {
    "short_instructions": "Help the collector reach at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
    "long_instructions": "_\"Let's hunt for treasure - using loops!\"_ \n\nHelp the collector reach at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
    "authored_hints": {
      "courseD_bee_nested_loops_challenge2_a": "Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!",
      "courseD_bee_nested_loops_challenge2_b": "To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the _entire_ cave!",
      "courseD_bee_nested_loops_challenge2_c": "The shortest program that reaches all the treasure uses only one `collect` block and two turns.",
      "courseD_bee_nested_loops_challenge2_d": "**Solution:**\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/8/puzzle/1": {
    "short_instructions": "Draw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  ",
    "long_instructions": "[][0] _“Hi, I’m Elsa of Arendelle, help me draw a shape.”_\n\nDraw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  \n\n<hr/>\n\nYou can try making a polygon, like one of these:\\\n[][1]\n[][2]\n[][3]  \n\nOr even an abstract shape, like one of these:\\\n[][4]\n[][5]\n[][6]",
    "authored_hints": {
      "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
      "courseD_artist_project1_b": "Remember that `move forward` draws a line, while `jump forward` does not."
    }
  },
  "https://studio.code.org/s/express-2017/stage/8/puzzle/2": {
    "short_instructions": "Now take your shape and draw two or three in a row!",
    "long_instructions": "[][0] _“Now, let’s draw more than one.”_\n\nNow take your shape and draw two or three in a row by jumping forward some number of pixels.  \n\n-   If you jump forward by **less** than the width of your shape, they might overlap\n-   If you jump forward by **more** than the width of your shape, you will get a gap\n\n<hr/>\n\nYour row might end up straight like with these:\n\n[][1]\n[][2]\n[][3]\n<br/>  <br/>\n\nOr, your shapes might move around like one of these: \n\n[][4]\n[][5]\n[][6]",
    "authored_hints": {
      "courseD_artist_project2_a": "Remember that `move forward` draws a line, while `jump forward` does not.",
      "courseD_artist_project2_b": "After you draw and move the first time, you can repeat the code by adding a loop around the outside."
    }
  },
  "https://studio.code.org/s/express-2017/stage/8/puzzle/3": {
    "short_instructions": "Let's spin that line of shapes around!",
    "long_instructions": "[][0] _\"Let’s make it into a snowflake.\"_\n\nNext, jump Elsa back to the center using the `jump to 200 over and 200 down` block, and spin her around to draw the line of shapes again and again in a bunch of different directions.\n\nWhat amazing snowflakes you can make!\n\n* * *\n\nTake a look at these examples with polygons:\\\n[][1]\n[][2]\n[][3]\n\nAbstract shapes might make a snowflake more like one of these:\\\n[][4]\n[][5]\n[][6]",
    "authored_hints": {
      "courseD_artist_project3_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
      "courseD_artist_project3_b": "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n-   Try 72 degrees if you are repeating the outer loop 5 times\n-   Try 60 degrees if you are repeating the outer loop 6 times"
    }
  },
  "https://studio.code.org/s/express-2017/stage/8/puzzle/4": {
    "short_instructions": "Time to layer those shapes!",
    "long_instructions": "[][0] _\"What happens if we draw snowflakes on top of each other?\"_\n\nTry layering two different shapes of snowflakes on top of one another with a little turn in between - see what you get! ",
    "authored_hints": {
      "courseD_artist_project4_a": "Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:\n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" />\n\nHere's a set of hexagons with squares:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" />",
      "courseD_artist_project4_b": "To try this, draw your first snowflake, turn, then draw a second snowflake."
    }
  },
  "https://studio.code.org/s/express-2017/stage/8/puzzle/5": {
    "short_instructions": "Play with the snowflakes!",
    "long_instructions": "[][0] _\"Get creative with shapes and angles to see what kind of new snowflakes we can draw!\"_",
    "authored_hints": {
      "courseD_artist_project4_a": "Lines of 2 hexagons and 4 triangles:\n\n<img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/express-2017/stage/8/puzzle/6": {
    "short_instructions": "Draw a stair-step pattern that uses turns between 75 and 105 degrees.",
    "long_instructions": "[][0] _\"Let’s try something new. This time, skate in a zig-zag.\"_\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" style=\"float: left; margin: 0 15px 15px 0;\" />\n\nDraw a stair-step pattern that uses turns between 75 and 105 degrees -- but make sure that your left and right turns use the same angle.\\\n(You will see why later.)",
    "authored_hints": {
      "courseD_artist_project1a_a": "This stair step uses a 76 degree turn and repeats 4 times.\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" />",
      "courseD_artist_project1a_b": "These patterns are a lot like the stair steps from other puzzles, but using a different angle."
    }
  },
  "https://studio.code.org/s/express-2017/stage/8/puzzle/7": {
    "short_instructions": "Now, turn around 180 degrees and draw the stair pattern again!",
    "long_instructions": "[][0] _\"Now let’s turn and go back the way we came.\"_\n\nTurn around 180 degrees and draw the exact same stair pattern again!  \n\n-   The rest of this stage will be easier if you put all of your code inside of a loop to make Elsa  draw, turn around 180 degrees, draw, then turn around 180 degrees again.\n\n<hr/>\n\nHere is an example of stairs that use a 76 degree turn:\n\n[][1]",
    "authored_hints": {
      "courseD_artist_project2a_a": "This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.\n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/express-2017/stage/8/puzzle/8": {
    "short_instructions": "Spin that shape around 5 or 6 times in a circle.",
    "long_instructions": "[][0] _\"Let’s spin and make it into a snowflake.\"_\n\nSpin that shape around 5 or 6 times in a circle.\n\n-   If you choose 5 times,  try a turn of 72 degrees\n-   If you choose 6 times,  try a turn of 60 degrees\n    <hr/>\n\nHere's an example of Elsa turning a pattern 6 times:\n\n[][1]",
    "authored_hints": {
      "courseD_artist_project3a_a": "You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/8/puzzle/9": {
    "short_instructions": "Try playing around with what you've created. Draw whatever you like!\n\n-   What happens if you use two different angles in your stair step pattern?\n-   What happens if you make your diamond pattern longer or shorter?\n-   What does it look like to draw two snowflakes on top of one another?",
    "long_instructions": "[][0]  _\"Now, what should we do? Let’s explore and create our own winter wonderland!\"_\n\nTry playing around with what you've created. Draw whatever you like!\n\n-   What happens if you use two different angles in your stair step pattern?\n-   What happens if you make your diamond pattern longer or shorter?\n-   What does it look like to draw two snowflakes on top of one another?",
    "authored_hints": {
      "courseD_artist_project4a_a": "Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)\n\n<img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/express-2017/stage/14/puzzle/1": {
    "short_instructions": "Attach a block to the \"when click\" block, then press \"Run\". Click or tap the screen to move Flappy to the target."
  },
  "https://studio.code.org/s/express-2017/stage/14/puzzle/2": {
    "short_instructions": "Now we've added some ground.  Attach a block to the \"when hit the ground\" block.  Your code needs to 'END GAME' when Flappy crashes."
  },
  "https://studio.code.org/s/express-2017/stage/14/puzzle/3": {
    "short_instructions": "The \"when run\" block allows you to run code when your game starts.  Try setting the level speed and flapping to the target."
  },
  "https://studio.code.org/s/express-2017/stage/14/puzzle/4": {
    "short_instructions": "Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the \"when hit an obstacle\" block. Your code needs to 'END GAME' when Flappy crashes into the first set of pipes."
  },
  "https://studio.code.org/s/express-2017/stage/14/puzzle/5": {
    "short_instructions": "Let's add a scoreboard, and count points when Flappy makes it past obstacles. Add to the \"when pass an obstacle\" block, and then score a point by flying Flappy through the first set of pipes."
  },
  "https://studio.code.org/s/express-2017/stage/14/puzzle/6": {
    "short_instructions": "See if you can still score a point after making Flappy flap either a smaller or larger amount."
  },
  "https://studio.code.org/s/express-2017/stage/14/puzzle/7": {
    "short_instructions": "Next, try changing the scene by attaching another block to the \"when run\" block."
  },
  "https://studio.code.org/s/express-2017/stage/14/puzzle/8": {
    "short_instructions": "You can set visuals anytime, not just when the game starts. Try setting a RANDOM scene when other events happen, for example, when passing an obstacle."
  },
  "https://studio.code.org/s/express-2017/stage/14/puzzle/9": {
    "short_instructions": "To mix things up, when hitting an obstacle, instead of ending the game try setting the score back to 0."
  },
  "https://studio.code.org/s/express-2017/stage/14/puzzle/10": {
    "short_instructions": "Create your own Flappy game. You can change all the visuals and all the rules, even the gravity. When you're done, click Finish to let friends try your game on their phones."
  },
  "https://studio.code.org/s/express-2017/stage/15/puzzle/1": {
    "short_instructions": "Attach a block to the \"when left arrow\" block and press \"Run\". Move the paddle using the left arrow to reach the finish target."
  },
  "https://studio.code.org/s/express-2017/stage/15/puzzle/2": {
    "short_instructions": "Attach a block to the \"when right arrow\" and \"when left arrow\" blocks. Move the paddle to reach both finish targets."
  },
  "https://studio.code.org/s/express-2017/stage/15/puzzle/3": {
    "short_instructions": "Now try something similar with the \"when up arrow\" block. Move the paddle to the finish target at the top."
  },
  "https://studio.code.org/s/express-2017/stage/15/puzzle/4": {
    "short_instructions": "This time you need to add four blocks. Move the paddle to all four finish targets to complete this puzzle."
  },
  "https://studio.code.org/s/express-2017/stage/15/puzzle/5": {
    "short_instructions": "We're going to send a ball flying down towards the paddle. Attach a block to the \"when ball hits paddle\" block to ensure the ball reaches the finish target."
  },
  "https://studio.code.org/s/express-2017/stage/15/puzzle/6": {
    "short_instructions": "Now the finish target is on the top. You need to attach blocks to both of the \"when ball hits\" blocks to solve this puzzle."
  },
  "https://studio.code.org/s/express-2017/stage/15/puzzle/7": {
    "short_instructions": "Attach blocks to each of the \"when\" blocks. Bounce the ball until it hits the finish target."
  },
  "https://studio.code.org/s/express-2017/stage/15/puzzle/8": {
    "short_instructions": "There is now a goal at the top. Attach the \"score point\" and \"score opponent point\" blocks to the \"when ball in goal\" and \"when ball misses paddle\" blocks to make a game. See how many points you can score before your opponent scores twice."
  },
  "https://studio.code.org/s/express-2017/stage/15/puzzle/9": {
    "short_instructions": "You can now attach blocks to the \"when run\" block. You have to attach the new \"launch new ball\" block in more than one place. Also, try changing the scene or the speed of the paddle and the ball and see how many points you can score before your opponent scores twice."
  },
  "https://studio.code.org/s/express-2017/stage/15/puzzle/10": {
    "short_instructions": "Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones."
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/1": {
    "short_instructions": "Move to the pile of dirt and use the `remove` block to remove it.",
    "long_instructions": "_\"Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting!\"_  \n\nMove to the pile of dirt and use the `remove` block to remove it.",
    "authored_hints": {
      "courseD_farmer_while1_a": "You will need to move forward four times to get to the pile. Can you use a `repeat` loop for this?",
      "courseD_farmer_while1_b": "Use the `remove 1` block when you are standing on the pile of dirt to remove it."
    }
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/2": {
    "short_instructions": "Move to the hole and fill it with six shovelfuls of dirt, using the `fill` block.",
    "authored_hints": {
      "courseD_farmer_while2_a": "You will only need to move once to get to the hole.",
      "courseD_farmer_while2_b": "You will need the `fill 1` block six times. Can you use a loop to make this simpler?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/3": {
    "short_instructions": "Use as few blocks as possible to solve this puzzle.",
    "long_instructions": "_\"Move to the pile of dirt and tell me how many shovelfuls to remove.\"_\n\nUse as few blocks as possible to solve this puzzle.",
    "authored_hints": {
      "courseD_farmer_while3_a": "A loop can help you simplify your code here.",
      "courseD_farmer_while3_b": "You shouldn't need any `turn` blocks to get to the pile."
    }
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/5": {
    "short_instructions": "Help the farmer remove this entire pile using a `while` loop.",
    "long_instructions": "_\"I don't know how much dirt is in this pile!\"_\n\nHelp the farmer remove this entire pile using a `while` loop.",
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Look closely at the code below.  What will happen after you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "Nothing will happen.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            },
            {
              "text": "The farmer will never stop removing dirt.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            },
            {
              "text": "The farmer will remove dirt as long as there is a pile, then stop when the pile is gone.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/6": {
    "short_instructions": "Help the farmer remove this entire pile using a `while` loop.",
    "long_instructions": "_\"I don't know how much dirt is in this pile!\"_\n\nHelp the farmer remove this entire pile using a `while` loop.",
    "authored_hints": {
      "courseD_farmer_conditionals4_a": "Instead of using a `repeat` loop, use a `while` loop to keep digging until the pile is gone.",
      "courseD_farmer_conditionals4_b": "This looks very similar to an earlier puzzle, the only difference is which loop you need."
    }
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/7": {
    "short_instructions": "Help me remove all of this dirt. ",
    "authored_hints": {
      "courseD_farmer_conditionals5a_a": "Try nesting a `while` loop inside of a `repeat` loop.",
      "courseD_farmer_conditionals5a_b": "The farmer needs to move forward a total of five times to get to the end of the row. What else does the farmer need to do?",
      "courseD_farmer_conditionals5a_c": "Move forward 5 times. Each time you move forward, remove the pile of dirt by using the `while there is a pile` block."
    }
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/8": {
    "short_instructions": "Use the `while` loop to easily fill all of the holes.",
    "long_instructions": "Look at all of those holes!  Each one needs a different amount of dirt.   \n\nYou can use the `while` loop to easily fill them all!",
    "authored_hints": {
      "courseD_farmer_conditionals6_a": "Make sure you're using the `while` loop to figure out how many times to fill each hole.",
      "courseD_farmer_conditionals6_b": "Notice that the farmer needs to move forward and down several times in a stair-step pattern.",
      "courseD_farmer_conditionals6_c": "The stair step pattern uses the following blocks\n\n-   move forward\n-   fill hole\n-   turn right\n-   move forward\n-   fill hole\n-   turn left\n\nHow many times do you need to use this stair step pattern?\n\nMake sure you are using the `while there is a hole` to fill the hole."
    }
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/9": {
    "short_instructions": "Fill in the hole at the end of each of these paths.",
    "authored_hints": {
      "courseD_farmer_conditionals8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.",
      "courseD_farmer_conditionals8_b": "Putting a `while path ahead` loop inside of a repeat loop can help you in this puzzle.",
      "courseD_farmer_conditionals8_c": "What do you need to do at the end of each path?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/10": {
    "short_instructions": "Challenge: Fill all of these holes using as few blocks as possible. ",
    "long_instructions": "**Challenge:** Fill all of these holes using as few blocks as possible. ",
    "authored_hints": {
      "courseD_farmer_conditionals8_a": "You are going to need to use more than one `while` loop.",
      "courseD_farmer_conditionals8_b": "Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.",
      "courseD_farmer_conditionals8_c": "Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times."
    }
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/11": {
    "short_instructions": "Flatten all of these piles using as few blocks as possible. "
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/12": {
    "short_instructions": "Flatten all of these piles using as few blocks as possible. "
  },
  "https://studio.code.org/s/express-2017/stage/17/puzzle/13": {
    "short_instructions": "Flatten all of these piles using as few blocks as possible. ",
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Take a good look at the code below. What will be left at the end of this puzzle?"
            }
          ],
          "answers": [
            {
              "text": "Nothing.  This code will leave only level ground.",
              "correct": false,
              "feedback": "Incorrect. There is no code to remove dirt from the pile."
            },
            {
              "text": "This code will leave the pile completely untouched.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "This code will leave the holes completely untouched.",
              "correct": false,
              "feedback": "Incorrect. The `while` loop will handle any size loop, but there is no code to remove dirt from the pile."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The `while` loop will handle any size loop, but there is no code to remove dirt from the pile."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/17/extras?level_name=courseD_farmer_while_challenge1": {
    "short_instructions": "Fill all of the holes and remove all of the piles.",
    "long_instructions": "Fill all of the holes and remove all of the piles.",
    "authored_hints": {
      "courseD_farmer_while_challenge1_a": "Each hole or pile is located one space **backward** from the end of the path.",
      "courseD_farmer_while_challenge1_b": "If you use a `while` loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt or fill any hole, no matter where she is.",
      "courseD_farmer_conditionals8_c": "It is possible to solve this without using any `repeat` loops. To do this, you will need to use four `while` loops."
    }
  },
  "https://studio.code.org/s/express-2017/stage/17/extras?level_name=courseD_farmer_while_challenge2": {
    "short_instructions": "Fill all of the holes and remove all of the piles.",
    "long_instructions": "Fill all of the holes and remove all of the piles.",
    "authored_hints": {
      "courseD_farmer_while_challenge1_a": "Each hole or pile is located one space **backward** from the end of the path.",
      "courseD_farmer_while_challenge1_b": "If you use a `while` loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt and fill any hole, while standing in the same place.",
      "courseD_farmer_conditionals8_c": "It is possible to solve this without using any `repeat` loops. To do this, you will need to use four `while` loops."
    }
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/1": {
    "short_instructions": "Get the angry bird to the pig.",
    "authored_hints": {
      "courseD_maze_until1_a": "Are there any sequences you can loop to make your code shorter?",
      "courseD_maze_until1_b": "Try using a nested loop to solve this puzzle."
    }
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/3": {
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Take a close look at the code below.  What do you think will happen when you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "The bird will not move at all.",
              "correct": false,
              "feedback": "Incorrect. The code makes the bird move forward while there is a path, then turn left.  It keeps doing this until it reaches the pig!"
            },
            {
              "text": "The bird will make it to the pig.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bird will move forward and run into the TNT.",
              "correct": false,
              "feedback": "Incorrect. The code makes the bird move forward while there is a safe path, then turn left.  It keeps doing this until it reaches the pig!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The code makes the bird move forward while there is a path, then turn left.  It keeps doing this until it reaches the pig!."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/4": {
    "short_instructions": "Get the bird to the pig.",
    "authored_hints": {
      "courseD_maze_until3_a": "-   What does your code do?\n-   What is it supposed to do?\n-   What does that tell you?",
      "courseD_maze_until3_b": "If you are getting stuck, try writing out the steps on a piece of paper and looking for places where they repeat.",
      "courseD_maze_until3_c": "Is there a stair step pattern you can follow for this puzzle?",
      "courseD_maze_until3_d": "Don't forget to use the `repeat until` block to make your code shorter."
    }
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/5": {
    "short_instructions": "Can you get the zombie to the sunflower using only the blocks that are available?",
    "long_instructions": "_\"Dear person. Me zombie. Me hungry. Must... get... to sunflower...\"_\n\nCan you get the zombie to the sunflower using only the blocks that are available?",
    "authored_hints": {
      "courseD_maze_until4_a": "Use the \"Step\" button to go through your code line by line.\n\n-   Does everything work at the first step?\n-   Does everything work at the second step?\n-   Where does it go wrong?",
      "courseD_maze_until4_b": "Is there a stair step pattern you can follow for this puzzle?",
      "courseD_maze_until4_c": "Don't forget to use the `repeat until` block to make your code shorter."
    }
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/6": {
    "short_instructions": "Use the `if` block to help the zombie decide when to turn, then get the zombie to the sunflower.",
    "long_instructions": "Use the `if` block to help the zombie decide when to turn, then get the zombie to the sunflower.",
    "authored_hints": {
      "courseD_maze_until5_a": "Don't forget to use `if path to the left` to keep the zombie checking for a place to turn.",
      "courseD_maze_until5_b": "To use only one `move forward`, put it inside the `repeat until sunflower` block.",
      "courseD_maze_until5_c": "After each step, the zombie should check whether there is a path to the left. What should he do if he finds one?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/7": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until6_a": "This time, try the `if path to the right` to keep the zombie on track.",
      "courseD_maze_until6_b": "To use only one `move forward`, put it inside the `repeat until sunflower` block.",
      "courseD_maze_until6_c": "Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/8": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until7_a": "You don't need your code to be any longer than last time, just because the maze is!",
      "courseD_maze_until7_b": "Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!",
      "courseD_maze_until7_c": "Remember to check for paths to the left, because turning right will take you down the wrong path!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/10": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until8_a": "Make sure you're using an `if/else` block to keep the zombie headed the right direction.",
      "courseD_maze_until8_b": "With your `if/else` block: if there is a path ahead, what should you do?",
      "courseD_maze_until8_c": "With your `if/else` block: if there is not a path ahead, which way should you turn?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/11": {
    "short_instructions": "**Challenge:** Avoid the chompers and help the zombie get to the sunflower.",
    "long_instructions": "**Challenge:** Avoid the chompers and help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until8_a": "Using `if path ahead` will keep you going forward whenever possible, helping you miss the paths with chompers.",
      "courseD_maze_until8_b": "Which direction should you turn if there is no path forward?",
      "courseD_maze_until8_c": "Remember to use the `repeat until` block to get you to the sunflower!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/12": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower."
  },
  "https://studio.code.org/s/express-2017/stage/18/puzzle/13": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Look carefully at the code below.  What will happen after you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "The zombie will turn right immediately and get stuck.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The zombie will make it to the sunflower.",
              "correct": false,
              "feedback": "Incorrect. In this code, it looks for a right turn *before* it looks to see if it can go straight.  Because of this, the puzzle fails."
            },
            {
              "text": "The zombie will turn right on the first path and go around in circles forever.",
              "correct": false,
              "feedback": "Incorrect. The zombie looks only for a right turn or straight path. It never looks to turn left, so it get stuck almost immediately."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "In this code, it looks for a right turn *before* it looks to see if it can go straight.  Because of this, the puzzle fails."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/18/extras?level_name=courseD_maze_until_challenge1": {
    "short_instructions": "No hints, just challenge. Get the zombie to the sunflower.",
    "long_instructions": "No hints, just challenge. Get the zombie to the sunflower."
  },
  "https://studio.code.org/s/express-2017/stage/18/extras?level_name=courseD_farmer_until_challenge2": {
    "short_instructions": "Use If/Else blocks to follow the curvy path. At each corner, use the `remove 1` command in a loop to clear the piles.",
    "long_instructions": "Use `If/Else` blocks to follow the curvy path. At each corner, use the `remove 1` block in a loop to clear the piles."
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/1": {
    "short_instructions": "Add a second `move forward` block to reach the sheep.",
    "long_instructions": "Add a second `move forward` block to reach the sheep.",
    "authored_hints": {
      "mc_1_a": "The `move forward` block is at the top of the toolbox.",
      "mc_1_b": "Make sure both `move forward` blocks are snapped to the `when run` block."
    },
    "callouts": {
      "craft_run_button_callout": "Hit \"Run\" to try your program",
      "craft_drag_block_callout": "Drag a \"move forward\" block and snap it below the other block"
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/2": {
    "short_instructions": "Wood is a very important resource. Many things are made from it. Walk to the tree and use the “destroy block” command to chop it down.",
    "long_instructions": "Wood is a very important resource. Many things are made from it. Walk to the tree and use the `destroy` block command to chop it down.",
    "authored_hints": {
      "mc_2_a": "You need to `move forward` twice to stand in front of the tree.",
      "mc_2_b": "The `destroy block` command cuts down the tree in front of you."
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/3": {
    "short_instructions": "Sheep-shearing time! Use the “shear” command to gather wool from both sheep.",
    "long_instructions": "Sheep-shearing time! Use the `shear` command to gather wool from both sheep.",
    "authored_hints": {
      "mc_3_a": "The `shear` block gets the sheep in front of you. Are you facing the sheep?",
      "mc_3_b": "If you need to change the way you are facing, use a `turn` block.",
      "mc_3_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/4": {
    "short_instructions": "We need to build a house before the sun goes down. Houses require a lot of wood. Cut down all 3 trees.",
    "authored_hints": {
      "mc_4_a": "You can chop down trees in any order. What path takes the smallest number of blocks?",
      "mc_4_b": "The `destroy block` command cuts down the tree in front of you."
    },
    "callouts": {
      "craft_callout_preplaced": "We've put some blocks here to get you started"
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/5": {
    "short_instructions": "Every house starts with a wall. Build the first part of your house by putting the \"place\" and \"move forward\" commands inside the repeat loop.",
    "long_instructions": "Every house starts with a wall. Build the first part of your house by putting the `place` and `move forward` commands inside the repeat loop.",
    "authored_hints": {
      "mc_5_a": "Use the `place` block first, and then the `move` block.",
      "mc_5_b": "Make sure both blocks are inside of the `repeat` loop to run the code more than once.",
      "mc_5_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
    },
    "callouts": {
      "craft_inside_repeat": "Repeat actions by placing blocks in here"
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/6": {
    "short_instructions": "Build the rest of your house from any material you'd like. The \"repeat\" command will come in handy.",
    "long_instructions": "Build the rest of your house from any material you'd like. The `repeat` command will come in handy.",
    "authored_hints": {
      "mc_6_a": "Click the arrow on the `place` block to choose what you want to place.",
      "mc_6_b": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.",
      "mc_6_c": "You can put more than one block inside of a `repeat` loop."
    },
    "callouts": {
      "craft_callout_preplaced_house": "This code will start building your house. Can you finish it?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/7": {
    "short_instructions": "It’s good to plan ahead. Plant crops on both sides of the water so you don’t get hungry later on.",
    "authored_hints": {
      "mc_7_a": "Use the `plant crop` block to plant a crop in the space where you are standing.",
      "mc_7_b": "Both stripes of dark brown land by the water need to be filled with crops.",
      "mc_7_c": "You can put more than one block inside of a `repeat` loop."
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/8": {
    "short_instructions": "Running into a Creeper is a bad idea. Carefully move past the Creepers and reach the safety of your home.",
    "authored_hints": {
      "mc_8_a": "There are a few paths you can take. Which is the shortest?",
      "mc_8_b": "Use `repeat` loops to simplify your code.",
      "mc_8_c": "Your goal is to get into the doorway of the house at the top of the screen."
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/9": {
    "short_instructions": "You’ll find the most valuable resources underground, but it can get dark. Place at least 2 torches and mine at least 2 coal.",
    "authored_hints": {
      "mc_9_a": "Are you facing the right way? The `destroy block` mines the block in front of you.",
      "mc_9_b": "The black specks in the wall are coal! Use `destroy block` on these to mine the coal.",
      "mc_9_c": "Use `place torch` to put a torch in the space where you are standing."
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/10": {
    "short_instructions": "Walking into molten lava is a bad idea. Place cobblestone to create a bridge, then mine at least two of the iron blocks.",
    "authored_hints": {
      "mc_10_a": "The iron blocks are the speckled spaces behind the torch! How are you going to get over there?",
      "mc_10_b": "When you are standing at the edge of the lava, use `place cobblestone ahead` to make a safe path. Then, you can walk over it!",
      "mc_10_c": "Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet."
    },
    "callouts": {
      "craft_what_is_iron": "Mine this iron!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/11": {
    "short_instructions": "Lava is hiding beneath some of these blocks, which you'll need to cover up before moving forward. An \"if\" command will come in handy here. Add a \"move forward\" command in the correct place to mine these blocks.",
    "long_instructions": "Lava is hiding beneath some of these blocks, which you'll need to cover up before moving forward. An `if` command will come in handy here. Add a `move forward` command in the correct place to mine these blocks.",
    "authored_hints": {
      "mc_11_a": "All of the code is in place to check for lava and deal with it. All you need to do is add a block to move.",
      "mc_11_b": "Should your `move forward` command go inside of the `if` statement or after?"
    },
    "callouts": {
      "craft_callout_moveforward": "This code will check for lava, can you add a command to move forward?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/12": {
    "short_instructions": "Now things are getting tricky. Mine 3 redstone, but don’t fall in the lava. Use an \"If\" command to place cobblestone over any lava you uncover.",
    "long_instructions": "Now things are getting tricky. Mine 3 redstone, but don’t fall in the lava. Use an `if` command to place cobblestone over any lava you uncover.",
    "authored_hints": {
      "mc_12_a": "The spaces with red speckles are where you will find Redstone.",
      "mc_12_b": "Can you use a `repeat` loop to make your code shorter?",
      "mc_12_c": "Use an `if` statement to check spaces for lava, then place cobblestones. "
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/13": {
    "short_instructions": "Great job! You’ve gathered lots of resources and built a modest home. Now lay rail from the edge of the map to the door of your house.",
    "authored_hints": {
      "mc_13_a": "Use `place rail` to lay rail on the square you are standing in.",
      "mc_13_b": "Use `repeat` loops to make your code shorter."
    }
  },
  "https://studio.code.org/s/express-2017/stage/19/puzzle/14": {
    "short_instructions": "Congratulations! You've completed all our puzzles! Now mine, build, and create something unique by using everything you've learned so far."
  },
  "https://studio.code.org/s/express-2017/stage/20/puzzle/1": {
    "short_instructions": "Use conditionals to make sure that you pick corn only when it's there.",
    "long_instructions": "_\"Corn you help me harvest today?\"_\n\nHelp the harvester check her row of corn to see if anything is ready to pick.  Use conditionals to look at each sprout.  Every stalk will have either **0 or 1** pieces of corn ready to harvest.",
    "authored_hints": {
      "courseD_farmer_condLoops1_a": "You will need to look for corn 5 times, using a repeat loop.",
      "courseD_farmer_condLoops1_b": "Make sure to use an `if at corn` block or you might try to pick something that's not there!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/20/puzzle/2": {
    "short_instructions": "Help the harvester collect both corn and lettuce from the field.",
    "long_instructions": "_\"Lettuce collect both crops from this row!\"_\n\nThis garden is all mixed up, it has both **corn and lettuce**!  \n\nHelp the harvester pick the items that are ready for harvesting.  Each plant will have either **one** corn or **one** lettuce.",
    "authored_hints": {
      "courseD_farmer_condLoops2_a": "The best way to do this is to nest `if` statements by placing one inside of the other.  ",
      "courseD_farmer_condLoops2_b": "For this puzzle, you should have one `if/else` statement and one plain `if` statement.",
      "courseD_farmer_condLoops2_c": "Your `if` statement could look a lot like this:\n\n-   if at corn\n    -   pick corn\n-   else\n    -   if at lettuce\n        -   pick lettuce\n\nIf there is nothing there, you won't pick anything!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/20/puzzle/3": {
    "short_instructions": "_\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"_",
    "long_instructions": "_\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"_\n\nEach plant will have either one piece of corn, one head of lettuce, or one pumpkin.",
    "authored_hints": {
      "courseD_farmer_condLoops3_a": "To get all of the items, try nesting `if` statements three deep.\n\nThis means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.",
      "courseD_farmer_condLoops3_b": "For this puzzle, you should have two `if/else` statements and one plain `if` statement."
    }
  },
  "https://studio.code.org/s/express-2017/stage/20/puzzle/4": {
    "short_instructions": "Help the harvester pick all of the lettuce in each cluster before moving on to the next bunch.",
    "long_instructions": "_\"Gosh! Now the lettuce is growing in clusters!\"_  \n\nThe harvester wants to pick everything from her lettuce garden. Each plant will now have more than one head of lettuce on it, so the farmer will need to keep picking while there is still lettuce growing.  \n\n##### (Remember: This garden only has lettuce!)",
    "authored_hints": {
      "grade3_RunningFarm_4courseD_farmer_condLoops4": "No one knows how many heads of lettuce will grow from each sprout.\n\nUse a `while there is lettuce` loop to keep picking until each piece has been gathered.",
      "grade3_RunningFarm_4courseD_farmer_condLoops4_b": "The `while` loop will handle empty spaces as well! Since there is no lettuce, it will not pick any and let the code move on.",
      "grade3_RunningFarm_4courseD_farmer_condLoops4_c": "You can use either a `while path ahead` loop or a `repeat` loop to go through all of the crops."
    }
  },
  "https://studio.code.org/s/express-2017/stage/20/puzzle/5": {
    "short_instructions": "Collect all of the corn and lettuce, then grab the pumpkin at the end.",
    "long_instructions": "_\"What a bountiful crop!\"_\n\nThis field has clusters of corn and lettuce growing together -- with one pumpkin at the end.  Can you harvest everything?",
    "authored_hints": {
      "courseD_farmer_condLoops5_a": "There is a new loop: `repeat until at pumpkin`. Can you see how to use it in this puzzle?",
      "courseD_farmer_condLoops5_b": "There could be more than one corn or lettuce plant in each spot. Use a `while` loop to gather all of them!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/20/puzzle/6": {
    "short_instructions": "Can you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
    "long_instructions": "_\"Let's take this one step further!\"_\n\nCan you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
    "authored_hints": {
      "courseD_farmer_condLoops6_a": "Use a `while there is corn` loop to make sure you get all of the corn along the way. This block won't do anything if there's no corn to pick.",
      "courseD_farmer_condLoops6_b": "Make sure to check `if` there's a path ahead before you take your next step!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/20/puzzle/7": {
    "short_instructions": "Challenge: Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "**Challenge:** Collect all of the corn and lettuce, then pick the pumpkin.",
    "authored_hints": {
      "courseD_farmer_condLoops7_a": "Notice that the easiest path to get to all of the crops is still a spiral.\n\n[][0]",
      "courseD_farmer_condLoops7_b": "Try using `when path ahead` to keep the harvester moving the right number of steps."
    }
  },
  "https://studio.code.org/s/express-2017/stage/20/puzzle/8": {
    "short_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "Collect all of the corn and lettuce, then pick the pumpkin."
  },
  "https://studio.code.org/s/express-2017/stage/20/puzzle/9": {
    "short_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "Collect all of the corn and lettuce, then pick the pumpkin."
  },
  "https://studio.code.org/s/express-2017/stage/20/puzzle/10": {
    "short_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Take a close look at the code below.  What will happen after you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "The harvester will collect all of the crops.",
              "correct": false,
              "feedback": "Incorrect. There is no code here for collecting the pumpkin."
            },
            {
              "text": "The harvester will not collect any of the crops with the path she is taking.",
              "correct": false,
              "feedback": "Incorrect. The code will have the harvester repeatedly make a stairstep pattern and collect as much corn or lettuce as she comes across. She will not pick the pumpkin."
            },
            {
              "text": "The harvester will collect all of the crops, except the pumpkin.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The code will have the harvester repeatedly make a stairstep pattern and collect as much corn or lettuce as she comes across. She will not pick the pumpkin."
            }
          ],
          "markdown": "The sprouts in this puzzle will be either corn or lettuce.\n<br/>\n"
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/20/extras?level_name=courseD_farmer_condLoops_challenge1": {
    "short_instructions": "Collect everything to complete the level. Each hidden crop has only one corn or lettuce.",
    "long_instructions": "The pumpkins mark the place where you should `turn right`. Otherwise keep going forward, but remember to collect all of the lettuce or corn along the way. \n\n**Each hidden crop has only one corn or lettuce.**",
    "authored_hints": {
      "courseD_farmer_condLoops_challenge1_a": "The \"Step\" button could be very helpful in this challenge.",
      "courseD_farmer_condLoops_challenge1_b": "Normally you would just `pick pumpkin` if you are at a pumpkin. What else do you need to do if you're at a pumpkin?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/20/extras?level_name=courseD_farmer_condLoops_challenge2": {
    "short_instructions": "Collect everything to complete the level.",
    "long_instructions": "_\"It's a very varied vegetable maze!\"_ \n\nTurn right at pumpkins, turn left at lettuce. Collect everything to complete the level.",
    "authored_hints": {
      "courseD_farmer_condLoops_challenge2_a": "The amount of each vegetable in each space can change. A `while` loop can help!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/1": {
    "long_instructions": "Let's draw an equilateral triangle. \n\nIt has to be exactly 50 pixels long on each side.",
    "authored_hints": {
      "grade5_artist_variables_triangles1_a": "To make an internal angle of 60 degrees in this triangle, remember to turn the artist 120 degrees.",
      "grade5_artist_variables_triangles1_b": "Use the `repeat` loop to make your code shorter.",
      "grade5_artist_variables_triangles1_c": "Inside your loop, you will want to move forward 50 pixels, then turn left 120 degrees."
    },
    "callouts": {
      "grade5_artist_variables_triangles1_1": "Notice that blocks now have a new way to enter numbers. These `math` blocks can be pulled out and moved around!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/2": {
    "short_instructions": "Now draw three of those triangles right next to each other.   ",
    "long_instructions": "Now use another loop to draw three of those triangles right next to each other.   \n\nYou can nest the code from your last puzzle inside.",
    "authored_hints": {
      "courseF_artist_variables2_a": "Remember to move forward after drawing each triangle.",
      "courseF_artist_variables2_b": "Your new loop will contain the loop for your triangle, then a `move forward` command."
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/4": {
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "We have set the variable \"length\" to 50.  What will happen when you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "The artist will draw a triangle with 50 pixel sides.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The artist will draw a 50-sided polygon with 3 pixel sides.",
              "correct": false,
              "feedback": "Incorrect. The variable `length` would need to be in the `repeat` loop for that to happen."
            },
            {
              "text": "The artist will draw three open sides with 50 degree turns.",
              "correct": false,
              "feedback": "Incorrect.  The `length` variable would need to be used in the `turn` block for that to happen."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The `length` variable is set to 50 and is being used in the `move forward by` block, so the artist will draw a triangle with 50 pixel sides."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/5": {
    "short_instructions": "Move the length of 50 into a variable so we can use it in the next few puzzles.",
    "long_instructions": "Before things get tricky, can you move the length of 50 into a variable so we can use it in the next few puzzles?  \n\n[expandable][0]",
    "authored_hints": {
      "courseF_artist_variables3_a": "The variable `length` will be used in two places in your code: In the side length of your triangle, and in the amount you move forward between triangles.",
      "courseF_artist_variables3_b": "A number block with value 50 should only be in one place: after the `set variable length` block."
    },
    "callouts": {
      "courseF_artist_variables3_a": "Use this to set the value of the variable `length`"
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/6": {
    "short_instructions": "Now, use the `length` variable to have the artist jump forward and down by `length` pixels between triangles.",
    "long_instructions": "Now, use the `length` variable to have the artist jump forward and down by `length` pixels between triangles.",
    "authored_hints": {
      "courseF_artist_variables4_a": "Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.",
      "courseF_artist_variables4_c": "This is the pattern your artist will be following:\n\n[][0]",
      "courseF_artist_variables4_b": "[][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/7": {
    "short_instructions": "Add another set of loops at the end of your code to add three more triangles. This time, move forward and up!",
    "authored_hints": {
      "courseF_artist_variables5_a": "The second half of your code should look almost the same as the first half, except you will be turning _left_, jumping, then turning _right_.",
      "courseF_artist_variables5_b": "The first half of your code will draw three triangles, and the second half will draw the other three.",
      "courseF_artist_variables5_c": "Start by duplicating the code in the first half of your program, then alter it to make the design shown.",
      "courseF_artist_variables5_d": "This is the pattern your artist will follow:\n\n[][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/8": {
    "short_instructions": "Now make the triangles to be 60 pixels wide, with 60 pixel jumps.  ",
    "long_instructions": "**OOPS!**  \n\nWe actually need the triangles to be 60 pixels wide, with 60 pixel jumps.  \n\nAren't you glad you're using a variable?",
    "authored_hints": {
      "courseF_artist_variables6_a": "Thanks to variables, you only need to change one number at the top to make this work.",
      "courseF_artist_variables6_b": "You will need to edit the number block with value 50, but nothing else in the code needs to be altered."
    },
    "callouts": {
      "courseF_artist_variables6_1": "Variables can be helpful when you have to change a lot of copies of the same number."
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/9": {
    "short_instructions": "Build this design where the squares have 80 pixel sides and the artist jumps 80 pixels over and down between each one.",
    "long_instructions": "Use what you've learned to build this design where the squares have 80 pixel sides and the artist jumps 80 pixels over and down between each one.",
    "authored_hints": {
      "courseF_artist_variables6a_a": "Remember to use the variable `length` instead of an actual number to solve this puzzle.",
      "courseF_artist_variables6a_b": "This code will be very similar to your triangle code, just with a different shape!",
      "courseF_artist_variables6a_c": "Write the code for one square first, then add the code to move between squares. Finally, add a loop around everything!",
      "courseF_artist_variables6a_d": "This is the pattern you'll follow!\n\n[][0]"
    },
    "callouts": {
      "courseF_artist_variables6a_1": "Variables can be helpful when you have to change a lot of copies of the same number."
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/10": {
    "dsls": {
      "markdown": "<h2>More on Variables</h2>\n\n<img src=\"https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png\" style=\"padding-left: 30px; width:300px; float:right;\"/>\n<h3>You've just learned one great way to use a variable...as a constant!  \nWhen you use a variable as a constant, you are setting a value one time, then using that *same* value multiple times in your program without changing it after you click \"Run\".  </h3>\n<br/><hr/>\n<h3>In the next part of the series, you will write code with variables that *do* change inside the program.</h3>\n\n"
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/11": {
    "short_instructions": "Draw a triangle with 150 pixels sides. ",
    "long_instructions": "Let's start this section by drawing a triangle with 150 pixel sides. \n\nBe sure to use the `length` variable and a repeat loop.",
    "authored_hints": {
      "courseF_artist_variables7_a": "Start your code by using the `set length` block. Set the length variable to 150.",
      "courseF_artist_variables7_b": "You can use a `repeat` loop to make your code for the triangle simpler.",
      "courseF_artist_variables7_c": "You will want to turn left 120 degrees to make the corners of the triangle."
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/12": {
    "short_instructions": "Rebuild the triangle code from the last puzzle, but this time use the `set length to` block to reset the `length` variable to `length`+10 at the end of each loop iteration.",
    "long_instructions": "Rebuild the triangle code from the last puzzle, but this time use the `set length to` block to reset the `length` variable to `length`+10 at the end of each loop iteration.\n\n[blockly block][0]\n\nThe length of the first side of the triangle is 150 pixels.",
    "authored_hints": {
      "courseF_artist_variables8_b": "Remember to start your code for the triangle with the `set length` block, and start it at 150 pixels.",
      "courseF_artist_variables8_c": "Make sure to use the `repeat` loop to draw your triangle.",
      "courseF_artist_variables8_a": "Try putting the set of \n\n[blockly block][0]\n\nblocks inside your loop at the end."
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/13": {
    "short_instructions": "See what happens when you repeat the code from the last puzzle 30 times instead of only 3!  Feel free to make your lines any color or pattern for some extra zest.",
    "long_instructions": "Time to make some art!  \n\nSee what happens when you repeat the code from the last puzzle **30** times instead of only 3!\n\nFeel free to make your lines any color or pattern for some extra zest.",
    "authored_hints": {
      "courseF_artist_variables9_a": "For this puzzle, all you need to do is change how many times the loop repeats.",
      "courseF_artist_variables9_b": "Make sure the blocks that increment `length` are within your loop so the lines keep getting longer."
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/14": {
    "short_instructions": "Here's your code from the last puzzle.  Try editing the variable in other ways.  ",
    "long_instructions": "Here's your code from the last puzzle.  Try editing the variable in other ways.  \n\n-   What happens if you start out with `length` less than 150? \n-   What if you multiply your variable by 1.25 each time through?\n-   What will your code do if you turn 119 degrees?",
    "authored_hints": {
      "courseF_artist_variables10_a": "Have fun with this level! See what little changes can do to your code.",
      "courseF_artist_variables10_b": "You can try multiple things, and run your code multiple times."
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/puzzle/15": {
    "short_instructions": "**Freeplay:** Take what you've learned and make your own drawing. ",
    "long_instructions": "**Freeplay:** Take what you've learned and make your own drawing. \n\nHow can you use variables with squares, pentagons, or hexagons?",
    "authored_hints": {
      "courseF_artist_variablesFP_a": "Try one of these three drawings.\n[][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/extras?level_name=courseF_artist_variables_challenge1": {
    "short_instructions": "Can you create a `length` variable and use it to create this pattern?",
    "long_instructions": "Challenge alert! Can you create a `length` variable and use it to create this interesting pattern?",
    "authored_hints": {
      "courseF_artist_variables_challenge1_a": "Each vertical line has a length of `10`. Each horizontal line should have a length of `length`.",
      "courseF_artist_variables_challenge1_b": "You will want to increase the value of `length` by 10 **twice** inside the loop.",
      "courseF_artist_variables_challenge1_c": "To complete the pattern you will need to turn left twice, turn right twice, and move forward a total of four times.",
      "courseF_artist_variables_challenge1_d": "This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.\n\n[][0]\n\nIf you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.",
      "courseF_artist_variables_challenge1_e": "Here is the solution.\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/22/extras?level_name=courseF_artist_variables_challenge2": {
    "short_instructions": "You've now learned everything you need to know to make a pattern like this!",
    "long_instructions": "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\" width=\"250px\"/>\n\nYou've now learned everything you need to know to make a pattern like this! This puzzle is meant to be difficult.  Can you stick with it until you figure out the solution?",
    "authored_hints": {
      "courseF_artist_variables_challenge2_a": "Variables are helpful because you can add to them each time through a loop.",
      "courseF_artist_variables_challenge2_c": "Using one variable for `sides` and one for `length` makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.",
      "courseF_artist_variables_challenge2_d": "**Solution:**\n\n[Solution][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/puzzle/1": {
    "short_instructions": "Variables can be used to store text that you want to use later.  Have Kiki, the soccer player,  scream \"Goal!\" by assigning that text to the `shout` variable.",
    "long_instructions": "Variables can be used to store text that you want to use later.  \n\nHave Kiki, the soccer player,  scream \"Goal!\" by assigning that text to the `shout` variable.",
    "authored_hints": {
      "courseF_playlab_variables1a_a": "You will want to replace the words “What should I shout?” in the green block with “Goal!”"
    },
    "callouts": {
      "courseF_playlab_variables1a_1": "The toolbox has been organized into categories to make it easier to find the blocks you need."
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/puzzle/2": {
    "short_instructions": "Insert the variable `color` into the middle of a sentence by putting it into the empty slot in the `join` block.",
    "long_instructions": "We can make sentences more interesting by mixing pieces of text with variables.\n\nInsert the variable `color` into the middle of a sentence by putting it into the empty slot in the `join` block.",
    "authored_hints": {
      "courseF_playlab_variables2b_a": "What do you think Kiki will say when you hit `Run`?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/puzzle/3": {
    "short_instructions": "Help Kiki have a conversation with Brian by using the variable `age` in all of the places where age `12` should be used. ",
    "long_instructions": "Help Kiki have a conversation with Brian by using the variable `age` in all of the places where age `12` should be used. ",
    "authored_hints": {
      "courseF_playlab_variables3b_a": "There are two blocks with empty spaces: an `actor say` block, and a `join` block. Add the variable blocks there!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/puzzle/4": {
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "What would happen if the user entered the name \"Ali\" at the prompt?"
            }
          ],
          "answers": [
            {
              "text": "The pirate would say, \"Pleasure to meet you, Ali.\" and that is all.",
              "correct": true,
              "feedback": "Correct. "
            },
            {
              "text": "The pirate would say, \"Pleasure to meet you.\" and that is all.",
              "correct": false,
              "feedback": "Incorrect. Notice that the `join` block inserts the provided name into the pirate's sentence."
            },
            {
              "text": "The pirate would say, \"Ali\" and that is all.",
              "correct": false,
              "feedback": "Incorrect. Notice that the `join` block inserts the provided name into the pirate's sentence."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "Incorrect. Notice that the `join` block inserts the provided name (Ali) into the pirate's sentence. "
            }
          ],
          "markdown": "**This puzzle uses a new block called the `ask` block.**\n\nThe `ask` block stops the program and prompts the user to enter some text. \n\nWhatever text the user enters is then saved to the variable shown at the end of the `ask` block.  In this case, it's the variable `name`.\n"
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/23/puzzle/5": {
    "short_instructions": "Put the variables in the correct places to create this conversation.",
    "long_instructions": "Now, Pirate Pegleg has some questions for Brian.\n\nThis code uses an `ask` block, so you can type Brian's answers after you click \"Run\". \n\nPut the variables in the correct places to create this conversation.",
    "authored_hints": {
      "courseF_playlab_variables4b_a": "You don’t need any more blocks from the toolbox here.",
      "courseF_playlab_variables4b_b": "Put the two `age` variables and one `name` variable where they make the most sense in the conversation."
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/puzzle/6": {
    "short_instructions": "Let's combine the `ask` block with an `if/else` statement to have some fun!",
    "long_instructions": "Let's combine the `ask` block with an `if/else` statement to have some fun!\n\nPirate Pegleg is going to ask you a question.  Drag a copy of the `answer` variable into the conditional for the `if` statement to check whether or not you entered the correct color.",
    "authored_hints": {
      "courseF_playlab_variables5c_a": "Find an `answer` variable block in the toolbox, under “Variables”.",
      "courseF_playlab_variables5c_b": "Test your code! Try entering “red”, and also other colors, to see what happens."
    },
    "callouts": {
      "courseF_playlab_variables5c_1": "You will find your variable block in here."
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/puzzle/7": {
    "short_instructions": "In the rest of this stage, we're going to build a game that you control!",
    "long_instructions": "In the rest of this stage, we will use multiple `ask` blocks and multiple `if/else` statements to create a game that **you** control!\n\nStart by setting the \"codename\" variable to a word that you can remember.  Then, use an `ask` block to get a codename from the users.  You will need an `if/else` block to see if the codename entered matches the codename that you have set.",
    "authored_hints": {
      "courseF_playlab_variables6c_a": "Under the “Input” section, use the `ask` block to get input from users."
    },
    "callouts": {
      "courseF_playlab_variables5c_1": "You will find your variable block in here."
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/puzzle/8": {
    "short_instructions": "Make the game do something by asking the user to guess a color.",
    "long_instructions": "Add another `ask` block to ask the user to guess a color.  \n\nKeep your `if/else` statement such that your codename always wins the game, but every other codename always loses.",
    "authored_hints": {
      "courseF_playlab_variables7c_a": "Put the new `ask` block before your `if/else` statement so you can use it there in other stages."
    },
    "callouts": {
      "courseF_playlab_variables7c_1": "Find the `ask` block here!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/puzzle/9": {
    "short_instructions": "Use the variables to make the game more personal.",
    "long_instructions": "Use the `join` block (in the toolbox under \"Text\") to make the win/lose messages more personal by incorporating both the `codename` and the `color` variables into the responses.",
    "authored_hints": {
      "courseF_playlab_variables8c_a": "The `join` block goes into an `actor say` block, and lets you use your variables in larger sentences."
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/puzzle/10": {
    "short_instructions": "Create some questions and weave the answers together into your very own story.",
    "long_instructions": "Time to make your own project!  \n\nCreate some questions and weave the answers together into your very own story.\n\nIf you need ideas, click the hints icon.",
    "authored_hints": {
      "courseF_playlab_variables7b_a": "Have a cat and a dog talk about their favorite foods. Use the ask block to find out the favorite food, then display the text to the screen!",
      "courseF_playlab_variables7b_b": "Have your favorite character ask if you want to hear a joke. If the answer is yes, display a joke to the screen."
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/extras?level_name=courseF_playlab_variables_challenge1": {
    "short_instructions": "Use these blocks to make the actors share a knock-knock joke. ",
    "long_instructions": "Use these blocks to make the actors share a knock-knock joke. Change the punchline and setup to tell your own joke!",
    "authored_hints": {
      "courseF_playlab_variables_challenge1_a": "You will need additional blocks from the tool box to get the actors to talk.\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/23/extras?level_name=courseF_playlab_variables_challenge2": {
    "short_instructions": "This game will use variables to keep track of points.  Tag Cat to get 2 points. Tag Penguin to get 3 points.  When Cat and Penguin touch, take points away. Get exactly 10 points to win!",
    "long_instructions": "Now for a game of tag! Tag Cat (actor 2) to get 2 points. Tag Penguin (actor 3) to get 3 points.  Get exactly 10 points to win!  \n\nBut be careful, when Cat and Penguin tag each other, they take points away.\n\n* * *\n\nAdd the blocks necessary to make this game work the way it's been explained.\n\n-   How will you get Dog to move in all directions using the arrow keys?\n-   How will you add points when Dog tags Cat or Penguin?\n-   How will you subtract points when Cat and Penguin touch?",
    "authored_hints": {
      "courseF_playlab_variables_challenge2_a": "Add and subtract points to the `score` variable when sprites collide.",
      "courseF_playlab_variables_challenge2_b": "You can change how far you move your sprite each time one of the arrow keys is pressed.",
      "courseF_playlab_variables_challenge2_c": "**Solution:**\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/1": {
    "short_instructions": "Collect the nectar from each flower using the fewest blocks possible.",
    "authored_hints": {
      "courseF_bee_for1_a": "Drag a purple number block into the blank space on the `repeat` loop to tell it how many times to repeat.",
      "courseF_bee_for1_b": "You will need two blocks in your ‘repeat’ loop to collect all of the nectar."
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/2": {
    "short_instructions": "Write the code to help the bee collect all of the nectar.",
    "long_instructions": "Write the code to help the bee collect all of the nectar.\n\nYou will need lots of blocks for this challenge, but we'll learn an easier way in the next puzzle.",
    "authored_hints": {
      "courseF_bee_for2_a": "If you’re confused, work one flower at a time, and test often.",
      "courseF_bee_for2_b": "Remember to move forward between each loop, so you reach each flower."
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/4": {
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Read the code below.  What will happen when you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "The bee will move forward and collect all of the nectar from every flower. ",
              "correct": false,
              "feedback": "Incorrect. The `for` loop will let the bee collect the right amount of nectar, but it is only set to reach 4 flowers."
            },
            {
              "text": "The bee will move forward and collect all of the nectar from every flower, except for one.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bee will move forward and collect one nectar from each flower. ",
              "correct": false,
              "feedback": "Incorrect. The `for` loop will let the bee collect the right amount of nectar, but it is only set to reach 4 flowers."
            },
            {
              "text": "The bee will move forward and try to collect more nectar than is in the flowers. ",
              "correct": false,
              "feedback": "Incorrect. The `for` loop will let the bee collect the right amount of nectar, but it is only set to reach 4 flowers."
            }
          ],
          "markdown": "Ah!  The use of `for` loops makes this puzzle a lot easier!\n\n\n"
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/5": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "authored_hints": {
      "courseF_bee_for4_a": "Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.",
      "courseF_bee_for4_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
      "courseF_bee_for4_c": "Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!"
    },
    "callouts": {
      "courseF_bee_for4_1": "You will find the `for` loop in here!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/6": {
    "short_instructions": "Try gathering this nectar by counting down from 5 to 1 by 1.",
    "long_instructions": "You can also use a `for` loop to count down. \n\nTry gathering this nectar by counting down from **5** to **1** by **1**.",
    "authored_hints": {
      "courseF_bee_for6_a": "Don't forget to use a `counter` variable inside your `repeat` loop.",
      "courseF_bee_for6_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
      "courseF_bee_for6_c": "Your loop should count **from 5 to 1**."
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/7": {
    "short_instructions": "Try collecting these flowers using an increment of 2.",
    "long_instructions": "The last number in your `for` loop is called the **\"increment\"**.  Each time the loop is run, the counter variable changes by the value of the **increment**.\n\nTry collecting these flowers using an **increment** of 2.",
    "authored_hints": {
      "courseF_bee_for7_a": "Your `for` loop will need to count from 1 to 7 by 2.",
      "courseF_bee_for7_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
      "courseF_bee_for7_c": "Remember to use the `counter` variable in your `repeat` loop."
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/8": {
    "short_instructions": "You've got this! What should your increment be to collect 3, 6, 9, 12, 15 nectar?",
    "long_instructions": "You've got this!  \n\nWhat should your **increment** be to collect 3, 6, 9, 12, 15 nectar?",
    "authored_hints": {
      "courseF_bee_for8_a": "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?",
      "courseF_bee_for8_b": "In this puzzle, you will need to move in a stair step pattern to get to the flowers.",
      "courseF_bee_for8_c": "Your loop will count _from 3 to 15_ with some increment. What is it?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/9": {
    "short_instructions": "Use the `counter` variable twice to solve this puzzle.",
    "authored_hints": {
      "courseF_bee_for5_a": "This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops, both inside the same `for` loop.",
      "courseF_bee_for5_b": "Use the `counter` variable in each loop so the bee moves different distances between each flower.",
      "courseF_bee_for5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/10": {
    "short_instructions": "Use the `counter` variable to navigate this garden with the fewest number of blocks possible.",
    "long_instructions": "Now, let's combine the `counter` variable with a `math` block! \n\nHow can you use the `counter` variable to navigate this garden with the fewest number of blocks possible?",
    "authored_hints": {
      "courseF_bee_for9_a": "Try doing some math with the counter variable.\n\nWhat do you have to do to the counter at each flower to equal the amount of nectar you need to collect?",
      "courseF_bee_for9_c": "It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.",
      "courseF_bee_for9_b": "**Remember:** If your loop is counting up, the increment is added to your `counter` variable each time through."
    },
    "callouts": {
      "courseF_bee_for9_1": "You will find the `math` block in here."
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/11": {
    "short_instructions": "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. ",
    "long_instructions": "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. \n\nRemember: You may have to run through solutions multiple times before you figure out all of the steps.",
    "authored_hints": {
      "courseF_bee_for10_a": "Can you find a pattern between the number of steps you need to take and the number of nectars to gather?",
      "courseF_bee_for10_b": "The first set of flowers has a total of **14 flowers**. To get to this first set, the bee must buzz down **7 squares** (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?",
      "courseF_bee_for10_c": "In the puzzle, the first set of flowers has **14** flowers, the second set has **10** flowers, third set has **6** flowers, and the fourth set has **2** flowers.\n\nIn this drawing, notice there are **7** red squares, **5** orange squares, **3** green squares, and **1** blue block. \n\n[][0]\n\nHow do the numbers relate?",
      "courseF_bee_for10_d": "You'll need to have 2 repeats, one will use a math block."
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/puzzle/12": {
    "short_instructions": "What should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
    "long_instructions": "If your loop is counting down, the increment is **subtracted** from your counter variable each time through. \n\nWhat should your increment be to collect 15, then 12, then 9, 6, 3 nectar?",
    "authored_hints": {
      "courseF_bee_for11_a": "How much less is 12 than 15?\\\nHow much less is 9 than 12?\n\nDo you see a pattern?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/extras?level_name=courseF_bee_for_challenge1": {
    "short_instructions": "Use this `for loop` to collect all of the nectar. ",
    "long_instructions": "You can use this `for loop` to collect all of the nectar. Un-bee-lievable!\n\nThere are a few actions that you will want to `repeat 'counter' times`.",
    "function_names": {
      "move and get nectar with counter": "move and get nectar with counter"
    }
  },
  "https://studio.code.org/s/express-2017/stage/25/extras?level_name=courseF_bee_for_challenge2": {
    "short_instructions": "Solve this puzzle using the fewest number of blocks possible.",
    "long_instructions": "Solve this puzzle with the fewest number of blocks possible.",
    "authored_hints": {
      "courseF_bee_for_challenge2_a": "Take a look at this option for movement:  \n\n[][0]",
      "courseF_bee_for_challenge2_b": "Try using two `for` loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.",
      "courseF_bee_for_challenge2_c": "Notice that one `for` loop needs several regular loops inside that repeat `counter` times to make the increasing stair pattern. \n\nThe other `for` loop only needs one regular loop to make `counter` amount of honey.",
      "courseF_bee_for_challenge2_d": "**Solution:**\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/2": {
    "display_name": "For Loops Freeplay (Beginning)",
    "short_instructions": "Experiment with the `for` loop and play with the `counter` variable.",
    "long_instructions": "**Free Play:** Experiment with the `for` loop and the `counter` variable.  \n\nDrag out a few blocks and see what happens.  ",
    "authored_hints": {
      "courseF_artist_for1_a": "Can you draw something like this:\n\n[][0]"
    },
    "callouts": {
      "courseF_artist_for1_1": "The toolbox is in \"category\" mode to make more room for your code.  The `for` loops live in here."
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/3": {
    "short_instructions": "Create this stack of triangles that goes from 50 pixel to 100 pixel sides.",
    "long_instructions": "Use a `repeat` loop inside of a `for` loop to create this stack of triangles that goes from 50 pixel to 100 pixel sides.",
    "authored_hints": {
      "courseF_artist_for2_a": "Use `counter` for the length of your triangles inside your `repeat` loop.\n\n[blockly block][0]",
      "courseF_artist_for2_b": "Remember to count by 10 within your for loop.",
      "courseF_artist_for2_c": "This is the pattern that the Artist will follow:\n\n[][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/4": {
    "short_instructions": "These triangles go from 20 pixel sides to 200 pixel sides, and each triangle is 20 pixels larger than the last. ",
    "long_instructions": "Create these triangles that go from 20 pixel sides to 200 pixel sides, where each triangle is 20 pixels larger than the last.",
    "authored_hints": {
      "courseF_artist_for3_a": "To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.\n\n[blockly block][0]",
      "courseF_artist_for3_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/5": {
    "short_instructions": "These squares start at 15 pixels long. The largest is 300 pixels long, and each square is 15 pixels larger than the last. ",
    "authored_hints": {
      "courseF_artist_for4_a": "**What is the smallest number you will need?\\\nWhat is the largest number?\\\nHow big is the increase each time?**\n\nThose are the questions you need to ask to fill in the blanks of the `for` loop.",
      "courseF_artist_for4_b": "Your code will be very similar to what you wrote in the last puzzle, but remember to draw a square this time!",
      "courseF_artist_for4_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet."
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/6": {
    "short_instructions": "Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?",
    "long_instructions": "Just one little change to the code from the last image can create this drawing. Can you figure out what that change is?\n\n* * *\n\nHint:  You need to remove something!",
    "authored_hints": {
      "courseF_artist_for5_a": "You don't need the `repeat` loop inside when making this spiral!",
      "courseF_artist_for5_b": "Your `for` loop, move, and turn blocks can stay exactly the same."
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/7": {
    "short_instructions": "Recreate your code from the last level, but turn 89 degrees to create this twisted square spiral.",
    "long_instructions": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect.\n\nRecreate your code from the last level, but turn 89 degrees to create this twisted square spiral.",
    "authored_hints": {
      "courseF_artist_for6_a": "Your `for` loop will count from 15 to 300 by 15.",
      "courseF_artist_for6_b": "Put a `move forward` and a `turn` block within this `for` loop.",
      "courseF_artist_for6_c": "All you have to change is the number of degrees in the `turn` block."
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/8": {
    "short_instructions": "Make three small changes to the code from the last level to get this!",
    "long_instructions": "Make three small changes to the code from the last level to get this!  ",
    "authored_hints": {
      "courseF_artist_for7_a": "The pen is thinner in this puzzle. You will need to set it to `1` before you start.",
      "courseF_artist_for7_b": "Notice that this spiral turns right instead of left!",
      "courseF_artist_for7_c": "The `for` loop in this puzzle goes from 15 to 300 by 2.",
      "courseF_artist_for7_d": "This image is made by turning just 89 degrees."
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/9": {
    "short_instructions": "Take the angle down to 72 degrees to get a spiraled pentagon.",
    "authored_hints": {
      "courseF_artist_for8_a": "Keep everything else the same in your code, only the turn angle needs to change.",
      "courseF_artist_for8_b": "If you want, you can choose a different color for your spiral!"
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/10": {
    "short_instructions": "**Inspiration:**  Use the counter inside the `set alpha` block to get this faded center.",
    "long_instructions": "**Inspiration:** Use the counter inside the `set alpha` block to get something like this faded center.\\\n(This hexagon pattern was made using a 60 degree turn.)",
    "authored_hints": {
      "courseF_artist_for9_a": "If you put the `set alpha` block inside of your `for` loop, and use the `counter` variable to change it, you can create a design like this.",
      "courseF_artist_for9_b": "The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is."
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/11": {
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "What will happen when you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "The artist will draw a straight line that increases in thickness from one side of the play space to the other.",
              "correct": false,
              "feedback": "Incorrect. The artist turns between iterations of the `for` loop."
            },
            {
              "text": "The artist will draw a spiral and each time through the `for` loop, the line gets longer and thinner. ",
              "correct": false,
              "feedback": "Incorrect. Each time through the `for` loop, the artist draws a longer line that is also thicker."
            },
            {
              "text": "The artist will draw a spiral and each time through the `for` loop, the line gets longer and thicker.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "Incorrect. Each time through the `for` loop, the artist draws a longer line that is also thicker."
            }
          ],
          "markdown": "We used the counter from our `for` loop to change the width of the brush on this drawing.  \n\n\n"
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/26/puzzle/12": {
    "short_instructions": "Free Play: Try using the `counter` variable with other drawing elements to make magical images like this one.",
    "long_instructions": "**Free Play:** Try using the `counter` variable with other drawing elements to make magical images like this one.\n\n[][0]",
    "authored_hints": {
      "courseF_artist_for10_a": "The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.",
      "courseF_artist_for10_b": "The image in the drawing uses a turn of 61 degrees.",
      "courseF_artist_for10_c": "Want to know how the sample image was done?\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/extras?level_name=courseF_artist_for_challenge1": {
    "short_instructions": "Can you figure out how to re-create this drawing?",
    "long_instructions": "Can you figure out how to re-create this drawing? \n\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\" width=\"350px\"/>",
    "authored_hints": {
      "courseF_artist_for_challenge1_a": "The `pen width` is 1. The first square has 50 pixel sides, and each square is 50 pixels wider than the last.",
      "courseF_artist_for_challenge1_b": "The opacity on the brush is always `counter`/2.",
      "courseF_artist_for_challenge1_c": "After you make each square, don't forget to jump backward, turn, jump again, then turn back!",
      "courseF_artist_for_challenge1_d": "**Solution:**\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/26/extras?level_name=courseF_artist_for_challenge2": {
    "short_instructions": "Can you figure out how to re-create this drawing with a single loop?",
    "long_instructions": "Can you figure out how to re-create this drawing with a single loop? \n\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\" width=\"350px\"/>",
    "authored_hints": {
      "courseF_artist_for_challenge2_c": "The `for loop` goes from 5 to 250 by 2. ",
      "courseF_artist_for_challenge2_a": "The color change happens using the `set color with red, green, blue` block.  Red is set constant at 255, green is always the value of `counter`, and blue is always `255 - counter`.",
      "courseF_artist_for_challenge2_b": "The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.",
      "courseF_artist_for_challenge2_d": "**Solution:**\n\n[blockly block][0]\n\n[][1]"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/2": {
    "short_instructions": "Check to see if there's a flower under the cloud. If there's a flower, get nectar.",
    "long_instructions": "_\"This cloud is blocking my view!\"_\n\nCheck to see if there's a flower under the cloud. If there's a flower, get nectar.",
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "If there is not a flower the bee should do nothing. Take a good look at the code below.  What do you think will happen after you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "The bee will move to the cloud and try to get nectar, no matter what. ",
              "correct": false,
              "feedback": "Incorrect. The `if at flower` block assures that the bee will only try to get nectar if there is a flower under the cloud."
            },
            {
              "text": "The bee will move to the cloud and only try to get nectar if there is a flower underneath.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bee will move to the cloud and then do nothing, no matter what. ",
              "correct": false,
              "feedback": "Incorrect. The `if at flower` block assures that the bee will try to get nectar if there is a flower under the cloud."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The `if at flower` block assures that the bee will only try to get nectar if there is a flower under the cloud."
            }
          ],
          "markdown": "The cloud is blocking the view. There could be a flower under this cloud. If there is a flower, the bee will need to collect nectar **once**. \n"
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/3": {
    "short_instructions": "Check underneath each cloud to see if it is hiding a flower before you get nectar.  ",
    "long_instructions": "_\"It's too cloudy to see any flowers!\"_\n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar. If there is a flower underneath the cloud, the bee will need to get nectar **once**.  \n\nRemember: Not all clouds hide the same thing!",
    "authored_hints": {
      "courseF_bee_conditionals2_a": "Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.",
      "courseF_bee_conditionals2_b": "Try writing the sequence to get you to all of the spaces, then add the `if` statement."
    },
    "callouts": {
      "courseF_bee_conditionals2_2": "The toolbox is now in category mode.  All of the blocks you need are beneath these labels!"
    },
    "function_names": {
      "move and check": "move and check",
      "check nectar or honey": "check nectar or honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/4": {
    "short_instructions": "Help the bee collect all of the nectar. ",
    "long_instructions": "You can only collect nectar from flowers, but you can check any space to see if there is a flower. If there is a flower under any of these clouds, the bee will need to collect nectar **once**.",
    "authored_hints": {
      "courseF_bee_conditionals3_a": "Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.",
      "courseF_bee_conditionals3_b": "A `repeat` loop will be useful so you only have to use one `if` block.",
      "courseF_bee_conditionals3_c": "Try writing code to check the first cloud. Can you loop this to check all of them?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/5": {
    "short_instructions": "Get all of the nectar using as few blocks as possible.",
    "long_instructions": "In this puzzle, we know that every flower has exactly one nectar, but the flowers aren't spaced evenly.\n\nGet all of the nectar using as few blocks as possible.",
    "authored_hints": {
      "courseD_bee_conditionals4_a": "You can still treat every space as if there is a cloud over it, even though you can see the whole path.",
      "courseF_bee_conditionals4_b": "Use an `if` statement inside your loop to check each space for nectar. ",
      "courseF_bee_conditionals4_c": "Using the block `while there is a path ahead`, you should `move forward` and check for a flower. `if there is a flower` what should the bee do?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/6": {
    "short_instructions": "Collect all of the nectar using as few blocks as possible",
    "authored_hints": {
      "courseF_bee_conditionals5_a": "Think of every side of the rectangular path as a path by itself. Set up a nested loop with a `repeat` block on the outside and a `while there is a path ahead` on the inside. How many paths does the bee need to buzz down if the bee needs to buzz every side with a flower?",
      "courseF_bee_conditionals5_b": "Inside the `while there is a path ahead` block, you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?",
      "courseF_bee_conditionals5_c": "There are 3 sides of the rectangle with flowers, so the code needs to `repeat 3 times`. In every repeat, the bee will need to continue along the path, `while there is a path ahead`. ",
      "courseF_bee_conditionals5_d": "To continue down the path, the bee will need to `move forward`. While on the path, the bee needs to check for a flower. What should the bee do if there is a flower?"
    },
    "callouts": {
      "courseF_bee_conditionals5_1": "Use this block when the length of the path changes (as in the sides of the rectangle!)"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/8": {
    "short_instructions": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
    "long_instructions": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb!\n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "Look carefully at the code below.  What do you think will happen after you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "The bee will get nectar at each flower, otherwise it will make honey.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bee will try to get nectar from both flowers and honeycomb.",
              "correct": false,
              "feedback": "Incorrect. The `if at flower` block lets the bee get nectar at each flower and make honey if there's not a flower (therefore a honeycomb.)."
            },
            {
              "text": "The bee will try to get honey from both flowers and honeycomb.",
              "correct": false,
              "feedback": "Incorrect. Incorrect. The `if at flower` block lets the bee get nectar at each flower and honey at each honeycomb."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The `if at flower` block lets the bee get nectar at each flower, otherwise it makes honey."
            }
          ],
          "markdown": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb! Either way, there will only ever be **one** flower or **one** honeycomb under each cloud. \n"
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/9": {
    "short_instructions": "Collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
    "long_instructions": "**Challenge:** There will be either a flower or a honeycomb under each of those clouds!\n\nCollect nectar once if there is a flower. Otherwise, make honey once (because there is a honeycomb).",
    "authored_hints": {
      "courseF_bee_conditionals8_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge.",
      "courseF_bee_conditionals8_b": "This puzzle is tricky, because you can't check blank squares, nectar, _and_ honey with just one single conditional.\n\nOnly check for nectar and honey at the end of your path.",
      "courseF_bee_conditionals8_c": "What happens if you skip the first flower, then use the `while path ahead` block?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/10": {
    "short_instructions": "Collect all of the nectar and make all of the honey.",
    "long_instructions": "Conditionals can be helpful, even when you know exactly what is in each spot!\n\nCollect all of the nectar and make all of the honey.",
    "authored_hints": {
      "courseF_bee_conditionals10_a": "Imagine there is a cloud in every spot. Does this help simplify your code?",
      "courseF_bee_conditionals10_b": "Use an `if/else` block to check every space for nectar or honey.",
      "courseF_bee_conditionals10_c": "Could a `while` loop help get to the end of this path?"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/12": {
    "short_instructions": "Use the `get only nectar` function to collect the nectar from each flower.",
    "long_instructions": "To make things easier, it's time to learn about functions!\n\nFrom here on out, you will be using a new _function editor_.  This editor is a separate window that will appear when you go to edit a function.  You won't see all of the code from your function while you're coding in the workspace, but don't worry...it's still there!  \n\n* * *\n\nLet's practice with this function that gets nectar only if the bee is at a flower.  To see the code inside, click the blue \"edit\" button!\n\nUse the `get only nectar` function to collect the nectar from each flower.",
    "authored_hints": {
      "courseF_bee_functions2_a": "The function has been written for you, but you will need to call it at each flower.",
      "courseF_bee_functions2_b": "Click on the blue edit button on the `get only nectar` function to see what it does."
    },
    "callouts": {
      "courseF_bee_functions2_1": "This block calls a function.  Click this \"edit\" button to see what is inside!"
    },
    "function_names": {
      "get only nectar": "get only nectar"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/13": {
    "short_instructions": "Click \"edit\" to put code inside the `only make honey` function, then use it to solve this puzzle.",
    "long_instructions": "Now it's your turn to make a function to get some honey **only** if there is a honeycomb!  Click \"edit\" to build the `only make honey` function, then use it to solve this puzzle.",
    "authored_hints": {
      "courseF_bee_functions3_a": "Your function for this puzzle only needs to make honey, it shouldn't have any `move forward` or `turn` blocks in it. ",
      "courseF_bee_functions3_b": "Remember that your function should only get honey _if_ there is a honeycomb.",
      "courseF_bee_functions3_c": "Use the green `only make honey` block to call your function.",
      "courseF_bee_functions3_d": "Check out this path."
    },
    "function_names": {
      "only make honey": "only make honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/14": {
    "short_instructions": "Write a function that gets nectar if the bee is at a flower, otherwise it gets honey.  Use your function to solve the puzzle!",
    "long_instructions": "Each cloud could be hiding either one flower or one honeycomb!  Write a function that gets nectar if the bee is at a flower, otherwise it gets honey.\n\nUse your function to solve the puzzle!",
    "authored_hints": {
      "courseF_bee_functions3a_a": "Your function for this puzzle only needs to get nectar or make honey, it shouldn't have any `move forward` or `turn` blocks in it. ",
      "courseF_bee_functions3a_b": "Use a stairstep pattern to check the first four clouds."
    },
    "function_names": {
      "check nectar or honey": "check nectar or honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/15": {
    "short_instructions": "Create a new `move and check` function to collect all of the nectar.",
    "long_instructions": "Did you know that you can call a function from _inside_ another function?  \n\nUse your `check nectar or honey` function inside the new `move and check` function to help the bee turn, go get what's under the cloud, then back-up and turn back around!",
    "authored_hints": {
      "courseF_bee_functions4_a": "Your function should travel down the side paths and return the bee back to the main road.  You don't need to add that part to your main program.",
      "courseF_bee_functions4_b": "Try building the program and using the function blocks as you expect the function to behave, then create the function."
    },
    "function_names": {
      "move and check": "move and check",
      "check nectar or honey": "check nectar or honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/16": {
    "short_instructions": "Use the `move and check` function to collect all of the nectar.",
    "long_instructions": "Now, build `move and check` so that it takes the bee to the cloud whenever there is a path to the right, then use it to solve this puzzle!",
    "authored_hints": {
      "courseF_bee_functions5a_a": "Your function should check if there's a path to the right, and if there is, travel down the side paths and return the bee back to the main road.  \n\nYou don't need to add that part to your main program.",
      "courseF_bee_functions5a_b": "Use a `while` loop to travel down all of the main paths, since they are different lengths.",
      "courseF_bee_functions5a_c": "Within your `while` loop, make sure to move forward, then use your function to check for a path."
    },
    "function_names": {
      "move and check": "move and check",
      "check nectar or honey": "check nectar or honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/17": {
    "short_instructions": "We don't have a video for creating functions, yet. This is a placeholder."
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/18": {
    "short_instructions": "Help the bee through the maze by turning left at flowers and right at honeycomb.",
    "long_instructions": "_\"This field is a-MAZE-ing!\"_\n\nBuild your own function to help the bee through the maze by turning left at flowers and right at honeycomb.  Don't forget to collect nectar and make honey along the way!",
    "authored_hints": {
      "courseF_bee_functions6_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\n\n[blockly block][0]",
      "courseF_bee_functions6_b": "Your function should check if there is a flower or honeycomb, get nectar or make honey, then turn.",
      "courseF_bee_functions6_c": "Since you are turning within your function, you only need one `while` loop to get you through this maze."
    },
    "callouts": {
      "courseF_bee_functions6_1": "Don't forget to look in here for more blocks that might help make this easier!"
    },
    "function_names": {
      "get nectar make honey": "get nectar make honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/19": {
    "short_instructions": "Now try building a function to solve this maze.  How is it different from last time?",
    "long_instructions": "Now try building a function to solve this maze.  How is it different from last time?  \n\nTurn left at the honeycomb and right at the flowers.\\\n**Note:** Some corners are unmarked!",
    "authored_hints": {
      "courseF_bee_functions7_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
      "courseF_bee_functions7_b": "Remember to build code inside of the green function block.\n\n[blockly block][0]",
      "courseF_bee_functions7_c": "Which way should you turn if there is a honeycomb? What about a flower? What if there is nothing?"
    },
    "function_names": {
      "get nectar make honey": "get nectar make honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/20": {
    "short_instructions": "Rebuild your function from the last puzzle to solve this maze.",
    "long_instructions": "Rebuild your function from the last puzzle to solve this maze.\n\nTurn left at the honeycomb and right at the flowers.\\\n**Note:** Some corners are unmarked!",
    "authored_hints": {
      "courseF_bee_functions7_a": "You can look back at the last puzzle to see your function.",
      "courseF_bee_functions7_b": "Try drawing a path through this maze with your finger. Where will the bee have to make a decision?"
    },
    "function_names": {
      "get nectar make honey": "get nectar make honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/puzzle/21": {
    "short_instructions": "Collect all the nectar or make all of the honey!",
    "long_instructions": "Underneath this cloud, there might be a flower with an unknown amount of nectar, or a honeycomb with an unknown amount of honey.  \n\nCan you write a program that can handle either?",
    "authored_hints": {
      "courseF_bee_functions8a_a": "If the puzzle seems challenging, try building your function a little at a time.  \n\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!",
      "courseF_bee_functions8a_b": "Remember to build code inside of the function editor."
    },
    "function_names": {
      "do something": "do something",
      "get nectar make honey": "get nectar make honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/extras?level_name=courseF_bee_functions_challenge1": {
    "short_instructions": "Create a new function to collect all the nectar and honey while there is a path ahead.",
    "long_instructions": "Create a new function to collect all the nectar and honey while there is a path ahead. Use it to complete the puzzle!",
    "authored_hints": {
      "courseF_bee_functions_challenge1_a": "You can use the functions in the tool box to help you. You can call a function inside of another function's definition!"
    },
    "callouts": {
      "courseF_bee_functions_challenge1_1": "What code should you put in this function?",
      "courseF_bee_functions_challenge1_2": "The \"check nectar or honey\" function can be used here if edit it to make honey multiple times."
    },
    "function_names": {
      "row of nectar": "row of nectar",
      "rowOfNectar": "rowOfNectar",
      "check nectar or honey": "check nectar or honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/28/extras?level_name=courseF_bee_functions_challenge2": {
    "short_instructions": "Use everything you have learned to complete this puzzle!",
    "long_instructions": "Use everything you have learned to complete this puzzle!",
    "authored_hints": {
      "courseF_bee_functions_challenge2_a": "If there is a path to the right, you should do the following:\n\n-   Get any nectar or make any honey.\n-   Turn right towards the side path.\n-   Move to the end of the side path.\n-   Turn right.\n\nIf you repeat the above actions twice, you will be ready to move back down the main path.\n\n**Only click for another hint if you want to see the full solution!**",
      "courseF_bee_functions_challenge2_b": "**Solution:**\n\n[blockly block][0]"
    },
    "function_names": {
      "rowOfNectar": "rowOfNectar",
      "move and check": "move and check",
      "check nectar or honey": "check nectar or honey"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/puzzle/2": {
    "short_instructions": "Edit the function 'draw a square' to find bugs.",
    "long_instructions": "Today, we're going to keep using the powerful function editor. See if you remember how to edit the `draw a square` function to find the bugs.",
    "authored_hints": {
      "courseF_artist_fwp1_c": "Put all of the code for drawing a square inside the function editor.",
      "courseF_artist_fwp1_a": "Remember, you need to turn 90 degrees to draw a square.",
      "courseF_artist_fwp1_b": "You only need to repeat as many times as the number of sides in a square."
    },
    "callouts": {
      "courseF_artist_fwp1_1": "Click the \"edit\" button to change the code inside the function."
    },
    "function_names": {
      "draw a square": "draw a square",
      "checker": "checker",
      "do something": "do something",
      "Make gingham": "Make gingham",
      "black outline": "black outline"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/puzzle/4": {
    "short_instructions": "Edit the function to accept a parameter called `length`.",
    "long_instructions": "Edit the function to accept a parameter called `length`.  \n\nThe sides of each square should be 25 pixels larger than the last.  The first square has 25 pixel sides. Replace the '???' with the correct values to draw the picture.",
    "function_names": {
      "draw a square": "draw a square"
    },
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "What will happen when you run this program?"
            }
          ],
          "answers": [
            {
              "text": "The artist will use the same function to draw two different sized boxes.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The artist will use two different functions to draw two different sized boxes.",
              "correct": false,
              "feedback": "Incorrect.  Using parameters lets you use a single function to create different outcomes."
            },
            {
              "text": "The artist will use two different functions to draw the same sized box twice.",
              "correct": false,
              "feedback": "Incorrect.  Using parameters lets you use a single function to create different outcomes."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The program uses parameters to allow a single function to create two different size boxes."
            }
          ],
          "markdown": "We have added parameters to the 'draw a square' function.  Click the blue \"edit\" button to see the entire function definition.\n\n\n"
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/29/puzzle/5": {
    "short_instructions": "Edit the function to accept a parameter called `length`.",
    "long_instructions": "Edit the function to accept a parameter called `length`.  \n\nThe sides of each square should be 25 pixels larger than the last.  The first square has 25 pixel sides.",
    "authored_hints": {
      "courseF_artist_fwp2_a": "You need to click the \"edit\" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!",
      "courseF_artist_fwp2_b": "When calling your function, use a `for loop` for the best possible code!"
    },
    "function_names": {
      "draw a square": "draw a square",
      "checker": "checker",
      "do something": "do something",
      "Make gingham": "Make gingham",
      "black outline": "black outline"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/puzzle/7": {
    "short_instructions": "Create a function called 'draw a square' and use it to outline these four boxes using parameters.",
    "long_instructions": "Now try creating the function from scratch!  \n\nCreate a function called `draw a square` and use it to outline these four boxes.\\\nMake sure to add a parameter for `length`!\n\n* * *\n\nStarting from the upper right, the box widths are 50, 100, 150, and 200.",
    "authored_hints": {
      "courseF_artist_fwp3_a": "This gets easier if you put it all in a `for` loop.",
      "courseF_artist_fwp3_b": "Be sure to turn 90 degrees between each square!\n\n[][0]"
    },
    "function_names": {
      "draw a square": "draw a square",
      "draw a square2": "draw a square2",
      "filled square": "filled square",
      "black outline": "black outline"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/puzzle/8": {
    "short_instructions": "Edit this function to add a parameter for the number of sides in your polygon.",
    "long_instructions": "Great job!  Now edit this function to add a parameter for the number of sides in your polygon.\n\nThe sides of all the shapes are 100 pixels long.",
    "authored_hints": {
      "courseF_artist_fwp4_b": "Remember to **add** a parameter.  Don't remove the one that is already there!",
      "courseF_artist_fwp4_c": "You will need to call your function three times to draw the shapes."
    },
    "callouts": {
      "courseF_artist_fwp4_1": "To complete your polygon, make sure you are always turning by 360 ÷ `sides` degrees."
    },
    "function_names": {
      "draw a polygon": "draw a polygon"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/puzzle/9": {
    "short_instructions": "Use the function from the last puzzle to draw this series of shapes.  ",
    "long_instructions": "Use the function from the last puzzle to draw this series of shapes.  \n\nThe triangle has 21 pixel sides, and the sides in each following shape are 7 pixels longer than the last.\\\nUse the `multiplication` block to make this all happen with just one function call.\n\n* * *\n\nThe `multipication` block looks like this [blockly block][0]",
    "authored_hints": {
      "courseF_artist_fwp5_d": "A `for` loop would really help you out here!",
      "courseF_artist_fwp5_c": "You will need to edit the function a little bit, since your previous function turned the artist to the right after each side, and this image needs a turn to the left.",
      "courseF_artist_fwp5_a": "The length of sides for each shape is 7 times the number of sides it has.",
      "courseF_artist_fwp5_b": "Don't forget to jump 100 pixels between shapes."
    },
    "callouts": {
      "courseF_artist_fwp5_1": "You will find the polygon function in here."
    },
    "function_names": {
      "draw a polygon": "draw a polygon"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/puzzle/10": {
    "short_instructions": "Challenge: Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.",
    "long_instructions": "**Challenge:** Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.\n\n-   The square goes from 3 pixels to 90 pixels.\n-   The hexagon goes from 3 pixels to 100 pixels.\n-   The triangle goes from 3 pixels to 95 pixels.",
    "authored_hints": {
      "courseF_artist_fwp6_a": "It's okay to run the program a few times to figure out how the function works with different parameters.",
      "courseF_artist_fwp6_b": "You don't need to add any `move` or `turn` blocks to finish this code."
    },
    "function_names": {
      "draw a spiral edge": "draw a spiral edge"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/puzzle/11": {
    "short_instructions": "Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.",
    "long_instructions": "Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.\n\n-   The smallest side in the center of this square is 50 pixels long\n-   The longest side at the outside of this spiral is 200 pixels long",
    "authored_hints": {
      "courseF_artist_fwp7_a": "Feeling lost after trying a couple of ideas? Try clicking the \"Start over\" button in the upper right-hand corner.",
      "courseF_artist_fwp7_b": "Your new `min` variable should go in the first slot in your `for` loop, inside the function."
    },
    "function_names": {
      "draw a spiral edge": "draw a spiral edge"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/puzzle/12": {
    "short_instructions": "Can you figure out how to make this drawing using the function that you just created?",
    "long_instructions": "Freeplay! Can you figure out how to make this drawing using the function that you just created?\n\n-   The red spiral goes from 50 to 200 pixels\n-   The blue spiral goes from 25 to 150 pixels\n-   The green spiral goes from 100 to 350 pixels",
    "authored_hints": {
      "courseF_artist_fwp8_a": "If your function is correct, you shouldn't need to change it for this puzzle.",
      "courseF_artist_fwp8_b": "The only thing you should need to do between function calls is change the color of the line."
    },
    "function_names": {
      "draw a spiral edge": "draw a spiral edge"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/puzzle/13": {
    "short_instructions": "Freeplay: Draw something awesome! Play with the pen width to see how different your drawings look!",
    "long_instructions": "**Freeplay:** Below there are functions you've written, and more for you to play with. Play with the pen width to see how different your drawings look! Suggestions are in the hints!",
    "authored_hints": {
      "courseF_artist_fwp9_a": "Try one of these drawings.\n[][0]"
    },
    "function_names": {
      "draw a star": "draw a star",
      "draw a circle": "draw a circle",
      "draw a pinwheel": "draw a pinwheel",
      "draw a triangle": "draw a triangle",
      "draw a shape": "draw a shape",
      "draw a house": "draw a house",
      "draw a square": "draw a square",
      "draw a spiral edge": "draw a spiral edge"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/extras?level_name=courseF_artist_fwp_challenge1": {
    "short_instructions": "Can you figure out how this program works?",
    "long_instructions": "Try running this program. Make changes to see what happens. Can you figure out how it works? You can also delete it and replace it with something totally different.",
    "authored_hints": {
      "courseF_artist_fwp_challenge1_b": "This is a series of polygons with sides that are counter pixels long.",
      "courseF_artist_fwp_challenge1_c": "Each polygon is called from inside a for loop that goes from 3 down to 6 by an increment of 1. What shapes is it making?"
    },
    "function_names": {
      "draw background": "draw background",
      "draw a polygon": "draw a polygon",
      "draw a square 20": "draw a square 20",
      "do something": "do something"
    }
  },
  "https://studio.code.org/s/express-2017/stage/29/extras?level_name=courseF_artist_fwp_challenge2": {
    "short_instructions": "Use what you learned in the previous level to draw an image like this.",
    "long_instructions": "Wow! Use what you learned in the previous level to draw an image like this.\n\n_Hint: Use parameters to make your code simpler._\n\n<br/>\n<img src=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\" width=\"300px\"/>\n<br/>",
    "authored_hints": {
      "courseF_artist_fwp_challenge1_a": "[][0]",
      "courseF_artist_fwp_challenge1_b": "This is a series of octagons with sides that are `counter` pixels long. ",
      "courseF_artist_fwp_challenge1_c": "Each octagon is called from inside a `for` loop that goes from 200 down to 2 by 2. ",
      "courseF_artist_fwp_challenge1_d": "Don't forget to turn by 22.5 degrees at the end of each iteration. ",
      "courseF_artist_fwp_challenge1_e": "Both the color of each octagon and the width of the pen are controlled by the `counter` variable.",
      "courseF_artist_fwp_challenge1_f": "**Solution:**\n\n[Solution Blocks][0]"
    },
    "function_names": {
      "draw a square 20": "draw a square 20",
      "do something": "do something",
      "draw an octagon": "draw an octagon"
    }
  },
  "https://studio.code.org/s/express-2017/stage/30/puzzle/1": {
    "long_instructions": "Check beneath the clouds to see if the flowers have any nectar.  \n\nFor this whole stage, each flower will have exactly **one** unit of nectar, and each honeycomb will need exactly **one** unit of honey. ",
    "authored_hints": {
      "courseF_bee_fwp1_a": "Use `if` statements to make sure you're only getting nectar from a flower.",
      "courseF_bee_fwp1_b": "Continue along the path using a `repeat` block. Make sure you are using a `move forward` block and checking if there is a flower using a `if` statement."
    },
    "callouts": {
      "courseF_bee_fwp1_1": "You can find `if` statements in here."
    }
  },
  "https://studio.code.org/s/express-2017/stage/30/puzzle/2": {
    "short_instructions": "Pull this code into a function, then call the function to check this row for nectar.",
    "long_instructions": "Here's some code that solves the last puzzle.\\\nLet's pull it into a function, then call the function to check this row for nectar.  \n\n* * *\n\nThis may seem like a strange step now, but it will be really helpful soon!",
    "authored_hints": {
      "courseF_bee_fwp2_a": "To turn this into a function, simply drag the code into the existing function block.  \n\n[][0]",
      "courseF_bee_fwp2_b": "Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built."
    },
    "callouts": {
      "courseF_bee_fwp2_a": "The block that calls your function lives in here."
    },
    "function_names": {
      "rowOfNectar": "rowOfNectar"
    }
  },
  "https://studio.code.org/s/express-2017/stage/30/puzzle/3": {
    "short_instructions": "Let's see if the function makes collecting these three rows of nectar any easier.",
    "long_instructions": "Time to put the function to the test! \n\nLet's see if it makes collecting these three rows of nectar any easier.",
    "authored_hints": {
      "courseF_bee_fwp3_a": "Your function will run no matter which direction you're facing.",
      "courseF_bee_fwp3_b": "There are 3 rows of nectar, what kind of turns and movements do you need to make between each row?",
      "courseF_bee_fwp3_c": "To solve this puzzle, you'll need to call your function 3 times. In between each call, you need to `turn right`, `move forward` 2 times, then `turn right` again. OR, you need to `turn left`, `move forward` 2 times, then `turn left` again."
    },
    "callouts": {
      "courseF_bee_fwp3_1": "This same function can be used when checking for empty spaces as well as clouds."
    },
    "function_names": {
      "rowOfNectar": "rowOfNectar"
    }
  },
  "https://studio.code.org/s/express-2017/stage/30/puzzle/4": {
    "short_instructions": "Add a `length` parameter to the function so that it will still work when the row is a different length.",
    "long_instructions": "_\"How is your function holding up?\"_   \n\nWe need to make some adjustments here. Click \"edit\" to add a `length` parameter to the function so that it will still work when the row is a different length.",
    "authored_hints": {
      "courseF_bee_fwp4_a": "You will need to add a parameter and use the resulting variable in your loop.",
      "courseF_bee_fwp4_b": "The parameter you create for your function will be used to in the repeat loop to determine how many times the bee will move forward and check for nectar."
    },
    "callouts": {
      "courseF_bee_fwp4_1": "Press the \"edit\" button to add a parameter to this function."
    },
    "function_names": {
      "rowOfNectar": "rowOfNectar"
    }
  },
  "https://studio.code.org/s/express-2017/stage/30/puzzle/5": {
    "short_instructions": "Use this function to collect the nectar.",
    "long_instructions": "_\"You're doing great so far!\"_\n\nLet's use this function to collect the nectar.",
    "authored_hints": {
      "courseF_bee_fwp5_a": "Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.",
      "courseF_bee_fwp5_a_b": "Remember to turn between each function call."
    },
    "function_names": {
      "rowOfNectar": "rowOfNectar"
    }
  },
  "https://studio.code.org/s/express-2017/stage/30/puzzle/6": {
    "short_instructions": "Build a short and sweet solution to this puzzle.",
    "long_instructions": "You can make code shorter and more efficient when you combine functions with other programming elements.  \n\n* * *\n\nWhat blocks can you use with your function to build a short and sweet solution to this puzzle?",
    "authored_hints": {
      "courseF_bee_fwp6_a": "Which block automatically increments a variable that you could use as a parameter?",
      "courseF_bee_fwp6_b": "Try using a `for` loop to solve this puzzle."
    },
    "function_names": {
      "rowOfNectar": "rowOfNectar"
    }
  },
  "https://studio.code.org/s/express-2017/stage/30/puzzle/7": {
    "short_instructions": "**Challenge:** Modify your function to make honey as well.",
    "long_instructions": "**Challenge:** Something looks a little different. Modify your function to make honey as well.",
    "authored_hints": {
      "courseF_bee_fwp7_a": "You don't need a second parameter for this function, only a second `if` statement.",
      "courseF_bee_fwp7_b": "Add an `if` statement in your function so the bee checks for both honeycombs and flowers."
    },
    "function_names": {
      "rowOfNectarOrHoney": "rowOfNectarOrHoney"
    }
  },
  "https://studio.code.org/s/express-2017/stage/30/puzzle/8": {
    "short_instructions": "Use your new function to solve this spiral.",
    "authored_hints": {
      "courseF_bee_fwp8_a": "How could a `for` loop help in this puzzle?",
      "courseF_bee_fwp8_b": "Since the spiral gets smaller as you go in, your `for` loop should count down."
    },
    "function_names": {
      "rowOfNectarOrHoney": "rowOfNectarOrHoney"
    }
  },
  "https://studio.code.org/s/express-2017/stage/30/puzzle/9": {
    "short_instructions": "Use your new function to solve this puzzle.",
    "function_names": {
      "rowOfNectarOrHoney": "rowOfNectarOrHoney"
    },
    "contained levels": [
      {
        "dsls": {
          "questions": [
            {
              "text": "What will happen when you click \"Run\"?"
            }
          ],
          "answers": [
            {
              "text": "The bee will not collect any nectar or honey.",
              "correct": false,
              "feedback": "Incorrect. The function is set to collect as many nectar or honey as is passed through a parameter."
            },
            {
              "text": "The bee will collect three nectar or honey, then two nectar or honey in a stair-step pattern. ",
              "correct": true,
              "feedback": "Correct! The function is set to collect as many nectar or honey as is passed through a parameter."
            },
            {
              "text": "The bee will collect only one nectar or honey in each iteration of the loop. ",
              "correct": false,
              "feedback": "Incorrect.  The function is set to collect as many nectar or honey as is passed through a parameter."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "Clicking to look inside of the function shows that it is set to collect as many nectar or honey as is passed through a parameter."
            }
          ],
          "markdown": "Underneath these clouds, there is either a flower with exactly 1 nectar, or a honeycomb with exactly 1 honey.  Click the blue \"edit\" button on the function to see what is inside before answering the question below.\n\n\n"
        }
      }
    ]
  },
  "https://studio.code.org/s/express-2017/stage/30/extras?level_name=courseF_bee_fwp_challenge1": {
    "short_instructions": "Use one `for loop` in a function with a `length` parameter to collect all of the corn.",
    "long_instructions": "Use one `for loop` in a function to collect all of the corn. The same `for loop` can count to different maximum values by using the `length` parameter.",
    "authored_hints": {
      "courseF_bee_fwp_challenge1_a": "The main program should look something like this:\n\n[blockly block][0]",
      "courseF_bee_fwp_challenge1_b": "Look at how much corn is available to harvest in each space. Do you see the counter pattern? ",
      "courseF_bee_fwp_challenge1_b1": "The `length` parameter should be used to set the maximum value in the `for loop`.\n\nDon't forget to have the farmer move back to the main path after harvesting!",
      "courseF_bee_fwp_challenge1_c": "Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.\nInside this loop, you should move forward and pick all of the corn.\n\n[blockly block][0]",
      "courseF_bee_fwp_challenge1_d": "Inside the `for loop` you will want to `move forward` then `pick corn` **counter times**.",
      "courseF_bee_fwp_challenge1_d2": "After the `for loop` you can just `move backward` **length times**.",
      "courseF_bee_fwp_challenge1_e": "**Here is the solution:**\n\n[blockly block][0]"
    },
    "function_names": {
      "pick row": "pick row"
    }
  },
  "https://studio.code.org/s/express-2017/stage/30/extras?level_name=courseF_bee_fwp_challenge2": {
    "short_instructions": "Use one `for loop` in a function with a `length` parameter to collect all of the vegetables in each row. ",
    "long_instructions": "_\"**Lettuce** see if you can handle this one final test! Give it everything you've got!\"_\n\nUse one `for loop` in a function to collect all of the vegetables in the row. Make the `for loop` count to different maximum values by using the `length` parameter. Make your program as short as possible by using a second `for loop` outside the function.\n\nGood luck!",
    "authored_hints": {
      "courseF_bee_fwp_challenge2_a": "Start by making sure you understand how this function is _supposed_ to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?\n\nAdd conditional statements to the function to check for corn, pumpkins, and lettuce.",
      "courseF_bee_fwp_challenge2_b": "Are you running out of `move forward` blocks?\nTry using a _second_ `for loop` in your main program.",
      "courseF_bee_fwp_challenge2_c": "**Here is what your function should look like:**\n\n[blockly block][0]",
      "courseF_bee_fwp_challenge2_d": "**Here is what your main program should look like:**\n\n[blockly block][0]"
    },
    "callouts": {
      "courseF_bee_fwp_challenge2_callout1": "This function will do a good job with corn, but what about the other vegetables?"
    },
    "function_names": {
      "pick row": "pick row"
    }
  },
  "https://studio.code.org/s/express-2017/stage/31/puzzle/1": {
    "display_name": "End of Course Projects"
  },
  "https://studio.code.org/s/express-2017/stage/31/puzzle/2": {
    "short_instructions": "If this picture inspires you, try to make something similar. Otherwise, create something all your own.",
    "long_instructions": "You've now learned everything you need to know to make a pattern like this! \n\nIf this picture inspires you, try to make something similar. Otherwise, create something all your own.",
    "callouts": {
      "InspirationalArtwork_1": "Try using the new `comment` block under this label to leave yourself notes inside your program!"
    },
    "function_names": {
      "n-sided shape": "n-sided shape",
      "draw a loop": "draw a loop",
      "draw spiral circle": "draw spiral circle"
    }
  },
  "https://studio.code.org/s/express-2017/stage/31/puzzle/3": {
    "short_instructions": "This is an example of a game you can make in play lab.",
    "function_names": {
      "level_up": "level_up",
      "score_points": "score_points"
    }
  },
  "https://studio.code.org/s/express-2017/stage/31/puzzle/4": {
    "short_instructions": "Build whatever you want. This is an example of a number-guessing game!",
    "function_names": {
      "check guess": "check guess"
    }
  },
  "https://studio.code.org/s/express-2017/stage/31/puzzle/5": {
    "short_instructions": "You can do whatever you want in play lab! Here's an example of choose your own adventure story in play lab.",
    "function_names": {
      "witch ending": "witch ending",
      "story": "story",
      "starting path": "starting path"
    }
  },
  "https://studio.code.org/s/express-2017/stage/32/puzzle/1": {
    "dsls": {
      "title": "title",
      "content1": "description here",
      "markdown": "# The Design Process\nDesigning software means solving lots of little problems, all the time. The main problem in software design is what to create in the first place.\n\nThis process is useful for all kinds of things, but we are going to focus on using it for app design.\n\n<!-- Translate the terms \"Define\", \"Prepare\", \"Try\", \"Reflect\" and change font size and positioning as needed-->\n<div style=\"position: relative; text-align: center; font-size: 1em\">\n  <img src=\"https://images.code.org/a157e5f67444573e19e980a507db16fb-image-1563319667694.png\" alt=\"Design Process\" style=\"width: 50%;\">\n  <div style=\"position: absolute; top: 24%; left: 49.8%; transform: translateX(-49.8%); font-weight: bold;\">Define</div> \n  <div style=\"position: absolute; top: 52%; left: 61%; transform: translateX(-61%); font-weight: bold;\">Prepare</div>\n  <div style=\"position: absolute; top: 79%; left: 49.8%; transform: translateX(-49.8%); font-weight: bold;\">Try</div>\n  <div style=\"position: absolute; top: 52%; left: 39%; transform: translateX(-39%); font-weight: bold;\">Reflect</div>\n</div>\n\n* **Define**\n  * What kind of app would you like to create?\n  * What are your constraints?\n  * What does success look like?\n* **Prepare**\n  * Brainstorm / research possible elements\n  * Compare pros and cons\n  * Make a plan\n* **Try**\n  * Put your plan into action\n* **Reflect**\n  * How do your results compare to the goals you set while defining the app?\n  * What can you learn from this or do better next time?\n  * What new problems have you discovered?\n\n# What it Looks Like\nOver the course of the next several weeks, you will have the opportunity to experiment with some existing games and design your own game based off of what you have learned.  After creating your game, you will get the chance to present it to others and receive feedback.  These steps are all critically important in the software industry, and getting practice with the elements of the design process will help you create better products more efficiently.  \n\nHere is what the coming weeks will hold as we learn more about the design process:\n\n1. **Define & Prepare**\n   * Play existing games to get ideas and understand limitations\n   * Brainstorm and plan your new or modified app\n1. **Try**\n   * Follow your plan to build an app\n1. **Reflect & Edit**\n   * Swap apps with another group to help make your projects better\n1. **Present**\n   * Show off your final product!\n"
    }
  },
  "https://studio.code.org/s/express-2017/stage/35/puzzle/1": {
    "dsls": {
      "title": "title",
      "content1": "description here",
      "markdown": "# Project Presentations\n\nTime to present your projects! Your teacher will provide more details on how you will be presenting your work to your classmates.\n"
    }
  }
}