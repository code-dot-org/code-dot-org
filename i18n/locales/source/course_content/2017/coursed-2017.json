{
  "https://studio.code.org/s/coursed-2017/stage/1/puzzle/1": {
    "title": "Graph Paper Programming"
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/2": {
    "short_instructions": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
    "long_instructions": "For this puzzle, snap all of the blocks together and click \"Run\" to watch it go!",
    "authored_hints": {
      "courseC_maze_programming1_a": "If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.",
      "courseC_maze_programming1_b": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "callouts": {
      "grade2_CaringForNewPet_0_1": "After connecting all the blocks, press \"Run\" to start your program."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/3": {
    "short_instructions": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
    "long_instructions": "Drag an extra `move forward` block out of the toolbox, then attach all blocks to `when run` to finish your code.",
    "authored_hints": {
      "courseC_maze_programming2_a": "To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.",
      "courseC_maze_programming2_b": "Make sure all 3 blocks are clicked together and attached to the `when run` block."
    },
    "callouts": {
      "courseC_maze_programming2_1": "This is the toolbox. It’s where you’ll find extra blocks to complete your puzzles."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/4": {
    "short_instructions": "There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.",
    "long_instructions": "_\"This pig is ruffling my feathers.\"_\n\nThere is one extra block that is going to cause the bird to crash.\\\nThrow it away by removing it from the other blocks and dragging it back to the toolbox.",
    "authored_hints": {
      "courseC_maze_programming3_a": "[][0]\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong."
    },
    "callouts": {
      "courseC_maze_programming3_2": "You can drag extra blocks to the toolbox to throw them away.",
      "stone_block_2": "Grey blocks are made of stone and cannot be thrown away."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/5": {
    "short_instructions": "Avoid TNT or feathers will fly!",
    "long_instructions": "_\"Trace the path and lead me to the silly pig.\"_ \n\nAvoid TNT or feathers will fly!",
    "authored_hints": {
      "courseC_maze_programming4_a": "You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.",
      "courseC_maze_programming4_b": "To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig."
    },
    "callouts": {
      "courseC_maze_programming4_1": "This is your block limit.  It tells you how many of these blocks you have left to use."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/6": {
    "short_instructions": "Avoid the TNT.",
    "long_instructions": "_\"Follow this path to get me to the pig!\"_\n\nAvoid the TNT.",
    "authored_hints": {
      "courseC_maze_programming5_a": "Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?",
      "courseC_maze_programming5_b": "Remember that turns are from the bird's perspective.",
      "courseC_maze_programming5_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "callouts": {
      "": "These blocks don't have numbers on them. You can use as many as you want!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/8": {
    "short_instructions": "\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"",
    "long_instructions": "_\"Keep calm and help me find the bad pig. Otherwise I might get angry!\"_\n\nWhen you have several of the same block in a row, try using a `repeat` loop, instead.  This will do the same thing with less code!",
    "authored_hints": {
      "courseC_maze_programming6_a": "There are two ways to solve this puzzle!",
      "courseC_maze_programming6_b": "The bird starts facing a wall, so remember to turn before you move.",
      "courseC_maze_programming6_c": "Remember you can write one piece of the code at a time, then run it to figure out where you need to go from there."
    },
    "callouts": {
      "courseD_maze_ramp6_1": "Whatever code you put in here will repeat as many times as you tell it to, then continue to run the rest of the program."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/9": {
    "short_instructions": "Get the bird to the pig!",
    "long_instructions": "_\"It's time to get angry!\"_  \n\nUse what you've learned to get the bird to the pig!",
    "authored_hints": {
      "courseD_maze_ramp7_b": "Don't forget to use the \"Step\" button to go through block by block and look for errors.",
      "courseD_maze_ramp7_a": "Use repeat blocks to run either a single block or a chunk of code over and over.",
      "courseD_maze_ramp7_c": "If you want to simplify your code, you can put one repeat loop inside of another! This is called a **nested loop**."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/10": {
    "short_instructions": "Help Laurel collect all of the treasure.",
    "long_instructions": "This puzzle is a lot like the last one, but now it stars Laurel the Adventurer!\n\n* * *\n\nTake the same path as before, but this time, use a repeat loop to collect treasure when you get to it.",
    "authored_hints": {
      "courseD_collector_ramp8_a": "When you get to a square with treasure, use `collect` to pick it up. For this puzzle, you'll need to collect treasure more than once!",
      "courseD_collector_ramp8_b": "If you want to simplify your code more, you can actually put one `repeat` loop inside of another! This is called a **nested loop**."
    },
    "callouts": {
      "courseD_collector_ramp8_1": "Use this block to collect a single piece of treasure.  "
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/11": {
    "short_instructions": "Help Laurel collect all of the treasure.",
    "long_instructions": "Now there's more treasure.  Can you help Laurel collect it all?",
    "authored_hints": {
      "courseD_collector_ramp9_a": "Start by moving Laurel to the first treasure, then collecting it. Can you repeat this sequence to get the second pile?",
      "courseD_collector_ramp9_b": "If you want to simplify your code, you can put one repeat loop inside of another! This is called a **nested loop**."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/12": {
    "short_instructions": "Help Laurel collect all of the treasure.",
    "long_instructions": "Walk Laurel around this square collecting the treasure as you find it.",
    "authored_hints": {
      "courseD_artist_ramp10_a": "Instead of using four `move forward` blocks for each side, try putting one `move forward` block inside of a `repeat` loop, like this:\n\n[blockly block][0]",
      "courseD_artist_ramp10_b": "Don't forget to collect one piece of treasure, then turn to start on a new side of the square!",
      "courseD_artist_ramp10_c": "If you want to simplify your code, you can put one loop inside of another! This is called a **nested loop**."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/13": {
    "short_instructions": "Now make a square using Artist!",
    "long_instructions": "Great!  Now let's make a square using Artist!  The blocks are a little different, but the idea is the same.\n\n* * *\n\nEach side of the square has a length of 200 pixels, and you will need to turn 90 degrees to make each angle.",
    "authored_hints": {
      "courseD_artist_ramp11a": "To draw a side, use the `move forward by 100 pixels` block, and change the 100 to a 200.",
      "courseD_artist_ramp11b": "To draw 4 sides, put a `move forward by 200 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.\n\nDon't forget to turn afterward!",
      "courseD_artist_ramp11_c": "Remember to put the `turn` block inside of your loop!"
    },
    "callouts": {
      "courseD_artist_ramp11_1": "You can change this number.",
      "courseD_artist_ramp11_2": "Click here to type in the number of times to repeat your code."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/15": {
    "short_instructions": "Use what you've learned to draw this triangle inside of a square.",
    "long_instructions": "Use what you've learned to draw this triangle inside of a square.\n\n* * *\n\n##### The sides are each 200 pixels long. You will need to turn 90 degrees to make the square and 120 degrees to make the triangle.",
    "authored_hints": {
      "courseD_artist_ramp12_a": "You can either draw the square first, then the triangle, or do it the other way around!",
      "courseD_artist_ramp12_b": "Try splitting the problem into 2 parts, and using 2 loops.",
      "courseD_artist_ramp12_c": "You can use the drop down menu on the `turn` blocks to see which angle you need!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/2/puzzle/16": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The farmer will walk to the end of the path and harvest the pumpkin.",
              "correct": false,
              "feedback": "Incorrect. The `pick pumpkin` block is inside the loop, so the farmer will try to pick pumpkins at each step, instead of just at the end."
            },
            {
              "text": "The farmer will try to pick pumpkins at each square, but won't ever make it to the pumpkin.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The farmer will walk four spaces, then try to pick one pumpkin.",
              "correct": false,
              "feedback": "Incorrect. The `pick pumpkin` block is inside the loop, so the farmer will try to pick pumpkins at each step, instead of just at the end."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The `pick pumpkin` block is inside the loop, so the farmer will try to pick pumpkins at each step, instead of just at the end."
            }
          ],
          "markdown": "Here is a new puzzle type that uses blocks similar to what you have already seen. Can you make a prediction about what will happen when you run the code below?\n\n\n",
          "questions": [
            {
              "text": " "
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/3/puzzle/1": {
    "short_instructions": "Attach a block to the \"when left arrow\" block and press \"Run\". Move the paddle using the left arrow to reach the finish target."
  },
  "https://studio.code.org/s/coursed-2017/stage/3/puzzle/2": {
    "short_instructions": "Attach a block to the \"when right arrow\" and \"when left arrow\" blocks. Move the paddle to reach both finish targets."
  },
  "https://studio.code.org/s/coursed-2017/stage/3/puzzle/3": {
    "short_instructions": "Now try something similar with the \"when up arrow\" block. Move the paddle to the finish target at the top."
  },
  "https://studio.code.org/s/coursed-2017/stage/3/puzzle/4": {
    "short_instructions": "This time you need to add four blocks. Move the paddle to all four finish targets to complete this puzzle."
  },
  "https://studio.code.org/s/coursed-2017/stage/3/puzzle/5": {
    "short_instructions": "We're going to send a ball flying down towards the paddle. Attach a block to the \"when ball hits paddle\" block to ensure the ball reaches the finish target."
  },
  "https://studio.code.org/s/coursed-2017/stage/3/puzzle/6": {
    "short_instructions": "Now the finish target is on the top. You need to attach blocks to both of the \"when ball hits\" blocks to solve this puzzle."
  },
  "https://studio.code.org/s/coursed-2017/stage/3/puzzle/7": {
    "short_instructions": "Attach blocks to each of the \"when\" blocks. Bounce the ball until it hits the finish target."
  },
  "https://studio.code.org/s/coursed-2017/stage/3/puzzle/8": {
    "short_instructions": "There is now a goal at the top. Attach the \"score point\" and \"score opponent point\" blocks to the \"when ball in goal\" and \"when ball misses paddle\" blocks to make a game. See how many points you can score before your opponent scores twice."
  },
  "https://studio.code.org/s/coursed-2017/stage/3/puzzle/9": {
    "short_instructions": "You can now attach blocks to the \"when run\" block. You have to attach the new \"launch new ball\" block in more than one place. Also, try changing the scene or the speed of the paddle and the ball and see how many points you can score before your opponent scores twice."
  },
  "https://studio.code.org/s/coursed-2017/stage/3/puzzle/10": {
    "short_instructions": "Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones."
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/1": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "long_instructions": "\"_This is going to **BEE** great!_\"\n\nHelp the bee collect all of the nectar.",
    "authored_hints": {
      "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
      "courseD_bee_nestedLoops1_b": "Try writing code for one side of the square first. Can you loop this to get all of the nectar?",
      "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/3": {
    "short_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "long_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bee will move forward and get nectar only one time.",
              "correct": false,
              "feedback": "Incorrect.  The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            },
            {
              "text": "The bee will get only 2 units of nectar.",
              "correct": false,
              "feedback": "Incorrect.  The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            },
            {
              "text": "The bee will get all of the nectar.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The bee loops the looped action of moving forward and collecting nectar, allowing it to solve the puzzle."
            }
          ],
          "questions": [
            {
              "text": "Look closely at the nested loops below. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/4": {
    "short_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "long_instructions": "This time, help the bee collect all of the nectar using as few blocks as possible.",
    "authored_hints": {
      "courseD_bee_nestedLoops2_a": "To solve this puzzle, you will need to nest one `repeat` loop inside of another.",
      "courseD_bee_nestedLoops2_b": "Can't figure out where to put the loops? Try writing the code on paper step-by-step and look for a pattern.",
      "courseD_bee_nestedLoops2_c": "Remember you can put more than one block inside of a loop."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/5": {
    "short_instructions": "Get the zombie to the sunflower using the fewest number of blocks possible.",
    "long_instructions": "_\"Zombie hungry!\"_\n\nGet the zombie to the sunflower using the fewest number of blocks possible.",
    "authored_hints": {
      "courseD_maze_nestedLoops3_a": "To solve this puzzle, you will need to \"nest\" one `repeat` loop inside of another `repeat` loop.",
      "courseD_maze_nestedLoops3_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern.",
      "courseD_maze_nestedLoops3_c": "Try writing code for one straight piece of path and a turn. Can you repeat this to get to the sunflower?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/6": {
    "short_instructions": "Get the zombie to the sunflower using the fewest blocks possible!  ",
    "long_instructions": "Get the zombie to the sunflower using the fewest blocks possible!  ",
    "authored_hints": {
      "courseD_maze_nestedLoops4_a": "Try using this path through the maze.\n\n[][0]",
      "courseD_maze_nestedLoops4_b": "If the loop pattern is hard to see, try coding it all out first and see what code repeats over and over before you put the loops in.",
      "courseD_maze_nestedLoops4_c": "Try using one `repeat` loop inside of another to cut down on the amount of code you need."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/7": {
    "short_instructions": "Get the zombie to the sunflower using the fewest number of blocks possible!",
    "authored_hints": {
      "courseD_maze_nestedLoops5_a": "Look for a stair-step pattern in this maze to find where a nested loop can be used.",
      "courseD_maze_nestedLoops5_b": "Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/8": {
    "short_instructions": "Get the zombie to the sunflower using only the blocks available.",
    "long_instructions": "_\"Must eat sunflower!\"_\n\nGet the zombie to the sunflower using only the blocks available.",
    "authored_hints": {
      "courseD_maze_nestedLoops6_a": "If you are stuck, try writing out the code out on paper without loops first and look for patterns.",
      "courseD_maze_nestedLoops6_b": "Nesting `repeat` loops can help decrease the number of blocks used.",
      "courseD_maze_nestedLoops6_c": "It will take two sets of nested `repeat` loops to solve this puzzle."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/9": {
    "short_instructions": "Challenge: Figure out how to get all of the nectar using only the blocks available.",
    "long_instructions": "**Challenge:** Figure out how to get all of the nectar using only the blocks available.",
    "authored_hints": {
      "courseD_bee_nestedLoops7_a": "You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.",
      "courseD_bee_nestedLoops7_b": "You will need to use all three of the available `repeat` blocks to solve this puzzle.",
      "courseD_bee_nestedLoops7_c": "Nest your blocks three deep, like this:\n\n-   repeat 4\n    -   repeat 3\n        -   repeat 12\n            -   get nectar\n        -   move forward\n    -   turn right"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/10": {
    "short_instructions": "Collect all of the nectar from each flower and make honey at the honeycomb. ",
    "long_instructions": "Collect all of the nectar from each flower and make honey at the honeycomb. "
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/11": {
    "short_instructions": "Make all of the honey.",
    "long_instructions": "Make all of the honey."
  },
  "https://studio.code.org/s/coursed-2017/stage/4/puzzle/12": {
    "short_instructions": "Make all of the honey.",
    "long_instructions": "Make all of the honey.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "4",
              "correct": false,
              "feedback": "Incorrect. The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            },
            {
              "text": "8",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "12",
              "correct": false,
              "feedback": "Incorrect. The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The bee collects 2 nectar in a loop moving forward, then 2 nectar in a loop down.  This is all inside of another loop that happens twice. 4 times 2 is 8!"
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. How much honey will the bee make when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/4/extras?level_name=courseD_harvester_nested_loops_challenge1": {
    "short_instructions": "\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"",
    "long_instructions": "_\"I need some help on the farm! Help me harvest this corn using only the blocks in your toolbox.\"_",
    "authored_hints": {
      "courseD_harvester_nested_loops_challenge1_a": "Try following this path to reach all of the corn! ",
      "courseD_harvester_nested_loops_challenge1_b": "To collect more than one piece of corn, you need to use `pick corn` more than one time.",
      "courseD_harvester_nested_loops_challenge1_c": "You will need to put a small loop inside of your main loop to solve this puzzle!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/4/extras?level_name=courseD_collector_nested_loops_challenge2a": {
    "short_instructions": "Help Laurel collect at least two piles of treasure.",
    "long_instructions": "_\"Let's hunt for treasure - using loops!\"_ \n\nHelp Laurel collect at least two piles of treasure using only the blocks in your toolbox. It is possible to collect all 4.",
    "authored_hints": {
      "courseD_collector_nested_loops_challenge2a_a": "Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!",
      "courseD_collector_nested_loops_challenge2a_b": "Can you figure out how to get all four gems without using any more blocks than it takes to get two?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/1": {
    "short_instructions": "Draw a triangle to kickstart this stage.\\\n(Each side is 100 pixels long and you'll need to turn 120 degrees for each exterior angle.)",
    "authored_hints": {
      "courseD_artist_nestedLoops1_a": "The easiest way to draw this is to move forward and use right turns.",
      "courseD_artist_nestedLoops1_b": "You can draw this triangle with a `repeat` loop with two blocks inside. Which blocks do you need?",
      "courseD_artist_nestedLoops1_c": "Try writing the steps on paper and looking for patterns that can be simplified with loops."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/2": {
    "short_instructions": "Now loop the triangle 6 times. ",
    "long_instructions": "Now loop the triangle 6 times. \n\nAfter each triangle, you'll need to turn 60 degrees before drawing the next. ",
    "authored_hints": {
      "courseD_artist_nestedLoops1a_a": "You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.\n\n[][0]",
      "courseD_artist_nestedLoops1a_b": "If you create your triangle with a loop, the artist should be facing the same way as they started. This will make the 60 degree turns a lot easier.",
      "courseD_artist_nestedLoops1a_c": "If you want colors, use the `set color` block in your code. You don't have to match the colors in the template image."
    },
    "callouts": {
      "courseD_artist_nestedLoops1a_1": "You don't have to use colors to get this puzzle right. If you want to, this `random color` block makes it easy!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/4": {
    "short_instructions": "This time, complete the puzzle with the fewest number of blocks possible.",
    "long_instructions": "This time, complete the puzzle with the fewest number of blocks possible.\n\nAfter each triangle, you'll need to turn 60 degrees before drawing the next.\nSee how much easier this is with **nested loops**?",
    "authored_hints": {
      "courseD_artist_nestedLoops2_a": "Nest your loops by surrounding your triangle code with another `repeat` loop.",
      "courseD_artist_nestedLoops2_b": "Remember to put the `turn` block inside of the loop so that the artist turns after each triangle."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/5": {
    "short_instructions": "Use your new skills to quickly draw the last row of windows for this building.\n\nThe windows are 20 pixel squares, each 20 pixels apart.",
    "authored_hints": {
      "courseD_artist_nestedLoops3_a": "Try using the `jump forward` block to get from the top of one square to the place where you will start the next. \n\nIf your squares are 20 pixels tall and they are 20 pixels apart, how far do you need to jump?",
      "courseD_artist_nestedLoops3_b": "Don't forget to use a nested loop to solve this puzzle quickly. ",
      "courseD_artist_nestedLoops3_c": "Start by using a `repeat` loop to make one square.  Next, repeat that square 8 times, jumping 40 pixels in between. "
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/6": {
    "short_instructions": "Great!  Do the same thing with these circles.",
    "long_instructions": "Great!  Do the same thing with these circles. \n\n-   Each circle is made by moving 1 pixel before turning 1 degree, 360 times.\n-   Each circle begins just 50 pixels from where the last one ended",
    "authored_hints": {
      "courseD_artist_nestedLoops4_d": "To solve this correctly, you'll need to move **before** you turn, or else your circles will be off by the tiniest little amount!",
      "courseD_artist_nestedLoops4_a": "To make a circle:\n\n-   Repeat 360 times\n    -   Move forward 1 pixel\n    -   Turn left 1 degree",
      "courseD_artist_nestedLoops4_b": "Don't forget to jump forward by 50 pixels between circles.",
      "courseD_artist_nestedLoops4_c": "Use a nested loop to draw your circles 4 times."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/7": {
    "short_instructions": "What happens if you also turn 90 degrees between circles?",
    "long_instructions": "What happens if you also turn 90 degrees between circles?\n\n(To get this image, you still need to jump 50 pixels between circles)",
    "authored_hints": {
      "courseD_artist_nestedLoops5_a": "To do this easily:\n\n-   repeat 4 times\n    -   make a circle\n    -   jump forward 50 pixels\n    -   turn right 90 degrees",
      "courseD_artist_nestedLoops5_b": "To make a circle you'll need to set a repeat loop to repeat 360 times. Inside the loop, move forward 1 pixel and turn by 1 degree."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/8": {
    "short_instructions": "Use what you've learned to make this drawing.",
    "long_instructions": "Use what you've learned to make this drawing.\n\n-   The squares each have **100 pixel sides** and **90 degree angles**\n-   You will need to turn **60 degrees between each square**. Why? Because there are 6 squares, and 360 degrees (a full turn around) divided by 6 is 60 degrees.\n-   Make sure you jump **50 pixels to get to the next square**",
    "authored_hints": {
      "courseD_artist_nestedLoops7_a": "You'll need to use nested loops here. First, use a loop to draw a square. What will the outer loop do if the inner loop draws a square?",
      "courseD_artist_nestedLoops7_b": "Use a nested loop, where the inner loop is the code for a square.\n\n-   repeat 6 times\n    -   make square\n    -   jump forward by **50 pixels**\n    -   turn **60 degrees**"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/9": {
    "short_instructions": "Using what you have learned in the last couple of puzzles, build this image from the beginning.",
    "long_instructions": "Using what you have learned in the last couple of puzzles, build this image from the beginning.\n\n-   Each hexagon has **50 pixel sides** and **60 degree turns**",
    "authored_hints": {
      "courseD_artist_nestedLoops8_a": "To have 8 hexagons in your drawing, you'll need to turn **45 degrees** between each of them. Why? Because 360 degrees (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.",
      "courseD_artist_nestedLoops8_b": "If you're stuck, start by looking at the last puzzle, then change the things that are different.",
      "courseD_artist_nestedLoops8_c": "Use a nested loop:\n\n-   Repeat 8 times\n    -   draw a hexagon\n    -   jump forward 50 pixels\n    -   turn right 45 degrees"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/10": {
    "short_instructions": "**Challenge:** Can you figure out how to make a picture like this?",
    "long_instructions": "**Challenge:** Can you figure out how to make a picture like this?\n\n-   Both shapes have **50 pixel sides**\n-   Between each pair of shapes, you will need to jump forward the length of a side, and turn 45 degrees.",
    "authored_hints": {
      "courseD_artist_nestedLoops9_a": "Start by using a nested loop like you had before, but this time, make it with squares.",
      "courseD_artist_nestedLoops9_b": "Add a second set of nested loops to the end of the first set, but this time use triangles.",
      "courseD_artist_nestedLoops9_c": "Use two nested loops:\n\n-   Repeat 8 times\n    -   draw a square\n    -   jump forward 50 pixels\n    -   turn right by 45 degrees\n-   Repeat 8 times\n    -   draw a triangle\n    -   jump forward 50 pixels\n    -   turn right by 45 degrees"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/11": {
    "short_instructions": "Take the squares from before, but this time only make 7 of them, and lay them out in a row."
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/12": {
    "short_instructions": "**Challenge:** Can you figure out how to make a picture like this?",
    "long_instructions": "**Challenge:** Can you figure out how to make a picture like this?\n\n-   Both shapes have 50 pixel sides",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "A",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "B",
              "correct": false,
              "feedback": "Incorrect.  The inner loop makes a pentagon, and the outer loop repeats it 4 times in a circle."
            },
            {
              "text": "C",
              "correct": false,
              "feedback": "Incorrect.  The inner loop makes a pentagon, and the outer loop repeats it 4 times in a circle."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The inner loop makes a pentagon, and the outer loop repeats it 4 times in a circle."
            }
          ],
          "markdown": "<table>\n<tr><td>A</td><td><img src=\"https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png\" width=\"100px\" style=\"mix-blend-mode: multiply;\"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src=\"https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png\" width=\"100px\" style=\"mix-blend-mode: multiply;\"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src=\"https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png\" width=\"80px\" style=\"mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);\"/></td></tr>\n</table>\n\n<br/><br/>\n\n",
          "questions": [
            {
              "text": "Take a good look at the code below. Which drawing will this program make when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/5/puzzle/13": {
    "short_instructions": "Now it's your turn.  Take the skills you have learned and make something that you love!",
    "long_instructions": "Now it's your turn.  Take the skills you have learned and make something that you love!\n\nNeed an idea?  Try to make one of these:\n\n[expandable][0]\n[expandable][1]\n[expandable][2]",
    "authored_hints": {
      "courseD_artist_nestedLoopsFP_a": "<img src=\"https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png\" width=\"200px\"/>\n\nThis image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.",
      "courseD_artist_nestedLoopsFP_b": "<img src=\"https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png\" width=\"200px\"/>\n\nThis image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).",
      "courseD_artist_nestedLoopsFP_c": "<img src=\"https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png\" width=\"200px\"/>\n\nThis image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/extras?level_name=courseD_artist_nestedLoops_challenge1": {
    "short_instructions": "Can you figure out how to make a picture like this?",
    "long_instructions": "Can you figure out how to make a picture like this?\n\n-   Both shapes have **50 pixel sides.**\n-   The _octagons_ are made with **45 degree** turns.\n-   The _triangles_ are made with **120 degree** turns.",
    "authored_hints": {
      "courseD_artist_nestedLoops_challenge1_a": "Start by changing the color to blue, then create an octagon with 50 pixel sides and 45 degree left turns.",
      "courseD_artist_nestedLoops_challenge1_b": "Add the code to change the color to green, and make a triangle with 50 pixel sides and 120 degree left turns.",
      "courseD_artist_nestedLoops_challenge1_c": "After you've drawn both shapes, you will need to jump forward by 50 pixels before you turn right by 90 degrees.",
      "courseD_artist_nestedLoops_challenge1_d": "Put all of your code inside of a `repeat 4 times` loop to finish it off."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/5/extras?level_name=courseD_artist_nestedLoops_challenge2": {
    "short_instructions": "Fix the code to make this picture!",
    "long_instructions": "This code is just a little bit off!  Can you fix it to make the correct drawing in the workspace?\n\n-   The first inner loop should make an octagon.\n-   The second inner loop should make a hexagon.\n-   The third inner loop should make a square.",
    "authored_hints": {
      "courseD_artist_nestedLoops_challenge2_a": "To draw a regular octagon, the artist needs to turn 45 degrees 8 times.",
      "courseD_artist_nestedLoops_challenge2_b": "To draw a square, the artist needs to turn 90 degrees 4 times."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/6/puzzle/1": {
    "short_instructions": "Draw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  ",
    "long_instructions": "[][0] _“Hi, I’m Elsa of Arendelle, help me draw a shape.”_\n\nDraw a small shape, between **20 and 50** pixels wide.  It can be any shape that you like.  \n\n<hr/>\n\nYou can try making a polygon, like one of these:\\\n[][1]\n[][2]\n[][3]  \n\nOr even an abstract shape, like one of these:\\\n[][4]\n[][5]\n[][6]",
    "authored_hints": {
      "courseD_artist_project1_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
      "courseD_artist_project1_b": "Remember that `move forward` draws a line, while `jump forward` does not."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/6/puzzle/2": {
    "short_instructions": "Now take your shape and draw two or three in a row!",
    "long_instructions": "[][0] _“Now, let’s draw more than one.”_\n\nNow take your shape and draw two or three in a row by jumping forward some number of pixels.  \n\n-   If you jump forward by **less** than the width of your shape, they might overlap\n-   If you jump forward by **more** than the width of your shape, you will get a gap\n\n<hr/>\n\nYour row might end up straight like with these:\n\n[][1]\n[][2]\n[][3]\n<br/>  <br/>\n\nOr, your shapes might move around like one of these: \n\n[][4]\n[][5]\n[][6]",
    "authored_hints": {
      "courseD_artist_project2_a": "Remember that `move forward` draws a line, while `jump forward` does not.",
      "courseD_artist_project2_b": "After you draw and move the first time, you can repeat the code by adding a loop around the outside."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/6/puzzle/3": {
    "short_instructions": "Let's spin that line of shapes around!",
    "long_instructions": "[][0] _\"Let’s make it into a snowflake.\"_\n\nNext, jump Elsa back to the center using the `jump to 200 over and 200 down` block, and spin her around to draw the line of shapes again and again in a bunch of different directions.\n\nWhat amazing snowflakes you can make!\n\n* * *\n\nTake a look at these examples with polygons:\\\n[][1]\n[][2]\n[][3]\n\nAbstract shapes might make a snowflake more like one of these:\\\n[][4]\n[][5]\n[][6]",
    "authored_hints": {
      "courseD_artist_project3_a": "Use the drop down menu on the `turn` blocks to choose the angle you need!",
      "courseD_artist_project3_b": "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n-   Try 72 degrees if you are repeating the outer loop 5 times\n-   Try 60 degrees if you are repeating the outer loop 6 times"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/6/puzzle/4": {
    "short_instructions": "Time to layer those shapes!",
    "long_instructions": "[][0] _\"What happens if we draw snowflakes on top of each other?\"_\n\nTry layering two different shapes of snowflakes on top of one another with a little turn in between - see what you get! ",
    "authored_hints": {
      "courseD_artist_project4_a": "Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:\n\n<img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" />\n\nHere's a set of hexagons with squares:\n\n<img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" />",
      "courseD_artist_project4_b": "To try this, draw your first snowflake, turn, then draw a second snowflake."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/6/puzzle/5": {
    "short_instructions": "Play with the snowflakes!",
    "long_instructions": "[][0] _\"Get creative with shapes and angles to see what kind of new snowflakes we can draw!\"_",
    "authored_hints": {
      "courseD_artist_project4_a": "Lines of 2 hexagons and 4 triangles:\n\n<img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/6/puzzle/6": {
    "short_instructions": "Draw a stair-step pattern that uses turns between 75 and 105 degrees.",
    "long_instructions": "[][0] _\"Let’s try something new. This time, skate in a zig-zag.\"_\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" style=\"float: left; margin: 0 15px 15px 0;\" />\n\nDraw a stair-step pattern that uses turns between 75 and 105 degrees -- but make sure that your left and right turns use the same angle.\\\n(You will see why later.)",
    "authored_hints": {
      "courseD_artist_project1a_a": "This stair step uses a 76 degree turn and repeats 4 times.\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" />",
      "courseD_artist_project1a_b": "These patterns are a lot like the stair steps from other puzzles, but using a different angle."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/6/puzzle/7": {
    "short_instructions": "Now, turn around 180 degrees and draw the stair pattern again!",
    "long_instructions": "[][0] _\"Now let’s turn and go back the way we came.\"_\n\nTurn around 180 degrees and draw the exact same stair pattern again!  \n\n-   The rest of this stage will be easier if you put all of your code inside of a loop to make Elsa  draw, turn around 180 degrees, draw, then turn around 180 degrees again.\n\n<hr/>\n\nHere is an example of stairs that use a 76 degree turn:\n\n[][1]",
    "authored_hints": {
      "courseD_artist_project2a_a": "This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.\n\n<img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/6/puzzle/8": {
    "short_instructions": "Spin that shape around 5 or 6 times in a circle.",
    "long_instructions": "[][0] _\"Let’s spin and make it into a snowflake.\"_\n\nSpin that shape around 5 or 6 times in a circle.\n\n-   If you choose 5 times,  try a turn of 72 degrees\n-   If you choose 6 times,  try a turn of 60 degrees\n    <hr/>\n\nHere's an example of Elsa turning a pattern 6 times:\n\n[][1]",
    "authored_hints": {
      "courseD_artist_project3a_a": "You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/6/puzzle/9": {
    "short_instructions": "Try playing around with what you've created. Draw whatever you like!\n\n-   What happens if you use two different angles in your stair step pattern?\n-   What happens if you make your diamond pattern longer or shorter?\n-   What does it look like to draw two snowflakes on top of one another?",
    "long_instructions": "[][0]  _\"Now, what should we do? Let’s explore and create our own winter wonderland!\"_\n\nTry playing around with what you've created. Draw whatever you like!\n\n-   What happens if you use two different angles in your stair step pattern?\n-   What happens if you make your diamond pattern longer or shorter?\n-   What does it look like to draw two snowflakes on top of one another?",
    "authored_hints": {
      "courseD_artist_project4a_a": "Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)\n\n<img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" />"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/7/puzzle/1": {
    "title": "Relay Programming"
  },
  "https://studio.code.org/s/coursed-2017/stage/8/puzzle/2": {
    "short_instructions": "Fix the error(s) to collect all of the treasure.",
    "long_instructions": "_\"Oh no! I see a problem.\"_\n\nFix the error(s) to collect all of the treasure.",
    "authored_hints": {
      "courseD_collector_debugging1_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
      "courseD_collector_debugging1_b": "Do you see any patterns that could be made more simple using a `repeat` loop?",
      "courseD_collector_debugging1_c": "Remember to use the `collect` block to pick up treasure once you have moved to it."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/8/puzzle/3": {
    "short_instructions": "Fix the error(s) to collect all of the treasure.",
    "long_instructions": "_\"You can do this!\"_\n\nFix the error(s) to collect all of the treasure.",
    "authored_hints": {
      "courseD_collector_debugging2_a": "Use the \"Step\" button to see if everything is right at the first step.\n\nHow about the second?\n\nWhere does it go wrong?",
      "courseD_collector_debugging2_b": "Do you see any patterns that could be made more simple using a `repeat` loop?",
      "courseD_collector_debugging2_c": "Try collecting treasure for one side of this pattern. Can you repeat this to collect treasure on the other two sides?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/8/puzzle/4": {
    "short_instructions": "Fix the error(s) to collect all of the treasure.",
    "long_instructions": "_\"Be persistent and you will figure this out.\"_\n\nFix the error(s) to collect all of the treasure.",
    "authored_hints": {
      "courseD_collector_debugging3_a": "Is there any place where Laurel does something that doesn't make sense? What happens when you change those blocks?",
      "courseD_collector_debugging3_b": "Try simplifying the code using nested loops."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/8/puzzle/5": {
    "short_instructions": "Fix the error(s) to collect all of the treasure.",
    "long_instructions": "_\"Don't get frustrated. You can do it!\"_\n\nFix the error(s) to collect all of the treasure.",
    "authored_hints": {
      "courseD_collector_debugging4_a": "Try using the debugging process a couple of times in a row. \n\nWhat causes the first problem?\n\nOnce that problem is fixed, what goes wrong?",
      "courseD_collector_debugging4_b": "If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. \n\nDon't forget to point out the direction of the turns!",
      "courseD_collector_debugging4_c": "This loop is only missing one block. Can you figure out which one?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/8/puzzle/6": {
    "short_instructions": "All of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
    "long_instructions": "_\"This puzzle is making me loopy!\"_\n\nAll of the commands that you need are already here...now use your debugging skills to figure out how to solve this puzzle.",
    "authored_hints": {
      "courseD_collector_debugging5_a": "Start by looking at just the first loop.\n\nWhat does it do?\n\nWhat is it supposed to do?\n\nWhat does that tell you?",
      "courseD_collector_debugging5_b": "Once you have the first loop the way you want it, what is left over in your code?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/8/puzzle/7": {
    "short_instructions": "Challenge: Use your debugging skills to fix the errors and collect all of the treasure.",
    "long_instructions": "**Challenge:**  All of the blocks that you need are already here...Now use your debugging skills to fix the errors and collect all of the treasure.",
    "authored_hints": {
      "courseD_collector_debugging6_a": "Try running through the code using the \"Step\" button.  Is everything good at the first step?\n\nHow about the second?\n\nWhere do things go wrong?",
      "courseD_collector_debugging6_b": "It looks like all of the right steps are here, you just need more of them.  How can you repeat the `collect` action multiple times?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/8/puzzle/8": {
    "long_instructions": "_\"So much treasure!\"_\n\nHelp Laurel fix the code to get all the treasure.",
    "authored_hints": {
      "courseD_collector_debugging8_a": "Do you see a pattern that you can simplify with a loop?",
      "courseD_collector_debugging8_b": "Try using a nested loop to make this code shorter."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/8/puzzle/9": {
    "long_instructions": "_\"It's treasure island!\"_\n\nHelp Laurel fix the code to get all the treasure.",
    "authored_hints": {
      "courseD_collector_debugging9_a": "There are several ways to solve this problem...but they all involve turns!",
      "courseD_collector_debugging9_b": "Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/8/puzzle/10": {
    "long_instructions": "_\"It's treasure island!\"_\n\nHelp Laurel fix the code to get all the treasure.",
    "authored_hints": {
      "courseD_collector_debugging9_a": "There are several ways to solve this problem...but they all involve turns!",
      "courseD_collector_debugging9_b": "Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head."
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Laurel will turn the wrong way when making a square.",
              "correct": false,
              "feedback": "Incorrect. This was partially correct, but the loop also does not run long enough to get all of the treasure."
            },
            {
              "text": "The loop does not run long enough for Laurel to get to all of the treasure. ",
              "correct": false,
              "feedback": "Incorrect. This was partially correct, but the bee also turns the wrong way when trying to make a square."
            },
            {
              "text": "Laurel turns the wrong way *and* the loop doesn't run long enough for Laurel to get all of the treasure.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "Laurel turns the wrong way *and* the loop doesn't run long enough for Laurel to get all of the treasure."
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below.  Why won't Laurel collect all of the treasure when you click \"Run\"? Warning: This is a tricky question, make sure you read all of the options before answering!"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/8/extras?level_name=courseD_bee_debugging_challenge1a": {
    "short_instructions": "Watch how the bee gets the nectar. Use the same pattern to help the bee make all the honey.",
    "long_instructions": "_\"Buzz buzz! I know how to get nectar, now help me make honey!\"_\n\nWatch how the bee gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?",
    "authored_hints": {
      "courseD_bee_debugging_challenge1_a": "Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?",
      "courseD_bee_debugging_challenge1_b": "To solve this puzzle, have the bee follow the same pattern to make honey that it does when collecting nectar.",
      "courseD_bee_debugging_challenge1_c": "After the bee makes it to the bottom row, have it repeat these commands:\n\n[blockly block][0]"
    },
    "callouts": {
      "courseD_bee_debugging_challenge1_callout1": "Use this command to move the bee backward."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/8/extras?level_name=courseD_collector_debugging_challenge2": {
    "short_instructions": "Are you an expert at nested loops? Use what you have learned so far to collect all the treasure!",
    "authored_hints": {
      "courseD_collector_debugging_challenge2_a": "Start by collecting just **two** gems from each of the first **two** piles.\n\n[][0]\nUse these blocks.\n\n[blockly block][1]",
      "courseD_collector_debugging_challenge2_b": "Next, collect the remaining gems in this row.\n\n[][0]\nAdd these blocks to your program.\n\n[blockly block][1]",
      "courseD_collector_debugging_challenge2_c": "Finally, collect the remaining treasure. Add these blocks to your program.\n\n[blockly block][0]",
      "courseD_collector_debugging_challenge2_d": "Here is the complete solution for this puzzle.\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/1": {
    "short_instructions": "Move to the pile of dirt and use the `remove` block to remove it.",
    "long_instructions": "_\"Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting!\"_  \n\nMove to the pile of dirt and use the `remove` block to remove it.",
    "authored_hints": {
      "courseD_farmer_while1_a": "You will need to move forward four times to get to the pile. Can you use a `repeat` loop for this?",
      "courseD_farmer_while1_b": "Use the `remove 1` block when you are standing on the pile of dirt to remove it."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/2": {
    "short_instructions": "Move to the hole and fill it with six shovelfuls of dirt, using the `fill` block.",
    "authored_hints": {
      "courseD_farmer_while2_a": "You will only need to move once to get to the hole.",
      "courseD_farmer_while2_b": "You will need the `fill 1` block six times. Can you use a loop to make this simpler?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/3": {
    "short_instructions": "Use as few blocks as possible to solve this puzzle.",
    "long_instructions": "_\"Move to the pile of dirt and tell me how many shovelfuls to remove.\"_\n\nUse as few blocks as possible to solve this puzzle.",
    "authored_hints": {
      "courseD_farmer_while3_a": "A loop can help you simplify your code here.",
      "courseD_farmer_while3_b": "You shouldn't need any `turn` blocks to get to the pile."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/5": {
    "short_instructions": "Help the farmer remove this entire pile using a `while` loop.",
    "long_instructions": "_\"I don't know how much dirt is in this pile!\"_\n\nHelp the farmer remove this entire pile using a `while` loop.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing will happen.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            },
            {
              "text": "The farmer will never stop removing dirt.",
              "correct": false,
              "feedback": "Incorrect. The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            },
            {
              "text": "The farmer will remove dirt as long as there is a pile, then stop when the pile is gone.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The farmer will remove dirt as long as there is a pile, then stop when the pile is gone"
            }
          ],
          "questions": [
            {
              "text": "Look closely at the code below. What will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/6": {
    "short_instructions": "Help the farmer remove this entire pile using a `while` loop.",
    "long_instructions": "_\"I don't know how much dirt is in this pile!\"_\n\nHelp the farmer remove this entire pile using a `while` loop.",
    "authored_hints": {
      "courseD_farmer_conditionals4_a": "Instead of using a `repeat` loop, use a `while` loop to keep digging until the pile is gone.",
      "courseD_farmer_conditionals4_b": "This looks very similar to an earlier puzzle, the only difference is which loop you need."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/7": {
    "short_instructions": "Help me remove all of this dirt. ",
    "authored_hints": {
      "courseD_farmer_conditionals5a_a": "Try nesting a `while` loop inside of a `repeat` loop.",
      "courseD_farmer_conditionals5a_b": "The farmer needs to move forward a total of five times to get to the end of the row. What else does the farmer need to do?",
      "courseD_farmer_conditionals5a_c": "Move forward 5 times. Each time you move forward, remove the pile of dirt by using the `while there is a pile` block."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/8": {
    "short_instructions": "Use the `while` loop to easily fill all of the holes.",
    "long_instructions": "Look at all of those holes!  Each one needs a different amount of dirt.   \n\nYou can use the `while` loop to easily fill them all!",
    "authored_hints": {
      "courseD_farmer_conditionals6_a": "Make sure you're using the `while` loop to figure out how many times to fill each hole.",
      "courseD_farmer_conditionals6_b": "Notice that the farmer needs to move forward and down several times in a stair-step pattern.",
      "courseD_farmer_conditionals6_c": "The stair step pattern uses the following blocks\n\n-   move forward\n-   fill hole\n-   turn right\n-   move forward\n-   fill hole\n-   turn left\n\nHow many times do you need to use this stair step pattern?\n\nMake sure you are using the `while there is a hole` to fill the hole."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/9": {
    "short_instructions": "Fill in the hole at the end of each of these paths.",
    "authored_hints": {
      "courseD_farmer_conditionals8_a": "The `while path ahead` block lets you keep going, even if you don't know how many squares are in a path.",
      "courseD_farmer_conditionals8_b": "Putting a `while path ahead` loop inside of a repeat loop can help you in this puzzle.",
      "courseD_farmer_conditionals8_c": "What do you need to do at the end of each path?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/10": {
    "short_instructions": "Challenge: Fill all of these holes using as few blocks as possible. ",
    "long_instructions": "**Challenge:** Fill all of these holes using as few blocks as possible. ",
    "authored_hints": {
      "courseD_farmer_conditionals8_a": "You are going to need to use more than one `while` loop.",
      "courseD_farmer_conditionals8_b": "Every hole is at the end of a path, so use `while path ahead` before using `while there is a hole`.",
      "courseD_farmer_conditionals8_c": "Notice that you need to repeat the `while path ahead`, `while there is a hole` code six times."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/11": {
    "short_instructions": "Flatten all of these piles using as few blocks as possible. "
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/12": {
    "short_instructions": "Flatten all of these piles using as few blocks as possible. "
  },
  "https://studio.code.org/s/coursed-2017/stage/9/puzzle/13": {
    "short_instructions": "Flatten all of these piles using as few blocks as possible. ",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Nothing. This code will leave only level ground.",
              "correct": false,
              "feedback": "Incorrect. There is no code to remove dirt from the pile."
            },
            {
              "text": "This code will leave the pile completely untouched.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "This code will leave the holes completely untouched.",
              "correct": false,
              "feedback": "Incorrect. The `while` loop will handle any size loop, but there is no code to remove dirt from the pile."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The `while` loop will handle any size loop, but there is no code to remove dirt from the pile."
            }
          ],
          "questions": [
            {
              "text": "Take a good look at the code below. What will be left at the end of this puzzle?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/9/extras?level_name=courseD_farmer_while_challenge1": {
    "short_instructions": "Fill all of the holes and remove all of the piles.",
    "long_instructions": "Fill all of the holes and remove all of the piles.",
    "authored_hints": {
      "courseD_farmer_while_challenge1_a": "Each hole or pile is located one space **backward** from the end of the path.",
      "courseD_farmer_while_challenge1_b": "If you use a `while` loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt or fill any hole, no matter where she is.",
      "courseD_farmer_conditionals8_c": "It is possible to solve this without using any `repeat` loops. To do this, you will need to use four `while` loops."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/9/extras?level_name=courseD_farmer_while_challenge2": {
    "short_instructions": "Fill all of the holes and remove all of the piles.",
    "long_instructions": "Fill all of the holes and remove all of the piles.",
    "authored_hints": {
      "courseD_farmer_while_challenge1_a": "Each hole or pile is located one space **backward** from the end of the path.",
      "courseD_farmer_while_challenge1_b": "If you use a `while` loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt and fill any hole, while standing in the same place.",
      "courseD_farmer_conditionals8_c": "It is possible to solve this without using any `repeat` loops. To do this, you will need to use four `while` loops."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/10/puzzle/1": {
    "title": "Conditionals"
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/2": {
    "short_instructions": "Check to see if there's a flower under the cloud. If there's a flower, get nectar.",
    "long_instructions": "_\"This cloud is blocking my view!\"_\n\nCheck to see if there's a flower under the cloud. If there's a flower, get nectar.",
    "authored_hints": {
      "courseD_bee_conditionals1_a": "You will need to use an `if` block to check to see if there is a flower beneath the cloud before you try to get nectar."
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bee will move to the cloud and try to get nectar, no matter what. ",
              "correct": false,
              "feedback": "Incorrect. The `if at flower` block assures that the bee will only try to get nectar if there is a flower under the cloud."
            },
            {
              "text": "The bee will move to the cloud and only try to get nectar if there is a flower underneath.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bee will move to the cloud and then do nothing, no matter what. ",
              "correct": false,
              "feedback": "Incorrect. The `if at flower` block assures that the bee will try to get nectar if there is a flower under the cloud."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The `if at flower` block assures that the bee will only try to get nectar if there is a flower under the cloud."
            }
          ],
          "questions": [
            {
              "text": "The cloud is blocking the view. There could be a flower under this cloud. If there is a flower, the bee will need to collect nectar once. If there is not a flower the bee should do nothing. Take a good look at the code below. What do you think will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/3": {
    "short_instructions": "Check underneath every cloud to see if it is hiding a flower before you get nectar.  ",
    "long_instructions": "More clouds! \n\nCheck underneath every cloud to see if it is hiding a flower before you get nectar. If there is a flower underneath the cloud, the bee will need to get nectar _once_.  \n\nRemember: Not all clouds hide the same thing!",
    "authored_hints": {
      "courseD_bee_conditionals2_hintVid1": "Need help getting started?  Watch the video!",
      "courseD_bee_conditionals2_a": "Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an `if` statement.",
      "courseD_bee_conditionals2_b": "You can use a `repeat` loop or a `while path ahead` to move through this maze.",
      "courseD_bee_conditionals2_c": "You don't have to check for honeycombs, there will only be flowers or blank spaces under the clouds.",
      "courseD_bee_conditionals2_hintVid2": "Watch this video for help solving this puzzle."
    },
    "callouts": {
      "4_5_Bee_Conditionals_2_1": "Remember, check to see if EVERY cloud has a FLOWER. You don't have to check for honeycombs at all.",
      "4_5_Bee_Conditionals_2_2": "Need help?  Click here for a VIDEO hint!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/4": {
    "short_instructions": "Help the bee collect all of the nectar. \n\nYou can only collect nectar from flowers, but you can check any space to see if there is a flower.",
    "long_instructions": "You can only collect nectar from flowers, but you can check any space to see if there is a flower. If there is a flower under any of these clouds, the bee will need to collect nectar _once_.",
    "authored_hints": {
      "courseD_bee_conditionals3_hintVid1": "Need help getting started?  Watch the video!",
      "courseD_bee_conditionals3_a": "Be sure to use an `if` statement to check each space to see if it has either a flower or nothing.",
      "courseD_bee_conditionals3_b": "You can use a `repeat` loop or a `while` loop to keep the bee moving forward. Use whichever one you like!",
      "courseD_bee_conditionals3_c": "Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.",
      "courseD_bee_conditionals3_hintVid2": "Watch this video for help solving this puzzle."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/5": {
    "short_instructions": "Get all of the nectar using as few blocks as possible.",
    "long_instructions": "In this puzzle, we know that every flower has exactly one nectar, but the flowers aren't spaced evenly.\n\nGet all of the nectar using as few blocks as possible.",
    "authored_hints": {
      "courseD_bee_conditionals4_hintVid1": "Need help getting started?  Watch the video!",
      "courseD_bee_conditionals4_a": "You can still treat every space as if there is a cloud over it, even though you can see the whole path.",
      "courseD_bee_conditionals4_b": "Use an `if` statement inside your loop to check each space for nectar. ",
      "courseD_bee_conditionals4_c": "Using [blockly block][0] block, you should move forward and check for a flower. If there is a flower, what should the bee do?",
      "courseD_bee_conditionals4_hintVid2": "Watch this video for help solving this puzzle."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/6": {
    "short_instructions": "Collect all of the nectar using as few blocks as possible",
    "authored_hints": {
      "courseD_bee_conditionals5_hintVid1": "Need help getting started?  Watch the video!",
      "courseD_bee_conditionals5_a": "Think of every side of the rectangular path as a path by itself. Set up a nested loop with a `repeat` block on the outside and a `while there is a path ahead` loop on the inside. How many paths does the bee need to buzz down if the bee needs to buzz down every side with a flower?",
      "courseD_bee_conditionals5_c": "There are 3 sides of the rectangle with flowers, so the code needs to `repeat 3 times`. In every repeat, the bee will need to continue along the path, `while there is a path ahead`. To continue down the path, the bee will need to `move forward`. While on the path, the bee needs to check for a flower. `if there is a flower`, the bee should `get nectar`.",
      "courseD_bee_conditionals5_b": "Inside the `while there is a path ahead` block you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?",
      "courseD_bee_conditionals5_hintVid2": "Watch this video for help solving this puzzle."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/7": {
    "short_instructions": "Some of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud!",
    "long_instructions": "_\"Now I just want to make honey.\"_\n\nSome of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud! If there is a honeycomb, the bee will only need to make honey _once_.",
    "authored_hints": {
      "courseD_bee_conditionals6_hintVid1": "Need help getting started?  Watch the video!",
      "courseD_bee_conditionals6_a": "Make sure to use an `if` statement to check for honeycomb beneath each cloud.",
      "courseD_bee_conditionals6_b": "In this case, you do not need to check for flowers under the clouds.",
      "courseD_bee_conditionals6_c": "Is there a loop you can use to make your code simpler?",
      "courseD_bee_conditionals6_hintVid2": "Watch this video for help solving this puzzle."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/9": {
    "short_instructions": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
    "long_instructions": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb. Remember: if there is a flower, the bee only needs to get nectar _once_. If there is a honeycomb, the bee only needs to make honey _once_.",
    "authored_hints": {
      "courseD_bee_conditionals7_hintVid1": "Need help getting started?  Watch the video!",
      "courseD_bee_conditionals7_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge.",
      "courseD_bee_conditionals7_b": "If there is not a flower under the cloud, there must be a honeycomb, so you don't need to think about the case of an empty space.",
      "courseD_bee_conditionals7_hintVid2": "Watch this video for help solving this puzzle."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/10": {
    "short_instructions": "Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.",
    "long_instructions": "Sometimes a cloud covers a flower, sometimes it covers a honeycomb! \n\nUse the `if/else` block to collect nectar at flowers and make honey at honeycomb. Remember: there will only ever **bee** _one_ honeycomb or _one_ flower behind each cloud.",
    "authored_hints": {
      "courseD_bee_conditionals7_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bee will get nectar at each flower and honey at each honeycomb.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bee will try to get nectar from both flowers and honeycomb.",
              "correct": false,
              "feedback": "Incorrect. The `if at flower` block lets the bee get nectar at each flower and honey at each honeycomb."
            },
            {
              "text": "The bee will try to get honey from both flowers and honeycomb.",
              "correct": false,
              "feedback": "Incorrect. Incorrect. The `if at flower` block lets the bee get nectar at each flower and honey at each honeycomb.."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The `if at flower` block lets the bee get nectar at each flower and honey at each honeycomb."
            }
          ],
          "questions": [
            {
              "text": "Look carefully at the code below.  What do you think will happen after you click \"Run\"? Remember: there will only ever bee *one* honeycomb or *one* flower behind each cloud."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/11": {
    "short_instructions": "Collect nectar if there is a flower.\nOtherwise, make honey (because there is a honeycomb).",
    "long_instructions": "**Challenge:** There will be either a flower or a honeycomb under each of those clouds!\n\nCollect nectar once if there is a flower.\nOtherwise, make honey once (because there is a honeycomb).",
    "authored_hints": {
      "courseD_bee_conditionals8_hintVid1": "Need help getting started?  Watch the video!",
      "courseD_bee_conditionals8_a": "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if` or `if/else`) to solve the challenge.",
      "courseD_bee_conditionals8_b": "This puzzle is tricky, because you can't check blank squares, nectar, _and_ honey with just one single conditional.\n\nOnly check for nectar and honey at the end of your path.",
      "courseD_bee_conditionals8_c": "How can you make sure to travel to the end every path, no matter how long the path is?",
      "courseD_bee_conditionals8_d": "Even though there is a cloud right in front of you, you don't have to visit it first. Try starting with the cloud in the bottom right of the square.\n\n[][0]",
      "courseD_bee_conditionals8_hintVid2": "Watch this video for help solving this puzzle."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/12": {
    "short_instructions": "Collect all of the nectar or make all the honey.",
    "long_instructions": "Collect all of the nectar or make all the honey. You can only collect nectar from flowers and make honey from honeycombs. Check any space to see if there is a flower or honeycomb. There will only ever be one flower or one honeycomb behind each cloud."
  },
  "https://studio.code.org/s/coursed-2017/stage/11/puzzle/13": {
    "short_instructions": "Collect all of the nectar and make all of the honey.",
    "long_instructions": "Conditionals can be helpful, even when you know exactly what is in each spot!\n\nCollect all of the nectar and make all of the honey."
  },
  "https://studio.code.org/s/coursed-2017/stage/11/extras?level_name=courseD_bee_conditionals_challenge1": {
    "short_instructions": "Collect all the nectar and make all the honey.",
    "long_instructions": "Collect all of the nectar and make all of the honey. You can only collect nectar from flowers and make honey from honeycombs. Check every space to see if there is a flower or honeycomb.",
    "authored_hints": {
      "courseD_bee_conditionals_challenge1_a": "Can you find a path that reaches every flower and honeycomb without hitting any trees? The best path is a spiral.",
      "courseD_bee_conditionals_challenge1_b": "In this puzzle, each space could have a flower, a honey comb, or nothing.  That means you can repeat your `if/else` conditional at each square."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/11/extras?level_name=courseD_bee_conditionals_challenge2": {
    "short_instructions": "Collect all of the nectar and make all the honey.",
    "long_instructions": "Collect all of the nectar and make all the honey. You can collect all of the nectar in one flower by using the `while nectar > 0` loop.",
    "authored_hints": {
      "courseD_bee_conditionals_challenge1_b": "Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:\n\n[blockly block][0]"
    },
    "callouts": {
      "courseD_bee_conditionals_challenge2_1": "Use this loop to collect all of the nectar (or honey) from one flower (or honeycomb)."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/1": {
    "short_instructions": "Get the angry bird to the pig.",
    "authored_hints": {
      "courseD_maze_until1_a": "Are there any sequences you can loop to make your code shorter?",
      "courseD_maze_until1_b": "Try using a nested loop to solve this puzzle."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/3": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bird will not move at all.",
              "correct": false,
              "feedback": "Incorrect. The code makes the bird move forward while there is a path, then turn left.  It keeps doing this until it reaches the pig!"
            },
            {
              "text": "The bird will make it to the pig.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bird will move forward and run into the TNT.",
              "correct": false,
              "feedback": "Incorrect. The code makes the bird move forward while there is a safe path, then turn left.  It keeps doing this until it reaches the pig!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The code makes the bird move forward while there is a path, then turn left.  It keeps doing this until it reaches the pig!."
            }
          ],
          "questions": [
            {
              "text": "Take a close look at the code below. What do you think will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/4": {
    "short_instructions": "Get the bird to the pig.",
    "authored_hints": {
      "courseD_maze_until3_a": "-   What does your code do?\n-   What is it supposed to do?\n-   What does that tell you?",
      "courseD_maze_until3_b": "If you are getting stuck, try writing out the steps on a piece of paper and looking for places where they repeat.",
      "courseD_maze_until3_c": "Is there a stair step pattern you can follow for this puzzle?",
      "courseD_maze_until3_d": "Don't forget to use the `repeat until` block to make your code shorter."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/5": {
    "short_instructions": "Can you get the zombie to the sunflower using only the blocks that are available?",
    "long_instructions": "_\"Dear person. Me zombie. Me hungry. Must... get... to sunflower...\"_\n\nCan you get the zombie to the sunflower using only the blocks that are available?",
    "authored_hints": {
      "courseD_maze_until4_a": "Use the \"Step\" button to go through your code line by line.\n\n-   Does everything work at the first step?\n-   Does everything work at the second step?\n-   Where does it go wrong?",
      "courseD_maze_until4_b": "Is there a stair step pattern you can follow for this puzzle?",
      "courseD_maze_until4_c": "Don't forget to use the `repeat until` block to make your code shorter."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/6": {
    "short_instructions": "Use the `if` block to help the zombie decide when to turn, then get the zombie to the sunflower.",
    "long_instructions": "Use the `if` block to help the zombie decide when to turn, then get the zombie to the sunflower.",
    "authored_hints": {
      "courseD_maze_until5_a": "Don't forget to use `if path to the left` to keep the zombie checking for a place to turn.",
      "courseD_maze_until5_b": "To use only one `move forward`, put it inside the `repeat until sunflower` block.",
      "courseD_maze_until5_c": "After each step, the zombie should check whether there is a path to the left. What should he do if he finds one?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/7": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until6_a": "This time, try the `if path to the right` to keep the zombie on track.",
      "courseD_maze_until6_b": "To use only one `move forward`, put it inside the `repeat until sunflower` block.",
      "courseD_maze_until6_c": "Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/8": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until7_a": "You don't need your code to be any longer than last time, just because the maze is!",
      "courseD_maze_until7_b": "Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!",
      "courseD_maze_until7_c": "Remember to check for paths to the left, because turning right will take you down the wrong path!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/10": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until8_a": "Make sure you're using an `if/else` block to keep the zombie headed the right direction.",
      "courseD_maze_until8_b": "With your `if/else` block: if there is a path ahead, what should you do?",
      "courseD_maze_until8_c": "With your `if/else` block: if there is not a path ahead, which way should you turn?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/11": {
    "short_instructions": "**Challenge:** Avoid the chompers and help the zombie get to the sunflower.",
    "long_instructions": "**Challenge:** Avoid the chompers and help the zombie get to the sunflower.",
    "authored_hints": {
      "courseD_maze_until8_a": "Using `if path ahead` will keep you going forward whenever possible, helping you miss the paths with chompers.",
      "courseD_maze_until8_b": "Which direction should you turn if there is no path forward?",
      "courseD_maze_until8_c": "Remember to use the `repeat until` block to get you to the sunflower!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/12": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower."
  },
  "https://studio.code.org/s/coursed-2017/stage/12/puzzle/13": {
    "short_instructions": "Help the zombie get to the sunflower.",
    "long_instructions": "Help the zombie get to the sunflower.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The zombie will turn right immediately and get stuck.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The zombie will make it to the sunflower.",
              "correct": false,
              "feedback": "Incorrect. In this code, it looks for a right turn *before* it looks to see if it can go straight.  Because of this, the puzzle fails."
            },
            {
              "text": "The zombie will turn right on the first path and go around in circles forever.",
              "correct": false,
              "feedback": "Incorrect. The zombie looks only for a right turn or straight path. It never looks to turn left, so it get stuck almost immediately."
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "In this code, it looks for a right turn *before* it looks to see if it can go straight.  Because of this, the puzzle fails."
            }
          ],
          "questions": [
            {
              "text": "Look carefully at the code below. What will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/12/extras?level_name=courseD_maze_until_challenge1": {
    "short_instructions": "No hints, just challenge. Get the zombie to the sunflower.",
    "long_instructions": "No hints, just challenge. Get the zombie to the sunflower."
  },
  "https://studio.code.org/s/coursed-2017/stage/12/extras?level_name=courseD_farmer_until_challenge2": {
    "short_instructions": "Use If/Else blocks to follow the curvy path. At each corner, use the `remove 1` command in a loop to clear the piles.",
    "long_instructions": "Use `If/Else` blocks to follow the curvy path. At each corner, use the `remove 1` block in a loop to clear the piles."
  },
  "https://studio.code.org/s/coursed-2017/stage/13/puzzle/1": {
    "short_instructions": "Use conditionals to make sure that you pick corn only when it's there.",
    "long_instructions": "_\"Corn you help me harvest today?\"_\n\nHelp the harvester check her row of corn to see if anything is ready to pick.  Use conditionals to look at each sprout.  Every stalk will have either **0 or 1** pieces of corn ready to harvest.",
    "authored_hints": {
      "courseD_farmer_condLoops1_a": "You will need to look for corn 5 times, using a repeat loop.",
      "courseD_farmer_condLoops1_b": "Make sure to use an `if at corn` block or you might try to pick something that's not there!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/13/puzzle/2": {
    "short_instructions": "Help the harvester collect both corn and lettuce from the field.",
    "long_instructions": "_\"Lettuce collect both crops from this row!\"_\n\nThis garden is all mixed up, it has both **corn and lettuce**!  \n\nHelp the harvester pick the items that are ready for harvesting.  Each plant will have either **one** corn or **one** lettuce.",
    "authored_hints": {
      "courseD_farmer_condLoops2_a": "The best way to do this is to nest `if` statements by placing one inside of the other.  ",
      "courseD_farmer_condLoops2_b": "For this puzzle, you should have one `if/else` statement and one plain `if` statement.",
      "courseD_farmer_condLoops2_c": "Your `if` statement could look a lot like this:\n\n-   if at corn\n    -   pick corn\n-   else\n    -   if at lettuce\n        -   pick lettuce\n\nIf there is nothing there, you won't pick anything!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/13/puzzle/3": {
    "short_instructions": "_\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"_",
    "long_instructions": "_\"Corn, lettuce, AND pumpkins! Help me harvest them all.\"_\n\nEach plant will have either one piece of corn, one head of lettuce, or one pumpkin.",
    "authored_hints": {
      "courseD_farmer_condLoops3_a": "To get all of the items, try nesting `if` statements three deep.\n\nThis means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.",
      "courseD_farmer_condLoops3_b": "For this puzzle, you should have two `if/else` statements and one plain `if` statement."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/13/puzzle/4": {
    "short_instructions": "Help the harvester pick all of the lettuce in each cluster before moving on to the next bunch.",
    "long_instructions": "_\"Gosh! Now the lettuce is growing in clusters!\"_  \n\nThe harvester wants to pick everything from her lettuce garden. Each plant will now have more than one head of lettuce on it, so the farmer will need to keep picking while there is still lettuce growing.  \n\n##### (Remember: This garden only has lettuce!)",
    "authored_hints": {
      "grade3_RunningFarm_4courseD_farmer_condLoops4": "No one knows how many heads of lettuce will grow from each sprout.\n\nUse a `while there is lettuce` loop to keep picking until each piece has been gathered.",
      "grade3_RunningFarm_4courseD_farmer_condLoops4_b": "The `while` loop will handle empty spaces as well! Since there is no lettuce, it will not pick any and let the code move on.",
      "grade3_RunningFarm_4courseD_farmer_condLoops4_c": "You can use either a `while path ahead` loop or a `repeat` loop to go through all of the crops."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/13/puzzle/5": {
    "short_instructions": "Collect all of the corn and lettuce, then grab the pumpkin at the end.",
    "long_instructions": "_\"What a bountiful crop!\"_\n\nThis field has clusters of corn and lettuce growing together -- with one pumpkin at the end.  Can you harvest everything?",
    "authored_hints": {
      "courseD_farmer_condLoops5_a": "There is a new loop: `repeat until at pumpkin`. Can you see how to use it in this puzzle?",
      "courseD_farmer_condLoops5_b": "There could be more than one corn or lettuce plant in each spot. Use a `while` loop to gather all of them!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/13/puzzle/6": {
    "short_instructions": "Can you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
    "long_instructions": "_\"Let's take this one step further!\"_\n\nCan you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!",
    "authored_hints": {
      "courseD_farmer_condLoops6_a": "Use a `while there is corn` loop to make sure you get all of the corn along the way. This block won't do anything if there's no corn to pick.",
      "courseD_farmer_condLoops6_b": "Make sure to check `if` there's a path ahead before you take your next step!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/13/puzzle/7": {
    "short_instructions": "Challenge: Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "**Challenge:** Collect all of the corn and lettuce, then pick the pumpkin.",
    "authored_hints": {
      "courseD_farmer_condLoops7_a": "Notice that the easiest path to get to all of the crops is still a spiral.\n\n[][0]",
      "courseD_farmer_condLoops7_b": "Try using `when path ahead` to keep the harvester moving the right number of steps."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/13/puzzle/8": {
    "short_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "Collect all of the corn and lettuce, then pick the pumpkin."
  },
  "https://studio.code.org/s/coursed-2017/stage/13/puzzle/9": {
    "short_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "Collect all of the corn and lettuce, then pick the pumpkin."
  },
  "https://studio.code.org/s/coursed-2017/stage/13/puzzle/10": {
    "short_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "long_instructions": "Collect all of the corn and lettuce, then pick the pumpkin.",
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The harvester will collect all of the crops.",
              "correct": false,
              "feedback": "Incorrect. There is no code here for collecting the pumpkin."
            },
            {
              "text": "The harvester will not collect any of the crops with the path she is taking.",
              "correct": false,
              "feedback": "Incorrect. The code will have the harvester repeatedly make a stairstep pattern and collect as much corn or lettuce as she comes across. She will not pick the pumpkin."
            },
            {
              "text": "The harvester will collect all of the crops, except the pumpkin.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "I don't know.",
              "correct": false,
              "feedback": "The code will have the harvester repeatedly make a stairstep pattern and collect as much corn or lettuce as she comes across. She will not pick the pumpkin."
            }
          ],
          "markdown": "The sprouts in this puzzle will be either corn or lettuce.\n<br/>\n",
          "questions": [
            {
              "text": "Take a close look at the code below. What will happen after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/13/extras?level_name=courseD_farmer_condLoops_challenge1": {
    "short_instructions": "Collect everything to complete the level. Each hidden crop has only one corn or lettuce.",
    "long_instructions": "The pumpkins mark the place where you should `turn right`. Otherwise keep going forward, but remember to collect all of the lettuce or corn along the way. \n\n**Each hidden crop has only one corn or lettuce.**",
    "authored_hints": {
      "courseD_farmer_condLoops_challenge1_a": "The \"Step\" button could be very helpful in this challenge.",
      "courseD_farmer_condLoops_challenge1_b": "Normally you would just `pick pumpkin` if you are at a pumpkin. What else do you need to do if you're at a pumpkin?"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/13/extras?level_name=courseD_farmer_condLoops_challenge2": {
    "short_instructions": "Collect everything to complete the level.",
    "long_instructions": "_\"It's a very varied vegetable maze!\"_ \n\nTurn right at pumpkins, turn left at lettuce. Collect everything to complete the level.",
    "authored_hints": {
      "courseD_farmer_condLoops_challenge2_a": "The amount of each vegetable in each space can change. A `while` loop can help!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/14/puzzle/1": {
    "title": "Unplugged Activity"
  },
  "https://studio.code.org/s/coursed-2017/stage/15/puzzle/1": {
    "short_instructions": "Get Pegleg to the flags to solve this puzzle.",
    "long_instructions": "To start our game, Pirate Pegleg (actor 1) needs to be able to get around in all directions.   Connect the blocks to the correct events to get Pegleg moving.  \n\n* * *\n\nHelp Pegleg gather the flags to solve this puzzle.",
    "authored_hints": {
      "courseD_playLab_cond1_a": "To solve this challenge, attach the `move actor 1 up` block to the `when up arrow` event, then do the same for every other direction.",
      "courseD_playLab_cond1_b": "Use the drop down menus on the `when arrow` and `move actor` blocks to change which direction they go.",
      "courseD_playLab_cond1_c": "Remember to move Pegleg to both of the flags once you click \"Run\"!"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/15/puzzle/2": {
    "short_instructions": "Give Pegleg a point every time he makes it to the dragon. ",
    "long_instructions": "Time to add points!  \n\nEdit the code to give Pegleg (actor 1) a point when he makes it to the dragon (actor 2). ",
    "authored_hints": {
      "courseD_playLab_cond2_a": "To succeed with this puzzle, use the `score point` block beneath the `when actor 1 touches actor 2` event."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/15/puzzle/3": {
    "short_instructions": "Make the dragon change between random emotions every second.  ",
    "long_instructions": "Use a `repeat forever` loop to make the dragon (actor 2) change between random emotions every second.  ",
    "authored_hints": {
      "courseD_playLab_cond3_a": "You will need to add two blocks to your `repeat forever` loop.  One will choose a random emotion for the dragon (actor 2) and the other will wait 1 second before going through the loop again."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/15/puzzle/4": {
    "short_instructions": "Make it so when Pegleg gets to the dragon, he gets 2 points if the dragon is happy and 1 otherwise.",
    "long_instructions": "It's time to use what we've learned about conditionals to make this game amazing. \n\nAdd code so that when Pegleg gets to the dragon, he gets two points _if_ the dragon is happy. Otherwise, he should get only one point added to his score.",
    "authored_hints": {
      "courseD_playLab_cond3_c": "-   `If` the dragon is happy \n    -   `score point`\n    -   `score point`  \n\n-   `Else` `score point`"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/15/puzzle/5": {
    "short_instructions": "Add some code so that the ninja (actor 3) starts chasing Pegleg as soon as the game begins.  End the game as a loss if the ninja catches him.",
    "long_instructions": "This is about to get interesting!\n\nAdd some code so that the ninja (actor 3) starts chasing Pegleg as soon as the game begins.  End the game as a loss if the ninja catches him.",
    "authored_hints": {
      "courseD_playLab_cond4_a": "You will want to use the `when run` event to get the ninja to chase the pirate.",
      "courseD_playLab_cond4_b": "There is a special block called `set every masked ninja to chase actor` that will keep the ninja hot on the pirate's trail!",
      "courseD_playLab_cond4_c": "Put the `end game as a loss` block underneath the `when actor 1 touches actor 3` event."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/15/puzzle/6": {
    "short_instructions": "Add a `repeat forever` loop that continuously checks if the score is greater than 5, then ends the game as a win when it is.",
    "long_instructions": "Now we need a way to win.\n\nAdd a `repeat forever` loop that continuously checks **if** the score is greater than 5, then ends the game as a **win** when it is.",
    "authored_hints": {
      "courseD_playLab_cond5_a": "Use an `if` statement that compares whether `score` is `>` 5 to solve this challenge.",
      "courseD_playLab_cond5_b": "You can have more than one `repeat forever` loop in the workspace."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/15/puzzle/7": {
    "short_instructions": "1.  Slow the ninja (actor 3) down before you set him to chase the pirate.  \n2.  If the pirate is greater than 225 pixels down, set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase** the pirate.  ",
    "long_instructions": "Wow, this game is hard to win!\n\nLet's customize this game to make it more fun.  This challenge has two parts:\n\n* * *\n\n1.  Slow down the ninja (actor 3) before you set him to chase the pirate (actor 1).\n\n2.  Use a `repeat forever` loop to check to see if the pirate is in the \"safe zone\" beneath the line of octopuses (greater than 225 pixels down).  If he is, set the ninja to **flee** the pirate.  Otherwise, set the ninja to **chase** the pirate.",
    "authored_hints": {
      "courseD_playLab_cond6_a": "Add the `set masked ninja speed` block to the beginning of the program to help slow the ninja down.",
      "courseD_playLab_cond6_b": "You will need to use an `if actor 1 y position > 255` block inside of a `repeat forever` block to always check if the pirate is below the octopuses."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/15/puzzle/8": {
    "short_instructions": "If the pirate (actor 1) is in the safe zone, wait one second, then deduct a point as long as he stays beneath the octopus line.",
    "long_instructions": "We don't want the pirate to stay in the \"safe zone\" too long!  \n\nAdd code to the `if` statement below so that if the pirate (actor 1) is in the safe zone, the program will wait one second, then deduct a point as long as he stays beneath the octopus line.",
    "authored_hints": {
      "courseD_playLab_cond6_c": "Add a `wait 1 second` block to the top of the `repeat forever` loop that checks the pirate position (but not inside the `if` statement) to keep points from being removed too quickly."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/15/puzzle/9": {
    "short_instructions": "Now, build your own game to show off to your friends!",
    "callouts": {
      "courseD_playLab_condFP_1": "we have organized the blocks into categories to give you more code to play with!  Click here to see where everything went."
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/16/puzzle/1": {
    "title": "Binary Images"
  },
  "https://studio.code.org/s/coursed-2017/stage/17/puzzle/1": {
    "dsls": {
      "markdown": "<h1>Draw with Binary</h1>\n \n<h3>Binary is a way of representing information using only two options. In this case, <b>off</b> and <b>on</b>.\n<br/>\nHere, we're going to use the number <b>0</b> as code for \"off\" and the number <b>1</b> as code for \"on\".\n<br/>\n<table>\n<tr><td><img src=\"https://images.code.org/50283881d577c17ac6f1d1648d8f361f-image-1483640342574.09.14.png\" width=\"75px\"/></td><td><img src=\"https://images.code.org/ba6f0a000b18f2dd87160e6255e8a71c-image-1483640355103.09.24.png\" width=\"90px\"/></td></tr>\n<tr padding=\"0px\"><td align=\"center\"><b>0</b></td><td align=\"center\"><b>1</b></td></tr>\n</table><img src=\"https://images.code.org/934883837aa59bca1d5c1ded0e0ac675-image-1483640120036.51.06.png\" float=\"left\"/><h3>In this stage, we've provided you with a grid of \"pixels\" that you can walk through and make designs by turning on certain squares!</h3>\n\n![](https://images.code.org/c53e00cde9acbae72d02fb9cc2a20e53-image-1483639858942.png)\n\n\n"
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/17/puzzle/2": {
    "short_instructions": "Use the blocks below to have the artist draw \"01010101\" in binary in the first row.",
    "long_instructions": "We've provided you with a grid of \"pixels\" that you can walk through and make designs by turning on only certain squares.\n\nUse the blocks below to have the artist draw \"01010101\" in binary in the first row.",
    "authored_hints": {
      "courseD_artist_binary1_a": "Replace the \"???\" in the text block with the binary image you want, in zeroes and ones.",
      "courseD_artist_binary1_b": "The artist will draw a white space for every 1 and a black space for every 0.",
      "courseD_artist_binary1_c": "This is how you can input your binary code:\n\n[][0]"
    },
    "function_defintions": {
      "draw bit": {
        "name": "draw bit"
      },
      "draw": {
        "name": "draw"
      }
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/17/puzzle/3": {
    "short_instructions": "Run this code to see how the artist uses binary to draw this pattern.",
    "long_instructions": "Here's a function that takes a binary string of 1's and 0's and instructs the artist to follow them from left to right, top to bottom.  \n\n* * *\n\nThe artist will fill-in the squares when it sees a 1 and ignore the square when it sees a 0. \n\n* * *\n\n**Run this code to see how the artist uses binary to draw this pattern.**",
    "authored_hints": {
      "courseD_artist_binary2_a": "Just click `Run` to see this program in action!"
    },
    "function_defintions": {
      "draw": {
        "name": "draw"
      },
      "draw bit": {
        "name": "draw bit"
      }
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/17/puzzle/4": {
    "short_instructions": "Which of the binary strings below could you loop 8 times to draw this image?",
    "authored_hints": {
      "courseD_artist_binary3_a": "One of the four binary patterns in the toolbox will solve this puzzle!",
      "courseD_artist_binary3_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet."
    },
    "function_defintions": {
      "draw": {
        "name": "draw"
      },
      "draw bit": {
        "name": "draw bit"
      }
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/17/puzzle/5": {
    "short_instructions": "Can you draw this pattern by looping just three binary digits (0s and 1s)?",
    "authored_hints": {
      "courseD_artist_binary4_a": "Look at the first three squares on the top row. Could you repeat these three to get the whole pattern?",
      "courseD_artist_binary4_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "function_defintions": {
      "draw": {
        "name": "draw"
      },
      "draw bit": {
        "name": "draw bit"
      }
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/17/puzzle/6": {
    "short_instructions": "Each binary string below represents one row of this picture. \n\nCan you rearrange them so it draws a smiley face instead of a frown?",
    "authored_hints": {
      "courseD_artist_binary5_a": "Try running the code first to see what you have to work with.",
      "courseD_artist_binary5_b": "You only need to switch two rows to make a smile.",
      "courseD_artist_binary5_c": "If you are having trouble figuring this puzzle out, try writing the binary lines down on a piece of paper and looking for a pattern."
    },
    "function_defintions": {
      "draw": {
        "name": "draw"
      },
      "draw bit": {
        "name": "draw bit"
      }
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/17/puzzle/7": {
    "short_instructions": "Which 6 digit binary string, repeated 11 times, will draw this image?",
    "authored_hints": {
      "courseD_artist_binary6_a": "Start at the top left. How far do you have to read before the pattern starts to repeat?",
      "courseD_artist_binary6_b": "You can build your binary string a bit at a time, and keep testing!"
    },
    "function_defintions": {
      "draw": {
        "name": "draw"
      },
      "draw bit": {
        "name": "draw bit"
      }
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/17/puzzle/8": {
    "short_instructions": "What is the shortest binary string that you can repeat to draw this image?",
    "authored_hints": {
      "courseD_artist_binary7_a": "Start at the top left. How far do you have to read before the pattern starts to repeat?",
      "courseD_artist_binary7_b": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet."
    },
    "function_defintions": {
      "draw": {
        "name": "draw"
      },
      "draw bit": {
        "name": "draw bit"
      }
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/17/puzzle/9": {
    "short_instructions": "Finish the code to create this drawing.",
    "authored_hints": {
      "courseD_artist_binary8_a": "The spiral can be confusing sometimes. Isolate each horizontal line in your mind as you create this design.",
      "courseD_artist_binary8_b": "Try running the code first to see what you have to work with.",
      "courseD_artist_binary8_c": "Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet."
    },
    "function_defintions": {
      "draw": {
        "name": "draw"
      },
      "draw bit": {
        "name": "draw bit"
      }
    }
  },
  "https://studio.code.org/s/coursed-2017/stage/17/puzzle/10": {
    "short_instructions": "Finish the code to create this drawing.",
    "function_defintions": {
      "draw": {
        "name": "draw"
      },
      "draw bit": {
        "name": "draw bit"
      }
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "A",
              "correct": false,
              "feedback": "Incorrect."
            },
            {
              "text": "B",
              "correct": false,
              "feedback": "Incorrect."
            },
            {
              "text": "C",
              "correct": false,
              "feedback": "Incorrect."
            },
            {
              "text": "D",
              "correct": true,
              "feedback": "Correct!"
            }
          ],
          "markdown": "<table>\n<tr>\n\n<td style=\"padding: 0 30px 0 0;\"> <b>A)</b> <img src=\"https://images.code.org/ca3e26e5b3008075d06db82c2831ab0b-image-1489438562132.43.39a.png\" width=\"100px\"/></td>\n\n<td style=\"padding: 0 20px 0 0;\"> <b>B)</b> <img src=\"https://images.code.org/6da194be0b14a041291648c12a307495-image-1489438503416.43.39.png\" width=\"100px\"/></td>\n\n<td style=\"padding: 0 20px 0 0;\"> <b>C)</b> <img src=\"https://images.code.org/dfaa00e3a6260742671d1ac4455fb5d5-image-1489438562133.43.39b.png\" width=\"100px\"/></td>\n\n\n<td style=\"padding: 0 20px 0 0;\"> <b>D)</b> <img src=\"https://images.code.org/7fc63ed5875b9f9785d0e88aec6eae47-image-1489439110649.43.39d.png\" width=\"100px\"/></td>\n</tr></table>\n<br/>\n\n",
          "questions": [
            {
              "text": "Take a close look at the code below. Which image will it create after you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursed-2017/stage/17/extras?level_name=courseD_artist_binaryFP8": {
    "short_instructions": "**Free Play:**  Draw whatever you want in binary! "
  },
  "https://studio.code.org/s/coursed-2017/stage/17/extras?level_name=courseD_artist_binaryFP": {
    "short_instructions": "Here's a higher resolution canvas to draw on - 16 pixels by 16 pixels!\n\nSee what happens when we start to get creative with the bits!"
  }
}