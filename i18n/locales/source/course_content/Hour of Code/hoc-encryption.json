{
  "https://studio.code.org/s/hoc-encryption/stage/1/puzzle/1": {
    "short_instructions": "Instructions",
    "long_instructions": "# Crack a Caesar cipher!\n\nThis tool lets you play with text and do Caesar ciphers. You can use this to either encrypt a message or decrypt it.\n\n# Do this\n\n-   Load a **Sample message** from the message dropdown. This will load a message that has been encrypted with a Caesar cipher.\n\n[][0]\n\n-   Using the buttons in the Caesar substitution tab, you can shift the alphabet forwards or backwards to try to unscramble the message.\n\n[][1]\n\nSee how long it takes you to crack the cipher! Is this a good method of encrypting secret data?\n\n<img src=\"http://code.org/api/hour/begin_encryption.png\">"
  },
  "https://studio.code.org/s/hoc-encryption/stage/1/puzzle/2": {
    "dsls": {
      "content1": "description here",
      "markdown": "# Pause and Recap\n\nMessages encrypted with the **Caesar cipher** are very easy to crack, especially with a computational tool. Now that you've had a little practice cracking an alphabetic shift cipher (pretty easy, huh?) let's try something more difficult.\n\n**Recap terminology:**\n\n* **Encryption** - a process of encoding messages to keep them secret, so only \"authorized\" parties can read it.\n* **Decryption** - a process that reverses encryption, taking a secret message and reproducing the original plain text\n* **Cipher** - the generic term for a technique (or algorithm) that performs encryption\n* **Caesar's Cipher** - a technique for encryption that shifts the alphabet by some number of characters.\n* **Cracking encryption** - When you attempt to decode a secret message *without* knowing all the specifics of the cipher, you are trying to **crack** the encryption. \n\n\nClick Continue to see the **Next Challenge**...\n\n \n"
    }
  },
  "https://studio.code.org/s/hoc-encryption/stage/1/puzzle/3": {
    "dsls": {
      "content1": "description here",
      "markdown": "### New Challenge: Crack a Random Substitution Cipher...with a new widget\n\nWhat if instead of shifting the whole alphabet, we mapped every letter of the alphabet to a random different letter of the alphabet? This is called a **random substitution cipher.**\n\n![](https://images.code.org/7837e7fef2f38659f4bf51a29b6dc4d3-image-1473863470440.gif)\n\nNow, instead of the secret message being encoded with a simple alphabetic shift, you'll face messages encoded with **random substitution**.  \n\n\n\nThis is much harder to crack and requires a more sophisticated tool, so...\n\nWhen you click continue, you'll see a **new, more sophisticated version of the encryption tool** that shows you lots of different stuff.\n\nBut what it does is a bit of a mystery!  \n\n### Your Task:\n\n * Figure out what is going on in this new version of the tool\n * What information is being presented to you?\n * Figure out what the tool lets you do\n * As usual: you can't break it.  So click on things, poke around.\n * If you figure it out you might be able to crack a message encoded with random substitution.\n \n### Hint\n\n* Did you know that **E** is the most common letter used in English?\n\n### Reconvene and Discuss\n After some time playing with it, you should get together with someone - partner, small group, whole class - to discuss what you found and verify that you know what's going on and the various ways you can use the tool.\n\n\n"
    }
  },
  "https://studio.code.org/s/hoc-encryption/stage/1/puzzle/4": {
    "short_instructions": "Instructions",
    "long_instructions": "# Break a random substitution cipher!\n\nThis version of the tool gives you more information about the encrypted text and more options for how to try out different substitutions.\n\n### Different ways to analyze text\n\n-   Play with some of the sorting options available in the Random substitution cipher tab to get different views on the letter frequencies in the input text as well as standard English text.\n    [][0]\n\n### Different ways to substitute\n\n-   To substitute a letter you can drag a blue letter of the alphabet directly underneath the orange letter you want changed in the original ciphertext.\n    [][1]\n\n### Play.  Always play.\n\n-   There are other ways to analyze and substitute characters that you can find by clicking on the buttons and trying out whatever you like.\n-   Remember: you can't break it :)\n\nSee how long it takes you to crack the cipher! Is this a good method of encrypting secret data?\n\n<img src=\"http://code.org/api/hour/finish_encryption.png\">"
  },
  "https://studio.code.org/s/hoc-encryption/stage/1/puzzle/5": {
    "dsls": {
      "content1": "description here",
      "markdown": "# Cracking Substitution Ciphers\n\nThe best technique for cracking a random substitution cipher is known as **frequency analysis** \n\nParaphrased from: [wikipedia](https://en.wikipedia.org/wiki/Frequency_analysis)\n\n* **Frequency analysis** is a technique that is based on how *frequently* certain letters appear in English versus others.\n* For instance, given a section of English text, *E*, *T*, *A* and *O* are the most common, while *Z*, *Q* and *X* are rare. Likewise, *TH*, *ER*, *ON*, and *AN* are the most common pairs of letters that occur next to each other.\n* In fact, the distribution of letters is roughly the same for almost *all* samples of English text. \n\n\nThe version of the widget on the previous page is intended to help you **crack a substitution cipher through frequency analysis**.\n\nBy analyzing the frequency of the letters in the encrypted message compared to the frequency of letters in a typical piece of English prose, you can start to narrow in on what some of the letter mappings might be. \n\nThe tool shows you how the frequency of letters in the encrypted text (orange) compares with frequencies from typical english (blue).\n\n### Hint: Where to start?\n\n1. Find the short words and \"crack\" them first.  How many one-letter words do you know? (\"a\").  A very common 3-letter word is \"the\".\n2. Once you've done that, you have substitions for some of the most common letters.  You should be able to use intuition to look at other words with these partial subsititions and make good guesses.\n3. After finding only a handful of hard-fought letters, the rest will tumble quickly.\n4. Comparing the frequencies of letters gives good insight for making sensible guesses.\n\n### Try this:\nThe animation below shows someone getting started.  Here's what they tried\n\n* First sort the characters by frequency. \n* Identify a group of characters that might map to the word `the`.  \nIt's a good start!\n\n![](https://images.code.org/4c188dfb0b284810845285b83ce5bcd4-image-1473787694329.gif)\n\n## Is random substitution good?\n* After a little practice, how long does it take you to crack a random substitution cipher?\n* Is this good or not?\n\n\n"
    }
  }
}