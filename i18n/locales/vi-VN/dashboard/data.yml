vi:
  data:
    game:
      name:
        'Unplug1': 'Giới thiệu về khoa học máy tính'
        'Maze': 'mê cung'
        'Multi': 'Các lựa chọn chất liệu'
        'Unplug2': 'suy nghĩ máy móc'
        'Unplug3': 'lập trình đồ thị trên giấy'
        'Artist': 'nghệ sĩ'
        'Unplug4': 'các bước lập trình'
        'Artist2': 'Nghệ sĩ 2'
        'Unplug5': 'Các hàm'
        'Farmer': 'người nông dân'
        'Unplug6': 'Điều kiện'
        'Artist3': 'nghệ sĩ 3'
        'Unplug7': 'Viết nhạc'
        'Farmer2': 'Người nông dân 2'
        'Unplug8': 'Trừu tượng'
        'Artist4': 'nghệ sĩ 4'
        'Unplug9': 'Chương trình chuyển tiếp'
        'Farmer3': 'người nông dân 3'
        'Unplug10': 'Internet'
        'Artist5': 'Nghệ sĩ 5'
        'Unplug11': 'Gói gọn'
        'MazeEC': 'mê cung'
        'Bounce': 'Bật lại'
        'Flappy': 'Flappy Bird'
        'Jigsaw': 'Ghép hình'
        'MazeStep': 'Chế độ mê cung từng bước thực hiện'
        'Wordsearch': 'Tìm kiếm từ/ từ vựng'
        'Webapp': 'Phòng thí nghiệm ứng dụng'
        'ArtistEC': 'nghệ sĩ'
        'TextMatch': "Hợp ngữ cảnh\n"
        'StudioEC': 'Phòng trò chơi'
        'Applab': 'Phòng thí nghiệm ứng dụng'
        'NetSim': 'bộ mô phỏng internet'
        'Custom': 'Họa sĩ'
        'CustomStudio': 'Phòng trò chơi'
        'Gamelab': 'Game Lab'
    trophy:
      name:
        'Bronze': 'Đồng'
        'Silver': 'Bạc'
        'Gold': 'Vàng'
    concept:
      description:
        'sequence': 'chuỗi'
        'if': 'khối lệnh "nếu"'
        'if_else': 'khối lệnh "nếu-ngoài ra"'
        'loop_times': 'khối lệnh "lập lại số lần"'
        'loop_until': 'Lặp lại cho đến khi bị khóa'
        'loop_while': 'khối lệnh "khi mà"'
        'loop_for': 'khối lệnh "trái ngược"'
        'function': 'Các hàm'
        'parameters': 'phương trình với tham số'
    level:
      instructions:
        'maze_2_2': "Bạn có thể giúp mình bắt những con lợn nghịch ngợm không? Hãy xếp những khối lệnh \"move forward\" với nhau và bấm \"Run\" để giúp mình đến nơi nhé. "
        'maze_2_1': "Chú lợn này đang làm rối lông của tui. Giúp tôi tìm nó!"
        'maze_2_2_5': "Lần theo con đường và dẫn tôi tới chú heo ngốc. Nhớ tránh TNT không thì bay mất xác!"
        'maze_2_3': "Hãy dẫn dắt tôi tới chỗ chú heo màu xanh lá cây! (Nhớ coi chừng thuốc nổ)"
        'maze_2_4': "Giữ bình tĩnh và giúp mình tìm những chú lợn xấu xa. Hoặc là mình giận đó!"
        'maze_2_5': "Có một cách mà tôi có thể đến chỗ heo ngốc chỉ bằng hai khối lệnh. Bạn có làm được không?"
        'maze_2_6': "Hãy đưa mình đến chỗ heo ngốc chỉ trong ba khối lệnh."
        'maze_2_7': "Giúp mình đuổi chú lợn xấu xí này đi bằng cách sử dụng các khối lệnh ít nhất có thể. Bạn thử dùng các khối lệnh lặp lại nhiều hơn một lần."
        'maze_2_8': "Khi một khối lệnh có màu xám, thì có nghĩa rằng bạn không thể xóa nó. Giải quyết câu đố này bằng cách sử dụng khối lệnh \"lặp lại\"lặp đi lặp lại 3 lần. Cố gắng đưa 3 khối bên trong \"lặp lại\" khối màu xám: di chuyển, di chuyển, lần lượt."
        'maze_2_9': "Ok, hãy thử khối lệnh mới \" lặp lại cho đến khi\" nó sẽ lặp lại hành động cho đến khi gặp được những chú lợn phiền toái."
        'maze_2_10': "Được rồi, lần cuối để luyện tập nhé - Bạn có thể giải quyết trò này chỉ bằng 4 khối được không?"
        'maze_2_11': "Bạn thân mến. Là tôi zombie đây... Tôi đói quá... Tôi cần tới chỗ có hoa hướng dương. Bạn có thể giúp tôi tới nơi mà chỉ cần sử dụng 5 khối lệnh không?"
        'maze_2_12': "Được rồi, nó cũng tương tự nhưng chỉ hơi khác một chút. Liệu bạn có thể thực hiện chỉ với 5 khối không?"
        'maze_2_13': "Sử dụng khối lệnh mới \"nếu như\" cho tôi quyết định khi nào thì chuyển/vòng lại. Gợi ý: bạn chỉ cần nhiều hơn 1 khối, nhưng để tìm hiểu chúng tôi thiết lập nó như thế nào thì bạn có thể thực hiện như vậy vào lần tới."
        'maze_2_14': "OK, đây là những câu đố cuối cùng, nhưng bạn cần phải nhớ làm thế nào bạn sử dụng khối \"nếu\" và khối \"lặp lại\" cùng với nhau."
        'maze_2_15': "Tôi muốn hoa hướng dương! Sử dụng một khối lệnh \"nếu như\" để làm cho tôi có thể có hoa hướng dương với số khối ít nhất."
        'maze_2_16': "Ok. Hãy luyện tập nó thêm lần nữa nào - Có thể đây sẽ rất khác, nhưng hãy coi chừng những con Chomper!"
        'maze_2_17': "Các khối \"Nếu-khác\" kiểm tra một điều kiện, để làm một việc này hay một việc khác. Để tôi có được hoa hướng dương, hãy thử sử dụng khối mới."
        'maze_2_18': "Thêm một bài thực hành nữa với khối \"nếu-khác\" nào, bạn có thể sử dụng khối \"nếu-khác\" ngay được không?"
        'maze_2_19': "Bạn có thể thêm chỉ 3 khối để giúp tôi giải quyết một mê cung phức tạp hơn được không? Nếu bạn làm điều đó đúng, tôi có thể đi bộ trên con đường cong và không có vấn đề với chiều dài."
        'turtle_1_1': "Xin chào, tôi là một nghệ sĩ/ hoạ sĩ. Bạn có thể viết mã lập trình code để khiến tôi vẽ hầu hết mọi thứ bạn lập trình. Hãy sử dụng một vài khối để giúp tôi vẽ qua đường màu xám trong hình."
        'turtle_1_2': "Bây giờ, vẽ một hình vuông. Lưu ý: sử dụng màu sắc yêu thích của bạn bằng cách chọn nó trong khối mới \"thiết lập màu\"."
        'turtle_1_3': "Vẽ một hình vuông, chỉ sử dụng 3 khối."
        'turtle_1_4': "Hãy vẽ một tam giác có các cạnh/ mặt khác màu nhau, sử dụng lựa chọn \"màu ngẫu nhiên\" để chọn một màu khác nhau cho mỗi thời điểm. Gợi ý: bạn sẽ phải tìm ra khoảng cách bao xa để chuyển/ vòng lại bằng cách click vào số trong những turn block."
        'turtle_1_5': "Bây giờ, để thực hành, vẽ một hình tam giác và sau đó là một hình vuông để vẽ một phong bì."
        'turtle_1_6': "Bạn có thể tìm ra cách vẽ những hình tam giác, hình vuông này không? Gợi ý: Hãy làm hình tam giác trước, sau đó bạn hãy tìm khoảng bao nhiêu góc trước khi thực hiện vẽ hình vuông."
        'turtle_1_7': "Ok, chúng ta hãy làm cho nó khó khăn hơn một chút - xem nếu bạn có thể vẽ các ô kính màu xanh lá cây. Các ô vuông độ dài là 100 điểm ảnh mỗi cạnh, và khoảng cách giữa chúng là 50 pixel. Đừng quên vẽ màu xanh lá cây!"
        'turtle_1_8': "Được rồi, cố gắng nhìn xem những gì sẽ xảy ra nếu bạn chạy mã này (hoặc nhấn \"Chạy\" để thử nó). Sau đó, lặp lại nó đủ số lần để hoàn tất bản vẽ. Các màu sắc sẽ khác nhau mỗi lần."
        'turtle_1_9': "Bạn hãy tìm ra số để thay thế các ký hiệu chấm hỏi để vẽ một vòng tròn?"
        'turtle_1_10': "Bạn đã làm nó! Bây giờ, vẽ bất cứ cái gì bạn muốn. Một số thú vị ý tưởng: một nhân vật dính, bông tuyết hoặc xoắn ốc. Cũng thử khối mới \"thiết lập chiều rộng\". Chúc vui vẻ!"
        'turtle_4_1': "Bạn có thể vẽ một hình tam giác (với mỗi cạnh là 100 điểm ảnh) với chỉ 3 khối? Gợi ý: sử dụng một khối \"lặp lại\"."
        'turtle_4_2': "Thêm một khối \"quay phải 90 độ\" vào chương trình được viết sẵn trên màn hình để vẽ những hình tam giác này."
        'turtle_4_3': "Ok, đây là lệnh mà bạn viết để vẽ một hình tam giác. Bạn có thể thêm khối \"lặp lại\" và \"quay\" để tạo thành một bông hoa thật đẹp?"
        'turtle_4_4': "Đây là các lệnh của câu đố trước, nhưng chỉ quay 36 độ sau khi vẽ một tam giác. Việc này cần phải lặp lại bao nhiêu lần? (Gợi ý: sau khi quay 360 độ hình vẽ sẽ trở thành một đường tròn)"
        'turtle_4_5': "Đây là các lệnh của câu đố trước, nhưng lặp lại việc quay 36 lần. Vậy mỗi lần cần quay bao nhiêu độ? (Gợi ý: sau khi quay 360 độ hình vẽ sẽ trở thành một đường tròn)"
        'turtle_4_6': "Chỉ sử dụng 3 khối lệnh, bạn có thể vẽ một hình vuông có cạnh là 20 pixel không?"
        'turtle_4_7': "Đây là các lệnh để vẽ hình vuông từ câu đố trước. Bạn có thể lặp lại các lệnh đó để vẽ 10 hình vuông liền kề giống như một cái thang không? Gợi ý: bạn chỉ cần thêm 2 khối lệnh."
        'turtle_4_8': "Đây là lời giải của câu đố vừa rồi. Bạn có thể thêm 2 khối lệnh nữa để hoàn thành hình vẽ không?"
        'turtle_4_9': "Đây là lời giải của câu đố vừa rồi. Bạn cần quay bao nhiêu độ để hoàn thành hình vẽ? (Bạn có thể cần phải đoán một vài lần)"
        'turtle_4_10': "Đây là lời giải của câu đố vừa rồi. Bạn cần phải lặp lại bao nhiêu lần để hoàn thành hình vẽ?"
        'turtle_4_11': "Hãy thử đổi những số trong những khối \"xoay\" và \"lặp lai\" để tạo những mô hình khác nhau. Ngoài ra, có thể thử thay đổi phần còn lại của lệnh để vẽ bất kỳ thứ gì bạn muốn."
        'maze_karel_1_1': "Chào. Tôi là nông dân. Tôi cần bạn xới phẳng ruộng để tôi có thể sẵn sàng trồng cây. Xoay tôi đến chỗ bùn bẩn và dùng khối lệnh \"xóa\" để xới phẳng chỗ ruộng ấy."
        'maze_karel_1_2': "Tiếp đó, hãy di chuyển tôi đến cái hố và lấp đầy nó bằng hai xẻng đất, bằng cách sử dụng khối lệnh \"lấp đầy\"."
        'maze_karel_1_3': "Di chuyển tôi đến đống đất bẩn và nói cho tôi biết tôi cần xúc bao nhiêu xẻng mới xúc hết được đống đất này. Lưu ý, dùng càng ít khối lệnh càng tốt."
        'maze_karel_1_4': "Hãy giúp tôi xúc hết đất bẩn đi.\nGợi ý: nếu có thể, hãy dùng khối lệnh lặp."
        'maze_karel_1_5': "Giúp tôi lấp đầy tất cả các cái hố này với 5 xẻng đất\nGợi ý: bạn có thể đặt nhưng khối lệnh lặp trong khối lệnh \"trong khi\"."
        'maze_karel_1_6': "Xúc hết tất cả các ụ đất bẩn, sử dụng càng ít khối lệnh càng tốt. Các tùy chọn mới trong trình đơn thả xuống trên khối \"trong khi\" sẽ cho biết \"người nông dân đang đứng trên ụ đất hay hố đất\"."
        'maze_karel_1_7': "Tuyệt vời, tôi tim được một hố đất cực kỳ sâu nhé! Hic, nhưng không may thay tôi chả biết tôi cần lấp nó bằng mấy xẻng đất cả. Bạn có thể viết một chương trình để lấp hố, mà nó sẽ tự động ngừng lấp khi hố đất đã phẳng không?"
        'maze_karel_1_8': "Giúp tôi lấp đầy hố đất ở cuối cánh đồng, sử dụng càng ít khối lệnh càng tốt."
        'maze_karel_1_9': "Giúp tôi san phẳng các ụ đất này với! Hãy cố gắng sử dụng càng ít khối lệnh càng tốt.\nGợi ý: cố gắng dùng khối lệnh \"trong khi\"."
        'maze_karel_1_10': "Tôi đang làm đồng vào buổi đêm, nên trời cực kỳ tối! Tôi không thể nhìn rõ cái ụ đất lớn từng nào. Hiện tại tôi không có nhiều lệnh trong khối lệnh \"trong khi\". Di chuyển tôi xung quanh cánh đồng, nếu ở đó có ụ đất nào thì hãy san phẳng nó."
        'maze_karel_1_11': "Bên ngoài vẫn tối. Di chuyển tôi dọc cánh đồng. Nếu ở đó có một ụ đất, hãy san phẳng nó. Nếu có hố hãy lấp phẳng nó.\nGợi ý: click vào ô trong khối lệnh nếu để sử dụng linh hoạt nó."
        'turtle_2_1': "Chào! Tôi là nghệ sĩ zombie. Tôi rất thích vẽ tranh! Giúp tôi vẽ hình vuông với màu sắc thật sặc sỡ.\nLưu ý: bạn có những khối lệnh tương tự, nhưng bây giờ chúng đã được phân loại."
        'turtle_2_2': "Chào mừng các bạn đến với phương pháp sử dụng hàm. Thử \"vẽ một hình vuông\" trong nhóm \"hàm\", để vẽ hình vuông cỡ 50x50 màu xanh."
        'turtle_2_3': "Sử dụng các khối \"lặp lại\" trong nhóm \"Vòng lặp\" để vẽ 3 hình vuông có cạnh dào 100 pixel, mỗi hình lệch nhau 120 độ. Đồng thời dùng ba màu ngẫu nhiên."
        'turtle_2_4': "Bây giờ, chúng ta sẽ vẽ những thứ ảo diệu hơn. Thay đổi khối lệnh để vẽ 36 hình vuông, cạnh dài 100 pixels, mỗi hình lệch nhau 10 độ. Gợi ý: kéo thanh tốc độ chạy của chương trình sang phải để vẽ nhanh hơn."
        'turtle_2_5': "Vẽ hình vuông với cạnh là 50, 60, 70, 80 và 90 pixel.  Bạn sẽ cần phải sử dụng chức năng \"vẽ một hình vuông\" năm lần."
        'turtle_2_6': "Ok, chương trình này sẽ sử dụng một biến đếm, để vẽ những hình vuông giống như lần trước. Bạn muốn kích thước của hình vuông giống như giá trị của biến đếm, nên hãy dùng khối \"biến đếm\". Gợi ý: Khối này nằm trong mục \"Biến số\"."
        'turtle_2_7': "Đây là một chương trình để vẽ hình xoắn ốc, nhưng các khối đã bị vô hiệu hóa nên chúng không chạy. Hãy lập một chương trình sử dụng khối \"đếm với\" (trong mục Lặp) và khối \"ngược lại\" (Trong mục Biến) để vẽ hình xoắn ốc tương tự."
        'turtle_2_7_5': "Có một hàm mới tên là \"Vẽ một người tuyết\" trong (nhóm \"Hàm\"). Vẽ hai người tuyết có chiều cao lần lượt là 250 và 100."
        'turtle_2_8': "Màn này tương đối khó. Dùng hàm \"Vẽ một người tuyết\" và \"Nhảy về phía trước\" (trong nhóm \"Action\") để vẽ 3 người tuyết trong 3 màu khác nhau, mỗi người tuyết cách nhau 100 pixels."
        'turtle_2_9': "Sử dụng vòng lặp \"thuật đếm\" để vẽ nên một gia đình người tuyết với chiều cao là 110, 100, 90, 80 và 70. Tất cả người tuyết đều lớn hơn 60 điểm ảnh."
        'turtle_2_10': "Đây là một vài đoạn mã khác nhau để thử nghiệm với các độ khó khác nhau. Điều gì sẽ xảy ra nếu bạn thay đổi thứ tự tất cả? Hoặc chọn một màu ngẫu nhiên trong vòng lặp? Vẽ bất cứ điều gì bạn muốn."
        'maze_karel_2_1': "Thử dùng các khối lệnh để giúp tôi san phẳng các ụ đất và lấp đầy các hố đất. Sử dụng vòng lặp để giảm số khối lệnh phải viết. Gợi ý, bạn có thể đặt một vòng lặp ở trong một vòng lặp."
        'maze_karel_2_2': "Chúng ta đã viết định nghĩa khối \"Lấp 5 lần\", trong nhóm \"Hàm\". Dùng nó để giúp tôi lấp hố đất này."
        'maze_karel_2_3': "Dùng hàm \"Lấp 5 lần\" để giúp tôi lấp đầy các hố đất này. Bạn sẽ phải kéo nó ra từ nhóm \"Hàm\"."
        'maze_karel_2_4': "Viết một hàm mói để nó xúc 7 xẻng đất để san bằng đống đất. Sau đo dùng nó để viết chương trình giúp tôi san phẳng hết các ụ đất trên đồng."
        'maze_karel_2_5': "Viết một hàm mói để nó xúc 6 xẻng đất để san bằng đống đất. Sau đó dùng nó để viết chương trình giúp tôi san phẳng hết các ụ đất trên đồng."
        'maze_karel_2_6': "Dùng hai hàm mới là \"Lấp 8 lần\" và \"San phẳng 8 lần\" để giúp tôi san bằng các ụ đất và lấp đầy các hố đất."
        'maze_karel_2_7': "Có một con bò trong ruộng của tôi! Viết một hàm mới để giúp tôi tránh còn bò và san phẳng các ụ đất. Đặt tất cả các khối lệnh trong hàm mới đó."
        'maze_karel_2_8': "Dùng hàm mới \"tránh con bò và san phẳng 1 lần\" để giúp tôi san phẳng mọi ụ đất."
        'maze_karel_2_9': "Ok, đây là một chức năng loại bỏ 4 ụ đất bẩn trong cùng 1 hàng dọc. Cố gắng đưa chức năng này vào một vòng lặp, do đó bạn loại bỏ tất cả các ụ bẩn bằng cách sử dụng chỉ có một vài khối lệnh mới."
        'maze_karel_2_10': "Di chuyển tôi qua ruộng, và sứ dụng hai chức năng để giúp tôi loại bỏ tất cả các ụ và điền vào tất cả chỗ trống."
        'turtle_3_1': "Đây là câu đố giúp bạn hiểu được cách viết định nghĩa cho các hàm \"vẽ một hình vuông\" và \"vẽ một vòng tròn\". Khi bạn viết định nghĩa cho hàm, chưa có nghĩa là nó có thể chạy ngay. Bạn phải kéo khối \"Vẽ một hình vuông\" vào cụm lệnh chính để thực sự vẽ hình vuông."
        'turtle_3_2': "Tương tự hàm \"vẽ một hình vuông\", tạo một hàm \"vẽ một tam giác\" để vẽ một tam giác và dùng nó."
        'turtle_3_3': "Vẽ một hàng rào hình tam giác xung quanh những chú mèo và một hàng rào hình vuông quanh những chú bò."
        'turtle_3_4': "Bạn có thể tìm cách vẽ một ngôi nhà cho chú sư tử bằng cách sử dụng hai hàm \"vẽ một hình vuông\" và \"vẽ một hình tam giác\" không?"
        'turtle_3_5': "Bây giờ, hãy tạo một hàm \"vẽ ngôi nhà\" và sử dụng nó để vẽ nhà cho hai con mèo.\nGợi ý: tạo hàm mới bằng cách sử dụng khối lệnh \"làm gì đó\", và gõ lệnh của bạn vào bên trong khối lệnh."
        'turtle_3_6': "Sử dụng \"vẽ hình vuông\" như là một ví dụ, thêm một đầu tên là \"chiều dài\" để \"vẽ hình tam giác\". Sau đó vẽ những hình tam giác kích cỡ khác nhau. (Gợi ý: nhấp vào ngôi sao để thêm đầu tên hướng tới chức năng)"
        'turtle_3_7': "Thêm một đầu tên \"chiều dài\" để \"vẽ một ngôi nhà\" và xây một ngôi nhà lớn cho chú voi (với cạnh dài 150 điểm ảnh)"
        'turtle_3_8': "Sửa \"vẽ một ngôi nhà\" sau khi vẽ một ngôi nhà mới tôi sẽ kết thúc ở góc phải dưới cùng. Sử dụng chức năng chỉnh sửa này để vẻ 3 ngôi nhà mới."
        'turtle_3_9': "Bạn có thể tái tạo chức năng \"vẽ một ngôi nhà\" mà không cần sự trợ giúp? Hãy thử, và sau đó vẽ một dãy nhà."
        'turtle_3_10': "Bạn đã học được rất nhiều! Bây giờ sử dụng nó để vẽ bất cứ điều gì bạn muốn. Cố gắng để vẽ một ngôi sao, hoặc một xoắn ốc, hoặc một bông tuyết ưa thích."
        'maze_karel_debug_seq_1': "Chào mừng bạn để gỡ lỗi! Mã của tôi không hoạt động đúng. Bạn có thể phát hiện vấn đề và sửa chữa nó như vậy tôi có thể nhận được hoàn toàn bãi của tôi và sẵn sàng để trồng?"
        'maze_karel_debug_seq_2': "Không biết chương trình này sai ở đâu vậy? Bạn sẽ sửa chương trình này thế nào để tôi có thể san bằng hết các ụ đất nhỉ?"
        'maze_karel_debug_repeat': "Sửa các lỗi của chương trình này để làm cho ruộng của tôi thật phẳng và đẹp!"
        'maze_karel_debug_while': "Bạn sẽ chỉnh lại chương trình này như thế nào để giúp tôi lấp đầy các hố đất?"
        'maze_karel_debug_if': "Giúp tôi với! Hãy sửa chương trình của bạn để làm cho ruộng của tôi thật phẳng."
        'maze_karel_debug_if_else': "Sửa lỗi chương trình này để tôi có thể lấp đầy các hố và san bằng các ụ đất."
        'maze_karel_debug_function_1': "Bạn nên thay đổi chương trình này như thế nào để giúp tôi san phẳng các ụ đất?"
        'maze_karel_debug_function_2': "Hãy sủa lỗi chương trình này để tôi có thể làm cho ruộng của tôi thật phẳng!\n"
        'maze_karel_debug_function_3': "Sửa chương trình này để tôi có thể san phẳng các ụ đất trên đồng."
        'turtle_5_1': "Thử chạy chương trình này, và tạo vài thay đổi để xem điều gì sẽ xảy ra. Bạn có thể tìm ra cách mà nó hoạt động? (Hoặc xóa nó và thay thế nó bằng một cái gì đó hoàn toàn khác)"
        'turtle_5_2': "Thử chạy chương trình này, và tạo vài thay đổi để xem điều gì sẽ xảy ra. Bạn có thể tìm ra cách mà nó hoạt động? (Hoặc xóa nó và thay thế nó bằng một cái gì đó hoàn toàn khác)"
        'turtle_5_3': "Thử chạy chương trình này, và tạo vài thay đổi để xem điều gì sẽ xảy ra. Bạn có thể tìm ra cách mà nó hoạt động? (Hoặc xóa nó và thay thế nó bằng một cái gì đó hoàn toàn khác)"
        'turtle_5_4': "Thử chạy chương trình này, và tạo vài thay đổi để xem điều gì sẽ xảy ra. Bạn có thể tìm ra cách mà nó hoạt động? (Hoặc xóa nó và thay thế nó bằng một cái gì đó hoàn toàn khác)"
        'turtle_5_5': "Thử chạy chương trình này, và tạo vài thay đổi để xem điều gì sẽ xảy ra. Bạn có thể tìm ra cách mà nó hoạt động? (Hoặc xóa nó và thay thế nó bằng một cái gì đó hoàn toàn khác)"
        'turtle_5_6': "Thử chạy chương trình này, và tạo vài thay đổi để xem điều gì sẽ xảy ra. Bạn có thể tìm ra cách mà nó hoạt động? (Hoặc xóa nó và thay thế nó bằng một cái gì đó hoàn toàn khác)"
        'maze_3_1': "Tôi cần nhận được để cho chú lợn này! nhập vào một cặp để kêu gọi di chuyển; như vậy tôi có thể nhận trở lại trứng của tôi."
        'maze_3_2': "Viết một chương trình, như vậy tôi có thể làm mọi thứ cho chú lợn."
        'maze_3_3': "Tôi phải làm gì để đến chỗ chú lợn? Đảm bảo rằng tôi không chạy vào hộp TNT!"
        'maze_3_4': "Ah! Viết cho tôi một chương trình để đưa tôi vong quan TNT và đến với chú lợn."
        'bounce_1_basketball': "Attach a block to the \"when left arrow\" block and press \"Run\". Move the hand using the left arrow to reach the finish target."
        'bounce_2_basketball': "Attach a block to the \"when right arrow\" and \"when left arrow\" blocks. Move the hand to reach both finish targets."
        'bounce_5_basketball': "We're going to send a ball flying down towards the hand. Attach a block to the \"when ball hits hand\" block to ensure the ball reaches the flag."
        'bounce_6_basketball': "Now the flag is on the top. You need to attach blocks to both of the \"when ball hits\" blocks to solve this puzzle."
        'bounce_7_basketball': "Attach blocks to each of the \"when\" blocks. Bounce the ball until it hits the flag."
        'bounce_10_basketball': "Now there is a goal at the top! Attach the \"score point\" and \"score opponent point\" blocks to the \"when ball in goal\" and \"when ball misses hand\" blocks to make a game. See how many points you can score before your opponent scores twice."
        'bounce_11_basketball': "You can now attach blocks to the \"when run\" block. You have to attach the new \"throw new ball\" block in more than one place. Also, try changing the scene or the speed of the hand and the ball and see how many points you can score before your opponent scores twice!"
        'bounce_12_basketball': "Create your own Basketball game. You can change all the rules. When you're done, click Finish to let friends try your game on their phones."
        'bounce_1_sports': "Get to the flag! Attach a block to the \"when left arrow\" block and press \"Run\" to move the player to the flag."
        'bounce_2_sports': "There are two flags now! Attach a block to the \"when left arrow\" and \"when right arrow\" blocks to make your player move in two directions."
        'bounce_5_sports': "The hockey puck is going to fly down toward the player! Attach a block to the \"when ball hits player\" block to hit the flag."
        'bounce_6_sports': "Now the flag is on the top. You need to attach blocks to both of the \"when ball hits\" blocks to solve this puzzle."
        'bounce_7_sports': "Attach blocks to each of the \"when\" blocks. Bounce the ball until it hits the flag."
        'bounce_10_sports': "Now there is a goal at the top! Attach the \"score point\" and \"score opponent point\" blocks to the \"when ball in goal\" and \"when ball misses hand\" blocks to make a game. See how many points you can score before your opponent scores twice!"
        'bounce_11_sports': "You can now attach blocks to the \"when run\" block. You have to attach the new \"throw new ball\" block in more than one place. Also, try changing the scene or the speed of the hand and the ball and see how many points you can score before your opponent scores twice!"
        'bounce_12_sports': "Create your own game! You're in charge here: you can change all the rules, mix and match sports, get creative! When you're done, click Finish to let friends try your game on their phones."
        'bounce_1': "Đính kèm một khối với khối \"mũi tên trái\" và bấm \"chạy\". Di chuyển chân vịt sử dụng mũi tên để đến mục tiêu kết thúc."
        'bounce_2': "Đính kèm với khối \"mũi tên phải\" và bấm \"chạy\" và \"mũi tên trái. Di chuyển chân vịt đển tìm mục tiêu kết thúc của cả hai."
        'bounce_3': "Bây giờ thử một cái gì đó tương tự khối \"mũi tên trái\". Di chuyển chân vịt để đạt mục thiêu kết thúc hàng đầu."
        'bounce_4': "Lúc này bạn cần thêm bốn khổi. Di chuyển chân vịt đến cả bốn mục tiêu kết thúc để hoàn thành câu đố."
        'bounce_5': "chúng tôi sẽ gửi quả bóng bay xuống hướng tới các chân vịt. Đính kèm khối \"khi quả bóng chạm chân vịt\" để đảm bảo quả bóng tìm thấy mục tiêu kết thúc."
        'bounce_6': "Bây giờ mục tiêu kết thúc là ở hàng đầu. Bạn cần đính kèm khối cùng với khối \"khi quả bóng chạm\" để giải quyết câu đố này."
        'bounce_7': "Đính kèm khối với mỗi khối \"khi\". Trả bóng cho đến khi quả bóng chạm mục tiêu kết thúc."
        'bounce_10': "Đó là một mục tiêu hàng đầu. Đính kèm khối \"điểm số\" và \"điểm đối thủ\" với khối \"khi quả bóng vào goal\" và \"khi quả bóng lỡ chân vịt\" để chơi trò chơi. Xem xem bạn cần có bao nhiêu điểm để đứng trước đối thủ của mình hai lần."
        'bounce_11': "Bạn không thể đính kèm khối với khối \"khi chạy\". Bạn có thể đính kèm khối mới \"bắn quả bóng mới\" ở nhiều nơi. Ngoài ra, thử thay đổi cảnh phông hoặc tối độ của quả bóng và chận vịt và nhìn xem bạn cầu bao nhiêu điểm để có thể đứng trước đối thủ của bạn 2 lần."
        'bounce_12': "Tạo cho bạn trò chơi di chuyển bóng riêng. Bạn có thể thay đổi tất cả cá hình ảnh và quy tắc. Khi bạn đã làm xong, nhấp vào Kết thúc để bạn vè có thể dùng thử trò chơi trên điện thoại của họ."
        'Custom_builder': "Kéo khổi từ hộp công cụ không gian làm việc đê vẻ cấp độ bạn muốn tạo. Bấm \"Chạy\" khi bạn đã sẵn sàng."
        'flappy_1': "Đính kèm khối \"khi nhấp vào\" sau đó bấm \"chạy\". Nhấp hoặc chạm vào màn hình để di chuyển Flappy đến mục tiêu."
        'flappy_2': "Bây giờ chúng ta thêm một vài vị trí. Đính kèm khối lệnh \"khi quả bóng chạm vị trí\". Mã của bạn cần để \"kết thúc\" khi Flappy rơi xuống đất."
        'flappy_3': "Khối \"khi chạy\" cho phép bạn chạy mã khi bạn bắt đầu trò chơi. Cố gắng thiết lập tốc độ cấp và bay đến mục tiêu."
        'flappy_4': "Flappy sẽ bay qua những trở ngại trừ khi bạn viết mã để làm nó vỡ ra. Bắt lấy khối \"khi gặp chướng ngại\". Đoạn mã của bạn cần là \"kết thúc\" khi chú Flappy đâm vào cột đầu tiên."
        'flappy_5': "Hãy thêm một bảng điểm, và đến điểm khi Flappy vượt qua các chướng ngại. Thêm khối \"khi vượt qua các chướng ngại\", và sau đó ghi số điểm khi Flappy bay qua cột đầu tiên."
        'flappy_6': "Xem nếu bạn cần còn ghi điểm sau khi Flappy bay một số lượng nhỏ hơn hoặc lớn hơn."
        'flappy_7': "Sau đó, thử thay đổi bối cảnh bằng cách bắt lấy khối \"khi chạy\" khác."
        'flappy_8': "Bạn có thể đặt hình ảnh bất cứ lúc nào, không chri khi trò chơi bắt đầu. Thử để ngẫu nhiên khi các sự kiện khác xảy ra, ví dụ, khi vượt chướng ngại vật."
        'flappy_9': "Để kết hợp chúng, khi gặp một chướng ngại, thay vì kết thíc trò chơi hoặc thiết lập chi trở lại từ số 0."
        'flappy_11': "Tạo trò chơi Flappy của riêng bạn. Bạn có thể thay đổi hình ảnh, luật chơi, thậm chí là trọng lực của trò chơi. Sau khí hoàn thành, nhấp vào \"Hoàn thành\" để giúp bạn của bạn có thể chơi thử trò chơi bạn vừa làm ra."
        'flappy_k1_1': "Chơi Plappy"
        'flappy_k1_2': "Đính kèm khối \"khi nhấp vào\" sau đó bấm \"chạy\". Nhấp hoặc chạm vào màn hình để di chuyển Flappy đến mục tiêu."
        'flappy_k1_3': "Bây giờ chúng ta thêm một vài vị trí. Đính kèm khối lệnh \"khi quả bóng chạm vị trí\". Mã của bạn cần để \"kết thúc\" khi Flappy rơi xuống đất."
        'flappy_k1_4': "Khối \"khi chạy\" cho phép bạn chạy mã khi bạn bắt đầu trò chơi. Cố gắng thiết lập tốc độ cấp và bay đến mục tiêu."
        'flappy_k1_5': "Flappy sẽ bay qua những trở ngại trừ khi bạn viết mã để làm nó vỡ ra. Bắt lấy khối \"khi gặp chướng ngại\". Đoạn mã của bạn cần là \"kết thúc\" khi chú Flappy đâm vào cột đầu tiên."
        'flappy_k1_6': "Hãy thêm một bảng điểm, và đến điểm khi Flappy vượt qua các chướng ngại. Thêm khối \"khi vượt qua các chướng ngại\", và sau đó ghi số điểm khi Flappy bay qua cột đầu tiên."
        'flappy_k1_7': "Xem nếu bạn có thể ghi nhiều điểm kép để vượt chướng ngại vật"
        'flappy_k1_8': "Sau đó, thử thay đổi bối cảnh bằng cách bắt lấy khối \"khi chạy\" khác."
        'flappy_k1_9': "Hãy thử thay đổi người chơi bằng cách gắn một khối \"chọn người chơi\" vào khối \"khi chạy\"."
        'jigsaw_1': "Nhấp vào khối"
        'jigsaw_2': "Kéo các khối vào các vị trí cho sẵn"
        'jigsaw_3': "Sắp xếp các khối để tạo thành hình ảnh cho sẵn"
        'jigsaw_4': "Sắp xếp các khối để tạo thành hình ảnh cho sẵn"
        'jigsaw_5': "Sắp xếp các khối để tạo thành hình ảnh cho sẵn"
        'jigsaw_6': "Sắp xếp các khối để tạo thành hình ảnh cho sẵn"
        'jigsaw_7': "Sắp xếp các khối để tạo thành hình ảnh cho sẵn"
        'jigsaw_8': "Sắp xếp các khối để tạo thành hình ảnh cho sẵn"
        'jigsaw_9': "Sắp xếp các khối để tạo thành hình ảnh cho sẵn"
        'jigsaw_10': "Sắp xếp các khối để tạo thành hình ảnh cho sẵn"
        'jigsaw_11': "Sắp xếp các khối để tạo thành hình ảnh cho sẵn"
        'jigsaw_12': "Sắp xếp các khối để tạo thành hình ảnh cho sẵn"
        'jigsaw_13': "Giải quyết các câu đố!"
        'mazestep_1': "Các bước giải mê cung được mô tả ở đây"
        'mazestep_2': "Các bước giải mê cung được mô tả ở đây"
        'mazestep_3': "Các bước giải mê cung được mô tả ở đây"
        'mazestep_4': "Các bước giải mê cung được mô tả ở đây"
        'mazestep_5': "Các bước giải mê cung được mô tả ở đây"
        'studio_c2_1': "Bạn có thể làm chú chó nói \"hello world\" không?"
        'studio_c2_2': "Bạn có thể làm chú chó nói vài điều, sau đó chú mèo nói tiếp vài điều không?"
        'studio_c2_3': "Bạn có thể viết một chương trình để làm cho con chó này di chuyển đến con mèo không?"
        'studio_c2_4': "Bạn có thể viết một chương trình mà làm cho con chó di chuyển đến mèo, và làm con mèo nói \"Xin chào\" khi con chó đến nó không?"
        'studio_c2_5': "Bạn có thể viết một chương trình giúp chú bạch tuộc nói \"Xin chào\" khi nó bị nhấp chuột vào không?"
        'studio_c2_6': "Bạn có thể viết một chương trình để làm Waddles di chuyển xung quanh bằng các phím lên / xuống / trái / phải để đạt mục tiêu?"
        'studio_c2_7': "Khối \"lặp lại mãi mãi\" cho phép bạn chạy mã liên tục. Bạn có thể dùng khối này để di chuyển con khủng long lên và xuống nhiều lần không?"
        'studio_c2_8': "Bạn có khiến Waddles nói \"ouch!\" và phát âm thanh \"hit\" khi chú chạy vào chỗ những con khủng long, và sau đó di chuyển chú cùng với các mũi tên nếu điều đó xảy ra không?"
        'studio_c2_9': "Bạn có thể thêm các khối để ghi điểm khi Waddles chạy vào chỗ bạch tuộc và sau đó di chuyển chú ta cùng mũi tên sau khi bạn ghi điểm không?"
        'studio_c2_10': "Bạn có thể thêm khối để thay đổi hình nền và tốc độ của Waddles, sau đó di chuyển chú ta cùng với mũi tên sau khi bạn ghi điểm không?"
        'studio_c2_11': "Tạo câu chuyện của chính bạn. Khi bạn đã viết xong câu chuyện đó, nhấn \"Hoàn thành\" để gửi cho bạn của bạn xem câu chuyện bạn vừa làm ra!"
        'studio_c3_story_1': "Bạn có thể làm chú chó nói \"hello world\" không?"
        'studio_c3_story_2': "Bạn có thể làm chú chó nói vài điều, sau đó chú mèo nói tiếp vài điều không?"
        'studio_c3_story_3': "Bạn có thể viết một chương trình để làm cho con chó này di chuyển đến con mèo không?"
        'studio_c3_story_4': "Bạn có thể viết một chương trình mà làm cho con chó di chuyển đến mèo, và làm con mèo nói \"Xin chào\" khi con chó đến nó không?"
        'studio_c3_story_5': "Bạn có thể thêm khối lệnh làm cho bạch tuộc trở nên vui vẻ không?"
        'studio_c3_story_6': "Tạo câu chuyện của chính bạn. Khi bạn đã viết xong câu chuyện đó, nhấn \"Hoàn thành\" để gửi cho bạn của bạn xem câu chuyện bạn vừa làm ra!"
        'studio_c3_game_1': "Bạn có thể viết một chương trình giúp chú bạch tuộc nói \"Xin chào\" khi nó bị nhấp chuột vào không?"
        'studio_c3_game_2': "Bạn có thể viết một chương trình để làm Waddles di chuyển xung quanh bằng các phím lên / xuống / trái / phải để đạt mục tiêu?"
        'studio_c3_game_3': "Khối \"lặp lại mãi mãi\" cho phép bạn chạy mã liên tục. Bạn có thể dùng khối này để di chuyển con khủng long lên và xuống nhiều lần không?"
        'studio_c3_game_4': "Bạn có khiến Waddles nói \"ouch!\" và phát âm thanh \"hit\" khi chú chạy vào chỗ những con khủng long, và sau đó di chuyển chú cùng với các mũi tên nếu điều đó xảy ra không?"
        'studio_c3_game_5': "Bạn có thể thêm các khối để ghi điểm khi Waddles chạy vào chỗ bạch tuộc và sau đó di chuyển chú ta cùng mũi tên sau khi bạn ghi điểm không?"
        'studio_c3_game_6': "Bạn có thể thêm khối để thay đổi hình nền và tốc độ của Waddles, sau đó di chuyển chú ta cùng với mũi tên sau khi bạn ghi điểm không?"
        'studio_c3_game_7': "Tạo trò chơi của chính bạn. Sau khi hoàn thành, bấm \"Hoàn thành\" để cho bạn của bạn chơi thử trò chơi bạn vừa tạo ra trên điện thoại của họ."
        'studio_playlab_1': "Bạn có thể giúp Waddles nói \"Xin chào\" không?"
        'studio_playlab_2': "Cậu bé Hang Động (người 1) và Jasmine (người 2) muốn nói \"xin chào\" với nhau. Bạn có thể giúp họ bằng cách sử dụng khối \"nói chuyện\" 2 lần không?"
        'studio_playlab_3': "Bạn có thể giúp cô gái Tennis nhận được cờ không?"
        'studio_playlab_4': "Bạn có thể giúp cậu bé Tennisa ( người 1) đến chỗ Cô gái Tennis và phát âm thanh khi cậu đến đó không?"
        'studio_playlab_5': "Bạn có thể giúp Spacebot nói \"chúc mừng trần gian\" khi nó được nhấp vào? Đừng quên bấm vào đó sau khi bạn bấm Chạy"
        'studio_playlab_6': "Bạn có thể giúp Cô Phù thủy đi chuyển xung quanh bằng các phím lên/xuống/phải/trái để có được tất cả các quả cầu ma thuật không?"
        'studio_playlab_7': "Khối \"Lặp lại mãi mãi\" cho phép bạn chạy mã liên tục. Bạn có thể đính kèm khối để giúp thuật sĩ di chuyển bên phải và trái nhiều lần không?"
        'studio_playlab_8': "Bạn có thể thêm một khối để ghi thêm điểm và một khối để phát ra âm thanh khi con Kì lân chạy xung quanh Thật sĩ, và sau đó di chuyển ông ấy cùng mũi tên cho đến khi bạn ghi điểm không?"
        'studio_playlab_9': "Thiết lập hình nền cho các cuộc xâm lược ngoài hành tinh và giúp Spacebot bắt được người ngoài hành tinh nhanh hơn bằng cách thay đổi tốc độ của nó. Sau đó di chuyển anh ấy với các phím mũi tên để giúp Spacebot và cảnh báo những người khác"
        'studio_playlab_10': "Tạo trò chơi của chính bạn. Sau khi hoàn thành, bấm \"Hoàn thành\" để cho bạn của bạn chơi thử trò chơi bạn vừa tạo ra trên điện thoại của họ."
        'studio_iceage_hello1': "Sid muốn tập hợp tất cả mọi người một chuyến phiêu lưu mới. Bạn có thể giúp cậu ấy nói \"Xin chào\" bằng cách kéo các khối \"nói\" vào khu vực làm việc và gõ từ \"xin chào\" bên trong?"
        'studio_iceage_hello2': "Manny (nhân vật 1) tìm thấy Sid (nhân vật 2) và muốn mời anh ta vào cuộc phiêu lưu. Giúp họ chào nhau bằng cách sử dụng khối \"nhân vật nói\" hai lần."
        'studio_iceage_move_to_flag': "Scrat đang tìm kiếm acorn của mình!  Giúp cậu ấy đi tới cuối 200 pixels bằng cách sử dụng  khối \"di chuyển\"."
        'studio_iceage_move_to_actor': "Diego (nhân vật 1) đang tìm kiếm Manny (nhân vật 2). Giúp Diego di chuyển 200 điểm ảnh xuống để Manny sử dụng khối \"di chuyển nhân vật\". Tiếp theo, kết nối một khối với sự kiện \"khi nhân vật chạm\" để phát âm thanh khi họ tìm thấy nhau."
        'studio_iceage_repeat': "The \"repeat forever\" block allows you to run code continuously. Can you attach blocks to it to help Granny get some exercise by moving left and right repeatedly?"
        'studio_iceage_click_hello': "Can you help Sid do a final call for friends when clicked? Don’t forget to click on him after you hit Run."
        'studio_iceage_move_events': "Scrat is still looking for acorns! Help him scamper around by attaching the \"move\" block to each of the events and changing the direction to work for each arrow key. When you’re done, click Run and try to collect all of the acorns."
        'studio_iceage_sound_and_points': "We’ve provided most of the code that keeps Granny moving left and right, as well as the code to move Sid around the screen. Can you finish the code and add blocks to the \"when actor touches\" event to make it so that you both play a sound and score a point when Sid and Granny collide? Press Run to play the game."
        'studio_iceage_warn_ice_age': "Everyone needs to move faster because an ice age is coming! Change the background to an icy background and set Sid’s speed to fast, then press Run and move him to Diego to warn him."
        'studio_iceage_throw_hearts': "Sid wants to let his grandmother, Granny, know that he loves her. Use the \"actor throw\" command to have Sid (actor 1) throw hearts at Granny (actor 2)! Set Granny's mood to happy when she gets hit with the hearts."
        'studio_iceage_free_play': "Time to create your own game or story! When you're done, click Finish to let friends try your game on their phones, tablets, or computers!"
        'studio_gumball_hello1': "Anais wants to make some new friends. Can you help her say \"hello\" by dragging the \"say\" block out into the work area and typing the word \"hello\" inside?"
        'studio_gumball_hello2': "Darwin (actor 1) and his brother Gumball (actor 2) are heading to school.  Help them greet each other by using the \"actor say\" block twice."
        'studio_gumball_move_to_flag': "Banana Joe is about to win a field day race!  Help him go the last 200 pixels using the \"move\" block."
        'studio_gumball_move_to_actor': "Gumball (actor 1) and Darwin (actor 2) are late for the field day! Help Gumball move 200 pixels down to Darwin using the \"move actor\" block.  Next, connect a block to the \"when actor touches\" event to play a sound when they find each other."
        'studio_gumball_repeat': "The \"repeat forever\" block allows you to run code continuously.  Can you attach blocks to it to help Gumball warm up for his race by moving left and right repeatedly?"
        'studio_gumball_click_hello': "Can you help Anton announce the start of a race by saying \"Ready, set, go!\"? To test your program, don’t forget to click Anton after you click Run!"
        'studio_gumball_move_events': "Darwin is in the flag gathering contest! Help him run around by attaching the \"move\" block to each of the events. When you’re done, click Run and try to collect all of the flags."
        'studio_gumball_sound_and_points': "We’ve provided most of the code that keeps Anton (actor 2) moving left and right, as well as the code to move Banana Joe (actor 1) around the screen.  Can you finish the code and add blocks to the \"when actor touches\" event to make it so that you both play a sound and score a point when Banana Joe and Anton collide?  Press Run to play the game."
        'studio_gumball_warn_food_fight': "Darwin just escaped a food fight! Change the background to \"characters\" and set Darwin’s speed to fast, then press Run and move him to Penny to warn her."
        'studio_gumball_join_food_fight': "Join the food fight! Use the \"actor throw item right\" command to have Banana Joe (actor 1) throw food at Anton (actor 2)! Set Anton’s mood to angry when he gets hit."
        'studio_gumball_free_play': "Create your own game or story. When you're done, click Finish to let friends try your game on their phones, tablets, or computers!"
        'studio_full_sandbox': "Tạo trò chơi của chính bạn. Sau khi hoàn thành, bấm \"Hoàn thành\" để cho bạn của bạn chơi thử trò chơi bạn vừa tạo ra trên điện thoại của họ."
        'studio_k1_1': "Bạn có thể làm chú chó nói \"hello world\" không?"
        'studio_k1_2': "Bạn có thể làm chú chó nói vài điều, sau đó chú mèo nói tiếp vài điều không?"
        'studio_k1_3': "Bạn có thể viết một chương trình để làm cho con chó này di chuyển đến con mèo không?"
        'studio_k1_4': "Làm chú chó đi đến chỗ chú mèo, và chú mèo nói \"xin chào\" khi chú chó đến nơi."
        'studio_k1_5': "Bạn có thể thêm khối lệnh làm cho bạch tuộc trở nên vui vẻ không?"
        'studio_k1_6': "Tạo ra câu chuyện của chính bạn! Cho chú chó và chú mèo đi xung quanh và nói chuyện với nhau."
        'maze_wordsearch_k_1': "Di chuyển tôi để đánh vần từ EAST"
        'maze_wordsearch_k_2': "Di chuyển tôi để đánh vần từ SOUTH"
        'maze_wordsearch_k_3': "Di chuyển tôi để đánh vần từ WEST"
        'maze_wordsearch_k_4': "Di chuyển tôi để đánh vần từ NORTH"
        'maze_wordsearch_k_6': "Di chuyển tôi theo hướng Đông rồi tiếp đó theo hướng Nam để đánh vân từ JUMP"
        'maze_wordsearch_k_9': "Di chuyển tôi để đánh vần từ CODE"
        'maze_wordsearch_k_13': "Di chuyển tôi theo hướng để đánh vần chữ DEBUG (tiếng Việt nghĩa là: gỡ lỗi của chương trình)"
        'maze_wordsearch_k_15': "Di chuyển tôi theo hướng để đánh vần chữ ABOVE"
        'maze_wordsearch_k_16': "Di chuyển tôi theo hướng để đánh vần chữ BELOW"
        'maze_wordsearch_k_20': "Đây là bài kiểm tra!!! Di chuyển tôi theo hướng để đánh vần chữ STORY"
        'applab_ec_simple': "Tạo ra các ứng dụng của bạn bằng cách sử dụng các khối trong thanh công cụ."
        'turtle_ec_1_2': "Bây giờ, vẽ một hình vuông. Lưu ý: sử dụng màu sắc yêu thích của bạn bằng cách chọn nó trong khối mới \"thiết lập màu\"."
        'turtle_ec_1_10': "Chúc mừng! Bạn đã làm được! Bây giờ, hãy vẽ bất kỳ thứ gì bạn muốn. Sử dụng linh hoạt các nhân vật hoạt hình, những bông tuyết,... Hãy thử sử dụng cả khối lệnh \"thiết lập chiều rộng\" Chúc bạn vui!!!"
        'studio_ec_sandbox': "Tạo trò chơi của chính bạn. Sau khi hoàn thành, bấm \"Hoàn thành\" để cho bạn của bạn chơi thử trò chơi bạn vừa tạo ra trên điện thoại của họ."
    video:
      name:
        'maze_intro': "Giới thiệu về mê cung"
        'artist_intro': "Giới thiệu về nghệ sĩ"
        'farmer_intro': "Giới thiệu về nông dân"
        'flappy_intro': "Giới thiệu về Flappy Bird"
        'loop_times': "Lặp lại khối Thời gian"
        'loop_until': "Lặp lại khối Cho đến khi"
        'if': "Khối lệnh \"nếu\""
        'if_else': "Khối lệnh \"nếu/thì\""
        'if_else_scrat': "Khối lệnh \"nếu/thì\""
        'function': "Các hàm"
        'loop_while': "Khối lệnh \"khi\""
        'loop_for': "Biến đếm"
        'parameters': "Hàm và tham số"
        'hoc_wrapup': "Giờ lập trình in a nut shell"
        'Unplug1': 'CS là gì?'
        'Unplug2': 'suy nghĩ máy móc'
        'Unplug3': 'lập trình đồ thị trên giấy'
        'Unplug4': 'các bước lập trình'
        'Unplug5': 'Các hàm'
        'Unplug6': 'Điều kiện'
        'Unplug7': 'Sáng tác nhạc'
        'Unplug8': 'Trừu tượng'
        'Unplug9': 'Chương trình chuyển tiếp'
        'Unplug10': 'Kết nối mạng'
        'Unplug11': 'Gói gọn'
        'C1_happy_maps_unplugged': 'Bản đồ thú vị'
        'C1_moveitmoveit_unplugged': 'Di chuyển nó, di chuyển nó'
        'C1_bigevent_unplugged': 'Sự kiện lớn'
        'C1_getting_loopy': 'Tạo vòng lặp'
        'C1_pair_programming': 'Lập trình đôi'
        'C1_maze_intro_sequencing': 'Giới thiệu về mê cung và chuỗi'
        'C1_maze_debugging': 'Mê cung: gỡ lỗi'
        'C1_bee_level_intro': 'Bee Level - giới thiệu'
        'C1_artist_intro': 'Giới thiệu về nghệ sĩ'
        'C1_spelling_bee_intro': 'Giới thiệu Ong Đánh Vần'
        'C1_zuck_repeat_loop': 'Vòng lặp mê cung'
        'C1_bee_loops': 'Các vòng ong'
        'C1_maze_loops': 'Vòng lặp mê cung'
        'C1_playlab_storytelling': 'Phòng trò chơi: Kể chuyện'
        'C1_planting_seed': 'Trồng một hạt giống'
        'C1_building_foundation': 'Xây dựng nền tảng'
        'C1_going_places_safely': 'Đến nơi an toàn'
        'C2_maze_intro': 'Giới thiệu về mê cung'
        'C2_artist_intro': 'Giới thiệu về nghệ sĩ'
        'C2_zuck_repeat_loop': 'Vòng lặp mê cung'
        'C2_artist_loops': 'Nghệ sĩ vòng'
        'C2_artist_debugging': 'Nghệ sĩ gỡ lỗi'
        'C2_bee_loops': 'Các vòng ong'
        'C2_bee_debugging': 'Ong: sửa lỗi'
        'C2_bee_conditionals': 'Ong: Các điều kiện'
        'C2_playlab_createstory': 'Phòng trò chơi: Kể chuyện'
        'C2_graph_paper': 'lập trình đồ thị trên giấy'
        'C2_conditionals_with_cards': 'Điều kiện'
        'C2_binary_bracelets': 'Vòng đeo tay nhị phân'
        'C2_relay_programming': 'Chương trình chuyển tiếp'
        'C2_paper_airplanes': 'Máy bay giấy'
        'C2_digital_footprint': 'Dấu chân kỹ thuật số '
        'C2_digital_footprint_v2': 'Dấu chân kỹ thuật số '
        'C3_maze_level_4': 'Vòng lặp mê cung'
        'C3_artist_intro': 'Giới thiệu về nghệ sĩ'
        'C3_artist_functions': 'Nghệ sĩ: chức năng'
        'C3_bee_functions': 'Ong: chức năng'
        'C3_bee_conditionals': 'Ong: Các điều kiện'
        'C3_maze_conditionals': 'Các điều kiện của mê cung'
        'C3_artist_nested_loops': 'Vòng lặp lồng nhau'
        'C3_farmer_while': 'Vòng lặp "trong khi"'
        'C3_bee_nested_loops': 'Vòng lặp lồng nhau'
        'C3_bee_debugging': 'Ong: sửa lỗi'
        'C3_bounce': 'Bật lại'
        'C3_playlab_create_game': 'Phòng trò chơi: Thiết kế trò chơi'
        'C3_computational_thinking': 'suy nghĩ máy móc'
        'C3_dice_race': 'Vòng quay xúc sắc'
        'C3_internet': 'Kết nối mạng'
        'C3_crowdsourcing': 'Đa nguồn'
        'C3_functional_suncatchers': 'Chức năng của tấm hứng ánh nắng'
        'C3_songwriting_with_parameters': 'Sáng tác nhạc với tham số'
        'C4_intro': 'Giới thiệu'
        'C4_loops_zombie': 'Vòng lặp'
        'C4_bee_conditional': 'Ong: Các điều kiện'
        'C4_variables_artist': 'Biến - nghệ sĩ'
        'C4_variables_playlab': 'Biến - Play Lab'
        'C4_for_loops': 'Cho vòng lặp'
        'C4_for_loops_bee': 'Cho vòng lặp'
        'C4_for_loops_no_bee': 'Cho vòng lặp'
        'C4_math_artist': 'Lập trình các nghệ sĩ bằng toán'
        'C4_function_edit': 'Chỉnh sửa hàm'
        'C4_function_create': 'Tạo ra hàm'
        'C4_function_parameters': 'Hàm và tham số'
        'C4_conditionals': 'Điều kiện'
        'C4_unplugged_algorithms': 'Các thuật toán với Tangrams'
        'C4_unplugged_madlibs': 'Mad Libs'
        'C4_unplugged_variables': 'Biến trong bao bọc'
        'C4_unplugged_forloops': 'Cho vòng lặp'
        'C4_unplugged_parameters': 'Sáng tác với tham số'
        'C4_unplugged_binary': 'Nhị phân'
        'CSF_artist_angles': 'Angles in Artist'
        'CSF_collector_k1_blocks': 'CS Fundamentals: The Collector'
        'CSF_collector_repeat_loops': 'Collector Repeat Loops'
        'CSF_collector_text_blocks': 'CS Fundamentals: The Collector'
        'CSF_create_functions': 'Create Functions'
        'CSF_debugging_k1_blocks': 'Debugging'
        'CSF_debugging_text_blocks': 'Debugging'
        'CSF_EF_cs_matters': 'Computer Science Matters'
        'CSF_maze_intro_k1_blocks': 'Intro to Code Studio'
        'CSF_maze_intro_text_blocks': 'Intro to Code Studio'
        'CSF_my_robotic_friends': 'Bạn bè robot của tôi'
        'CSF_stevie_big_project': 'Stevie and the Big Project'
        'CSF_unspotted_bugs': 'Unspotted Bugs'
        'CSF_zuck_loops_short': 'Repeat Loops'
        'frozen_intro': 'Giới thiệu về Giờ Lập Trình'
        'frozen_loops': 'Giới thiệu về vòng lặp'
        'frozen_functions': 'Giới thiệu về hàm'
        'playlab_intro': 'Giới thiệu về Phòng Trò Chơi'
        'playlab_events': 'Sự kiện tại Phòng Trò Chơi'
        'playlab_repeat_forever': 'Phòng Trò Chơi lặp lại mãi mãi'
        'tutorial_puzzle_challenge': 'Hướng dẫn các câu đố'
        'infinity_playlab_intro': 'Phòng trò chơi - Giới thiệu'
        'infinity_playlab_events': 'Sự kiện Phòng Trò Chơi'
        'infinity_playlab_repeat_forever': 'Phòng Trò Chơi lặp lại mãi mãi'
        'csd_concept_computer': 'What Makes a Computer, a Computer?'
        'csd_concept_search': 'How Search Works'
        'csd_gamelab_animation_tab': 'The Animation Tab'
        'csd_gamelab_draw_1': 'Drawing in Game Lab - Part 1'
        'csd_gamelab_draw_2': 'Drawing in Game Lab - Part 2'
        'csd_gamelab_drawloop': 'Introduction to the Draw Loop'
        'csd_gamelab_sprites_1': 'Introduction to Sprites'
        'csd_gamelab_sprites_2': 'Animating Sprites'
        'csd_gamelab_velocity': 'Velocity'
        'csd_weblab_intro_1': 'Intro to Web Lab - Part 1'
        'csd_weblab_intro_2': 'Intro to Web Lab - Part 2'
        'csd_weblab_css_1': 'Intro to CSS - Part 1'
        'csd_weblab_css_2': 'Intro to CSS - Part 2'
        'csd_weblab_intro_3': 'Intro to Web Lab - Part 3'
        'csp_applab_objects': 'Introduction to Objects'
        'csp_applab_databases_1': 'Introduction to Databases - Part 1'
        'csp_applab_databases_2': 'Introduction to Databases - Part 2'
        'csp_applab_processing_lists': 'Processing Lists with Loops'
        'csp_applab_lists_1': 'Introduction to Lists - Part 1'
        'csp_applab_lists_2': 'Introduction to Lists - Part 2'
        'csp_applab_lists_3': 'Introduction to Lists - Part 3'
        'csp_applab_lists_4': 'Introduction to Lists - Part 4'
        'csp_applab_conditionals_1': 'Introduction to Conditionals - Part 1'
        'csp_applab_conditionals_2': 'Introduction to Conditionals - Part 2'
        'csp_applab_conditionals_2A': 'Introduction to Conditionals - Part 2a'
        'csp_applab_conditionals_2B': 'Introduction to Conditionals - Part 2b'
        'csp_applab_conditionals_2C': 'Introduction to Conditionals - Part 2c'
        'csp_applab_conditionals_3': 'Introduction to Conditionals - Part 3'
        'csp_applab_design': 'Introduction to Design Mode'
        'csp_applab_variables_1': 'Introduction to Variables - Part 1'
        'csp_applab_variables_2': 'Introduction to Variables - Part 2'
        'csp_applab_functions': 'Giới thiệu về hàm'
        'csp_applab_functions_parameters': 'Hàm và tham số'
        'csp_applab_loops': 'Vòng lặp'
        'csp_applab_turtle': 'Turtle Programming'
        'csp_concept_bigdata_medicine': 'Data & Medicine'
        'csp_concept_cybercrime': 'The Internet: Cybersecurity & Crime'
        'csp_concept_encryption': 'The Internet: Encryption & Public Keys'
        'csp_concept_http_html': 'The Internet: HTTP & HTML'
        'csp_concept_what_is_internet': 'What is the Internet?'
        'csp_concept_internet_ip_dns': 'The Internet: IP Addresses & DNS'
        'csp_concept_internet_packets_reliability': 'The Internet: Packets, Routing & Reliability'
        'csp_concept_internet_wires_cables_wifi': 'The Internet: Wires, Cables & Wifi'
        'csp_concept_rgb': 'A Little Bit About Pixels'
        'csp_cs_is_changing_everything': 'Computer Science is Changing Everything'
        'csp_pixelation_color_1': 'Color pixelation widget - Part 1'
        'csp_pixelation_color_2': 'Color pixelation widget - Part 2'
        'csp_pixelation_color_3': 'Color pixelation widget - Part 3'
        'csp_pixelation_bw': 'Black and white pixelation widget'
        'csp_U1L14_tipstricks': 'Unit 1 Lesson 14 Teacher Tips & Tricks'
        'csp_textcompression': 'Text compression widget'
        'csp_textcompression_new': 'Text compression widget'
        'csp_internetsimulator_1': 'Internet Simulator - Part 1'
        'csp_internetsimulator_2': 'Internet Simulator - Part 2'
        'csp_internetsimulator_3': 'Internet Simulator - Part 3'
        'alg_1_intro': 'CS in Algebra - Introduction'
        'alg_2_eval_block': 'CS in Algebra - Evaluation Blocks'
        'alg_3_pemdas': 'CS in Algebra - Order of Operations'
        'alg_4_data_types': 'CS in Algebra - Data Types'
        'alg_5_contracts': 'CS in Algebra - Contracts'
        'alg_6_variables': 'CS in Algebra - Variables'
        'alg_7_function': 'CS in Algebra - Functions'
        'alg_8_design_recipe': 'CS in Algebra - Design Recipe'
        'alg_9_booleans': 'CS in Algebra - Booleans'
        'alg_10_conditionals': 'CS in Algebra - Conditionals'
        'alg_11_coordinate_plane': 'CS in Algebra - Coordinate Plane'
        'alg_12_biggame_variables': 'CS in Algebra - Big Game Variables'
        'alg_13_biggame_animation': 'CS in Algebra - Big Game Animation'
        'alg_14_biggame_booleans': 'CS in Algebra - Big Game Booleans'
        'alg_15_biggame_update_player': 'CS in Algebra - Big Game Update Player'
        'alg_16_biggame_collision_detection': 'CS in Algebra - Big Game Collision Detection'
        'alg_17_sambat_compound_booleans': 'CS in Algebra - Compound Booleans'
        'hoc2015_preview_blocks': 'Make your own game blocks'
        'hoc2015_preview_typing': 'Make your own game typing'
        'hoc2015_preview_conclusion': 'Make your own game conclusion'
        'starwars_intro': 'Star Wars: Building a Galaxy with Code - Introduction'
        'starwars_typing': 'Star Wars: Building a Galaxy with Code - JavaScript'
        'starwars_events': 'Star Wars: Building a Galaxy with Code - Events'
        'starwars_congrats': 'Star Wars: Building a Galaxy with Code - Congratulations'
        'starwars_blocks_intro': 'Star Wars: Building a Galaxy with Code - Introduction'
        'starwars_blocks_events': 'Star Wars: Building a Galaxy with Code - Events'
        'starwars_blocks_congrats': 'Star Wars: Building a Galaxy with Code - Congratulations'
        'mc_intro': 'Minecraft - Giới thiệu'
        'mc_repeat': 'Minecraft - Lặp lại'
        'mc_if_statements': 'Minecraft - Lệnh if'
        'mc_congrats_share': 'Minecraft - Xin chúc mừng'
        'mc_congrats_no_share': 'Minecraft - Xin chúc mừng'
        'gumball_intro': 'Gumball Hour of Code - Introduction'
        'gumball_events': 'Gumball Hour of Code - Events'
        'gumball_repeat': 'Gumball Hour of Code - Repeat statements'
        'iceage_intro': 'Ice Age Hour of Code - Introduction'
        'iceage_events': 'Ice Age Hour of Code - Events'
        'iceage_repeat': 'Ice Age Hour of Code - Repeat statements'
        'mc_2016_intro': 'Minecraft Hour of Code - Introduction'
        'mc_2016_loops': 'Minecraft Hour of Code - Loops'
        'mc_2016_events': 'Minecraft Hour of Code - Events'
        'mc_2016_spawn': 'Minecraft Hour of Code - Spawn'
        'mc_2016_congrats': 'Minecraft Hour of Code - Congratulations'
    callout:
      text:
        drag_blocks: 'Kéo một khối "di chuyển" và gán nó bên dưới khối khác'
        run: 'Nhấn "Chạy" để thử chương trình của bạn'
        watch_again: 'Click vào đây để xem lại video'
        gray_block_explanation: "Khối có màu xám không thể bị xóa. Hãy giải câu đố dùng khối xám đó!"
        show_code_explanation: "Click vào đây để xem mã lệnh cho chương trình bạn đang thực hiện"
        instructions_repeat_explanation: 'Các hướng dẫn cho mỗi câu đố được lặp đi lặp lại ở đây'
        category_explanation: "Bạn vẫn có các khối lệnh như xưa, nhưng giờ đây chúng đã được phân thành các nhóm nhỏ"
        set_sprite_image: 'Đính kèm khối "thiết lập hình ảnh cho diễn viên" với khối "khi câu chuyện bắt đầu" để tạo một nhân vật'
        studio_say_text: "Gõ những gì bạn muốn diễn viên của bạn nói trong các dấu ngoặc kép"
        jigsaw_click: 'Nhấp vào khối này!'
        move_elsa_forward: 'Kéo một khối lệnh "Di chuyển về phía trước" và gắn nó ngay dưới khối "Khi chạy" để làm cho Elsa di chuyển về phía trước'
        turn_elsa: 'Sử dụng khối "rẽ" để làm Elsa rẽ. Số khung bên trong khối xoay sẽ xác định Elsa quay một góc bao nhiêu độ'
        replace_questions: 'Sử dụng tùy chọn ở trong khối lệnh để thay thế "???" với một số'
        replace_questions_degree: 'Sử dụng tùy chọn ở trong khối lệnh để thay thế "???" với góc cần thiết'
        repeat_blocks: 'Sử dụng khối "Lặp lại" và đè nó xung quanh các khối trong vùng không gian làm việc'
        repeat_blocks_1: '(1) sử dụng khối này và đặt nó bao quanh các khối màu xám'
        repeat_blocks_2: '(2) di chuyển các khối "Lặp lại" ở đây, và đặt các khối màu xám bên trong'
        snowflake_dropdown: 'Sử dụng cái này để thả xuống tạo các bông tuyết khác nhau!'
        degrees_per_side: 'Chia 360 độ cho số cạnh để suy ra số độ của mỗi góc.'
        set_sides: 'Sử dụng khối này để đặt "số cạnh" với số lượng cần thiết để hoàn thành câu đố.'
        set_length: 'Sử dụng khối này để đặt "chiều dài" về giá trị chính xác.'
        which_equation: 'Cân bằng như thế nào để mỗi bên ngẵn hơn so với hình dạng bên?'
        get_nectar: 'Sử dụng các khối mới tên là "lấy mật hoa".'
        actions_category: 'Hộp công cụ có một cái nhìn mới! Các khối "hành động" đã ở đây.'
        draw_square_hint: 'Gợi ý: Sử dụng các vòng lặp vuông bạn vừa tạo ra trong màn trước.'
        edit_function: 'Click vào đây để chỉnh sửa hàm của bạn.'
        create_function: 'Nhấp vào đâu để mở hộp "chức năng", sau đó nhấp vào "tạo một chức năng mới".'
        house_hint: "Có thể tạm thời chấp nhận hình vừa vẽ chưa giống nhà thật. Chúng ta sẽ sửa lại ở màn tiếp theo."
        edit_draw_square: 'Sử dụng nút này để chỉnh sửa các hàm và thêm vòng lặp.'
        edit_get_nectar: 'Sử dụng nút này để chỉnh sửa các hàm và thay đổi hướng của ong để nó rẽ và lấy mật hoa.'
        logic_category: 'Mở hộp "Logic" để tìm các khối "nếu/khác".'
        length_parameter: 'Bạn có thể viết lại hàm này để nó sử dụng tham số "chiều dài" không?'
        frozen_diamond_repeat: 'Sử dụng các khối lặp lại để vẽ ra hình này.'
        frozen_circle_function_in_circle_turn: "Đừng quên xoay một góc thích hợp sau khi tạo mỗi vòng tròn."
        frozen_circle_function_with_parameter_circle: "Sử dụng khối \"tạo ra một vòng tròn\" và thay đổi kích thước."
        frozen_snowflake_branch: "Sử dụng khối \"tạo ra một nhánh bông tuyết\""
        frozen_create_square: "Đính kèm thêm nhiều khối lệnh ở đây để tạo ra một hình vuông"
        playlab_drag_say: "Kéo khối \"nói\" ở đây và gõ \"Xin chào\""
        playlab_use_twice: "Sử dụng khối này hai lần và nhớ thay đổi số thứ tự của diễn viên"
        playlab_move_girl: "Sử dụng khối lệnh \"di chuyển sang phải\" để di chuyển bóng cô gái"
        playlab_play_sound: "Thêm khối lệnh \"phát âm thanh\" ở đây"
        playlab_arrow_keys: "Nhớ dùng chúng để di chuyển các phù thủy sau khi nhấn nút \"Chạy\""
        playlab_add_move: "Thêm khối lệnh \"di chuyển\" bên trong vòng lặp này"
        playlab_add_score: "Thêm khối lệnh về điểm số ở đây"
        playlab_add_blocks: "Thêm khối lệnh của bạn ở đây"
        set_variable: "Kéo một khối số ở đây để đặt biến của bạn"
        place_variable: "Kéo biến số của bạn vào trong khối lệnh này"
        bee_for_loop: "Kéo số mật hoa lớn nhất mà bạn muốn ong đi hút ở đây"
        place_counter_variable: "Kéo biến để đếm số vào trong khối lệnh này"
        function_editor_draw_square: "Đây là định nghĩa về hàm của bạn. Các khối lệnh này luôn vẽ một hình vuông khi bạn dùng lệnh \"vẽ một hình vuông\""
        change_here: "Thực hiện thay đổi của bạn ở đây"
        write_draw_square_function: "Kéo khối lệnh từ hộp công cụ vào đây để vẽ ra một hình vuông"
        write_draw_triangle_function: "Kéo khối lệnh từ hộp công cụ vào đây để vẽ ra một tam giác"
        edit_add_parameter: "Nhấp vào chỉnh sửa để thêm một tham số trong hàm của bạn"
        add_and_drag_parameter: "Viết tên tham số của bạn vào đây, bấm vào \"Thêm\", và sau đó kéo nó vào định nghĩa hàm của bạn"
        fill_in_actor: "Điền vào các dấu ??? với con số tương ứng với mỗi diễn viên (1, 2 và 3)"
        repeat: "Đặt khối bên trong vòng lặp để lặp lại lệnh"
        if_bee_nectar: "Sử dụng khối lệnh \"nếu\" để để giúp ong tự quyết định có lấy mật hoa hay không lấy"
        if_else_bee: "Sử dụng các khối lệnh \"nếu/thì\" để ong lấy được mật hoa từ một bông hoa, và để ong làm mật ong nếu đó là tổ ong"
        repeat_full_circle: "Nhập vào số lần các zombie đã di chuyển để vẽ một vòng tròn"
        place_length_variable: "Kéo biến chiều dài ở đây để thay thế các ký hiệu chấm hỏi"
        arrows_move_actor: "Sử dụng các mũi tên để di chuyển các diễn viên"
        right_arrow_fireball: "Sử dụng mũi tên bên phải để bắn quả cầu lửa"
        name_function: "Viết tên của hàm của bạn ở đây"
        Infinity_move_right_runbutton: "Thêm khối lệnh di chuyển ở đây"
        Infinity_move_directions_callout: "Khối lệnh nào sẽ làm Baymax di chuyển lên trên khi ta nhấn phím mũi tên lên?"
        Infinity_move_directions_callout_arrow: "Sử dụng các mũi tên để đi chuyển"
        Infinity_move_collide_callout: "Phát âm thanh khi sự kiện này xảy ra."
        Infinity_repeat_callout: "Đặt khối lệnh di chuyển ở trong vị trí này"
        craft_run_button_callout: 'Nhấn "Run" để thử chương trình của bạn'
        craft_drag_block_callout: 'Kéo một khối "moveForward();" và thả xuống bên dưới khối gỗ khác'
        craft_callout_preplaced: "Chúng tôi đã đặt một số khối gỗ ở đây để giúp bạn bắt đầu"
        craft_inside_repeat: "Lặp lại các hành động bằng cách đặt các khối gỗ vào đây"
        craft_callout_preplaced_house: "Mã này sẽ bắt đầu xây dựng ngôi nhà của bạn. Bạn có hoàn thành được không?"
        craft_what_is_iron: "Hãy đào khối sắt này!"
        craft_callout_moveforward: "Mã này sẽ kiểm tra xem có dung nham hay không, bạn có thể thêm một lệnh để di chuyển về phía trước không?"
