vi:
  data:
    authored_hints:
      2-3 Artist 1 new_authored_hint:
        2-3_Artist_1_new_a: Nếu bạn sử dụng khối lệnh để tôi `di chuyển về phía trước 100 pixel`, tôi sẽ tự động vẽ một đường thẳng.
        2-3_Artist_1_new_b: Gặp khó khăn khi rẽ ở góc? Hãy dùng block `rẽ phải 90 độ`.
      2-3 Artist 11_authored_hint:
        2-3_Artist_11_a: 'Gặp khó khăn với các góc? Bạn cần xoay 360 độ trong 8 lần. 360/8 bằng bao nhiêu? '
      2-3 Artist 12_authored_hint:
        2-3_Artist_12_a: Một vòng tròn có 360 độ, vì vậy nếu người hoạ sĩ xoay 1 độ mỗi lần trong loop code, anh ta sẽ cần xoay 360 lần.
      2-3 Artist 2 new_authored_hint:
        2-3_Artist_2_new_a: Người hoạ sĩ dường như không hướng về đúng mục đích. Bạn có thể làm anh ta xoay trước khi vẽ đường thẳng không?
      2-3 Artist 3new_authored_hint:
        2-3_Artist_3new_a: 100-70 bằng bao nhiêu? Dựa vào kết quả này, đó sẽ là chiều cao mà chiếc mũ cần phải có!
        2-3_Artist_3new_b: Người hoạ sĩ dường như không hướng về đúng mục đích. Bạn có thể làm anh ta xoay trước khi vẽ đường thẳng không?
      2-3 Artist 4_authored_hint:
        2-3_Artist_4_a: Để hoàn thành ngôi nhà, tất cả chúng ta cần làm là vẽ một hình vuông!
      2-3 Artist 6_authored_hint:
        2-3_Artist_6_a: 'Để tạo những góc nhỏ này, bạn cần xoay *xa hơn* mỗi lần so với lúc bạn xoay hình vuông.   '
        2-3_Artist_6_b: Vì tôi đã hướng về bên phải, sẽ dễ hơn khi bắt đầu di chuyển về phía trước, sau đó quẹo trái để tạo thành hình tam giác.
        2-3_Artist_6_c: Mỗi cạnh của hình tam giác có chiều dài tương tự như mỗi cạnh của hình vuông...100 pixels!
      2-3 Artist 7_authored_hint:
        2-3_Artist_7_a: Các dễ nhất để giải bài đố này là vẽ hình vuông thứ nhất và kết thúc với việc người hoạ sĩ hướng về phía dưới trước khi bạn bắt đầu vẽ hình vuông thứ hai.
      2-3 Artist 8_authored_hint:
        2-3_Artist_8_a: Nếu bạn giảm một nửa của 200, mỗi hình vuông cần bao nhiêu pixels chiều rộng?
      2-3 Artist 9 NEW_authored_hint:
        2-3_Artist_9_a: Kim cương này thật ra chỉ là một hình vuông nằm ở góc 45 độ
      2-3 Artist 9 REPLACEMENT_authored_hint:
        step_size: Mỗi bước là 100 pixels rộng và 100 pixels cao.
      2-3 Artist 9_authored_hint:
        2-3_Artist_9_a: Kim cương này thật ra chỉ là một hình vuông nằm ở góc 45 độ.
        2-3_Artist_9_b: |-
          Đừng quên xoay người hoạ sĩ về bên trái 45 độ trước khi bạn bắt đầu vẽ hình vuông! ![](https://images.code.org/47cc2474e533667101a2d73b98da204e-image-1467744539967.gif)
      2-3 Artist Debugging 10_authored_hint:
        2-3_Artist_Debugging_10_a: Hãy nhớ rằng, bạn muốn bảng điều khiển *rộng hơn* 10 pixels...vậy nên hãy chắc chắn **thêm** 10 vào con số mà bạn thay đổi.
        2-3_Artist_Debugging_10_b: "**Thử và phạm lỗi là hoàn toàn bình thường ở đây!** \n\nHãy bắt đầu bằng việc thay đổi một con số mỗi lần.\n\nNhững con số nào làm điều đó?\n\nNếu bạn không thể, chỉ cần click \"Bắt đầu lại\" và code của bạn sẽ được reset."
      2-3 Artist Debugging 2_authored_hint:
        2-3_Artist_Debugging_2_a: 'Gợi ý: Cứ mỗi ria mèo là 75 độ dài pixel.'
      2-3 Artist Debugging 3_authored_hint:
        2-3_Artist_Debugging_3_a: Mỗi lượt lag 15 độ tối thiểu.
        2-3_Artist_Debugging_3_b: Nếu chương trình chạy quá nhanh để xem chuyện gì đã xảy ra, hãy thử làm chậm nó lại với thành trượt.
      2-3 Artist Debugging 7_authored_hint:
        2-3_Artist_Debugging_7_a: Chuyện gì sẽ xảy ra nếu họa sĩ di chuyển hoặc nhảy về sau khi ông vẽ nét đầu tiên?
      2-3 Artist Debugging 8_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          Hình của tôi đã lặp lại bao nhiêu lần?

          Hình đó *cần* lặp lại bao nhiêu lần?

          Bạn có thể thay đổi điều đó ở đâu trong chương trình?
      2-3 Artist Debugging 9_authored_hint:
        2-3_Artist_Debugging_9_a: Người họa sĩ cần quay thêm 60 độ về bên trái trước khi bắt đầu vẽ!
        2-3_Artist_Debugging_9_b: Bạn không cần phải thêm một khối khác để có một vòng quay đầy đủ, bạn chỉ cần thêm 60 độ vào khối `rẽ trái bởi` đã có sẵn!
      2-3 Artist Functions 1 a_authored_hint:
        2-3_Artist_Functions_1_a: Mỗi hình vuông có cạnh dài 100 điểm ảnh, điều đó có nghĩa là bạn cần đi về phía trước 175 điểm ảnh trước khi vẽ hình vuông thứ hai.
        2-3_Artist_Functions_1_b: Bạn có thể vẽ các nét trùng nhau để làm cái kính của bạn.
      2-3 Artist Functions 1_authored_hint:
        2-3_Artist_Functions_1_a: Mỗi hình vuông có cạnh dài 100 điểm ảnh, điều đó có nghĩa là bạn cần đi về phía trước 175 điểm ảnh trước khi vẽ hình vuông thứ hai.
        2-3_Artist_Functions_1_b: Bạn có thể vẽ các nét trùng nhau để làm cái kính của bạn.
      2-3 Artist Functions 11 a_authored_hint:
        2-3_Artist_Functions_11_a: Bạn sẽ cần thay đổi không chỉ các con số và chiều dài cạnh trong hàm, mà còn là góc mà nhà họa sĩ rẽ giữa các cạnh.
      2-3 Artist Functions 11_authored_hint:
        2-3_Artist_Functions_11_a: Bạn sẽ cần thay đổi không chỉ các con số và chiều dài cạnh trong hàm, mà còn là góc mà nhà họa sĩ rẽ giữa các cạnh.
      2-3 Artist Functions 12 a_authored_hint:
        2-3_Artist_Functions_12_a: Thử chạy mã để xem bạn cần thêm cái gì.
      2-3 Artist Functions 12_authored_hint:
        2-3_Artist_Functions_12_a: Thử chạy mã để xem bạn cần thêm cái gì.
      2-3 Artist Functions 2 a_authored_hint:
        2-3_Artist_Functions_2_a: |-
          Chương trình của bạn cần:
          - Dùng hàm\
          - Tiến về phía trước 100 + 75 điểm ảnh
          - Dùng hàm
      2-3 Artist Functions 2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          Chương trình của bạn cần:
          - Dùng hàm\
          - Tiến về phía trước 100 + 75 điểm ảnh
          - Dùng hàm
      2-3 Artist Functions 3 a_authored_hint:
        2-3_Artist_Functions_3_a: "** 115 + 45 = 160 **"
      2-3 Artist Functions 3_authored_hint:
        2-3_Artist_Functions_3_a: "** 115 + 45 = 160 **"
      2-3 Artist Functions 4 a_authored_hint:
        2-3_Artist_Functions_4_a: Nhà họa sĩ cần quay 120 độ giữa những hình vuông để hoàn thành thiết kế này.
      2-3 Artist Functions 4_authored_hint:
        2-3_Artist_Functions_4_a: Nhà họa sĩ cần quay 120 độ giữa những hình vuông để hoàn thành thiết kế này.
      2-3 Artist Loops New 11_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          Hãy nhớ, đây là mã nguồn của câu đố lúc nãy:


          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_colour" inline="true">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">turnRight</title>
          <title name="VALUE" config="45,60,90,120,180">45</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">50</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">turnLeft</title>
          <title name="VALUE" config="45,60,90,120,180">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">50</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
        2-3_Artist_Loops_New_11_b: Khối rẽ mới của bạn nên nằm ở phần **cuối** của đoạn mã bên trong vòng lặp.
      2-3 Artist Loops New 12_authored_hint:
        2-3_Artist Loops_New_12_a: Trước khi bắt đầu vẽ hình thoi, nhà họa sĩ cần phải rẽ trái 60 độ để bắt đầu vẽ đúng hướng.
        2-3_Artist Loops_New_12_b: Sau khi nhà họa sĩ tiến lên 100 điểm ảnh, ông sẽ cần rẽ phải 120 độ để tạo ra góc nhọn.
        2-3_Artist Loops_New_12_c: Nhà họa sĩ sẽ chỉ cần rẽ phải 60 độ để tạo ra góc rộng.
      2-3 Artist Loops New 13_authored_hint:
        2-3_Artist_Loops_New_13_a: "Ở cuối mỗi hình thoi, nhà họa sĩ đã ở đúng góc để bắt đầu hình tiếp theo. \n\n Do đó, chúng ta không cần thêm một khối `rẽ trái bởi` trước khi bắt đầu lại."
        2-3_Artist_Loops_New_13_b: "Để làm mỗi hình thoi, nhà họa sĩ cần: \n- đi\n- rẽ phải 120 độ\n- đi\n- rẽ phải 60 độ \n\nXong rồi làm lại tất cả từ đầu!"
      2-3 Artist Loops New 9_authored_hint:
        2-3_Artist_Loops_New_9_a: Nhà họa sĩ cần rẽ phải 45 độ trước khi bắt đầu vẽ.
        2-3_Artist_Loops_New_9_b: Chữ V này thật ra chỉ là một nửa hình vuông.  Cái gì sẽ là đoạn mã để vẽ một nửa hình vuông?
      2-3 Artist Nested Loops 1_authored_hint:
        2-3_Artist_Nested_Loops_1_a: Nhớ đặt các khối xám vào trong vòng lặp của bạn.
      2-3 Artist Nested Loops 3_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "Cần trợ giúp với các góc? \n**360/12 = 30**"
        2-3_Artist_Nested_Loops_3_b: Nhớ đặt tất cả các đoạn mã màu xám và khối rẽ vào trong vòng lặp.
      2-3 Artist Nested Loops 4_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "Cần trợ giúp với các góc? \n**360/12 = 30**"
      2-3 Artist Nested Loops 5_authored_hint:
        2-3_Artist_Nested_Loops_5_a: "Thử dùng khối `nhảy về phía trước` để đi từ hình vuông này đến điểm bạn bắt đầu hình vuông tiếp theo. \n\nNếu các hình vuông cao 20 điểm ảnh và chúng cách nhau 20 điểm ảnh, bạn sẽ cần nhảy bao xa?"
      2-3 Artist Nested Loops 7_authored_hint:
        2-3_Artist_Nested_Loops_7_a: "Bạn cần quay bao xa trong mỗi vong lặp? \n\n360/10 ra bao nhiêu?"
      2-3 Artist Nested Loops 9_authored_hint:
        2-3_Artist_Nested_Loops_9_a: |-
          Cần trợ giúp tìm góc chính xác? ** 360 / 12 = 30 **
      2-3 Bee Conditionals 14_authored_hint:
        2-3_Bee_Conditionals_14_a: Gặp khó khăn trong việc tìm cách đặt các khối?  Thử coi bông hoa đỏ giống hệt bông hoa tím xem!
        2-3_Bee_Conditionals_14_b: Nếu bông hoa đỏ có màu tím, bạn có thể tìm ra cách dùng thêm một vòng lặp để giảm số khối trong mã không?
        2-3_Bee_Conditionals_14_c: "Thử chia việc này thành hai việc riêng biệt: \n\n\n![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)\n\n1) Thu hoạch mật hoa 3 lần\n - Đi thẳng 5 lần\n - Kiểm tra xem có mật hoa không, nếu có: thu hoạch nó\n - Rẽ trái\n \n2) Làm mật ong\n - Đi thẳng 1 lần\n - Làm mật ong 2 lần"
      2-3 Bee Conditionals 15_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Nhớ rằng: Những bông hoa tím có 0 hoặc 1 mật hoa và nó có thể thay đổi mỗi làn bạn chạy chương trình.'
      2-3 Bee Conditionals 3_authored_hint:
        2-3_Bee_Conditionals_3_a: Đoạn mã sẽ ngắn nhất khi bạn dùng một vòng lặp mỗi khi bạn tiến lên, một vòng lặp khác để thu hoạch mật hoa, và một cái nữa để làm mật ong.
      2-3 Bee Conditionals 6_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Nhớ rằng: Những bông hoa tím thay đổi giữa 0 và 1 mật hoa khi bạn chạy chương trình!'
      2-3 Bee Debugging 1_authored_hint:
        2-3_Bee_Debugging_1_a: Một khi bạn tìm ra và sửa được khối sai, bạn có nhìn thấy mẫu nào mà có thể thu gọn được dùng vòng lặp không?
      2-3 Bee Debugging 2_authored_hint:
        2-3_Bee_Debugging_2_a: Một khi bạn tìm ra và sửa được khối sai, bạn có nhìn thấy mẫu nào mà có thể thu gọn được dùng vòng lặp không?
      2-3 Bee Debugging 4_authored_hint:
        2-3_Bee_Debugging_4_a: Có chỗ nào mà con ong làm điều gì đó vô lý không? Điều gì xảy ra khi bạn đổi khối đó?
      2-3 Bee Functions 4_authored_hint:
        2-3_Bee_Functions_4_a: Bạn không cần phải dùng một vòng lặp với hàm. Thử di chuyển, dùng hàm, xong di chuyển và dùng hàm một lần nữa.
      2-3 Bee Functions 6_authored_hint:
        2-3_Bee_Functions_6_a: Bạn không cần phải dùng một vòng lặp với hàm. Thử di chuyển, dùng hàm, xong di chuyển và dùng hàm một lần nữa.
      2-3 Bee Functions 8_authored_hint:
        2-3_Bee_Functions_8_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9_authored_hint:
        2-3_Bee_Functions_8_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
        2-3_Bee_Functions_8_b: |-
          Nhớ xây dựng đoạn mã của bạn bên trong khối hàm màu xanh lá cây.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2_authored_hint:
        2-3_Bee_Loops_2_a: Bạn cần có bốn khối bên trong vòng lặp của bạn.
      2-3 Bee Loops 3_authored_hint:
        2-3_Bee_Loops_3_a: Bạn cần có 6 khối bên trong vòng lặp.
      2-3 Bee Loops 3B_authored_hint:
        2-3_Bee_Loops_3B_a: Bạn sẽ cần hai vòng lặp khác nhau, một cái sau cái còn lại.
      2-3 Bee Loops 4_authored_hint:
        2-3_Bee_Loops_4_a: Bạn cần có năm khối bên trong vòng lặp của bạn.
      2-3 Bee Loops 4A_authored_hint:
        2-3_Bee_Loops_4A_a: Hành động đầu tiên sẽ là rẽ thay vì di chuyển.
        2-3_Bee_Loops_4A_b: Phần cuối của chương trình có thể được kết thúc bằng cách viết mã ở phần cuối chương trình, bên ngoài vòng lặp của bạn.
        2-3_Bee_Loops_4A_c: Nếu bạn không thể nhận ra những vòng lặp, hãy thử viết mã theo cách dài trước, sau đó xem bạn có thể kết hợp mã lại thành một vòng lặp 'lặp lại' ở cuối.
      2-3 Bee Loops 5_authored_hint:
        2-3_Bee_Loops_5_a: Nếu bạn không thể nhận ra các khối để bỏ vào 'lặp lại' ngay lập tức, hãy bắt đầu bằng cách viết ra mã của mỗi bước và tìm một mô hình chung.
      2-3 Bee Loops 6_authored_hint:
        2-3_Bee_Loops_6_a: Nếu bạn không biết cái gì cần đi vào vòng lặp 'lặp lại', hãy thử kéo từng khối mội ra và xem nếu bạn có thể tìm ra một mô hình chung.
        2-3_Bee_Loops_6_b: Phải có 6 khối bên trong vòng lặp 'lặp lại' của bạn khi bạn kết thúc.
      2-3 Bee Loops 7_authored_hint:
        2-3_Bee_Loops_7_a: Hành động đầu tiên sẽ là rẽ thay vì di chuyển.
        2-3_Bee_Loops_7_b: 'vòng lặp'
      2-3 Maze 6_authored_hint:
        2-3_Maze_6_a: Có hai cách để giải câu đố này!
      Artist Autorun Test_authored_hint:
        2-3_Artist_Functions_4_a: Nhà họa sĩ cần quay 120 độ giữa những hình vuông để hoàn thành thiết kế này.
      Artist Inspiration_authored_hint:
        solution: |-
          **Lời giải**
          ![Hình ảnh của Lời Giải]
          (https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      Dance short test 2_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Bạn cần để làm hiệu ứng nền thay đổi ở thời điểm nhịp thứ bảy của bài hát.

          *Cấp độ này kết thúc sau 10 nhịp.*
        challenges: |-
          **Thách thức phụ**

          Thay đổi hiệu ứng nền ở những thời điểm khác nhau trong bài hát bằng cách liên kết những khối mới theo sự kiện <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"nhịp"</title></block></xml>.
      Dance short test_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Bạn cần để làm hiệu ứng nền thay đổi ở thời điểm nhịp thứ bảy của bài hát.

          *Cấp độ này kết thúc sau 10 nhịp.*
        challenges: |-
          **Thách thức phụ**

          Thay đổi hiệu ứng nền ở những thời điểm khác nhau trong bài hát bằng cách liên kết những khối mới theo sự kiện <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"nhịp"</title></block></xml>.
      Dance_Party_01_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**
          * Hãy đảm bảo rằng một vũ công xuất hiện trên màn hình.

          *Cấp độ này kết thúc sau 4 nhịp.*
        challenges: |-
          **Thử thách tùy chọn**
          * Chọn một bài hát khác để phát.
          * Chọn một đối tượng khác trông giống nai sừng tấm!
          * Đổi tên vũ công.
      Dance_Party_01_low_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**
          * Hãy đảm bảo rằng một vũ công xuất hiện trên màn hình.

          *Cấp độ này kết thúc sau 4 nhịp.*
        challenges: |-
          **Thử thách tùy chọn**
          * Chọn một bài hát khác để phát.
          * Chọn một đối tượng khác trông giống nai sừng tấm!
          * Đổi tên vũ công.
      Dance_Party_02_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**
          * Vũ công cần chuyển sang động tác mới sau 4 nhịp.

          *Cấp độ này kết thúc sau 8 nhịp.*
      Dance_Party_03_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Sau 6 nhịp, vũ công cần làm một vũ điệu khác ngoài vũ điệu sau 4 nhịp.

          *Cấp độ này kết thúc sau 12 nhịp.*
      Dance_Party_04_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Bạn cần để làm hiệu ứng nền thay đổi ở thời điểm nhịp thứ bảy của bài hát.

          *Cấp độ này kết thúc sau 10 nhịp.*
        challenges: |-
          **Thách thức phụ**

          Thay đổi hiệu ứng nền ở những thời điểm khác nhau trong bài hát bằng cách liên kết những khối mới theo sự kiện <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"nhịp"</title></block></xml>.
      Dance_Party_06_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Bạn cần có ít nhất hai vũ công.

          *Cấp độ này kết thúc sau 6 nhịp.*
        challenges: |-
          **Thách thức phụ**

          * Thêm vũ công thứ ba (hoặc một số lượng vũ công tùy ý!)
          * Làm cho tất cả các vũ công của bạn thực hiện các động tác khác nhau tại các thời điểm khác nhau trong bài hát.
      Dance_Party_08_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Hai vũ công cần phải có một kích cỡ khác ngoài 100.

          *Cấp độ này kết thúc sau 6 nhịp.*
        challenges: |-
          **Thách thức phụ**

          * Thử nghiệm bằng cách thay đổi các thuộc tính khác (chiều rộng, chiều cao, xoay, v.v.)
      Dance_Party_09_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Thay đổi sắc thái của ít nhất một vũ công.

          *Cấp độ này kết thúc sau 8 nhịp.*
      Dance_Party_1_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**
          * Hãy đảm bảo rằng một vũ công xuất hiện trên màn hình.

          *Cấp độ này kết thúc sau 4 nhịp.*
        challenges: |-
          **Thử thách tùy chọn**
          * Chọn một bài hát khác để phát.
          * Chọn một đối tượng khác trông giống nai sừng tấm!
          * Đổi tên vũ công.
      Dance_Party_10_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Thuộc tính cho hai vũ công trở lên phải thay đổi.

          *Cấp độ này kết thúc sau 8 nhịp.*
      Dance_Party_11.5_test_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Thoải mái sáng tạo!

          *Cấp độ này kết thúc sau 8 nhịp.*
      Dance_Party_11_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Thoải mái sáng tạo!

          *Cấp độ này kết thúc sau 8 nhịp.*
      Dance_Party_11_5_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Thoải mái sáng tạo!

          *Cấp độ này kết thúc sau 8 nhịp.*
      Dance_Party_11b_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Sử dụng khối `when left arrow pressed` để làm Robot thực hiện một động tác nhảy khi bạn nhấn mũi tên trái.

          *Cấp độ này kết thúc sau 8 nhịp.*
      Dance_Party_2_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**
          * Vũ công cần chuyển sang động tác mới sau 4 nhịp.

          *Cấp độ này kết thúc sau 8 nhịp.*
      Dance_Party_3_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Sau 6 nhịp, vũ công cần làm một vũ điệu khác ngoài vũ điệu sau 4 nhịp.

          *Cấp độ này kết thúc sau 12 nhịp.*
      Dance_Party_4_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Bạn cần để làm hiệu ứng nền thay đổi ở thời điểm nhịp thứ bảy của bài hát.

          *Cấp độ này kết thúc sau 10 nhịp.*
        challenges: |-
          **Thách thức phụ**

          Thay đổi hiệu ứng nền ở những thời điểm khác nhau trong bài hát bằng cách liên kết những khối mới theo sự kiện <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"nhịp"</title></block></xml>.
      Dance_Party_5_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Bài nhảy của bạn phải có những động tác khác nhau trong 12 nhịp đầu tiên của bài hát.

          *Cấp độ này kết thúc sau 12 nhịp.*
      Dance_Party_6_authored_hint:
        challenges: |-
          **Thách thức phụ**

          * Thêm vũ công thứ ba (hoặc một số lượng vũ công tùy ý!)
          * Làm cho tất cả các vũ công của bạn thực hiện các động tác khác nhau tại các thời điểm khác nhau trong bài hát.
      Dance_Party_8_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Hai vũ công cần phải có một kích cỡ khác ngoài 100.

          *Cấp độ này kết thúc sau 6 nhịp.*
        challenges: |-
          **Thách thức phụ**

          * Thử nghiệm bằng cách thay đổi các thuộc tính khác (chiều rộng, chiều cao, xoay, v.v.)
      Dance_Party_9_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Thay đổi sắc thái của ít nhất một vũ công.

          *Cấp độ này kết thúc sau 8 nhịp.*
      Farmer for Authored Hint testing_authored_hint:
        first_hint: |-
          Đây là gợi ý đầu tiên. Có *một số * ** cơ bản ** 'đánh dấu'
        second_hint: Đây là gợi ý thứ hai. Nó là một hình ảnh. ! [] (https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)
        last_hint: Đây là gợi ý thứ ba và cuối cùng. Nó không có bất cứ điều gì đặc biệt.
      Farmer for TTS testing_authored_hint:
        first_hint: |-
          Đây là gợi ý đầu tiên. Có *một số * ** cơ bản ** 'đánh dấu'
        second_hint: |-
          Đây là gợi ý thứ hai. Nó là một hình ảnh. ! [] (https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)
        last_hint: Đây là gợi ý thứ ba và cuối cùng. Nó không có bất cứ điều gì đặc biệt.
      Function intro Ryan_authored_hint:
        Function_intro_Ryan_b: Nếu bạn sử dụng chính xác các chức năng, sẽ có một con đường bạn có thể di chuyển...
        Function_intro_Ryan_a: Bạn có thể sử dụng một chức năng nhiều lần trong chương trình của bạn!  Hãy thử dùng nó hai lần để giải quyết câu đố này.
      Function intro Ryan_2019_authored_hint:
        Function_intro_Ryan_b: Nếu bạn sử dụng chính xác các chức năng, sẽ có một con đường bạn có thể di chuyển...
        Function_intro_Ryan_a: Bạn có thể sử dụng một chức năng nhiều lần trong chương trình của bạn!  Hãy thử dùng nó hai lần để giải quyết câu đố này.
      HOC 2018 Level_10_authored_hint:
        voyage_aquatic_10a: "Xem các ** ngọn đèn biển **![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)? Làm thế nào bạn có thể sử dụng một điều kiện với chúng để vượt qua một Tòa nhà đại dương?\n\n"
      HOC 2018 Level_7a_authored_hint:
        aquatic7: Bạn có thể sử dụng khối lệnh nếu để giúp bạn thực hiện những ngã rẽ đúng.
      HOC 2018 Level_9b_authored_hint:
        voyage_aquatic_9a: Hãy xem các khối lệnh san hô màu đỏ và màu xanh? Sử dụng chúng như điểm chỉ dẫn để rẽ phải hoặc trái qua các rạn san hô.
      HOC Dance 0_draft_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**
          * Hãy đảm bảo rằng một vũ công xuất hiện trên màn hình.

          *Cấp độ này kết thúc sau 4 nhịp.*
        challenges: |-
          **Thử thách tùy chọn**
          * Chọn một bài hát khác để phát.
          * Chọn một đối tượng khác trông giống nai sừng tấm!
          * Đổi tên vũ công.
      HOC Dance 1_draft_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**
          * Vũ công cần chuyển sang động tác mới sau 4 nhịp.

          *Cấp độ này kết thúc sau 8 nhịp.*
      HOC Dance 2_draft_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Sau 6 nhịp, vũ công cần làm một vũ điệu khác ngoài vũ điệu sau 4 nhịp.

          *Cấp độ này kết thúc sau 12 nhịp.*
      HOC Dance 3_draft_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Bạn cần để làm hiệu ứng nền thay đổi ở thời điểm nhịp thứ bảy của bài hát.

          *Cấp độ này kết thúc sau 10 nhịp.*
        challenges: |-
          **Thách thức phụ**

          Thay đổi hiệu ứng nền ở những thời điểm khác nhau trong bài hát bằng cách liên kết những khối mới theo sự kiện <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"nhịp"</title></block></xml>.
      HOC Dance 4_draft_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Bài nhảy của bạn phải có những động tác khác nhau trong 12 nhịp đầu tiên của bài hát.

          *Cấp độ này kết thúc sau 12 nhịp.*
      HOC Dance 5_draft_authored_hint:
        challenges: |-
          **Thách thức phụ**

          * Thêm vũ công thứ ba (hoặc một số lượng vũ công tùy ý!)
          * Làm cho tất cả các vũ công của bạn thực hiện các động tác khác nhau tại các thời điểm khác nhau trong bài hát.
      HOC Dance 6_draft_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Hai vũ công cần phải có một kích cỡ khác ngoài 100.

          *Cấp độ này kết thúc sau 6 nhịp.*
        challenges: |-
          **Thách thức phụ**

          * Thử nghiệm bằng cách thay đổi các thuộc tính khác (chiều rộng, chiều cao, xoay, v.v.)
      HOC Dance 7_draft_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Thay đổi sắc thái của ít nhất một vũ công.

          *Cấp độ này kết thúc sau 8 nhịp.*
      HOC Dance 8_draft_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Thuộc tính cho hai vũ công trở lên phải thay đổi.

          *Cấp độ này kết thúc sau 8 nhịp.*
      HOC Dance 9_draft_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Thoải mái sáng tạo!

          *Cấp độ này kết thúc sau 8 nhịp.*
      HOC Dance make group_authored_hint:
        validation: |-
          **Làm sao để tôi vượt qua cấp độ này?**

          * Thoải mái sáng tạo!

          *Cấp độ này kết thúc sau 8 nhịp.*
      Harvesting_authored_hint:
        pointer_harvester_test: Tôi có thể sử dụng loại khối lệnh nào để kiểm tra một cái gì đó và quyết định?
      Inspirational Artwork_authored_hint:
        solution: |-
          **Lời giải**
          ![Hình ảnh của Lời Giải]
          (https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      MC Agent Freeplay_authored_hint:
        MC_HOC_2017_13_Cole_a: Hãy thử để Đặc vụ xây dựng vài đường ray cho xe chở quặng để bạn có thể khám phá thế giới!
      MC_HOC_2017_01_Cole_authored_hint:
        MC_HOC_2017_01_Cole_a: Sử dụng các phím mũi tên để di chuyển người chơi vào nhà. Bạn sẽ chiến thắng khi dừng lại tại hình vuông màu cam.
      MC_HOC_2017_01_RETRY_authored_hint:
        MC_HOC_2017_01_RETRY_a: Kéo khối lệnh 'di chuyển về phía trước' từ hộp công cụ tới không gian làm việc, và đặt nó vào vị trí bên dưới khối lệnh 'khi chạy chương trình'.
        MC_HOC_2017_01_RETRY_b: Đừng quên nhấn "Chạy" để kích hoạt các dòng lệnh cho Đặc vụ.
        MC_HOC_2017_01_RETRY_c: Một khi Đặc vụ đã thực hiện hết các dòng lệnh bạn lập trình cho nó, bạn có thể di chuyển người chơi bằng các phím mũi tên!
      MC_HOC_2017_01_RETRY_2019_authored_hint:
        MC_HOC_2017_01_RETRY_a: Kéo khối lệnh 'di chuyển về phía trước' từ hộp công cụ tới không gian làm việc, và đặt nó vào vị trí bên dưới khối lệnh 'khi chạy chương trình'.
        MC_HOC_2017_01_RETRY_b: Đừng quên nhấn "Chạy" để kích hoạt các dòng lệnh cho Đặc vụ.
        MC_HOC_2017_01_RETRY_c: Một khi Đặc vụ đã thực hiện hết các dòng lệnh bạn lập trình cho nó, bạn có thể di chuyển người chơi bằng các phím mũi tên!
      MC_HOC_2017_02_Cole_authored_hint:
        MC_HOC_2017_02_Cole_a: Di chuyển Đặc vụ về phía trước 2 ô để đứng trên tấm áp lực. Như vậy cánh cửa cho người chơi của bạn sẽ được mở ra.
        MC_HOC_2017_02_Cole_b: |-
          Nhấn "Chạy"!

          Bạn có thể chạy dòng mã lệnh ngay cả khi nó chưa đúng. Bạn có thể chạy và khởi động lại mã lệnh hết lần này đến lần khác cho đến khi bạn phát hiện ra sai ở đâu.
        MC_HOC_2017_02_Cole_c: Khi Đặc vụ đã giúp mở cánh cửa, bạn hãy sử dụng phím mũi tên để di chuyển người chơi đến vị trí tấm bản đồ!
        MC_HOC_2017_02_Cole_d: Đảm bảo rằng Đặc vụ đang đi theo đúng con đường được chỉ dẫn trên tấm bản đồ!
      MC_HOC_2017_02_Cole_2019_authored_hint:
        MC_HOC_2017_02_Cole_a: Di chuyển Đặc vụ về phía trước 2 ô để đứng trên tấm áp lực. Như vậy cánh cửa cho người chơi của bạn sẽ được mở ra.
        MC_HOC_2017_02_Cole_b: |-
          Nhấn "Chạy"!

          Bạn có thể chạy dòng mã lệnh ngay cả khi nó chưa đúng. Bạn có thể chạy và khởi động lại mã lệnh hết lần này đến lần khác cho đến khi bạn phát hiện ra sai ở đâu.
        MC_HOC_2017_02_Cole_c: Khi Đặc vụ đã giúp mở cánh cửa, bạn hãy sử dụng phím mũi tên để di chuyển người chơi đến vị trí tấm bản đồ!
        MC_HOC_2017_02_Cole_d: Đảm bảo rằng Đặc vụ đang đi theo đúng con đường được chỉ dẫn trên tấm bản đồ!
      MC_HOC_2017_02_Will_authored_hint:
        MC_HOC_2017_02_Cole_a: Di chuyển Đặc vụ về phía trước 2 ô để đứng trên tấm áp lực. Như vậy cánh cửa cho người chơi của bạn sẽ được mở ra.
        MC_HOC_2017_02_Cole_b: |-
          Nhấn "Chạy Đặc vụ"!

          Bạn có thể chạy dòng mã lệnh ngay cả khi nó chưa đúng. Bạn có thể chạy và khởi động lại mã lệnh hết lần này đến lần khác cho đến khi bạn phát hiện ra sai ở đâu.
        MC_HOC_2017_02_Cole_c: Khi Đặc vụ đã mở được cánh cửa, bạn hãy sử dụng phím mũi tên để di chuyển người chơi đi đến hình vuông màu cam.
      MC_HOC_2017_03_Cole_authored_hint:
        MC_HOC_2017_03_Cole_a: Khi bạn đưa Đặc vụ đi đến tấm áp lực, bạn có thể sử dụng các phím mũi tên để đưa người chơi đi đến vị trí La bàn!
        MC_HOC_2017_03_Cole_b: Mã lệnh này có hơi dài không?  Hãy thử sử dụng vòng lặp 'lặp lại' và tìm hiểu cách làm thế nào để rút gọn các mã lệnh!
      MC_HOC_2017_03_Cole_2019_authored_hint:
        MC_HOC_2017_03_Cole_a: Khi bạn đưa Đặc vụ đi đến tấm áp lực, bạn có thể sử dụng các phím mũi tên để đưa người chơi đi đến vị trí La bàn!
        MC_HOC_2017_03_Cole_b: Mã lệnh này có hơi dài không?  Hãy thử sử dụng vòng lặp 'lặp lại' và tìm hiểu cách làm thế nào để rút gọn các mã lệnh!
      MC_HOC_2017_04POINT5_Cole_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          Qua hai tấm áp lực này thì sẽ mở được đường cho người chơi.

          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_04POINT5_RYAN_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: 'Sử dụng các khối lệnh ''rẽ phải'' để thay đổi hướng của Đặc vụ '
        MC_HOC_2017_04POINT5_RYAN_a: Đặc vụ chỉ cần đi đến tấm áp lực đầu tiên để đưa Alex hoặc Steve đi đến cái rìu.
      MC_HOC_2017_04POINT5_RYAN_2019_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: 'Sử dụng các khối lệnh ''rẽ phải'' để thay đổi hướng của Đặc vụ '
        MC_HOC_2017_04POINT5_RYAN_a: Đặc vụ chỉ cần đi đến tấm áp lực đầu tiên để đưa Alex hoặc Steve đi đến cái rìu.
      MC_HOC_2017_04_Cole_authored_hint:
        MC_HOC_2017_04_Cole_a: Đặc vụ cần phải 'di chuyển về phía trước' 7 lần.  Làm thế nào để thực hiện được bằng cách sử dụng một vòng lặp 'lặp lại'?
        MC_HOC_2017_04_Cole_c: |-
          Nhấn "Chạy"!

          Bạn có thể chạy dòng mã lệnh ngay cả khi nó chưa đúng. Bạn có thể chạy và khởi động lại mã lệnh hết lần này đến lần khác cho đến khi bạn phát hiện ra sai ở đâu.
        MC_HOC_2017_04_Cole_b: Khi Đặc vụ đi đến tấm áp lực, nó sẽ giúp mở cửa cho người chơi.
      MC_HOC_2017_04_Cole_2019_authored_hint:
        MC_HOC_2017_04_Cole_a: Đặc vụ cần phải 'di chuyển về phía trước' 7 lần.  Làm thế nào để thực hiện được bằng cách sử dụng một vòng lặp 'lặp lại'?
        MC_HOC_2017_04_Cole_c: |-
          Nhấn "Chạy"!

          Bạn có thể chạy dòng mã lệnh ngay cả khi nó chưa đúng. Bạn có thể chạy và khởi động lại mã lệnh hết lần này đến lần khác cho đến khi bạn phát hiện ra sai ở đâu.
        MC_HOC_2017_04_Cole_b: Khi Đặc vụ đi đến tấm áp lực, nó sẽ giúp mở cửa cho người chơi.
      MC_HOC_2017_05_Cole_authored_hint:
        MC_HOC_2017_05_Cole_a: Bạn có biết rằng bạn có thể sử dụng nhiều hơn một mã lệnh bên trong một vòng lặp?  Hãy sử dụng các mã lệnh để di chuyển về phía trước ** và ** đặt một tấm ván bên trong vòng lặp 'lặp lại' để hoàn thành câu đố này.
        MC_HOC_2017_05_Cole_b: Đưa đặc vụ qua bên kia sông, vừa đi vừa xây một cây cầu.
      MC_HOC_2017_05_Cole_2019_authored_hint:
        MC_HOC_2017_05_Cole_a: Bạn có biết rằng bạn có thể sử dụng nhiều hơn một mã lệnh bên trong một vòng lặp?  Hãy sử dụng các mã lệnh để di chuyển về phía trước ** và ** đặt một tấm ván bên trong vòng lặp 'lặp lại' để hoàn thành câu đố này.
        MC_HOC_2017_05_Cole_b: Đưa đặc vụ qua bên kia sông, vừa đi vừa xây một cây cầu.
      MC_HOC_2017_05_Josh_authored_hint:
        MC_HOC_2017_05_Cole_a: Bạn có biết rằng bạn có thể sử dụng nhiều hơn một mã lệnh bên trong một vòng lặp?  Hãy sử dụng các mã lệnh để đặt một tấm ván **và** di chuyển về phía trước vào trong vòng lặp 'lặp lại' để hoàn thành câu đố này.
      MC_HOC_2017_06_Cole_authored_hint:
        MC_HOC_2017_06_Cole_a: Vòng lặp này đã chạy bao nhiêu lần?  Vòng lặp này *nên* chạy bao nhiêu lần?
        MC_HOC_2017_06_Cole_b: 'Giúp đỡ Đặc vụ xây dựng một cây cầu để vượt qua dòng nước! '
      MC_HOC_2017_06_Cole_2019_authored_hint:
        MC_HOC_2017_06_Cole_a: Vòng lặp này đã chạy bao nhiêu lần?  Vòng lặp này *nên* chạy bao nhiêu lần?
        MC_HOC_2017_06_Cole_b: 'Giúp đỡ Đặc vụ xây dựng một cây cầu để vượt qua dòng nước! '
      MC_HOC_2017_06_Josh_authored_hint:
        MC_HOC_2017_06_Cole_a: Cố gắng đưa nhiều hơn một mã lệnh vào trong vòng lặp "lặp lại"!
      MC_HOC_2017_07_Cole_authored_hint:
        MC_HOC_2017_07_Cole_c: Tất cả những gì Đặc vụ cần làm là dọn đường tới xe chở quặng.
        MC_HOC_2017_07_Cole_a: Để giải quyết câu đố này, tìm hiểu chức năng 'dọn đường' và sử dụng nó nhiều lần như bạn cần, sử dụng khối lệnh nhỏ màu xanh lá cây 'dọn đường' từ hộp công cụ.
        MC_HOC_2017_07_Cole_b: Hãy thử pha trộn các nhóm lệnh chức năng với các lệnh khác từ hộp công cụ để giúp bạn giải quyết câu đố này.
      MC_HOC_2017_07_Cole_2019_authored_hint:
        MC_HOC_2017_07_Cole_c: Tất cả những gì Đặc vụ cần làm là dọn đường tới xe chở quặng.
        MC_HOC_2017_07_Cole_a: Để giải quyết câu đố này, tìm hiểu chức năng 'dọn đường' và sử dụng nó nhiều lần như bạn cần, sử dụng khối lệnh nhỏ màu xanh lá cây 'dọn đường' từ hộp công cụ.
        MC_HOC_2017_07_Cole_b: Hãy thử pha trộn các nhóm lệnh chức năng với các lệnh khác từ hộp công cụ để giúp bạn giải quyết câu đố này.
      MC_HOC_2017_08_RY_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          Nhấn "Chạy Đặc vụ"!

          Bạn có thể chạy dòng mã lệnh ngay cả khi nó chưa đúng. Chạy và khởi động lại mã lệnh hết lần này đến lần khác cho đến khi bạn phát hiện ra sai ở đâu.
        MC_HOC_2017_08_RY_b: Có rất nhiều cách để giải quyết câu đố này.  Hãy thử một vài cách!
      MC_HOC_2017_08_Will_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          Nhấn "Chạy Đặc vụ"!

          Bạn có thể chạy dòng mã lệnh ngay cả khi nó chưa đúng. Chạy và khởi động lại mã lệnh hết lần này đến lần khác cho đến khi bạn phát hiện ra sai ở đâu.
        MC_HOC_2017_08_RY_b: Có rất nhiều cách để giải quyết câu đố này.  Hãy thử một vài cách!
      MC_HOC_2017_10_Cole_authored_hint:
        MC_HOC_2017_10_Cole_a: Sử dụng nhóm lệnh chức năng để giải quyết câu đố này dễ dàng hơn!
      MC_HOC_2017_10_RETRY_authored_hint:
        MC_HOC_2017_10_Cole_b: Không biết đi đâu?  Hãy tìm các dòng chấm!
        MC_HOC_2017_10_Cole_a: Sử dụng nhóm lệnh chức năng để giải quyết câu đố này dễ dàng hơn!
      MC_HOC_2017_10_RETRY_2019_authored_hint:
        MC_HOC_2017_10_Cole_b: Không biết đi đâu?  Hãy tìm các dòng chấm!
        MC_HOC_2017_10_Cole_a: Sử dụng nhóm lệnh chức năng để giải quyết câu đố này dễ dàng hơn!
      MC_HOC_2017_13_Cole_authored_hint:
        MC_HOC_2017_13_Cole_a: Hãy thử để Đặc vụ xây một vài chiếc cầu để Alex hoặc Steve có thể đi bộ xung quanh các cạnh của bản đồ.
      MC_HOC_2017_4.5v2_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          Qua hai tấm áp lực này thì sẽ mở được đường cho người chơi.

          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_Ali_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          Nhấn "Chạy"!

          Bạn có thể chạy dòng mã lệnh ngay cả khi nó chưa đúng. Bạn có thể chạy và khởi động lại mã lệnh hết lần này đến lần khác cho đến khi bạn phát hiện ra sai ở đâu.
        MC_HOC_2017_08_RY_b: Có rất nhiều cách để giải quyết câu đố này.  Hãy thử một vài cách!
        MC_HOC_2017_08_RY_c: Hãy thử đi theo các đường chấm, đó là đường đơn giản nhất để qua được dung nham.
      MC_HOC_2017_Ali_2019_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          Nhấn "Chạy"!

          Bạn có thể chạy dòng mã lệnh ngay cả khi nó chưa đúng. Bạn có thể chạy và khởi động lại mã lệnh hết lần này đến lần khác cho đến khi bạn phát hiện ra sai ở đâu.
        MC_HOC_2017_08_RY_b: Có rất nhiều cách để giải quyết câu đố này.  Hãy thử một vài cách!
        MC_HOC_2017_08_RY_c: Hãy thử đi theo các đường chấm, đó là đường đơn giản nhất để qua được dung nham.
      MC_HOC_2017_FP20x20_authored_hint:
        MC_HOC_2017_13_Cole_a: Hãy thử để Đặc vụ xây dựng vài đường ray cho xe chở quặng để bạn có thể khám phá thế giới!
      MC_HOC_2017_FP20x20_2019_authored_hint:
        MC_HOC_2017_13_Cole_a: Hãy thử để Đặc vụ xây dựng vài đường ray cho xe chở quặng để bạn có thể khám phá thế giới!
      New Minecraft Hero Project_authored_hint:
        MC_HOC_2017_13_Cole_a: Hãy thử để Đặc vụ xây một vài chiếc cầu để Alex hoặc Steve có thể đi bộ xung quanh các cạnh của bản đồ.
      course3_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      course3_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      courseA_maze_ramp2_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2a_2018_authored_hint:
        '1': Snap both `East` blocks to the bottom of the `when run` block.
      courseA_maze_ramp3a_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3b_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_seq5_2018_authored_hint:
        '1': Try writing down the steps on paper to find a solution!
        '2': |-
          You will need to use this block:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5a_2018_authored_hint:
        '1': Say the steps out loud and see if it helps you figure out the answer.
      courseB_Scrat_ramp1_2018_authored_hint:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have been fully clicked together, then click "Run" again.
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!
      courseB_Scrat_ramp2_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3b_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_maze_seq8_authored_hint:
        courseB_maze_seq8_b: Có hai cách để giải câu đố này!
      courseC19_playLab_EOC2_authored_hint:
        courseE_playLab_scaffold1_c: Khi bạn hoàn thành, bạn có thể di chuyển nhân vật anh hùng của bạn bằng các phím mũi tên!
      courseC_maze_programming6_authored_hint:
        courseC_maze_programming6_a: Có hai cách để giải câu đố này!
      courseC_maze_programming6_2018_authored_hint:
        courseC_maze_programming6_a: Có hai cách để giải câu đố này!
      courseC_maze_programming6_2019_authored_hint:
        courseC_maze_programming6_a: Có hai cách để giải câu đố này!
      courseD_artist_5_2018_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to switch their angles, too!
      courseD_artist_5_2018_2019_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to switch their angles, too!
      courseD_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |-
          Chương trình của bạn cần:
          - Dùng hàm\
          - Tiến về phía trước 100 + 75 điểm ảnh
          - Dùng hàm
      courseD_artist_nestedLoops3_authored_hint:
        courseD_artist_nestedLoops3_a: "Thử dùng khối `nhảy về phía trước` để đi từ hình vuông này đến điểm bạn bắt đầu hình vuông tiếp theo. \n\nNếu các hình vuông cao 20 điểm ảnh và chúng cách nhau 20 điểm ảnh, bạn sẽ cần nhảy bao xa?"
      courseD_artist_nestedLoops3_2018_authored_hint:
        courseD_artist_nestedLoops3_a: "Thử dùng khối `nhảy về phía trước` để đi từ hình vuông này đến điểm bạn bắt đầu hình vuông tiếp theo. \n\nNếu các hình vuông cao 20 điểm ảnh và chúng cách nhau 20 điểm ảnh, bạn sẽ cần nhảy bao xa?"
      courseD_artist_nestedLoops3_2019_authored_hint:
        courseD_artist_nestedLoops3_a: "Thử dùng khối `nhảy về phía trước` để đi từ hình vuông này đến điểm bạn bắt đầu hình vuông tiếp theo. \n\nNếu các hình vuông cao 20 điểm ảnh và chúng cách nhau 20 điểm ảnh, bạn sẽ cần nhảy bao xa?"
      courseD_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: Có hai cách để giải câu đố này!
      courseD_scrat_ramp7_authored_hint:
        courseD_scrat_programming6_a: Có hai cách để giải câu đố này!
      courseD_scrat_ramp7_2018_authored_hint:
        courseD_scrat_programming6_a: Có hai cách để giải câu đố này!
      courseE_artist_functions1_authored_hint:
        courseE_artist_functions1_a: Mỗi hình vuông có cạnh dài 100 điểm ảnh, điều đó có nghĩa là bạn cần đi về phía trước 175 điểm ảnh trước khi vẽ hình vuông thứ hai.
        courseE_artist_functions1_b: Bạn có thể vẽ các nét trùng nhau để làm cái kính của bạn.
      courseE_artist_functions1_2018_authored_hint:
        courseE_artist_functions1_a: Mỗi hình vuông có cạnh dài 100 điểm ảnh, điều đó có nghĩa là bạn cần đi về phía trước 175 điểm ảnh trước khi vẽ hình vuông thứ hai.
        courseE_artist_functions1_b: Bạn có thể vẽ các nét trùng nhau để làm cái kính của bạn.
      courseE_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |-
          Chương trình của bạn cần:
          - Dùng hàm\
          - Tiến về phía trước 100 + 75 điểm ảnh
          - Dùng hàm
      courseE_bee_functions6_authored_hint:
        courseE_bee_functions6_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions6_2018_authored_hint:
        courseE_bee_functions6_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions6test_authored_hint:
        courseE_bee_functions6_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions7_authored_hint:
        courseE_bee_functions7_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
        courseE_bee_functions7_b: |-
          Nhớ xây dựng đoạn mã của bạn bên trong khối hàm màu xanh lá cây.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions7_2018_authored_hint:
        courseE_bee_functions7_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
        courseE_bee_functions7_b: |-
          Nhớ xây dựng đoạn mã của bạn bên trong khối hàm màu xanh lá cây.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      courseE_bee_functions_challenge1_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      courseE_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      courseE_bee_functions_challenge2_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      courseE_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: Có hai cách để giải câu đố này!
      courseE_maze_ramp6_2018_authored_hint:
        courseC_maze_programming6_a: Có hai cách để giải câu đố này!
      courseE_playLab_scaffold2_authored_hint:
        courseE_playLab_scaffold1_c: Khi bạn hoàn thành, bạn có thể di chuyển nhân vật anh hùng của bạn bằng các phím mũi tên!
      courseE_playLab_scaffold2_2018_authored_hint:
        courseE_playLab_scaffold1_c: Khi bạn hoàn thành, bạn có thể di chuyển nhân vật anh hùng của bạn bằng các phím mũi tên!
      courseF_bee_functions6_2018_authored_hint:
        courseF_bee_functions6_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseF_bee_functions8a_authored_hint:
        courseF_bee_functions8a_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      courseF_bee_functions8a_2018_authored_hint:
        courseF_bee_functions8a_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      courseF_bee_functionsPre7_authored_hint:
        courseF_bee_functions7_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      courseF_bee_functionsPre7_2018_authored_hint:
        courseF_bee_functions7_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      courseF_bee_functions_challenge2_recursion_authored_hint:
        courseF_bee_functions8a_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
      courseF_maze_ramp6_authored_hint:
        courseF_maze_ramp6_a: Có hai cách để giải câu đố này!
      courseF_maze_ramp6_2018_authored_hint:
        courseF_maze_ramp6_a: Có hai cách để giải câu đố này!
      grade2_CaringForNewPet_4_authored_hint:
        2-3_Maze_6_a: Có hai cách để giải câu đố này!
      grade2_MakeDogTag_1_authored_hint:
        2-3_Artist_1_new_a: Nếu bạn sử dụng khối lệnh để tôi `di chuyển về phía trước 100 pixel`, tôi sẽ tự động vẽ một đường thẳng.
        2-3_Artist_1_new_b: Gặp khó khăn khi rẽ ở góc? Hãy dùng block `rẽ phải 90 độ`.
      grade2_MakeDogTag_9_authored_hint:
        2-3_Artist_Loops_New_11_b: Khối rẽ mới của bạn nên nằm ở phần **cuối** của đoạn mã bên trong vòng lặp.
      grade2_PuppyLoops_10_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          Hình của tôi đã lặp lại bao nhiêu lần?

          Hình đó *cần* lặp lại bao nhiêu lần?

          Bạn có thể thay đổi điều đó ở đâu trong chương trình?
      grade2_PuppyLoops_8_authored_hint:
        2-3_Artist_Debugging_2_a: 'Gợi ý: Cứ mỗi ria mèo là 75 độ dài pixel.'
      grade2_PuppyLoops_9_authored_hint:
        2-3_Artist_Debugging_7_a: Chuyện gì sẽ xảy ra nếu họa sĩ di chuyển hoặc nhảy về sau khi ông vẽ nét đầu tiên?
      grade3_Conditionals_11_authored_hint:
        2-3_Bee_Conditionals_14_a: Gặp khó khăn trong việc tìm cách đặt các khối?  Thử coi bông hoa đỏ giống hệt bông hoa tím xem!
        2-3_Bee_Conditionals_14_b: Nếu bông hoa đỏ có màu tím, bạn có thể tìm ra cách dùng thêm một vòng lặp để giảm số khối trong mã không?
      grade3_Conditionals_12_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Nhớ rằng: Những bông hoa tím có 0 hoặc 1 mật hoa và nó có thể thay đổi mỗi làn bạn chạy chương trình.'
      grade3_Conditionals_2_authored_hint:
        2-3_Bee_Conditionals_3_a: Đoạn mã sẽ ngắn nhất khi bạn dùng một vòng lặp mỗi khi bạn tiến lên, một vòng lặp khác để thu hoạch mật hoa, và một cái nữa để làm mật ong.
      grade3_Conditionals_4_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Nhớ rằng: Những bông hoa tím thay đổi giữa 0 và 1 mật hoa khi bạn chạy chương trình!'
      grade3_Conditionals_TeacherIDo_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Nhớ rằng: Những bông hoa tím thay đổi giữa 0 và 1 mật hoa khi bạn chạy chương trình!'
      grade3_Debugging_1_authored_hint:
        2-3_Bee_Debugging_1_a: Một khi bạn tìm ra và sửa được khối sai, bạn có nhìn thấy mẫu nào mà có thể thu gọn được dùng vòng lặp không?
      grade3_Debugging_TeacherIDo_authored_hint:
        2-3_Bee_Debugging_4_a: Có chỗ nào mà con ong làm điều gì đó vô lý không? Điều gì xảy ra khi bạn đổi khối đó?
      grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Bạn cần có năm khối bên trong vòng lặp của bạn.
      grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Nếu bạn không thể nhận ra các khối để bỏ vào 'lặp lại' ngay lập tức, hãy bắt đầu bằng cách viết ra mã của mỗi bước và tìm một mô hình chung.
      grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Nếu bạn không biết cái gì cần đi vào vòng lặp 'lặp lại', hãy thử kéo từng khối mội ra và xem nếu bạn có thể tìm ra một mô hình chung.
        2-3_Bee_Loops_6_b: Phải có 6 khối bên trong vòng lặp 'lặp lại' của bạn khi bạn kết thúc.
      grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Bạn sẽ cần hai vòng lặp khác nhau, một cái sau cái còn lại.
      grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: Hành động đầu tiên sẽ là rẽ thay vì di chuyển.
        2-3_Bee_Loops_7_b: 'vòng lặp'
      grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: Hành động đầu tiên sẽ là rẽ thay vì di chuyển.
        2-3_Bee_Loops_4A_b: Phần cuối của chương trình có thể được kết thúc bằng cách viết mã ở phần cuối chương trình, bên ngoài vòng lặp của bạn.
        2-3_Bee_Loops_4A_c: Nếu bạn không thể nhận ra những vòng lặp, hãy thử viết mã theo cách dài trước, sau đó xem bạn có thể kết hợp mã lại thành một vòng lặp 'lặp lại' ở cuối.
      grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Bạn cần có bốn khối bên trong vòng lặp của bạn.
      grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Bạn cần có 6 khối bên trong vòng lặp.
      grade4_artist_functions1_authored_hint:
        2-3_Artist_Functions_1_a: Mỗi hình vuông có cạnh dài 100 điểm ảnh, điều đó có nghĩa là bạn cần đi về phía trước 175 điểm ảnh trước khi vẽ hình vuông thứ hai.
        2-3_Artist_Functions_1_b: Bạn có thể vẽ các nét trùng nhau để làm cái kính của bạn.
      grade4_artist_functions2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          Chương trình của bạn cần:
          - Dùng hàm\
          - Tiến về phía trước 100 + 75 điểm ảnh
          - Dùng hàm
      grade4_bee_functions7_authored_hint:
        2-3_Bee_Functions_8_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      grade4_bee_functions8_authored_hint:
        2-3_Bee_Functions_8_a: "Nếu câu đố có vẻ khó khăn, thử xây dựng hàm của bạn từng chút một. \n\nThêm vài khối, rồi thử chúng. Thêm nhiều hơn, rồi thử lại.  Sẽ có lúc bạn hoàn thành nó!"
        2-3_Bee_Functions_8_b: |-
          Nhớ xây dựng đoạn mã của bạn bên trong khối hàm màu xanh lá cây.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      grade4_review_artist1_authored_hint:
        2-3_Artist_1_new_a: Nếu bạn sử dụng khối lệnh để tôi `di chuyển về phía trước 100 pixel`, tôi sẽ tự động vẽ một đường thẳng.
        2-3_Artist_1_new_b: Gặp khó khăn khi rẽ ở góc? Hãy dùng block `rẽ phải 90 độ`.
      grade4_review_artist2_authored_hint:
        2-3_Artist_6_a: 'Để tạo những góc nhỏ này, bạn cần xoay *xa hơn* mỗi lần so với lúc bạn xoay hình vuông.   '
        2-3_Artist_6_b: Vì tôi đã hướng về bên phải, sẽ dễ hơn khi bắt đầu di chuyển về phía trước, sau đó quẹo trái để tạo thành hình tam giác.
        2-3_Artist_6_c: Mỗi cạnh của hình tam giác có chiều dài tương tự như mỗi cạnh của hình vuông...100 pixels!
      grade4_review_bee1_authored_hint:
        2-3_Bee_Loops_3B_a: Bạn sẽ cần hai vòng lặp khác nhau, một cái sau cái còn lại.
      grade4_review_bee2_authored_hint:
        2-3_Bee_Loops_3_a: Bạn cần có 6 khối bên trong vòng lặp.
      grade4_review_bee3_authored_hint:
        2-3_Bee_Loops_4_a: Bạn cần có năm khối bên trong vòng lặp của bạn.
      level 'grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Bạn cần có năm khối bên trong vòng lặp của bạn.
      level 'grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Nếu bạn không thể nhận ra các khối để bỏ vào 'lặp lại' ngay lập tức, hãy bắt đầu bằng cách viết ra mã của mỗi bước và tìm một mô hình chung.
      level 'grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Nếu bạn không biết cái gì cần đi vào vòng lặp 'lặp lại', hãy thử kéo từng khối mội ra và xem nếu bạn có thể tìm ra một mô hình chung.
        2-3_Bee_Loops_6_b: Phải có 6 khối bên trong vòng lặp 'lặp lại' của bạn khi bạn kết thúc.
      level 'grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Bạn sẽ cần hai vòng lặp khác nhau, một cái sau cái còn lại.
      level 'grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: Hành động đầu tiên sẽ là rẽ thay vì di chuyển.
        2-3_Bee_Loops_7_b: 'vòng lặp'
      level 'grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: Hành động đầu tiên sẽ là rẽ thay vì di chuyển.
        2-3_Bee_Loops_4A_b: Phần cuối của chương trình có thể được kết thúc bằng cách viết mã ở phần cuối chương trình, bên ngoài vòng lặp của bạn.
        2-3_Bee_Loops_4A_c: Nếu bạn không thể nhận ra những vòng lặp, hãy thử viết mã theo cách dài trước, sau đó xem bạn có thể kết hợp mã lại thành một vòng lặp 'lặp lại' ở cuối.
      level 'grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Bạn cần có bốn khối bên trong vòng lặp của bạn.
      level 'grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Bạn cần có 6 khối bên trong vòng lặp.
