ja:
  data:
    markdown_instructions:
      2-3 Artist 1 new_markdown_instruction: "こんにちは、わたしはアーティストです。あなたが書くコードをもとに、わたしはほとんどどんなものでも描くことができます。いくつかのブロックを使って、画像（がぞう）の中の灰色（はいいろ）のラインの上をなぞるようにしてください。(各ラインの長さは 100 ピクセル)\\r\n\\r\n"
      2-3 Artist 11_markdown_instruction: "一辺（いっぺん）が 100 ピクセルの八角形（はちかくけい）を作り、\n 一時停止（いちじていし）の標識（ひょうしき）に枠（わく）を付けましょう。"
      2-3 Artist 12_markdown_instruction: "円（えん）を描いて目玉（めだま）を完成（かんせい）させよう！\n\\r\n\\r\nアーティストが各ループごとに 1 度ずつ回転（かいてん）するとなると、円（えん）を描くには、そのコードを何回（なんかい）繰り返す必要がありますか？"
      2-3 Artist 2 new_markdown_instruction: "この家（いえ）の壁（かべ）は、未完成（みかんせい）です。\nそれぞれの面が 100 であるべきなのに、未完成の壁は 50 しかありません。 壁を完成させましょう。"
      2-3 Artist 3.4_markdown_instruction: "ジャンプのブロックを使うと、線をかかずに絵かきさんを動かします。\n「ジャンプ」と「前へ動く」の両方のブロックを使って、点線をかいてみましょう。"
      2-3 Artist 3new_markdown_instruction: "赤（あか）い帽子（ぼうし）の高（たか）さは 100 ピクセルです。\nこれよりも 70 ピクセル低（ひく）い、黒（くろ）い帽子を完成（かんせい）させてください。\\r\n\\r\n*(備考: 各帽子の幅は 50 ピクセルです。)*"
      2-3 Artist 4_markdown_instruction: この猫のために、家を完成させましょう。
      2-3 Artist 6_markdown_instruction: "この家（いえ）には屋根（やね）が必要（ひつよう）です！三角形（さんかくけい）を描きましょう。 \\r\n\\r\nヒント:\n3 辺（へん）の長さがすべて同（おな）じです。\\r\n\\r\n<img src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\"\nwidth=\"300\"/>"
      2-3 Artist 7_markdown_instruction: "こどもたちがみんなが外（そと）を見れるように、\n学校（がっこう）の残（のこ）りの窓（まど）をすべて完成（かんせい）させましょう。\\r\n\\r\nそれぞれの正方形（せいほうけい）の窓の辺（へん）の長（なが）さは 25 ピクセルです。"
      2-3 Artist 8_markdown_instruction: "納屋（なや）を作りましょう！\\r\n\\r\n納屋を 2 つの同じ大きさの正方形（せいほうけい）に分割（ぶんかつ）して、\nそれぞれの動物（どうぶつ）のための部屋（へや）を作りましょう。 \\r\n\\r\nヒント:\n長方形（ちょうほうけい）の幅（はば）は 200 ピクセルで、高さは 100 ピクセルです。 \\r\n\\r\nこのパズルを解（と）く方法（ほうほう）はたくさんあります。"
      2-3 Artist 9 NEW_markdown_instruction: この凧（たこ）を完成させてください
      2-3 Artist 9 REPLACEMENT_markdown_instruction: これらの階段を書き終えてください！
      2-3 Artist 9_markdown_instruction: この凧（たこ）を完成させてください
      2-3 Artist Assessment 1_markdown_instruction: "**課題:** 最後の歯を描きあげましょう。\n幅 25 ピクセル、高さ 25 ピクセルです。"
      2-3 Artist Debugging 1_markdown_instruction: "この帽子（ぼうし）の幅（はば）は、\n50 ピクセルであるべきです。\\r\n直せますか？\\r\n\\r\n<br/>\\r\n"
      2-3 Artist Debugging 10_markdown_instruction: "ゲームコントローラの十字キー\nが細（ほそ）すぎます。\\r\n\\r\n幅を 10 ピクセルぶん広げよう。\\r\n\\r\nまずコードを実行（じっこう）して、\nなにがまちがっているか確認（かくにん）しよう。"
      2-3 Artist Debugging 11_markdown_instruction: |-
        綺麗な雪結晶を完成させたいんだ。リピートを何回使う必要があるだろう？
      2-3 Artist Debugging 2_markdown_instruction: "ねこのヒゲのコードは\nまちがっています。\\r\n\\r\nヒゲの長さがすべておなじになるように、このコードをかきなおしてください。"
      2-3 Artist Debugging 3_markdown_instruction: "ボートに穴（あな）があいた！\\r\n\\r\nなんとかやっていくには、\nなにを直（なお）せばいい？"
      2-3 Artist Debugging 5_markdown_instruction: "脚（あし）と足（あしくびからした）の\nコードがまちがっています。\\r\n\\r\nなおしましょう。"
      2-3 Artist Debugging 6_markdown_instruction: |-
        いっぽん脚（あし）のかけている
        イスにすわっているみたい！\r
        \r
        コードをへんしゅうして、さいごの脚をかこう。
      2-3 Artist Debugging 7_markdown_instruction: |-
        C が前後逆（ぜんごぎゃく）に
        描かれているよ！\r
        \r
        また C みたいに見えるようにできるかな？
      2-3 Artist Debugging 8_markdown_instruction: |-
        先生がわたしに、はじめたことを
        おわらせるように言ってるよ！\r
        \r
        かざぐるまを完成（かんせい）させるのを手伝って。
        なにがまちがっているか、わかる？
      2-3 Artist Debugging 9_markdown_instruction: |-
        あれ・・・？\r
        \r
        この幹のコードが違います。どうすれば芸術家は幹を正しくたどれるでしょうか？
      2-3 Artist Debugging Assessment 1_markdown_instruction: "**課題**\\r\nどうしてこの四角形は、すべての辺で75ピクセルも小さくなっているのでしょう？\\r\n\\r\nこのコードはどこがおかしいでしょうか？"
      2-3 Artist Free Play_markdown_instruction: なんでもすきなものをかいてね。
      2-3 Artist Functions 1 a_markdown_instruction: "「ボクはゾンビのアーティストだよ！ボクは絵を書くのが好きなんだ！」\n\\r\n\\r\nゾンビがメガネを描くのを手伝ってあげましょう。\\r\n\\r\nメガネの間にあるブリッジは、四角形の幅よりも25ピクセル短く、100ピクセルです。\\r\n\\r\n"
      2-3 Artist Functions 1_markdown_instruction: "「ボクはゾンビのアーティストだよ！ボクは絵を書くのが好きなんだ！」\n\\r\n\\r\nゾンビがメガネを描くのを手伝ってあげましょう。\\r\n\\r\nメガネの間にあるブリッジは、四角形の幅よりも25ピクセル短く、100ピクセルです。\\r\n\\r\n"
      2-3 Artist Functions 10_markdown_instruction: "**フリープレイ** ２つの関数があります。\nそのうちのひとつで大きな歯車、もうひとつで小さな歯車を描いてみましょう。\\r\n\\r\n２つの歯車を機械の中に描いて使いましょう！"
      2-3 Artist Functions 11 a_markdown_instruction: "「draw a square(四角形を描く)」関数は、「draw a hexagon(六角形を描く)」関数に名前が変わりましたが、まだ四角形しか出てきません！ \\r\n\\r\n「draw a hexagon」関数を書き換えて、50ピクセルの辺を持つ六角形を描くようにできるでしょうか？\n\\r\n\\r\n新しく関数を作って絵を描いてみましょう！"
      2-3 Artist Functions 11.5_markdown_instruction: "ここに、同じ「六角形を描く」関数があります。\\r\n\\r\nメインプログラムを6回ループすると、何が起こるでしょう？\nヒント: ループするたび、60度回転します。"
      2-3 Artist Functions 11_markdown_instruction: "「draw a square(四角形を描く)」関数は、「draw a hexagon(六角形を描く)」関数に名前が変わりましたが、まだ四角形しか出てきません！ \\r\n\\r\n「draw a hexagon」関数を書き換えて、50ピクセルの辺を持つ六角形を描くようにできるでしょうか？\n\\r\n\\r\n新しく関数を作って絵を描いてみましょう！"
      2-3 Artist Functions 12 Mike_markdown_instruction: "関数は、複雑なものを何回も描くのにうってつけです。\"draw a flower\" という関数を使って、花壇の残りの花を描いてください。（ヒント：植物は 100 ビクセルずつ離れています）"
      2-3 Artist Functions 12 a_markdown_instruction: "関数は、複雑なものを何回も描くのにうってつけです。\"draw a flower\" という関数を使って、花壇の残りの花を描いてください。（ヒント：植物は 100 ビクセルずつ離れています）"
      2-3 Artist Functions 12_markdown_instruction: "関数は、複雑なモノを何回も描くときにはとても便利です。\\r\n\\r\n「draw a flower」関数を使って、花壇の残りに花を描きましょう。\\r\n植物はすべて100ピクセル離れています。"
      2-3 Artist Functions 2_markdown_instruction: "関数を使えば新しいブロックを作ることができます！ここでは、正方形を描くためのブロックを \"draw a square\" という名前の関数の中に移動しました。\"draw a square\" を使って、メガネを作ってみましょう。正方形と正方形の間は 75 ピクセル空いています。"
      2-3 Artist Functions 3_markdown_instruction: "正方形の一辺の長さが 115 ピクセルになるように関数の中身を変えて、もっと大きなメガネを描いてください。今回は、正方形と正方形の間は 45 ピクセルです。"
      2-3 Artist Functions 4_markdown_instruction: この 3 つの正方形を「繰り返し」のブロックを使って描いてみましょう。
      2-3 Artist Loops 1_markdown_instruction: 各辺が 100 ピクセルの六角形を描いてセルを完成させましょう。向きを帰るときは、60 度だけ回転させれば大丈夫ですよ！
      2-3 Artist Loops 2_markdown_instruction: 繰り返しブロックを使って、細胞に殻をつくってあげよう。
      2-3 Artist Loops New 10_markdown_instruction: たくさんの V をひとつにつなぎましょう。V 自体はループの中で描きましょう。
      2-3 Artist Loops New 12_markdown_instruction: '1辺100ピクセルのダイアモンドをえがきましょう。 '
      2-3 Artist Loops New 13_markdown_instruction: "今度はループを使って、ダイヤモンドを 3 回描きましょう。"
      2-3 Artist Loops New 2_markdown_instruction: |-
        正方形を描くために使ったコードがここにあります。もし、繰り返しのブロックを使って、このコードを 4 回実行すると何が起きるでしょうか。
      2-3 Artist Loops New 9_markdown_instruction: それぞれの辺が50ピクセルのシンプルな「V」の文字を描き、矢印を完成させましょう。
      2-3 Artist Nested Loops 10_markdown_instruction: パターンを完成させるためにコードを12回繰り返しましょう。
      2-3 Artist Nested Loops 11_markdown_instruction: このコードを4回ループして絵を完成させましょう。円を描くごとに90度回転してください。
      2-3 Artist Nested Loops 12_markdown_instruction: このコードを12回ループしてうずまきを完成させましょう。
      2-3 Artist Nested Loops 2_markdown_instruction: "三角形を6回繰り返しましょう。それぞれの三角形を描くごとに、60度角度を変える必要があります。"
      2-3 Artist Nested Loops 4_markdown_instruction: "このひし形を 12 回ループして花を描いてみましょう。ヒント：12 個のひし形は、12 個の三角形を描いた時と同じ方法で描けるよ。各図形の後は何度ずつ向きを変える必要があるかな？"
      2-3 Artist Nested Loops 5_markdown_instruction: "このビルの窓を入れ子のループを使って完成させましょう。窓は一辺の長さが20ピクセルで、間隔も20ピクセルです。"
      2-3 Artist Nested Loops 7_markdown_instruction: "三角形を10回ループして太陽を描きましょう。三角形を1つ描くごとに移動して回転する必要があります。一周分の角度を三角形の個数で割ると、何度回転すればいいかがわかります。"
      2-3 Artist Nested Loops 8_markdown_instruction: "絵に草を足してみましょう。\n草を50ピクセルずつ離して描いてください。"
      2-3 Artist Nested Loops 9_markdown_instruction: "最後に花を描いて完成です。ダイヤモンドを12回繰り返すと花が描けます。"
      2-3 Artist Nested Loops Free Play_markdown_instruction: 自由に遊んでください。入れ子のループを使って好きなものを描こう。
      2-3 Bee Conditionals 11_markdown_instruction: "蜜のある花から蜜を集めましょう。"
      2-3 Bee Conditionals 13_markdown_instruction: |-
        蜜を集めてはちみつを作ってみましょう。ヒント：赤い花で「もし蜜があれば」を条件にするとどうなるでしょうか。ループを使ってみましょう。
      2-3 Bee Conditionals 15_markdown_instruction: "4つ全部の花からミツを集めてください。"
      2-3 Bee Conditionals 3_markdown_instruction: "花の蜜を全部集めてはちみつを作るので手伝ってください。ループを使ってみましょう。"
      2-3 Bee Debugging 3_markdown_instruction: |-
        このブロックが気になります。蜜を集めてはちみつを作るためにエラーを直してください。
      2-3 Bee Debugging 6_markdown_instruction: |-
        このブロックが気になります。蜜を集めてはちみつを作るためにエラーを直してください。
      2-3 Bee Debugging 9_markdown_instruction: |-
        このブロックが気になります。蜜を集めてはちみつを作るためにエラーを直してください。
      2-3 Bee Functions 10_markdown_instruction: "紫の花には、蜜が 1 か 0 あります。蜜のある紫の花からのみ蜜を集めるため関数を作りましょう。"
      2-3 Bee Functions 2_markdown_instruction: "ひとつの作業を行うひとまとまりのコードを関数といいます。\"get 5\" という関数を使うと、一度に蜜を 5 とることができます。ループを使って、ブロックの数がなるべく少なくしてください。"
      2-3 Bee Functions 4_markdown_instruction: "「動いてみつを集める」の関数は、ハチを回転させ、蜜を集め、スタート地点までハチを戻します。この関数を使って蜜を全部集めましょう。"
      2-3 Bee Loops 1_markdown_instruction: |-
        花には蜜が 1 ユニットずつあります。蜜を花から集めましょう。 
      2-3 Bee Loops 3A_markdown_instruction: 全てのはなのみつを集めるのに繰り返しブロックを使ってみましょう。
      2-3 Bee Loops 3B_markdown_instruction: 今度は新しい繰り返しブロックを利用して、全てのはなのみつを集めてはちみつを作ってみましょう。
      2-3 Bee Loops 4A_markdown_instruction: "このブロックの組み合せを３回繰り返したらどうなるでしょうか？\n最後にはちみつを作るのを忘れないでね。"
      2-3 Bee Loops 8_markdown_instruction: "紫のお花のみつの量はわかりません。\n以下の間ブロックを使って全てのはなのみつを集めましょう。　この繰り返しは条件が真になるまで続きます。この場合ははなのみつ＞0です。"
      2-3 Maze 15_markdown_instruction: ループを2つ使って少ない数のブロックでブタを捕まえてみよう。
      2-3 Maze Loops 18_markdown_instruction: "ひまわりまで行きたい！"
      4-5 Artist 10_markdown_instruction: '「実行」を押してコードを走らせます。それをくりかえして、図を完成させます。毎回ちがう色になります。'
      4-5 Artist 2_markdown_instruction: このコードをくりかえして、四角を完成させることができますか？
      4-5 Artist 5_markdown_instruction: どの角度をつかいますか？
      4-5 Artist 6_markdown_instruction: 正三角形のそれぞれの角度は 60 度です。辺の長さは 200 ピクセルです。図を完成させます。
      4-5 Artist Free Draw 1_markdown_instruction: 自由にお絵かき！思いつくままに図をかいてみましょう。
      4-5 Artist Patterns 1_markdown_instruction: |-
        ループを使って各辺 20 ピクセルの正方形を描けるかな？
      4-5 Artist Patterns 12_markdown_instruction: "繰り返しの部分をコピーして、右ではなく左に回るようにしてみてください。何が起きるでしょうか。これを繰り返して波線を描いてみましょう。"
      4-5 Artist Patterns 13_markdown_instruction: "全体を 4 回ループして、額を作りましょう。角の部分に注意してください。ただ 90 度回ればいいわけではありません！3 度回るという操作を 60 回繰り返すと半円になります。このコードのどの部分を使えば、丸い角の部分（円の 4 分の 1）が描けるでしょうか。"
      4-5 Artist Patterns 3_markdown_instruction: "では次のレベルに進みましょう！\n入れ子のくりかえしで、この図形を書いて下さい。\n横一列を書き終えたら、アーティストのいちをもどして、それから次の一列を書くようにします。\nこれらのブロックたちの、どれかを、くりかえしで使います。"
      4-5 Artist Patterns 8_markdown_instruction: ループを使って、40ピクセルの辺と60度の角を持つ6角形を書きましょう。
      4-5 Artist Patterns 9_markdown_instruction: "コードを 3 回繰り返して、列全体を描きましょう。ヒント: 六角形の左端の頂点から右端の頂点までの幅は 80 ピクセルです。"
      4-5 Artist Patterns Free Play_markdown_instruction: 自由時間です。オリジナルのパターンを作ってみましょう！
      4-5 Bee Conditionals 2_markdown_instruction: "ハチはいま蜜だけを探しています。蜜を集めようとする前に、それが花かどうかを確認しましょう。"
      4-5 Bee Conditionals 5_markdown_instruction: |-
        ？の下には花か蜂の巣があります。「もし 実行/他」ブロックを使って、花なら蜜を集め、他 (つまり蜂の巣) ならハチミツを作りましょう。
      4-5 Bee Conditionals 6_markdown_instruction: "この紫の花には 3 回分、2 回分、または 1 回分のみつがあります。もし-実行-他のブロックを別のもし-実行-他のブロックと組み合わせると、「もし…ならば…、そうでなくて…ならば…、それでもなければ…」のような複雑な条件のブロックを作ることができます。みつの量がわからなくても集められるように、コードを完成させましょう。"
      4-5 Bee Conditionals 7_markdown_instruction: "むらさきの花は、花の蜜（みつ）が３つか、２つか、１つのどれかかもしれないことに注意してください。\n関数である「むらさきの花を調べる（check purple flower）」を完成させてください。\nそして、その関数（function）を使って、すべての蜜（みつ）を花から集めてください。"
      4-5 Bee Conditionals 8_markdown_instruction: "「花を調べ、はちみつを作る（check flower make honey）」という関数の中身を作ってください。\nあなたが関数を作るとき、　「もしむらさきの花の蜜（みつ）が３つか、２つ、または１つ」に注意して、\nすべての花の蜜（みつ）を集めてください。その次に、前へ進み、ハチミツを作ってください。"
      4-5 Bee Conditionals Assessment 1_markdown_instruction: "評価テスト：　このコードは間違ってます。\n関数の「はなのみつをとる、または、ハチミツを作る（get nectar or make honey）」を完成させ、\nそれから、その関数を使ってすべてのはなのみつとハチミツを集めてください。\nむらさきの花の花の蜜（みつ）の数は３つか、２つか、１つかもしれないことに注意してください。"
      4-5 Bee Debugging 1_markdown_instruction: "ブロックがたくさん！もっとシンプルにしてみましょう。"
      4-5 Bee Debugging 6_markdown_instruction: "この紫（むらさき）の花（はな）の花のみつについて、数（かず）がわかりません。ブロックたちを直（なお）して、すべての花のみつを花から集めてください。"
      4-5 Bee Nested Loops 4_markdown_instruction: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      4-5 Bee Nested Loops Assessment 1_markdown_instruction: "課題。「繰り返し（ループ）」を使って、すべての花のみつとすべてのハチミツを集めてください。"
      4-5 Maze 9_markdown_instruction: "「までを繰り返します」ブロックを使ってループを作ってください。"
      4-5 Maze Conditionals 1_markdown_instruction: '「までを繰り返します」ブロックを使ってゾンビをヒマワリまで連れて行く。'
      4-5 Maze Conditionals 10_markdown_instruction: "ブロックをあと3つ足して、ゾンビがむずかしい迷路を歩くの助けてくれますか？\\r\n\\rもしそれができれば、どんな長くカーブした道でも歩けるようになります。"
      4-5 Maze Conditionals 2_markdown_instruction: '「までを繰り返します」ブロックを使ってゾンビをヒマワリまで連れて行く。'
      4-5 Maze Conditionals 3_markdown_instruction: "「もし」ブロックを使って、いつ曲がるかを決めてください。ヒント：あともう１つのブロックが必要です、どう設定しているかを学べば、次はひとりでできるようになります。"
      4-5 Maze Conditionals 4_markdown_instruction: Ok。さっきのパズルと同じです、でもどうやって"もし"ブロックと"繰り返し"ブロックを一緒に使ったかをもう一度思い出してみましょう。
      4-5 Maze Conditionals 5_markdown_instruction: "ひまわり食べたいの！「もし」ブロックを使って、できる限り少ない数のブロックでわたしをそこまで連れて行ってください。"
      4-5 Maze Conditionals 6_markdown_instruction: |-
        ひまわり食べたいの！「もし」ブロックを使って、できる限り少ない数のブロックでわたしをそこまで連れて行ってください。
      4-5 Maze Conditionals 7_markdown_instruction: いいね。練習のためにもう一度やりましょう。・・・それほど違いはないけれど、チャンーパーたちに気をつけて！
      4-5 Maze Conditionals 8_markdown_instruction: "「もし／他」ブロックは条件を調べて、どちらかの処理を実行するものです。このブロックを使ってわたしをひまわりの所へ連れて行って。"
      4-5 Maze Conditionals 9_markdown_instruction: |-
        「もし／他」ブロックでもう一度練習しよう。１回でクリアできるかな？
      4-5 Maze Conditionals Assessment 1_markdown_instruction: "「までを繰り返し（ループ）」と「もし／他」ブロックを使いわたしをひまわりの所へ連れて行ってください。できるだけブロックを少なくしてください。"
      4-5 Nested Loops 12_markdown_instruction: 入れ子型の「繰り返し（ループ）」を使って、これらの３６個の三角形を描けますか？
      4-5 Nested Loops 3_markdown_instruction: |-
        最初から置かれていたコードを別のループの中に入れることで、太陽を作りましょう。これは入れ子型の「繰り返し（ループ）」と言います。
        
      4-5 Nested Loops 5_markdown_instruction: 風車（かざぐるま）を作るために、与えられたコードを繰り返しにしましょう。
      4-5 Nested Loops 6_markdown_instruction: 三角形のコードを繰り返す事で六角形を描けますか？
      4-5 Nested Loops 7_markdown_instruction: "このデザインを１０回ループさせましょう。ループする度にどのくらい回転させる必要がありますか？（ヒント：３６０を１０で割ると？）"
      4-5 Nested Loops 8_markdown_instruction: "このデザインを６回繰り返しましょう。繰り返す毎にどれくらい回転する必要があるでしょうか。（ヒント：３６０割る６は？）"
      4-5 Nested Loops 9_markdown_instruction: ワニの歯を書いてください！
      4-5 While Loops 1_markdown_instruction: わたしを穴のところまで動かして、シャベル２杯分で穴を埋（う）めましょう。「あなをうめる」ブロックを使ってください。
      4-5 While Loops 2_markdown_instruction: わたしを土の山へ動かして、スコップ５杯分の土を減らしてください。「つちをかたづける」ブロックを使ってね。
      4-5 While Loops 3_markdown_instruction: "わたしを山まで動かしてすべての土をかたづけてください。それから穴のところへ行き穴をすべて埋（う）めてください。ヒント：できるだけ少なくブロックを使ってください。"
      4-5 While Loops 4_markdown_instruction: "すごく大きい穴を見つけてびっくりしました。シャベル何杯分の土が必要かわかりません。穴が他の地面と同じくらいに平になるまで穴を埋めるプログラムをあなたは作れますか？ヒント：「以下の間繰り返し（while loop）」を今回は使ってみてください。"
      Course 4 Artist 13_markdown_instruction: ここに、真っ白なキャンバスがあります。線のかたちや、スタンプを使って、あなたが書きたいものを、自由に書いてください！
      Course 4 Artist 6_markdown_instruction: 正三角形を3つ書くプログラムを完成（かんせい）させてください。
      Course 4 Artist 8_markdown_instruction: 太陽の絵を書いてください。「くりかえし」ブロックを加えて、灰色（はいいろ）のブロック全部を中に入れてみてね。
      Course 4 Artist 8a_markdown_instruction: この形を、おぼえてますか？ヒントなしで、これを書いてみよう！
      Course 4 Artist Binary 1a_markdown_instruction: "‘draw binary' （ドロー バイナリ）は、1 と 0 で表されるバイナリ文字列を受け取り、アーティストが書くべき絵を命令（めいれい）する関数（かんすう）です。\nアーティストは左から右、上から下へと動きながら、1なら正方形をぬりつぶします。0なら何もせずに次へ行きます。\nアーティストが絵を書くために、バイナリをどのように使うのか、プログラムを実行して考えてみて下さい。"
      Course 4 Artist For Loops 4_markdown_instruction: 'これまで学んだことを使って、このような四角形を書いて下さい。四角形の一辺の長さは、15 ピクセルから、最大で300 ピクセルまで、15 ピクセルずつ大きくなっています。 '
      Course 4 Artist For Loops 6a_markdown_instruction: "さっきのプログラムを、3ヵ所かえるだけで、この絵を書くことが出来ます！\nヒント：\n1. 線の太さは？\n2. まがる向きは？\n3. いくつ「ずつ」カウントする？"
      Course 4 Artist For Loops 8a_markdown_instruction: さっきのプログラムを、1ヵ所かえるだけで、この絵を書くことが出来ます！
      Course 4 Artist For Loops Challenge_a_markdown_instruction: "**ちょうせん:** これまで学んだことをすべて使って、この図形を書いてください。多角形の一辺は、ぜんぶ40ピクセルの長さです。\nヒント： `counter` は２から19まで２ずつカウントして下さい。"
      Course 4 Bee Params 1_markdown_instruction: '「get 3 nectar」は、まがる、すすむ、はなのみつをとる、もどるを行います。これを使って、全ての みつを集めてください。'
      Course 4 Play Lab Params 4_markdown_instruction: "`patrol` （パトロール）関数を編集して、ネコが上下に 400 ピクセル動きつづけるようにして下さい。"
      Course 4 Play Lab Params 8_markdown_instruction: 犬が他のキャラにぶつかったら、左上に もどって やり直しにしましょう。「キャラ1が どれかのキャラにさわったら」ブロックと「キャラ1は左上に」ブロックを上手く使ってください。
      Course 4 Play Lab Vars 2_markdown_instruction: "さっきのゲームは、ネコが早すぎだったよね！\n'dog_speed'（ドッグ スピード） は、犬の早さを決めます。'cat_speed（キャット スピード）は、ネコの早さを決めます。\n'dog_speed'の数を大きくして、ネコより多くのハタを集めましょう。先に、10 ハタを集めたほうが勝ちです！"
      Course 4 Play Labs For Loops 1_markdown_instruction: "犬が1 から 100 までの数字を話すようにします。\n「キャラ1 言う」ブロックに、 `counter` 変数ブロックを組み合わせて、実行して下さい。"
      Course 4 Playlab For Loops 5b_markdown_instruction: くりかえしの「ずつ」の数を調整して、両方のキャラが真ん中の同じ所で止まるようにして下さい。
      CourseF_PlayLab_vars2_markdown_instruction: "さっきのゲームは、ネコが早すぎだったよね！\n'dog_speed'（ドッグ スピード） は、犬の早さを決めます。'cat_speed（キャット スピード）は、ネコの早さを決めます。\n'dog_speed'の数を大きくして、ネコより多くのハタを集めましょう。先に、10 ハタを集めたほうが勝ちです！"
      Function intro Ryan_markdown_instruction: "ワークスペースに、「橋をかける」という名前の **関数** があります。川を渡るために必要なコードはその関数の中にすべて入っています!\\r\n \\r\n小さな緑色のブロックをワークスペースに 2 回はめこんで、{currentPlayerName} がレッドストーンのたいまつ [redstone_torch] にたどり着けるようにしましょう。"
      K-1 Bee Loops 2_markdown_instruction: 繰り返しを使って移動して、みつを集めて、はちみつを作ってください!
      K-1 Bee Loops 3_markdown_instruction: 繰り返しを使ってみつを集めて、はちみつを作ってください!
      K-1 Bee Loops 4_markdown_instruction: 繰り返しを使って、みつを集めて、はちみつを作って、移動してください!
      K-1 Bee Loops 5_markdown_instruction: 繰り返しを使って、みつを集めてはちみつを作ってください!
      K-1 Bee Loops 6_markdown_instruction: 繰り返しを使って、みつを集めて、はちみつを作って、移動してください!
      K-1 Maze Loops 11_markdown_instruction: "豚さんのところまで連れていってください！繰り返しを使いましょう。"
      K-1 Maze Loops 12_markdown_instruction: "豚さんのところまで連れていってください！繰り返しを使いましょう。"
      K-1 Maze Loops 2_markdown_instruction: リピートブロックを使って豚のところまで連れていってください。
      K-1 Maze Loops 8_markdown_instruction: 豚さんのところまで連れていってください！繰り返しを使いましょう。
      MC Agent Freeplay_markdown_instruction: "**自由にプレイ:** ここからはあなたの自由です! Agent のコードを、この世界の探検に役立ててみましょう。"
      MC_HOC_2017 Agent Test_markdown_instruction: "「実行」をクリックすると、プレイヤーを **矢印キー** で動かせるようになります。 \n\n\nドアの前まで移動してドアを開け (**スペース キー** を使います)、 中のオレンジ色のマスにたどり着くと、このレベルはクリアです。"
      MC_HOC_2017_01_markdown_instruction: "「実行」をクリックすると、プレイヤーを **矢印キー** で動かせるようになります。 \n\n\nドアの前まで移動してドアを開け (**スペース キー** を使います)、 中のオレンジ色のマスにたどり着くと、このレベルはクリアです。"
      MC_HOC_2017_01_Cole_markdown_instruction: このマップでは、すべての道具を集める必要があります。**矢印キー** を使って動き、道に置いてあるチェストまでたどり着くとクリアです。
      MC_HOC_2017_01_Kiki_markdown_instruction: 'このレベルをプレイするには、プレイ画面の下にあるオレンジ色の「実行」ボタンをクリックして、**矢印キー** を使ってプレイヤーを動かします。'
      MC_HOC_2017_01_RETRY_markdown_instruction: |2
        {currentPlayerName} は家の中に閉じこめられています。そこに、Agent が助けにやってきました!\r
         \r
           \r
        Agent が重量感知板 [PressurePlate_Up] にたどり着けるように、ワークスペースにある「実行した時」ブロックに「前進」ブロックをはめ込んでから 「実行」ボタンを押して、矢印キーでプレイヤーを動かし、家の外にある **チェスト** [chest] を回収しましょう。 
      MC_HOC_2017_02_markdown_instruction: プレイヤーは隠された林の中に入らなければなりません。Agent が重量感知板にたどり着けるようにコードを書いて、彼にゲートを開くお手伝いをさせましょう。
      MC_HOC_2017_02_Cole_markdown_instruction: "{currentPlayerName} は冒険に出発しました! 右側のロックされたドアの奥には、冒険に役立つ **地図** [map_empty] があります。この地図を手に入れましょう。\\r\n \\r\nAgent を重量感知板 [PressurePlate_Up] の上まで動かすコードをワークスペースで作成して、{currentPlayerName} がドアを通れるようにしましょう。 "
      MC_HOC_2017_02_Kiki_markdown_instruction: "プレイヤーは冒険に出発しました。まずは、ロックされたドアの奥に隠されたたいまつが必要です。 \n\n\nAgent が白い道を通って重量感知板に乗るように、彼を 2 回前進させるプログラムを作りましょう。Agent が板の上に乗るとドアが開き、プレイヤーが通れるようになります。"
      MC_HOC_2017_02_Will_markdown_instruction: "このレベルをクリアするには、プレイヤーを隠された林の中にあるオレンジ色のマスまで動かす必要があります。隠された林は、ロックされたドアの奥にあります。 \n\n\nワークスペースで Agent を 2 回前進させるコードを書き、彼が重量感知板の上に乗るようにしましょう。Agent が重量感知板の上に乗るとドアが開き、アレックス (スティーブ) が通れるようになります。"
      MC_HOC_2017_03_Cole_markdown_instruction: "冒険の旅をしている {currentPlayerName} には備えとして **コンパス** [compass] が必要です。\\r\n   \\r\nAgent がゲートを開くコードを書きましょう。 "
      MC_HOC_2017_03_Kiki_markdown_instruction: "プレイヤーの冒険は、ロックされたドアの奥にある、隠された林から始まります! \n\n\n\n\nAgent が重量感知板の上に乗るようにコードを書き、彼にゲートを開けるお手伝いをさせましょう。"
      MC_HOC_2017_04_markdown_instruction: 前のパズルのループを変えて、Agent がこの川の幅の広いところに道を作るようにしましょう。
      MC_HOC_2017_04POINT5_Cole_markdown_instruction: |-
        プレイヤーは沼地をうまく脱出しました!  次は、安全のためにオレンジ色のマスまで移動しましょう。 
        
        
        先頭の 2 つの重量感知板を通れるように、シンプルなパターンを見つけてループを使い、Agent に道を作ってもらいましょう。
      MC_HOC_2017_04POINT5_RYAN_markdown_instruction: "なんとか通りぬけました! \n\n\n次に、{currentPlayerName} が迷路を通って **斧** [diamond_axe] を無事に手に入れられるようにしましょう"
      MC_HOC_2017_04_Cole_markdown_instruction: "Agent は水の上を動くことができます!\\r\n \\r\n「繰り返し」ループを使って {currentPlayerName} がドアの奥にある **バケツ** [bucket_empty] にたどり着ければ、このパズルはクリアです。 "
      MC_HOC_2017_04_Kiki_markdown_instruction: "隠された林は美しいオアシスにつながっていました!  このレベルでは、小屋の中にあるオレンジ色のマスまでプレイヤーを動かしましょう。 \n\n\n「繰り返し」ループを使って Agent を重量感知板の上まで動かし、小屋のドアを開けてもらいましょう。"
      MC_HOC_2017_05_markdown_instruction: |-
        ループがいつも役に立つとはかぎりません。 
        
        
        ここにあるサボテンは不規則なパターンで成長しているため、ループでは正しく取り除くことができません。  代わりに、Agent が障害物にぶつかるたびにそれを破壊してくれる、「破壊して動く」という名前の関数を用意しました。
      MC_HOC_2017_05_Cole_markdown_instruction: "なんと、橋がありません! \\r\n\\r\nAgent が橋を作り直すコードを「置く」ブロックを使って書き、{currentPlayerName} が **シャベル** [diamond_shovel] にたどり着けるようにしましょう。"
      MC_HOC_2017_05_Josh_markdown_instruction: |-
        なんと、橋がありません! 
        
        
        Agent に橋を作り直してもらい、プレイヤー が **シャベル** にたどり着けるようにしましょう。
      MC_HOC_2017_05_Kiki_markdown_instruction: "隠された林を抜けて先へ進もうとしたプレイヤーですが、なんと橋がありません! \n\n\nAgent に橋を作り直した後に木材まで移動してもらい、プレイヤー がオレンジ色のマスにたどり着けるようにしましょう。"
      MC_HOC_2017_06_Cole_markdown_instruction: "別の川がありますが、前の川よりも幅がずっと広くなっています! \\r\n \\r\nこのコードを書きかえて、{currentPlayerName} が **つるはし** [diamond_pickaxe] にたどり着けるように Agent に橋をかけさせましょう。"
      MC_HOC_2017_06_Josh_markdown_instruction: "別の川がありますが、前の川より幅がずっと広くなっています! \n\n\nこのコードを書きかえて、Agent に橋をかけさせましょう。"
      MC_HOC_2017_06_Kiki_markdown_instruction: "別の川がありますが、前の川より幅がずっと広くなっています! \n\n\nこのコードを書きかえて、Agent に橋をかけさせましょう。"
      MC_HOC_2017_07_Cole_markdown_instruction: "行く先に氷があります!  \\r\n \\r\n「道を作る」関数を使えば、氷を破壊して {currentPlayerName} がトロッコ [minecart_normal] にたどり着けるようになります! "
      MC_HOC_2017_07_Kiki_markdown_instruction: "ループには、コードを繰り返す以外の使い方もあります!  \\r\n\\r\nここでは、使用するたびに 3 つのサボテンを破壊できる、「サボテンを破壊」という名前の関数を用意しました。「サボテンを破壊」ブロックを 2 つ使って、オレンジ色のマスまでの道を作りましょう。"
      MC_HOC_2017_07a_Kiki_markdown_instruction: それでは、このループを編集して、Agent がオレンジ色のマスまでの道を作れるようにしましょう。
      MC_HOC_2017_08_Cole_markdown_instruction: "ここでは動く前に破壊するのではなく、ブロックを置く必要があります。  \\r\n\\r\n用意された関数を、砂漠に合うように変えましょう。"
      MC_HOC_2017_08_Kiki_markdown_instruction: "ここではサボテンを破壊するのではなく、溶岩の上に石を置いた後、砂岩を破壊する必要があります。  \\r\n\\r\nこのレベルに合うように関数を変えましょう。"
      MC_HOC_2017_08_RY_markdown_instruction: |-
        ここでは関数を **2 つ** 選びます! 
        
        
        その 2 つの関数を使って溶岩の上にすばやく橋をかけて、{currentPlayerName} が通れるようにしましょう。
      MC_HOC_2017_08_Will_markdown_instruction: |-
        ここでは関数を **2 つ** 選びます! 
        
        
        その 2 つの関数を使って溶岩の上にすばやく橋をかけて、プレイヤーが通れるようにしましょう。
      MC_HOC_2017_09_Cole_markdown_instruction: 大きな土ブロックが重量感知板への道をふさいでいます。関数を使って Agent に土ブロックを破壊させて、プレイヤーが通れるようにしましょう。
      MC_HOC_2017_09_Kiki_markdown_instruction: "この先頭のコードは削除できません。 \n\n\nワークスペースの「道を作る」関数にコマンドを追加して、Agent が重量感知板にたどり着けるようにプログラミングしましょう。"
      MC_HOC_2017_09_RS_CLONE_markdown_instruction: このコードを調整して、穴を埋めた後に重量感知板の上に乗り、たいまつまでの道が開けるようにしましょう。
      MC_HOC_2017_10_Cole_markdown_instruction: 関数を使ってトロッコまでの道を開き、ネザー ポータルに入りましょう。
      MC_HOC_2017_10_Cole_old_markdown_instruction: より簡単に Agent がトロッコのレールを完成させ、プレイヤーがオレンジ色のマスにたどり着けるようにする関数を 1 から作ってみましょう。
      MC_HOC_2017_10_Kiki_markdown_instruction: より簡単に Agent がトロッコのレールを完成させ、プレイヤーがオレンジ色のマスにたどり着けるようにする関数を 1 から作ってみましょう。
      MC_HOC_2017_10_RETRY_markdown_instruction: "ワークスペースにある 2 つの関数の違いがわかりますか? \n \nこれらの関数をツールボックスにある他のコードと組み合わせて、トロッコまでの通り道を作り、**火打石と打ち金** [flint_and_steel] を回収しましょう。\n "
      MC_HOC_2017_10_RYAN_markdown_instruction: より簡単に Agent がトロッコのレールを完成させ、プレイヤーがオレンジ色のマスにたどり着けるようにする関数の組み合わせを 1 から作ってみましょう。
      MC_HOC_2017_10_RYAN2_markdown_instruction: より簡単に Agent がトロッコのレールを完成させ、プレイヤーがオレンジ色のマスにたどり着けるようにする関数の組み合わせを 1 から作ってみましょう。
      MC_HOC_2017_11_Kiki_markdown_instruction: ここからはあなたの自由です! この凍った池で何を作れるのか調べてみましょう。
      MC_HOC_2017_13_Cole_markdown_instruction: "**自由にプレイ:** ここからはあなたの自由です! Agent のコードを、この世界の探検に役立ててみましょう。"
      MC_HOC_2017_4.5v2_markdown_instruction: |-
        プレイヤーは沼地をうまく脱出しました!  次は、安全のためにオレンジ色のマスまで移動しましょう。 
        
        
        先頭の 2 つの重量感知板を通れるように、シンプルなパターンを見つけてループを使い、Agent に道を作ってもらいましょう。
      MC_HOC_2017_Ali_markdown_instruction: '下の関数を見てください。これらを使って、{currentPlayerName} がガストを避けて **エンチャントした本** [book_enchanted] に無事にたどり着けるようにするには、どうすればよいでしょうか?  '
      MC_HOC_2017_FP10x10_markdown_instruction: "**自由にプレイ:** ここからはあなたの自由です! このステージにあるすべてのダイヤモンドを集められるか挑戦してみましょう! "
      MC_HOC_2017_FP10x10_RE_markdown_instruction: "**自由にプレイ:** ここからはあなたの自由です! このステージにあるすべてのダイヤモンドを集められるか挑戦してみましょう! "
      MC_HOC_2017_FP20x20_markdown_instruction: "**自由にプレイ:** ここからはあなたの自由です! Agent のコードを、この世界の探検に役立ててみましょう。"
      MC_HOC_2017_Ryan_03_markdown_instruction: "ループに 2 つ以上のコードを配置できることは知っていましたか?  \\r\n\\r\n「繰り返す」ループを使って、Agent が水の中にブロックを置いて川に橋をかけるようにしましょう。"
      MC_HOC_2017_Ryan_05_markdown_instruction: "時には、プレイヤーの行く手をふさぐ障害物を破壊する必要があります。  \\r\n「破壊」ブロックを使って、Agent と重量感知板の間にあるサボテンをすべて破壊しましょう。"
      MC_HOC_Kiki_02_markdown_instruction: 横側のドアを開けるには、だれかが重量感知板の上に立つ必要があります。Agent を板の上にのせて、プレイヤーが家の外に出られるようにしましょう。
      NEW Course 4 Artist Functions 12_markdown_instruction: さっきのパズルの `draw a line of squares` 関数を上手く使って、この図形を書いてください。
      NEW Course 4 Artist Functions 3_markdown_instruction: "新しいブロック `function` （ファンクション、関数、かんすう）ブロックです。関数の名前は `draw a square` （ドロー ア スクエア、四角形を書く）です。\n「編集（へんしゅう）」をクリックして、1辺100ピクセルの四角形を書く関数を作ってください。関数を作り終えたら、「閉じる（とじる）」をクリックします。"
      NEW Course 4 Artist Functions 9_markdown_instruction: 1 つだけブロックを足して、この図形を書いて下さい。
      NEW Course 4 Artist Params 2_markdown_instruction: 50 ピクセルの辺を持つ三角形を書く `draw triangle` 関数を作ります。
      NEW Course 4 Artist Params 4_markdown_instruction: '`length'' （レングス、長さ）の数を かえて、関数を よび出していますね。どのような動きになるか考えながら、実行して下さい。'
      NEW Course 4 Artist Vars 12_markdown_instruction: 前のパズルのアルゴリズムを使って、今度は、辺の長さが150の五角形を書きましょう。
      NEW Course 4 Artist Vars 4_markdown_instruction: "もう一回やってみよう！このカッコイイ六角形を使ったデザインを書くには、「lengh」変数を60にしてみてね。"
      NEW Course 4 Artist Vars 6_markdown_instruction: "100 ピクセルの辺を持つ五角形のパターンを書くよ！\n「セット length は」に、数のブロックをくっつけて、数は100にします。全部の「前に動く？ピクセル」には「length」ブロックを入れて下さい。\n「length」に入れた数が、その後のプログラムで、どこでも使えることが分ったかな？"
      New Minecraft Hero Project_markdown_instruction: "**自由にプレイ:** ここからはあなたの自由です! Agent のコードを、この世界の探検に役立ててみましょう。"
      Overworld Move to Sheep_markdown_instruction: 羊に近づくには"前進"コマンドを追加します。
      Overworld Move to Sheep_2018_markdown_instruction: 羊に近づくには"前進"コマンドを追加します。
      Standalone_Artist_5.5_markdown_instruction: "「くりかえし」ブロックをつかって、ダイヤモンドが かんたんに書けるようにしてあります。このプログラムを12回くりかえすと花が書けます。ヒント：ひとつのダイヤモンドを書きおえたら、30度まがりましょう。ずっと同じところにダイヤモンドを書いていたらダメだよ。\n\n"
      Testing Quantum Farmer_markdown_instruction: "すごく大きい穴を見つけてびっくりしました。シャベル何杯分の土が必要かわかりません。穴が他の地面と同じくらいに平になるまで穴を埋めるプログラムをあなたは作れますか？ヒント：「以下の間繰り返し（while loop）」を今回は使ってみてください。"
      course4_artist_fwp_challenge1_markdown_instruction: このプログラムを実行してみてください、そして何が起こるかを参照し変更をしてください。それがどのように動作するかを理解できますか？(または削除し、完全に別の何かと交換)
      courseA_bee_seq4_markdown_instruction: 自分でやってみよう！
      courseA_harvester_seq6_markdown_instruction: 自分でやってみよう！
      courseD_bee_nestedLoops5_markdown_instruction: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      courseD_bee_nestedLoops8_markdown_instruction: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      courseD_bee_nestedLoops8_2018_markdown_instruction: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      courseD_bounce_events1_markdown_instruction: 旗を取ろう！「左向き矢印が押されたとき」ブロックに、ブロックをつなげて、「実行」を押し、プレイヤーを旗まで動かそう。
      courseD_maze_nestedLoops4_markdown_instruction: 'ひまわりまで行きたい！'
      courseD_maze_nestedLoops4_2018_markdown_instruction: 'ひまわりまで行きたい！'
      courseE_bee_functions3_markdown_instruction: ひとつの作業を行うひとまとまりのコードを関数といいます。"get 5" という関数を使うと、一度に蜜を 5 とることができます。ループを使って、ブロックの数がなるべく少なくしてください。
      courseE_bee_functions3_2018_markdown_instruction: ひとつの作業を行うひとまとまりのコードを関数といいます。"get 5" という関数を使うと、一度に蜜を 5 とることができます。ループを使って、ブロックの数がなるべく少なくしてください。
      courseE_farmer_concept4_markdown_instruction: "では次のレベルに進みましょう！\n入れ子のくりかえしで、この図形を書いて下さい。\n横一列を書き終えたら、アーティストのいちをもどして、それから次の一列を書くようにします。\nこれらのブロックたちの、どれかを、くりかえしで使います。"
      courseF_bee_for_challenge2_markdown_instruction: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      courseF_bee_for_challenge2_2018_markdown_instruction: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      frozen circle function in circle_markdown_instruction: こんどは、20こ円をかきましょう。いっこ円をかいたら、ジャンプして、18度まがるのよ。
      frozen circle function with parameter_markdown_instruction: こんどの「円をかく」ブロックは、「おおきさ」を かえることができるわ！このブロックをつかって、おおきさ5の小さい円と、おおきさ10の大きな円をかいてみて。
      frozen circle function_markdown_instruction: '「円をかく」ブロックをつかって、10こ円をかきましょう。円をかいたらジャンプするのをわすれないでね。'
      frozen circle_markdown_instruction: 円をかくことが できる？「???」のところに数をいれて、円をかいてみましょう。
      frozen cross rotate dense_markdown_instruction: 'こんどは、線を90本かきましょう！90回で ちょうど360度になるには、どれくらい まがれば いいかしら？ヒント：とても小さい数よ。'
      frozen cross rotate_markdown_instruction: こんどは、線を10本かいてみましょう。それぞれの線をかくとき、どれくらい まがれば いいかしら？
      frozen cross_markdown_instruction: '「くりかえし」ブロックをつかって＋の形をかきましょう。エルサが前にも後ろにもうごけるって、気がついてた？'
      frozen diamond mini snowflake_markdown_instruction: 雪のけっしょうは、色んな形があるって知ってる？さあ、新しい雪のけっしょうを かきましょう。「くりかえし」ブロックをつかって、ひし形を４つ かいてね。90度まがるのを わすれないで。
      frozen diamond snowflake_markdown_instruction: ひし形を10こ かいて、新しい雪のけっしょうをつくりましょう。36度まがると ちょうどいいわよ。
      frozen diamond_markdown_instruction: この4つのブロックを2回くりかえして、ひし形をかいてみましょう。四角形をかくのと にてるけど、まがる角度が ちがうわよ。90 度じゃなくて、60 度と120 度 まがるのよ。
      frozen freeplay_markdown_instruction: あなたは、マスターアーティストになったわ！じゆうに、ふゆのワンダーランドをつくりましょう。
      frozen perpendicular_markdown_instruction: "つぎに 2 本の線を、90度の かくどで かいてみましょう！\n「まがる」ブロックと「うごく」ブロックをつかうといいわ。"
      frozen snowflake branch_markdown_instruction: '「雪のけっしょうのエダをかく」ブロックをつかって、３本の えだをかいてみましょう。雪のけっしょうが みえてきたかしら？'
      frozen snowflake full_markdown_instruction: 8回くりかえして、きれいな雪のけっしょうを かきましょう！
      frozen snowflower_markdown_instruction: ふくざつな雪のもようも、円をつかって かけるわね。おおきさ５の円を５こ、おおきさ１０の円を５こ つかって、この もようを かいてみて。
      frozen square iterative_markdown_instruction: もうすこしで、四角がかけるわ。4本の線で、四角をかきましょう！
      frozen square loop 3x_markdown_instruction: 四角形を 3つ かいてみましょう。ひとつ四角形をかいたら、120度まがると いいわよ。
      frozen square loop_markdown_instruction: こんにちは、アレンデール王国のアナよ！「くりかえし」ブロックをつかって、四角形をかいてみて。さっきより少ないブロックで かけるはずよ。四角をかくには、何回くりかえせばいいか 考えて、「???」に、数をいれてみましょう。
      frozen square snowflake_markdown_instruction: この雪のもようが かけるかしら？「くりかえし」ブロックで、四角形を10こ かけばいいわ。四角形をひとつ かいたら、「まがる」ブロックで36度まがるのよ。
      grade2_MakeDogTag_8_markdown_instruction: たくさんの V をひとつにつなぎましょう。V 自体はループの中で描きましょう。
      grade2_PuppyLoops_10_markdown_instruction: |-
        風車が途中までしか描けていませんね。最後まで描き切るには何回繰り返さなければならないでしょうか。
      grade2_PuppyLoops_4_markdown_instruction: ループを2つ使って少ない数のブロックでブタを捕まえてみよう。
      grade2_PuppyLoops_8_markdown_instruction: "このねこのヒゲのコードはまちがっています。\n\\r\n\\r\nぜんぶのヒゲを同じ長さにかくように、コードを直してください。"
      grade2_PuppyLoops_9_markdown_instruction: |-
        C のコードが逆さまに描かれているようですね。C に見えるように直せますか？
      grade2_puppy_loops4_markdown_instruction: ループを2つ使って少ない数のブロックでブタを捕まえてみよう。
      grade3_ConditionalsElse_2_markdown_instruction: "ハチはいま蜜だけを探しています。蜜を集めようとする前に、それが花かどうかを確認しましょう。"
      grade3_ConditionalsElse_5_markdown_instruction: |-
        ？の下には花か蜂の巣があります。「もし 実行/他」ブロックを使って、花なら蜜を集め、他 (つまり蜂の巣) ならハチミツを作りましょう。
      grade3_ConditionalsElse_6_markdown_instruction: "この紫の花には 3 回分、2 回分、または 1 回分のみつがあります。もし-実行-他のブロックを別のもし-実行-他のブロックと組み合わせると、「もし…ならば…、そうでなくて…ならば…、それでもなければ…」のような複雑な条件のブロックを作ることができます。みつの量がわからなくても集められるように、コードを完成させましょう。"
      grade3_ConditionalsElse_7_markdown_instruction: "むらさきの花は、花の蜜（みつ）が３つか、２つか、１つのどれかかもしれないことに注意してください。\n関数である「むらさきの花を調べる（check purple flower）」を完成させてください。\nそして、その関数（function）を使って、すべての蜜（みつ）を花から集めてください。"
      grade3_ConditionalsElse_8_markdown_instruction: "「花を調べ、はちみつを作る（check flower make honey）」という関数の中身を作ってください。\nあなたが関数を作るとき、　「もしむらさきの花の蜜（みつ）が３つか、２つ、または１つ」に注意して、\nすべての花の蜜（みつ）を集めてください。その次に、前へ進み、ハチミツを作ってください。"
      grade3_ConditionalsElse_9_markdown_instruction: "評価テスト：　このコードは間違ってます。\n関数の「はなのみつをとる、または、ハチミツを作る（get nectar or make honey）」を完成させ、\nそれから、その関数を使ってすべてのはなのみつとハチミツを集めてください。\nむらさきの花の花の蜜（みつ）の数は３つか、２つか、１つかもしれないことに注意してください。"
      grade3_ConditionalsElse_TeacherIDo_markdown_instruction: |-
        ？の下には花か蜂の巣があります。「もし 実行/他」ブロックを使って、花なら蜜を集め、他 (つまり蜂の巣) ならハチミツを作りましょう。
      grade3_Conditionals_10_markdown_instruction: |-
        すべてのミツを集めて、ハチミツを作ってください。ムラサキ色の花には、ミツがあるか、わかりませんよ。
      grade3_Conditionals_12_markdown_instruction: "4つ全部の花からミツを集めてください。"
      grade3_Conditionals_2_markdown_instruction: "花のミツを全部あつめて、ハチミツを作ってください。なるべく少ないブロックをつかってね。  "
      grade3_Conditionals_8_markdown_instruction: "にわをとび回って、ミツのある花からミツを集めましょう。 "
      grade3_Debugging_6_markdown_instruction: |-
        このブロックが気になります。蜜を集めてはちみつを作るためにエラーを直してください。
      grade3_Debugging_9_markdown_instruction: |-
        このブロックが気になります。蜜を集めてはちみつを作るためにエラーを直してください。
      grade3_Loops_3_markdown_instruction: 全てのはなのみつを集めるのに繰り返しブロックを使ってみましょう。
      grade3_Loops_4_markdown_instruction: 今度は新しい繰り返しブロックを利用して、全てのはなのみつを集めてはちみつを作ってみましょう。
      grade3_Loops_6_markdown_instruction: "このブロックの組み合せを３回繰り返したらどうなるでしょうか？\n最後にはちみつを作るのを忘れないでね。"
      grade3_Loops_7_markdown_instruction: |-
        花には蜜が 1 ユニットずつあります。蜜を花から集めましょう。 
      grade3_Loops_TeacherIDo_markdown_instruction: |-
        花には蜜が 1 ユニットずつあります。蜜を花から集めましょう。 
      grade3_bee_conditionals_quantum2_markdown_instruction: "ハチはいま蜜だけを探しています。蜜を集めようとする前に、それが花かどうかを確認しましょう。"
      grade3_maze_loops2_markdown_instruction: 'ひまわりまで行きたい！'
      grade3_maze_nestedLoops4_markdown_instruction: ループを2つ使って少ない数のブロックでブタを捕まえてみよう。
      grade4_arist_nested_loop_flags1_markdown_instruction: 風車（かざぐるま）を作るために、与えられたコードを繰り返しにしましょう。
      grade4_arist_nested_loop_polygons1_markdown_instruction: "このデザインを１０回ループさせましょう。ループする度にどのくらい回転させる必要がありますか？（ヒント：３６０を１０で割ると？）"
      grade4_arist_nested_loop_polygons2_markdown_instruction: "このデザインを６回繰り返しましょう。繰り返す毎にどれくらい回転する必要があるでしょうか。（ヒント：３６０割る６は？）"
      grade4_arist_nested_loop_triangles3_markdown_instruction: 三角形のコードを繰り返す事で六角形を描けますか？
      grade4_arist_nested_loop_triangles4_markdown_instruction: ワニの歯を書いてください！
      grade4_arist_nested_loop_triangles5_markdown_instruction: |-
        最初から置かれていたコードを別のループの中に入れることで、太陽を作りましょう。これは入れ子型の「繰り返し（ループ）」と言います。
        
      grade4_arist_nested_loop_triangles6_markdown_instruction: 入れ子型の「繰り返し（ループ）」を使って、これらの３６個の三角形を描けますか？
      grade4_artist_functions2_markdown_instruction: "関数を使えば新しいブロックを作ることができます！ここでは、正方形を描くためのブロックを \"draw a square\" という名前の関数の中に移動しました。\"draw a square\" を使って、メガネを作ってみましょう。正方形と正方形の間は 75 ピクセル空いています。"
      grade4_artist_nested_loop_flags1_markdown_instruction: 風車（かざぐるま）を作るために、与えられたコードを繰り返しにしましょう。
      grade4_artist_nested_loop_polygons1_markdown_instruction: "このデザインを１０回ループさせましょう。ループする度にどのくらい回転させる必要がありますか？（ヒント：３６０を１０で割ると？）"
      grade4_artist_nested_loop_triangles5_markdown_instruction: |-
        最初から置かれていたコードを別のループの中に入れることで、太陽を作りましょう。これは入れ子型の「繰り返し（ループ）」と言います。
        
      grade4_artist_nested_loop_triangles6_markdown_instruction: 入れ子型の「繰り返し（ループ）」を使って、これらの３６個の三角形を描けますか？
      grade4_artist_parameters_triangles2_markdown_instruction: '`length'' （レングス、長さ）の数を かえて、関数を よび出していますね。どのような動きになるか考えながら、実行して下さい。'
      grade4_bee_conditionals_quantum2_markdown_instruction: "ハチはいま蜜だけを探しています。蜜を集めようとする前に、それが花かどうかを確認しましょう。"
      grade4_bee_conditionals_quantum5_markdown_instruction: |-
        ？の下には花か蜂の巣があります。「もし 実行/他」ブロックを使って、花なら蜜を集め、他 (つまり蜂の巣) ならハチミツを作りましょう。
      grade4_bee_functions3_markdown_instruction: ひとつの作業を行うひとまとまりのコードを関数といいます。"get 5" という関数を使うと、一度に蜜を 5 とることができます。ループを使って、ブロックの数がなるべく少なくしてください。
      grade4_bee_nestedLoops4_markdown_instruction: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      grade4_frozen_freeplay_markdown_instruction: あなたは もう、マスター アーティストよ！じゆうにブロックをつかって、冬のワンダーランドをつくってね。
      grade4_frozen_functions0_markdown_instruction: 円をかくことが できる？「???」のところに数をいれて、円をかいてみましょう。
      grade4_frozen_functions1a_markdown_instruction: '「円をかく」ブロックをつかって、10こ円をかきましょう。円をかいたらジャンプするのをわすれないでね。'
      grade4_frozen_functions2_markdown_instruction: では、20このかさなったまるをかいてみましょう。それぞれのまるをかくたびに18ど、かいてんさせてみようね。
      grade4_frozen_functions3_markdown_instruction: こんどの「円をかく」ブロックは、「おおきさ」を かえることができるわ！このブロックをつかって、おおきさ5の小さい円と、おおきさ10の大きな円をかいてみて。
      grade4_frozen_functions4_markdown_instruction: ふくざつな雪のもようも、円をつかって かけるわね。おおきさ５の円を５こ、おおきさ１０の円を５こ つかって、この もようを かいてみて。
      grade4_frozen_nested_loop_diamonds2_markdown_instruction: 雪のけっしょうは、色んな形があるって知ってる？さあ、新しい雪のけっしょうを かきましょう。「くりかえし」ブロックをつかって、ひし形を４つ かいてね。90度まがるのを わすれないで。
      grade4_frozen_nested_loop_diamonds3_markdown_instruction: ひし形を10こ かいて、新しい雪のけっしょうをつくりましょう。36度まがると ちょうどいいわよ。
      grade4_frozen_square_markdown_instruction: こんにちは、アレンデール王国のアナよ！「くりかえし」ブロックをつかって、四角形をかいてみて。さっきより少ないブロックで かけるはずよ。四角をかくには、何回くりかえせばいいか 考えて、「???」に、数をいれてみましょう。
      grade4_frozen_square_loop1_markdown_instruction: こんにちは、アレンデール王国のアナよ！「くりかえし」ブロックをつかって、四角形をかいてみて。さっきより少ないブロックで かけるはずよ。四角をかくには、何回くりかえせばいいか 考えて、「???」に、数をいれてみましょう。
      grade4_frozen_square_loop2_markdown_instruction: 四角形を 3つ かいてみましょう。ひとつ四角形をかいたら、120度まがると いいわよ。
      grade4_frozen_square_loop3_markdown_instruction: この雪のもようが かけるかしら？「くりかえし」ブロックで、四角形を10こ かけばいいわ。四角形をひとつ かいたら、「まがる」ブロックで36度まがるのよ。
      grade4_review_artist2_markdown_instruction: "この家（いえ）には屋根（やね）が必要（ひつよう）です！三角形（さんかくけい）を描きましょう。 \\r\n\\r\nヒント:\n3 辺（へん）の長さがすべて同（おな）じです。\\r\n\\r\n<img src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\"\nwidth=\"300\"/>"
      grade4_review_artist3_markdown_instruction: "ジャンプのブロックを使うと、線をかかずに絵かきさんを動かします。\n「ジャンプ」と「前へ動く」の両方のブロックを使って、点線をかいてみましょう。"
      grade4_review_bee1_markdown_instruction: 今度は新しい繰り返しブロックを利用して、全てのはなのみつを集めてはちみつを作ってみましょう。
      grade5_artist_for_loops10_markdown_instruction: "**ちょうせん:** これまで学んだことをすべて使って、この図形を書いてください。多角形の一辺は、ぜんぶ40ピクセルの長さです。\nヒント： `counter` は２から19まで２ずつカウントして下さい。"
      grade5_artist_for_loops5_markdown_instruction: |-
        さっきのプログラムを、1ヵ所かえるだけで、この絵を書くことが出来ます！
        ヒント：ブロックを１つ消します。
      grade5_artist_parameters_triangles2a_markdown_instruction: '`length'' （レングス、長さ）の数を かえて、関数を よび出していますね。どのような動きになるか考えながら、実行して下さい。'
      grade5_artist_variables_hexagons1_markdown_instruction: "もう一回やってみよう！このカッコイイ六角形を使ったデザインを書くには、「lengh」変数を60にしてみてね。"
      grade5_artist_variables_pentagon9_markdown_instruction: 前のパズルのアルゴリズムを使って、今度は、辺の長さが150の五角形を書きましょう。
      grade5_artist_variables_pentagons1_markdown_instruction: "100 ピクセルの辺を持つ五角形のパターンを書くよ！\n「セット length は」に、数のブロックをくっつけて、数は100にします。全部の「前に動く？ピクセル」には「length」ブロックを入れて下さい。\n「length」に入れた数が、その後のプログラムで、どこでも使えることが分ったかな？"
      grade5_playlab_variables13_markdown_instruction: 犬が他のキャラにぶつかったら、左上に もどって やり直しにしましょう。「キャラ1が どれかのキャラにさわったら」ブロックと「キャラ1は左上に」ブロックを上手く使ってください。
      grade5_playlab_variables2_markdown_instruction: "さっきのゲームは、ネコが早すぎだったよね！\n'dog_speed'（ドッグ スピード） は、犬の早さを決めます。'cat_speed（キャット スピード）は、ネコの早さを決めます。\n'dog_speed'の数を大きくして、ネコより多くのハタを集めましょう。先に、10 ハタを集めたほうが勝ちです！"
      grade5_playlab_variables9_markdown_instruction: "`patrol` （パトロール）関数を編集して、ネコが上下に 400 ピクセル動きつづけるようにして下さい。"
      level 'grade3_Loops_3_markdown_instruction: 全てのはなのみつを集めるのに繰り返しブロックを使ってみましょう。
      level 'grade3_Loops_4_markdown_instruction: 今度は新しい繰り返しブロックを利用して、全てのはなのみつを集めてはちみつを作ってみましょう。
      level 'grade3_Loops_6_markdown_instruction: "このブロックの組み合せを３回繰り返したらどうなるでしょうか？\n最後にはちみつを作るのを忘れないでね。"
      level 'grade3_Loops_7_markdown_instruction: |-
        花には蜜が 1 ユニットずつあります。蜜を花から集めましょう。 
