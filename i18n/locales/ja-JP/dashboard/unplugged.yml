ja:
  data:
    unplugged:
      Unplug1:
        title: コンピューター・サイエンス入門
        desc: このレッスンではコンピュータ ・ サイエンスの概念を紹介して、コンピューター科学者が普段どのようなことをしているのか解説します。そしてみなさんは、コンピュータ科学者の役割を経験することができます。アクティビティの最後には、学んだ事について復習をする宿題が出されます。レッスンの後に関係ある単語を子供達に教えることなど忘れてしまいがちですが、楽しさと遊びの中で学んでいるこの時期に教える方が、もっと先に同じことを学ぶ機会を待つより遥かに効果的です。
        pdfs:
          - unplug1
        video: Unplug1
      Unplug2:
        title: コンピュテーショナル・シンキング（コンピューターの様に考える）
        desc: "何もなくても白紙やマーカーだけで、生徒達は計算論的思考の 4 つのステップを学びます。簡単な紹介の後、生徒達はグループに分かれて、他の生徒達のために（事前に選出したモンスターのカタログから)特定のモンスター を描くための手順を作成します。役割全体を分解し、そしてチームがカタログにあるすべてのモンスターを分析、モンスターの別の詳細を抽象化し、その情報を使用し別のチームが特定のモンスターを描画するためのアルゴリズム (手順) を作成します。チームは別のチームと一緒にアルゴリズムを交換し、そしてそのアルゴリズムの手順に従ってモンスターを描きます。その描画はオリジナルチームが意図していたものですか？\n"
        pdfs:
          - unplug2
        video: Unplug2
      Unplug3:
        title: グラフ用紙のプログラミング
        desc: "1 つで別の絵を描くことをプログラミングで行うということによって、生徒達はプログラミングがどんなものか本当に理解し始めます。授業では、目の前にある画像を再現するのに、お互いグラフ用紙に色の正方形をつくる指示をすることで始められます。もし時間があれば、生徒自らが作り出した画像でレッスンを締めくくるのことができます。\n\n"
        pdfs:
          - unplug3
        video: Unplug3
      Unplug4:
        title: アルゴリズム
        desc: このレッスンではアルゴリズムを学びます。まずタングラムとグラフ用紙を利用して、可能な限り明確かつ明瞭な指示をすることが大事であることを学びます。その後、紙を折って正方形を作る方法が何通りあり、方法によって紙を折る回数が異なることを学びます。
        pdfs:
          - unplug4
        video: Unplug4
      Unplug5:
        title: 関数
        desc: このレッスンでは、学生は特別なチャーム、ビーズ、文字列からサンカッチャーになります。学生は一連の反復的な手順に従いますし、数回を重複している「スキル」の特定のセットを識別するように求められます。これらのスキルを定義すると、彼らはメイン プログラムから呼び出され、作成の美しい全体のプロセスは、紙の単一シートに記録されます。最終的なプログラムになりますどんな全体クラス チャーム、ビーズ、文字列のタイプを対象します。効果的にこれを可能にする、学生は彼らの特定の材料の詳細を「抽象」と個々 供給ためのあいまいな用語を作成する必要があります。 このジェネリック プレース ホルダーの使用は、変数に素晴らしい紹介です。
        pdfs:
          - unplug5
        video: Unplug5
      Unplug6:
        title: 条件
        desc: これはクラスみんなで行うゲームです。conditional と if-statement そして loop に関する基本的な考え方を紹介した後に、あらかじめ書かれたプログラムと、トランプ、くじ引きを使いながらみんなで練習できるようになっています。
        pdfs:
          - unplug6
        video: Unplug6
      Unplug7:
        title: 作曲する
        desc: 詩を読み解くことは多くの学生にとってとても創造的な活動になります。私達は今では常識とされている知識を define と関数呼び出しの学習へと転換するような活動を行います。学生達が define と call のプロセスに慣れてきたら、それらの関数の呼び出しの中でも、さらにパラメーターの引き渡しについて理解できるような知識を追加していきます。
        pdfs:
          - unplug7
        video: Unplug7
      Unplug8:
        title: 抽象化
        desc: ここでのアクティビティは、生徒たちが日頃いつも行っている活動を Mad-Lib 形式のゲームを行って表現することによって、抽象的な概念の効果的な使い方を楽しく学べるようにするものです。
        pdfs:
          - unplug8
        video: Unplug8
      Unplug9:
        title: プログラミングをリレーします。
        desc: このレッスンは前回のアクティビティ (4. Graph Paper Programming) で習ったスキルを使い、シーケンスで動くプログラムを完成させることや、バグがないかプログラムを頻繁に確認することの重要さを強調します。
        pdfs:
          - unplug9
        video: Unplug9
      Unplug10:
        title: インターネット
        desc: このレッスンでは、生徒はインターネットを冒険して、ウェブアドレス、IP や DNS について学びます。
        pdfs:
          - unplug10
        video: Unplug10
      Unplug11:
        title: まとめ
        desc: 最初の20時間のシリーズについての最後のまとめは、クラスの参加者たちに、彼らが楽しんだすべての時間を追体験させることを助けるものとなります。それは同時に、コンピュータ科学の旅を続けていくことに興味を持っている人を対象に、彼らが取り組むべき次のステップを与えることにもなります。
        pdfs:
          - unplug11
        video: Unplug11
      UnplugHappyMaps:
        title: ハッピーマップ
        desc: 生徒は1 つのコマンドを使用して、迷路をクリアする単純なアルゴリズム (命令のセット) を作成します。
      MoveIt:
        title: 動かせ！動かせ！
        desc: 生徒は1 つのコマンドを使用して、迷路をクリアする単純なアルゴリズム (命令のセット) を作成します。
      PlantASeed:
        title: 現実のアルゴリズム：種を植えましょう
        desc: このレッスンでは、種を蒔く行為を例にして、日常生活においてどのようにアルゴリズムが使われているかを学びます。また、コンピューター科学で使われるアルゴリズムの重要さについてもお話します。
      BuildingAFoundation:
        title: ピラミッドをたてよう
        desc: Students build a structure using only provided supplies. Structures must complete a task (reach a certain height or bear a certain weight), and students discuss the idea of being persistent when things get complicated.
      GettingLoopy:
        title: Getting Loopy
        desc: ダンスを通じてループ (繰り返し命令) のプログラミングの概念を紹介します。学生はまず簡単な振り付けを学び、それを繰り返すように指示されます。
      RelayProgramming:
        title: リレープログラミング
        desc: Students run a relay race, where they dash across the yard to write an algorithm based on a "Graph Paper Programming" image. They can only write one instruction at a time and if there's an error somewhere, they have to erase everything back to that point.
      Conditionals:
        title: 条件
        desc: カードゲームをしながら、「もし赤いカードを引いたら、自分に点が入る」や「もし黒いカードを引いたら、相手に点が入る」などのルールを作って、条件文について学びます。
      BigEvent:
        title: The Big Event
        desc: ここでは「イベント」というプログラミングの基本的な考え方を生徒は学びます。それはコンピュータが常に把握している入力情報のことです。教師が紙の上のボタンを押して遠隔操作（えんかくそうさ）すると、生徒たちは押されたボタンによって違った反応をするようになります。
      GoingPlacesSafely:
        title: 安全な道を通って行く
        desc: インターネットは役に立ちますが、時に危険な場所でもあります。先生は、インターネットを安全に利用する方法を紹介します。
      GraphPaperProgramming:
        title: グラフ用紙のプログラミング
        desc: 生徒は、クラスメイトに図を再現してもらうために、あらかじめ定義されたコマンドを使ってアルゴリズム(命令の集まり)を書きます。
      PaperPlanes:
        title: '現実世界のアルゴリズム: 紙飛行機を作る場合'
        desc: この授業は日常生活でアルゴリズムを使う場面、特に紙飛行機を作る場合を説明します。また、コンピューターサイエンスの全体像と、なぜアルゴリズムが不可欠なのかについて焦点を当てます。
      BinaryBracelets:
        title: バイナリブレスレット
        desc: Students create bracelets as a binary representations of the first letter of their name. Students learn that data can be represented and stored in more than one way.
      DigitalFootprint:
        title: あなたのデジタルフットプリント
        desc: Teachers introduce to students the idea that putting information about themselves online creates a digital footprint or "trail" that has consequences.
      ComputationalThinking:
        title: コンピュテーショナル・シンキング（コンピューターの様に考える）
        desc: Students use the steps of computational thinking (decompose, pattern match, abstract, algorithm) to figure out how to play a game that comes with no instructions.
      FunctionalSuncatchers:
        title: Functional Suncatchers
        desc: Students create an algorithm with variables and functions (pieces of code that you want to use over and over again) to create suncatchers using string and beads.
      SongwritingParameters:
        title: Songwriting
        desc: Students use the concept of the chorus in a song to learn about defining and calling functions.
      DiceRace:
        title: 'Real life algorithms: Dice Race'
        desc: This lesson calls out ways we use algorithms in our daily lives. As part of that, students will identify and write down the algorithm for a dice race game.
      Internet:
        title: インターネット
        desc: Students send messages representing various Internet transmission methods using pieces of paper.
      Crowdsourcing:
        title: クラウドソーシング
        desc: Students use crowdsourcing, a problem-solving technique common in computer science, to complete a task together as a classroom more efficiently than if a student attempted it alone.
      DigitalCitizenship:
        title: Digital Citizenship
        desc: Students explore the difference between private information and personal information, distinguishing what is safe and unsafe to share online.
      TangramAlgorithms:
        title: Tangram Algorithms
        desc: This lesson shows us something important about algorithms. If you keep an algorithm simple there are lots of ways to use it. If you want to make sure everyone ends up with the same thing, then your algorithm needs more detail.
      EnvelopeVariables:
        title: Envelope Variables
        desc: Variables allow for a lot of freedom in computer science.  This lesson helps to explain what variables are and how we can use them in many different ways. Use this activity before (or in conjunction with) the lesson on abstraction to really hit the idea home.
      MadGlibs:
        title: Mad Glibs
        desc: Abstraction is one of the most important skills for a computer scientist to understand.  This activity will have your students analyzing stories for differences so that they can abstract them away. Those abstracted stories become templates for fun and crazy new ones.
      ForLoopFun:
        title: For Loop Fun
        desc: We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops with extra structure built right in.
      SongwritingWithParameters:
        title: パラメーターで作詞作曲
        desc: 'One of the most magnificent structures in the computer science world is the function.  Functions (sometimes called procedures) are mini programs that you can use over and over inside of your bigger program. This lesson will help students intuitively understand why combining chunks of code into functions is such a helpful practice.  '
      BinaryImages:
        title: バイナリ画像
        desc: Though many people think of binary as strictly zeros and ones, our previous courses taught students that information can be represented in a variety of binary options.  This lesson takes that concept one step further as it illustrates how a computer can store even more complex information (such as images and colors) in binary, as well.
      VideoGamesCoordinatePlanes:
        title: ビデオゲームと座標平面
        desc: Discover how the video games you love to play are actually driven by algebra! Explore how algebraic expressions and the coordinate plane can help us understand how video games work, and then start planning for the video game that you will create.
      Contracts:
        title: Contracts, Domain, and Range
        desc: Contracts give us a way to understand and discuss functions. In this lesson we'll look at how Contracts can help us make sense of a new programming language or function.
      DesignRecipe:
        title: The Design Recipe
        desc: In the last stage students wrote some very simple functions - but more sophisticated functions demand a more thoughtful approach. The Design Recipe is a structured approach to writing functions that includes writing test cases to ensure that the function works as expected.
      Booleans:
        title: ブール値と論理
        desc: Booleans are the fourth and final data type that you will learn about in this course. In this activity you will learn about what Booleans are, and how they can help us write functions that think logically
      ConditionalsPiecewiseFunctions:
        title: Conditionals and Piecewise Functions
        desc: The parameters we pass to functions cause the outputs to vary based on a very rigid pattern. Suppose we want parameters with some values to create outputs using one pattern but other values to use a different pattern. This is where conditionals are needed...
      CollisionDetection:
        title: 衝突検出とピタゴラスの定理
        desc: Determining when objects on the screen touch is an important aspect of most games. In this lesson we'll look at how the Pythagorean Theorem and the Distance Formula can be used to measure the distance between two points on the plane, and then decide whether those two points (or game characters) are touching.
      ! '':
        title: ""
        desc: ""
      courseA_unplugged_loops:
        title: Loops Unplugged
        desc: In this lesson, you will learn about loops!
      courseB_unplugged_MRF:
        title: コンピューターを使わない活動
        desc: In this lesson, you will 'program' your friends!
      courseB_unplugged_loopyMRF:
        title: コンピューターを使わない活動
        desc: Just like in 'My Robotic Friends', you will be 'programming' your friends, but this time with loops!
      courseC_Unplugged_ScreenOutTheMean:
        title: コンピューターを使わない活動
        desc: Today you will learn about what to do if someone is being mean online.
      courseD_unplugged_digitalCitizenship:
        title: コンピューターを使わない活動
        desc: Today you will learn what it means to be a Digital Citizen.
      courseE_unplugged_privateInformation:
        title: コンピューターを使わない活動
        desc: Today you will learn the difference between private and personal information!
      courseF_unplugged_powerOfWords:
        title: コンピューターを使わない活動
        desc: Today you will learn about what to do if someone is being mean online.
