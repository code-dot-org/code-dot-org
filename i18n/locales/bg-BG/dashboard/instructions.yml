bg:
  data:
    instructions:
      2-3 Artist 1 new_instruction: Здравейте, аз съм художник. Можете да напишете код, с който да ме накарате да нарисувам почти всичко. Използвайте няколко блока, за да довърша сивите линии в картината. (Всеки ред е дълъг 100 пиксела)
      2-3 Artist 11_instruction: 'Дайте на знака "Стоп" тяло, като начертаете осмоъгълник със страни по 100 пиксела дължина. На колко градуса трябва да ме завъртите? (Съвет: Колко е 360 делено на 8?) '
      2-3 Artist 12_instruction: 'Задайте на "повтаря пъти" блока стойност, така че да създаде кръг, с който да завърша очната ябълка. Ако след всяко движение се завъртам на един градус, колко пъти трябва да повтарям това, за да завърша кръга? 180? 360? 500?'
      2-3 Artist 2 new_instruction: 'Тази къща има полуготова стена. Всяка страна е 100, но незавършената стена е само 50. Завърши стената. '
      2-3 Artist 2_instruction: 'Тази къща има полуготова стена. Всяка страна е 100, но незавършената стена е само 50. Завърши стената. '
      2-3 Artist 3.4_instruction: '"Скок" блокът премества художника без да оставя следа. Начертайте пунктирана линия с помощта на блоковете за скок и чертане.'
      2-3 Artist 3_instruction: Тази шапка е висока 100 пиксела. Начертайте шапка, която е 70 пиксела по-малка.
      2-3 Artist 3new_instruction: Червената шапка е 100 пиксела висока. Завършете рисуването на черната шапка, която е по-малка с 70 пиксела. Ширината на черна шапка е 50 пиксела.
      2-3 Artist 4_instruction: Помогнете ми да довърша къщата на тази котка.
      2-3 Artist 5_instruction: 'Заместете този код с "повтаря пъти" блок, за да нарисувате същата къща само с 3 блока.'
      2-3 Artist 6_instruction: 'Тази къща се нуждае от покрив! Начертайте триъгълника.  Съвет: всички три страни имат еднаква дължина.'
      2-3 Artist 7_instruction: 'Завършете дясната половина на последния прозорец. Всеки квадрат на прозореца е 25 пиксела. '
      2-3 Artist 8_instruction: Завършете стаите за всяко от животните чрез разделяне на правоъгълника на 2 равни по размер квадрата. Правоъгълника е 200 пиксела ширина и височина 100 пиксела.
      2-3 Artist 9_instruction: Завърши това хвърчило
      2-3 Artist Assessment 1_instruction: 'Оценка: Завършете рисуването на последният зъб, 25 пиксела ширина и 25 пиксела височина.'
      2-3 Artist Debugging 1_instruction: 'Можете ли да направите тази шапка с  дължина от 100?'
      2-3 Artist Debugging 10_instruction: 'Джойстика на моя игрови контролер е твърде тесен. Съвет: Направи го по-широк с 10 пиксела'
      2-3 Artist Debugging 11_instruction: 'Помогнете ми да завърша моята красива снежинка. Колко пъти трябва да "повтарям", за да я довърша?'
      2-3 Artist Debugging 12_instruction: 'Предполагам, че трябва да добавя морска вълна на тази сцена.  Можете ли да ми помогнете?'
      2-3 Artist Debugging 2_instruction: 'Кодът за трите мустака, който виждате е грешен. Съвет: всеки мустак е дълъг 75 пиксела. Поправете този код, за да начертаете мустаците.'
      2-3 Artist Debugging 3_instruction: 'Лодката ми е с дупка! Може ли да я поправим чрез промяна на ъгъла на линията? Съвет: последният ъгъл трябва да се промени с 15 градуса.'
      2-3 Artist Debugging 4_instruction: Какво е изображението, което ние се опитваме да начертаем? Направете свързването на точките с помощта на правилните линии и ъгли.
      2-3 Artist Debugging 5_instruction: 'Кодът за стъпалото и крака, които виждате е погрешен. Съвет: Кракът е твърде дълъг. Може да се наложи да изтрием стъпка (игра на думи)'
      2-3 Artist Debugging 6_instruction: Изглежда, че аз съм седнал на стол, на който липсва крак. Добавете блокове, за да начертаете крака.
      2-3 Artist Debugging 7_instruction: Изглежда, че C от думата code е изписано обратно. Може ли да го правим, за да изглежда като C?
      2-3 Artist Debugging 8_instruction: Моето колело не е завършено. Колко пъти трябва да повтарям, за да го довърша?
      2-3 Artist Debugging 9_instruction: 'Кодът за това стебло е неправилен. Съвет: Ъгълът на завъртане е 60 градуса'
      2-3 Artist Debugging Assessment 1_instruction: 'Тази форма е твърде малка. Може ли да я направите по-голяма? Съвет: трябва да бъде 75 пиксела по-дълга от всяка страна.'
      2-3 Artist Free Play_instruction: Свободна игра! Начертайте каквото искате.
      2-3 Artist Functions 1_instruction: 'Здравейте. Аз зомби художник. Аз обичам рисува! Помогнете ми да нарисувам квадратни очила.  Съвет: мостът между стъклата е по-къс от дължината на квадратите с 25 пиксела.'
      2-3 Artist Functions 10_instruction: Ето две функции, една за изчертаване на голямо съоръжение и една за изчертаване на малко съоръжение. Използвайте ги за изготвяне на вътрешността на машината!
      2-3 Artist Functions 11.5_instruction: 'Ето същата "Начертайте шестоъгълник" функция. Какво става, ако завъртате само на 60 градуса всеки път след цикъл?'
      2-3 Artist Functions 11_instruction: 'Преименувахме "начертай квадрат" функцията  на "начертай шестоъгълник", но тя все още чертае квадрати! Може ли да я модифицирате, за да нарисувате шестоъгълник с 50 пиксела страни, и да начертаете изображението с помощта на функцията?'
      2-3 Artist Functions 12_instruction: 'Функциите са наистина страхотни за няколкократно изчертаване на сложни неща. Може да използвате функцията "рисува цвете" да запълни останалата част от  лехата?(Съвет: растенията са разделени на 100 пиксела едно от друго)  '
      2-3 Artist Functions 13_instruction: 'Ние сме ви предоставили четири функции. Използвайте ги както искате в рамките на един или повече цикли, за да нарисувате картини, които можете да споделяте с приятелите си. Натиснете "Старт", за да видите пример.'
      2-3 Artist Functions 2_instruction: 'Функциите ви позволяват да дефинирате нови блокове! Ние поместихме блоковете за  изчертаване на квадрат във функция, наречена "начертайте квадрат". Можете ли да използвате тази функция за създаване на очила? Квадратите са със страни 75 пиксела.'
      2-3 Artist Functions 3_instruction: 'Редактирайте функцията за чертане на квадрат със страни, дълги 115.  Направете по-големи очила. Квадратите са на 45 пиксела един от друг.'
      2-3 Artist Functions 4_instruction: Използвайте блок за повторение, за да начертаете тези 3 квадрата.
      2-3 Artist Functions 7_instruction: 'Използвайте функцията "рисува къща", за да нарисувате две къщи. Използвайте два различни параметъра. (Съвет: първата къща е 100 пиксела).'
      2-3 Artist Functions 9_instruction: Ето една функция за снежинка. Експериментирайте с нея, за да се създадете зимна сцена! Тук няма никакъв пъзел за решаване. Забавлявайте се!
      2-3 Artist Loops 1_instruction: 'Можете ли да направите шестоъгълник със страни, които са 100 пиксела дълги, за да завършим в клетката? Не забравяйте, че ще трябва да се завъртате само на  60 градуса!'
      2-3 Artist Loops 10_instruction: Какво се случва с дизайна, когато направим нашата последна стъпка напред наполовина по-къса?
      2-3 Artist Loops 11_instruction: 'Сега нека да поставим * друг * цикъл около нашето цялостно творение!  Не забравяйте да добавите един ъгъл в края на външния цикъл.'
      2-3 Artist Loops 2_instruction: Сега използвайте блок за повторение да направите черупка от клетки.
      2-3 Artist Loops 4_instruction: Искате ли да видите какво се случва, когато повтаряме тази фигура отново и отново, като използвате цикъл?
      2-3 Artist Loops 5_instruction: Сега, нека да направим една малка промяна на цикъла и да видим колко различна ще стане картината ни.
      2-3 Artist Loops 6_instruction: Прибавям още един ход и друг ред във вътрешността на цикъла и вижте, как се променя вашия дизайн.
      2-3 Artist Loops 7_instruction: 'Можем да използваме цикли, за да направим всички видове многоъгълници.  Можете ли да създадете ромб вътре в този шестоъгълник?'
      2-3 Artist Loops 8_instruction: Нека да поставим двата елемента вътре в цикъла.
      2-3 Artist Loops 9_instruction: "Ние ще повторим същите елементи, но сега ще добавим известно разстояние между тях. \r Използвайте един и същ код както преди, но добавете стъпка напред в края на външния цикъл."
      2-3 Artist Loops New 1_instruction: Нека да начертаем главата на този робот! Можете ли да направите квадрат със страни, които са 100 пиксела дълги?
      2-3 Artist Loops New 10_instruction: 'Сега нека да свържем едно с друго тези V-та, чертаейки ги чрез  цикъл.'
      2-3 Artist Loops New 11_instruction: 'Този път нека да го начертаем 24 пъти. Добавяме ляв завой на 30 градуса към този код и  го поставяме в блок за повторение.'
      2-3 Artist Loops New 12_instruction: |
        Начертайте диамант със страни от 100 пиксела.
        
      2-3 Artist Loops New 13_instruction: Сега начертайте диамант 3 пъти в цикъл.
      2-3 Artist Loops New 14_instruction: 'Сега нека да начертаем 10 диаманта, но  ще завъртаме на 90 градуса между всеки диамант.'
      2-3 Artist Loops New 15_instruction: Начертайте нещо забавно.
      2-3 Artist Loops New 2_instruction: Ето код, който използвахте за начертаване на този квадрат. Какво става, ако използвате блок за повторение, който да изпълнява този код 4 пъти?
      2-3 Artist Loops New 9_instruction: Начертайте просто V, където и двете страни са 50 пиксела за да завършите стрелката.
      2-3 Artist Match Hex Pic_instruction: 'Свържи: Помогни, за да завършим шестоъгълника.'
      2-3 Artist Match Rho Pic_instruction: 'Съвпадение: Довърши липсващия код.'
      2-3 Artist Match Sq Pic_instruction: 'Съвпадение: Довършете липсващия код'
      2-3 Artist Match Tri pic_instruction: 'Съвпадение: Попълнете липсващия код.'
      2-3 Artist Nested Loops 1_instruction: "Вие използвахте цикли, за да чертаете фигури, но знаете ли, че можете да поставите един цикъл вътре в друг? \r Повторете целия блок от код 3 пъти, за да начертаете модела."
      2-3 Artist Nested Loops 10_instruction: Повторете този код 12 пъти за завършване на модела.
      2-3 Artist Nested Loops 11_instruction: Повторете този код 4 пъти, за да завърша модела, завъртете на 90 градуса след всеки кръг.
      2-3 Artist Nested Loops 12_instruction: 'Повторете този код 12 пъти, за да завършите  спиралата.'
      2-3 Artist Nested Loops 2_instruction: Сега, повторете триъгълника 6 пъти. След всеки триъгълник трябва да завъртате на 60 градуса преди изготвянето на следващия.
      2-3 Artist Nested Loops 3_instruction: Трябва да повторите триъгълника 12 пъти, за да изготвите този модел. Разделете градусите в кръга (360) на броя на фигурите, които ще чертаем (12), за да разберете на колко градуса да завивате след всяка фигура.
      2-3 Artist Nested Loops 4_instruction: 'Повторете този диамант 12 пъти, за да нарисувате цвете. Съвет: 12-те  диаманта са точно като 12-те триъгълника. На колко градуса трябва да завивате след всяка фигура?'
      2-3 Artist Nested Loops 5_instruction: Запълнете прозорците на тази сграда с вложен цикъл. Прозорците са дълги 20 пиксела и са на 20 пиксела разстояние един от друг.
      2-3 Artist Nested Loops 6_instruction: Този динозавър има 8 шипа по опашка си; Всеки шип е дълъг 30 пиксела. Повторете триъгълника 8 пъти с цикъл, но се уверете, че се движите напред след всяко повторение.
      2-3 Artist Nested Loops 7_instruction: Повторете този триъгълник 10 пъти, за да нарисувате слънцето. Трябва да се движите и обръщате след всеки триъгълник. Можете да разберете на колко да се обръщате като разделите броя на градусите в кръга на броя фигури, които го правят.
      2-3 Artist Nested Loops 8_instruction: Сега нека добавим малко трева на нашата картина. Всеки сноп трева е на 50 пиксела от другия.
      2-3 Artist Nested Loops 9_instruction: Ние ще завършим тази картина чрез добавяне на цвете. Повторете (с цикъл) диаманта 12 пъти, за да нарисувате вашето цвете.
      2-3 Artist Nested Loops Free Play_instruction: Свободна игра, направи нещо готино с вложени повторения (цикли).
      2-3 Bee Conditionals 1_instruction: Здравейте! Аз съм пчела. Помогнете ми да събера нектар от цветето.
      2-3 Bee Conditionals 10_instruction: 'Лилавите цветя могат да имат 1 или 0 нектар. Внимавайте да не събирате нектар от лилаво цвете, ако то няма такъв (нектара е 0). '
      2-3 Bee Conditionals 11_instruction: Съберете нектара от цветята.
      2-3 Bee Conditionals 12_instruction: Използвайте повторение, за да проверите и съберете нектар от всички тези цветя.
      2-3 Bee Conditionals 13_instruction: |
        Съберете нектар и направете мед. 
        Съвет: какво се случва, ако използвате "ако нектар" условие за червеното цвете? Можете ли да направите това с повторение(цикъл)?
      2-3 Bee Conditionals 14_instruction: Съберете нектар и направете мед. Бъдете внимателни да не събирате нектар от лилаво цвете, ако то няма нектар.
      2-3 Bee Conditionals 15_instruction: Съберете нектар от всички четири цветя.
      2-3 Bee Conditionals 2_instruction: Здравейте, аз съм пчела! Помогнете ми да се събера всичкия нектар от цветята. Използвайте повторение(цикъл).
      2-3 Bee Conditionals 3_instruction: Помогнете ми се събера всичкия нектар от цветята и да направя мед. Използвайте повторение(цикъл).
      2-3 Bee Conditionals 4_instruction: Помогнете ми да събера всичкия нектар от цветята и да направя всичко на мед.
      2-3 Bee Conditionals 5_instruction: 'Лилавите цветя могат да имат 1 или 0 нектар, но не знаем кои имат и кои не! Бъдете внимателни, за да не събирате нектар от лилаво цвете, което няма нектар. Проверете дали нектара е равен на 1 с помощта на "ако" блок.'
      2-3 Bee Conditionals 6_instruction: 'Проверете това цвете с "ако" блок, за да видите дали има нектар.'
      2-3 Bee Conditionals 7_instruction: Съберете от всяко цвете нектар, ако има такъв.
      2-3 Bee Conditionals 8_instruction: Това поле има червени и лилави цветя. Червените цветя имат известено количество нектар, но нектара в лилавите цветя не е известен. Съберете всичкия нектар от двата вида цветя.
      2-3 Bee Conditionals 9_instruction: Съберете всичкия нектар от всяко цвете.
      2-3 Bee Conditionals Assessment 1_instruction: 'Оценка: Съберете всичкия нектар. Бъдете внимателни - не съберайте нектар от лилаво цвете, което няма такъв.'
      2-3 Bee Debugging 1_instruction: Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 10_instruction: Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 2_instruction: Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 3_instruction: Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 4_instruction: Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 5_instruction: Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед. Можете да използвате бягай(давай) и стъпка.
      2-3 Bee Debugging 6_instruction: 'Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед. '
      2-3 Bee Debugging 7_instruction: Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 8_instruction: Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 9_instruction: Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging Assessment 1_instruction: 'Оценка: Тези блокове наистина ме предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.'
      2-3 Bee Functions 1_instruction: 'Функциите са блокове с код, които изпълняват задача. Използвайте функцията "вземи 2 нектар", за събиране на нектар от всяко цвете.'
      2-3 Bee Functions 10_instruction: 'Лилавите цветя могат да имат 1 или 0 нектар.  Създайте функция, която събира нектара само от лилави цветя, които имат нектар.'
      2-3 Bee Functions 2_instruction: 'Функциите са блокове с код, които изпълняват задача. Използвайте функцията "получи 5", за да получите 5 нектара едновременно. Също, не забравяйте да използвате повторение(цикъл), за да получите желания брой.'
      2-3 Bee Functions 3_instruction: Съберете всичкия нектар от всяко цвете.
      2-3 Bee Functions 4_instruction: 'Функцията "върви напред и вземи нектар" завърта пчелата, събира нектар и след това връща пчелата в стартова позиция. Използвайте функцията, за да съберете всичкия нектар.'
      2-3 Bee Functions 5_instruction: Сега има повече нектар в цветята. Редактирайте дадената функция, така че да събира 4 нектара и я използвайте, за да се съберете всичкия нектар от цветята.
      2-3 Bee Functions 6_instruction: Сега използвайте същата функция, за да съберете нектар от трите цветя.
      2-3 Bee Functions 7_instruction: Цветята вече са по далеч. Редактирайте дадената функция и я използвайте, за да съберете всичкия нектар от цветята.
      2-3 Bee Functions 8_instruction: Създайте своя собствена функция, която получава 7 нектар, върви напред и после прави 7 мед. Използвайте функцията, за да съберете нектара от всяко цвете и правете мед на всяка медена пита.
      2-3 Bee Functions 9_instruction: 'Създайте своя собствена функция, с която пчелата да слиза по пътеката, да взима нектар, да прави мед и след това да се връща  в началото на пътя.'
      2-3 Bee Functions Assessment 1_instruction: 'Оценка: Използвайте дадената функция, за да съберете нектар от всяко цвете.'
      2-3 Bee Functions Assessment 2_instruction: 'Оценка: Създайте функция, за да направите 3 пъти мед наведнъж.'
      2-3 Bee Loops 1_instruction: 'Всеки цвят съдържа една единица нектар. Съберете нектара от всяко цвете. '
      2-3 Bee Loops 10_instruction: 'Можете ли да използвате "докато" повторение(цикъл) вътре в две други повторения(цикъла), за да съберете всичкия нектар?'
      2-3 Bee Loops 11_instruction: 'Използвайте "докато" повторения(цикли), за да съберете всичкия нектар от цветята в това поле.'
      2-3 Bee Loops 12_instruction: 'Използвайте "докато" повторения(цикли), за да съберете всичкия нектар от цветята в това поле.'
      2-3 Bee Loops 13_instruction: 'Оценка: Използвайте блок за повторение, за да се събере всичкия нектар.'
      2-3 Bee Loops 1A_instruction: 'Здравейте, аз съм пчела. Можете ли да ми помогнете да събера нектар от тези цветя? '
      2-3 Bee Loops 2_instruction: Използвайте повторение(цикъл), за да събирате нектар и правите мед.
      2-3 Bee Loops 2A_instruction: Можете ли да направите същото, но по-лесно с един цикъл?
      2-3 Bee Loops 3_instruction: Съберете нектар от всеки цвят и направете мед на всяка пита.
      2-3 Bee Loops 3A_instruction: Можете ли да използвате повторение, за да се събера всичкия нектар?
      2-3 Bee Loops 3B_instruction: Сега, използвайте новият блок за повторение, за да се събере всичкия нектар и да се направи всичко на мед.
      2-3 Bee Loops 4_instruction: Използвайте подобно повторение(цикъл) като при последната загадка, но сложете един завой в него.
      2-3 Bee Loops 4A_instruction: Какво ще стане, ако повторите тази последователност три пъти? Не забравяйте да направите мед в края!
      2-3 Bee Loops 5_instruction: Използвайте повторение(цикъл), за да отидете надолу по стъпките и съберете нектара.
      2-3 Bee Loops 6_instruction: |
        Използвайте повторение(цикъл), за да съберете нектар от всяко цвете и направите мед на всяка пита.
        
        
      2-3 Bee Loops 7_instruction: Пъхнете тези блокове в повторение(цикъл), за да съберете нектара от всяко цвете.
      2-3 Bee Loops 8_instruction: 'Тези лилави цветя имат неизвестно количество нектар. Използвайте "докато нектар" повторението(цикъла), за да съберете всичкия нектар. Това повторение(цикъл) ще продължи докогато условието е вярно, в този случай нектар > 0.'
      2-3 Bee Loops 9_instruction: '"Докато" може да извършва същото действие като "ако" условието в повторението(цикъл). Добавете "докато" повторение(цикъл) към този код, за да изпълните същата задача.'
      2-3 Bee Loops Assessment 1_instruction: 'Оценка - Използвайте "докато" повторение(цикъл), за да съберете всичкия нектар от това цвете.'
      2-3 Maze 1_instruction: 'Можете ли да ми помогнете да уловя непослушното прасе? Съберете няколко "върви напред" блока заедно и натиснете "Старт". '
      2-3 Maze 10_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze 11_instruction: Заведи ме до цветето, аз съм гладен! Колко пъти трябва да се повтаря блока?
      2-3 Maze 12 (copy 1)_instruction: 'Можеш ли да замениш предишния отговор само с два блока? (Съвет: Създай повторение(цикъл), като използваш блока "повтори  пъти").'
      2-3 Maze 12 (copy 2)_instruction: 'Можеш ли да замениш предишния отговор само с два блока? (Съвет: Създай повторение(цикъл), като използваш блока "повтори  пъти").'
      2-3 Maze 12 (old)_instruction: 'Заведи ме при прасето, този път като използваш блока за "повтори пъти"!'
      2-3 Maze 12_instruction: 'Можеш ли да замениш тези пет блока само с два? (Съвет: Създай повторение(цикъл) като използваш блока "повтори  пъти").'
      2-3 Maze 13 (old)_instruction: 'Заведи ме при прасето, този път използвай блока "повтори докато"!'
      2-3 Maze 13_instruction: Заведи ме до прасето, използвайки само два блока.
      2-3 Maze 14 (old)_instruction: 'Заведи ме за прасето, като използваш "докато" блок!'
      2-3 Maze 14_instruction: 'Заведи ме до слънчогледа! (Къде е този "повтори пъти" блок, когато имам нужда от него?)'
      2-3 Maze 15 (old)_instruction: 'Заведи ме до прасето, като използваш "докато" блок!'
      2-3 Maze 15_instruction: 'Използвайте два цикъла, за да стигнем до прасето  с по-малко блокове.'
      2-3 Maze 16 (old)_instruction: 'Заведи ме до прасето, като използваш "докато" блок!'
      2-3 Maze 16 before_instruction: Заведи ме до прасето.
      2-3 Maze 16_instruction: Заведи ме до слънчогледа. Повтори поредицата действия!
      2-3 Maze 2_instruction: Това прасе ми разрошва перушината. Помогнете ми да го хвана!
      2-3 Maze 3_instruction: Проследете пътя и ме заведете до глупаво прасе. Избягвайте TNT(динамита) или ще летят пера!
      2-3 Maze 4_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze 5_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze 6_instruction: Запази спокойствие и ми помогни да намеря лошото прасе. Иначе ще се ядосам!
      2-3 Maze 7_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze 8_instruction: Заведи ме до прасето!
      2-3 Maze 9_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze Loops 1_instruction: Можеш ли да ме заведеш до прасето с 5 блока?
      2-3 Maze Loops 17_instruction: Заведи ме до слънчогледа!
      2-3 Maze Loops 18_instruction: Заведи ме до слънчогледа!
      2-3 Maze Loops 19_instruction: Заведи ме до слънчогледа!
      2-3 Maze Loops 20_instruction: Заведи ме до слънчогледа!
      2-3 Maze Loops 21_instruction: Заведи ме до слънчогледа!
      2-3 Maze Loops Assessment 1_instruction: 'Оценка: Заведи ме до слънчогледа, като използваш само 5 блока! '
      2-3 Maze sq1_instruction: |
        This pig is ruffling my feathers.  Help me find
        him!
      2-3 Maze sq10_instruction: Заведи ме до прасето! Кои блокове трябва да се повторят?
      2-3 Maze sq10v2_instruction: Заведи ме до прасето! Кои блокове трябва да се повторят?
      2-3 maze sq11_instruction: Заведи ме до прасето! Кои блокове трябва да се повторят?
      2-3 maze sq12_instruction: 'Можеш ли да замениш предишния отговор с едно повторение(цикъл) с помощта на блока "повтори пъти"?'
      2-3 maze sq13_instruction: 'Скъпи човеко. Аз зомби. Трябва... отида... до слънчогледа. Създайте повторение(цикъл) с блока "повтаряй докато".'
      2-3 maze sq14_instruction: Можете ли да стигнете до слънчогледа, използвайки само четири блока?
      2-3 maze sq15_instruction: Можете ли да стигнете до слънчогледа, използвайки само пет блока?
      2-3 maze sq16_instruction: Добре, това е подобно, но с малко разлики. Можеш ли да го направиш само с пет блока?
      2-3 Maze sq2_instruction: 'Проследете пътя и ме заведете до глупавото прасе.  Избягвайте TNT(динамит) или ще летят пера!'
      2-3 Maze sq3_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze sq4_instruction: Запази спокойствие и ми помогни да намеря лошото прасе. Иначе ще се ядосам!
      2-3 Maze sq5_instruction: Заведи ме до прасето! Колко пъти трябва да повтаряш блока?
      2-3 Maze sq6_instruction: 'Можеш ли да замениш предишния отговор само с два блока? (Съвет: създай повторение(цикъл), като използваш блока "повтори пъти".)'
      2-3 Maze sq7_instruction: Заведи ме до зеления нарушител, използвайки само три блока.
      2-3 Maze sq8_instruction: 'Заведи ме до прасето! (Къде е този "повтори пъти" блок, когато имам нужда от него?)'
      2-3 Maze sq9_instruction: Създайте цикли, за да стигнем до прасето, използвайки по-малко блокове.
      2-3_instruction: |
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: Подпомогнете на птицата да улови палавото прасе като я преместите напред
      4-5 Artist 1_instruction: 'Помогнете ми да дочертая моята кутия. (Всяка линия е дълга 300 пиксела) '
      4-5 Artist 10_instruction: 'Натиснете "Старт", за да изпробвате кода. След това го повторете достатъчно пъти, за да завършите рисунката. Цветовете ще бъдат различни всеки път.'
      4-5 Artist 11_instruction: Завърши зелените линии. Линиите са дълги 300 пиксела и са на 15 пиксела разстояние една от друга.
      4-5 Artist 2_instruction: Можеш ли да повториш този код, за да завърша квадрата?
      4-5 Artist 3.5_instruction: 'Ок, опитай се да разбереш какво става, ако изпълниш този код (или натисни "Старт", за да го изпробваш). След това, го повтори достатъчно пъти, за да  завършиш рисунката. Цветовете (най-вероятно) ще са различни всеки път.'
      4-5 Artist 3_instruction: Тази правоъгълна леха от цветя има периметър от 600. Дългата страна има дължина от 200. Начертайте правоъгълника.
      4-5 Artist 4_instruction: 'Колко градуса има в 1 кръг?  Направи повторение(цикъл) на блокове, за да създадеш кръг от цветове.'
      4-5 Artist 5_instruction: Какъв ъгъл да използваме?
      4-5 Artist 6_instruction: Този равностранен триъгълник има ъгли от 60, 60 и 60 градуса. Всяка страна е 200 пиксела. Завърши рисунката.
      4-5 Artist 7_instruction: 'Този правоъгълен триъгълник е с ъгли  30, 60 и 90 градуса. Дължината на наклонената страна(хипотенуза)  е два пъти по-голяма от височината, която е 100 пиксела. Завърши рисунката.'
      4-5 Artist 8_instruction: Средната линия на футболно игрище е перпендикулярна на периферията. Това поле има периметър 800 пиксела и е дълго 240 пиксела. Колко е широко? Начертайте границите и централната линия.
      4-5 Artist 9_instruction: Начертайте другата половина, така че дизайнът да е симетричен. Триъгълниците са равностранни и с дължина 50 пиксела.
      4-5 Artist Assessment 1_instruction: 'Оценка: Използвайте цикъл за изчертаване на равностранен триъгълник. Всяка страна е 300 пиксела.'
      4-5 Artist For Loops 1_instruction: 'Поставете числата от 1 до 10 в блоковете за параметър "ширина"  и стартирайте кода.'
      4-5 Artist For Loops 11_instruction: 'Завършете "за" блока, така че той да брои 0, 20, 40, 60, 80... 200.'
      4-5 Artist For Loops 12_instruction: 'Какво става, ако обърнете местата на "от" и "до" номерата? Завършете "за" блока, така че той да брои 200, 180, 160, 140, 120... 0. '
      4-5 Artist For Loops 13_instruction: 'Този дизайн е започнат без цикъл "за" и е с твърде много блокове!  Използвайте блок "за", за да завършите спиралата.  Съвет: на последния ред дължината е 250 пиксела.'
      4-5 Artist For Loops 14_instruction: 'Някой е започнал кода, но след това е разбрал, че трябва да има по-бърз начин! Използвайте блок "за", за да замените блоковете и да завършите триъгълната спирала. (Съвет: в последния ред дължината е 300 пиксела.)'
      4-5 Artist For Loops 15_instruction: 'Някой започна кода, но след това разбрах, трябва да има бърз начин! Използвайте "за" блок да замени блокове и пълна шестоъгълни спирала. (Намек: дължината на последния ред е 200 пиксела.)'
      4-5 Artist For Loops 3_instruction: 'Как може да преброим от 1 до 50? Редактирайте "за" блока.'
      4-5 Artist For Loops 4_instruction: 'Завършете "за" блока, така че той да брои от 1 до 10 през 1.'
      4-5 Artist For Loops 6_instruction: 'Начертайте квадрати със страни от 50, 60, 70, 80 и 90 пиксела. Трябва да използвате функцията "начертава квадрат" пет пъти.'
      4-5 Artist For Loops 7_instruction: 'Начертайте същите квадрати, но използвайте  блок брояч за промяна на размерите. Поставете блока брояч във функцията "начертава квадрат". Съвет: Тя е в категорията променливи.'
      4-5 Artist For Loops 8_instruction: 'Може ли да завършите програмата чрез поставяне на блокове в "за" блока, който да брои от 10 до 200 през 10? Можете да намерите "за" блока в категорията "цикъл".'
      4-5 Artist For Loops 9_instruction: 'Тези кръгове са с размер 5, 10, 15, 20, 25, 30 и 35. Начертайте кръговете с помощта на "за" блока.'
      4-5 Artist Free Draw 1_instruction: 'Свободно рисуване!  Начертайте каквото вдъхновението ви каже.'
      4-5 Artist Functions 1_instruction: Използвайте повторение, за да начертаете този триъгълник.
      4-5 Artist Functions 10a_instruction: 'Поставете този код във функцията "начертава снежинка" и заменете 50 с параметъра "размер". Функцията вече е извикана да направи снежинка, която е 100 пиксела.'
      4-5 Artist Functions 10b_instruction: 'Използвайте функцията "начертава снежинка" за създаване на различни по размер снежинки.  Съвет: първата снежинка е с 25 дължина и всяка следваща снежинка е два пъти по-голяма от предишната.'
      4-5 Artist Functions 11_instruction: 'За тази "начертава шестоъгълник" функция е използвана функцията "Начертава триъгълник". Завършете функцията за шестоъгълник. (Съвет: шестоъгълникът има 6 страни, всяка по 100 пиксела дълга)'
      4-5 Artist Functions 12_instruction: 'Изпълните функцията "начертава вълни".  Всяка вълна се състои от един гребен и едно понижение.   Съвет: Начертайте 5 сини вълни.'
      4-5 Artist Functions 13 Free play_instruction: Ето функции, с които да нарисувате планети, звезди, ракети и роботи. Използвайте ги както прецените, за да направите картини, които можете да споделяте с приятелите си.
      4-5 Artist Functions 14 Free play_instruction: 'Тук ние сме Ви предоставили няколко функции.  Използвайте ги както искате в рамките на един или повече цикли, за да направите картини, които можете да споделяте с приятелите си. Щракнете върху "Старт", за да видите готов пример.'
      4-5 Artist Functions 15 Assessment_instruction: 'Оценка: Използвайте функцията "начертава квадрат" за създаване на квадрати.  Квадратите са със страни 50, 100 и 150 пиксела.'
      4-5 Artist Functions 2a_instruction: 'Сложете тези блокове в нова функция, наречена "начертава малък триъгълник" и я извикайте.'
      4-5 Artist Functions 2b_instruction: 'Създайте функция, наречена "начертава малък триъгълник", с помощта на предоставените блокове.'
      4-5 Artist Functions 3_instruction: 'Създайте функциите "начертава среден триъгълник" и "начертава голям триъгълник". Функцията "начертава малък триъгълник" е направена за вас. Триъгълниците имат дължини на страните 50 (малък), 100 (среден) и 150 (голям). '
      4-5 Artist Functions 4_instruction: 'Тази нова "начертава триъгълник" функция има параметър и може да извърши работата на всичките три функции от предишната задача. Начертайте същите триъгълници с помощта на тази нова функция.'
      4-5 Artist Functions 5_instruction: 'Може ли да модифицирате функцията "начертава триъгълник" в "начертава квадрат" функция, за да промените чертежа?'
      4-5 Artist Functions 6_instruction: 'Използвайте "начертава квадрат" и "Начертава триъгълник" функциите, за да се направи една къща. (Съвет: страните на квадрата са 200 пиксела)'
      4-5 Artist Functions 6b_instruction: 'Използвайте начертава квадрат и триъгълник функции, както и други блокове, за да начертаете къща, като ги добавите към "начертава къща" функцията. Извикайте я, за да завършите чертежа.'
      4-5 Artist Functions 7_instruction: 'Използвайте функцията "начертава къща", за да нарисувате къщи, които са 100 пиксела и 50 пиксела. Двете къщи са разделени от 50 пиксела.'
      4-5 Artist Functions 8_instruction: 'Функцията "рисува цвете" има  параметър, който Ви позволява да настроите височината на стъблото.  Задайте го на 200 и вижте какво се случва.'
      4-5 Artist Functions 9_instruction: Начертайте тези 3 цветя. Първото е с височина 100 и следващото цвете е винаги с 50 пиксела повече от височината на предишното. Цветята също са на 100 пиксела разстояние едно от друго.
      4-5 Artist Patterns 1_instruction: Можете ли да начертаете този квадрат като използвате цикъл? Всяка страна е дълга 20 пиксела.
      4-5 Artist Patterns 10_instruction: 'Този код чертае два реда от шестоъгълници - повторете всичко 4 пъти, за да нарисувате цялата медена пита. Съвет: Трябва да се скочи назад 120 пиксела в най-последеният цикъл, за да не рисува художника извън екрана.'
      4-5 Artist Patterns 11_instruction: 'Колко пъти трябва да се повтори това, за да се направи половин кръг? Съвет: ако в кръга има 360 градуса и всеки цикъл добавя 3 градуса, колко пъти ще повтаряме, за да се направи пълен кръг?'
      4-5 Artist Patterns 12_instruction: Ако повторите този цикъл и завиете наляво вместо надясно, какво става? Можете ли да повторите това, за да начертаем тази вълна?
      4-5 Artist Patterns 13_instruction: 'Сега, нека повторим това четири пъти, за да създадете тази рамка за картина. Следете за ъглите - не можете да завиете само на 90 градуса! Ако повторите завиване на  3 градуса 60 пъти ще направите полукръг, а кой от тези блокове с код ще направи една четвърт кръг за ъглите?'
      4-5 Artist Patterns 2_instruction: Ако поставите квадратно повторение(цикъл) вътре в друго повторение(цикъл), ние наричаме това вложено повторение(цикъл). Какво трябва да добавите към вашето външно повторение (цикъл), за да се уверите, всички 15 квадрати се нареждат в една линия един до друг?
      4-5 Artist Patterns 3_instruction: Сега нека отидем едно ниво по-нагоре! Ние сме вложили целия блок от код в друго повторение(цикъл), но вие трябва да върнете художника обратно, за да нарисува следващата линия. Кои от тези блокове код може да поставите в края на последното повторение(цикъл), за да нарисувате цялата мрежа?
      4-5 Artist Patterns 4_instruction: Този диамант има 50 пикселови страни и ъгли от 120 и 60 градуса. Използвайте повторение(цикъл), за да го нарисувате.
      4-5 Artist Patterns 5.5_instruction: Колко пъти трябва да се повтаря този блок, за да се начертае пълната мрежа от диаманти?
      4-5 Artist Patterns 5_instruction: 'Нека да повторим това, за да направиш ред от 6 диаманти. Обърни внимание, че променихме нашия диамантен код да се повтаря 3 пъти вместо 2 - Защо мислиш че направихме това?'
      4-5 Artist Patterns 6_instruction: Колко пъти трябва да се повтаря този блок, за да се изчертае пълната мрежа от диаманти?
      4-5 Artist Patterns 7_instruction: 'Нека променим кода от последната загадка и да направим този по-сложен модел. Забележете как диамантите се припокриват, сега опитайте да промените първото "скочи назад" от 100 до 50 (на половина) - докъде трябва да отиде художника във второто "скочи назад"?'
      4-5 Artist Patterns 8_instruction: Използвайте повторение(цикъл), за да нарисувате този шестоъгълник с 40 пикселови страни и 60 градусови ъгли.
      4-5 Artist Patterns 9.5_instruction: Направи повторение(цикъл) на този код, за да начертаеш два реда шестоъгълници. Забележете как нашият втори ред се измества надясно.
      4-5 Artist Patterns 9_instruction: 'Сега, повторете кода 3 пъти, за да начертаете целия ред. Съвет: всеки шестоъгълник е на 80 пиксела отдалечен отляво надясно.'
      4-5 Artist Patterns Free Play_instruction: 'Свободна игра - опитай да направиш твой собствен модел!'
      4-5 Bee Conditionals - FC Test_instruction: Пчела иска нектар точно сега. Не всички обекти са цветя, така че проверете всеки ОБЛАК, за да се види дали отдолу се крие цвете. Ако е така, тогава можете да съберете нектар.
      4-5 Bee Conditionals 1 (copy 1)_instruction: |
        The bee can't tell if this is
        a flower or a honeycomb. Gather nectar only from flowers, but first check
        if it is a flower or a honeycomb.
      4-5 Bee Conditionals 1_instruction: Пчела не може да различи дали това е цвете или медена пита. Събирай нектар само от цветята, но първо провери дали това е цвете или медена пита.
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        The bee only wants nectar right
        now. Remember, not all objects are flowers, so check to gather nectar only
        at flowers.
      4-5 Bee Conditionals 2_instruction: Пчелата иска само нектар сега. Не всички обекти под облачетата са цветя, така че направете проверка и събирайте нектар само от цветята.
      4-5 Bee Conditionals 3_instruction: Сега пчела просто иска да направи мед. Проверете дали правите меда точно в медните пити.
      4-5 Bee Conditionals 4 (copy 1)_instruction: Неизвестният обект е цвете или медена пита. Използвайте ако/иначе блок, за да събера нектар, ако обекта е цвете, иначе да направя мед (защото е медена пита).
      4-5 Bee Conditionals 4_instruction: Неизвестния обект е цвете или медена пита. Използвайте ако/иначе блок, за да съберете нектар ако е цвете, иначе направете мед (защото е медена пита).
      4-5 Bee Conditionals 5_instruction: Може да има цвете или медена пита под тези облаци. Използвайте ако/иначе блок за събиране на нектар, ако има цвете, иначе да се прави мед (защото има медена пита).
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        This purple flower may have either
        3, 2, or 1 nectar. Here an if-else block is combined with another if-else
        block to create an if, else-if, else block. Complete the solution to collect
        the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: Това лилаво цвете може да има 3, 2 или 1 нектар. Тук ако-иначе блок е комбиниран с друг ако-иначе блок, за да създадете ако, иначе-ако, иначе блок. Завършете решението, за да съберете неизвестното количество нектар.
      4-5 Bee Conditionals 7_instruction: 'Не забравяйте, че лилавите цветя може да имат 3, 2 или 1 нектар. Допълнете функцията "провери лилаво цвете" и я използвайте, за да се съберете всичкия нектар от цветята.'
      4-5 Bee Conditionals 8_instruction: 'Напиши функция вътре в блока, наречен "провери цвете, прави мед." Твоята функция трябва да провери колко нектар има лилавото цвете и да го събере - върви напред и след това направи мед.'
      4-5 Bee Conditionals Assessment 1_instruction: |
        Оценяване: Този код е грешен.
        Изпълни функцията "вземи нектар или прави мед", а след това я извикай, за да събереш всичкия нектар и мед. Не забравяй, че лилавите цветя може да имат 3, 2 или 1 нектари.
      4-5 Bee Debugging 1_instruction: Тези блокове наистина ме бъгват(подразнят). Можете ли да ги коригирате?
      4-5 Bee Debugging 10_instruction: Открий грешките и ги поправи.
      4-5 Bee Debugging 11_instruction: Дали това брои правилно?
      4-5 Bee Debugging 2_instruction: Помогни на пчелата да вземе нектар и направи мед.
      4-5 Bee Debugging 3_instruction: Открий грешките и ги поправи.
      4-5 Bee Debugging 4_instruction: Тези блокове не работят. Какъв е модела?
      4-5 Bee Debugging 5_instruction: Нещо не е наред тук...
      4-5 Bee Debugging 6_instruction: Лилавото цвете има неизвестна сума нектар. Поправи блоковете, за да получиш всичкия нектар от цветето.
      4-5 Bee Debugging 7_instruction: На функцията й липсва нещо...
      4-5 Bee Debugging 8_instruction: Тази функция е правилна, но тя не се използва по правилен начин.
      4-5 Bee Debugging 9_instruction: Защо пчелата не прави достатъчно мед?
      4-5 Bee Debugging Assessment 1_instruction: 'Оценяване: Поправи кода.'
      4-5 Bee Nested Loops 1_instruction: Използвайте повторение(цикъл), за да се съберете всичкия нектар.
      4-5 Bee Nested Loops 2_instruction: 'Съберете всичкия на нектара от всяко цвете. Използвайте вложено повторение(цикъл). '
      4-5 Bee Nested Loops 3_instruction: 'Съберете всичкия нектар чрез въвеждане на началния код във вложено повторение(цикъл). '
      4-5 Bee Nested Loops 4_instruction: 'Съберете всичкия нектар от всяко цвете и правете мед на всяка пита. Използвайте вложено повторение(цикъл). '
      4-5 Bee Nested Loops 5_instruction: 'Съберете всичкия нектар чрез създаване на вложено повторение(цикъл). '
      4-5 Bee Nested Loops 6_instruction: Съберете всичкия нектар.
      4-5 Bee Nested Loops 7_instruction: Постави това повторение(цикъл) в друго повторение(цикъл), за да създадеш вложено повторение(цикъл) и да събереш всичкия нектар от цветята.
      4-5 Bee Nested Loops 8_instruction: 'Събери всичкия нектар от тези цветя като използваш "докато" повторение(цикъл). Замени вътрешния блок "повтори пъти" с  "докато" повторение(цикъл). '
      4-5 Bee Nested Loops 9_instruction: 'Събери всичкия нектар от тези цветя като вложиш  "докато" повторение(цикъл) вътре в повторение.'
      4-5 Bee Nested Loops Assessment 1_instruction: 'Оценяване: Събери всичкия нектар и направи всичкия мед като използваш повторения(цикли).'
      4-5 Bee Nested Loops Rows_instruction: Събери нектар от редовете цветя! Използвай вложено повторение(цикъл).
      4-5 Maze 1 (copy 1)_instruction: Скъпи човеко. Аз зомби. Трябва... отиде... до слънчогледа.
      4-5 Maze 1_instruction: Скъпи човеко. Аз зомби. Трябва... отиде... до слънчогледа.
      4-5 Maze 10_instruction: Можете ли да стигнете до слънчогледа, използвайки само четири блока?
      4-5 Maze 11_instruction: Можете ли да отидете до слънчогледа, като използвате само шест блока?
      4-5 Maze 12_instruction: ОК, това е малко по-различно. Можете ли да го направите само с шест блока?
      4-5 Maze 13_instruction: Заведи ме до прасето!
      4-5 Maze 14_instruction: Отведи ме до прасето! Използвай блока за Повторяй докато.
      4-5 Maze 2 (copy 1)_instruction: Заведи зомбито до слънчогледа, но избягвай хищното цвете!
      4-5 Maze 2_instruction: Заведи зомбито до слънчогледа, но избягвай хищното цвете!
      4-5 Maze 3 (copy 1)_instruction: Трябва... отиде... до слънчогледа.
      4-5 Maze 3_instruction: Трябва... отиде... до слънчогледа.
      4-5 Maze 4 (copy 1)_instruction: 'Опитай блока "повтаряй", за да използваш по-малко блокове...'
      4-5 Maze 4_instruction: 'Опитай блока "повтаряй", за да използваш по-малко блокове...'
      4-5 Maze 5 (copy 1)_instruction: Можеш ли да решиш този пъзел, с помощта на възможно най-малък брой блокове?
      4-5 Maze 5_instruction: Можеш ли да решиш този пъзел, с помощта на възможно най-малък брой блокове?
      4-5 Maze 6 (copy 1)_instruction: Можеш ли да решиш този пъзел, с помощта на възможно най-малък брой блокове?
      4-5 Maze 6_instruction: Можеш ли да решиш този пъзел, с помощта на възможно най-малък брой блокове?
      4-5 Maze 7_instruction: Скъпи човеко. Аз зомби. Трябва... отиде... до слънчогледа.
      4-5 Maze 8_instruction: Използвай блок за повторение, за да заведеш зомбито до слънчогледа. (Избягвай хищните цветя!)
      4-5 Maze 9_instruction: 'Създай повторение(цикъл) с "повтаряй докато" блок.'
      4-5 Maze Assessment 1_instruction: 'Оценяване: Стигни до слънчогледа.'
      4-5 Maze Conditionals 1_instruction: Използвайте блока за повторение, за да заведете зомбито до слънчогледа.
      4-5 Maze Conditionals 10_instruction: Можеш ли да добавиш само 3 блока, за да ми помогнеш да разгадая един по-сложен лабиринт? Ако го направиш правилно, аз ще мога да вървя по всяка крива пътека, независимо колко е дълга.
      4-5 Maze Conditionals 2_instruction: Използвайте блока за повторение, за да заведете зомбито до слънчогледа.
      4-5 Maze Conditionals 3_instruction: 'Използвай "Ако" блок, за да ми позволиш да реша кога да обърна. Съвет: трябва само още един блок, но научи как ние правим цялото нещо, така че да можеш ти сам да го направиш следващия път.'
      4-5 Maze Conditionals 4_instruction: 'Добре, това е точно като последната загадка, но трябва да си спомниш как използва заедно блока "ако" и блока "повтаряй".'
      4-5 Maze Conditionals 5_instruction: 'Аз иска слънчоглед! Използвай "ако" блок да ме заведеш до него с най-малкия брой блокове.'
      4-5 Maze Conditionals 6_instruction: 'Аз иска слънчоглед! Използвай "ако" блок да ме заведеш до него с най-малкия брой блокове.'
      4-5 Maze Conditionals 7_instruction: 'ОК, нека направим това отново за практика - то не е много по-различено, но внимавай за хищните цветя!'
      4-5 Maze Conditionals 8_instruction: 'Блоковете "ако-иначе"  проверяват условие, и след това правят едно нещо ИЛИ друго. За да ме  заведеш до слънчогледа, опитай да използваш този нов блок.'
      4-5 Maze Conditionals 9_instruction: 'Още едно упражняване на блока "ако-иначе", можеш ли да го направиш правилно още на първия си опит?'
      4-5 Maze Conditionals Assessment 1_instruction: 'Използвай "повтаряй докато" и "ако-иначе" блок, за да ме заведеш към слънчогледа с възможно най-малко блокове.'
      4-5 Nested Loops 1_instruction: 'Допълнете кода, за да нарисувате тези триъгълници.  Първият е направен за теб.  Упътване: 3 триъгълника в 360 градусово завъртане.'
      4-5 Nested Loops 10_instruction: Начертайте последния ред на звездите на този флаг с повтаряне на предоставените блокове. Звездите са на 50 пиксела разстояние една от друга, но не забравяйте, че самите звезди са 30 пиксела широки.
      4-5 Nested Loops 11_instruction: Можете ли да начертаете тези 10 квадрата на тротоара, използвайки цикъл? Всеки квадрат е 30 пиксела.
      4-5 Nested Loops 12_instruction: Можеш ли да начертаеш тези 36 триъгълници с помощта на вложено повторение(цикъл)?
      4-5 Nested Loops 2_instruction: 'Сега постави в този цикъл друг цикъл, за да начертаем 10 триъгълници.  Това се нарича вложен цикъл.  Съвет: Всички 10 триъгълници правят 360 градуса завъртане.  '
      4-5 Nested Loops 3_instruction: "Създайте слънцето чрез влагане на първоначалния код в цикъл. Това се нарича вложен цикъл. \r\n"
      4-5 Nested Loops 5_instruction: 'Направи  повторение(цикъл) на дадения код, за да създадеш вятърна мелница.'
      4-5 Nested Loops 6_instruction: Може ли да начертаете шестоъгълник като повторите кода на триъгълника?
      4-5 Nested Loops 7_instruction: 'Повторете този дизайн 10 пъти. Колко ли трябва да се завъртате всеки път след повторение? (Съвет: Колко е 360 делено на 10?)'
      4-5 Nested Loops 8_instruction: 'Повторете този дизайн 6 пъти. Колко ли трябва да се завъртате всеки път след повторение? (Съвет: Колко е 360, разделено на 6?)'
      4-5 Nested Loops 9_instruction: Начертайте зъбите в устата на алигатора!
      4-5 Nested Loops Assessment 1_instruction: Използвайте вложен цикъл, за да завършите дизайна.
      4-5 While Loops 1_instruction: Премести ме до ямата, за да я напълня с две лопати пръст с помощта на блок за запълване.
      4-5 While Loops 2_instruction: Премести ме към купчината, за да я премахна с 5 лопати с помощта на блок за премахване.
      4-5 While Loops 3_instruction: 'Премести ме към купчината за да я изравня, след това ме премести до ямата за да я запълня  Съвет: Използвайте по-малко блокове ако е възможно.'
      4-5 While Loops 4_instruction: 'Уау, аз намерих наистина дълбока яма! Не знам с колко лопати да я запълня.  Можете ли да напишете програма, която ще запълва с колкото лопати е нужно?  Съвет: Опитайте се да използвате "докато" повторение.'
      4-5 While Loops 5_instruction: Уау, сега има две дълбоки ями! Можете ли да напишете програма, която да ги изпълва и двете?
      4-5 While Loops 6_instruction: Уау, сега там има голяма купчина! Можете ли да напишете програма, която да премахва излишната почва, докато земята се заравни?
      4-5 While Loops 7_instruction: Уау, сега има три купчини! Можете ли да напишете програма, която премахва всяка от тях, докато се заравни земята?
      4-5 While Loops 8_instruction: 'Това е наистина дълбока яма и наистина голяма купчина пръст.  Колко лопати ще трябват  за да се заравни земята?  Съвет: Използвайте цикъл и за двете.'
      4-5 While Loops Assessment 1_instruction: 'Има много ями и купчини.  Помогнете ми да ги запълня и премахна излишната почва, за да заравня земята.'
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      AllTheThings Applab - Turtle move with button_instruction: |
        Add a button that
        moves the turtle when clicked.  (Click to see full instructions)
      allthethings data blocks test_instruction: |
        Please sign in to test applab levels
        (By design, applab levels only work if signed in. Normally, we make people
        sign in, but this is only enforceable for a whole script and would be annoying
        to do for the allthethings script).
      allthethings design mode elements_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      allthethings_moviebot_instruction: |
        This level cloned from "U3 Digital Assistant
        Target"
      allthethings_template_backed1_instruction: |
        Backed by a template #1. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script). 
      allthethings_template_backed2_instruction: |
        Backed by a template #2. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script).
      App Lab test_instruction: тест
      Applab test_instruction: This level is submittable. For testing only!
      AppLab_test02_instruction: |
        One sentence summary of the activity. Click to
        view full instructions.
      Artist - Nested Loops 1_instruction: 'Допълнете кода, за да нарисувате тези триъгълници.  Първият е направен за теб.  Упътване: 3 триъгълника в 360 градусово завъртане.'
      Artist - Nested Loops 10_instruction: Начертайте последния ред от звезди на този флаг с повторение(цикъл) на предоставените блокове. Звездите са 50 пиксела една от друга, но запомнете, че самите звезди са 30 пиксела.
      Artist - Nested Loops 11_instruction: Можеш ли да начертаеш тези 10 квадрата на тротоара, с вложени повторения(цикли)? Всеки квадрат е 30 пиксела.
      Artist - Nested Loops 12_instruction: Можеш ли да начертаеш тези 36 триъгълници с помощта на вложени повторения(цикли)?
      Artist - Nested Loops 2_instruction: 'Сега вложи това повторение(цикъл) вътре друго повторение(цикъл), за да нарисуваш 10 триъгълника.  Това се нарича вложено(вътрешно) повторение(цикъл).  Упътване: Всички 10 триъгълника правят 360 градусово завъртане.  '
      Artist - Nested Loops 3_instruction: 'Създай слънцето чрез влагането на начален код в друго повторение(цикъл). Това се нарича вложено(вътрешно)  повторение(цикъл).  '
      Artist - Nested Loops 5_instruction: 'Направи  повторение(цикъл) на дадения код и създавай вятърна мелница.'
      Artist - Nested Loops 6_instruction: Може ли да начертаете шестоъгълник като повторяте кода на триъгълника?
      Artist - Nested Loops 7_instruction: 'Повторете този дизайн 10 пъти. Колко ли трябва да се завъртаме всеки път след повторение? (Съвет: Колко е 360 делено на 10?)'
      Artist - Nested Loops 8_instruction: 'Повторете този дизайн 6 пъти. Колко ли трябва да се завъртаме всеки път след повторение? (Съвет: Колко е 360, разделено на 6?)'
      Artist - Nested Loops 9_instruction: Начертайте зъбите в устата на алигатора!
      Artist - Nested Loops Assessment 1_instruction: Използвайте внесен цикъл, за да завършите дизайна.
      Auto Open Function Editor_instruction: |-
        Можете да извикате функция която се намира в друга функция! Използвайте функция "фигура' и начертайте 3 къщи, всяка с 20 пиксела по-голяма от предходната, като първата е 50 пиксела. Помогнете си, като използвате цикъл "брояч" . 
      Bee Recommended Blocks test_instruction: 'Лилавите цветя могат да имат 1 или 0 нектар, но не знаем кои имат и кои не! Бъдете внимателни да не събирате нектар от лилаво цвете, което няма нектар. Проверете дали нектара е равен на 1 с помощта на "ако" блок.'
      Big Game Animation 1 (copy 1)_instruction: |
        Now that you've learned to write
        simple linear functions, let's work on using them to add some movement to
        our game. Click play to see what your game can currently do (not much!), update
        any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click "Run" to see what your game can currently do (not much!), update any
        variables you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        The function 'update-target'
        function takes the target's current x value, and returns an updated value.
        Complete the 'update-target' function so that it adds to the x value each
        time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: 'Задачата на "актуализиране-цел" функцията е да  следи текущата стойност на x и да връща актуализираната ѝ стойност. Завършете "актуализиране-цел" функцията така, че тя да добавя стойността на х, всеки път, щом е извикана. Колкото повече добавяте към x- толкова по-бързо целта ще се движи.'
      Big Game Animation 3_instruction: 'Функцията "актуализиране-опасност" трябва да работи точно както "актуализиране-цел", с изключение, че опасността трябва да се движи отдясно наляво. Допълнете функцията "актуализиране-опасност" да задвижи опасността да лети по екрана.'
      Big Game Animation 4_instruction: В този момент, опасността в играта Ви трябва да се движи на екрана отдясно наляво, а вашата цел трябва да се задвижи отляво надясно. Те няма да се върнат на екрана ако излязат от него, но ние ще се погрижим за това по-късно. Поиграйте си с играта за да се уверите, че работи като искате, а след това щракнете върху Готово, за да продължите.
      Big Game Booleans 1_instruction: Когато последно работехте върху играта си, добавихте целта и опасността да летят на екрана, но не и да се връщат като стигнат края на полето. Щракнете върху Старт, за да видите как играта в момента работи, след това ще поработим, за да направим тези обекти да се връщат на екрана, след като са излезли от него.
      Big Game Booleans 2_instruction: ' Преминете към раздела "Функции" на кутията с инструменти и довършете Сейф-ляво? функцията така, че тя да връща true ако стойността х на Спрайта е  по-голяма от -50. Ако сте успели да я довършите правилно, трябва да видите опасността да напуска лявата страна на екрана и да се връща от дясната страна.'
      Big Game Booleans 3_instruction: Сега, след като имате Сейф ляво?, да попълним Сейф-дясно? -Тя трябва да проверява Спрайт x координата и да връща true, ако тя е по-малка от 450. След като Сейф-дясно? е завършена, трябва да видите дали целта излиза от дясната страна на екрана и се връща от ляво.
      Big Game Booleans 4_instruction: 'Довършете onscreen? функцията, така че тя да проверява  дали Сейф-ляво? и сейф дясно? са верни.'
      Big Game Booleans 5_instruction: В този момент, в играта Ви опасността трябва да се движи на екрана отдясно наляво и вашата цел трябва да се движи, но отляво надясно. В един момент двете трябва да се обърнат на противоположната страна. Пробвайте, за да се уверите, че Вашата игра работи като искате, след това щракнете върху Готово, за да продължите.
      Big Game Collision 1 (copy 1)_instruction: Когато последно работехте върху играта си, добавихте целта и опасността да летят на екрана, но не да се връщат като стигнат края му. Щракнете върху Старт, за да видите как играта в момента работи и след това ние ще поработим, за да направим тези обекти да се връщат на екрана, след като са излезли от него.
      Big Game Collision 1_instruction: 'На този етап, Вие сте програмирани видео игра с подвижна мишена и опасност (и двете се връщат на екрана, след като са излезли от него) и един играч, който отговаря на натискане на клавиши. Щракнете върху Старт, за да видите как играта работи, а след това ние ще програмираме последната липсваща част - отчитане на сблъсък!'
      Big Game Collision 2_instruction: 'За да преместим играча нагоре и надолу, ние ще трябва да използваме условен блок, който да разбере кой клавиш е натиснат и да реагира по съответния начин. Компютрите разчитат клавишите като цифрови кодове - стрелка нагоре е 38, а стрелката надолу е 40. Можете да погледнете и други цифрови кодове във вашата работна книга. Редактирайте "актуализира-играч" функцията, така че играчът се движи нагоре когато се натисне стрелка нагоре или надолу когато се натисне стрелка надолу.'
      Big Game Collision 3_instruction: |
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete_instruction: 'Демо на завършен CS в алгебрата: проект "Голямата игра"'
      Big Game Final_instruction: Ти го направи! Сега, играта трябва да бъде напълно функционираща! Ще отнеме известно време да се насладите на новата си игра, но трябва да направим някои крайни настройки. Когато сте доволни от крайния продукт, щракнете върху Готово и ще имате възможност да споделите връзка към играта си. Добра работа!
      Big Game Player 1_instruction: Ние се приближаваме до завършване на играта! Последния път, когато работихте върху играта си, използвахте булеви стойности, за да направите Вашата цел и опасността да се връщат след като са стигнали края на екрана. Щракнете върху Старт, за да видите как играта изглежда на този етап. След това ние ще се заемем да направим Вашия играч да се движи нагоре и надолу.
      Big Game Player 2_instruction: ' Редактирайте "актуализира-играч" функцията така, че играчът да се движи нагоре когато се натисне стрелка нагоре или надолу когато се натисне стрелка надолу.'
      Big Game Testing_instruction: 'Демо на завършен CS в алгебрата: проект "Голямата игра"'
      Big Game Vars 1 (copy 1)_instruction: 'Нека да започнем с Вашата голяма игра! Тук ще видите един куп с кодове, които в крайна сметка ще замените със собствените си, но за сега само ще се тревожим за дефиниране на променливи. Щракнете върху "Старт", за да видите как играта изглежда със стойностите по подразбиране.'
      Big Game Vars 1_instruction: 'Нека да започнем с Вашата голяма игра! Тук ще видите един куп с кодове, които в крайна сметка ще замените със собствените си, но за сега само ще се тревожим за дефиниране на променливи. Щракнете върху "Старт", за да видите как играта изглежда със стойностите по подразбиране.'
      Big Game Vars 2 (copy 1)_instruction: 'Първата стъпка  да направите тази игра ваша, е да ѝ се даде добро заглавие. Щракнете върху Редактиране на "заглавие" и "подзаглавие" променливите и ги променете с нещо ново.'
      Big Game Vars 2_instruction: 'Първата стъпка в правенето на вашата игра е даването на добро заглавие. Щракнете върху Редактиране на "заглавие" и "подзаглавие" променливите и ги променете с нещо ново.'
      Big Game Vars 3 (copy 1)_instruction: |
        Now let's set the background for your
        new game. Edit the 'bg' variable and select a new background Image from
        the dropdown.
      Big Game Vars 3_instruction: |
        Now let's set the background for your new game.
        Edit the bg variable and select a new background Image from the dropdown.
      Big Game Vars 4 (copy 1)_instruction: |
        Awesome, now you can update the variables
        for your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click 'finish'
        when you're done.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Brad Spooky House Copy_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      Brad Spooky House_instruction: |
        Freeplay: Here are the functions you've written,
        and some more for you to play with. Draw something awesome! Play with the
        pen width to see how different your drawings look!
      Building a Foundation Assessment_instruction: |
        Build a three level pyramid,
        there are no other directions, so just play with the pieces until you get
        it!
      Busy Bee 2_instruction: Тази пчела има много работа за вършене! Забелязвате ли някакви модели, които можете да използвате за опростяване на кода си?
      Busy Bee_instruction: Тази пчела има много работа за вършене! Забелязвате ли някакви модели, които можете да използвате за опростяване на кода си?
      C3-Farmer While Loops 1_instruction: |
        Move me to the hole and fill it with
        two shovelfuls of dirt, using the "fill" block.
      C3-Farmer While Loops 2_instruction: |
        Move me to the pile of dirt and remove
        it with 5 shovel scoops, using the 'remove' block.
      C3-Farmer While Loops 3_instruction: |
        Move me to the pile and remove all of
        it, then move to the hole and fill it completely.  Hint:  Use as few blocks
        as possible.
      C3-Farmer While Loops 4_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs.  Can you write a program that fills
        it until the ground is even?  Hint:  Try using the while loop this time.
      C3-Farmer While Loops 5_instruction: |
        Wow, now there are two deep holes! Can
        you write a program that fills them both until the ground is even?
      C3-Farmer While Loops 6_instruction: |
        Wow, now there is a large pile of dirt!
        Can you write a program that removes all of it so the ground is even?
      C3-Farmer While Loops 7_instruction: |
        Wow, now there are three piles of dirt!
        Can you write a program that removes each of them until the ground is even?
      C3-Farmer While Loops 8_instruction: |2
         There is a really deep hole and a really
        large pile of dirt.  How many shovelfuls of dirt need to be moved around to
        make the ground flat?  Hint: Use the while loop for both.
      C3-Farmer While Loops Assessment 1_instruction: |
        There are a lot of holes and
        piles.  Help me to fill and remove them to make the ground flat.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |
        This Evaluation Block is a multiplication
        function which takes two numbers and returns the product of those numbers.
        Edit this block so that it multiplies 2 * 5
      Calc Circles of Eval .3_instruction: |
        Here's a function for addition which
        takes two numbers and returns their sum. Use this Addition Block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |
        Here we've nested an Addition Block
        inside a Multiplication Block. Complete this code so it multiplies 3 by (4
        + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 2_instruction: |
        Use a Multiplication Block to complete
        this code.
      Calc Circles of Eval 3_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 4_instruction: |
        This code is missing a couple of Evaluation
        Blocks - make sure you put everything in the right order.
      Calc Circles of Eval 5_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 6_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 7_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 8_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 9_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval Free Play_instruction: |
        Free Play: Try using the Evaluation
        Blocks to write some equations of your own. How does nesting the blocks in
        different ways impact their evaluation?
      Calc Define Funcs 1 (copy 1)_instruction: |
        Let's look at some more algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |
        Write a function f that takes a parameter
        x and returns x - 10. Test your function using f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function f every
        time; create a function called times-ten that should take a parameter x and
        return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called cube - this function should take in a Number and return that
        number to the power of 3. Make sure to write two example cases! When you're
        done, use your new function to calculate cube(7).
      Calc Design Recipe 2_instruction: "Your school is holding a bake sale, and\nyou need to track the cost of making each cookie, the money paid, and the\ntotal profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r\nWrite\nthe function cost, which takes in the number of cookies you intend to sell,\nand returns the cost of making those cookies."
      Calc Design Recipe 3_instruction: |
        Write the function sales which takes in
        the number of cookies sold, and produces the amount of money customers spent
        to buy those cookies (each cookie is sold at $1.50).
      Calc Design Recipe 4_instruction: |
        Using the two functions we just wrote, write
        the function profit, which takes in the number of cookies you sold, and gives
        you back the total profit you make from selling your cookies, accounting for
        the cost of baking them.
      Calc Free Play_instruction: |
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: "In the last puzzle you wrote a contract\nfor the function \"rocket-height\" that states it has a range of Number, domain\nof Number, and should return the height of the rocket traveling at 15 m/s\nafter a given number of seconds. Let's write an example case now for the\nheight of the rocket at 3 seconds.\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 1_instruction: |
        In the last puzzle you wrote a contract for the
        function rocket-height that states it has a range of Number, domain of Number,
        and should return the height of the rocket traveling at 15 m/s after a given
        number of seconds. Let's write an example case now for the height of the
        rocket at 3 seconds.
      Calc Rocket 2_instruction: |
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |
        Here's a new variable called age-in-months. Use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: |
        Can you write an expression that calculates age in
        months?
      Calc Vars 3 (copy 1)_instruction: |
        Can you add to this code so that it calculates
        how many hours there are in "age" years?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |
        We can also set variables by using other variables.
        Let's say you have a brother who is two years younger than you - can you
        set a new variable "brother-age" using your "age" variable?
      Code Studio Puzzle Challenge 1 - Artist_instruction: |
        Draw the line. It is
        200 pixels long. 
      Code Studio Puzzle Challenge 1 Artist1_instruction: |
        Draw the line. It is 200
        pixels long. 
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Move the Bee to the flower
        and get all of the nectar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Draw a square by using
        the variable length provided.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 13 - Artist_instruction: |
        This is just like a
        "for" loop. Complete the code to draw six lines that grow from 50, 60, 70,
        80, 90, to 100 pixels long. 
      Code Studio Puzzle Challenge 14 - Artist_instruction: |
        This is just like a
        "for" loop. Complete the loop to draw 4 squares that grow from 80, 100,
        120, to 140 pixels. 
      Code Studio Puzzle Challenge 2 - Artist_instruction: |
        Now add a turn and another
        line. The lines are 200 pixels long.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Draw the square. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |
        Draw the octagon. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get the nectar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |
        Flowers contain a specific
        amount of nectar. Move the Bee to the flower and collect nectar with the get
        nectar block.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |
        Honeycombs can hold a specific
        amount of honey. Get the nectar from the flower and make some honey.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Move the Bee to the flower
        and get the nectar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: |
        Draw
        the line. Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: |
        Complete the
        code to draw the line. Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Artist Screencast_instruction: |
        Draw the line.
        Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Bee Screencast_instruction: |
        Move the Bee to the
        flowers and get all of the nectar.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      Course 2 Bee Loops 1_instruction: |
        Hi, I'm a bee. Can you help me collect
        the nectar from these flowers? 
      Course 2 Bee Loops 13_instruction: |
        Assessment: Use the repeat block to collect
        all of the nectar.
      Course 2 Bee Loops 2_instruction: |
        Can you do the same task more easily with
        a loop?
      Course 2 Bee Loops 3_instruction: |
        Now use the new repeat block to collect
        all of the nectar and make all of the honey.
      Course 2 Bee Loops 3__instruction: |
        Can you use a loop to collect all that
        nectar?
      Course 2 Bee Loops 4_instruction: Какво става ако повторите тази последователност три пъти? Не забравяйте да направите мед в края!
      Course 2 Maze Loops 1_instruction: Можеш ли да ме заведеш до прасето с 5 блока?
      Course 4 2_instruction: Пчелата иска нектар точно сега. Не забравяйте, не всички обекти са цветя, така че проверете цветята за събиране на нектар.
      Course 4 Artist 1_instruction: 'Помогнете ми да завърша моята кутия. (Всеки ред е дълъг 200 пиксела) '
      Course 4 Artist 10_instruction: "Щракнете тук, за да видите съветите отново! \r \r Тук е кодът за създаване на интересна форма.  Какво се случва, когато го повтаряте?   При завоите в тази форма се добавят до 420 градуса, което означава, че когато вашият художник  прави чертеж, той ще бъде е с различна посока от първоначалната.  Тази нова посока е точно 60 градуса вдясно от мястото, където сте започнали."
      Course 4 Artist 11_instruction: 'Сега е време за  предизвикателство!  Ето един дизайн, който използва само блокове, които вече са показали.  Можеш ли да разбереш как да го пресъздадеш без никаква допълнителна информация?  Съвет: Чувствай се свободен да пробваш колкото е нужно. Не е задължително да успееш от  първия път.'
      Course 4 Artist 12_instruction: "Искате ли втори поглед на как да създадете вдъхновен дизайн или съвети?  Щракнете тук! \r \r Или направете собствен дизайн!"
      Course 4 Artist 13_instruction: 'Искате ли още да поиграете?  Ето чисто платно, където можете да проектирате каквото искате!'
      Course 4 Artist 2_instruction: Можете ли да повторите този код, за да очертаете сивите контури на квадрата?
      Course 4 Artist 20_instruction: 'Искате ли още да поиграете?  Ето чисто платно, където можете да проектирате каквото искате!'
      Course 4 Artist 3_instruction: 'Добре, опитайте се да разберете какво ще стане ако стартирате този код (или натиснете "Старт", за да го пробвате). След това го повторете достатъчно пъти, за да завършите чертежа.'
      Course 4 Artist 4_instruction: 'Колко градуса има една окръжност?  Попълнете блокът за повторение с такова число, че да се създаде кръг от цветове.'
      Course 4 Artist 5_instruction: 'Начертайте другата половина на този дизайн така, че да е симетричен. Триъгълниците са равностранни и с дължина  на страната 50 пиксела.'
      Course 4 Artist 6_instruction: 'Попълнете кода, за да начертаете тези триъгълници. Съвет: 3 триъгълници за 360 градуса завъртане. Колко пъти 3 се съдържа в 360?'
      Course 4 Artist 7_instruction: 'Сега, внесете този цикъл в друг, за да начертаете 10 триъгълници.  Това се нарича вложен цикъл.  Съвет: Всички 10 триъгълници образуват окръжност от 360 градуса.  '
      Course 4 Artist 8_instruction: Начертайте това слънце като повторите целия блок от код 12 пъти.
      Course 4 Artist 8a_instruction: "Запомнихте ли тази форма?  Сега  ще  Ви позволим да я изградите без да даваме предварително блокове! \r Съвет: има 3 триъгълника в рамките на 360 градуса ротация... колко пъти 360 се дели 3?"
      Course 4 Artist 9_instruction: 'Повторете този дизайн 10 пъти и се уверете, че ще се завъртате между всяка фигура, от която е съставен. Ето един съвет на колко градуса трябва да се завъртате: Колко е 360 делено на 10?'
      Course 4 Artist Binary 1_instruction: 'Това е функция, която взема двоичен низ от 1 и 0 и възлага на художника да се движи отляво надясно и отгоре надолу, като попълва квадратчета, когато вижда 1 и ги прескача, когато  вижда 0. Изпълнете този код, за да видите как художникът използва бинарния код, за да изготви този модел.'
      Course 4 Artist Binary 1a_instruction: 'Това е функция, която взема двоичен низ от 1 и 0 и възлага на художника да се движи отляво надясно и отгоре надолу, като попълва квадратчета, когато вижда 1 и ги прескача, когато  вижда 0. Изпълнете този код, за да видите как художникът използва бинарния код, за да изготви този модел.'
      Course 4 Artist Binary 2_instruction: Кои от тези двоични низове трябва да повторите 8 пъти, за да изготвите това изображение?
      Course 4 Artist Binary 3_instruction: Можете ли да начертаете този модел като повторите трицифровия двоичен низ?
      Course 4 Artist Binary 4_instruction: Всеки бинарен низ представлява един ред от тази картина. Можете ли да ги подредите, така че тя да прилича на усмихнато, а не на намръщено лице?
      Course 4 Artist Binary 5_instruction: Кои 6-цифрен двоичен низ, повторен 11 пъти, ще изготви това изображение?
      Course 4 Artist Binary 6_instruction: Кой е най-краткия двоичен низ, който можете да повторите, за да се изготви това изображение?
      Course 4 Artist Binary 7_instruction: Завърши този чертеж.
      Course 4 Artist Binary Free Play 2_instruction: 'Свободна игра: Тук резолюцията на платното е по-висока - 16 бита на 16 бита!'
      Course 4 Artist Binary Free Play 2a_instruction: "Това е платно с по-висока резолюция, за да се възползвате от - 16 х16 пиксела! \r \r Виждате ли какво се получава, когато започнем да творим с битове?"
      Course 4 Artist Binary Free Play 2b_instruction: Щракнете тук, за да видите съвети.
      Course 4 Artist Binary Free Play_instruction: 'Свободна игра: Нарисувате каквото си искате с двоичен код!'
      Course 4 Artist Binary pre1_instruction: "Binary е начин на представяне на информация, използвайки само две опции.  Тук, ние ще да използвате опциите \"изключване\" (представлявана от цифрата 0) и \"включване\" (представлявана от номер 1).  \r \r Ние сме ви предоставили  решетка от \"пиксели\", за да си направите дизайн като включите само някои квадратчета.  Може ли да накарате художника да начертае двоичния код \"01010101\" в първия ред?"
      Course 4 Artist Binary ryan_instruction: "Binary е начин на представяне на информация, използвайки само две опции.  Тук, ние ще да използвате опциите \"изключване\" (представлявана от цифрата 0) и \"включване\" (представлявана от номер 1).  \r \r Ние сме ви предоставили  решетка от \"пиксели\", за да си направите дизайн като включите само някои квадратчета.  Може ли да накарате художника да начертае двоичния код \"01010101\" в първия ред?"
      Course 4 Artist For  Functions 10_instruction: |
        Нека ускорим малко нещата,
        можеш ли да нарисуваш звездна форма, използвайки функцията "начертай линия от квадрати"? 
        Успех!
      Course 4 Artist For  Functions 11_instruction: |
        Нека ускорим малко нещата,
        можеш ли да нарисуваш звездна форма, използвайки функцията "начертай линия от квадрати"? 
        Успех!
      Course 4 Artist For Loops 1_instruction: 'Начертай триъгълник, който е с размер 50 пиксела. Подсказка: използвай блок за повторение.'
      Course 4 Artist For Loops 10_instruction: Време е за свободна игра! Забавлявай се, нарисувай каквото искаш с блоковете, които си научил как да използваш
      Course 4 Artist For Loops 11_instruction: 'Помните ли, когато използвахме променливи за да контролираме броя на страните в геометрична форма? Тази форма започва като триъгълник, а след това се допълва по една страна докато не се получи десетоъгълник ( 10 страни). Всяка страна трябва да бъде 100 пиксела дълга. Съвет: Разделете 360 на страните на фигурата, за да получите ъгъла на завъртане.'
      Course 4 Artist For Loops 11a_instruction: "Нека да свържем всичко заедно!  Използвайте знанията си за  \" цикли\" и \"брояч\", за да създадете този чертеж, където всяка следваща фигура има две страни повече от предходната.  Уверете се, че всяка страна е 10 пъти по-дълга отколкото броя на страните в многоъгълника. \r \r Малка част от кода вече Ви е предоставена."
      Course 4 Artist For Loops 12_instruction: 'Това изглеждаше много готино, но сега бих искал да начертаем още фигури до последната. Този път, всяка страна е 20 пиксела. Използвайте "скок" блок за да  скачате напред 40 пиксела след всяка фигура. '
      Course 4 Artist For Loops 13_instruction: 'Хммм, тези фигури стават все по -големи всеки път! Но, не решихме ли тази задача с използване на променливи? Как да използваме променливата "брояч", за да умалим страните на многоъгълника? Вместо да се премествате напред на точна величина, опитайте да разделите  величината първо на 100 пиксела.'
      Course 4 Artist For Loops 14_instruction: 'Ако, когато чертаете фигура,  завъртите малко повече или по-малко от обикновено, ще получите фигура близка до оригиналната .Опитайте да завъртите на 89 градуса, за да получите тази сложна спирала.'
      Course 4 Artist For Loops 15_instruction: 'Свободна игра: Опитайте да направите чертежи като използвате "за цикли". Ние добавихме няколко полезни променливи за вас, за да ги използвате.'
      Course 4 Artist For Loops 2_instruction: 'Сложих кода за изчертаване на триъгълника вътре във функцията за цикли, която брои от 50 до 100 през десет. Разгледайте кода и натиснете "Старт", когато сте готови да видите как работи. '
      Course 4 Artist For Loops 3_instruction: Страните на малкия триъгълник имат 20 пиксела дължина, а на най-големия 200 пиксела и всеки триъгълник е с 20 пиксела по-голям от предходния. Актуализирайте цикъла, за да начертаете тези триъгълници.
      Course 4 Artist For Loops 4_instruction: 'Как ще промените това, което сте научили за да начертаете тези квадрати? Те започват от 15 пиксела дължина, най-големият е дълъг 300 пиксела, и всеки квадрат е по-голям от последния с 15 пиксела. '
      Course 4 Artist For Loops 5_instruction: 'Свършихте добра работа с последния пъзел. Нека да използваме блока за променливата "брояч" отново, за да нарисуваме тази страхотна картина. '
      Course 4 Artist For Loops 6_instruction: Свободно чертане! Използвайки цикъл, опитайте да начертаете уголемяваща се фигура по собствен дизайн.
      Course 4 Artist For Loops 6a_instruction: Направете три малки промени на кода от последното ниво, за да се получи това!
      Course 4 Artist For Loops 7_instruction: 'Какво ще стане, ако премахнете "Повтори 3" от алгоритъма, а оставите блоковете "премести" и " завий" ? В тази спирала от триъгълници всяка от страните е 20 пиксела по-дълга от предишната.'
      Course 4 Artist For Loops 8_instruction: "Само една малка промяна на кода от последното изображение, може да създаде тази рисунка. Можете ли да разберете каква е промяната? \r \rСъвет: Вие трябва да премахнете нещо!"
      Course 4 Artist For Loops 8a_instruction: "Само една малка промяна на кода от последното изображение, може да създаде тази рисунка. Можете ли да разберете каква е промяната? \r \rСъвет: Вие трябва да премахнете нещо?"
      Course 4 Artist For Loops 9_instruction: Можете ли да направите спирала? Преместете се напред от 1 до 75 пиксела, като увеличавате с 1 пиксел всеки път.
      Course 4 Artist For Loops Challenge_instruction: "Можете ли да разберете как да използвате всички неща, за да се създадете това изображение? \r \r Трябва ли Ви съвет? Щракнете тук."
      Course 4 Artist For Loops inspire_instruction: "Свободна игра за вдъхновение: Вече сте научили всичко, което трябва да знаете за да направите модел като този! Ако тази картина Ви вдъхновява, опитайте се да направите нещо подобно. Или създайте нещо сами. \r \r Искате да знаете как е направен моделът ни за вдъхновение? Щракнете тук."
      Course 4 Artist Functions 1_instruction: Можете ли да начертаете квадрат със страни 100 пиксела дълги, използвайки цикъл?
      Course 4 Artist Functions 10_instruction: Кой блок трябва да използвате, за да поставите триъгълника върху квадрата?
      Course 4 Artist Functions 11_instruction: 'Проверете този код, който изчертава куб- можете ли да го поместите във функцията, наречена" начертай Куб"'
      Course 4 Artist Functions 12.1_instruction: 'Да създадем функция, наречена "чертае осмоъгълник 20", която изчертава осмоъгълник, където всяка страна е дълга 20 пиксела.'
      Course 4 Artist Functions 12_instruction: Направи повторение(цикъл) на квадратна функция, за да начертаеш линия
      Course 4 Artist Functions 13.1_instruction: "Сега нека да направим функция, наречена \"скок  горе вдясно\", която премества художника в горния десен край на осмоъгълника, който сте нарисували. Само така можем да завършим този модел. \r \r Съвет: За да се преместите горе в десния ъгъл, опитайте да скочите по модел, който прави само 3/8 от осмоъгълника."
      Course 4 Artist Functions 13_instruction: 'Вижте, имаме нова функция, наречена " начертай линия от квадрати". Погледнете в блока, за да разгледате как сме го направили. Щракнете на "Старт" когато сте готови да започнете следващия пъзел.'
      Course 4 Artist Functions 14.1_instruction: 'Сега нека да направим функция, наречена "скок към горе вдясно", която премества художника горе вдясно на осмоъгълника, който сте нарисували. Само така можем да завършим този модел.'
      Course 4 Artist Functions 14_instruction: 'Вие се справяте страхотно! Нека да използвате вашата нова "Начертайте линия от квадрати" функция, за да начертаете квадратна форма. Не забравяйте, всеки квадрат има 40 пиксела дължина.'
      Course 4 Artist Functions 15_instruction: 'Нека да ускорим нещата малко, можете ли да направите звезда, като използвате функцията "начертайте линия от квадрати"? На добър час! Съвет: може да се наложи да завивате на 144 градуса'
      Course 4 Artist Functions 2_instruction: 'Можете ли да начертаете 3 квадрата на разстояние 20 пиксела един от друг? Съвет: всеки квадрат има страни 100 пиксела'
      Course 4 Artist Functions 3_instruction: "Можете ли да начертаете тази картина, използвайки блока \"начертай квадрат\" ?Съвет: всеки квадрат е на 20 пиксела от предходния.\r\n"
      Course 4 Artist Functions 4_instruction: 'Готови ли сте да направите своя собствена функция? Щракнете на блока " Функция", наименувайте я "начертай триъгълник", после направете триъгълник с блоковете за Действие и Цикли. Щракнете на Запиши и Затвори в горния десен ъгъл. Съвет: Направете триъгълник от 100 пиксела. На добър час!'
      Course 4 Artist Functions 5 OLD_instruction: 'Нека опитаме да използваме двете функции за начертаването на  къща- как  да се поправи кода за правилно изчертаване?'
      Course 4 Artist Functions 5_instruction: "Можете ли да начертаете тази картина, използвайки блока \"начертай квадрат\" ?Съвет: всеки квадрат е на 20 пиксела от предходния.\r\n"
      Course 4 Artist Functions 6_instruction: Кой блок трябва да използвате, за да поставите триъгълника върху квадрата?
      Course 4 Artist Functions 7_instruction: Можете ли да чертаете линия от квадратчета с помощта на квадратна функция? Всеки квадрат е 40 пиксела дължина.
      Course 4 Artist Functions 8_instruction: 'Разбрахте ли как се използва блока "функция"? Нека да променим квадрата на 200 пиксела. Съвет: щракнете на "Редактиране", за да промените размера в блока "начертай квадрат". Не забравяйте да  щракнете на "запиши и затвори", за да излезете от менюто за редактиране на функции. '
      Course 4 Artist Functions 9_instruction: Направили сме по-голямата част от кода за създаване на функция. Обаче, има нещо което липсва. Можете ли да допълните този функционален блок?
      Course 4 Artist Functions challenge_instruction: Щракнете тук, за да видите съветите отново.
      Course 4 Artist Functions Inspiration_instruction: Щракнете тук, за да видите съветите отново.
      Course 4 Artist Functions inspire_instruction: Щракнете тук, за да видите пояснителната картина отново.
      Course 4 Artist Inspire_instruction: "Искате ли втори поглед на как да създадете вдъхновен дизайн или съвети?  Щракнете тук! \r \r Или направете собствен дизайн!"
      Course 4 Artist Params 1_instruction: Да редактираме функцията, която изчертава квадрат със страни 50 пиксела
      Course 4 Artist Params 10_instruction: |-
        Можете да извикате функция която се намира в друга функция! Използвайте функция "фигура' и начертайте 3 къщи, всяка с 20 пиксела по-голяма от предходната, като първата е 50 пиксела. Помогнете си, като използвате цикъл "брояч" . 
      Course 4 Artist Params 11_instruction: |
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: 'Използвайте функцията "колело", за да начертаете тези фигури. Дължината на всяка от страните е 50 .'
      Course 4 Artist Params 13_instruction: 'Свободна игра: Това са функциите, които написахте и няколко допълнителни. Начертайте нещо страхотно!'
      Course 4 Artist Params 2_instruction: |
        That triangle function would be a whole
        lot more useful if it could draw triangles of different sizes. I've added
        a parameter for line length, but it doesn't do anything yet. Can you update
        the function so it uses the "length" parameter when it draws each side?
        The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: 'Страхотно, можете ли да начертаете всеки от тези триъгълници с новата функция?Първият е 25 пиксела, вторият е 50, а третият е 75. '
      Course 4 Artist Params 4_instruction: 'Можете ли да добавите нова функция, наречена квадрат(square)?Трябва да определите дължината, също като при триъгълника.Този път начертайте 3 квадрата 25,50 и 75 пиксела, раздалечени на  100 пиксела.'
      Course 4 Artist Params 5_instruction: |
        Използвайте двете нови функции, за да начертаете тази фигура. За улеснение използвайте цикли и параметъра "брояч".
        
      Course 4 Artist Params 6_instruction: |
        Нека редактираме функцията "начертай фигура".
        Тя вече има "дължина". Сега нека променим функцията така, че да добавим и "ширина".
        Запомнете, че ъгълът на една фигура е 360 разделен на страните му.
        Съвет:Дължините на всяка триъгълна фигура са 100 пиксела, на всеки шестоъгълник е 25 пиксела, а на всеки квадрат 50 пиксела. 
      Course 4 Artist Params 7_instruction: |
        Можете ли да начертаете тези фигури като замените "???" с число?
        Страните на квадрата и триъгълника са 100 пиксела по размер, докато на шестоъгълника са 75 пиксела по размер. 
      Course 4 Artist Params 8_instruction: |2
        Можеш ли да разгадаеш как да начертаеш тази фигура?
        Ето съвет. Създай нова функция със 6 страни, наречена "шестоъгълник" (hexagon). 
         
      Course 4 Artist Params 9_instruction: 'Помните ли, когато използвахме цикли с брояч, но премахнахме внесения цикъл? Хайде да се позабавляваме като използваме функцията "начертай фигура" със зададени "параметри" и "дължина". Можете ли да начертаете тези фигури? За брояча на квадрата задайте  5/100/5, за триъгълника 10/100/10 и за шестоъгълника 2/100/2.'
      Course 4 Artist Var 9_instruction: 'Това е алгоритъм, с който да нарисувате триъгълник, променете го, така че да използва променливата "страни". Заменете цифрата 3 с променливата "страни". Съвет: не забравяйте да използвате "задава страни" блок.'
      Course 4 Artist Vars 1_instruction: Ще ми помогнете ли да начертая триъгълник? Всяка от страните е 100 пиксела.
      Course 4 Artist Vars 10_instruction: |
        Ето алгоритъм, който ще начертае триъгълник от по-малки триъгълници.
        Можеш ли да го промениш (модифицираш) така, че да използва променливата "страни", начертавайки всеки триъгълник? Прегледай кода и всеки път, когато видиш числото 3, замени го с променливата "страни". Не забравяй да използваш блокчето "задай страни".
      Course 4 Artist Vars 11_instruction: 'Тук е по-сложен код с помощта на същите понятия от последната загадка - какво трябва да зададете в променлива "страни" да за да се начертае тази картина, направена от квадрати?'
      Course 4 Artist Vars 12_instruction: 'Да зададем 5 на променливата в блок "страни". Колкото повече страни добавяме, толкова по голям модел ще получим. Да добавим нова променлива "дължина", и я използваме там където имаме блок "премести напред". Задайте стойност на променливата в блока "дължина" 75.'
      Course 4 Artist Vars 13_instruction: "Когато дадена фигура има много страни, страните трябва да бъдат по- късички, ако искате целия модел да се побере на екрана. \r Нека да пресъздадем алгоритъма за този невероятен модел, но за да не настройваме ръчно променливата \"дължина\", нека да използваме математически блок за \"страни\" вътре в променливата. След това трябва да се уверим, че всяка фигура се вписва правилно. Периметъра на всеки многоъгълник е 300 пиксела. \r Нужда от някои съвети?  Щракнете тук."
      Course 4 Artist Vars 14_instruction: 'Свободна игра: Вижте, сега вашият алгоритъм е поставен в още един цикъл. Експериментирайте, за да начертаете нови модели като променяте стойностите на двете променливи.'
      Course 4 Artist Vars 2_instruction: 'Блокът "премести напред със 150" е заменен с променливата в блок "дължина". Можете ли да ѝ зададете стойност 150 и да начертаете нов триъгълник?'
      Course 4 Artist Vars 3_instruction: 'Това е цикъл за изчертаване на квадрат, но нещо липсва. Можете ли да го поправите, за да използва променливата "дължина" и да определите дължината на всяка страна.'
      Course 4 Artist Vars 4_instruction: 'Искам да направя правоъгълник, два пъти по- висок отколкото широк. Имаме променливата "ширина" със стойност 100. Можете ли да използвате математическите блокове, за да завършите кода?'
      Course 4 Artist Vars 5_instruction: 'Използвайте променливата "страни" за контролиране повторенията на цикъла.'
      Course 4 Artist Vars 6_instruction: "Ето код, който може да изчертае всеки правилен многоъгълник. Имаме нова променлива, наречена \"страни\", която е настроена на 4. Можете ли да използвате променливата \"страни\" (заедно с математическият блок) за да се въведе нужното количество страни за многоъгълника? \r \r Кликнете тук да се върнете към съвета!"
      Course 4 Artist Vars 7_instruction: "Използвайте това, което научихте през последния пъзел, за да създадете този шестоъгълник с използване на променливата \"страни\". \r \r Виждате ли как с промяна само на една стойност можете да нарисувате триъгълник, квадрат, петоъгълник или осмоъгълник?"
      Course 4 Artist Vars 8_instruction: 'Допълнително: Експеримент със страните на фигурата. Можете ли да промените алгоритъма така че големината на фигурата да е постоянна независимо от броя на страните? Помощ: Може да разделите началната дължина на броя страни, дължината на страните ще е по-къса при увеличаване броя на страните във фигурата.'
      Course 4 Artist Vars 9_instruction: 'Променете алгоритъма, така че да използва променливата "страни" вместо статично число за начертаване на триъгълник. Заместете числото 3 със "страни" и използвайте блока "задай страните".'
      Course 4 Bee 1_instruction: 'Пчелата не може да прецени дали това е цвете или медена пита. Провери първо дали е цвете или пита, и вземи нектар, ако е цвете. '
      Course 4 Bee 2_instruction: 'Използвайте "Ако/иначе" блок, за да проверите всеки обект, за да видите дали това е цвете или медена пита. Ако е цвете, съберете нектар... в противен случай, направете мед!'
      Course 4 Bee 3_instruction: Неизвестния обект е или цвете или медена пита. Използвай блока Ако-Иначе, за да вземеш нектар ако е цвете, иначе направи мед ( защото това значи че е медена пита).
      Course 4 Bee 4_instruction: Това лилаво цвете може да има 3, 2 или 1 нектар. Тук ако-иначе блокът е комбиниран с друг ако-иначе блок, за да създаде ако, иначе-ако, иначе блок. Завършете решението, за да съберете неизвестното количество нектар.
      Course 4 Bee 5_instruction: Това лилаво цвете може да има 3, 2 или 1 нектар. Добави Ако-иначе блок да се създадем ако, ако-иначе, иначе блок. Довършете решението за събиране на неизвестен брой нектар.
      Course 4 Bee 6_instruction: Това лилаво цвете може да има 3, 2 или 1 нектар. Добави Ако-иначе блок да се създадем ако, ако-иначе, иначе блок. Довършете решението за събиране на неизвестен брой нектар.
      Course 4 Bee 7_instruction: Използвайте всичко, което сте научили досега, за да се събере всичкият нектар. Лилавото цвете може да има 3, 2 или 1 нектар.
      Course 4 Bee For Loops 1_instruction: Използвайте цикъл, за да съберете нектар от всяко цвете.
      Course 4 Bee For Loops 10_instruction: Ако цикъла е намаляващ, стъпката се движи в низходящ ред при всяко повторение. Каква трябва да е стъпката, за да съберете нектар от 9, 6 и накрая 3?
      Course 4 Bee For Loops 11_instruction: Какво не е наред с този цикъл? Вижте дали можете да го поправите и накарате пчелата да събира нектар.
      Course 4 Bee For Loops 2_instruction: 'Това е един нов вид цикъл наречен " за" цикъл. Той ще преброи от 1 до 5 ( многократно събиране на числото 1) и ще стартира броенето в цикъла отначало. Помогнете на пчелата да вземе нектара.'
      Course 4 Bee For Loops 3_instruction: 'Може да решите пъзела като използвате  блока " за цикъл", за да преброите от 1 до 3. Хайде да съберем нектара!'
      Course 4 Bee For Loops 4_instruction: Съберете всичкия нектар от цветята. Чудя се, няма ли по лесен начин от този...
      Course 4 Bee For Loops 5_instruction: 'С блока " за цикъл" става по- лесно! Използвайте променливата "брояч" от блока " за цикъл", за да повторите  блока "вземи нектар" толкова пъти, колкото се повтаря и цикъла. Оу! Толкова много цикли. Целия код е даден, погледнете как е направен и натиснете "Старт", за да видите как работи. '
      Course 4 Bee For Loops 6_instruction: 'Можете да използвате " за цикъла", за да броите на обратно. Пробвайте да вземете нектар като броите от 5 до 1, намалявайки с по единица.'
      Course 4 Bee For Loops 7_instruction: 'Използвайте променливата "брояч" от "за цикъл", за да контролирате колко далече да отидете хоризонтално.'
      Course 4 Bee For Loops 8_instruction: Можете ли да използвате променливи в цикъла, за да контролирате преместването и събирането на нектара?
      Course 4 Bee For Loops 9_instruction: 'Последното число от  "за цикъл" се нарича "стъпка" и всеки път, когато цикъла се повтаря, водещата променлива нараства със "стъпката". Опитайте се да съберете нектара от цветята, като използвате стъпка от 2.'
      Course 4 Bee Loops 5 NEW_instruction: Тук има три цветя. Можете ли да намерите модел на инструкции, който трябва да се повтори 3 пъти, за да събере нектара с най-малък брой блокове?
      Course 4 Bee Loops 5a NEW_instruction: 'Сега, използвайте цикли, за да помогнете на пчелата да събере всичкия нектар по пътя си към кошера с възможно по-малко блокове.  Когато стигне там, не забравяйте да направите мед!'
      Course 4 Bee Params 1_instruction: 'Използвайте функцията " вземи нектар 3", която кара пчелата да завива, да се придвижва и взима нектара и да се върне в изходна позиция. Напишете последователността за събирането на нектар като използвате "вземи нектар 3"'
      Course 4 Bee Params 2_instruction: 'Променете функцията "вземи нектар 3" така, че да ме премести надясно, вместо наляво.'
      Course 4 Bee Params 3 (copy 1)_instruction: 'Сега, цветята са от двете страни! Може би, трябва да използвате параметър, за да използвате една функция и за двете страни. Добавих параметъра " посока" към функцията. Ако параметъра  в "посока" е равен на 0, трябва да завия наляво, ако е равен на 1, трябва да завия надясно.'
      Course 4 Bee Params 3_instruction: |-
        Има цветя от двете страни! Добавих параметъра "посока". Използвайте променливите "ляво' и 'дясно", за да контролирате посоката. Попълнете останалата част от функцията, а след това натиснете "запази и затвори"
      Course 4 Bee Params 4 (copy 1)_instruction: Опитайте се да използвате новата функция, за да съберете всички цветя. Запомнете , 0=ляво и 1=дясно.
      Course 4 Bee Params 4 - Two WhenRun_instruction: 'Опитайте се да използвате новата функция за събиране на нектар от цветя. Запомнете, че трябва да използвате променливите "ляво" и "дясно".'
      Course 4 Bee Params 4 backup_instruction: 'Няма ли да е по- добре, ако можехме да съберем целия нектар с една функция? Опитайте се да добавите нов параметър "нектари", за да контролирате количеството на събрания нектар. Вероятно, ще искате да преименувате функцията!'
      Course 4 Bee Params 4_instruction: 'Опитайте се да използвате новата функция за събиране на нектар от цветя. Запомнете, че трябва да използвате променливите "ляво" и "дясно".'
      Course 4 Bee Params 5_instruction: 'Хайде да започнем отначало- можете ли да създадете нова функция, наречена " вземи 5 нектара" с параметър за посока?'
      Course 4 Bee Params 6 (copy 1)_instruction: Опитайте да използвате новата функция и да съберете целия нектар.
      Course 4 Bee Params 6_instruction: 'Няма ли да е по добре, ако можехме да съберем целия нектар с една функция? Опитайте се да добавите нов параметър "нектари", за да контролирате количеството на събрания нектар. Вероятно, ще искате да преименувате функцията!'
      Course 4 Bee Params 7 (copy 1)_instruction: Опитайте да използвате новата функция и да съберете целия нектар.
      Course 4 Bee Params 7_instruction: Опитайте се да използвате новата функция, за да съберете целия нектар.
      Course 4 Bee Params 8 Clone 2_instruction: Ох, сега трябва да се справим и с меда! Как можете да актуализирате вашата функция, за да вземете нектар или направите мед.
      Course 4 Bee Params 8 clone 3_instruction: Ох, сега трябва да се справим и с меда! Как можете да актуализирате вашата функция, за да вземете нектар или направите мед.
      Course 4 Bee Params 8 Clone_instruction: Ох, сега трябва да се справим и с меда! Как можете да актуализирате вашата функция, за да вземете нектар или направите мед.
      Course 4 Bee Params 8 new_instruction: Ох, сега трябва да се справим и с меда! Как можете да актуализирате вашата функция, за да вземете нектар или направите мед.
      Course 4 Bee Params 8_instruction: 'Предизвикателство: Сега има мед, който трябва да направим! Пренапишете функцията, така че да използва броя на единиците мед  и единиците нектар.  Как ще използвате тези номера, за да решите какво трябва да направите?'
      Course 4 Bee Params Ex_instruction: Опитайте се да използвате новата функция, за да съберете целия нектар.
      Course 4 Binary 1_instruction: Това е функция, която използва двоична бройна система, съставена от числата 1 и 0, и инструктира фермера да се движи отляво надясно и отдолу нагоре, обръщайки квадратите със 0. Активирайте предоставения код, за да видите как фермера използва двоичната система, за да начертае картина.
      Course 4 Binary 2_instruction: 'Кой двоичен код може да повторите 8 пъти, за да начертаете тази картина? Помощ: числото "1"  запълва дупка.'
      Course 4 Binary 3_instruction: Можете ли да начертаете този модел като повторите един двоичен низ?
      Course 4 Binary 5 (copy 1)_instruction: Кой двоичен низ, повторен 10 пъти, ще начертае тази картина?
      Course 4 Binary 5_instruction: Кой двоичен низ, повторен 10 пъти, ще начертае тази картина?
      Course 4 Binary 6 (copy 1)_instruction: Кой двоичен низ, повторен 10 пъти, ще начертае тази картина?
      Course 4 Binary 6_instruction: Кой двоичен низ, повторен 10 пъти, ще начертае тази картина?
      Course 4 Binary 7_instruction: Кой двоичен низ, повторен 10 пъти, ще начертае тази картина?
      Course 4 Binary 8_instruction: 'Може да довършите по голяма част от картината като повторите  5 битовото двоично число - след това ви трябва 4 битово двоично число, за да стигнете до долния, десен ъгъл.'
      Course 4 EC 1a_instruction: Няма правила. Само предизвикателство!
      Course 4 EC 1b_instruction: Няма правила. Само предизвикателство!
      Course 4 EC 2a_instruction: '** Екстремно предизвикателство: ** Няма правила.  Само предизвикателство!'
      Course 4 EC 2b_instruction: '** Екстремно предизвикателство: ** Няма правила.  Само предизвикателство!'
      Course 4 EC 2c_instruction: '** Екстремно предизвикателство: ** Няма правила.  Само предизвикателство!'
      Course 4 EC 3_instruction: 'Използвайте това, което научихте в предишното ниво, за да нарисувате изображение като това. Забележка: Кодът става по-опростем, ако включите параметри. '
      Course 4 EC 3a_instruction: 'Екстремно предизвикателство: Няма правила. Само предизвикателство!'
      Course 4 Maze 1_instruction: Преместете ядосаната птица до прасето!
      Course 4 Maze 2_instruction: Избягвайте тротила!
      Course 4 Maze 3_instruction: 'Програмирайте ядосаната птица да стигне до прасето. '
      Course 4 Maze 4_instruction: 'Опитай блока "повтаряй", за да използваш по-малко блокове...'
      Course 4 Maze 5_instruction: Можеш ли да решиш този пъзел, с помощта на възможно най-малък брой блокове?
      Course 4 Maze 6_instruction: Можеш ли да решиш този пъзел, с помощта на възможно най-малък брой блокове?
      Course 4 Play Lab For Loops 2_instruction: Този път, нека да опитаме да преброим нечетните числа от 1 до 100.
      Course 4 Play Lab Params 1_instruction: 'Това е функция, наречена "скок", която кара вашия герой да скочи 100 пиксела. Използвайте я, за да съберете знамената.'
      Course 4 Play Lab Params 10_instruction: "Добавихме още една функция за Вас. \r \r Използвайте \"Ако\" декларация да програмирате играта си да извиква функцията \"level_up\", само когато \"player_score\" става по-голям от определен брой. \r \r за пример: Трябват ти \"player_score\" > 6\r \r Играй играта и за да преминеш ниво 4 трябва да спечелиш нужния брой точки. "
      Course 4 Play Lab Params 2_instruction: "Сега, знамената са високи за достигане! Нека сложим нов параметър към нашата функция \"скок\", наречен \"височина'.\r\n\r Стрелката нагоре трябва да скочи 200 пиксела, но стрелката надолу ще скача 100 пиксела. Щракнете на \"редактирай\" във функцията 'скок\" и промени така, че да използва параметъра за височина вместо просто да скача 100 пиксела.\r\n\r Съвет: Трябва да кликнеш на \"редактиране\" във функцията за \"скок\" и да я актуализираш, за да използва параметър \"височина\"."
      Course 4 Play Lab Params 3_instruction: |-
        Хайде да добавим нов параметър във функцията "скок", така че да я използваме с други актьори. Всеки актьор е представен с номер, започващ от 1. Редактирайте функцията 'скок" така, че да включва параметъра "актьор". 
      Course 4 Play Lab Params 4_instruction: |
        Тази функция се нарича "патрул". 
        Редактирайте я, за да преместите котката с 400 пиксела нагоре или надолу.
      Course 4 Play Lab Params 5_instruction: 'Попълнете параметъра за "актьор", за да извикаме функцията "патрул" за всеки от актьорите. Запомнете, актьорите отговарят на числата 1, 2, и 3.'
      Course 4 Play Lab Params 6_instruction: 'Добавете друг параметър, наречен "скорост" на "патрул" функцията. Опитайте да използвате "Задаване скорост" блок с нов параметър "скорост", за да помогнете на пингвина да стигне двете знамена, преди другите дори да достигнат едно.'
      Course 4 Play Lab Params 7_instruction: "Нека се позабавляваме! Погледнете предоставения код, за да видите дали можете да разберете какво всеки блок прави.  \r \r Когато сте готови, използвайте клавишите със стрелки за контрол на кучето и съберете всички знамена."
      Course 4 Play Lab Params 8_instruction: 'Използвайте блока " когато докосва", за да изпратите Кучето обратно в горния ляв ъгъл, ако то докосне някои от актьорите.'
      Course 4 Play Lab Params 9_instruction: "Тук е нашата игра от по-рано, но по-голямата част от кода е скрита. Има нова функция \"score_points.\" \r \r Редактирайте функцията, така че към променливата \"player_score\" да се добави параметъра \"точки\". \r \r Променливата \"player_score\" трябва да се увеличава всеки път щом кучето докосва котката със сърца и да намалява всеки път, щом котката докосва кучето със сърца. \r \r бележка: Когато сте готови, щракнете върху \"Старт\", за да играете.  Когато кучето направи резултат 6 точки, Вие ще преминете към следващия пъзел. "
      Course 4 Play Lab Vars 1_instruction: 'Не трябва да пишете никакъв код , просто натиснете "Старт", за да играете! Тук вие сте Кучето, което се опитва да събере повече знамена от Котката. Използвайте стрелката надолу за да го контролирате. Натиснете " Финал" когато сте готови.'
      Course 4 Play Lab Vars 2_instruction: 'Това състезание не е много честно! Променете променливата "куче_скорост", за да сте сигурни, че ще съберете повече знамена от Котката. Първият, който събере 10 знамена печели!'
      Course 4 Play Lab Vars 3_instruction: |
        Ето една нова игра!
        Използвайте лявата и дясна стрелка за преместване, и стрелката нагоре за скачане. Вижте, дали може да съберете всички знамена.
      Course 4 Play Lab Vars 4_instruction: 'Сега ще използваме променливата, наречена "височина", за да контролираме колко високо ще скочи кучето. Променете променливата във "височина" така, че кучето да сочи достатъчно високо. Помощ: новите знамена са на височина 200 пиксела.'
      Course 4 Play Lab Vars 5_instruction: 'Хайде да направим игра! Първо ще ни трябва резултат. Използвайте блока " достигане на точки до", за да зададете резултат до 10. '
      Course 4 Play Lab Vars 6 (copy 1)_instruction: 'Браво, сега имаме променлива за резултата , но как да я използваме? Какво ще кажете, да добавяме точка всеки път към променливата, щом ударим противника с огнено кълбо? Използвайте събитието" когато актьор 2 докосне нещо", за да предизвикате актуализация на резултата когато ударите котката с огнено кълбо. Можете да увеличавате резултата като зададете резултат+резултат+1. Достигнете до 10 ( увеличавайки с 1), за да преминете нивото.'
      Course 4 Play Lab Vars 6_instruction: "Използвайте дясната стрелка, за да стреляте сърца. \r\n\r\nКак да печелим точки в нашата игра? Прибавете 1 към променливата \"точки\" всеки път когато Кучето удари котката с огнено кълбо. Използвайте събитието \"когато актьор 2 докосне нещо\" да задейства актуализация на резултата. Можете да увеличавате променливите като зададете \"точки=точки+1.\" Достигнете до резултат 10 ( точка по точка), за да преминете нивото."
      Course 4 Play Lab Vars 7_instruction: 'Хубаво, нека сме сигурни че играта не е много лесна - всеки път щом Кучето ( актьор 1) е ударено  с огнено кълбо, ще губите точка. Нека започнем с 10 точки за по-лесно. За да преминете нивото, трябва да стигнете от 10 до 0.'
      Course 4 Play Lab Vars 8 (copy 1)_instruction: 'Добре, последно за тази игра - нека да направим така, че играча да губи (или печели). Използвайте цикъл завинаги, за да проверите стойността на резултата- ако е по голям  от 20, направете противника да изчезне. Ако е по-малък от 0, противника изчезва. Щракнете "Готово" когато играта работи така, както искате.'
      Course 4 Play Lab Vars 8_instruction: 'Нека да направим така, че Кучето да губи (или печели). Използвайте цикъл "завинаги", за да проверите стойността на резултата- ако е по голям  от 20, направете противника (Котката) да изчезне. Ако е по-малък от 0, играча ( Кучето) изчезва. Щракнете "Готово" когато играта работи така, както искате.'
      Course 4 Play Lab Vars 9_instruction: "Свободно време за игра! Тук са всички променливи, които сме ползвали досега, както и още няколко в случай че се наложи да ползвате. \r \r Вече има толкова много блокове в нашия инструментариум, че те трябва да бъдат организирани!  Ние сме поставили всяко блокче в съответната категория. Ще отнема  известно време да свикнете с всичко, което е на разположение. Когато сте готови с прегледа, направете игра или история, използвайки повторения, променливи и събития.  \r \r Съвет: превъртете надолу, за да видите всички команди в работната област."
      Course 4 Play Lab Vars_instruction: 'Добре, последно за тази игра - нека да направим така, че играча да губи (или печели). Използвайте цикъл "завинаги", за да проверите стойността на резултата- ако е по-голям  от 20, направете противника да изчезне. Ако е по-малък от 0, актьорът Ви да изчезва.'
      Course 4 Play Labs For Loops 1_instruction: 'Хайде да накараме кучето да казва всяко число от 1 до 100. Използвайте "за цикъл" и блока "брояч" за произнасяне на променливите всеки път, когато се завърти цикъла.'
      Course 4 Play Labs For Loops 2_instruction: Този път, нека да опитаме да преброим нечетните числа от 1 до 100.
      Course 4 Play Labs For Loops 3_instruction: Ако броим с по големи числа ще преброим много повече за същото време. Опитайте да направите кучето да брои от 10 до 1000 , през 10.
      Course 4 Play Labs For Loops 4_instruction: 'Нарастването на стъпката  е полезно, но ние все още броим линейно ( всяко число е на еднаква дистанция от предходното. Виж Линейна Алгебра/математика) . Какво ще стане, ако например, започнем да броим експоненциално? Без да променяме настройките на функцията за цикличност, можете ли да броите  1,4,9,16,25....( в квадратно броене)?'
      Course 4 Play Labs For Loops 4a_instruction: "Сега нека да слеем променливите от етап 7 заедно с вашата \"брояч\" променлива за да се случи магията.   \r \r В този пъзел, кучето ще брои от 0 до 1000 \"възходящо\".  Задайте променливата на \"растежа\" да е 10 в началото на вашия код, за да видите какво ще се случи."
      Course 4 Play Labs For Loops 5_instruction: 'В предишното ниво използвахме броене на втора степен. Опитайте да броите на трета степен като промените "counter^2" със "counter^3", за да изброите третата степен на всяко число ( 1,8,27,64,125,216,343..)'
      Course 4 Play Labs For Loops 5a_instruction: "В този пъзел кучето ще бъде Вашият пазител на време. \r \r То ще брои от 0 до 30 във \"възходящ ред\".  Променливата \"Стъпка\"  ще започне със стойност 1.\r \r Може ли всеки път, когато щракнете върху кучето, стъпката се увеличава с 2?  Щракнете върху стрелката за преминаване напред, за да изпълните \"за цикъла\". \r \r Стартирайте цикъла няколко пъти, щракайки върху кучето преди това."
      Course 4 Play Labs For Loops 6_instruction: 'Може би си спомняте, че просто число е всяко число което се дели на себе си и на едно. Използвайте функцията "е_просто число", за да покажете само простите числа от 1 до 100.'
      Course 4 Play Labs For Loops 6a_instruction: "Куче ще все още ще пази времето чрез преброяване с нашите \"за цикъл\" със \"стъпка\", но този път, ние ще добавим Магьосникът в микса.  Може ли да промените кода, така че \"стъпката\" нараства с две всеки път, когато Магьосникът е кликнал? \r \r Внимавай!  Мьгьосникът се движи бързо!"
      Course 4 Play Labs For Loops 7_instruction: "Можете ли да използвате функцията  'за цикъл' и да ми помогнете да разбера тази последователност 1,4,7,10,13,16,19,22,25?"
      Course 4 Play Labs For Loops 7a_instruction: "Сега, да се захванем с работа!  Ами ако започнем да броим колко пъти можем да щракнем върху Магьосника, преди кучето да получи 30?  \r \r Добавете блокове към магьосника, така че всеки път, когато е кликнато върху него, променливата \"кликнато\" да се увеличава с едно. Можете да игнорирате \"стъпка\" за сега. \r \r Кучето ще започне преброяване, когато щракнете върху \"Старт\"."
      Course 4 Play Labs For Loops 8_instruction: "Сега, да помогнем на участниците се движат, докато те броят.  \r \r Кучето трябва да се движи и да брои като се добавя 2 (counter + 2) всеки път.  Котката ще се движи и брои, като умножава по 2 (counter * 2) всеки път. Пингвинът ще се движи и разчита на силата на 2 (counter ^ 2) всеки път.  Кой ще стигне до флага си пъръв?"
      Course 4 Play Labs For Loops 8a_instruction: "За да завършим играта ни, ние трябва да се върнем на променливата \"стъпка\"!    Нека да я обвържем с нивото на играта. \r \r 1) Да проследява броя кликвания върху магьосника. \r  2) Ако е щракнато върху него поне 10 пъти, преди кучето да преброи до 30, повишаване \"стъпката\" с 1 и започваме отново. \r 3) Ако върху Магьосника не е натиснато поне 10 пъти, играта свършва."
      Course 4 SCF 1_instruction: Използвайте предложените функции, за да начертаете четири реда от шестоъгълници. Забележете как нашите дори номерирани редове са изместени надясно?
      Course 4 SCF 1a_instruction: Може ли да разберете как да се събере всичкия този нектар с възможно най-малко блокове?
      Course 4 SCF 1b_instruction: Може ли да разберете как да се събере всичкия този нектар с възможно най-малко блокове?
      Course 4 SCF 2_instruction: 'Използвайте това, което научихте в предишното ниво, за да нарисувате изображение като това. Забележка: Кодът става по-опростен, ако включите параметри. '
      Course 4 SCF 3 Fail 1_instruction: Може ли да разберете как да...
      Course 4 SCF 3 Fail 2_instruction: Може ли да разберете как да...
      Course 4 SCF 3_instruction: 'Използвайте това, което научихте в предишното ниво, за да нарисувате изображение като това. Забележка: Кодът става по-опростен, ако включите параметри. '
      Course 4 SCFL 1_instruction: Решете този пъзел с възможно най-малък брой блокове.
      Course 4 SCFL 1a_instruction: Можете ли да заведете Skrat до жълъда му, използвайки само няколко блока?
      Course 4 SCFL 1b_instruction: Можете ли да заведете Skrat до жълъда му, използвайки само няколко блока?
      Course 4 SCFL 2_instruction: Решете този пъзел с възможно най-малък брой блокове.
      Course 4 SCFL 3_instruction: Може ли да разберете как да пресъздадете тази рисунка?
      Course 4 SCFL 4_instruction: Може ли да разберете как да пресъздадете тази рисунка?
      Course 4 SCFL 5_instruction: Може ли да разберете как да пресъздадете тази рисунка?
      Course 4 SCFL 6_instruction: Може ли да разберете как да пресъздадете тази рисунка с един цикъл?
      Course 4 SCFL 7_instruction: Художникът иска да улови някои вълни! Може ли да разберете как да пресъздадете тази рисунка?
      Course 4 SCFP 1_instruction: Създайте функция с параметри, която позволява на художника да скочи назад и напред с x пиксела и също така нагоре и надолу с y пиксела (с помощта на положителни и отрицателни числа).
      Course 4 SCV 1_instruction: Щракнете тук, за да видите инструкциите отново.
      Course 4 SCV 2_instruction: Щракнете тук, за да видите инструкциите отново.
      Course 4 SCV 3_instruction: "Сега, да играем на Тагове!  Тагнете котката, за да получите 2 точки. Тагнете пингвина, за да получите 3 точки.  Трябват Ви10 точки, за да спечелите! \r, Но бъдете внимателни, защото когато котката и пингвина се тагват помежду си, ви отнемат точки. \r \r Добавете блокове, необходими, за да направите тази игра да работи по начина, по който е обяснено.  Как ще накарате кучето да се движи във всички посоки, с помощта на стрелките?  Как ще добавяте точки, когато кучето тагне котка или пингвин?  Как ще се намалят точките, когато котката и пингвина се докоснат?"
      Course 4 SCV 4_instruction: Решете този пъзел с възможно най-малък брой блокове.
      Course 4 SCV 5_instruction: Решете този пъзел с възможно най-малък брой блокове.
      Course 4 SCV 6_instruction: Щракнете тук, за да видите инструкциите отново.
      Course 4 SCVP 1_instruction: Създайте функция с параметри, която позволява на художника да скочи назад и напред с x пиксела и също така нагоре и надолу с y пиксела (с помощта на положителни и отрицателни числа).
      Course 4 Variables Assessment_instruction: Можете ли да създадете това изображение като използвате променлива за страни? Всеки ред трябва да бъде с дължина 50 пиксела.
      Course1BeePuzzle12_instruction: Get three nectars and then make two honey
      Course1MazeAssessment1_instruction: "This is a test!\r\nMove one way, then\nanother to get me to the pig"
      Course1MazeAssessment2_instruction: "This is a test!\r\nMove one way, then\nanother to get me to the pig."
      CSP Data Unit - Counting Multiple Things_instruction: "If you can count one\nthing you can count multiple things\r\n\r\nFind out how many people like something\nother than dogs and cats\r\n\r\nCount dogs\r\nCount cats\r\nCount total\r\nDo\nthe math\r\n\r\nblank/ blank toal\r\n\r\nCan also use this to find percents\nfrom this\r\n\r\nx% are dog lovers"
      CSP Data Unit -Counting Records - Easy Way_instruction: "ReadRecords with specific\ncriteria \r\nfind the length of an array\r\n"
      CSP Data Unit -Counting Records - Hard Way_instruction: "\r\n1. ReadRecords\nfor all records\r\n2. Way to loop through and count\r\n"
      CSP U4 - JSON Object Intro - Bad Way_instruction: |
        Trigger both the keyboard
        and mouse event and examine the event objects displayed in the console. Why
        might an object be the best way to store this information? (Click to see full
        instructions)
      CSP U4 - JSON Object Intro - Good Way_instruction: |
        Create an object with at
        least 5 values including at least one string and one number. (Click to see
        full instructions) 
      CSP U4 - Objects - createObject_instruction: |
        Create an object with at least
        5 values including at least one string and one number. (Click to see full
        instructions) 
      drawings!_instruction: Draw the equilateral triangle, or else.
      ECSPD Binary Odometer_instruction: |
        This is another resource you could use
        with your students.
      Eval Booleans 1_instruction: 'Булевите оператори (като >, <, =) ни позволяват да сравняваме различни стойности, връщайки "истина" или "лъжа". Щракнете върху "Старт", за да видите как този израз дава резултат.'
      Eval Booleans 2_instruction: |
        Can you set the values so that this expression
        evaluates as true?
      Eval Booleans 3_instruction: |
        The string-length function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        true.
      Eval Booleans 4_instruction: |
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: |
        Here's a similar function red shape with an additional
        variable for size. Complete the conditionals so the correct solid red image
        of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: "Write a function called food-critic, which takes\nin the name of a food and produces a String that says how you feel about that\nfood. For example, (food-critic “pizza”) might evaluate to “delicious”, but\n(food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two\nfoods to review, but you can you write more if you like!  Don’t forget to\nadd an “else” clause!\r\nOne example - and part of the definition -  has already\nbeen done for you!"
      Eval Cond 7_instruction: "Free Play: Write a function called green-shape, which\ntakes in the name of a shape and produces a solid green shape. Your function\nshould work with at least “circle”, “star” and “rectangle”, but you can add\nother shapes if you like. You can choose the size of each shape. Don’t forget\nto add an “else” clause!\r\nOne example - and part of the definition -  has\nalready been done for you!\r\n"
      Eval Cond 8_instruction: "Free Play: Suppose you want to own a car at 21, or\nhave your own business by 30. Write a function called life-goals, which takes\nin an age and produces a string that describes your life goals by then. Don’t\nforget to add an “else” clause!\r\n"
      Eval Contracts 1_instruction: |
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: |
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: |
        Check out the rotate function - can you use
        it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: |
        Can you complete this image using the "shrink"
        function block? The radius is 20. 
      Eval Define Funcs 1_instruction: |
        Here's a new function called green-triangle
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: |
        Let's look inside that green-triangle function
        to see how it works. Can you modify it so that the green-triangle function
        always draws outlined green triangles?
      Eval Define Funcs 3_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: |
        Create a new function called aqua-star that
        has a Domain of a single Number for radius and returns an aqua star of the
        given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |
        Let's use that aqua-star function to make
        a row of different sized stars. From left to right, the stars should have
        radii of 25, 50, and 75.
      Eval Define Funcs Test_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |
        The Design Recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition? The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        starburst. When given a number of points and an outer radius, starburst returns
        a yellow radial star with given points, and an inner radius that is half the
        outer radius.
      Eval Design Recipe 5_instruction: |
        Using the Design Recipe, write a function
        striped-flag that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |
        Write a function large-polygon that should
        output a solid polygon of given sides and color that takes up most of the
        window, regardless of the number of sides. To make sure that the polygon doesn't
        get too large as you increase the number of sides, side length should be inversely
        proportional to side number, with a length of (800/sides).
      Eval Design Recipe Free Play_instruction: |
        Free Play: Use the Design Recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |
        The string-append function takes two Strings
        and returns a single combined String. Add a String "Universe" to the second
        argument of string-append.
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the rectangle block to draw this
        solid, red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |
        Try using this new Evaluation Block called
        overlay to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: |
        Use the overlay block to place a 75 pixel
        radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      Farmer for Authored Hint testing_instruction: |
        Wow, I found a really deep hole!
        I don't know how many shovelfuls of dirt it needs.  Can you write a program
        that fills it until the ground is even?  Hint:  Try using the while loop this
        time.
      Frequency Analysis_instruction: Test
      frozen circle function in circle_instruction: Сега, нека да създадем 20 частично застъпващи се кръгове като се завъртаме на 18 градуса след всеки кръг.
      frozen circle function with parameter_instruction: 'Тук е "Създайте кръг" блока, който може да направи кръгове с различни размери. Можете ли да използвате това, за да се създаде малък кръг с размери 5 и по-голям кръг от размер 10?'
      frozen circle function_instruction: 'Използвайте новия "създайте кръг" блок, за да създадете 10 припокриващи се кръгове. Не забравяйте да скочи напред между кръговете.'
      frozen circle_instruction: Кръгът е специална форма. Можете ли да разберете с какво число да замените въпросителните знаци, за да начертаете кръг?
      frozen cross rotate dense_instruction: 'Нека да повторим това 90 пъти! Колко пъти 90 се съдържа в 360? Съвет: Това е малка стойност.'
      frozen cross rotate_instruction: Сега повторете това 10 пъти. На колко градуса трябва да се завъртате между всеки ред?
      frozen cross_instruction: Разпънете блока за повторение около тези команди, за да създадете знак плюс. Забелязахте ли, Елза може да се движи напред и назад?
      frozen diamond mini snowflake_instruction: Знаете ли, че всяка снежинка е с различна форма? Нека създадем нова снежинка с помощта на блок за повторение, като повторим успоредника 4 пъти. Ще завиваме надясно на 90 градуса между всеки успоредник.
      frozen diamond snowflake_instruction: Сега, нека създадем нова снежинка с помощта на блок за повторение. Ще повторим успоредника 10 пъти и ще завиваме надясно на 36 градуса след всяка фигура.
      frozen diamond_instruction: Използвайте повторение около тези блокове, за да създадете успоредник. Това е точно като правоъгълник но има различни ъгли. Той има 60 градуса и 120 градуса ъгли вместо 90 градуса.
      frozen freeplay_instruction: Вие официално сте главен художник! Създайте зимна приказка и я споделете с приятелите си.
      frozen line_instruction: Здравейте! Аз съм Елза от Арендейл. Помогнете ми да създам отсечка.
      frozen perpendicular_instruction: Сега, нека да видим дали можем да създадем две линии, които образуват 90 градуса ъгъл помежду си. Ще трябва да използвате блок за завъртане, както и на блок за преместване.
      frozen snowflake branch_instruction: 'Нека да използваме "създаване клонче на снежинка" блока, за да създадем три клончета, които започват да изглеждат като снежинка.'
      frozen snowflake full_instruction: Сега, нека да повторим 8 пъти, за да се получи красива снежинка!
      frozen snowflower_instruction: Сложните снежни модели могат да бъдат създадени от много прости форми. Можете ли да направите модел от повтарящи се 5 кръгчета от размер 5 и 5 кръгчета с размер 10?
      frozen square iterative_instruction: Изглежда, че ние направихме половинката на квадрат. Нека съединим 4-те линии заедно, за да създадем квадрат.
      frozen square loop 3x_instruction: Нека създадем три квадрата, като след всеки се завъртаме под ъгъл от 120 градуса.
      frozen square loop_instruction: 'Здравейте, аз съм Анна от Арендел! Нека направим квадрат с блок за повторение, който ни позволява да ползваме по-малко блокове. Колко пъти (?) трябва да повторим действието в  блока за повторение за да начертаем квадрат?'
      frozen square snowflake_instruction: 'Можете ли да създадете снежинка с помощта на  блок за повторение? Повторете квадрата 10 пъти и се завъртайте на 36 градуса между всеки квадрат.'
      Infinity_catch_instruction: 'Можете ли да накарате Елза ("актьор 2"), използвайки клавишите със стрелки, да достигне Анна?'
      Infinity_finale_instruction: 'Създайте нещо, което ви харесва и  го споделете!'
      Infinity_move_collide_instruction: 'Хиро е "актьор 1".  Преместете го към Баумах и когато те се докоснат трябва да се възпроизведе звук.'
      Infinity_move_directions_instruction: 'Баумаx е "актьор 2".  Добавете блок за движение и след това преместете Баумах с помощта на стрелките.  Накарайте го да докосне двама други герои.'
      Infinity_move_right_instruction: 'Хиро е "актьор 1".  Използвайте блок за движение, за да преместите Хиро към Баумах и те да се докоснат.'
      Infinity_repeat_instruction: 'Използвайте "повтаря завинаги" блок, за да накарате Анна да се движи нагоре и надолу по 400 пиксела.'
      Infinity_say_instruction: 'Накарайте Анна да каже "Здрасти." с помощта на блок за текст.'
      Infinity_shoot_instruction: 'Баумаx е "актьор 2".  Накарай Баумах да хвърля ракета по Хиро.'
      Infinity_shoot_directions_instruction: 'Хиро е "актьор 3".  Накарайте Хиро да хвърли ракета по всеки от четирите героя.  Изчаквайте по една секунда между всяко хвърляне.'
      Infinity_test_instruction: Това е тест на Infinity ниво.
      Infinity_touch_faster_instruction: Докоснете още повече снежинки!
      Infinity_touch_four_instruction: Премести Анна, нагоре, надолу наляво и надясно, за да докосне всяка от четирите снежинки.
      Infinity_touch_score_instruction: 'Направете така, че Анна да получава точка, когато докосне снежинка.  След това щракнете върху бутона "Старт" и я направлявайте да докосне всяка снежинка по веднъж.'
      jessie-test_instruction: Lots of instructions
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: 'Начертай къса линия нагоре и дълга  вдясно!'
      K-1 artist 1 level 10_instruction: 'Начертай пунктирана линия с помощта на  блокове за скок и чертане'
      K-1 artist 1 level 9_instruction: Начертай това с три линии
      K-1 Artist Loops 1_instruction: Направи тази линия чрез преместване на изток 4 пъти.
      K-1 Artist Loops 2_instruction: Може ли да начертаете същата линия с цикъл?
      K-1 Artist Loops 3_instruction: Можете ли да повторите тези блокове, за да начертаете 6 линии?
      K-1 Artist Loops 4_instruction: 'Може ли с повторение да начертаеш  горната част на този замък?'
      K-1 Artist Loops 5_instruction: Какво ще повторите 4 пъти, за да нарисувате тези стъпала?
      K-1 Artist Loops 6_instruction: 'Тук се нуждаете от два цикъла: един за качване нагоре по стълбите и един за слизане.'
      K-1 Artist Loops 7_instruction: Можете ли да завършите този модел с два цикъла?
      K-1 Artist Loops 8_instruction: Това стълбище има по-широки стъпала.
      K-1 Artist Loops 9_instruction: 'Оценка: Използвайте цикъл, за да начертаете стълбите'
      K-1 Artist Loops Free Play_instruction: Свободна игра, начертайте нещо забавно!
      K-1 Artist1 1_instruction: Начертайте стъпалото на човек с една линия
      K-1 Artist1 10_instruction: Чертай и скочи по пунктираната линия към съкровището X
      K-1 Artist1 2_instruction: Начертайте мустаците котката с две линии!
      K-1 Artist1 3_instruction: Начертай две линии на изток и две на север, за да довършиш къщата!
      K-1 Artist1 4_instruction: 'Начертай линии нагоре, отгоре и  надолу, за да довършиш замъка!'
      K-1 Artist1 5.5_instruction: Завърши третата кула на замъка, използвайки къси линии
      K-1 Artist1 5_instruction: Начертай стъблото на това цвете с две линии!
      K-1 Artist1 6_instruction: 'Завърши картината с помощта на "скок" блок!'
      K-1 Artist1 7_instruction: 'Използвайте "скок" блока, за да се движите без чертане. Скочете и начертайте линия.'
      K-1 Artist1 8_instruction: 'Начертай пунктирана линия с помощта на  блокове за скок и чертане'
      K-1 Artist1 9_instruction: Чертай и скачай, за да направиш пунктирана линия
      K-1 Artist1 Assessment 1_instruction: Начертай къси и дълги линии!
      K-1 Artist1 Assessment 2_instruction: Начертай къси пунктирани линии!
      K-1 Artist2 1_instruction: Начертайте квадрат под триъгълника.
      K-1 Artist2 2_instruction: Скочи и начертай квадрат до къщата.
      K-1 Artist2 3_instruction: Начертайте квадрат над другия квадрат
      K-1 Artist2 4_instruction: Начертайте правоъгълник и довършете моста.
      K-1 Artist2 5_instruction: Начертайте правоъгълник за завършване на крепежа на моста
      K-1 Artist2 6_instruction: Начертайте два квадрата, за да направим един правоъгълник!
      K-1 Artist2 Assessment1_instruction: 'Оценка: Начертайте квадрат до другия квадрат.'
      K-1 Artist2 Free Draw_instruction: Начертайте нещо!
      K-1 Artist2_7_instruction: Начертайте правоъгълник, за да дадете на скрина горно чекмедже!
      K-1 Bee 1_instruction: Премести ме до цветето, вземи нектар, тогава ме премести в медената пита и направи мед
      K-1 Bee 10_instruction: Вземи четири нектара и след това направи два пъти мед!
      K-1 Bee 11.5_instruction: 'Вземи четири нектара и направи четири  пъти мед!'
      K-1 Bee 11_instruction: Получи три нектара и след това направи един път мед
      K-1 Bee 12_instruction: Получи три нектара и след това направи два пъти мед!
      K-1 Bee 13_instruction: Получи три нектара и след това направи един път мед!
      K-1 Bee 14_instruction: 'Заведи ме до нектара,  вземи го, заведи ме до медената пита и направи мед'
      K-1 Bee 15_instruction: Вземи два нектара, за да направиш два пъти мед!
      K-1 Bee 2_instruction: Премести ме до цветето, вземи нектар, тогава ме премести в медената пита и направи мед
      K-1 Bee 3_instruction: Премести ме до цветето, вземи нектар, тогава ме премести в медената пита и направи мед
      K-1 Bee 4_instruction: Получи два нектара и след това направи два пъти мед!
      K-1 Bee 5_instruction: Получи три нектара и след това направи три пъти мед!
      K-1 Bee 6_instruction: Получи два нектара и след това направи два пъти мед!
      K-1 Bee 7_instruction: Получи три нектара и след това направи два пъти мед!
      K-1 Bee 8_instruction: Получи два нектара и след това направи два пъти мед!
      K-1 Bee 9_instruction: Получи два нектара и след това направи два пъти мед!
      K-1 Bee Assessment 1_instruction: Вземи нектар и направи мед!
      K-1 Bee Assessment 2_instruction: Вземи нектар и направи мед!
      K-1 Bee Loops 1_instruction: Вземи нектара и направи мед!
      K-1 Bee Loops 10_instruction: Използвай функция за повторения, за да вземеш нектар, направиш мед , и да продължиш!
      K-1 Bee Loops 11_instruction: Задача! Използвай цикли, за да вземеш нектара и направиш мед!
      K-1 Bee Loops 12_instruction: 'Задача! Използвай  повторения, за да вземеш нектар, направиш мед и продължиш!'
      K-1 Bee Loops 2_instruction: Използвай цикли , за да се преместиш, вземеш нектар и направиш мед!
      K-1 Bee Loops 3_instruction: Използвай цикли, за да вземеш нектар и направиш мед!
      K-1 Bee Loops 4_instruction: Използвай цикли, за да вземеш нектар, направиш мед и се преместиш!
      K-1 Bee Loops 5_instruction: Използвай цикли, за да вземеш нектар и направиш мед!
      K-1 Bee Loops 6_instruction: Използвай функция за повторения, за да вземеш нектар, направиш мед , и да продължиш!
      K-1 Bee Loops 7_instruction: Използвай цикли, за да вземеш нектар и направиш мед!
      K-1 Bee Loops 8_instruction: Използвай цикли, за да вземеш нектар и направиш мед!
      K-1 Bee Loops 9_instruction: Използвай функция за повторения, за да вземеш нектар, направиш мед , и да продължиш!
      K-1 Bee Loops Assessment 1_instruction: Вземи нектар, за да направиш мед и използвай цикли, за да се преместиш!
      K-1 Bee Loops Assessment 2_instruction: За да вземете нектар и направите мед, използвайте цикли!
      K-1 Bee Puzzle 12_instruction: Get three nectars and then make two honey
      K-1 Building a Foundation Assessment_instruction: Направете пирамида от три нива, няма никакви условия, така че играйте с отделните части докато не я сглобите правилно!
      k-1 maze 1_instruction: Можеш ли да направиш така, че да отида на Запад и достигна прасето?
      K-1 Maze 10_instruction: 'Заобиколи ТНТ, за да мога да стигна  до прасето!'
      K-1 Maze 11_instruction: 'Проследи пътя и ме заведи до прасето. Стой далече от динамита ( TNT) или ще хвърчи перушина! Подсказване: той е на Юг от мен.'
      K-1 Maze 2_instruction: Премести ме на Изток, за да стигна до прасето!
      K-1 Maze 3_instruction: Премести ме на Юг, за да стигна до прасето!
      K-1 Maze 4_instruction: Премести ме на Север, за са стигна до прасето!
      K-1 Maze 5_instruction: Премести ме на Изток, за да стигна до прасето!
      K-1 Maze 6_instruction: Премести ме в една посока, после в друга, за да стигна до прасето!
      K-1 Maze 7_instruction: Премести ме в една посока, после в друга, за да стигна до прасето!
      K-1 Maze 8_instruction: Премести ме в една посока, после в друга, за да стигна до прасето!
      K-1 Maze 9_instruction: Премести ме в една посока, после в друга, за да стигна до прасето!
      K-1 Maze Assessment 1_instruction: 'Задача- Заведи ме до прасето!'
      K-1 Maze Assessment 12_instruction: Ниво с оценки
      K-1 Maze Assessment 13_instruction: Ниво с оценки
      K-1 Maze Assessment 2_instruction: 'Задача- Заведи ме до прасето!'
      K-1 maze debug 1_instruction: Промени кода, за да ме заведеш до прасето!
      K-1 maze debug 10_instruction: Коригирай нивото като преместваш и добавяш блокове, за да мога да достигна до прасето!
      K-1 maze debug 11_instruction: "Така се тестват различни функции \"test!\r\"\nКоригирай нивото като преместваш и добавяш блокове, за да мога да достигна до прасето."
      K-1 maze debug 2_instruction: Отгатнете какво липсва и добавете необходимите блокове за да стигна до прасето!
      K-1 maze debug 3_instruction: 'Отгатнете какво липсва и премахнете  излишните  блокове, за да мога да стигна до прасето!'
      K-1 maze debug 4_instruction: Прегледайте блоковете и ги поправете! Мисля , че отивам в неправилната посока.
      K-1 maze debug 5_instruction: Коригирай нивото като преместваш и добавяш блокове, за да мога да достигна до прасето!
      K-1 maze debug 6_instruction: Коригирай нивото като преместваш и добавяш блокове, за да мога да достигна до прасето!
      K-1 maze debug 7_instruction: Коригирай нивото като преместваш и добавяш блокове, за да мога да достигна до прасето!
      K-1 maze debug 8_instruction: Коригирай нивото като преместваш и добавяш блокове, за да мога да достигна до прасето!
      K-1 maze debug 9_instruction: Коригирай нивото като преместваш и добавяш блокове, за да мога да достигна до прасето!
      K-1 Maze debug Assessment 1_instruction: Задача-Коригирай нивото като преместваш и добавяш блокове, за да достигна до прасето!
      K-1 Maze Loops 1_instruction: Заведи ме до прасето!
      K-1 Maze Loops 10_instruction: Заведи ме до прасето! Използвай повтарящ се цикъл.
      K-1 Maze Loops 11_instruction: Заведи ме до прасето! Използвай повтарящ се цикъл.
      K-1 Maze Loops 12_instruction: Заведи ме до прасето! Използвай повтарящ се цикъл.
      K-1 Maze Loops 2_instruction: Използвай Блока за повторение, за да стигна до прасето!
      K-1 Maze Loops 3_instruction: Заведи ме до прасето! Използвай повтарящ се цикъл.
      K-1 Maze Loops 4_instruction: Заведи ме до прасето!
      K-1 Maze Loops 5_instruction: Заведи ме до прасето! Използвай повтарящ се цикъл.
      K-1 Maze Loops 6_instruction: Заведи ме до прасето! Използвай повтарящ се цикъл.
      K-1 Maze Loops 7_instruction: Заведи ме до прасето! Използвай повтарящ се цикъл.
      K-1 Maze Loops 8_instruction: Заведи ме до прасето! Използвай повтарящ се цикъл.
      K-1 Maze Loops 9_instruction: Заведи ме до прасето!
      K-1 Maze Loops Assessment 1_instruction: 'Задача- Използвай цикли за да стигна до прасето!'
      K-1 Maze Loops Assessment 2_instruction: 'Задача- Използвай цикли за да стигна до прасето!'
      K-1 Maze Multi 14_instruction: Ниво с оценки
      K-1 Maze Multi 15_instruction: Ниво с оценки
      K-1 Maze Sequence Assessment 1_instruction: "Така се тестват различни функции \"test!\r\"\nПремести ме в една посока,\nпосле в друга, за да стигна до прасето"
      K-1 Maze Sequence Assessment 2_instruction: "Така се тестват различни функции \"test!\r\"\nПремести ме в една посока,\nпосле в друга, за да стигна до прасето."
      kikiTesting_instruction: ".\r\n .\r\n.\r\n.\r\n.\r\n.\r\n\r\n.\r\n\r\n"
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      MSM Big Game Empty_instruction: |
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim Standalone Automatic DNS_instruction: |
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast_instruction: "In this version of the Internet Simulator,\nyou can connect to up to 5 other people in a room. When you send messages\nin the room, everyone receives them. What are some of the challenges of this\nsystem, and how might you solve them?\r\n"
      NetSim Standalone Classroom Routers_instruction: |
        In this version of the Internet
        Simulator, everyone connects to a router and has a specific address. To send
        messages, you have to address your message to the specific address of the
        recipient, and the router will take care of delivering it to the right computer.
        If there are other routers created in your class, ask for the address of one
        of your classmates and send them a message! View the Log Router to see the
        path the messages have taken through the network.
      NetSim Standalone Freeplay_instruction: |
        In this configuration, most of the
        options are turned on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS_instruction: |
        In this version of the simulator
        you can't see the other students' addresses.  Instead, one of you must act
        as a name service, to help share addresses with each other.
      NetSim Standalone Packets TCP_instruction: |
        Messages on the Internet can take
        many paths to get to their destination, and sometimes along the way the message
        gets dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters.
        
      NetSim Standalone Routers Addresses_instruction: "For this activity, connect\nto a router with the others in your group. Important note: The router will\nonly properly route messages where the first 4 bits are the To: address and\nthe second 4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      NetSim Standalone SendAB_instruction: |
        You and your partner share a single
        wire that can only be in state A or state B. You can set the wire to either
        state at any time, and you can read the state of the wire at any time. Can
        you figure out a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers Ascii_instruction: |
        Now that you've transmitted
        information represented as decimal numbers, you can map those numbers to text
        characters to send text-based information back and forth. With a text-based
        protocol, you can easily represent and communicate all kinds of information.
        
      NetSim Standalone Sending Numbers_instruction: |
        You and your partner can now
        reliably send messages back and forth without extra coordination! While you're
        always sending bits back and forth, you can also represent those bits as decimal
        numbers. What kinds of information can you represent with this system? 
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: Начертайте нещо страхотно! Вашият код ще се запише като проект, към който можете да върнете по всяко време.
      NEW Course 4 Artist Functions 1_instruction: Можете ли да начертаете квадрат с дължина на страните 100 пиксела с използване на цикъл?
      NEW Course 4 Artist Functions 10.1_instruction: Използвайте функциите от предишния пъзели да изготвите този модел.
      NEW Course 4 Artist Functions 10_instruction: 'Щракнете върху "Редактиране", за да попълните блокчетата във функцията и направите квадрат от 40 пиксела.'
      NEW Course 4 Artist Functions 11_instruction: "Сега искаме да създадем нова функция, наречена \"начертайте линия от квадрати\", която чертае шест квадратчета на ред.  Можете ли да вградите в тази функция друга- \"начертайте 20 квадрати\" функция, която ние вече сме създали? Забележка: Вижте, че е променена дебелината, с която чертае моливът. Тя е много по-тънка. Щракнете върху \"Редактиране\" на \"начертайте 20 квадрата\" функция, за да видите как сме го направили! \r\n"
      NEW Course 4 Artist Functions 12_instruction: 'Използвайте функцията "начертайте линия от квадрати" от последната загадка, за да нарисувате този модел."'
      NEW Course 4 Artist Functions 13_instruction: 'Можете ли да начертаете звезда, използвайки функцията " начертай линия от квадрати"? Съвет: Редактирайте функцията "начертай линия от квадрати", така че да не се налага да я извиквате втори път. Знайте, че трябва да вървите напред определен брой пиксели и да се завъртите на 144 градуса.'
      NEW Course 4 Artist Functions 14_instruction: 'Свободно време за игра! '
      NEW Course 4 Artist Functions 2_instruction: 'Можете ли да начертаете 3 квадрата на разстояние 20 пиксела един от друг? Съвет: всеки квадрат има страни 100 пиксела'
      NEW Course 4 Artist Functions 3_instruction: 'Това е нов тип блок. Той се нарича "функционален блок". Щракнете върху "Старт", за да видите какво може да направи. '
      NEW Course 4 Artist Functions 4_instruction: 'Използвайте функцията "начертава квадрат", за да изготвите този модел. Съвет: Вие ще трябва да използвате "завърти надясно на 120 градуса" блока след всеки квадрат.'
      NEW Course 4 Artist Functions 5_instruction: 'Как "начертава квадрат" блокът знае какви команди да изпълни? Щракнете върху "Редактиране" в "начертава квадрат" функцията. Блоковете в редактора на функцията определят какво ще направи "начертава квадрат." Когато сте готови с огледа, щракнете върху "Запиши и затвори" и след това на "Старт."'
      NEW Course 4 Artist Functions 6_instruction: "С помощта на \"чертае квадрат\" функционалния блок можете ли да нарисувате тази картина? Съвет: всеки квадрат е на 20 пиксела от другия. \r\n"
      NEW Course 4 Artist Functions 7_instruction: 'Разбрахте ли как се използват функционалните блокове? Нека да променим страните на квадрата на 200 пиксела. Съвет: щракнете на "Редактиране", за да промените размера в блока" начертай квадрат". Не забравяйте да щракнете на "затвори" за да излезете от менюто за редактиране на функции. '
      NEW Course 4 Artist Functions 8_instruction: Ние сме приготвили повечето от кода, за да се създаде функция. Въпреки това изглежда, че нещо липсва. Можете ли да редактирате дефиницията на функцията и да нарисувате триъгълника?
      NEW Course 4 Artist Functions 9_instruction: Кой блок трябва да се добави, за да разрешим пъзела?
      NEW Course 4 Artist Functions inspire_instruction: Щракнете тук, за да видите пояснителната картина отново.
      New Course 4 Artist Functions Level 4_instruction: 'Използвайте функцията "чертае квадрат", за да изготвите този модел.'
      NEW Course 4 Artist Params 1_instruction: 'Нека да дефинираме тази функция, която ще чертае квадрат със страни 50 пиксела. Щракнете върху "Редактиране", за да започнете.'
      NEW Course 4 Artist Params 10_instruction: 'Създайте "начертава шестоъгълник" функция с параметър "дължина". Съвет: Страната на този шестоъгълник е 100 пиксела. '
      NEW Course 4 Artist Params 11_instruction: 'Може ли да разберете как се прави тази форма? Редактирайте функцията, за да използвате параметъра "страни".'
      NEW Course 4 Artist Params 12_instruction: Можете ли да завършите тази рисунка? Страните на всички фигури са дълги 100 пиксела.
      NEW Course 4 Artist Params 12a_instruction: 'Това изображение е подобно на последното. Можете ли да използвате "за цикъл" със функцията си, за да направите този дизайн?'
      NEW Course 4 Artist Params 13_instruction: "Нека да редактираме функцията \"начертайте многоъгълник\". Тя вече има параметър \"страни\". Сега нека да добавим параметър за \"дължина\". \r Съвет: Периметъра на всяка фигура е 200 пиксела. Помниш ли уравнението, с което се правеше фигурите да са със същия размер, когато те имат различен брой страни?"
      NEW Course 4 Artist Params 14_instruction: 'Редактирайте "чертае спирален ръб" като употребите параметрите "дължина" и "страни", след това пресъздайте тези фигури.'
      NEW Course 4 Artist Params 15_instruction: 'ФрийПлей: Тук са функциите, които сте написали. Начертайте нещо страхотно!'
      NEW Course 4 Artist Params 2_instruction: 'Създайте " функция за начертаване на триъгълник със страни 50 пиксела"'
      NEW Course 4 Artist Params 3_instruction: "Сега, нека да използваме функцията, за да начертаем 3-те триъгълника от последната загадка в един ред. Съвет: всеки триъгълник е на 50 пиксела от другия. \r\n"
      NEW Course 4 Artist Params 4_instruction: 'Забелязвате ли нещо различно в тези функционални блокове? Щракнете върху "Старт", за да видите какво се случва.'
      NEW Course 4 Artist Params 5_instruction: 'Запълнете  полето с ??? в параметъра за "дължина" . Съвет: Страните на петоъгълника са 100 пиксела дължина. '
      NEW Course 4 Artist Params 6_instruction: 'Попълнете параметъра "дължина", за да повтори тези фигури, като замените "???" с правилния номер. Квадратът и триъгълникът са с дължина на страните 100 пиксела, докато на шестоъгълника е 75 пиксела.'
      NEW Course 4 Artist Params 7_instruction: 'Можете ли да завършите тази рисунка? Съвет: всеки триъгълник е 25 пиксела по-голям от предходния.  Първия триъгълник е със страни от 25 пиксела.'
      NEW Course 4 Artist Params 8_instruction: 'Можете ли да начертаете всеки един от тези триъгълници с тази нова функция? Страните на първия са дълги 25 пиксела, на втория 50, а на третия- 75. Съвет: започнете, като щракнете върху "Редактиране" в блока на функцията.'
      NEW Course 4 Artist Params 9_instruction: 'Щракнете върху "Редактиране", за да попълните параметъра в дефиницията на функцията "чертае квадрат". Тя трябва да получи параметър за дължина, точно като триъгълника. Този път, начертайте 3 квадрата със страни: 25, 50 и 75 пиксела, като всеки да е на 100 пиксела от другия.'
      NEW Course 4 Artist Params inspire_instruction: "Свободна игра за вдъхновение: Вече сте научили всичко, което трябва да знаете за да направите модел като този! Ако тази картина Ви вдъхновява, опитайте се да направите нещо подобно. Или създайте нещо сами. \r \r Искате да знаете как е направен моделът ни за вдъхновение? Посетете https://studio.code.org/c/106387530 за решението."
      NEW Course 4 Artist Vars 1.5_instruction: 'Погледнете в кода, можете ли да разберете как "поставя дължина" блока и "дължина" блока работят заедно? Щракнете върху "Старт", за да го видите в действие. '
      NEW Course 4 Artist Vars 12_instruction: Сега промени алгоритъма от последното ниво и създайте петоъгълник със страни от 150.
      NEW Course 4 Artist Vars 2.5_instruction: 'Погледнете в кода, можете ли да разберете как "поставя дължина" блока и "дължина" блока работят заедно? Щракнете върху "Старт", за да го видите в действие. '
      NEW Course 4 Artist Vars 2_instruction: 'Плъзнете блок за номер към "поставям дължина" блок, за да нарисувате няколко триъгълника със страни 50 пиксела. '
      NEW Course 4 Artist Vars 4 5_instruction: Страхотна работа свършихме в последната загадка, нека да пробваме отново, този път нека да направим този страхотен дизайн със шестоъгълници. Страната на всеки е 60 пиксела.
      NEW Course 4 Artist Vars 4_instruction: 'Нека да опитаме отново. Можете ли да зададете променливата "дължина" за да направим този страхотен дизайн от шестоъгълници? Съвет: Числото е кратно 10.'
      NEW Course 4 Artist Vars 6_instruction: "Начертайте този модел като поставите променливата \"дължина\" на правилните места и след това задайте правилната стойност за променливата. (Съвет: това е кратно на 10).  \r \r Видяхте ли как само задаваме стойността за дължина веднъж, а кодът използва правилната стойност навсякъде? \r \r \r\n"
      NEW Course 4 Bee For Loops 1_instruction: Използвайте цикъл, за да събера нектар от всяко цвете.
      NEW Course 4 Bee For Loops 10_instruction: 'Използвайте вашата променлива за  "брояч" на повторенията да контролира колко далеч да се движи хоризонтално.'
      NEW Course 4 Bee For Loops 10a_instruction: 'Готови ли сте за предизвикателството?  Използвайте това, което сте научили за циклите и се опитайте да реши този проблем. Запомнете: Вие може да пробвате Вашето решение няколко пъти, преди да разберете всички последователни стъпки.'
      NEW Course 4 Bee For Loops 11_instruction: Можете ли да използвате променливата на цикъла за контрол на движението и събирането на нектар?
      NEW Course 4 Bee For Loops 2_instruction: Добавете код, необходим за да се уверите, че пчелата събира нектар. Погледнете колко код Ви трябва за този пъзел! (Ние ще Ви научим на по-лесен начин в следващия пъзел.)
      NEW Course 4 Bee For Loops 3_instruction: 'Ах, с цикъл това се прави много по-лесно! Целият код, който ни трябва е там, погледнете как той е обединен и след това щракнете върху "Старт", за да видите как работи. '
      NEW Course 4 Bee For Loops 4 4_instruction: 'Сега трябва да се придвижим напред "брояч" пъти, и тогава да вземете нектар "брояч" пъти.  Можете ли да използвате два цикъла за повторение, за да решим това предизвикателство?'
      NEW Course 4 Bee For Loops 4_instruction: 'Замени??? в цикъла с най-голямото количество нектар, който пчелите трябва да съберат. '
      NEW Course 4 Bee For Loops 5 5_instruction: Можа ли да разбереш как се използва цикъла? Нека да помогнем на пчелата с останалата част от нектара.
      NEW Course 4 Bee For Loops 5_instruction: 'Можете да използвате " за цикъла", за да броите на обратно. Пробвайте да вземете нектар като броите от 5 до 1, намалявайки с по единица.'
      NEW Course 4 Bee For Loops 6_instruction: 'Последното число в цикъла се нарича "стъпка", всеки път когато се задейства, цикъла се управлява от променливата "брояч", която се променя от стъпката. Опитайте да съберете тези цветя, като използвате стъпка с 2.'
      NEW Course 4 Bee For Loops 7_instruction: "Сега нека да съчетаем \"брояч\" променлива с математическия блок! Как можете да използвате променливата \"брояч\", за да навигирате през градината с най-малък брой блокове? Какво трябва да направя, за да съберем 3, 6, 9, 12, 15 нектар този път? Тайната е в \"брояч\" променливата! \r \r запомни: Ако вашият цикъл брои със стъпка, стъпката ще се добавя към вашата променлива \"брояч\" всеки път."
      NEW Course 4 Bee For Loops 8_instruction: "Ти го направи! Какво трябва да е нарастването, за да се събере 3, 6, 9, 12, 15 броя нектар? \r\n"
      NEW Course 4 Bee For Loops 9_instruction: Ако цикъла е намаляващ, стъпката се движи в низходящ ред при всяко повторение. Каква трябва да е стъпката, за да съберете нектар от 9, 6 и накрая 3?
      NEW Course 4 Bee For Loops 95_instruction: 'Погледнете всяка част от "за loop" които току-що сте създали.  Можете ли да разберете кои номера трябва да се удвоят за решаването на този пъзел? Защо това работи?'
      NEW Course 4 Play Lab Params 11_instruction: 'Сега е време за игра! Забавлявайте се с всички блокове на вашата кутия с инструменти. '
      NEW Course 4 Play Lab Params 5 5_instruction: Нека да опитаме отново, но с по-малко помощ. Какво ви е необходимо да редактирате този път, за да направите от актьорите патрул?
      NEW Course 4 Play Lab Vars 4 5_instruction: '"Какво мислите прави този код? Натиснете "Старт", за да видите какво се случва.'
      NEW Course 4 Play Labs For Loops 7a_instruction: Използвайки това, което сте научили досега, може ли да накарате динозавъра да прави крачка напред, всеки път, когато пингвинът брои?
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: 'Сега е време за игра! Забавлявайте се с всички блокове на вашата кутия с инструменти. '
      NEW Course 4 Play Labs For Loops 8a_instruction: 'Предизвикателство: Как бихте използвали "за цикъл" за да накарате всеки актьор да обикаля и да си казва номера, а после изчезва от екрана? '
      New Play Lab Project_instruction: Създайте своя собствена история или игра! Вашият код се записва като проект, към който можете да върнете по всяко време.
      Ninjacat Demo B (copy 1)_instruction: "\r\nLet’s begin by exploring a simple\nvideogame, and then figuring out how it works. You can use the arrow keys\nto move the ninja left, right and jump - try to catch the unicorn and avoid\nthe dragon!\r\n\r\n\r\n\r\n  \r\n\r\n"
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      October15 bat_instruction: "Freeplay: Here are some functions to play with.  Can\nyou draw a bat?\r\n"
      October15 ghost 1_instruction: |
        Give the ghost eyes, using the "draw a circle"
        function.
      October15 JoL 1_instruction: |
        Program the artist to design a face for your
        jack-o-lantern!
      October15 pumpkin 1_instruction: |
        Finish this jack-o-lantern by drawing the
        eyes and nose in any style you would like.
      October15 stars 1_instruction: |
        Use loops and the "random integer" block
        to fill the night sky with stars of different shapes and sizes.
      Overworld Avoid Monsters_instruction: Тичането по пълзящи растения е лоша идея. Внимателно се придвижете покрай шиповете и достигнете безопасно до дома.
      Overworld Chop Tree_instruction: 'Дървесината е много важен ресурс. Много неща са направени от нея. Отидете до дървото и използвайте командата "унищожи блок", за да го отрежете.'
      Overworld Chop Trees_instruction: Преди да залезе слънцето трябва да построим къща. Къщите изискват много дървен материал. Отсечете всички 3 дървета.
      Overworld Free Play 20x20_instruction: Поздравления! Вие приключите всички наши пъзели! Сега копайте, изградете и създайте нещо уникално с помощта на всичко, което сте научили досега.
      Overworld Free Play_instruction: Този пейзаж е твой. Разгледай го. Ти избираш какво да изградиш.
      Overworld House Frame - A_instruction: Да си направим собствен дом! Това място изглежда добре. Изгради стена върху почвата.
      Overworld House Frame - C_instruction: Да си направим собствен дом! Това място изглежда добре. Изгради стена върху почвата.
      Overworld House Frame B_instruction: Една стена е завършена. Нека построим и останалата част от къщата като следваме плана! Вие ще трябва да се повтаряте многократно команди тук.
      Overworld House Frame B2_instruction: Една стена е завършена. Нека построим и останалата част от къщата като следваме плана! Вие ще трябва да се повтаряте многократно команди тук.
      Overworld House Frame C_instruction: Една стена е завършена. Нека построим и останалата част от къщата като следваме плана! Вие ще трябва да се повтаряте многократно команди тук.
      Overworld House Frame Chosen_instruction: 'Изградете останалата част от къщата си от всеки материал, който искате. Командата "повтори" ще бъде от голяма полза.'
      Overworld House Frame_instruction: Нека да направим собствен дом! Това място изглежда добре. Изгради стена върху почвата.
      Overworld Minecart Track_instruction: Вие сте отново на повърхността с много подземни ресурси. Сега ще трасираме път, започвайки от дома. Първата стъпка е изчистването на пътя. Следвайте пътя и премахвайте дървета.
      Overworld Move to Sheep_instruction: 'Добави втора "върви напред" команда, за да достигнеш овцата.'
      Overworld Place Wall_instruction: 'Всяка къща започва със стена. Изгради първата част от къщата си с пускането на "постави" и "върви напред" командите вътре в цикъла.'
      Overworld Plant Crops_instruction: Добре е да планираш нещата предварително. Посади растения от двете страни на водата, така че да не си гладен по-късно.
      Overworld Powered Minecart_instruction: Чудесна работа! Вие сте събрали много ресурси и построихте скромен дом. Сега положете железопътна линия от границата на картата до вратата на къщата си.
      Overworld Shear Sheep_instruction: 'Време е за стригане на овце! Използвайте командата "острижи", за да съберете вълна от двете овце.'
      PDAlg 13-16 Sam Extension Puzzle_instruction: |
        Add a second parameter to "onscreen?"
        for Sam's y coordinate and update the function so it keeps him safe on all
        four sides.
      PDAlg 17-20 Luigi Extension Puzzle_instruction: |
        Without modifying your existing
        "cost" function, create a new "coupon" function that takes a pizza topping
        and coupon code and returns the cost of a pizza with that topping. If the
        coupon code is correct (you get to decide what it is), apply a 30% discount
        to the pizza.
      PDAlg 8-12 ex dr 1_instruction: |
        The definition in this Design Recipe doesn't
        match both examples. Test each example to see which is failing, and then fix
        the definition to match.
      PDAlg 8-12 ex dr 2_instruction: |
        This student has created two examples for
        the function "apples" but something's not quite right. How would you direct
        this student to correct their mistake?
      PDAlg 8-12 Rocket Height Puzzle_instruction: |
        Let's write a "rocket-height"
        function with simple acceleration. Write a function that ensures the rocket
        is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and
        165 at 4 seconds.
      PDAlg Big Game History_instruction: |
        Now that you've played through a Big
        Game level you should see a new entry in your history. Click the Version History
        button and you should see at least one version. Each time you go back to a
        Big Game level you'll get a new record in your version history that you can
        revert back to.
      PDAlg Big Game Remix_instruction: "Here's your Big Game as you last left it.\nTry clicking the Remix button to spin off a new remix of your project.\r\n\r\nAny\nchanges you make after you click Remix will be saved on your new remix and\nnot on your main Big Game."
      PDAlg Design Recipe Delete_instruction: |
        Click the delete button to get rid
        of this function, then try creating and deleting a few of your own.
      PDAlg Design Recipe Examples_instruction: |
        The definition in this Design Recipe
        doesn't match both examples. Test each example to see which is failing, and
        then fix the definition to match.
      PDAlg Design Recipe Required_instruction: |
        Complete the Design Recipe for the
        "eggs" function, making sure to create and test your examples.
      PDAlg Updates Cond_instruction: |
        When you went to PD in the summer, the Conditional
        block that you were introduced to was black and allowed any data type to be
        used. This proved to be confusing, given that every other function we've
        seen always produces the same type of data. To help make conditionals clearer
        and more consistent we've replaced the single black block with a separate
        block for each data type.
      PDAlg Updates Errors_instruction: |
        Run the provided program and use the error
        messages to try and track down the bugs.
      PDAlg Updates Space_instruction: |
        Making use of limited programming space (especially
        on small screens) is challenging with a block based language. To help with
        this we've added a few features. Experiment with this provided code to see
        how the space can be manipulated to deal with larger programs.
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: |
        Try this puzzle that uses conditionals and
        loops together. Use the "if" block to decide when to turn. Hint: you only
        need one more block to complete this puzzle. 
      PDK5 Events 1_instruction: |
        So far all of the programs we've written are executed
        in order from top to bottom. In this puzzle, we'll use "Events" to respond
        to an action on demand. Make the octopus say "Hello" only when you click
        on the Octopus. 
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: 'Функциите ви позволяват да дефинирате нови блокове! Ние поместихме блоковете за  изчертаване на квадрат във функция, наречена "начертайте квадрат". Можете ли да използвате тази функция за създаване на очила? Квадратите са със страни 75 пиксела.'
      PDK5 Loops 1_instruction: |
        Instead of using 5 "move forward" blocks, use
        the "repeat" block with a "move forward" block inside of it. In computer
        science, this is called a "loop." 
      PDK5 Loops 3_instruction: Ето още една загадка за практикуване на цикли. Какво става, ако използвате блок за повторение за изпълнение на код, който Ви е предоставен в работната област 4 пъти?
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |
        Something happened
        to the bits in this image! Find the error and fix it! Hint: a few extra bits
        were added. You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix bit offset_instruction: |
        A single extra bit was
        inserted into the stream of bits that make up the C of the Code.org logo.
        That extra bit bumps all of the other bits down the line which makes the logo
        look messed up. Hunt down the extra bit and remove it to fix the Code.org
        logo.
      Pixelation - Lesson 14 - Fix the error_instruction: |
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |
        Make a 3x5 letter
        'A'. The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want. Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation - Lesson 15 - Color Free Play_instruction: |
        Requirements: The icon
        must be 16x16 pixels. You must use the Pixelation Widget to encode the bits
        of color information. The image must be encoded with at least 12 bits per
        pixel.
      Pixelation - Lesson 15 - Color Shades 4x4_instruction: |
        We start you out with
        the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid
        with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill
        with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4
        - shades of gray.
      Pixelation - Lesson 15 - Color Shades_instruction: |
        We start you out with the
        row of shades of red that Maddie created in the video. Experiment with 6-bit
        color by filling in the bottom row of the image with shades of a different
        color. Here is an example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Complete 3-bit color_instruction: |
        We start you with
        the 4x2 image Maddie was creating, but we've left out the last two squares.
        Finish off the image by figuring out which two colors are missing and encode
        them.
      Pixelation 2_instruction: |
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Pixelation Bee_instruction: |
        This larger image of a bee encodes color with
        12 bits per pixel, but viewing in hex makes it easier to see the color of
        each pixel. If you switch to binary mode - hold on to your hat - it's a lot
        of bits. Here's another mind-blowing thing to try: slide the bits per pixel
        up to 24 bits per pixel. What happens? Can you explain this behavior?
      Pixelation Flappy_instruction: |
        Here is a bigger image at 9 bits per pixel.
        With 9 bits per pixel you can express 512 different colors. Click through
        to see the next image which is even more sophisticated, but easier to understand.
      Play Lab Rocket 1_instruction: 'Ракетата се изстреля, пътувайки с 15 метра в секунда... натиснете "Старт", за да видите как това текстово описание изглежда като анимация.'
      Play Lab Rocket 2_instruction: |
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3_instruction: |
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      Poorva-test_instruction: |
        Here are regular instructions for a level. There
        is nothing fancy going on here.
      Ryan - 4-5 Bee Conditionals 2_instruction: Пчела иска нектар точно сега. Не всички обекти са цветя, така че проверете всеки ОБЛАК, за да се види дали отдолу се крие цвете. Ако е така, тогава можете да съберете нектар.
      Ryan - Bee Conditionals_instruction: Пчелата иска само нектар сега. Не всички обекти под облачетата са цветя, така че направете проверка и събирайте нектар само от цветята.
      Ryan Test Locked Blocks_instruction: |
        Тази функция се нарича "патрул". 
        Редактирайте я, за да преместите котката с 400 пиксела нагоре или надолу.
      Ryan's clone of C4S15P10_instruction: "We've added one last function for you.\n\r\n\r\nUse an \"if\" statement to program your game to call the \"level_up\"\nfunction only when \"player_score\" becomes greater than a certain number.\r\n\r\nFor\nexample: \"player_score\" > 6\r\n\r\nPlay the game, and make it past level\n4 to move to the next puzzle. "
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Click "Run" and then use the
        arrow keys to move Sam around his yard, making note of Sam's coordinates
        at different locations. Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        safe from leaving both directions? Try using the and block to program the
        function on-screen? to check if Sam is safe-left? and safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: 'Жълъд!Жълъд!Жълъд! Използвайте "Ако" блок, за да отидете до жълъда с най-малко на брой блокове.'
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: 'Добре, хайде да го направим още веднъж - не е много трудно, но внимавайте за стената!'
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: '"Ако-Иначе "  блоковете  проверяват едно  условие, и след това правят едно или друго нещо, в зависимост от условието. За да отидете до жълъда, опитайте да използвате този блок.'
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: 'Още веднъж да упражним използването на блок "ако-иначе". Можете ли да се справите правилно от първия опит?'
      scrat 20_instruction: Можете ли да добавите само 3 блока, за да ми помогнете да реша този по-сложен лабиринт? Ако го направите, аз ще мога да ходя по всяка крива независимо от дължината. Побързайте! Ледът се топи!
      SpecialFrozenLevel_instruction: Вие официално сте главен художник! Създайте зимна приказка и я споделете с приятелите си.
      Standalone_Artist_1_instruction: Добре дошли при Художника! Първо, нека се опитаме да направим прост квадрат с помощта на блок за завъртане надясно и блок за преместване напред. Всяка страна трябва да бъде дълга 100 пиксела.
      Standalone_Artist_2_instruction: Начертайте този диамант с 120 и 60 градуса ъгли и 150 пиксела дълги страни.
      Standalone_Artist_3_instruction: Можете ли да начертаете този шестоъгълник със 100 пиксела дълги страни и ъгли 60 градуса ?
      Standalone_Artist_4_instruction: Сега имате нов блок, с който да си играете и повтаряте. Той ще повтаря набор от команди. Какво става, ако повторите тези команди 6 пъти?
      Standalone_Artist_5.5_instruction: 'Забележете как ние опростихме кода на диаманта като го превърнахме в една линия. Можете ли да повторите линията 12 пъти, за да нарисувате цвете. Съвет: Трябва да се завъртате на 30 градуса след всеки диамант. Така няма да чертаете върху предишния диамант.'
      Standalone_Artist_5_instruction: Колко пъти трябва да повторите този диамант, за да нарисувате цвете?
      Standalone_Artist_6_instruction: 'Повторете кода за този шестоъгълник 6 пъти, за да се създаде дизайн. На колко градуса ще се завъртате всеки път? Съвет: разделете броя градуси в окръжността на броя повторения.'
      Standalone_Artist_7_instruction: 'Функцията е друг програмен инструмент, който ви помага да избегнете повторното писане на един и същи код. С тази функция правим цвете, така че да го използвате всеки път, когато искате да нарисувате цвете. Използвайте това и новият скок блок, за да нарисувате тези цветя. Съвет: Цветята са отдалечени на 150 пиксела едно от друго'
      Standalone_Artist_8_instruction: 'Това е функция, наречена "начертай фигура", която ние сме програмирани за рисуване на шестоъгълници. Стартирайте кода, за да видите какво прави той и след това експериментирайте с функцията, за да видите промените. Можете ли да я накарате да чертае модел на квадрати, триъгълници или осмоъгълници?'
      Standalone_Artist_9_instruction: Сега, върви напред и направи картина, каквато искаш! Дори имаш празна функция, която може да направи каквото си поискаш!
      Standalone_Artist_v2_instruction: Добре дошли при Художника! Първо, нека се опитаме да направим прост квадрат с помощта на блок за завъртане надясно и блок за преместване напред. Всяка страна трябва да бъде дълга 100 пиксела.
      template test_instruction: "what's up"
      Test Play Lab_instruction: This is a test play lab level.
      test_sarah_instruction: hi hi
      Text Compression 1_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      Total Artist Clone Me_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      U1L10 NetSim numbers with decimal_instruction: |
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L13 Text Compression_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      U1L4 NetSim SendAB_instruction: 'Създайте, въведете стойности и тествайте протокола за свързване до точка А или точка Б.  '
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2 frequency caesar_instruction: Инструкции
      U2 frequency random sub_instruction: Инструкции
      U2 vigenere cipher_instruction: Инструкции
      U2 Vigenere_instruction: Test
      U2L04 - NetSim Routers with Addresses_instruction: |
        Send messages with your
        classmates (Click to see full instructions)
      U2L05 - NetSim - Packets and Building TCP_instruction: "Develop a Protocol\nfor Reliably Sending a Message.\r\n\r\nConstraints:\r\n- Packets may contain\nonly 6 characters\r\n- Packets may drop with small probability\r\n- Packets\nmay not arrive in order"
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L14 frequency random_instruction: Test
      U2L2 NetSim Hub Mode_instruction: "Now use the Internet Simulator to send the\nbattleship moves. For setup, join a Room with your group, and add ships to\nyour paper board for each opponent. When playing, all communication must be\ndone through the tool, so no talking, but have fun!\r\n"
      U2L3 NetSim Hub Mode_instruction: |
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: "For this activity, connect to a\nrouter with the others in your group. Important note: The router will only\nproperly route messages where the first 4 bits are the To: address and the\nsecond 4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      U2L5 NetSim Classroom Internet_instruction: "For this activity, connect to\na router with the others in your group. The Internet Simulator now provides\na place for you to put the To and From addresses, so you don't have to type\nout the bits manually.\r\n\r\n"
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U3 - Arrays - appendItem_instruction: |
        Create an array of odd numbers 1-11
        by using appendItem. (Click to see full instructions)
      U3 - Arrays - assignment_instruction: |
        Use indexes to change the values in
        this array from 1 to 0. (Click to see full instructions)
      U3 - Arrays - assignment2_instruction: |
        Calculate the sum of three values stored
        in an array. (Click to see full instructions)
      U3 - Arrays - assignment3_instruction: |
        Increase the value of each value in
        the randomly generated array by 1. (Click to see full instructions)
      U3 - Arrays - createFirstArray_instruction: |
        Create an array of the even numbers
        from 0 to 10 and display its contents with console.log. (Click to see full
        instructions)
      U3 - Arrays - Demo App_instruction: |
        Use the "My Favorite Things" app. How
        might this app be making use of an array? (Click to see full instructions)
      U3 - Arrays - expressionsAsIndexes_instruction: |
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      U3 - Arrays - favThings addItem_instruction: |
        Write code that allows a user
        to add their own favorite things to the list. (Click to see full instructions)
      U3 - Arrays - favThings bounds_instruction: |
        Add if statements to your event
        handlers that prevent the global index from going out of bounds. (Click to
        see full instructions)
      U3 - Arrays - favThings Counting Variable_instruction: |
        Create a global variable
        for the current index and use it to display the first item in the array. (Click
        to see full instructions)
      U3 - Arrays - favThings createArray_instruction: |
        Create an array of words
        describing your favorite things. (Click to see full instructions)
      U3 - Arrays - favThings firstOutput_instruction: |
        Use setText to display the
        first item in the array. (Click to see full instructions)
      U3 - Arrays - favThings giveIDs_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - favThings keepPlaying_instruction: |
        Make any other improvements
        you want! (Click to see full instructions)
      U3 - Arrays - favThings Next_instruction: |
        Write code that allows the user
        to move forward through your list by clicking the "Next" button. (Click
        to see full instructions)
      U3 - Arrays - favThings Prev_instruction: |
        Write code that allows the user
        to move backward through your list by clicking the "Last" button. (Click
        to see full instructions)
      U3 - Arrays - favThings template_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - globalVariableIndex_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - indexPractice_instruction: |
        Write the contents of the array to
        the screen in numerical order. (Click to see full instructions)
      U3 - Arrays - insertingItems_instruction: |
        Insert items into an array to form
        a complete sentence. (Click to see full instructions)
      U3 - Arrays - insertionErrors_instruction: |
        Run each command that references
        indexes that are out of bounds and observe the results. (Click to see full
        instructions)
      U3 - Arrays - introIndex_instruction: |
        Display the first and last element in
        the array. Display the number 5 from the array. (Click to see full instructions)
      U3 - Arrays - length_instruction: |
        Use list.length to determine the length
        of each array. (Click to see full instructions)
      U3 - Arrays - lengthMinus1_instruction: |
        Use list.length - 1 to log the last
        item in the array to the console. (Click to see full instructions)
      U3 - Arrays - remove_instruction: |
        Remove items from an array to form a complete
        sentence. (Click to see full instructions)
      U3 - Arrays - stringsInArrays_instruction: |
        Write a sentence word by word by
        adding strings to an array. (Click to see full instructions)
      U3 - Canvas - 200dots_instruction: |
        Add a loop to your program that draws 200
        dots on your canvas. (Click to see full instructions)
      U3 - Canvas - appendToArray_instruction: |
        Create an array to store each event
        parameter. Append each event parameter to this array within your event handler.
        (Click to see full instructions)
      U3 - Canvas - changeToMouseMove_instruction: |
        Change your program so that dots
        are drawn at the location of the mouse as the user moves the mouse on the
        canvas. (Click to see full instructions)
      U3 - Canvas - clickToAdd_instruction: |
        Change your program so that dots are
        added to the canvas when the user clicks on it. (Click to see full instructions)
      U3 - Canvas - delete_instruction: |
        Create a button that deletes the drawing
        by clearing the canvas and removing all stored values. (Click to see full
        instructions)
      U3 - Canvas - draw at click point_instruction: |
        Change your program so that
        dots are drawn at the location of the mouse click. (Click to see full instructions)
      U3 - Canvas - freePlay_instruction: |
        Extend the functionality of one of the
        effects, or create an entirely new one of your own. (Click to see full instructions)
      U3 - Canvas - introCanvas_instruction: |
        Add a canvas to your app and set it
        to be the active canvas. Then add a large dot to your canvas. (Click to see
        full instructions)
      U3 - Canvas - movementFunction fix Orig_instruction: |
        Modify the "Original"
        button event handler so that it takes the movement of the mouse into account.
        (Click to see full instructions)
      U3 - Canvas - movementFunction_instruction: |
        Write a function that takes the
        movement of the mouse as input and generates a line width as output. (Click
        to see full instructions)
      U3 - Canvas - One Dot sprayPaint_instruction: |
        Write code that redraws your
        image using a dot whose x and y locations use offsetX and offsetY with a small
        random value added. (Click to see full instructions)
      U3 - Canvas - redrawOriginal_instruction: |
        Write a function that processes
        your array, redrawing the dots as they originally appeared. (Click to see
        full instructions)
      U3 - Canvas - redrawRandom_instruction: |
        Set up a button and event handler
        for the random function. (Click to see full instructions)
      U3 - Canvas - redrawRandom2_instruction: |
        Write a function that processes your
        array, redrawing every dot with a random size. (Click to see full instructions)
      U3 - Canvas - shiftKey_instruction: |
        Add an if statement to your event handler
        so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      U3 - Canvas - sketch_instruction: |
        Write code that redraws your image using
        a sketch effect. (Click to see full instructions)
      U3 - Canvas - sprayPaint_instruction: |
        Update the spray paint code so that
        it redraws your image using multiple random dots instead of using a nested
        for loop. (Click to see full instructions)
      U3 - Canvas - transparentDots_instruction: |
        Change the colors of your dots
        so they have a fully transparent stroke and partially transparent fill. (Click
        to see full instructions)
      U3 - Canvas - usingOffsetXY_instruction: |
        Add a console.log command inside
        the function of your event handler. Use it to display the event parameter.
        Click on the screen to see the contents of the event parameter (Click to see
        full instructions)
      U3 - Conditional Basics - 6_instruction: |
        Add a setText after the if statement
        to "Nope. Guess again." (Click to see full instructions)
      U3 - Conditionals - Combine AND and OR_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instrucitons.
      U3 - Conditionals - Combine AND OR and NOT_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instrucitons.
      U3 - Conditionals - Combine AND OR Simple_instruction: |
        Write an if statement
        that uses AND and OR to display "Sleep in!" if it's the weekend and the
        user is a teenager. (Click to see full instructions.
      U3 - Conditionals - intoOr_instruction: |
        Add 2 if statements that use the OR
        operator. (Click to see full instructions)
      U3 - Conditionals - introAND_instruction: |
        Add 2 if statements that use the
        OR operator. (Click to see full instructions)
      U3 - Conditionals - Simple AND_instruction: |
        Write an if statement that uses
        AND to display "You are a teenager." if the user enters an age between 13
        and 19. (Click to see full instructions)
      U3 - Conditionals - Simple OR_instruction: |
        Write an if statement that uses
        OR to display "It's the weekend!" if the user enters a weekend day at the
        prompt. (Click to see full instructions)
      U3 - Design Mode - Console Log_instruction: |
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      U3 - Design Mode - Layers and Delete_instruction: |
        Fix the layout of the bullseye
        game. (Click to see full instructions)
      U3 - Design Mode - Multi Screens 2_instruction: |
        Make a 2 screen app which
        can switch back and forth between a black screen and a white screen using
        buttons. (Click to see detailed instructions.)
      U3 - Design Mode - Multi Screens_instruction: |
        Make a 2 screen app with a black
        screen and a white screen. (Click to see detailed instructions)
      U3 - Design Mode - Other Events_instruction: |
        Delete the button and make the
        image move to a random location when you click on it. (click to see detailed
        instructions)
      U3 - Design Mode - WTF Console Log_instruction: |
        Add a 3 console.log messages
        and test them out. (Click to see full instructions.)
      U3 - Design Mode -Recreate Beyond Buttons_instruction: |
        Recreate the game from
        the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to
        see full instructions.)
      U3 - Design Mode 1_instruction: |
        Add a large red button to your screen using
        Design Mode. (Click for full instructions.)
      U3 - Dice - Dropdown and Score_instruction: |
        Add guess and score to the Dice
        Game (Click to see full instructions)
      U3 - Dice - Dropdown with Strings_instruction: |
        Add a dropdown for difficulty
        level that prints the difficulty level in the console. (Click to see full
        instructions)
      U3 - Dice - If_instruction: |
        Show different die images for the random number
        generated. (Click to see full instructions)
      U3 - Dice - Nested_instruction: |
        Use nested if statements to make the scoring
        different for the different game levels. (Click to see full instructions)
      U3 - High Low - Debug_instruction: |
        Debug the order of the conditionals so
        that it will actually tell the user when their guess is close. (Click to see
        full instructions)
      U3 - High Low - Dropdown_instruction: |
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      U3 - High Low - Else if_instruction: |
        Add an else-if statement in order to
        tell the user if their guess is high or low instead of just wrong. (Click
        to see full instructions)
      U3 - High Low - Else_instruction: "Add an else statement so that the program\nwill tell the user when they are right and when they are wrong. (Click to\nsee full instructions)\r\n"
      U3 - High Low - If_instruction: |
        Add code to the if statement that indicates
        the user guessed the secret number. (Click to see full instructions)
      U3 - Keys - Add Image URLs_instruction: |
        Add image URLs to your array. Replace
        the text area with an image and setText with setImageURL. Then test your app!
        (Click to see full instructions)
      U3 - Keys - Buttons and Keys_instruction: |
        Have the program respond the same
        way for both clicking images on the screen and hitting the up and down keys
        on the keyboard. (Click to see full instructions)
      U3 - Keys - Demo App_instruction: |
        Play with the image scroller. Press the
        left and right arrows to progress through the images.
      U3 - Keys - Final Image Scroller_instruction: |
        Update the image scroller to
        respond to buttons and key presses. (Click to see full instructions)
      U3 - Keys - Functions_instruction: |
        Write doUpArrow and doDownArrow functions
        and call the functions instead of duplicating the code. (Click to see full
        instructions)
      U3 - Keys - Key Up and Down_instruction: |
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      U3 - Keys - Multiple Keys_instruction: |
        Play a different sound when the down
        arrow is pressed. (Click to see full instructions)
      U3 - Keys - Practice Adding Images with URL_instruction: |
        Add image URLs to
        your image array. Test out the add button. Style your image scroller. (Click
        to see full instructions)
      U3 - Keys - Words to Images_instruction: |
        Add image URLs to your image array.
        Test out the add button. Style your image scroller. (Click to see full instructions)
      U3 - Loops -  9 Part 2_instruction: |
        Change the boolean expression for the
        while loop so that it will roll until both dice are greater than 3. (Click
        to see full instructions)
      U3 - Loops -  Complex Condition_instruction: |
        Change the boolean expression
        for the while loop so that it will stop when both dice are greater than or
        equal to 5. (Click to see full instructions)
      U3 - Loops - 1_instruction: |
        Change the condition for the while loop to check
        if the variable num is less than 90. (Click to see full instructions)
      U3 - Loops - 10_instruction: |
        Write a program that, if the sum of the dice
        is a 7 or 11, rolls again and keeps rolling until the sum is not 7 or 11.
        (Click to see full instructions)
      U3 - Loops - 11_instruction: |
        Fix the condition so that it keeps rolling the
        die as long as the value is not a 2 or a 3 instead of rolling infinitely.
        (Click to see full instructions)
      U3 - Loops - 12_instruction: |
        Change the code so that it prints the string
        "Hi" 5 times. (Click to see full instructions)
      U3 - Loops - 13_instruction: |
        Update the code to count up by 3 instead of 1.
        (Click to see full instructions)
      U3 - Loops - 14_instruction: |
        Change the loop condition to prevent the infinite
        loop and stop counting once the count is past 30. (Click to see full instructions)
      U3 - Loops - 15_instruction: |
        Count the number of times the sum of the dice
        is 12. (Click to see full instructions)
      U3 - Loops - 16_instruction: |
        Find out how many times you have to roll to get
        the sum of 7 100 times (Click to see full instructions)
      U3 - Loops - 2_instruction: |
        Try creating an infinite loop using !=, > and
        <. (Click to see full instructions)
      U3 - Loops - 3_instruction: |
        Change the if statement to a while loop so the
        program will run until it rolls a 6. (Click to see full instructions)
      U3 - Loops - 4_instruction: |2
         Use the Debug Commands to make a list of all
        the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - 5_instruction: |
        Add code inside the while loop which will update
        the variable num so that the condition will eventually become false. (Click
        to see full instructions)
      U3 - Loops - 6_instruction: |
        Fix the problem so the loop will run at least
        once. Change the initial value of num to a dummy value such as -1. (Click
        to see full instructions)
      U3 - Loops - 7_instruction: |
        Without adding any lines of code, reorder the
        code so that it prints all the values of num. (Click to see full instructions)
      U3 - Loops - 8_instruction: |
        Debug which number is not getting printed and
        add a write statement to display that value. (Click to see full instructions)
      U3 - Loops - 9_instruction: |2
         Modify the condition so that it keeps rolling
        as long as both are less than 3. (Click to see full instructions)
      U3 - Loops - Continue_instruction: |2
         Use the Debug Commands to to make a list
        of all the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - minus = operator_instruction: |
        Update the code to use the -= operator
        to count from 30 down to 0 by 3's. (Click to see full instructions)
      U3 - Loops - Minus Minus_instruction: |
        Change the code to count down from 10
        to 1. (Click to see full instructions)
      U3 - Loops - plus and minus = operator_instruction: |
        Update the code to use
        the += operator. (Click to see full instructions)
      U3 - Loops - Plus Plus_instruction: |
        Change the code to use count++ instead
        of count = count + 1.  (Click to see full instructions)
      U3 - Loops - Typing in Console_instruction: |
        Use console to check the ending
        value of num. (Click to see full instructions)
      U3 - Loops And Arrays - Add 5_instruction: |
        Add 5 to all the values in an array
        (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 1_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 2_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Counting Times_instruction: |
        Count the number of times
        5 appears in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Divid by 2_instruction: |
        Divide every value in the
        array by 2. (Click to see full instructions)
      U3 - Loops And Arrays - Find Max_instruction: |
        Design a function that displays
        the smallest number in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Find Min_instruction: |
        Complete the findMinVal function
        to find and display the smallest value in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Functions that Return Value_instruction: |
        Call findMin
        within the console.log statement to calculate the minimum of two values.  (Click
        to see full instructions)
      U3 - Loops And Arrays - General Search Param_instruction: |
        Add a second parameter
        to the search function for the value to search for.  (Click to see full instructions)
      U3 - Loops And Arrays - Intro For Loop_instruction: |
        Add a for loop with a
        console.log inside and test out the 3 pieces of the for loop. (Click to see
        full instructions)
      U3 - Loops And Arrays - Linear Search_instruction: |
        Visit every element in
        the array and display "true" if the value is a 5, and "false" otherwise.
        (Click to see full instructions)
      U3 - Loops And Arrays - Loop Array If_instruction: |
        Use an if statement to
        only display the values in the array that are greater than 5. (Click to see
        full instructions)
      U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: |
        Create
        a function that takes a list parameter and prints if the list contains a 5.
        (Click to see full instructions)
      U3 - Loops And Arrays - Make it a Function_instruction: |
        Move the code that
        searches the list for a 5 into a function called "search". (Click to see
        full instructions)
      U3 - Loops And Arrays - Multiple Returns_instruction: |
        Test out the return
        values of the findMax function.  (Click to see full instructions)
      U3 - Loops And Arrays - Print Array_instruction: |
        Use a for loop to print out
        all the values in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Printing Single True_instruction: |
        Process the array
        and display a single "true" if the array contains a 5 or a single "false"
        if it does not.  (Click to see full instructions)
      U3 - Loops And Arrays - Return Index_instruction: |
        Make the search function
        return the index of the search value in the array. (Click to see full instructions)
      U3 - Loops And Arrays - Return Value_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Loops And Arrays - Search and Remove_instruction: |
        Search for 5 in the
        array and remove it from the array. (Click to see full instructions)
      U3 - Loops And Arrays - Search with Boolean Var_instruction: |
        Make a boolean
        variable to use as a flag to keep track of whether there is a 5 in the array.
        (Click to see full instructions)
      U3 - Loops And Arrays - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Movie Bot - Multiple If Sequences_instruction: |
        Add another set of if,
        else if, and else statements inside the question if statement to check for
        keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      U3 - Movie Bot - Nested Motivation_instruction: |
        Add a separate set of if statements
        to check for a "?" in the input. (Click to see full instructions)
      U3 - Movie Bot - toLowerCase_instruction: |
        Use the toLowerCase command to change
        all user input into lowercase letters after they enter it. (Click to see full
        instructions)
      U3 - Movie Bot - When Multiple If Statements_instruction: |
        Add an if and else-if
        statement that checks for please and thank you. (Click to see full instructions)
      U3 - Practice Create Performance Task_instruction: |
        Design and implement your
        practice Create Performance Task. (Click to see full instructions)
      U3 - Read Record - 1.2_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 1.5_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 1.6_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 1_instruction: "Console.log the records returned by a call\nto readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 2_instruction: "Change the table name so that the records\nare read from the new table.(Click to see full instructions)\r\n"
      U3 - Read Record - 3_instruction: "Change the name of the table in a readRecords\ncommand to read from a table that does not exist. (Click to see full instructions)\r\n"
      U3 - Read Record - 4.1_instruction: "Print out each record return from the\nreadRecords call individually. (Click to see full instructions)\r\n"
      U3 - Read Record - 4_instruction: "Print out each record return from the readRecords\ncall individually. (Click to see full instructions)\r\n"
      U3 - Read Record - 5 and half_instruction: "Print out the name of each movie\nin the records return from the readRecords call. (Click to see full instructions)\r\n"
      U3 - Read Record - 5_instruction: "Print out the name of each movie in the\nrecords return from the readRecords call. (Click to see full instructions)\r\n"
      U3 - Return Values - constrainTurtle_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Return Values - debuggingConstrain_instruction: |
        Correct the error in
        constrain so that it returns the appropriate value.  (Click to see full instructions)
      U3 - Return Values - debuggingMaxVal_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - debuggingReturns_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - increase1_instruction: |
        Call the increase function within
        moveForward, write, and console.log.  (Click to see full instructions)
      U3 - Return Values - increase2_instruction: |
        Change the increase function to
        return 3 times the input value. (Click to see full instructions)
      U3 - Return Values - min1_instruction: |
        Test out the return values of the findMax
        function.  (Click to see full instructions)
      U3 - Return Values - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - useMinVal_instruction: |
        Call minVal within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - wrapTurtle_instruction: |
        Write wrap in this simple app
        to let the turtle "wrap" to the other side of the screen when it goes off.  (Click
        to see full instructions)
      U3 - Return Values - writeMaxVal_instruction: |
        Write the function maxVal and
        then use it within the console.log statement to calculate the maximum of two
        values.  (Click to see full instructions)
      U3 - Search Terms - 1_instruction: "Create an array of all the movies made\nin 2008 and print it out. (Click to see full instructions)\r\n"
      U3 - Search Terms - 2_instruction: "Print out all the movies with year 2008\nusing the readRecords search terms. (Click to see full instructions)\r\n"
      U3 - Search Terms - 3_instruction: "Print whether or not there are movies matching\nthe search criteria (Click to see full instructions)\r\n"
      U3 - Search Terms - 4_instruction: "Print whether or not there are movies matching\nthe search criteria (Click to see full instructions)\r\n"
      U3 - Search Terms - 5_instruction: "Print out the cities that are in California\nor have a population of 2,000,000. (Click to see full instructions)\r\n"
      U3 - Search Terms - 6_instruction: "Print out the cities that are in California\nor have a population of 2,000,000. (Click to see full instructions)\r\n"
      U3 - Simulation - 1_instruction: |
        Use a while loop to "flip a coin 10 times"
        and write the values to the screen. (Click to see full instructions)
      U3 - Simulation - 2.1_instruction: |
        Change your looping condition so the simulation
        runs until there are 5 heads flipped. (Click to see full instructions)
      U3 - Simulation - 2.5_instruction: |
        Run your simulation to get the full 10,000
        heads! How long did it take? (Click to see full instructions)
      U3 - Simulation - 2_instruction: |
        Keep track of how many heads (1's) your
        program generates and print the results to the screen. (Click to see full
        instructions)
      U3 - Simulation - 3_instruction: "Add functionality that counts how many heads\nin a row are flipped. (Click to see full instructions)\r\n"
      U3 - Simulation - 4_instruction: |
        Update your while loop's condition so the
        the coin flips until there are three heads in a row. (Click to see full instructions)
      U3 - Simulation - 5_instruction: |
        Change your while loop to run until you get
        a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      U3 - Simulation - 6_instruction: |
        Keep adding to your simulation. What do you
        want to explore next? (Click to see full instructions)
      U3 - Simulation - App_instruction: |
        Change your code to run the full simulation
        with 10,000 coins. What was your longest streak of heads? (Click to see full
        instructions)
      U3 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3 - User Input - Save getText To Variable_instruction: |
        Save the age and name
        of the user in variables (Click to see full instructions)
      U3 - User Input - Saving After Input_instruction: |
        Save the age of the user
        in a variable using getText() (Click to see full instructions)
      U3 - User Input and String -  Concat_instruction: |
        Output a message about age
        in a Text Area (Click to see full instructions)
      U3 - Variables - Clicker Game_instruction: |
        Create your improved Chaser-Game
        here. (Click to see full instructions)
      U3 - Variables - Debug Scope_instruction: |
        Why isn't the value of foo changing
        correctly? Make a guess. (Click to see full instructions)
      U3 - Variables - Debugging with Turtle_instruction: |
        Use your new debugging
        techniques to get the code to run correctly (Click to see full instructions)
      U3 - Variables - Decrement_instruction: |
        Decrement the value of the variable.
        (Click to see full instructions)
      U3 - Variables - Identify Variables_instruction: |
        Identify the values printing
        in the terminal with console.log statements. (Click to see full instructions)
      U3 - Variables - Increment_instruction: |
        Use the console.log debugging technique
        to see what is happening in this example. Add another variable and increment
        its value. (Click to see full instructions)
      U3 - Variables - Incrementing Variables_instruction: |
        Create a repeat loop
        for the repeated code and use increment to recreate the original program with
        less lines of code! (Click to see full instructions)
      U3 - Variables - Read Using Turtle_instruction: |
        Create a second set of variables
        for x and y position. Move turtle to that new location. (Click to see full
        instructions)
      U3 - Variables - Reassigning Variables with Console.log_instruction: |
        Add another
        reassignment statement at the end of the code to change the value of the variable
        at second time. (Click to see full instructions)
      U3 - Variables - Set to Expression with Other Variables and Turtle_instruction: |
        (click
        to see full instructions)
      U3 - Variables - Set to Expression with Other Variables_instruction: |
        Write
        an expression that calculates the player's total score and stores it in the
        totalScore variable. The calculation is: the player's points times lives
        divided by the total time. (click to see full instructions)
      U3 - Variables - Set to Expression with Turtle_instruction: |
        (click to see
        full)
      U3 - Variables - Set to Expression_instruction: |
        Test out the new expressions.
        (Click to see full instructions)
      U3 Digital Assistant Design_instruction: |
        Pick a topic for your Digital Assistant
        and create the basic layout with a text input and text area. (Click to show
        full instructions)
      U3 Digital Assistant Set Text_instruction: |
        Have your digital assistant repeat
        back what the user types and include a canned response. (Click to see full
        instructions)
      U3 Digital Assistant Target - Mehal_instruction: |
        Try out a demo of the Digital
        Assistant!
      U3 Digital Assistant Target_instruction: Try out a demo of the Digital Assistant!
      U3 Digital Assistant Template_instruction: This is a project template!
      U3 Digital_instruction: |
        Choose a specialization topic for your digital assistant.
        Create a basic digital assistant that takes the user's input and displays
        back a default response.
      U3 full clicker demo_instruction: 'Clicker game - Try it out!'
      U3 mehal's clone_instruction: Try out a demo of the Digital Assistant!
      U3- Variables - Assign Random For Turtle Draw_instruction: |
        Try writing the
        same code in text mode.
      U3- Variables - Changing the Value_instruction: |
        Update the value of 'turnAmount'
        before each moveForward so the turtle turns a different amount each time.
        (Click to see full instructions)
      U3- Variables - Create And Assign_instruction: |
        On one line add a variable
        called "lives" and assign it the value 3. Print it to the console. (Click
        to see full instructions)
      U3- Variables - Text Mode_instruction: |
        1. Switch to text mode and type instructions;
        2. drag blocks out into text mode; 3. experiment with code completion
      U3-Design Mode-ID and Event Handler_instruction: |
        Add an event handler for
        the button using the "Insert and show" link in the Design Mode Events tab.
        (Click to see full instructions).
      U3-Design Mode-ID_instruction: |
        Using the Design Mode Events change the button
        ID and update the code to match. (Click to see detail instructions).
      U3-Design Mode-Image_instruction: |
        Recreate the "Chaser Game" from the last
        lesson using Design Mode. (Click to see full instructions.)
      U313 drag Two Buttons_instruction: |
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 eventsDetails_instruction: |
        Run a program with two buttons that have the
        same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 Two Buttons with Ids_instruction: |
        Predict what will happen. Once you've
        made a prediction, run the code to see what happens. (Click to see full instructions)
      U3L03 - draw rect function_instruction: "Write a function called drawRectangle().\r\n(Click\nto see full instructions)"
      U3L03 - draw step_instruction: |
        Write the drawStep function. (Click to see
        full instructions)
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Define a function called turnAround.
        Call the function and then move the turtle forward. (Click to see full instructions)
      U3L03 define turnRight and draw a rectangle_instruction: |
        Define a function
        called right() that turns the turtle to the right. Then use this function
        to draw a rectangle, as shown below. (Click to see full instructions)
      U3L03 Draw a T using turnAround_instruction: |
        Draw a plus sign using the provided
        version of turnAround().  (Click to see full instructions)
      U3L03 draw diamond_instruction: |
        Create a function called drawDiamond() that
        makes use of your previous work to draw the complete diamond. (Click to see
        full instructions)
      U3L03 Three Steps_instruction: |
        Define a function called drawSide() which draws
        three steps and moves the turtle to prepare for the next side (Click to see
        full instructions)
      U3L04 - 3 by 3 with functions_instruction: |
        Make the 3x3 square as efficiently
        as you can. (Click to see full instructions)
      U3L04 - snowflake_instruction: |
        Create the design by breaking it down into
        layers of functions. (Click to see full instructions)
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 - moveForwardwithParams_instruction: |
        Use a single command to move the
        turtle to the edge of the screen. (Click to see full instructions)
      U3L06 Challenge 1 triangle_instruction: |
        Use the parameterized versions of
        the turtle commands to create a triangle with sides 100 pixels long. (Click
        to see full instructions)
      U3L06 Challenge 2 purple square_instruction: |
        Read the documentation for penColor()
        and penWidth() before using them to draw the blue square.
      U3L06 Challenge 3 fill pink_instruction: |
        Fill in the background of the screen
        with your favorite color. (Click to see full instructions)
      U3L06 Challenge 4 bullseye_instruction: |
        Create the bullseye using hexadecimal
        colors and dot(). (Click to see full instructions)
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: |
        Read the documentation for the "arcLeft"
        and "arcRight" commands and then draw the squiggles as shown. 
      U3L06 Challenge 7 smiley face_instruction: |
        Use turnTo() and moveTo() to help
        draw a smiley face. (Click to see full instructions)
      U3L06 Challenge 8 make your own_instruction: |
        Create a drawing of your own.
        (Click to see full instructions)
      U3L07 - allSeaGrass_instruction: |
        Add 50 pieces of seagrass to the image by
        writing drawAllSeagrass with a loop. (Click to see full instructions)
      U3L07 - bubbles_instruction: |
        Add 200 bubbles to the image by writing drawAllBubbles
        with a loop. (Click to see full instructions)
      U3L07 - callingFunctionsInLoops_instruction: |
        Call the function within the
        loop to complete the figure. (Click to see full instructions)
      U3L07 - createTriangleParam_instruction: |
        Define a function that accepts a
        parameter to match the function calls and complete the image. (Click to see
        full instructions)
      U3L07 - fish_instruction: |
        Add 15 fish to the image by writing drawAllFish
        with a loop. (Click to see full instructions)
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play! Use what you learned
        from loops and random to make your own little scene. Have fun.
      U3L07 - introSquare_instruction: |
        Use a loop to draw a square. (Click to see
        full instructions)
      U3L07 - loopsWithRandom_instruction: |
        Increase the number of iterations to
        fill the screen with white. (Click to see full instructions)
      U3L07 - randomDots1_instruction: |
        Increase the number of iterations to fully
        fill the screen with random dots. (Click to see full instructions)
      U3L07 - randomSquare_instruction: |
        Draw the figure using a loop. (Click to
        see full instructions)
      U3L07 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that controls
        the number of waves in the grass. (Click to see full instructions)
      U3L07 - seaStar_instruction: |
        Add 5 sea stars to the image by writing drawAllSeaStars
        with a loop. (Click to see full instructions)
      U3L07 - Starry Night Starter Code_instruction: |
        You are going to use loops
        and random numbers to generate an image of starry night sky similar to one
        shown here.  We have given you some starter code to generate the ground and
        sky (just two giant dots), you will add code to this project to make the stars,
        grass, and moon.  All of the effects are clever applications of turtle dots,
        lines, and colors.  To get started, follow the series of steps suggested in
        the accompanying worksheet. 
      U3L07 - sunBeams_instruction: |
        Add 100 sunbeams to the image by writing drawAllSunbeams
        with a loop. (Click to see full instructions)
      U3L07 - topDownDesign_instruction: |
        Get comfortable with the structure of this
        program, then move on to the next exercise. (Click to see full instructions)
      U3L08 - createTwoParamTriangle_instruction: |
        Define a function called drawTriangle()
        that accepts two parameters to set the size and width of the triangle. (Click
        to see full instructions)
      U3L08 - digitalScene_instruction: |
        Create the functions you were assigned as
        part of your digital scene. (Click to see full instructions)
      U3L08 - drawSquaresWithParams_instruction: |
        Write drawSmallSquare() to draw
        a 25px square. (Click to see full instructions)
      U3L08 - drawSquareWithParam - for video_instruction: |
        Use drawSquare() to recreate
        the image of both squares, this time using parameters. (Click to see full
        instructions)
      U3L08 - drawSquareWithParam_instruction: |
        Use drawSquare() to recreate the
        image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L08 - fish_instruction: |
        Add a parameter to drawFish that changes the size
        of the fish drawn. (Click to see full instructions)
      U3L08 - freePlay_instruction: |
        Keep adding to your image by making more calls
        to your new functions with parameters. (Click to see full instructions)
      U3L08 - individualCode_instruction: |
        Create the functions you were assigned
        as part of your digital scene. (Click to see full instructions)
      U3L08 - introUnderTheSea_instruction: |
        Add an extra fish, starfish, and piece
        of sea grass to the image. Look at, but don't change, the functions that
        create them. (Click to see full instructions)
      U3L08 - multiParamFish_instruction: |
        Add three parameters to your drawFish
        function to accept red, green and blue values to make your fish different
        colors. (Click to see full instructions)
      U3L08 - multipleLayersofParams_instruction: |
        Call drawPlusSign() to complete
        the image. (Click to see full instructions)
      U3L08 - paramsToStarfish_instruction: |
        Add a parameter to drawStarfish that
        changes the size of the starfish drawn. (Click to see full instructions)
      U3L08 - randomInput_instruction: |
        Use the randomNumber() blocks to test the
        functions you designed with random input. (Click to see full instructions)
      U3L08 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that changes
        the size of the piece of seagrass drawn. (Click to see full instructions)
      U3L08 - squareTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L08 - starFish_instruction: |
        Add an extra fish, starfish, and piece of sea
        grass to the image. Look at, but don't change, the functions that create
        them. (Click to see full instructions)
      U3L08 - triangleTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L1 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3L12 Chaser Template_instruction: This is a project template!
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: "The last problem was an example\nof syntax error.  App Lab did not understand which object it should be listening\nto for a \"click\" event so it showed an error message in the console to let\nyou know.  Another kind of error is a logical error - the program is valid,\nbut it's not doing what you want it to do.\r\n\r\nThis program has 2 errors.\nA (tricky) syntax error and logical error.  Find them, fix them, and make\nthe program work as expected."
      U3L13 - Debug Id Problem_instruction: |
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      U3L13 - Debugging 1_instruction: |
        Debug the program by verifying your IDs are
        being referenced properly. (Click to see full instructions)
      U3L13 - Debugging 2_instruction: |
        Debug the program by properly ordering your
        button commands and event handlers. (Click to see full instructions)
      U3L13 - Debugging 3_instruction: |
        Debug the program by fixing the logical error
        within the program. (Click to see full instructions)
      U3L13 - Project_instruction: |
        Create your multi-screen app. (Click to see full
        instructions.)
      U3L13 - Turtle Driver Project_instruction: |
        Create a "turtle driver" that
        includes buttons to move the turtle forward and turn it left and right. (Click
        to see full instructions)
      U3L13 - Turtle move with button_instruction: |
        Add a button that moves the turtle
        when clicked.  (Click to see full instructions)
      U3L13 eventsDetails_instruction: |
        Add an event handler to the button to move
        the turtle forward. (Click to see full instructions)
      U3L14 - Assigning Random Value_instruction: |
        Write a program that simulates
        the rolling of two dice and reports their individual values as well as the
        sum. (click to see full instructions)
      U3L14 - concatenate simple_instruction: |
        Modify the write statement on line
        3 to combine text and variables together to make the app display a single
        line of text that shows the player's lives and score. (click to see full
        instructions)
      U3L14 - Mini Calculator embed_instruction: |
        You will be prompted for two numbers,
        one right after the other.  See what happens.  Enter different numbers until
        you get the idea.
      U3L14 - moving memory challenge1_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge2_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge3_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge4_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge5_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge6_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L14 - User Input Division calculator_instruction: |
        Write a program that acts
        as a simple calculator. (click to see full instructions)
      U3L14 - Variable ReAssignment pt2_instruction: |
        Trace the code and predict
        what you think will be printed to the console. Then add a console.log statement
        at the end of the program to see the last value of someNum to see if your
        full prediction is correct. (click to see full Instructions)
      U3L15 - add code to make count down work_instruction: |
        Write code to make the
        down arrow work as expected. (Click to see full instructions)
      U3L15 - Add reset button to UpDown app_instruction: |
        Add code so that clicking
        the start over button will reset the game and send you back to the main screen.
        (Click to see full instructions)
      U3L15 - clicker update score_instruction: |
        Add code to update the score when
        the apple is clicked. (Click to see full instructions)
      U3L15 - count upDown bug forget to set text_instruction: |
        Find the bug in the
        program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug logic error wrong update_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug var not created globally_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - Debug forget to update var on reset in UpDown app_instruction: |
        Run
        the app, and click the up or down button until you get to the gameOverScreen.
        Click 'Start Over' and try the app again. Find and fix the issue in the
        code. (Click to see full instructions)
      U3L15 - Debug if never triggers in UpDown app_instruction: |
        Run the app and
        use the up and down arrows to try to hit the gameOverScreen. You can't! Find
        and fix the issue in the code. (Click to see full instructions)
      U3L15 - Debugging Simple If-statements =v==_instruction: |
        Run the app, and
        click the up button. Then restart and run it again, and click the down button.
        Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L15 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L15 - mini clicker update score_instruction: |
        Add code to update the score
        when the apple is clicked. (Click to see full instructions)
      U3L15 - practice with setText_instruction: |
        Use setText to complete the click
        event handler for the down arrow. (Click to see full instructions)
      U3L15 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L15 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer working. (Click to see full instructions)
      U3L15 click add lives_instruction: |
        Add lives to the clicker game that decrement
        by 1 when the background image is clicked (Click to see full instructions)
      U3L15 full clicker app_instruction: |
        Complete your clicker game! (Click to
        see full instructions)
      U3L16 - challenge say hi app_instruction: |
        Write a greeting to the user when
        they hit 'enter' in the text input, using the 'change' event. (Click to
        see full instructions)
      U3L16 - chaserApp_instruction: |
        Create your own "Chaser Game." (Click to
        see full instructions)
      U3L16 - chooseImages_instruction: |
        Replace the image in your application with
        one of your own. (Click to see full instructions)
      U3L16 - doubleQuotes_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: |
        Introducing objects other than
        buttons! - textLabels and images.  First try replacing your button with a
        textLabel.  Will the text respond to events just like the button?  Try connecting
        an event handler to it.  We've started you out with code similar to the result
        of the last level, you can copy your code from that level into here if you
        prefer. 
      U3L16 - images_instruction: |
        Introducing Images.  Try replacing the textLabel
        with an image..  Will the image respond to events just like the button?  Try
        connecting an event handler to it.  We've started you out with code similar
        to the result of the last level, you can copy your code from that level into
        here if you prefer. 
      U3L16 - intro getText_instruction: |
        Add text input UI elements for name and
        age. (Click to see full instructions)
      U3L16 - introSetPosition_instruction: |
        Move the buttons to the bottom of the
        screen. (Click to see full instructions)
      U3L16 - introStrings_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - nameAgeTemplate_instruction: |
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      U3L16 - newEventTypes_instruction: |
        Experiment with different event types and
        select the one that you think is best. (Click to see full instructions)
      U3L16 - outputWithTextArea_instruction: |
        Output a message to the 'textArea'
        (Click to see full instructions)
      U3L16 - projectTemplate_instruction: |
        Create your own "Chaser App". (Click
        to see full instructions)
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: |
        Modify the code so that the turtle
        moves to a random screen location when the button is clicked. (Click to see
        full instructions)
      U3L16 - singleSetPosition_instruction: |
        Move the button to the middle of the
        screen. (Click to see full instructions)
      U3L16 - stringsVsNumbers_instruction: |
        Run the program to see how strings and
        numbers behave with different arithmetic operators. (Click to see full instructions)
      U3L16 - text labels_instruction: |
        Use the textLabel command to replace the
        button in your program with a text label. (Click to see full instructions)
      U3L16 - textInput getText write_instruction: |
        Add an Text Input box for the
        name and age. (Click to see full instructions)
      U3L16 - toUpper_instruction: |
        Make the name of the user appear in uppercase
        (Click to see full instructions)
      U3L16 - use images_instruction: |
        Use the image command to replace the text
        label in your program with an image. (Click to see full instructions)
      U3L16 Mad Lib Clear Input_instruction: |
        Clear the user's previous text when
        the Play Again button is clicked (Click to see full instructions) 
      U3L16 Mad Lib Demo_instruction: 'Mad Libs Demo - Try it out!'
      U3L16 Mad Lib getText_instruction: |
        Before setting the text area with your
        Mad Libs outline, get the user's text and incorporate their responses. (Click
        to see full instructions) 
      U3L16 Mad Lib setText_instruction: |
        When the Next button is clicked, set the
        text area to have the main outline of your How-to Mad Libs (without the user's
        input). (Click to see full instructions) 
      U3L16 Mad Lib Student Setup_instruction: |
        Back to Mad Libs: To get started,
        set up the two screens for your Mad Libs app (Click to show full instructions)
      U3L16 Mad Lib toUpper_instruction: |
        Apply the toUpperCase and toLowerCase string
        functions to the user's text. (Click to see full instructions) 
      U3L17 - getAndSetKeyValue_instruction: |
        Create an image like app. (Click to
        see full instructions)
      U3L17 - getKeyValue_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introCallbacks_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - readKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - setKeyValue_instruction: |
        Create and update your key value pairs using
        setKeyValue. (Click to see full instructions)
      U3L17 - twoSetKeyValue_instruction: |
        Run the program several times to observe
        how often setKeyValue commands arrive out of order. (Click to see full instructions)
      U3L18 comparison operators_instruction: |
        Use console.log to print out the different
        boolean expressions below to see what information they return. (Click to see
        full instructions)
      U3L18 comparison operators_for_video_instruction: |
        Use `console.log` to print
        out the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      U3L19 - Clicker Game Freeplay Area_instruction: 'Използвайте тази част от Лабораторията за приложения, за да подобрите играта си.  Вие трябва да започнете с копиране/поставяне на кода от старата си игра тук.  Ние приготвихме по-пълен набор от блокове в кутията с инструменти - някои от нещата тук още не сте използвали.  Чувствайте се свободни да ги проучите и да експериментирате.  Всичко останало, от което се нуждаете вече е показано.  Забавлявайте се!'
      U3L19 - Debugging with consoleLog_instruction: |
        Add console.log() statements
        to find out the value of a and b after the first reassignment statement a
        = b; (Click to see full instructions)
      U3L19 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L19 - do concatenate string with var_instruction: "We've given you a piece\nof code from the previous screen.  Try changing the value assigned to foo\nto see the string change. \r\nDo this: \r\n1. Try changing the value assigned\nto foo to see the string change. \r\n2. By only modifying the lines of code\nthat were given to you, try to get the output to say: “The value of foo is:\n9.  And isn’t that fine.” \r\n"
      U3L19 - fix the var name syntax error v2_instruction: |
        Fix the error and get
        it to print the value of both variables (Click to see full instructions)
      U3L19 - fix the var name syntax error_instruction: |
        Fix the error and get it
        to print the value of both variables (Click to see full instructions)
      U3L19 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L19 - practice with setText_instruction: |
        Add another button that changes
        the text to the value of a new variable. (Click to see full instructions)
      U3L19 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L19 - Target Clicker App_instruction: |
        Investigate the new elements of the
        'chaser-game'
      U3L19 - test reassignment of two vars_instruction: |
        Predict the value of a
        and b. Add console.log statements to find out the actual value of a and b.
        (Click for full instructions)
      U3L19 - three basic ops of variables_instruction: |
        Add another variable called
        "lives" and set the value to 3. Print the value of the variable to the console.
        (Click to see full instructions)
      U3L19 - try out console log_instruction: "Try out console.log.  Do this: replace\nthe statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).  Run\nthe program and you should see the output show up in the console area below\nthe workspace.  Then try adding a few more console.log statements.  Display\nsome text.  Make another variable and display that.  \r\nThe app screen will\nbe blank -- that's the point.  With console.log you can test output behind\nthe scenes in a way the user cannot see.  \r\n\r\n\r\nGIF: U3L19-useconsolelog.gif"
      U3L19 - up down count practice app_instruction: |
        Set up the down button to
        decrease the value of count by 1 each time it is clicked. (Click to see full
        instructions)
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        Make a prediction
        about the ending values of a, b, and c. Then use console.log to check your
        understanding (Click to see full instructions)
      U3L19 - variable reassignment part 1_instruction: |
        Predict the value of a and
        b. Add console.log statements to find out the actual value of a and b. (Click
        for full instructions)
      U3L19 - variable scope problem 2_instruction: |
        What is happening with foo?
        Play with the level to try to figure it out. (Click to see full instructions)
      U3L19 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer work. (Click to see full instructions)
      U3L19 - write var and string with same name v2_instruction: |
        Fix the code so
        that the values of both variables print to the console. (Click to see full
        instructions)
      U3L19 - write var and string with same name_instruction: |
        Fix the code so that
        the value of both variables prints to the console. (Click to see full instructions)
      U3L2 Using Simple Commands (no tooltips)_instruction: |
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      U3L2 Using Simple Commands_instruction: |
        Draw a 1x1 square above and to the
        left of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: |
        Add if, else if, and else statements
        to detect the movie genres Comedy, Romance, Action, and Horror. (Click to
        see full instructions)
      U3L23 Chatbot Intro 1a_instruction: |
        Store the user's input inside a variable
        and log it to the console.
      U3L23 Chatbot Intro 2_instruction: |
        Use string concatenation to store the user's
        input and assistant's answer into the conversation variable using the format
        "User: <input><bot name>: <default response>" . Log the conversation to
        the console.
      U3L23 Chatbot Intro 2a_instruction: |
        Display the conversation onto the "text_area"
        element. Optional: clear the user's input after every "change" event.
      U3L23 Chatbot Intro 3_instruction: |
        Add newline characters "\
        " to separate
        the user's input and the computer's response.
      U3L23 Chatbot Intro 4_instruction: |
        Use this level to make your chatbot look
        and work better!
      U3L23 Chatbot Intro_instruction: |
        Choose a specialization topic for your digital
        assistant. Create a basic digital assistant that takes the user's input and
        displays back a default response.
      U3L23 Digital Assistant 1_instruction: |
        Set the text_area element to display
        the user's input from the text_input element.
      U3L23 Digital Assistant 2_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 3_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 4_instruction: |
        Display the user's input and the digital
        assistant's response on different lines.
      U3L23 Digital Assistant 5_instruction: |
        Start the user's command with the
        phrase "User:" and the digital assistant's response with the phrase "Bot:"
      U3L23 Digital Assistant 6_instruction: |
        When the user hits Run, display the
        text "I'm a generic digital assistant. Ask me anything!"
      U3L24 Basic String Parsing 1_instruction: |
        Use the function "userInput.indexOf(<food>)"
        to check if the strings "pizza" or "soup" are anywhere in the user's
        response.
      U3L24 Chatbot Basic Conditionals_instruction: |
        Check out the project description
        for instructions. (Click to see full instructions.)
      U3L24 Chatbot Conditionals 2_instruction: |
        Adjust the "if" block to make
        the bot respond "I don't know that color." if the user types anything besides
        "blue"
      U3L24 Chatbot Conditionals 3_instruction: |
        Adjust the "if/else" block to
        make the bot respond to the colors blue, red, and green, and to two additional
        colors.
      U3L24 Chatbot Keyword Record_instruction: |
        Use the next level to record your
        digital assistant's keywords/phrases.
      U3L24 Chatbot Nested Conditionals_instruction: |
        Add a chained conditional with
        at least 3 "else if" statements to your personal assistant.
      U3L24 introIncludes_instruction: |
        Practice using the includes command. (Click
        to see full instructions)
      U3L24 Nested Conditionals 1_instruction: |
        Change all of the boolean expressions
        to use includes instead of ==. (Click to see full instructions)
      U3L24 Nested Conditionals 2_instruction: |
        Nest your movie genre if statements
        inside the if statements to check for a ? in the input. 
      U3L24 Nested Conditionals Bugs 2_instruction: |
        Fix the problem with the code
        so that all the conditions can be reached. (Click to see full instructions)
      U3L24 Nested Conditionals Bugs 3_instruction: |
        Fix the bugs that still exist
        in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs_instruction: |
        Expose the bugs in this problem
        by typing inputs into the user-input box. Track which inputs cause unexpected
        outputs.
      U3L25 - drag out key event_instruction: |
        Set up an event handler to respond
        to keypress events, and display event.key in the console. Hit keys on the
        keyboard to see what happens. (Click to see full instructions)
      U3L25 - play sound when up key_instruction: |
        Change the code so the sound will
        only play when the up arrow is pressed. (Click to see full instructions)
      U3L25 Chatbot Strings_instruction: |
        1. Adjust your digital assistant to evaluate
        inputs the same way whether the inputs are capitalized or lowercase. 2. If
        a user asks "What is <phrase>?", where <phrase> is an input your digital
        assistant does not recognize, make your digital assistant respond "I don't
        know what <phrase> is."
      U3L25 String Parsing 1_instruction: |
        Given the string "Wisdom begins with
        wonder." what is the index of the following characters W, t, w, ., d, and
        k? Confirm your expectation using the string.indexOf() function.
      U3L25 String Parsing 2_instruction: |
        Use str.length to find the length of the
        strings “Hello World”, “Computer science rocks!", and “I promise to do my
        homework every day.”
      U3L25 String Parsing 3_instruction: |
        Write a password length checker that writes
        “yes” to the console if a string has a length greater than 10, or “no” if
        it is less than or equal to 10.  Test your function using two strings, one
        that will satisfy each conditional option.
      U3L25 String Parsing 4_instruction: |
        You are given the string "Wisdom begins
        with wonder." Use the string.substring(begin, end) function to print "begin"
        and "nder" to the console.
      U3L25 String Parsing 5_instruction: "Fill in the function, findBeginNder()\nto get the strings \"begin\" and \"nder\" from a sentence no matter where\nin the sentence they exist.\r\nPrint the strings and their index to the console.\n"
      U3L25 String Parsing 6_instruction: |
        Write a function that takes a name (first
        last) and reorders it (last, first).
      U3L25 String Parsing 7_instruction: |
        You are given the string “The earth has
        music for those who listen.” Manipulate it using the functions str.toUpperCase()
        and str.toLowerCase().
      U3L26 AND operator_instruction: |
        Update the genre and rating if statements
        to give only one movie suggestion at a time. (Click to see full instructions)
      U3L26 Chatbot Compound Conditionals_instruction: |
        Update your digital assistant
        to include at least one each of AND, OR, and NOT
      U3L26 Chatbot Final_instruction: |
        Update your digital assistant to include
        at least one each of AND, OR, and NOT
      U3L26 Compound Logic_instruction: |
        Write a conditional statement that detects
        if a command contains all the phrases "2000" "animated" and "G-rated."
        If all these phrases are detected, make Movie Bot respond "The top grossing
        animated and G-rated film in the 2000 decade was Finding Nemo."
      U3L26 NOT operator_instruction: |
        Write a conditional statement that detects
        if a command does not contain the phrase "bad." If "bad" is not detected,
        make Movie Bot respond normally. Otherwise, make Movie Bot respond "Sorry,
        I don't know about bad movies." 
      U3L26 OR operator_instruction: |
        Update the if statement to use an OR to check
        for a "?" as well as who, what, where, when, why, how in the user input.
        (Click to see full instructions)
      U3L27 Chatbot Final_instruction: |
        Make your digital assistant awesome and when
        you are finished, ask one of your classmates to test it for you using the
        activity guide. As you add features to your digital assistant, track them
        on the next level.
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: |
        Draw a square to the front and to the
        right of the starting location. (Click to show full instructions)
      U4 - add createRecord to contacts App_instruction: |
        Add code to your contacts
        app so that newly added contacts are saved in a table. (Click to see full
        instructions)
      U4 - Add Row By Hand_instruction: |
        Add a new record to your table in the Data
        Viewer. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords 1_instruction: |
        Use the drawChartFromRecords
        block to create a scatter plot from the table in the database. (Click to see
        full instructions)
      U4 - Charts - drawChartFromRecords Options 1_instruction: |
        Add a title to your
        chart and change the colors of your lines using the options parameter of drawChartFromRecords.
        (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 2_instruction: |
        Look through the
        drawChartFromRecords API and choose some more options to customize. (Click
        to see full instructions)
      U4 - Charts - drawChartsFromRecords 1_instruction: |
        Add screen element, pull
        out drawCharts block, run the program!
      U4 - Charts - Export Data_instruction: |
        Export the data from the “ages” table
        as a CSV file, then remix this app and import the CSV file. (Click to see
        full instructions)
      U4 - Charts - Import Data 1_instruction: |
        Download the CSV file we’ve provided,
        and then use the data viewer to import the data from the file into the “mydata”
        table. (Click to see full instructions)
      U4 - Charts - Import Data 2_instruction: |
        Call readRecords on the “mydata”
        table and print each record to the console. (Click to see full instructions)
      U4 - Charts - Line Chart 1_instruction: |
        Create a line chart showing the change
        in popularity of “#tbt” over time. (Click to see full instructions)
      U4 - Charts - Line Chart 2_instruction: |
        Add a second line to your chart to
        show the change in popularity of both “#tbt” and “#nofilter” at the same time.
        (Click to see full instructions)
      U4 - Charts - Line Chart Template_instruction: This is a template.
      U4 - Charts - Remixing Apps with Data_instruction: |
        Run this app and see what
        it prints to the console. Then remix the app and run the remixed version to
        see what happened to the data. (Click to see full instructions)
      U4 - Charts - Scatter Chart_instruction: |
        Create a scatter plot of the “rottenTomatoes”
        table, using the new table and column names. (Click to see full instructions)
      U4 - CreateRecord - 1_instruction: |
        Add a createRecord command and run the
        program. (Click to see full instructions)
      U4 - CreateRecord - 2.5_instruction: |
        Change the table name in createRecord
        then check the Data Viewer to see the new table. (Click to see  full instructions)
      U4 - CreateRecord - 2_instruction: |
        Change the name from "Alice" to something
        else in the createRecord command.  Run the program and use the Data Viewer
        to see the changes to your table. (Click to see full instructions)
      U4 - CreateRecord - 3_instruction: |
        Use createRecord to add the song object
        as a record to a table. (Click to see full instructions)
      U4 - CreateRecord - 4_instruction: |
        Run the program. Verify the song object
        was added to the database. Note the callback function now displays the copy
        of the record sent back back by the database. (Click to see full instructions)
      U4 - CreateRecord - 5_instruction: |
        Add a property to the JavaScript object,
        then run the program.  View the data table and see how changing the object
        affects the data table. (Click to see full instructions)
      U4 - debug column names are case sensitive_instruction: |
        Change song.title
        to song.Title (capital T).  And run the program.  Check the data table  (Click
        to see full instructions)
      U4 - deleteRecords 0_instruction: |
        Use the deleteRecord command with default
        values. Verify the record was deleted. (Click for full instructions).
      U4 - deleteRecords 1_instruction: |
        Find the id of "Little Bunny Foo Foo"
        in the data table "mySongs".  Use the deleteRecord command to delete it.  See
        what happens when you try to delete an ID a second time. (Click for full Instructions).
      U4 - deleteRecords 2 delete object_instruction: |
        Use the song object to delete
        multiple objects in the database by changing only the "id" property. (Click
        for full Instructions).
      U4 - deleteRecords 2_instruction: |
        Using the data viewer, find the id of a
        a record you want to delete. Use the deleteRecord command to delete it. (Click
        for full instructions).
      U4 - Edit Data Table by Hand_instruction: |
        View the data table and click edit
        next to each row.  Add the artists names for each song by hand. (Click to
        see full instructions)
      U4 - Exploring Data Tools - Template_instruction: |
        Use createRecord to add
        the song object as a record to a table. (Click to see full instructions)
      U4 - fix contacts by hand in data table_instruction: |
        Use the data viewer to
        add rows to the data table.  Add the original hard-coded contacts from your
        app to the database. (Click to see full instructions)
      U4 - last stage test adding contcts_instruction: |
        Confirm that new contacts
        you add are saved to the database.  Verify that after restarting your app,
        the contacts you added no longer show in the app, but still exist in the database.
        (Click to see full instructions)
      U4 - Objects - accessingPropertiesInArray_instruction: |
        Access the properties
        of the objects stored in an array. (Click to see full instructions)
      U4 - Objects - arraysOfObjects_instruction: |
        Create an array called "students"
        and add all 5 student objects to the array. (Click to see full instructions)
      U4 - Objects - createContactObject_instruction: |
        Construct a new object from
        the user inputs, and append it to your array. (Click to see full instructions)
      U4 - Objects - createContactsData_instruction: |
        Add values to the three contact
        objects provided in the starter code. (Click to see full instructions)
      U4 - Objects - createDotNotation_instruction: |
        Create a student Object yourself.
        Add properties to your object one at a time using dot notation. (Click to
        see full instructions)
      U4 - Objects - createObject_instruction: |
        Create an object with at least 3
        properties and display it in the Debug Console. (Click to see full instructions)
        
      U4 - Objects - dotNotation_instruction: |
        Use dot notation to display individual
        properties of the object. (Click to see full instructions)
      U4 - Objects - eventHandlersToSwitchScreen_instruction: |
        Attach event handlers
        to the "Add Contact" and "Go Back" buttons that allow the user to switch
        screens. (Click to see full instructions)
      U4 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and mouse
        event and examine the event objects displayed in the console. Why might an
        object be the best way to store this information? (Click to see full instructions)
      U4 - Objects - exemplarContactsApp_instruction: |
        Use the Contacts app and then
        add a contact of your own. (Click to see full instructions)
      U4 - Objects - loopingArray_instruction: |
        Loop over your array of students
        and print the name of every students. (Click to see full instructions)
      U4 - Objects - loopingArray2_instruction: |
        Loop over your array of students
        and print the name and grade of every student. (Click to see full instructions)
      U4 - Objects - loopingCompoundConditions_instruction: |
        Loop over the array
        of students and display the information of students who are present and in
        the 11th grade. (Click to see full instructions)
      U4 - Objects - loopingConditions_instruction: |
        Loop over your array of student
        objects and display the names of every student who is present in class. (Click
        to see full instructions)
      U4 - Objects - pullValues_instruction: |
        Create an event handler for the "Add
        Contact" button that displays the contents of the 4 text input fields in
        the console. (Click to see full instructions)
      U4 - Objects - readStarterCode_instruction: |
        Familiarize yourself with the
        starter code and UI elements provided. (Click to see full instructions)
      U4 - Objects - resetIndexAndShow_instruction: |
        Add code to your event handler
        fro the "Add Contact" button so that when a new contact is added the inputs
        are cleared, the screen is switched, and the correct contact is shown. (Click
        to see full instructions)
      U4 - Objects - showContact1_instruction: |
        Add code to the showCurrentContact
        function to show the name of the contact stored at the currentIndex of your
        array. (Click to see full instructions)
      U4 - Objects - showContact2_instruction: |
        Add the phone number and birthday
        text to your text area. (Click to see full instructions)
      U4 - Objects - showContact3_instruction: |
        Display the image information for
        each contact. (Click to see full instructions)
      U4 - Objects - showSampleImage_instruction: |
        Attach an event handler to the
        image URL text input so that the user can confirm their image will work as
        expected. (Click to see full instructions)
      U4 - Objects - writeWrap_instruction: |
        Use the wrap function to prevent currentIndex
        from leaving the bounds of your array. (Click to see full instructions)
      U4 - Read Record - 1.2_instruction: "Place a console.log command below the\nreadRecords command. (Click to see full instructions)\r\n"
      U4 - Read Record - 1.3_instruction: "Add a console.log command inside the callback\nfunction. (Click to see full instructions)\r\n"
      U4 - Read Record - 1_instruction: "Use console.log to display the records returned\nby a call to readRecords. (Click to see full instructions)\r\n"
      U4 - Read Record - 2_instruction: "Change the table name so that the records\nare read from the new table. (Click to see full instructions)\r\n"
      U4 - Read Record - 3_instruction: "Change the name of the table in a readRecords\ncommand to read from a table that does not exist. (Click to see full instructions)\r\n"
      U4 - Read Record - 4.1_instruction: "Use indexes and dot notation to reference\nvalues in the response from the database. (Click to see full instructions)\r\n"
      U4 - Read Record - 4_instruction: "Print out each record return from the readRecords\ncall individually. (Click to see full instructions)\r\n"
      U4 - Read Record - 5_instruction: "Using a for loop, display the title of each\nmovie in your database. (Click to see full instructions)\r\n"
      U4 - Read Record - part 1 - template_instruction: "Use console.log to display\nthe records returned by a call to readRecords. (Click to see full instructions)\r\n"
      U4 - ReadRecords - Contacts App 1_instruction: |
        Write a function called "updateLocalData"
        that copies the data in your database into your "contacts" global variable.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 2_instruction: |
        Create a function called "refreshLocalData"
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 3_instruction: |
        Add a call to "refreshLocalData"
        to the callback function of the createRecord you use to add a new contact
        to your database. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 4_instruction: |
        Create a "Delete" button.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 5 make delete work_instruction: |
        Create an
        event handler for the "Delete" button you created. (Click to see full instructions)
      U4L02 - Objects - createObject_instruction: |
        Create an object with at least
        5 values including at least one string and one number. (Click to see full
        instructions) 
      U4L02 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and
        mouse event and examine the event objects displayed in the console. Why might
        an object be the best way to store this information? (Click to see full instructions)
      U4L02 - Objects - Template1_instruction: Шаблон
      U4L06 Data Storage 1_instruction: "Fill in your name instead of \"Enter Your\nName\", run the app and click the button. Run it multiple times with different\nnames! Watch the console and use the ‘View Data” button to see how the table\nis updated. As you play around make sure you can explain the purpose of each\nof the circled parts of the diagram.\r\n\r\n"
      U4L06 Data Storage 2_instruction: "The app is a continuation of the previous\none we started. Add a text label to collect the users name and use that as\nthe data input for the record.\r\n\r\nRun the app and click the button multiple\ntimes and see what happens. Is there a problem you notice? "
      U4L06 Data Storage 3_instruction: |
        We want to improve the user experience.
        Once they have submitted their data for storage, it would be nice to clear
        the textbox.  Update your app to clear the textbox after the data is stored.
      U4L06 Data Storage 4_instruction: |
        Add a label and drop down box, to your app
        and save the data to your JSON object and add it to your table. Make sure
        to reset the dropdown after the data is stored.
      U4L06 Data Storage 5_instruction: |
        Add a couple radio buttons or checkboxes
        to our app. Then find a way to collect the data from those. 
      U4L06 Data Storage 6_instruction: |2
         Use one of the getTime() and getUserId()
        blocks to collect additional data. 
      U4L06 Data Storage 7_instruction: |
        Add a second screen to the sample app we
        have been building to capture an image from a user. Return to screen 1 after
        the JSON object has been stored in the table.
      U4L15 Read Data 1_instruction: |
        Run the level and see what happens. Then edit
        the code to make it print a different column of information.
      U4L15 Read Data 2_instruction: "Ученикът трябва да създаде едно изречение, в което да постави заедно всички парчета от записа. \r \r <<Name>> е <<Age>> години и като <<Food>>"
      U4L15 Read Data 3_instruction: "Print the sentence using the first JSON object\nin the array\r\n\r\n"
      U4L15 Read Data 4_instruction: "\r\nUse a random record from the list of records\nto display your sentence."
      Underground Avoiding Lava_instruction: 'Има скрита лава под някои от тези блокове, която трябва да се покрие преди да тръгнем напред. "Ако" командата ще е от голяма полза тук. Добавете "върви напред" команда на правилното място, за да положите тези блокове.'
      Underground If Statements_instruction: 'Сега нещата стават трудни. Изкопай 3 червени камъка, но без да попадаш в лавата. Използвай "Ако" команда, за да поставиш калдъръм над всяка лава, която откриеш.'
      Underground Iron_instruction: Ходенето в разтопена лава е лоша идея. Постави калдъръм, за да създадеш мост, след това изкопай най-малко два железни блока.
      Underground Mine in a Circle_instruction: "Намери начин да изкопаеш 5 диаманта и 7 червени камъка! Опитай се да използваш команда за повтаряне, а вътре постави команда за ходене в квадрат. \r\n"
      Underground Mining Coal_instruction: Вие ще намерите най-ценните ресурси под земята, но вече се мръква. Поставете най-малко 2 факли и изкопайте най-малко 2 въглища.
      Underground Test Level_instruction: Съберете всички минерали!
      Vigenere_instruction: Test
      XML Scratchpad_instruction: Използвай това тестово ниво за да вземеш xml-а за unit тестове
