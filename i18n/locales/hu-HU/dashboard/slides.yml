hu:
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: Üdvözlünk az első kód órádban! Kezdjük is el az első programozási leckét.
      2:
        image: notes/hoc1_2.jpg
        text: A Blockly nevű vizuális programozási nyelvezetet fogjuk használni, ahol blokkok egymáshoz illesztésével tudsz kódot írni.
      3:
        image: notes/hoc1_3.jpg
        text: A kódot legtöbbször gépelik, de a Blockly vizuális. Minden blokk megfelel egy „igazi” sor kódnak.
      4:
        image: notes/hoc1_4.jpg
        text: Olyan számítástechinkai alapokat, koncepciókat fogsz megtanulni, amelyeket az alkalmazások készítésétől a marsjáró vezérléséig mindenütt használnak.
      5:
        image: notes/hoc1_5.jpg
        text: Minden program a számítógép által végrehajtandó utasítások listája.
      6:
        image: notes/hoc1_6.jpg
        text: Első programodban egy Angry Bird madarat kell irányítanod az útvesztőn át, hogy eljusson a Zöld Disznóig.
      7:
        image: notes/hoc1_7.jpg
        text: A bal oldal egy útvesztő, ahol a programod fut. A pálya megoldásához szükséges útmutató az útvesztő alatt olvasható.
      8:
        image: notes/hoc1_8.jpg
        text: A középső eszköztár tartalmazza az Angry Bird irányításához szükséges utasításokat. Ezeket fogod használni a kód felépítéséhez.
      9:
        image: notes/hoc1_9.jpg
        text: A középső eszköztárból a jobb oldali munkaterületre kell majd áthúznod a blokkokat a program felépítéséhez. Egy blokk törléséhez húzd azt a sarokban lévő kukára.
      10:
        image: notes/hoc1_10.jpg
        text: Minden blokk egy utasítás. Ha egy „előrelépni” blokkot húzol a munkaterületre, majd megnyomod a „Futtatás” gombot, akkor a madár egy pozíciót lép előre az útvesztőben.
      11:
        image: notes/hoc1_11.jpg
        text: Egynél több művelet elvégzéséhez több blokkot is áthúzhatsz a munkafelületre, és összeillesztheted őket. A madár az utasításokat fentről lefelé végzi majd el.
      12:
        image: notes/hoc1_12.jpg
        text: Ha egy már lefutott programot szeretnél javítani és újra lefuttatni, akkor nyomd meg a „Visszaállítás” gombot.
      13:
        image: notes/hoc1_13.jpg
        text: Gyerünk kapjuk el azokat a disznókat!
    artist_intro:
      1:
        image: notes/stage5_1.jpg
        text: Szia, a nevem JR! Mindegy versenyzői csapatnak szüksége van egy számítógép tudósra a nyeréshez. Analizálják az adatokat a járműből, hogy gyorsabbá tehessék azt.
      2:
        image: notes/stage5_2.jpg
        text: Ezeknél a rejtvényeknél ön lesz a művész aki vonalat húz maga mögött bármerre megy.
      3:
        image: notes/stage5_3.jpg
        text: 'Ez a blokk azt mondja: " előrelépni 100 pixel. " A pixelek csak nagyon apró pontok a képernyőn .'
      4:
        image: notes/stage5_4.jpg
        text: 'Ez a blokk azt mondja "forduljon jobbra 90 fokban." Ez el fogja fordítani a művészt ugyanabban a mennyiségben, mint amennyiben a "fordulj" blokkok a labirintus rejtvényekben.'
      5:
        image: notes/stage5_5.jpg
        text: 'Kattints valamelyik blokkra, hogy megváltoztasd a művész lépéseinek számát, vagy a fordulások mértékét.  Játssz ezekkel, hogy jobban megismerd ezeket az új blokkokat.'
    farmer_intro:
      1:
        image: notes/stage9_1.jpg
        text: Szia, a nevem Paola! Ezekben a rejtvényekben te egy farmer leszel, akinek ki kell simítania a földét, hogy elkezdhesse az ültetvények elültetését.
      2:
        image: notes/stage9_2.jpg
        text: Segítened kell neki eltávolítani az összes földet, s kitölteni vele a lyukakat.
      3:
        image: notes/stage9_3.jpg
        text: 'Az új blokk  1 eltüntet egy ásónyi földet a kupacból, ill.  egy ásónyi földdel feltölt egy gödröt.'
      4:
        image: notes/stage9_4.jpg
        text: A halmok és a lyukak különböző méretűek, meg kell mondania a farmernek, hogy hány shovelfult használjon.
    flappy_intro:
      1:
        image: Megjegyzések/flappy01.jpg
        text: 'Szia, Kati vagyok!  Az egyik legizgalmasabb dolog a számítógéppel, hogy egy program lehet interaktív.'
      2:
        image: Megjegyzések/flappy02.jpg
        text: 'Bármikor gépelek klikkelek vagy megérintem,  a számítógépemen vagy telefonomon, az egy ESEMÉNY-t generál, és valahol van egy kód, ami eldönti, mit is csináljon, ha ez az esemény megtörténik.'
      3:
        image: Megjegyzések/flappy03.jpg
        text: 'Mondjuk lehet egy ESEMÉNYKEZELŐ, ami úgy dönt: "amikor az egéren klikkelnek, lejátszom egy hangot" '
      4:
        image: Megjegyzések/flappy04.jpg
        text: 'Hallottál már a FlappyBird játék-ról ? Eseménykezelők használatával fogunk megtanulni hogyan lehet a saját egyéni  FlappyBird változat programját elkészíteni!'
      5:
        image: Megjegyzések/flappy05.jpg
        text: 'A  kódot, a számítógépnek parancsokat jelentő blokkokat  felkapva és átrakva (drag and drop) fogja írni. Az grafikusan ábrázolt blokkok valódi kódot reprezentálnak.'
      6:
        image: Megjegyzések/flappy06.jpg
        text: 'Ha egy pillantást vet a munkaterületre, lát néhány zöld blokkot, amiket kitöltöttek az Ön részére- ezek a "eseménykezelők" '
      7:
        image: Megjegyzések/flappy07.jpg
        text: 'Ha azt szeretné, hogy a madár csapjon szárnyával, ha RÁKATTINT az egérrel, arra ott van a "FLAP" blokk. Ezt hozzárendeli a megfelelő eseménykezelőhöz, és akkor az ön játékában valahányszor klikkel, a madár csap egyet a szárnyával.'
      8:
        image: Megjegyzések/flappy08.jpg
        text: 'Minden egyes rejtvény bemutat egy új típusú eseményt, mint zöld blokkot a munkaterületen. Ön kiválaszthatja a megfelelő blokkokat, az  eseményekre adott válaszként.'
      9:
        image: Megjegyzések/flappy09.jpg
        text: 'Amikor vagy lát egy lefelé nyilat, mint ez, ez azt jelenti, meg lehet változtatni a beállításokat - például az akkor lejátszandó hangot, amikor flappy eléri a talajt.'
      10:
        image: Megjegyzések/flappy10.jpg
        text: Az utolsó lépcsőn már képes létrehozni a saját játékát, és megosztani azt barátaival. Jó szórakozást!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: Helló, Márk vagyok! Gyere tanuljuk meg a ciklusok használatát. A ciklust használva megmondhatod a számítógépnek, hogy egy bizonyos utasítást újra és újra, ezerszer vagy milliószor ismételjen meg.
      2:
        image: notes/hoc2_2.jpg
        text: Ebben a rejtvényben azt szeretnénk, ha a madár ötöt lépne előre, hogy elérjen a malachoz.
      3:
        image: notes/hoc2_3.jpg
        text: A feladat megoldásához használhatjuk a új „Ismétlés” blokkot.
      4:
        image: notes/hoc2_4.jpg
        text: Ahelyett, hogy 5 külön „előrelépni” blokkot használnánk...
      5:
        image: notes/hoc2_5.jpg
        text: Betehetjük az „előrelépni” blokkot az „ismétlés” blokk belsejébe, majd beírhatjuk a blokkba a szükséges ismétlések számát.
      6:
        image: notes/hoc2_6.jpg
        text: 'Fontos: az „ismétlés” blokkba több mint egy utasítást is betehetsz.'
      7:
        image: notes/hoc2_7.jpg
        text: Élvezd az új „ismétlés” blokk használatát!
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: Szia, Chris vagyok. Mielőtt a Miami Heathez csatlakoztam Georgia Techbe jártam, hogy számítástechnikát tanulhassak. Gyere próbáljuk ki az új „ismételd amíg” blokkot.
      2:
        image: notes/hoc3_2.jpg
        text: Mi van ha nem tudjuk milyen messzire kell a madárnak mennie, hogy eljusson a malachoz?
      3:
        image: notes/hoc3_3.jpg
        text: 'Ha az "előrelépés" blokkot az "ismételd amíg" blokkba helyezzük, akkor a madár addig fog előre haladni AMÍG eléri a malacot (vagy a falnak ütközik).'
      4:
        image: notes/hoc3_4.jpg
        text: 'Fontos: akárcsak az ismétlő blokkba az „ismételd amíg” blokkba is több utasítást helyezhetsz.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: Szia, Bill vagyok! Tanuljunk meg egy új alapvető koncepciót a „ha” feltételt. A számítógépek ezt felhasználva hoznak döntéseket.
      2:
        image: notes/hoc4_2.jpg
        text: A „ha” állítást Te is naponta használod. Minden reggel mielőtt elmennél, azt mondod HA esik az eső fel kell vennem a kabátom.
      3:
        image: notes/hoc4_3.jpg
        text: Megmondhatjuk egy zombinak HA van út balra és ha megtalálja az utat, akkor forduljon abba az irányba.
      4:
        image: notes/hoc4_4.jpg
        text: Ahhoz hogy megírjuk azt a kódot húzzuk ki a „ha” blokkot, és helyezzük a „balra fordul” blokkot a belsejébe.
      5:
        image: notes/hoc4_5.jpg
        text: Most ha az „előrelépés” blokkot föléje és az „ismétlés” blokkot a kód köré helyezzük, akkor a zombi minden lépésnél ellenőrzi, hogy létezik-e út balra. Ha igen, akkor arra fordul. A ismétlő parancs fontos, mivel minden lépésnél ellenőriznie kell, hogy létezik-e út.
      6:
        image: notes/hoc4_6.jpg
        text: 'A ha állítás nagyon fontos a számítástechnikában. Az első programjaim között volt egy amőba játék, amelyben az egyik ha feltétel így szólt: HA az ellenfél nyerő helyzetben van, akkor blokkolni kell a pozíciót, amivel nyerni tudna.'
      7:
        image: notes/hoc4_7.jpg
        text: Jó szórakozást a „ha” blokk használatához!
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: Szia, Saloni vagyok. Én az egészségügyben és az orvostudományban felmerülő problémák megoldására használom a számítástechnikát. Tanuljuk meg a „ha különben” blokk használatát. Ez a blokk hasonlít a „ha” blokkhoz, de van egy extra kiegészítése „különben” néven.
      2:
        image: notes/hoc5_2.jpg
        text: Ha a feltétel „csináld” részéhez egy „előrelépni”, a „különben” részéhez egy „fordulj balra” blokkot teszel, akkor a zombi e közül a két lehetőség közül fog választani. Ha van út előre, akkor a zombi előre megy, minden más esetben (tehát ha nincs előre út) a zombi balra fog fordulni.
      3:
        image: notes/hoc5_3.jpg
        text: 'Pont mint a "ha" blokknál, tehetünk "ha különben" blokkokat "ismételd" blokkokba, így a zombi mozgásban marad, a "ha különben" blokk pedig ellenőrizni fogja, hogy van-e hova fordulni.'
      4:
        image: notes/hoc5_4.jpg
        text: Most vidd a zombikat oda, ahova tartoznak!
    if_else_scrat:
      1:
        image: notes/saloni_ifelse_scrat1.jpg
        text: A ha-különben utasítás egy döntés két dolog között. Most lássuk, hogyan tudjuk használni a ha-különben utasítást a barátunkkal, Motkánnyal.
      2:
        image: notes/saloni_ifelse_scrat2.jpg
        text: 'A blokk hasonló a sima "ha" blokkhoz, de van egy extra része az alján, amit a "különben" szó jelöl. Ha egy "előrelépni" blokkot teszek a "csináld" részhez, egy "fordulj balra" blokkot a "különben" részhez, akkor Motkány a mókus előre fog menni, ha van előre út. Ha nincs tovább út előre, akkor Motkány balra fog fordulni.'
      3:
        image: notes/saloni_ifelse_scrat3.jpg
        text: 'Ez egy döntéshozás, és a két utasítás közül az egyiket fogja végrehajtani a döntés alapján. És csakúgy, mint a "ha" blokkokat, a "ha-különben" blokkokat is beleteheted "ismételd" blokkokba.'
      4:
        image: notes/saloni_ifelse_scrat4.jpg
        text: Most segítsünk Motkánynak a mókusnak kap, hogy megszerezze a makkot!
    function:
      1:
        image: notes/stage13_1.jpg
        text: Szia, Brina vagyok , mérnök az Instagram-nál. Egy függvény az bizonyos sorok a kódból amit újra és újra használni szeretnél, így ahelyett, hogy a kódot ki minden alkalommal be kelljen írni, akkor csak használ egy blokk.
      2:
        image: notes/stage13_2.jpg
        text: Itt az idő, hogy megtanuljunk függvényeket definiálni. A függvény definíciókat csillaggal jelezzük. A függvény nevét a legfelső sorba írjuk.
      3:
        image: notes/stage13_3.jpg
        text: 'A blokkok a definíción belül mutatják meg, hogy mit is csinál. Ez a függvény, amit "feltölt 5"-nek hívunk egy repeat/ismételd és egy feltölt blokkból áll.'
      4:
        image: notes/stage13_4.jpg
        text: 'A definíció csak ott csücsül a munkapadon, de a farmer nem tudja futtatni, amíg mi ki nem húzzuk a "feltölt 5" függvényblokkot a függvények közül.'
      5:
        image: notes/stage13_5.jpg
        text: |-
          Let's put the "fun" back in "FUNction!"
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: |-
          Hi, I'm Makinde! Let's learn about the "while block."
      2:
        image: notes/stage9_6.jpg
        text: 'A "While"/"Amíg" blokk addig csinálja amit beletettél, amíg a feltétel amit az elején tettél igaz.'
      3:
        image: notes/stage9_7.jpg
        text: Például ha a farmer áll egy földkupacnál, ő ADDIG tüntet el 1-1 lapátnyi földet, AMÍG van ott egyáltalán kupac.
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: Szia én Trina vagyok, és a Pixar-nál dolgozom. Már egy csomó filmen dolgoztam, beleértve a Shrek.
      2:
        image: notes/stage11_2.jpg
        text: Ez az új számlálós ciklus. Ez végrehajtja a feladatait újra és újra, minden alkalommal egy kicsit másképp.
      3:
        image: notes/stage11_3.jpg
        text: 'Ebben a példában a mi "counter"/"számláló" ciklusunk azt mondja: "Számolj a számlálóval 50-től 90-ig 10-essével", és a cikluson belül van a "négyzet rajzoló" blokk. Húzd a "számláló"-t  "Változók" közül a  "hossza" helyére.'
      4:
        image: notes/stage11_4.jpg
        text: 'Ez azt jelenti, hogy a művészünk rajzol egy 50 képpontos négyzetet, majd hozzáad  10-et, és rajzol egy 60 képpontosat,. Majd újra hozzáad 10-et és rajzol egy négyzetet, amíg eléri a 90-et. Végül lesz 50, 60, 70, 80 és 90 oldalú négyzetünk.'
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: Szia Janete vagyok, egy mernok vagyok Zynganal.
      2:
        image: notes/stage15_2.jpg
        text: Mit tegyünk, ha egy csomó, különböző méretű háromszöget akarunk rajzolni?
      3:
        image: notes/stage15_3.jpg
        text: Legépelhetjük az egész, hosszú kódot, vagy használhatunk függvényt paraméterekkel.
      4:
        image: notes/stage15_4.jpg
        text: 'Hogy ezt megtehessük, kattintsunk a kék csillagra a"rajzolj háromszöget" függvény definícióján. Ezután húzd a "bemenet neve" változót az "input"/"bemenet" blokkba.'
      5:
        image: notes/stage15_5.jpg
        text: 'Ekkor ha "hosszúság"-ot írsz a mezőbe, amikor az írja "x" és lenyomod az "Enter"-t, akkor megadod a "hosszúság" bemenetét a függvényednek.'
      6:
        image: notes/stage15_6.jpg
        text: 'Ezután kattints a csillagra. Most kattints a változók kategóriára és húzd a "hossz" elemet a "haladj előre" elemre a függvényeden belül. Ezután dobd ki a régi szám blokkot.'
      7:
        image: notes/stage15_7.jpg
        text: 'Hogy egy függvényt paraméterekkel használj, kattints a függvények kategóriájára és húzd ki a "rajzolj egy megadott méretű háromszöget" függvényt.'
      8:
        image: notes/stage15_8.jpg
        text: Most a matematikai blokkot használva számokat adhatsz meg, hogy különböző méretű háromszögeket rajzolj.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: Gratulálok! Az utolsó játék megoldásakor egy olyan kódot írtál, amely bármilyen robotnak segítene végigmenni egy nem elágazó útvesztőben vagy alagútban, függetlenül annak hosszától. Ez a robot nem csak zombi vagy madár, de akár marsjáró vagy önmagát vezető autó is lehet.
      2:
        image: notes/hoc6_2.jpg
        text: Ezek az alap koncepciók alkotják a szívét minden programnak vagy alkalmazásnak, amit valaha használni fogsz. Megismertük az ismétlés, az ismétlés amíg, a ha és a ha másképp utasításokat.
      3:
        image: notes/hoc6_3.jpg
        text: Ha tetszett az első kódolás órád akkor látogass el a code.org weboldalra, hogy tovább folytathasd a tanulást. A 20 órás kurzusunk befejezése után tisztában leszel a programozás alapjaival, és elkezdhetsz telefon alkalmazásokat, robot utasításokat, játékokat vagy bármi mást írni.
      4:
        image: notes/hoc6_4.jpg
        text: 'A technológia mindent megváltoztat, amit csinálunk, és nem számít, ha fiatal vagy öreg vagy: a programozás szórakoztató, kreatív és bárki megtanulhatja!'
    20_wrapup:
      1:
        image: notes/bird.png
        text: Útmutató jegyzetek hamarosan!
    frozen_intro:
      1:
        image: notes/frozen1_1.jpg
        text: Sziasztok, a nevem Lindsey. Modellkedem, színészkedek, és a saját appjaimat írom. Használjuk a kódot, hogy csatlakozzunk Annához és Elsához, ahogy felfedezik a jég varázsát és szépségét.
      2:
        image: notes/frozen1_2.jpg
        text: Hópelyheket és mintákat fogsz majd létrehozni ahogy jégkorcsolyázol és létrehozol egy téli csodaországot, amit aztán majd megoszthatsz a barátaiddal.
      3:
        image: notes/frozen1_3.jpg
        text: A következő órában meg fogod megtanulni az alapjait a kódolásnak. A hagyományos programozás általában szöveges, de mi a Blockly-t fogjuk használni, amely vizuális elemeket használ, amit használva fogd és vidd módszerrel tudsz programokat írni. Még az egyetemi hallgatók is így tanulják az alapokat. Az álarc alatt, továbbra is kódot írsz.
      4:
        image: notes/frozen1_4.jpg
        text: Egy program utasítások sora, amely megmondja a számítógépnek, hogy mit csináljon. Építsünk egy kódot, vagy egy programot, amely segít Elsának egy egyszerű vonalat létrehozni. Ezt arra fogjuk használni a későbbiekben, hogy más bonyolult mintákat készítsünk.
      5:
        image: notes/frozen1_5.jpg
        text: A képernyőd három fő részből áll. A bal oldalon van a jég felülete, ahol a programod futtathatod. Minden szinthez a leírás pont ott a felület alatt található.
      6:
        image: notes/frozen1_6.jpg
        text: Ez a középső terület az eszköztár, minden ilyen blokk egy utasítás, amit Elsa és Anna megtehet.
      7:
        image: notes/frozen1_7.jpg
        text: 'A fehér hely a jobb oldalon a munkaterület, ez az, ahol a programot építjük majd. A jégen való mozgáshoz használnod kell a "Menj előre" blokkot.'
      8:
        image: notes/frozen1_8.jpg
        text: 'Itt, a "Menj előre" blokk azt jelenti, hogy "lépj előre 100 pixelt". Amikor megnyomjuk a "Futtatás"-t, mi történik? Elsa előrehalad egy bizonyos távolságra a képernyőn, pontosan 100 képpontnyit! A pixelek alapvetően nagyon apró négyzetek a számítógép képernyőjén.'
      9:
        image: notes/frozen1_9.jpg
        text: 'A másik blokk ami ebben a feladványban van, azt mondja hogy "Fordulj jobbra 90 fokkal". Amikor használjuk ezt a "Fordulj jobbra" blokkot, attól Elsa elfordul egy bizonyos mértékben. Tudsz játszani azzal, hogy mennyire szeretnéd hogy Elsa elforduljon. A szög az Elsa előtti útból van számítva. Szóval, ez egy 90 fokos fordulat. És ez egy 120 fokos fordulat.'
      10:
        image: notes/frozen1_10.jpg
        text: Ne feledd, meg tudod változtatni a pixelek számát és a szöget a mellettük levő nyilakra kattintva.
    frozen_loops:
      1:
        image: notes/frozen2_1.jpg
        text: 'Hello, Paola vagyok! A számítógépek nagyon jók műveletek ismétlésében. El tudsz számolni a 10-ig, 20-ig, vagy 100-ig. De egy számítógép el tud számolni egy milliárdig vagy billióig. Nem fog unatkozni, és ez csak egy pár másodpercet vesz igénybe. Mindegy, hogy számolás, vagy rajzolás, vagy bármi más - a számítógépek megismételhetik a dolgokat több százszor, vagy akár több milliárdszor.'
      2:
        image: notes/frozen2_2.jpg
        text: 'A programozásban ezt nevezzük ciklusnak. A ciklus az, ahogyan megismétled a kódod újra és újra. A következő feladatban, az a cél, hogy segíts Annának létrehozni egy négyzetet, az "Ismételd" blokkal.'
      3:
        image: notes/frozen2_3.jpg
        text: 'Amilyen kódblokkot teszel az "Ismételd" blokkba, az annyiszor lesz ismételve ahányszor csak akarod.'
      4:
        image: notes/frozen2_4.jpg
        text: 'Hogy egy négyzetet rajzolj, használhatod a "Menj előre" és a "Fordulj jobbra" blokkokat 4-szer. De a könnyebb út, ha megmondod a számítógépnek, hogy "Menj előre" és "Fordulj jobbra 90 fokkal" egyszer, aztán azt mondani, hogy ismételje meg ezt a pár műveletet 4-szer. Ehhez be kell tenni a "Menj előre" és a "Fordulj jobbra" blokkokat egy "Ismételd" blokkba.'
      5:
        image: notes/frozen2_5.jpg
        text: 'Ne feledd, meg tudod változtatni a számot az "Ismételd" blokkban bármire, és ez annyiszor fogja megismételni azt, ami a blokkon belül van.'
    frozen_functions:
      1:
        image: notes/frozen3_1.jpg
        text: Üdv, Chris Bosh vagyok. Profi kosaras vagyok, és én a fősulin programoztam.
      2:
        image: notes/frozen3_2.jpg
        text: Egyike legfontosabb ötleteknek a számítástechnikában, hogy hogyan határozzunk meg új parancsokat. A legtöbb számítógépes nyelv csak mintegy 100 szót vagy parancsot tartalmaz. És valóban, a művészet és a varázslat a saját új szavak ezen építőelemekből való meghatározása.
      3:
        image: notes/frozen3_3.jpg
        text: Ha már egyszer megtanítottad a számítógépet, hogyan kell csinálni egy műveletet bizonyos utasítások sorával, akkor kitalálhatsz egy nevet a művelethez, hogy később könnyen megismételhesse. Ha a saját parancsod hozol létre, és nevet adsz neki, azt függvénynek hívják.
      4:
        image: notes/frozen3_4.jpg
        text: Hello, Jess vagyok. A blokkokkal való programozás során, úgy használnád a függvényeket, mintha utasítások gyűjteményei lennének, amit sokszor akarsz használni. Például, írtál egy kódot, ami egy négyzetet rajzol.
      5:
        image: notes/frozen3_5.jpg
        text: 'Készíthetsz egy függvényt erre mint "Hozz létre egy négyzetet". '
      6:
        image: notes/frozen3_6.jpg
        text: Most van egy új blokk, melynek segítségével több alkalommal használhatsz, hogy négyzeteket készíts.
      7:
        image: notes/frozen3_7.jpg
        text: Sok egyszerű formából bonyolultabb minták hozhatóak létre. A következő feladványban a kód amit nemrég írtál arra, hogy egy kört készíts, elérhető mint egy új függvény, amellyel különböző méretű köröket készíthetsz. Tudod használni, hogy segíts Elsának tekervényes és gyönyörű mintákat készíteni a hóban?
    C3_playlab_create_game:
      1:
        image: notes/playlab_1.png
        text: Eddig egy animációt vagy történetet készítettél, ami pontosan ugyanazt csinálja mindig, amikor futtatod. Most egy interaktív játékot csinálhatsz, amivel valóban játszani lehet.
      2:
        image: notes/playlab_2.png
        text: 'Van egy "amikor nyíl" blokk és a "szereplő mozgatása" blokk. Ezeket a blokkokat összeillesztheted, hogy a szereplőket a nyilakkal tudd mozgatni.'
      3:
        image: notes/playlab_3.png
        text: És van néhány blokkod, amelyek végeznek valamit, ha a szereplők egymásnak ütköznek. Vizsgáld meg őket és érezd jól magad!
    playlab_intro:
      1:
        image: notes/playlab_intro_1.png
        text: Játékokat fogunk létrehozni a Játéklabor használatával. A jó játékoknak van egy története, és minden történetnek vannak szereplői. Megtanuljuk, hogyan bírhatjuk rá a szereplőinket, mint a boszorkányokat, az űrlényeket és az állatokat arra, hogy beszéljenek, mozogjanak és kölcsönhatásba lépjenek egymással. E tanfolyam végére képes leszel arra, hogy elkészíts egy játékot a semmiből és meg tudd osztani azt a barátaiddal.
      2:
        image: notes/playlab_intro_2.png
        text: 3 fő részre van felosztva a képernyőd. A bal oldalon van a játéktér, ahol a program fog futni. Az utasítások minden egyes szinthez alól vannak odaírva.
      3:
        image: notes/playlab_intro_3.png
        text: 'A középső területen az eszközkészlet van, és minden egyes blokk - egy kódrészlet. A jobb oldalon lévő üres területet munkaterületnek nevezik, és itt készítjük majd el a programunkat.'
      4:
        image: notes/playlab_intro_4.png
        text: 'Az indításhoz, a blokkjaidat hozzá kell csatolnod a narancssárga "amikor fut" blokkhoz. Több blokkot is összekapcsolhatsz úgy, hogy elhúzod őket a sárga vonalig, és akkor majd összekapcsolódnak.'
      5:
        image: notes/playlab_intro_5.png
        text: 'Ebben az első feladványban a színészünk egy pingvin, akit ráveszünk arra, hogy mondjon egy "Hello!"-t a "mondd" blokk húzásával, összekapcsolva azt az "amikor fut" blokkal, és beírva azt hogy "Hello." A pingvint, a menj jobbra és a menj balra blokkok használatával is mozgásra bírhatjuk. Miután elhelyezted a blokkokat, nyomd meg a futtatás gombot, hogy lásd mit programoztál.'
      6:
        image: notes/playlab_intro_6.png
        text: A kezdj hozzá, és a végére majd el tudsz készíteni egy saját játékot mindenféle egymással kölcsönhatásba lépő szereplővel, akik boldoggá vagy szomorúvá válhatnak, pontokat szerezhetnek, tűgolyókat dobhatnak egymásra, vagy akár el is tudják tüntetni egymást. Az egész rajtad múlik és a játékon, amit el szeretnél készíteni.
    playlab_events:
      1:
        image: notes/playlab_events_1.png
        text: Most mi arról fogunk tanulni, amit nap mint nap minden játékprogramozó használ. Ezt eseménynek nevezzük. Az esemény arra készteti a programodat, hogy figyelje, ha valami történik. Amikor ez az esemény bekövetkezik, akkor a programod végrehajt egy műveletet.
      2:
        image: notes/playlab_events_2.png
        text: Például eseményeknek tekintjük az egérkattintást, a nyilakat ábrázoló gombok leütését vagy a képernyő megérintését.
      3:
        image: notes/playlab_events_3.png
        text: 'Itt az űrrobotot fogjuk rávenni arra, hogy köszöntse a Földlakókat ha egy játékos rákattint. A "kattintásra" blokkot fogjuk használni, és hozzácsatolni a "mondd" blokkhoz. Ha a játékos rákattint az űrrobotra, minden végre lesz hajtva ami a "kattintásra" esemény blokkhoz csatlakozik.  Mit mond az idegened?'
      4:
        image: notes/playlab_events_4.png
        text: 'Vannak "amikor nyíl" blokkok is. Ha a "menj" blokkokat hozzárendeled ezekhez, akkor máris tudod mozgatni a szereplőket fel, le, balra, vagy jobbra. A játékod lépésről lépésre egyre interaktívabbá válik.'
    playlab_repeat_forever:
      1:
        image: notes/playlab_repeat_forever_1.png
        text: 'Ez az "ismételd mindig" blokk. Minden ezen a blokkon belül örökké ismétlődni fog a játék ideje alatt.'
      2:
        image: notes/playlab_repeat_forever_2.png
        text: 'Ha azt akarjuk, hogy egy művész valamit többször, a játékos beavatkozása nélkül csináljon meg, a végrehajtandó blokkokat berakjuk az "ismételd mindig" blokkba.'
      3:
        image: notes/playlab_repeat_forever_3.png
        text: Ebben a feladványban a célunk, hogy segítünk a varázslónak felvigyázni a Királyság határait, folyamatosan járőrözve balról jobbra. Megtanuljuk, hogyan működnek az ismétléses utasítások, amivel egy csomó időt takaríthatunk meg, ha majd saját játékot fogunk készíteni.
