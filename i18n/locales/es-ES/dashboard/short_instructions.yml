es:
  data:
    short_instructions:
      2-3 Artist 1 new: Hola, soy un artista. Puedes escribir código para hacerme dibujar cualquier cosa. Usa algunos bloques para hacerme dibujar sobre las líneas grises en la imagen. (Cada línea tiene 100 píxeles de largo)
      2-3 Artist 11: "Dale un borde a la señal de alto haciendo un octágono con ocho lados, cada uno de 100 píxeles de largo. ¿Cuántos grados debes girar? (Pista: ¿Cuánto es 360 dividido entre 8?) "
      2-3 Artist 12: |-
        Configura el bloque "repetir" de tal forma que cree un "círculo" para terminar el globo ocular. Si cada movimiento gira un grado a la derecha, ¿cuántas veces necesitas repetir para completar el círculo? ¿180? ¿360? ¿500?
      2-3 Artist 2 new: 'Esta casa tiene una pared a medio terminar. Cada lado mide 100, pero la pared incompleta solo mide 50. Completa la pared. '
      2-3 Artist 2: 'Esta casa tiene una pared a medio terminar. Cada lado mide 100, pero la pared incompleta solo mide 50. Completa la pared. '
      2-3 Artist 3.4: "El bloque Salta mueve el artista sin dibujar.\nDibuja la línea punteada utilizando los bloques Salta y Dibuja."
      2-3 Artist 3: Este sombrero mide 100 pixels de alto. Dibuja un sombrero que mida 70 pixels menos.
      2-3 Artist 3new: "El sombrero rojo tiene 100 pixeles de alto. Termina de dibujar un sombrero negro que tiene 70 pixeles menos. El ancho del sombrero negro es de 50 pixeles."
      2-3 Artist 4: Ayúdame a completar la casa para este gato.
      2-3 Artist 5: Sustituye este código con el bloque "repetir" para dibujar la misma casa usando sólo 3 bloques.
      2-3 Artist 6: '¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.'
      2-3 Artist 7: "Termina de dibujar la mitad derecha de la última ventana. \nCada cuadado de la ventana mide 25 pixeles. "
      2-3 Artist 8: Completa las habitaciones para cada uno de los naimales dividiendo el recángulo en 2 cuadrados del mismo tamaño. El rectángulo mide 200 pixeles de ancho y 100 pixeles de alto.
      2-3 Artist 9 NEW: Termina esta cometa
      2-3 Artist 9 REPLACEMENT: '¡Termina de dibujar estas escaleras!'
      2-3 Artist 9: Termina esta cometa
      2-3 Artist Assessment 1: "Evaluación: Termina de dibujar el último diente,\n25 pixeles de ancho por 25 pixeles de alto."
      2-3 Artist Debugging 1: '¿Puedes hacer este sombrero con una longitud máxima de 100?'
      2-3 Artist Debugging 10: "El pad de dirección en mi control es demasiado angosto. Sugerencia: Hazlo 10 pixeles mas ancho"
      2-3 Artist Debugging 11: |-
        Ayúdame a terminar mi hermoso copo de nieve.
        ¿Cuantas veces necesito "Repetir" para finalizarlo?
      2-3 Artist Debugging 12: Tengo que añadir una ola del oceáno a esta escena. ¿Puedes ayudarme?
      2-3 Artist Debugging 2: "El código para los tres bigotes que ves es incorrecto. Sugerencia: cada bigote tiene 75 pixeles de largo. Repara este código para dibujar los bigotes."
      2-3 Artist Debugging 3: "¡Mi barco tiene un agujero! ¿Puedes repararlo cambiando el ángulo de la línea? Sugerencia: el último ángulo está errado por 15 grados."
      2-3 Artist Debugging 4: '¿Qué imagen intentamos representar? Termina de unir los puntos mediante los ángulos y líneas adecuados.'
      2-3 Artist Debugging 5: "El código para la pierna y el pie está equivocado. Sugerencia: El pie es demasiado largo, podríamos necesistar eliminar un paso (juego de palabras intencional)"
      2-3 Artist Debugging 6: |-
        Parece que estoy sentado un una silla
        que le falta una pata. Edita los Bloques para dibujar la pata.
      2-3 Artist Debugging 7: |-
        Parece que la C en Código está dibujada al revés-
        ¿Puedes hacer que parezca una C?
      2-3 Artist Debugging 8: |-
        Mi molinillo de viento no está terminado. Cuántas veces necesito repetir para terminarlo?
      2-3 Artist Debugging 9: |-
        El código de este tallo es incorrecto. Sugerencia: El ángulo está fuera por 60 grados
      2-3 Artist Debugging Assessment 1: "Esta figura es demasiado pequeña. ¿Puedes hacerla más grande? Pista: debería tener 75 píxeles más por cada lado."
      2-3 Artist Free Play: '¡Juego libre! Dibuja lo que quieras.'
      2-3 Artist Functions 1 a: "Hola. Yo artista zombie. Yo amo dibujar!\nAyúdame a dibujar las gafas cuadradas.  Sugerencia: el puente entre las gafas es 25 píxeles más corto que la longitud cuadrada."
      2-3 Artist Functions 1: "Hola. Yo artista zombie. Yo amo dibujar!\nAyúdame a dibujar las gafas cuadradas.  Sugerencia: el puente entre las gafas es 25 píxeles más corto que la longitud cuadrada."
      2-3 Artist Functions 10: 'Aquí hay dos funciones, una para dibujar un engranaje grande y otra para dibujar un engranaje pequeño. Utilizarlos para dibujar el interior de una máquina!'
      2-3 Artist Functions 11 a: "Hemos renombrado la función \"dibuja un cuadrado\" a \"dibuja un hexágono\", ¡pero sigue dibujando cuadrados! ¿Puedes modificar la función \"dibuja un hexágono\" para que dibuje un hexágono con 50 píxeles de cada lado y que dibuje la imagen usando la función?"
      2-3 Artist Functions 11.5 a: "Aquí está la misma función \"Dibuja un hexágono\". ¿Que pasa si sólo giras 60 grados en cada iteración?"
      2-3 Artist Functions 11.5: "Aquí está la misma función \"Dibuja un hexágono\". ¿Que pasa si sólo giras 60 grados en cada iteración?"
      2-3 Artist Functions 11: "Hemos renombrado la función \"dibuja un cuadrado\" a \"dibuja un hexágono\", ¡pero sigue dibujando cuadrados! ¿Puedes modificar la función \"dibuja un hexágono\" para que dibuje un hexágono con 50 píxeles de cada lado y que dibuje la imagen usando la función?"
      2-3 Artist Functions 12 Mike: "Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función \"dibujar una flor\" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  "
      2-3 Artist Functions 12 a: "Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función \"dibujar una flor\" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  "
      2-3 Artist Functions 12: "Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función \"dibujar una flor\" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  "
      2-3 Artist Functions 13: "Tienes cuatro funciones.\nUtilízalas como quieras dentro de uno o varios bucles para hacer dibujos que puedes compartir con tus amigos. Pulsa \"run\" para ver un ejemplo."
      2-3 Artist Functions 2 a: 'Usa el bloque pequeño verde de ''dibujar un cuadrado'' para llamar a esta nueva función y crear las gafas. '
      2-3 Artist Functions 2: "¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada \"dibuja un cuadrado\". ¿Puedes utilizar la función \"dibuja un cuadrado\" para crear los lentes? Los cuadrados están separados por 75 píxeles."
      2-3 Artist Functions 3: "Editar la función para dibujar un cuadrado con una longitud lateral de 115 y dibuja los lentes más grandes. Los cuadrados están ahora separados 45 píxeles."
      2-3 Artist Functions 4: Usa el bloque "repetir" para dibujar estos 3 cuadrados.
      2-3 Artist Functions 7: 'Utiliza la función "dibuja una casa" para dibujar dos casas utilizando dos parámetros diferentes. (Sugerencia: la primera casa es de 100 pixeles).'
      2-3 Artist Functions 9: 'Esta es la función copo de nieve. ¡Experimenta con ella para crea una escena invernal! Este es un nivel libre de acertijos, puedes jugar libremente . ¡Diviértete!'
      2-3 Artist Loops 1: '¿Podrías hacer un hexágono que sus lados midan 100 pixeles de largo para terminar la célula? Recuerda, eso significa que ¡sólo deberas girar 60 grados!'
      2-3 Artist Loops 10: '¿Qué pasa con el diseño cuando hacemos nuestro último paso hacia adelante tanto la mitad?'
      2-3 Artist Loops 11: Ahora vamos a poner * otro * bucle alrededor de toda la creación!  No olvide añadir un ángulo al final del bucle externo.
      2-3 Artist Loops 2: Ahora utilice un bloque de repetición para hacer la célula una cáscara.
      2-3 Artist Loops 4: '¿Quieres ver lo que pasa cuando repetimos la forma otra vez y otra vez utilizando un bucle?'
      2-3 Artist Loops 5: Ahora vamos a hacer un pequeño cambio en el bucle y ver que diferente se convierte nuestro foto.
      2-3 Artist Loops 6: Añadir un paso más y otra vez dentro del bucle y ver cómo cambia su diseño.
      2-3 Artist Loops 7: Podemos usar bucles para hacer todas las clases de polígonos.  ¿Puede crear un rombo dentro de este hexágono?
      2-3 Artist Loops 8: Pongamos ambos elementos dentro de un ciclo.
      2-3 Artist Loops 9: |-
        Vamos a iterar sobre los mismos elementos, pero ahora vamos a añadir algo de separación entre ellos. \r
        Usa el mismo código de antes pero añade un paso mas al final del bucle exterior.
      2-3 Artist Loops New 1: Dibujemos la cabeza de este robot! ¿Puedes hacer un cuadrado con lados que son 100 píxeles?
      2-3 Artist Loops New 10: Ahora conectemos un montón de V juntos, dibujándolos en un bucle.
      2-3 Artist Loops New 11: Esta vez vamos a dibujarlo 24 veces. Añadir un giro a la izquierda de 30 grados a este código y ponerlo todo en un bloque de repetición.
      2-3 Artist Loops New 12: 'Dibuja un diamante con lados de 100 píxeles. '
      2-3 Artist Loops New 13: "Ahora dibuja un diamante 3 veces en una iteración."
      2-3 Artist Loops New 14: Ahora a dibujar el diamante 10 veces pero gire 90 grados entre cada diamante.
      2-3 Artist Loops New 15: Dibuja algo divertido.
      2-3 Artist Loops New 2: |-
        Aquí es el mismo rompecabezas que sólo solucionamos, pero esta vez, sólo podemos utilizar un bloque de 'avanzar' y 'girar' cuadra que este tiempo. \r \r puede utiliza una 'repetición' para resolver este rompecabezas?
      2-3 Artist Loops New 9: Dibuja una simple V donde ambos lados sean de 50 píxeles para completar la flecha.
      2-3 Artist Match Hex Pic: 'Iguala: Ayuda a terminar el hexágono.'
      2-3 Artist Match Rho Pic: 'Iguala: Terminar el código faltante.'
      2-3 Artist Match Sq Pic: 'Iguala: Completar el código faltante'
      2-3 Artist Match Tri pic: 'Igualando: Rellene el código faltante.'
      2-3 Artist Nested Loops 1: "Has usado bucles para dibujar formas anteriormente, \npero sabías que puedes poner un bucle dentro de otro bucle\\r \nbucle todo esto \nbloque de código 3 veces para dibujar el patrón."
      2-3 Artist Nested Loops 10: Itera este código 12 veces para completar el patrón.
      2-3 Artist Nested Loops 11: Itera este código 4 veces para completar el patrón, gira 90 grados después de cada circulo.
      2-3 Artist Nested Loops 12: Itera este código 12 veces para completar los rizos.
      2-3 Artist Nested Loops 2: "Ahora usaremos un bucle para crear un triangulo 6 veces. \\r \n\\r\nDespués de dibujar cada triangulo, debes girar 60 grados antes de dibujar el siguiente."
      2-3 Artist Nested Loops 3: "Necesitaras un bucle para crear un triángulo 12 veces. \\r\n\\r\nDivide el número de grados de un círculo (360) \npor el número de formas que dibujarás (12) para averiguar cuánto debes girar \ndespués de cada forma."
      2-3 Artist Nested Loops 4: "Haz un blucle con el diamante 12 veces para dibujar una flor!\\r\n\\r\nNota: Usaremos el mismo ángulo para hacer el bucle de los 12 diamantes como lo hicimos para los 12 triángulos.  \\r\n¿Cuánto necesitas girar después de hacer cada forma?"
      2-3 Artist Nested Loops 5: "Rellena dentro de las ventanas del edificio utilizando un bucle anidado. \\r\n\\r\nLas ventanas son de 20 pixels de largo por 20 pixels de ancho."
      2-3 Artist Nested Loops 6: |-
        Este dinosaurio tiene 8 picos subiendo por su cola. \r
        Cada pico tiene 30 píxeles de largo. Usa un bucle para crear el pico (triángulo) 8 veces, pero
        ¡asegúrate de moverte hacia adelante después de cada uno!
      2-3 Artist Nested Loops 7: "Haz un bucle con este triángulo 10 veces para dibujar el sol. \\r\n\\r\nNecesitarás moverte y torcer después de cada triángulo..\n\\r\n\\r\nPuedes averiguar cuánto tienes que girar dividiendo el número de grados que tiene un círculo entre el número de triángulos que quieres hacer."
      2-3 Artist Nested Loops 8: "Ahora vamos a añadir algo de hierba a nuestra imagen. \\r\n\\r\nLas matas de hierba están separadas 50 pixels entre sí."
      2-3 Artist Nested Loops 9: "Vamos a terminar este dibujo añadiendo nuestra flor. \\r\n\\r\nHaz el bucle del diamante 12 veces para dibujar la flor."
      2-3 Artist Nested Loops Free Play: Juego libre, dibuja algo chulo con los bucles anidados.
      2-3 Bee Conditionals 1: "¡Hola! Soy una abeja. Ayúdame a obtener\nnéctar de la flor."
      2-3 Bee Conditionals 10: "Las flores moradas pueden tener 1 o 0 néctar. Procura no recoger el néctar de una flor morada si no tiene néctar.\\r\n"
      2-3 Bee Conditionals 11: "Colecta néctar donde las flores tienen néctar."
      2-3 Bee Conditionals 12: "Utilizar un bucle para comprobar y recolectar el néctar \nde todas estas flores."
      2-3 Bee Conditionals 13: |-
        Recoge néctar y haz miel. Pista: ¿Qué ocurre si usas el condicional "Si nectar" en una flor roja? ¿Puedes completar esto con un bucle (loop)?
      2-3 Bee Conditionals 14: |-
        Colecta néctar y miel. Tenga cuidado 
        de no recogen néctar de una flor morada si no tiene ninguno.
      2-3 Bee Conditionals 15: "Recoge néctar de las cuatro flores."
      2-3 Bee Conditionals 2: "Yo soy una abeja hambrienta! \\r\n Ayudarme a recoger\n todo el néctar de las flores utilizando el menor número de bloques."
      2-3 Bee Conditionals 3: "Ayúdame a recoger todo el néctar de las flores y a hacer miel. Usa un bucle (loop)."
      2-3 Bee Conditionals 4: Ayúdame a recoger todo el néctar de las flores y a hacer toda la miel. 
      2-3 Bee Conditionals 5: "Flores de color púrpura pueden tener 1 o 0 \nnéctar, pero no sabes cuál! Tenga cuidado de no recogen néctar de \nuna flor morada si no tiene ninguno. Compruebe si el néctar es igual a 1\nutilizando el bloque if."
      2-3 Bee Conditionals 6: "Checa esta flor con un bloque de \"if\"\npara ver si hay cualquier néctar disponible."
      2-3 Bee Conditionals 7: "Colecta néctar de cada flor si \ntiene alguno."
      2-3 Bee Conditionals 8: "Este campo tiene flores rojas y púrpura.\nFlores rojas tienen una cantidad conocida de néctar, pero se desconoce el néctar de la flor de color púrpura.\nColecta todo el néctar."
      2-3 Bee Conditionals 9: Colecta todo el néctar de cada flor.
      2-3 Bee Conditionals Assessment 1: "Evaluación: Colecta todo \nel néctar. Tenga cuidado de no recogen néctar de una flor morada si no tiene\nninguno."
      2-3 Bee Debugging 1: Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 10: "Estos bloques realmente me molesta. Corregir\nel error(s) para colectar todo el néctar y hacer toda la miel."
      2-3 Bee Debugging 2: |-
        Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 3: |-
        Ooh, este pica!\r
        \r
        Arregla
        el error(s) para recoger todo el néctar.
      2-3 Bee Debugging 4: Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 5: "Estos bloques realmente me molestan. Corregir \nel error(s) para recoger todo el néctar y hacer todo de la miel.  Usted puede \nahora usar ejecutar y paso."
      2-3 Bee Debugging 6: |-
        ¡Qué desafío tan dulce!\r
        \r
        Arregla
        el error(s) para recoger todo el néctar.
      2-3 Bee Debugging 7: Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 8: |-
        Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 9: |-
        Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging Assessment 1: |-
        Evaluación: Estos bloques
        realmente me molestan. Corregir el error(s) para recoger todo el néctar y hacer
        todo de la miel.
      2-3 Bee Functions 1: "Las funciones son bloques de código que realizan \nuna tarea. Utilice la función \"get 2 néctar\" para recolectar el néctar de cada\nflor."
      2-3 Bee Functions 10: "Las flores moradas pueden tener 1 o 0 néctar. Crea una función que recoja el néctar solo de aquellas flores que lo tengan."
      2-3 Bee Functions 2: "Las funciones son bloques de código que realizan una tarea. \\r\n\\r\nUsa la función `obtener 5` para obtener 5 néctares a la vez."
      2-3 Bee Functions 3: Colecta todo el néctar de cada flor.
      2-3 Bee Functions 4: "La función \"mover y obtener néctar\" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar."
      2-3 Bee Functions 5: Ahora hay más néctar en las flores. Edita la función dada de manera que recoja 4 néctar y úsalo para recoger todo el néctar de las flores. 
      2-3 Bee Functions 6: "Ahora utilizar la misma función para recoger el néctar\nde las tres flores."
      2-3 Bee Functions 7: "Las flores estan ahora más lejos. Editar la\nfunción dada y usarlo para recoger todo el néctar de las flores."
      2-3 Bee Functions 8: Crea tu propia función que obtiene 7 de néctar, avanza hacia adelante y obtén 7 de miel. Utiliza la función para recoger néctar en cada flor y hacer miel en cada panal de miel.
      2-3 Bee Functions 9: Crear tu propia función que desciende por un camino, obtiene néctar, hace miel y luego devuelve la abeja a la cima de la ruta.
      2-3 Bee Functions Assessment 1: 'Utilice la función dada para recolectar néctar de cada flor.'
      2-3 Bee Functions Assessment 2: 'Valoracion: Crea una función para hacer 3 mieles a la vez.'
      2-3 Bee Loops 1: |-
        Cada flor continene una unidad de néctar. Recolecta néctar de cada una de las flores. 
      2-3 Bee Loops 10: '¿Podrías utilizar un ciclo mientras dentro de otros dos ciclos para recolectar todo el néctar?'
      2-3 Bee Loops 11: "Utiliza ciclos mientras para recolectar todo el néctar\nde las flores en este campo."
      2-3 Bee Loops 12: "Utiliza ciclos mientras para recolectar todo el néctar\nde las flores en este campo."
      2-3 Bee Loops 13: "Evaluación: Usa el bloque de repetición para recoger\ntodo el néctar."
      2-3 Bee Loops 1A: "Hola, soy una abeja. ¿Puedes ayudarme a recolectar \nel néctar de estas flores? "
      2-3 Bee Loops 2: "Usa un ciclo para recolectar el néctar y hacer la \nmiel."
      2-3 Bee Loops 2A: "¿Podrías hacer la misma tarea más fácilmente con un \nciclo?"
      2-3 Bee Loops 3: "Recolecta el néctar de cada flor y haz miel \nen cada panal."
      2-3 Bee Loops 3A: '¿Podrías utilizar un ciclo para recolectar todo el néctar?'
      2-3 Bee Loops 3B: Ahora usa el bloque 'repetir' para recolectar todo el néctar y crear toda la miel.
      2-3 Bee Loops 4: |-
        Utiliza un ciclo similar al del último problema, pero ahora utiliza
        un bloque turn.
      2-3 Bee Loops 4A: "¿Qué pasa si haces un ciclo con esta secuencia 3 veces?\n¡No olvides hacer la miel al final!"
      2-3 Bee Loops 5: "Utiliza un ciclo para seguir los pasos y recolectar el \nnéctar."
      2-3 Bee Loops 6: "Utiliza un ciclo para recolectar néctar de cada flor\ny hacer miel en cada panal."
      2-3 Bee Loops 7: "Pon estos bloques en un ciclo para recolectar néctar\nde cada flor."
      2-3 Bee Loops 8: "Estas flores moradas tienen una cantidad desconocida de\nnéctar. Utiliza el ciclo \"while nectar\" para recolectar todo el néctar. Este ciclo\nva a ejecutarse mientras la condición sea verdadera, en este caso Nectar > 0."
      2-3 Bee Loops 9: "El ciclo while puede ejecutar la misma acción como\nun estatuto if en un ciclo. Añade un ciclo while a este código para ejecutar la misma\ntarea."
      2-3 Bee Loops Assessment 1: "Evaluación - Utiliza un ciclo while para recolectar\ntodo el néctar de esta flor."
      2-3 Maze 1: "¿Me puedes ayudar a atrapar al cerdo malo? Apila un\npar de bloques \"avanzar\" juntos y presiona \"Ejecutar\". "
      2-3 Maze 10: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze 11: "¡Llévame a la flor que tengo hambre! ¿Cuántas veces \nse tiene que repetir un bloque?"
      2-3 Maze 12 (copy 1): "¿Podrías reemplazar la respuesta anterior con\nsolo dos bloques? (Sugerencia: Crea un ciclo utilizando un bloque de \"repeticiones\".)"
      2-3 Maze 12 (copy 2): "¿Podrías reemplazar la respuesta anterior con\nsolo dos bloques? (Sugerencia: Crea un ciclo utilizando un bloque de \"repeticiones\".)"
      2-3 Maze 12 (old): '¡Llévame al cerdo, ahora con el bloque repetir!'
      2-3 Maze 12 - One Move Block: Llegar al cerdo! Pero esta vez, sólo puedes utilizar un bloque de 'avanzar'. ¿Tu ves algún otro bloque que podría ayudarte?
      2-3 Maze 12: "¿Podrías reemplazar estos cinco bloques con solo dos?\n(Sugerencia: Crea un ciclo usando un bloque de \"repeticiones\".)"
      2-3 Maze 13 (old): '¡Llévame al cerdo, ahora con el bloque repetir hasta!'
      2-3 Maze 13: Llévame al cerdo usando solo dos bloques.
      2-3 Maze 14 (old): '¡Llévame al cerdo con el bloque repetir hasta!'
      2-3 Maze 14: '¡Llévame al girasol! (¿Dónde está ese bloque "repeticiones" cuando lo necesito?)'
      2-3 Maze 15 (old): '¡Llévame al cerdo con el bloque repetir hasta!'
      2-3 Maze 15: Usa dos ciclos para hacer que el cerdo use menos bloques.
      2-3 Maze 16 (old): '¡Llévame al cerdo con el bloque repetir hasta!'
      2-3 Maze 16 before: Tráeme al cerdo.
      2-3 Maze 16: Llévame al girasol. ¡Haz un ciclo con la secuencia!
      2-3 Maze 2: Este cerdo me está colmando la paciencia. ¡Ayúdame a llegar a él!
      2-3 Maze 3: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      2-3 Maze 4: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze 5: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze 6: Manten la calma y ayúdame a encontrar al cerdo malo. Sino, puede que me enfade!
      2-3 Maze 7: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze 8: '¡ Tráeme al cerdo!'
      2-3 Maze 9: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze Loops 1: '¿Puedes llevarme hasta el cerdo usando 5 bloques?'
      2-3 Maze Loops 17: '¡Llévame al girasol!'
      2-3 Maze Loops 18: "¡Llévame al girasol!"
      2-3 Maze Loops 19: "¡Llévame al girasol!"
      2-3 Maze Loops 20: '¡Llévame al girasol!'
      2-3 Maze Loops 21: '¡Llévame al girasol!'
      2-3 Maze Loops Assessment 1: 'Evaluación: ¡Llévame al girasol usando solo 5 bloques! '
      2-3 Maze sq1: Este cerdo me está colmando la paciencia. ¡Ayúdame a encontrarlo!
      2-3 Maze sq10: '¡Llévame hasta el cerdo! ¿Qué bloques se han repetido?'
      2-3 Maze sq10v2: '¡Llévame hasta el cerdo! ¿Qué bloques se han repetido?'
      2-3 Maze sq2: "Traza el camino y llévame al cerdo tonto. Evita \nel TNT o las plumas volarán!"
      2-3 Maze sq3: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze sq4: Manten la calma y ayúdame a encontrar al cerdo malo. Sino, puede que me enfade!
      2-3 Maze sq5: "¡Llévame al cerdo! ¿Cuántas veces debes\nrepetir un bloque?"
      2-3 Maze sq6: "¿Podrías reemplazar la respuesta anterior con\nsolo dos bloques? (Sugerencia: Crea un ciclo utilizando un bloque de \"repeticiones\".)"
      2-3 Maze sq7: Llévame al intruso verde usando solo tres bloques.
      2-3 Maze sq8: Llevame hacia el cerdo! (¿Dónde está el bloque "repeticiones" cuando lo necesito?)
      2-3 Maze sq9: Crea bucles para llegar al cerdo usando menos bloques.
      2-3 maze sq11: '¡Llévame hasta el cerdo! ¿Qué bloques se han repetido?'
      2-3 maze sq12: '¿Podrías reemplazar la respuesta anterior con un ciclo usando un bloque de "repeticiones"?'
      2-3 maze sq13: "Querida persona. Yo zombie. Debo... llegar... a girasol.\nCrear ciclo con bloque \"repetir hasta\"."
      2-3 maze sq14: '¿Podrías llegar al girasol usando solo cuatro bloques?'
      2-3 maze sq15: '¿Podrías llegar al girasol usando solo cinco bloques?'
      2-3 maze sq16: Ok, esto es similar, pero un poco diferente. ¿Puedes hacerlo con solo cinco bloques?
      2-3: En las flores moradas, el valor del néctar puede ser 1 o 0. Ten cuidado de no recoger el néctar de una flor morada, si esta flor no tiene ninguno.
      2-3level1: Ayuda el pájaro para que atrape al cerdo travieso moviéndolo hacia adelante
      20hr_farmer_stage9_1: Hola, soy un granjero. Necesito que me ayudes a aplanar el campo de mi granja para que esté listo para sembrar. Muéveme a la pila de tierra y utiliza el bloque "eliminar" para quitarla.
      20hr_farmer_stage9_10: "Estoy trabajando hasta tarde, así que está oscuro afuera, y no puedo saber cómo de grandes son las pilas. Ahora no tengo todas las opciones que tenía antes con el bloque \"mientras\".\nIntenta moverme por el campo y, si encuentras una pila, quítala."
      20hr_farmer_stage9_11: 'Todavía está oscuro afuera. Muéveme a lo largo del campo. Si hay una pila, quítala y si hay un agujero, rellénalo. Sugerencia: utiliza el menú desplegable de opciones del bloque "si".'
      20hr_farmer_stage9_2: A continuación, muéveme hacia el agujero y llénalo con DOS paladas de tierra, usando el bloque "llenar".
      20hr_farmer_stage9_3: Muéveme a la pila de tierra y dime cuantas paladas de eliminar debo dar usando la menor cantidad de bloques posible.
      20hr_farmer_stage9_4: '¿Puedes ayudarme a quitar las cuatro pilas de tierra? Sugerencia: usa un bloque repetir si puedes.'
      20hr_farmer_stage9_5: 'Ayúdame a llenar todos estos agujeros con 5 paladas de tierra. Sugerencia: puedes poner un bloque "repetir" dentro del bloque "mientras".'
      20hr_farmer_stage9_6: Quita todas las pilas de tierra, utilizando la menor cantidad de bloques que sea posible. Las nuevas opciones en el menú desplegable del bloque "mientras" me dicen si estoy parado en una pila o un agujero.
      20hr_farmer_stage9_7: '¡Vaya, encontré un agujero muy profundo! No sé cuantas paladas de tierra necesita. ¿Puedes escribir un programa que lo llene hasta que la tierra esté plana?'
      20hr_farmer_stage9_8: Ayúdame a llenar el agujero en el otro extremo del campo, con la menor cantidad posible de bloques.
      20hr_farmer_stage9_9: 'Ayúdame a quitar todas estas pilas de tierra. Trata de usar la menor cantidad de bloques que sea posible. Sugerencia: prueba usando un bloque "mientras".'
      20hr_maze_stage2_1: "¿Podrías ayudarme a atrapar al cerdo travieso?\nColoca dos bloques \"avanza\" juntos y pulsa en \"Ejecutar\" para ayudarme a llegar a él."
      20hr_maze_stage2_10: Vale, prueba el nuevo bloque "repetir hasta"; repetirá hasta que llegue al cerdo molesto.
      20hr_maze_stage2_11: Vale, una última vez para practicar; ¿se puede resolver esto usando solo 4 bloques?
      20hr_maze_stage2_12: Hola persona.  Yo zombi. Yo hambriento. Debo... llegar... al girasol... ¿Me puedes llevar hasta él con sólo 5 bloques?
      20hr_maze_stage2_13: Vale, esto es similar, pero un poco diferente. ¿Puedes hacerlo en sólo 5 bloques?
      20hr_maze_stage2_14: 'Usa el nuevo bloque "si" para dejarme decidir cuándo girar. Sugerencia: solo necesitas un bloque más, pero aprende cómo lo hicimos así puedes hacerlo tú solo la próxima vez.'
      20hr_maze_stage2_15: Vale, esto es como el último rompecabezas, pero tienes que recordar cómo usaste el bloque "si" y el bloque "repetir" juntos.
      20hr_maze_stage2_16: '¡Yo quiero girasol! Usa un bloque "si" para llevarme allí con la menor cantidad posible de bloques.'
      20hr_maze_stage2_17: Vale, vamos a hacer esto nuevamente para practicar; esto no es muy diferente, ¡pero ten cuidado con los masticadores!
      20hr_maze_stage2_18: Los bloques "si-sino" comprueban una condición, y luego hacen una cosa u otra. Para llevarme al girasol intenta usar este nuevo bloque.
      20hr_maze_stage2_19: Una práctica más del bloque "si-sino", ¿Puedes hacerlo bien en tu primer intento?
      20hr_maze_stage2_2: Este cerdo me está poniendo furioso. ¡Ayudame a encontrarlo!
      20hr_maze_stage2_20: '¿Puedes agregar solo 3 bloques para ayudarme a resolver un laberinto más complejo? Si lo haces bien, puedo caminar cualquier camino con curvas sin importar su longitud.'
      20hr_maze_stage2_3: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      20hr_maze_stage2_4: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      20hr_maze_stage2_5: Mantén la calma y ayúdame a encontrar el cerdo malo. O de lo contrario, ¡puedo enfadarme!
      20hr_maze_stage2_6: Hay una forma de llegar al tonto cerdo utilizando sólo 2 bloques. ¿Puedes encontrarla?
      20hr_maze_stage2_7: Intenta llevarme al intruso verde utilizando sólo tres bloques.
      20hr_maze_stage2_8: Ayúdame a desterrar este cerdito malo usando el menor número de bloques posible. Prueba usando más de un bloque "repetir veces".
      20hr_maze_stage2_9: 'Cuando un bloque es gris, significa que no puedes borrarlo. Resuelve este rompecabezas utilizando el bloque de "repetir" que se repite 3 veces. Intenta poner estos 3 bloques dentro del bloque gris de "repetir": mover, mover, girar.'
      4-5 Artist 1: 'Ayudarme a terminar de dibujar mi caja. (Cada línea tiene 300 píxeles de  largo) '
      4-5 Artist 10: "Presiona \"Ejecutar\" para probar el código. Entonces, repite\nlas veces necesarias para completar el dibujo. Los colores serán diferentes cada\nhora."
      4-5 Artist 11: Completa las líneas verdes. Las líneas son de 300 píxeles de largo y están separadas por 15 píxeles.
      4-5 Artist 2: "Pasa este código usando el bloque `repetir`\npara completar el cuadrado."
      4-5 Artist 3.5: Muy bien, tratar de averiguar qué pasaría si ejecutas este código (o presiona "Run" para probarlo). Luego, repitítelo la suficiente cantidad de veces para completar el dibujo. Los colores serán (probablemente) diferentes cada vez.
      4-5 Artist 3: "Este parterre de flores rectangular tiene un perímetro de 600.\nEl lado más largo tiene una longitud de 200. Dibuja el rectángulo."
      4-5 Artist 4: '¿Cuántos grados son en un círculo?  Crea bucles con los bloques para crear un círculo de colores.'
      4-5 Artist 5: "¿Qué podemos reemplazar \"???\" con hacer\nseguro que el zombi completa este dibujo usando el circuito proporcionado?"
      4-5 Artist 6: "Este triángulo equilátero tiene ángulos de\n60, 60 y 60 grados Cada lado tiene 200 píxeles. Completa el dibujo."
      4-5 Artist 7: Este triángulo rectángulo tiene ángulos de 30, 60 y 90 grados. La longitud de la hipotenusa es del doble de la altura de 100 píxeles. Completa el dibujo.
      4-5 Artist 8: "La línea media en un campo de fútbol es perpendicular al margen. Este campo tiene un perímetro de 800 píxeles y es 240 pixeles de largo. ¿Qué tan amplia es? Dibujar los límites y la línea media."
      4-5 Artist 9: dibuja la otra mitad para que el diseño sea simétrico. Los triángulos son equiláteros y tienen 50 píxeles de largo.
      4-5 Artist Assessment 1: 'Evaluación: Utilizar un bucle para dibujar el triángulo equilátero. Cada lado es de 300 píxeles.'
      4-5 Artist For Loops 1: Pon los números 1 a 10 en el ancho de los bloques y ejecuta el código.
      4-5 Artist For Loops 11: Completa el bloque "for" de manera que cuente 0, 20, 40, 60, 80 ... 200.
      4-5 Artist For Loops 12: '¿Qué sucedería si inviertes los números "desde" y "hasta"? Completa el bloque "para" para que cuente 200, 180, 160, 140, 120...0. '
      4-5 Artist For Loops 13: "Este diseño  inicia sin un bucle \"for\" y está tomando demasiados bloques! Use un bloque \"for\" para completar la espiral.\n Sugerencia: \nLa longitud de la última línea es de 250 píxeles."
      4-5 Artist For Loops 14: "Alguien comenzó el código, pero se dio cuenta que debe haber una manera más rápida! Utilice un bloque \"for\" para reemplazar los bloques y completar la espiral triangular. \nSugerencia:\nLa longitud de la última línea es de 300 píxeles."
      4-5 Artist For Loops 15: "Alguien comenzó el código, pero se dio cuenta que debe haber una manera más rápida! Utilice un bloque \"for\" para reemplazar los bloques y completar la espiral hexagonal.\nSugerencia: \nLa longitud de la última línea es de 200 píxeles."
      4-5 Artist For Loops 2: Este es un bloque "para". En lugar de escribir 1,2,3... 10, el bloque 'para' puede repetir los bloques en su interior y cuentan los números. Coloque el número 10 en la sección "a" del bloque "para".
      4-5 Artist For Loops 3: "¿Cómo podemos contar de 1 a 50?\nEditar el bloque \"for\" ."
      4-5 Artist For Loops 4: Completar el bloque "for" para que lo cuente de 1 a 10 de 1 por 1.
      4-5 Artist For Loops 6: "Dibujar cuadrados con lados de 50, 60, 70, 80 y 90 píxeles. \nUsted necesitará utilizar la función \"draw a square\" cinco veces."
      4-5 Artist For Loops 7: "Dibujar los mismos cuadros  pero utilice un bloque \"counter\" para cambiar los tamaños. \ncoloque  el bloque \"counter\" de la función \"draw a square\". \nSugerencia:\nEs en la categoría de las Variables."
      4-5 Artist For Loops 8: "Se puede completar el programa colocando los bloques dentro de un bloque \"for\" que se cuenta desde 10 a 200 de 10 por 10.\n Puedes encontrar el bloque \"for\" en la categoría de bucles."
      4-5 Artist For Loops 9: "Estos círculos son tamaño 5, 10, 15, 20, 25, 30 y 35. \nDibujar los círculos usando un bloque de \"for\"."
      4-5 Artist Free Draw 1: "¡Dibujo libre! Dibuja cualquier cosa que tu\nestés inspirado para crear."
      4-5 Artist Functions 1: Usa un bucle de repetición para dibujar este triángulo.
      4-5 Artist Functions 10a: Pon este código en la función 'dibujar un copo de nieve' y reemplaza el 50 con el parámetro 'tamaño'. La función ya esta lista para dibujar un copo de nieve de 100 píxeles.
      4-5 Artist Functions 10b: "Utiliza la función \"dibujar un copo de nieve\" para crear copos de diverso tamaño.  Consejo:\nEl primer copo de nieve es de un tamaño de 25 en longitud y cada copo de nieve es el doble del anterior."
      4-5 Artist Functions 11: "La  función \"draw a hexagon\" utiliza la función \"draw a triangle\". Completa la función del hexágono. \nPista:\nUn hexágono tiene 6 lados, y cada lado con 100 píxeles de largo"
      4-5 Artist Functions 12: "Completa la función 'draw waves'.  \nCada onda está compuesta por una onda superior y una inferior.  \n Sugerencia: \nDibujar 5 ondas azules."
      4-5 Artist Functions 13 Free play: "Aquí están algunas funciones para dibujar los planetas, las estrellas, los cohetes y los robots. \nUtiliza cualquier forma que te guste para hacer imagenes que puedas compartir con tus amigos."
      4-5 Artist Functions 14 Free play: "Aquí te ofrecemos varias funciones.  \nUtilizarlas como quiera dentro de uno o más bucles para hacer imagenes que puedas compartir con tus amigos. \nHaga clic en 'Run' para ver un ejemplo."
      4-5 Artist Functions 15 Assessment: "Evaluación: \nUtilice la función \"draw a square\" para crear los cuadros.  Los cuadros tienen 50, 100 y 150 píxeles."
      4-5 Artist Functions 2a: Ahora utiliza esos bloques en una nueva función llamada "dibuja un pequeño triángulo" y llámalo.
      4-5 Artist Functions 2b: Ahora cree una función llamada "dibuja un triangulo chico" usando los bloques proporcionados.
      4-5 Artist Functions 3: "Ahora crear las funciones \"dibuja un triangulo mediano\" y \"dibujar un triángulo grande\".\n La función \"dibuja un triangulo chico\" está hecha para ti. \nLos triángulos tienen longitudes laterales de 50 (chico), 100 (medio) y 150 (grande). "
      4-5 Artist Functions 4: "Esta nueva función de \"dibuja un triangulo\" tiene un parámetro y puede hacer el trabajo de las tres funciones de antes. \nDibujar los mismos triángulos usando esta nueva función."
      4-5 Artist Functions 5: '¿Puedes modificar la función "dibuja un triangulo" en una función "dibuja un cuadrado" y cambiar el dibujo?'
      4-5 Artist Functions 6: "Utilice \"dibuja un cuadrado\" y \"dibuja un triangulo\" para dibujar una casa. \n(Sugerencia:\nLos lados del cuadrado son de 200 píxeles)"
      4-5 Artist Functions 6b: Utilice "dibuja un cuadrado" y funciones de triángulo junto con otros bloques para crear una casa añadiéndolos a la funcion "dibuja una casa" y llamala.
      4-5 Artist Functions 7: Utilice la función "'dibuja una casa" para dibujar casas de 100 píxeles y 50 píxeles. Las dos casas están separadas por 50 píxeles.
      4-5 Artist Functions 8: La función de "dibuja una flor" tiene un parámetro que le permite ajustar la altura del tallo.  Establézcalo en 200 y vea qué pasa.
      4-5 Artist Functions 9: Dibujar estas 3 flores. La primera de una altura de 100 y la siguiente flor es siempre de 50 píxeles más que la altura de la anterior. Las flores también son separadas por 100 píxeles.
      4-5 Artist Patterns 1: |-
        ¿Puedes dibujar esta cuadro utilizando un bucle? Cada lado es de 20 píxeles de largo.
      4-5 Artist Patterns 10: "Este código dibuja dos filas de hexágonos -utilice un bucle de 4 veces para dibujar el panal entero. \nConsejo:\n Tendrás que retroceder 120 píxeles en su bucle para asegurarse de que el artista no dibuja fuera de la pantalla."
      4-5 Artist Patterns 11: "¿Cuántas veces necesitas bucle para dibujar un semicírculo.\nSugerencia: si hay 360 grados en un círculo y cada bucle se desplaza 3 grados, ¿cuántas veces necesitarías para que el bucle dibuje un círculo completo?"
      4-5 Artist Patterns 12: "Si copia ese bucle y girar a la izquierda en lugar de la derecha, ¿qué pasa? ¿Puedes repetir eso para dibujar esta ola?"
      4-5 Artist Patterns 13: "Ahora repitamos todo eso cuatro veces para crear este cuadro. Cuidado con las esquinas - ¡simplemente no puedes girar 90 grados! Si repetir 60 veces un giro de 3 grados hace un semicírculo, ¿cuál de estos bloques de código hará un cuarto de círculo para las esquinas?"
      4-5 Artist Patterns 2: Si usted pone su bucle cuadrado dentro de otro bucle, lo llamamos un bucle anidado. ¿Qué necesitas agregar a su bucle externo para asegurarse de que todos los 15 cuadrados se alinean al lado del otro?
      4-5 Artist Patterns 3: Ahora vamos a un nivel más profundo. Hemos anidado todo el bloque de código en otro bucle, pero tienes que poner al artista en su lugar para dibujar la línea siguiente. ¿Cuál de estos bloques de código puede usted colocar al final del bucle exterior para dibujar la red entera?
      4-5 Artist Patterns 4: "Este diamante tiene 50 píxeles lados y ángulos de 120 y 60 grados. \nUtiliza un bucle para dibujarlo."
      4-5 Artist Patterns 5.5: '¿Cuántas veces necesitas repetir este bloque para dibujar la red completa de diamantes?'
      4-5 Artist Patterns 5: "Repetimos para hacer una fila de 6 diamantes.\nObserve que hemos cambiado nuestro código del diamante para repetir 3 veces en lugar de 2 - ¿por qué crees que es asi?"
      4-5 Artist Patterns 6: '¿Cuántas veces necesitas repetir este bloque para dibujar la red completa de diamantes?'
      4-5 Artist Patterns 7: Vamos a modificar el código del último rompecabezas para hacer este patrón más complejo. ¿Observe cómo los diamantes se superponen ahora, intente cambiar el primer "jump backwards" de 100 a 50 (medio en la medida) - ahora hasta dónde debe ir el artista en el segundo "jump backwards"?
      4-5 Artist Patterns 8: Utilice un bucle para dibujar este hexágono con 40 píxeles lados y ángulos de 60 grados.
      4-5 Artist Patterns 9.5: "Ciclemos este código para dibujar dos filas de hexágonos.\nObserve cómo nuestra segunda fila se desplaza hacia la derecha."
      4-5 Artist Patterns 9: "Ahora repite que código 3 veces para dibujar toda la fila. \nSugerencia, cada hexágono es 80 píxeles de ancho desde los puntos más lejano de izquierda a derecha."
      4-5 Artist Patterns Free Play: Juego libre - prueba tu destreza en la fabricación de un patrón propio!
      4-5 Bee Conditionals - FC Test: La abeja sólo quiere néctar ahora. No todos los objetos son flores, así que mira debajo de TODAS LAS NUBES para verlo si esta escondiendo una flor. Si es así, puedes coger néctar.
      4-5 Bee Conditionals 1: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      4-5 Bee Conditionals 2 (copy 1): La abeja solo quiere néctar ahora mismo. Recuerda, no todos los objetos son flores, así que chequea, para solo recoger néctar de las flores.
      4-5 Bee Conditionals 2: "La abeja sólo quiere néctar ahora . \nRecuerde que no todos los objetos son flores, recoge néctar solamente de las flores."
      4-5 Bee Conditionals 3: "Ahora la abeja sólo quiere hacer miel. \nAsegúrese de que sólo hacer miel en el panal ."
      4-5 Bee Conditionals 4: El objeto desconocido es una flor o un panal de miel. Use el bloque "if/else" para recoger néctar si es una flor, sino haz miel (porque es un panal de abejas).
      4-5 Bee Conditionals 5: |-
        Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, sino haz miel (porque hay un panal de abejas).
      4-5 Bee Conditionals 6: "Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque if-else se combina con otro bloque if-else para crear un bloque if,else-if, else. Completa la solución para recoger la cantidad desconocida de néctar."
      4-5 Bee Conditionals 7: "Recuerda que las flores púrpura pueden tener 1, 2 ó 3 néctares. Completa la función \"revisar flor púrpura\" y úsala para recoger todo el néctar de las flores."
      4-5 Bee Conditionals 8: "Escribe una función dentro del bloque llamada \"revisar que la flor hace miel.\" Tu función debe comprobar cuánto néctar tiene la flor púrpura, recogerla, avanzar y luego hacer miel."
      4-5 Bee Conditionals Assessment 1: "Evaluación: Este código está errado.\nCompleta la función \"consigue néctar o produce miel\" entonces llámalo para recolectar todo el néctar y la miel. Recuerda que las rosas púrpuras pueden tener 3,2 o 1 néctares."
      4-5 Bee Debugging 1: "Estos bloques realmente me molestan. ¿Puedes arreglarlos?"
      4-5 Bee Debugging 10: Encuentra los errores y arréglalos.
      4-5 Bee Debugging 11: '¿Esto está contado correctamente?'
      4-5 Bee Debugging 2: Ayuda a la abeja a conseguir el néctar para hacer la miel.
      4-5 Bee Debugging 3: Encuentra los errores y arréglalos.
      4-5 Bee Debugging 4: Estos bloques no funcionan. ¿Cúal es el patrón?
      4-5 Bee Debugging 5: Algo no está bien aquí...
      4-5 Bee Debugging 6: "La flor morada tiene una diferente\ncantidad de néctar cada vez que ejecutas el rompecabezas. \\r\n\\r\nArregla los bloques para obtener\ntodo el néctar de la flor cada vez."
      4-5 Bee Debugging 7: La función le falta algo...
      4-5 Bee Debugging 8: Esta función está bien, pero no fue usada correctamente.
      4-5 Bee Debugging 9: '¿Por qué la abeja no está haciendo suficiente miel?'
      4-5 Bee Debugging Assessment 1: 'Evaluación: Arregla el código.'
      4-5 Bee Nested Loops 1: Utiliza un bucle para recolectar todo el néctar.
      4-5 Bee Nested Loops 2: 'Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. '
      4-5 Bee Nested Loops 3: Recolecta todo el néctar poniendo el código de arranque en un bucle anidado.
      4-5 Bee Nested Loops 4: "Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. "
      4-5 Bee Nested Loops 5: Recolecta todo el néctar creando un bucle anidado.
      4-5 Bee Nested Loops 6: Recolecta el néctar.
      4-5 Bee Nested Loops 7: Pon este bucle dentro de otro bucle para crear un bucle anidado y recolectar todo el néctar de las flores.
      4-5 Bee Nested Loops 8: 'Recolecta todo el néctar de estas flores anidando un bucle de tiempo. Reemplaza el bloque interno repetidas veces con un bucle de tiempo.'
      4-5 Bee Nested Loops 9: Recolecta todo el néctar de estas flores, anidando un bucle de tiempo dentro de un bloque de repetición.
      4-5 Bee Nested Loops Assessment 1: "** Evaluación: ** Reunir\ntodo el néctar y hacer toda la miel usando lazos."
      4-5 Bee Nested Loops Rows: "Reune todo el néctar de las filas de las flores!\nUtiliza un bucle anidado."
      4-5 Maze 1 (copy 1): Estimada persona. Yo zombie. Debe...llegar...al girasol.
      4-5 Maze 1: Estimada persona. Yo zombie. Debe...llegar...al girasol.
      4-5 Maze 10: '¿Podrías llegar al girasol usando solo cuatro bloques?'
      4-5 Maze 11: '¿Puedes llegar al girasol utilizando sólo seis bloques?'
      4-5 Maze 12: Ok, esto es ligeramente diferente. ¿Puedes hacerlos con sólo seis bloques?
      4-5 Maze 13: '¡ Tráeme al cerdo!'
      4-5 Maze 14: '¡Tráeme al cerdo! Utiliza la repetición hasta el bloque.'
      4-5 Maze 2 (copy 1): Lleva al zombie hasta el girasol, pero evade al ¡chomper!
      4-5 Maze 2: Lleva al zombie hasta el girasol, pero evade al ¡chomper!
      4-5 Maze 3 (copy 1): Debe...llegar... al girasol.
      4-5 Maze 3: Debe...llegar... al girasol.
      4-5 Maze 4 (copy 1): Intenta usar el bloque "repeat" para utilizar menos bloques.
      4-5 Maze 4: Intenta usar el bloque "repeat" para utilizar menos bloques.
      4-5 Maze 5 (copy 1): '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      4-5 Maze 5: '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      4-5 Maze 6 (copy 1): '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      4-5 Maze 6: '¡Llévame al girasol!'
      4-5 Maze 7: Estimada persona. Yo zombie. Debe...llegar...al girasol.
      4-5 Maze 8: "Utiliza el bloque \"repeat\" para llevar al zombie hasta el girasol. (¡Evadiendo a los chompers!)"
      4-5 Maze 9: "Ahora te presentamos el nuevo bloque llamado Repetir Hasta = \"Repeat Until\" \\r\n\\r\nEste crea un ciclo hasta que el Zombie llegue al girasol. \\r\n\\r\nEste nuevo bloque te ayuda a solucionar el ejercicio con menos bloques."
      4-5 Maze Assessment 1: "Evaluzción: LLega hasta el girasol.\n"
      4-5 Maze Conditionals 1: Utiliza el bloque repetir hasta para llevar al zombie hasta el girasol.
      4-5 Maze Conditionals 10: "¿Puedes agregar solo 3 bloques para ayudar al zombi a resolver un laberinto más complejo? \\r\n\\r\nSi lo haces bien, él puede caminar cualquier camino curvilíneo sin importar la longitud!"
      4-5 Maze Conditionals 2: Utiliza el bloque repetir hasta para llevar al zombie hasta el girasol.
      4-5 Maze Conditionals 3: "Usa el bloque `si` para ayudarme\na decidir cuándo girar. \\r\n"
      4-5 Maze Conditionals 4: "Ok, resuelve este como el último puzzle, pero necesitas recordar cómo usaste los bloques `si` y\n`repetir hasta` juntos."
      4-5 Maze Conditionals 5: "\"¡Quiero girasol!\" \\r\n\\r\nUsa\nuna declaración `si` para llevar al zombi al girasol con el menor número\nde bloques."
      4-5 Maze Conditionals 6: |-
        "¡Come girasol!"\r
        \r
        Usa
        una declaración `si` para llevar al zombi al girasol con el menor número
        de bloques.
      4-5 Maze Conditionals 7: "La solución a este rompecabezas\nno es muy diferente, ¡pero ten cuidado con los chompers!"
      4-5 Maze Conditionals 8: "El bloque `si/ no` verifica una\ncondición, entonces hace una cosa u otra. \\r\n\\r\nUsa este nuevo bloque\npara llevarme al girasol."
      4-5 Maze Conditionals 9: |-
        Practica un rompecabezas más con
        el bloque `si/no`!\r
        \r
        Síguelo con tu dedo para ver si puedes lograr
        en tu primer intento.
      4-5 Maze Conditionals Assessment 1: "** Evaluación: ** Usa\nun `repetir hasta` y un bloque`si/no` para llevarme al girasol usando la menor cantidad de\nbloques como sea posible."
      4-5 Nested Loops 1: 'Completa el código para dibujar estos triángulos. El primero es hecho por ti. Sugerencia: 3 triángulos en una rotación de 360 grados.'
      4-5 Nested Loops 10: Dibuja la última fila de estrellas de esta bandera, por medio de un bucle de bloques proporcionados. Las estrellas son de 50 píxeles, pero recuerda que las estrellas por si mismas son 30 píxeles de ancho.
      4-5 Nested Loops 11: '¿Puedes dibujar estas 10 plazas de esta acera, usando un bucle anidado? Cada cuadrado tiene 30 píxeles.'
      4-5 Nested Loops 12: '¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?'
      4-5 Nested Loops 2: 'Ahora anida este bucle dentro de otro bucle para dibujar 10 triángulos.  Esto se llama un bucle anidado.  Sugerencia: Todos 10 triángulos completan una rotación de 360 grados.  '
      4-5 Nested Loops 3: |-
        Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado. \r

      4-5 Nested Loops 5: has un bucle con el código dado para crear un molino de viento.
      4-5 Nested Loops 6: "¿Puedes dibujar un hexágono haciendo un enlace\ncon el código triangular?"
      4-5 Nested Loops 7: "con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuanto es 360 dividido por 10?)"
      4-5 Nested Loops 8: "Repite el bucle 6 veces. ¿Cuánto tienes que girar cada vez el bucle? (Pista: ¿Cuánto es 360 dividido por 6?)"
      4-5 Nested Loops 9: Dibujar los dientes en la boca del cocodrilo!
      4-5 Nested Loops Assessment 1: 'Usar un bucle anidado para completar el diseño.'
      4-5 While Loops 1: "Muéveme al hoyo y llénalo con\ndos paladas de tierra, usando el bloque `llenar`."
      4-5 While Loops 2: "Moverme a la pila de tierra y eliminar\neso con 5 palas de cuchara, usando el bloque `remover 1`."
      4-5 While Loops 3: "Use la menor cantidad de bloques posible para completar\neste rompecabezas! \\r\n\\r\nMuéveme al montón y quita todo el sucio, luego muévete\nal agujero y llénalo completamente."
      4-5 While Loops 4: "Wow, mira eso! \\r\n\\r\nYo no\nse cuántas palas de tierra necesita este hoyo. \\r\n¿Puedes tu escribir un programa\nque siga usando el bloque `llenar` hasta que el suelo esté parejo?\n  "
      4-5 While Loops 5: Wow, ahora hay dos agujeros  muy profundos. ¿Puedes escribir un programa que llene los dos hasta que el suelo este parejo?
      4-5 While Loops 6: Wow, ahora hay un monton de tierra! ¿Puedes escribir un programa que quite todo eso para que el suelo quede parejo?
      4-5 While Loops 7: '¡Wow, ahora hay tres montones de tierra! ¿Puedes escribir un programa que elimine cada uno de ellos hasta que la tierre quede plana?'
      4-5 While Loops 8: " Hay un hueco muy profundo y mucha tierra amontonada. ¿Cúantas paladas son necesarias para aplanar la tierra? Sugerencia: Utiliza el circuito de bloque \"while\" para ambas."
      4-5 While Loops Assessment 1: Existen un montón de huecos y pilotes. Ayúdame a llenarlos y removerlos para aplanar la tierra.
      'AllTheThings: Pixelation - Lesson 14 - Make the Letter A': 'Haz una letra ''A'' de 3x5. El widget está configurado con las dimensiones incorrectas. Tu primera tarea es establecer el segundo byte en el código binario de 8 bits para 5: 0000 0101. Luego comience a ingresar datos de píxeles.'
      'AllTheThings: Pixelation - Lesson 15 - Color Shades 4x4': 'Comenzamos con la imagen 4x4 que Maddie creó en el video. Su tarea es llenar una cuadrícula de 4x4 con colores utilizando 12 bits por píxel. Estos son los requisitos: Fila 1- llenar con tonos de rojo. Fila 2: tonos de verde. Fila 3 - tonos de azul. Fila 4 - tonos de gris.'
      'AllTheThings: Pixelation - Lesson 15 - Complete 3-bit color': Comenzamos con la imagen de 4x2 que Maddie estaba creando, pero hemos omitido los dos últimos cuadrados. Termine la imagen descubriendo los dos colores que faltan y codifíquelos.
      App Lab test: prueba
      Applab AllTheThings ResourcesTab AllResources: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      Applab AllTheThings ResourcesTab MapReference: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      Applab AllTheThings ResourcesTab ReferenceLinks: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      Applab test: Este nivel esta disponible. Es solo para pruebas!
      Artist - Nested Loops 1: 'Completa el código para dibujar estos triángulos. El primero es hecho por ti. Sugerencia: 3 triángulos en una rotación de 360 grados.'
      Artist - Nested Loops 10: Dibuja la última fila de estrellas de esta bandera, por medio de un bucle de bloques proporcionados. Las estrellas son de 50 píxeles, pero recuerda que las estrellas por si mismas son 30 píxeles de ancho.
      Artist - Nested Loops 11: '¿Puedes dibujar estas 10 plazas de esta acera, usando un bucle anidado? Cada cuadrado tiene 30 píxeles.'
      Artist - Nested Loops 12: '¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?'
      Artist - Nested Loops 5: has un bucle con el código dado para crear un molino de viento.
      Artist - Nested Loops 6: "¿Puedes dibujar un hexágono haciendo un enlace\ncon el código triangular?"
      Artist - Nested Loops 9: Dibujar los dientes en la boca del cocodrilo!
      Artist - Nested Loops Assessment 1: Utiliza un circuito anidado para completar el diseño.
      Artist Autorun Test: Usa el bloque "repetir" para dibujar estos 3 cuadrados.
      Artist Inspiration: "Inspiración de juego libre: Ahora has aprendido todo lo que necesitas saber para hacer un patrón como este! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. \\r \\r quieres saber cómo se hizo nuestro patron de inspiración? Visita https://studio.code.org/c/106387604 para la solución."
      Auto Open Function Editor: '¡Puedes llamar una función dentro de otra función! Utilizando tu función "shape" como base, crea 3 formas de casa cada una de 20 píxeles mas larga que la anterior, empezando con 50 píxeles de longitud. Usar un circuito de contar puede ser útil.'
      Bee Recommended Blocks test: '¡ Las flores moradas pueden tener un tipo de néctar de 1 ó 0, pero tu no sabes cuál !. Ten cuidado de no recolectar el néctar de una flor morada sin  néctar. Revisa si el valor del néctar es igual a 1 usando el bloque “if”. '
      Bergeron Robot Maze1: "¿Me puedes ayudar a atrapar al cerdo malo? Apila un\npar de bloques \"avanzar\" juntos y presiona \"Ejecutar\". "
      Big Game Collision 3: Usa la formula de distancia, para que la funcion de distancia regrese la distancia entre las coordenadas del centro del jugardor (px, py) y del centro de otro sprinte (cx, cy).
      Brad Spooky House Copy: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      Brad Spooky House: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      Building a Foundation Assessment: "Construye una piramide de tres niveles,\n¡No hay mas instrucciones, simplemente juega con las piezas hasta lograrlo!"
      Busy Bee 2: '¡Esta abeja tiene mucho trabajo por hacer! ¿Puedes encontrar algún patrón que se pueda utilizar para simplificar el código?'
      Busy Bee: '¡Esta abeja tiene mucho trabajo por hacer! ¿Puedes encontrar algún patrón que se pueda utilizar para simplificar el código?'
      C3-Farmer While Loops 5: Wow, ahora hay dos agujeros  muy profundos. ¿Puedes escribir un programa que llene los dos hasta que el suelo este parejo?
      C3-Farmer While Loops 6: Wow, ahora hay un monton de tierra! ¿Puedes escribir un programa que quite todo eso para que el suelo quede parejo?
      C3-Farmer While Loops 7: '¡Wow, ahora hay tres montones de tierra! ¿Puedes escribir un programa que elimine cada uno de ellos hasta que la tierre quede plana?'
      C3-Farmer While Loops Assessment 1: Existen un montón de huecos y pilotes. Ayúdame a llenarlos y removerlos para aplanar la tierra.
      CDEF_debugging_flappy2: '¿Por qué no funciona este juego?'
      CSD U5 black white images pixelation 5: Dibuja cualquier cosa
      CSD U5 black white images pixelation 5_2018: Dibuja cualquier cosa
      CSD U5 black white images pixelation 5_2019: Dibuja cualquier cosa
      CSPU5_U3 - Canvas - freePlay: Extiende la funcionalidad de uno de los efectos o crea uno completamente nuevo (haz clic para ver instrucciones completas)
      CSPU5_U3 - Canvas - freePlay_2018: Extiende la funcionalidad de uno de los efectos o crea uno completamente nuevo (haz clic para ver instrucciones completas)
      CSPU5_U3 - Canvas - freePlay_2019: Extiende la funcionalidad de uno de los efectos o crea uno completamente nuevo (haz clic para ver instrucciones completas)
      CSPU5_U3 - Keys - Final Image Scroller: Actualice el desplazamiento de la imagen para responder a los botones y presionar las teclas. (Haga clic para ver instrucciones completas)
      Course 2 Bee Loops 1: "Hola, soy una abeja. ¿Puedes ayudarme a recolectar \nel néctar de estas flores? "
      Course 2 Maze Loops 1: '¿Puedes llevarme hasta el cerdo usando 5 bloques?'
      Course 4 2: La abeja solo quiere néctar ahora mismo. Recuerda, no todos los objetos son flores, así que chequea, para solo recoger néctar de las flores.
      Course 4 Artist 1: 'Ayúdame a terminar de dibujar mi caja. (Cada línea es de 200 píxeles de largo)'
      Course 4 Artist 10: |-
        Haz clic pra ver las sugerencias otra vez!\r
        \r
        Aqui
        esta el codigo para una interesante figura. Que pasa cuando lo repites muchas veces, torneado entre cada iteraccion? nota que el giro en esta figura agrega mas de 420 grados, el cual significa que cuando el artista termino de dibujar, vera otra direccion difente que cuando empezo. Esa nueva direccion es exacta 60 grados a la derecha de cuando comenzo.
      Course 4 Artist 11: '¡Ahora, un desafío! Aquí hay un diseño que solamente usa bloques que ya te hemos mostrado. ¿Puedes averiguar cómo crearlo nuevamente sin información extra? Sugerencia: Tantea, usa ensayo y error. No se espera que esté perfecto la primera vez.'
      Course 4 Artist 12: |-
        ¿Quieres un segundo vistazo al diseño de inspiración o los consejos?  Haga clic aquí! \r \r si lo prefieres, ¡crea un diseño propio!
      Course 4 Artist 13: '¿Aún jugando? aquí hay un lienzo en blanco donde usted podrá diseñar lo que quiera!'
      Course 4 Artist 2: '¿Puedes enlazar este código para que dibuje de gris el cuadrado?'
      Course 4 Artist 20: '¿Aún jugando? aquí hay un lienzo en blanco donde usted podrá crear lo que quiera!'
      Course 4 Artist 3: Muy bien, trat de averiguar que sucede si ejecutas este código (o presionas "Run" para comprobarlo). Entonces repítelo varias veces hasta completar el dibujo.
      Course 4 Artist 4: '¿Cúantos grados tiene un círculo? Rellena el bloque de repetición con ese número para crear un círculo de colores.'
      Course 4 Artist 5: 'Dibuja la otra mitad de este diseño de tal manera que sea simétrico. Los triángulos son equiláteros y tienen 50 píxeles de longitud.'
      Course 4 Artist 6: "Completa el código para dibujar estos triángulos.\nSugerencia: 3 triángulos en una rotación de 360 grados."
      Course 4 Artist 7: 'Ahora anida este circuito dentro de otro circuito para dibujar 3 triángulos. Esto es llamado un circuito anidado. Sugerencia: Todos los 10 triángulos completan una rotación de 360 grados.'
      Course 4 Artist 8: Dibuje este sol enlazando este bloque de código íntegramente 12 veces.
      Course 4 Artist 8a: '¿Recuerdas esta forma?  Ahora vamos a dejarte construir la sin darte ningún bloques para empezar! \r sugerencia: hay 3 triángulos dentro de la rotación de 360 grados... ¿Cuántas veces 3 va en 360?'
      Course 4 Artist 9: "Continúe con este diseño 10 veces y asegúrese que cada forma que dibuja apunte hacia adentro.  Aquí hay una sugerencia cuánto más debe apuntar: ¿Cuánto es 360 dividido entre 10?"
      Course 4 Artist Binary 1: "Aquí hay una función que toma una cadena binaria de 0 y 1 e instruye al artista a que gire de izquierda a derecha, de arriba hacia abajo, llenando  los cuadrados cuando ve 1 e ignorándolos cuando ve 0. Corre este código para ver como el artista usa el binario para dibujar el patrón."
      Course 4 Artist Binary 1a: "Aquí hay una función que toma una cadena binaria de 0 y 1 e instruye al artista a que gire de izquierda a derecha, de arriba hacia abajo, llenando  los cuadrados cuando ve 1 e ignorándolos cuando ve 0. Corre este código para ver como el artista usa el binario para dibujar el patrón."
      Course 4 Artist Binary 2: '¿Cuántas de estas secuencias binarias podría enlazar 8 veces para dibujar esta imagen?'
      Course 4 Artist Binary 3: '¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?'
      Course 4 Artist Binary 4: Cada secuencia binaria representa una fila de esta figura.  ¿Puede re acomodarla de tal manera que dibuje una cara con una sonrisa en lugar de una cara de aspecto fruncido?
      Course 4 Artist Binary 5: '¿Cual de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?'
      Course 4 Artist Binary 6: '¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?'
      Course 4 Artist Binary 7: Termine este dibujo.
      Course 4 Artist Binary Free Play 2: 'Juego Libre: Aquí tiene un lienzo de alta resolución para dibujar - 16 bits por 16 bits!'
      Course 4 Artist Binary Free Play 2a: |-
        Aquí hay un lienzo con mejor resolución para pintar - 16 pixeles por 16 pixeles!\r
        \r
        ¿Ves lo que pasa cuando empezamos a ser creativos con los bits?
      Course 4 Artist Binary Free Play 2b: Haga clic aquí para ver sugerencias.
      Course 4 Artist Binary Free Play: 'Juego Gratis: Dibuje lo que quiera con binarios!'
      Course 4 Artist Binary pre1: Binario es una forma de representar información mediante sólo dos opciones.  Aquí, vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1).  \r \r Le hemos provisto con una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados.  ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      Course 4 Artist Binary ryan: "Binario es una forma de representar información mediante sólo dos opciones.  Aquí, vamos a usar las opciones \"apagado\" (representado por el número 0) y \"encendido\" (representado por el número 1).  \\r \\r Le hemos provisto con una red de \"píxeles\" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados.  ¿Puede hacer que el artista pinte \"01010101\" en binario en la primera fila?"
      Course 4 Artist For  Functions 10: Elevemos un poco el nivel de dificultad ¿Puede dibujar una forma de estrella usando el la función "Dibuje una Línea Cuadrada"? ¡Buena suerte!
      Course 4 Artist For  Functions 11: Elevemos un poco el nivel de dificultad ¿Puede dibujar una forma de estrella usando el la función "Dibuje una Línea Cuadrada"? ¡Buena suerte!
      Course 4 Artist For Loops 1: 'Dibuje este triángulo que tiene un tamaño de 50 pixeles.  Sugerencia: Use un bloque de repetición.'
      Course 4 Artist For Loops 10: 'Juego Gratis: Diviértase dibujando lo que le guste con los bloques que ha aprendido a usar'
      Course 4 Artist For Loops 11: '¿Recuerdas cuando usamos una variable para controlar el número de lados de una forma? Este patrón empieza con un triángulo y agrega un cada lado a la vez hasta que dibuja un decágono (10 lados). cada lado debe ser de 100 píxeles de largo. Sugerencia: 360 dividido por el número de lados de una forma, es el número de grados que necesitarás para girar.'
      Course 4 Artist For Loops 11a: |-
        Vamos a poner todo junto!  Usando tu conocimiento de "ciclos for" y del "contador", crear este dibujo donde cada forma tiene dos partes más que el anterior.  Asegúrate de que cada lado sea 10 veces mas largo que el número de lados del polígono. \r \r muy poco del código se ha proporcionado para ti.
      Course 4 Artist For Loops 12: 'Eso se ve muy bien, pero ahora me gustaría que dibuje cada forma junto a la otra.  Esta vez, cada lado es de 20 pixeles.  Use un bloque de salto para saltar 20 pixeles adelante después de cada forma. '
      Course 4 Artist For Loops 13: '¡Hmmm, esas formas están creciendo a cada instante! ¿No solucionamos este problema con las variables? ¿Cómo podemos usar la variable de contar para hacer lados mas pequenos, ya que hay mas de ellos? En lugar de mover hacia adelante estableciendo una cantidad, tratemos de avanzar (100/counter) píxeles.'
      Course 4 Artist For Loops 14: Si girara un poco más o menos de lo que normalmente haría para una forma, crearía un efecto más nítido.  Intente girar 89 grados para crear esta espiral cuadrada torcida.
      Course 4 Artist For Loops 15: 'Juego Gratis: Intente hacer algunos dibujos propios usando Para Vueltas.  Hemos añadido también algunas variables genéricas para su uso.'
      Course 4 Artist For Loops 2: 'He puesto un código para dibujar un triángulo dentro de una iteración que cuenta de 50 a 100 por 10.  Revise cómo he creado el código y presione "Ejecutar" cuando esté listo para verlo en acción. '
      Course 4 Artist For Loops 3: 'El triángulo más pequeño tiene 20 píxeles de lado, el más grande tiene 200 píxeles de lado y cada triángulo es 20 píxeles más grande que el anterior. Actualiza el bucle "for" para dibujar estos triángulos.'
      Course 4 Artist For Loops 4: 'Usa un bucle "FOR" para dibujar estos cuadrados. Empiezan a 15 píxeles de largo, el más grande es de 300 píxeles de largos, y cada cuadrado es 15 píxeles más grande que el anterior. Te he dado casi todo el código que vas a necesitar - haz perdido un bloque, ¿cuál es?'
      Course 4 Artist For Loops 5: '¡Buen trabajo en el último rompecabezas! Usemos ese bloque variable "counter" de nuevo para dibujar esta asombrosa pintura.'
      Course 4 Artist For Loops 6: '¡Juego gratis! Intenta usando un circuito para dibujar un patrón de forma creciente con tu propio diseño.'
      Course 4 Artist For Loops 6a: Haz 3 pequeños cambios al código desde el último nivel para obtener esto!
      Course 4 Artist For Loops 7: Que pasa si eliminas el "repeat 3" de este algoritmo, manteniendo los bloques "move" y "turn" en el circuito. En este triángulo en espiral, cada lado es 20 píxeles mas largo que el anterior.
      Course 4 Artist For Loops 8: |-
        La línea mas pequeña de este espiral cuadrado es 10, el mas largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      Course 4 Artist For Loops 8a: La línea mas pequeña de este espiral cuadrado es 10, el mas largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      Course 4 Artist For Loops 9: '¿Puedes hacer un espiral? avanza de 1 a 75 píxeles, incrementando de  1 a 1 píxeles.'
      Course 4 Artist For Loops Challenge: "Con todas las cosas que ha aprendido, podrías decir como se hizo esta imagen?\\r\n\\r\nNecesita una ayuda? Presione aquí."
      Course 4 Artist For Loops Challenge_a: |-
        Puedes descubrir como utilizar las cosas que has aprendido para crear esta imagen\r
        \r
        Necesitas una pista? Presiona aquí.
      Course 4 Artist For Loops inspire: |-
        Inspiración de juego libre: Ahora has aprendido todo lo que necesitas saber para hacer un patrón como este! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. \r \r quieres saber cómo se hizo nuestro patron de inspiración? Visita https://studio.code.org/c/106387604 para la solución.
      Course 4 Artist Functions 1: '¿Puedes dibujar en cuadrado que tiene 100 píxeles de longitud, utilizando un circuito?'
      Course 4 Artist Functions 10: '¿Cúal bloque necesitas agregar para conseguir que el triángulo se ubique en la cima del cuadrado?'
      Course 4 Artist Functions 11: Mira este código que dibuja un cubo - ¿Puedes moverlo en una función llamada "Draw a cube"?
      Course 4 Artist Functions 12.1: Creemos una función llamada "dibujar un octágono 20" que dibuja un octágono donde cada lado es de 20 píxeles de largo.
      Course 4 Artist Functions 12: La función circuito cudrado para dibujar una línea
      Course 4 Artist Functions 13.1: |-
        Ahora, vamos a hacer una función llamada "salto para arriba a la derecha" que  mueve el artista a la derecha superior del Octógono que usted acaba de dibujar por lo que podemos terminar este toque patrón. \r \r: para usted llegar a la esquina superior derecha, tratar de saltar en un patrón que hace apenas 3/8 del octógono.
      Course 4 Artist Functions 13: Mira, tenemos una nueva función llamada "draw a line of squares". No dudes en echar un vistazo dentro de la función de bloque para ver como se construye. Haz click en "Run" cuando  estés listo para el siguiente rompezabezas.
      Course 4 Artist Functions 14.1: Ahora, vamos a hacer una función llamada "saltar arriba a la derecha" que mueve el artista a la parte superior derecha del Octógono que usted acaba de dibujar por lo que podemos terminar este patrón.
      Course 4 Artist Functions 14: '¡Estás haciéndolo muy bien! Usemos tu nueva función "Draw a line of squares" para dibujar un cuadrado. Recuerda que cada cuadrado es de 40 píxeles de longitud.'
      Course 4 Artist Functions 15: '¡Demos un pequeño paso hacia adelante! ¿Puedes dibujar una forma de estrella usando la función "dibuja una línea de cuadrados"? ¡Buena Suerte! Sugerencia: Debes girar a 144 grados'
      Course 4 Artist Functions 2: '¿Puedes dibujar 3 cuadrados de 20 píxeles separado uno del otro? Sugerencia: cada cuadrado es de medida 100 píxeles '
      Course 4 Artist Functions 3: 'Usando la función de bloque "dibuja un cuadrado" ¿Puedes dibujar este dibujo? Sugerencia: cada cuadrado debe ser de 120 píxeles entre uno y otro.'
      Course 4 Artist Functions 4: '¿Estás listo para crear tu propio "Function Block"? Haz click en el bloque "functions" en la caja de herramientas, donde dice "draw a triangle", entonces crea un triángulo como lo has hecho con anterioridad con los bloques acción y circuitos. Haz click en guardar y cerrar en la esquina superior derecha . Sugerencia: Crea un triángulo que tiene 100 píxeles de longitud. ¡Buena suerte!'
      Course 4 Artist Functions 5 OLD: Tratemos de usar nuestras dos funciones para dibujar una casa - ¿Qué se necesita arreglar en este código para dibujar la casa correctamente?
      Course 4 Artist Functions 5: 'Usando la función de bloque "dibuja un cuadrado" ¿Puedes dibujar este dibujo? Sugerencia: cada cuadrado debe ser de 120 píxeles entre uno y otro.'
      Course 4 Artist Functions 6: '¿Cúal bloque necesitas agregar para conseguir que el triángulo se ubique en la cima del cuadrado?'
      Course 4 Artist Functions 7: '¿Puedes dibujar una línea de cuadrados usando la función de cuadrado? Cada cuadrado es 40 píxeles de longutud.'
      Course 4 Artist Functions 8: '¿Le estás agarrando el tiro de como usar la función de los bloques? Modifiquemos este cuadrado de medida 200 píxeles. Sugerencia: haz click en "edit" para cambiar el tamaño del "draw a square" en la función editor. Recuerda hacer click en "guardar y cerrar" para salir de la función editor.'
      Course 4 Artist Functions 9: Te hemos dado la mayor parte del código para crear una función. Sin embargo parece que falta algo. ¿Puedes completar esta función de bloques?
      Course 4 Artist Functions Inspiration: Click aquí para ver las sugerencias nuevamente.
      Course 4 Artist Functions challenge: Click aquí para ver las sugerencias nuevamente.
      Course 4 Artist Functions inspire: 'Inspiración de juego libre: Ahora has aprendido todo lo que necesitas saber para hacer un patrón como este! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. \r \r quieres saber cómo se hizo nuestro patron de inspiración? Visita https://studio.code.org/c/106387604 para la solución.'
      Course 4 Artist Inspire: |-
        ¿Quieres un segundo vistazo al diseño de inspiración o los consejos?  Haga clic aquí! \r \r si lo prefieres, ¡crea un diseño propio!
      Course 4 Artist Params 1: Editemos una función que dibuje un cuadrado de 50 píxeles cada lado
      Course 4 Artist Params 10: '¡Puedes llamar una función dentro de otra función! Utilizando tu función "shape" como base, crea 3 formas de casa cada una de 20 píxeles mas larga que la anterior, empezando con 50 píxeles de longitud. Usar un circuito de contar puede ser útil.'
      Course 4 Artist Params 12: Utilice la función "pinwheel" (molinete) para dibujar cada una de estas formas. La longitud del lado de cada imagen es 50.
      Course 4 Artist Params 13: 'Freeplay: Aquí están las funciones que has escrito y un algunas más para que juegues. Dibuja algo impresionante!'
      Course 4 Artist Params 3: 'Impresionante, ¿puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es 25 píxeles de largo, el segundo es de 50, y el tercero es de 75. '
      Course 4 Artist Params 4: '¿Puede agregar una nueva función llamada cuadrado? También debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez dibuja 3 cuadrados, 25, 50 y 75 píxeles de lado, aparte uno de 100 píxeles.'
      Course 4 Artist Params 5: 'Usa tus dos funciones para dibujar esta imagen. Para hacer esto más fácil, usa un bucle con un parámetro de "contador".'
      Course 4 Artist Params 6: "Vamos a editar esta función \"dibujar una forma\".\nYa tiene un parámetro de \"longitud\". Ahora, vamos  a editar la función para añadir un parámetro \"lados\". Recuerda que el ángulo de una forma determinada es 360 dividido por la cantidad de lados que tiene. Sugerencia: las longitudes para cada forma son: el triángulo 100 píxeles, el hexágono es 25 píxeles y el cuadrado es de 50 píxeles. "
      Course 4 Artist Params 7: 'Puedes dibujar estas formas rellenando el "???" El cuadrado y triángulo son 100 píxeles de tamaño mientras que el hexágono es 75 píxeles de tamaño. '
      Course 4 Artist Params 8: "¿Puedes calcular cómo dibujar esta forma? \nAquí hay una pista, crea una nueva función con 6 lados llamada hexágono. "
      Course 4 Artist Params 9: '¿Recuerdas cuando usamos el bucle con Contador pero habíamos quitado un bucle dentro? Vamos a divertirnos y usa la función "dibujar una forma" con parámetros de "lados" y "longitud". ¿Puede volver a crear estas formas? El contador de cuadrados debe ser 5/100/5, el contador del triángulo debe ser 10/100/10 y el hexágono es 2/100/2.'
      Course 4 Artist Var 9: 'Aquí está el algoritmo para dibujar un triángulo, modificarlo para que utilice la variable "lados". Reemplazar el número 3 con la variable "lados". Sugerencia: Recuerda que debes utilizar el bloque de "set sides to".'
      Course 4 Artist Vars 1: "¿Puedes ayudarme a dibujar un triángulo? Es de 100 píxeles de largo en cada lado."
      Course 4 Artist Vars 10: Aquí encontrarás un algoritmo que dibuja un triángulo de pequeños triángulos. ¿Podrías modificarlo usando la variable de "sides" para dibujar cada triángulo? Observa a través del código y cada vez que veas el número 3, reemplázalo con tu variable "sides". Recuerda el uso del bloque "set sides".
      Course 4 Artist Vars 11: Aquí está el mismo algoritmo que ideamos con el último rompecabezas - ¿Qué debes establecer en la variable "sides" para dibujar este dibujo de cuadrados?
      Course 4 Artist Vars 12: Vamos a poner la variable "sides" en 5. Si agrego mas lados a este algoritmo, ¡mas grande es el patrón entero!. Agreguemos una nueva variable llamada longitud "lengh" y úsala si tienes que avanzar "move forward". Establece la variable longitud "lengh" a 75 para esta figura.
      Course 4 Artist Vars 13: "Cuando una forma tiene varios lados, cada lado necesita ser más corto Si tu quieres el patrón completo para ajustar la pantalla. \n\\r\nVamos a recrear el algoritmo desde este increíble patrón, pero en lugar de poner manualmente la variable de \"longitud\", vamos a usar un bloque de matemáticas con la variable de \"lados\" dentro para asegurarse que cada forma se ajusta correctamente. ¿El perímetro de cada polígono es de 300 píxeles.\\r\nNecesitas algunos consejos?  Haga clic aquí."
      Course 4 Artist Vars 14: |-
        Juego Gratis: revísalo, ahora tu algoritmo está anidado dentro de otro circuito. Experimenta cambiando los valores de tus dos variables para dibujar patrones asombrosos.
      Course 4 Artist Vars 2: En lugar de avanzar por 100 "moving forward by 100", el bloque mover "move" ahora referencia la variable longitud "lengh". ¿ Podrías establecer la longitud "lengh" a 150 para dibujar este nuevo triángulo?.
      Course 4 Artist Vars 3: 'Aquí es un bucle que dibuja un cuadrado, pero algo esta mal. ¿Puedes arreglarlo para que utiliza la variable "largo" para averiguar que tan largo debe se cada lado? '
      Course 4 Artist Vars 4: Ahora quiero hacer un rectángulo que es dos veces tan alto como ancha. Tenemos una variable llamada "ancho" que se encuentra a 100. ¿Puedes usar los bloques de matemáticas para completar el código?
      Course 4 Artist Vars 5: Utiliza las variable "caras" para controlar cuántas veces el bucle se repite.
      Course 4 Artist Vars 6: |-
        Aquí hay un código que puede dibujar cualquier polígono regular. Hay una nueva variable llamada lados que se inicializa a 4. ¿Puedes usar la variable lados (junto con el bloque de matemáticas) para activar la cantidad correcta independientemente de cuantos lados hay en el polígono?\r
        \r
        ¡Click aquí para regresar a la pista!
      Course 4 Artist Vars 7: |-
        Utiliza lo que aprendiste en el rompecabezas anterior para crear el hexagono usando la variable "lados"\r
        \r
        Ve como puedes cambiar solo una varable para dibujar un traingulo, cuadrado, pentagono, o octagono?
      Course 4 Artist Vars 8: 'Juego libre: Experimento con el número de lados de esta forma. ¿Puedes cambiar el algoritmo de modo que el tamaño total de la forma sigue siendo el mismo, no importa cuántos lados tengá? Consejo: Tendrás que usar tus bloques de matemáticas (360 dividido por "caras" en dos lugares esta vez) '
      Course 4 Artist Vars 9: Modificar este algoritmo para utilizar la variable "caras" en lugar de un número fijo para dibujar un triángulo. Reemplazar el número 3 con la variable "caras" y utilizar el bloque de "establecer lados".
      Course 4 Bee 1: "La abeja no puede decir si se trata de una flor o un panal de miel. Compruebe primero si se trata de una flor o un panal de abejas y entonces sólo recogen néctar de si es una flor. "
      Course 4 Bee 2: Utiliza el bloque "Si/de lo contratio" para revisar cada objeto para ver si es una flor o un panal...de lo contrario, haz miel!
      Course 4 Bee 3: El objeto desconocido es una flor o un panal de miel. Ahora utiliza el bloque "Si/de lo contrario" para colectar néctar, "Si" si es una flor, "de lo contrario" haz miel (porque entonces sería un panal).
      Course 4 Bee 4: Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque Si-de lo contrario es combinado con otro bloque bloque Si/de lo contrario para crear una sentencia "Si/de lo contrario-Si/de lo contrario". Completa la solución para recoger la cantidad desconocida de néctar.
      Course 4 Bee 5: Esta flor púrpura puede tener 3, 2 o 1 néctares. Agrega un bloque si-de lo contrario para crear un bloque si, de lo contrario-si, de lo contrario. Completa la solución para recolectar la cantidad desconocida de néctar.
      Course 4 Bee 6: Esta flor púrpura puede tener 3, 2 o 1 néctares. Crea un bloque si, de lo contrario-si, de lo contrario para recoger la cantidad desconocida de néctar.
      Course 4 Bee 7: Aprovecha todo lo que has aprendido hasta ahora para recolectar todo el néctar. La flor púrpura puede tener 3, 2 o 1 néctares.
      Course 4 Bee For Loops 1: Utiliza un bucle para recolectar el néctar de cada flor.
      Course 4 Bee For Loops 10: Si tu ciclo es regresivo, se resta el incremento de la variable contador en cada bucle. Lo que debería ser un incremento a recoger néctar 9, luego 6 y 3 ?
      Course 4 Bee For Loops 11: '¿Que hay de malo en este ciclo? A ver si puedes arreglarlo y hacer que las abejas recolecten el néctar.'
      Course 4 Bee For Loops 2: Aquí es un nuevo tipo de lazo, llamado el bucle "for" . Este particular bucle for contará de 1 a 5 por 1 y ejecutar el contenido del bucle cada vez cuenta. Ayudar a la abeja el néctar.
      Course 4 Bee For Loops 3: Puede resolver este problema utilizando un bucle para contar del 1 al 3 por 1. Ahora vamos a obtener un néctar!
      Course 4 Bee For Loops 4: Recoge todo el néctar de las flores. Me pregunto si hay una manera más fácil de hacer esto...
      Course 4 Bee For Loops 5: 'Ah, el bucle esto hace mucho más fácil! Usando la variable "contador" de la de circuito a circuito el "obtener néctar" bloquea el mismo número de veces que el bucle. Wow! Eso es un montón de bucles. Todo el código que necesitas, echa un vistazo a cómo es juntar a continuación, haga clic en ejecutar y ver cómo funciona. '
      Course 4 Bee For Loops 6: También puedes utilizar un bucle a contar hacia atrás. Trata de recoger este néctar por la cuenta regresiva del 5 al 1 por 1.
      Course 4 Bee For Loops 7: Usa tu variable "contador" de bucle para el controlar que tan lejos debe moverse horizontalmente.
      Course 4 Bee For Loops 8: '¿Puedes utilizar la variable de bucle para controlar el movimiento y la recolección del néctar?'
      Course 4 Bee For Loops 9: El último número en tu bucle for se llama "incremento", y cada vez que se ejecuta el bucle la variable contador cambia por el incremento, Trata de recoger la flores usando un incremento de 2.
      Course 4 Bee Loops 5 NEW: Aquí hay tres flores. ¿Puedes encontrar el patrón de instrucciones que se repita 3 veces para recoger el néctar con el menor número de bloques?
      Course 4 Bee Loops 5a NEW: Ahora, utiliza ciclos para ayudar a la abeja a recoger todo el néctar en su camino hacia el panal con tan pocos bloques como sea posible.  Al llegar allí, no olvides hacer la miel!
      Course 4 Bee Params 1: Use la función "obtener néctar 3" que gira, mueve para recoger el néctar y luego regresa a su ubicación original.  Escriba una secuencia par recoger todo el néctar usando "obtener nectar 3".
      Course 4 Bee Params 2: Modifique la función "obtener néctar 3" dede tal manera que me haga girar a la derecha hacia las flores en vez de izquierda.
      Course 4 Bee Params 3 (copy 1): '¡Ahora hay flores en ambos lados! Tal vez puede usar un parámetro de tal manera que la misma funcione para la flores en cada lado.  He añadido un parámetro a la función denominado "dirección".  Si el parámetro "dirección" es igual a 0 debería voltear a la izquierda, si es 1 debería voltear a la derecha.'
      Course 4 Bee Params 3: '¡Ahora hay flores en ambos lados! He añadido un parámetro a la función.  Use las variables "izquierda" y "derecha" para controlar la dirección.  Termine el resto de la definición de la función y luego haga click en "Salver y Cerrar".'
      Course 4 Bee Params 4 (copy 1): Trate de usar la nueva función para recoger todas las flores.  Recuerde, 0 = izquierda y 1 = derecha.
      Course 4 Bee Params 4 - Two WhenRun: Pruebe usando su nueva función para recolectar todas las flores. Recuerde usar las variables izquierda y derecha.
      Course 4 Bee Params 4 backup: '¿No sería bueno si pudiéramos recoger todo este néctar con una sola función? Intente añadir un nuevo parámetro a la función denominada "néctares" para controlar la cantidad de néctar a ser recogido.  Probablemente también querrás cambiar de nombre a la función!'
      Course 4 Bee Params 4: Intente usar su nueva función para recoger todas las flores.  Recuerde usar las variables izquierda y derecha.
      Course 4 Bee Params 5: Vamos a empezar desde cero - ¿Puedes crear una nueva función llamada "consigue 5 néctares" con un parámetro de dirección?
      Course 4 Bee Params 6 (copy 1): Trata de utilizar tu nueva función para recolectar todos este néctar.
      Course 4 Bee Params 6: No sería genial si pudiéramos recolectar todo este néctar con una sola función? Intenta agregar un nuevo parámetro a tu función "nectars" para controlar la cantidad de nectar para recolectar. Probablemente quieras renombrar la función también!
      Course 4 Bee Params 7 (copy 1): Trata de utilizar tu nueva función para recolectar todos este néctar.
      Course 4 Bee Params 7: Trata de utilizar tu nueva función para recolectar todos este néctar.
      Course 4 Bee Params 8 Clone 2: Oooh, ahora hay miel con la que lidiar también! Cómo puedes actualizar tu función para así obtener néctar o hacer miel.
      Course 4 Bee Params 8 Clone: Oooh, ahora hay miel con la que lidiar también! Cómo puedes actualizar tu función para así obtener néctar o hacer miel.
      Course 4 Bee Params 8 clone 3: Oooh, ahora hay miel con la que lidiar también! Cómo puedes actualizar tu función para así obtener néctar o hacer miel.
      Course 4 Bee Params 8 new: Oooh, ahora hay miel con la que lidiar también! Cómo puedes actualizar tu función para así obtener néctar o hacer miel.
      Course 4 Bee Params 8: 'Desafio: Ahora hay que ocuparse de la miel! Vuelve a escribir tu funcion para usar las dos el numero de unidades de miel y el numero de unidades de nectar. ¿Cómo utilizarias esos numeros para decidir que puedes hacer?'
      Course 4 Bee Params Ex: Trata de utilizar tu nueva función para recolectar todos este néctar.
      Course 4 Binary 1: Esta es una función que toma una cadena binaria de 0s y 1s e instruye al granjero girar de izquierda a derecha, de arriba a abajo, girando en los cuadrados donde el número tiene un cero. Ejecute el código proporcionado para ver cómo los granjeros utilizan binario para dibujar una imagen.
      Course 4 Binary 2: '¿Qué cadena binaria podrías repetir 8 veces para dibujar esta imagen? Pista: el número "1" llena un hueco.'
      Course 4 Binary 3: '¿Puedes dibujar este patrón repitiendo una sola cadena binaria?'
      Course 4 Binary 5 (copy 1): '¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?'
      Course 4 Binary 5: '¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?'
      Course 4 Binary 6 (copy 1): '¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?'
      Course 4 Binary 6: '¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?'
      Course 4 Binary 7: '¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?'
      Course 4 Binary 8: Puedes completar la mayor parte de esta imagen repitiendo un numero binario de 5 bits - luego, necesitarás un número más de 4 bits a la esquina inferior derecha.
      Course 4 EC 1a: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 1b: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2a: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2b: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2c: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2d: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 3: 'Utiliza lo que aprendiste en la lección anterior para dibujar una imagen como esta. Nota: El código se vuelve más simple si incorporas parámetros. '
      Course 4 EC 3a: 'Desafío Extremo: Sin reglas. Sin pistas. ¡Solo el desafío!'
      Course 4 Maze 1: Envía las aves enojadas al cerdo!
      Course 4 Maze 2: Evite la TNT!
      Course 4 Maze 3: 'Programe la aves enojadas para llegar al cerdo. '
      Course 4 Maze 4: Intenta usar un bloque de "repeticion" para utilizar menos bloques cuando resuelvas el rompecabezas...
      Course 4 Maze 5: '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      Course 4 Maze 6: '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      Course 4 Play Lab For Loops 2: Esta vez, intentemos contar los números impares de 1 a 100.
      Course 4 Play Lab Params 1: Aquí está la función denominada "salto" que permite que tu personaje principal salte hasta 100 píxeles.  Use la función salto para recoger todas las banderas.
      Course 4 Play Lab Params 10: "Añadimos una última función para\nti. \\r\n\\r\nUtiliza una sentencia \"Si\" para que tu programa llame la funcion \"livel_mas\" solo cuando \"puntuacion_jugador\" sea mayor que un cierto numero.\\r\n\\r\nPor\nejemplo: \"puntuacion_jugador\" > 6\\r\n\\r\nJuega el juego, y hazlo pasar de nivel\n4 para mover al siguiente problema. "
      Course 4 Play Lab Params 2: "¡Ahora tenemos banderas que son muy \naltas para nuestro actual salto! Usaremos ambas flechas \"arriba\" y \"abajo\" para poder tener mutiples saltos de altura.\\r\n\\r\nNecesitamos agregar un parametro\na nuestra funcion llamada \"altura\". La flecha arriba debe hacer al perro brincar 200 pixeles y la flecha de abajo debe hacerlo brincar solo 100 pixeles.\n\\r\n\\r\nPista: deberas hacer clic en \"editar\" en la funcion brinca y actualizar para que uses el parametro \"altura\"."
      Course 4 Play Lab Params 3: "Añadimos otro parámetro a la función salto para poder usar otros actores. Cada actor es\nrepresentado\npor un numero, empezando de uno. Edita la funcion de \"salto\" para que \nutilise\nel parametro \"actor\" hacer el correcto salto del personaje. "
      Course 4 Play Lab Params 4: "Aquí hay una función denominada \"patrulla\". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles."
      Course 4 Play Lab Params 5: Llene el  parámetro de entrada "actor" de tal manera que podamos llamar la función "patrulla" para cada uno de los actores.  Recuerde, los actores corresponden a los números 1, 2 y 3.
      Course 4 Play Lab Params 6: "Agrega otro parámetro llamado \"velocidad\"\na la función de \"patrulla\". Trata de usar un bloque \"obten velocidad\" con el nuevo parámetro \"velocidad\" para ayudar a Pingüino que obtenga ambas banderas antes de que los otros duendes obtengan una."
      Course 4 Play Lab Params 7: "Vamos a divertinos! Mira el codigo dado para ver si puedes averiguar que es lo que hace cada bloque.\\r\n\\r\ncuando\ntermines, usa las flechas de tu teclado para controlar el Perro y colecta todas las banderas."
      Course 4 Play Lab Params 8: Use un bloque "cuando el actor toque" para enviar al Perro de regreso al lado superior izquierdo SOLAMENTE si el Perro toca a alguno de los otros actores.
      Course 4 Play Lab Params 9: "Aquí esta nuestro juego de una etapa anterior,\npero la mayoría del código está oculto. Hay una nueva función \"puntuación.\"\\r\n\\r\neditar\nla función para que el parámetro \"puntos\" sea agregado a la variable \"puntuacion_jugador\". \\r\n\\r\nLa variable \"puntuación_jugador\" debe aumentar cada vez que\nPerro etiquete Gato con corazones y disminuir cada vez que Gato etiquete Perro con corazones. \\r\n\\r\nNota: cuando haya terminado, haga clic en \"Ejecutar\" para jugar. Cuando perro tenga 6 puntos, Tú serás llevado al siguiente rompecabezas. "
      Course 4 Play Lab Vars 1: Ahora no tienes que escribir nada de código, sólo presione "ejecutar" para jugar el juego! En este juego, Tu eres el perro que está tratando de recoger más banderas que el Gato. Use la flecha abajo para controlar al Perro. Presiona "Finalizar" cuando terminaste de jugar.
      Course 4 Play Lab Vars 2: "¡Esa carrera en ese ultimo problema no\nfue justa! Cambia la variable de \"velocidad_perro\" para asegurarse que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!"
      Course 4 Play Lab Vars 3: '¡Aquí tiene una nueva clase de juego! Use las flechas hacia la izquierda y hacia la derecha para moverse y las flechas hacia arriba y hacia para saltar.  Vea si puede recoger todas las banderas.'
      Course 4 Play Lab Vars 4: 'Ahora estamos usando una variable denominada "altura" para controlar cuán alto puede saltar el perro.  Actualice la variable "altura" de tal manera que el perro pueda saltar lo suficientemente alto para alcanzar todas las banderas.  Pista: las banderas nuevas tienen 200 píxeles de altura.'
      Course 4 Play Lab Vars 5: '¡Diseñemos un juego! Primero necesitaremos una calificación.  Use el bloque "asigne puntos a" para establecer la calificación a 10.'
      Course 4 Play Lab Vars 6 (copy 1): "¡Que padre! ahora tenemos nuestra variable puantuacion\npero, ¿cómo vamos a hacerla útil? ¿Qué tal si añadimos tu variable\npuantuacion cada vez que toca al enemigo con una bola de fuego? Uza el evento \"cuando actor 2 toca cualquier cosa\" para generar una actualización a tu puntuacion cuando tus \nbolas de fuego\ntoquen al gato. Puedes incrementar tu puntuacion estableciendo puntuacion=\npuntuacion\n+ 1. Obten tu puntuacion mas de 10 (¡llendo una a la vez!) para pasar de nivel."
      Course 4 Play Lab Vars 6: |-
        Usa la flecha de la derecha para disparar corazones.\r
        \r
        En
        nuestro juego, ¿Cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el 
        Perro golpea al Gato con un corazon. Use el evento "cuando actor 2 toca cualquier cosa"
        para iniciar una actualización a tu puntuacion. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obten tu puntaje mas de 10 (¡llendo uno a la vez!) para pasar de nivel.
      Course 4 Play Lab Vars 7: "Bien, ahora asegurémonos de que este juego no sea \ndemasiado fácil de jugar. Cada vez que el Perro (actor 1) es golpeado por un sándwich de el Gato (actor 2), deberías perder un punto. Comienza con 10 puntos, así que no es demasiado difícil. Deja que tu puntaje descienda de 10 a 0 para pasar el nivel."
      Course 4 Play Lab Vars 8 (copy 1): Muy bien, una consideración final para este juego - programémoslo de tal manera que el jugador pueda ganar (o perder).  Use una iteración infinita para verificar el valor de la calificación ' si la calificación es alguna vez mayor de 20, haga que el enemigo se esfume.  Si la calificación es menor de 0, haga que el jugador se esfume.  Presione "Terminar" cuando el juego funcione como le gustaría.
      Course 4 Play Lab Vars 8: Vamos a configurar este juego donde el Perro puede ganar (o perder). Use un ciclo continuo para verificar el valor de la puntuación - Si la puntuacion es mayor que 20, haz que desaparezca un enemigo (Un gato), SI la puntuacion es siempre menor que 0 haz que desaparezca el jugador (El Perro). Presiona "Finalizar" cuando el juego funcione como te gustaría.
      Course 4 Play Lab Vars 9: "¡Momento de un juego gratis! Aquí están todas las variables con las que hemos jugado hasta ahora en esta etapa, así como algunas más en caso de que las desees. \\r\n\\r\n¡Observa que ahora hay tantos bloques en nuestra caja de herramientas que necesitan organizarse! Aquí, hemos puesto cada pieza en una categoría apropiada. Tómate tu tiempo para explorar todo lo que está disponible. Cuando hayas terminado de navegar, crea un juego o una historia con repeticiones, variables y eventos. \\r\n\\r\nSugerencia: desplázate hacia abajo para ver todos los comandos en el espacio de trabajo."
      Course 4 Play Lab Vars: Muy bien, una cosa mas para este juego - configuralo para que el pueda ganar ( peder). Usa un ciclo continuo para verificar el valor de la puntuación - si la puntuación es siempre mayor que 20. haz que el enemigo desaparezca. Si la puntuacion es siempre menor que 0, haz que el jugador desaparezca.
      Course 4 Play Labs For Loops 1: Vamos a hacer que el perro diga todos los números desde el 1 hasta el 100. Usa un ciclo y un bloque contador para decir la variable contador cada vez que se ejecute el ciclo.
      Course 4 Play Labs For Loops 2: Esta vez, intentemos contar los números impares de 1 a 101.
      Course 4 Play Labs For Loops 3: "Si contamos con numeros mayores\nnosotros podriamos contar velozmente en el mismo tiempo. Pruebalo haciendo al perro contar\nde 10 en 10 hasta mil empezando de 10"
      Course 4 Play Labs For Loops 4: "Cambiare3l incremento puede ser \nbenefico, pero seguiriamos contando linearmente (cada número cambia en la misma medida que el anterior). ¿Que pasaría si contamos exponencialmente? Sin cambiar las instrucciones en este enlace, ¿podrías contar 1,4, 9,16,25...(contéo cuadrádico)? "
      Course 4 Play Labs For Loops 4a: "Ahora, vamos a mezclar las variables del nivel 7 junto con la variable \"contador\" para que la magia suceda.   \\r \\r en este rompecabezas, el perro contará de 0 a 1000 \"incrementando\".  Establezca la variable \"incremento\" en 10 al principio de tu código para ver que pasa."
      Course 4 Play Labs For Loops 5: En el último paso, contamos el cuadrádo de cada número. Intenta cambiar "conteo ^ 2" a "contéo ^ 3" para trabajar con el cubo de cada número
      Course 4 Play Labs For Loops 6: "Recordaras que los números primos\nes cualquer número que solo puede ser dividido por sí mísmo y por 1. Utiliza la función \"is_prime\" para dialogar solo con los números primos desde 1 a 100"
      Course 4 Play Labs For Loops 6a: |-
        El Perro aún mantendrá tiempo contando con nuestro bucle "for" de incremento, pero esta vez, vamos a añadir el asistente en la mezcla.  Se puede cambiar el código para que el "incremento"  suba de dos en dos cada vez se hace clic en el Asistente? \r \r ¡ Cuidado!  El asistente se mueve rápidamente!
      Course 4 Play Labs For Loops 7: "¿Podrías utilizar un enlace para dialogar \nla secuencia 1,4,7,10,13,16,19,22,25?"
      Course 4 Play Labs For Loops 7a: "Ahora estamos consiguiendo algo!  ¿Qué pasa si empezamos contando cuántas veces  podemos hacer clic en el Asistente de antes perro llega a 30?  \\r \\r terminar de añadir bloques al mago para que cada vez se hace clic en la variable \"hacer clic en\" aumenta en uno. Puede ignorar \"incrementar\" por ahora. \\r \\r perro comenzará a contar cuando usted haga clic en \"Ejecutar\"."
      Course 4 Play Labs For Loops 8: "¿Que enlace me haria dialogar\n19,27,35,43,51?"
      Course 4 Play Labs For Loops 8a: |-
        Para terminar nuestro juego, tenemos que usar de nuevo la variable "incremento".    Vamos a vincularlo al nivel del juego. \r \r 1) registra la cantidad de veces que se hace clic en el asistente. \r 2) Si al mago se hace clic en al menos 10 veces antes de que el perro cuente 30, sumar 1 a la variable "incrementar"  y comenzar de nuevo. \r 3) si el mago no hace clic en al menos 10 veces, el juego es terminado.
      Course 4 Playlab For Loop Freeplay: 'Freeplay: Utiliza todo lo que has aprendido hasta ahora para hacer un juego que incluya un bucle ''for''!'
      Course 4 Playlab For Loops 4b: '¡Ahora, estos dos personajes van a correr! \r \r cada uno de ellos se moverá ''contador'' pasos en un momento, pero sus contadores tendrán diferentes valores debido a los bucles ''for''.\r \r ¿Puede cambiar el valor del incremento en uno de los bucles para que la carrera sea un empate?'
      Course 4 Playlab For Loops 5b: Ajusta el intervalo de estos bucles 'for' para que los dos personajes terminen exactamente en el mismo lugar.
      Course 4 Playlab For Loops 6b: "Editar este bucle 'for' para crear un juego que es divertido para jugar! \\r \\r Presione \"Run\" y haga clic en Madame unicornio cuatro veces para ganar. "
      Course 4 SCF 1: Utiliza las funciones sugeridas para dibujar cuatro filas de hexágonos. ¿Te das cuenta cómo nuestras filas pares se desplazan hacia la derecha?
      Course 4 SCF 1a: '¿Puedes averiguar como recolectar todo este néctar con la menor cantidad de bloques posibles?'
      Course 4 SCF 1b: '¿Puedes averiguar como recolectar todo este néctar con la menor cantidad de bloques posibles?'
      Course 4 SCF 2: 'Utiliza lo que aprendiste en la lección anterior para dibujar una imagen como esta. Nota: El código se vuelve más simple si incorporas parámetros. '
      Course 4 SCF 3 Fail 1: Puedes averiguar como...
      Course 4 SCF 3 Fail 2: Puedes averiguar como...
      Course 4 SCF 3: 'Utiliza lo que aprendiste en la lección anterior para dibujar una imagen como esta. Nota: El código se vuelve más simple si incorporas parámetros. '
      Course 4 SCFL 1: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      Course 4 SCFL 1a: '¿Puedes hacer que Skrat llegue a su bellota usando la menor cantidad de bloques posible?'
      Course 4 SCFL 1b: '¿Puedes hacer que Skrat llegue a su bellota usando la menor cantidad de bloques posible?'
      Course 4 SCFL 2: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      Course 4 SCFL 3: '¿Puedes averiguar como volver a crear este dibujo?'
      Course 4 SCFL 4: '¿Puedes averiguar como volver a crear este dibujo?'
      Course 4 SCFL 5: '¿Puedes averiguar como volver a crear este dibujo?'
      Course 4 SCFL 6: '¿Puedes averiguar como volver a crear este dibujo utilizando un solo ciclo?'
      Course 4 SCFL 7: '¡El artista quiere coger algunas olas! ¿Puedes averiguar como volver a crear este dibujo?'
      Course 4 SCFP 1: Crea una función con parámetros que permita al artista saltar hacia adelante y atrás una cantidad x de pixeles, y además arriba y abajo una cantidad y de pixeles (utilizando números positivos y negativos).
      Course 4 SCV 1: Haga clic aquí para ver las instrucciones de nuevo.
      Course 4 SCV 2: Haga clic aquí para ver las instrucciones de nuevo.
      Course 4 SCV 3: |-
        Ahora por un juego de tocar!  toca al Gato para obtener 2 puntos. Toca al Pingüino para conseguir 3 puntos.  Consigue 10 puntos para ganar! \r, pero ten cuidado, cuando Gato y Pingüino se tocan mutuamente, le quitan puntos. \r \r agregar los bloques necesarios para hacer de este juego funcionan de la manera que se explica.  ¿Cómo podrá el perro moverse en todas las direcciones con las flechas?  ¿Cómo se va añadir puntos cuando perro toque al gato o pingüino?  ¿Cómo se restarán puntos cuando gato y Pinguino se tocan?
      Course 4 SCV 4: Resuelve este rompecabezas con el menor número de bloques posible.
      Course 4 SCV 5: Resuelve este rompecabezas con el menor número de bloques posible.
      Course 4 SCV 6: Haga clic aquí para ver las instrucciones de nuevo.
      Course 4 SCVP 1: Crea una función con parámetros que permita al artista saltar hacia adelante y atrás una cantidad x de pixeles, y además arriba y abajo una cantidad y de pixeles (utilizando números positivos y negativos).
      Course 4 Variables Assessment: '¿Puedes crear esta imagen utilizando una variable para los lados? Cada línea debe tener 50 píxeles de largo.'
      Course E MC Conditionals1: Encontrarás los recursos más valiosos bajo tierra, pero puede estar oscuro. Coloca al menos dos antorchas y extrae al menos dos de carbón.
      CourseD_Dance_Party_01: Arrastra el bloque «hacer uno nuevo» al espacio de trabajo y conéctalo dentro del bloque «establecer».
      CourseD_Dance_Party_02: '¡Haz que el alce inicie un movimiento nuevo después de 4 compases!'
      CourseD_Dance_Party_03: '¡Ahora haz que el bailarín inicie un movimiento nuevo después de 6 compases!'
      CourseD_Dance_Party_04: Añade un efecto de fondo a tu programa.
      CourseD_Dance_Party_05: Utiliza otro bloque nuevo para que el bailarín cambie de movimiento cada 2 compases.
      CourseD_Dance_Party_06: Crea un bailarín de fondo llamado «bailarín_fondo1» para bailar con el gato.
      CourseD_Dance_Party_08: '¿Puedes hacer que ambos bailarines de fondo tengan el mismo tamaño?'
      CourseD_Dance_Party_09: Utiliza el bloque «establecer tonalidad» para cambiar el color de un bailarín.
      CourseD_Dance_Party_10: Haz que el otro bailarín también responda a la música usando el bloque «comienza siguiente».
      CourseD_Dance_Party_11: El bloque «cuando arriba pulsada» te permite ejecutar código cuando la flecha hacia arriba se pulsa. Intenta que el bailarín haga un movimiento rápido cuando pulsas arriba.
      CourseD_Dance_Party_11_5: Utiliza los bloques «todos los patos» para que los patos bailen juntos.
      CourseD_Dance_Party_11b: Haz que el Robot haga «drop» una vez cuando pulsas la tecla de flecha derecha y haga el baile «floss» una vez cuando pulsas la tecla de flecha hacia arriba. ¡Haz los movimientos drop-floss tan rápido como puedas!
      CourseD_Dance_Party_12: "¡Mueve el esqueleto! Crea un baile propio para compartirlo\ncon tus amigos."
      CourseE_HOC 2018 Level_10: Llega a la entrada de este monumento oceánico.
      CourseE_HOC 2018 Level_11: 'Construye un conducto con prismarina dentro del monumento oceánico.'
      CourseE_HOC 2018 Level_7a: Explora las ruinas subacuáticas en busca de un cofre.
      CourseE_HOC 2018 Level_9b: 'Utiliza el coral como punto de ruta para llegar hasta el tesoro.'
      CourseF_PlayLab_vars10: "¡Momento de un juego gratis! Aquí están todas las variables con las que hemos jugado hasta ahora en esta etapa, así como algunas más en caso de que las desees. \\r\n\\r\n¡Observa que ahora hay tantos bloques en nuestra caja de herramientas que necesitan organizarse! Aquí, hemos puesto cada pieza en una categoría apropiada. Tómate tu tiempo para explorar todo lo que está disponible. Cuando hayas terminado de navegar, crea un juego o una historia con repeticiones, variables y eventos. \\r\n\\r\nSugerencia: desplázate hacia abajo para ver todos los comandos en el espacio de trabajo."
      CourseF_PlayLab_vars2: "¡Esa carrera en ese ultimo problema no\nfue justa! Cambia la variable de \"velocidad_perro\" para asegurarse que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!"
      CourseF_PlayLab_vars3: '¡Aquí tiene una nueva clase de juego! Use las flechas hacia la izquierda y hacia la derecha para moverse y las flechas hacia arriba y hacia para saltar.  Vea si puede recoger todas las banderas.'
      CourseF_PlayLab_vars4: 'Ahora estamos usando una variable denominada "altura" para controlar cuán alto puede saltar el perro.  Actualice la variable "altura" de tal manera que el perro pueda saltar lo suficientemente alto para alcanzar todas las banderas.  Pista: las banderas nuevas tienen 200 píxeles de altura.'
      CourseF_PlayLab_vars5: '¡Diseñemos un juego! Primero necesitaremos una calificación.  Use el bloque "asigne puntos a" para establecer la calificación a 10.'
      CourseF_PlayLab_vars6: |-
        Usa la flecha de la derecha para disparar corazones.\r
        \r
        En
        nuestro juego, ¿Cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el 
        Perro golpea al Gato con un corazon. Use el evento "cuando actor 2 toca cualquier cosa"
        para iniciar una actualización a tu puntuacion. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obten tu puntaje mas de 10 (¡llendo uno a la vez!) para pasar de nivel.
      CourseF_PlayLab_vars7: |-
        Usa la flecha de la derecha para disparar corazones.\r
        \r
        En
        nuestro juego, ¿Cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el 
        Perro golpea al Gato con un corazon. Use el evento "cuando actor 2 toca cualquier cosa"
        para iniciar una actualización a tu puntuacion. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obten tu puntaje mas de 10 (¡llendo uno a la vez!) para pasar de nivel.
      CourseF_PlayLab_vars8: |-
        Usa la flecha de la derecha para disparar corazones.\r
        \r
        En
        nuestro juego, ¿Cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el 
        Perro golpea al Gato con un corazon. Use el evento "cuando actor 2 toca cualquier cosa"
        para iniciar una actualización a tu puntuacion. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obten tu puntaje mas de 10 (¡llendo uno a la vez!) para pasar de nivel.
      CourseF_PlayLab_vars9: "Bien, ahora asegurémonos de que este juego no sea \ndemasiado fácil de jugar. Cada vez que el Perro (actor 1) es golpeado por un sándwich de el Gato (actor 2), deberías perder un punto. Comienza con 10 puntos, así que no es demasiado difícil. Deja que tu puntaje descienda de 10 a 0 para pasar el nivel."
      Crack Random Substitution: Instrucciones
      Crack Random Substitution_2018: Instrucciones
      Crack Random Substitution_2019: Instrucciones
      Crack a Caesar Cipher: Instrucciones
      Crack a Caesar Cipher_2018: Instrucciones
      Crack a Caesar Cipher_2019: Instrucciones
      Dance_Party_01: Arrastra el bloque «hacer uno nuevo» al espacio de trabajo y conéctalo dentro del bloque «establecer».
      Dance_Party_01_low: Arrastra el bloque «hacer uno nuevo» al espacio de trabajo y conéctalo dentro del bloque «establecer».
      Dance_Party_02: '¡Haz que el alce inicie un movimiento nuevo después de 4 compases!'
      Dance_Party_03: '¡Ahora haz que el bailarín inicie un movimiento nuevo después de 6 compases!'
      Dance_Party_04: Añade un efecto de fondo a tu programa.
      Dance_Party_05: Utiliza otro bloque nuevo para que el bailarín cambie de movimiento cada 2 compases.
      Dance_Party_06: Crea un bailarín de fondo llamado «bailarín_fondo1» para bailar con el gato.
      Dance_Party_08: '¿Puedes hacer que ambos bailarines de fondo tengan el mismo tamaño?'
      Dance_Party_09: Utiliza el bloque «establecer tonalidad» para cambiar el color de un bailarín.
      Dance_Party_10: Haz que el otro bailarín también responda a la música usando el bloque «comienza siguiente».
      Dance_Party_11.5_test: Utiliza los bloques «todos los patos» para que los patos bailen juntos.
      Dance_Party_11: El bloque «cuando arriba pulsada» te permite ejecutar código cuando la flecha hacia arriba se pulsa. Intenta que el bailarín haga un movimiento rápido cuando pulsas arriba.
      Dance_Party_11_5: Utiliza los bloques «todos los patos» para que los patos bailen juntos.
      Dance_Party_11b: Haz que el Robot haga «drop» una vez cuando pulsas la tecla de flecha derecha y haga el baile «floss» una vez cuando pulsas la tecla de flecha hacia arriba. ¡Haz los movimientos drop-floss tan rápido como puedas!
      Dance_Party_12: "¡Mueve el esqueleto! Crea un baile propio para compartirlo\ncon tus amigos."
      Fish Tank 5-validated_simple: El pez quiere un amigo. Agrega un nuevo sprite.
      Food Fight!: "Añadimos una última función para\nti. \\r\n\\r\nUtiliza una sentencia \"Si\" para que tu programa llame la funcion \"livel_mas\" solo cuando \"puntuacion_jugador\" sea mayor que un cierto numero.\\r\n\\r\nPor\nejemplo: \"puntuacion_jugador\" > 6\\r\n\\r\nJuega el juego, y hazlo pasar de nivel\n4 para mover al siguiente problema. "
      Function intro Ryan: Utiliza la función "construir puente" dos veces para abrir un camino hasta la antorcha.
      Function intro Ryan_2019: Utiliza la función "construir puente" dos veces para abrir un camino hasta la antorcha.
      HOC 2018 Level_1: Consigue un barco en el cofre.
      HOC 2018 Level_10: Llega a la entrada de este monumento oceánico.
      HOC 2018 Level_11: 'Construye un conducto con prismarina dentro del monumento oceánico.'
      HOC 2018 Level_12: 'Diseña tu propio entorno subacuático, ¡tú decides qué!'
      HOC 2018 Level_2: 'Ve hacia el final del muelle.'
      HOC 2018 Level_3: 'Surca los mares en busca de bacalao.'
      HOC 2018 Level_4: Utiliza un bucle para llegar al delfín.
      HOC 2018 Level_5: Explora el naufragio hasta llegar al cofre.
      HOC 2018 Level_6: Navega a través del hielo para llegar al salmón.
      HOC 2018 Level_7a: Explora las ruinas subacuáticas en busca de un cofre.
      HOC 2018 Level_9b: 'Utiliza el coral como punto de ruta para llegar hasta el tesoro.'
      Infinity_catch: '¿Puedes hacer que Elsa ("actor2") alcance a Anna utilizando las teclas de flecha?'
      Infinity_finale: '¡Crea cualquier osa que desees compartir!'
      Infinity_move_collide: Hiro es el "actor 1".  Muevelo cerca de Baymax y reproduce un sonido cuando se toquen.
      Infinity_move_directions: Baymax es  el "actor 2".  Agregar bloques de movimiento y luego mueve a Baymax utilizando las flechas.  Haz que toque a los otros dos personajes.
      Infinity_move_right: Hiro es el "actor 1".  Utiliza el bloque de movimiento para mover a Hiro hasta a tocar Baymax.
      Infinity_repeat: Utilice un bloque "repetir para siempre" para mover a Anna arriba y abajo de 400 píxeles.
      Infinity_say: Has a Anna decir "Hola" utilizando el bloque de decir.
      Infinity_shoot: Baymax es el "actor 2".  Has que Baymax lance un cohete a Hiro.
      Infinity_shoot_directions: Hiro es el "actor 3".  Has que Hiro lance un proyectil a cada uno de los cuatro personajes.  Espera un segundo entre cada tiro.
      Infinity_touch_faster: '¡Toca aún más copos de nieve!'
      Infinity_touch_four: Mueve a Anna hacia arriba, abajo a la izquierda y a la derecha para tocar cada uno de los cuatro copos de nieve.
      Infinity_touch_score: Has que Anna anote un punto cuando ella toque un copo de nieve.  Después has clic en "Ejecutar" y conducela para tocar una vez cada copo de nieve.
      Inspirational Artwork: "Inspiración de juego libre: Ahora has aprendido todo lo que necesitas saber para hacer un patrón como este! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. \\r \\r quieres saber cómo se hizo nuestro patron de inspiración? Visita https://studio.code.org/c/106387604 para la solución."
      K-1 Artist 1 Assessment 1: "¡Dibuja una linea corta hacia arriba y una larga\na la derecha!"
      K-1 Artist Loops 1: Dibuja esa linea moviendote al este 4 veces
      K-1 Artist Loops 2: '¿Podrías dibujar la misma linea usando un enlace?'
      K-1 Artist Loops 3: '¿Podrías enlazar estos bloques para dibujar 6 lineas?'
      K-1 Artist Loops 4: '¿Podría una repetición ayudarnos a dibujar la parte superior del castillo?'
      K-1 Artist Loops 5: '¿Puedes repetir 4 veces el mismo enlace para dibujar la escalera?'
      K-1 Artist Loops 6: 'Aqui se necesitan dos enlaces: Uno para subir y otro para bajar la escalera.'
      K-1 Artist Loops 7: '¿Podrias terminar este patrón con dos enlaces?'
      K-1 Artist Loops 8: Esta escalera tiene escalones largos
      K-1 Artist Loops 9: "Evaluación: utilice un enlace para dibujar la escalera\n"
      K-1 Artist Loops Free Play: '¡Manos libres, dibuja algo divertido!'
      K-1 Artist1 1: Dibuja el pie del hombre con una linea
      K-1 Artist1 10: Dibuja y salta para trazar el camino al tesoro
      K-1 Artist1 2: '¡Dibuja el bigote del gato con dos lineas!'
      K-1 Artist1 3: "¡Dibuja dos lineas al este y dos al norte para terminar\nla casa!"
      K-1 Artist1 4: '¡Dibuja lineas verticales, superiores e inferiores para terminar el castillo!'
      K-1 Artist1 5.5: "Completa la tercera torre del castillo usando\nlineas pequeñas"
      K-1 Artist1 5: '¡Dibuja el tallo de la flor con dos linéas! '
      K-1 Artist1 6: '¡Termina el dibujo usando el bloque de salto! '
      K-1 Artist1 7: "Use el bloque de salto para moverte sin dibujar. Salta hacia arriba \ny dibuja una linea"
      K-1 Artist1 8: Dibuja una linea punteada utilizando los bloques de dibujar y saltar
      K-1 Artist1 9: Dibuja y salta para trazar una linea
      K-1 Artist1 Assessment 1: '¡Dibuja lineas largas y cortas!'
      K-1 Artist1 Assessment 2: '¡Dibuja una traza de lineas cortas!'
      K-1 Artist2 1: Dibuja un cuadrado debajo del triángulo
      K-1 Artist2 2: '"Salta y dibuja un cuadrado junto a la casa".'
      K-1 Artist2 3: Dibuja un cuadrado arriba de otro cuadrado
      K-1 Artist2 4: Dibuja un rectángulo para completar el puente.
      K-1 Artist2 5: Dibuja un rectángulo para completar los soportes del puente
      K-1 Artist2 6: '¡Dibuja dos cuadrados para hacer el rectángulo!'
      K-1 Artist2 Assessment1: '"Evaluación: Dibuja un cuadrado junto a otro cuadrado".'
      K-1 Artist2 Free Draw: '¡Dibuja cualquier cosa!'
      K-1 Artist2_7: '¡Dibuja un rectángulo para hacerle un cajón al vestidor!'
      K-1 Bee 1: "Llevame a la flor, toma el nectar, entonces llevame\na la colmena, y haz miel"
      K-1 Bee 10: '¡Toma cuatro nectar y entonces haz doy mieles!'
      K-1 Bee 11.5: '¡Toma cuatro nectar y haz cuatro mieles!'
      K-1 Bee 11: Toma tres nectar y entonces haz una miel
      K-1 Bee 12: '¡Toma tres nectar y entonces haz dos mieles!'
      K-1 Bee 13: '¡Toma tres nectar y entonces haz una miel!'
      K-1 Bee 14: "Llevame al nectar, recogelo, llevame a la colmena\ny haz miel"
      K-1 Bee 15: '¡Conseguir dos néctares para hacer dos unidades de miel!'
      K-1 Bee 2: "Llevame a la flor, toma el nectar, entonces llevame\na la colmena, y haz miel"
      K-1 Bee 3: "Llevame a la flor, toma el nectar, entonces llevame\na la colmena, y haz miel"
      K-1 Bee 4: '¡Consigue dos unidades de néctar y luego has dos unidades de miel!'
      K-1 Bee 5: '¡Toma tres nectar y entonces haz tres mieles!'
      K-1 Bee 6: '¡Consigue dos unidades de néctar y luego has dos unidades de miel!'
      K-1 Bee 7: '¡Toma tres nectar y entonces haz dos mieles!'
      K-1 Bee 8: '¡Consigue dos unidades de néctar y luego has dos unidades de miel!'
      K-1 Bee 9: '¡Consigue dos unidades de néctar y luego has dos unidades de miel!'
      K-1 Bee Assessment 1: '¡Consigue néctar para hacer miel!'
      K-1 Bee Assessment 2: '¡Consigue néctar para hacer miel!'
      K-1 Bee Loops 1: '¡Obten el nectar para hacer miel!'
      K-1 Bee Loops 10: '¡Utiliza enlaces para obtener nectar, miel y para moverte!'
      K-1 Bee Loops 11: Evaluación:¡Utiliza enlaces para obtener nectar y miel!
      K-1 Bee Loops 12: 'Evaluación: ¡Utiliza enlaces para obtener nectar, miel y moverte!'
      K-1 Bee Loops 2: "¡Utiliza un enlace para moverte obtener el nectar y\nhacer miel!"
      K-1 Bee Loops 3: '¡Utiliza enlaces para obtener nectar, y para hacer miel!'
      K-1 Bee Loops 4: '¡Ulilice enlaces para obtener nectar, hacer miel y moverte!'
      K-1 Bee Loops 5: '¡Utiliza enlaces para tomar nectar y miel!'
      K-1 Bee Loops 6: '¡Utiliza enlaces para obtener nectar, miel y para moverte!'
      K-1 Bee Loops 7: '¡Utiliza enlaces para obtener nectar, y para hacer miel!'
      K-1 Bee Loops 8: '¡Utiliza enlaces para obtener nectar, y para hacer miel!'
      K-1 Bee Loops 9: '¡Utiliza enlaces para obtener nectar, miel y para moverte!'
      K-1 Bee Loops Assessment 1: '¡Toma nectar para hacer miel y usa enlaces para moverte!'
      K-1 Bee Loops Assessment 2: '¡Utiliza enlaces para tomar nectar y hacer miel!'
      K-1 Building a Foundation Assessment: "Construye una piramide de tres niveles,\n¡No hay mas instrucciones, simplemente juega con las piezas hasta lograrlo!"
      K-1 Maze 10: '¡Evita el TNT para llevarme con el cerdo!'
      K-1 Maze 11: "\"Traza la ruta y llevame con el cerdo loco. ¡Evita \nel TNT o las plumas volarían! Ayuda:El está al sur de mi\"."
      K-1 Maze 2: '¡Mueveme al Este para llevarme con el cerdo!'
      K-1 Maze 3: '¡Mueveme al sur para llegar al cerdo!'
      K-1 Maze 4: '¡Mueveme al norte para llegar al cerdo!'
      K-1 Maze 5: '¡Mueveme al Este para llevarme con el cerdo!'
      K-1 Maze 6: Muveme en una dirección, luego otra para llevarme el cerdo!
      K-1 Maze 7: Muveme en una dirección, luego otra para llevarme el cerdo!
      K-1 Maze 8: Muveme en una dirección, luego otra para llevarme el cerdo!
      K-1 Maze 9: Muveme en una dirección, luego otra para llevarme el cerdo!
      K-1 Maze Assessment 1: Evaluación, ¡Tráeme al cerdo!
      K-1 Maze Assessment 12: Nivel de evaluación
      K-1 Maze Assessment 13: Nivel de evaluación
      K-1 Maze Assessment 2: Evaluación, ¡Tráeme al cerdo!
      K-1 Maze Loops 1: '¡ Tráeme al cerdo!'
      K-1 Maze Loops 10: Llévame al cerdo! Usa el bloque de repetición.
      K-1 Maze Loops 11: "Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 12: Llévame al cerdo! Usa el bloque de repetición.
      K-1 Maze Loops 2: Usa el bloque de Repetición para llevarme al cerdo!
      K-1 Maze Loops 3: Llévame al cerdo! Usa el bloque de repetición.
      K-1 Maze Loops 4: '¡ Tráeme al cerdo!'
      K-1 Maze Loops 5: Llévame al cerdo! Usa el bloque de repetición.
      K-1 Maze Loops 6: Llévame al cerdo! Usa el bloque de repetición.
      K-1 Maze Loops 7: Llévame al cerdo! Usa el bloque de repetición.
      K-1 Maze Loops 8: Llévame al cerdo! Usa el bloque de repetición.
      K-1 Maze Loops 9: '¡ Tráeme al cerdo!'
      K-1 Maze Loops Assessment 1: Evaluación -- Usa ciclos para llevarme al cerdo!
      K-1 Maze Loops Assessment 2: Evaluación -- Usa ciclos para llevarme al cerdo!
      K-1 Maze Multi 14: Nivel de evaluación
      K-1 Maze Multi 15: Nivel de evaluación
      K-1 Maze Sequence Assessment 1: |-
        Esta es una prueba!\r
        Muévete en una dirección,
        luego en otra para llevarme al cerdo
      K-1 Maze Sequence Assessment 2: "Esta es una prueba!\\r\nMuévete en una dirección,\nluego enotra para llevarme al cerdo."
      K-1 Maze debug Assessment 1: Evaluación -- Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!
      K-1 artist 1 level 10: Dibuja una linea punteada utilizando los bloques de dibujar y saltar
      K-1 artist 1 level 9: Dibuja esto utilizando tres líenas
      K-1 maze debug 1: Cambie el código para traerme al cerdo!
      K-1 maze debug 10: Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!
      K-1 maze debug 11: |-
        Esta es una prueba!\r
        Depura este nivel reorganizando y agregando bloques para llevarme al cerdo
      K-1 maze debug 2: Averigüa qué falta y entonces agrega bloques para llevarme al cerdo!
      K-1 maze debug 3: Averigüa cuál es el problema y borra bloques para llevarme al cerdo!
      K-1 maze debug 4: Ejecuta estos bloques y arréglalos! Yo creo que voy en la dirección equivocada.
      K-1 maze debug 5: Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!
      K-1 maze debug 6: Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!
      K-1 maze debug 7: Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!
      K-1 maze debug 8: Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!
      K-1 maze debug 9: Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!
      K2.0 sequence 1: Cambie el código para traerme al cerdo!
      K2.0 sequence 2: Cambie el código para traerme al cerdo!
      K2.0 sequence 5: Muveme en una dirección, luego otra para llevarme el cerdo!
      K2.0 sequence 6: Averigüa qué falta y entonces agrega bloques para llevarme al cerdo!
      K2.0 sequence 9: '¡Evita el TNT para llevarme con el cerdo!'
      KTest2: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      Kiki_StarWars_Test_3: Texto
      Kiki_StarWars_Test_4: Texto
      Kiki_StarWars_Test_5: Texto
      Kiki_StarWars_Test_5_Example: Texto
      MC Agent Freeplay: "**Juego libre:**  ¡Ha llegado el momento de explorar por tu propia cuenta!"
      MC HOC 2016 Level 10: '¡Ha llegado el momento de crear tu propio Minecraft! Genera criaturas y haz que hagan lo que tú quieres que hagan. ¡Diviértete!'
      MC HOC 2016 Level 2-2: El pollo está inmovilizado. Coloca los bloques `mover` y `girar` en la ranura `al generarse` para que se mueva.
      MC HOC 2016 Level 3: 'Genial, ¡el pollo se ha movido! Pero luego se ha parado. En el juego, los pollos están siempre caminando. Utiliza un bucle `hacer para siempre` para que los pollos no dejen de moverse.'
      MC HOC 2016 Level 4: Ahora se ven un poco raros al moverse todos igual. Los juegos usan movimientos aleatorios para que las cosas parezcan más reales. Usa `girar aleatoriamente` para que los pollos lo hagan.
      MC HOC 2016 Level 5: '¡Estas vacas están perdidas! Llévalas hacia la hierba con el bloque `moverse un paso hacia` en un bucle `hacer siempre`.'
      MC HOC 2016 Level 6: Ahora creas a los zombis. Usa el bloque `generar` para crear a 3 zombis cuando llegue la noche. Haz que se muevan hacia ti. Sobrevive hasta el amanecer.
      MC HOC 2016 Level 8: El camino hacia tu oveja está bloqueado por un muro de piedra. Afortunadamente hay un Creeper por aquí. Los Creepers explotan después de que los toques. ¡Haz que el Creeper explote para volar la pared y así llegar a la oveja!
      MC HOC 2016 New Drop: Las ovejas dan lana en Minecraft. Coloca el bloque `soltar` en `al usarse` y luego pasa por encima y usa la oveja para soltar un objeto.
      MC HOC 2016 New Spawn: En el juego, generar significa añadir algo al mundo. Coloca un bloque `generar` debajo de `al ejecutar` para generar algo cuando comience el juego.
      MC HOC 2016 New Walk: '¡Exploremos nuestro mundo! Muévete con las flechas y pulsa la barra espaciadora o toca el tablero del juego para usar objetos. Usa la puerta para entrar en la casa.'
      MC HOC 2016 SCORE LEVEL: En algunos juegos se guarda la puntuación. Juega al pillapilla con estos gólems de hierro y usa el bloque `añadir 1 a la puntuación` para darte un punto cuando los pilles. ¡Llega a cinco puntos para ganar!
      MC HOC 2016 Village Test: '¡Oh, no! ¡Los zombis te han atrapado dentro! ¡Programa al gólem de hierro para que persiga y ataque a los zombis!'
      MC_HOC_2017 Agent Test: Vajuta "Käivita", et liigutada mängija oranžile ruudule maja sees.
      MC_HOC_2017_01: Vajuta "Käivita", et liigutada mängija oranžile ruudule maja sees.
      MC_HOC_2017_01_Cole: Sellel tekonnal pead koguma kokku kõik tööriistad. Kasuta liikumiseks **nooleklahve** ja liigu võitmiseks rajal oleva kirstuni
      MC_HOC_2017_01_Kiki: Vajuta "Käivita", et liigutada mängija oranžile ruudule maja sees.
      MC_HOC_2017_01_RETRY: 'Lleva al Agent hasta el plato de presión, pulsa "Ejecutar" y utiliza las flechas direccionales para mover al jugador fuera de la casa y recoger el cofre.'
      MC_HOC_2017_01_RETRY_2019: 'Lleva al Agent hasta el plato de presión, pulsa "Ejecutar" y utiliza las flechas direccionales para mover al jugador fuera de la casa y recoger el cofre.'
      MC_HOC_2017_02: Lleva al Agent hasta el plato de presión.
      MC_HOC_2017_02_Cole: 'Desplaza al Agent hasta el plato de presión para que {currentPlayerName} pueda llegar al mapa.'
      MC_HOC_2017_02_Cole_2019: 'Desplaza al Agent hasta el plato de presión para que {currentPlayerName} pueda llegar al mapa.'
      MC_HOC_2017_02_Kiki: Desplaza al Agent hasta el plato de presión y después lleva al jugador al recuadro naranja.
      MC_HOC_2017_02_Will: Lleva al Agent hasta el plato de presión.
      MC_HOC_2017_03_Cole: 'Instruye al Agent para que abra la puerta.'
      MC_HOC_2017_03_Cole_2019: 'Instruye al Agent para que abra la puerta.'
      MC_HOC_2017_03_Kiki: Lleva al Agent hasta el plato de presión.
      MC_HOC_2017_04: Cambia el bucle del último rompecabezas para ayudar al Agent a crear un camino sobre la parte más ancha de este río.
      MC_HOC_2017_04POINT5_Cole: Lleva al Agent hasta el plato de presión.
      MC_HOC_2017_04POINT5_RYAN: Lleva al Agent hasta el plato de presión.
      MC_HOC_2017_04POINT5_RYAN_2019: Lleva al Agent hasta el plato de presión.
      MC_HOC_2017_04_Cole: Lleva al Agent hasta el plato de presión.
      MC_HOC_2017_04_Cole_2019: Lleva al Agent hasta el plato de presión.
      MC_HOC_2017_04_Kiki: Lleva al Agent hasta el plato de presión.
      MC_HOC_2017_05: Utiliza una función para ayudar al Agent a llegar al plato de presión.
      MC_HOC_2017_05_Cole: Haz que el jugador llegue a la pala.
      MC_HOC_2017_05_Cole_2019: Haz que el jugador llegue a la pala.
      MC_HOC_2017_05_Josh: Haz que el jugador llegue a la pala.
      MC_HOC_2017_05_Kiki: Haz que el jugador llegue al recuadro naranja.
      MC_HOC_2017_06_Cole: Arregla este código para que el Agent construya un puente sobre este río.
      MC_HOC_2017_06_Cole_2019: Arregla este código para que el Agent construya un puente sobre este río.
      MC_HOC_2017_06_Josh: Arregla este código para que el Agent construya un puente sobre este río.
      MC_HOC_2017_06_Kiki: Arregla este código para que el Agent construya un puente sobre este río.
      MC_HOC_2017_07_Cole: Destruye el hielo y lleva a {currentPlayerName} a la vagoneta.
      MC_HOC_2017_07_Cole_2019: Destruye el hielo y lleva a {currentPlayerName} a la vagoneta.
      MC_HOC_2017_07_Kiki: Utiliza una función para despejar el camino hasta el recuadro naranja.
      MC_HOC_2017_07a_Kiki: Despeja el camino hasta el recuadro naranja.
      MC_HOC_2017_08_Cole: Modifica la función que se te ha proporcionado para que funcione en este bioma.
      MC_HOC_2017_08_Kiki: Modifica la función para que funcione con este rompecabezas.
      MC_HOC_2017_08_RY: Utiliza las funciones para encontrar un modo de atravesar la lava.
      MC_HOC_2017_08_Will: Utiliza las funciones para encontrar un modo de atravesar la lava.
      MC_HOC_2017_09_Cole: Programa al Agent para despejar el camino del jugador.
      MC_HOC_2017_09_Kiki: Programa al Agent para despejar el camino al jugador y llegar al plato de presión.
      MC_HOC_2017_10_Cole: Crea una función para ayudarte a acabar esta vagoneta.
      MC_HOC_2017_10_Cole_old: Crea una función para ayudarte a acabar esta vagoneta.
      MC_HOC_2017_10_Kiki: Crea una función para ayudarte a acabar esta vagoneta.
      MC_HOC_2017_10_RETRY: Crea una función para ayudarte a acabar esta vagoneta.
      MC_HOC_2017_10_RETRY_2019: Crea una función para ayudarte a acabar esta vagoneta.
      MC_HOC_2017_10_RYAN: Crea una función para ayudarte a acabar esta vagoneta.
      MC_HOC_2017_10_RYAN2: Crea una función para ayudarte a acabar esta vagoneta.
      MC_HOC_2017_13_Cole: "**Juego libre:**  ¡Ha llegado el momento de explorar por tu propia cuenta!"
      MC_HOC_2017_4.5v2: Lleva al Agent hasta el plato de presión.
      MC_HOC_2017_Ali: Utiliza las funciones para encontrar un modo de atravesar la lava.
      MC_HOC_2017_Ali_2019: Utiliza las funciones para encontrar un modo de atravesar la lava.
      MC_HOC_2017_FP10x10: "**Juego libre:** ¿Podrás ponerte a prueba a ti mismo y conseguir todos los diamantes de este nivel? "
      MC_HOC_2017_FP10x10_RE: "**Juego libre:** ¿Podrás ponerte a prueba a ti mismo y conseguir todos los diamantes de este nivel? "
      MC_HOC_2017_FP20x20: "**Juego libre:**  ¡Ha llegado el momento de explorar por tu propia cuenta!"
      MC_HOC_2017_FP20x20_2019: "**Juego libre:**  ¡Ha llegado el momento de explorar por tu propia cuenta!"
      MC_HOC_2017_Ryan_03: Ahora utiliza bucles para ayudar al Agent a construir un puente sobre el río colocando bloques en el agua.
      MC_HOC_2017_Ryan_05: Destruye estos cactus para que el jugador pueda llegar a la meta.
      MC_HOC_Kiki_02: Lleva al Agent hasta el plato de presión.
      Mike Test Bee Conditionals 1: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      NEW Course 4 Artist Functions 1: Puedes dibujar un cuadrado de 100 pixeles de largo usando un ciclo?
      NEW Course 4 Artist Functions 10.1: Use las funciones de los puzzles anteriores para dibujar este patrón.
      NEW Course 4 Artist Functions 10: Has click en "editar" para llenar los bloques en la definición de la función, para hacer un cuadrado de 40 pixeles.
      NEW Course 4 Artist Functions 11: Tenemos una nueva función llamada "dibuja una fila de cuadrados". Puedes mirar dentro del bloque de función para entender cómo la construimos. Has click en "Ejecutar" cuando estés listo/a para el siguiente ejercicio.
      NEW Course 4 Artist Functions 12: Utiliza la función "trazar una linea de cuadrados" del rompecabezas anterior para trazar este patron.
      NEW Course 4 Artist Functions 13: 'Puede dibujar la forma de una estrella usando la función "traza una linea de cuadrados"? Te daré una pista: puedes avanzar 60 pixeles y girar 144 grados'
      NEW Course 4 Artist Functions 14: 'Tiempo de juego libre!'
      NEW Course 4 Artist Functions 2: '¿Puedes dibujar 3 cuadrados de 20 píxeles separado uno del otro? Sugerencia: cada cuadrado es de medida 100 píxeles '
      NEW Course 4 Artist Functions 3: "Aqui esta el nuevo tipo de Bloque.\nEs llamada \"Bloque funcion\". Haga click \"Ejecutar\" para ver que pasa."
      NEW Course 4 Artist Functions 4: 'Utiliza la función "dibujar un cuadrado" para dibujar este patrón. Pista: tendrás que usar un bloque "girar a la derecha 120 grados" después de cada cuadrado.'
      NEW Course 4 Artist Functions 5: '¿Cómo sabía el bloque "dibujar un cuadrado" qué comandos ejecutar? Haz clic en "Editar" en el bloque de función "dibujar un cuadrado". Los bloques en el editor de la función son la definición de lo que lleva a cabo "dibujar un cuadrado". Cuando hayas terminado, haz clic en "Guardar y Cerrar" y luego en "Ejecutar".'
      NEW Course 4 Artist Functions 6: "¿Puedes dibujar esta imagen usando la función \"dibujar un cuadrado\"? Pista: cada cuadrado está separado por 20 píxeles.\\r\n"
      NEW Course 4 Artist Functions 7: '¿Le estás agarrando el tiro a cómo usar los bloques de función? Modifiquemos este cuadrado para que mida 200 píxeles. Sugerencia: haz click en "editar" para cambiar el tamaño del editor de la función "dibujar un cuadrado". Recuerda hacer click en "guardar y cerrar" para salir del editor de la función. '
      NEW Course 4 Artist Functions 8: Te hemos dado la mayoría del código para crear una función. Sin embargo parece que falta algo. ¿Puedes editar la definición de la función para dibujar el triángulo?
      NEW Course 4 Artist Functions 9: '¿Qué bloque necesitas añadir para conseguir que el triángulo se ponga encima del cuadrado?'
      NEW Course 4 Artist Functions inspire: 'Inspiración de juego libre: Ahora has aprendido todo lo que necesitas saber para hacer un patrón como este! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. \r \r quieres saber cómo se hizo nuestro patron de inspiración? Visita https://studio.code.org/c/106387604 para la solución.'
      NEW Course 4 Artist Params 1: Vamos a definir esta función para dibujar un cuadrado con lados de 50 píxeles. Haz click en "editar" para empezar.
      NEW Course 4 Artist Params 10: 'Crea un bloque de función "dibujar un hexágono" con un parámetro de longitud. Pista: este hexágono tiene 100 píxeles de tamaño. '
      NEW Course 4 Artist Params 11: '¿Puedes averiguar cómo dibujar esta forma? Edita la función para usar el parámetro "lados".'
      NEW Course 4 Artist Params 12: '¿Puedes completar este dibujo? Los lados de todas las formas son 100 píxeles de largos.'
      NEW Course 4 Artist Params 12a: Esta imagen es similar a la última. ¿Se puede utilizar un "ciclo for" con tu función para hacer este diseño?
      NEW Course 4 Artist Params 13: "Vamos a editar esta función \"dibujar una forma\".\nYa tiene un parámetro de \"longitud\". Ahora, vamos a editar la función para añadir también un parámetro \"lados\". Recuerda que el ángulo para girar una forma determinada es 360 dividido por la cantidad de lados que tiene. Sugerencia: las longitudes para cada forma son: el triángulo es 100 píxeles, el hexágono es 25 píxeles y el cuadrado es de 50 píxeles."
      NEW Course 4 Artist Params 14: '¿Puedes recrear estas formas? Arrastra el parámetro "longitud" en la definición de función. '
      NEW Course 4 Artist Params 15: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      NEW Course 4 Artist Params 3: "Ahora vamos a utilizar la función para dibujar 5 triángulos desde el último puzzle en una fila. Sugerencia: cada triángulo tiene 30 píxeles de separación. \\r\n"
      NEW Course 4 Artist Params 4: '¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.'
      NEW Course 4 Artist Params 5: 'Llena en el ??? en el bloque de entrada del parámetro de longitud. Sugerencia: El Pentágono es de 100 píxeles de tamaño. '
      NEW Course 4 Artist Params 6: Llena el parámetro "longitud" para dibujar estas formas substituyendo el "???" con los números correctos. El cuadrado y el triángulo son de 100 píxeles de tamaño mientras que el hexágono es de 75 píxeles de tamaño.
      NEW Course 4 Artist Params 7: '¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles mas grande que el último.  El primer triángulo es de 25 píxeles de tamaño.'
      NEW Course 4 Artist Params 8: '¿Puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50 y el tercero es de 75. Sugerencia: comienza haciendo clic en "Editar" en tu bloque de función.'
      NEW Course 4 Artist Params 9: 'Haz clic en "Editar" para completar la definición de la función "dibujar un cuadrado" y agrega un parámetro. Debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez, dibuja 3 cuadrados: de 25, 50 y 75 píxeles de largo, separados por 100 píxeles.'
      NEW Course 4 Artist Params inspire: "Inspiración de juego libre: Ahora has aprendido todo lo que necesitas saber para hacer un patrón como este! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. \\r \\r quieres saber cómo se hizo nuestro patron de inspiración? Visita https://studio.code.org/c/106387604 para la solución."
      NEW Course 4 Artist Vars 1.5: '¿Echa un vistazo al código, puedes ver cómo los bloques "establecer longitud" y "longitud" trabajan juntos? Haz clic en "Ejecutar" para verlo en acción. '
      NEW Course 4 Artist Vars 12: Modifica este algoritmo para que utilice la variable "lados" en lugar de un número fijo para dibujar un pentágono. Reemplaza el número 5 con la variable "lados" y usa el bloque "establecer lados".
      NEW Course 4 Artist Vars 2.5: '¿Echa un vistazo al código, puedes ver cómo los bloques "establecer longitud" y "longitud" trabajan juntos? Haz clic en "Ejecutar" para verlo en acción. '
      NEW Course 4 Artist Vars 2: 'Arrastra un bloque de número hasta el bloque "establecer longitud" para dibujar un conjunto de triángulos de 50 píxeles. '
      NEW Course 4 Artist Vars 4 5: Impresionante trabajo en el último puzzle, vamos a intentarlo de nuevo esta vez vamos a hacer este diseño cool con un hexágono de 60 píxeles.
      NEW Course 4 Artist Vars 4: "Vamos a intentarlo otra vez. Ahora, vamos a hacer este diseño cool con un hexágono de 60 píxeles."
      NEW Course 4 Artist Vars 6: "¿Me puedes ayudar a dibujar este patrón cool dejando caer el bloque de variable \"longitud\" en los lugares correctos?"
      NEW Course 4 Bee For Loops 1: Utiliza un bucle para recolectar el néctar de cada flor.
      NEW Course 4 Bee For Loops 10: Usa tu variable "contador" de bucle para el controlar que tan lejos debe moverse horizontalmente.
      NEW Course 4 Bee For Loops 10a: '¿Listo para un desafío?  Toma lo que has aprendido sobre ciclos y trata de solucionar este problema. Recuerda: puedes tener que ejecutar la solución varias veces antes de averiguar todos los pasos.'
      NEW Course 4 Bee For Loops 11: '¿Puedes utilizar la variable de bucle para controlar el movimiento y la recolección del néctar?'
      NEW Course 4 Bee For Loops 2: Agrega el código necesario para asegurarte que la abeja recolecta todo el néctar. Mira cuánto código necesitas para este puzzle! (Aprenderemos una manera más simple en el siguiente puzzle).
      NEW Course 4 Bee For Loops 3: '¡Ah, el de bucle for hace esto mucho más fácil! Todo el código que necesitas está allí, echa un vistazo a cómo se colocan juntos luego haz clic en "Ejecutar" para ver cómo funciona. '
      NEW Course 4 Bee For Loops 4 4: '¿Puedes ayudar a la abeja a recolectar el resto de la miel utilizando este bucle for? '
      NEW Course 4 Bee For Loops 4: 'Reemplaza el ??? en el bucle for con la mayor cantidad de néctar que la abeja debe recoger. '
      NEW Course 4 Bee For Loops 5 5: '¿Le has pillado el truco al bucle "for"? Vamos a ayudar a la abeja a obtener el resto del néctar.'
      NEW Course 4 Bee For Loops 5: También puedes utilizar un bucle a contar hacia atrás. Trata de recoger este néctar por la cuenta regresiva del 5 al 1 por 1.
      NEW Course 4 Bee For Loops 6: El último número en tu bucle for se llama el "incremento", y cada vez que el bucle se ejecuta la variable contador cambia al incrementarse. Trata de recoger estas flores con un incremento de 2.
      NEW Course 4 Bee For Loops 7: |-
        ¿Le estás pillando el truco a los bucles? Esto es parecido al último puzzle, pero tienes que conseguir 2, 4, 6, 8,10 de néctar. Ya tienes el código de arranque, excepto los números en los bucles del contador. ¡Vamos a recoger algo de néctar!
      NEW Course 4 Bee For Loops 8: "Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar? \\r\n"
      NEW Course 4 Bee For Loops 9: Si tu ciclo es regresivo, se resta el incremento de la variable contador en cada bucle. Lo que debería ser un incremento a recoger néctar 9, luego 6 y 3 ?
      NEW Course 4 Bee For Loops 95: Echa un vistazo a cada pieza de la ciclo "for" que acabas de crear.  ¿Puedes averiguar qué números necesitas multiplicar por dos para resolver este rompecabeza? ¿Por qué funciona?
      NEW Course 4 Play Lab Params 11: '¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. '
      NEW Course 4 Play Lab Params 5 5: Introducir entradas de parámetro de actor con los números (1, 2 y 3) para hacer de estos actores patrulla. 
      NEW Course 4 Play Lab Vars 4 5: "\"Que piensas que este código realizara? Presiona \"Ejecutar\" para ver que ocurre.\""
      NEW Course 4 Play Labs For Loops 7a: Usando lo que has aprendido hasta ahora, ¿puedes hacer al dinosaurio dar un paso adelante cada vez que el pingüino cuenta?
      NEW Course 4 Play Labs For Loops 8 Free Play: "Es hora de Jugar libremente, \ndiviértete con todos los bloques de tu caja de herramientas."
      NEW Course 4 Play Labs For Loops 8a: 'Desafío: ¿Cómo utilizas el ciclo for para lograr que todos los actores den la vuelta, digan su número de actor y desaparezcan de la pantalla? '
      New Artist Project: Dibuja algo impresionante! Tu código ha sido guardado como un projecto al que puedes regresar en cualquier momento.
      New Basketball Project: Crea tu propio juego de baloncesto. Puedes cambiar todas las reglas. Cuando hayas terminado, haz clic en finalizar para permitir a tus amigos/as probar el juego en sus teléfonos.
      New Bounce Project: Crea tu propio juego "Rebote". Puedes cambiar todos los efectos visuales y las reglas. Cuando estés listo, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      New Course 4 Artist Functions Level 4: Usa la función "dibujar un cuadrado" para dibujar este patrón.
      New Gumball Project: '¡Crea cualquier osa que desees compartir!'
      New Ice Age Project: '¡Crea cualquier osa que desees compartir!'
      New Infinity Project: '¡Crea cualquier osa que desees compartir!'
      New Minecraft Hero Project: "**Juego libre:**  ¡Ha llegado el momento de explorar por tu propia cuenta!"
      New Sports Project: 'Crea tu propio juego. Puedes cambiar todas las reglas y mezclar deportes. ¡Puedes ser creativo! Cuando estés listo haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.'
      Overworld Avoid Monsters: Ir contra un Creeper no es buena idea. Evítalos con cuidado y llega a casa para estar a salvo.
      Overworld Avoid Monsters_2018: Ir contra un Creeper no es buena idea. Evítalos con cuidado y llega a casa para estar a salvo.
      Overworld Avoid Monsters_2019: Ir contra un Creeper no es buena idea. Evítalos con cuidado y llega a casa para estar a salvo.
      Overworld Chop Tree - allthethings: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Tree: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Tree_2018: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Tree_2019: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Trees: Necesitamos construir una casa antes de que se ponga el sol. Las casas necesitan mucha madera. Tala los tres árboles.
      Overworld Chop Trees_2018: Necesitamos construir una casa antes de que se ponga el sol. Las casas necesitan mucha madera. Tala los tres árboles.
      Overworld Chop Trees_2019: Necesitamos construir una casa antes de que se ponga el sol. Las casas necesitan mucha madera. Tala los tres árboles.
      Overworld Free Play 20x20: '¡Enhorabuena! Has completado todos los rompecabezas. Ahora extrae recursos, construye y crea algo único con todo lo que has aprendido.'
      Overworld Free Play 20x20_2018: '¡Enhorabuena! Has completado todos los rompecabezas. Ahora extrae recursos, construye y crea algo único con todo lo que has aprendido.'
      Overworld Free Play 20x20_2019: '¡Enhorabuena! Has completado todos los rompecabezas. Ahora extrae recursos, construye y crea algo único con todo lo que has aprendido.'
      Overworld House Frame Chosen: Construye el resto de tu casa con cualquier material que te guste. El comando "repetir" va a resultar util.
      Overworld House Frame Chosen_2018: Construye el resto de tu casa con cualquier material que te guste. El comando "repetir" va a resultar util.
      Overworld House Frame Chosen_2019: Construye el resto de tu casa con cualquier material que te guste. El comando "repetir" va a resultar util.
      Overworld Move to Sheep: Añade un segundo comando "avanzar" para llegar a la oveja.
      Overworld Move to Sheep_2018: Añade un segundo comando "avanzar" para llegar a la oveja.
      Overworld Move to Sheep_2019: Añade un segundo comando "avanzar" para llegar a la oveja.
      Overworld Place Wall: Cada casa comienza con un muro. Construye la primera parte colocando los comandos "colocar" y "avanzar" en el bucle de repetición.
      Overworld Place Wall_2018: Cada casa comienza con un muro. Construye la primera parte colocando los comandos "colocar" y "avanzar" en el bucle de repetición.
      Overworld Place Wall_2019: Cada casa comienza con un muro. Construye la primera parte colocando los comandos "colocar" y "avanzar" en el bucle de repetición.
      Overworld Plant Crops: Es bueno planificar. Planta cultivos a ambos lados del agua para no pasar hambre después.
      Overworld Plant Crops_2018: Es bueno planificar. Planta cultivos a ambos lados del agua para no pasar hambre después.
      Overworld Plant Crops_2019: Es bueno planificar. Planta cultivos a ambos lados del agua para no pasar hambre después.
      Overworld Powered Minecart: '¡Buen trabajo! Has reunido muchos recursos y ya tienes una casita. Ahora, coloca un raíl desde el extremo del mapa a la puerta de tu hogar.'
      Overworld Powered Minecart_2018: '¡Buen trabajo! Has reunido muchos recursos y ya tienes una casita. Ahora, coloca un raíl desde el extremo del mapa a la puerta de tu hogar.'
      Overworld Powered Minecart_2019: '¡Buen trabajo! Has reunido muchos recursos y ya tienes una casita. Ahora, coloca un raíl desde el extremo del mapa a la puerta de tu hogar.'
      Overworld Shear Sheep: '¡Hora de esquilar! Usa el comando "esquilar" para obtener lana de ambas ovejas.'
      Overworld Shear Sheep_2018: '¡Hora de esquilar! Usa el comando "esquilar" para obtener lana de ambas ovejas.'
      Overworld Shear Sheep_2019: '¡Hora de esquilar! Usa el comando "esquilar" para obtener lana de ambas ovejas.'
      PDK5 Conditionals 1: '¡ Las flores moradas pueden tener un tipo de néctar de 1 ó 0, pero tu no sabes cuál !. Ten cuidado de no recolectar el néctar de una flor morada sin  néctar. Revisa si el valor del néctar es igual a 1 usando el bloque “if”. '
      PDK5 Functions 2: '¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada "dibuja un cuadrado". ¿Puedes utilizar la función "dibuja un cuadrado" para crear los lentes? Los cuadrados están separados por 75 píxeles.'
      PS copy 2-3 Bee Conditionals 5: "Flores de color púrpura pueden tener 1 o 0 \nnéctar, pero no sabes cuál! Tenga cuidado de no recogen néctar de \nuna flor morada si no tiene ninguno. Compruebe si el néctar es igual a 1\nutilizando el bloque if."
      Pixelation - AllTheThings 4: Este nivel de pixelación demuestra el uso de la opción `ocultar_controles_codificacion`. Tenga en cuenta que el nivel muestra los datos de imagen en hexadecimal y no le permite volver a convertirlo en binario.
      Pixelation - AllTheThings 5: Este nivel de pixelación demuestra el uso de la opción "Ocultar controles deslizantes". Tenga en cuenta que los controles deslizantes de ancho y alto no están disponibles, y los campos de ancho y alto no son editables.
      Pixelation - Lesson 14 - Make the Letter A: 'Haz una letra ''A'' de 3x5. El widget está configurado con las dimensiones incorrectas. Tu primera tarea es establecer el segundo byte en el código binario de 8 bits para 5: 0000 0101. Luego comience a ingresar datos de píxeles.'
      Pixelation - Lesson 14 - Make the Letter A_2018: 'Haz una letra ''A'' de 3x5. El widget está configurado con las dimensiones incorrectas. Tu primera tarea es establecer el segundo byte en el código binario de 8 bits para 5: 0000 0101. Luego comience a ingresar datos de píxeles.'
      Pixelation - Lesson 14 - Make the Letter A_2019: 'Haz una letra ''A'' de 3x5. El widget está configurado con las dimensiones incorrectas. Tu primera tarea es establecer el segundo byte en el código binario de 8 bits para 5: 0000 0101. Luego comience a ingresar datos de píxeles.'
      Pixelation - Lesson 15 - Color Shades 4x4: 'Comenzamos con la imagen 4x4 que Maddie creó en el video. Su tarea es llenar una cuadrícula de 4x4 con colores utilizando 12 bits por píxel. Estos son los requisitos: Fila 1- llenar con tonos de rojo. Fila 2: tonos de verde. Fila 3 - tonos de azul. Fila 4 - tonos de gris.'
      Pixelation - Lesson 15 - Color Shades 4x4_2018: 'Comenzamos con la imagen 4x4 que Maddie creó en el video. Su tarea es llenar una cuadrícula de 4x4 con colores utilizando 12 bits por píxel. Estos son los requisitos: Fila 1- llenar con tonos de rojo. Fila 2: tonos de verde. Fila 3 - tonos de azul. Fila 4 - tonos de gris.'
      Pixelation - Lesson 15 - Color Shades 4x4_2019: 'Comenzamos con la imagen 4x4 que Maddie creó en el video. Su tarea es llenar una cuadrícula de 4x4 con colores utilizando 12 bits por píxel. Estos son los requisitos: Fila 1- llenar con tonos de rojo. Fila 2: tonos de verde. Fila 3 - tonos de azul. Fila 4 - tonos de gris.'
      Pixelation - Lesson 15 - Complete 3-bit color: Comenzamos con la imagen de 4x2 que Maddie estaba creando, pero hemos omitido los dos últimos cuadrados. Termine la imagen descubriendo los dos colores que faltan y codifíquelos.
      Pixelation - Lesson 15 - Complete 3-bit color_2018: Comenzamos con la imagen de 4x2 que Maddie estaba creando, pero hemos omitido los dos últimos cuadrados. Termine la imagen descubriendo los dos colores que faltan y codifíquelos.
      Pixelation - Lesson 15 - Complete 3-bit color_2019: Comenzamos con la imagen de 4x2 que Maddie estaba creando, pero hemos omitido los dos últimos cuadrados. Termine la imagen descubriendo los dos colores que faltan y codifíquelos.
      Poorva copy U3L2 Using Simple Commands: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      Project - Final Image Scroller: Actualice el desplazamiento de la imagen para responder a los botones y presionar las teclas. (Haga clic para ver instrucciones completas)
      Project - Final Image Scroller_2018: Actualice el desplazamiento de la imagen para responder a los botones y presionar las teclas. (Haga clic para ver instrucciones completas)
      Project - Final Image Scroller_2019: Actualice el desplazamiento de la imagen para responder a los botones y presionar las teclas. (Haga clic para ver instrucciones completas)
      Project - Finish your canvas app: Extiende la funcionalidad de uno de los efectos o crea uno completamente nuevo (haz clic para ver instrucciones completas)
      Quantum Bee - Ryan: Estas nubes me están molestando! Algunas de las nubes tienen flores dentro, y otras no. Debo comprobar cada nube y obtener el néctar sólo de las flores.
      Quantum Bee: '¡ Las flores moradas pueden tener un tipo de néctar de 1 ó 0, pero tu no sabes cuál !. Ten cuidado de no recolectar el néctar de una flor morada sin  néctar. Revisa si el valor del néctar es igual a 1 usando el bloque “if”. '
      Ryan - 4-5 Bee Conditionals 2: La abeja sólo quiere néctar ahora. No todos los objetos son flores, así que mira debajo de TODAS LAS NUBES para verlo si esta escondiendo una flor. Si es así, puedes coger néctar.
      Ryan - Bee Conditionals: La abeja sólo quiere néctar ahora. No todos los objetos son flores, así que mira debajo de TODAS LAS NUBES para verlo si esta escondiendo una flor. Si es así, puedes coger néctar.
      Ryan Test Locked Blocks: Aquí hay una función denominada "patrulla". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles.
      RyanTest3: '¡Este nivel tiene activado el cambio de forma! Actualiza para ver diferentes variantes.'
      Ryan_Demo: '¡Haz que el alce inicie un movimiento nuevo después de 4 compases!'
      SG U3L06 Challenge 5 overlapping circles: 'Esta imagen se crea simplemente usando punto() y colorLapicero() pero, ¿cómo vamos a hacer que esos círculos sean transparentes? Si todavía no has entendido la pista: ¡consulta la documentación!'
      SG U3L07 - introSquare: "Usa un bucle para dibujar un cuadrado. A continuación, agregue \notro bucle para dibujar muchos cuadrados, cada uno rotado alguna cantidad. \n(Haz clic para ver instrucciones completas)"
      SG U3L07 - loopsWithRandom: Aumenta el número de iteraciones para completar la pantalla con blanco. (Haz clic para ver instrucciones completas)
      SG U3L07 - topDownDesign: Ponte cómodo con la estructura de este programa, luego avance al siguiente ejercicio. (Haz clic para ver instrucciones completas)
      SG U3L2 Using Simple Commands part 1: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      SG U3L2 Using Simple Commands: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      SG U3L2_TurtleSquare_right: "Dibuja un cuadrado al frente y\n a la derecha de la ubicación de inicio. (Haga clic para mostrar las instrucciones completas)"
      SpecialFrozenLevel: '¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal.'
      Standalone_Artist_1: '¡ Bienvenido a Artista! En primer lugar, vamos a intentar hacer un simple cuadrado usando el bloque vuelta derecha y el bloque mover hacia adelante. Cada lado debe tener 100 píxeles de largo.'
      Standalone_Artist_2: Dibuja este diamante con 120 y 60 grados de ángulo y lados largos de 150 píxeles.
      Standalone_Artist_3: '¿Puede dibujar este hexágono con lados de 100 píxeles y vueltas de 60 grados?'
      Standalone_Artist_4: Ahora tienes un nuevo bloque para poder jugar, el bucle. Este repetirá un conjunto de comandos. ¿Qué sucede si realizar un bucle de estos comandos 6 veces?
      Standalone_Artist_5.5: 'Nota que simplificamos el código del diamante convirtiéndolo en una repetición. Puedes repetir toda la secuencia 12 veces para dibujar la flor. Pista: Necesitas girar 30 grados después de dibujar el diamante, para que no sigas dibujando sobre el mismo diamante.'
      Standalone_Artist_5: '¿Cuántas veces necesitas repetir  este diamante para dibujar la flor?'
      Standalone_Artist_6: 'Repite este código de hexagono 6 veces para crear el diseño. ¿Cuantos grados necesitarás girar cada vez? Pista: Divide el numero de grados en un circulo por el numero de veces que estás repitiendo.'
      Standalone_Artist_7: 'Una función es otra herramienta de programación que te ayuda a evitar repetir código. Esta función dibuja una flor, para que la puedes utilizar en cualquier momento para dibujar una flor. Utiliza esto y el nuevo bloque de salto para dibujar estas flores. Pista: Hay 150 pixeles de espacio entre cada flor'
      Standalone_Artist_8: Aquí hay una función llamada "Dibuja una figura" que hemos programado para dibujar hexágonos. Ejecuta el código para ver lo que hace y luego experimenta con la función para ver qué pasa. ¿Puedes hacer que dibuje un patrón de cuadrados, triángulos u octágonos?
      Standalone_Artist_9: '¡Ahora sigue adelante y haz la imagen que tu quieras! ¡Incluso tienes una función vacía con la que puedes hacer lo que quieras!'
      Standalone_Artist_v2: '¡ Bienvenido a Artista! En primer lugar, vamos a intentar hacer un simple cuadrado usando el bloque vuelta derecha y el bloque mover hacia adelante. Cada lado debe tener 100 píxeles de largo.'
      Testing Quantum Farmer: "Wow, mira eso! \\r\n\\r\nYo no\nse cuántas palas de tierra necesita este hoyo. \\r\n¿Puedes tu escribir un programa\nque siga usando el bloque `llenar` hasta que el suelo esté parejo?\n  "
      The Vigenere Cipher Widget: Instrucciones
      The Vigenere Cipher Widget_2018: Instrucciones
      The Vigenere Cipher Widget_2019: Instrucciones
      The Vigenere Cipher: Instrucciones
      Total Artist Clone Me: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      U2 frequency caesar: Instrucciones
      U2 frequency random sub: Instrucciones
      U2 vigenere cipher: Instrucciones
      U3 - Canvas - freePlay: Extiende la funcionalidad de uno de los efectos o crea uno completamente nuevo (haz clic para ver instrucciones completas)
      U3 - Keys - Final Image Scroller: Actualice el desplazamiento de la imagen para responder a los botones y presionar las teclas. (Haga clic para ver instrucciones completas)
      U3L06 Challenge 5 overlapping circles: 'Esta imagen se crea simplemente usando punto() y colorLapicero() pero, ¿cómo vamos a hacer que esos círculos sean transparentes? Si todavía no has entendido la pista: ¡consulta la documentación!'
      U3L06 Challenge 5 overlapping circles_2018: 'Esta imagen se crea simplemente usando punto() y colorLapicero() pero, ¿cómo vamos a hacer que esos círculos sean transparentes? Si todavía no has entendido la pista: ¡consulta la documentación!'
      U3L06 Challenge 5 overlapping circles_2019: 'Esta imagen se crea simplemente usando punto() y colorLapicero() pero, ¿cómo vamos a hacer que esos círculos sean transparentes? Si todavía no has entendido la pista: ¡consulta la documentación!'
      U3L07 - introSquare: "Usa un bucle para dibujar un cuadrado. A continuación, agregue \notro bucle para dibujar muchos cuadrados, cada uno rotado alguna cantidad. \n(Haz clic para ver instrucciones completas)"
      U3L07 - introSquare_2018: "Usa un bucle para dibujar un cuadrado. A continuación, agregue \notro bucle para dibujar muchos cuadrados, cada uno rotado alguna cantidad. \n(Haz clic para ver instrucciones completas)"
      U3L07 - introSquare_2019: "Usa un bucle para dibujar un cuadrado. A continuación, agregue \notro bucle para dibujar muchos cuadrados, cada uno rotado alguna cantidad. \n(Haz clic para ver instrucciones completas)"
      U3L07 - loopsWithRandom: Aumenta el número de iteraciones para completar la pantalla con blanco. (Haz clic para ver instrucciones completas)
      U3L07 - loopsWithRandom_2018: Aumenta el número de iteraciones para completar la pantalla con blanco. (Haz clic para ver instrucciones completas)
      U3L07 - loopsWithRandom_2019: Aumenta el número de iteraciones para completar la pantalla con blanco. (Haz clic para ver instrucciones completas)
      U3L07 - topDownDesign: Ponte cómodo con la estructura de este programa, luego avance al siguiente ejercicio. (Haz clic para ver instrucciones completas)
      U3L07 - topDownDesign_2018: Ponte cómodo con la estructura de este programa, luego avance al siguiente ejercicio. (Haz clic para ver instrucciones completas)
      U3L07 - topDownDesign_2019: Ponte cómodo con la estructura de este programa, luego avance al siguiente ejercicio. (Haz clic para ver instrucciones completas)
      U3L2 Using Simple Commands (no tooltips): Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      U3L2 Using Simple Commands: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      U3L2 Using Simple Commands_2018: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      U3L2 Using Simple Commands_2019: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      U3L2_TurtleSquare_right: "Dibuja un cuadrado al frente y\n a la derecha de la ubicación de inicio. (Haga clic para mostrar las instrucciones completas)"
      U3L2_TurtleSquare_right_2018: "Dibuja un cuadrado al frente y\n a la derecha de la ubicación de inicio. (Haga clic para mostrar las instrucciones completas)"
      U3L2_TurtleSquare_right_2019: "Dibuja un cuadrado al frente y\n a la derecha de la ubicación de inicio. (Haga clic para mostrar las instrucciones completas)"
      U4 vigenere cipher 2: Instrucciones
      U4L02 - Objects - Template1: Plantilla
      U4L02 - Objects - Template1_2018: Plantilla
      U4L02 - Objects - Template1_2019: Plantilla
      Underground Avoiding Lava: Hay lava bajo algunos de estos bloques. Tendrás que cubrirlos antes de seguir avanzando. Aquí te será útil un comando "si". Añade un comando "avanzar" en el lugar correcto para extraer los recursos de estos bloques.
      Underground Avoiding Lava_2018: Hay lava bajo algunos de estos bloques. Tendrás que cubrirlos antes de seguir avanzando. Aquí te será útil un comando "si". Añade un comando "avanzar" en el lugar correcto para extraer los recursos de estos bloques.
      Underground Avoiding Lava_2019: Hay lava bajo algunos de estos bloques. Tendrás que cubrirlos antes de seguir avanzando. Aquí te será útil un comando "si". Añade un comando "avanzar" en el lugar correcto para extraer los recursos de estos bloques.
      Underground If Statements: Ahora las cosas se complican. Recoge tres bloques de piedra rojiza pero no te caigas en la lava. Usa un comando "si" para colocar roca sobre la lava que descubras.
      Underground If Statements_2018: Ahora las cosas se complican. Recoge tres bloques de piedra rojiza pero no te caigas en la lava. Usa un comando "si" para colocar roca sobre la lava que descubras.
      Underground If Statements_2019: Ahora las cosas se complican. Recoge tres bloques de piedra rojiza pero no te caigas en la lava. Usa un comando "si" para colocar roca sobre la lava que descubras.
      Underground Iron: Caminar hacia la lava fundida es una mala idea. Coloca rocas para crear un puente y extrae el hierro de al menos dos bloques.
      Underground Iron_2018: Caminar hacia la lava fundida es una mala idea. Coloca rocas para crear un puente y extrae el hierro de al menos dos bloques.
      Underground Iron_2019: Caminar hacia la lava fundida es una mala idea. Coloca rocas para crear un puente y extrae el hierro de al menos dos bloques.
      Underground Mining Coal: Encontrarás los recursos más valiosos bajo tierra, pero puede estar oscuro. Coloca al menos dos antorchas y extrae al menos dos de carbón.
      Underground Mining Coal_2018: Encontrarás los recursos más valiosos bajo tierra, pero puede estar oscuro. Coloca al menos dos antorchas y extrae al menos dos de carbón.
      Underground Mining Coal_2019: Encontrarás los recursos más valiosos bajo tierra, pero puede estar oscuro. Coloca al menos dos antorchas y extrae al menos dos de carbón.
      aE7: "Si copia ese bucle y girar a la izquierda en lugar de la derecha, ¿qué pasa? ¿Puedes repetir eso para dibujar esta ola?"
      aE8: "Ahora repitamos todo eso cuatro veces para crear este cuadro. Cuidado con las esquinas - ¡simplemente no puedes girar 90 grados! Si repetir 60 veces un giro de 3 grados hace un semicírculo, ¿cuál de estos bloques de código hará un cuarto de círculo para las esquinas?"
      beeDebugVideo1: '¿Podrías utilizar un ciclo para recolectar todo el néctar?'
      birdsDebugVideo1: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      bounce_1: Une un bloque al bloque "cuando flecha izquierda" y pulsa "Ejecutar Programa". Mueve la paleta usando la flecha izquierda para alcanzar el objetivo final.
      bounce_10: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pasa de largo" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_10_2018: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pasa de largo" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_10_basketball: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pierde mano" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_10_sports: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pierde mano" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_11: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la paleta y la pelota y ver cuántos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_11_2018: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la paleta y la pelota y ver cuántos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_11_basketball: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la mano y la pelota y ver cuantos puntos puedes anotar antes de que tu oponente anote dos veces!
      bounce_11_sports: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la mano y la pelota y ver cuantos puntos puedes anotar antes de que tu oponente anote dos veces!
      bounce_12: Crea tu propio juego "Rebote". Puedes cambiar todos los efectos visuales y las reglas. Cuando estés listo, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      bounce_12_2018: Crea tu propio juego "Rebote". Puedes cambiar todos los efectos visuales y las reglas. Cuando estés listo, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      bounce_12_basketball: Crea tu propio juego de baloncesto. Puedes cambiar todas las reglas. Cuando hayas terminado, haz clic en finalizar para permitir a tus amigos/as probar el juego en sus teléfonos.
      bounce_12_sports: 'Crea tu propio juego. Puedes cambiar todas las reglas y mezclar deportes. ¡Puedes ser creativo! Cuando estés listo haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.'
      bounce_1_2018: Une un bloque al bloque "cuando flecha izquierda" y pulsa "Ejecutar Programa". Mueve la paleta usando la flecha izquierda para alcanzar el objetivo final.
      bounce_1_basketball: Une un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar". Mueve la mano usando la flecha izquierda para alcanzar el objetivo final.
      bounce_1_sports: '¡Llegar a la bandera! Coloque un bloque en "cuando flecha" bloquear y pulse "Ejecutar" para mover el jugador a la bandera.'
      bounce_2: Une un bloque a los bloques "cuándo flecha derecha" y "cuándo flecha izquierda". Mueve la paleta para alcanzar ambos objetivos finales.
      bounce_2_2018: Une un bloque a los bloques "cuándo flecha derecha" y "cuándo flecha izquierda". Mueve la paleta para alcanzar ambos objetivos finales.
      bounce_2_basketball: Une un bloque a los bloques "cuando flecha derecha" y "cuando flecha izquierda". Mueve la mano para alcanzar ambos objetivos finales.
      bounce_2_sports: '¡Ahora hay dos banderas! Coloque un bloque en "cuando flecha izquierda" y "cuando flecha derecha" para mover a tu jugador en las dos direcciones.'
      bounce_3: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      bounce_3_2018: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      bounce_4: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este rompecabezas.
      bounce_4_2018: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este rompecabezas.
      bounce_5: Vamos a lanzar una pelota hacia la paleta. Une un bloque al bloque "cuando la pelota golpea la paleta" para asegurar que la pelota alcance el objetivo final.
      bounce_5_2018: Vamos a lanzar una pelota hacia la paleta. Une un bloque al bloque "cuando la pelota golpea la paleta" para asegurar que la pelota alcance el objetivo final.
      bounce_5_basketball: Vamos a enviar la pelota hacia la mano. Coloca un bloque en el bloque "cuando la bola golpea la mano" para que la pelota llegue a la bandera.
      bounce_5_sports: La pastilla de hockey se deslizará hacia el jugador. Coloque un bloque en "cuando la bola golpea al jugador".
      bounce_6: Ahora el objetivo final está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este rompecabezas.
      bounce_6_2018: Ahora el objetivo final está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este rompecabezas.
      bounce_6_basketball: Ahora la bandera está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este puzzle.
      bounce_6_sports: Ahora la bandera está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este puzzle.
      bounce_7: Une bloques a cada uno de los bloques "cuando". Rebota la pelota hasta que alcance el objetivo final.
      bounce_7_2018: Une bloques a cada uno de los bloques "cuando". Rebota la pelota hasta que alcance el objetivo final.
      bounce_7_basketball: Coloca bloques cada uno de lo bloques "cuando". Bota la pelota hasta que toque la bandera.
      bounce_7_sports: Coloca bloques cada uno de lo bloques "cuando". Bota la pelota hasta que toque la bandera.
      course1_artist_loops_challenge2: "¡Vamos a jugar un juego!! Dibuja tantas X como tú\npuedas! ¿Puedes obtener 3 en una fila?"
      course2_maze_seq_challenge1: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      course2_playlab_stage17_1: "¿Puedes hacer que Jorge el Perro (actor 1)\ndiga \"Hola\"?"
      course2_playlab_stage17_10: |-
        Agrega bloques al evento "cuando se ejecuta"
        para cambiar el fondo y la velocidad de Waddles.\r
        \r
        Juega y
        mueve a Waddles con las flechas hasta que anotes.
      course2_playlab_stage17_11: Crea tu propia historia. Cuando finalices, haz clic en Terminar para que tus amigos prueben tu historia en sus teléfonos.
      course2_playlab_stage17_2: '¿Puedes hacer que el perro diga algo y que a continuación el gato le conteste?'
      course2_playlab_stage17_3: '¿Puedes escribir un programa para hacer que el perro se mueva hasta el gato?'
      course2_playlab_stage17_4: "¿Puedes escribir un programa que haga que\nJorge (actor 1) mueva a Olive el Gato, y que Olive diga \"Hola\" cuando Jorge\nla alcance?"
      course2_playlab_stage17_5: "¿Puedes escribir un programa que haga que Octavia\ndiga \"Hola\" cuando se hace clic en ella?"
      course2_playlab_stage17_6: "Ahora, ¡escribe un programa que haga que Waddles\nse mueva usando las teclas arriba/abajo/izquierda/derecha para tocar a todos los blancos!"
      course2_playlab_stage17_8: "¡Puedes hacer que Waddles (actor 1) diga\n\"Ouch!\" y reproduzca un sonido de \"toque\" si choca con Chomp?\\r\n\\r\nCuando termines,\njuega para que esto suceda."
      course2_playlab_stage17_9: "¿Puedes agregar un bloque para ganar un punto\ncuando Waddles choque con Octavia (actor 3)?\\r\n¡Juega y mueve a Waddles\ncon las flechas hasta que anotes!"
      course3_playlab_challenge2: "¿Puedes averiguar cómo funciona esta aplicación \"Fortune Teller\"? \nHaz clic en `MÁS` para ver sus desafíos."
      course3_playlab_stage16_1: '¿Puedes hacer que este perro diga "Hola mundo"?'
      course3_playlab_stage16_2: '¿Puedes hacer que el perro diga algo y que el gato le conteste algo?'
      course3_playlab_stage16_3: '¿Puedes crear un programa que haga que el perro se mueva hacia el gato?'
      course3_playlab_stage16_4: '¿Puedes escribir un programa que haga que el perro se mueva hacia el gato, y que el gato diga "hola" cuando el perro se acerque a él?'
      course3_playlab_stage16_5: '¿Puedes agregar un bloque para que el pulpo esté feliz?'
      course3_playlab_stage16_6: Crea tu propia historia. Cuando finalices, haz clic en Terminar para que tus amigos prueben tu historia en sus teléfonos.
      course3_playlab_stage17_1: '¿Puedes escribir un programa para hacer que el pulpo diga "hola" cuando se hace clic sobre él?'
      course3_playlab_stage17_2: '¿Puedes escribir un programa que haga que este pingüino se mueva al pulsar las teclas de flecha arriba/abajo/izquierda/derecha para alcanzar todos los objetivos?'
      course3_playlab_stage17_3: El bloque de "repetir para siempre" te permite ejecutar el código de manera continua. ¿Puedes adjuntar los bloques que se necesitan para mover este dinosaurio hacia arriba y hacia abajo continuamente?
      course3_playlab_stage17_4: '¿Puedes hacer que el pingüino diga "¡Ay!" y reproduzca un sonido de "golpe", si él choca con el dinosaurio? Hay que moverlo con las teclas de flecha para hacer que esto ocurra'
      course3_playlab_stage17_5: '¿Puedes agregar un bloque para anotar un punto cuando el pingüino choque con el pulpo? Hay que moverlo con las teclas de flecha para anotar un punto'
      course3_playlab_stage17_6: '¿Puedes agregar bloques para cambiar el fondo y la velocidad del pingüino y moverlo con las teclas de flecha hasta anotar?'
      course3_playlab_stage17_7: Crea tu propia historia. Cuando finalices, haz clic en Terminar para que tus amigos prueben tu historia en sus teléfonos.
      course4_artist_fwp_challenge1: Intente ejecutar este programa y haga cambios para ver que ocurre. ¿Puede averiguar cómo funciona? (o elimínalo y reemplazalo con algo totalmente diferente)
      course4_playlab_variables_challenge1: "Usa estos bloques para hacer \nque los actores compartan una broma de toc-toc. ¡Cambia la configuración y la frase final para contar con tu propio chiste!"
      course4_playlab_variables_challenge3: "¿Puedes averiguar cómo funciona esta aplicación \"Fortune Teller\"? \nHaz clic en `MÁS` para ver sus desafíos."
      courseA_artist_loops_challenge3: "¡Vamos a jugar un juego!! Dibuja tantas X como tú\npuedas! ¿Puedes obtener 3 en una fila?"
      courseA_maze_seq2: Cambie el código para traerme al cerdo!
      courseA_maze_seq2_2018: Cambie el código para traerme al cerdo!
      courseB_starWars_prog1: '"Ve a tomar el pedazo de metal, BB-8"'
      courseB_starWars_prog1_2018: '"Ve a tomar el pedazo de metal, BB-8"'
      courseB_starWars_prog1_2019: '"Ve a tomar el pedazo de metal, BB-8"'
      courseC_PlayLab_events3: '¿Puedes escribir un programa para hacer que el perro se mueva hasta el gato?'
      courseC_PlayLab_events3_2018: '¿Puedes escribir un programa para hacer que el perro se mueva hasta el gato?'
      courseC_PlayLab_events3_2019: '¿Puedes escribir un programa para hacer que el perro se mueva hasta el gato?'
      courseC_artist_prog5: |-
        ¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.
      courseC_artist_prog5_2018: |-
        ¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.
      courseC_artist_prog5_2019: |-
        ¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.
      courseC_maze_debugging10: Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!
      courseD_artist_binary1: Binario es una forma de representar información mediante sólo dos opciones.  Aquí, vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1).  \r \r Le hemos provisto con una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados.  ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      courseD_artist_binary1_2018: Binario es una forma de representar información mediante sólo dos opciones.  Aquí, vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1).  \r \r Le hemos provisto con una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados.  ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      courseD_artist_binary1_2019: Binario es una forma de representar información mediante sólo dos opciones.  Aquí, vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1).  \r \r Le hemos provisto con una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados.  ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      courseD_artist_binary4: '¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?'
      courseD_artist_binary4_2018: '¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?'
      courseD_artist_binary4_2019: '¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?'
      courseD_artist_binary6: '¿Cual de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?'
      courseD_artist_binary6_2018: '¿Cual de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?'
      courseD_artist_binary6_2019: '¿Cual de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?'
      courseD_artist_binary7: '¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?'
      courseD_artist_binary7_2018: '¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?'
      courseD_artist_binary7_2019: '¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?'
      courseD_autorun_binary4_2019: '¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?'
      courseD_autorun_binary6_2019: '¿Cual de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?'
      courseD_autorun_binary7_2019: '¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?'
      courseD_bee_debugging3: Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      courseD_bee_nestedLoops3: Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. 
      courseD_bee_nestedLoops5: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bee_nestedLoops6_2018: '¡Llévame al girasol!'
      courseD_bee_nestedLoops8: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bee_nestedLoops8_2018: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bee_nestedLoops8_2019: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bounce_events10: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pasa de largo" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      courseD_bounce_events11: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la paleta y la pelota y ver cuántos puntos puedes anotar antes de que tu oponente anote dos veces.
      courseD_bounce_events12: Crea tu propio juego "Rebote". Puedes cambiar todos los efectos visuales y las reglas. Cuando estés listo, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      courseD_bounce_events2: Une un bloque a los bloques "cuándo flecha derecha" y "cuándo flecha izquierda". Mueve la paleta para alcanzar ambos objetivos finales.
      courseD_bounce_events3: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      courseD_bounce_events3s: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      courseD_bounce_events4: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este rompecabezas.
      courseD_bounce_events4s: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este rompecabezas.
      courseD_bounce_events5: Vamos a lanzar una pelota hacia la paleta. Une un bloque al bloque "cuando la pelota golpea la paleta" para asegurar que la pelota alcance el objetivo final.
      courseD_bounce_events6: Ahora el objetivo final está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este rompecabezas.
      courseD_bounce_events7: Une bloques a cada uno de los bloques "cuando". Rebota la pelota hasta que alcance el objetivo final.
      courseD_debugging_3: Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      courseD_maze_nestedLoops4: '¡Llévame al girasol!'
      courseD_maze_nestedLoops4_2018: '¡Llévame al girasol!'
      courseD_maze_nestedLoops4_2019: '¡Llévame al girasol!'
      courseD_maze_nestedLoops6: '¡Llévame al girasol!'
      courseD_maze_nestedLoops6_2018: '¡Llévame al girasol!'
      courseD_maze_nestedLoops6_2019: '¡Llévame al girasol!'
      courseE_artist_functions1: "Hola. Yo artista zombie. Yo amo dibujar!\nAyúdame a dibujar las gafas cuadradas.  Sugerencia: el puente entre las gafas es 25 píxeles más corto que la longitud cuadrada."
      courseE_artist_functions1_2018: "Hola. Yo artista zombie. Yo amo dibujar!\nAyúdame a dibujar las gafas cuadradas.  Sugerencia: el puente entre las gafas es 25 píxeles más corto que la longitud cuadrada."
      courseE_bee_concept1: Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. 
      courseE_bee_concept1_2018: Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. 
      courseE_bee_concept1_2019: Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. 
      courseE_bee_functions1: Colecta todo el néctar de cada flor.
      courseE_bee_functions1_2018: Colecta todo el néctar de cada flor.
      courseE_bee_functions3: "Las funciones son bloques de código que realizan\nuna tarea. Utilice la función \"get 5\" para obtener 5 néctares a cada momento. Asegúrese de \nutilizar un bucle para obtener un recuento ideal de bloque, también."
      courseE_bee_functions3_2018: "Las funciones son bloques de código que realizan\nuna tarea. Utilice la función \"get 5\" para obtener 5 néctares a cada momento. Asegúrese de \nutilizar un bucle para obtener un recuento ideal de bloque, también."
      courseE_bee_functions4: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseE_bee_functions4_2018: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseE_farmer_concept4: Ahora vamos a un nivel más profundo. Hemos anidado todo el bloque de código en otro bucle, pero tienes que poner al artista en su lugar para dibujar la línea siguiente. ¿Cuál de estos bloques de código puede usted colocar al final del bucle exterior para dibujar la red entera?
      courseE_playlab_challenge2: "¿Puedes averiguar cómo funciona esta aplicación \"Fortune Teller\"? \nHaz clic en `MÁS` para ver sus desafíos."
      courseE_playlab_variables_challenge2: "¿Puedes averiguar cómo funciona esta aplicación \"Fortune Teller\"? \nHaz clic en `MÁS` para ver sus desafíos."
      courseF_IceAge_10: "Usa el comando `el actor __ lanza` para que \nSid (actor 1) lance corazones a Granny (actor 2) y ponerla feliz cuando colisionen con ella."
      courseF_IceAge_11: "¡Es hora de crear tu propio juego\n o historia! "
      courseF_IceAge_2: "Ayuda a Manny y Sid a saludarse usando do\ns veces el bloque `el actor ___ dice`."
      courseF_IceAge_5: "Ayuda a la abuela a hacer ejercicio moviéndola hacia\n la izquierda y hacia la derecha varias veces."
      courseF_IceAge_6: "¿Puedes ayudar a Sid a llamar a sus amigos\n cuando haces clic en él? "
      courseF_IceAge_8: '¿Puedes terminar este programa para haciendo que ambos ** toquen un sonido ** y ** obtengan un punto ** cuando Sid y Granny colisionen? '
      courseF_IceAge_9: Cambia la escena a un fondo helado y establece la velocidad de Sid (actor 1) en rápido.
      courseF_artist_embed_variables9: '¡Presiona Ejecutar para ver el programa en acción!'
      courseF_artist_for7: Haz 3 pequeños cambios al código desde el último nivel para obtener esto!
      courseF_artist_for7_2018: Haz 3 pequeños cambios al código desde el último nivel para obtener esto!
      courseF_artist_for7_2019: Haz 3 pequeños cambios al código desde el último nivel para obtener esto!
      courseF_artist_for_challenge1: '¿Puedes averiguar como volver a crear este dibujo?'
      courseF_artist_for_challenge1_2018: '¿Puedes averiguar como volver a crear este dibujo?'
      courseF_artist_for_challenge1_2019: '¿Puedes averiguar como volver a crear este dibujo?'
      courseF_artist_for_challenge2: '¿Puedes averiguar como volver a crear este dibujo utilizando un solo ciclo?'
      courseF_artist_for_challenge2_2018: '¿Puedes averiguar como volver a crear este dibujo utilizando un solo ciclo?'
      courseF_artist_for_challenge2_2019: '¿Puedes averiguar como volver a crear este dibujo utilizando un solo ciclo?'
      courseF_bee_for8: "Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar? \\r\n"
      courseF_bee_for8_2018: "Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar? \\r\n"
      courseF_bee_for8_2019: "Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar? \\r\n"
      courseF_bee_for_challenge2: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_for_challenge2_2018: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_for_challenge2_2019: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_for_challenge3: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_functions4: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseF_bee_functions4_2018: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseF_playlab_variables8c: "Usa las variables para hacer el juego\nmás personal."
      courseF_playlab_variables8c_2018: "Usa las variables para hacer el juego\nmás personal."
      courseF_playlab_variables_challenge1: "Usa estos bloques para hacer \nque los actores compartan una broma de toc-toc. ¡Cambia la configuración y la frase final para contar con tu propio chiste!"
      courseF_playlab_variables_challenge1_2018: "Usa estos bloques para hacer \nque los actores compartan una broma de toc-toc. ¡Cambia la configuración y la frase final para contar con tu propio chiste!"
      courseF_playlab_variables_challenge2: "¡Ahora para un juego de Tocar! Este juego usará variables para hacer un seguimiento de los puntos. Tocar al Gato para obtener 2 puntos.\nTocar del Pingüino para obtener 3 puntos. ¡Obtén exactamente 10 puntos para ganar!\\r  \nPero ten cuidado,\n cuando el Gato y el Pingüino se tocan entre sí, te quitan puntos.\\r\n\\r\nAgrega los bloques necesarios para hacer que este juego funcione de la manera en que se te explicó. ¿Cómo lograrás que el Perro se mueva en todas las direcciones con las teclas de flecha? ¿Cómo agregaras puntos cuando el Perro toque al Gato o al Pingüino? ¿Cómo restarás puntos cuando se  toquen el Gato y el Pingüino?"
      courseF_playlab_variables_challenge2_2018: "¡Ahora para un juego de Tocar! Este juego usará variables para hacer un seguimiento de los puntos. Tocar al Gato para obtener 2 puntos.\nTocar del Pingüino para obtener 3 puntos. ¡Obtén exactamente 10 puntos para ganar!\\r  \nPero ten cuidado,\n cuando el Gato y el Pingüino se tocan entre sí, te quitan puntos.\\r\n\\r\nAgrega los bloques necesarios para hacer que este juego funcione de la manera en que se te explicó. ¿Cómo lograrás que el Perro se mueva en todas las direcciones con las teclas de flecha? ¿Cómo agregaras puntos cuando el Perro toque al Gato o al Pingüino? ¿Cómo restarás puntos cuando se  toquen el Gato y el Pingüino?"
      courseF_playlab_variables_challenge3: "¿Puedes averiguar cómo funciona esta aplicación \"Fortune Teller\"? \nHaz clic en `MÁS` para ver sus desafíos."
      flappy_1: "Adjunta un bloque al bloque \"Cuanto Clica\", luego presione\n\"Ejecutar\". Haz clic o toca la pantalla para mover Flappy al objetivo."
      flappy_11: "Crea tu propio juego Flappy. Puedes cambiar todos\n los gráficos y todas las reglas, incluso la gravedad. Cuando termines, \nhaz clic en Finalizar para que tus amigos prueben tu juego en sus teléfonos."
      flappy_11_2018: "Crea tu propio juego Flappy. Puedes cambiar todos\n los gráficos y todas las reglas, incluso la gravedad. Cuando termines, \nhaz clic en Finalizar para que tus amigos prueben tu juego en sus teléfonos."
      flappy_1_2018: "Adjunta un bloque al bloque \"Cuanto Clica\", luego presione\n\"Ejecutar\". Haz clic o toca la pantalla para mover Flappy al objetivo."
      flappy_2: Ahora hemos agregado el suelo.  Adjunta un bloque al bloque "cuando golpe el suelo".  Tú código necesita 'TERMINAR EL JUEGO' cuando Flappy golpe el bloquea.
      flappy_2_2018: Ahora hemos agregado el suelo.  Adjunta un bloque al bloque "cuando golpe el suelo".  Tú código necesita 'TERMINAR EL JUEGO' cuando Flappy golpe el bloquea.
      flappy_3: "El bloque \"Cuando se ejecuta\" te permite ejecutar el código cuando tu\njuego comienza. Intenta establecer la velocidad del nivel y aletea hacia el objetivo."
      flappy_3_2018: "El bloque \"Cuando se ejecuta\" te permite ejecutar el código cuando tu\njuego comienza. Intenta establecer la velocidad del nivel y aletea hacia el objetivo."
      flappy_4: Flappy atravesará obstáculos a menos que escribas un código para hacerlo chocar. Adjunta un bloque al bloque "Cuando golpea un obstaculo". Tu código necesita 'Terminar el juego' cuando Flappy se choque en el primer conjunto de tuberías.
      flappy_4_2018: Flappy atravesará obstáculos a menos que escribas un código para hacerlo chocar. Adjunta un bloque al bloque "Cuando golpea un obstaculo". Tu código necesita 'Terminar el juego' cuando Flappy se choque en el primer conjunto de tuberías.
      flappy_5: Agreguemos un marcador, y cuenta los puntos cuando Flappy supere los obstáculos. Agregue al bloque "cuando pase un obstáculo", y luego marque un punto cuando Flappy vuele a través del primer grupo de tuberías.
      flappy_5_2018: Agreguemos un marcador, y cuenta los puntos cuando Flappy supere los obstáculos. Agregue al bloque "cuando pase un obstáculo", y luego marque un punto cuando Flappy vuele a través del primer grupo de tuberías.
      flappy_6: Ve si todavía puedes anotar un punto después de hacer un aleteo con Flappy ya sea más rápido o mas despacio.
      flappy_6_2018: Ve si todavía puedes anotar un punto después de hacer un aleteo con Flappy ya sea más rápido o mas despacio.
      flappy_7: Luego, intente cambiar la escena conectando otro bloque al bloque "Cuando ejecuta".
      flappy_7_2018: Luego, intente cambiar la escena conectando otro bloque al bloque "Cuando ejecuta".
      flappy_8: Puedes poner elementos visuales en cualquier momento, no sólo cuando el juego comienza. Intenta establecer una escena Aleatoria cuando sucedan otros eventos, por ejemplo, al pasar un obstáculo.
      flappy_8_2018: Puedes poner elementos visuales en cualquier momento, no sólo cuando el juego comienza. Intenta establecer una escena Aleatoria cuando sucedan otros eventos, por ejemplo, al pasar un obstáculo.
      flappy_9: Para mezclar las cosas, al chocar con un obstáculo, en vez de terminar el juego, intente ajustar el marcador de nuevo a 0.
      flappy_9_2018: Para mezclar las cosas, al chocar con un obstáculo, en vez de terminar el juego, intente ajustar el marcador de nuevo a 0.
      frozen circle function in circle: Ahora crearemos 20 círculos superpuestos, girando 18 grados entre cada círculo.
      frozen circle function with parameter: Aquí está un bloque "Crear círculo" que puede dibujar círculos de diferentes tamaños. ¿Puedes usarlo para dibujar un circulo pequeño de tamaño 5 y uno más grande de tamaño 10?
      frozen circle function: Utiliza el nuevo bloque "Crear un círculo" para crear 10 círculos superpuestos. No te olvides de saltar hacia adelante entre cada círculo.
      frozen circle: Un círculo es una figura especial. ¿Puedes adivinar qué número debe reemplazar los signos de interrogación para dibujar un círculo?
      frozen cross rotate dense: '¡Ahora repitámoslo 90 veces! ¿Cuántas veces cabe 90 en 360? Pista: Es un número muy pequeño.'
      frozen cross rotate: Ahora trata de repetirlo 10 veces. ¿Cuántos  grados necesitas girar entre cada línea?
      frozen cross: Cubre un bloque de "Repetir" alrededor de estos comandos para crear un signo más. ¿Notaste que Elsa puede moverse hacia adelante y hacia atrás?
      frozen diamond mini snowflake: "¿Sabías que cada copo de nieve tiene\nuna forma distinta? Crearemos un nuevo copo de nieve utilizando other bloque de \"Repetir\" para repetir el paralelogramo 4 veces, girando hacia la derecha 90 grados entre cada paralelogramo."
      frozen diamond snowflake: Ahora crearemos un nuevo copo de nieve, utilizando el bloque "Repetir" para repetir el paralelogramo 10 veces, girando a la derecha 36 grados entre cada uno.
      frozen diamond: "Utiliza una repetición alrededor de estos bloques para crear un paralelogramo.\nEs como un rectángulo, pero tiene diferentes ángulos. Este tiene 60 grados\ny 120 ángulos de grados en lugar de todos los 90 ángulos de grados."
      frozen freeplay: '¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal.'
      frozen line: '¡Hola! Soy Elsa de Arendelle. Ayúdame a crear una línea.'
      frozen perpendicular: Ahora veamos si podemos crear dos líneas que se encuentran a un ángulo de 90 grados una de la otra. Necesitarás usar tanto el bloque de "Giro" como el bloque de "Mover".
      frozen snowflake branch: Intenta utilizar el bloque "Crear una rama de copo de nieve" para dibujar 3 ramas, lo que empezará a parecerse a un copo de nieve.
      frozen snowflake full: '¡Ahora repitámoslo 8 veces para dibujar un hermoso copo de nieve!'
      frozen snowflower: Formas complejas de nieve pueden crearse usando figuras geométricas muy simples. ¿Puedes crear uno repitiendo 5 círculos de tamaño 5 y 5 círculos de tamaño 10?
      frozen square iterative: Parece que estamos a la mitad de completar un cuadrado. Ahora pongamos 4 líneas juntas para crear un cuadrado.
      frozen square loop 3x: Ahora crearemos tres cuadrados, girando al terminar cada cuadrado. Asegúrate de girar 120 grados antes de iniciar un nuevo cuadrado.
      frozen square loop: '¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?'
      frozen square snowflake: '¿Puedes dibujar un copo de nieve utilizando el bloque "Repetir" para dibujar un cuadrado 10 veces y el bloque "Girar" para girar 36 grados entre cada cuadrado?'
      grade1_maze_sequence1: Cambie el código para traerme al cerdo!
      grade1_maze_sequence2: Cambie el código para traerme al cerdo!
      grade1_maze_sequence5: Muveme en una dirección, luego otra para llevarme el cerdo!
      grade1_maze_sequence6: Averigüa qué falta y entonces agrega bloques para llevarme al cerdo!
      grade1_maze_sequence9: '¡Evita el TNT para llevarme con el cerdo!'
      grade2_CaringForNewPet_10: '¡ Tráeme al cerdo!'
      grade2_CaringForNewPet_5: '¡ Tráeme al cerdo!'
      grade2_MakeDogTag_10: Dibuja algo divertido.
      grade2_MakeDogTag_3: |-
        Ayúdame a completar la casa para este gato.
      grade2_MakeDogTag_4: |-
        ¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.
      grade2_MakeDogTag_6: '¡Juego libre! Dibuja lo que quieras.'
      grade2_MakeDogTag_8: Ahora conectemos un montón de V juntos, dibujándolos en un bucle.
      grade2_MakeDogTag_9: Esta vez vamos a dibujarlo 24 veces. Añadir un giro a la izquierda de 30 grados a este código y ponerlo todo en un bloque de repetición.
      grade2_PuppyLoops_1: '¿Puedes llevarme hasta el cerdo usando 5 bloques?'
      grade2_PuppyLoops_10: |-
        Mi molinillo de viento no está terminado. Cuántas veces necesito repetir para terminarlo?
      grade2_PuppyLoops_2: "¿Podrías reemplazar estos cinco bloques con solo dos?\n(Sugerencia: Crea un ciclo usando un bloque de \"repeticiones\".)"
      grade2_PuppyLoops_4: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade2_PuppyLoops_5: Tráeme al cerdo.
      grade2_PuppyLoops_7: '¡Llévame al girasol!'
      grade2_PuppyLoops_8: "El código para los tres bigotes que ves es incorrecto. Sugerencia: cada bigote tiene 75 pixeles de largo. Repara este código para dibujar los bigotes."
      grade2_PuppyLoops_9: |-
        Parece que la C en Código está dibujada al revés-
        ¿Puedes hacer que parezca una C?
      grade2_playlab_project_1: "Ahora, ¡escribe un programa que haga que Waddles\nse mueva usando las teclas arriba/abajo/izquierda/derecha para tocar a todos los blancos!"
      grade2_playlab_project_3: "¡Puedes hacer que Waddles (actor 1) diga\n\"Ouch!\" y reproduzca un sonido de \"toque\" si choca con Chomp?\\r\n\\r\nCuando termines,\njuega para que esto suceda."
      grade2_playlab_project_4: "¿Puedes agregar un bloque para ganar un punto\ncuando Waddles choque con Octavia (actor 3)?\\r\n¡Juega y mueve a Waddles\ncon las flechas hasta que anotes!"
      grade2_playlab_project_5: |-
        Agrega bloques al evento "cuando se ejecuta"
        para cambiar el fondo y la velocidad de Waddles.\r
        \r
        Juega y
        mueve a Waddles con las flechas hasta que anotes.
      grade2_puppy_loops2: "¿Podrías reemplazar estos cinco bloques con solo dos?\n(Sugerencia: Crea un ciclo usando un bloque de \"repeticiones\".)"
      grade2_puppy_loops4: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade3_ConditionalsElse_1: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      grade3_ConditionalsElse_2: "La abeja sólo quiere néctar ahora . \nRecuerde que no todos los objetos son flores, recoge néctar solamente de las flores."
      grade3_ConditionalsElse_3: "Ahora la abeja sólo quiere hacer miel. \nAsegúrese de que sólo hacer miel en el panal ."
      grade3_ConditionalsElse_4: El objeto desconocido es una flor o un panal de miel. Use el bloque "if/else" para recoger néctar si es una flor, sino haz miel (porque es un panal de abejas).
      grade3_ConditionalsElse_5: |-
        Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, sino haz miel (porque hay un panal de abejas).
      grade3_ConditionalsElse_6: "Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque if-else se combina con otro bloque if-else para crear un bloque if,else-if, else. Completa la solución para recoger la cantidad desconocida de néctar."
      grade3_ConditionalsElse_7: "Recuerda que las flores púrpura pueden tener 1, 2 ó 3 néctares. Completa la función \"revisar flor púrpura\" y úsala para recoger todo el néctar de las flores."
      grade3_ConditionalsElse_8: "Escribe una función dentro del bloque llamada \"revisar que la flor hace miel.\" Tu función debe comprobar cuánto néctar tiene la flor púrpura, recogerla, avanzar y luego hacer miel."
      grade3_ConditionalsElse_9: "Evaluación: Este código está errado.\nCompleta la función \"consigue néctar o produce miel\" entonces llámalo para recolectar todo el néctar y la miel. Recuerda que las rosas púrpuras pueden tener 3,2 o 1 néctares."
      grade3_ConditionalsElse_TeacherIDo: |-
        Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, sino haz miel (porque hay un panal de abejas).
      grade3_Conditionals_1 BAD: Utiliza un bucle para recolectar todo el néctar.
      grade3_Conditionals_1: "Yo soy una abeja hambrienta! \\r\n Ayudarme a recoger\n todo el néctar de las flores utilizando el menor número de bloques."
      grade3_Conditionals_10 BAD: "Reune todo el néctar de las filas de las flores!\nUtiliza un bucle anidado."
      grade3_Conditionals_10: |-
        Recoge néctar y haz miel. Pista: ¿Qué ocurre si usas el condicional "Si nectar" en una flor roja? ¿Puedes completar esto con un bucle (loop)?
      grade3_Conditionals_11 BAD: "Evaluación - Utiliza un ciclo while para recolectar\ntodo el néctar de esta flor."
      grade3_Conditionals_11: |-
        Colecta néctar y miel. Tenga cuidado 
        de no recogen néctar de una flor morada si no tiene ninguno.
      grade3_Conditionals_12: "Recoge néctar de las cuatro flores."
      grade3_Conditionals_13: "Evaluación: Colecta todo \nel néctar. Tenga cuidado de no recogen néctar de una flor morada si no tiene\nninguno."
      grade3_Conditionals_2: "Ayúdame a recoger todo el néctar de las flores y a hacer miel. Usa un bucle (loop)."
      grade3_Conditionals_3: "Flores de color púrpura pueden tener 1 o 0 \nnéctar, pero no sabes cuál! Tenga cuidado de no recogen néctar de \nuna flor morada si no tiene ninguno. Compruebe si el néctar es igual a 1\nutilizando el bloque if."
      grade3_Conditionals_4: "Checa esta flor con un bloque de \"if\"\npara ver si hay cualquier néctar disponible."
      grade3_Conditionals_5: "Colecta néctar de cada flor si \ntiene alguno."
      grade3_Conditionals_6: "Este campo tiene flores rojas y púrpura.\nFlores rojas tienen una cantidad conocida de néctar, pero se desconoce el néctar de la flor de color púrpura.\nColecta todo el néctar."
      grade3_Conditionals_7: Colecta todo el néctar de cada flor.
      grade3_Conditionals_8: "Colecta néctar donde las flores tienen néctar."
      grade3_Conditionals_9: "Utilizar un bucle para comprobar y recolectar el néctar \nde todas estas flores."
      grade3_Conditionals_TeacherIDo: "Checa esta flor con un bloque de \"if\"\npara ver si hay cualquier néctar disponible."
      grade3_Debugging_1: Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      grade3_Debugging_5: "Estos bloques realmente me molestan. Corregir \nel error(s) para recoger todo el néctar y hacer todo de la miel.  Usted puede \nahora usar ejecutar y paso."
      grade3_Debugging_6: |-
        ¡Qué desafío tan dulce!\r
        \r
        Arregla
        el error(s) para recoger todo el néctar.
      grade3_Debugging_7: Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      grade3_Debugging_9: |-
        Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      grade3_Debugging_TeacherIDo: Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      grade3_Loops_10: |-
        Utiliza un ciclo similar al del último problema, pero ahora utiliza
        un bloque turn.
      grade3_Loops_11: "Utiliza un ciclo para seguir los pasos y recolectar el \nnéctar."
      grade3_Loops_12: "Utiliza un ciclo para recolectar néctar de cada flor\ny hacer miel en cada panal."
      grade3_Loops_2: "¿Podrías hacer la misma tarea más fácilmente con un \nciclo?"
      grade3_Loops_3: '¿Podrías utilizar un ciclo para recolectar todo el néctar?'
      grade3_Loops_4: Ahora usa el bloque 'repetir' para recolectar todo el néctar y crear toda la miel.
      grade3_Loops_5: "Pon estos bloques en un ciclo para recolectar néctar\nde cada flor."
      grade3_Loops_6: "¿Qué pasa si haces un ciclo con esta secuencia 3 veces?\n¡No olvides hacer la miel al final!"
      grade3_Loops_7: |-
        Cada flor continene una unidad de néctar. Recolecta néctar de cada una de las flores. 
      grade3_Loops_8: "Usa un ciclo para recolectar el néctar y hacer la \nmiel."
      grade3_Loops_9: "Recolecta el néctar de cada flor y haz miel \nen cada panal."
      grade3_Loops_TeacherIDo: |-
        Cada flor continene una unidad de néctar. Recolecta néctar de cada una de las flores. 
      grade3_bee_conditionals_quantum2: "La abeja sólo quiere néctar ahora . \nRecuerde que no todos los objetos son flores, recoge néctar solamente de las flores."
      grade3_maze_Loop1: 'Evaluación: ¡Llévame al girasol usando solo 5 bloques! '
      grade3_maze_loops2: '¡Llévame al girasol!'
      grade3_maze_loops3: '¡Llévame al girasol!'
      grade3_maze_loops4: '¡Llévame al girasol!'
      grade3_maze_loops5: '¡Llévame al girasol!'
      grade3_maze_nestedLoops1: '¿Puedes llevarme hasta el cerdo usando 5 bloques?'
      grade3_maze_nestedLoops2: "¿Podrías reemplazar estos cinco bloques con solo dos?\n(Sugerencia: Crea un ciclo usando un bloque de \"repeticiones\".)"
      grade3_maze_nestedLoops3: Llévame al cerdo usando solo dos bloques.
      grade3_maze_nestedLoops4: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade3_robotFarmer_ConditionalsIntro_10: "Estoy trabajando hasta tarde, así que está oscuro afuera, y no puedo saber cómo de grandes son las pilas. Ahora no tengo todas las opciones que tenía antes con el bloque \"mientras\".\nIntenta moverme por el campo y, si encuentras una pila, quítala."
      grade3_robotFarmer_ConditionalsIntro_11: 'Todavía está oscuro afuera. Muéveme a lo largo del campo. Si hay una pila, quítala y si hay un agujero, rellénalo. Sugerencia: utiliza el menú desplegable de opciones del bloque "si".'
      grade3_robotFarmer_ConditionalsIntro_6: Quita todas las pilas de tierra, utilizando la menor cantidad de bloques que sea posible. Las nuevas opciones en el menú desplegable del bloque "mientras" me dicen si estoy parado en una pila o un agujero.
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1: 'Ayúdame a llenar todos estos agujeros con 5 paladas de tierra. Sugerencia: puedes poner un bloque "repetir" dentro del bloque "mientras".'
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo2: "Estoy trabajando hasta tarde, así que está oscuro afuera, y no puedo saber cómo de grandes son las pilas. Ahora no tengo todas las opciones que tenía antes con el bloque \"mientras\".\nIntenta moverme por el campo y, si encuentras una pila, quítala."
      grade4_arist_nested_loop_circles1: 'Usar un bucle anidado para completar el diseño.'
      grade4_arist_nested_loop_flags1: has un bucle con el código dado para crear un molino de viento.
      grade4_arist_nested_loop_polygons1: "con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuanto es 360 dividido por 10?)"
      grade4_arist_nested_loop_polygons2: "Repite el bucle 6 veces. ¿Cuánto tienes que girar cada vez el bucle? (Pista: ¿Cuánto es 360 dividido por 6?)"
      grade4_arist_nested_loop_squares1: '¿Puedes dibujar estas 10 plazas de esta acera, usando un bucle anidado? Cada cuadrado tiene 30 píxeles.'
      grade4_arist_nested_loop_triangles2: 'Ahora anida este bucle dentro de otro bucle para dibujar 10 triángulos.  Esto se llama un bucle anidado.  Sugerencia: Todos 10 triángulos completan una rotación de 360 grados.  '
      grade4_arist_nested_loop_triangles3: "¿Puedes dibujar un hexágono haciendo un enlace\ncon el código triangular?"
      grade4_arist_nested_loop_triangles4: Dibujar los dientes en la boca del cocodrilo!
      grade4_arist_nested_loop_triangles5: |-
        Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado. \r

      grade4_arist_nested_loop_triangles6: '¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?'
      grade4_artist_functions1: "Hola. Yo artista zombie. Yo amo dibujar!\nAyúdame a dibujar las gafas cuadradas.  Sugerencia: el puente entre las gafas es 25 píxeles más corto que la longitud cuadrada."
      grade4_artist_functions2: "¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada \"dibuja un cuadrado\". ¿Puedes utilizar la función \"dibuja un cuadrado\" para crear los lentes? Los cuadrados están separados por 75 píxeles."
      grade4_artist_functions_challenge: Utiliza las funciones sugeridas para dibujar cuatro filas de hexágonos. ¿Te das cuenta cómo nuestras filas pares se desplazan hacia la derecha?
      grade4_artist_functions_challenge2: Utiliza las funciones sugeridas para dibujar cuatro filas de hexágonos. ¿Te das cuenta cómo nuestras filas pares se desplazan hacia la derecha?
      grade4_artist_nestedLoops_challenge: |-
        Haz clic pra ver las sugerencias otra vez!\r
        \r
        Aqui
        esta el codigo para una interesante figura. Que pasa cuando lo repites muchas veces, torneado entre cada iteraccion? nota que el giro en esta figura agrega mas de 420 grados, el cual significa que cuando el artista termino de dibujar, vera otra direccion difente que cuando empezo. Esa nueva direccion es exacta 60 grados a la derecha de cuando comenzo.
      grade4_artist_nestedLoops_challenge2: '¡Ahora, un desafío! Aquí hay un diseño que solamente usa bloques que ya te hemos mostrado. ¿Puedes averiguar cómo crearlo nuevamente sin información extra? Sugerencia: Tantea, usa ensayo y error. No se espera que esté perfecto la primera vez.'
      grade4_artist_nested_loop_circles1: 'Usar un bucle anidado para completar el diseño.'
      grade4_artist_nested_loop_flags1: has un bucle con el código dado para crear un molino de viento.
      grade4_artist_nested_loop_polygons1: "con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuanto es 360 dividido por 10?)"
      grade4_artist_nested_loop_squares1: '¿Puedes dibujar estas 10 plazas de esta acera, usando un bucle anidado? Cada cuadrado tiene 30 píxeles.'
      grade4_artist_nested_loop_triangles1: 'Completa el código para dibujar estos triángulos. El primero es hecho por ti. Sugerencia: 3 triángulos en una rotación de 360 grados.'
      grade4_artist_nested_loop_triangles5: |-
        Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado. \r

      grade4_artist_nested_loop_triangles6: '¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?'
      grade4_artist_parameters_squares1: 'Haz clic en "Editar" para completar la definición de la función "dibujar un cuadrado" y agrega un parámetro. Debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez, dibuja 3 cuadrados: de 25, 50 y 75 píxeles de largo, separados por 100 píxeles.'
      grade4_artist_parameters_triangles2: '¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.'
      grade4_artist_parameters_triangles2b: '¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles mas grande que el último.  El primer triángulo es de 25 píxeles de tamaño.'
      grade4_artist_parameters_triangles3: '¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles mas grande que el último.  El primer triángulo es de 25 píxeles de tamaño.'
      grade4_artist_parameters_triangles4: '¿Puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50 y el tercero es de 75. Sugerencia: comienza haciendo clic en "Editar" en tu bloque de función.'
      grade4_artist_parameters_trianglesx: '¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles mas grande que el último.  El primer triángulo es de 25 píxeles de tamaño.'
      grade4_bee_conditionals_quantum1: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      grade4_bee_conditionals_quantum2: "La abeja sólo quiere néctar ahora . \nRecuerde que no todos los objetos son flores, recoge néctar solamente de las flores."
      grade4_bee_conditionals_quantum4: El objeto desconocido es una flor o un panal de miel. Use el bloque "if/else" para recoger néctar si es una flor, sino haz miel (porque es un panal de abejas).
      grade4_bee_conditionals_quantum5: |-
        Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, sino haz miel (porque hay un panal de abejas).
      grade4_bee_functions1: Colecta todo el néctar de cada flor.
      grade4_bee_functions2: "Las funciones son bloques de código que realizan \nuna tarea. Utilice la función \"get 2 néctar\" para recolectar el néctar de cada\nflor."
      grade4_bee_functions3: "Las funciones son bloques de código que realizan\nuna tarea. Utilice la función \"get 5\" para obtener 5 néctares a cada momento. Asegúrese de \nutilizar un bucle para obtener un recuento ideal de bloque, también."
      grade4_bee_functions4: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      grade4_bee_nestedLoops0: Utiliza un bucle para recolectar todo el néctar.
      grade4_bee_nestedLoops1: Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. 
      grade4_bee_nestedLoops3: Recolecta todo el néctar creando un bucle anidado.
      grade4_bee_nestedLoops4: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      grade4_frozen_freeplay: '¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal.'
      grade4_frozen_functions0: '¿Puedes adivinar con qué número reemplazarías los signos de interrogación para dibujar un círculo?'
      grade4_frozen_functions1a: Utiliza el nuevo bloque "Crear un círculo" para crear 10 círculos superpuestos. No te olvides de saltar hacia adelante entre cada círculo.
      grade4_frozen_functions2: Ahora crearemos 20 círculos superpuestos, girando 18 grados entre cada círculo.
      grade4_frozen_functions3: Aquí está un bloque "Crear círculo" que puede dibujar círculos de diferentes tamaños. ¿Puedes usarlo para dibujar un circulo pequeño de tamaño 5 y uno más grande de tamaño 10?
      grade4_frozen_functions4: Formas complejas de nieve pueden crearse usando figuras geométricas muy simples. ¿Puedes crear uno repitiendo 5 círculos de tamaño 5 y 5 círculos de tamaño 10?
      grade4_frozen_nested_loop_diamonds2: "¿Sabías que cada copo de nieve tiene\nuna forma distinta? Crearemos un nuevo copo de nieve utilizando other bloque de \"Repetir\" para repetir el paralelogramo 4 veces, girando hacia la derecha 90 grados entre cada paralelogramo."
      grade4_frozen_nested_loop_diamonds3: Ahora crearemos un nuevo copo de nieve, utilizando el bloque "Repetir" para repetir el paralelogramo 10 veces, girando a la derecha 36 grados entre cada uno.
      grade4_frozen_square: '¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?'
      grade4_frozen_square_loop1: '¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?'
      grade4_frozen_square_loop2: Ahora crearemos tres cuadrados, girando al terminar cada cuadrado. Asegúrate de girar 120 grados antes de iniciar un nuevo cuadrado.
      grade4_frozen_square_loop3: '¿Puedes dibujar un copo de nieve utilizando el bloque "Repetir" para dibujar un cuadrado 10 veces y el bloque "Girar" para girar 36 grados entre cada cuadrado?'
      grade4_playlab_freeplay: '¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. '
      grade4_playlab_test: |-
        Usa la flecha de la derecha para disparar corazones.\r
        \r
        En
        nuestro juego, ¿Cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el 
        Perro golpea al Gato con un corazon. Use el evento "cuando actor 2 toca cualquier cosa"
        para iniciar una actualización a tu puntuacion. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obten tu puntaje mas de 10 (¡llendo uno a la vez!) para pasar de nivel.
      grade4_playlab_test2: Aquí está la función denominada "salto" que permite que tu personaje principal salte hasta 100 píxeles.  Use la función salto para recoger todas las banderas.
      grade4_review_artist1: Hola, soy un artista. Puedes escribir código para hacerme dibujar cualquier cosa. Usa algunos bloques para hacerme dibujar sobre las líneas grises en la imagen. (Cada línea tiene 100 píxeles de largo)
      grade4_review_artist2: '¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.'
      grade4_review_artist3: "El bloque Salta mueve el artista sin dibujar.\nDibuja la línea punteada utilizando los bloques Salta y Dibuja."
      grade4_review_bee1: Ahora usa el bloque 'repetir' para recolectar todo el néctar y crear toda la miel.
      grade4_review_bee2: "Recolecta el néctar de cada flor y haz miel \nen cada panal."
      grade4_review_bee3: |-
        Utiliza un ciclo similar al del último problema, pero ahora utiliza
        un bloque turn.
      grade5_artist_binary1: "Binario es una forma de representar información mediante sólo dos opciones.  Aquí, vamos a usar las opciones \"apagado\" (representado por el número 0) y \"encendido\" (representado por el número 1).  \\r \\r Le hemos provisto con una red de \"píxeles\" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados.  ¿Puede hacer que el artista pinte \"01010101\" en binario en la primera fila?"
      grade5_artist_binary10: Haga clic aquí para ver sugerencias.
      grade5_artist_binary11: 'Juego Libre: Aquí tiene un lienzo de alta resolución para dibujar - 16 bits por 16 bits!'
      grade5_artist_binary2: "Aquí hay una función que toma una cadena binaria de 0 y 1 e instruye al artista a que gire de izquierda a derecha, de arriba hacia abajo, llenando  los cuadrados cuando ve 1 e ignorándolos cuando ve 0. Corre este código para ver como el artista usa el binario para dibujar el patrón."
      grade5_artist_binary3: '¿Cuántas de estas secuencias binarias podría enlazar 8 veces para dibujar esta imagen?'
      grade5_artist_binary4: '¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?'
      grade5_artist_binary5: Cada secuencia binaria representa una fila de esta figura.  ¿Puede re acomodarla de tal manera que dibuje una cara con una sonrisa en lugar de una cara de aspecto fruncido?
      grade5_artist_binary6: '¿Cual de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?'
      grade5_artist_binary7: '¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?'
      grade5_artist_binary8: Termine este dibujo.
      grade5_artist_binary9: |-
        Aquí hay un lienzo con mejor resolución para pintar - 16 pixeles por 16 pixeles!\r
        \r
        ¿Ves lo que pasa cuando empezamos a ser creativos con los bits?
      grade5_artist_for_loops1: 'Dibuje este triángulo que tiene un tamaño de 50 pixeles.  Sugerencia: Use un bloque de repetición.'
      grade5_artist_for_loops10: |-
        Puedes descubrir como utilizar las cosas que has aprendido para crear esta imagen\r
        \r
        Necesitas una pista? Presiona aquí.
      grade5_artist_for_loops5: |-
        La línea mas pequeña de este espiral cuadrado es 10, el mas largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      grade5_artist_for_loops6: Si girara un poco más o menos de lo que normalmente haría para una forma, crearía un efecto más nítido.  Intente girar 89 grados para crear esta espiral cuadrada torcida.
      grade5_artist_for_loops7: Haz 3 pequeños cambios al código desde el último nivel para obtener esto!
      grade5_artist_for_loops8: '¿Recuerdas cuando usamos una variable para controlar el número de lados de una forma? Este patrón empieza con un triángulo y agrega un cada lado a la vez hasta que dibuja un decágono (10 lados). cada lado debe ser de 100 píxeles de largo. Sugerencia: 360 dividido por el número de lados de una forma, es el número de grados que necesitarás para girar.'
      grade5_artist_for_loops9: |-
        Vamos a poner todo junto!  Usando tu conocimiento de "ciclos for" y del "contador", crear este dibujo donde cada forma tiene dos partes más que el anterior.  Asegúrate de que cada lado sea 10 veces mas largo que el número de lados del polígono. \r \r muy poco del código se ha proporcionado para ti.
      grade5_artist_for_loopsfreeplay11: |-
        Inspiración de juego libre: Ahora has aprendido todo lo que necesitas saber para hacer un patrón como este! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. \r \r quieres saber cómo se hizo nuestro patron de inspiración? Visita https://studio.code.org/c/106387604 para la solución.
      grade5_artist_functionparameters10: "Inspiración de juego libre: Ahora has aprendido todo lo que necesitas saber para hacer un patrón como este! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. \\r \\r quieres saber cómo se hizo nuestro patron de inspiración? Visita https://studio.code.org/c/106387604 para la solución."
      grade5_artist_functionparameters11: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      grade5_artist_functionparameters7: Esta imagen es similar a la última. ¿Se puede utilizar un "ciclo for" con tu función para hacer este diseño?
      grade5_artist_functionparameters8: "Vamos a editar esta función \"dibujar una forma\".\nYa tiene un parámetro de \"longitud\". Ahora, vamos a editar la función para añadir también un parámetro \"lados\". Recuerda que el ángulo para girar una forma determinada es 360 dividido por la cantidad de lados que tiene. Sugerencia: las longitudes para cada forma son: el triángulo es 100 píxeles, el hexágono es 25 píxeles y el cuadrado es de 50 píxeles."
      grade5_artist_functionparameters_6: |-
        ¿Puedes completar este dibujo? Los lados de todas las formas son 100 píxeles de largos.
      grade5_artist_parameters_squares1: 'Haz clic en "Editar" para completar la definición de la función "dibujar un cuadrado" y agrega un parámetro. Debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez, dibuja 3 cuadrados: de 25, 50 y 75 píxeles de largo, separados por 100 píxeles.'
      grade5_artist_parameters_triangles2a: '¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.'
      grade5_artist_parameters_triangles4: '¿Puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50 y el tercero es de 75. Sugerencia: comienza haciendo clic en "Editar" en tu bloque de función.'
      grade5_artist_variables_freeplay10: 'Juego libre: Experimento con el número de lados de esta forma. ¿Puedes cambiar el algoritmo de modo que el tamaño total de la forma sigue siendo el mismo, no importa cuántos lados tengá? Consejo: Tendrás que usar tus bloques de matemáticas (360 dividido por "caras" en dos lugares esta vez) '
      grade5_artist_variables_freeplay14: |-
        Juego Gratis: revísalo, ahora tu algoritmo está anidado dentro de otro circuito. Experimenta cambiando los valores de tus dos variables para dibujar patrones asombrosos.
      grade5_artist_variables_freeplay15: |-
        ¿Quieres un segundo vistazo al diseño de inspiración o los consejos?  Haga clic aquí! \r \r si lo prefieres, ¡crea un diseño propio!
      grade5_artist_variables_freeplay16: '¿Aún jugando? aquí hay un lienzo en blanco donde usted podrá crear lo que quiera!'
      grade5_artist_variables_hexagons1: "Vamos a intentarlo otra vez. Ahora, vamos a hacer este diseño cool con un hexágono de 60 píxeles."
      grade5_artist_variables_letterT11: Aquí está el mismo algoritmo que ideamos con el último rompecabezas - ¿Qué debes establecer en la variable "sides" para dibujar este dibujo de cuadrados?
      grade5_artist_variables_octagons13: "Cuando una forma tiene varios lados, cada lado necesita ser más corto Si tu quieres el patrón completo para ajustar la pantalla. \n\\r\nVamos a recrear el algoritmo desde este increíble patrón, pero en lugar de poner manualmente la variable de \"longitud\", vamos a usar un bloque de matemáticas con la variable de \"lados\" dentro para asegurarse que cada forma se ajusta correctamente. ¿El perímetro de cada polígono es de 300 píxeles.\\r\nNecesitas algunos consejos?  Haga clic aquí."
      grade5_artist_variables_pentagon8: |-
        Utiliza lo que aprendiste en el rompecabezas anterior para crear el hexagono usando la variable "lados"\r
        \r
        Ve como puedes cambiar solo una varable para dibujar un traingulo, cuadrado, pentagono, o octagono?
      grade5_artist_variables_pentagon9: Modifica este algoritmo para que utilice la variable "lados" en lugar de un número fijo para dibujar un pentágono. Reemplaza el número 5 con la variable "lados" y usa el bloque "establecer lados".
      grade5_artist_variables_pentagons1: "¿Me puedes ayudar a dibujar este patrón cool dejando caer el bloque de variable \"longitud\" en los lugares correctos?"
      grade5_artist_variables_pentagons12: Vamos a poner la variable "sides" en 5. Si agrego mas lados a este algoritmo, ¡mas grande es el patrón entero!. Agreguemos una nueva variable llamada longitud "lengh" y úsala si tienes que avanzar "move forward". Establece la variable longitud "lengh" a 75 para esta figura.
      grade5_artist_variables_rectangle6: Ahora quiero hacer un rectángulo que es dos veces tan alto como ancha. Tenemos una variable llamada "ancho" que se encuentra a 100. ¿Puedes usar los bloques de matemáticas para completar el código?
      grade5_artist_variables_square7: |-
        Aquí hay un código que puede dibujar cualquier polígono regular. Hay una nueva variable llamada lados que se inicializa a 4. ¿Puedes usar la variable lados (junto con el bloque de matemáticas) para activar la cantidad correcta independientemente de cuantos lados hay en el polígono?\r
        \r
        ¡Click aquí para regresar a la pista!
      grade5_artist_variables_triangles2: En lugar de avanzar por 100 "moving forward by 100", el bloque mover "move" ahora referencia la variable longitud "lengh". ¿ Podrías establecer la longitud "lengh" a 150 para dibujar este nuevo triángulo?.
      grade5_artist_variables_triangles3: 'Arrastra un bloque de número hasta el bloque "establecer longitud" para dibujar un conjunto de triángulos de 50 píxeles. '
      grade5_bee_for_loops1: Utiliza un bucle para recolectar el néctar de cada flor.
      grade5_bee_for_loops2: Agrega el código necesario para asegurarte que la abeja recolecta todo el néctar. Mira cuánto código necesitas para este puzzle! (Aprenderemos una manera más simple en el siguiente puzzle).
      grade5_bee_for_loops6: También puedes utilizar un bucle a contar hacia atrás. Trata de recoger este néctar por la cuenta regresiva del 5 al 1 por 1.
      grade5_bee_for_loops8: "Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar? \\r\n"
      grade5_playlab_freeplay: '¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. '
      grade5_playlab_variables1: Ahora no tienes que escribir nada de código, sólo presione "ejecutar" para jugar el juego! En este juego, Tu eres el perro que está tratando de recoger más banderas que el Gato. Use la flecha abajo para controlar al Perro. Presiona "Finalizar" cuando terminaste de jugar.
      grade5_playlab_variables10: Llene el  parámetro de entrada "actor" de tal manera que podamos llamar la función "patrulla" para cada uno de los actores.  Recuerde, los actores corresponden a los números 1, 2 y 3.
      grade5_playlab_variables11: "Agrega otro parámetro llamado \"velocidad\"\na la función de \"patrulla\". Trata de usar un bloque \"obten velocidad\" con el nuevo parámetro \"velocidad\" para ayudar a Pingüino que obtenga ambas banderas antes de que los otros duendes obtengan una."
      grade5_playlab_variables12: "Vamos a divertinos! Mira el codigo dado para ver si puedes averiguar que es lo que hace cada bloque.\\r\n\\r\ncuando\ntermines, usa las flechas de tu teclado para controlar el Perro y colecta todas las banderas."
      grade5_playlab_variables13: Use un bloque "cuando el actor toque" para enviar al Perro de regreso al lado superior izquierdo SOLAMENTE si el Perro toca a alguno de los otros actores.
      grade5_playlab_variables14: '¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. '
      grade5_playlab_variables2: "¡Esa carrera en ese ultimo problema no\nfue justa! Cambia la variable de \"velocidad_perro\" para asegurarse que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!"
      grade5_playlab_variables3: '¡Aquí tiene una nueva clase de juego! Use las flechas hacia la izquierda y hacia la derecha para moverse y las flechas hacia arriba y hacia para saltar.  Vea si puede recoger todas las banderas.'
      grade5_playlab_variables4: 'Ahora estamos usando una variable denominada "altura" para controlar cuán alto puede saltar el perro.  Actualice la variable "altura" de tal manera que el perro pueda saltar lo suficientemente alto para alcanzar todas las banderas.  Pista: las banderas nuevas tienen 200 píxeles de altura.'
      grade5_playlab_variables6: |-
        Usa la flecha de la derecha para disparar corazones.\r
        \r
        En
        nuestro juego, ¿Cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el 
        Perro golpea al Gato con un corazon. Use el evento "cuando actor 2 toca cualquier cosa"
        para iniciar una actualización a tu puntuacion. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obten tu puntaje mas de 10 (¡llendo uno a la vez!) para pasar de nivel.
      grade5_playlab_variables7: "Bien, ahora asegurémonos de que este juego no sea \ndemasiado fácil de jugar. Cada vez que el Perro (actor 1) es golpeado por un sándwich de el Gato (actor 2), deberías perder un punto. Comienza con 10 puntos, así que no es demasiado difícil. Deja que tu puntaje descienda de 10 a 0 para pasar el nivel."
      grade5_playlab_variables71: "Aquí esta nuestro juego de una etapa anterior,\npero la mayoría del código está oculto. Hay una nueva función \"puntuación.\"\\r\n\\r\neditar\nla función para que el parámetro \"puntos\" sea agregado a la variable \"puntuacion_jugador\". \\r\n\\r\nLa variable \"puntuación_jugador\" debe aumentar cada vez que\nPerro etiquete Gato con corazones y disminuir cada vez que Gato etiquete Perro con corazones. \\r\n\\r\nNota: cuando haya terminado, haga clic en \"Ejecutar\" para jugar. Cuando perro tenga 6 puntos, Tú serás llevado al siguiente rompecabezas. "
      grade5_playlab_variables81: "Añadimos una última función para\nti. \\r\n\\r\nUtiliza una sentencia \"Si\" para que tu programa llame la funcion \"livel_mas\" solo cuando \"puntuacion_jugador\" sea mayor que un cierto numero.\\r\n\\r\nPor\nejemplo: \"puntuacion_jugador\" > 6\\r\n\\r\nJuega el juego, y hazlo pasar de nivel\n4 para mover al siguiente problema. "
      grade5_playlab_variables9: "Aquí hay una función denominada \"patrulla\". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles."
      grade5_playlab_variables_freeplay: "¡Momento de un juego gratis! Aquí están todas las variables con las que hemos jugado hasta ahora en esta etapa, así como algunas más en caso de que las desees. \\r\n\\r\n¡Observa que ahora hay tantos bloques en nuestra caja de herramientas que necesitan organizarse! Aquí, hemos puesto cada pieza en una categoría apropiada. Tómate tu tiempo para explorar todo lo que está disponible. Cuando hayas terminado de navegar, crea un juego o una historia con repeticiones, variables y eventos. \\r\n\\r\nSugerencia: desplázate hacia abajo para ver todos los comandos en el espacio de trabajo."
      harvey_snowflake_artist1: '¡Prepara tu copo de nieve para la impresión en 3D!'
      harvey_snowflake_artist2: '¡Prepara tu copo de nieve para la impresión en 3D!'
      harvey_tictactoe: "¡Vamos a jugar un juego!! Dibuja tantas X como tú\npuedas! ¿Puedes obtener 3 en una fila?"
      iceage_click_hello: "¿Puedes ayudar a Sid a llamar a sus amigos\n cuando haces clic en él? "
      iceage_click_hello_2018: "¿Puedes ayudar a Sid a llamar a sus amigos\n cuando haces clic en él? "
      iceage_free_play: "¡Es hora de crear tu propio juego\n o historia! "
      iceage_free_play_2018: "¡Es hora de crear tu propio juego\n o historia! "
      iceage_free_playcourseF_IceAge_11: "¡Es hora de crear tu propio juego\n o historia! "
      iceage_hello1: Ayuda a Sid a decir "¡Hola!" arrastrando el bloque `decir` y conectándolo al final del evento`Cuando ejecuta`.
      iceage_hello1_2018: Ayuda a Sid a decir "¡Hola!" arrastrando el bloque `decir` y conectándolo al final del evento`Cuando ejecuta`.
      iceage_hello2: "Ayuda a Manny y Sid a saludarse usando do\ns veces el bloque `el actor ___ dice`."
      iceage_hello2_2018: "Ayuda a Manny y Sid a saludarse usando do\ns veces el bloque `el actor ___ dice`."
      iceage_repeat: "Ayuda a la abuela a hacer ejercicio moviéndola hacia\n la izquierda y hacia la derecha varias veces."
      iceage_repeat_2018: "Ayuda a la abuela a hacer ejercicio moviéndola hacia\n la izquierda y hacia la derecha varias veces."
      iceage_sound_and_points: '¿Puedes terminar este programa para haciendo que ambos ** toquen un sonido ** y ** obtengan un punto ** cuando Sid y Granny colisionen? '
      iceage_sound_and_points_2018: '¿Puedes terminar este programa para haciendo que ambos ** toquen un sonido ** y ** obtengan un punto ** cuando Sid y Granny colisionen? '
      iceage_throw_hearts: "Usa el comando `el actor __ lanza` para que \nSid (actor 1) lance corazones a Granny (actor 2) y ponerla feliz cuando colisionen con ella."
      iceage_throw_hearts_2018: "Usa el comando `el actor __ lanza` para que \nSid (actor 1) lance corazones a Granny (actor 2) y ponerla feliz cuando colisionen con ella."
      iceage_warn_ice_age: Cambia la escena a un fondo helado y establece la velocidad de Sid (actor 1) en rápido.
      iceage_warn_ice_age_2018: Cambia la escena a un fondo helado y establece la velocidad de Sid (actor 1) en rápido.
      k-1 maze 1: '¿Me llevarias al Oeste para agarrar al cerdo? '
      level 'grade3_Loops_10: |-
        Utiliza un ciclo similar al del último problema, pero ahora utiliza
        un bloque turn.
      level 'grade3_Loops_11: "Utiliza un ciclo para seguir los pasos y recolectar el \nnéctar."
      level 'grade3_Loops_12: "Utiliza un ciclo para recolectar néctar de cada flor\ny hacer miel en cada panal."
      level 'grade3_Loops_2: "¿Podrías hacer la misma tarea más fácilmente con un \nciclo?"
      level 'grade3_Loops_3: '¿Podrías utilizar un ciclo para recolectar todo el néctar?'
      level 'grade3_Loops_4: Ahora usa el bloque 'repetir' para recolectar todo el néctar y crear toda la miel.
      level 'grade3_Loops_5: "Pon estos bloques en un ciclo para recolectar néctar\nde cada flor."
      level 'grade3_Loops_6: "¿Qué pasa si haces un ciclo con esta secuencia 3 veces?\n¡No olvides hacer la miel al final!"
      level 'grade3_Loops_7: |-
        Cada flor continene una unidad de néctar. Recolecta néctar de cada una de las flores. 
      level 'grade3_Loops_8: "Usa un ciclo para recolectar el néctar y hacer la \nmiel."
      level 'grade3_Loops_9: "Recolecta el néctar de cada flor y haz miel \nen cada panal."
      level grade3_Loops_2: "¿Podrías hacer la misma tarea más fácilmente con un \nciclo?"
      ramp_artist_loops1: "Avanza 60 píxeles para completar este\npuzzle."
      ramp_artist_loops1_2018: "Avanza 60 píxeles para completar este\npuzzle."
      ramp_artist_loops1_2019: "Avanza 60 píxeles para completar este\npuzzle."
      ramp_artist_loops2: Avanza cinco veces y crea esta línea de color.
      ramp_artist_loops2_2018: Avanza cinco veces y crea esta línea de color.
      ramp_artist_loops2_2019: Avanza cinco veces y crea esta línea de color.
      ramp_artist_loops3: Usa un bucle 'repetir' para dibujar cinco guiones de colores.
      ramp_artist_loops3_2018: Usa un bucle 'repetir' para dibujar cinco guiones de colores.
      ramp_artist_loops3_2019: Usa un bucle 'repetir' para dibujar cinco guiones de colores.
      ramp_artist_loops4: "¿Qué sucede cuando agregas un giro a la derecha \nde 72 grados después de todo lo demás dentro de tu bucle?"
      ramp_artist_loops4_2018: "¿Qué sucede cuando agregas un giro a la derecha \nde 72 grados después de todo lo demás dentro de tu bucle?"
      ramp_artist_loops6: Edita tu bucle para dibujar esta escalera.
      ramp_artist_loops6_2018: Edita tu bucle para dibujar esta escalera.
      ramp_artist_loops6_2019: Edita tu bucle para dibujar esta escalera.
      ramp_artist_loops8: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops8_2018: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops8_2019: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops8_clone: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops9: Resuelve este puzzle dibujando un cuadrado.
      ramp_artist_loops9_2018: Resuelve este puzzle dibujando un cuadrado.
      ramp_artist_loops9_2019: Resuelve este puzzle dibujando un cuadrado.
      scrat 16 (copy 1): '¡Bellota! ¡Bellota! ¡Bellota! Utiliza un bloque "si" para llevarme ahí con el menor número de bloques.'
      scrat 16: '¡Bellota! ¡Bellota! ¡Bellota! Utiliza un bloque "si" para llevarme ahí con el menor número de bloques.'
      scrat 17: Ok, vamos a hacerlo de nuevo para practicar - este no es muy diferente, ¡Pero ten cuidado con la pared!
      scrat 18 (copy 1): El bloque "If-else" verifica una condición y después hace o una cosa u otra. Para llevarme a la bellota intenta usar este nuevo bloque.
      scrat 18: El bloque "If-else" verifica una condición y después hace o una cosa u otra. Para llevarme a la bellota intenta usar este nuevo bloque.
      scrat 19 (copy 1): Una práctica más del bloque "si-sino", ¿Puedes hacerlo bien en tu primer intento?
      scrat 19: Una práctica más del bloque "si-sino", ¿Puedes hacerlo bien en tu primer intento?
      scrat 20: '¿Puedes agregar sólo 3 bloques para ayudarme a resolver un laberinto más complejo? Si lo haces correctamente puedo caminar cualquier camino curvo sin importar su longitud. !Date prisa! ¡El hielo se está derritiendo!'
      subgoal U3 L4 introducing subgoal labels: "Introducir a la tortuga \ny muevela"
      subgoal U3L2 Using Simple Commands: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haz clic para ver las instrucciones completas.
      subgoalU3L2_TurtleSquare_right: "Dibuja un cuadrado al frente y\n a la derecha de la ubicación de inicio. (Haga clic para mostrar las instrucciones completas)"
