---
es:
  data:
    long_instructions:
      "'pre-assessment survey q25A'": Si es asi, ¿qué curso(s) de ciencias de la computación has recibido antes del curso actual de ciencias de la computación?
      2-3 Artist 1 new: |-
        Hola, soy un artista. Puedes escribir código
        para hacerme escribir casi cualquier cosa. Usa unos bloques para hacerme dibujar sobre las
        líneas grises en la imagen. (Cada línea mide 100 píxeles)\\r
        \\r
      2-3 Artist 11: "Ponle un borde a la señal de stop creando\nun octógono con lados de 100 píxeles. "
      2-3 Artist 12: "¡Crea un círculo para acabar el globo ocular!\n\\\\r\n\\\\r\nSi el artista gira un grado con cada bucle, ¿cuántas veces necesitas\nrepetir el código para dibujar un círculo? "
      2-3 Artist 2 new: |-
        Esta casa tiene una pared medio acabada.
        Cada lado mide 100, pero la esa pared solo mide 50. Completa la pared.
      2-3 Artist 3.4: |-
        El bloque Salta mueve el artista sin dibujar.
        Dibuja la línea punteada utilizando los bloques Salta y Dibuja.
      2-3 Artist 3new: |-
        El gorro rojo tiene 100 píxeles de alto. Termina
        de dibujar un gorro negro 70 píxeles más corto. \\r
        \\r
        _(Nota: El ancho de cada
        gorro es de 50 píxeles)_
      2-3 Artist 4: Ayúdame a completar la casa para este gato.
      2-3 Artist 6: |-
        ¡Esta casa necesita un techo! Dibuja el triángulo. \\r
        \\r
        Pista:
        los tres lados son igual de anchos.\\r
        \\r
        <img src="https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif"
        width="300"/>
      2-3 Artist 7: "Termina de dibujar el último grupo de ventanas\nen la escuela para que todos en la clase vean el exterior. \\\\r\n\\\\r\nLos lados\nde cada panel de ventana cuadrado miden 25 píxeles. "
      2-3 Artist 8: |-
        ¡Hora de construir un granero!\\r
        \\r
        Haz las habitaciones
        para cada animal separando el granero en 2 cuadrados de igual tamaño.\\r
        \\r
        Pista:
        El rectángulo mide 200 píxeles de ancho y 100 de alto.\\r
        \\r
        Hay muchas
        formas diferentes de resolver este puzle.
      2-3 Artist 9 NEW: Termina esta cometa
      2-3 Artist 9 REPLACEMENT: "¡Termina de dibujar estas escaleras!"
      2-3 Artist 9: Termina esta cometa
      2-3 Artist Assessment 1: |-
        **Evaluación:** Termina de dibujar
        el último diente. Mide 25 píxeles de ancho y alto.
      2-3 Artist Debugging 1: |-
        Este gorro debería tener 50 píxeles
        de ancho.\\r
        ¿Puedes arreglarlo?\\r
        \\r
        <br/>\\r
      2-3 Artist Debugging 10: 'El pad de dirección en mi control es demasiado angosto. Sugerencia: Hazlo 10 pixeles mas ancho'
      2-3 Artist Debugging 11: |-
        Ayúdame a terminar mi hermoso copo de nieve.
        ¿Cuantas veces necesito "Repetir" para finalizarlo?
      2-3 Artist Debugging 2: 'El código para los tres bigotes que ves es incorrecto. Sugerencia: cada bigote tiene 75 pixeles de largo. Repara este código para dibujar los bigotes.'
      2-3 Artist Debugging 3: "¡Mi barco tiene un agujero! ¿Puedes repararlo cambiando el ángulo de la línea? Sugerencia: el último ángulo está errado por 15 grados."
      2-3 Artist Debugging 5: 'El código para la pierna y el pie está equivocado. Sugerencia: El pie es demasiado largo, podríamos necesistar eliminar un paso (juego de palabras intencional)'
      2-3 Artist Debugging 6: |-
        Parece que estoy sentado un una silla
        que le falta una pata. Edita los Bloques para dibujar la pata.
      2-3 Artist Debugging 7: |-
        Parece que la C en Código está dibujada al revés-
        ¿Puedes hacer que parezca una C?
      2-3 Artist Debugging 8: Mi molinillo de viento no está terminado. Cuántas veces necesito repetir para terminarlo?
      2-3 Artist Debugging 9: 'El código de este tallo es incorrecto. Sugerencia: El ángulo está fuera por 60 grados'
      2-3 Artist Debugging Assessment 1: |-
        **Evaluación:**\\r
        ¿Por qué
        este cuadrado acaba siendo 75 píxeles más corto de la cuenta en cada lado? \\r
        \\r
        ¡Dónde
        está mal el código?
      2-3 Artist Free Play: "¡Juego libre! Dibuja lo que quieras."
      2-3 Artist Functions 1 a: |-
        "Yo ser artista zombi. ¡Yo gustar dibujar!"
        \\r
        \\r
        Ayuda al zombi a dibujar gafas cuadradas. \\r
        \\r
        El puente entre las gafas
        es 25 píxeles más corto que el ancho de los acuadrados, que es 100 píxeles.\\r
        \\r
      2-3 Artist Functions 1: |-
        "Yo ser artista zombi. ¡Yo gustar dibujar!"
        \\r
        \\r
        Ayuda al zombi a dibujar gafas cuadradas. \\r
        \\r
        El puente entre las gafas
        es 25 píxeles más corto que el ancho de los acuadrados, que es 100 píxeles.\\r
        \\r
      2-3 Artist Functions 10: |-
        \*_Juego libre:_ Aquí hay dos funciones,
        una para dibujar un engranaje grande y otra para un engranaje pequeño. \\r
        \\r
        ¡Úsalas para
        dibujar el interior de una máquina!
      2-3 Artist Functions 11 a: Hemos rebautizado la función 'dibujar un cuadrado' a 'dibuja un hexágono', pero del que todavía nos da plazas!  ¿\\r \\r puede modificar la función 'dibujar un hexágono' para dibujar un hexágono con lados de pixel 50? \\r \\r dibujar la imagen usando la nueva función!
      2-3 Artist Functions 11.5 a: "Aquí tienes la misma función `dibuja un hexágono`. \n\n¿Qué ocurriría si haces un bucle del programa principal **6** veces, girando **60** grados cada vez que se repita el bucle?"
      2-3 Artist Functions 11.5: Aquí está la misma función "Dibuja un hexágono". ¿Que pasa si sólo giras 60 grados en cada iteración?
      2-3 Artist Functions 11: Hemos rebautizado la función 'dibujar un cuadrado' a 'dibuja un hexágono', pero del que todavía nos da plazas!  ¿\\r \\r puede modificar la función 'dibujar un hexágono' para dibujar un hexágono con lados de pixel 50? \\r \\r dibujar la imagen usando la nueva función!
      2-3 Artist Functions 12 Mike: 'Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función "dibujar una flor" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  '
      2-3 Artist Functions 12 a: 'Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función "dibujar una flor" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  '
      2-3 Artist Functions 12: 'Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función "dibujar una flor" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  '
      2-3 Artist Functions 2 a: "¡Las Funciones te dejan definir nuevos bloques! \n\nHemos movido los bloques necesarios para dibujar un cuadrado a una nueva función llamada `dibujar cuadrado`. Esta vez, usa el pequeño bloque verde de `dibujar cuadrado` para traer esta nueva función y crear los cristales.\n\nLos cuadrados de este dibujo están separados entre sí unos 75 px."
      2-3 Artist Functions 2: ¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada "dibuja un cuadrado". ¿Puedes utilizar la función "dibuja un cuadrado" para crear los lentes? Los cuadrados están separados por 75 píxeles.
      2-3 Artist Functions 3 a: "Edita la función \"dibuja un cuadrado\" para dibujar cristales con fotogramas de 115px por cada lado. \n\nLos cuadrados ahora están separados 45 píxeles."
      2-3 Artist Functions 3: Editar la función para dibujar un cuadrado con una longitud lateral de 115 y dibuja los lentes más grandes. Los cuadrados están ahora separados 45 píxeles.
      2-3 Artist Functions 4 a: Ahora, coloca la función dentro de un bucle y añade un turno extra para dibujar estos tres cuadrados.
      2-3 Artist Functions 4: Usa el bloque "repetir" para dibujar estos 3 cuadrados.
      2-3 Artist Functions 9: "\\*\\* Freeplay: \\*\\* esta es una función del copo de nieve. ¡Experimentar con él para crear una escena de invierno! \\\\r \\\\r este es un nivel de juego libre, por lo que no hay rompecabezas para resolver. ¡Que te diviertas!"
      2-3 Artist Loops 1: "¿Podrías hacer un hexágono que sus lados midan 100 pixeles de largo para terminar la célula? Recuerda, eso significa que ¡sólo deberas girar 60 grados!"
      2-3 Artist Loops 2: Ahora utilice un bloque de repetición para hacer la célula una cáscara.
      2-3 Artist Loops New 1: Vamos a dibujar la cabeza de la robusteza! ¿Se puede hacer un cuadrado con lados que son 100 píxeles? \\r \\r <br/> \\r
      2-3 Artist Loops New 10: Ahora conectemos un montón de V juntos, dibujándolos en un bucle.
      2-3 Artist Loops New 11: "¡Tiempo para hacer algo elegante! \\\\r \\\\r reconstruir el código del último puzzle, pero esta vez, añadir un giro a la izquierda 30 grados dentro del bucle. Ahora, repita 24 veces en lugar de 8."
      2-3 Artist Loops New 12: 'Dibuja un diamante con lados de 100 píxeles. '
      2-3 Artist Loops New 13: Ahora dibuja un diamante 3 veces en una iteración.
      2-3 Artist Loops New 14: Jugar con el código para el diamante y ver qué otros patrones que usted puede hacer. \\r \\r prueba cambiando cuántos grados gira y cuántas veces te lazo.
      2-3 Artist Loops New 15: Ahora, dibujar cualquier cosa que te gusta! \\r <br/> <br/> \\r \\r
      2-3 Artist Loops New 2: Aquí es el mismo rompecabezas que sólo solucionamos, pero esta vez, sólo podemos utilizar un bloque de 'avanzar' y 'girar' cuadra que este tiempo. \\r \\r puede utiliza una 'repetición' para resolver este rompecabezas?
      2-3 Artist Loops New 9: Dibuja una simple V donde ambos lados sean de 50 píxeles para completar la flecha.
      2-3 Artist Nested Loops 1: Has usado loops para dibujar formas antes, pero ahora vamos a poner bucles dentro de otros bucles! \\r \\r poner un bloque 'repetición' alrededor de esta pila de entero de código para dibujar el patrón de. \\r \\r <br/> \\r \\r
      2-3 Artist Nested Loops 10: Itera este código 12 veces para completar el patrón.
      2-3 Artist Nested Loops 11: Itera este código 4 veces para completar el patrón, gira 90 grados después de cada circulo.
      2-3 Artist Nested Loops 12: Itera este código 12 veces para completar los rizos.
      2-3 Artist Nested Loops 2: "Ahora usaremos un bucle para crear un triangulo 6 veces. \\\\r \n\\\\r\nDespués de dibujar cada triangulo, debes girar 60 grados antes de dibujar el siguiente."
      2-3 Artist Nested Loops 3: "Necesitaras hacer un bucle en tu triagulo 12 veces paradibujar este patrón.\\\\r\n\\\\r\nDivide el número de grados \nen un círculo(360) porel número de figuras que estás dibujando (12) para saber que tan tanto debes girar alrededor de cada figura."
      2-3 Artist Nested Loops 4: |-
        Haz un blucle con el diamante 12 veces para dibujar una flor!\\r
        \\r
        Nota: Usaremos el mismo ángulo para hacer el bucle de los 12 diamantes como lo hicimos para los 12 triángulos.  \\r
        ¿Cuánto necesitas girar después de hacer cada forma?
      2-3 Artist Nested Loops 5: |-
        Rellena dentro de las ventanas del edificio utilizando un bucle anidado. \\r
        \\r
        Las ventanas son de 20 pixels de largo por 20 pixels de ancho.
      2-3 Artist Nested Loops 6: |-
        Este dinosaurio tiene 4 pinchos a lo largo de su cola.\\r
        \\r
        Cada pincho tiene 30 pixels de largo. \\r
        \\r
        Haz un bucle con el triángulo 8 veces, pero asegúrate de saltar hacia delante después de cada uno!
      2-3 Artist Nested Loops 7: |-
        Haz un bucle con este triángulo 10 veces para dibujar el sol. \\r
        \\r
        Necesitarás moverte y torcer después de cada triángulo..
        \\r
        \\r
        Puedes averiguar cuánto tienes que girar dividiendo el número de grados que tiene un círculo entre el número de triángulos que quieres hacer.
      2-3 Artist Nested Loops 8: |-
        Ahora vamos a añadir algo de hierba a nuestra imagen. \\r
        \\r
        Las matas de hierba están separadas 50 pixels entre sí.
      2-3 Artist Nested Loops 9: |-
        Vamos a terminar este dibujo añadiendo nuestra flor. \\r
        \\r
        Haz el bucle del diamante 12 veces para dibujar la flor.
      2-3 Artist Nested Loops Free Play: Juego libre, dibuja algo chulo con los bucles anidados.
      2-3 Bee Conditionals 11: Colecta néctar donde las flores tienen néctar.
      2-3 Bee Conditionals 13: 'Recoge néctar y haz miel. Pista: ¿Qué ocurre si usas el condicional "Si nectar" en una flor roja? ¿Puedes completar esto con un bucle (loop)?'
      2-3 Bee Conditionals 14: |-
        Vamos a juntar todo!\\r
        \\r
        Usa lo que has aprendido para ayudarme a recolectar néctar sólo de las flores que tienen néctar, utilizando el menor número de bloques posible.  \\r
        \\r
        No olvides hacer la miel al final.
      2-3 Bee Conditionals 15: Recoge néctar de las cuatro flores.
      2-3 Bee Conditionals 2: |-
        Soy una abeha hambrienta! \\r
        \\r
        \\r
        Ayudame a recolectar todo el néctar de las flores utilizando el menor número de flores.
      2-3 Bee Conditionals 3: Ayúdame a recoger todo el néctar de las flores y a hacer miel. Usa un bucle (loop).
      2-3 Bee Conditionals 5: |-
        Estas flores púrpura cambian!\\r
        \\r
        Cada vez que intentas el puzzle, las flores púrpura pueden tener nectar o no... pero no sabrás el número hasta que ejecutes el código! \\r
        \\r
        Ten cuidado de no recolectar néctar de una flor púrpura si no tiene. \\r
        Primero deberás comprobar si el néctar es igual a 1 usando el bloque `si hay néctar`.
      2-3 Bee Conditionals Assessment 1: |-
        **Assessment:** Recolecta todo el néctar.  \\r
        Ten cuidado de no recolectar néctar de de una flor púrpura que no tiene nada de néctar.
      2-3 Bee Debugging 1: |-
        ¡Estos bloques me están molestando!\\r
        \\r
        Arregle el/los error (s) para recoger todo el néctar.
      2-3 Bee Debugging 10: "¡Este rompecabezas me está volviendo loco!\n\\\\ r\n\\\\ r\nArregle el/los error (s) para recolectar todo el néctar y hacer \ntoda la miel."
      2-3 Bee Debugging 2: |-
        ¿Puedes encontrar el problema aquí?\\r
        \\r
        Arregla el/los error(s) para recolectar todo el nectar.
      2-3 Bee Debugging 3: |-
        Ooh, este pica!\\r
        \\r
        Arregla
        el error(s) para recoger todo el néctar.
      2-3 Bee Debugging 5: |-
        ¡Esa flor se ve deliciosa! \\r
        \\r
        Arregle el/los error (s) para recoger todo el néctar. \\r
        Ahora puede usar tanto la ejecución como el paso.
      2-3 Bee Debugging 6: |-
        ¡Qué desafío tan dulce!\\r
        \\r
        Arregla
        el error(s) para recoger todo el néctar.
      2-3 Bee Debugging 9: Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging Assessment 1: |-
        \*\* Evaluación: \*\* Ahora
        es tiempo de mostrar lo que sabes!\\r
        \\r
        Repare el error(s) para recojer todo
        el néctar y hacer toda la miel.
      2-3 Bee Functions 1: |-
        Las funciones son bloques de código que realizan una tarea. \\r
        \\r
        Usa la función `obtener 2 néctar` para recolectar el néctar de cada flor.
      2-3 Bee Functions 10: Las flores moradas pueden tener 1 o 0 néctar. Crea una función que recoja el néctar solo de aquellas flores que lo tengan.
      2-3 Bee Functions 2: |-
        Las funciones son bloques de código que realizan una tarea. \\r
        \\r
        Usa la función `obtener 5` para obtener 5 néctares a la vez.
      2-3 Bee Functions 4: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      2-3 Bee Functions Assessment 1: "\\*\\* Evaluación: \\*\\* Use la función dada para recolectar néctar de cada flor."
      2-3 Bee Functions Assessment 2: "\\*\\* Evaluación: \\*\\* Crea una función para girar, avanzar y hacer 3 mieles, luego regresa la abeja al lugar donde comenzó y vuelve atrás."
      2-3 Bee Loops 1: 'Cada flor continene una unidad de néctar. Recolecta néctar de cada una de las flores. '
      2-3 Bee Loops 13: "\\*\\* Evaluación: \\*\\* Recoge todo el néctar usando la menor cantidad posible de bloques."
      2-3 Bee Loops 3A: "¿Podrías utilizar un ciclo para recolectar todo el néctar?"
      2-3 Bee Loops 3B: Ahora usa el bloque 'repetir' para recolectar todo el néctar y crear toda la miel.
      2-3 Bee Loops 4: |-
        ¡Una abeja tan ocupada!
        \\r
        Ayuda a Abeja a recolectar todo el néctar y hacer toda la miel con la menor cantidad de bloques posible.
      2-3 Bee Loops 4A: |-
        ¿Qué pasa si haces un ciclo con esta secuencia 3 veces?
        ¡No olvides hacer la miel al final!
      2-3 Bee Loops 5: |-
        La forma de este camino es diferente de los demás. \\r
        \\r
        ¿Puedes recolectar todo el néctar usando la menor cantidad de bloques posible?
      2-3 Bee Loops 7: |-
        Que hermoso campo de flores! \\r
        \\r
        Ayuda
        a la abeja a visitar cada uno.\\r
        \\r
        Puedes conseguir la manera de hacerlo con menos de 7 bloques?
      2-3 Bee Loops 8: |-
        Estas flores moradas tienen una cantidad desconocida de
        néctar. Utiliza el ciclo "while nectar" para recolectar todo el néctar. Este ciclo
        va a ejecutarse mientras la condición sea verdadera, en este caso Nectar > 0.
      2-3 Bee Loops Assessment 1: |-
        \*\* Evaluación: \*\* Use un bucle `siempre que`
        para recoger todo el néctar de estas flores.
      2-3 Maze 1: "¿Puedes ayudarme a atrapar el cerdo\nrevoltoso? \\\\r\n\\\\r\njunta un par de bloques `adelante 'debajo del` cuando se ejecute\\`\nbloquea y presiona \"Ejecutar\". "
      2-3 Maze 12 - One Move Block: |-
        Obtén el cerdo malo!
        Pero esta vez, solo puedes usar un bloque de `avanzar`\\r
        \\r
        Ah observa de cerca
        ¿Ves algunos otros bloques que puedan ayudarte a llegar allí?
      2-3 Maze 12: |-
        Subitamente, aparece un bloque mágico! Con
        el bloque `repetir`, puede repetir el código una y otra vez.\\r
        \\r
        Puedes llegar a
        el cerdo creando un circuito que usa solo un bloque \`adelante' en el interior
        de una 'repetición'?
      2-3 Maze 13: |-
        Llévame al cerdo! tu solo puedes usar un
        bloque de `avanzar`en esta oportunidad
      2-3 Maze 15: Usa dos ciclos para hacer que el cerdo use menos bloques.
      2-3 Maze Loops 18: "¡Llévame al girasol!"
      2-3 Maze Loops 19: |-
        ¡Llevemos esto a otro nivel!
        \\r
        \\r
        Usa las curvas para llevarme al girasol usando el menor número posible de ellas.
      2-3 Maze Loops Assessment 1: "**Evaluación:** Llévame\nal girasol usando solo 5 bloques! "
      4-5 Artist 1: |-
        Ayúdame a terminar de dibujar mi caja. (Cada línea
        tiene 300 píxeles de largo) \\r
        \\r
      4-5 Artist 10: |-
        Presiona "Ejecutar" para probar el código. Entonces, repite
        las veces necesarias para completar el dibujo. Los colores serán diferentes cada
        hora.
      4-5 Artist 11: "Completa las líneas verdes. \\\\r \n\\\\r\nlas\nlíneas tienen 300 píxeles de largo y 15 píxeles de separación."
      4-5 Artist 2: |-
        Pasa este código usando el bloque `repetir`
        para completar el cuadrado.
      4-5 Artist 3.5: |-
        Intenta descubrir qué sucede si
        ejecutas este código (o simplemente presiona "Ejecutar" y pruébalo). \\r
        \\r
        Luego, repite el
        código las veces necesarias para completar el dibujo!
      4-5 Artist 3: |-
        Esta cama rectangular de flores tiene un perímetro
        de 600. \\r
        El lado largo tiene una longitud de 200. \\r
        \\r
        Dibuja el rectángulo
        usando la menor cantidad de bloques posible.
      4-5 Artist 4: |-
        ¿Cuántos grados hay en un círculo? \\r
        \\r
        Enlaza
        los bloques para crear un círculo de colores.
      4-5 Artist 5: |-
        ¿Qué podemos reemplazar "???" con hacer
        seguro que el zombi completa este dibujo usando el circuito proporcionado?
      4-5 Artist 6: |-
        Este triángulo equilátero tiene ángulos de
        60, 60 y 60 grados Cada lado tiene 200 píxeles. Completa el dibujo.
      4-5 Artist 7: |-
        Este triángulo rectángulo tiene ángulos de 30, 60,
        y 90 grados. La longitud de los lados inclinados (longitud de la hipotenusa) es
        200 píxeles. \\r
        \\r
        Completa el dibujo.
      4-5 Artist 8: |-
        La línea de mitad de un campo de fútbol es \* perpendicular \*
        a los lados. \\r
        Este rectángulo tiene un perímetro total de 800 píxeles,
        y tiene 240 píxeles de largo. ¿Qué tan alto es? \\r
        \\r
        Dibuja los límites y la
        linea central.
      4-5 Artist 9: |-
        Dibuje la mitad derecha de esta imagen para que
        el diseño sea simétrico \\r
        Los triángulos son equiláteros y tienen lados
        que tienen 50 píxeles de largo.
      4-5 Artist Assessment 1: |-
        \*\* Evaluación: \*\* Use un circuito para
        dibujar el triángulo equilátero. Cada lado tiene 300 píxeles.
      4-5 Artist Free Draw 1: |-
        ¡Dibujo libre! Dibuja cualquier cosa que tu
        estés inspirado para crear.
      4-5 Artist Patterns 1: "¿Puedes dibujar esta cuadro utilizando un bucle? Cada lado es de 20 píxeles de largo."
      4-5 Artist Patterns 10: |-
        Este código dibuja dos filas de hexágonos

        -   Circule todo 4 veces para dibujar todo el panal. \\r
            \\r
            Usted
            necesita retroceder 120 píxeles en su ciclo más externo para asegurarse de que el artista
            no dibuja fuera de la pantalla.
      4-5 Artist Patterns 11: |-
        Cuantas veces necesitas
        curvar esto para dibujar un medio círculo?
      4-5 Artist Patterns 12: Si copia ese bucle y girar a la izquierda en lugar de la derecha, ¿qué pasa? ¿Puedes repetir eso para dibujar esta ola?
      4-5 Artist Patterns 13: Ahora repitamos todo eso cuatro veces para crear este cuadro. Cuidado con las esquinas - ¡simplemente no puedes girar 90 grados! Si repetir 60 veces un giro de 3 grados hace un semicírculo, ¿cuál de estos bloques de código hará un cuarto de círculo para las esquinas?
      4-5 Artist Patterns 2: |-
        Si coloca su bucle del cuadrado dentro de otro ciclo, llamamos a eso un bucle anidado. \\r
        \\r
        Que necesitas para agregar como un bucle externo para asegurarse de que los 15 cuadrados se alineen uno al lado del otro?
      4-5 Artist Patterns 3: Ahora vamos a un nivel más profundo. Hemos anidado todo el bloque de código en otro bucle, pero tienes que poner al artista en su lugar para dibujar la línea siguiente. ¿Cuál de estos bloques de código puede usted colocar al final del bucle exterior para dibujar la red entera?
      4-5 Artist Patterns 4: |-
        Este diamante tiene lados de 50 píxeles
        y ángulos de 120 y 60 grados. \\r
        \\r
        Usa un recodo para dibujarlo.
      4-5 Artist Patterns 5: |-
        Repite este código para hacer una fila
        de 6 diamantes \\r
        \\r
        Tenga en cuenta que hemos cambiado nuestro código de diamante para repetir 3
        veces en lugar de 2 - ¿por qué crees que se hizo?
      4-5 Artist Patterns 6: |-
        Cuantas veces necesitas
        repetir este bloque para dibujar la rejilla completa de diamantes?\\r
        \\r
      4-5 Artist Patterns 7: |-
        Modifiquemos el código del último puzzle para hacer este patrón más complejo. Observe cómo los diamantes se superponen ahora, intente cambiar el primer "retroceso" de 100 a 50 (la mitad de distancia)

        -   ¿ ahora hasta dónde debe llegar el artista en el segundo "retroceso"?\\r
            \\r
      4-5 Artist Patterns 8: Utilice un bucle para dibujar este hexágono con 40 píxeles lados y ángulos de 60 grados.
      4-5 Artist Patterns 9.5: |-
        Vamos a recorrer este código para dibujar dos filas de hexágonos. \\r
        \\r
        Observa cómo nuestra segunda fila se desplaza hacia la derecha.
      4-5 Artist Patterns 9: "Ahora repite que código 3 veces para dibujar toda la fila. \nSugerencia, cada hexágono es 80 píxeles de ancho desde los puntos más lejano de izquierda a derecha."
      4-5 Artist Patterns Free Play: Juego libre - prueba tu destreza en la fabricación de un patrón propio!
      4-5 Bee Conditionals 1: |-
        ¡Esta nube está bloqueando mi vista!
        \\r
        \\r
        Comprueba si hay una flor debajo de la nube, y solo consigue el néctar
        si hay una flor.  \\r
        ¡Ten cuidado, esta puede cambiar!
      4-5 Bee Conditionals 2: "La abeja sólo quiere néctar ahora . \nRecuerde que no todos los objetos son flores, recoge néctar solamente de las flores."
      4-5 Bee Conditionals 4: |-
        A veces, esta nube cubre una
        flor, y a veces cubre un panal! \\r
        \\r
        Use el bloque `si/no`
        para recolectar néctar solo si es una flor. \\r
        De lo contrario, haz miel (porque
        es un panal de miel).
      4-5 Bee Conditionals 5: Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, sino haz miel (porque hay un panal de abejas).
      4-5 Bee Conditionals 6: Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque if-else se combina con otro bloque if-else para crear un bloque if,else-if, else. Completa la solución para recoger la cantidad desconocida de néctar.
      4-5 Bee Conditionals 7: Recuerda que las flores púrpura pueden tener 1, 2 ó 3 néctares. Completa la función "revisar flor púrpura" y úsala para recoger todo el néctar de las flores.
      4-5 Bee Conditionals 8: Escribe una función dentro del bloque llamada "revisar que la flor hace miel." Tu función debe comprobar cuánto néctar tiene la flor púrpura, recogerla, avanzar y luego hacer miel.
      4-5 Bee Conditionals Assessment 1: |-
        Evaluación: Este código está errado.
        Completa la función "consigue néctar o produce miel" entonces llámalo para recolectar todo el néctar y la miel. Recuerda que las rosas púrpuras pueden tener 3,2 o 1 néctares.
      4-5 Bee Debugging 1: Estos bloques realmente me molestan. ¿Puedes arreglarlos?
      4-5 Bee Debugging 6: |-
        La flor morada tiene una diferente
        cantidad de néctar cada vez que ejecutas el rompecabezas. \\r
        \\r
        Arregla los bloques para obtener
        todo el néctar de la flor cada vez.
      4-5 Bee Debugging Assessment 1: |-
        \*\* Evaluación: \*\* Repare el
        código.
      4-5 Bee Nested Loops 2: "Recolecta todo el néctar de cada flor. \n\nUsa un bucle anidado. "
      4-5 Bee Nested Loops 4: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      4-5 Bee Nested Loops Assessment 1: |-
        \*\* Evaluación: \*\* Reunir
        todo el néctar y hacer toda la miel usando lazos.
      4-5 Maze 7: |-
        Obtiene el Zombie para el girasol rápidamente! \\r
        \\r
        Puedes
        tu resolver el rompecabezas en menos de 11 bloques?
      4-5 Maze 9: |-
        Ahora te presentamos el nuevo bloque llamado Repetir Hasta = "Repeat Until" \\r
        \\r
        Este crea un ciclo hasta que el Zombie llegue al girasol. \\r
        \\r
        Este nuevo bloque te ayuda a solucionar el ejercicio con menos bloques.
      4-5 Maze Assessment 1: |-
        \*\* Evaluación: \*\* Llega al girasol
        usando la menor cantidad posible de bloques.
      4-5 Maze Conditionals 1: Utiliza el bloque repetir hasta para llevar al zombie hasta el girasol.
      4-5 Maze Conditionals 10: |-
        ¿Puedes agregar solo 3 bloques para ayudar al zombi a resolver un laberinto más complejo? \\r
        \\r
        Si lo haces bien, él puede caminar cualquier camino curvilíneo sin importar la longitud!
      4-5 Maze Conditionals 2: Utiliza el bloque repetir hasta para llevar al zombie hasta el girasol.
      4-5 Maze Conditionals 3: |-
        Usa el bloque `si` para ayudarme
        a decidir cuándo girar. \\r
      4-5 Maze Conditionals 4: |-
        Ok, resuelve este como el último puzzle, pero necesitas recordar cómo usaste los bloques `si` y
        `repetir hasta` juntos.
      4-5 Maze Conditionals 5: |-
        "¡Quiero girasol!" \\r
        \\r
        Usa
        una declaración `si` para llevar al zombi al girasol con el menor número
        de bloques.
      4-5 Maze Conditionals 6: |-
        "¡Come girasol!"\\r
        \\r
        Usa
        una declaración `si` para llevar al zombi al girasol con el menor número
        de bloques.
      4-5 Maze Conditionals 7: |-
        La solución a este rompecabezas
        no es muy diferente, ¡pero ten cuidado con los chompers!
      4-5 Maze Conditionals 8: |-
        El bloque `si/ no` verifica una
        condición, entonces hace una cosa u otra. \\r
        \\r
        Usa este nuevo bloque
        para llevarme al girasol.
      4-5 Maze Conditionals 9: |-
        Practica un rompecabezas más con
        el bloque `si/no`!\\r
        \\r
        Síguelo con tu dedo para ver si puedes lograr
        en tu primer intento.
      4-5 Maze Conditionals Assessment 1: |-
        \*\* Evaluación: \*\* Usa
        un `repetir hasta` y un bloque`si/no` para llevarme al girasol usando la menor cantidad de
        bloques como sea posible.
      4-5 Nested Loops 1: |-
        Completa el código para dibujar estos triángulos. El
        primero está hecho para ti. Sugerencia: 3 triángulos en una rotación de 360 grados.\\r
        \\r
      4-5 Nested Loops 11: |-
        ¿Puedes tu dibujar los 10 cuadrados de
        esta acera usando un circuito insertado? \\r
        \\r
        Cada cuadrado tiene 30 píxeles.
      4-5 Nested Loops 12: "¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?"
      4-5 Nested Loops 2: "Ahora anida este bucle dentro de otro para dibujar 10 triángulos. \nEsto se llama un bucle \"anidado\".  "
      4-5 Nested Loops 3: Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado. \\r
      4-5 Nested Loops 5: has un bucle con el código dado para crear un molino de viento.
      4-5 Nested Loops 6: |-
        ¿Puedes dibujar un hexágono haciendo un enlace
        con el código triangular?
      4-5 Nested Loops 7: 'con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuanto es 360 dividido por 10?)'
      4-5 Nested Loops 8: 'Repite el bucle 6 veces. ¿Cuánto tienes que girar cada vez el bucle? (Pista: ¿Cuánto es 360 dividido por 6?)'
      4-5 Nested Loops 9: Dibujar los dientes en la boca del cocodrilo!
      4-5 Nested Loops Assessment 1: "**Evaluación:** Usa un bucle anidado para completar el diseño."
      4-5 While Loops 1: |-
        Muéveme al hoyo y llénalo con
        dos paladas de tierra, usando el bloque `llenar`.
      4-5 While Loops 2: |-
        Moverme a la pila de tierra y eliminar
        eso con 5 palas de cuchara, usando el bloque `remover 1`.
      4-5 While Loops 3: |-
        Use la menor cantidad de bloques posible para completar
        este rompecabezas! \\r
        \\r
        Muéveme al montón y quita todo el sucio, luego muévete
        al agujero y llénalo completamente.
      4-5 While Loops 4: "Wow, mira eso! \\\\r\n\\\\r\nYo no\nse cuántas palas de tierra necesita este hoyo. \\\\r\n¿Puedes tu escribir un programa\nque siga usando el bloque `llenar` hasta que el suelo esté parejo?\n  "
      AWS applab: |-
        # Ahora haz esto

        \*primer paso
        \*segundo paso
      AWS link: "# Usa esta herramienta para cosas"
      AlgPD DR Free Play: Utilizando un problema de palabra de tu currículum existente o algún otro lugar, completa la Receta de Diseño y programa una función. Usa un formulario de Receta de Diseño de tu libro de trabajo o descarga una copia [here]('https://code.org/curriculum/ebralga/docs/worksheets/design_recipe.pdf').
      Alien Defender: |-
        \*\* La Idea del proyecto \*\*: hacer un juego protector
        en Play Lab!
      Alien Defender_2018: |-
        \*\* La Idea del proyecto \*\*: hacer un juego protector
        en Play Lab!
      AllTheThings Applab - Turtle move with button: "# Por favor, regístrese para probar niveles applab (diseño, los niveles applab sólo funcionan si se está registrado. Normalmente, pedimos que la gente se registre, pero esto sólo es exigible para un guión entero y sería molesto para el script de todas las cosas).\n\n# Tu primera aplicación interactiva!\n\n<img src='https://images.code.org/3fad83213ae72073251c4d5abc1f048a-image-1444060521578.png' style='float: right; width: 250px'> Se ha añadido un. nuevo grupo de comandos a la caja de herramientas llamado **controles UI** (controles de interfaz de usuario) que son comandos que le permiten interactuar con y responden al usuario de su aplicación. Para simplificarlo, empezamos con sólo dos comandos: \n\n-   'onEvent' que permite ejecutar una función en respuesta a eventos que ocurren (como un clic de botón)\n-   'botón', que pone un botón en la pantalla\n\n# Haga esto\n\nReplicará la pequeña aplicación, que se muestra a continuación, que hace que la tortuga se mueva con un clic de botón. Hará tres cosas:\n\n-   Añadir un 'botón'\n-   Agregar un bloque de 'onEvent'\n-   Añadir 'moveForward' dentro del bloque de función de onEvent\n\nAquí está lo que debe hacer - usted puede volver a ver esto tantas veces como usted necesita para hacer las cosas bien.\n<img src=\"https://images.code.org/1cdc8cfbcef2a43f84b11ebdf14aed0c-image-1444061731350.gif\" style=\"border: solid 1px black; width: 500px; margin: auto\">"
      AllTheThings Applab DesignModeDefault: "<img src=\"https://images.code.org/117a2a8e098760173f16048fde721295-image-1479829058899.gif\" style=\"float: right; width: 150px\">\n\n## Pruébelo -- corrector de contraseña de texto\n\n\\*\\* Idea clave\\*\\*: puede utilizar '==' para comparar tanto cadenas como números.  \n\n-   Usemos una instrucción if en un controlador de eventos para comparar texto que un usuario introduce en un elemento de interfaz de usuario.\n\n**La configuración:**\n\n-   Tenga en cuenta la configuración en modo de diseño\n-   Hay dos imágenes: un bloqueo rojo y un \"desbloqueo\" verde.\n-   El \"desbloqueo\" verde está _oculto_ al principio.\n\n## Haga esto:\n\n**Añadir una instrucción if para el controlador de eventos para comprobar la contraseña y mostrar el \"desbloqueo\" sólo si la contraseña es correcta** \n\n_Puede utilizar '==' para comparar el texto que obtiene del cuadro de texto de \\\\_introducción_de_contraseña\\* y una cadena que desea utilizar como contraseña. La expresión booleana que debe usar debe tener este aspecto:\n\n![](https://images.code.org/9124274f38ed19bdae6cfc4b492162b6-image-1479828796051.png)\n\n\\*Si el usuario introduce la contraseña correcta entonces **muestra** el \"desbloqueo\" verde y **oculta** el bloqueo roja.\n\\\\t\\* Hemos proporcionado el código para ocultar y mostrar las imágenes. Basta con añadir la instrucción if.\n\\*En caso contrario no hacer nada.  Pueden probar otra vez."
      'AllTheThings: Pixelation - Lesson 15 - Complete 3-bit color': "# \n\nColor de Pixelacion: Tarea 1\n**Direcciones:**\n\n-   Comenzamos con la imagen de 4x2\n    Maddie estaba creando, pero hemos omitido las dos últimas cuadriculas.\n-   Terminar\n    la imagen al descubrir qué dos colores faltan y codificarlos."
      AppLab Intro 1 - Build Your Adventure: |-
        # Build Your Adventure\\r

        \\r
        Use este proyecto en blanco para construir su proyecto. Para comenzar, ya hay una pantalla de inicio con un par de botones. Si lo desea, puede \*\* hacer rápidamente copias de pantallas \*\* para construir su mundo. ¿Qué vas a crear?!\\r
        \\r
        Cuando hayas terminado, puedes "Compartir" tu trabajo con un amigo por teléfono o con un enlace. ¡Crea tu propia cuenta para seguir construyendo en App Lab!
      AppLab Intro 1 - Template: |-
        # Primeros pasos: prueba esta

        aplicación\\r
        \\r
        Antes de construir su propia elija su propia aplicación de aventura, practique
        usando AppLab y construya esta sobre una visita a una tienda de mascotas. Para empezar,
        haga clic en "Ejecutar" y luego navegue a la pantalla "Perros". Una vez que hayas hecho
        eso haga clic en "Finalizar" para continuar.
      AppLab Intro 1 - Try App: |-
        # Primeros pasos: prueba esta

        aplicación\\r
        \\r
        Antes de construir su propia elija su propia aplicación de aventura, practique
        usando AppLab y construya esta sobre una visita a una tienda de mascotas. Para empezar,
        haga clic en "Ejecutar" y luego navegue a la pantalla "Perros". Una vez que hayas hecho
        eso haga clic en "Finalizar" para continuar.
      AppLab Intro 2 - Template: |-
        # Primeros pasos: prueba esta

        aplicación\\r
        \\r
        Antes de construir su propia elija su propia aplicación de aventura, practique
        usando AppLab y construya esta sobre una visita a una tienda de mascotas. Para empezar,
        haga clic en "Ejecutar" y luego navegue a la pantalla "Perros". Una vez que hayas hecho
        eso haga clic en "Finalizar" para continuar.
      AppLab Intro 2 - Try Cat Commander: |-
        Esto es lo que
        luce como el código Cat Commander. Tómese un minuto para desplazarse por el código
        y mira si puedes entender cómo esto funciona. Discute de eso con un compañero.
        ¿Que patrones puedes ves? \\r
        \\r
        Una vez que hayas terminado, continúa haciendo clic en "Ejecutar"
        entonces, "Finaliza", para aprender como construir tu propia aventura.
      AppLab Intro 2 - add images: |-
        Ahora lo sabes todo
        necesitas hacer una simple selección elige tu propia aplicación de aventura, pero puedes agregarla y
        ¡mucho más! ¡Si quieres agregar imágenes a tu pantalla, es fácil!\\r
        \\r
        1.
        En otra pestaña de tu navegador, ve en línea y encuentra una imagen que quieras usar.\\r
        2.
        Haga clic con el botón derecho en la imagen y guarde su URL (generalmente "Copiar la dirección del enlace" o "Copiar"
        imagen URL ") \\r

        3.  De vuelta en App Lab, vaya a Modo de diseño \\r
        4.  Arrastra una "imagen"
            o elemento a su pantalla \\r
        5.  Pegue la URL que copió en la "imagen"
            propiedad\\r
            \\r
            "Ejecuta" tu aplicación una vez para probarla. Luego presiona "Finalizar" para moverte
            para aprender a agregar sonidos.\\r
            \\r
            ![expandable](https://images.code.org/5b977b1c127b3fcb1761aadcb74c79e8-image-1505772215256.gif)
            Haga clic para ver GIF de todos los pasos
      AppLab Intro 2 - finish and share: |-
        ¡Felicidades por terminar
        tu hora de código! ¡Puedes compartir tu trabajo con amigos! Haga clic en "Compartir" para
        obtener un enlace o incluso enviarle un texto. \\r
        \\r
        Puedes seguir trabajando en tu proyecto
        aquí. Cada vez que tus amigos vayan al enlace que compartiste, recibirán la última
        versión que hiciste ¿Cuán lejos construirás tu aventura?
      AppLab Intro 3 - Change Screen Color: Selecciona el color de fondo de la pantalla en rojo. Pincha en la imagen para ver cómo hacerlo.
      AppLab Intro 4 - Video onEvent: "# Usando onEvent"
      AppLab Intro 4 - Video share your work: "# ¡Crea y comparte tu Aplicación!"
      AppLab Intro 4 - Video share: "# ¡Crea y comparte tu Aplicación!"
      AppLab Intro 4 - thisOrThat design: |-
        \*\* Objetivo: \*\* probar
        Modo de diseño para seguir haciendo cambios a esta o aquella aplicación. También hay
        algunos nuevos bloques en tu caja de herramientas! Aprenderá más sobre esto en lecciones posteriores.\\r
        \\r
        **Cómo:**
        Haga clic en "Diseño" para editar rápidamente el aspecto de su aplicación o agregar elementos de pantalla
        usted mismo. Experimente con algunos de los nuevos bloques en la caja de herramientas.
      AppLab Intro 4 - thisOrThat template: |-
        \*\* Objetivo: \*\* probar
        el modo de diseño para seguir haciendo cambios a esta o aquella aplicación. Aprenderás
        más en lecciones posteriores.\\r
        \\r
        \*\* Cómo: \*\* Haz clic en "Diseño" para editar rápidamente
        cómo se ve tu aplicación o agrega elementos de pantalla tú mismo.
      AppLab Intro 5 - go further: |-
        \*\* Objetivo: \*\* Esto es un espacio en blanco
        Proyecto App Lab. ¡Construye lo que quieras aquí! También tienes algunos bloques más
        puedes probar si quieres. ¡No olvides compartir tu trabajo!
      AppLab Intro 5 - share keep going: |-
        \*\* Objetivo: \*\* Comparte tu
        aplicación con alguien, ¡o simplemente envíala! ¡Entonces sigue desarrollándola!\\r
        \\r
        **Cómo:**
        Haz clic en "Compartir" para encontrar muchas formas de compartir tu aplicación. Aquí hay algunas ideas
        para probar\\r
        \\r

        -   Agregue un botón que lo lleve de regreso de `" pantalla2 "` a `" pantalla1 "` \\r
        -   \*
            Agregue más pantallas con más imágenes\\r
        -   Agregue más tipos de botones de reacción
            donde los usuarios puedan hacer clic
      AppLab Intro 5 - socialTemplate: "\\*\\* Objetivo: \\*\\* Agregar un botón\na la pantalla para desplazarse a la siguiente imagen. Dale un buen ícono, como una\nflecha correcta. En el siguiente nivel lo harás funcionar.\\\\r\n\\\\r\n\\*\\* Cómo: \\*\\* Usa el modo\ndiseño para arrastrar en un botón. La biblioteca de iconos tiene muchas flechas diferentes para seleccionar.\\\\r\nNo olvides que puedes buscarlos.\\\\r\n\\\\r\n**Muéstrame:** "
      AppLab Intro 6 - animalSoundBoard: |-
        \*\* Objetivo: \*\* Seguir construyendo
        fuera del tablero de sonido animal. Luego asegúrate de "Compartirlo".\\r
        \\r
        **Cómo:**
        Agrega nuevos botones para más animales. O haz la caja de resonancia para un tema totalmente diferente
        por completo!
      AppLab Intro 6 - blankApp: |-
        \*\* Objetivo: \*\* Esto es completamente
        una aplicación en blanco App Lab. Construye lo que quieras desde cero!?\\r
        \\r
        **Cómo:**
        Tú tienes el control aquí. ¡Tú decides lo que quieres hacer!
      AppLab Intro 6 - quizApp: |-
        \*\* Objetivo: \*\* Desarrollar tres preguntas
        en esta aplicación Quiz. Tu siempre puedes hacer más preguntas duplicando las pantallas.
        ¡Entonces, envíala a un amigo!\\r
        \\r
        \*\* Cómo: \*\* Ejecuta la aplicación primero e intenta hacer clic
        en todos los botones para ver cómo funciona. Luego, desde el modo de diseño se puede cambiar
        el texto predeterminado para las preguntas y los botones. En modo Código crea respuesta
        texto para cuando el usuario haga clic en los diferentes botones. ¡Personaliza los colores
        o si quieres también puedes agregar imágenes!
      AppLab Intro 6 - thisOrThatAddButton Template: "**Meta:**\nAgregar un segundo botón a la pantalla que dice \"¡Bien!\"\\\\r\n\\\\r\n**Cómo:** En\nmodo de diseño arrastrar en un nuevo botón. Posicionar y redimensionarlo. Luego configure su `\" texto \"`,\n`\" color de fondo \"`, y `\" tamaño de fuente \"\\r`\n\\\\r\n**Muéstrame:** "
      Artist Autorun Test: Usa el bloque "repetir" para dibujar estos 3 cuadrados.
      Bergeron Robot Maze1: "¿Puedes ayudarme a atrapar el cerdo\nrevoltoso? \\\\r\n\\\\r\njunta un par de bloques `adelante 'debajo del` cuando se ejecute\\`\nbloquea y presiona \"Ejecutar\". "
      Big Game Final: |-
        ¡Lo has conseguido!

        En este punto, tu juego debería funcionar sin problemas, tómate tu tiempo para disfrutar de tu juego y hacer algunos cambios finales en él.

        Cuando estés contento con el producto final, haz click en Finalizar y tendrás la oportunidad de compartir un link con tu juego.

        ¡Buen trabajo!
      Big Game Player 1: |-
        ¡Ya estamos terminando un juego completo!

        La última vez que trabajaste en el juego, usaste booleanos para hacer que tu Objetivo y Peligro regresaran a la pantalla tras desaparecer. Haz click en "Ejecutar" para ver el aspecto que tiene tu juego ahora, tras lo cual haremos que tu Jugador pueda moverse arriba y abajo.
      Big Game Vars 2: El primer paso para hacer este juego único y tuyo es darle un buen Título. Haz click en editar en las variables `título` y `subtítulo` y cámbialas por algo nuevo.
      Big Game Vars 3: Ahora vamos a establecer el fondo de tu nuevo juego. Edita la variable `bg` y selecciona una nueva Imagen de fondo del menú desplegable.
      Big Game Vars 4: ¡Impresionante! Ahora puedes actualizar las variables de tu Jugador, Objetivo, y Peligro. Juega con todas las variables libremente para hacer que tu juego tenga el aspecto que deseas. Haz click en "Finalizar" cuando acabes.
      Boolean Expressions: |-
        ### Puntos a tener en cuenta:

        1.  ¿Qué es una _Expresión Booleana?_
        2.  ¿Por qué se llama  "Booleano"?
        3.  ¿Es esta una expresión legal: `10 > 25`?
      Brad Spooky House Copy: 'Juego Libre: Aquí están las funciones que has escrito, y algunas más con las que podrás juguetear. ¡Experimenta con la anchura del lápiz para crear dibujos diferentes y únicos!'
      Brad Spooky House: 'Juego Libre: Aquí están las funciones que has escrito, y algunas más con las que podrás juguetear. ¡Experimenta con la anchura del lápiz para crear dibujos diferentes y únicos!'
      Brand Book Example: |-
        # Manual

        Echa un ojo a un ejemplo de un manual
      CSD - Predict List Accessing: |-
        # Predicción

        El código mostrado a continuación tiene 4 cosas a introducir en la consola. ¿Qué crees que imprimirá en la consola como resultado del código?
      CSD U1 - PixFilter Full: "# Las Instrucciones Van Aquí"
      CSD U3 - conditionals - arrows and gears: |-
        # Engranajes con Condicionales\\r

        \\r
        Vamos a
        hacer girar los engranajes solo cuando la tecla de espacio se mantiene presionada.\\r
        \\r

        # Hagamos

        Esto\\r
        \\r

        -   Agregar una instrucción `if`.\\r
        -   Use `Flecha bajando` como entrada para la
            declaración if para verificar cuando se presiona la tecla de espacio.\\r
        -   Mueve el código que
            hace que los engranajes giren dentro del `if`.
      CSD U3 Entertainment Sample 1: |-
        # Alienígena Saltador\\r

        \\r
        Presiona
        "Ejecutar" para jugar el juego de la izquierda. Puedes hacer que el alienígena salte con el
        barra espaciadora, y moverlo hacia la izquierda y hacia la derecha con las teclas de flecha. Tu puntuación
        sera al recolectar estrellas, y si puntúas lo suficiente, el fondo cambiará.
      CSD U3 Entertainment Sample 1_2018: |-
        # Alienígena Saltador\\r

        \\r
        Presiona
        "Ejecutar" para jugar el juego de la izquierda. Puedes hacer que el alienígena salte con el
        barra espaciadora, y moverlo hacia la izquierda y hacia la derecha con las teclas de flecha. Tu puntuación
        sera al recolectar estrellas, y si puntúas lo suficiente, el fondo cambiará.
      CSD U3 Entertainment Sample 1_2019: |-
        # Alienígena Saltador\\r

        \\r
        Presiona
        "Ejecutar" para jugar el juego de la izquierda. Puedes hacer que el alienígena salte con el
        barra espaciadora, y moverlo hacia la izquierda y hacia la derecha con las teclas de flecha. Tu puntuación
        sera al recolectar estrellas, y si puntúas lo suficiente, el fondo cambiará.
      CSD U3 Entertainment Sample 2: |-
        # Conejito Hambriento\\r

        \\r
        El
        Conejito tiene hambre, y está buscando hongos y zanahorias para la cena.\\r
        \\r
        Para
        ganar, tendrás que encontrar un envace para la cena, luego recoger al menos diez zanahorias
        y cinco hongos.\\r
        \\r
        Asegúrate de evitar los insectos. Mariquitas y caracoles
        comerán tu comida, y las abejas te picarán, ¡haciéndote soltar todo!\\r
        \\r
        Uza
        la barra espaciadora para saltar. Puedes aplastar mariquitas y caracoles saltando sobre ellos.\\r
        \\r
        Haz clic
        en "Ejecutar" para iniciar el programa.
      CSD U3 Entertainment Sample 2_2018: |-
        # Conejito Hambriento\\r

        \\r
        El
        Conejito tiene hambre, y está buscando hongos y zanahorias para la cena.\\r
        \\r
        Para
        ganar, tendrás que encontrar un envace para la cena, luego recoger al menos diez zanahorias
        y cinco hongos.\\r
        \\r
        Asegúrate de evitar los insectos. Mariquitas y caracoles
        comerán tu comida, y las abejas te picarán, ¡haciéndote soltar todo!\\r
        \\r
        Uza
        la barra espaciadora para saltar. Puedes aplastar mariquitas y caracoles saltando sobre ellos.\\r
        \\r
        Haz clic
        en "Ejecutar" para iniciar el programa.
      CSD U3 Entertainment Sample 2_2019: |-
        # Conejito Hambriento\\r

        \\r
        El
        Conejito tiene hambre, y está buscando hongos y zanahorias para la cena.\\r
        \\r
        Para
        ganar, tendrás que encontrar un envace para la cena, luego recoger al menos diez zanahorias
        y cinco hongos.\\r
        \\r
        Asegúrate de evitar los insectos. Mariquitas y caracoles
        comerán tu comida, y las abejas te picarán, ¡haciéndote soltar todo!\\r
        \\r
        Uza
        la barra espaciadora para saltar. Puedes aplastar mariquitas y caracoles saltando sobre ellos.\\r
        \\r
        Haz clic
        en "Ejecutar" para iniciar el programa.
      CSD U3 Entertainment Sample 3: |-
        # Caricaturas animadas\\r

        \\r
        Combinando
        imágenes, texto y alguna animación sutil pueden hacer cómics realmente interesantes
        o historias gráficas. Haga clic en "Ejecutar" para ver un ejemplo.\\r
      CSD U3 Entertainment Sample 3_2018: |-
        # Caricaturas animadas\\r

        \\r
        Combinando
        imágenes, texto y alguna animación sutil pueden hacer cómics realmente interesantes
        o historias gráficas. Haga clic en "Ejecutar" para ver un ejemplo.\\r
      CSD U3 Entertainment Sample 3_2019: |-
        # Caricaturas animadas\\r

        \\r
        Combinando
        imágenes, texto y alguna animación sutil pueden hacer cómics realmente interesantes
        o historias gráficas. Haga clic en "Ejecutar" para ver un ejemplo.\\r
      CSD U3 Entertainment Sample 4: |-
        # Timbre de sello\\r

        \\r
        Hacer clic
        En "Ejecutar" para iniciar el programa, luego use la almohadilla de sello para dibujar con
        colores simples y sellos de animales.\\r
      CSD U3 Entertainment Sample 4_2018: |-
        # Timbre de sello\\r

        \\r
        Hacer clic
        En "Ejecutar" para iniciar el programa, luego use la almohadilla de sello para dibujar con
        colores simples y sellos de animales.\\r
      CSD U3 Entertainment Sample 4_2019: |-
        # Timbre de sello\\r

        \\r
        Hacer clic
        En "Ejecutar" para iniciar el programa, luego use la almohadilla de sello para dibujar con
        colores simples y sellos de animales.\\r
      CSD U3 Input Fish: |-
        # Pez con flechas\\r

        \\r
        El pez
        está de regreso. ¿Puedes hacer que el pez se mueva hacia la izquierda solo cuando la tecla de la flecha esta
        presionada?\\r
        \\r

        # Hacer esto\\r

        \\r

        -   Agregue una declaración if para verificar cuando
            la tecla de flecha izquierda está presionada hacia abajo.\\r
        -   Mueva los comandos para mover el
            pez dentro de la declaración if.
      CSD U3 Input Fish_2018: |-
        # Pez con flechas\\r

        \\r
        El pez
        está de regreso. ¿Puedes hacer que el pez se mueva hacia la izquierda solo cuando la tecla de la flecha esta
        presionada?\\r
        \\r

        # Hacer esto\\r

        \\r

        -   Agregue una declaración if para verificar cuando
            la tecla de flecha izquierda está presionada hacia abajo.\\r
        -   Mueva los comandos para mover el
            pez dentro de la declaración if.
      CSD U3 Input Fish_2019: |-
        # Pez con flechas\\r

        \\r
        El pez
        está de regreso. ¿Puedes hacer que el pez se mueva hacia la izquierda solo cuando la tecla de la flecha esta
        presionada?\\r
        \\r

        # Hacer esto\\r

        \\r

        -   Agregue una declaración if para verificar cuando
            la tecla de flecha izquierda está presionada hacia abajo.\\r
        -   Mueva los comandos para mover el
            pez dentro de la declaración if.
      CSD U3 Input Gears: |-
        # Engranajes con Condicionales\\r

        \\r
        Vamos a
        hacer girar los engranajes solo cuando la tecla de espacio se mantiene presionada.\\r
        \\r

        # Hagamos

        Esto\\r
        \\r

        -   Agregar una instrucción `if`.\\r
        -   Use `Flecha bajando` como entrada para la
            declaración if para verificar cuando se presiona la tecla de espacio.\\r
        -   Mueve el código que
            hace que los engranajes giren dentro del `if`.
      CSD U3 Input Gears_2018: |-
        # Engranajes con Condicionales\\r

        \\r
        Vamos a
        hacer girar los engranajes solo cuando la tecla de espacio se mantiene presionada.\\r
        \\r

        # Hagamos

        Esto\\r
        \\r

        -   Agregar una instrucción `if`.\\r
        -   Use `Flecha bajando` como entrada para la
            declaración if para verificar cuando se presiona la tecla de espacio.\\r
        -   Mueve el código que
            hace que los engranajes giren dentro del `if`.
      CSD U3 Input Gears_2019: |-
        # Engranajes con Condicionales\\r

        \\r
        Vamos a
        hacer girar los engranajes solo cuando la tecla de espacio se mantiene presionada.\\r
        \\r

        # Hagamos

        Esto\\r
        \\r

        -   Agregar una instrucción `if`.\\r
        -   Use `Flecha bajando` como entrada para la
            declaración if para verificar cuando se presiona la tecla de espacio.\\r
        -   Mueve el código que
            hace que los engranajes giren dentro del `if`.
      CSD U3 Keyboard Input Challenge-2018: |-
        # Desafío\\r

        _Comprobar
        con tu maestra antes de intentar este desafío._\\r
        \\r
        Aquí está el programa de errores
        has estado trabajando durante los últimos niveles. Elija uno o más de los siguientes
        desafíos, o agrega nuevas características tuyas!\\r
        \\r

        -   Use la tecla "espacio"
            para controlar otra propiedad de su sprite de error, como la rotación o la escala.\\r
        -   \*
            Agregue una asignación al azar a su movimiento.\\r
        -   Agregue un segundo sprite y control
            eso con un conjunto diferente de teclas ("w", "a", "s" y "d" son comunes
            opciones).\\r
        -   Agregue algunas formas a su fondo para que la escena sea más interesante.
      CSD U3 Keyboard Input Challenge: |-
        # Desafío\\r

        _Comprobar
        con tu maestra antes de intentar este desafío._\\r
        \\r
        Aquí está el programa de errores
        has estado trabajando durante los últimos niveles. Elija uno o más de los siguientes
        desafíos, o agrega nuevas características tuyas!\\r
        \\r

        -   Use la tecla "espacio"
            para controlar otra propiedad de su sprite de error, como la rotación o la escala.\\r
        -   \*
            Agregue una asignación al azar a su movimiento.\\r
        -   Agregue un segundo sprite y control
            eso con un conjunto diferente de teclas ("w", "a", "s" y "d" son comunes
            opciones).\\r
        -   Agregue algunas formas a su fondo para que la escena sea más interesante.
      CSD U3 Keyboard Input Challenge_2018: |-
        # Desafío\\r

        _Comprobar
        con tu maestra antes de intentar este desafío._\\r
        \\r
        Aquí está el programa de errores
        has estado trabajando durante los últimos niveles. Elija uno o más de los siguientes
        desafíos, o agrega nuevas características tuyas!\\r
        \\r

        -   Use la tecla "espacio"
            para controlar otra propiedad de su sprite de error, como la rotación o la escala.\\r
        -   \*
            Agregue una asignación al azar a su movimiento.\\r
        -   Agregue un segundo sprite y control
            eso con un conjunto diferente de teclas ("w", "a", "s" y "d" son comunes
            opciones).\\r
        -   Agregue algunas formas a su fondo para que la escena sea más interesante.
      CSD U3 Keyboard Input Challenge_2018_2019: |-
        # Desafío\\r

        _Comprobar
        con tu maestra antes de intentar este desafío._\\r
        \\r
        Aquí está el programa de errores
        has estado trabajando durante los últimos niveles. Elija uno o más de los siguientes
        desafíos, o agrega nuevas características tuyas!\\r
        \\r

        -   Use la tecla "espacio"
            para controlar otra propiedad de su sprite de error, como la rotación o la escala.\\r
        -   \*
            Agregue una asignación al azar a su movimiento.\\r
        -   Agregue un segundo sprite y control
            eso con un conjunto diferente de teclas ("w", "a", "s" y "d" son comunes
            opciones).\\r
        -   Agregue algunas formas a su fondo para que la escena sea más interesante.
      CSD U3 Movement Your Own 2: |-
        # Agregar movimiento a tu animación\\r

        \\r
        Con
        su escena estática configurada, ahora puede agregar algún movimiento. Cuando está satisfecho
        con su programa, haga clic en el botón "Enviar" para activarlo. Usted siempre puede
        no enviarlo y continuar trabajando si desea agregar funciones.\\r
        \\r

        # Hacer esto\\r

        \\r
        En
        el lazo de drenaje\\r
        \\r

        -   Identificar qué propiedades de los sprites cambiarán.\\r
        -   Actualiza
            esas propiedades usando el patrón de contador.\\r
            \\r
            \_ Sugerencia: si tu patrón de contador
            no funciona como esperaba, agregue vigilantes para ayudar a depurar su programa.\_
      CSD U3 Movement Your Own 2_2018: |-
        # Agregar movimiento a tu animación\\r

        \\r
        Con
        su escena estática configurada, ahora puede agregar algún movimiento. Cuando está satisfecho
        con su programa, haga clic en el botón "Enviar" para activarlo. Usted siempre puede
        no enviarlo y continuar trabajando si desea agregar funciones.\\r
        \\r

        # Hacer esto\\r

        \\r
        En
        el lazo de drenaje\\r
        \\r

        -   Identificar qué propiedades de los sprites cambiarán.\\r
        -   Actualiza
            esas propiedades usando el patrón de contador.\\r
            \\r
            \_ Sugerencia: si tu patrón de contador
            no funciona como esperaba, agregue vigilantes para ayudar a depurar su programa.\_
      CSD U3 Movement Your Own 2_2019: |-
        # Agregar movimiento a tu animación\\r

        \\r
        Con
        su escena estática configurada, ahora puede agregar algún movimiento. Cuando está satisfecho
        con su programa, haga clic en el botón "Enviar" para activarlo. Usted siempre puede
        no enviarlo y continuar trabajando si desea agregar funciones.\\r
        \\r

        # Hacer esto\\r

        \\r
        En
        el lazo de drenaje\\r
        \\r

        -   Identificar qué propiedades de los sprites cambiarán.\\r
        -   Actualiza
            esas propiedades usando el patrón de contador.\\r
            \\r
            \_ Sugerencia: si tu patrón de contador
            no funciona como esperaba, agregue vigilantes para ayudar a depurar su programa.\_
      CSD U3 Random background: "# Fondo\\\\r\n\n\\\\r\nA veces\nquerrás llenar toda la pantalla con un color. Para eso, puedes usar\n`fondo`. Cubre todo en la pantalla con el color que elija.\\\\r\n\\\\r\n\n# \n\nHacer esto\\\\r\n\\\\r\n\n-   Ejecute el código para ver \\`el trabajo de fondo.\\\\r\n-   Cambiar el fondo\n    de amarillo a naranja.\\\\r\n    \\\\r\n-   Desafío: hay un cuadrado morado que esta\n    cubierto por el fondo. ¿Puedes cambiar el orden del código para que\n    puedas ver los cuadros morados y azules? \\*"
      CSD U3 Random background_2018: "# Fondo\\\\r\n\n\\\\r\nA veces\nquerrás llenar toda la pantalla con un color. Para eso, puedes usar\n`fondo`. Cubre todo en la pantalla con el color que elija.\\\\r\n\\\\r\n\n# \n\nHacer esto\\\\r\n\\\\r\n\n-   Ejecute el código para ver \\`el trabajo de fondo.\\\\r\n-   Cambiar el fondo\n    de amarillo a naranja.\\\\r\n    \\\\r\n-   Desafío: hay un cuadrado morado que esta\n    cubierto por el fondo. ¿Puedes cambiar el orden del código para que\n    puedas ver los cuadros morados y azules? \\*"
      CSD U3 Random background_2019: "# Fondo\\\\r\n\n\\\\r\nA veces\nquerrás llenar toda la pantalla con un color. Para eso, puedes usar\n`fondo`. Cubre todo en la pantalla con el color que elija.\\\\r\n\\\\r\n\n# \n\nHacer esto\\\\r\n\\\\r\n\n-   Ejecute el código para ver \\`el trabajo de fondo.\\\\r\n-   Cambiar el fondo\n    de amarillo a naranja.\\\\r\n    \\\\r\n-   Desafío: hay un cuadrado morado que esta\n    cubierto por el fondo. ¿Puedes cambiar el orden del código para que\n    puedas ver los cuadros morados y azules? \\*"
      CSD U3 Random random ellipse-2018: |-
        # Números aleatorios\\r

        \\r
        `randomNumber ()`
        elige un número aleatorio entre un valor mínimo y máximo. Puedes usar este
        código en lugar de escribir en el número específico. Si haces tus dibujos
        con números aleatorios se verá un poco diferente cada vez que corra
        su programa.\\r
        \\r

        # Hacer esto\\r

        \\r

        -   Ejecute el programa varias veces para ver
            cómo este funciona.\\r
        -   Cambie los números dentro de `Numero Aleatorio` y ejecute el código
            de nuevo algunas veces para ver qué cambia.
      CSD U3 Random random ellipse: |-
        # Números aleatorios\\r

        \\r
        `randomNumber ()`
        elige un número aleatorio entre un valor mínimo y máximo. Puedes usar este
        código en lugar de escribir en el número específico. Si haces tus dibujos
        con números aleatorios se verá un poco diferente cada vez que corra
        su programa.\\r
        \\r

        # Hacer esto\\r

        \\r

        -   Ejecute el programa varias veces para ver
            cómo este funciona.\\r
        -   Cambie los números dentro de `Numero Aleatorio` y ejecute el código
            de nuevo algunas veces para ver qué cambia.
      CSD U3 Random random ellipse_2018: |-
        # Números aleatorios\\r

        \\r
        `randomNumber ()`
        elige un número aleatorio entre un valor mínimo y máximo. Puedes usar este
        código en lugar de escribir en el número específico. Si haces tus dibujos
        con números aleatorios se verá un poco diferente cada vez que corra
        su programa.\\r
        \\r

        # Hacer esto\\r

        \\r

        -   Ejecute el programa varias veces para ver
            cómo este funciona.\\r
        -   Cambie los números dentro de `Numero Aleatorio` y ejecute el código
            de nuevo algunas veces para ver qué cambia.
      CSD U3 Random random ellipse_2018_2019: |-
        # Números aleatorios\\r

        \\r
        `randomNumber ()`
        elige un número aleatorio entre un valor mínimo y máximo. Puedes usar este
        código en lugar de escribir en el número específico. Si haces tus dibujos
        con números aleatorios se verá un poco diferente cada vez que corra
        su programa.\\r
        \\r

        # Hacer esto\\r

        \\r

        -   Ejecute el programa varias veces para ver
            cómo este funciona.\\r
        -   Cambie los números dentro de `Numero Aleatorio` y ejecute el código
            de nuevo algunas veces para ver qué cambia.
      CSD U3 Scene Example: |-
        # escenas de Sprite\\r

        \\r
        Al combinar formas, sprites y un nuevo bloque llamado \`texto ', puedes crear escenas simples, historias o cómics. Si bien este ejemplo es bastante simple, puedes combinar tantos sprites y formas como desees para crear escenas tan complejas o detalladas como desees.\\r
        \\r

        ## esbozado \\r

        \\r
        Antes de continuar, tomate un segundo para esbozar un escenario que te gustaría hacer al final de esta lección. Considera las formas simples que has usado en el pasado, los sprites para tus personajes y cualquier texto que quieras en la pantalla. Una vez que haya esbozado una idea, aprenderas sobre 'texto' y cómo componer una escena.\\r
      CSD U3 Sprites scene challenge: |-
        # Desafío: Extiende tu

        escena\\r
        \\r
        _Comprueba con tu maestro antes de comenzar este desafío._\\r
        \\r
        Ahora
        que hayas terminado tu escena, considera agregarla o crear otra.
      CSD U3 Sprites scene challenge_2018: |-
        # Desafío: Extiende tu

        escena\\r
        \\r
        _Comprueba con tu maestro antes de comenzar este desafío._\\r
        \\r
        Ahora
        que hayas terminado tu escena, considera agregarla o crear otra.
      CSD U3 Sprites scene challenge_2019: |-
        # Desafío: Extiende tu

        escena\\r
        \\r
        _Comprueba con tu maestro antes de comenzar este desafío._\\r
        \\r
        Ahora
        que hayas terminado tu escena, considera agregarla o crear otra.
      CSD U3 Sprites scene drawing: "# Crea tu escena - Dibujando\\\\r\n\n\\\\r\nTu \nvas a comenzar a crear una escena por ti mismo. Si aún no lo has hecho, toma\nun minuto para esbozar una imagen de su escena (considere usar papel cuadriculado).\nUna vez que tengas una idea y un plan para tu escena, comienza a dibujar el fondo.\\\\r\n\\\\r\n\n# \n\nHacer esto\\\\r\n\\\\r\n\n-   Use un comando `background()` para llenar la pantalla con un color.\\\\r\n-   \\*\n    Agregue los comandos de forma necesarios para dibujar los elementos que no son de sprite de su escena."
      CSD U3 Sprites scene drawing_2018: "# Crea tu escena - Dibujando\\\\r\n\n\\\\r\nTu \nvas a comenzar a crear una escena por ti mismo. Si aún no lo has hecho, toma\nun minuto para esbozar una imagen de su escena (considere usar papel cuadriculado).\nUna vez que tengas una idea y un plan para tu escena, comienza a dibujar el fondo.\\\\r\n\\\\r\n\n# \n\nHacer esto\\\\r\n\\\\r\n\n-   Use un comando `background()` para llenar la pantalla con un color.\\\\r\n-   \\*\n    Agregue los comandos de forma necesarios para dibujar los elementos que no son de sprite de su escena."
      CSD U3 Sprites scene drawing_2019: "# Crea tu escena - Dibujando\\\\r\n\n\\\\r\nTu \nvas a comenzar a crear una escena por ti mismo. Si aún no lo has hecho, toma\nun minuto para esbozar una imagen de su escena (considere usar papel cuadriculado).\nUna vez que tengas una idea y un plan para tu escena, comienza a dibujar el fondo.\\\\r\n\\\\r\n\n# \n\nHacer esto\\\\r\n\\\\r\n\n-   Use un comando `background()` para llenar la pantalla con un color.\\\\r\n-   \\*\n    Agregue los comandos de forma necesarios para dibujar los elementos que no son de sprite de su escena."
      CSD U3 Sprites scene sprites: |-
        # Crea tu escena - Sprites\\r

        \\r
        Con
        el fondo en su lugar, es hora de agregar sus sprites.\\r

        # Hacer esto\\r

        \\r
        \*
        Agrega o crea todas tus imágenes de sprite en la pestaña Animación.\\r

        -   Crea
            una variable para cada sprite en la parte superior de tu programa y usa `setAnimation ()`
            para asignar las imágenes que ha creado en la pestaña Animación.\\r
        -   Llamar a `drawSprites ()`
            una vez al final de su programa.\\r
            \\r
            _Iniciar: es probable que desee llamar a `drawSprites ()`
            al final de tu programa para que los sprites estén sobre tu fondo,
            pero para algunos diseños es posible que desee llamar `drawSprites ()` antes para que
            tus sprites están encima de algunas formas pero debajo de otras._
      CSD U3 Sprites scene sprites_2018: |-
        # Crea tu escena - Sprites\\r

        \\r
        Con
        el fondo en su lugar, es hora de agregar sus sprites.\\r

        # Hacer esto\\r

        \\r
        \*
        Agrega o crea todas tus imágenes de sprite en la pestaña Animación.\\r

        -   Crea
            una variable para cada sprite en la parte superior de tu programa y usa `setAnimation ()`
            para asignar las imágenes que ha creado en la pestaña Animación.\\r
        -   Llamar a `drawSprites ()`
            una vez al final de su programa.\\r
            \\r
            _Iniciar: es probable que desee llamar a `drawSprites ()`
            al final de tu programa para que los sprites estén sobre tu fondo,
            pero para algunos diseños es posible que desee llamar `drawSprites ()` antes para que
            tus sprites están encima de algunas formas pero debajo de otras._
      CSD U3 Sprites scene sprites_2019: |-
        # Crea tu escena - Sprites\\r

        \\r
        Con
        el fondo en su lugar, es hora de agregar sus sprites.\\r

        # Hacer esto\\r

        \\r
        \*
        Agrega o crea todas tus imágenes de sprite en la pestaña Animación.\\r

        -   Crea
            una variable para cada sprite en la parte superior de tu programa y usa `setAnimation ()`
            para asignar las imágenes que ha creado en la pestaña Animación.\\r
        -   Llamar a `drawSprites ()`
            una vez al final de su programa.\\r
            \\r
            _Iniciar: es probable que desee llamar a `drawSprites ()`
            al final de tu programa para que los sprites estén sobre tu fondo,
            pero para algunos diseños es posible que desee llamar `drawSprites ()` antes para que
            tus sprites están encima de algunas formas pero debajo de otras._
      CSD U3 Sprites scene text: |-
        # Crea tu escena - Texto\\r

        \\r
        La
        pieza final de tu escena es agregar texto.\\r
        \\r

        # Hacer esto\\r

        \\r

        -   Agrega un
            `text ()` comando para cada línea de texto por separado.\\r
        -   Si es necesario, use `fill ()`
            y `textSize ()` para cambiar la apariencia de su texto.\\r
            \\r
            \_ Sugerencia: la mayoría
            de las escenas tienen el texto encima de todo, lo que requeriría su `text ()`
            comandos para ser las últimas líneas en su programa. Sin embargo, si quieres el texto
            en capas con otros elementos, puede considerar cambiar el orden.\_
      CSD U3 Sprites scene text_2018: |-
        # Crea tu escena - Texto\\r

        \\r
        La
        pieza final de tu escena es agregar texto.\\r
        \\r

        # Hacer esto\\r

        \\r

        -   Agrega un
            `text ()` comando para cada línea de texto por separado.\\r
        -   Si es necesario, use `fill ()`
            y `textSize ()` para cambiar la apariencia de su texto.\\r
            \\r
            \_ Sugerencia: la mayoría
            de las escenas tienen el texto encima de todo, lo que requeriría su `text ()`
            comandos para ser las últimas líneas en su programa. Sin embargo, si quieres el texto
            en capas con otros elementos, puede considerar cambiar el orden.\_
      CSD U3 Sprites scene text_2019: |-
        # Crea tu escena - Texto\\r

        \\r
        La
        pieza final de tu escena es agregar texto.\\r
        \\r

        # Hacer esto\\r

        \\r

        -   Agrega un
            `text ()` comando para cada línea de texto por separado.\\r
        -   Si es necesario, use `fill ()`
            y `textSize ()` para cambiar la apariencia de su texto.\\r
            \\r
            \_ Sugerencia: la mayoría
            de las escenas tienen el texto encima de todo, lo que requeriría su `text ()`
            comandos para ser las últimas líneas en su programa. Sin embargo, si quieres el texto
            en capas con otros elementos, puede considerar cambiar el orden.\_
      CSD U3 Sprites text: "# Agregar texto\\\\r\n\n\\\\r\nPuedes poner\ntexto en cualquier lugar que desee en la pantalla usando `text`. Cambiar el texto \nvisualizado en el código provisto, luego agregue un segundo `texto` para escribir en un\nparte diferente de la pantalla.\\\\r\n\\\\r\n\\_ Sugerencia: el tamaño del texto predeterminado es bastante pequeño, pero\npuedes usar el bloque `textSize` para cambiar eso. También puede usar `fill` para\ncambia el color de tu texto.\\_"
      CSD U3 Sprites text_2018: "# Agregar texto\\\\r\n\n\\\\r\nPuedes poner\ntexto en cualquier lugar que desee en la pantalla usando `text`. Cambiar el texto \nvisualizado en el código provisto, luego agregue un segundo `texto` para escribir en un\nparte diferente de la pantalla.\\\\r\n\\\\r\n\\_ Sugerencia: el tamaño del texto predeterminado es bastante pequeño, pero\npuedes usar el bloque `textSize` para cambiar eso. También puede usar `fill` para\ncambia el color de tu texto.\\_"
      CSD U3 Sprites text_2019: "# Agregar texto\\\\r\n\n\\\\r\nPuedes poner\ntexto en cualquier lugar que desee en la pantalla usando `text`. Cambiar el texto \nvisualizado en el código provisto, luego agregue un segundo `texto` para escribir en un\nparte diferente de la pantalla.\\\\r\n\\\\r\n\\_ Sugerencia: el tamaño del texto predeterminado es bastante pequeño, pero\npuedes usar el bloque `textSize` para cambiar eso. También puede usar `fill` para\ncambia el color de tu texto.\\_"
      CSD U3 Variables Draw Challenge: |-
        # Desafío: dibujar una

        Imagen\\r
        \\r
        _Comprueba con tu profesor antes de abordar este nivel de desafío._\\r
        \\r
        Utilizando
        variables, dibuja una imagen donde muchos de los elementos se basan en una variable común
        para el tamaño o la ubicación. Por ejemplo, dibuja un rostro con variables que controlan
        el tamaño y o la ubicación de ambos ojos, oídos y fosas nasales. Una vez que hayas
        completado tu dibujo, intenta cambiar los valores de las variables para estar
        seguro de que toda la imagen cambia junto.\\r
      CSD U3 Variables Draw Challenge_2018: |-
        # Desafío: dibujar una

        Imagen\\r
        \\r
        _Comprueba con tu profesor antes de abordar este nivel de desafío._\\r
        \\r
        Utilizando
        variables, dibuja una imagen donde muchos de los elementos se basan en una variable común
        para el tamaño o la ubicación. Por ejemplo, dibuja un rostro con variables que controlan
        el tamaño y o la ubicación de ambos ojos, oídos y fosas nasales. Una vez que hayas
        completado tu dibujo, intenta cambiar los valores de las variables para estar
        seguro de que toda la imagen cambia junto.\\r
      CSD U3 Variables Draw Challenge_2019: |-
        # Desafío: dibujar una

        Imagen\\r
        \\r
        _Comprueba con tu profesor antes de abordar este nivel de desafío._\\r
        \\r
        Utilizando
        variables, dibuja una imagen donde muchos de los elementos se basan en una variable común
        para el tamaño o la ubicación. Por ejemplo, dibuja un rostro con variables que controlan
        el tamaño y o la ubicación de ambos ojos, oídos y fosas nasales. Una vez que hayas
        completado tu dibujo, intenta cambiar los valores de las variables para estar
        seguro de que toda la imagen cambia junto.\\r
      CSD U5 binary 5-new: |-
        # Decodificación de múltiples números\\r\\r

        \\r
        Aquí hay un widget que puede calcular números de hasta ocho bits. (Si tiene un número más corto, puede dejar los bits adicionales de la izquierda desactivados). Puede usarlo para encontrar los valores de los dos récords mundiales a continuación.\\r
        \\r
        ! \[] (<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14>
        PM.png)\\r
        \\r

        1.  la cola de perro más larga (en pulgadas) (5 bits)\\r
        2.  La mayor cantidad de cucharas sobre la cara de alguien (5 bits)\\r
            /r
            # Hacer esto\\r
        3.  Decodifica los dos números de una cadena binaria.
      CSD U5 binary 5-new_2018: |-
        # Decodificación de múltiples números\\r\\r

        \\r
        Aquí hay un widget que puede calcular números de hasta ocho bits. (Si tiene un número más corto, puede dejar los bits adicionales de la izquierda desactivados). Puede usarlo para encontrar los valores de los dos récords mundiales a continuación.\\r
        \\r
        ! \[] (<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14>
        PM.png)\\r
        \\r

        1.  la cola de perro más larga (en pulgadas) (5 bits)\\r
        2.  La mayor cantidad de cucharas sobre la cara de alguien (5 bits)\\r
            /r
            # Hacer esto\\r
        3.  Decodifica los dos números de una cadena binaria.
      CSD U5 binary 5-new_2019: |-
        # Decodificación de múltiples números\\r\\r

        \\r
        Aquí hay un widget que puede calcular números de hasta ocho bits. (Si tiene un número más corto, puede dejar los bits adicionales de la izquierda desactivados). Puede usarlo para encontrar los valores de los dos récords mundiales a continuación.\\r
        \\r
        ! \[] (<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14>
        PM.png)\\r
        \\r

        1.  la cola de perro más larga (en pulgadas) (5 bits)\\r
        2.  La mayor cantidad de cucharas sobre la cara de alguien (5 bits)\\r
            /r
            # Hacer esto\\r
        3.  Decodifica los dos números de una cadena binaria.
      CSD U6 emotion machine 2: "# Cambio de color\\\\r\n\n\\\\r\nSi miras hacia atrás en el ejemplo de esta aplicación, debes notar que los emojis no solo cambian cuando haces clic en un botón, sino que también cambia su color.\\\\r\n\\\\r\n\n# \n\nHacer esto\\\\r\n\\\\r\nEn cada uno de los controladores de eventos, establece la propiedad de \"color de icono\" de \"cara\". Elije un color cálido para feliz y un color frío para triste."
      CSD U6 emotion machine 2_2018: "# Cambio de color\\\\r\n\n\\\\r\nSi miras hacia atrás en el ejemplo de esta aplicación, debes notar que los emojis no solo cambian cuando haces clic en un botón, sino que también cambia su color.\\\\r\n\\\\r\n\n# \n\nHacer esto\\\\r\n\\\\r\nEn cada uno de los controladores de eventos, establece la propiedad de \"color de icono\" de \"cara\". Elije un color cálido para feliz y un color frío para triste."
      CSD U6 emotion machine 2_2019: "# Cambio de color\\\\r\n\n\\\\r\nSi miras hacia atrás en el ejemplo de esta aplicación, debes notar que los emojis no solo cambian cuando haces clic en un botón, sino que también cambia su color.\\\\r\n\\\\r\n\n# \n\nHacer esto\\\\r\n\\\\r\nEn cada uno de los controladores de eventos, establece la propiedad de \"color de icono\" de \"cara\". Elije un color cálido para feliz y un color frío para triste."
      CSD U6 for loop click exit: |-
        # Saber cuándo detenerse\\r

        \\r
        Probablemente has notado en el último nivel que recibió un error si hizo clic en el botón muchas veces. Cada vez que está escribiendo código que se repite (incluso cuando se repite de forma manual, como este), es importante considerar cómo sabrá que es hora de detener la repetición.\\r
        \\r

        # Hacer esto\\r

        \\r
        Este programa es similar al anterior, excepto que hemos reemplazado el nombre de la variable con uno más descriptivo, y agregamos un condicional dentro del controlador de eventos. Tendrá que completar el condicional para que no intentemos alternar un LED que no existe.\\r
        \\r
        \_ ¿Su código funcionaría sin cambios para una placa con más o menos LED? Si no, ¿podrías modificarlo para que así sea? \_
      CSD U6 for loop click exit_2018: |-
        # Saber cuándo detenerse\\r

        \\r
        Probablemente has notado en el último nivel que recibió un error si hizo clic en el botón muchas veces. Cada vez que está escribiendo código que se repite (incluso cuando se repite de forma manual, como este), es importante considerar cómo sabrá que es hora de detener la repetición.\\r
        \\r

        # Hacer esto\\r

        \\r
        Este programa es similar al anterior, excepto que hemos reemplazado el nombre de la variable con uno más descriptivo, y agregamos un condicional dentro del controlador de eventos. Tendrá que completar el condicional para que no intentemos alternar un LED que no existe.\\r
        \\r
        \_ ¿Su código funcionaría sin cambios para una placa con más o menos LED? Si no, ¿podrías modificarlo para que así sea? \_
      CSD U6 for loop click exit_2019: |-
        # Saber cuándo detenerse\\r

        \\r
        Probablemente has notado en el último nivel que recibió un error si hizo clic en el botón muchas veces. Cada vez que está escribiendo código que se repite (incluso cuando se repite de forma manual, como este), es importante considerar cómo sabrá que es hora de detener la repetición.\\r
        \\r

        # Hacer esto\\r

        \\r
        Este programa es similar al anterior, excepto que hemos reemplazado el nombre de la variable con uno más descriptivo, y agregamos un condicional dentro del controlador de eventos. Tendrá que completar el condicional para que no intentemos alternar un LED que no existe.\\r
        \\r
        \_ ¿Su código funcionaría sin cambios para una placa con más o menos LED? Si no, ¿podrías modificarlo para que así sea? \_
      CSD U6 for loop click predict question: |-
        # Hacer una predicción\\r

        \\r
        Lea el código de este programa y prediga qué sucederá cada vez que se haga clic en el botón?
      CSD U6 for loop click predict question_2018: |-
        # Hacer una predicción\\r

        \\r
        Lea el código de este programa y prediga qué sucederá cada vez que se haga clic en el botón?
      CSD U6 for loop click predict question_2019: |-
        # Hacer una predicción\\r

        \\r
        Lea el código de este programa y prediga qué sucederá cada vez que se haga clic en el botón?
      CSD U6 iter predict bubbles: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CoureE_HOC 2018 Level_7a: Has encontrado las ruinas subacuáticas. Busca un **cofre** en la arenisca ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png), contiene un tesoro de **prismarina** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      Course 4 Artist 13: "¿Aún jugando? aquí hay un lienzo en blanco donde usted podrá diseñar lo que quiera!"
      Course 4 Artist 6: |-
        Completa el código para dibujar estos triángulos.
        Sugerencia: 3 triángulos en una rotación de 360 grados.
      Course 4 Artist 8: Dibuje este sol enlazando este bloque de código íntegramente 12 veces.
      Course 4 Artist 8a: "¿Recuerdas esta forma?  Ahora vamos a dejarte construir la sin darte ningún bloques para empezar! \\\\r sugerencia: hay 3 triángulos dentro de la rotación de 360 grados... ¿Cuántas veces 3 va en 360?"
      Course 4 Artist Binary 1a: Aquí hay una función que toma una cadena binaria de 0 y 1 e instruye al artista a que gire de izquierda a derecha, de arriba hacia abajo, llenando  los cuadrados cuando ve 1 e ignorándolos cuando ve 0. Corre este código para ver como el artista usa el binario para dibujar el patrón.
      Course 4 Artist For Loops 13: "¡Hmmm, esas formas están creciendo a cada instante! ¿No solucionamos este problema con las variables? ¿Cómo podemos usar la variable de contar para hacer lados mas pequenos, ya que hay mas de ellos? En lugar de mover hacia adelante estableciendo una cantidad, tratemos de avanzar (100/counter) píxeles."
      Course 4 Artist For Loops 4: Usa un bucle "FOR" para dibujar estos cuadrados. Empiezan a 15 píxeles de largo, el más grande es de 300 píxeles de largos, y cada cuadrado es 15 píxeles más grande que el anterior. Te he dado casi todo el código que vas a necesitar - haz perdido un bloque, ¿cuál es?
      Course 4 Artist For Loops 6: "¡Juego gratis! Intenta usando un circuito para dibujar un patrón de forma creciente con tu propio diseño."
      Course 4 Artist For Loops 6a: Haz 3 pequeños cambios al código desde el último nivel para obtener esto!
      Course 4 Artist For Loops 8a: La línea mas pequeña de este espiral cuadrado es 10, el mas largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      Course 4 Artist For Loops Challenge_a: |-
        Con todas las cosas que ha aprendido, podrías decir como se hizo esta imagen?\\r
        \\r
        Necesita una ayuda? Presione aquí.
      Course 4 Artist Vars 3: 'Aquí es un bucle que dibuja un cuadrado, pero algo esta mal. ¿Puedes arreglarlo para que utiliza la variable "largo" para averiguar que tan largo debe se cada lado? '
      Course 4 Bee 7: Aprovecha todo lo que has aprendido hasta ahora para recolectar todo el néctar. La flor púrpura puede tener 3, 2 o 1 néctares.
      Course 4 Bee For Loops 11: "¿Que hay de malo en este ciclo? A ver si puedes arreglarlo y hacer que las abejas recolecten el néctar."
      Course 4 Bee Params 1: Use la función "obtener néctar 3" que gira, mueve para recoger el néctar y luego regresa a su ubicación original.  Escriba una secuencia par recoger todo el néctar usando "obtener nectar 3".
      Course 4 Play Lab Params 4: Aquí hay una función denominada "patrulla". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles.
      Course 4 Play Lab Params 8: Use un bloque "cuando el actor toque" para enviar al Perro de regreso al lado superior izquierdo SOLAMENTE si el Perro toca a alguno de los otros actores.
      Course 4 Play Lab Vars 2: |-
        ¡Esa carrera en ese ultimo problema no
        fue justa! Cambia la variable de "velocidad\_perro" para asegurarse que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!
      Course 4 Play Labs For Loops 1: Vamos a hacer que el perro diga todos los números desde el 1 hasta el 100. Usa un ciclo y un bloque contador para decir la variable contador cada vez que se ejecute el ciclo.
      Course 4 Playlab For Loops 5b: Ajusta el intervalo de estos bucles 'for' para que los dos personajes terminen exactamente en el mismo lugar.
      Course 4 SCFP 1: Crea una función con parámetros que permita al artista saltar hacia adelante y atrás una cantidad x de pixeles, y además arriba y abajo una cantidad y de pixeles (utilizando números positivos y negativos).
      Course 4 SCVP 1: Crea una función con parámetros que permita al artista saltar hacia adelante y atrás una cantidad x de pixeles, y además arriba y abajo una cantidad y de pixeles (utilizando números positivos y negativos).
      CourseD_Dance_Party_01: |-
        _¡Hagamos una fiesta para bailar!_

        Arrastra el bloque `hacer uno nuevo` al espacio de trabajo y conéctalo dentro del bloque `establecer` para crear tu primer bailarín.

        -   _También puedes hacer clic en la bombilla de la izquierda si quieres más información o desafíos extra._
      CourseD_Dance_Party_02: |-
        ¡Pongamos a este alce a bailar!

        Arrastra el bloque de «floss» <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> al espacio de trabajo. Conéctalo bajo el bloque de «compases» <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Tu bailarín debería iniciar un nuevo movimiento después del cuarto compás.

        Los **compases** se utilizan para contar el tiempo en música. En este tutorial, un compás tiene cuatro tiempos.
      CourseD_Dance_Party_03: |-
        _¡Ahora movemos el esqueleto!_

        Añade un bloque de «compases» <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> a tu espacio de trabajo. Haz que el bailarín inicie un movimiento nuevo después de 6 compases.
      CourseD_Dance_Party_04: |-
        _¡A este baile le hace falta brillo!_

        Busca un bloque nuevo en tu caja de herramientas que añada un efecto de fondo detrás de tu bailarín. ¡Observa cómo cambian los efectos al ritmo de la música!
      CourseD_Dance_Party_05: |-
        ¡Utiliza otro bloque nuevo para que el bailarín cambie de movimientos **cada 2 compases**!

        -   Elegir «(Siguiente)», «(Anterior)» o «(Aleatorio)» indica al bailarín que debe hacer un movimiento diferente cada vez que se ejecuta el código.
      CourseD_Dance_Party_06: |-
        _¡Necesitamos más bailarines!_

        Crea un bailarín de fondo llamado «bailarín\_fondo1» para bailar con el gato.
      CourseD_Dance_Party_08: |-
        Cada bailarín tiene un conjunto de _propiedades_ que controlan su aspecto.

        Puedes hacer que parezca que un bailarín está en el fondo si reduces su _tamaño_. ¿Puedes hacer que ambos bailarines de fondo tengan el mismo tamaño?
      CourseD_Dance_Party_09: |-
        Los bailarines tienen una propiedad de «tonalidad» que puede añadir una capa de color. Intenta cambiar la tonalidad de uno de tus bailarines.

        -   Las tonalidades mezclarán el color que elijas con los colores del bailarín.
      CourseD_Dance_Party_10: |-
        Ahora ya sabemos cómo cambiar las propiedades de un bailarín. También podemos hacer que las mismas propiedades respondan automáticamente a la música con este bloque:
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Este programa utiliza el volumen «bajo» de la música (los sonidos bajos) para controlar la altura de un bailarín. ¿Puedes hacer que el otro bailarín responda también a la música?
      CourseD_Dance_Party_11: |-
        El bloque <xml><block type="Dancelab_whenKey"></block></xml> te permite ejecutar código cuando se pulsa la flecha arriba.

        Puedes cambiar el movimiento del baile, cambiar las propiedades de un bailarín o hacer solo una vez un movimiento rápido. ¡Usa tu creatividad y estate pendiente de los nuevos bloques!
      CourseD_Dance_Party_11_5: |-
        Echa un vistazo a este bloque:

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        ¡Ahora puedes crear un montón de bailarines a la vez!

        Trata de usar algunos de los bloques «todos los patos» para escribir el código que hará que todos los patos bailen juntos.
      CourseD_Dance_Party_11b: "¡Es hora de un concurso de baile! El Gato hace el paso «dab» cuando pulsas la tecla de flecha izquierda. Indica al Robot que haga «drop» cuando pulsas la tecla de flecha derecha."
      CourseD_Dance_Party_12: |-
        ¡Mueve el esqueleto! Crea un baile propio para compartirlo
        con tus amigos.
      CourseE_HOC 2018 Level_1: Necesitarás suministros para el viaje. Consigue un **barco** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png) del **cofre** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      CourseE_HOC 2018 Level_10: Hay un **calamar** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png) en algún lugar de este monumento oceánico, ¿puedes encontrarlo?
      CourseE_HOC 2018 Level_11: Construye un muro de **prismarina** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png) alrededor del hormigón negro. ¡Esto activará el **conducto** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png) y completará tu desafío!
      CourseE_HOC 2018 Level_2: "¡Es más fácil ir en barco que nadar en aguas abiertas! Ve hacia el final del muelle para saltar a bordo."
      CourseE_HOC 2018 Level_3: Coge los remos y maneja tu barco por mar abierto para pescar el **bacalao** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      CourseE_HOC 2018 Level_4: Alimenta al **delfín** con el bacalao ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png). Usa un bloque de repetición para atravesar más rápido el océano.
      CourseE_HOC 2018 Level_5: "¡Hay una **concha de Nautilus** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png) escondida en alguna parte! Explora el naufragio para alcanzar el **cofre** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png)."
      CourseE_HOC 2018 Level_6: "¡Parece que hace mucho frío fuera! Pesca un **salmón** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png) para abrirte camino hasta las ruinas subacuáticas."
      CourseE_HOC 2018 Level_7a: Has encontrado las ruinas subacuáticas. Busca un **cofre** en la arenisca ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png), contiene un tesoro de **prismarina** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      CourseE_HOC 2018 Level_8: "¿Primero icebergs y ahora lava? Atraviesa esta isla volcánica y encuentra el **pez tropical** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png) en el arrecife de coral."
      CourseE_HOC 2018 Level_9b: "¡Has llegado al arrecife, ahora busca el **corazón del mar** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) ! Usa el coral azul y rojo para alcanzar el **cofre** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png)."
      CourseF_PlayLab_vars2: |-
        ¡Esa carrera en ese ultimo problema no
        fue justa! Cambia la variable de "velocidad\_perro" para asegurarse que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!
      Dance Party Template 1_2019: Plantilla
      Dance Party Template 2_2019: Plantilla
      Dance_Party_01: |-
        _¡Hagamos una fiesta para bailar!_

        Arrastra el bloque `hacer uno nuevo` al espacio de trabajo y conéctalo dentro del bloque `establecer` para crear tu primer bailarín.

        -   _También puedes hacer clic en la bombilla de la izquierda si quieres más información o desafíos extra._
      Dance_Party_01_low: |-
        _¡Hagamos una fiesta para bailar!_

        Arrastra el bloque `hacer uno nuevo` al espacio de trabajo y conéctalo dentro del bloque `establecer` para crear tu primer bailarín.

        -   _También puedes hacer clic en la bombilla de la izquierda si quieres más información o desafíos extra._
      Dance_Party_02: |-
        ¡Pongamos a este alce a bailar!

        Arrastra el bloque de «floss» <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> al espacio de trabajo. Conéctalo bajo el bloque de «compases» <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Tu bailarín debería iniciar un nuevo movimiento después del cuarto compás.

        Los **compases** se utilizan para contar el tiempo en música. En este tutorial, un compás tiene cuatro tiempos.
      Dance_Party_03: |-
        _¡Ahora movemos el esqueleto!_

        Añade un bloque de «compases» <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> a tu espacio de trabajo. Haz que el bailarín inicie un movimiento nuevo después de 6 compases.
      Dance_Party_04: |-
        _¡A este baile le hace falta brillo!_

        Busca un bloque nuevo en tu caja de herramientas que añada un efecto de fondo detrás de tu bailarín. ¡Observa cómo cambian los efectos al ritmo de la música!
      Dance_Party_05: |-
        ¡Utiliza otro bloque nuevo para que el bailarín cambie de movimientos **cada 2 compases**!

        -   Elegir «(Siguiente)», «(Anterior)» o «(Aleatorio)» indica al bailarín que debe hacer un movimiento diferente cada vez que se ejecuta el código.
      Dance_Party_06: |-
        _¡Necesitamos más bailarines!_

        Crea un bailarín de fondo llamado «bailarín\_fondo1» para bailar con el gato.
      Dance_Party_08: |-
        Cada bailarín tiene un conjunto de _propiedades_ que controlan su aspecto.

        Puedes hacer que parezca que un bailarín está en el fondo si reduces su _tamaño_. ¿Puedes hacer que ambos bailarines de fondo tengan el mismo tamaño?
      Dance_Party_09: |-
        Los bailarines tienen una propiedad de «tonalidad» que puede añadir una capa de color. Intenta cambiar la tonalidad de uno de tus bailarines.

        -   Las tonalidades mezclarán el color que elijas con los colores del bailarín.
      Dance_Party_10: |-
        Ahora ya sabemos cómo cambiar las propiedades de un bailarín. También podemos hacer que las mismas propiedades respondan automáticamente a la música con este bloque:
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Este programa utiliza el volumen «bajo» de la música (los sonidos bajos) para controlar la altura de un bailarín. ¿Puedes hacer que el otro bailarín responda también a la música?
      Dance_Party_11.5_test: |-
        Echa un vistazo a este bloque:

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        ¡Ahora puedes crear un montón de bailarines a la vez!

        Trata de usar algunos de los bloques «todos los patos» para escribir el código que hará que todos los patos bailen juntos.
      Dance_Party_11: |-
        El bloque <xml><block type="Dancelab_whenKey"></block></xml> te permite ejecutar código cuando se pulsa la flecha arriba.

        Puedes cambiar el movimiento del baile, cambiar las propiedades de un bailarín o hacer solo una vez un movimiento rápido. ¡Usa tu creatividad y estate pendiente de los nuevos bloques!
      Dance_Party_11_5: |-
        Echa un vistazo a este bloque:

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        ¡Ahora puedes crear un montón de bailarines a la vez!

        Trata de usar algunos de los bloques «todos los patos» para escribir el código que hará que todos los patos bailen juntos.
      Dance_Party_11b: "¡Es hora de un concurso de baile! El Gato hace el paso «dab» cuando pulsas la tecla de flecha izquierda. Indica al Robot que haga «drop» cuando pulsas la tecla de flecha derecha."
      Dance_Party_12: "¡Mueve el esqueleto! Crea un baile propio para compartirlo con tus amigos."
      Dance_Party_3: |-
        _¡Ahora movemos el esqueleto!_

        Añade un bloque de «compases» <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> a tu espacio de trabajo. Haz que el bailarín inicie un movimiento nuevo después de 6 compases.
      Dance_Party_4: |-
        _¡A este baile le hace falta brillo!_

        Busca un bloque nuevo en tu caja de herramientas que añada un efecto de fondo detrás de tu bailarín. ¡Observa cómo cambian los efectos al ritmo de la música!
      Dance_Party_8: Cada bailarín tiene un conjunto de _propiedades_ que controlan su aspecto. Puedes hacer que parezca que un bailarín está en el fondo si reduces su tamaño. ¿Puedes hacer que ambos bailarines de fondo tengan el mismo tamaño?
      Dance_Party_extras_battle: |-
        # Compañías de baile

        Esto es una competición de baile entre dos compañías. Las flechas del teclado controlan a uno de los bailarines y las teclas «w,a,s,d» al otro. Reta a un amigo a una batalla de baile y después intenta mejorar esta.

        -   Añade más teclas para controlar los bailes
        -   Consigue que los bailarines del fondo respondan también al presionar las teclas
        -   Cambia de bailarín cada 4 compases configurando la visibilidad
      Dance_Party_extras_every_beat: |-
        # Negras

        La mayoría de nuestros bailes utilizan compases completos, pero cada compás se compone de 4 negras. Este baile utiliza particiones que abarcan `un 0,25 del compás` para que el bailarín dé una palmada cada nota negra.

        Este baile también utiliza un bloque_condicional_ para controlar cuándo el bloque de particiones de `un 0,25 del compás` cambia el baile. Cambia los números del bloque condicional para ver cómo cambia el baile.

        -   Experimenta con notas que tengan otras duraciones (como 0,5 para una blanca o 0,125 para una corchea).
        -   Añade eventos `después del compás`.
        -   Cambia los "compases" por "segundos" e intenta coreografiar a los bailarines así.
      Dance_Party_extras_layout: |-
        # ¡Todos en formación!

        Fíjate en este baile que utiliza el bloque `formación` para cambiar la distribución de los bailarines del fondo a lo largo del baile. Prueba una de estas ideas para ampliarlo:

        -   Crear un segundo grupo de bailarines con una formación diferente
        -   Cambiar la formación cuando se presiona una tecla
        -   Cambiar una propiedad cuando los bailarines cambian de formación
      Dance_Party_extras_on_beat: |-
        # Graves, medios y agudos

        Este baile utiliza eventos "especiales" para desencadenar código cuando partes diferentes de la música aumentan de volumen. Juguetea con diferentes canciones para ver cómo cambia el baile.
      Dance_Party_extras_speed: |-
        # Acelera, frena

        Este último baile utiliza el bloque `establecer velocidad` para controlar el ritmo al que se mueven los bailarines. Experimenta con diferentes velocidades en diferentes momentos de la canción. Puedes seguir jugueteando con este baile o volver a uno de los anteriores para hacerlos aún más chulos.
      Dance_Party_extras_visible: |-
        # ¿Dónde están?

        Este baile muestra u oculta dos grupos de bailarines diferentes. Échale un vistazo y después sigue tu propio instinto.

        -   Añade otro grupo de bailarines
        -   Muestra y oculta bailarines utilizando las flechas del teclado
        -   Oculta a todos los bailarines y utiliza un efecto chulo de fondo
      Fish Tank 5-validated_simple: El pez quiere un amigo. Agrega un nuevo sprite.
      Function intro Ryan: |-
        Cuentas con una **función** llamada "construir puente" en tu espacio de trabajo. ¡Todo el código que necesitas para cruzar el río ya está implementado! \\r
         \\r
        Lleva dos veces el pequeño bloque verde a tu espacio de trabajo para arreglar el camino y conseguir que {currentPlayerName} alcance la antorcha de redstone [redstone_torch].
      Function intro Ryan_2019: |-
        Cuentas con una **función** llamada "construir puente" en tu espacio de trabajo. ¡Todo el código que necesitas para cruzar el río ya está implementado! \\r
         \\r
        Lleva dos veces el pequeño bloque verde a tu espacio de trabajo para arreglar el camino y conseguir que {currentPlayerName} alcance la antorcha de redstone [redstone_torch].
      HOC 2018 Level_1: Necesitarás suministros para el viaje. Consigue un **barco** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png) del **cofre** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      HOC 2018 Level_10: Hay un **calamar** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png) en algún lugar de este monumento oceánico, ¿puedes encontrarlo?
      HOC 2018 Level_11: Construye un muro de **prismarina** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png) alrededor del hormigón negro. ¡Esto activará el **conducto** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png) y completará tu desafío!
      HOC 2018 Level_12: "¡Enhorabuena! El mundo acuático abierto te espera. ¡Construye un arrecife de coral! ¡Un volcán! ¡Un naufragio! Tú decides."
      HOC 2018 Level_2: "¡Es más fácil ir en barco que nadar en aguas abiertas! Ve hacia el final del muelle para saltar a bordo."
      HOC 2018 Level_3: Coge los remos y maneja tu barco por mar abierto para pescar el **bacalao** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      HOC 2018 Level_4: Alimenta al **delfín** con el bacalao ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png). Usa un bloque de repetición para atravesar más rápido el océano.
      HOC 2018 Level_5: "¡Hay una **concha de Nautilus** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png) escondida en alguna parte! Explora el naufragio para alcanzar el **cofre** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png)."
      HOC 2018 Level_6: "¡Parece que hace mucho frío fuera! Pesca un **salmón** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png) para abrirte camino hasta las ruinas subacuáticas."
      HOC 2018 Level_7a: Has encontrado las ruinas subacuáticas. Busca un **cofre** en la arenisca ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png), contiene un tesoro de **prismarina** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      HOC 2018 Level_8: "¿Primero icebergs y ahora lava? Atraviesa esta isla volcánica y encuentra el **pez tropical** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png) en el arrecife de coral."
      HOC 2018 Level_9b: "¡Has llegado al arrecife, ahora busca el **corazón del mar** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) ! Usa el coral azul y rojo para alcanzar el **cofre** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png)."
      HOC Dance 3_draft: |-
        _¡A este baile le hace falta brillo!_

        Busca un bloque nuevo en tu caja de herramientas que añada un efecto de fondo detrás de tu bailarín. ¡Observa cómo cambian los efectos al ritmo de la música!
      HOC Dance 4_draft: |-
        ¡Utiliza otro bloque nuevo para que el bailarín cambie de movimientos **cada 2 compases**!

        -   Elegir «(Siguiente)», «(Anterior)» o «(Aleatorio)» indica al bailarín que debe hacer un movimiento diferente cada vez que se ejecuta el código.
      HOC Dance 5_draft: |-
        _¡Necesitamos más bailarines!_

        Crea un bailarín de fondo llamado «bailarín\_fondo1» para bailar con el gato.
      HOC Dance 6_draft: Cada bailarín tiene un conjunto de _propiedades_ que controlan su aspecto. Puedes hacer que parezca que un bailarín está en el fondo si reduces su tamaño. ¿Puedes hacer que ambos bailarines de fondo tengan el mismo tamaño?
      HOC Dance 9_draft: |-
        El bloque <xml><block type="Dancelab_whenKey"></block></xml> te permite ejecutar código cuando se pulsa la flecha arriba.

        Puedes cambiar el movimiento del baile, cambiar las propiedades de un bailarín o hacer solo una vez un movimiento rápido. ¡Usa tu creatividad y estate pendiente de los nuevos bloques!
      HOC Dance Freeplay: |-
        ¡Mueve el esqueleto! Crea un baile propio para compartirlo
        con tus amigos.
      HOC Dance Freeplay_draft: |-
        ¡Mueve el esqueleto! Crea un baile propio para compartirlo
        con tus amigos.
      HOC Dance Predraw: |-
        ¡Mueve el esqueleto! Crea un baile propio para compartirlo
        con tus amigos.
      'Introduction to Conditionals: Boolean Expressions': |-
        ### Puntos a tener en cuenta:

        1.  ¿Qué es una _Expresión Booleana?_
        2.  ¿Por qué se llama  "Booleano"?
        3.  ¿Es esta una expresión legal: `10 > 25`?
      'Introduction to Conditionals: Boolean Expressions_2018': |-
        ### Puntos a tener en cuenta:

        1.  ¿Qué es una _Expresión Booleana?_
        2.  ¿Por qué se llama  "Booleano"?
        3.  ¿Es esta una expresión legal: `10 > 25`?
      'Introduction to Conditionals: Boolean Expressions_2019': |-
        ### Puntos a tener en cuenta:

        1.  ¿Qué es una _Expresión Booleana?_
        2.  ¿Por qué se llama  "Booleano"?
        3.  ¿Es esta una expresión legal: `10 > 25`?
      K-1 Bee Loops 2: |-
        ¡Utiliza un enlace para moverte obtener el nectar y
        hacer miel!
      K-1 Bee Loops 3: "¡Utiliza enlaces para obtener nectar, y para hacer miel!"
      K-1 Bee Loops 4: "¡Ulilice enlaces para obtener nectar, hacer miel y moverte!"
      K-1 Bee Loops 5: "¡Utiliza enlaces para tomar nectar y miel!"
      K-1 Bee Loops 6: "¡Utiliza enlaces para obtener nectar, miel y para moverte!"
      K-1 Maze Loops 11: Llévame al cerdo! Usa el bloque de repetición.
      K-1 Maze Loops 12: Llévame al cerdo! Usa el bloque de repetición.
      K-1 Maze Loops 2: Usa el bloque de Repetición para llevarme al cerdo!
      K-1 Maze Loops 8: Llévame al cerdo! Usa el bloque de repetición.
      MC Agent Freeplay: "**Juego libre:** ¡Te toca! Utiliza el código del Agent para ayudarte a explorar este mundo."
      MC_HOC_2017 Agent Test: |-
        Haz clic en "Ejecutar" para mover al jugador utilizando las **flechas direccionales**. \\r
        \\r
        Para superar este nivel, tendrás que llegar a la puerta y abrirla (utilizando la **barra espaciadora**) para poder llegar al recuadro naranja del interior.
      MC_HOC_2017_01: |-
        Haz clic en "Ejecutar" para mover al jugador utilizando las **flechas direccionales**. \\r
        \\r
        Para superar este nivel, tendrás que llegar a la puerta y abrirla (utilizando la **barra espaciadora**) para poder llegar al recuadro naranja del interior.
      MC_HOC_2017_01_Cole: Sellel tekonnal pead koguma kokku kõik tööriistad. Kasuta liikumiseks **nooleklahve** ja liigu võitmiseks rajal oleva kirstuni
      MC_HOC_2017_01_Kiki: Para jugar en este nivel, haz clic en el botón naranja de "Ejecutar" que hay debajo del área de juego y mueve al jugador con las **flechas direccionales**.
      MC_HOC_2017_01_RETRY: |-
        ¡{currentPlayerName} está atrapado en el interior de la casa, pero el Agent está aquí para ayudar!   \\r
         \\r
           \\r
        Pon un bloque de "avanzar" en el bloque de "al ejecutar" dentro del área de trabajo para llevar al Agent al plato de presión [PressurePlate_Up], y entonces pulsa "Ejecutar" y utiliza las flechas direccionales para sacar a {currentPlayerName} de la casa y conseguir el **cofre** [chest].
      MC_HOC_2017_01_RETRY_2019: |-
        ¡{currentPlayerName} está atrapado en el interior de la casa, pero el Agent está aquí para ayudar!   \\r
         \\r
           \\r
        Pon un bloque de "avanzar" en el bloque de "al ejecutar" dentro del área de trabajo para llevar al Agent al plato de presión [PressurePlate_Up], y entonces pulsa "Ejecutar" y utiliza las flechas direccionales para sacar a {currentPlayerName} de la casa y conseguir el **cofre** [chest].
      MC_HOC_2017_02: El jugador necesita llegar a esa arboleda secreta. Ayuda al Agent a abrir la puerta escribiendo código para llevarlo al plato de presión.
      MC_HOC_2017_02_Cole: |-
        ¡{currentPlayerName} se ha embarcado en una gran aventura! Para proporcionarle ayuda, tendrás que conseguir el **mapa** [map_empty] que hay detrás de la puerta cerrada que está a la derecha. \\r
         \\r
        Introduce el código en el espacio de trabajo para llevar al Agent al Plato de presión [PressurePlate_Up] para que {currentPlayerName} pueda seguir adelante.
      MC_HOC_2017_02_Cole_2019: |-
        ¡{currentPlayerName} se ha embarcado en una gran aventura! Para proporcionarle ayuda, tendrás que conseguir el **mapa** [map_empty] que hay detrás de la puerta cerrada que está a la derecha. \\r
         \\r
        Introduce el código en el espacio de trabajo para llevar al Agent al Plato de presión [PressurePlate_Up] para que {currentPlayerName} pueda seguir adelante.
      MC_HOC_2017_02_Kiki: |-
        El jugador se ha embarcado en una gran aventura, pero antes tiene que conseguir la antorcha que está escondida al otro lado de esa puerta cerrada. \\r
        \\r
        Programa al Agent para avanzar dos veces y así continuar por el camino blanco y llegar al plato de presión; de este modo, podrá abrir la puerta para el jugador.
      MC_HOC_2017_02_Will: |-
        Para completar este nivel, el jugador necesita llegar al recuadro naranja que hay detrás de la arboleda secreta, la cual se encuentra al otro lado de la puerta cerrada. \\r
        \\r
        El código del espacio de trabajo hará que el Agent avance dos veces para llegar al plato de presión y abrir la puerta para Alex o Steve.
      MC_HOC_2017_03_Cole: "{currentPlayerName} continúa con su aventura, y ahora necesita la **brújula** [compass] para prepararse para el viaje.  \\\\r\n   \\\\r\nPrograma al Agent para abrir la puerta. "
      MC_HOC_2017_03_Cole_2019: "{currentPlayerName} continúa con su aventura, y ahora necesita la **brújula** [compass] para prepararse para el viaje.  \\\\r\n   \\\\r\nPrograma al Agent para abrir la puerta. "
      MC_HOC_2017_03_Kiki: |-
        ¡La aventura del jugador comenzará detrás de la puerta cerrada, en la arboleda secreta! \\r
        \\r
        \\r
        Ayuda al Agent a abrir la puerta escribiendo código para que llegue al plato de presión.
      MC_HOC_2017_04: Cambia el bucle del último rompecabezas para ayudar al Agent a crear un camino sobre la parte más ancha de este río.
      MC_HOC_2017_04POINT5_Cole: "¡Has salido del pantano! Ahora haz que el jugador llegue sano y salvo al recuadro naranja. \n\nAyuda al Agent a despejar el camino encontrando un patrón simple y utilizando bucles para cruzar los dos primeros platos de presión."
      MC_HOC_2017_04POINT5_RYAN: |-
        ¡Lo has conseguido! \\r
        \\r
        Ahora, haz que {currentPlayerName} atraviese sin problemas el laberinto para hacerse con el **hacha** [diamond_axe]\\r
      MC_HOC_2017_04POINT5_RYAN_2019: |-
        ¡Lo has conseguido! \\r
        \\r
        Ahora, haz que {currentPlayerName} atraviese sin problemas el laberinto para hacerse con el **hacha** [diamond_axe]\\r
      MC_HOC_2017_04_Cole: "¡El Agent puede moverse por el agua!  \\\\r\n \\\\r\nUtiliza un bucle de \"repetición\" para ayudar a resolver este rompecabezas y ayudar a {currentPlayerName} a llegar al **cubo** [bucket_empty] que hay detrás de la puerta. "
      MC_HOC_2017_04_Cole_2019: "¡El Agent puede moverse por el agua!  \\\\r\n \\\\r\nUtiliza un bucle de \"repetición\" para ayudar a resolver este rompecabezas y ayudar a {currentPlayerName} a llegar al **cubo** [bucket_empty] que hay detrás de la puerta. "
      MC_HOC_2017_04_Kiki: |-
        ¡La entrada a la arboleda secreta llevaba a este bello oasis! Para completar este nivel, el jugador necesita llegar al recuadro naranja que hay en la cabaña. \\r
        \\r
        Utiliza un bucle de "repetición" para ayudar al Agent a llegar al plato de presión, que abre la puerta de la cabaña.
      MC_HOC_2017_05: "Los bucles no siempre resultan de ayuda. \n\nEstos cactus, por ejemplo, no están creciendo siguiendo un patrón evidente, por lo que un bucle no los despejaría de manera correcta. En su lugar, lo que te hemos dado es una función llamada \"destruir y desplazar\", que hará todo el trabajo duro por ti cada vez que el Agent llegue a un obstáculo."
      MC_HOC_2017_05_Cole: |-
        ¡Oh, no! ¡El puente ha desaparecido! \\r
        \\r
        Programa al Agent para reconstruir el puente utilizando el bloque "colocar", para que {currentPlayerName} pueda llegar a la **pala** [diamond_shovel].
      MC_HOC_2017_05_Cole_2019: |-
        ¡Oh, no! ¡El puente ha desaparecido! \\r
        \\r
        Programa al Agent para reconstruir el puente utilizando el bloque "colocar", para que {currentPlayerName} pueda llegar a la **pala** [diamond_shovel].
      MC_HOC_2017_05_Josh: "¡Oh, no! ¡El puente ha desaparecido! \n\nAyuda al Agent a reconstruir el puente para que el jugador pueda llegar a la **pala**."
      MC_HOC_2017_05_Kiki: |-
        Ha llegado el momento de que el jugador abandone la arboleda secreta y prosiga su aventura, ¡pero el puente ha desaparecido! \\r
        \\r
        Ayuda al Agent a reconstruir el puente, y después desplázate al tablón de madera para que el jugador pueda llegar al recuadro naranja.
      MC_HOC_2017_06_Cole: "Otro río, ¡pero este es mucho más amplio! \\\\r\n \\\\r\nArregla este código para ayudar al Agent a construir un puente y así {currentPlayerName} pueda llegar al **pico** [diamond_pickaxe]. "
      MC_HOC_2017_06_Cole_2019: "Otro río, ¡pero este es mucho más amplio! \\\\r\n \\\\r\nArregla este código para ayudar al Agent a construir un puente y así {currentPlayerName} pueda llegar al **pico** [diamond_pickaxe]. "
      MC_HOC_2017_06_Josh: |-
        Otro río, ¡pero este es mucho más amplio! \\r
        \\r
        Arregla este código para ayudar al Agent a levantar un puente sobre el río.
      MC_HOC_2017_06_Kiki: |-
        Otro río, ¡pero este es mucho más amplio! \\r
        \\r
        Arregla este código para ayudar al Agent a levantar un puente sobre el agua.
      MC_HOC_2017_07_Cole: |-
        ¡El hielo se interpone en tu camino! \\r
         \\r
        La función "despejar camino" puede ayudarte a destruir el hielo y conseguir que {currentPlayerName} llegue a la vagoneta [minecart_normal].
      MC_HOC_2017_07_Cole_2019: |-
        ¡El hielo se interpone en tu camino! \\r
         \\r
        La función "despejar camino" puede ayudarte a destruir el hielo y conseguir que {currentPlayerName} llegue a la vagoneta [minecart_normal].
      MC_HOC_2017_07_Kiki: |-
        Los bucles no son la única forma de repetir código.  \\r
        \\r
        Mira, te hemos dado una función llamada "despejar cactus", que se encargará de quitar tres cactus cada vez que la uses. Utiliza dos bloques de "despejar cactus" para abrirte camino hasta el recuadro naranja.
      MC_HOC_2017_07a_Kiki: Ahora, edita este bucle para ayudar al Agent a despejar el camino hasta el recuadro naranja.
      MC_HOC_2017_08_Cole: |-
        Ahora, en vez de destruir antes de moverte, necesitarás colocar un bloque. \\r
        \\r
        Modifica la función que has recibido para que se pueda utilizar en el desierto.
      MC_HOC_2017_08_Kiki: "Ahora, en vez de destruir cactus, tendrás que colocar piedras sobre la lava, y después destruir la arenisca. \\\\r\n\\\\r\nModifica la función para que opere de manera correcta en este nivel. "
      MC_HOC_2017_08_RY: "¡Ahora hay **DOS** funciones entre las que elegir! \n\nUtiliza estas funciones para construir rápidamente un puente sobre la lava para {currentPlayerName}."
      MC_HOC_2017_08_Will: "¡Ahora hay **DOS** funciones entre las que elegir! \n\nUtiliza estas funciones para construir rápidamente un puente sobre la lava para el jugador."
      MC_HOC_2017_09_Cole: Utiliza funciones para ayudar al Agent a destruir los bloques gigantes de tierra que bloquean el camino al plato de presión.
      MC_HOC_2017_09_Kiki: "Este código inicial no puede ser eliminado. \n\nAñade comandos a la función \"crear rastro\" para que el programa en el espacio de trabajo lleve al Agent al plato de presión."
      MC_HOC_2017_09_RS_CLONE: Arregla esta función para rellenar los huecos y a continuación sitúate sobre el plato de presión para despejar el camino a la antorcha.
      MC_HOC_2017_10_Cole: Utiliza las funciones para despejar un camino para la vagoneta y adéntrate en el Portal del Inframundo.
      MC_HOC_2017_10_Cole_old: Intenta crear una función desde el principio que haga más sencillo que el Agent finalice con la vagoneta y lleve al jugador al recuadro naranja.
      MC_HOC_2017_10_Kiki: Intenta crear una función desde el principio que haga más sencillo que el Agent finalice con la vagoneta y lleve al jugador al recuadro naranja.
      MC_HOC_2017_10_RETRY: "¿Eres capaz de ver la diferencia entre las dos funciones en tu espacio de trabajo? \\\\r\n \\\\r\nUtiliza estas funciones con otro código de la caja de herramientas para despejar el camino para la vagoneta; a continuación, hazte con el **chisquero de pedernal** [flint_and_steel]. \\\\r\n "
      MC_HOC_2017_10_RETRY_2019: "¿Eres capaz de ver la diferencia entre las dos funciones en tu espacio de trabajo? \\\\r\n \\\\r\nUtiliza estas funciones con otro código de la caja de herramientas para despejar el camino para la vagoneta; a continuación, hazte con el **chisquero de pedernal** [flint_and_steel]. \\\\r\n "
      MC_HOC_2017_10_RYAN: Intenta crear funciones desde el principio que hagan más sencillo que el Agent finalice con la vagoneta y lleve al jugador al recuadro naranja.
      MC_HOC_2017_10_RYAN2: Intenta crear funciones desde el principio que hagan más sencillo que el Agent finalice con la vagoneta y lleve al jugador al recuadro naranja.
      MC_HOC_2017_11_Kiki: "¡Te toca! Veamos qué puedes hacer alrededor de este lago congelado."
      MC_HOC_2017_13_Cole: "**Juego libre:** ¡Te toca! Utiliza el código del Agent para ayudarte a explorar este mundo."
      MC_HOC_2017_4.5v2: "¡Has salido del pantano! Ahora haz que el jugador llegue sano y salvo al recuadro naranja. \n\nAyuda al Agent a despejar el camino encontrando un patrón simple y utilizando bucles para cruzar los dos primeros platos de presión."
      MC_HOC_2017_Ali: 'Mira las funciones que hay abajo. ¿Cómo puedes utilizarlas para evitar a los Ghasts y ayudar a {currentPlayerName} a llegar sin problemas al **Libro Encantado** [book_enchanted]?  '
      MC_HOC_2017_Ali_2019: 'Mira las funciones que hay abajo. ¿Cómo puedes utilizarlas para evitar a los Ghasts y ayudar a {currentPlayerName} a llegar sin problemas al **Libro Encantado** [book_enchanted]?  '
      MC_HOC_2017_FP10x10: "**Juego libre:** ¡Te toca! ¿Podrás ponerte a prueba a ti mismo y conseguir todos los diamantes de este nivel?  "
      MC_HOC_2017_FP10x10_RE: "**Juego libre:** ¡Te toca! ¿Podrás ponerte a prueba a ti mismo y conseguir todos los diamantes de este nivel?  "
      MC_HOC_2017_FP20x20: "**Juego libre:** ¡Te toca! Utiliza el código del Agent para ayudarte a explorar este mundo."
      MC_HOC_2017_FP20x20_2019: "**Juego libre:** ¡Te toca! Utiliza el código del Agent para ayudarte a explorar este mundo."
      MC_HOC_2017_Ryan_03: |-
        ¿Sabías que puedes poner más de un trozo de código en un bucle? \\r
        \\r
        Utiliza un bucle de "repetición" para ayudar al Agent a construir un puente sobre el río colocando bloques en el agua.
      MC_HOC_2017_Ryan_05: |-
        A veces tienes que derribar cosas que se interpongan en el camino de tu jugador. \\r
        Utiliza el bloque de "destruir" para despejar todos los cactus entre el Agent y el plato de presión.
      MC_HOC_Kiki_02: Alguien tiene que estar en el plato de presión antes de que la puerta lateral se abra. Ayuda al Agent a llegar al plato para que el jugador pueda abandonar la casa.
      Mike Test Bee Conditionals 1: |-
        ¡Esta nube está bloqueando mi vista!
        \\r
        \\r
        Comprueba si hay una flor debajo de la nube, y solo consigue el néctar
        si hay una flor.  \\r
        ¡Ten cuidado, esta puede cambiar!
      Mike Test Bee Conditionals 2: |-
        **Assessment:** Recolecta todo el néctar.  \\r
        Ten cuidado de no recolectar néctar de de una flor púrpura que no tiene nada de néctar.
      NEW Course 4 Artist Functions 10.1: Use las funciones de los puzzles anteriores para dibujar este patrón.
      NEW Course 4 Artist Functions 12: Utiliza la función "trazar una linea de cuadrados" del rompecabezas anterior para trazar este patron.
      NEW Course 4 Artist Functions 3: |-
        Aqui esta el nuevo tipo de Bloque.
        Es llamada "Bloque funcion". Haga click "Ejecutar" para ver que pasa.
      NEW Course 4 Artist Functions 9: "¿Qué bloque necesitas añadir para conseguir que el triángulo se ponga encima del cuadrado?"
      NEW Course 4 Artist Params 4: ¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.
      NEW Course 4 Artist Vars 12: Modifica este algoritmo para que utilice la variable "lados" en lugar de un número fijo para dibujar un pentágono. Reemplaza el número 5 con la variable "lados" y usa el bloque "establecer lados".
      NEW Course 4 Artist Vars 4: Vamos a intentarlo otra vez. Ahora, vamos a hacer este diseño cool con un hexágono de 60 píxeles.
      NEW Course 4 Artist Vars 6: ¿Me puedes ayudar a dibujar este patrón cool dejando caer el bloque de variable "longitud" en los lugares correctos?
      New Minecraft Hero Project: "**Juego libre:** ¡Te toca! Utiliza el código del Agent para ayudarte a explorar este mundo."
      Nike Example Brand Book: |-
        # Manual

        Echa un ojo a un ejemplo de un manual
      October15 bat: 'Juego Libre: Aquí están las funciones que has escrito, y algunas más con las que podrás juguetear. ¡Experimenta con la anchura del lápiz para crear dibujos diferentes y únicos!'
      Overworld Move to Sheep: Añade un segundo comando "avanzar" para llegar a la oveja.
      Overworld Move to Sheep_2018: Añade un segundo comando "avanzar" para llegar a la oveja.
      Overworld Move to Sheep_2019: Añade un segundo comando "avanzar" para llegar a la oveja.
      PS copy 2-3 Bee Conditionals 5: |-
        Estas flores púrpura cambian!\\r
        \\r
        Cada vez que intentas el puzzle, las flores púrpura pueden tener nectar o no... pero no sabrás el número hasta que ejecutes el código! \\r
        \\r
        Ten cuidado de no recolectar néctar de una flor púrpura si no tiene. \\r
        Primero deberás comprobar si el néctar es igual a 1 usando el bloque `si hay néctar`.
      Pixelation - Lesson 15 - Complete 3-bit color: "# \n\nColor de Pixelacion: Tarea 1\n**Direcciones:**\n\n-   Comenzamos con la imagen de 4x2\n    Maddie estaba creando, pero hemos omitido las dos últimas cuadriculas.\n-   Terminar\n    la imagen al descubrir qué dos colores faltan y codificarlos."
      Pixelation - Lesson 15 - Complete 3-bit color_2018: "# \n\nColor de Pixelacion: Tarea 1\n**Direcciones:**\n\n-   Comenzamos con la imagen de 4x2\n    Maddie estaba creando, pero hemos omitido las dos últimas cuadriculas.\n-   Terminar\n    la imagen al descubrir qué dos colores faltan y codificarlos."
      Pixelation - Lesson 15 - Complete 3-bit color_2019: "# \n\nColor de Pixelacion: Tarea 1\n**Direcciones:**\n\n-   Comenzamos con la imagen de 4x2\n    Maddie estaba creando, pero hemos omitido las dos últimas cuadriculas.\n-   Terminar\n    la imagen al descubrir qué dos colores faltan y codificarlos."
      Ryan_Demo: |-
        ¡Pongamos a este alce a bailar!

        Arrastra el bloque de «floss» <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> al espacio de trabajo. Conéctalo bajo el bloque de «compases» <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Tu bailarín debería iniciar un nuevo movimiento después del cuarto compás.

        Los **compases** se utilizan para contar el tiempo en música. En este tutorial, un compás tiene cuatro tiempos.
      Testing Quantum Farmer: "Wow, mira eso! \\\\r\n\\\\r\nYo no\nse cuántas palas de tierra necesita este hoyo. \\\\r\n¿Puedes tu escribir un programa\nque siga usando el bloque `llenar` hasta que el suelo esté parejo?\n  "
      Total Artist Clone Me: 'Juego Libre: Aquí están las funciones que has escrito, y algunas más con las que podrás juguetear. ¡Experimenta con la anchura del lápiz para crear dibujos diferentes y únicos!'
      U4 - Objects - Template Contacts: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U4 - Objects - Template Contacts_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U4 - Objects - Template Contacts_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U5 Booleans: |-
        ### Puntos a tener en cuenta:

        1.  ¿Qué es una _Expresión Booleana?_
        2.  ¿Por qué se llama  "Booleano"?
        3.  ¿Es esta una expresión legal: `10 > 25`?
      U5 Check Password if statement lock image: "<img src=\"https://images.code.org/117a2a8e098760173f16048fde721295-image-1479829058899.gif\" style=\"float: right; width: 150px\">\n\n## Pruébelo -- corrector de contraseña de texto\n\n\\*\\* Idea clave\\*\\*: puede utilizar '==' para comparar tanto cadenas como números.  \n\n-   Usemos una instrucción if en un controlador de eventos para comparar texto que un usuario introduce en un elemento de interfaz de usuario.\n\n**La configuración:**\n\n-   Tenga en cuenta la configuración en modo de diseño\n-   Hay dos imágenes: un bloqueo rojo y un \"desbloqueo\" verde.\n-   El \"desbloqueo\" verde está _oculto_ al principio.\n\n## Haga esto:\n\n**Añadir una instrucción if para el controlador de eventos para comprobar la contraseña y mostrar el \"desbloqueo\" sólo si la contraseña es correcta** \n\n_Puede utilizar '==' para comparar el texto que obtiene del cuadro de texto de \\\\_introducción_de_contraseña\\* y una cadena que desea utilizar como contraseña. La expresión booleana que debe usar debe tener este aspecto:\n\n![](https://images.code.org/9124274f38ed19bdae6cfc4b492162b6-image-1479828796051.png)\n\n\\*Si el usuario introduce la contraseña correcta entonces **muestra** el \"desbloqueo\" verde y **oculta** el bloqueo roja.\n\\\\t\\* Hemos proporcionado el código para ocultar y mostrar las imágenes. Basta con añadir la instrucción if.\n\\*En caso contrario no hacer nada.  Pueden probar otra vez."
      U5 Check Password if statement lock image_2018: "<img src=\"https://images.code.org/117a2a8e098760173f16048fde721295-image-1479829058899.gif\" style=\"float: right; width: 150px\">\n\n## Pruébelo -- corrector de contraseña de texto\n\n\\*\\* Idea clave\\*\\*: puede utilizar '==' para comparar tanto cadenas como números.  \n\n-   Usemos una instrucción if en un controlador de eventos para comparar texto que un usuario introduce en un elemento de interfaz de usuario.\n\n**La configuración:**\n\n-   Tenga en cuenta la configuración en modo de diseño\n-   Hay dos imágenes: un bloqueo rojo y un \"desbloqueo\" verde.\n-   El \"desbloqueo\" verde está _oculto_ al principio.\n\n## Haga esto:\n\n**Añadir una instrucción if para el controlador de eventos para comprobar la contraseña y mostrar el \"desbloqueo\" sólo si la contraseña es correcta** \n\n_Puede utilizar '==' para comparar el texto que obtiene del cuadro de texto de \\\\_introducción_de_contraseña\\* y una cadena que desea utilizar como contraseña. La expresión booleana que debe usar debe tener este aspecto:\n\n![](https://images.code.org/9124274f38ed19bdae6cfc4b492162b6-image-1479828796051.png)\n\n\\*Si el usuario introduce la contraseña correcta entonces **muestra** el \"desbloqueo\" verde y **oculta** el bloqueo roja.\n\\\\t\\* Hemos proporcionado el código para ocultar y mostrar las imágenes. Basta con añadir la instrucción if.\n\\*En caso contrario no hacer nada.  Pueden probar otra vez."
      U5 Check Password if statement lock image_2019: "<img src=\"https://images.code.org/117a2a8e098760173f16048fde721295-image-1479829058899.gif\" style=\"float: right; width: 150px\">\n\n## Pruébelo -- corrector de contraseña de texto\n\n\\*\\* Idea clave\\*\\*: puede utilizar '==' para comparar tanto cadenas como números.  \n\n-   Usemos una instrucción if en un controlador de eventos para comparar texto que un usuario introduce en un elemento de interfaz de usuario.\n\n**La configuración:**\n\n-   Tenga en cuenta la configuración en modo de diseño\n-   Hay dos imágenes: un bloqueo rojo y un \"desbloqueo\" verde.\n-   El \"desbloqueo\" verde está _oculto_ al principio.\n\n## Haga esto:\n\n**Añadir una instrucción if para el controlador de eventos para comprobar la contraseña y mostrar el \"desbloqueo\" sólo si la contraseña es correcta** \n\n_Puede utilizar '==' para comparar el texto que obtiene del cuadro de texto de \\\\_introducción_de_contraseña\\* y una cadena que desea utilizar como contraseña. La expresión booleana que debe usar debe tener este aspecto:\n\n![](https://images.code.org/9124274f38ed19bdae6cfc4b492162b6-image-1479828796051.png)\n\n\\*Si el usuario introduce la contraseña correcta entonces **muestra** el \"desbloqueo\" verde y **oculta** el bloqueo roja.\n\\\\t\\* Hemos proporcionado el código para ocultar y mostrar las imágenes. Basta con añadir la instrucción if.\n\\*En caso contrario no hacer nada.  Pueden probar otra vez."
      U5 video Booleans: |-
        ### Puntos a tener en cuenta:

        1.  ¿Qué es una _Expresión Booleana?_
        2.  ¿Por qué se llama  "Booleano"?
        3.  ¿Es esta una expresión legal: `10 > 25`?
      Video. Introduction to Conditionals - Part 1: |-
        ### Puntos a tener en cuenta:

        1.  ¿Qué es una _Expresión Booleana?_
        2.  ¿Por qué se llama  "Booleano"?
        3.  ¿Es esta una expresión legal: `10 > 25`?
      course1_artist_loops_challenge2: |-
        ¡Vamos a jugar un juego!! Dibuja tantas X como tú
        puedas! ¿Puedes obtener 3 en una fila?
      course4_artist_fwp_challenge1: Intente ejecutar este programa y haga cambios para ver que ocurre. ¿Puede averiguar cómo funciona? (o elimínalo y reemplazalo con algo totalmente diferente)
      course4_collector_nested_loops_challenge2: |-
        _"¡Cacemos el tesoro- usando bucles!_

        Ayuda al coleccionista a alcanzar al menos dos pilas de tesoro usando únicamente los bloques de la caja de herramientas. Es posible recoger los 4.
      courseA_collector_preLoops3: |-
        Para recoger el tesoro, intenta colocar, al final del programa, dos bloques (<https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png>)
        y luego un bloque (<https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png>). ¡Finalmente, ejecuta el programa presionando en "Run"!
      courseC_artist_loops1a: |-
        **Juego libre**  ¡Construye algo más grande,usando un paso cada vez! Puedes hacer cualquier cosa que quieras pero te vamos a enseñar cómo hacer algo como esto!

         ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)

        Usa `ir a 200 sobre 200 abajo`para conseguir que el artista se centre en el área de juego, luego usa el bloque `dibuja una calcomania` para hacer aparecer el pájaro.
      courseC_artist_loops2a: Ahora usa un bucle para girar tu pájaro 12 veces con un giro de 30 grados.
      courseC_artist_loops2a_2018: Ahora usa un bucle para girar tu pájaro 12 veces con un giro de 30 grados.
      courseC_artist_loops3a: |-
        ¡Más diversión!

        Ahora añade una calcomania de murciélago después del pájora para hacer una imagen parecida a la de abajo.

        ![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)
      courseC_artist_loops3a_2018: |-
        ¡Más diversión!

        Ahora añade una calcomania de murciélago después del pájora para hacer una imagen parecida a la de abajo.

        ![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)
      courseC_artist_loops4a: |-
        Añade un bloque a tu código para que el artista salte hacia adelante 75 píxeles entre marcar el pájaro y el murciélago. En este rompecabezas, asegúrate que has `ir a 200 sobre 200 abajo` dentro del bucle, para permanecer en el centro.

        ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)
      courseC_artist_loops5b: |-
        ¿Qué ocurre cuando te mueves hacia delante y luego hacia atrás 100, 200 o 400 píxeles en algún lugar dentro del bucle? Prueba a usar el bloque `dibujar calcamonia`antes de empezar tu bucle para hacer una obra de arte.

        \_\_\_ ![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)
      courseC_artist_loops5b_2018: |-
        ¿Qué ocurre cuando te mueves hacia delante y luego hacia atrás 100, 200 o 400 píxeles en algún lugar dentro del bucle? Prueba a usar el bloque `dibujar calcamonia`antes de empezar tu bucle para hacer una obra de arte.

        \_\_\_ ![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)
      courseC_artist_loops8a: |-
        Ahora haz algo por ti mismo. ¿Qué ocurre cuando haces dos círculos separados de diferentes calcamonías?

        \--
        ¿Necesitas una idea? Intenta hacer un diseño como este.

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_artist_loops8a_2018: |-
        Ahora haz algo por ti mismo. ¿Qué ocurre cuando haces dos círculos separados de diferentes calcamonías?

        \--
        ¿Necesitas una idea? Intenta hacer un diseño como este.

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_artist_loops8a_2019: |-
        Ahora haz algo por ti mismo. ¿Qué ocurre cuando haces dos círculos separados de diferentes calcamonías?

        \--
        ¿Necesitas una idea? Intenta hacer un diseño como este.

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_maze_debugging1: |-
        ¡ El código no está del todo bien!

        Corrige el código para ayudar a Scrat a conseguir la bellota.
      courseC_maze_debugging1_2018: |-
        ¡ El código no está del todo bien!

        Corrige el código para ayudar a Scrat a conseguir la bellota.
      courseC_maze_debugging1_2019: |-
        ¡ El código no está del todo bien!

        Corrige el código para ayudar a Scrat a conseguir la bellota.
      courseC_maze_debugging3: |-
        Algo no está del todo bien.

        ¡Elimina bloques para conseguir que Scrat consiga la bellota!
      courseC_maze_debugging3_2018: |-
        Algo no está del todo bien.

        ¡Elimina bloques para conseguir que Scrat consiga la bellota!
      courseC_maze_debugging3_2019: |-
        Algo no está del todo bien.

        ¡Elimina bloques para conseguir que Scrat consiga la bellota!
      courseD_bee_nestedLoops1a: |-
        "Va a ser genial!"

        Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops1a_2018: |-
        "Va a ser genial!"

        Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops1a_2019: |-
        "Va a ser genial!"

        Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops2: Ahora, ayuda a recoger el néctar a la abeja usando el menor número de bloques posible.
      courseD_bee_nestedLoops2_2018: Ahora, ayuda a recoger el néctar a la abeja usando el menor número de bloques posible.
      courseD_bee_nestedLoops2_2019: Ahora, ayuda a recoger el néctar a la abeja usando el menor número de bloques posible.
      courseD_bee_nestedLoops2_predict1: Ahora, ayuda a recoger el néctar a la abeja usando el menor número de bloques posible.
      courseD_bee_nestedLoops2_predict1_2018: Ahora, ayuda a recoger el néctar a la abeja usando el menor número de bloques posible.
      courseD_bee_nestedLoops2_predict1_2019: Ahora, ayuda a recoger el néctar a la abeja usando el menor número de bloques posible.
      courseD_bee_nestedLoops5: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bee_nestedLoops6_2018: |-
        _"¡Debes comerte el girasol!"_

        Haz que el zombi vaya al girasol usando sólo los bloques disponibles.
      courseD_bee_nestedLoops8: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bee_nestedLoops8_2018: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bee_nestedLoops8_2019: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bounce_events1: ¡Llegar a la bandera! Coloque un bloque en "cuando flecha" bloquear y pulse "Ejecutar" para mover el jugador a la bandera.
      courseD_collector_nested_loops_challenge2: |-
        _"¡Cacemos el tesoro- usando bucles!_

        Ayuda al coleccionista a alcanzar al menos dos pilas de tesoro usando únicamente los bloques de la caja de herramientas. Es posible recoger los 4.
      courseD_collector_nested_loops_challenge2_2018: |-
        _"¡Cacemos el tesoro- usando bucles!_

        Ayuda al coleccionista a alcanzar al menos dos pilas de tesoro usando únicamente los bloques de la caja de herramientas. Es posible recoger los 4.
      courseD_collector_nested_loops_challenge2_2019: |-
        _"¡Cacemos el tesoro- usando bucles!_

        Ayuda al coleccionista a alcanzar al menos dos pilas de tesoro usando únicamente los bloques de la caja de herramientas. Es posible recoger los 4.
      courseD_maze_nestedLoops4: "¡Llévame al girasol!"
      courseD_maze_nestedLoops4_2018: "¡Llévame al girasol!"
      courseD_maze_nestedLoops4_2019: "¡Llévame al girasol!"
      courseD_maze_nestedLoops6: |-
        _"¡Debes comerte el girasol!"_

        Haz que el zombi vaya al girasol usando sólo los bloques disponibles.
      courseD_maze_nestedLoops6_2018: |-
        _"¡Debes comerte el girasol!"_

        Haz que el zombi vaya al girasol usando sólo los bloques disponibles.
      courseD_maze_nestedLoops6_2019: |-
        _"¡Debes comerte el girasol!"_

        Haz que el zombi vaya al girasol usando sólo los bloques disponibles.
      courseE_bee_functions2: |-
        Las funciones son bloques de código que realizan una tarea. \\r
        \\r
        Usa la función `obtener 2 néctar` para recolectar el néctar de cada flor.
      courseE_bee_functions2_2018: |-
        Las funciones son bloques de código que realizan una tarea. \\r
        \\r
        Usa la función `obtener 2 néctar` para recolectar el néctar de cada flor.
      courseE_bee_functions3: "Las funciones son bloques de código que realizan\nuna tarea. Utilice la función \"get 5\" para obtener 5 néctares a cada momento. Asegúrese de \nutilizar un bucle para obtener un recuento ideal de bloque, también."
      courseE_bee_functions3_2018: "Las funciones son bloques de código que realizan\nuna tarea. Utilice la función \"get 5\" para obtener 5 néctares a cada momento. Asegúrese de \nutilizar un bucle para obtener un recuento ideal de bloque, también."
      courseE_farmer_concept4: Ahora vamos a un nivel más profundo. Hemos anidado todo el bloque de código en otro bucle, pero tienes que poner al artista en su lugar para dibujar la línea siguiente. ¿Cuál de estos bloques de código puede usted colocar al final del bucle exterior para dibujar la red entera?
      courseF_bee_for_challenge2: Resuelve este rompecabezas con el menor número de bloques posible.
      courseF_bee_for_challenge2_2018: Resuelve este rompecabezas con el menor número de bloques posible.
      courseF_bee_for_challenge2_2019: Resuelve este rompecabezas con el menor número de bloques posible.
      frozen circle function in circle: Ahora crearemos 20 círculos superpuestos, girando 18 grados entre cada círculo.
      frozen circle function with parameter: Aquí está un bloque "Crear círculo" que puede dibujar círculos de diferentes tamaños. ¿Puedes usarlo para dibujar un circulo pequeño de tamaño 5 y uno más grande de tamaño 10?
      frozen circle function: Utiliza el nuevo bloque "Crear un círculo" para crear 10 círculos superpuestos. No te olvides de saltar hacia adelante entre cada círculo.
      frozen circle: Un círculo es una figura especial. ¿Puedes adivinar qué número debe reemplazar los signos de interrogación para dibujar un círculo?
      frozen cross rotate dense: "¡Ahora repitámoslo 90 veces! ¿Cuántas veces cabe 90 en 360? Pista: Es un número muy pequeño."
      frozen cross rotate: Ahora trata de repetirlo 10 veces. ¿Cuántos  grados necesitas girar entre cada línea?
      frozen cross: Cubre un bloque de "Repetir" alrededor de estos comandos para crear un signo más. ¿Notaste que Elsa puede moverse hacia adelante y hacia atrás?
      frozen diamond mini snowflake: |-
        ¿Sabías que cada copo de nieve tiene
        una forma distinta? Crearemos un nuevo copo de nieve utilizando other bloque de "Repetir" para repetir el paralelogramo 4 veces, girando hacia la derecha 90 grados entre cada paralelogramo.
      frozen diamond snowflake: Ahora crearemos un nuevo copo de nieve, utilizando el bloque "Repetir" para repetir el paralelogramo 10 veces, girando a la derecha 36 grados entre cada uno.
      frozen diamond: |-
        Utiliza una repetición alrededor de estos bloques para crear un paralelogramo.
        Es como un rectángulo, pero tiene diferentes ángulos. Este tiene 60 grados
        y 120 ángulos de grados en lugar de todos los 90 ángulos de grados.
      frozen freeplay: "¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal."
      frozen perpendicular: Ahora veamos si podemos crear dos líneas que se encuentran a un ángulo de 90 grados una de la otra. Necesitarás usar tanto el bloque de "Giro" como el bloque de "Mover".
      frozen snowflake branch: Intenta utilizar el bloque "Crear una rama de copo de nieve" para dibujar 3 ramas, lo que empezará a parecerse a un copo de nieve.
      frozen snowflake full: "¡Ahora repitámoslo 8 veces para dibujar un hermoso copo de nieve!"
      frozen snowflower: Formas complejas de nieve pueden crearse usando figuras geométricas muy simples. ¿Puedes crear uno repitiendo 5 círculos de tamaño 5 y 5 círculos de tamaño 10?
      frozen square iterative: Parece que estamos a la mitad de completar un cuadrado. Ahora pongamos 4 líneas juntas para crear un cuadrado.
      frozen square loop 3x: Ahora crearemos tres cuadrados, girando al terminar cada cuadrado. Asegúrate de girar 120 grados antes de iniciar un nuevo cuadrado.
      frozen square loop: ¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?
      frozen square snowflake: ¿Puedes dibujar un copo de nieve utilizando el bloque "Repetir" para dibujar un cuadrado 10 veces y el bloque "Girar" para girar 36 grados entre cada cuadrado?
      grade2_MakeDogTag_8: Ahora conectemos un montón de V juntos, dibujándolos en un bucle.
      grade2_MakeDogTag_9: "¡Tiempo para hacer algo elegante! \\\\r \\\\r reconstruir el código del último puzzle, pero esta vez, añadir un giro a la izquierda 30 grados dentro del bucle. Ahora, repita 24 veces en lugar de 8."
      grade2_PuppyLoops_10: Mi molinillo de viento no está terminado. Cuántas veces necesito repetir para terminarlo?
      grade2_PuppyLoops_2: |-
        Subitamente, aparece un bloque mágico! Con
        el bloque `repetir`, puede repetir el código una y otra vez.\\r
        \\r
        Puedes llegar a
        el cerdo creando un circuito que usa solo un bloque \`adelante' en el interior
        de una 'repetición'?
      grade2_PuppyLoops_4: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade2_PuppyLoops_8: 'El código para los tres bigotes que ves es incorrecto. Sugerencia: cada bigote tiene 75 pixeles de largo. Repara este código para dibujar los bigotes.'
      grade2_PuppyLoops_9: |-
        Parece que la C en Código está dibujada al revés-
        ¿Puedes hacer que parezca una C?
      grade2_puppy_loops2: |-
        Subitamente, aparece un bloque mágico! Con
        el bloque `repetir`, puede repetir el código una y otra vez.\\r
        \\r
        Puedes llegar a
        el cerdo creando un circuito que usa solo un bloque \`adelante' en el interior
        de una 'repetición'?
      grade2_puppy_loops4: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade3_ConditionalsElse_1: |-
        ¡Esta nube está bloqueando mi vista!
        \\r
        \\r
        Comprueba si hay una flor debajo de la nube, y solo consigue el néctar
        si hay una flor.  \\r
        ¡Ten cuidado, esta puede cambiar!
      grade3_ConditionalsElse_2: "La abeja sólo quiere néctar ahora . \nRecuerde que no todos los objetos son flores, recoge néctar solamente de las flores."
      grade3_ConditionalsElse_4: |-
        A veces, esta nube cubre una
        flor, y a veces cubre un panal! \\r
        \\r
        Use el bloque `si/no`
        para recolectar néctar solo si es una flor. \\r
        De lo contrario, haz miel (porque
        es un panal de miel).
      grade3_ConditionalsElse_5: Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, sino haz miel (porque hay un panal de abejas).
      grade3_ConditionalsElse_6: Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque if-else se combina con otro bloque if-else para crear un bloque if,else-if, else. Completa la solución para recoger la cantidad desconocida de néctar.
      grade3_ConditionalsElse_7: Recuerda que las flores púrpura pueden tener 1, 2 ó 3 néctares. Completa la función "revisar flor púrpura" y úsala para recoger todo el néctar de las flores.
      grade3_ConditionalsElse_8: Escribe una función dentro del bloque llamada "revisar que la flor hace miel." Tu función debe comprobar cuánto néctar tiene la flor púrpura, recogerla, avanzar y luego hacer miel.
      grade3_ConditionalsElse_9: |-
        Evaluación: Este código está errado.
        Completa la función "consigue néctar o produce miel" entonces llámalo para recolectar todo el néctar y la miel. Recuerda que las rosas púrpuras pueden tener 3,2 o 1 néctares.
      grade3_ConditionalsElse_TeacherIDo: Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, sino haz miel (porque hay un panal de abejas).
      grade3_Conditionals_1: |-
        Soy una abeha hambrienta! \\r
        \\r
        \\r
        Ayudame a recolectar todo el néctar de las flores utilizando el menor número de flores.
      grade3_Conditionals_10: 'Recoge néctar y haz miel. Pista: ¿Qué ocurre si usas el condicional "Si nectar" en una flor roja? ¿Puedes completar esto con un bucle (loop)?'
      grade3_Conditionals_11 BAD: |-
        \*\* Evaluación: \*\* Use un bucle `siempre que`
        para recoger todo el néctar de estas flores.
      grade3_Conditionals_11: |-
        Vamos a juntar todo!\\r
        \\r
        Usa lo que has aprendido para ayudarme a recolectar néctar sólo de las flores que tienen néctar, utilizando el menor número de bloques posible.  \\r
        \\r
        No olvides hacer la miel al final.
      grade3_Conditionals_12: Recoge néctar de las cuatro flores.
      grade3_Conditionals_13: |-
        **Assessment:** Recolecta todo el néctar.  \\r
        Ten cuidado de no recolectar néctar de de una flor púrpura que no tiene nada de néctar.
      grade3_Conditionals_2: Ayúdame a recoger todo el néctar de las flores y a hacer miel. Usa un bucle (loop).
      grade3_Conditionals_3: |-
        Estas flores púrpura cambian!\\r
        \\r
        Cada vez que intentas el puzzle, las flores púrpura pueden tener nectar o no... pero no sabrás el número hasta que ejecutes el código! \\r
        \\r
        Ten cuidado de no recolectar néctar de una flor púrpura si no tiene. \\r
        Primero deberás comprobar si el néctar es igual a 1 usando el bloque `si hay néctar`.
      grade3_Conditionals_8: Colecta néctar donde las flores tienen néctar.
      grade3_Debugging_1: |-
        ¡Estos bloques me están molestando!\\r
        \\r
        Arregle el/los error (s) para recoger todo el néctar.
      grade3_Debugging_5: |-
        ¡Esa flor se ve deliciosa! \\r
        \\r
        Arregle el/los error (s) para recoger todo el néctar. \\r
        Ahora puede usar tanto la ejecución como el paso.
      grade3_Debugging_6: |-
        ¡Qué desafío tan dulce!\\r
        \\r
        Arregla
        el error(s) para recoger todo el néctar.
      grade3_Debugging_9: Estos bloques realmente me molesta. Corregir el error(s) para recoger todo el néctar y hacer todo de la miel.
      grade3_Loops_10: |-
        ¡Una abeja tan ocupada!
        \\r
        Ayuda a Abeja a recolectar todo el néctar y hacer toda la miel con la menor cantidad de bloques posible.
      grade3_Loops_11: |-
        La forma de este camino es diferente de los demás. \\r
        \\r
        ¿Puedes recolectar todo el néctar usando la menor cantidad de bloques posible?
      grade3_Loops_3: "¿Podrías utilizar un ciclo para recolectar todo el néctar?"
      grade3_Loops_4: Ahora usa el bloque 'repetir' para recolectar todo el néctar y crear toda la miel.
      grade3_Loops_6: |-
        ¿Qué pasa si haces un ciclo con esta secuencia 3 veces?
        ¡No olvides hacer la miel al final!
      grade3_Loops_7: 'Cada flor continene una unidad de néctar. Recolecta néctar de cada una de las flores. '
      grade3_Loops_TeacherIDo: 'Cada flor continene una unidad de néctar. Recolecta néctar de cada una de las flores. '
      grade3_bee_conditionals_quantum2: "La abeja sólo quiere néctar ahora . \nRecuerde que no todos los objetos son flores, recoge néctar solamente de las flores."
      grade3_maze_Loop1: "**Evaluación:** Llévame\nal girasol usando solo 5 bloques! "
      grade3_maze_loops2: "¡Llévame al girasol!"
      grade3_maze_loops3: |-
        _"¡Debes comerte el girasol!"_

        Haz que el zombi vaya al girasol usando sólo los bloques disponibles.
      grade3_maze_nestedLoops2: |-
        Subitamente, aparece un bloque mágico! Con
        el bloque `repetir`, puede repetir el código una y otra vez.\\r
        \\r
        Puedes llegar a
        el cerdo creando un circuito que usa solo un bloque \`adelante' en el interior
        de una 'repetición'?
      grade3_maze_nestedLoops3: |-
        Llévame al cerdo! tu solo puedes usar un
        bloque de `avanzar`en esta oportunidad
      grade3_maze_nestedLoops4: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade4_arist_nested_loop_circles1: "**Evaluación:** Usa un bucle anidado para completar el diseño."
      grade4_arist_nested_loop_flags1: has un bucle con el código dado para crear un molino de viento.
      grade4_arist_nested_loop_polygons1: 'con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuanto es 360 dividido por 10?)'
      grade4_arist_nested_loop_polygons2: 'Repite el bucle 6 veces. ¿Cuánto tienes que girar cada vez el bucle? (Pista: ¿Cuánto es 360 dividido por 6?)'
      grade4_arist_nested_loop_squares1: |-
        ¿Puedes tu dibujar los 10 cuadrados de
        esta acera usando un circuito insertado? \\r
        \\r
        Cada cuadrado tiene 30 píxeles.
      grade4_arist_nested_loop_triangles2: "Ahora anida este bucle dentro de otro para dibujar 10 triángulos. \nEsto se llama un bucle \"anidado\".  "
      grade4_arist_nested_loop_triangles3: |-
        ¿Puedes dibujar un hexágono haciendo un enlace
        con el código triangular?
      grade4_arist_nested_loop_triangles4: Dibujar los dientes en la boca del cocodrilo!
      grade4_arist_nested_loop_triangles5: Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado. \\r
      grade4_arist_nested_loop_triangles6: "¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?"
      grade4_artist_functions2: ¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada "dibuja un cuadrado". ¿Puedes utilizar la función "dibuja un cuadrado" para crear los lentes? Los cuadrados están separados por 75 píxeles.
      grade4_artist_nested_loop_circles1: "**Evaluación:** Usa un bucle anidado para completar el diseño."
      grade4_artist_nested_loop_flags1: has un bucle con el código dado para crear un molino de viento.
      grade4_artist_nested_loop_polygons1: 'con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuanto es 360 dividido por 10?)'
      grade4_artist_nested_loop_squares1: |-
        ¿Puedes tu dibujar los 10 cuadrados de
        esta acera usando un circuito insertado? \\r
        \\r
        Cada cuadrado tiene 30 píxeles.
      grade4_artist_nested_loop_triangles1: |-
        Completa el código para dibujar estos triángulos. El
        primero está hecho para ti. Sugerencia: 3 triángulos en una rotación de 360 grados.\\r
        \\r
      grade4_artist_nested_loop_triangles5: Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado. \\r
      grade4_artist_nested_loop_triangles6: "¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?"
      grade4_artist_parameters_triangles2: ¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.
      grade4_bee_conditionals_nested_loops: |-
        **Assessment:** Recolecta todo el néctar.  \\r
        Ten cuidado de no recolectar néctar de de una flor púrpura que no tiene nada de néctar.
      grade4_bee_conditionals_new1: |-
        **Assessment:** Recolecta todo el néctar.  \\r
        Ten cuidado de no recolectar néctar de de una flor púrpura que no tiene nada de néctar.
      grade4_bee_conditionals_quantum1: |-
        ¡Esta nube está bloqueando mi vista!
        \\r
        \\r
        Comprueba si hay una flor debajo de la nube, y solo consigue el néctar
        si hay una flor.  \\r
        ¡Ten cuidado, esta puede cambiar!
      grade4_bee_conditionals_quantum2: "La abeja sólo quiere néctar ahora . \nRecuerde que no todos los objetos son flores, recoge néctar solamente de las flores."
      grade4_bee_conditionals_quantum4: |-
        A veces, esta nube cubre una
        flor, y a veces cubre un panal! \\r
        \\r
        Use el bloque `si/no`
        para recolectar néctar solo si es una flor. \\r
        De lo contrario, haz miel (porque
        es un panal de miel).
      grade4_bee_conditionals_quantum5: Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, sino haz miel (porque hay un panal de abejas).
      grade4_bee_functions2: |-
        Las funciones son bloques de código que realizan una tarea. \\r
        \\r
        Usa la función `obtener 2 néctar` para recolectar el néctar de cada flor.
      grade4_bee_functions3: "Las funciones son bloques de código que realizan\nuna tarea. Utilice la función \"get 5\" para obtener 5 néctares a cada momento. Asegúrese de \nutilizar un bucle para obtener un recuento ideal de bloque, también."
      grade4_bee_nestedLoops4: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      grade4_frozen_freeplay: "¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal."
      grade4_frozen_functions0: Un círculo es una figura especial. ¿Puedes adivinar qué número debe reemplazar los signos de interrogación para dibujar un círculo?
      grade4_frozen_functions1a: Utiliza el nuevo bloque "Crear un círculo" para crear 10 círculos superpuestos. No te olvides de saltar hacia adelante entre cada círculo.
      grade4_frozen_functions2: Ahora crearemos 20 círculos superpuestos, girando 18 grados entre cada círculo.
      grade4_frozen_functions3: Aquí está un bloque "Crear círculo" que puede dibujar círculos de diferentes tamaños. ¿Puedes usarlo para dibujar un circulo pequeño de tamaño 5 y uno más grande de tamaño 10?
      grade4_frozen_functions4: Formas complejas de nieve pueden crearse usando figuras geométricas muy simples. ¿Puedes crear uno repitiendo 5 círculos de tamaño 5 y 5 círculos de tamaño 10?
      grade4_frozen_nested_loop_diamonds2: |-
        ¿Sabías que cada copo de nieve tiene
        una forma distinta? Crearemos un nuevo copo de nieve utilizando other bloque de "Repetir" para repetir el paralelogramo 4 veces, girando hacia la derecha 90 grados entre cada paralelogramo.
      grade4_frozen_nested_loop_diamonds3: Ahora crearemos un nuevo copo de nieve, utilizando el bloque "Repetir" para repetir el paralelogramo 10 veces, girando a la derecha 36 grados entre cada uno.
      grade4_frozen_square: ¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?
      grade4_frozen_square_loop1: ¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?
      grade4_frozen_square_loop2: Ahora crearemos tres cuadrados, girando al terminar cada cuadrado. Asegúrate de girar 120 grados antes de iniciar un nuevo cuadrado.
      grade4_frozen_square_loop3: ¿Puedes dibujar un copo de nieve utilizando el bloque "Repetir" para dibujar un cuadrado 10 veces y el bloque "Girar" para girar 36 grados entre cada cuadrado?
      grade4_review_artist2: |-
        ¡Esta casa necesita un techo! Dibuja el triángulo. \\r
        \\r
        Pista:
        los tres lados son igual de anchos.\\r
        \\r
        <img src="https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif"
        width="300"/>
      grade4_review_artist3: |-
        El bloque Salta mueve el artista sin dibujar.
        Dibuja la línea punteada utilizando los bloques Salta y Dibuja.
      grade4_review_bee1: Ahora usa el bloque 'repetir' para recolectar todo el néctar y crear toda la miel.
      grade4_review_bee3: |-
        ¡Una abeja tan ocupada!
        \\r
        Ayuda a Abeja a recolectar todo el néctar y hacer toda la miel con la menor cantidad de bloques posible.
      grade5_artist_for_loops1: 'Dibuje este triángulo que tiene un tamaño de 50 pixeles.  Sugerencia: Use un bloque de repetición.'
      grade5_artist_for_loops10: |-
        Con todas las cosas que ha aprendido, podrías decir como se hizo esta imagen?\\r
        \\r
        Necesita una ayuda? Presione aquí.
      grade5_artist_for_loops5: La línea mas pequeña de este espiral cuadrado es 10, el mas largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      grade5_artist_parameters_triangles2a: ¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.
      grade5_artist_variables_hexagons1: Vamos a intentarlo otra vez. Ahora, vamos a hacer este diseño cool con un hexágono de 60 píxeles.
      grade5_artist_variables_pentagon9: Modifica este algoritmo para que utilice la variable "lados" en lugar de un número fijo para dibujar un pentágono. Reemplaza el número 5 con la variable "lados" y usa el bloque "establecer lados".
      grade5_artist_variables_pentagons1: ¿Me puedes ayudar a dibujar este patrón cool dejando caer el bloque de variable "longitud" en los lugares correctos?
      grade5_playlab_variables13: Use un bloque "cuando el actor toque" para enviar al Perro de regreso al lado superior izquierdo SOLAMENTE si el Perro toca a alguno de los otros actores.
      grade5_playlab_variables2: |-
        ¡Esa carrera en ese ultimo problema no
        fue justa! Cambia la variable de "velocidad\_perro" para asegurarse que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!
      grade5_playlab_variables9: Aquí hay una función denominada "patrulla". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles.
      level 'grade3_Loops_10: |-
        ¡Una abeja tan ocupada!
        \\r
        Ayuda a Abeja a recolectar todo el néctar y hacer toda la miel con la menor cantidad de bloques posible.
      level 'grade3_Loops_11: |-
        La forma de este camino es diferente de los demás. \\r
        \\r
        ¿Puedes recolectar todo el néctar usando la menor cantidad de bloques posible?
      level 'grade3_Loops_3: "¿Podrías utilizar un ciclo para recolectar todo el néctar?"
      level 'grade3_Loops_4: Ahora usa el bloque 'repetir' para recolectar todo el néctar y crear toda la miel.
      level 'grade3_Loops_5: |-
        Que hermoso campo de flores! \\r
        \\r
        Ayuda
        a la abeja a visitar cada uno.\\r
        \\r
        Puedes conseguir la manera de hacerlo con menos de 7 bloques?
      level 'grade3_Loops_6: |-
        ¿Qué pasa si haces un ciclo con esta secuencia 3 veces?
        ¡No olvides hacer la miel al final!
      level 'grade3_Loops_7: 'Cada flor continene una unidad de néctar. Recolecta néctar de cada una de las flores. '
      pre-assessment survey q25A: Si es asi, ¿qué curso(s) de ciencias de la computación has recibido antes del curso actual de ciencias de la computación?
      ramp_artist_loops1: "¡Qué día más maravilloso! \n\nAyuda al artista a cubrir sus flores antes del invierno moviéndose 60 píxeles hacia delante."
      ramp_artist_loops1_2018: "¡Qué día más maravilloso! \n\nAyuda al artista a cubrir sus flores antes del invierno moviéndose 60 píxeles hacia delante."
      ramp_artist_loops1_2019: "¡Qué día más maravilloso! \n\nAyuda al artista a cubrir sus flores antes del invierno moviéndose 60 píxeles hacia delante."
      ramp_artist_loops2: Añade algo bonito repitiendo ese paso 5 veces, cambiando a un color aleatorio entre cada movimiento.
      ramp_artist_loops2_2018: Añade algo bonito repitiendo ese paso 5 veces, cambiando a un color aleatorio entre cada movimiento.
      ramp_artist_loops2_2019: Añade algo bonito repitiendo ese paso 5 veces, cambiando a un color aleatorio entre cada movimiento.
      ramp_artist_loops3: Dibuja la línea colorida 5 veces más, esta vez usando un bucle `repetir`.
      ramp_artist_loops3_2018: Dibuja la línea colorida 5 veces más, esta vez usando un bucle `repetir`.
      ramp_artist_loops3_2019: Dibuja la línea colorida 5 veces más, esta vez usando un bucle `repetir`.
      ramp_artist_loops4: "¿Qué sucede cuando agregas un giro a la derecha \nde 72 grados después de todo lo demás dentro de tu bucle?"
      ramp_artist_loops4_2018: "¿Qué sucede cuando agregas un giro a la derecha \nde 72 grados después de todo lo demás dentro de tu bucle?"
      ramp_artist_loops4_2019: "¿Qué sucede cuando agregas un giro a la derecha \nde 72 grados después de todo lo demás dentro de tu bucle?"
      ramp_artist_loops5: |-
        ¡Los bucles hacen que escribir código sea más fácil!

        Usa bucles para dibujar esta escalera:

        -   Cada escalón tiene una longitud de 50 píxeles de ancho y de alto
        -   Necesitarás girar 90 grados en cada dirección
      ramp_artist_loops5_2018: |-
        ¡Los bucles hacen que escribir código sea más fácil!

        Usa bucles para dibujar esta escalera:

        -   Cada escalón tiene una longitud de 50 píxeles de ancho y de alto
        -   Necesitarás girar 90 grados en cada dirección
      ramp_artist_loops5_2019: |-
        ¡Los bucles hacen que escribir código sea más fácil!

        Usa bucles para dibujar esta escalera:

        -   Cada escalón tiene una longitud de 50 píxeles de ancho y de alto
        -   Necesitarás girar 90 grados en cada dirección
      ramp_artist_loops6: |-
        Esta escalera es más grande pero usa la misma cantidad de código que el último rompecabezas!

        Corrige este bucle para completar el rompecabezas.
      ramp_artist_loops6_2018: |-
        Esta escalera es más grande pero usa la misma cantidad de código que el último rompecabezas!

        Corrige este bucle para completar el rompecabezas.
      ramp_artist_loops6_2019: |-
        Esta escalera es más grande pero usa la misma cantidad de código que el último rompecabezas!

        Corrige este bucle para completar el rompecabezas.
      ramp_artist_loops7: "¡Busca un patrón y acorta este código usando bucles!"
      ramp_artist_loops7_2018: "¡Busca un patrón y acorta este código usando bucles!"
      ramp_artist_loops7_2019: "¡Busca un patrón y acorta este código usando bucles!"
      ramp_artist_loops9: Resuelve este rompecabezas dibujando un cuadrado de 200 píxeles de lado.
      ramp_artist_loops9_2018: Resuelve este rompecabezas dibujando un cuadrado de 200 píxeles de lado.
      ramp_artist_loops9_2019: Resuelve este rompecabezas dibujando un cuadrado de 200 píxeles de lado.
