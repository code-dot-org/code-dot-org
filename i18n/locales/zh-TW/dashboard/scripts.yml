---
zh-TW:
  data:
    script:
      category:
        csd_category_name: 計算機科學探索（'17-'18）
        csd_2018_category_name: 計算機科學探索（'18-'19）
        csd_2019_category_name: 計算機科學探索（'19-'20）
        csd_2020_category_name: 計算機科學探索（'20-'21）
        csd_2021_category_name: 計算機科學探索（'21-'22）
        csf_category_name: CS 基本原理
        csf_international_category_name: 計算機科學基礎國際版
        csf2_draft_category_name: 開發中：課程 A - F
        csp_category_name: CS 原理 ('15-'16)
        csp_2018_category_name: 計算機科學原理（'18-'19）
        csp_2019_category_name: 計算機科學原理（'19-'20）
        csp_2020_category_name: 計算機科學原理（'20-'21）
        csp_2021_category_name: CS 原理 ('21-'22)
        cspexams_category_name: 計算機科學原理應用測驗
        csp17_category_name: CS 原理 ('17-'18)
        full_course_category_name: 完整課程
        hoc_category_name: 一小時玩程式
        math_category_name: 運算
        research_studies_category_name: 研究
        other_category_name: 其它
      name:
        course1:
          title: 課程 1
          description: 課程 1 主要在讓初學者學習創建計算機程式，在這個過程中讓他們學習與他人合作、提高解決問題能力，並培養完成困難任務的毅力。在課程結束之後，學生就可以設計及分享自己的遊戲或故事。建議年級 K-1。
          description_short: 給學齡前幼童的計算機科學介紹。
          description_audience: 年齡 4-6
          lessons:
            'Artist: Loops':
              name: 小藝術家 - 迴圈（Loops）
            'Artist: Sequence':
              name: 小藝術家 - 序列（Sequence）
            'Artist: Shapes':
              name: 小藝術家 - 形狀（Shapes）
            'Bee: Loops':
              name: 蜜蜂： 迴圈
            'Bee: Sequence':
              name: 蜜蜂： 序列
            Building a Foundation:
              name: 打好基礎
            Getting Loopy:
              name: 學習迴圈
            Going Places Safely:
              name: 安全的遨遊網路世界
            Happy Maps:
              name: 快樂地圖
            'Jigsaw: Learn to drag and drop':
              name: '拼圖: 學會拖放'
            'Maze: Debugging':
              name: '迷宮: 除錯'
            'Maze: Loops':
              name: 迷宮： 迴圈
            'Maze: Sequence':
              name: '迷宮: 序列'
            Move it, Move it:
              name: 移動它，移動它
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
            Spelling Bee:
              name: 拼字蜜蜂
            'Studio: Create a Story':
              name: '播放實驗室: 創造一個故事'
            The Big Event:
              name: 大事件
          student_description: 課程 1 主要在讓初學者學習創建計算機程式，在這個過程中讓他們學習與他人合作、提高解決問題能力，並培養完成困難任務的毅力。在課程結束之後，學生就可以設計及分享自己的遊戲或故事。建議年級 K-1。
        course2:
          title: 課程 2
          description: 課程 2 適合有閱讀能力但沒有編程經驗的學生，在課程中，學生會學習建立程式以解決問題，開發並分享互動式的遊戲或故事。建議年級 2-5。
          description_short: 給有閱讀能力學生的計算機科學介紹。
          description_audience: 年齡 6+（需閱讀能力）
          lessons:
            'Artist: Debugging':
              name: 小藝術家 - 除錯（Debugging）
            'Artist: Loops':
              name: 小藝術家 - 迴圈（Loops）
            'Artist: Nested Loops':
              name: 畫家： 嵌套的迴圈
            'Artist: Sequence':
              name: 小藝術家 - 序列（Sequence）
            'Bee: Conditionals':
              name: '蜜蜂: 判斷條件'
            'Bee: Debugging':
              name: 蜜蜂： 除錯（Debugging）
            'Bee: Loops':
              name: 蜜蜂： 迴圈
            Binary Bracelets:
              name: 二進制手環
            Conditionals:
              name: 條件判斷（Conditionals）
            Flappy:
              name: 像素鳥
            Getting Loopy:
              name: 學習迴圈
            Graph Paper Programming:
              name: 方格紙編程
            'Maze: Loops':
              name: 迷宮： 迴圈
            'Maze: Sequence':
              name: '迷宮: 序列'
            'Real-life Algorithms: Paper Planes':
              name: 生活中的演算法 - 紙飛機
            Relay programming:
              name: 接力編程
            'Studio: Create a Story':
              name: '播放實驗室: 創造一個故事'
            The Big Event:
              name: 大事件
            Your Digital Footprint:
              name: 你的數位足跡
          student_description: 課程 2 適合有閱讀能力但沒有編程經驗的學生，在課程中，學生會學習建立程式以解決問題，開發並分享互動式的遊戲或故事。建議年級 2-5。
        course3:
          title: 課程 3
          description: 課程 3 是為已完成課程 2 的學生設計的。學生將更深入理解到前面所學的編程主題，進而能夠用更靈活的方式來解決更複雜的問題。此課程完成時，學生將會創造出互動式的故事或遊戲，且可和任何人分享。建議 4-5 年級的學生學習。
          description_short: 課程 3 是課程 2 的延續課程。
          description_audience: 年齡 8-18
          lessons:
            Artist:
              name: 藝術家
            'Artist: Functions':
              name: 畫家：函數
            'Artist: Nested Loops':
              name: 畫家： 嵌套的迴圈
            'Artist: Patterns':
              name: 小藝術家 - 圖案（Patterns）
            'Bee: Conditionals':
              name: '蜜蜂: 判斷條件'
            'Bee: Debugging':
              name: 蜜蜂： 除錯（Debugging）
            'Bee: Functions':
              name: 蜜蜂：函數
            'Bee: Nested Loops':
              name: 蜜蜂：巢狀迴圈（Nested Loops）
            Bounce:
              name: 彈跳
            Computational Thinking:
              name: 計算機式思維
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
            Dice Race:
              name: 擲骰子比賽
            Digital Citizenship:
              name: 數位公民
            'Farmer: While Loops':
              name: 農夫： ｢當｣迴圈　
            Functional Suncatchers:
              name: 實用的透光窗飾（Suncatcher）
            Internet:
              name: 網際網路 Internet
            Maze:
              name: 迷宮
            'Maze: Conditionals':
              name: 迷宮： 條件
            Songwriting:
              name: 歌曲創作
            'Studio: Create a Game':
              name: '播放實驗室: 設計一個遊戲'
            'Studio: Create a Story':
              name: '播放實驗室: 創造一個故事'
          student_description: 課程 3 是為已完成課程 2 的學生設計的。學生將更深入理解到前面所學的編程主題，進而能夠用更靈活的方式來解決更複雜的問題。此課程完成時，學生將會創造出互動式的故事或遊戲，且可和任何人分享。建議 4-5 年級的學生學習。
        playlab:
          title: Play Lab
          description: 在 Play Lab 上創作故事或是遊戲！
          description_short: 在 Play Lab 上創作故事或是遊戲！
          lessons:
            Play Lab:
              name: Play Lab
              description_student: 在這節課中，學習者將獲得電腦科學的入門經驗，並使用基本的積木代碼創建一個遊戲。
          student_description: 在 Play Lab 上創作故事或是遊戲！
        artist:
          title: 藝術家
          description: 和小畫家一起畫圖和設計！
          description_short: 和小畫家一起畫圖和設計！
          lessons:
            Artist:
              name: 藝術家
              description_student: 為藝術家設計程式，製作漂亮的圖像。
              description_teacher: 在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。
          student_description: 和小畫家一起畫圖和設計！
        hourofcode:
          title: 經典迷宮
          description: 和來自憤怒鳥、植物大戰殭屍、冰原歷險記的角色一起學習計算機科學的基礎知識！
          description_short: 和許多有趣的角色一塊兒學學計算機科學基礎！
          lessons:
            Maze:
              name: 迷宮
              description_student: 在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂專門為年齡較小（4-10 歲）的學生所設計，但是在使用提供的年齡差異建議後，也適用於年齡較大的學生。
              description_teacher: 在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂專門為年齡較小（4-10 歲）的學生所設計，但是在使用提供的年齡差異建議後，也適用於年齡較大的學生。
          student_description: 和來自憤怒鳥、植物大戰殭屍、冰原歷險記的角色一起學習計算機科學的基礎知識！
        frozen:
          title: 與安娜與艾莎一同玩程式
          description: 讓我們使用程式碼，與安娜和艾莎一同探索美麗且神奇的冰。你可以利用在雪上溜冰製造出雪花等圖案，然後打造一個冬季仙境並分享給你的朋友！
          description_short: 讓我們使用程式碼，與安娜和艾莎一同探索美麗且神奇的冰。
          lessons:
            Artist:
              name: 與安娜與艾莎一同玩程式
              description_student: 在本課程中，所有年齡的學習者在一個安全的、支持性的環境中獲得程式設計和電腦科學的入門經驗。本課程是為10-13歲的中年級學生設計的，但可以根據提供的差異化建議來對更小或更大的學習者進行調整。學生應對簡單的幾何和繪圖角度有基本的瞭解。
              description_teacher: 在本課程中，所有年齡的學習者在一個安全的、支持性的環境中獲得程式設計和電腦科學的入門經驗。本課程是為10-13歲的中年級學生設計的，但可以根據提供的差異化建議來對更小或更大的學習者進行調整。學生應對簡單的幾何和繪圖角度有基本的瞭解。
          student_description: 讓我們使用程式碼，與安娜和艾莎一同探索美麗且神奇的冰。你可以利用在雪上溜冰製造出雪花等圖案，然後打造一個冬季仙境並分享給你的朋友！
        course4:
          title: 課程 4
          description: 課程 4 是設計給完成課程 2 和 3 的學生 。隨著難度增加，學生在解決關卡的問題時，也能夠學習結合多種概念。當完成本課程的時候，學生將創建能夠展示多種技能的程式，包括用於迴圈和帶參數的函式。建議 4-8 年級的學生學習。
          description_short: 學生在完成課程 2 和課程 3 後，才可以進入課程 4。
          description_audience: 年齡 9-18
          lessons:
            Artist:
              name: 藝術家
            Artist Binary:
              name: 小藝術家 - 二進制（Binary）
            'Artist: For Loops':
              name: 小藝術家 - 計數迴圈（For Loops）
            'Artist: Functions':
              name: 畫家：函數
            'Artist: Functions with Parameters':
              name: 小藝術家 - 函式帶參數（Parameters）
            'Artist: Variables':
              name: 小藝術家 - 變數（Variables）
            'Bee: For Loops':
              name: 蜜蜂： 計數迴圈（For Loops）
            'Bee: Functions with Parameters':
              name: 蜜蜂：函式帶參數（Parameters）
            Extreme Challenge - Comprehensive:
              name: 終極挑戰：綜合應用
            Maze and Bee:
              name: 迷宮和蜜蜂
            'Play Lab: For Loops':
              name: Play Lab - 計數迴圈（For Loops）
            'Play Lab: Functions with Parameters':
              name: Play Lab - 函式帶參數
            'Play Lab: Variables':
              name: Play Lab - 變數（Variables）
            Super Challenge - For Loops:
              name: 超級挑戰 - 計數迴圈（For Loops）
            Super Challenge - Functions and Parameters:
              name: 超級挑戰 - 函式（Functions）與參數（Parameters）
            Super Challenge - Variables:
              name: 超級挑戰 - 變數（Variables）
            'Unplugged: Binary':
              name: 不插電活動 - 二進制
            'Unplugged: Envelope Variables':
              name: 不插電活動 - 信封裡的變數
            'Unplugged: For Loop Fun':
              name: 不插電活動 - 迴圈樂無窮
            'Unplugged: Madlibs':
              name: 不插電活動 - 文字接龍
            'Unplugged: Songwriting with Parameters':
              name: 不插電活動 - 用參數寫歌
            'Unplugged: Tangrams':
              name: 不插電活動 - 七巧版
          student_description: 課程 4 是設計給完成課程 2 和 3 的學生 。隨著難度增加，學生在解決關卡的問題時，也能夠學習結合多種概念。當完成本課程的時候，學生將創建能夠展示多種技能的程式，包括用於迴圈和帶參數的函式。建議 4-8 年級的學生學習。
        Course4pre:
          title: 課程 4 前備能力
          description: 對沒有參與課程 2 和課程 3 的學生作的概念簡述。
          description_short: 對沒有參與課程 2 和課程 3 的學生作的概念簡述。
          lessons:
            'Artist: Functions':
              name: 畫家：函數
            'Artist: Loops':
              name: 小藝術家 - 迴圈（Loops）
            'Artist: Nested Loops':
              name: 畫家： 嵌套的迴圈
            'Artist: Sequence':
              name: 小藝術家 - 序列（Sequence）
            'Bee: Conditionals':
              name: '蜜蜂: 判斷條件'
            'Bee: Debugging':
              name: 蜜蜂： 除錯（Debugging）
            'Bee: Nested Loops':
              name: 蜜蜂：巢狀迴圈（Nested Loops）
            'Farmer: While Loops':
              name: 農夫： ｢當｣迴圈　
            'Maze: Sequence':
              name: '迷宮: 序列'
          student_description: 對沒有參與課程 2 和課程 3 的學生作的概念簡述。
        usability:
          title: 可用性測試
          description: 課程 4 級別的一個選項，用來測試可行性。
          lessons:
            Binary:
              name: 二進制（Binary）
            For Loops:
              name: 計次迴圈（For Loops）
            Functions and Functions with Parameters:
              name: 函式與函式帶參數
            Intro:
              name: 簡介
            Variables:
              name: 變數
          student_description: 課程 4 級別的一個選項，用來測試可行性。
        algebra:
          title: 代數裡的計算機科學
          description: 以 Algebra 學習函式程式設計.
          description_short: 以 Algebra 學習函式程式設計.
          lessons:
            'Calc: Defining Variables':
              name: 定義變數和替換
            'Calc: Evaluation Blocks':
              name: 評估積木與算術運算式
            'Eval: Boolean Operators':
              name: 布林運算子
            'Eval: Conditionals':
              name: 條件判斷（Conditionals）
            'Eval: Defining Functions':
              name: 複合函式
            'Eval: Functions':
              name: 用設計流程解決單字問題（Word Problem）
            'Eval: Strings and Images':
              name: 字串和圖像
            'Eval: Writing Contracts':
              name: 編寫契約
            'Play Lab: Animation (Big Game)':
              name: The Big Game - 動畫（Animation）
            'Play Lab: Boolean (Big Game)':
              name: The Big Game - 布林值（Booleans）
            'Play Lab: Booleans':
              name: 蝙蝠山姆（Sam the Bat）
            'Play Lab: Collision Detection (Big Game)':
              name: The Big Game - 碰撞檢測（Collision Detection）
            'Play Lab: Defining Functions':
              name: 火箭高度
            'Play Lab: Defining Variables (Big Game)':
              name: The Big Game - 變數（Variables）
            'Unplugged: Booleans':
              name: 不插電活動：布林值和邏輯運算子
            'Unplugged: Collision Detection and the Distance Formula':
              name: 不插電活動：碰撞檢測和畢氏定理
            'Unplugged: Conditionals and Piecewise Functions':
              name: 不插電活動：條件判斷和分段函式
            'Unplugged: Contracts':
              name: 不插電活動：契約、定義域和範圍
            'Unplugged: The Design Recipe':
              name: 不插電活動 - 設計流程
            'Unplugged: Video Games and Coordinate Planes':
              name: 不插電活動 - 電視遊戲和座標平面
          student_description: 以 Algebra 學習函式程式設計.
        infinity:
          title: 迪士尼無限 Play Lab
          description: 用 Play Lab 創作一個由迪士尼角色主演的故事或遊戲。
          description_short: 用 Play Lab 創作一個由迪士尼角色主演的故事或遊戲。
          lessons:
            Infinity:
              name: 迪士尼無限 Play Lab
              description_student: 在這節課中，學習者將獲得電腦科學的入門經驗，並使用基本的積木代碼創建一個遊戲。
          student_description: 用 Play Lab 創作一個由迪士尼角色主演的故事或遊戲。
        algebrademo:
          title: 代數演示
          description: 一些關卡以演示在 Code.org 中 CS 代數的環境和編程語言
          description_short: 一些關卡以演示在 Code.org 中 CS 代數的環境和編程語言
          lessons:
            Defining Simple Functions:
              name: 函式簡單定義
            Defining Variables:
              name: 變數的定義
            Evaluation Blocks:
              name: 評估積木
            Making Pictures:
              name: 製作圖片
            The Design Recipe:
              name: 設計程序
          student_description: 一些關卡以演示在 Code.org 中 CS 代數的環境和編程語言
        K5PD:
          lessons:
            Computer Science Pedagogy:
              name: 計算機科學教育學
            Introduction to PD:
              name: PD 簡介
            K-5 Courses:
              name: K-5 課程
            Next Steps:
              name: 下一步
            'Programming Concept: Conditionals':
              name: 程式設計概念：條件判斷（Conditionals）
            'Programming Concept: Events':
              name: 程式設計概念：事件（Evnets）
            'Programming Concept: Functions':
              name: 程式設計概念：函式（Functions）
            'Programming Concept: Loops':
              name: 程式設計概念：迴圈（Loops）
            Reflection:
              name: 反思
            Teacher Dashboard:
              name: 教師控制台
            Unplugged lessons:
              name: 不插電的教學活動
            Writing computer programs:
              name: 編寫電腦程式
            new stage:
              name: 新的階段
        netsim:
          title: 網路模擬器
          description: 學習有關網際網路的工作原理。
          description_short: 學習有關網際網路的工作原理。
          lessons:
            Automatic DNS node:
              name: 自動 DNS 節點
            Broadcasting messages:
              name: 廣播訊息
            Internet Simulator Freeplay:
              name: 網路模擬器自由探索
            Manual DNS:
              name: 手動設定 DNS
            Overview and Setup Instructions:
              name: 概覽與操作說明
            Packets and Reliability:
              name: 封包和可靠度
            Peer to Peer - Sending Ascii:
              name: 點對點傳輸 - 發送 Ascii
            Peer to Peer - Sending Bits on a Shared Wire:
              name: 點對點傳輸 - 在共用線路發送位元值
            Peer to Peer - Sending Numbers:
              name: 點對點傳輸 - 發送數字
            Routers and addresses:
              name: 路由器和網路位址
          student_description: 學習有關網際網路的工作原理。
        pixelation:
          description: 以 bits 與 bytes 創造圖像
          description_short: 以 bits 與 bytes 創造圖像
          lessons:
            Black & White Pixelation Freeplay:
              name: 黑白像素化自由探索
            Black & White Pixelation Tutorial:
              name: 黑白像素化教程
            Color Pixelation Examples:
              name: 色彩像素化範例
            Color Pixelation Freeplay:
              name: 色彩像素化自由探索
            Color Pixelation Tutorial:
              name: 色彩像素化教程
          student_description: 以 bits 與 bytes 創造圖像
        20-hour:
          title: 計算機科學速成課程
          description: 這個 20 小時課程將介紹核心的計算機科學和編程概念。本課程是設計給年級 K-8 的學生在課堂中使用，不過對於任何年紀的人也是有趣的學習。
          description_short: 這個 20 小時課程中，其中的課程 2-4 包含了核心的計算機科學和編程概念。
          description_audience: 年齡 10-18
          lessons:
            Abstraction:
              name: 抽象概念
            Algorithms:
              name: 演算法
            Computational Thinking:
              name: 計算機式思維
            Conditionals:
              name: 條件判斷（Conditionals）
            Functions:
              name: 函式
            Graph Paper Programming:
              name: 方格紙編程
            Introduction to Computer Science:
              name: 計算機科學介紹
            Relay Programming:
              name: 接力編程
            Song Writing:
              name: 歌曲創作
            The Artist:
              name: 藝術家
            The Artist 2:
              name: 藝術家 2
            The Artist 3:
              name: 藝術家 3
            The Artist 4:
              name: 藝術家 4
            The Artist 5:
              name: 藝術家 5
            The Farmer:
              name: 農夫
            The Farmer 2:
              name: 農夫 2
            The Farmer 3:
              name: 農夫 3
            The Internet:
              name: 網際網路
            The Maze:
              name: 迷宮
            Wrap-up:
              name: 總結
          student_description: 這個 20 小時課程將介紹核心的計算機科學和編程概念。本課程是設計給年級 K-8 的學生在課堂中使用，不過對於任何年紀的人也是有趣的學習。
        edit-code:
          title: 編輯程式碼
          description: 編輯程式碼
          description_short: 編輯程式碼
          lessons:
            Applab:
              name: Applab
            Hoc2015 Blockly:
              name: Hoc2015 Blockly
            Play Lab:
              name: Play Lab
            The Artist:
              name: 藝術家
            The Maze:
              name: 迷宮
          student_description: 編輯程式碼
        events:
          title: 事件
          description: 事件
          description_short: 事件
          lessons:
            Bounce:
              name: 彈跳
            Calc:
              name: 計算
            Eval:
              name: Eval
            Studio:
              name: 工作室
          student_description: 事件
        flappy:
          title: 像素鳥程式
          description: 想要在 10 分鐘內寫個你自己的遊戲嗎？試試我們的像素鳥程式教程！
          description_short: 寫個你自己的像素鳥遊戲！
          lessons:
            Flappy Code:
              name: 像素鳥程式
          student_description: 想要在 10 分鐘內寫個你自己的遊戲嗎？試試我們的像素鳥程式教程！
        jigsaw:
          title: 拼圖
          description: 試試我們的拼圖教程。
          description_short: 試試我們的拼圖教程。
          lessons:
            Jigsaw:
              name: 拼圖
              description_student: 以點擊與拖放的方式完成謎題。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
          student_description: 試試我們的拼圖教程。
        step:
          title: 步進
          description: 步驟教程
          description_short: 步驟教程
          lessons:
            Step:
              name: 步進
          student_description: 步驟教程
        Hour of Code:
          title: 一小時玩程式 2013
          description: 跟著憤怒鳥、植物大戰殭屍的角色們一起進入計算機科學的世界吧！
          description_short: 和許多有趣的角色一塊兒學學計算機科學基礎！
          lessons:
            Hour of Code 2013:
              name: 一小時玩程式 2013
          student_description: 跟著憤怒鳥、植物大戰殭屍的角色們一起進入計算機科學的世界吧！
        CodeStudioPuzzleChallenge:
          description: 試試這些有趣的編碼拼圖。盡力 ！
          description_short: 挑戰自己 ！
          lessons:
            Puzzles:
              name: 所有關卡
          student_description: 試試這些有趣的編碼拼圖。盡力 ！
        Tutorial Video - Code Studio Puzzle Challenge:
          description: 試試這些有趣的編碼拼圖。盡力 ！
          description_short: 挑戰自己 ！
          lessons:
            Puzzles:
              name: 所有關卡
          student_description: 試試這些有趣的編碼拼圖。盡力 ！
        cspunit1:
          title: "（舊）計算機科學原理 單元 1 - 數位資訊"
          lessons:
            Binary Numbers:
              name: 二進位數
            Bytes and File Sizes:
              name: 位元組（Bytes）與檔案大小
            Encode a Complex Thing:
              name: 編碼體驗
            Encoding B&W Images:
              name: 黑白圖片的編碼
            Encoding Color Images:
              name: 彩色圖片的編碼
            Encoding Numbers in the Real World:
              name: 現實生活中的數字編碼
            Encoding and Sending Text:
              name: 文字的編碼和發送
            Lossy Compression and File Formats:
              name: 有損壓縮與文件格式
            Number Systems:
              name: 數字系統
            Personal Innovations:
              name: 個人創新
            Sending Binary Messages:
              name: 二進位訊息的發送
            Sending Binary Messages with the Internet Simulator:
              name: 用網路模擬器發送二進位訊息
            Sending Bits in the Real World:
              name: 在現實生活中傳送位元
            Sending Complex Messages:
              name: 傳送複合訊息
            Sending Formatted Text:
              name: 格式化文字的發送
            Sending Numbers:
              name: 數字的發送
            Text Compression:
              name: 文字壓縮
        algebraPD:
          title: 代數裡的計算機科學 PD
          description: 階段 1 線上介紹
          description_short: 階段 1 線上介紹
          lessons:
            Course Overview:
              name: 課程概覽
            Evaluation Blocks:
              name: 評估積木
            Introduction to PD:
              name: PD 簡介
            Preparing for in-person PD:
              name: 準備進行現場 PD
            Teacher Dashboard:
              name: 教師控制台
            Why Computer Science belongs in Algebra:
              name: 為什麼計算機科學屬於代數
          student_description: 階段 1 線上介紹
        algPDmiami:
          title: 代數裡的計算機科學 PD
          description: 通過函數式程式設計教代數
          description_short: 通過函數式程式設計教代數
          lessons:
            Booleans:
              name: 布林值（Booleans）
            Design Recipe Practice:
              name: 設計流程練習
            Evaluation Blocks:
              name: 評估積木
            Luigi's Pizza:
              name: 路易吉的披薩
            Rocket-Height:
              name: 火箭高度
            Sam the Bat:
              name: 蝙蝠山姆（Sam the Bat）
            Strings and Images:
              name: 字串和圖像
            Your Game - Animation:
              name: 你的遊戲 - 動畫
            Your Game - Booleans:
              name: 你的遊戲 - 布林值
            Your Game - Collision Detection:
              name: 你的遊戲 - 碰撞檢測
            Your Game - Player Movement:
              name: 你的遊戲 - 角色移動
          student_description: 通過函數式程式設計教代數
        text-compression:
          title: 文字壓縮
          lessons:
            Text Compression:
              name: 文字壓縮
              description_student: 在將來的某個時候，我們會達到傳送位元的物理速度上限。若我們想更快傳送大量資訊，就必須找出方法，以更少位元表示相同的資訊。因此，我們必須壓縮資料。
              description_teacher: 在將來的某個時候，我們會達到傳送位元的物理速度上限。若我們想更快傳送大量資訊，就必須找出方法，以更少位元表示相同的資訊。因此，我們必須 **壓縮** 資料。在本課堂中，學生會使用文字壓縮工具壓縮英語文字片段，方法是留意模式，並把符號替代為更大的文字模式。\\r
        CSPPD:
          title: 計算機科學原理專業發展
          description: 階段 1 CSP 線上介紹
          description_short: 階段 1 CSP 線上介紹
          lessons:
            Exploring CSP Instructional Materials:
              name: 探索 CSP 指導材料
            Growth Mindset:
              name: 增長思維
            Impact of Computer Science:
              name: 計算機科學的影響
            Introduction to PD:
              name: PD 簡介
            Preparing for in-person PD:
              name: 準備進行現場 PD
            Teaching Strategies:
              name: 教學策略
            What is CSP?:
              name: CSP 是什麼？
          student_description: 階段 1 CSP 線上介紹
        CSPLessonSamples:
          lessons:
            Lesson 14:
              name: 第 14 課
            Lesson 15:
              name: 第 15 課
        ECSPD:
          title: 計算機科學探索 PD
          description: 階段 1 線上介紹
          description_short: 階段 1 線上介紹
          lessons:
            Growth Mindset:
              name: 增長思維
            Impact of Computer Science:
              name: 計算機科學的影響
            Introduction to PD:
              name: PD 簡介
            Preparing for in-person PD:
              name: 準備進行現場 PD
            Teaching Strategies:
              name: 教學策略
            What is ECS?:
              name: ECS 是什麼？
          student_description: 階段 1 線上介紹
        sciencePD:
          title: Science PD 裡的計算機科學
          description: 階段 1 線上介紹
          description_short: 階段 1 線上介紹
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: 基於 Agent 的複雜適應系統建模
            Computational Thinking And The Framework For K-12 Science Education:
              name: 計算機式思維及為 K-12 科學教育設計的框架
            Dispositions and Classroom Culture:
              name: 規定與課堂文化
            Introduction to Complex Adaptive Systems:
              name: 複雜適應系統簡介
            Introduction to Computational Science:
              name: 電腦科學簡介
            Introduction to PD:
              name: PD 簡介
            Introduction to StarLogo Nova:
              name: StarLogo Nova簡介
            Post-Survey:
              name: 課後問卷調查
            The Tutorial:
              name: 教程
            Using Computer Models in Science:
              name: 在科學中使用的計算機模型
            Using Models in the Classroom:
              name: 在課堂上使用模型
            What to Expect:
              name: 有什麼期待
          student_description: 階段 1 線上介紹
        rbo-reference:
          lessons:
            reference:
              name: 参考
        Test Wednesday:
          lessons:
            PDK5 Intro:
              name: PDK5 介紹
        cspunit3:
          title: "（舊）計算機科學原理 單元 3 - 程式設計"
          lessons:
            APIs and Function Parameters:
              name: API 和函式參數
            Beyond Buttons Toward Apps:
              name: 超越按鈕，製作應用程式
            Canvas and Arrays in Apps:
              name: 應用程式中的畫布（Canvas）
            Compound Conditional Logic:
              name: 複合條件式邏輯
            Controlling Memory with Variables:
              name: 以變數（Variable）控制記憶體
            Creating Functions:
              name: 建立函式
            Creating functions with Parameters:
              name: 建立帶參數（Parameter）的函式
            Digital Assistant Project:
              name: 數位助理專案
            Event-Driven Programming and Debugging:
              name: 事件驅動的程式設計與除錯（Debugging）
            Events Unplugged:
              name: 事件不插電
            Functions and Top-Down Design:
              name: 函式與自上而下的設計
            Functions with Return Values:
              name: 帶回傳值的函式
            Image Scroller with Key Events:
              name: 圖片播放器的按鍵事件
            Introducing Design Mode:
              name: 設計模式簡介
            Introduction to Arrays:
              name: 陣列（Arrays）的介紹
            Introduction to Conditional Logic:
              name: 條件式邏輯簡介
            Introduction to Digital Assistants:
              name: 數位助理簡介
            Looping and Random Numbers:
              name: 迴圈與隨機數字
            Loops and Simulations:
              name: 迴圈與模擬
            Multi-screen Apps:
              name: 多螢幕應用程式
            Practice PT - Design a Digital Scene:
              name: PT 練習 - 設計數位場景
            'Practice PT: Create':
              name: PT 練習 - 創建
            Processing Arrays:
              name: 處理陣列
            The Need For Programming Languages:
              name: 程式語言的需要
            Understanding Program Flow and Logic:
              name: 瞭解程式流程與邏輯
            User Input and Strings:
              name: 使用者輸入與字串
            Using Simple Commands:
              name: 簡單指令的使用
            Using Variables in Apps:
              name: 在 App 中使用變數
            While Loops:
              name: 當…迴圈
            Creating Functions with Parameters:
              name: 建立帶參數（Parameter）的函式
        algebraPD3:
          title: 階段 3 PD
          lessons:
            Computer Science Pedagogy:
              name: 計算機科學教育學
            Course Overview:
              name: 課程概覽
            Evaluation Blocks:
              name: 評估積木
            Next Steps:
              name: 下一步
            Strings and Images:
              name: 字串和圖像
            Teacher Dashboard:
              name: 教師控制台
            The Big Game:
              name: The Big Game
            The Design Recipe:
              name: 設計程序
        ECSPD-NexTech:
          title: 計算機科學探索 PD
          description: 階段 1 線上介紹
          description_short: 階段 1 線上介紹
          logo_image: nextech\_logo.png
          lessons:
            Growth Mindset:
              name: 增長思維
            Impact of Computer Science:
              name: 計算機科學的影響
            Introduction to PD:
              name: PD 簡介
            Preparing for in-person PD:
              name: 準備進行現場 PD
            Teaching Strategies:
              name: 教學策略
            What is ECS?:
              name: ECS 是什麼？
          student_description: 階段 1 線上介紹
        ECSPD-iZone:
          title: 計算機科學探索 PD
          description: 階段 1 線上介紹
          description_short: 階段 1 線上介紹
          lessons:
            Growth Mindset:
              name: 增長思維
            Impact of Computer Science:
              name: 計算機科學的影響
            Introduction to PD:
              name: PD 簡介
            Preparing for in-person PD:
              name: 準備進行現場 PD
            Teaching Strategies:
              name: 教學策略
            What is ECS?:
              name: ECS 是什麼？
          student_description: 階段 1 線上介紹
        algebraPD-NexTech:
          title: 代數裡的計算機科學 PD
          description: 階段 1 線上介紹
          description_short: 階段 1 線上介紹
          logo_image: nextech\_logo.png
          lessons:
            Course Overview:
              name: 課程概覽
            Evaluation Blocks:
              name: 評估積木
            Introduction to PD:
              name: PD 簡介
            Preparing for in-person PD:
              name: 準備進行現場 PD
            Teacher Dashboard:
              name: 教師控制台
            Why Computer Science belongs in Algebra:
              name: 為什麼計算機科學屬於代數
          student_description: 階段 1 線上介紹
        algebraPD-iZone:
          title: 代數裡的計算機科學 PD
          description: 階段 1 線上介紹
          description_short: 階段 1 線上介紹
          lessons:
            Course Overview:
              name: 課程概覽
            Evaluation Blocks:
              name: 評估積木
            Introduction to PD:
              name: PD 簡介
            Preparing for in-person PD:
              name: 準備進行現場 PD
            Teacher Dashboard:
              name: 教師控制台
            Why Computer Science belongs in Algebra:
              name: 為什麼計算機科學屬於代數
          student_description: 階段 1 線上介紹
        sciencePD-NexTech:
          title: Science PD 裡的計算機科學
          description: 階段 1 線上介紹
          description_short: 階段 1 線上介紹
          logo_image: nextech\_logo.png
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: 基於 Agent 的複雜適應系統建模
            Computational Thinking And The Framework For K-12 Science Education:
              name: 計算機式思維及為 K-12 科學教育設計的框架
            Dispositions and Classroom Culture:
              name: 規定與課堂文化
            Introduction to Complex Adaptive Systems:
              name: 複雜適應系統簡介
            Introduction to Computational Science:
              name: 電腦科學簡介
            Introduction to PD:
              name: PD 簡介
            Introduction to StarLogo Nova:
              name: StarLogo Nova簡介
            Post-Survey:
              name: 課後問卷調查
            The Tutorial:
              name: 教程
            Using Computer Models in Science:
              name: 在科學中使用的計算機模型
            Using Models in the Classroom:
              name: 在課堂上使用模型
            What to Expect:
              name: 有什麼期待
          student_description: 階段 1 線上介紹
        sciencePD-iZone:
          title: Science PD 裡的計算機科學
          description: 階段 1 線上介紹
          description_short: 階段 1 線上介紹
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: 基於 Agent 的複雜適應系統建模
            Computational Thinking And The Framework For K-12 Science Education:
              name: 計算機式思維及為 K-12 科學教育設計的框架
            Dispositions and Classroom Culture:
              name: 規定與課堂文化
            Introduction to Complex Adaptive Systems:
              name: 複雜適應系統簡介
            Introduction to Computational Science:
              name: 電腦科學簡介
            Introduction to PD:
              name: PD 簡介
            Introduction to StarLogo Nova:
              name: StarLogo Nova簡介
            Post-Survey:
              name: 課後問卷調查
            The Tutorial:
              name: 教程
            Using Computer Models in Science:
              name: 在科學中使用的計算機模型
            Using Models in the Classroom:
              name: 在課堂上使用模型
            What to Expect:
              name: 有什麼期待
          student_description: 階段 1 線上介紹
        sciencePD2:
          title: 科學中的 CS：第 2 部份
          description: 階段 2 暑假的線上混合式學習
          description_short: 階段 2 暑假的線上混合式學習
          lessons:
            Creating Breeds in Starlogo Nova:
              name: 在 Starlogo Nova 中建立品種
            Epidemic Model Extensions:
              name: 流行病模型延伸工具
            Review StarLogo Nova:
              name: 檢閱 StarLogo Nova
            Revisiting Agent Movement:
              name: 重溫 Agent 移動
            Thinking Ahead to Implementation:
              name: 預先進行實作構思
            Welcome!:
              name: 歡迎！
            Wrap-Up:
              name: 總結
          student_description: 階段 2 暑假的線上混合式學習
        sciencePD3:
          title: 科學中的 CS：第 3 部份
          description: 學年支援 - 學期 1
          description_short: 學年支援 - 學期 1
          lessons:
            Decode and Share:
              name: 解碼和分享
            Mystery Model:
              name: 神秘模型
            Welcome Back!:
              name: 歡迎回來！
          student_description: 學年支援 - 學期 1
        Testing:
          title: 測試階段
          description: 測試階段
          description_short: 測試階段
          lessons:
            Testing:
              name: 測試階段
          student_description: 測試階段
        cspunit2:
          title: "（舊）計算機科學原理 單元 2 - 網際網路"
          lessons:
            Algorithms Detour - Hard Problems TSP:
              name: 挑戰 - 旅行銷售員問題
            Algorithms Detour - How Routers Learn:
              name: 路由器的學習
            Algorithms Detour - Minimum Spanning Tree:
              name: 演算法 - 最小生成樹
            Algorithms Detour - Shortest Path:
              name: 演算法 - 最短路徑
            Alice and Bob and Asymmetric Keys:
              name: 非對稱秘鑰 - 杯子和豆子
            Cracking the Code:
              name: 解析程式碼
            DNS in the Real World:
              name: 現實生活中的 DNS
            Encryption Algorithms:
              name: 金鑰和密碼
            HTTP and Abstraction:
              name: HTTP 與網際網路上的抽象化
            Invent an Addressing Protocol:
              name: 發明一個定址協定
            One Way Functions - Ice Cream Vans:
              name: 單向函式 - WiFi 熱點問題
            Packets and Making a Reliable Internet:
              name: 封包與建立可靠的網際網路
            Practice PT - Cybersecurity Innovations:
              name: PT 練習 - 網路安全上的創新
            Practice PT - The Internet and Society:
              name: PT 練習 - 網際網路與社會
            Public Key Crypto:
              name: 公開金鑰加密
            Routers and Redundancy:
              name: 路由器與備援
            Tell Me a Secret - Encrypting Text:
              name: 加密的需求
            The Internet:
              name: 串聯你我的網際網路
            The Need for Addressing:
              name: 定址的需要
            The Need for DNS:
              name: DNS 的需求
        algebraPD2a:
          title: 代數裡的計算機科學 PD
          description: 階段 2 暑假的線上混合式學習
          description_short: 階段 2 暑假的線上混合式學習
          lessons:
            Big Game - Animation:
              name: Big Game - 動畫（Animation）
            Big Game - Booleans:
              name: Big Game - 布林值（Booleans）
            Big Game - Collision Detection:
              name: Big Game - 碰撞檢測（Collision Detection）
            Big Game - Player Movement:
              name: Big Game - 角色動作
            Big Game - Variables:
              name: Big Game - 變數（Variables）
            Booleans:
              name: 布林值（Booleans）
            Defining Variables:
              name: 變數的定義
            Evaluation Blocks:
              name: 評估積木
            Free Play:
              name: 自由發揮
            Luigi's Pizza:
              name: 路易吉的披薩
            Rocket-Height:
              name: 火箭高度
            Sam the Bat:
              name: 蝙蝠山姆（Sam the Bat）
            Strings and Images:
              name: 字串和圖像
            The Design Recipe:
              name: 設計程序
            Big GAme - Collision Detection:
              name: Big Game - 碰撞檢測（Collision Detection）
          student_description: 階段 2 暑假的線上混合式學習
        allthethings:
          title: 所有的東西！
          lessons:
            Anonymous student survey:
              name: 匿名學生問卷調查
            Anonymous student survey 2:
              name: 匿名學生問卷調查 2
            AppLab:
              name: AppLab
            Artist:
              name: 藝術家
            Bee:
              name: 蜜蜂
            Bounce:
              name: 彈跳
            CSinA:
              name: CSinA
            Farmer:
              name: 農夫
            Flappy:
              name: 像素鳥
            Free Response:
              name: 自由回應
            Gamelab:
              name: Gamelab
            Jigsaw:
              name: 拼圖
            Long assessment:
              name: 仔細評估
            Markdown Details:
              name: Markdown 細節
            Match:
              name: 配對
            Maze:
              name: 迷宮
            Minecraft:
              name: Minecraft
            Multi:
              name: 多個
            Multi2:
              name: 雙人
            Netsim:
              name: 籃網
            Odometer:
              name: 呈程表
            Online PD:
              name: 線上 PD
            PlayLab:
              name: PlayLab
            Public Key Cryptography:
              name: 公開金鑰加密
            Rich long assessment:
              name: 詳盡評估
            Sample PLC Assessment:
              name: PLC 評估範例
            Star wars:
              name: 星際大戰
            Studio:
              name: 工作室
            Swapped Levels:
              name: 跳越的關卡
            Text Compression:
              name: 文字壓縮
            TextMatch:
              name: 配上文字
            Web Lab:
              name: Web Lab
            Multi page assessment:
              name: 多頁評估
            Single page assessment:
              name: 單頁評估
            Standalone video:
              name: 獨立影片
            Curriculum Reference:
              name: 課程參考
            Sprite Lab:
              name: Sprite Lab
            Dance Lab:
              name: Dance Lab
            Mini Rubric:
              name: 迷你指標
            Pluralsight Test:
              name: Pluralsight 測試
            Externals Optionally Displayed as Unplugged:
              name: 外部課程，可選擇顯示為不插電
            Bubble Choice:
              name: 可選關卡
            Contained Levels:
              name: 包含關卡
            ML Fish:
              name: ML 魚
            Java Lab:
              name: Java 實驗室
        algebraPD2b:
          title: 代數裡的計算機科學 PD
          description: 階段 2 暑假的線上混合式學習
          description_short: 階段 2 暑假的線上混合式學習
          lessons:
            Best Practices for Teaching Computer Science:
              name: 教授計算機科學的最佳實踐
            Booleans:
              name: 布林值（Booleans）
            Course Overview:
              name: 課程概覽
            Defining Functions:
              name: 定義函式
            Defining Variables:
              name: 變數的定義
            'Eval: Conditionals':
              name: Eval：條件式
            Evaluation Blocks:
              name: 評估積木
            Next Steps:
              name: 下一步
            Rocket-Height:
              name: 火箭高度
            Strings and Images:
              name: 字串和圖像
            Teacher Dashboard:
              name: 教師控制台
            Writing Contracts:
              name: 編寫契約
          student_description: 階段 2 暑假的線上混合式學習
        cspfacilitator:
          title: '計算機科學原理輔導員工作坊 '
          lessons:
            App Lab:
              name: App Lab
            Broadcast Lesson:
              name: 廣播課程
            Internet Simulator:
              name: 網路模擬器
            Pixelation Widget:
              name: 像素化小工具
            Text Compression Lesson:
              name: 文字壓縮教程
            Text Compression Widget:
              name: 文字壓縮小工具
            Welcome!:
              name: 歡迎！
        K5-OnlinePD:
          title: 計算機科學基礎的教授
          lessons:
            Best Practices for Teaching Computer Science:
              name: 教授計算機科學的最佳實踐
            Computer Science Fundamentals:
              name: 計算機科學基礎
            Getting Started:
              name: 新手上路
            Looking Ahead:
              name: 展望未來
            'Mastering the Basics: Conditionals':
              name: 掌握基本知識：條件判斷（Conditionals）
            'Mastering the Basics: Events':
              name: 掌握基本知識：事件（Evnets）
            'Mastering the Basics: Functions':
              name: 掌握基本知識：函式（Functions）
            'Mastering the Basics: Loops':
              name: 掌握基本知識：迴圈（Loops）
            'Mastering the Basics: Sequencing':
              name: 掌握基本知識：序列（Sequencing）
            Next Steps:
              name: 下一步
            Planning:
              name: 計畫
        ECSPD2:
          description: 階段 2 暑假的線上混合式學習
          description_short: 階段 2 暑假的線上混合式學習
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: 單元 1：第 10 日 - 用數據說故事
            Unit 1, Day 11-14 Data Modeling and Design:
              name: 單元 1：第 11-14 日 - 模組化和設計
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: 單元 1：第 15-16 日 - 電腦程式和遵循方向
            Unit 1, Day 17-19 What Is Intelligence?:
              name: 單元 1：第 17-19 日 - 什麼是智慧
            Unit 1, Days 3-4 Buying a Computer:
              name: 單元 1：第 3-4 日 - 買一台電腦
            Unit 1, Days 5-7 Searching and Web 2:
              name: 單元 1：第 5-7 日 - 搜尋和網路（二）
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: 單元 1：第 8-9 日 - 電腦和通訊影響
            Welcome!:
              name: 歡迎！
            Wrap-up:
              name: 總結
            Unit 1, Days 1-2 What Is a Computer?:
              name: 單元 1：第 1-2 日 - 什麼是電腦？
          student_description: 階段 2 暑假的線上混合式學習
        equityPD:
          lessons:
            Equity PD:
              name: 公平 PD
            Necessary Background:
              name: 前備知識
        algebraPD2:
          description: 學年支援
          description_short: 學年支援
          lessons:
            Lesson Prep:
              name: 教學準備
            Teacher Dashboard:
              name: 教師控制台
            Teaching with Puzzles:
              name: 透過關卡教學
            Teaching with the Design Recipe:
              name: 使用設計流程來教學
            The Design Recipe:
              name: 設計程序
            Welcome!:
              name: 歡迎！
          student_description: 學年支援
        sciencePD2b:
          title: PD 階段 2b Science 裡的計算機科學
          description: 階段 2 暑假的線上混合式學習
          description_short: 階段 2 暑假的線上混合式學習
          lessons:
            Advanced StarLogo Nova:
              name: 進階 StarLogo Nova
            Remixing Phases 1 and 2:
              name: 混合第1、2階段
            Review StarLogo Nova:
              name: 檢閱 StarLogo Nova
            Reviewing the Modules:
              name: 查看模組
            Thinking Ahead to Implementation:
              name: 預先進行實作構思
            Welcome!:
              name: 歡迎！
            Wrap-Up:
              name: 總結
          student_description: 階段 2 暑假的線上混合式學習
        equity-pd:
          lessons:
            Necessary Background:
              name: 前備知識
        science-PD2:
          title: PD 階段 2b Science 裡的計算機科學
          description: 階段 2 暑假的線上混合式學習
          description_short: 階段 2 暑假的線上混合式學習
          lessons:
            Advanced StarLogo Nova:
              name: 進階 StarLogo Nova
            Remixing Phases 1 and 2:
              name: 混合第1、2階段
            Review StarLogo Nova:
              name: 檢閱 StarLogo Nova
            Reviewing the Modules:
              name: 查看模組
            Thinking Ahead to Implementation:
              name: 預先進行實作構思
            Welcome!:
              name: 歡迎！
            Wrap-Up:
              name: 總結
          student_description: 階段 2 暑假的線上混合式學習
        Equity-OnlinePD:
          lessons:
            Creating Equitable Learning Environments:
              name: 營造公平的學習環境
            Getting Started:
              name: 新手上路
            Introduction to Equity:
              name: 公平（Equity）簡介
            Next Steps:
              name: 下一步
        sciencePD2b-iZone:
          title: PD 階段 2b Science 裡的計算機科學
          description: 階段 2 暑假的線上混合式學習
          description_short: 階段 2 暑假的線上混合式學習
          lessons:
            Advanced StarLogo Nova:
              name: 進階 StarLogo Nova
            Remixing Phases 1 and 2:
              name: 混合第1、2階段
            Review StarLogo Nova:
              name: 檢閱 StarLogo Nova
            Reviewing the Modules:
              name: 查看模組
            Thinking Ahead to Implementation:
              name: 預先進行實作構思
            Welcome!:
              name: 歡迎！
            Wrap-Up:
              name: 總結
          student_description: 階段 2 暑假的線上混合式學習
        ECSPD2-iZone:
          description: 階段 2 暑假的線上混合式學習
          description_short: 階段 2 暑假的線上混合式學習
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: 單元 1：第 10 日 - 用數據說故事
            Unit 1, Day 11-14 Data Modeling and Design:
              name: 單元 1：第 11-14 日 - 模組化和設計
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: 單元 1：第 15-16 日 - 電腦程式和遵循方向
            Unit 1, Day 17-19 What Is Intelligence?:
              name: 單元 1：第 17-19 日 - 什麼是智慧
            Unit 1, Days 3-4 Buying a Computer:
              name: 單元 1：第 3-4 日 - 買一台電腦
            Unit 1, Days 5-7 Searching and Web 2:
              name: 單元 1：第 5-7 日 - 搜尋和網路（二）
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: 單元 1：第 8-9 日 - 電腦和通訊影響
            Welcome!:
              name: 歡迎！
            Wrap-up:
              name: 總結
            Unit 1, Days 1-2 What Is a Computer?:
              name: 單元 1：第 1-2 日 - 什麼是電腦？
          student_description: 階段 2 暑假的線上混合式學習
        ECSPD2-NexTech:
          description: 階段 2 暑假的線上混合式學習
          description_short: 階段 2 暑假的線上混合式學習
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: 單元 1：第 10 日 - 用數據說故事
            Unit 1, Day 11-14 Data Modeling and Design:
              name: 單元 1：第 11-14 日 - 模組化和設計
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: 單元 1：第 15-16 日 - 電腦程式和遵循方向
            Unit 1, Day 17-19 What Is Intelligence?:
              name: 單元 1：第 17-19 日 - 什麼是智慧
            Unit 1, Days 3-4 Buying a Computer:
              name: 單元 1：第 3-4 日 - 買一台電腦
            Unit 1, Days 5-7 Searching and Web 2:
              name: 單元 1：第 5-7 日 - 搜尋和網路（二）
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: 單元 1：第 8-9 日 - 電腦和通訊影響
            Welcome!:
              name: 歡迎！
            Wrap-up:
              name: 總結
            Unit 1, Days 1-2 What Is a Computer?:
              name: 單元 1：第 1-2 日 - 什麼是電腦？
          student_description: 階段 2 暑假的線上混合式學習
        CSPPD2:
          title: 計算機科學原理專業發展：Blended Summer Study
          description: 為期五天的 8 小時的線上專業訓練幫助教師在新的學期準備課程。
          lessons:
            Getting Started:
              name: 新手上路
            Lesson Chunk 1- Sending Binary Messages:
              name: 課程主題 1 - 發送二進制訊息
            Lesson Chunk 2- Encoding and Sending Numbers:
              name: 課程主題 2 - 編碼和發送數字
            Lesson Chunk 3- Encoding and Sending Text:
              name: 課程主題 3 - 編碼和發送文字
            Lesson Chunk 4- Compressing and Storing Information:
              name: 課程主題 4 - 壓縮和儲存資訊
            Practice PT:
              name: PT 練習
            Welcome to the Course!:
              name: 歡迎來到這個課程！
            Wrap Up and Next Steps:
              name: 總結與下一步
          student_description: 為期五天的 8 小時的線上專業訓練幫助教師在新的學期準備課程。
        asUnplugged:
          description_audience: 年齡 6-13
          lessons:
            Binary Bracelets:
              name: 二進制手環
            Building a Foundation:
              name: 打好基礎
            Getting Loopy:
              name: 學習迴圈
            Graph Paper Programming:
              name: 方格紙編程
            Happy Maps:
              name: 快樂地圖
            Move it, Move it:
              name: 移動它，移動它
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
            Songwriting:
              name: 歌曲創作
            The Big Event:
              name: 大事件
        afterschool1:
          title: 課後活動 1
          description_audience: 年齡 7-13
        vigenere:
          description: 運用維吉尼亞密碼（Vigenere Cipher）小工具，瞭解如何使用維吉尼亞密碼加密與解密訊息。
          description_short: 運用維吉尼亞密碼（Vigenere Cipher）小工具，瞭解如何使用維吉尼亞密碼加密與解密訊息。
          lessons:
            Vigenere:
              name: 維吉尼亞密碼
          student_description: 運用維吉尼亞密碼（Vigenere Cipher）小工具，瞭解如何使用維吉尼亞密碼加密與解密訊息。
        algebraPD3a:
          title: 代數裡的計算機科學 PD
          lessons:
            Lesson Prep:
              name: 教學準備
            Updates - The Big Game and Projects:
              name: 更新 - The Big Game 和專案
            Updates - The Design Recipe:
              name: 更新 - 設計流程
            Updates - Tweaks and Polish:
              name: 更新 - 調整與修飾
        sciencePD3_pre1:
          description_short: 階段 3 學年發展前備 1
          lessons:
            Prep With Your Modules:
              name: 以你的模組做準備
            The TLO:
              name: The TLO
            Welcome Back!:
              name: 歡迎回來！
        frequency_analysis:
          description_short: 運用頻率分析小工具，分析文字內容中使用字母的頻率預與期頻率相比的差異。破解凱撒密碼與代換密碼。
          lessons:
            Frequency Analysis:
              name: 頻率分析
        ECSPD3-Unit2:
          description_short: 單元 2 線上 PD
          lessons:
            Close & Next Steps:
              name: 關閉 & 下一步
            Getting Started:
              name: 新手上路
            Intro to Unit 2:
              name: 單元 2 簡介
            Lesson Overviews:
              name: 教學內容概述
            Teaching Strategies:
              name: 教學策略
            Unit 2 Challenge:
              name: 單元 2 挑戰
        ECSPD3-Unit3:
          description: 學年發展
          description_short: 學年發展
          lessons:
            Close & Next Steps:
              name: 關閉 & 下一步
            Getting Started:
              name: 新手上路
            Intro to Unit 3:
              name: 單元 3 簡介
            Teaching Strategies:
              name: 教學策略
            Unit 3 Challenge:
              name: 單元 3 挑戰
            Unit 3 Day-by-Day:
              name: 單元 3 每日活動
          student_description: 學年發展
        ECSPD3-Unit4:
          description: 學年發展
          description_short: 學年發展
          lessons:
            Close & Next Steps:
              name: 關閉 & 下一步
            Getting Started:
              name: 新手上路
            Intro to Unit 4:
              name: 單元 4 簡介
            Teaching Strategies:
              name: 教學策略
            Unit 4 Challenge:
              name: 單元 4 挑戰
            Unit 4 Day-by-Day:
              name: 單元 4 每日活動
          student_description: 學年發展
        ECSPD3-Unit5:
          description: 學年發展
          description_short: 學年發展
          lessons:
            Complete the Challenge:
              name: 完成這個挑戰
            Getting Started:
              name: 新手上路
            Introduction to the Unit 5 Challenge:
              name: 單元 5 挑戰簡介
            Share out and Submit:
              name: 分發並提交
            Unit 5 Overview:
              name: 單元 5 概覽
            Unit 5 lessons:
              name: 單元 5 教學內容
          student_description: 學年發展
        ECSPD3-Unit6:
          description: 學年發展
          description_short: 學年發展
          lessons:
            Alternative Ideas for Unit 6:
              name: 單元 6 其他構思
            Getting Started:
              name: 新手上路
            Share out and Submit:
              name: 分發並提交
            Unit 6 Challenge:
              name: 單元 6 挑戰
            Unit 6 Overview:
              name: 單元 6 概覽
            Unit 6 lessons:
              name: 單元 6 教學內容
          student_description: 學年發展
        cspunit4draft:
          title: 計算機科學原理 單元 4 - 數據
          description_short: 數據
          lessons:
            Check Your Assumptions:
              name: 驗證你的假設
            Cleaning Data:
              name: 數據的清理
            Compiling Data:
              name: 數據的彙編
            Creating Javascript Objects:
              name: Javascript 物件的創建
            Creating Summary Tables:
              name: 建立摘要表
            Data, Security, and Privacy:
              name: 數據、安全性與隱私
            Designing Data Collection:
              name: 設計數據收集
            Designing for Your User:
              name: 為你的使用者而設計
            Discover a Data Story:
              name: 發現數據故事
            Finding Trends with Visualizations:
              name: 以視覺化尋找趨勢
            Good and Bad Data Visualizations:
              name: 資料視覺化的良好與不良示例
            How is Data Collected?:
              name: 數據如何被收集？
            Import, Export, and Visualize Data:
              name: 數據的匯入、匯出及視覺化
            Interpreting Data Visualizations:
              name: 詮釋資料視覺化
            Making Data Visualizations:
              name: 製作視覺化資料
            Permanent Data Storage:
              name: 永久資料儲存
            Permanent Data Storage and Clicker Completion:
              name: 永久資料儲存與點擊完成
            'Practice Create PT: Data App':
              name: 練習建立 PT：資料應用程式
            Privacy in a Digital World:
              name: 數位世界的隱私
            Privacy vs Utility:
              name: 隱私與效用
            Rapid Research - Data Innovations:
              name: 快速研究 - 資料創新
            Reading Records:
              name: 紀錄的讀取
            Search Terms:
              name: 搜尋字詞
            Unique IDs, Delete and Update Records:
              name: 唯一的 ID、刪除並更新紀錄
            Using Data in the Real World:
              name: 在現實生活中的資料
            Web Requests and APIs:
              name: Web 請求與 API
            What Data Can Tell Us:
              name: 資料可告訴我們甚麼
            Why Make Apps?:
              name: 為什麼要製作 App？
        ScienceP3OLPT2:
          description: 階段 3 學年發展
          description_short: 階段 3 學年發展
          lessons:
            Earth Science Challenges:
              name: 地球科學挑戰
            Life Science Challenges:
              name: 生命科學挑戰
            Physical Science Challenges:
              name: 物理科學挑戰
            Thinking About Implementation:
              name: 思考如何實作
            Welcome!:
              name: 歡迎！
            Wrap-Up:
              name: 總結
        algebraPD3b:
          title: 代數裡的計算機科學 PD
          lessons:
            Close and Next Steps:
              name: 關閉 & 下一步
            Getting Started:
              name: 新手上路
            Teaching Support - Lessons 1-3:
              name: 教學支援：1 - 3 課
            Teaching Support - Lessons 13-16:
              name: 教學支援：13 - 16 課
            Teaching Support - Lessons 17-20:
              name: 教學支援：17 - 20 課
            Teaching Support - Lessons 4-7:
              name: 教學支援：4 - 7 課
            Teaching Support - Lessons 8-12:
              name: 教學支援：8 - 12 課
        CSPPD3-Unit2:
          title: 計算機科學原理：單元 2 專業發展
          lessons:
            Challenge Overview:
              name: 挑戰概述
            Complete the Challenge:
              name: 完成這個挑戰
            Getting Started:
              name: 新手上路
            Share out and Submit:
              name: 分發並提交
            Unit 2 Overview:
              name: 單元 2 概覽
        duino:
          lessons:
            Basic Circuits:
              name: 基本電路
            Blinky Lights:
              name: 閃燈
            JunkBot:
              name: JunkBot
            Making Music:
              name: 製作音樂
        Special Fun:
          description_audience: 年齡 10-18
          lessons:
            Halloween 2015:
              name: 2015 年萬聖節
        SpecialSeries:
          description_audience: 年齡 10-18
          lessons:
            Spring 2016:
              name: 2016 年春季
            Halloween 2015:
              name: 2015 年萬聖節
        iceage:
          title: 冰原歷險記 Play Lab
          description: 用冰原歷險記的 Play Lab 來創作一個故事或遊戲!！
          description_short: 用冰原歷險記的 Play Lab 來創作一個故事或遊戲!！
          lessons:
            Ice Age Play Lab:
              name: 冰原歷險記 Play Lab
              description_student: 在這節課中，學習者將獲得電腦科學的入門經驗，並使用基本的積木代碼創建一個遊戲。
          student_description: 用冰原歷險記的 Play Lab 來創作一個故事或遊戲!！
        CSPPD3-Unit3:
          title: 計算機科學原理：單元 3 專業發展
          lessons:
            Challenge Overview:
              name: 挑戰概述
            Chunk 1 Overview:
              name: 主題 1 概覽
            Chunk 2 Overview:
              name: 主題 2 概覽
            Chunk 3 Overview:
              name: 主題 3 概覽
            Chunk 4 Overview:
              name: 主題 4 概覽
            Chunk 5 Overview:
              name: 主題 5 概覽
            Complete the Challenge:
              name: 完成這個挑戰
            Getting Started:
              name: 新手上路
            Practice Performance Task:
              name: 性能任務的練習
            Share out and Submit:
              name: 分發並提交
            Unit 3 Overview:
              name: 單元 5 概覽
        cspunit3temp:
          title: "（舊）計算機科學原理 單元 3 - 程式設計"
          lessons:
            Canvas and Arrays in Apps:
              name: 應用程式中的畫布（Canvas）
            Functions with Return Values:
              name: 帶回傳值的函式
            Image Scroller with Key Events:
              name: 圖片播放器的按鍵事件
            Introduction to Arrays:
              name: 陣列（Arrays）的介紹
            Loops and Simulations:
              name: 迴圈與模擬
            'Practice PT: Create':
              name: PT 練習 - 創建
            Processing Arrays:
              name: 處理陣列
            While Loops:
              name: 當…迴圈
        CSP-Unit3-Support:
          title: 計算機科學原理：單元 3 專業發展
          lessons:
            Chunk 1 Overview:
              name: 主題 1 概覽
            Chunk 2 Overview:
              name: 主題 2 概覽
            Chunk 3 Overview:
              name: 主題 3 概覽
            Chunk 4 Overview:
              name: 主題 4 概覽
            Chunk 5 Overview:
              name: 主題 5 概覽
            Practice Performance Task:
              name: 性能任務的練習
            Unit 3 Overview:
              name: 單元 5 概覽
        gumball:
          title: 陶阿甘的 Play Lab
          description: 用陶阿甘的 Play Lab 來創作一個故事或遊戲！
          description_short: 用陶阿甘的 Play Lab 來創作一個故事或遊戲！
          lessons:
            Gumball Play Lab:
              name: 陶阿甘的 Play Lab
          student_description: 用陶阿甘的 Play Lab 來創作一個故事或遊戲！
        starwars:
          description: 學習用程式控制機器人，並創造你自己的星際大戰遊戲…在那很遠很遠的銀河系…
          description_short: 學習用程式控制機器人，並創造你自己的星際大戰遊戲…在那很遠很遠的銀河系…
          lessons:
            Hour of Code 2015:
              name: 一小時玩程式 2015
              description_student: 在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂提供2個版本。
              description_teacher: |-
                在這節課中，所有年齡的學習者在一個安全的支持性環境中獲得程式設計和電腦科學的入門經驗。這節課有兩個版本。這個版本同時使用了拖放模組和JavaScript。學生需要能夠在鍵盤上打字。對於使用電腦的年齡較大的學生來說，學習JavaScript可能會很有趣，也會帶來額外的挑戰。 如果你的課堂上有一些已經學過一些程式設計的學生，那麼這個版本的教程也很有用。建議11歲以上兒童使用。

                還推薦一個[Blockly version](https://studio.code.org/s/starwarsblocks/lessons/1/levels/1)，可供使用無鍵盤的移動設備的學生、年輕學生和國際學生使用。
          student_description: 學習用程式控制機器人，並創造你自己的星際大戰遊戲…在那很遠很遠的銀河系…
        starwarsblocks:
          description: 學習用程式控制機器人，並創造你自己的星際大戰遊戲…在那很遠很遠的銀河系…
          description_short: 學習用程式控制機器人，並創造你自己的星際大戰遊戲…在那很遠很遠的銀河系…
          lessons:
            Hour of Code 2015:
              description_student: 在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂提供2個版本。
          student_description: 學習用程式控制機器人，並創造你自己的星際大戰遊戲…在那很遠很遠的銀河系…
        mc:
          title: 一小時玩 Minecraft
          description: 使用程式積木，幫助 Steve 或 Alex 在 Minecraft 裡完成探險。
          description_short: 透過程式碼探索 Minecraft 世界。
          lessons:
            Hour of Code 2015:
              name: 一小時玩程式 2015
              description_student: 在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。
              description_teacher: 在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。
          student_description: 使用程式積木，幫助 Steve 或 Alex 在 Minecraft 裡完成探險。
          name: mc
        oceans:
          title: 在海洋中使用的 AI
          description: 瞭解 AI（人工智慧）和機器學習，可以怎樣用來解決全球問題。
          description_short: 瞭解 AI（人工智慧）和機器學習，可以怎樣用來解決全球問題。
          lessons:
            Oceans:
              name: 海洋
              description_student: 教程摘要：學生首先會把物件分類為「fish」（魚）或「not fish」（不是魚），從而嘗試清除海洋中的垃圾。然後，學生將需要擴充訓練資料集，加入屬於海洋的其他海洋生物。在活動的第 2 部分，學生會自行選擇標籤套用於隨機產生的魚中。這些訓練資料會在機器學習模型中使用，然後學習模型便應能夠自行標籤新的圖像。
              description_teacher: 在本課中，所有年齡段的學習者都能在安全、支持性的環境中獲得編碼和電腦科學的入門體驗。首先，學生將物件分類為“魚”或“非魚”，試圖清除海洋中的垃圾。然後，學生將需要擴展他們的訓練資料集，以覆蓋水中的其他海洋生物。在活動的第二部分，學生將選擇他們自己的標籤以應用于隨機生成的魚的圖像。該訓練資料用於能夠自行標記新圖像的機器學習模型。
          student_description: 瞭解 AI（人工智慧）和機器學習，可以怎樣用來解決全球問題。
        CSPPD3-Unit3-pt2:
          title: 計算機科學原理：單元 3 專業發展挑戰
          lessons:
            Challenge Overview:
              name: 挑戰概述
            Complete the Challenge:
              name: 完成這個挑戰
            Share out and Submit:
              name: 分發並提交
        ScienceP3OLPT3:
          description: 階段 3 學年發展
          description_short: 階段 3 學年發展
          lessons:
            "(optional) Refresh your connection to Complex Adaptive Systems":
              name: "（非必填）重新連線到 Complex Adaptive Systems"
            Assessing Computer Models:
              name: 評估計算機模型
            Welcome!:
              name: 歡迎！
            Wrap-Up:
              name: 總結
          student_description: 階段 3 學年發展
        cspunit5:
          title: "（舊）計算機科學原理 單元 5 - 效能任務"
          lessons:
            Create PT:
              name: 建立 PT
            Create PT Prep:
              name: 建立 PT 準備
            Explore PT:
              name: 探索 PT
            Explore PT Prep:
              name: 探索 PT 準備
        cspunit4:
          title: "（舊）計算機科學原理 單元 4 - 數據"
          lessons:
            Check Your Assumptions:
              name: 驗證你的假設
            Cleaning Data:
              name: 數據的清理
            Creating Summary Tables:
              name: 建立摘要表
            Discover a Data Story:
              name: 發現數據故事
            Finding Trends with Visualizations:
              name: 以視覺化尋找趨勢
            Good and Bad Data Visualizations:
              name: 資料視覺化的良好與不良示例
            Identifying People with Data:
              name: 以資料識別人物身分
            Intro to Data:
              name: 資料簡介
            Making Data Visualizations:
              name: 製作視覺化資料
            Practice PT - Propose an Innovation:
              name: PT 練習 - 提出創新計畫
            Practice PT - Tell a Data Story:
              name: PT 練習 - 訴說關於資料的故事
            Rapid Research - Data Innovations:
              name: 快速研究 - 資料創新
            The Cost of Free:
              name: 免費的代價
            What is Big Data?:
              name: 大數據是什麼？
        CSPPD3-Unit4:
          title: 計算機科學原理：單元 4 專業發展
          lessons:
            Challenge Overview:
              name: 挑戰概述
            Chapter 1 Overview:
              name: 第 1 章概覽
            Chapter 2 Overview:
              name: 第 2 章概覽
            Complete the Challenge:
              name: 完成這個挑戰
            Getting Started:
              name: 新手上路
            Practice Performance Tasks:
              name: 性能任務的練習
            Share out and Submit:
              name: 分發並提交
            Unit 4 Overview:
              name: 單元 4 概覽
        cspunit6draft:
          lessons:
            Creating Javascript Objects:
              name: Javascript 物件的創建
            Deleting Records:
              name: 刪除紀錄
            Final Project:
              name: 期末專案
            Importing and Exporting Data:
              name: 匯入和匯出資料
            Permanent Data Storage:
              name: 永久資料儲存
            Reading Records:
              name: 紀錄的讀取
            Sample Apps:
              name: 應用程式範例
            Updating Records:
              name: 更新紀錄
            Visualizing Data:
              name: 資料視覺化
        CSPPD3-Unit5:
          title: 計算機科學原理：單元 5 專業發展
          lessons:
            Challenge Overview:
              name: 挑戰概述
            Complete the Challenge:
              name: 完成這個挑戰
            Create PT Breakdown:
              name: 建立 PT 細分
            Explore PT Breakdown:
              name: 探索 PT 細分
            Getting Started:
              name: 新手上路
            Share out and Submit:
              name: 分發並提交
            Unit 5 Overview:
              name: 單元 5 概覽
        cspunit6:
          description_short: 學習在 App Lab 應用程式中收集與使用資料。
          lessons:
            Creating Javascript Objects:
              name: Javascript 物件的創建
            Deleting Records:
              name: 刪除紀錄
            Final Project:
              name: 期末專案
            Importing and Exporting Data:
              name: 匯入和匯出資料
            Permanent Data Storage:
              name: 永久資料儲存
            Reading Records:
              name: 紀錄的讀取
            Sample Apps:
              name: 應用程式範例
            Updating Records:
              name: 更新紀錄
            Visualizing Data:
              name: 資料視覺化
        AlgebraA:
          title: 代數裡的計算機科學：課程 A
          description: 以 Algebra 學習函式程式設計
          description_short: 以 Algebra 學習函式程式設計
          lessons:
            'Calc: Defining Variables':
              name: 賦值 - 變數的定義
            'Calc: Evaluation Blocks':
              name: Calc：評估積木
            'Eval: Defining Functions':
              name: 賦值 - 函式的定義
            'Eval: Functions':
              name: 賦值 - 函式（Functions）
            'Eval: Strings and Images':
              name: 賦值 - 字串和圖像
            'Eval: Writing Contracts':
              name: 賦值 - 契約（Contracts）
            'Play Lab: Defining Functions':
              name: Play Lab - 函式的定義
            'Unplugged: Contracts':
              name: 不插電 - 契約（Contracts）
            'Unplugged: Fast Functions':
              name: 不插電活動：快速函式
            'Unplugged: The Design Recipe':
              name: 不插電活動 - 設計流程
          student_description: 以 Algebra 學習函式程式設計
        AlgebraB:
          description: 以 Algebra 學習函式程式設計
          description_short: 以 Algebra 學習函式程式設計
          lessons:
            'Eval: Boolean Operators':
              name: 賦值 - 布林值運算子
            'Eval: Conditionals':
              name: Eval：條件式
            'Play Lab: Animation (Big Game)':
              name: Play Lab - Big Game 動畫
            'Play Lab: Boolean (Big Game)':
              name: Play Lab - Big Game 布林值
            'Play Lab: Booleans':
              name: Play Lab - 布林值（Booleans）
            'Play Lab: Collision Detection (Big Game)':
              name: Play Lab - Big Game 碰撞檢測（Collision Detection）
            'Play Lab: Defining Variables (Big Game)':
              name: Play Lab - Big Game 變數的定義
            'Unplugged: Booleans':
              name: 不插電 - 布林值（Booleans）
            'Unplugged: Collision Detection and the Distance Formula':
              name: 不插電 - 碰撞檢測和距離公式
            'Unplugged: Conditionals and Piecewise Functions':
              name: 不插電活動：條件判斷和分段函式
            'Unplugged: Video Games and Coordinate Planes':
              name: 不插電活動 - 電視遊戲和座標平面
          student_description: 以 Algebra 學習函式程式設計
        gamelab-hackathon:
          description: 在 Game Lab 裡把東西試驗出來的地方
          lessons:
            Middle_School_Hackathon:
              name: Middle_School_Hackathon
          student_description: 在 Game Lab 裡把東西試驗出來的地方
        algebraPD1:
          description: 通過函數式程式設計教代數
          description_short: 階段 1 線上介紹
          lessons:
            Course Overview:
              name: 課程概覽
            Evaluation Blocks:
              name: 評估積木
            Introduction to PD:
              name: PD 簡介
            Preparing for in-person PD:
              name: 準備進行現場 PD
            Teacher Dashboard:
              name: 教師控制台
            Why Computer Science belongs in Algebra:
              name: 為什麼計算機科學屬於代數
          student_description: 通過函數式程式設計教代數
        algebraPD3c:
          title: 代數裡的計算機科學 PD
          lessons:
            Getting Started:
              name: 新手上路
            Planning For the Future:
              name: 未來的規劃
            Sharing Student Work:
              name: 學生作品分享
        csp1-2017:
          title: CSP 單元 1 - 網際網路 ('17-'18)
          description: 本單元本旨在探索各項技術挑戰與問題，原因是我們有需要在電腦中表示數位資訊，並把資訊在人和運算裝置間來回傳輸。然後，本單元會探索網際網路的結構與設計，以及相關設定決定的意義所在。
          description_short: 瞭解把資訊以位元來表示的各種挑戰，以及怎樣移動這些位元。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csp1_1:
              display_name: 第 1 章：表示及傳輸資訊
            csp1_2:
              display_name: 第 2 章：研發互聯網
          lessons:
            Binary Numbers:
              name: 二進位數
            CS Principles Pre-survey:
              name: 計算機科學原理課前問卷調查
            Encoding and Sending Formatted Text:
              name: 將編碼並傳送格式化文字
            HTTP and Abstraction:
              name: HTTP 與抽象化
            Number Systems:
              name: 數字系統
            Packets and Making a Reliable Internet:
              name: 封包與建立可靠的網際網路
            Personal Innovations:
              name: 個人創新
            Practice PT - The Internet and Society:
              name: PT 練習 - 網際網路與社會
            Routers and Redundancy:
              name: 路由器與備援
            Sending Binary Messages:
              name: 二進位訊息的發送
            Sending Binary Messages with the Internet Simulator:
              name: 用網路模擬器發送二進位訊息
            Sending Numbers:
              name: 數字的發送
            The Internet:
              name: 網際網路
            The Need for Addressing:
              name: 定址的需要
            The Need for DNS:
              name: DNS 的需求
            Unit 1 Chapter 1 Assessment:
              name: 單元 1 第 1 節 評量
            Unit 1 Chapter 2 Assessment:
              name: 單元 1 第 2 節 評量
            CSP Student Post Survey Staging:
              name: CSP 學生課後問卷調查集結
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
            CSP Student Post-Course Survey:
              name: CSP 學生課後問卷調查
            Post-Course Survey:
              name: 課後調查
          student_description: 本單元本旨在探索各項技術挑戰與問題，原因是我們有需要在電腦中表示數位資訊，並把資訊在人和運算裝置間來回傳輸。然後，本單元會探索網際網路的結構與設計，以及相關設定決定的意義所在。
        csp2-2017:
          title: CSP 單元 2 - 數位資訊 ('17-'18)
          description: 本單元會更深入地探討加密、表示與操控數位資訊的方法。能夠以數位方式操控資料、將資料視覺化並找出模式、趨勢與可能存在的意義，是電腦科學家每天都會做的重要實用技巧。瞭解資料來自哪裡、能夠直覺地知道可從中學習或擷取甚麼，以及能使用運算工具操控並傳達資料，是單元中注意的首要技巧。
          description_short: 瞭解如何以運算與視覺化的方式，表示與操控更複雜的數位資訊。
          lesson_groups:
            csp2_1:
              display_name: 第 3 章：編碼及壓縮複雜資訊
            csp2_2:
              display_name: 第 2 章：數據操作和可視化
            cspSurvey:
              display_name: 問卷
          lessons:
            Bytes and File Sizes:
              name: 位元組（Bytes）與檔案大小
            Check Your Assumptions:
              name: 驗證你的假設
            Cleaning Data:
              name: 數據的清理
            Creating Summary Tables:
              name: 建立摘要表
            Discover a Data Story:
              name: 發現數據故事
            Encode a Complex Thing:
              name: 將複雜的東西編碼
            Encoding B&W Images:
              name: 黑白圖片的編碼
            Encoding Color Images:
              name: 彩色圖片的編碼
            Finding Trends with Visualizations:
              name: 以視覺化尋找趨勢
            Good and Bad Data Visualizations:
              name: 資料視覺化的良好與不良示例
            Intro to Data:
              name: 數據的介紹
            Lossy Compression and File Formats:
              name: 有損壓縮與文件格式
            Making Data Visualizations:
              name: 製作視覺化資料
            Practice PT - Tell a Data Story:
              name: PT 練習 - 訴說關於資料的故事
            Text Compression:
              name: 文字壓縮
            Unit 2 Chapter 1 Assessment:
              name: 單元 2 第 1 節 評量
            Unit 2 Chapter 2 Assessment:
              name: 單元 2 第 2 節 評量
            CSP Student Post Survey Staging:
              name: CSP 學生課後問卷調查集結
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
            CSP Student Post-Course Survey:
              name: CSP 學生課後問卷調查
            Practice PT - Encode an Experience:
              name: PT 練習 - 把你的體驗編碼
            Post-Course Survey:
              name: 課後調查
          student_description: 本單元會更深入地探討加密、表示與操控數位資訊的方法。能夠以數位方式操控資料、將資料視覺化並找出模式、趨勢與可能存在的意義，是電腦科學家每天都會做的重要實用技巧。瞭解資料來自哪裡、能夠直覺地知道可從中學習或擷取甚麼，以及能使用運算工具操控並傳達資料，是單元中注意的首要技巧。
        csp3-2017:
          title: CSP 單元 3 - 程式設計簡介 ('17-'18)
          description_short: 以自上而下的設計方式，使用經典小海龜繪圖來學習 JavaScript 程式設計基礎。
          lesson_groups:
            csp3_1:
              display_name: 第 1 章：程式語言及演算法
            cspAssessment:
              display_name: 章節測驗
            cspSurvey:
              display_name: 問卷
          lessons:
            APIs and Function Parameters:
              name: API 和函式參數
            Creating Functions:
              name: 建立函式
            Creating functions with Parameters:
              name: 建立帶參數（Parameter）的函式
            Creativity in Algorithms:
              name: 演算法中的創意
            Functions and Top-Down Design:
              name: 函式與自上而下的設計
            Looping and Random Numbers:
              name: 迴圈與隨機數字
            Practice PT - Design a Digital Scene:
              name: PT 練習 - 設計數位場景
            The Need For Programming Languages:
              name: 程式語言的需要
            The Need for Algorithms:
              name: 演算法的需要
            Using Simple Commands:
              name: 簡單指令的使用
            Unit 3 Chapter 1 Assessment:
              name: 單元 3 第 1 章 評估
            'Anonymous student survey: Taking the AP exam':
              name: 匿名學生問卷調查：接受 AP 考試
            CSP Student Post Survey Staging:
              name: CSP 學生課後問卷調查集結
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
            CSP Student Post-Course Survey:
              name: CSP 學生課後問卷調查
            Creating Functions with Parameters:
              name: 建立帶參數（Parameter）的函式
            CSP End-of-Semester Mid-course survey:
              name: CSP 學期結束課程中期問卷調查
            CSP Mid-course survey:
              name: CSP 課程中期問卷調查
            Please complete the CSP Mid-course survey!:
              name: 請完成 CSP 課程中期問卷調查！
            Post-Course Survey:
              name: 課後調查
        csp4-2017:
          title: CSP 單元 4 - 大數據與隱私 ('17-'18)
          description_short: 探索我們居住的這個資料豐富的世界，並瞭解資料可怎樣影響公共政策、個人隱私、安全、法律與道德。
          lesson_groups:
            csp4_1:
              display_name: 第 1 章：大數據及加密的世界
            cspAssessment:
              display_name: 章節測驗
            cspSurvey:
              display_name: 問卷
          lessons:
            Alice and Bob and Asymmetric Keys:
              name: 愛麗絲與鮑伯和非對稱金鑰
            Cracking the Code:
              name: 解析程式碼
            Encryption with Keys and Passwords:
              name: 使用金鑰和密碼加密
            Identifying People with Data:
              name: 以資料識別人物身分
            Practice PT - Cybersecurity Innovations:
              name: PT 練習 - 網路安全上的創新
            Practice PT - Propose an Innovation:
              name: PT 練習 - 提出創新計畫
            Public Key Crypto:
              name: 公開金鑰加密
            Rapid Research - Data Innovations:
              name: 快速研究 - 資料創新
            Simple Encryption:
              name: 簡單加密
            The Cost of Free:
              name: 免費的代價
            What is Big Data?:
              name: 大數據是什麼？
            Rapid Research - Cybercrime:
              name: 快速研究 - 網路犯罪
            Practice PT - Big Data and Security Dilemmas:
              name: PT 練習 - 大數據與安全困境
            Unit 4 Chapter 1 Assessment:
              name: 單元 4 第 1 章 評估
            CSP Student Post Survey Staging:
              name: CSP 學生課後問卷調查集結
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
            CSP Student Post-Course Survey:
              name: CSP 學生課後問卷調查
            Post-Course Survey:
              name: 課後調查
            Student Post-Course Survey:
              name: 課後問卷調查
        csp5-2017:
          title: CSP 單元 5 - 製作應用程式 ('17-'18)
          description: 本單元繼續介紹電腦運算的基礎概念，從而能夠製作內容豐富的互動應用程式。本課程使用 JavaScript 做為程式語言，並以 App Lab 做為程式設計環境來製作應用程式，但這些課堂中學到的概念，適用於所有程式語言和工具。
          description_short: 透過使用 JavaScript 製作豐富、互動的應用程式，繼續學習更多計算機編程的基礎概念 。
          lesson_groups:
            csp5_1:
              display_name: 第 1 章：事件驅動的程式設計
            csp5_2:
              display_name: 第 2 章：資料結構程式設計
            cspSurvey:
              display_name: 問卷
          lessons:
            Beyond Buttons Toward Apps:
              name: 超越按鈕，製作應用程式
            Canvas and Arrays in Apps:
              name: 應用程式中的畫布（Canvas）
            Compound Conditional Logic:
              name: 複合條件式邏輯
            Controlling Memory with Variables:
              name: 以變數（Variable）控制記憶體
            Digital Assistant Project:
              name: 數位助理專案
            Event-Driven Programming and Debugging:
              name: 事件驅動的程式設計與除錯（Debugging）
            Events Unplugged:
              name: 事件不插電
            Functions with Return Values:
              name: 帶回傳值的函式
            Image Scroller with Key Events:
              name: 圖片播放器的按鍵事件
            Introducing Design Mode:
              name: 設計模式簡介
            Introduction to Arrays:
              name: 陣列（Arrays）的介紹
            Introduction to Conditional Logic:
              name: 條件式邏輯簡介
            Introduction to Digital Assistants:
              name: 數位助理簡介
            Loops and Simulations:
              name: 迴圈與模擬
            Multi-screen Apps:
              name: 多螢幕應用程式
            'Practice PT: Create':
              name: PT 練習 - 創建
            Processing Arrays:
              name: 處理陣列
            Understanding Program Flow and Logic:
              name: 瞭解程式流程與邏輯
            User Input and Strings:
              name: 使用者輸入與字串
            Using Variables in Apps:
              name: 在 App 中使用變數
            While Loops:
              name: 當…迴圈
            Edited lessons ABOVE this line:
              name: 已編輯這條線上方的課堂
            Buttons and Events:
              name: 按鈕與事件
            Make Your Own Multi-Screen App:
              name: 製作屬於你自己的多螢幕應用程式
            Unit 5 Assessment 1:
              name: 單元 5 評量 1
            Unit 5 Assessment 2:
              name: 單元 5 評量 2
            "'If' Statements Unplugged":
              name: "「如果」陳述式不插電教程"
            '"If" Statements Unplugged':
              name: "「如果」陳述式不插電教程"
            Getting started with If Statements:
              name: 開始使用如果（If）陳述句
            Unit 3 Chapter 1 Assessment 3:
              name: 單元 3 第 1 節 評量 3
            If statements:
              name: 如果（If）陳述句
            Unit 3 Assessment 3:
              name: 單元 3 評估 3
            Unit 3 Assessment 4:
              name: 單元 3 評估 4
            If-else-if and Conditional Logic:
              name: 如果-否則-如果（If-else-if）和條件式邏輯
            'Building an App: Color Sleuth':
              name: 製作應用程式：顏色偵探
            Possibly use later:
              name: 可能在之後使用
            Unit 5 Assessment 3:
              name: 單元 5 評量 3
            Unit 5 Assessment 4:
              name: 單元 5 評量 4
            Boolean Expressions and "If" Statements:
              name: 布林值（Boolean）運算式與「如果」（If）陳述句
            '"if-else-if" and Conditional Logic':
              name: "「如果…否則」和條件判斷式"
            'Building an App: Multi-Screen App':
              name: 製作應用程式：多螢幕應用程式
            'Building an App: Clicker Game':
              name: 製作應用程式：點擊遊戲
            'Building an App: Image Scroller':
              name: 創建一個 APP：圖像播放器
            'Building an App: Canvas Painter':
              name: 創建一個 App - 帆布畫家
            Unit 5 Assessment 5 - Practice AP questions:
              name: 單元 5 評量 5 - 實踐 AP 問題
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: 單元 5 評估 5 - AP 虛擬碼練習問題
            CSP Student Post Survey Staging:
              name: CSP 學生課後問卷調查集結
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
            CSP Student Post-Course Survey:
              name: CSP 學生課後問卷調查
            Multi-Screen Apps:
              name: 多螢幕應用程式
            '"if" Statements Unplugged':
              name: "「如果」陳述式不插電教程"
            Boolean Expressions and "if" Statements:
              name: 布林值（Boolean）運算式與「如果」（If）陳述句
            Post-Course Survey:
              name: 課後調查
          student_description: 本單元繼續介紹電腦運算的基礎概念，從而能夠製作內容豐富的互動應用程式。本課程使用 JavaScript 做為程式語言，並以 App Lab 做為程式設計環境來製作應用程式，但這些課堂中學到的概念，適用於所有程式語言和工具。
        csp6:
          lessons:
            Create PT:
              name: 建立 PT
            Create PT Prep:
              name: 建立 PT 準備
            Explore PT:
              name: 探索 PT
            Explore PT Prep:
              name: 探索 PT 準備
            Create PT Prep - Reviewing the Task:
              name: 建立 PT 準備 - 檢閱任務
            Create PT Prep - Making a Plan:
              name: 建立 PT 準備 - 制定計畫
            Create PT - Complete the Task:
              name: 建立 PT - 完成任務
            Explore PT Prep - Reviewing the Task:
              name: 探索 PT 準備 - 檢閱任務
            Explore PT - Making a Plan:
              name: 探索 PT - 制定計畫
            Explore PT - Complete the Task:
              name: 探索 PT - 完成任務
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: 技術設定 - 你的 AP 數位作品與其他工具
            CSP Student Post Survey Staging:
              name: CSP 學生課後問卷調查集結
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
            CSP Student Post-Course Survey:
              name: CSP 學生課後問卷調查
        CSDU3-Draft:
          title: " TEMP CSD 單元 3 - 互動遊戲與動畫"
          description_short: 程式設計
          lessons:
            Booleans and Conditionals:
              name: 布林值和條件判斷
            Collision Detection:
              name: 碰撞檢測
            Collisions:
              name: 碰撞
            Complex Conditionals:
              name: 複合條件判斷
            Complex Sprite Movement:
              name: 複合角色動作
            Conditionals and Keyboard Input:
              name: 條件判斷與鍵盤輸入
            Draw Loop and Randomization:
              name: 繪圖迴圈和隨機取值
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
            'Project: Interactive Card':
              name: 專案：互動式卡片
            Sprite Movement Methods:
              name: 角色移動方法
            Sprites and Images:
              name: 角色和圖像
            Sprites and Properties:
              name: 角色與屬性
            Variables Unplugged:
              name: 變數（不插電）
            Variables and Animation:
              name: 變數與動畫
            Functions:
              name: 函式
            Platform Jumper:
              name: 平台跳躍遊戲
            Defender:
              name: 守護者
            'Project: Build a Game':
              name: 專案：創建一個遊戲
            Velocity:
              name: 速度
            The Game Design Process:
              name: 遊戲設計流程
            Using the Game Design Process:
              name: 使用遊戲設計流程
        2016_sciencePD_phase1:
          title: 科學中的 CS：第 1 部份
          description: 合作夥伴 Project GUTS
          description_short: 合作夥伴 Project GUTS
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: 基於 Agent 的複雜適應系統建模
            Computational Thinking And The Framework For K-12 Science Education:
              name: 計算機式思維及為 K-12 科學教育設計的框架
            Dispositions and Classroom Culture:
              name: 規定與課堂文化
            Introduction to Complex Adaptive Systems:
              name: 複雜適應系統簡介
            Introduction to Computational Science:
              name: 電腦科學簡介
            Introduction to PD:
              name: PD 簡介
            Introduction to StarLogo Nova:
              name: StarLogo Nova簡介
            Post-Survey:
              name: 課後問卷調查
            The Tutorial:
              name: 教程
            Using Computer Models in Science:
              name: 在科學中使用的計算機模型
            Using Models in the Classroom:
              name: 在課堂上使用模型
            What to Expect:
              name: 有什麼期待
          student_description: 合作夥伴 Project GUTS
        TEMP CSD Unit 3:
          title: " TEMP CSD 單元 3 - 互動遊戲與動畫"
          description_short: 程式設計
          lessons:
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
        CSF_Secret_Sample:
          description_audience: 年齡 8-18
          lessons:
            Sample Stage:
              name: 舞台範例
        ECSPD1:
          description_short: 階段 1 線上介紹
          lessons:
            Background and Context:
              name: 背景與情境
            'Classroom and Workshop Style ':
              name: 課堂與工作坊風格
            ECS Curriculum:
              name: ECS 課程
            Welcome to Phase 1!:
              name: 歡迎來到階段 1
            Wrap Up:
              name: 總結
            Classroom and workshop style:
              name: 課堂與工作坊風格
            'Classroom and workshop style ':
              name: 課堂與工作坊風格
        algebraFacilitator:
          description: 通過函數式程式設計教代數
          description_short: 通過函數式程式設計教代數
          lessons:
            Evaluation Blocks:
              name: 評估積木
            Introduction to PD:
              name: PD 簡介
            Teacher Dashboard:
              name: 教師控制台
            Why Computer Science belongs in Algebra:
              name: 為什麼計算機科學屬於代數
          student_description: 通過函數式程式設計教代數
        sciencePD1:
          title: 科學中的 CS：第 1 部份
          description: 合作夥伴 Project GUTS
          description_short: 階段 1 線上介紹
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: 基於 Agent 的複雜適應系統建模
            Computational Thinking And The Framework For K-12 Science Education:
              name: 計算機式思維及為 K-12 科學教育設計的框架
            Dispositions and Classroom Culture:
              name: 規定與課堂文化
            Introduction to Complex Adaptive Systems:
              name: 複雜適應系統簡介
            Introduction to Computational Science:
              name: 電腦科學簡介
            Introduction to PD:
              name: PD 簡介
            Introduction to StarLogo Nova:
              name: StarLogo Nova簡介
            Post-Survey:
              name: 課後問卷調查
            The Tutorial:
              name: 教程
            Using Computer Models in Science:
              name: 在科學中使用的計算機模型
            Using Models in the Classroom:
              name: 在課堂上使用模型
            What to Expect:
              name: 有什麼期待
          student_description: 合作夥伴 Project GUTS
        cspoptional:
          title: 計算機科學原理選修單元
          description: 這裡列出了計算機科學原理課程中可選修的單元和內容
          description_short: 可選
          lessons:
            Algorithms Detour - How Routers Learn:
              name: 演算法 - 路由器如何學習
            Algorithms Detour - Minimum Spanning Tree:
              name: 演算法 - 最小生成樹
            Algorithms Detour - Shortest Path:
              name: 演算法 - 最短路徑
            Unit 1 - Encoding Numbers in the Real World:
              name: 單元 1 - 現實生活中的數字編碼
            Unit 1 - Sending Bits in the Real World:
              name: 單元 1 - 現實生活的位元發送
            Unit 1 - Algorithms Detour - Minimum Spanning Tree:
              name: 單元 1 - 演算法 - 最小生成樹
            Unit 1 - Algorithms Detour - Shortest Path:
              name: 單元 1 - 演算法 - 最短路徑
            Unit 1 - How Routers Learn:
              name: 單元 1 - 路由器的學習
            Unit 4 - Hard Problems - The Traveling Salesperson Problem:
              name: 單元 4 - 挑戰 - 旅行銷售員問題
            Unit 4 - One-Way Functions - The WiFi Hotspot Problem:
              name: 單元 4 - 單向函式 - WiFi 熱點問題
          student_description: 這裡列出了計算機科學原理課程中可選修的單元和內容
        cspunit1-support:
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
            practice:
              display_name: 老師的做法
          lessons:
            Chapter Overviews:
              name: 章節概覽
            Encoding and Sending Numbers:
              name: 傳送編碼和傳送數字
            Intro to the Unit:
              name: 單位簡介
            Running a Constructive Classroom:
              name: 進行建設性的課堂
            Sending Binary Messages:
              name: 二進位訊息的發送
            Strategies for Student Writing:
              name: 學生編寫策略
            Supporting Peer Learning:
              name: 支持同伴學習
            'Tool Talk: Intro to Netsim':
              name: 工具討論：Netsim 簡介
        test-teaching-ap-cs-unit-1:
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
            practice:
              display_name: 老師的做法
          lessons:
            test Unit 1 content module Alpha:
              name: 測試單元 1 內容模組 Alpha
            test Unit 1 content module Bravo:
              name: 測試單元 1 內容模組 Bravo
            test Unit 1 content module Charlie:
              name: 測試單元 1 內容模組 Charlie
            test Unit 1 practice module Delta:
              name: 測試單元 1 練習模組 Delta
            test Unit 1 practice module Echo:
              name: 測試單元 1 練習模組 Echo
            test Unit 1 practice module Foxtrot:
              name: 測試單元 1 練習模組 Foxtrot
            test Unit 1 required reading:
              name: 測試單元 1 需要讀取
        allthehiddenthings:
          title: 所有隱藏的東西！
          lessons:
            Contained Levels:
              name: 包含關卡
            Game Lab:
              name: Game Lab
        cspunit1-support-test:
          lessons:
            Unit 1 Overview:
              name: 單元 1 概覽
        cspunit1-tools:
          lessons:
            netsim:
              name: 籃網
        csp-facilitators:
          title: CSP 工具概覽
          description: 計算機科學原理課程的工具集成。這裡提供了我們在整個課程上使用到的工具概覽。
          description_short: 計算機科學原理導論 - 給新的輔導員
          lessons:
            Introduction to Events:
              name: 事件（Evnets）的介紹
            Introduction to Text Compression:
              name: 文字壓縮介紹
          student_description: 計算機科學原理課程的工具集成。這裡提供了我們在整個課程上使用到的工具概覽。
        cspassessment:
          title: "[Deprecated] 計算機科學原理總結評量"
          lessons:
            CS Principles Culminating Assessment:
              name: 計算機科學原理最終評估
            CSP Student Post Survey Staging:
              name: CSP 學生課後問卷調查集結
            CSP Longitudinal Contact Request:
              name: CSP 縱貫研究聯絡請求
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
            "[Deprecated - teacher cannot see results] CSP Culminating Assessment":
              name: "[已過時 - 教師無法看到結果] 電腦科學原理最終評估"
            'NOTE: Deprecated - teacher cannot see results. CSP Culminating Assessment':
              name: 注意：已過時 - 教師無法看到結果。電腦科學原理最終評估
            'NOTE: Deprecated. Teacher cannot see results. CSP Culminating Assessment':
              name: 注意：已過時 - 教師無法看到結果。電腦科學原理最終評估
            RQB Questions test:
              name: RQB 問題測試
        cspexam1-mWU7ilDYM9:
          title: 計算機科學原理最終評估 - 第 1 部分
          description_short: 這個多項選擇評估所包含的問題，函括電腦科學的 7 大概念。這是共有兩部分的考試第 1 部分，共 50 條問題。
          lessons:
            CS Principles Culminating Assessment Part 1:
              name: 計算機科學原理最終評估 第 1 部分
        cspexam2-AKwgAh1ac5:
          title: 計算機科學原理最終評估 - 第 2 部分
          description_short: 這個多項選擇評估所包含的問題，函括電腦科學的 7 大概念。這是共有兩部分的考試第 2 部分，共 50 條問題。
          lessons:
            CS Principles Culminating Assessment Part 2:
              name: 計算機科學原理最終評估 第 2 部分
        CSDU4-Draft:
          title: " TEMP CSD 單元 4 - 設計流程"
          lessons:
            Adding Functionality (optional):
              name: 新增功能（可選）
            Design Mode:
              name: 設計模式
            Making it Interactive:
              name: 使它互動
            Analysis of Design:
              name: 設計分析
            Understanding Your User:
              name: 瞭解您的使用者
            Discovering Users:
              name: 發現用戶
            UCD Micro Activity:
              name: UCD 微型活動
            Designing for Social Impact:
              name: 以設計影響社會
            Conducting User-Centered Interviews:
              name: 以使用者為中心採訪
            Analyzing Interviews:
              name: 訪談中分析
            Re-designing a Space:
              name: 重新設計一個空間
            Presenting Your Design:
              name: 展示您的設計
            Designing Apps for Good:
              name: 設計良好的應用程式
            Market Research:
              name: 市場研究
            User Research:
              name: 用戶研究
            Low Fidelity Prototyping:
              name: 低擬真化原型
            Preparing for Prototype Testing:
              name: 為原型測試做準備
            Prototype Testing:
              name: 原型測試
            Preparing for App Testing:
              name: 為應用程式測試做準備
            App Testing:
              name: 應用程式測試
            Planning for Improvements:
              name: 制定改善計畫
            Improving and Iterating:
              name: 改善和迭代
            App Presentation Prep:
              name: 應用程式簡報準備
            App Presentation:
              name: 應用程式簡報
        CSDU1-Draft:
          title: " TEMP CSD 單元 1"
          description_short: 問題解決
          lessons:
            Exploring Apps:
              name: 探索應用程式
            Processing Information:
              name: 處理資訊
        CSDU2-Draft:
          title: " TEMP CSD 單元 2"
          description_short: Web 開發
          lessons:
            Clean Code and Debugging:
              name: 乾淨代碼和偵錯調試
            Describing Webpages:
              name: 網頁的描述
            Designing Code for Computers:
              name: 為電腦設計程式碼
            Digital Footprint:
              name: 數位足跡
            Images on the Web:
              name: 網站上的圖像
            'Personal Website: Finalizing Site':
              name: 個人網站：完成站台
            Quality Websites:
              name: 有品質的網站
            Text on the Web:
              name: 站台上的文本
            Website Design:
              name: 網站設計
            Intellectual Property:
              name: 知識產權
            Introduction to Styling with CSS:
              name: 以 CSS 修改樣式簡介
            'Personal Website: Connecting Pages':
              name: 個人網站：連結多個頁面
            Classes and External Style Sheets:
              name: 類別與外部樣式表
            Box Model and Page Layout:
              name: 盒模型和頁面版型
            'Personal Website: Midway Check':
              name: 個人網站：中途檢查
            Publishing a Website:
              name: 網站的發佈
            Sources and Search Engines:
              name: 來源和搜尋引擎
            Introduction to HTML:
              name: HTML 的介紹
            Headers and Lists:
              name: Header 和清單
            Designing Web Pages:
              name: 設計網頁
            Holding:
              name: 按住
            Describing Web pages:
              name: 網頁描述
            Multi-Page Websites:
              name: 多頁式網站
            Classes:
              name: 類別
            External Style Sheets:
              name: 外部樣式表
            Usability and Accessibility:
              name: 易用性與無障礙
            Peer Review:
              name: 同儕審查
        CSDU5-Draft:
          title: " TEMP CSD 單元 5"
          description_short: 數據
        CSDU6-Draft:
          title: " TEMP CSD 單元 6 "
        CSF_Secret_Sample_Story:
          description_audience: 年齡 8-18+
          lessons:
            Sample Stage:
              name: 舞台範例
        MikeTest:
          description_audience: 年齡 8-98
          lessons:
            Artist Functions:
              name: 小藝術家 - 函式（Functions）
            Sample Stage:
              name: 舞台範例
            The same thing with named levels:
              name: 同一個東西，關卡已命名
            You are a coding STAR:
              name: 你正在編寫 STAR
        artistExemplar:
          description_audience: 年齡 8-18
        teachercon:
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
            practice:
              display_name: 老師的做法
          lessons:
            Balancing Teachers and Tools:
              name: 在教師與工具間取得平衡
            Discovery Learning:
              name: 發現學習
            Group Work and Peer Learning:
              name: 小組工作與同伴學習
            Introduction to Teachercon:
              name: Teachercon簡介
            Lesson 1,10:
              name: 課堂 1.10：路由器與備援
            Lesson 1,11:
              name: 課堂 1.11：封包與建立可靠的網際網路
            Lesson 1,4:
              name: 課堂 1.4：數字系統（圓形、三角形、正方形）
            Lesson 1,6:
              name: 課堂 1.6：傳送數字
            Lesson 1,9:
              name: 課堂 1.9：網際網路定址（戰艦）
            Lesson 2,10:
              name: 課堂 2.10：資料視覺化的良好與不良示例
            Lesson 2,2:
              name: '教程 2.2: 文字壓縮'
            Lesson 2,3:
              name: 課堂 2.3：黑白像素化
            Measuring Student Learning:
              name: 衡量學生的學習
        kinderTest:
          lessons:
            'Bee: Conditionals':
              name: '蜜蜂: 判斷條件'
            Kindergarten Stage 1:
              name: 幼稚園第一階段
        gradeKinder:
          description_audience: 年齡 5-18
          lessons:
            Being Safe Online:
              name: 安全上網
            Debugging:
              name: 除錯
            Events:
              name: 事件
            Events Unplugged:
              name: 事件不插電
            Fuzz Fiesta:
              name: 測試派對
            'Jigsaw: Learn to drag and drop':
              name: '拼圖: 學會拖放'
            Loops:
              name: 迴圈
            Loops Intro:
              name: 迴圈介紹
            Loops Unplugged:
              name: 迴圈的不插電活動
            Persistence & Frustration:
              name: 堅持與挫折
            Programming:
              name: 程式設計
            Programming Unplugged:
              name: 不插電程式設計
            Sequences & Algorithms:
              name: 序列與演算法
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
            'Programming Unplugged: Happy Maps':
              name: 不插電活動：快樂地圖
        grade4:
          title: 年級 4
          description_audience: 年齡 9-99
          lessons:
            'Bee: Determine the Concept':
              name: 蜜蜂：釐清概念
            'Bee: Functions (Course 3)':
              name: 蜜蜂：函式（課程 3）
            Build a Star Wars Game!:
              name: 創建一個星際大戰遊戲！
            Digital Citizenship:
              name: 數位公民
            Explore project ideas:
              name: 找些專案靈感
            'Farmer: Functions (New)':
              name: 農夫：函式（新）
            Final Project - Presentation Day:
              name: 期末專案 - 展示當天
            'Final Project - Unplugged: Design Process':
              name: 期末專案 - 不插電活動：設計流程
            'Final Project - Work Day: Build Project Online':
              name: 期末專案 - 工作日：在線上建立專案
            More Programming with Scratch:
              name: 更多 Scratch 的編程學習資源
            'New Artist: Functions':
              name: 新藝術家 - 函式（Function）
            Scaffolded Project Stage (Loops, Events, Conditionals, Functions):
              name: 搭建鷹架後的專案舞台（迴圈 Loop、事件 Event、條件式 Conditional、函式 Function）
            Songwriting:
              name: 歌曲創作
            'Unplugged: Funky Functions':
              name: 不插電活動：時髦函式
        grade1:
          title: 年級 1
          description_audience: 年齡 5-18
          lessons:
            Being Safe Online:
              name: 安全上網
            Debugging:
              name: 除錯
            Events:
              name: 事件
            Events Unplugged:
              name: 事件不插電
            'Jigsaw: Learn to drag and drop':
              name: '拼圖: 學會拖放'
            Loops:
              name: 迴圈
            Loops Intro:
              name: 迴圈介紹
            Loops Unplugged:
              name: 迴圈的不插電活動
            More Computer Science:
              name: 更多計算機科學
            Persistence & Frustration:
              name: 堅持與挫折
            Programming:
              name: 程式設計
            Programming Unplugged:
              name: 不插電程式設計
            Sequences & Algorithms:
              name: 序列與演算法
            Unspotted Bugs:
              name: 沒被發現的程式的錯誤（Bug）
            'Debugging: Unspotted Bugs':
              name: 除錯（Debug）- 沒被發現的蟲蟲
            'Events Unplugged: The Big Event':
              name: 事件的不插電活動：大事件
        grade5:
          title: 年級 5
          description_audience: 年齡 10-110
          lessons:
            'Artist: For Loops':
              name: 小藝術家 - 計數迴圈（For Loops）
            'Artist: Functions with Parameters':
              name: 小藝術家 - 函式帶參數（Parameters）
            'Artist: Variables':
              name: 小藝術家 - 變數（Variables）
            'Bee: For Loops':
              name: 蜜蜂： 計數迴圈（For Loops）
            'Bee: Functions with Parameters':
              name: 蜜蜂：函式帶參數（Parameters）
            Digital Citizenship:
              name: 數位公民
            Explore project ideas:
              name: 找些專案靈感
            Final Project - Presentation Day:
              name: 期末專案 - 展示當天
            Final Project - Review/Revise Day:
              name: 期末專案 - 檢閱/修改日
            'Final Project - Unplugged: Design Process':
              name: 期末專案 - 不插電活動：設計流程
            'Final Project - Work Day: Build Project Online':
              name: 期末專案 - 工作日：在線上建立專案
            'Play Lab: Variables':
              name: Play Lab - 變數（Variables）
            Try programming with Khan Academy:
              name: 嘗試在 Khan Academy 設計程式
            'Unplugged: Envelope Variables':
              name: 不插電活動 - 信封裡的變數
            'Unplugged: For Loop Fun':
              name: 不插電活動 - 迴圈樂無窮
            'Unplugged: Songwriting with Parameters':
              name: 不插電活動 - 用參數寫歌
        ecs-unit1:
          title: ECS 單元 1
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: 單元 1：第 10 日 - 用數據說故事
            Unit 1, Day 11-14 Data Modeling and Design:
              name: 單元 1：第 11-14 日 - 模組化和設計
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: 單元 1：第 15-16 日 - 電腦程式和遵循方向
            Unit 1, Day 17-19 What Is Intelligence?:
              name: 單元 1：第 17-19 日 - 什麼是智慧
            Unit 1, Days 3-4 Buying a Computer:
              name: 單元 1：第 3-4 日 - 買一台電腦
            Unit 1, Days 5-7 Searching and Web 2:
              name: 單元 1：第 5-7 日 - 搜尋和網路（二）
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: 單元 1：第 8-9 日 - 電腦和通訊影響
            Welcome!:
              name: 歡迎！
            Wrap-up:
              name: 總結
            Unit 1, Days 1-2 What Is a Computer?:
              name: 單元 1：第 1-2 日 - 什麼是電腦？
        ecs-unit2:
          title: ECS 單元 2
          description: 單元 2：問題解決
          description_short: 單元 2：問題解決
          lessons:
            Close & Next Steps:
              name: 關閉 & 下一步
            Getting Started:
              name: 新手上路
            Intro to Unit 2:
              name: 單元 2 簡介
            Lesson Overviews:
              name: 教學內容概述
            Teaching Strategies:
              name: 教學策略
            Unit 2 Challenge:
              name: 單元 2 挑戰
          student_description: 單元 2：問題解決
        ecs-unit3:
          title: ECS 單元 3
          lessons:
            Close & Next Steps:
              name: 關閉 & 下一步
            Getting Started:
              name: 新手上路
            Intro to Unit 3:
              name: 單元 3 簡介
            Teaching Strategies:
              name: 教學策略
            Unit 3 Challenge:
              name: 單元 3 挑戰
            Unit 3 Day-by-Day:
              name: 單元 3 每日活動
        ecs-unit4:
          title: ECS 單元 4
          description: "（舊）單元 4：程式設計"
          description_short: "（舊）單元 4：程式設計"
          lessons:
            Close & Next Steps:
              name: 關閉 & 下一步
            Getting Started:
              name: 新手上路
            Intro to Unit 4:
              name: 單元 4 簡介
            Teaching Strategies:
              name: 教學策略
            Unit 4 Challenge:
              name: 單元 4 挑戰
            Unit 4 Day-by-Day:
              name: 單元 4 每日活動
          student_description: "（舊）單元 4：程式設計"
        ecs-unit5:
          title: ECS 單元 5
          lessons:
            Complete the Challenge:
              name: 完成這個挑戰
            Getting Started:
              name: 新手上路
            Introduction to the Unit 5 Challenge:
              name: 單元 5 挑戰簡介
            Share out and Submit:
              name: 分發並提交
            Unit 5 Overview:
              name: 單元 5 概覽
            Unit 5 lessons:
              name: 單元 5 教學內容
            Unit 5 Challenge:
              name: 單元 5 挑戰
            Close & Next Steps:
              name: 關閉 & 下一步
        ecs-unit6:
          title: ECS 單元 6
          lessons:
            Alternative Ideas for Unit 6:
              name: 單元 6 其他構思
            Getting Started:
              name: 新手上路
            Share out and Submit:
              name: 分發並提交
            Unit 6 Challenge:
              name: 單元 6 挑戰
            Unit 6 Overview:
              name: 單元 6 概覽
            Unit 6 lessons:
              name: 單元 6 教學內容
            Close & Next Steps:
              name: 關閉 & 下一步
        grade3:
          title: 年級 3
          description_audience: 年齡 5-18
          lessons:
            " Bee: Conditionals":
              name: " 蜜蜂：條件判斷（Conditionals）"
            'Artist: Nested Loops':
              name: 畫家： 嵌套的迴圈
            Bee Debugging:
              name: 蜜蜂：除錯（Debugging）
            Bounce:
              name: 彈跳
            Build a Game:
              name: 製作遊戲
            Farmer Conditional with Cards:
              name: 農夫：使用卡牌學習條件式（Conditional）
            Farmer Debug Relay Programming:
              name: 農夫：除錯接力程式設計
            Farmer Graph Paper Programming:
              name: 農夫：方格紙程式設計
            Farmer Impacts of Computing:
              name: 農夫：運算的影響
            'Farmer: While Loops':
              name: 農夫： ｢當｣迴圈　
            'Maze: Conditionals with Loops':
              name: 迷宮：條件式（Conditional）與迴圈（Loop）
            'Maze: Nested Loops':
              name: 迷宮：巢狀迴圈（Nested Loop）
            More Programming with CS4FN:
              name: 更多 CS4FN 的程式設計學習資源
            Robot Running the Farm:
              name: 在農場奔跑的機器人
            Unplugged Conditionals with Loops:
              name: 不插電活動 - 條件判斷帶迴圈
        alltheplcthings:
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
            practice:
              display_name: 老師的做法
          lessons:
            Balancing Teachers and Tools:
              name: 在教師與工具間取得平衡
            Group Work and Peer Learning:
              name: 小組工作與同伴學習
            Introduction to Teachercon:
              name: Teachercon簡介
            Lesson 1,10:
              name: 第1, 10 課
            Lesson 1,11:
              name: 第1, 11 課
            Lesson 1,4:
              name: 第1, 4 課
            Lesson 1,6:
              name: 第1, 6 課
            Lesson 1,9:
              name: 第1, 9 課
            Lesson 2,10:
              name: 第2, 10 課
            Lesson 2,2:
              name: 第2, 2 課
            Lesson 2,3:
              name: 第2, 3 課
            Test stage with bubbles:
              name: 泡泡測試舞台
        csd3-2017:
          description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
          lesson_groups:
            csd3_1:
              display_name: 第 1 章：圖像和動畫
            csd3_2:
              display_name: 第 2 章：創建遊戲
            cspSurvey:
              display_name: 問卷
            csd_survey:
              display_name: 課後調查
          lessons:
            Booleans and Conditionals:
              name: 布林值和條件判斷
            Complex Conditionals:
              name: 複合條件判斷
            Conditionals and Keyboard Input:
              name: 條件判斷與鍵盤輸入
            Draw Loop and Randomization:
              name: 繪圖迴圈和隨機取值
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
              description_student: 班級同學會學習 Game Lab 簡介。Game Lab 是本單元的程式設計環境，並會開始將其用於在畫面上為圖形定位。課堂會說明序列與除錯基礎，以及少量簡單命令。在課堂結束時，班級同學會依據前一個課堂中設計的圖像，建立圖像的線上版本。
              description_teacher: 同學會學習 Game Lab 簡介。Game Lab 是本單元的程式設計環境，並會開始將其用於在畫面上為圖形定位。他們會學習序列與除錯基礎，以及少量簡單命令。在課堂結束時，同學將能夠以程式設計方式製作圖像，外觀與前一個課堂中使用繪圖工具製作的圖像相類似。
            'Project: Interactive Card':
              name: 專案：互動式卡片
            Sprites and Images:
              name: 角色和圖像
            Sprites and Properties:
              name: 角色與屬性
            Variables Unplugged:
              name: 變數（不插電）
            Variables and Animation:
              name: 變數與動畫
            Velocity:
              name: 速度
              description_student: 在簡短回顧計數器模式如何用於移動角色後，班級同學便會學習屬性，從而直接設定移動速度與旋轉速度。學生以不同方式使用新屬性，就能夠熟習所需技巧，製作出基本的橫向捲軸遊戲。
              description_teacher: 簡短回顧在先前的課堂中如何使用計數器模式移動角色後，學生便會學習屬性，從而直接設定移動速度與旋轉速度。學生以不同方式使用新屬性，就能夠熟習所需技巧，製作出基本的橫向捲軸遊戲。
            Collision Detection:
              name: 碰撞檢測
              description_student: 班級中的學生會學習電腦上的碰撞偵測。學生會每 2 人一組，學習電腦可怎樣使用角色的位置與大小屬性和數學，偵測兩個角色是否互相接觸。然後，班級同學會使用 isTouching() 積木，建立角色碰撞時的不同效果，包括播放聲音。最後，學生會應用學到的新技巧，改良前一個課堂中開始製作的橫向捲軸遊戲。
              description_teacher: 學生會學習電腦上的碰撞偵測。學生會每 2 人一組，學習電腦可怎樣使用角色的位置與大小屬性和數學，偵測兩個角色是否互相接觸。然後，班級同學會使用「isTouching()」積木，建立角色碰撞時的不同效果，包括播放聲音。最後，學生會應用學到的新技巧，改良前一個課堂中開始製作的橫向捲軸遊戲。
            Complex Sprite Movement:
              name: 複合角色動作
              description_student: 班級會學習合併角色的速度屬性和計數器模式，以製作更複雜的角色移動，例如模擬重力、讓角色跳躍，以及讓角色左右漂浮。在最後的關卡中，學生會合併這些動作，讓單一個角色移動並控制該角色，然後製作簡單遊戲，遊戲角色需要四處漂浮收集金幣。
              description_teacher: 學生會學習合併角色的速度屬性和計數器模式，以製作更複雜的角色移動。具體而言，學生會學習如何模擬重力、讓角色跳躍，以及讓角色左右漂浮。在 Code Studio 進展的最後關卡中，學生會合併這些動作，讓單一個角色移動並控制該角色，然後製作簡單遊戲，遊戲角色需要四處漂浮收集金幣。課堂鼓勵學生在最後關卡中加入屬於自己的內容。
            Collisions:
              name: 碰撞
              description_student: 班級同學會為角色設計程式，從而以全新方式互動。在簡短回顧先前如何使用 isTouching 積木後，學生便會一起思考其他方法讓兩個角色互動。然後學生會使用 isTouching，讓一個角色在畫面中推動另一個角色，之後再練習 4 種碰撞積木（collide、displace、bounce 與 bounceOff）。
              description_teacher: 學生會為角色設計程式，從而以全新方式互動。在簡短回顧先前如何使用「isTouching」積木後，學生便會一起思考其他方法讓兩個角色互動。然後學生會使用「isTouching」，讓一個角色在畫面中推動另一個角色，之後再練習 4 種碰撞積木（「collide」、「displace」、「bounce」與「bounceOff」）。
            Functions:
              name: 函式
              description_student: 本課堂會說明以函式 function 做為方式，以組織程式碼、讓程式碼更易讀懂，並移除重複的程式碼積木。班級裡的學生會學到，更高級別或更抽象的步驟，可讓我們更容易瞭解及思考各步驟，然後學生便會開始在 Game Lab 中建立函式。在課堂結束時，學生會運用這些技巧，組織橫向捲軸遊戲的最終版本，以及再加入其他功能。
              description_teacher: 學生會學習如何建立函式，以組織程式碼、讓程式碼更易讀懂，並移除重複的程式碼積木。不插電暖身活動用於探討不同細緻級別的移動可以有所用處，視當時情況而定。學生將會學到，更高級別或更抽象的步驟，可讓我們更容易瞭解及思考各步驟，然後學生便會開始學習在 Game Lab 中建立函式。他們會使用函式，從 draw 迴圈中移除冗長的程式碼積木，並以單一條函式取代重複的程式碼。在課堂結束時，學生會運用這些技巧，組織橫向捲軸遊戲的最終版本，以及再加入其他功能。
            The Game Design Process:
              name: 遊戲設計流程
              description_student: 本課堂會介紹相關流程，班級裡的學生將會在單元的餘下部分，使用這個流程設計遊戲。學生會在不同的關卡中瞭解這項流程。做為本課堂的一部分，班級同學也會學習在 Game Lab 中使用多畫格的動畫。在課堂結束時，他們將有機會改良遊戲，使之成為自己的作品。
              description_teacher: 本課堂會向學生介紹相關流程，他們將會在單元的餘下部分，使用這個流程設計遊戲。這項流程會以一個專案指南為中心，指南中會要求學生定義其角色、變數與函式，然後才開始為遊戲設計程式。在本課堂中，學生首先會在 Game Lab 中玩一款遊戲，遊戲期間程式碼會被隱藏。學生會展開討論，指出他們認為需使用哪些角色、變數與函式製作這款遊戲。學生會收到完整的專案指南，裡面會說明實作遊戲的一種方式。然後，學生會在不同的關卡中瞭解這項流程。做為本課堂的一部分，學生也會簡短地學習在 Game Lab 中使用多畫格的動畫。在課堂結束時，學生將有機會改良遊戲，使之成為自己的作品。
            Using the Game Design Process:
              name: 使用遊戲設計流程
              description_student: 在這個分為多天進行的課堂中，班級學生會使用單元 1 的問題解決流程，製作平台跳躍遊戲。觀察範例遊戲後，同學便會定義自己的遊戲看起來會怎樣，並使用結構化流程製作遊戲。最後，班級會反思可怎樣改良遊戲，並實作這些變更。
              description_teacher: 在這個分為多天進行的課堂中，學生會使用單元 1 的問題解決流程，製作平台跳躍遊戲。他們首先會觀察一款平台跳躍範例遊戲，然後定義自己的遊戲看起來會怎樣。接著，學生便會使用結構化流程，規畫實作遊戲時需要的背景、變數、角色和函式。為遊戲編寫程式碼後，學生會反思可怎樣改良遊戲，並實作這些變更。
            'Project: Build a Game':
              name: 專案：創建一個遊戲
            'Project: Design a Game':
              name: 專案：設計一個遊戲
            Programming for Entertainment:
              name: 娛樂用途的程式設計
              description_student: 班級裡的學生需要考慮沉悶與個人表達等「問題」，並反思他們會怎樣在自己的生活中處理這些問題。然後，他們會瞭解整體的電腦科學與具體的程式設計，如何協助展示出特定的娛樂形式或做為自我表現的工具。
              description_teacher: 學生需要考慮沉悶與個人表達等「問題」，並反思他們會怎樣在自己的生活中處理這些問題。然後，學生會瞭解整體的電腦科學與具體的程式設計，如何協助展示出特定的娛樂形式或做為自我表現的工具。
            Plotting Shapes:
              name: 幾何繪圖
              description_student: 學生會接受各種挑戰：說明如何以圖形來繪圖，以及在 Game Lab 中使用一種工具，該工具可介紹與何處理這種問題。暖身活動可快速展示在說明位置時的挑戰，而活動中也會提供一些共享的參照點。在主要活動中，學生會學習一款 Game Lab 工具，讓他們以互動方式將圖形放在 Game Lab 的 400 x 400 方格內。然後學生輪流指示同伴如何使用這款工具繪畫隱藏圖像；活動已考慮在 Game Lab 中設計程式時學生會遇到的多種挑戰。學生可選擇建立並說明自己的圖像，然後再進行匯報討論。
              description_teacher: 學生會接受各種挑戰：說明如何以圖形來繪圖，以及在 Game Lab 中使用一種工具，該工具可介紹與何處理這種問題。暖身活動可快速展示在說明位置時的挑戰，而活動中也會提供一些共享的參照點。在主要活動中，學生會學習一款 Game Lab 工具，讓他們以互動方式將圖形放在 Game Lab 的 400 x 400 方格內。然後學生輪流指示同伴如何使用這款工具繪畫隱藏圖像；活動已考慮在 Game Lab 中設計程式時學生會遇到的多種挑戰。學生可選擇建立並說明自己的圖像，然後再進行匯報討論。
            Shapes and Randomness:
              name: 形狀與隨機性
              description_student: 本課堂會繼續繪畫技巧，加入寬度與高度，並介紹隨機產生的概念。班級學生會學習以不同版本的 ellipse()（橢圓）與 rect()（長方形）繪畫，以加入寬度與長度參數，並使用 background()（背景）積木為畫面填上顏色。在課堂進度結束時，學生會學習 randomNumber()（隨機數字）積木，並使用新積木繪畫隨機的彩紅蛇。
              description_teacher: 在本課堂中，學生會繼續發展繪畫技巧。課堂開始時，教師會帶領學生展開討論，將更多積木功能（例如不同大小的形狀）和需要更多積木輸入方式（也就是「參數」）兩者聯繫起來。學生會學習繪畫不同版本的「ellipse()」（橢圓）與「rect()」（長方形），並加入寬度與長度參數。學生也會學習使用「background()」（背景）積木。在課堂進度結束時，學生會學習 randomNumber()（隨機數字）積木。結合所有上述技巧後，學生便會在課堂結束時繪畫隨機的彩虹蛇。
            Variables:
              name: 變數
              description_student: 本課堂會介紹變數，做為在程式中標記數字的方式，或儲存隨機產生的值。班級開始課堂時，首先會學習變數使用目的之基本說明，並練習使用新積木。然後，班級同學會使用變數儲存隨機數字，讓程式能夠多次使用同一個隨機數字。
              description_teacher: 在本課堂中，學生會學習如何在自己的程式中使用變數標記數字，或儲存隨機產生的值。學生會學習變數使用目的之基本說明。然後，學生會完成關卡進展， 以加深瞭解變數模型做為標記或命名數字的方式。學生會使用變數儲存隨機數字，從而看到變數會實際儲存數值，讓他們可在程式中多次使用同一個隨機數字。
            Sprites:
              name: 角色
              description_student: 為了製作更有趣與細緻的圖像，班級中的學生會學習角色（Sprite）物件。每個角色都可獲分配一個圖像用於顯示，而角色也可記錄自己的多個值 - 這種做法在隨後製作動畫時能夠用到。在課堂結束時，每位學生都會使用角色建立場景。
              description_teacher: 為了製作更有趣與細緻的圖像，學生會學習角色（Sprite）物件。每個角色都可獲分配一個圖像用於顯示，而角色也可記錄自己的多個值 - 這種做法在隨後製作動畫時能夠用到。
            The Draw Loop:
              name: draw（繪圖）迴圈
              description_student: 本課堂會介紹 draw（繪圖）迴圈，這是 Game Lab 中的其中一種核心程式設計範式（Paradigm）。班級學生會把 draw 迴圈與隨機數字結合，以產生由點組成的簡單動畫，然後再產生由角色組成的動畫。之後，所有學生都會使用所學到的知識，更新前一個課堂的角色場景。
              description_teacher: 在本課堂中，學生會學習介紹 draw（繪圖）迴圈，這是 Game Lab 中的其中一種核心程式設計範式（Paradigm）。課堂開始時，學生會觀看一些手翻動畫書，瞭解多個圖像放在不同的畫格，可產生動作效果。然後，學生會觀看影片，瞭解 Game Lab 中的 draw 迴圈如何協助在自己的程式中呈現相同的效果。學生會把 draw 迴圈與隨機數字結合，以產生由點組成的簡單動畫，然後再產生由角色組成的動畫。在課堂結束時，學生會使用所學到的知識，更新前一個課堂的角色場景。
            The Counter Pattern Unplugged:
              name: 計數器模式（不插電）
              description_student: 本不插電課堂說明變數的基本行為。班級學生會使用記事卡與字串模擬程式內的變數，以實作一些簡短程式。熟悉這種程式語法後，班級學生便會使用相同流程與角色屬性，追蹤角色在螢幕上的進展。
              description_teacher: 學生會在不插電活動中，瞭解變數的基本行為。學生會使用記事卡與字串模擬程式內的變數，以實作一些簡短程式。熟悉這種程式語法後，學生便會使用相同流程與角色屬性，追蹤角色在螢幕上的進展。
            Sprite Movement:
              name: 角色動作
              description_student: 班級學生會合併 Draw（繪圖）迴圈與計數器模式，並編寫程式讓畫面上的角色移動，以及把其他角色屬性動畫化。
              description_teacher: 學生會合併 Draw（繪圖）迴圈與計數器模式，並編寫程式讓畫面上的角色移動，以及把其他角色屬性動畫化。
            Conditionals:
              name: 條件判斷（Conditionals）
              description_student: 班級裡的學生首先會使用布林值，比較某個角色屬性目前的值和目標值，並以這種比較方式判斷角色何時達到畫面的某一點、放大至指定大小，或是以計數器模式達到某個值。學生在直接使用布林值調查值或角色屬性後，便會把條件式 if 陳述句加入編寫的程式碼中，以回應該等布林值的比較。
              description_teacher: 學生首先會使用布林值，比較某個角色屬性目前的值和目標值，並以這種比較方式判斷角色何時達到畫面的某一點、放大至指定大小，或是以計數器模式達到某個值。學生在直接使用布林值調查值或角色屬性後，便會把條件式 if 陳述句加入編寫的程式碼中，以回應該等布林值的比較。
            Keyboard Input:
              name: 鍵盤輸入
              description_student: 在前一個課堂介紹了布林值與 if 陳述句後，學生會學習名為 keyDown() 的新積木。這塊積木會返回一個布林值，並可用於條件式陳述句中，讓角色能夠在畫面上移動。在本課堂結束時，學生編寫的程式將能夠讓使用者以鍵盤輸入，控制畫面上的角色。
              description_teacher: 在前一個課堂介紹了布林值與 if 陳述句後，學生會學習名為「keyDown()」的新積木。這塊積木會返回一個布林值，並可用於條件式陳述句中，讓角色能夠在畫面上移動。在本課堂結束時，學生編寫的程式將能夠讓使用者以鍵盤輸入，控制畫面上的角色。
            Other Forms of Input:
              name: 其他輸入形式
              description_student: 班級裡的同學將繼續學習不同方式使用條件式陳述句擷取使用者輸入的內容。除了昨天學到的簡單 keyDown() 命令外，學生也會學習幾項其他鍵盤輸入命令，以及擷取滑鼠輸入的方式。
              description_teacher: 在本課堂中，學生將繼續學習不同方式使用條件式陳述句擷取使用者輸入的內容。除了昨天學到的簡單「keyDown()」命令外，學生也會學習幾項其他鍵盤輸入命令，以及擷取滑鼠輸入的方式。
            Booleans Unplugged:
              name: 布林值（Boolean）（不插電）
              description_student: 本課堂介紹布林值（boolean）與邏輯，以及條件式（conditional）陳述句。班級課堂開始時，學生首先會玩一款簡單的「站起、坐下」遊戲。在遊戲中，布林值（true/false）陳述句用於描述個人屬性（頭髮或眼睛顏色、衣著類型等）。然後，班級同學將依據越來越複雜的布林值陳述句將物件分組，並觀察條件式可怎樣影響程式的流程。
              description_teacher: |-
                在本課堂中，學生會學習布林值（boolean）與邏輯，以及條件式（conditional）陳述句。班級課堂開始時，學生首先會玩一款簡單的「站起、坐下」遊戲。在遊戲中，布林值（true/false）陳述句用於描述個人屬性（頭髮或眼睛顏色、衣著類型等）。這樣，學生就可思考怎樣以二元問題（只有兩個答案），把可能有多個值（例如年齡）的屬性放進框架中。

                然後，學生將會收到一組物件，其物理性質相似但有所差異。學生會與同伴一起，依據越來越複雜的布林值陳述句把該等物件分組，其中包括帶 AND 與 OR 的複合布林值。

                最後，我們會揭曉以條件式做為決策工具，或使用布林值陳述句做為輸入，以影響程式流程。
            Project - Interactive Card:
              name: 專案 - 互動式卡片
              description_student: 在第 1 章的本累積專案中，班級同學會計畫並開發互動賀卡，他們會使用至今學到的全部程式設計技巧。
              description_teacher: 在第 1 章的本累積專案中，學生會計畫並開發互動賀卡，他們會使用至今學到的全部程式設計技巧。
            Project - Design a Game:
              name: 專案 - 設計一個遊戲
              description_student: 班級學生會使用上兩個課堂的專案指南，計畫並製作原創遊戲。同學會分為兩人一組，然後規畫、開發遊戲，並為遊戲提供回饋意見。納入同伴的回饋後，同學便會分發完成的遊戲。
              description_teacher: 學生會計畫並製作自己的遊戲，這時候他們會使用上兩個課堂的專案指南引導製作專案。學生會分為兩人一組，首先決定希望製作的遊戲類型，並以一些範例遊戲做為創作靈感。然後，他們會完成空白的專案指南，說明遊戲的行為，並瞭解需要建立的變數、角色與函式。在 Code Studio 中，會有一些關卡提示學生可使用哪項一般序列實作自己的計畫。在流程的途中，學生會分享自己的專案作品供同儕審查，並在完成遊戲時納入其他同學的回饋意見。在課堂結束時，學生會向同學分享完成的遊戲。此專案會覆延伸至數個課節，且可能很容易便會分為 3-5 個課節。
            Parameters and Randomization:
              name: 參數與隨機化
            Shapes and Randomization:
              name: 圖形與隨機化
            CS Discoveries End of Semester Survey:
              name: 電腦科學探索學期結束問卷調查
            CSD Post-Course Survey:
              name: CSD 課後問卷調查
          student_description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
        grade2:
          title: 年級 2
          description_audience: 年齡 5-18
          lessons:
            At The Dog Park:
              name: 在小狗公園
            Caring for My New Pet:
              name: 照料我的新寵物
            Exploring the Neighborhood:
              name: 探索鄰居
            Flappy:
              name: 像素鳥
            Getting Loopy with Puppy:
              name: 從小狗身上學習迴圈
            Make a Dog Tag:
              name: 做個狗牌
            More CS with Run Marco:
              name: 在跑吧，馬可（Run Marco）遊戲中學習更多 CS
            New Home for My Pet:
              name: 我的寵物新居
            Online Internet Safety:
              name: 線上網際網路安全
            Online My New Pet Jigsaw:
              name: 線上：我的新寵物拼圖
            Puppy Event:
              name: 小狗 - 事件（Event）
            Puppy Introduction:
              name: 小狗 - 介紹
            Puppy Loops:
              name: 小狗 - 迴圈（Loops）
            How to behave in the lab_How to use Code_org puzzles:
              name: 在電腦室的行為/怎樣使用 Code.org 謎題
            Programming at home with my pet:
              name: 在家中與寵物一起進行程式設計活動
            Binary Bracelets:
              name: 二進制手環
            'Real-life Algorithms: Paper Planes':
              name: 生活中的演算法 - 紙飛機
            The Big Event:
              name: 大事件
        transferring-over:
          lessons:
            20-hr Stage 2:
              name: 20 小時程式 階段 2
            20-hr Stage 9:
              name: 20 小時程式 階段 9
            Course 2 Stage 17:
              name: 課程 2 階段 17
            Course 3 Stage 16:
              name: 課程 3 階段 16
            Course 3 Stage 17:
              name: 課程 3 階段 17
        k5concepts:
          title: K5 概念
          lessons:
            Binary:
              name: 二進制（Binary）
            Conditionals:
              name: 條件判斷（Conditionals）
            Events:
              name: 事件
            For Loops:
              name: 計次迴圈（For Loops）
            Functions:
              name: 函式
            Functions with Parameters:
              name: 函式帶參數
            Loops:
              name: 迴圈
            Nested Loops:
              name: 巢狀迴圈
            Variables:
              name: 變數
            While Loops:
              name: 當…迴圈
        algebrapdnext:
          title: 階段 2 PD 代數裡的計算機科學
          description: 通過函數式程式設計教代數
          description_short: "\\\\t階段 3 學年支援"
          lessons:
            Lesson Prep:
              name: 教學準備
            Teacher Dashboard:
              name: 教師控制台
            Teaching with Puzzles:
              name: 透過關卡教學
            Teaching with the Design Recipe:
              name: 使用設計流程來教學
            The Design Recipe:
              name: 設計程序
            Welcome!:
              name: 歡迎！
          student_description: 通過函數式程式設計教代數
        csp-pre-survey:
          title: 計算機科學原理課前問卷調查
          lessons:
            Anonymous student pre-survey:
              name: 匿名學生課前調查
            NEW Unit 1 Chapter 1 Assessment:
              name: 全新單元 1 第 1 章 評估
            Unit 1 Chapter 1 Assessment:
              name: 單元 1 第 1 節 評量
            Unit 3 Chapter 1 Assessment:
              name: 單元 3 第 1 章 評估
            Unit 4 Chapter 1 Assessment:
              name: 單元 4 第 1 章 評估
            'Anonymous student survey: Taking the AP exam':
              name: 匿名學生問卷調查：接受 AP 考試
        csd1-2017:
          title: CSD 單元 1 - 問題解決 ('17-'18)
          description_short: 瞭解人類與何與電腦一起解決問題。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csd1_1:
              display_name: 第 1 章：解決問題的流程
            csd1_2:
              display_name: 第 2 章：計算機與問題解決能力
          lessons:
            Intro to Problem Solving:
              name: 問題解決能力的介紹
              description_student: 班級學生會分組工作，目標是設計強力的鋁箔船，可盡量放置最多硬幣。在課堂結束時，小組會反思自己在活動中的體驗，並思考在課程的餘下部分中，將會選擇運用哪些解決問題類型。
              description_teacher: 在本課堂中，學生會分組設計鋁箔船，目標是盡量支撐最多硬幣。各小組會有 2 個回合製作鋁箔船，第 2 回合的目標是盡量比第 1 回合載得更多硬幣。這項活動的結構可預示問題解決流程的不同步驟，而在接下來的課堂中，學生會更詳細學習這些流程。在本課堂結束時，學生會反思自己在活動中的經驗，並思考在課程的餘下部分中，將會選擇運用哪些解決問題類型。
            The Problem Solving Process:
              name: 問題解決流程
              description_student: 本課堂會介紹正式的問題解決流程。班級學生會在學年裡運用這種流程：定義 - 準備 - 嘗試 - 反思。學生會把這些步驟，與前一個課堂的鋁箔船問題聯繫起來，然後思考他們擅長解決的一個問題，然後再思考他們希望解決得更好的一個問題。在課堂結束時，班級同學會收集普遍實用的策略清單，用於流程中的每個步驟，然後加到海報上，從而在整個單元與學年中使用。
              description_teacher: 本課堂會介紹正式的問題解決流程。學生會在學年裡運用這種流程：定義 - 準備 - 嘗試 - 反思。課堂首先會讓學生一起思考日常生活中遇到的所有類型問題。接著，學生便會學習問題解決流程的 4 個步驟，並合作把這 4 個抽象的步驟，聯繫到實際解決問題的經驗中。首先，學生會把這些步驟，與前一個課堂的鋁箔船問題聯繫起來，然後思考他們擅長解決的一個問題，然後再思考他們希望解決得更好的一個問題。在課堂結束時，班級同學會收集普遍實用的策略清單，用於流程中的每個步驟，然後加到海報上，從而在整個單元與學年中使用。
            Exploring Problem Solving:
              name: 問題解決探索
              description_student: 在本課堂中，班級學生會把問題解決流程應用至 3 個不同問題：字詞搜尋、為生日派對編排座位，以及計畫旅行。各種問題變得越來越複雜，而且定義差劣，從而強調問題解決流程為甚麼在解決這些問題時特別有用。
              description_teacher: |-
                在本課堂中，學生會把問題解決流程應用至 3 個不同問題中，以加深瞭解每個步驟的價值。他們會完成一次猜詞遊戲、為生日派對編排座位，以及計畫旅行。各種問題變得越來越複雜，而且定義差劣，從而強調問題解決流程為甚麼在解決這些問題時特別有用。課堂結束時，學生會反思自己在問題解決流程方面的經驗。他們會確認加入每個步驟的理由，並會一起思考各種問題或策略，從而協助自己更能定義開放式問題，因為通常這就是最關鍵的步驟。

                本課堂大概需要 2 個或更多課節完成。最初 2 個問題也許能放進 1 個課節，但第 3 個問題則需要放在第 2 天。
            What is a Computer?:
              name: 電腦是什麼？
              description_student: 在本課堂中，班級學生會瞭解電腦的初步定義。一起思考電腦可能的各種定義後，學生會分組在海報紙上，把圖片分類為「是電腦」或「不是電腦」，並說明他們在選擇一些最困難的分類時有甚麼原因。然後，教師會介紹電腦的定義，並讓各小組依據新的定義來修改海報內容。
              description_teacher: 在本課堂中，學生會瞭解電腦的初步定義。開始課堂時，學生會一起思考電腦可能的各種定義，然後把思考結果放在黑板上。接著，學生會分組在海報紙上，把圖片分類為「是電腦」或「不是電腦」，並在課室張貼海報紙，然後簡短說明他們在選擇一些最困難的分類時有甚麼原因。之後，教師會介紹電腦的定義，並讓學生依據新的定義來修改海報內容。
            Representing Information:
              name: 表示資訊
            Processing with Bits:
              name: 使用位元處理
            Human vs. Computer Processing:
              name: 人類與電腦處理比較
            Processing with Apps:
              name: 以應用程式處理
            'Project: Apps and Problem Solving':
              name: 專案：App 與問題解決
            Human vs Computer Processing:
              name: 人類與電腦處理比較
            Input and Output:
              name: 輸入與輸出
              description_student: 在本課堂中，班級學生會思考一些運算裝置，並確定裝置使用哪些類型的輸入與輸出。小組會收到一台運算裝置，學生依據教師提供的輸入與輸出定義，列出他們的裝置上有哪些輸入與輸出工具。課堂結束時，學生會檢視在運算裝置上經常會進行的活動，並在圖表上選擇用於該活動的輸入與輸出工具。
              description_teacher: 在本課堂中，學生會思考一些運算裝置，並確定裝置使用哪些類型的輸入與輸出。小組會收到一台運算裝置，並依據教師提供的輸入與輸出定義，列出他們的裝置上有哪些輸入與輸出工具。在活動初期，教師會提示學生專注於更明顯的實體輸入與輸出（例如鍵盤做為輸入，或螢幕做為輸出），但是之後的討論應帶領學生考慮較不明顯的範例（例如觸控螢幕是輸入，同時也是輸出；或是網際網路可同時做為輸入與輸出）。在整個課堂中，教師會在課室前方的 T 圖表中，記錄已確定的輸入和輸出。課堂結束時，學生會檢視在運算裝置上經常會進行的活動，並在圖表上選擇用於該活動的輸入與輸出工具。
            Processing:
              name: 處理
              description_student: 本課堂會更深入探討「處理」的概念，這個概念先前已包含在電腦的定義中。同學分為 2 人一組順序放置卡牌 - 這是處理資訊的一種形式。在結束時，班級學生會在解決資訊問題的背景下討論「處理」的意義。
              description_teacher: 學生會完成 2 項不插電卡牌排序活動，從而瞭解「處理」的意思，以及「處理」和解決問題間的關係。第 1 項活動只有很少限制，用於介紹處理的高階定義。下一項活動會施加更多限制，迫使學生開發一套演算法，從而每次都能成功處理卡牌。學生會反覆與同學一起開發、測試並分享自己的演算法。總結討論會讓學生反思在上述活動中使用的不同類型問題決方法，以及製作演算法解決問題的價值所在。
            Storage:
              name: 儲存
              description_student: 本課堂集中說明電腦定義中的儲存元件，這些儲存元件會在處理資訊時使用。班級同學會用課堂的大部分時間，開發並分享處理資訊的演算法，課堂會強調任何特定演算法需要多少儲存空間。課堂結束時，會討論在處理資訊時儲存的重要性。
              description_teacher: 學生會學習電腦中「輸入-儲存-處理-輸出」模型內儲存的重要性。暖身活動會請學生反思一下，曾經看到電腦儲存哪些類型的資訊，例如文件、照片或影片等。不插電的主要活動會讓學生開發一種演算法，以處理一小疊卡牌，並插尋牌堆裡的特定卡牌。應限制學生移動卡牌的方式，迫使他們即使在處理卡牌時，也會思考儲存的重要性。課堂結束時，會討論本課堂中學生看到的 2 種儲存類型，以及在處理資訊時儲存的重要性。
            Apps and Problem Solving:
              name: App 與問題解決
              description_student: 本課堂會講解電腦在輸入與輸出方面的內容，並會以與學生相關的熟悉方式：應用程式來說明。班級學生會評估一些網頁應用程式，從而分析這些程式設計用於解決的特定問題、程式需要處理的輸入內容，以及程式會向使用者提供的輸出內容。課堂結束時，學生會觀察這些應用程式，教師也會帶領討論應用程式對社會的影響。
              description_teacher: 本課堂會講解電腦在輸入與輸出方面的內容，並會以與學生相關的熟悉方式：應用程式來說明。學生會分為 2 人一組，評估一些網頁應用程式，從而分析這些程式設計用於解決的特定問題、程式需要處理的輸入內容，以及程式會向使用者提供的輸出內容。課堂結束時，學生會觀察這些應用程式，教師也會帶領討論應用程式對社會的影響。
            Project - Propose an App:
              name: 專案 - 提出應用程式建議
              description_student: 為了總結問題解決流程的學習內容，並總結電腦的輸入/輸出/儲存/處理模型，班級同學會提議設計相關應用程式，以解決現實世界的問題。這份專案會橫跨數天完成，最後會進行海報簡報，強調每款應用程式的功能特色。專案預期每 2 人一組完成，但也可 1 人獨自完成。
              description_teacher: 為了總結問題解決流程的學習內容，並總結電腦的輸入/輸出/儲存/處理模型，學生會提議設計相關應用程式，以解決現實世界的問題。這份專案會橫跨數天完成，最後學生會製作海報，強調將會向同學展示的應用程式有哪些功能特色。專案指南為學生提供循序漸進的指示，並協助他們整理自己的思緒。專案預期每 2 人一組完成，但也可 1 人獨自完成。
            CS Discoveries Pre-survey:
              name: 電腦科學探索課前問卷調查
            CS Discoveries Rapid Survey:
              name: 電腦科學探索快速問卷調查
        csp-online-test:
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
            practice:
              display_name: 老師的做法
          lessons:
            Unit 1 Overview:
              name: 單元 1 概覽
            'Lessons 2-3: Binary Messages':
              name: 課堂 2-3：二進制訊息
            Group Work and Peer Learning:
              name: 小組工作與同伴學習
            Balancing Teachers and Tools:
              name: 在教師與工具間取得平衡
            Discovery Learning:
              name: 發現學習
            Measuring Student Learning:
              name: 衡量學生的學習
            'Lessons 4-6: Encoding and Sending Numbers':
              name: 課程  4 - 6：編碼和發送數字訊息
            'Lesson 7: Encoding and Sending Text':
              name: 課堂 7：編碼與傳送文字
            'lessons 9: Internet Addressing':
              name: 課堂 9：網際網路定址
            'lessons 10: Routers and Redundancy':
              name: 課堂 10：路由器與備援
            'lessons 11-12: Protocols and Abstraction':
              name: 課堂 11-12：協定與抽象化
            'Lessons 2 - 3: Binary Messages':
              name: 課堂 2 - 3：二進制訊息
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 課程  4 - 6：編碼和發送數字訊息
            'Lesson 9: Internet Addressing':
              name: 課堂 9：網際網路定址
            'Lessons 10 - 11: Redundancy and Packets':
              name: 課堂 10 - 11：備援與封包
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 課堂 12 - 13：網際網路上的抽象化
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 課堂 10 - 11：路由器、備援與封包
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: '教程 1-2: 位元組、檔案大小和文字壓縮'
            'Lessons 3 - 4 : Encoding Images':
              name: 課堂 3 - 4：為圖像編碼
            'Lesson 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 課堂 5 - 6：壓縮格式與開發自己的編碼方案
            'Lessons 7 - 11: Interpreting Visual Data':
              name: 課堂 7 - 11：詮釋視覺化資料
            'Lessons 12 - 15: Communicating with Visualizations':
              name: 課堂 12 - 15：以視覺化資料傳達資訊
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 課堂 7 - 10：詮釋視覺化資料
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 課堂 11 - 15：以視覺化資料傳達資訊
            Unit 2 Overview:
              name: 單元 2 概覽
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 課堂 5 - 6：壓縮格式與開發自己的編碼方案
            Unit 3 Overview:
              name: 單元 5 概覽
            'Lessons 1 - 3: Algorithms':
              name: 課堂 1 - 3：演算法
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 課堂 4 - 6：程序抽象化與自上而下的設計
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 課堂 7 - 9：說明文件、簡單迴圈與隨機數字
            Event Driven Programming:
              name: 事件驅動的程式設計
            Variables and Strings:
              name: 變數與字串
            Conditionals and Boolean Logic:
              name: 條件式與布林邏輯
            While Loops and Introduction to Arrays:
              name: While（當）迴圈與陣列
            Processing Arrays and Functions with Return Values:
              name: 處理帶回傳值的陣列與函式
            Unit 5 Overview:
              name: 單元 5 概覽
        csp1-support:
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
            practice:
              display_name: 老師的做法
          lessons:
            Unit 1 Overview:
              name: 單元 1 概覽
            'Lessons 2 - 3: Binary Messages':
              name: 課堂 2 - 3：二進制訊息
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 課程  4 - 6：編碼和發送數字訊息
            'Lesson 7: Encoding and Sending Text':
              name: 課堂 7：編碼與傳送文字
            'Lesson 9: Internet Addressing':
              name: 課堂 9：網際網路定址
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 課堂 10 - 11：路由器、備援與封包
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 課堂 12 - 13：網際網路上的抽象化
            Group Work and Peer Learning:
              name: 小組工作與同伴學習
            Balancing Teachers and Tools:
              name: 在教師與工具間取得平衡
            Discovery Learning:
              name: 發現學習
            Measuring Student Learning:
              name: 衡量學生的學習
            AP Preparation and Support:
              name: AP 準備與支援
        basketball:
          title: 選擇你的球隊，來場籃球比賽
          description_short: 選擇你的球隊，來場籃球比賽
          description: 選擇你的球隊，來場籃球比賽
          lessons:
            Bounce:
              description_student: 有沒有想過，你可以在學校玩電子遊戲？在本課堂中，你將有機會製作自己的遊戲！
              description_teacher: 在這項線上活動中，學生會學習甚麼是事件（event），以及電腦怎樣在程式（例如電子遊戲）中使用事件。學生會在各種謎題中，讓程式，對事件做出反應（例如按下箭頭按鈕後）。在謎題結束時，學生將有機會以不同的速度與聲音自訂遊戲。
          student_description: 選擇你的球隊，來場籃球比賽
          name: 籃球
        sample-csp5:
          lessons:
            Controlling Memory with Variables:
              name: 以變數（Variable）控制記憶體
        hoc-encryption:
          title: 一小時玩程式：簡單加密
          lessons:
            Simple Encryption:
              name: 簡單加密
              description_student: 本課堂會向學生介紹，需要使用加密與簡單技術破解秘密訊息。學生會自己嘗試破解一條訊息，這個訊息以經典的凱撒密碼，以及隨機替換式密碼加密。學生應該要深深明白，在這個運算工具強大的世代，加密技術將需要變得更成熟。本課堂最重要的一點，是瞭解在我們每天的一切網路生活中，加密怎樣和為甚麼扮演著重要角色，並瞭解製作良好的加密技術不是小事。學生會嘗試瞭解：我們面對強大的運算工具，而這些工具可用來破解加密內容，因此必須考慮如何製作強大的加密方式。在網際網路上傳送位元時需要保持私密，對所有上網的人來說都非常重要。
              description_teacher: 本課堂會向學生介紹，需要使用加密與簡單技術破解秘密訊息。學生會自己嘗試破解一條訊息，這個訊息以經典的凱撒密碼，以及隨機替換式密碼加密。學生應該要深深明白，在這個運算工具強大的世代，加密技術將需要變得更成熟。本課堂最重要的一點，是瞭解在我們每天的一切網路生活中，加密怎樣和為甚麼扮演著重要角色，並瞭解製作良好的加密技術不是小事。學生會嘗試瞭解：我們面對強大的運算工具，而這些工具可用來破解加密內容，因此必須考慮如何製作強大的加密方式。在網際網路上傳送位元時需要保持私密，對所有上網的人來說都非常重要。
        csd2-2017:
          title: CSD 單元 2 - Web 開發 ('17-'18)
          description_short: 在 Web Lab 中學習製作自己的網站。
          description: 在單元 2 中，你會學習如何在自己的網頁中製作並分享內容。決定你想與全世界分享哪些內容後，便會學習怎樣使用 HTML 與 CSS 構築自己的網頁。你也會練習各種寶貴的程式設計技巧，例如除錯與寫下註解。在單元結束時，你將可製作出屬於自己的個人網站，並可在網際網路上發佈。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章：網站內容和 HTML
            csd2_2:
              display_name: 第 2 章：樣式和 CSS
            csd_survey:
              display_name: 課後調查
          lessons:
            new stage:
              name: 新的階段
            Quality Websites:
              name: 有品質的網站
            Website Design:
              name: 網站設計
            Describing Web pages:
              name: 網頁描述
            Text on the Web:
              name: 站台上的文本
            Images on the Web:
              name: 網站上的圖像
            Clean Code and Debugging:
              name: 乾淨代碼和偵錯調試
              description_student: 本課堂教導在設計 HTML 網頁時出現的常見問題。班級學生會在一系列越來越複雜的網頁（在 Code Studio 上提供）中修正錯誤，並學習註解（comment）、白色空間（whitespace）與縮排（indentation）在製作網頁時的重要性：這些是讓讀者更易閱讀網頁內容的工具。
              description_teacher: 學生會處理一些在設計 HTML 網頁時出現的常見問題。他們會在一系列越來越複雜的網頁中修正錯誤。在過程中，他們會學習註解（comment）、白色空間（whitespace）與縮排（indentation）在製作網頁時的重要性：這些是讓讀者更易閱讀網頁內容的工具。在課堂結束時，學生會制定策略清單，用於為網頁除錯，並確保內容易於閱讀與維護。
            Introduction to Styling with CSS:
              name: 以 CSS 修改樣式簡介
            Multi-Page Websites:
              name: 多頁式網站
            Classes:
              name: 類別
            External Style Sheets:
              name: 外部樣式表
            Peer Review:
              name: 同儕審查
            Box Model and Page Layout:
              name: 盒模型和頁面版型
            Digital Footprint:
              name: 數位足跡
              description_student: 本課堂會暫停建立個人網站，用來解說大眾選擇以數位分享的個人資訊。班級學生首先會討論有哪些類型的資訊可與他人分享，然後瀏覽一些範例社交媒體頁面，瞭解有哪些類型的個人資訊可能會有意或無意地分享出去。最後，學生會制定一套指引，並在資訊上線遵從這些指引。
              description_teacher: |-
                學生最近已花了一些時間，思考有哪些實際內容會放在個人網站上。現在本課堂會暫停製作橫跨整個單元的專案（發佈個人網站），以協助學生說明自己會選擇以數位形式分享哪些個人資訊，以及向哪些人分享。課堂也會強調，他們選擇以數位形式分享的很多資訊，很大程度在發佈後已無法受自己控制。\\r
                \\r
                學生首先會各自找出合適的受眾，意指學生向這些受眾分享定特的個人資訊時會感到自在。然後，他們會瀏覽一些社交媒體頁面，以判斷大眾會分享關於自己或別人的哪些類型資訊。最後學生會反思一下，認為在線上張貼資訊時應遵守哪些指引。\\r
                \\r
                本課堂的最終要點不是要嚇怕學生，而是以實驗的性質讓學生準確瞭解，他們在線上發佈資訊後無法控制資訊的程度。
            Publishing a Website:
              name: 網站的發佈
            Sources and Search Engines:
              name: 來源和搜尋引擎
              description_student: 班級同學首先會完成網頁搜尋尋寶遊戲，然後再學習搜尋引擎的內部運作，並有機會搜尋怪異與不太可能存在的動物，從而加強分析技巧。
              description_teacher: 本課堂鼓勵學生以更富批判思考精神的方式，思考網頁搜尋如何運作，以及怎樣在線上找出相關且可靠的資訊。檢視討論相關影片（內容關於搜尋引擎如何運作）後，學生會搜尋一些不太可能存在的動物之資訊。他們需要分析找到的網站是否可靠，從而確認哪些動物實際上是惡作劇。
            Intellectual Property:
              name: 知識產權
            'Personal Website: Finalizing Site':
              name: 個人網站：完成站台
            'Project: Personal Portfolio Website':
              name: 專案：個人作品網站
            Images in HTML:
              name: 在 HTML 中的圖像
            Styling Text with CSS:
              name: 透過 CSS 修改文字樣式
              description_student: 本課堂會介紹以 CSS 做為修改頁面元素樣式的方法。班級學生會學習 CSS 規則集的基本語法，然後瞭解會影響 HTML 文字元素的屬性。最後，所有學生都會把文字樣式套用至自己的個人網站。
              description_teacher: |-
                本課堂會介紹以 CSS 做為修改頁面元素樣式的方法。學生會學習 CSS 規則集的基本語法，然後瞭解會影響 HTML 文字元素的屬性。他們會製作關於金氏世界紀錄保持者的 HTML 頁面，並在提供的頁面中加入自己的樣式。在最後一個關卡中，學生會把學到的文字元素樣式，套用至自己的個人網站。\\r
                \\r
            Styling Elements with CSS:
              name: 透過 CSS 修改元素樣式
              description_student: 本課堂會繼續介紹 CSS 樣式屬性，這次會更集中說明文字以外的元素。班級學生首先會研究並修改「世界各地的甜品」頁面上的新 CSS 樣式。然後，所有學生都會把這項知識套用至自己的個人網站中。
              description_teacher: 本課堂會繼續介紹 CSS 樣式屬性，這次會更集中說明文字以外的元素。學生在開始本課堂時，首先會瀏覽關於「世界各地的甜品」的網站。他們會研究並修改這個網站上的新 CSS 樣式，並在網站上加入自己的樣式。完成甜品頁面後，學生會套用新 CSS 屬性的知識，為自己網站做進一步的樣式修改。
            Exploring Websites:
              name: 探索不同網站
              description_student: 本課堂會說明網站可能需要為使用者和製作者達成之目的。班級同學會觀看一些美國最多人使用的網站，並討論其中每個網站對使用者的用處有多大，以及可怎樣同時為製作者服務。
              description_teacher: 每個網站都有製作之目的 - 某人製作網站與其他人使用的理由。在本課堂中，學生會開始思考一個網站可能會有的目的，不論是為使用者還是為製作者達成之目的。學生會觀看一些美國最多人使用的網站，並嘗試瞭解每個網站對使用者的用處有多大，以及可怎樣同時為製作者服務。
            'Websites for Expression ':
              name: 建立網站，表達內容
              description_student: 本課堂介紹以網站做為表達自我的途徑。班級同學首先會討論大眾會使用哪些不同方法，以表達並分享自己的興趣和構思，然後觀察一些範例網站，這些網站由前一個課程的學生完成。最後，所有同學都一起思考並分享可加入的主題與興趣清單，為單元餘下部分創造資源，以製作個人網站。
              description_teacher: 在本課堂中，學生會研究不同方法，以使用網站做為個人表達的途徑，並建立希望在個人網站中加入的主題與興趣清單。開始課堂時，學生會一起思考不同方法，以表達並分享自己的興趣和構思。然後，學生會觀察一些範例網站（這些網站由前一個電腦科學探索課程的學生完成），以找出表達構思的方法。最後，學生會一起思考並分享可能想在個人網站中加入的主題與興趣清單，讓他們可在單元進行中時參考，從而獲得靈感構思。
            Intro to HTML:
              name: HTML 簡介
              description_student: 本課堂介紹以 HTML 做為解決方案，解決如何把網站內容與結構傳達給電腦的問題。課堂開始時，首先會進行簡短的不插電活動，展示有效與網頁的結構通訊時的挑戰。班級同學會在 Web Lab 中觀看一個 HTML 網頁，並討論 HTML 標籤如何協助解決這個問題，然後再使用 HTML 編寫單元中的第一個網頁。
              description_teacher: 在本課堂中，學生會學習以 HTML 做為解決方案，解決如何把網站內容與結構傳達給電腦的問題。課堂開始時，首先會進行簡短的不插電活動，展示有效與網頁的結構通訊時的挑戰。學生會在 Web Lab 中觀看一個 HTML 範例網頁，並與同學討論 HTML 標籤如何協助解決這個問題。之後，學生便會編寫第一個 HTML 網頁。總結討論可協助鞏固學生在課堂中，對內容與結構比較的瞭解。
            Headers:
              name: Header
              description_student: 本課堂會繼續介紹 HTML 標籤，這次會介紹 header。班級會練習使用 header 標籤建立頁面與區域標題，並學習不同的 header 元素在預設下如何顯示。然後，班級同學便會計畫如何在個人網頁中組織內容（這些網頁會在單元內逐步建立），並開始專案的首頁。
              description_teacher: 在本課堂中，學生會繼續使用 HTML 構築網頁上的文字，這次則會製作標題（header）。學生會學習不同的標題元素在預設下如何顯示，並練習使用這些元素建立頁面與區域標題。然後，學生會開始決定如何在自己的網頁中組織內容。在最後一個關卡中，學生會開始製作專案，並會在整個單元中繼續製作。
            Lists:
              name: 清單
              description_student: 本課堂介紹有序與無序清單，以及相關的 \<ul>、\<ol> 與 \<li> HTML 標籤。班級裡的學生會練習使用標籤，然後回到個人網頁專案中加入新的 HTML 頁面，頁面內包含這些新標籤。
              description_teacher: 學生會學習 HTML 中的有序與無序清單，並完成數個關卡，他們會在關卡裡使用 \<ul>、\<ol> 與 \<li> 標籤。然後他們會返回自己的專案，並加入新的 HTML 頁面。在新頁面中，學生會編寫 HTML，以顯示食譜、「十大」名單，或是使用剛學到的標籤顯示任何其他內容。
            Intellectual Property and Images:
              name: 知慧財產權與圖像
              description_student: 本課堂會說明怎樣在網站內，使用其他人製作的媒體（例如圖像、影片或音樂），同時尊重相關媒體創作者的權利。學習創用 CC（Creative Commons）授權後，班級同學便會學習怎樣把圖像加入網頁上，以及在加入圖像時如何給予適當的姓名標示。
              description_teacher: |-
                班級首先會討論自己的個人意見，說明其他人應怎樣獲得自己的同意使用自己的作品，然後探索著作權（Copyright）之目的，以及其對創意內容創作者和使用者的作用。之後，學生便會開始一項活動，瞭解不同的 Creative Commons 授權，做為難以處理著作權問題的解決方案。\\r
                \\r
                最後，學生在一致瞭解不同 Creative Commons 授權的限制後，便會學習怎樣使用 \<img> 標籤，把影像加入自己的網頁中。
            Project - Multi-Page Websites:
              name: 專案 - 多頁式網站
              description_student: 本課堂會說明超連結（hyperlink），這項功能可讓網頁開發人員將不同的頁面連結至一個網站。班級同學會把所有先前建立的頁面連結至一個專案，並為每頁建立導覽列，然後再把整個網站發佈到 Web 上。
              description_teacher: |-
                學習怎樣互相連結網頁後，學生最終將能夠發佈一直以來製作的網站。在本課堂中，學生會把所有先前建立的頁面連結至一個專案、建立新頁面，並為不同頁面建立導覽列，然後再把整個網站發佈到 Web 上。\\r
                \\r
            RGB Colors and Classes:
              name: RGB 色彩與類別
              description_student: 本課堂會說明類別（Classe）與自訂色彩。班級同學首先會學習如何使用 RGB（紅、綠、藍）值指定自訂色彩，然後將這些色彩套用於使用 CSS 類別的全新「四季」網頁。使用類別後，學生便可把更多樣式加入「四季」網頁，然後運用這些技巧修改自己個人網站的樣式。
              description_teacher: 在本課堂中，學生首先會學習如何使用 RGB（紅、綠、藍）值指定自訂色彩，然後將這些色彩套用於使用 CSS 類別的全新「四季」網頁。CSS 類別可讓網頁開發人員處理希望修改樣式的元素群組，且樣式與相同類型的其他元素不同。使用類別後，學生便可把更多樣式加入「四季」網頁，然後運用這些技巧修改自己個人網站的樣式。
            Project - Personal Portfolio Website:
              name: 專案 - 個人作品網站
              description_student: 在單元的最後幾天，班級裡的同學會為自己的網站做最終修改、與同伴每兩人一組取得回饋意見、檢閱評估指標，並將最終修改放在網站上。單元結束時，所有學生都會分享自己的專案，及分享開發的方式。
              description_teacher: 學生已在單元中花上大量時間製作自己的個人網站。在最後兩天，學生會為自己的網站做最終修改。他們會與同伴每兩人一組取得回饋意見、將最終修改放在網站上、檢閱評估指標並反思工作流程。單元結束時，學生會分享自己的專案，及概述他們獲得最終設計的流程。
            Headings:
              name: 標題
              description_student: 本課堂會繼續介紹 HTML 標籤，這次會介紹 header。班級會練習使用 header 標籤建立頁面與區域標題，並學習不同的 header 元素在預設下如何顯示。然後，班級同學便會計畫如何在個人網頁中組織內容（這些網頁會在單元內逐步建立），並開始專案的首頁。
              description_teacher: 在本課堂中，學生會繼續使用 HTML 構築網頁上的文字，這次則會製作標題（heading）。學生會學習不同的標題元素在預設下如何顯示，並練習使用這些元素建立頁面與區域標題。然後，學生會開始決定如何在自己的網頁中組織內容。在最後一個關卡中，學生會開始製作專案，並會在整個單元中繼續製作。
            CSD Post-Course Survey:
              name: CSD 課後問卷調查
          student_description: 在單元 2 中，你會學習如何在自己的網頁中製作並分享內容。決定你想與全世界分享哪些內容後，便會學習怎樣使用 HTML 與 CSS 構築自己的網頁。你也會練習各種寶貴的程式設計技巧，例如除錯與寫下註解。在單元結束時，你將可製作出屬於自己的個人網站，並可在網際網路上發佈。
        csp2-support:
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
            practice:
              display_name: 老師的做法
          lessons:
            Unit 2 Overview:
              name: 單元 2 概覽
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: '教程 1-2: 位元組、檔案大小和文字壓縮'
            'Lessons 3 - 4 : Encoding Images':
              name: 課堂 3 - 4：為圖像編碼
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 課堂 5 - 6：壓縮格式與開發自己的編碼方案
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 課堂 7 - 10：詮釋視覺化資料
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 課堂 11 - 15：以視覺化資料傳達資訊
            Group Work and Peer Learning:
              name: 小組工作與同伴學習
            Balancing Teachers and Tools:
              name: 在教師與工具間取得平衡
            Discovery Learning:
              name: 發現學習
            Measuring Student Learning:
              name: 衡量學生的學習
            AP Preparation and Support:
              name: AP 準備與支援
        csd4-2017:
          title: CSD 單元 4 - 設計流程 ('17-'18)
          description_short: 學習如何設計程式，以符合使用者的需要。
          description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：用戶為中心的設計
            csd4_2:
              display_name: 第 2 章︰ 應用程式原型
            csd_survey:
              display_name: 課後調查
          lessons:
            Analysis of Design:
              name: 設計分析
              description_student: 班級會瞭解多種不同的茶壺設計，以思考怎樣做出設計選擇，以及為甚麼做出這些選擇。班級同學會使用茶壺做為範例，瞭解使用者、使用者需要，以及他們使用的物件設計之間的關係。
              description_teacher: 單元會集中把問題解決內容分組，並為其他使用者開發產品。在單元開始時，學生首先會研究不同茶壺的設計。然後學生會分析每款茶壺，嘗試找出特定使用者的需要可能怎樣在其設計中反映出來。學生思考這些設計選擇，並嘗試把每款茶壺與一位潛在使用者配對後，便可以開始觀察：以使用者為本的方式設計產品（包括實際與數位數產），如何能讓產品更實用和易用。活動結束時，會請學生提議對其中一個茶壺做一些變更，讓茶壺更實用或更易用。
            Understanding Your User:
              name: 瞭解您的使用者
              description_student: 班級學生會以使用者設定檔，瞭解不同的使用者如何可能對各種產品做出反應。每位學生都會扮演不同人物，從而以其他人的角度體驗各種設計。
              description_teacher: 設計師需要瞭解使用者的需要，才可製作出實用的產品。本課堂鼓勵學生思考怎樣為其他人設計產品，方法是以使用者設定檔扮演其他人，並以扮演的角色對一系列產品做出反應。每位學生都會獲分配一個使用者設定檔，用於說明該角色，然後學生便會以該角色選擇恰當的產品、以批判方式評論產品設計，並建議設計上的改良。\\r
            Discovering Users:
              name: 發現用戶
            User-Centered Design Micro Activity:
              name: 以使用者為中心的微型活動
              description_student: 班級學生會分為各小組，然後使用設計流程獲得智慧衣著的構思。此活動是單元中提供的第一個練習機會，首先會集合思考，然後確定使用者，最後提出設計建議。本單元提供不同機會，讓學生練習設計解決方案，以解決其他人的需要。
              description_teacher: 本課堂會引導學生完成簡化版本的設計流程，學生會在整個單元中瞭解這個流程。學生首先會一起思考並列出智慧衣著的潛在使用者清單。然後，所有學生一起把這些構想分組至較廣泛的類別，然後每組選擇一個使用者類別。小組會重複這個程序，一起思考他們的使用者有哪些需要或關注事項，接著把這些需要分為不同類別，並選擇集中工作的一個類別。最後，學生會設計一件智慧衣著，過程中會使用剛才想出來的特定需要與關注事項，從而引導他們做出決策。在班級課堂結束時，學生會快速分享自己的決策流程，並接收相關回饋意見，瞭解他們的產品有多能夠解決所選擇的使用者需要。
            Designing for Social Impact:
              name: 以設計影響社會
            Conducting User-Centered Interviews:
              name: 以使用者為中心採訪
            Analyzing Interviews:
              name: 訪談中分析
            Presenting Your Design:
              name: 展示您的設計
            Designing Apps for Good:
              name: 設計良好的應用程式
              description_student: 開始應用程式設計專案時，班級裡的同學會分為各自的團隊，然後開始探索應用程式主題。一些對社會影響深遠的範例應用程式，會用來做為專案的啟發工具。
              description_teacher: 應用程式設計專案會持續到單元結束。開始專案時，學生首先會瞭解一些應用程式，這些程式由其他學生製作，設計用於對社會產生影響。然後，班級同學會複習問題解決流程中的定義、準備、嘗試和反思步驟，並制定對社會產生影響的應用程式之構思。最後，學生會組成專案團隊安排契約，指出團隊在開發應用程式時如何運作。
            Market Research:
              name: 市場研究
              description_student: 瞭解可能為相似使用者服務的現存應用程式，從而加深瞭解應用程式開發。每個小組會找出一些類似的應用程式，主題與自己製作的程式相同，並使用那些應用程式，協助重新定義學生所追求的應用程式構思。
              description_teacher: 在本課堂中，學生會研究一些應用程式，這些程式與他們打算製作的程式相似，從而更瞭解他們的使用者需要。學生會在團隊內工作、在線上搜尋其他應用程式，然後評估認為有趣的應用程式。在課堂結束時，每個團隊都會清楚瞭解自己想製作的應用程式類型，並進一步細分誰是他們的目標使用者。每個團隊會維護引用資訊清單，列出所有研究過的應用程式，並用於學生的期末專案展示中。
            Paper Prototypes:
              name: 紙上原型
              description_student: 紙上原型可讓開發人員快速測試自己的構思，然後再投放大量時間編寫程式。在本課堂中，各團隊會瞭解在 App Lab 中製作的一些範例應用程式，並使用那些應用程式中獲得的資訊，協助製作自己的應用程式紙上原型。
              description_teacher: 開始設計應用程式前，我們需要幫助學生仔細瞭解自己的期望。因為學生最終會在 App Lab 中製作這些應用程式的原型，若他們的構思和 App Lab 中容易製作原型的應用程式類型相近，就能夠有更充足的準備。團隊在開始這項研究時，首先會觀察一些範例應用程式，這些程式用於展示可使用 App Lab 製作的應用程式。然後，團隊可選擇 1 款（或更多）應用程式，做為自己的應用程式之基礎，之後會有一些時間討論自己的應用程式有哪些基本功能，並使用 3 英吋 x 5 英吋的索引卡開發紙上原型。\\r
            Prototype Testing:
              name: 原型測試
              description_student: 在本課堂中，團隊會與其他同學測試自己的紙上原型。1 位學生扮演電腦、1 位學生說出內容，餘下的學生則會觀察。此時團隊會立即就自己的應用程式獲得回饋意見，為下一個版本的應用程式原型提供實用資訊。
              description_teacher: 開發紙上原型的首要目的是，這樣做可快速測試和迭代，然後才開始編寫程式碼。本課堂的重點在於，讓團隊有機會先測試自己的原型，然後再使用 App Lab。團隊會制定一套計畫，從而和使用者一起測試，之後與班級裡（也可能是班級外）的數個其他同學執行原型測試。為了讓使用者測試原型，學生必須在測試中分配角色（「解說員」、「電腦」與「觀察者」），並準備一些問題，讓使用者在測試結束時回答。
            Digital Design:
              name: 數位設計
              description_student: 在開發、測試與收集紙上原型的回饋意見後，團隊便會移至 App Lab，建立應用程式的下一個迭代。每個團隊成員都會使用拖放設計模式，為自己團隊的應用程式製作至少 1 頁的內容，以回應在前一個回合測試時收到的回饋意見。
              description_teacher: 小組在協作開發應用程式的紙上原型後，便會以分治的方式，依據紙上原型來開始製作互動式數位版本。每位學生會各自使用 App Lab 的拖放設計模式，完成漸進式的技能訓練關卡，以學習怎樣製作紙上原型的數位版本。之後，每個小組成員都會在 App Lab 上，為自己的應用程式製作至少 1 頁內容，並在之後合併為單一個應用程式。
            Event Driven Programming:
              name: 事件驅動的程式設計
              description_student: 團隊會以前一個課堂中設計的不同畫面做為基礎，合併各畫面並加入單一個應用程式中。然後，學生可加入一些簡單的程式碼，使點擊按鈕後進入適當畫面。
              description_teacher: 在本課堂中，學生會以團隊方式，把前一個課堂中設計的各畫面螢幕合併到單一個應用程式中，然後便開始使用簡單事件（event）設計程式。學生會學習基本的事件驅動程式設計，方法是製作一些小應用程式，回應使用者點擊按鈕的事件。之後，小組成員會分享開發後的畫面，而所有小組成員都要匯入所有畫面到自己的應用程式中，然後再把按鈕和事件聯繫起來，製作成互動的應用程式。
            Basic App Functionality:
              name: 基本的 App 函式
              description_student: 各團隊會在自己的應用程式中加入少許修改與功能，然後測試應用程式。課堂會提供幾個例子，以展示可加入酷炫特色功能的簡單程式碼。
              description_teacher: 到了開發流程的這個階段，每位學生都應已完成紙上原型的數位版本 - 以按鈕互相連結的靜態畫面。對許多應用程式來說，這就是你需要開始與使用者一起測試的全部內容，但是本課堂將會讓學生有機會探索各種簡單方式，為自己的應用程式加入少許功能，然後再進入測試階段。在本課堂中介紹的程式設計概念，對順利完成專案**不是必要**的內容，並可在你的決定下略過。
            Testing the App:
              name: 測試應用程式
              description_student: 團隊會執行下一回合的使用者測試，這次會使用他們的互動式原型進行。在這個回合中取得的回饋意見，將會做為應用程式原型最終迭代版本的有用資訊。
              description_teacher: 在前一個課堂結束時，每個團隊都應製作了應用程式的最簡可行原型。本課堂之主要目的，是讓團隊與其他人實際測試應用程式，對象最好是應用程式預期的目標受眾，或是班級裡的其他團隊；至於團隊中的觀察者，則會在先前用於計畫階段的工作表上記錄結果。與測試紙上原型一樣，團隊首先會計畫用於特定情景，然後執行並觀察測試。
            Improving and Iterating:
              name: 改善和迭代
              description_student: 團隊會使用前一回合測試的回饋意見實作變更，以解決使用者的需要。每個團隊都會記錄希望加入的功能特色並安排優先順序，以及記錄需要解決的程式錯誤。
              description_teacher: 在這個階段中，團隊已開發了應用程式原型，並已經過多個迭代與多個回合的使用者測試。每位學生都有機會，依前一回合的使用者測試中取得的資訊與指導，計畫並實作團隊應用程式的改善內容。你可視可用時間與學生的興趣，執行恰當次數的測試與迭代週期。
            App Presentation:
              name: 應用程式簡報
              description_student: 每個團隊都會準備一次簡報，以「投售」自己開發的應用程式。這時正是時候分享各種拼搏與勝利經驗，以及計畫未來。
              description_teacher: 這個時候，團隊已研究一項個人與社會重要性的主題、開發並測試紙上原型與數位原型，並開始製作初始應用程式迭代，以結合新的功能特色，以及執行錯誤修正。現在正是時候，讓學生檢閱自己完成的東西，整合成連貫的簡報展示創作的進展。團隊會使用提供的簡報範本，準備展示應用程式開發流程，包括開始解決的問題、他們在測試後以甚麼方式加入回饋意見，以及對未來的計畫。
            User Interface and Prototype Testing:
              name: 使用者介面與原型測試
              description_student: 看看紙上原型可怎樣在編寫程式碼前，用來測試軟體並取得回饋意見。為了協助開發人員實現他們的構思，班級同學會測試並提供應用程式的紙上原型。
              description_teacher: 完成迷你設計專案後，學生會學習設計的下一個階段 - 製作產品原型，嘗試解決使用者的需要。學生會分為各自的團隊，研究稱為「Txt Ur Grndkdz」的聊天應用程式紙上原型。使用這個紙上原型，學生便有機會瞭解，簡單的紙上原型可怎樣用來快速測試構思與假設，然後才真正使用電腦。「使用」提供的原型後，學生便會開始找出各種方式，以改善下一個迭代的版本。
            Feedback and Prototypes:
              name: 回饋與原型
              description_student: 使用者一直在測試一款應用程式，他們會有大量回饋意見提供給開發人員。班級同學需要透徹瞭解他們的回饋意見、找出共同的主題與需要，然後開始修改原型，讓原型更能符合使用者的需要。
              description_teacher: 在本課堂中，學生會使用前一個課堂中紙上原型應用程式的「使用者」回饋意見，從而改良紙上原型的使用者介面。課堂開始時，學生會反思：設計師需要把人類的需要，以科技轉化為對使用者介面（或「體驗」）做出的變更。然後，學生會依據前一個課堂中製作的應用程式，收集使用者的回饋意見與請求。學生會分組把回饋意見分類，並找出有哪些方式，讓回饋意見中表達的需要，能夠在變更應用程式介面後解決。之後，學生會分組實作其中一些變更，以滿足他們找到的其中一種需要。
            Identifying User Needs:
              name: 確定使用者需求
              description_student: 直到這個階段為止，班級學生研究的使用者都位於遠端地點，而來自使用者僅有的資訊，皆使用文字或角色扮演來代表。現在，學生會每 2 人一組，互相依賴對方做為潛在的使用者，並會互相訪問，以找出可開發應用程式解決的需要。
              description_teacher: 直到這個階段為止，學生集中設計程式的使用者對象，某程度上都位於遠端地點。不論以集體思考、個人設定檔或是文字回饋意見交流，學生與最終使用者間一直都沒有直接的聯繫。設計這種距離感，是為了協助學生在思考使用者需要時跳出自己的思考框框；但是為了以更直接的方式取得實際使用者的資訊，學生便需要依賴同學。在本課堂中，學生會以 2 人一組，成為對方的使用者（與設計師），讓所有學生都可直接訪問最終使用者，並向對方提出問題，從而取得更多資訊瞭解自己的設計。每組學生會互相訪問對方，並嘗試找出一項能使用應用程式解決的特定需要。
            Project - Paper Prototype:
              name: 專案 - 紙上原型
              description_student: 班級同學會使用前一個課堂的訪談資訊，想出一些應用程式構思，以解決他們的使用者之需要。要表達這些構思，以及測試構思的效用，每位同學將會建立並測試自己的紙上原型。
              description_teacher: 每位學生會依據自己在前一個課堂的同伴訪談，想出一個解決使用者問題的應用程式構思。然後，學生會依據應用程式構思來開始製作紙上原型，在獨立的記事卡上繪畫「螢幕」。專案指南會引導學生完成流程，包括建立並由使用者測試應用程式，從而瞭解自製使用者介面的假設是否準確。
            Linking Screens:
              name: 連結不同畫面
              description_student: 團隊會以前一個課堂中設計的不同畫面做為基礎，合併各畫面並加入單一個應用程式中。然後，學生可加入一些簡單的程式碼，使點擊按鈕後進入適當畫面。
              description_teacher: 在本課堂中，團隊會把前一個課堂設計的各個畫面，合併為單一個應用程式，並使用程式碼互相連結起來。學生會繼續製作前一個課堂中開始製作的模型應用程式，從而學習基本的事件驅動程式設計。除了昨天學生設計的螢幕畫面外，學生也會學習怎樣製作額外的畫面，甚至匯入其他人製作的畫面。
            User Interfaces:
              name: 使用者介面
              description_student: 看看紙上原型可怎樣在編寫程式碼前，用來測試軟體並取得回饋意見。為了協助開發人員實現他們的構思，班級同學會測試並提供應用程式的紙上原型。
              description_teacher: 完成迷你設計專案後，學生會學習設計的下一個階段 - 製作產品原型，嘗試解決使用者的需要。學生會分為各自的團隊，研究稱為「Txt Ur Grndkdz」的聊天應用程式紙上原型。使用這個紙上原型，學生便有機會瞭解，簡單的紙上原型可怎樣用來快速測試構思與假設，然後才真正使用電腦。「使用」提供的原型後，學生便會開始找出各種方式，以改善下一個迭代的版本。
            Feedback and Testing:
              name: 回饋與測試
              description_student: 使用者一直在測試一款應用程式，他們會有大量回饋意見提供給開發人員。班級同學需要透徹瞭解他們的回饋意見、找出共同的主題與需要，然後開始修改原型，讓原型更能符合使用者的需要。
              description_teacher: 在本課堂中，學生會使用前一個課堂中紙上原型應用程式的「使用者」回饋意見，從而改良紙上原型的使用者介面。課堂開始時，學生會反思：設計師需要把人類的需要，以科技轉化為對使用者介面（或「體驗」）做出的變更。然後，學生會依據前一個課堂中製作的應用程式，收集使用者的回饋意見與請求。學生會分組把回饋意見分類，並找出有哪些方式，讓回饋意見中表達的需要，能夠在變更應用程式介面後解決。之後，學生會分組實作其中一些變更，以滿足他們找到的其中一種需要。
            Project - App Presentation:
              name: 專案 - 應用程式簡報
              description_student: 每個團隊都會準備一次簡報，以「投售」自己開發的應用程式。這時正是時候分享各種拼搏與勝利經驗，以及計畫未來。
              description_teacher: 這個時候，團隊已研究一項個人與社會重要性的主題、開發並測試紙上原型與數位原型，並開始製作初始應用程式迭代，以結合新的功能特色，以及執行錯誤修正。現在正是時候，讓學生檢閱自己完成的東西，整合成連貫的簡報展示創作的進展。團隊會使用提供的簡報範本，準備展示應用程式開發流程，包括開始解決的問題、他們在測試後以甚麼方式加入回饋意見，以及對未來的計畫。
            CSD Post-Course Survey:
              name: CSD 課後問卷調查
          student_description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
        minecraft:
          title: 一小時玩 Minecraft 設計師
          description_short: 在 Minecraft 上為動物等其他生物編寫程式，打造屬於你自己的世界。
          description: 在 Minecraft 上為動物等其他生物編寫程式，打造屬於你自己的世界。
          lessons:
            Minecraft Hour of Code Designer:
              name: 一小時玩 Minecraft 設計師
              description_student: 在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。
              description_teacher: 在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。
          student_description: 在 Minecraft 上為動物等其他生物編寫程式，打造屬於你自己的世界。
        flappy-impact-study:
          title: 帶調查的輕鬆代碼
          description_short: 在 10 分鐘內寫個你自己的像素鳥遊戲！
          description: 想要在 10 分鐘內寫出你自己的遊戲程式嗎？試試我們的「一小時玩 Flapply」教程！這個版本包含了課前和課後的問卷調查，以幫助我們持續改善一小時玩程式活動。麻煩要求你的班級在課堂結束前 10 分鐘移到課後問卷頁面。
          lessons:
            Pre Hour of Code Survey:
              name: 一小時玩程式 預前問卷
            Flappy Code:
              name: 像素鳥程式
            Post Hour of Code Survey:
              name: 一小時玩程式 課後問卷
          student_description: 想要在 10 分鐘內寫出你自己的遊戲程式嗎？試試我們的「一小時玩 Flapply」教程！這個版本包含了課前和課後的問卷調查，以幫助我們持續改善一小時玩程式活動。麻煩要求你的班級在課堂結束前 10 分鐘移到課後問卷頁面。
        coursea-draft:
          description_short: 給學齡前幼童的計算機科學介紹。
          lessons:
            'Debugging: Bugs in Codeville':
              name: 除錯：Codeville 中的錯誤
            'Persistence & Frustration: Stevie and the Marbles':
              name: 堅持與挫折：Stevie 和彈珠
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
            Learn to Drag and Drop:
              name: 學習滑鼠的拖放
            'Programming: Happy Maps':
              name: 程式設計：快樂地圖
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            Being Safe Online:
              name: 安全上網
            'Loops: Happy Loops':
              name: 迴圈（Loops） - 快樂迴圈
            Loops in Collector:
              name: 和收藏家學迴圈（Loop）
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            'Events: The Big Event':
              name: 事件：大事件
            Events in Play Lab:
              name: Play Lab 中的事件（Event）
            Fuzz Fiesta:
              name: 測試派對
            Going Places Safely:
              name: 安全的遨遊網路世界
            'Debugging: Unspotted Bugs':
              name: 除錯（Debug）- 沒被發現的蟲蟲
        courseb-draft:
          description_short: 給學齡前幼童的計算機科學介紹。
          lessons:
            'Debugging: Unspotted Bugs':
              name: 除錯（Debug）- 沒被發現的蟲蟲
            'Persistence & Frustration: Stevie and the Marbles':
              name: 堅持與挫折：Stevie 和彈珠
            Sequence & Algorithms:
              name: 序列與演算法
            Learn to Drag and Drop:
              name: 學習滑鼠的拖放
            Being Safe Online:
              name: 安全上網
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Collector:
              name: 和收藏家學迴圈（Loop）
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            'Events: The Big Event':
              name: 事件：大事件
            Events in Play Lab:
              name: Play Lab 中的事件（Event）
            More Computer Science:
              name: 更多計算機科學
            Keep it Private:
              name: 資料保密
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
            Your Digital Footprint:
              name: 你的數位足跡
        coursec-draft:
          description_short: 學習基本的計算機科學，創造屬於你自己的藝術、故事、遊戲作品。
          lessons:
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            'Real-life Algorithms: Paper Planes':
              name: 生活中的演算法 - 紙飛機
            Programming in Collector:
              name: 和收藏家學編程（Program）
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: Getting Loopy':
              name: 迴圈：學習迴圈
            Loops in Maze:
              name: 迷宮裡的迴圈
            'Events: The Big Event':
              name: 事件：大事件
            Puppy Introduction:
              name: 小狗 - 介紹
            Online Internet Safety:
              name: 線上網際網路安全
            Build a Flappy Game:
              name: 製作像素鳥遊戲
            More CS with Run Marco:
              name: 在跑吧，馬可（Run Marco）遊戲中學習更多 CS
            Binary Bracelets:
              name: 二進制手環
            Events in Play Lab:
              name: Play Lab 中的事件（Event）
            Your Digital Footprint:
              name: 你的數位足跡
            Building a Foundation:
              name: 打好基礎
            Screen Out the Mean:
              name: 防止壞蛋騷擾
            Debugging in Maze:
              name: 在迷宮中除錯
            Loops in Harvester:
              name: 與農夫一起學迴圈（Loops）
        coursed-draft:
          title: CS 基本原理：課程 D
          description_short: 學習基本的計算機科學，創造屬於你自己的藝術、故事、遊戲作品。
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 演算法：方格紙程式設計
            Events in Bounce:
              name: 彈板遊戲中的事件（Event）
            Nested Loops in Maze:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
            Nested Loops in Artist:
              name: 小藝術家裡的巢狀迴圈（Nested Loops）
            'Algorithms: Relay Programming':
              name: 演算法：接力程式設計
            Debugging in Bee:
              name: 在蜜蜂遊戲中除錯
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Conditionals with Bee:
              name: 與蜜蜂一起嘗試條件式（Conditional）
            Conditionals & Loops in Maze:
              name: 迷宮裡的條件式（Conditional）與迴圈（Loop）
            Conditionals & Loops in Farmer:
              name: 收割者遊戲中的條件式（Conditional）與迴圈（Loop）
            Impacts of Computing:
              name: 運算的影響
            More Programming with CS4FN:
              name: 更多 CS4FN 的程式設計學習資源
            Build a Play Lab Game:
              name: 製作 Play Lab 遊戲
            Conditionals in Bee:
              name: 在蜜蜂遊戲中的條件式（Conditional）
            Digital Citizenship:
              name: 數位公民
            'Unplugged: Binary':
              name: 不插電活動 - 二進制
            Artist Binary:
              name: 小藝術家 - 二進制（Binary）
            Nested Loops in Bee:
              name: 蜜蜂裡的巢狀迴圈（Nested Loops）
            Nested Loops:
              name: 巢狀迴圈
            Introduction:
              name: 介紹
            Debugging in Collector:
              name: 和收藏家學除錯（Debug）
        coursee-draft:
          description_short: 學習基本的計算機科學，創造屬於你自己的藝術、故事、遊戲作品。
          lesson_groups:
            content:
              display_name: 內容
            end_of_course_project:
              display_name: 課程結束專案
            extra_course_content:
              display_name: 額外的課程內容
          lessons:
            Digital Citizenship:
              name: 數位公民
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
            'Functions: Songwriting':
              name: 函式：作曲
            Functions in Artist:
              name: 藝術家遊戲中的函式（Function）
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions in Farmer:
              name: 農夫遊戲中的函式（Function）
            Determine the Concept in Bee:
              name: 在蜜蜂遊戲中釐清概念
            Build a Play Lab Game:
              name: 製作 Play Lab 遊戲
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Present Your Project:
              name: 說明你的專案
            More Programming with Scratch:
              name: 更多 Scratch 的編程學習資源
            Private and Personal Information:
              name: 隱私與個人資訊
            Internet:
              name: 網際網路 Internet
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
            Determine the Concept:
              name: 釐清概念
            Introduction:
              name: 介紹
            Conditionals:
              name: 條件判斷（Conditionals）
            'Algorithms: Dice Race':
              name: 演算法：骰子賽跑
        coursef-draft:
          description_short: 學習基本的計算機科學，創造屬於你自己的藝術、故事、遊戲作品。
          lesson_groups:
            content:
              display_name: 內容
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            Digital Citizenship:
              name: 數位公民
            Envelope Variables:
              name: 信封變數
            Variables in Play Lab:
              name: Play Lab 裡的變數
            Variables in Artist:
              name: 小藝術家裡的變數
            For Loop Fun:
              name: 有趣的計次迴圈
            For Loops in Bee:
              name: 蜜蜂遊戲中的 for（計數）迴圈
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
            'Functions with Parameters: Songwriting with Parameters':
              name: 函式帶參數：用參數（Parameter）寫歌
            Functions with Parameters in Artist:
              name: 在藝術家遊戲中學習函式帶參數（Parameter）
            Functions with Parameters in Bee:
              name: 在蜜蜂遊戲中學習函式帶參數（Parameter）
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Revise Your Project:
              name: 修改你的專案
            Presentation Your Project:
              name: 說明你的專案
            Try programming with Khan Academy:
              name: 嘗試在 Khan Academy 設計程式
            The Power of Words:
              name: 語言的力量
            Songwriting with Parameters:
              name: 用參數寫歌
            Introduction:
              name: 介紹
            Ice Age Play Lab:
              name: 冰原歷險記 Play Lab
            Conditionals and Functions in Bee:
              name: 蜜蜂遊戲中的條件式（Conditional）與函式（Function）
            'Algorithms: Tangrams':
              name: '演算法: 七巧板'
        classic-hoc-impact-study:
          title: 一小時玩程式 問卷調查
          description_short: 和許多有趣的角色一塊兒學學計算機科學基礎！
          description: 試試我們的基礎計算機科學吧，和憤怒鳥和植物大戰殭屍的主角們一起！這個版本包含課前和課後的問卷調查，以幫助我們持續改善一小時玩程式活動。麻煩要求你的班級在課堂結束前 10 分鐘移到課後問卷頁面。
          lessons:
            Pre Hour of Code Survey:
              name: 一小時玩程式 預前問卷
            Hour of Code 2013:
              name: 一小時玩程式 2013
            Post Hour of Code Survey:
              name: 一小時玩程式 課後問卷
        hoc-impact-study:
          title: 經典迷宮與調查
          description_short: 和許多有趣的角色一塊兒學學計算機科學基礎！
          description: 試試我們的基礎計算機科學吧，和憤怒鳥和植物大戰殭屍的主角們一起！這個版本包含課前和課後的問卷調查，以幫助我們持續改善一小時玩程式活動。麻煩要求你的班級在課堂結束前 10 分鐘移到課後問卷頁面。
          lessons:
            Pre Hour of Code Survey:
              name: 一小時玩程式 預前問卷
            Hour of Code 2013:
              name: 一小時玩程式 2013
            Post Hour of Code Survey:
              name: 一小時玩程式 課後問卷
          student_description: 試試我們的基礎計算機科學吧，和憤怒鳥和植物大戰殭屍的主角們一起！這個版本包含課前和課後的問卷調查，以幫助我們持續改善一小時玩程式活動。麻煩要求你的班級在課堂結束前 10 分鐘移到課後問卷頁面。
        sports:
          title: 編寫一個你自己的運動遊戲程式
          description_short: 搞個混搭的運動遊戲
          description: 搞個混搭的運動遊戲
          lessons:
            Sports:
              description_student: 有沒有想過，你可以在學校玩電子遊戲？在本課堂中，你將有機會製作自己的遊戲！
              description_teacher: 在這項線上活動中，學生會學習甚麼是事件（event），以及電腦怎樣在程式（例如電子遊戲）中使用事件。學生會在各種謎題中，讓程式，對事件做出反應（例如按下箭頭按鈕後）。在謎題結束時，學生將有機會以不同的速度與聲音自訂遊戲。
          student_description: 搞個混搭的運動遊戲
          name: 運動
        2016_sciencePD-phase2b:
          lessons:
            Welcome!:
              name: 歡迎！
            Review StarLogo Nova:
              name: 檢閱 StarLogo Nova
            Reviewing the Modules:
              name: 查看模組
            Advanced StarLogo Nova:
              name: 進階 StarLogo Nova
            Remixing Phases 1 and 2:
              name: 混合第1、2階段
            Thinking Ahead to Implementation:
              name: 預先進行實作構思
            Wrap-Up:
              name: 總結
        2016_sciencePD_phase2b:
          lessons:
            Welcome!:
              name: 歡迎！
            Review StarLogo Nova:
              name: 檢閱 StarLogo Nova
            Reviewing the Modules:
              name: 查看模組
            Advanced StarLogo Nova:
              name: 進階 StarLogo Nova
            Remixing Phases 1 and 2:
              name: 混合第1、2階段
            Thinking Ahead to Implementation:
              name: 預先進行實作構思
            Wrap-Up:
              name: 總結
        sciencepd3-2016:
          lessons:
            Welcome Back!:
              name: 歡迎回來！
            The TLO:
              name: The TLO
            Prep With Your Modules:
              name: 以你的模組做準備
        csp3-support:
          title: 單元 3 線上專業學習課程
          description_short: 教師專業學習課程 - CSP 單元 3
          description: 這是一套線上支援，安排了 CSP 專業訓練課程，讓教師可以為教授單元 3 作準備。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
            practice:
              display_name: 老師的做法
          lessons:
            Unit 3 Overview:
              name: 單元 5 概覽
            'Lessons 1 - 3: Algorithms':
              name: 課堂 1 - 3：演算法
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 課堂 4 - 6：程序抽象化與自上而下的設計
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 課堂 7 - 9：說明文件、簡單迴圈與隨機數字
            Group Work and Peer Learning:
              name: 小組工作與同伴學習
            Balancing Teachers and Tools:
              name: 在教師與工具間取得平衡
            Discovery Learning:
              name: 發現學習
            Measuring Student Learning:
              name: 衡量學生的學習
            AP Preparation and Support:
              name: AP 準備與支援
          student_description: 這是一套線上支援，安排了 CSP 專業訓練課程，讓教師可以為教授單元 3 作準備。
        csdgraveyard:
          lessons:
            new stage:
              name: 新的階段
            Introduction to Styling with CSS (2.7):
              name: 以 CSS 修改樣式簡介 (2.7)
            Introduction to Styling with CSS:
              name: 以 CSS 修改樣式簡介
            External Style Sheets:
              name: 外部樣式表
        csp4-support:
          title: 單元 4 線上專業學習課程
          description_short: 教師專業學習課程 - CSP 單元 4
          description: 這是一套線上支援，安排了 CSP 專業訓練課程，讓教師可以為教授單元 4 作準備。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
            practice:
              display_name: 老師的做法
          lessons:
            Unit 3 Overview:
              name: 單元 5 概覽
            'Lessons 1 - 2: Data in the Real World':
              name: 課堂 1 - 2：在現實生活中的資料
            'Lessons 1 - 4: Data in the Real World':
              name: 課堂 1 - 4：在現實生活中使用資料
            'Lessons 5 - 7: Security, Symmetric, and Asymmetric Encryption':
              name: 課堂 5 - 7：安全、對稱與非對稱加密
            'Lessons 8 - 9: Practice PT':
              name: 課堂 8 - 9：PT 練習
            Group Work and Peer Learning:
              name: 小組工作與同伴學習
            Balancing Teachers and Tools:
              name: 在教師與工具間取得平衡
            Discovery Learning:
              name: 發現學習
            Measuring Student Learning:
              name: 衡量學生的學習
            Unit 4 Overview:
              name: 單元 4 概覽
          student_description: 這是一套線上支援，安排了 CSP 專業訓練課程，讓教師可以為教授單元 4 作準備。
        sciencepd4:
          title: 科學中的 CS：第 4 部份
          description_short: 階段 3 學期反思研討會
          description: 階段 3 學期反思研討會
          lessons:
            Welcome!:
              name: 歡迎！
            Revisiting Complex Adaptive Systems:
              name: 回顧複雜適應系統
            Thinking About Implementation:
              name: 思考如何實作
            Wrap-Up:
              name: 總結
          student_description: 階段 3 學期反思研討會
        csp-ca-a:
          lessons:
            Commutative Assessment A:
              name: 交換評估 A
        science-pd-ol-pt-5:
          lessons:
            Welcome!:
              name: 歡迎！
            Earth Science Challenges:
              name: 地球科學挑戰
            Life Science Challenges:
              name: 生命科學挑戰
            Physical Science Challenges:
              name: 物理科學挑戰
            Wrap-Up:
              name: 總結
        csf2harvey:
          lesson_groups:
            end_of_course_project:
              display_name: 課程結束專案
            content:
              display_name: 內容
          lessons:
            'Functions: Songwriting':
              name: 函式：作曲
            Functions in Artist:
              name: 藝術家遊戲中的函式（Function）
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions in Farmer:
              name: 農夫遊戲中的函式（Function）
            Determine the Concept:
              name: 釐清概念
            Prepare your snowflake for 3D printing:
              name: 準備你的雪花，開始 3D 列印
            Binary:
              name: 二進制（Binary）
            Snowflakes:
              name: 雪花
        sciencepd5:
          title: 科學中的 CS：第 5 部份
          lessons:
            Welcome!:
              name: 歡迎！
            Earth Science Challenges:
              name: 地球科學挑戰
            Life Science Challenges:
              name: 生命科學挑戰
            Physical Science Challenges:
              name: 物理科學挑戰
            Wrap-Up:
              name: 總結
        csp5-support:
          title: 單元 5 線上專業學習課程
          description_short: 教師專業學習課程 - CSP 單元 5
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
            practice:
              display_name: 老師的做法
          lessons:
            Unit 5 Overview:
              name: 單元 5 概覽
            Event Driven Programming:
              name: 事件驅動的程式設計
            Variables and Strings:
              name: 變數與字串
            Conditionals and Boolean Logic:
              name: 條件式與布林邏輯
            While Loops and Introduction to Arrays:
              name: While（當）迴圈與陣列
            Processing Arrays and Functions with Return Values:
              name: 處理帶回傳值的陣列與函式
            Group Work and Peer Learning:
              name: 小組工作與同伴學習
            Balancing Teachers and Tools:
              name: 在教師與工具間取得平衡
            Discovery Learning:
              name: 發現學習
            Measuring Student Learning:
              name: 衡量學生的學習
          student_description: 這是一套線上支援，安排了 CSP 專業訓練課程，讓教師可以為教授單元 5 作準備。
        csppostap-2017:
          title: CSP AP 後 - 資料庫和在應用程式中使用資料 ('17-'18)
          description_short: 學習在 App Lab 應用程式中收集與使用資料。
          lesson_groups:
            content:
              display_name: 內容
            cspSurvey:
              display_name: 問卷
          lessons:
            Creating Javascript Objects:
              name: Javascript 物件的創建
            Permanent Data Storage:
              name: 永久資料儲存
            Reading Records:
              name: 紀錄的讀取
            Deleting Records:
              name: 刪除紀錄
            Updating Records:
              name: 更新紀錄
            Importing and Exporting Data:
              name: 匯入和匯出資料
            Visualizing Data:
              name: 資料視覺化
            Sample Apps:
              name: 應用程式範例
            Final Project:
              name: 期末專案
            Post-Course Survey:
              name: 課後調查
        unit6-csd-draft:
          lessons:
            UI and Input:
              name: 使用者介面（UI）和輸入（Input）
            Computing Innovations:
              name: 計算創新（Computing Innovations）
            Input Unplugged:
              name: 不插電介紹輸入（Input）
        gamelab-demo:
          lessons:
            Simple Sprite Movement:
              name: 簡單的角色動作
        csd6-draft:
          title: 實驗單元 6 修訂草案
          lesson_groups:
            csd6_1:
              display_name: 第 1 章：硬體輸出
            csd6_2:
              display_name: 第 2 章：建立物理原型
          lessons:
            UI and Input:
              name: 使用者介面（UI）和輸入（Input）
            Computing Innovations:
              name: 計算創新（Computing Innovations）
            Input Uplugged:
              name: 不插電介紹輸入（Input）
            The Circuit Playground:
              name: 電路（Circuit ）遊樂場
            Foo:
              name: Foo
            Lists:
              name: 清單
            Lights:
              name: 燈光
            Event Types:
              name: 事件類型
            Getters and Setters:
              name: Getter 與 Setter
            Input Unplugged:
              name: 不插電介紹輸入（Input）
            Timed Loop:
              name: 計時迴圈
            Timed Loops:
              name: 計時迴圈
            For Loops:
              name: 計次迴圈（For Loops）
            Physical Input:
              name: 實體輸入
            List and For Loops:
              name: 清單和計數迴圈
            'Project: Board Output':
              name: 專案：電路板輸出
            For Loops with UI and Board:
              name: 以 UI 與電路板學習 for（計數）迴圈
            Lists and For Loops:
              name: 清單和計數迴圈
            Analog Input:
              name: 模擬輸入
            Polling Events:
              name: 輪詢事件
            Sensor Applications:
              name: 傳感器應用
            'Project: Prototype an Innovation':
              name: 專案：原型創新
            Map:
              name: 地圖
            Board Events:
              name: 電路板事件
            'Project: Make a Game':
              name: 專案：創建一個遊戲
            Getting and Setting Properties:
              name: 取得與設定屬性
            The Program Design Process:
              name: 程式設計流程
            Getters:
              name: Getter
            Getting Properties:
              name: 取得屬性
            Designing Screens with Code:
              name: 以程式碼設計螢幕畫面
            Arrays:
              name: 陣列
            Making Music:
              name: 製作音樂
            Arrays and For Loops:
              name: 陣列和 for（計數）迴圈
            Circuits and Physical Prototypes:
              name: 電路與實體原型
            Accelerometer:
              name: 加速計
            Functions with Parameters:
              name: 函式帶參數
        workshop-gamelab:
          title: Game Lab 工作坊
          lessons:
            Introduction:
              name: 介紹
            Sprites:
              name: 角色
            Input:
              name: 輸入
            'Project: Interactive Card':
              name: 專案：互動式卡片
        csd5-draft:
          title: CSD5 草案
          lesson_groups:
            csd5_1:
              display_name: 第 1 章：表達信息
            csd5_2:
              display_name: 第 2 章：解決數據問題
          lessons:
            new stage:
              name: 新的階段
            Interpreting Data:
              name: 解譯數據
            Data in the Real World:
              name: 在現實生活中的資料
            Combining Representations:
              name: 組合表示
            Representing Images:
              name: 表示圖像
            Representation Matters:
              name: 表示事項
            Patterns and Representation:
              name: 模式和標記法
            ASCII and Binary Representation:
              name: ASCII 和 二進位表示法
            Representing Numbers Part 1:
              name: 數字表示法 第 1 部分
            Representing Numbers Part 2:
              name: 數字表示法 第 2 部分
            Project - Create a Representation:
              name: 專案 - 創建標記法
            Problem Solving and Data:
              name: 問題解決與數據
            Making Decisions with Data:
              name: 依數據來做決定
            Automating Data Decisions:
              name: 自動化數據決策
            Problem Solving with Big Data:
              name: 用大數據解決問題
            Project - Solve a Data Problem:
              name: 專案 - 解決數據問題
            Representing Numbers:
              name: 數字表示法
            8-bit Numbers:
              name: 8 位元數字
            Encryption:
              name: 加密
            Structuring Data:
              name: 資料的建構
        applab-1hour:
          title: App Lab 一小時工作坊
          description_audience: 國中和高中學生
          description: 這個工作坊是要讓學生在一小時中學會 app lab 的基本操作。即便是不同的的計算機科學背景的學生也能夠參與其中創造樂趣。
          lessons:
            App Lab Workshop:
              name: App Lab 工作坊
            Digital Design:
              name: 數位設計
            Event Driven Programming:
              name: 事件驅動的程式設計
            Basic App Functionality:
              name: 基本的 App 函式
            Event Types:
              name: 事件類型
            Getters and Setters:
              name: Getter 與 Setter
            Room Escape:
              name: 逃出房間
            Extra:
              name: 額外的
          student_description: 這個工作坊是要讓學生在一小時中學會 app lab 的基本操作。即便是不同的的計算機科學背景的學生也能夠參與其中創造樂趣。
        applab-2hour:
          title: App Lab 2 一小時工作坊
          description_audience: 國中和高中學生
          description: 這個工作坊是要讓學生在二小時中學會 app lab 的基本操作。即便是不同的的計算機科學背景的學生也能夠參與其中創造樂趣。
          lessons:
            new stage:
              name: 新的階段
            Digital Design:
              name: 數位設計
            Event Driven Programming:
              name: 事件驅動的程式設計
            Basic App Functionality:
              name: 基本的 App 函式
            Event Types:
              name: 事件類型
            Getters and Setters:
              name: Getter 與 Setter
          student_description: 這個工作坊是要讓學生在二小時中學會 app lab 的基本操作。即便是不同的的計算機科學背景的學生也能夠參與其中創造樂趣。
        coursed-ramp:
          title: CS 基本原理：課程 D
          lessons:
            Introduction:
              name: 介紹
        workshop-maker:
          title: Maker Toolkit 工作坊
          description_audience: Maker Toolkit 工作坊的老師
          description_short: Maker Toolkit 工作坊的階段規劃
          description: 這是要提供給 Maker 親自動手做的工作坊的階段規劃，不是工具使用或是計算機科學概念的教程，內容是介紹 App Lab 和 Maker Toolkit 的應用廣度。
          lessons:
            App Lab Basics:
              name: App Lab 基礎
            The Circuit Playground:
              name: 電路（Circuit ）遊樂場
            Physical Input:
              name: 實體輸入
            Analog Input:
              name: 模擬輸入
          student_description: 這是要提供給 Maker 親自動手做的工作坊的階段規劃，不是工具使用或是計算機科學概念的教程，內容是介紹 App Lab 和 Maker Toolkit 的應用廣度。
        coursee-ramp:
          title: coursee-ramp
          lessons:
            Introduction:
              name: 介紹
            Conditionals:
              name: 條件判斷（Conditionals）
            'Real Life Algorithms: Dice Race':
              name: 生活中的演算法 - 擲骰子比賽
        csd6-2017:
          title: CSD 單元 6 - 物理運算 ('17-'18)
          description_short: 在實體裝置上開發程式
          lesson_groups:
            csd6_1:
              display_name: 第 1 章：硬體輸出
            csd6_2:
              display_name: 第 2 章：建立物理原型
            csd_survey:
              display_name: 課後調查
          lessons:
            Computing Innovations:
              name: 計算創新（Computing Innovations）
              description_student: 探索多種最新且創新的運算平台，讓你加深瞭解電腦可以製作成甚麼樣子。
              description_teacher: 在這個本課程的最後一個單元中，學生首先會做一些研究，瞭解電腦運算的有趣創新成果。本課堂會讓學生瞭解更多電腦運算的形式（電腦的外觀看起來怎樣），以及受電腦運算影響的範疇。在本單元的後期，學生會在開發自己的運算裝置時，回顧本課堂中看到的裝置。
            Input Unplugged:
              name: 不插電介紹輸入（Input）
              description_student: 體驗應用程式可接收使用者輸入的 2 種不同方式，並進一步學習在 App Lab 中使用的事件驅動程式設計模型。
              description_teacher: 為了準備更深入探討使用 App Lab 設計程式，學生會學習在 Game Lab 與 App Lab 中編寫的幾種不同程式，會怎樣處理使用者的輸入。比較範例應用程式中看到的不同方法後，學生會分組練習兩種不同的輸入模型（無限迴圈與非同步事件中的條件式），從而加深瞭解它們的工作方式。
            Event Types:
              name: 事件類型
              description_student: 重溫在 App Lab 中設計程式的基礎，並學習新的事件類型，從而可在你的程式中使用。
              description_teacher: 在本課堂中，學生會重溫單元 4 裡學到以 App Lab 製作應用程式的材料，以準備在本單元中回到 App Lab。你應修訂這次重溫的內容，從而最能滿足學生的需要，並加強學生使用 App Lab 設計程式的體驗與熟悉程度。除了重溫外，學生也會試驗各種可能未學習過的新事件類型。
            Getters and Setters:
              name: Getter 與 Setter
              description_student: 班級學生在閱讀與變更應用程式畫面上的內容後，便會開始製作僅需要單一個畫面的應用程式。即使只有一個畫面，這些技術也可做出大量使者互動與功能。
              description_teacher: 在單元 4 中，學生學習了在 App Lab 中使用一種非常簡單的應用程式開發方法，大部分互動都會以另一個畫面完成。為了增加學生可製作的應用程式類型，並鼓勵學生以全新方式，思考使用者怎樣與應用程式互動，我們會介紹「getter」和「setter」的概念。這兩種命令可取得與設定（或變更）各種設計元素的內容與屬性。在本課堂中，學生會製作僅需要一個畫面的簡單應用程式，內容會以 getter 和 setter 變更。
            The Circuit Playground:
              name: 電路（Circuit ）遊樂場
              description_student: 開始學習 Circuit Playground - 這款電路板將會在本單元的餘下部分中不斷使用。請使用 App Lab 開發應用程式，程式會以 Circuit Playground 做為輸出工具。
              description_teacher: 在本課堂中，學生會有第一次機會編寫運用 Circuit Playground 的程式。學生首先會目視檢查電路板，並假設有哪些可能的功能，然後便會移至線上，學習編寫可控制 LED 的應用程式。把 App Lab 畫面與 Circuit Playground 結合後，學生就可逐漸開始整合電路板（輸出裝置）上的各種元素，同時依賴 App Lab 供使用者輸入。
            Lists:
              name: 清單
              description_student: 學習清單可怎樣以單一個變數名稱來儲存多個值。
              description_teacher: 清單（一般也稱為陣列）是一種變數類型，可同時儲存多個值。在本課堂中，學生會學習建立清單，以單一個變數儲存一系列相關的值。建立自己的清單後，學生便會學習不同方法，使用其索引在清單中擷取特定或隨機的值。
            Lights:
              name: 燈光
              description_student: 班級同學會運用前一個課堂中學到的清單概念編寫程式，以控制 Circuit Playground 上的十色 LED。
              description_teacher: 在 Circuit Playground 中，外圍邊緣包含 10 種顏色的 LED。這些 LED 可使用程式碼，做為「colorLeds」清單予以存取。學生會以前一個課堂中對清單的認識做為基礎，從而編寫程式，從清單中存取並控制彩色 LED。
            For Loops:
              name: 計次迴圈（For Loops）
              description_student: 班級學生會學習使用 _for（計數）迴圈_執行重複指令：首先會以方格控制「機器人」，然後在 App Lab 中執行。
              description_teacher: 在本課堂中，學生會學習 _for（計數）迴圈_，做為以指定次數重複某些程式碼的方式。學生首先會進行不插電活動，使用 for（計數）迴圈讓機器人在方格中移動。完成後，學生便會把學到的知識用於 App Lab 中，在 App Lab 使用 _for 迴圈_ 編寫依賴迭代的程式。
            Lists and For Loops:
              name: 清單和計數迴圈
              description_student: 合併_清單_與_for（計數）迴圈_ 後，你就能夠編寫相關的程式碼，影響清單裡的每項元素，不管清單有多長。班級學生會使用這個結構編寫程式，以處理清單中的所有元素，包括彩色 LED 清單。
              description_teacher: 使用 _for（計數）迴圈_來重複迭代陣列中的所有元素，在所有程式語言中都是非常實用的建構。在本課堂中，學生會結合所學到的清單與 for（計數）迴圈的知識，以開始學習這種模式。學生會使用 for 迴圈，每次執行清單上的每個元素，而不用為每個元素編寫程式碼。課堂結束時，學生會把這項知識與「colorLed」清單應用到電路板上。
            Timed Loops:
              name: 計時迴圈
              description_student: 在本課堂中，我們會以學生對 for（計數）迴圈的認識為基礎，學習更成熟的結構，這種結構稱為 timed（計時）迴圈。與 for 迴圈不同，你可控制計時迴圈重複的速度，而其他程式碼（例如事件處理器）可在迴圈中的迭代之間執行。這種做法可讓我們製作有趣的無限重複動畫，同時仍然可讓其他程式碼同時執行。
              description_teacher: 在本課堂中，我們會以學生對 _for（計數）迴圈_的認識為基礎，學習更成熟的結構，這種結構稱為 _timed（計時）迴圈_。與 _for 迴圈_不同，你可控制_計時迴圈_重複的速度，而其他程式碼（例如事件處理器）可在迴圈中的迭代之間執行。這種做法可讓我們製作有趣的無限重複動畫，同時仍然可讓其他程式碼同時執行。
            'Project: Board Output':
              name: 專案：電路板輸出
              description_student: 學生會運用第 1 章中學到的知識，開發由自己設計的應用程式，這款程式可使用電路板來輸出資訊。
              description_teacher: 學生會運用第 1 章中學到的知識，開發由自己設計的應用程式，這款程式可使用電路板來輸出資訊。
            Physical Input:
              name: 實體輸入
              description_student: 班級學生會使用硬體按鈕與開關開發程式，這個程式會使用 Circuit Playground 做為輸入。
              description_teacher: 學生最初會將 Circuit Playground 視為僅限輸出的裝置。本課堂會讓學生改為同時以 Circuit Playground 做為輸入和輸出的工具。學生首先會以硬體按鈕與開關，讓硬體按鈕與開關播放旋律，從而學習使用「onBoardEvent()」（與「onEvent()」相似），從他們的 Circuit Playground 中取得輸入內容。
            Analog Input:
              name: 模擬輸入
              description_student: 學習 Circuit Playground 上的類比輸入，並撰寫程式，經由感測器回應工作環境。
              description_teacher: 在本課堂中，學生會學習 3 個類比感測器（聲音、燈光與溫度）可怎樣用來編寫程式，回應環境中的變更。使用這些感測器，就標誌著使用者與程式互動的轉變。應用程式的使用者以感測器做為輸入，就不用直接與程式互動，或是在互動時不用實際瞭解裡面正在做些甚麼。
            Sensor Applications:
              name: 傳感器應用
              description_student: 嘗試 3 個小型應用程式，以加深瞭解前一個課堂中使用感測器的方式。
              description_teacher: 為了跟進學生在前一個課堂中學習的感測器用法，我們會展示 3 款應用程式，每款程式都依賴不同的感測器運作。這 3 款應用程式可做為學生的起點，協助製作之後的期末專案。
            'Project: Prototype an Innovation':
              name: 專案：原型創新
              description_student: 運用你在本課程中所學到的一切，開發出自己設計的創新運算裝置。
              description_teacher: 在課程的這個期末專案中，學生會以團隊方式開發並測試一款創新運算裝置的原型，這個原型以 Circuit Playground 為基礎。各小組會使用電路板上可用的輸入與輸出來製作程式，讓程式可與使用者進行有趣且獨一無二的互動。
            Designing Screens with Code:
              name: 以程式碼設計螢幕畫面
              description_student: 班級學生在閱讀與變更應用程式畫面上的內容後，便會開始製作僅需要單一個畫面的應用程式。即使只有一個畫面，這些技術也可做出大量使者互動與功能。
              description_teacher: 在單元 4 中，學生學習了在 App Lab 中使用一種非常簡單的應用程式開發方法，大部分互動都會以另一個畫面完成。為了增加學生可製作的應用程式類型，並鼓勵學生以全新方式，思考使用者怎樣與應用程式互動，我們會介紹「setProperty()」積木。此命令可用來設計各種 UI 元素的內容與屬性，讓學生能夠編寫程式，更新單一個畫面上的資訊，而不用手動建立重複的畫面。在本課堂中，學生會製作僅需要一個畫面的簡單應用程式，內容會以「setProperty()」變更。
            Board Events:
              name: 電路板事件
              description_student: 班級學生會使用硬體按鈕與開關開發程式，這個程式會使用 Circuit Playground 做為輸入。
              description_teacher: 學生最初會將 Circuit Playground 視為僅限輸出的裝置。本課堂會讓學生改為同時以 Circuit Playground 做為輸入和輸出的工具。學生首先會以硬體按鈕與開關，讓硬體按鈕與開關播放旋律，從而學習使用「onBoardEvent()」（與「onEvent()」相似），從他們的 Circuit Playground 中取得輸入內容。
            Getting Properties:
              name: 取得屬性
              description_student: 本課堂會向學生介紹 getProperty 積木，讓學生可使用程式碼存取不同元素的屬性。學生首先會練習使用積木，使用者在各種介面元素中輸入了甚麼。然後，學生會一起使用 getProperty 和 setProperty，並結合計數器模式，讓元素在畫面上移動。課堂也會介紹新的畫面元件：滑桿，以及新的事件觸發器：onChange。
              description_teacher: 本課堂會向學生介紹「getProperty」積木，讓學生可使用程式碼存取不同元素的屬性。學生首先會練習使用積木，使用者在各種介面元素中輸入了甚麼。然後，學生會一起使用「getProperty」和「setProperty」，並結合計數器模式，讓元素在畫面上移動。課堂也會介紹新的畫面元件：滑桿，以及新的事件觸發器：「onChange」。
            The Program Design Process:
              name: 程式設計流程
              description_student: 本課堂會向學生介紹相關流程，他們將會在整個單元中，使用這個流程設計自己的程式。這項流程會以一個專案指南為中心，指南中會要求學生繪製畫面草圖、找出要使用的 Circuit Playground 元件、定義變數與描述事件，然後才開始設計程式。這項流程與單元 3 中使用的遊戲設計流程。在本課堂中，學生首先會玩一款拔河風格的遊戲，遊戲期間程式碼會被隱藏。學生會展開討論，指出他們認為需使用哪些電路板元件、事件與變數製作這款程式。學生會收到完整的專案指南，裡面會說明實作專案的一種方式。然後，學生會在不同的關卡中瞭解這項流程。在課堂結束時，學生將有機會改良程式，使之成為自己的作品。
              description_teacher: 本課堂會向學生介紹相關流程，他們將會在整個單元中，使用這個流程設計自己的程式。這項流程會以一個專案指南為中心，指南中會要求學生繪製畫面草圖、找出要使用的 Circuit Playground 元件、定義變數與描述事件，然後才開始設計程式。這項流程與單元 3 中使用的遊戲設計流程。在本課堂中，學生首先會玩一款拔河風格的遊戲，遊戲期間程式碼會被隱藏。學生會展開討論，指出他們認為需使用哪些電路板元件、事件與變數製作這款程式。學生會收到完整的專案指南，裡面會說明實作專案的一種方式。然後，學生會在不同的關卡中瞭解這項流程。在課堂結束時，學生將有機會改良程式，使之成為自己的作品。
            'Project: Make a Game':
              name: 專案：創建一個遊戲
              description_student: 學生會運用第 1 章中學到的知識，開發由自己設計的應用程式，這款程式可使用電路板來輸出資訊。
              description_teacher: 學生會運用第 1 章中學到的知識，開發由自己設計的應用程式，這款程式可使用電路板來輸出資訊。
            Arrays:
              name: 陣列
              description_student: 學習清單可怎樣以單一個變數名稱來儲存多個值。
              description_teacher: 陣列是項目的有序的集合，通常含有相同的項目類型。在本課堂中，學生會學習各種方式，使用其索引存取清單中指定或隨機的值。然後，學生會學習怎樣存取 colorLEDs 陣列，以控制 Circuit Playground 上的彩色 LED 行為。學生會控制 LED 的顏色與強度，然後使用所學到的知識編寫燈光模式程式，從而在 Circuit Playground 上進行燈光表演。
            Making Music:
              name: 製作音樂
              description_student: 在本課堂中，學生會盡情使用蜂鳴器，製作聲音、音符與歌曲。學生首先會簡單檢閱蜂鳴器的頻率與時間長度參數，然後學習音符的概念。音符可讓學生限制自己選擇用於西方音樂的頻率，並提供個抽象層，協助他們瞭解哪些頻率在結合起來後可能會變得動聽。學生能夠在蜂鳴器中播放音符後，便會使用陣列放置與播放一系列的音符，從而組成簡單的歌曲。
              description_teacher: 在本課堂中，學生會盡情使用蜂鳴器，製作聲音、音符與歌曲。學生首先會簡單檢閱蜂鳴器的頻率與時間長度參數，然後學習音符的概念。音符可讓學生限制自己選擇用於西方音樂的頻率，並提供個抽象層，協助他們瞭解哪些頻率在結合起來後可能會變得動聽。學生能夠在蜂鳴器中播放音符後，便會使用陣列放置與播放一系列的音符，從而組成簡單的歌曲。
            Arrays and For Loops:
              name: 陣列和 for（計數）迴圈
              description_student: 合併_清單_與_for（計數）迴圈_ 後，你就能夠編寫相關的程式碼，影響清單裡的每項元素，不管清單有多長。班級學生會使用這個結構編寫程式，以處理清單中的所有元素，包括彩色 LED 清單。
              description_teacher: 使用 _for（計數）迴圈_來重複迭代陣列中的所有元素，在所有程式語言中都是非常實用的建構。在本課堂中，學生會學習 for（計數）如何用於重複程式碼的基礎，然後將它結合到所學到的陣列知識中，編寫程式處理陣列中的所有元素。學生會使用 for 迴圈，每次執行清單上的每個元素，而不用為每個元素編寫程式碼。課堂結束時，學生會把這項知識與「colorLed」清單應用到電路板上，以製作一款應用程式，讓使用者每次點擊一個按鈕後，便能變更所有 LED。
            Accelerometer:
              name: 加速計
              description_student: 在本課堂中，學生會學習加速計和它的功能。他們會熟習事件與屬性，並製作多個利用加速計的程式，這些程式和現實世界中可能遇到過的程式相似。
              description_teacher: 在本課堂中，學生會學習加速計和它的功能。他們會熟習事件與屬性，並製作多個利用加速計的程式，這些程式和現實世界中可能遇到過的程式相似。
            Functions with Parameters:
              name: 函式帶參數
              description_student: 課堂開始時，學生首先會快速檢閱參數，期間會使用最近看過的 App Lab 積木。然後，學生會參閱一些參數範例（這些參數在 App Lab 裡由使用者建立的函式中）、為自己建立與呼叫函式，並以此控制畫面上的多種元素。之後，學生會使用 for（計數）迴圈讓一個陣列迭代，將每項元素傳入一個函式中。最後，學生會運用所學到的知識製作摘星遊戲。
              description_teacher: 課堂開始時，學生首先會快速檢閱參數，期間會使用最近看過的 App Lab 積木。然後，學生會參閱一些參數範例（這些參數在 App Lab 裡由使用者建立的函式中）、為自己建立與呼叫函式，並以此控制畫面上的多種元素。之後，學生會使用 for（計數）迴圈讓一個陣列迭代，將每項元素傳入一個函式中。最後，學生會運用所學到的知識製作摘星遊戲。
            Circuits and Physical Prototypes:
              name: 電路與實體原型
              description_student: 使用便宜又容易找到的材料為簡單電路佈線，製作出實體原型。
              description_teacher: 為了準備這一章的期末專案，學生會學習怎樣開發包含 Circuit Playground 的實物原型。學生會使用範例專案計畫指南，學習怎樣編寫一些簡單電路和製作原型，從而可使用便宜且容易找到的材料（例如紙板與膠帶）展現出預期產品的設計。
            Innovations in Computing:
              name: 運算上的創新
            Arrays and Color LEDs:
              name: 陣列與彩色 LED
            Innovations in Computing_:
              name: 運算上的創新
              description_student: 探索多種最新且創新的運算平台，讓你加深瞭解電腦可以製作成甚麼樣子。
              description_teacher: 在這個本課程的最後一個單元中，學生首先會做一些研究，瞭解電腦運算的有趣創新成果。本課堂會讓學生瞭解更多電腦運算的形式（電腦的外觀看起來怎樣），以及受電腦運算影響的範疇。在本單元的後期，學生會在開發自己的運算裝置時，回顧本課堂中看到的裝置。
            Designing Screens with Code_:
              name: 以程式碼設計螢幕畫面
              description_student: 班級學生在閱讀與變更應用程式畫面上的內容後，便會開始製作僅需要單一個畫面的應用程式。即使只有一個畫面，這些技術也可做出大量使者互動與功能。
              description_teacher: 在單元 4 中，學生學習了在 App Lab 中使用一種非常簡單的應用程式開發方法，大部分互動都會以另一個畫面完成。為了增加學生可製作的應用程式類型，並鼓勵學生以全新方式，思考使用者怎樣與應用程式互動，我們會介紹「setProperty()」積木。此命令可用來設計各種 UI 元素的內容與屬性，讓學生能夠編寫程式，更新單一個畫面上的資訊，而不用手動建立重複的畫面。在本課堂中，學生會製作僅需要一個畫面的簡單應用程式，內容會以「setProperty()」變更。
            The Circuit Playground_:
              name: 電路（Circuit ）遊樂場
              description_student: 開始學習 Circuit Playground - 這款電路板將會在本單元的餘下部分中不斷使用。請使用 App Lab 開發應用程式，程式會以 Circuit Playground 做為輸出工具。
              description_teacher: 在本課堂中，學生會有第一次機會編寫運用 Circuit Playground 的程式。學生首先會目視檢查電路板，並假設有哪些可能的功能，然後便會移至線上，學習編寫可控制 LED 的應用程式。把 App Lab 畫面與 Circuit Playground 結合後，學生就可逐漸開始整合電路板（輸出裝置）上的各種元素，同時依賴 App Lab 供使用者輸入。
            Input Unplugged_:
              name: 不插電介紹輸入（Input）
              description_student: 體驗應用程式可接收使用者輸入的 2 種不同方式，並進一步學習在 App Lab 中使用的事件驅動程式設計模型。
              description_teacher: 為了準備更深入探討使用 App Lab 設計程式，學生會學習在 Game Lab 與 App Lab 中編寫的幾種不同程式，會怎樣處理使用者的輸入。比較範例應用程式中看到的不同方法後，學生會分組練習兩種不同的輸入模型（無限迴圈與非同步事件中的條件式），從而加深瞭解它們的工作方式。
            Board Events_:
              name: 電路板事件
              description_student: 班級學生會使用硬體按鈕與開關開發程式，這個程式會使用 Circuit Playground 做為輸入。
              description_teacher: 學生最初會將 Circuit Playground 視為僅限輸出的裝置。本課堂會讓學生改為同時以 Circuit Playground 做為輸入和輸出的工具。學生首先會以硬體按鈕與開關，讓硬體按鈕與開關播放旋律，從而學習使用「onBoardEvent()」（與「onEvent()」相似），從他們的 Circuit Playground 中取得輸入內容。
            Getting Properties_:
              name: 取得屬性
              description_student: 本課堂會向學生介紹 getProperty 積木，讓學生可使用程式碼存取不同元素的屬性。學生首先會練習使用積木，使用者在各種介面元素中輸入了甚麼。然後，學生會一起使用 getProperty 和 setProperty，並結合計數器模式，讓元素在畫面上移動。課堂也會介紹新的畫面元件：滑桿，以及新的事件觸發器：onChange。
              description_teacher: 本課堂會向學生介紹「getProperty」積木，讓學生可使用程式碼存取不同元素的屬性。學生首先會練習使用積木，使用者在各種介面元素中輸入了甚麼。然後，學生會一起使用「getProperty」和「setProperty」，並結合計數器模式，讓元素在畫面上移動。課堂也會介紹新的畫面元件：滑桿，以及新的事件觸發器：「onChange」。
            Analog Input_:
              name: 模擬輸入
              description_student: 學習 Circuit Playground 上的類比輸入，並撰寫程式，經由感測器回應工作環境。
              description_teacher: 在本課堂中，學生會學習 3 個類比感測器（聲音、燈光與溫度）可怎樣用來編寫程式，回應環境中的變更。使用這些感測器，就標誌著使用者與程式互動的轉變。應用程式的使用者以感測器做為輸入，就不用直接與程式互動，或是在互動時不用實際瞭解裡面正在做些甚麼。
            The Program Design Process_:
              name: 程式設計流程
              description_student: 本課堂會向學生介紹相關流程，他們將會在整個單元中，使用這個流程設計自己的程式。這項流程會以一個專案指南為中心，指南中會要求學生繪製畫面草圖、找出要使用的 Circuit Playground 元件、定義變數與描述事件，然後才開始設計程式。這項流程與單元 3 中使用的遊戲設計流程。在本課堂中，學生首先會玩一款拔河風格的遊戲，遊戲期間程式碼會被隱藏。學生會展開討論，指出他們認為需使用哪些電路板元件、事件與變數製作這款程式。學生會收到完整的專案指南，裡面會說明實作專案的一種方式。然後，學生會在不同的關卡中瞭解這項流程。在課堂結束時，學生將有機會改良程式，使之成為自己的作品。
              description_teacher: 本課堂會向學生介紹相關流程，他們將會在整個單元中，使用這個流程設計自己的程式。這項流程會以一個專案指南為中心，指南中會要求學生繪製畫面草圖、找出要使用的 Circuit Playground 元件、定義變數與描述事件，然後才開始設計程式。這項流程與單元 3 中使用的遊戲設計流程。在本課堂中，學生首先會玩一款拔河風格的遊戲，遊戲期間程式碼會被隱藏。學生會展開討論，指出他們認為需使用哪些電路板元件、事件與變數製作這款程式。學生會收到完整的專案指南，裡面會說明實作專案的一種方式。然後，學生會在不同的關卡中瞭解這項流程。在課堂結束時，學生將有機會改良程式，使之成為自己的作品。
            Arrays and Color LEDs_:
              name: 陣列與彩色 LED
            'Project: Make a Game_':
              name: 專案：創建一個遊戲
            Making Music_:
              name: 製作音樂
              description_student: 在本課堂中，學生會盡情使用蜂鳴器，製作聲音、音符與歌曲。學生首先會簡單檢閱蜂鳴器的頻率與時間長度參數，然後學習音符的概念。音符可讓學生限制自己選擇用於西方音樂的頻率，並提供個抽象層，協助他們瞭解哪些頻率在結合起來後可能會變得動聽。學生能夠在蜂鳴器中播放音符後，便會使用陣列放置與播放一系列的音符，從而組成簡單的歌曲。
              description_teacher: 在本課堂中，學生會盡情使用蜂鳴器，製作聲音、音符與歌曲。學生首先會簡單檢閱蜂鳴器的頻率與時間長度參數，然後學習音符的概念。音符可讓學生限制自己選擇用於西方音樂的頻率，並提供個抽象層，協助他們瞭解哪些頻率在結合起來後可能會變得動聽。學生能夠在蜂鳴器中播放音符後，便會使用陣列放置與播放一系列的音符，從而組成簡單的歌曲。
            Arrays and For Loops_:
              name: 陣列和 for（計數）迴圈
              description_student: 合併_清單_與_for（計數）迴圈_ 後，你就能夠編寫相關的程式碼，影響清單裡的每項元素，不管清單有多長。班級學生會使用這個結構編寫程式，以處理清單中的所有元素，包括彩色 LED 清單。
              description_teacher: 使用 _for（計數）迴圈_來重複迭代陣列中的所有元素，在所有程式語言中都是非常實用的建構。在本課堂中，學生會學習 for（計數）如何用於重複程式碼的基礎，然後將它結合到所學到的陣列知識中，編寫程式處理陣列中的所有元素。學生會使用 for 迴圈，每次執行清單上的每個元素，而不用為每個元素編寫程式碼。課堂結束時，學生會把這項知識與「colorLed」清單應用到電路板上，以製作一款應用程式，讓使用者每次點擊一個按鈕後，便能變更所有 LED。
            Accelerometer_:
              name: 加速計
              description_student: 在本課堂中，學生會學習加速計和它的功能。他們會熟習事件與屬性，並製作多個利用加速計的程式，這些程式和現實世界中可能遇到過的程式相似。
              description_teacher: 在本課堂中，學生會學習加速計和它的功能。他們會熟習事件與屬性，並製作多個利用加速計的程式，這些程式和現實世界中可能遇到過的程式相似。
            Functions with Parameters_:
              name: 函式帶參數
              description_student: 課堂開始時，學生首先會快速檢閱參數，期間會使用最近看過的 App Lab 積木。然後，學生會參閱一些參數範例（這些參數在 App Lab 裡由使用者建立的函式中）、為自己建立與呼叫函式，並以此控制畫面上的多種元素。之後，學生會使用 for（計數）迴圈讓一個陣列迭代，將每項元素傳入一個函式中。最後，學生會運用所學到的知識製作摘星遊戲。
              description_teacher: 課堂開始時，學生首先會快速檢閱參數，期間會使用最近看過的 App Lab 積木。然後，學生會參閱一些參數範例（這些參數在 App Lab 裡由使用者建立的函式中）、為自己建立與呼叫函式，並以此控制畫面上的多種元素。之後，學生會使用 for（計數）迴圈讓一個陣列迭代，將每項元素傳入一個函式中。最後，學生會運用所學到的知識製作摘星遊戲。
            Circuits and Physical Prototypes_:
              name: 電路與實體原型
              description_student: 使用便宜又容易找到的材料為簡單電路佈線，製作出實體原型。
              description_teacher: 為了準備這一章的期末專案，學生會學習怎樣開發包含 Circuit Playground 的實物原型。學生會使用範例專案計畫指南，學習怎樣編寫一些簡單電路和製作原型，從而可使用便宜且容易找到的材料（例如紙板與膠帶）展現出預期產品的設計。
            'Project: Prototype an Innovation_':
              name: 專案：原型創新
              description_student: 運用你在本課程中所學到的一切，開發出自己設計的創新運算裝置。
              description_teacher: 在課程的這個期末專案中，學生會以團隊方式開發並測試一款創新運算裝置的原型，這個原型以 Circuit Playground 為基礎。各小組會使用電路板上可用的輸入與輸出來製作程式，讓程式可與使用者進行有趣且獨一無二的互動。
            'Project: Make a Game__':
              name: 專案：創建一個遊戲
              description_student: 學生會運用第 1 章中學到的知識，開發由自己設計的應用程式，這款程式可使用電路板來輸出資訊。
              description_teacher: 學生會運用第 1 章中學到的知識，開發由自己設計的應用程式，這款程式可使用電路板來輸出資訊。
            Arrays and Color LEDs__:
              name: 陣列與彩色 LED
              description_student: 學習清單可怎樣以單一個變數名稱來儲存多個值。
              description_teacher: 陣列是項目的有序的集合，通常含有相同的項目類型。在本課堂中，學生會學習各種方式，使用其索引存取清單中指定或隨機的值。然後，學生會學習怎樣存取 colorLEDs 陣列，以控制 Circuit Playground 上的彩色 LED 行為。學生會控制 LED 的顏色與強度，然後使用所學到的知識編寫燈光模式程式，從而在 Circuit Playground 上進行燈光表演。
            CSD Post-Course Survey:
              name: CSD 課後問卷調查
        csd3-draft:
          title: CSD 單元 3 - 程式設計：動畫與遊戲
          description_short: 動畫和遊戲
          lessons:
            Shapes and Randomess:
              name: 形狀與隨機性
            Shapes and Randomness:
              name: 形狀與隨機性
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
            Variables:
              name: 變數
            Programming for Entertainment:
              name: 娛樂用途的程式設計
            Sprites:
              name: 角色
            Plotting Shapes:
              name: 幾何繪圖
            Sprite Movement:
              name: 角色動作
            The Draw Loop:
              name: draw（繪圖）迴圈
            The Counter Pattern Unplugged:
              name: 計數器模式（不插電）
            Booleans and Conditionals:
              name: 布林值和條件判斷
            Conditionals:
              name: 條件判斷（Conditionals）
            Taking Input:
              name: 取得輸入資料
            Complex Conditionals:
              name: 複合條件判斷
            'Project: Interactive Card':
              name: 專案：互動式卡片
            Keyboard Input:
              name: 鍵盤輸入
            Other Forms of Input:
              name: 其他輸入形式
            Velocity:
              name: 速度
            Collision Detection:
              name: 碰撞檢測
            Complex Sprite Movement:
              name: 複合角色動作
            Collisions:
              name: 碰撞
            Functions:
              name: 函式
            The Game Design Process:
              name: 遊戲設計流程
            Using the Game Design Process:
              name: 使用遊戲設計流程
            'Project: Design a Game':
              name: 專案：設計一個遊戲
        csd5-2017:
          description_short: 瞭解大家怎樣使用電腦解決資料問題。
          description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
          lesson_groups:
            csd5_1:
              display_name: 第 1 章：表達信息
            csd5_2:
              display_name: 第 2 章：解決數據問題
            csd_survey:
              display_name: 課後調查
          lessons:
            Representation Matters:
              name: 表示事項
              description_student: 第一個課堂會概述甚麼是資料，以及資料怎樣用來解決問題。各小組會使用一套資料集，為不同要求的人製作一系列的餐點建議。之後，各小組會比較他們的回答，並討論以不同的方式表示餐點資料，會怎樣影響學生解決不同問題的能力。
              description_teacher: 在資料單元的第一個課堂中，學生會大概瞭解甚麼是資料，以及資料怎樣用來解決問題。學生首先會展開簡短討論，從而普遍瞭解資料是甚麼。然後學生會分為各小組，並使用資料集為不同要求的人製作一系列的餐點建議。每個小組都可選擇以不同方式表示餐點（圖片、食譜、菜單、營養），從而讓不同方式有各自的優點。之後，各小組會比較他們的回答，並討論以不同的方式表示餐點資料，會怎樣影響學生解決不同問題的能力。
            Patterns and Representation:
              name: 模式和標記法
              description_student: 本課堂會更深入瞭解需要以甚麼來建立表示系統。各小組會建立相關系統，從而能夠僅使用一疊卡片，便可表示字母表中的任何字母；然後，學生會使用這些系統建立訊息，並與其他小組交換，從而確保系統像預期般正常運作。之後，班級同學會討論不同工作系統間的共通點，同時瞭解有許多可能的實用解決方案。
              description_teacher: 在本課堂中，學生會建立自己的系統，用於表示資訊。他們首先會一起想出目前用於表示「是-否」回覆的所有不同系統。然後，學生會分為小組工作建立系統，從而僅使用一疊卡片就可表示字母表中的任何字母。使用的卡片有 6 種不同的圖畫內容（6 種動物、6 種顏色等），而為了表示所有字母，學生將需要使用不同卡片的圖樣（pattern）表示每個字母。然後，學生會使用自己的系統建立訊息，並與其他小組交換，從而確保系統像預期般正常運作。在總結討論中，班級學生會檢閱不同系統的優點和缺點。他們會討論不同工作系統間的共通點，同時瞭解有許多可能的實用解決方案，而且重點是所有人都使用相同的任意系統互相通訊。
            ASCII and Binary Representation:
              name: ASCII 和 二進位表示法
              description_student: 本課堂會介紹一款為資訊編碼的正式二進制系統 ASCII，用於表示字母與其他字元。課堂開始時，教師會介紹：電腦必須使用「開」或「關」表示資訊。然後，班級同學會學習 ASCII 系統，以二進制符號表示文字，並練習使用這個系統，之後再使用 ASCII 為自己的訊息編碼。
              description_teacher: 在本課堂中，學生會學習第一款為資訊編碼的正式二進制系統 ASCII，用於表示字母與其他字元。課堂開始時，教師會介紹：電腦必須使用「開」或「關」表示資訊。然後，學生會學習 ASCII 系統，以二進制符號表示文字，並練習使用這個系統，之後再使用 ASCII 為自己的訊息編碼。課堂結束時會進行匯報對話，從而協助結合活動中的關鍵學習目標。
            Representing Images:
              name: 表示圖像
              description_student: 本課堂會繼續學習二進制表示系統，這次會使用圖像來說明。班級同學會學習把圖像分開為多個「正方形」或「像素」的概念，而這些像素可獨立開關，以構成整個圖像。使用圖像化小工具完成少許挑戰後，班級同學便會把圖像表示系統，和前一個課堂學到的文字表示系統互相聯繫起來。
              description_teacher: 在本課堂中，學生會學習電腦怎樣表示圖像。課堂開始時，學生會思考一項挑戰：把所有複雜的圖像轉化為二進制圖樣。學生首先會看到一系列圖像，瞭解這個轉換過程，接著學習把圖像分開為多個正方形或「像素」的概念，而這些像素可獨立開關，以構成整個圖像。然後，學生會使用圖像化小工具完成少許挑戰，從而繪畫出黑白圖像。謎題中會提出一些挑戰，讓學生以這種方式表示圖像。在總結課堂時，學生會把圖像表示系統，和前一個課堂學到的文字表示系統互相聯繫起來。
            Representing Numbers Part 1:
              name: 數字表示法 第 1 部分
            Representing Numbers Part 2:
              name: 數字表示法 第 2 部分
            Combining Representations:
              name: 組合表示
              description_student: 本課堂會合併全部 3 種類型的二進制表示系統（ASCII 字元、二進制數字和圖像），讓學生能夠在某項記錄中，為更複雜的資訊類型編碼。學生會觀察一系列位元，然後需要把位元解碼。在這個過程中，班級學生會學到一個概念：瞭解二進制資訊，就需要同時瞭解使用中的系統，以及加密後的資訊是甚麼意思。
              description_teacher: 在本課堂中，學生會運用全部 3 種類型的二進制表示系統（ASCII 字元、二進制數字和圖像），從而為某項記錄解碼。學生會觀察一系列位元，然後需要把位元解碼。在這個過程中，學生會學到一個概念：為了明白二進制資訊，他們就必須同時瞭解使用中的系統，以及加密後的資訊是甚麼意思。之後，學生便會依據提供的結構，為表示寵物的記錄解碼。
            Project - Create a Representation:
              name: 專案 - 創建標記法
              description_student: 學生會使用這一章所學到的二進制表示系統來設計結構，以表示他們度過的美好一天。在確定相關記錄應擷取哪些資訊後，班級同學便會決定一張儲存多個位元資訊的打孔卡，會以怎樣的方式詮釋，以表示裡面的資訊。之後，所有同學都會使用學到的 ASCII、二進制數字與圖像格式，來表示他們美好的一天，並嘗試解碼同伴美好的一天過得怎樣。
              description_teacher: 在本課堂中，學生會使用這一章所學到的二進制表示系統來設計結構，以表示他們度過的美好一天。他們首先會寫下簡短說明，描述他們美好的一天，然後與同伴一起檢閱內容，找出他們認為電腦會擷取的關鍵資訊。同學會全班一起決定，一張儲存多個位元資訊的打孔卡，會以怎樣的方式詮釋，以表示裡面的資訊。接著，學生會使用學到的 ASCII、二進制數字與圖像格式，來表示他們美好的一天。之後學生會交換打孔卡，並嘗試解碼同伴美好的一天過得怎樣。課堂會以反思來結束。
            Problem Solving and Data:
              name: 問題解決與數據
              description_student: 本課堂會說明可怎樣量身制定問題解決流程，以處理特別是資料方面的問題。班級同學的任務，是決定某個城市最需要投放資源在哪個方面。他們必須找出並使用線上找到的資料支持這個決定。
              description_teacher: 在本課堂中，學生會使用課程初期學到的問題解決流程，以解決資料問題。檢閱流程後，班級同學便要做出決定：某個城市應該建立圖書館、寵物庇護所還是消防局。學生會以團隊方式工作，從線上收集資訊，協助決定應建造甚麼，然後使用這些資訊撰寫理據，從而說服市議會接納他們的選擇。然後他們會把完成的事情，對映至整個課程中一直使用的問題解決流程中，並比較一般問題解決流程和專門應用至資料問題時有甚麼異同。
            Making Decisions with Data:
              name: 依數據來做決定
              description_student: 本課堂讓學生有機會練習前一個課堂介紹的資料問題解決流程。不是所有問題都有正確答案，而在某些情況下，班級同學可以並應該確定應收集更多資料。課堂結束時，會討論不同人可怎樣從相同的資料中得出不同的結論，或是收集不同的資料可能怎樣影響了他們做出的決定。
              description_teacher: 在本課堂中，學生會練習依據某些問題使用資料去做決定，這些問題專門設計讓中學生感到熟悉。學生會分組工作，討論他們會怎樣使用收到的資料做出決定，然後全球討論他們的最後決定。不是所有問題都有正確答案，而在某些情況下，學生可以並應該確定應收集更多資料。課堂結束時，會討論不同人可怎樣從相同的資料中得出不同的結論，或是收集不同的資料可能怎樣影響了他們做出的決定。
            Interpreting Data:
              name: 解譯數據
              description_student: 課堂開始時，學生首先會瞭解一份蛋糕偏好問卷調查，讓受訪者指定一款蛋糕與一款糖霜。他們會討論：瞭解蛋糕和糖霜偏好間的關係，可怎樣幫助他們更能決定建議哪種組合。然後，學生會學習交叉表，讓他們可用圖表展示不同偏好間的關係。他們會運用這項技巧找出偏好問卷調查中的關係，然後一起思考這項流程有助解決哪些不同類型的問題。
              description_teacher: 課堂開始時，學生首先會瞭解一份蛋糕偏好問卷調查，讓受訪者指定一款蛋糕與一款糖霜。他們會討論：瞭解蛋糕和糖霜偏好間的關係，可怎樣幫助他們更能決定建議哪種組合。然後，學生會學習交叉表，讓他們可用圖表展示不同偏好間的關係。他們會運用這項技巧找出偏好問卷調查中的關係，然後一起思考這項流程有助解決哪些不同類型的問題。
            Automating Data Decisions:
              name: 自動化數據決策
              description_student: 在本課堂中，學生會看看簡單範例，瞭解電腦可怎樣用來完成資料問題解決流程的決策步驗驟。學生需要完成的任務是：建立可建議度假地點的演算法。然後，學生會訂立規則或演算法，讓電腦可用來自動做決定。學生會分享各自的規則，以及他們的規則會以類別資料做出哪些選擇。然後，學生會使用自己的規則與同學的資料，測試他們的規則所做的決定是否與人類相同。本課堂結束時，會討論使用電腦把問題解決流程自動化有哪些優點和缺點。
              description_teacher: 在本課堂中，學生會看看簡單範例，瞭解電腦可怎樣用來完成資料問題解決流程的決策步驗驟。學生需要完成的任務是：建立可建議度假地點的演算法。然後，學生會訂立規則或演算法，讓電腦可用來自動做決定。學生會分享各自的規則，以及他們的規則會以類別資料做出哪些選擇。然後，學生會使用自己的規則與同學的資料，測試他們的規則所做的決定是否與人類相同。本課堂結束時，會討論使用電腦把問題解決流程自動化有哪些優點和缺點。
            Problem Solving with Big Data:
              name: 用大數據解決問題
              description_student: 本課堂講解機構怎樣收集與使用資料，以解決現實世界的問題。班級同學會觀察 3 個可使用資料來解決的情景，並一起思考希望以哪些資料類型解決，以及他們可怎樣收集資料。每個情景也會包含一段影片，瞭解一項真實世界的服務，曾經以資料解決類似的問題。
              description_teacher: 在本課堂中，學生會瞭解機構怎樣收集與使用資料，以解決現實世界的問題。課堂首會快速回顧前一個課堂中學到的資料問題解決流程。然後，學生會觀察 3 個可使用資料來解決的情景，並一起思考希望以哪些資料類型解決，以及他們可怎樣收集資料。每個問題的設計，都用於反映現實世界中存在的服務。集體思考後，學生會觀看一段影片，瞭解一項真實世界的服務， 然後寫下筆記，指出現實世界的服務會收集甚麼資料，還有怎樣使用這些資料。課堂結束時，學生會記錄資料由使用者主動提供、被動記錄下來，還是由感測器來收集。
            Project - Solve a Data Problem:
              name: 專案 - 解決數據問題
              description_student: 本單元結束時，班級同學會設計各種方式使用資料，以做出一些建議或預測，從而協助解決問題。在最初的數個步驟中，學生會一起思考問題、從事簡單研究，然後定義一個所選的問題。之後，他們會決定希望收集哪種類型的資料、怎樣收集與怎樣使用，然後再交換回饋意見，並進行期末簡報。
              description_teacher: 本單元結束時，學生會依據同學提供並分析的資料，設計一個建議引擎。觀察一款建議引擎應用程式範例後，學生會遵從專案指南完成這項橫跨多天的活動。在最初的數個步驟中，學生會選擇希望協助使用者做出甚麼選擇、需要為建議引擎提供哪些資料、編寫問卷調查，以及收集同學選擇的資訊。然後，學生會詮釋資料，並使用學到的知識建立建議引擎。最後，他們會以自己的演算法向同學提出建議。學生會進行同儕審查，並對專案做出所有必要的更新，然後準備向全班展示的簡報。
            Representing Numbers:
              name: 數字表示法
              description_student: 本課堂介紹二進制數字系統。班級同學會收到一組卡片，這些卡片表示二進制（base-2）數字系統中的位值。然後，學生要上下翻轉卡片，以「開啟」或「關閉」卡片，並觀察不同圖樣的結果。最後，圖樣會延伸為通用的 4 位元系統。
              description_teacher: 在本課堂中，學生會學習二進制數字系統。學生會收到一組卡片，這些卡片會以由點構成的組合，來表示二進制（base-2）數字系統中的位值。然後，學生要上下翻轉卡片，以「開啟」或「關閉」卡片，並觀察不同圖樣的結果。最後，學生需要把圖樣延伸為通用的 4 位元系統。
            8-bit Numbers:
              name: 8 位元數字
              description_student: 學生會學習二進制數字的概念，並說明他們需要知道每個數字的位元長度，以解碼一系列的位元。然後，學生會製作「翻配多」（flippy-do）- 這是紙張控制工具，可幫助學生加密與解密 8 位元的數字（0-255）。使用「翻配多」練習後，學生會討論可怎樣把這項標準延伸至其他類型的資料。
              description_teacher: 學生會學習二進制數字的概念，並說明他們需要知道每個數字的位元長度，以解碼一系列的位元。然後，學生會製作「翻配多」（flippy-do）- 這是紙張控制工具，可幫助學生加密與解密 8 位元的數字（0-255）。使用「翻配多」練習後，學生會討論可怎樣把這項標準延伸至其他類型的資料。
            Encryption:
              name: 加密
              description_student: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
              description_teacher: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
            Structuring Data:
              name: 資料的建構
              description_student: 本課堂會更深入探討資料詮釋，包括原始資料集清理與視覺化。班級同學首先會瞭解，以不同方式展示資料，可怎樣協助受眾更易理解資料。學生觀察清理與視覺化可怎樣協助大眾做出更好的決定後，便會研究這個流程中的哪些部分可自動化，哪些部分需要人類介入。
              description_teacher: 在本課堂中，學生會更深入探討資料收集與詮釋，包括資料清理與視覺化。學生首先會瞭解，以不同方式展示資料，可怎樣協助受眾更易理解資料，然後再讓自己的資料製作視覺化內容。學生必須使用首選薄餅配料的訪問結果，決定需要怎樣處理無法輕易加入所選視覺化方案的資料。最後，學生會研究這個流程中的哪些部分可由電腦自動化，哪些部分則需要人類做決定。
            Keeping Data Secret:
              name: 讓資料保密
              description_student: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
              description_teacher: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
            CSD Post-Course Survey:
              name: CSD 課後問卷調查
          student_description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
        csd3-old:
          title: CSD 單元 3（已過時）
          description_short: 2016/2017 年 CSD 單元 3 草案
          description: 這是 CSD 單元 3 的原始草案，在 2016 年秋季發行。除非你有學生目前正在使用本課程，否則你應轉為使用本單元的更新版本：studio.code.org/s/csd3-2019 - 此原始版本將繼續保留至 2017 年 7 月 1 日。
          lessons:
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
            Draw Loop and Randomization:
              name: 繪圖迴圈和隨機取值
            Variables Unplugged:
              name: 變數（不插電）
            Variables and Animation:
              name: 變數與動畫
            Sprites and Properties:
              name: 角色與屬性
            Sprites and Images:
              name: 角色和圖像
            Booleans and Conditionals:
              name: 布林值和條件判斷
            Conditionals and Keyboard Input:
              name: 條件判斷與鍵盤輸入
            Complex Conditionals:
              name: 複合條件判斷
            'Project: Interactive Card':
              name: 專案：互動式卡片
            Velocity:
              name: 速度
            Collision Detection:
              name: 碰撞檢測
            Complex Sprite Movement:
              name: 複合角色動作
            Collisions:
              name: 碰撞
            Functions:
              name: 函式
            The Game Design Process:
              name: 遊戲設計流程
            Using the Game Design Process:
              name: 使用遊戲設計流程
            'Project: Design a Game':
              name: 專案：設計一個遊戲
          student_description: 這是 CSD 單元 3 的原始草案，在 2016 年秋季發行。除非你有學生目前正在使用本課程，否則你應轉為使用本單元的更新版本：studio.code.org/s/csd3-2019 - 此原始版本將繼續保留至 2017 年 7 月 1 日。
        csd1-old:
          title: CSD 單元 1（已過時）
          description_short: 2016/2017 年 CSD 單元 1 草案
          description: 這是 CSD 單元 1 的原始版本，首次發佈日期為 2016 年秋季。此版本已由更新版單元取代：studio.code.org/s/csd1-2019，並會繼續保留至 2017 年 7 月 1 日。
          lessons:
            Intro to Problem Solving:
              name: 問題解決能力的介紹
            The Problem Solving Process:
              name: 問題解決流程
            Exploring Problem Solving:
              name: 問題解決探索
            What is a Computer?:
              name: 電腦是什麼？
            Representing Information:
              name: 表示資訊
            Processing with Bits:
              name: 使用位元處理
            Human vs Computer Processing:
              name: 人類與電腦處理比較
            Processing with Apps:
              name: 以應用程式處理
            'Project: Apps and Problem Solving':
              name: 專案：App 與問題解決
          student_description: 這是 CSD 單元 1 的原始版本，首次發佈日期為 2016 年秋季。此版本已由更新版單元取代：studio.code.org/s/csd1-2019，並會繼續保留至 2017 年 7 月 1 日。
        csd2-draft:
          lessons:
            Text on the Web:
              name: 站台上的文本
            Digital Footprint:
              name: 數位足跡
            Images in HTML:
              name: 在 HTML 中的圖像
            Exploring Websites:
              name: 探索不同網站
            'Websites for Expression ':
              name: 建立網站，表達內容
            Intro to HTML:
              name: HTML 簡介
            Headers and Lists:
              name: Header 和清單
            Intellectual Property:
              name: 知識產權
            Images:
              name: 圖像
            Clean Code and Debugging:
              name: 乾淨代碼和偵錯調試
            Project - Multi-Page Websites:
              name: 專案 - 多頁式網站
            Styling Text with CSS:
              name: 透過 CSS 修改文字樣式
            Styling Elements with CSS:
              name: 透過 CSS 修改元素樣式
            Sources and Search Engines:
              name: 來源和搜尋引擎
            RGB Colors and Classes:
              name: RGB 色彩與類別
            Project - Personal Portfolio Website:
              name: 專案 - 個人作品網站
            Headers:
              name: Header
            Intellectual Property and Images:
              name: 知慧財產權與圖像
            Lists:
              name: 清單
        csd1-draft:
          lessons:
            Intro to Problem Solving:
              name: 問題解決能力的介紹
            The Problem Solving Process:
              name: 問題解決流程
            Exploring Problem Solving:
              name: 問題解決探索
            What is a Computer?:
              name: 電腦是什麼？
            Inputs and Outputs:
              name: 輸入與輸出
            Processing:
              name: 處理
            Storage:
              name: 儲存
            Apps and Problem Solving:
              name: App 與問題解決
            Project - Propose an App:
              name: 專案 - 提出應用程式建議
            Input and Output:
              name: 輸入與輸出
        csd3-chapters:
          lessons:
            Programming for Entertainment:
              name: 娛樂用途的程式設計
            Plotting Shapes:
              name: 幾何繪圖
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
            Shapes and Randomness:
              name: 形狀與隨機性
            Variables:
              name: 變數
            Sprites:
              name: 角色
            The Draw Loop:
              name: draw（繪圖）迴圈
            The Counter Pattern Unplugged:
              name: 計數器模式（不插電）
            Sprite Movement:
              name: 角色動作
            Booleans and Conditionals:
              name: 布林值和條件判斷
            Conditionals:
              name: 條件判斷（Conditionals）
            Keyboard Input:
              name: 鍵盤輸入
            Other Forms of Input:
              name: 其他輸入形式
            'Project: Interactive Card':
              name: 專案：互動式卡片
            Velocity:
              name: 速度
            Collision Detection:
              name: 碰撞檢測
            Complex Sprite Movement:
              name: 複合角色動作
            Collisions:
              name: 碰撞
            Functions:
              name: 函式
            The Game Design Process:
              name: 遊戲設計流程
            Using the Game Design Process:
              name: 使用遊戲設計流程
            'Project: Design a Game':
              name: 專案：設計一個遊戲
            'null':
              name: 'null'
            temp:
              name: temp
        coursef-ramp:
          lessons:
            'Algorithms: Tangrams':
              name: '演算法: 七巧板'
            Introduction:
              name: 介紹
            Ice Age Play Lab:
              name: 冰原歷險記 Play Lab
            Functions in Farmer:
              name: 農夫遊戲中的函式（Function）
            Conditionals and Functions in Bee:
              name: 蜜蜂遊戲中的條件式（Conditional）與函式（Function）
        csppostsurvey-staging:
          title: "[已過時] CSP 課後問卷調查集結地"
          description: 已移至 /s/csp-post-survey。在 05.05.17 後銷毀
          lessons:
            CSP Student Post Survey Staging:
              name: CSP 學生課後問卷調查集結
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
        fmscsd3preview:
          title: CSD - 用 Game Lab 繪圖
          description_audience: 法爾茅斯中學 (Falmouth Middle School) (Mike Harvey)
          lessons:
            Plotting Shapes:
              name: 幾何繪圖
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
        csppostsurvey:
          title: CSP 學生課後問卷調查
          description_audience: CSP 學生
          description_short: CSP 學生課後問卷調查
          description: 歡迎來到 Code.org 電腦科學原理課後問卷調查。本問卷調查需要大約 10 分鐘完成。你的回覆將會保持私密與匿名。
          lessons:
            CSP Student Post-Course Survey:
              name: CSP 學生課後問卷調查
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
        csp-post-survey:
          title: CSP 學生課後問卷調查 ('17-'18)
          description_audience: CSP 學生
          description_short: CSP 學生課後問卷調查
          description: 歡迎來到 Code.org 電腦科學原理課後問卷調查。本問卷調查需要大約 15 分鐘完成。你的回覆將會保持私密與匿名 -- 你的老師可看見全班的匿名匯總結果。這些結果對你的老師與 Code.org 都非常重要，目的是維持和改善課程的品質。感謝你的寶貴時間與關注。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
          lessons:
            CSP Student Post-Course Survey:
              name: CSP 學生課後問卷調查
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
            CSP Post-Course Survey:
              name: CSP 課後問卷調查
            CSP post survey 2018 staging:
              name: 2018 年 CSP 課後問卷調查集結
            CSP post-course survey:
              name: CSP 課後問卷調查
          student_description: 歡迎來到 Code.org 電腦科學原理課後問卷調查。本問卷調查需要大約 15 分鐘完成。你的回覆將會保持私密與匿名 -- 你的老師可看見全班的匿名匯總結果。這些結果對你的老師與 Code.org 都非常重要，目的是維持和改善課程的品質。感謝你的寶貴時間與關注。
        public-key-cryptography:
          title: 公開金鑰加密小工具
          lessons:
            Public Key Crypto Widgets:
              name: 公開金鑰加密小工具
        csd2-old:
          title: CSD 單元 2（已過時）
          description_short: Web 開發
          lessons:
            Quality Websites:
              name: 有品質的網站
            Website Design:
              name: 網站設計
            Describing Web pages:
              name: 網頁描述
            Text on the Web:
              name: 站台上的文本
            Images in HTML:
              name: 在 HTML 中的圖像
            Clean Code and Debugging:
              name: 乾淨代碼和偵錯調試
            Styling Text with CSS:
              name: 透過 CSS 修改文字樣式
            Styling Elements with CSS:
              name: 透過 CSS 修改元素樣式
            Multi-Page Websites:
              name: 多頁式網站
            Classes:
              name: 類別
            Peer Review:
              name: 同儕審查
            Digital Footprint:
              name: 數位足跡
            Publishing a Website:
              name: 網站的發佈
            Sources and Search Engines:
              name: 來源和搜尋引擎
            Intellectual Property:
              name: 知識產權
            'Project: Personal Portfolio Website':
              name: 專案：個人作品網站
        artist-and-bb8:
          lessons:
            B8 New BB8:
              name: B8 全新的 BB8
            c8 to BB8:
              name: c8 至 BB8
            B8 BB8:
              name: B8 BB8
            C9 Artist Loops:
              name: C9 藝術家迴圈（Loop）
            C8 to BB8:
              name: C8 至 BB8
            D7 to Laurel:
              name: D7 至 Laurel
            D6 Frozen Artist:
              name: D6 冰雪奇緣藝術家
            F7 add Conditionals:
              name: F7 新增條件式（Conditional）
            F5 Minecraft:
              name: F5 Minecraft
            Programming with BB-8:
              name: 和 BB-8 一起寫程式
            Loops with BB-8:
              name: 和 BB-8 一起學迴圈
            D13 no If/While:
              name: D13 沒有 If/While
            Ice Age Play Lab:
              name: 冰原歷險記 Play Lab
            Bounce:
              name: 彈跳
            NewBounce:
              name: 全新彈跳
            F PlayLab Variables:
              name: F PlayLab 變數
        coursea-2017:
          title: 課程 A
          assignment_family_title: 課程 A
          description_audience: 年齡：4-7
          description_short: 為學齡前兒童設計的計算機科學指引。
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          lessons:
            'Debugging: Unspotted Bugs':
              name: 除錯（Debug）- 沒被發現的蟲蟲
              description_teacher: 本課將指導學生除錯的步驟。學生會學到步驟「目前發生的事？應該發生的事？這代表什麼？」
            'Persistence & Frustration: Stevie and the Marbles':
              name: 堅持：Stevie 和 Big Project
              description_teacher: |-
                學生在回答問題或製作專案時若遇到障礙，他們會很容易沮喪並放棄。本課堂會向學生解釋，灰心可以是學習中很重要的部分。在課堂中，灰心可表現為創意流程的一個步驟，而不是失敗的徵兆。\\r
                \\r
                本課堂可以 1 到 2 個課節完成。若你有更多時間，可隨意在彈珠跑跑活動中描繪出建立與修改階段。
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
              description_teacher: 在本課中，學生將通過實際種植，將演算法的概念與現實生活的活動關聯。這裡的目標是開始培養技能，將現實世界的情況轉化為線上場景，或是相反。\\r
            Learn to Drag and Drop:
              name: 用拖曳的方式循序寫出程式
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            'Programming: Happy Maps':
              name: 程式設計：快樂地圖
              description_teacher: 如果學生理解規畫順序和將它循序編程之間的區別，那麼從演算法過渡到程式設計的時間就不會太長，這項活動將透過速記讀寫代碼的方式幫助學生獲得經驗。
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
              description_teacher: 在這一系列的線上關卡中，學生將建立演算法、除錯、一般計算機理論的知識。登場的是「憤怒鳥」遊戲中的角色，學生將開發循序演算法，讓憤怒鳥不會撞牆或碰上炸藥。關卡的除錯也被混合到這個階段，以增加解決問題和批判性思維的練習。
            Going Places Safely:
              name: 數位公民 - 安全的瀏覽
              description_teacher: 與 [r common-sense-media] 媒體合作，這課在讓學生學習到網站會要求提供私人訊息，並會討論如何負責的處理這類請求。學生也會對神奇的網路世界感到興奮，但他們必須遵守某些規則來維護自己的安全。
            'Loops: Happy Loops':
              name: 迴圈（Loops） - 快樂迴圈
              description_teacher: 迴圈是程式設計中非常有用且強大的工具。為了理解迴圈的用處，就必須逼著學生去思考更簡潔的方式來解決平凡的問題。
            Loops in Collector:
              name: 和收藏家學迴圈（Loop）
              description_teacher: 從「快樂迴圈」中建立重複指令的概念，這個階段會讓學生用迴圈更有效率的收集寶藏。
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            'Events: The Big Event':
              name: 事件：大事件
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            Events in Play Lab:
              name: Play Lab 中的事件（Event）
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        courseb-2017:
          title: 課程 B
          assignment_family_title: 課程 B
          description_audience: 年齡 5-8
          description_short: 為學前兒童準備的計算機科學介紹（類似課程 A，但對年紀大些的學童提供了更多變化）
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          lessons:
            'Debugging: Unspotted Bugs':
              name: 除錯（Debug）- 沒被發現的蟲蟲
            'Persistence & Frustration: Stevie and the Marbles':
              name: 堅持：Stevie 和 Big Project
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
            Learn to Drag and Drop:
              name: 用拖曳的方式循序寫出程式
            Your Digital Footprint:
              name: 數位公民 - 我的數位足跡
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Collector:
              name: 和收藏家學迴圈（Loop）
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            'Events: The Big Event':
              name: 事件：大事件
            Events in Play Lab:
              name: Play Lab 中的事件（Event）
            More Programming in Maze:
              name: 更多的在迷宮中編程
            Programming with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起寫程式
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        coursec-2017:
          title: 課程 C
          assignment_family_title: 課程 C
          description_audience: 年齡 6-10
          description_short: 學習基本的計算機科學，創造屬於你自己的藝術、故事、遊戲作品。
          description: 以序列、迴圈與事件製作程式。將你的姓名首字母轉換成二進制碼，瞭解不同的問題解決技巧，以及學習怎樣應付網路欺凌。在課程結束時，你可創造出自己的遊戲或故事，然後向別人分享！
          lessons:
            Building a Foundation:
              name: 堅持：打好基礎
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            Debugging in Maze:
              name: 在迷宮中除錯
            'Real-life Algorithms: Paper Planes':
              name: 生活中的演算法 - 紙飛機
            Programming in Collector:
              name: 和收藏家學編程（Program）
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: Getting Loopy':
              name: 迴圈：學習迴圈
            Loops in Maze:
              name: 迷宮裡的迴圈
            Loops in Harvester:
              name: 與農夫一起學迴圈（Loops）
            'Events: The Big Event':
              name: 事件：大事件
            Build a Flappy Game:
              name: 製作像素鳥遊戲
            Events in Play Lab:
              name: Play Lab 中的事件（Event）
            Screen Out the Mean:
              name: 數位公民：防止壞蛋騷擾
            Binary Bracelets:
              name: 程式設計以外：二進制手環
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Loops with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
          student_description: 以序列、迴圈與事件製作程式。將你的姓名首字母轉換成二進制碼，瞭解不同的問題解決技巧，以及學習怎樣應付網路欺凌。在課程結束時，你可創造出自己的遊戲或故事，然後向別人分享！
        coursed-2017:
          title: 課程 D
          assignment_family_title: 課程 D
          description_audience: 年齡 7-11
          description_short: 快速地導覽在課程 C 的概念，進一步的介紹演算法、巢狀迴圈、條件判斷式…等的使用。
          lessons:
            Introduction:
              name: 線上謎題簡介
              description_student: 本課堂會讓你練習本課程中需要的技巧。
              description_teacher: 在這組謎題中，首先會向學生簡介（或重溫，視你的班級經驗而定） Code.org 的線上工作區。我們有各種影片指出工作區的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕。這些影片也會說明怎樣拖曳 Blockly 積木、刪除 Blockly 積木與連接 Blockly 積木。之後，學生會在迷宮裡練習_序列_與_除錯_技巧。接著，學生會在學習_迴圈_的基本知識時看到一些新的謎題類型，例如收藏家、藝術家與收割者。
            'Algorithms: Graph Paper Programming':
              name: 程式設計：方格紙程式設計
              description_student: 在本課堂中，你會為好友設計程式，讓你的好友能夠畫畫！
              description_teacher: 藉由一個又一個的繪圖編程活動，學生會愈來愈了解程式設計的面貌。這個課程將會在學生的相互引導下，模仿現有圖片，在圖上塗上顏色。如果時間允許，可以讓學生有自由創作的活動。
            Events in Bounce:
              name: 彈板遊戲中的事件（Event）
              description_student: 有沒有想過，你可以在學校玩電子遊戲？在本課堂中，你將有機會製作自己的遊戲！
              description_teacher: 在這項線上活動中，學生會學習甚麼是事件（event），以及電腦怎樣在程式（例如電子遊戲）中使用事件。學生會在各種謎題中，讓程式，對事件做出反應（例如按下箭頭按鈕後）。在謎題結束時，學生將有機會以不同的速度與聲音自訂遊戲。
            Nested Loops:
              name: 巢狀迴圈
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Nested Loops in Artist:
              name: 小藝術家裡的巢狀迴圈（Nested Loops）
              description_student: 你會在這裡使用巢狀迴圈（nested loop）製作酷炫的畫作，向你的家人與好友展示。
              description_teacher: 學生已學懂怎樣把迴圈分層，現在他們可製作許多漂亮的東西。本課堂會把學生帶到一系列的練習中，協助他們製作適用於個人作品的圖像。
            'Algorithms: Relay Programming':
              name: 除錯：接力程式設計
              description_student: 還記得課程開始時，你使用程式碼繪畫嗎？在本課堂中，你會與一個團隊合作，做一些類似的事情！
              description_teacher: 這項活動首先會以簡短的「方格紙程式設計」回顧開始，然後會快速轉至倒數計時活動。學生會分為多個團隊，一起編寫程式，每次編寫一項指令。
            Debugging in Bee:
              name: 在蜜蜂遊戲中除錯
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
              description_student: 迴圈（loop）在程式編寫中非用實用。本課堂會教你其中一種：while（當）迴圈！
              description_teacher: |-
                學生學習這個課堂時，應已經充分練習使用「repeat」（重複）迴圈。現在是時候把各種知識結合在一起了。

                _While（當）迴圈_用於在符合某項條件時繼續重複命令。程式設計師使用 while 迴圈的情況是：不知道確實需要重複多少次命令，但是知道哪些條件需要是 true，讓迴圈可以繼續重複。例如，學生將會在農夫遊戲中填滿坑洞與挖出土堆。他們不會知道坑洞的大小或土堆的高度，但是會知道只要地面不平坦，便需要一直填滿坑洞與挖出土堆。
            Conditionals with Cards:
              name: If/Else（如果/否則）：使用卡牌學習條件式（Conditional）
              description_student: 是時候玩一款遊戲，讓你僅在某些條件下賺到點數！
              description_teacher: 本課堂會展示條件式（conditional）可怎樣用來量身制定程式處理特定資訊。我們設計程式時，並不總是能得到全部需要的資訊。有時候在不同的情況下，你需要做一些不同的事情，即便你不知道在執行程式時哪種情況為真。這時候，條件式就派得上用場了。條件式可讓電腦在每次執行你的程式碼時，依據真（true）的資訊做出決定。
            Conditionals in Bee:
              name: 在蜜蜂遊戲中的條件式（Conditional）
              description_student: 你已明白甚麼是條件式（conditional）。現在是時候為蜜蜂設計程式，讓蜜蜂在採集蜂蜜與花蜜時使用。
              description_teacher: 到了這個階段，學生已設計了程式，讓程式每次都使用相同的方法執行。這種做法十分可靠，不過欠缺點彈性。在本課堂中，班級同學將會開始使用條件式（conditional）編寫程式，讓他們編寫出來的程式，可依據程式遇到的特定條件，以不同方式運作。
            Conditionals & Loops in Maze:
              name: 迷宮裡的條件式（Conditional）與迴圈（Loop）
              description_student: 把條件式（conditional）與迴圈（loop）合併使用，你就可成就一些精彩的事情！
              description_teacher: 在本課堂中，學生會 2 人一組練習關鍵的概念：迴圈（loop）和條件式（conditional）。這組謎題可拉近學生在理解上的距離，這種問題會在謎題中涉及到多種類型的積木之時出現。學生在結合這兩個概念後，便會編寫更複雜的程式碼，表現出他們驚人的創意與批判思維！
            Conditionals & Loops in Farmer:
              name: 收割者遊戲中的條件式（Conditional）與迴圈（Loop）
              description_student: 我們不會總是清楚瞭解要在甚麼時候使用每項條件式（conditional）。本課堂會幫你練習決定要怎樣做。
              description_teacher: 學生會練習「while」（當）迴圈、「until」（直到）迴圈與「if/else」（如果/否則）陳述句。這幾種積木都會使用條件式。練習全部積木後，學生便會學習到如何編寫複雜且具靈活性的程式碼。
            Digital Citizenship:
              name: 數位公民 - 數位公民的實踐
              description_student: 有些資訊在網上分享是不安全的。本課將讓學生瞭解安全資訊和私人資訊之間的區別。
              description_teacher: 與 [r common-sense-media] 媒體合作，這課有助學生批判性的思考某些網站的請求或要求的使用者訊息相關問題。學生會學到隱私訊息和個人訊息的不同，分辨在網路上分享什麼資料是安全的，什麼是不安全的。
            Build a Play Lab Game:
              name: 製作 Play Lab 遊戲
              description_student: 本課堂會引導你製作屬於自己的電子遊戲。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            'Unplugged: Binary':
              name: 程式設計以外：二進制圖像
              description_student: 瞭解電腦怎樣以開、關等簡單概念來儲存圖片。
              description_teacher: 雖然很多人認為二進制就是一堆的 0 和 1，但是學生會學習一種概念：資訊可以用不同的二進制表達法表示。這堂課將更深入這個觀念，說明電腦如何同樣的以二進制儲存更複雜的訊息（例如圖像和顏色）。
            Artist Binary:
              name: 藝術家中的二進制
              description_student: 僅使用開關像素的命令，引導你的藝術家製作二進制圖像。
              description_teacher: 二進制在電腦世界中極為重要。現代的大多數電腦都會以二進制形式儲存所有類型的資訊。本課堂會協助展示：怎樣能夠把現實世界的東西，轉換成一系列的開/關。學生會在藝術家遊戲中把 0 和 1 轉換為關與開（或黑色與白色），從而製作成二進制圖像。
            Nested Loops Project in Artist:
              name: 冰雪奇緣中的巢狀迴圈（Nested Loop）
              description_student: 更多巢狀迴圈（nested loop）！這一次，你將能夠使用巢狀迴圈製作一些非常漂亮的圖畫！
              description_teacher: 學生會在今天的謎題組合中，使用藝術家來製作精美的圖像。學生會繼續練習巢狀迴圈（nested loop），並訂立新的目標，從而瞭解迴圈在整體上的更多用法。這套謎題也有激發創意的潛力，讓學生有機會在舞台的末尾部分創造自己的設計。
            Debugging in Collector:
              name: 和收藏家學除錯（Debug）
              description_student: 在編寫程式時，你是否遇到過問題？在本課堂中，你會學習除錯的秘密。除錯是找出並解決程式碼問題的流程。
              description_teacher: 在這項線上活動中，學生會在「收藏家」環境中練習除錯。他們會練習閱讀與編輯程式碼，從而使用簡單的演算法、迴圈（loop）與巢狀迴圈（nested loop），修正謎題中的錯誤。
        coursee-2017:
          title: 課程 E
          assignment_family_title: 課程 E
          description_audience: 年齡 8-12
          description_short: 快速地導覽在課程 C 和課程 D 的概念，進一步的介紹函式的使用。
          description: 首先使用演算法（algorithm）、迴圈（loop）、條件式（conditional）和事件（event）開始編寫程式，然後你將會學習函式（function）。在本課程的第 2 部分，你便會開始設計和製作一個總結專案，並可與你的好友和家人分享。
          lesson_groups:
            csf_e_1:
              display_name: 升至課程 E (可選擇的)
            csf_e_2:
              display_name: 課程 E 內容
            end_of_course_project:
              display_name: 課程結束專案
            extra_course_content:
              display_name: 額外的課程內容
          lessons:
            'Algorithms: Tangrams':
              name: '演算法: 七巧板'
            Introduction:
              name: 線上謎題簡介
              description_student: 這個簡短介紹可讓你有機會練習所需技巧，從而在本課程中完成謎題。
              description_teacher: 在這項進展中，學生會開始瞭解（或回顧，視班級經驗而定）Code.org 的線上工作區。學生會學習介面的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕等。拖曳、刪除與連接 Blockly 積木的功能，也會在開始影片中介紹。在各謎題中，學生會在迷宮與藝術家中練習序列與除錯技巧。
            The Power of Words:
              name: 語言的力量
            Ice Age Play Lab:
              name: 冰原歷險記 Play Lab
            Envelope Variables:
              name: 信封變數
            Variables in Artist:
              name: 小藝術家裡的變數
            Variables in Play Lab:
              name: Play Lab 裡的變數
            For Loop Fun:
              name: 有趣的計次迴圈
            For Loops in Bee:
              name: 蜜蜂遊戲中的 for（計數）迴圈
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
            Songwriting with Parameters:
              name: 用參數寫歌
            Conditionals and Functions in Bee:
              name: 蜜蜂遊戲中的條件式（Conditional）與函式（Function）
            Functions with Parameters in Artist:
              name: 在藝術家遊戲中學習函式帶參數（Parameter）
            Functions with Parameters in Bee:
              name: 在蜜蜂遊戲中學習函式帶參數（Parameter）
            Explore Project Ideas:
              name: 找些專案靈感
              description_student: 這裡有幾個遊戲和幾幅圖畫。嘗試所有遊戲和圖畫，為你的專案提供靈感構想！
              description_teacher: |-
                接下來的 4 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是多個課堂或多個星期的體驗，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。

                在探索階段中，學生將能夠檢視預先製作完成的藝術家與 Play Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家或 Play Lab 中製作自己的專案（這可能是專案中最長的階段）。最後，學生將能夠向同伴展示自己的成品。
            The Design Process:
              name: 設計流程
              description_student: 如此大的專案需要時間與充分的計畫。在這裡，你會學習設計流程，並用來製作自己的專案。
              description_teacher: 課程包含 4 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，編寫自己設計的專案。在專案的這個部分，學生會學習設計流程，並瞭解如何在自己的專案中實作。流程中全部 4 個階段的課堂指南，會在本專案流程的階段 1 [這裡] \(<https://curriculum.code.org/csf/coursee/12/>) 提供。
            Build Your Project:
              name: 建立你的專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
              description_teacher: 課程包含 4 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，編寫自己設計的專案。學生可使用藝術家或 Play Lab 自由創作自己的專案。這可能是專案中時間最長的階段。流程中全部 4 個階段的課堂指南，會在本專案流程的階段 1 [這裡] \(<https://curriculum.code.org/csf/coursee/12/>) 提供。
            Revise Your Project:
              name: 修改你的專案
            Presentation Your Project:
              name: 展示你的專案
            'Algorithms: Dice Race':
              name: 演算法：骰子賽跑
              description_student: 在這個關於演算法的課堂中，你會學習如何以電腦的角度描述一款遊戲。
              description_teacher: 在本課堂中，學生將會玩骰子賽跑遊戲，將演算法的概念與現實生活的活動關聯。這裡的目標是開始培養技能，將現實世界的情況轉化為線上場景，或是相反。
            Conditionals:
              name: 農夫遊戲中的條件式（Conditional）
              description_student: 在這個有趣而具挑戰的遊戲系列中，你會告訴電腦在某些特定條件下如何行動。
              description_teacher: 本課堂會向學生介紹「while」（當）迴圈與「if / else」（如果/否則）陳述句。_While 迴圈_ 用於在條件是 true 時繼續重複命令。While 迴圈的使用情況是：程式設計師不知道命令確實需要重複多少次，但是知道哪項條件需要為 true，才可讓迴圈繼續重複。「If / Else」陳述句為程式設計提供彈性，程式僅會在某個項目為 true 時執行整個部分，否則便會執行其他項目。
            Private and Personal Information:
              name: 數位公民 - 隱私和個人資訊
              description_student: 網際網路刺激有趣，但是也有必要保持安全！本課堂會教你有哪些資訊可安全分享，有哪些資訊則應保持私密。
              description_teacher: |-
                本課堂由常識教育（Common Sense Education）制定，內容關於可在線上安全分享的內容，與不可在線上安全分享的內容有哪些區別。

                瀏覽一些網站時，若網站請求學生取得他們身分的資訊，他們就會學習採取批判性的查詢程序，讓他們能保護自己與家人免遭盜用身分。在本課堂中，學生會學習以批判思考方式，思考部分網站請求或要求取得的使用者資訊。他們會學習私密資訊與個人資訊的分別，並瞭解如何分辦哪些內容可在線上安全分享，哪些內容則不安全。
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
              description_student: 在本課堂中，建立自己的星際大戰遊戲，感受原力的震撼！
              description_teacher: 在本課堂中，學生會練習使用事件（event）製作遊戲，並可在線上分享。在 R2-D2 和其他星際大戰的角色陪伴下，學生會在引導下學習各種事件，然後自由製作屬於自己的遊戲。
            'Functions: Songwriting':
              name: 函式：作曲
              description_student: 即使是搖滾巨星也需要程式設計技巧。本課堂會用歌曲裡的歌詞教授函式。
              description_teacher: 在電腦科學世界中，函式（function）可以說是最壯觀的結構之一。函式有時候稱為程序，是在龐大的程式中的一些迷你程式，可以不斷重複利用。本課堂將會幫助學生直觀的瞭解，為甚麼把這麼多零碎的程式碼組合成函式是非常有用的做法。
            Functions in Artist:
              name: 藝術家遊戲中的函式（Function）
              description_student: 使用函式，以更簡易的方式繪畫複雜的圖畫！
              description_teacher: 學生會在 Code.org 上學習使用函式（function）。他們會在藝術家遊戲中，使用函式來製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
              description_student: 不要寫太多程式碼收集所有花蜜與蜂蜜。應改為使用函式！
              description_teacher: 在函式線上練習的第 2 回合，學生會閱覽複雜路徑、收集大量花蜜，並製造出大量蜂蜜。
            Functions in Farmer:
              name: 農夫遊戲中的函式（Function）
              description_student: 協助農夫收割農作物時，函式（function）可為你省下大量工夫！
              description_teacher: 學生已練習在藝術家遊戲中製作精彩的設計，並在蜜蜂遊戲中遊走，但他們今天會使用函式（function），在農夫遊戲中收割農作物。本課堂會鼓勵學生以新的方式使用函式：把函式和「while」（當）迴圈與「if/else」（如果/否則）陳述句結合起來。
            Determine the Concept:
              name: 釐清概念
              description_student: |-
                我們甚麼秘密都不會告訴你！
                在這個課堂中，你可使用之前學習的所有技巧。
              description_teacher: 本課堂首先會結合先前各課堂的概念，並讓學生有機會以批判的方式，思考可怎樣解決每個問題，但不會告訴他們應使用哪個概念。學生會重溫基本的演算法、除錯、「repeat」（重複）迴圈、條件式、「while」（當）迴圈與函式。
            Build a Play Lab Game:
              name: 製作 Play Lab 遊戲
              description_student: 練習製作遊戲，並與好友和家人分享。
              description_teacher: 本課堂會介紹 Play Lab 平台，學生可在這裡製作自己的遊戲，並可讓角色和使用者的輸入產生互動。學生會使用事件建立鍵盤控制。這一組謎題也能大概指導學生開發遊戲，但學生可自由加上自己的原創構思。
            Present Your Project:
              name: 說明你的專案
              description_student: 是炫耀自己的時候了！向同伴展示一下你的成品吧。
              description_teacher: 課程包含 4 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，編寫自己設計的專案。最後，學生將能夠向同伴展示自己的成品，或者以特殊連結向摯愛分享。流程中全部 4 個階段的課堂指南，會在本專案流程的階段 1 [這裡] \(<https://curriculum.code.org/csf/coursee/12/>) 提供。
            Internet:
              name: 程式設計以外：網際網路
              description_student: 你有沒有想過，資訊怎樣在網際網路中傳輸？不是魔術！本課堂將會教導網際網路運作方面的基本知識。
              description_teacher: 即便許多人每天都會上網，但是理解其中原理的中卻不多。在本課堂中，學生會假裝流經網際網路，同時學習連線、URL、IP 位址與 DNS 的知識。
            Crowdsourcing:
              name: 程式設計以外：群眾外包
              description_student: 本課堂會教導你關於群眾外包（Crowdsourcing）的知識，這是以團隊製作專案的流程。
              description_teacher: 在電腦科學中，我們會面對一些重大而艱鉅的問題。各種挑戰，例如找出大質數或是 DNA 定序等，都是個人幾乎無法做到的事情。集合其他人的力量，就能夠管理這些工作。本課堂會向學生說明團隊合作在電腦科學行業中的效用。
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Sequence in Maze:
              name: 迷宮中的陣列（Sequence）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops in Bee/Zombie:
              name: 蜜蜂/殭屍遊戲裡的巢狀迴圈（Nested Loop）
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            Nested Loops:
              name: 巢狀迴圈
            Functions in Harvester:
              name: 收割者遊戲中的函式（Function）
          student_description: 首先使用演算法（algorithm）、迴圈（loop）、條件式（conditional）和事件（event）開始編寫程式，然後你將會學習函式（function）。在本課程的第 2 部分，你便會開始設計和製作一個總結專案，並可與你的好友和家人分享。
        coursef-2017:
          title: 課程 F
          assignment_family_title: 課程 F
          description_audience: 年齡 9-13
          description_short: 學習計算機科學的基礎概念，並創建自己的藝術、故事、遊戲作品。
          description: 學習使用不同類型的迴圈（loop）、事件（event）、函式（function）與條件式（conditional）。研究不同的問題解決技巧，並討論電腦運算和網際網路的社會影響。在本課程的第 2 部分，你會設計並製作一份總結專案，然後可把這個專案和好友與家人分享。
          lesson_groups:
            csf_f_1:
              display_name: 升至課程 F (可選擇的)
            csf_f_2:
              display_name: 課程 F 內容
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            'Algorithms: Tangrams':
              name: '演算法: 七巧板'
              description_student: 在此將學習使用稱之為七巧板的謎題的算法！
              description_teacher: 本課堂會向我們展示一些有關演算法的重要內容。只要讓演算法盡量保持簡單，便有大量方式可以自由運用。但是，若你想確保所有人都獲得相同結果，你的演算法就可能需要做得更詳細。學生會在玩七巧板時，學習詳細演算法與一般演算法的分別。
            Introduction:
              name: 線上謎題簡介
              description_student: 本課堂會簡單介紹一些你在本課程中會學到的精彩內容！
              description_teacher: 在本課堂中，學生會學習序列（sequence）、迴圈（loop）與巢狀迴圈（nested loop），讓他們準備好在課程的較後部分學習更複雜的概念。本「提升」課堂可拉近班級裡專家與新手的能力差異。
            The Power of Words:
              name: 數位公民 - 語言的力量
              description_student: 欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。
              description_teacher: |-
                學生要思考一下，他們在瀏覽喜愛的網站時，可能會有其他小孩傳送某些訊息，令他們憤怒、受傷、不快或恐懼。他們會學習一些方法處理網路霸凌，以及在線上面對難聽的話時應怎樣做出反應。

                學生會討論在通訊時所有使用科技的方式，並探索親身會面與線上溝通的相似與相異之處。學生之後會一起討論如何面對網路霸凌。
            Ice Age Play Lab:
              name: 冰河歷險紀中的事件
              description_student: 思考一下你喜愛的電子遊戲。你有沒有想過怎樣製作這些遊戲？在這些謎題中，你會與冰原歷險記的好友，一起開發屬於自己的遊戲！
              description_teacher: 本課堂會引導學生看故事，裡面有冰原歷險記的角色。學生會使用事件（event）與迴圈（loop），讓角色在畫面上移動。在引導式關卡完成後，學生便有機會編寫自己的遊戲或故事。
            Envelope Variables:
              name: 變數：信封裡的變數
              description_student: "「信封」與「變數」有一個共通點：兩者都可放進有用的東西。在這裡，你會學習變數是甚麼，以及變數可以做哪些精彩的事。"
              description_teacher: 變數會用來做為值的佔位符，例如數字或詞語等。在程式設計中，變數可提供大量的自由度。電腦科學家不同輸入很多次同一個句子，或記住含糊的數字；他們可使用變數引用這些內容。本課堂會協助解釋甚麼是變數，以及我們可怎樣以不同方式使用變數。變數這種概念不容易掌握，因此我們建議在課堂結束時預留充足時間討論。
            Variables in Artist:
              name: 小藝術家裡的變數
              description_student: 別忘了把創意帶到課室！在這些謎題中，你會使用變數繪畫漂亮的圖畫。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            Variables in Play Lab:
              name: Play Lab 裡的變數
              description_student: 一會之後，你會學習使用變數，讓角色能夠在遊戲中互動！
              description_teacher: 在本課堂中，學生會在 Play Lab 中製作場景，從而繼續練習使用變數。學生會以使用者輸入，為變數設定各種值，然後用變數自由製作自己的迷你專案。
            For Loop Fun:
              name: For（計數）迴圈：有趣的計數迴圈
              description_student: 玩「for」（計數）迴圈，發掘無窮樂趣！
              description_teacher: 我們知道迴圈可以讓我們不斷重複的做同一件事情。現在，我們要學習如何使用本身有額外結構的迴圈。這些新結構可讓學生編寫更強大、更具動態的程式碼。
            For Loops in Bee:
              name: 蜜蜂遊戲中的 for（計數）迴圈
              description_student: 嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！
              description_teacher: 本課堂以蜜蜂為角色，集中學習 for 迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後學習使用 for 迴圈，以更有效解決複雜的問題。
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
              description_student: 準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。
              description_teacher: 在本課堂中，學生會繼續練習 for 迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與 for 迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。
            Songwriting with Parameters:
              name: 函式：用參數寫歌
              description_student: 你也許能製作出下一首熱門單曲！在本課堂中，你會學習甚麼是參數，以及參數可怎樣創作精彩的歌曲！
              description_teacher: 在電腦科學世界中，函式（function）可以說是最壯觀的結構之一。函式有時候稱為程序，是在龐大的程式中的一些迷你程式，可以不斷重複利用。本課堂將會幫助學生直觀的瞭解，為甚麼把這麼多零碎的程式碼組合成函式是非常有用的做法，以及在一堆程式碼稍有更改後，可怎樣繼續使用這些結構。
            Conditionals and Functions in Bee:
              name: 蜜蜂遊戲中的條件式（Conditional）與函式（Function）
              description_student: 蜜蜂需要你再次幫手！你會在這裡使用函式（function）採集花蜜並製成蜂蜜！
              description_teacher: 本課堂教導學生怎樣使用我們成熟的「模態編輯器」函式編輯器來製作簡單的函式，讓他們準備好在往後的課堂中納入各種參數。
            Functions with Parameters in Artist:
              name: 在藝術家遊戲中學習函式帶參數（Parameter）
              description_student: 準備好動手指編寫程式！在這些謎題中，你會在藝術家中使用帶參數的函式，繪畫令人難忘的畫作。
              description_teacher: 在本課堂中，學生會繼續練習帶參數與不帶參數的函式。學生將有機會使用或不使用參數來繪畫自己的畫作，然後在自由探索關卡中修改函式。
            Functions with Parameters in Bee:
              name: 在蜜蜂遊戲中學習函式帶參數（Parameter）
              description_student: 你已嘗試過一些帶參數的函式練習。本課堂將會繼續與蜜蜂一起練習！
              description_teacher: 本課堂使用蜜蜂環境，並繼續學習前一個藝術家階段中帶參數的函式概念。學生會練習編寫與使用函式在複雜的路徑中移動，並收集花蜜與蜂蜜圖案。
            Explore Project Ideas:
              name: 找些專案靈感
              description_student: 是時候啟發你的靈感！這些謎題會向你展示一些預先製作完成的遊戲與圖例，助你為大型專案制定計畫。
              description_teacher: |-
                接下來的 5 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是預期進行多個課堂或多個星期的專案，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。

                在探索階段中，學生將能夠檢視藝術家與 Play Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家或 Play Lab 中製作自己的專案（這很可能是專案中最長的階段）。在測試與再度思考後，學生會修訂自己的專案。最後，學生將能夠向同伴展示自己的成品。
            The Design Process:
              name: 設計流程
              description_student: 如此大的專案需要時間與充分的計畫。在這裡，你會學習設計流程，並用來製作自己的專案。
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。在專案的這個部分，學生會學習設計流程，並瞭解如何在自己的專案中實作。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Build Your Project:
              name: 建立你的專案
              description_student: 你終於可開始製作屬於自己的專案了！
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。學生可使用藝術家或 Play Lab 自由創作自己的專案。這將會是專案中時間最長的部分。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Revise Your Project:
              name: 修改你的專案
              description_student: 羅馬並不是一天就能建成，你的專案也不應急著完成。請花時間編輯並修改你的專案，從而盡力達到最佳效果。
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。如今學生已經把專案製作完成，現在學生有機會取得同伴意見，以修改自己的專案。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Presentation Your Project:
              name: 展示你的專案
            Present Your Project:
              name: 說明你的專案
              description_student: 是時候展示你的作品！你將會把自己的優秀專案展示給同伴看。
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。最後，學生將能夠向同伴展示自己的成品，或者以特殊連結向摯愛分享。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Conditionals in Minecraft:
              name: Minecraft 中的條件式
              description_student: 躲開岩漿！在 Minecraft 裡，你可以學會條件判斷。
              description_teacher: 本課堂讓學生有機會學習和練習條件式（conditional）。課堂會有 Minecraft 的角色與設定，學生將會完成和種任務，例如使用自己的程式採礦與搭起建築物。
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Sequence in Maze:
              name: 迷宮中的陣列（Sequence）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops in Bee/Zombie:
              name: 蜜蜂/殭屍遊戲裡的巢狀迴圈（Nested Loop）
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
          student_description: 學習使用不同類型的迴圈（loop）、事件（event）、函式（function）與條件式（conditional）。研究不同的問題解決技巧，並討論電腦運算和網際網路的社會影響。在本課程的第 2 部分，你會設計並製作一份總結專案，然後可把這個專案和好友與家人分享。
        csdnovice:
          title: 電腦科學探索 TeacherCon 新任輔導員
          description_audience: CSD 新任輔導員
          description_short: 提供給 TeacherCon 新任輔導員的反思問題。
          description: 作為新任輔導員，這裡可記錄你在 TeacherCon 的反思內容。
          lessons:
            Tuesday:
              name: 週二
            Wednesday:
              name: 星期三
            Thursday:
              name: 星期四
            Welcome:
              name: 歡迎
            Congrats:
              name: 恭喜
            Wrap Up:
              name: 總結
          student_description: 作為新任輔導員，這裡可記錄你在 TeacherCon 的反思內容。
        csp-explore-task:
          title: CSP 探索 PT 準備
          description_short: 這些課堂涵蓋準備與完成 CS 原理 AP 探索表現任務。
          description: 這些課堂涵蓋準備與完成 CS 原理 AP 探索表現任務。
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: 探索 PT 準備 - 檢閱任務
            Explore PT - Making a Plan:
              name: 探索 PT - 制定計畫
            Explore PT - Complete the Task:
              name: 探索 PT - 完成任務
        csp-create-task:
          description_short: 這些課堂涵蓋準備與完成 CS 原理 AP 建立表現任務。
          description: 這些課堂涵蓋準備與完成 CS 原理 AP 建立表現任務。
          lessons:
            Create PT Prep - Reviewing the Task:
              name: 建立 PT 準備 - 檢閱任務
            Create PT Prep - Making a Plan:
              name: 建立 PT 準備 - 制定計畫
            Create PT - Complete the Task:
              name: 建立 PT - 完成任務
        csp-ap-tech-setup:
          title: CSP AP 數位作品與其他工具
          description: 包括 AP 數位作品設定和其他所需的技術工具，以完成並提交 AP 表現任務。
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: 技術設定 - 你的 AP 數位作品與其他工具
        csp-ap:
          title: CSP AP 考試與表現任務
          description_short: 這些課堂用於指導學生準備並完成 AP 考試與表現任務。
          description: 這些課堂用於指導學生準備並完成 AP 考試與表現任務。
          lesson_groups:
            csp_ap_1:
              display_name: 第 1 章：AP 技術設置
            csp_ap_3:
              display_name: 第 3 章：AP 建立效能任務
            csp_ap_2:
              display_name: 第 2 章：AP 探索效能任務
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: 技術設定 - 你的 AP 數位作品與其他工具
            Create PT Prep - Reviewing the Task:
              name: 建立 PT 準備 - 檢閱任務
            Create PT Prep - Making a Plan:
              name: 建立 PT 準備 - 制定計畫
            Create PT - Complete the Task:
              name: 建立 PT - 完成任務
            Explore PT Prep - Reviewing the Task:
              name: 探索 PT 準備 - 檢閱任務
            Explore PT - Making a Plan:
              name: 探索 PT - 制定計畫
            Explore PT - Complete the Task:
              name: 探索 PT - 完成任務
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
          student_description: 這些課堂用於指導學生準備並完成 AP 考試與表現任務。
        cspnovice:
          title: 電腦科學原理 TeacherCon 新任輔導員反思
          description_audience: CSP 新任輔導員
          description_short: 提供給 TeacherCon 新任輔導員的反思問題。
          description: 作為新任輔導員，這裡可記錄你在 TeacherCon 的反思內容。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Welcome:
              name: 歡迎
            Tuesday:
              name: 週二
            Wednesday:
              name: 星期三
            Thursday:
              name: 星期四
            Wrap Up:
              name: 總結
          student_description: 作為新任輔導員，這裡可記錄你在 TeacherCon 的反思內容。
        novice-view:
          title: 檢視新任人員回覆
          description_audience: brook, dani, mal
          description_short: NA
          description: NA
          lessons:
            CSP Tuesday:
              name: CSP 週二
            CSP Wednesday:
              name: CSP 週三
            CSP Thursday:
              name: CSP 週四
            CSD Tuesday:
              name: CSD 週二
            CSD Wednesday:
              name: CSD 週三
            CSD Thursday:
              name: CSD 週四
          student_description: NA
        csp1-dlp:
          title: CSP 單元 1 深入學習
          description_audience: 電腦科學原理受訓中輔導員
          description_short: 提供給 CSP 受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CSP 受訓中輔導員的深入學習計畫單元 1。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CSP 課程的單元 1。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete your Deeper Learning:
              name: 完成你的深入學習
            Complete Unit 1 Deeper Learning Reflections:
              name: 完成單元 1 深入學習反思
          student_description: 這是提供給 Code.org CSP 受訓中輔導員的深入學習計畫單元 1。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CSP 課程的單元 1。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp2-dlp:
          title: CSP 單元 2 深入學習
          description_audience: 電腦科學原理受訓中輔導員
          description_short: 提供給 CSP 受訓中輔導員的單元 2 深入學習材料
          description: 這是提供給 Code.org CSP 受訓中輔導員的深入學習計畫單元 2。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CSP 課程的單元 2。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 2 Deeper Learning:
              name: 完成單元 2 深入學習
            Complete Unit 2 Deeper Learning Reflections:
              name: 完成單元 2 深入學習反思
          student_description: 這是提供給 Code.org CSP 受訓中輔導員的深入學習計畫單元 2。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CSP 課程的單元 2。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp3-dlp:
          title: CSP 單元 3 深入學習
          description_audience: 電腦科學原理受訓中輔導員
          description_short: 提供給 CSP 受訓中輔導員的單元 3 深入學習材料
          description: 這是提供給 Code.org CSP 受訓中輔導員的深入學習計畫單元 3。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CSP 課程的單元 3。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 3 Deeper Learning Reflections:
              name: 完成單元 3 深入學習反思
          student_description: 這是提供給 Code.org CSP 受訓中輔導員的深入學習計畫單元 3。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CSP 課程的單元 3。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp4-dlp:
          title: CSP 單元 4 深入學習
          description_audience: 電腦科學原理受訓中輔導員
          description_short: 提供給 CSP 受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CSP 受訓中輔導員的深入學習計畫單元 4。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CSP 課程的單元 4。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 4 Deeper Learning Reflections:
              name: 完成單元 4 深入學習反思
          student_description: 這是提供給 Code.org CSP 受訓中輔導員的深入學習計畫單元 4。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CSP 課程的單元 4。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp5-dlp:
          title: CSP 單元 5 深入學習
          description_audience: 電腦科學原理受訓中輔導員
          description_short: 提供給 CSP 受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CSP 受訓中輔導員的深入學習計畫單元 5。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CSP 課程的單元 5。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 5 Deeper Learning Reflections:
              name: 完成單元 5 深入學習反思
          student_description: 這是提供給 Code.org CSP 受訓中輔導員的深入學習計畫單元 5。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CSP 課程的單元 5。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd1-dlp:
          title: 電腦科學探索單元 1 深入學習
          description_audience: 電腦科學探索 - 受訓中輔導員
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 1。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 1。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 1 Deeper Learning Reflections:
              name: 完成單元 1 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 1。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 1。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd6-dlp:
          title: 電腦科學探索單元 6 深入學習
          description_audience: 電腦科學探索 - 受訓中輔導員
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 6。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 6。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 6 Deeper Learning Reflections:
              name: 完成單元 6 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 6。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 6。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd5-dlp:
          title: 電腦科學探索單元 5 深入學習
          description_audience: 電腦科學探索 - 受訓中輔導員
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 5。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 5。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 5 Deeper Learning Reflections:
              name: 完成單元 5 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 5。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 5。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd4-dlp:
          title: 電腦科學探索單元 4 深入學習
          description_audience: 電腦科學探索 - 受訓中輔導員
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 4。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 4。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 4 Deeper Learning Reflections:
              name: 完成單元 4 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 4。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 4。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd3-dlp:
          title: 電腦科學探索單元 3 深入學習
          description_audience: 電腦科學探索 - 受訓中輔導員
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 3。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 3。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 3 Deeper Learning Reflections:
              name: 完成單元 3 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 3。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 3。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd2-dlp:
          title: 電腦科學探索單元 2 深入學習
          description_audience: 電腦科學探索 - 受訓中輔導員
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 2。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 2。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 2 Deeper Learning Reflections:
              name: 完成單元 2 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 2。你將可在這裡找到反思提示與指引，以表現出熟練 Code.org CS 探索課程的單元 2。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        allthettsthings:
          lessons:
            TTS:
              name: TTS
        express-2017:
          title: 速學課程
          assignment_family_title: 速學課程
          description_audience: 年齡 9-18
          description_short: 電腦科學簡介：結合我們最優秀的國小課程內容，供年齡較大的學生學習。
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          lesson_groups:
            content:
              display_name: 內容
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            'Programming Unplugged: My Robotic Friends':
              name: 不插電程式設計：我的機器人朋友
            Introduction:
              name: 介紹
            'Algorithms: Graph Paper Programming':
              name: 程式設計：方格紙程式設計
            'Algorithms: Relay Programming':
              name: 除錯：接力程式設計
            Debugging in Collector:
              name: 除錯 Debug 介紹
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Internet:
              name: 網際網路 Internet
            Digital Citizenship:
              name: 數位公民
            Screen Out the Mean:
              name: 防止壞蛋騷擾
            'Events: The Big Event':
              name: 事件：大事件
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
            Events in Bounce:
              name: 彈板遊戲中的事件（Event）
            Build a Flappy Game:
              name: 製作像素鳥遊戲
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
            Conditionals & Loops in Maze:
              name: 迷宮裡的條件式（Conditional）與迴圈（Loop）
            Conditionals in Minecraft:
              name: Minecraft 中的條件式
            Conditionals & Loops in Farmer:
              name: 農夫遊戲中的條件式（Conditional）與迴圈（Loop）
            Envelope Variables:
              name: 信封變數
            Variables in Artist:
              name: 小藝術家裡的變數
            Variables in Play Lab:
              name: Play Lab 裡的變數
            For Loop Fun:
              name: 有趣的計次迴圈
            For Loops in Bee:
              name: 蜜蜂遊戲中的 for（計數）迴圈
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
            Songwriting with Parameters:
              name: 用參數寫歌
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions with Parameters in Artist:
              name: 在藝術家遊戲中學習函式帶參數（Parameter）
            Functions with Parameters in Bee:
              name: 在蜜蜂遊戲中學習函式帶參數（Parameter）
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Revise Your Project:
              name: 修改你的專案
            Present Your Project:
              name: 說明你的專案
            Nested Loops Project in Frozen:
              name: 冰雪奇緣中的巢狀迴圈（Nested Loop）
            'How it Works: The Internet':
              name: 程式設計以外：網際網路
            'Common Sense Education: Digital Citizenship':
              name: 數位公民 - 數位公民的實踐
            'Common Sense Education: Screen Out the Mean':
              name: 數位公民：防止壞蛋騷擾
            Events in Star Wars:
              name: 星際大戰中的事件（Event）
            Events with Flappy:
              name: 與像素鳥一起嘗試事件（Event）
            'Conditionals: Conditionals with Cards':
              name: 條件式：使用卡牌學習條件式（Conditional）
            Conditional Loops in Maze:
              name: 迷宮裡的條件式（Conditional）與迴圈（Loop）
            'Variables: Envelope Variables':
              name: 變數：信封裡的變數
            'For Loops: For Loop Fun':
              name: For（計數）迴圈：有趣的計數迴圈
            'Functions: Songwriting with Parameters':
              name: 函式：用參數寫歌
            Building a Foundation:
              name: 打好基礎
            Nested Loops:
              name: 巢狀迴圈
            Conditionals & Loops in Harvester:
              name: 收割者遊戲中的條件式（Conditional）與迴圈（Loop）
            Until Loops in Maze:
              name: 迷宮裡的 until（直到）迴圈
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        pre-express-2017:
          title: 學前預讀
          assignment_family_title: 學前預讀
          description_audience: 年齡：4-8
          description_short: 為學前兒童提供的電腦科學簡介：結合我們的最佳幼稚園與一年級課程。
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          lessons:
            'Debugging: Unspotted Bugs':
              name: 除錯（Debug）- 沒被發現的蟲蟲
            'Persistence & Frustration: Stevie and the Marbles':
              name: 堅持：Stevie 和 Big Project
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
            Learn to Drag and Drop:
              name: 用拖曳的方式循序寫出程式
            'Online Safety: Your Digital Footprint':
              name: 數位公民 - 我的數位足跡
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            'Programming: Star Wars':
              name: 程式設計：星際大戰
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Collector:
              name: 和收藏家學迴圈（Loop）
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            'Events: The Big Event':
              name: 事件：大事件
            Events in Play Lab:
              name: Play Lab 中的事件（Event）
            Spelling Bee:
              name: 拼字蜜蜂
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        subgoal-labels-opt-in:
          title: 選擇加入子目標標籤研究
          lessons:
            Subgoal Labels Study Opt-In:
              name: 選擇加入子目標標籤研究
            deprecated:
              name: 已過時
            other:
              name: 其它
            Thanks:
              name: 謝謝
            " ": {}
        csp-pre-survey-test-2017:
          lessons:
            new stage:
              name: 新的階段
            test satge:
              name: 測試舞台
            CSP pre survey Test:
              name: CSP 課前問卷調查測試
            CSD pre survey test:
              name: CSD 課前問卷調查測試
            CSD pulse check survey:
              name: CSD 脈動調查
        csp3-research-mxghyt:
          title: CSP 單元 3 - 程式設計簡介（子目標）
          description_short: 以自上而下的設計方式，使用經典小海龜繪圖來學習 JavaScript 程式設計基礎。
          lesson_groups:
            csp3_1:
              display_name: 第 1 章：程式語言及演算法
            cspAssessment:
              display_name: 章節測驗
            cspSurvey:
              display_name: 問卷
          lessons:
            new stage:
              name: 新的階段
            The Need For Programming Languages:
              name: 程式語言的需要
            The Need for Algorithms:
              name: 演算法的需要
            Creativity in Algorithms:
              name: 演算法中的創意
            Using Simple Commands:
              name: 簡單指令的使用
            Creating Functions:
              name: 建立函式
            Functions and Top-Down Design:
              name: 函式與自上而下的設計
            APIs and Function Parameters:
              name: API 和函式參數
            Creating functions with Parameters:
              name: 建立帶參數（Parameter）的函式
            Looping and Random Numbers:
              name: 迴圈與隨機數字
            Practice PT - Design a Digital Scene:
              name: PT 練習 - 設計數位場景
            Unit 3 Chapter 1 Assessment:
              name: 單元 3 第 1 章 評估
            foo:
              name: foo
            CSP Mid-course survey:
              name: CSP 課程中期問卷調查
            Please complete the CSP Mid-course survey:
              name: 請完成 CSP 課程中期問卷調查
        csd4-draft:
          title: 實驗單元 4 修訂草案
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：用戶為中心的設計
            csd4_2:
              display_name: 第 2 章︰ 應用程式原型
          lessons:
            Analysis of Design:
              name: 設計分析
            Understanding Your User:
              name: 瞭解您的使用者
            User-Centered Design Micro Activity:
              name: 以使用者為中心的微型活動
            User Interface and Prototype Testing:
              name: 使用者介面與原型測試
            Feedback and Prototypes:
              name: 回饋與原型
            Identifying User Needs:
              name: 確定使用者需求
            Project - Paper Prototype:
              name: 專案 - 紙上原型
            Designing Apps for Good:
              name: 設計良好的應用程式
            Market Research:
              name: 市場研究
            Paper Prototypes:
              name: 紙上原型
            Prototype Testing:
              name: 原型測試
            Digital Design:
              name: 數位設計
            Event Driven Programming:
              name: 事件驅動的程式設計
            Basic App Functionality:
              name: 基本的 App 函式
            Testing the App:
              name: 測試應用程式
            Improving and Iterating:
              name: 改善和迭代
            App Presentation:
              name: 應用程式簡報
            Linking Screens:
              name: 連結不同畫面
        craft17:
          title: Craft17 開發腳本
          lessons:
            craft17 stage:
              name: craft17 舞台
        applab-intro:
          title: App Lab 入門
          description_short: 用積木式或文字式的 JavaScript 編程工具，來創建一個你自己的 app。如果你已經會用積木寫了程式，那就進入下個階段。
          description: 用積木式或文字式的 JavaScript 編程工具，來創建一個你自己的 app。如果你已經會用積木寫了程式，那就進入下個階段。
          lessons:
            Intro to AppLab - Choose Your Own Adventure:
              name: App Lab 入門 - 選擇你的冒險旅程
            Intro to AppLab - Choose Your Own Adventure 2:
              name: App Lab 入門 - 選擇你的冒險旅程 2
            Intro to AppLab - Your First App:
              name: App Lab 入門 - 你的第一支程式
            Intro to AppLab - Your First App 2:
              name: App Lab 入門 - 你的第一支程式 2
            Intro to AppLab - Your First App 3:
              name: App Lab 入門 - 你的第一支程式 3
            Intro to AppLab - Your First App 4:
              name: App Lab 入門 - 你的第一支程式 4
            Intro to AppLab - Getting Started:
              name: App Lab 入門 - 準備開始
            Intro to App Lab:
              name: App Lab 入門
              description_student: "在本教程的最後，你將能夠擴展一個項目，你開始構建一個“選擇你自己的冒險”、“賀卡”或“性格測試”應用程式。你也可以繼續構建code.org/applab頁面上顯示的更多項目。 \n\n祝你在應用實驗室愉快地完成一小時玩程式！"
              description_teacher: "本教程旨在快速介紹應用實驗室程式設計環境，作為構建和共用應用程式的強大工具。教程本身教學生在JavaScript中使用模組或文本創建和控制按鈕、文本、圖像、聲音和螢幕。在教程結束時，學生有時間將他們開始構建的項目擴展為“選擇自己的冒險”、“賀卡”或“性格測試”應用程式。他們也可以繼續構建code.org/applab頁面上顯示的更多項目。  \n\n祝你在應用實驗室愉快地完成一小時玩程式！\n\n**年齡適宜性：**本教程為13歲以上的學生設計。因為它允許學生上傳自訂的聲音和圖像，年輕的學生不應該在沒有監督的情況下使用它。為了保護學生的隱私，如果你的學生年齡在13歲以下，他們將不能使用本教程，除非你首先在你管理的區域為他們設置帳戶。"
            'Lesson 1: App Lab Intro':
              name: 課堂 1 ：App Lab 簡介
          student_description: 用積木式或文字式的 JavaScript 編程工具，來創建一個你自己的 app。如果你已經會用積木寫了程式，那就進入下個階段。
        e-f-ramp:
          title: 課程 E & F（提升）
          lesson_groups:
            csf_e_1:
              display_name: 升至課程 E (可選擇的)
            csf_e_2:
              display_name: 課程 E 內容
            end_of_course_project:
              display_name: 課程結束專案
            extra_course_content:
              display_name: 額外的課程內容
          lessons:
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Sequence and Preview in Maze:
              name: 迷宮遊戲中的序列和預覽
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops:
              name: 巢狀迴圈
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            Intro to Conditionals with Farmer:
              name: 農夫陪你學習條件式（Conditional）簡介
            'Algorithms: Dice Race':
              name: 演算法：骰子賽跑
            Course E Introduction:
              name: 課程 E 簡介
            Conditionals:
              name: 條件判斷（Conditionals）
            Private and Personal Information:
              name: 隱私與個人資訊
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
            'Functions: Songwriting':
              name: 函式：作曲
            Functions in Artist:
              name: 藝術家遊戲中的函式（Function）
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions in Farmer:
              name: 農夫遊戲中的函式（Function）
            Determine the Concept:
              name: 釐清概念
            Build a Play Lab Game:
              name: 製作 Play Lab 遊戲
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Present Your Project:
              name: 說明你的專案
            Internet:
              name: 網際網路 Internet
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
            Nested Loops in Bee:
              name: 蜜蜂裡的巢狀迴圈（Nested Loops）
            Nested Loops in Bee/Zombie:
              name: 蜜蜂/殭屍遊戲裡的巢狀迴圈（Nested Loop）
            Sequence in Maze:
              name: 迷宮中的陣列（Sequence）
        new-d:
          title: 新課程 D 腳本
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 演算法：方格紙程式設計
            Introduction:
              name: 介紹
            Events in Bounce:
              name: 彈板遊戲中的事件（Event）
            Nested Loops:
              name: 巢狀迴圈
            Nested Loops in Artist:
              name: 小藝術家裡的巢狀迴圈（Nested Loops）
            'Algorithms: Relay Programming':
              name: 演算法：接力程式設計
            Debugging in Collector:
              name: 和收藏家學除錯（Debug）
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Conditionals in Bee:
              name: 在蜜蜂遊戲中的條件式（Conditional）
            Conditionals & Loops in Maze:
              name: 迷宮裡的條件式（Conditional）與迴圈（Loop）
            Conditionals & Loops in Farmer:
              name: 農夫遊戲中的條件式（Conditional）與迴圈（Loop）
            Digital Citizenship:
              name: 數位公民
            Build a Play Lab Game:
              name: 製作 Play Lab 遊戲
            'Unplugged: Binary':
              name: 不插電活動 - 二進制
            Artist Binary:
              name: 小藝術家 - 二進制（Binary）
            Building a Foundation:
              name: 打好基礎
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops in Bee:
              name: 蜜蜂裡的巢狀迴圈（Nested Loops）
            Loops in Ice Age:
              name: 冰河歷險紀中的迴圈
        csp3-a:
          title: CSP 單元 3 - 子目標 A 組
          description_short: CSP 單元 3 的替代版本，用於子目標標籤實驗 A 組。
          description: 本單元介紹電腦程式設計的基礎概念，對象為子目標 A 組學生。
          lesson_groups:
            csp3_1:
              display_name: 第 1 章：程式語言及演算法
          lessons:
            new stage:
              name: 新的階段
            'CSP3A: Using Simple Commands':
              name: CSP3A：使用簡單命令
          student_description: 本單元介紹電腦程式設計的基礎概念，對象為子目標 A 組學生。
        new-express:
          title: 新的 Express Script
          lesson_groups:
            content:
              display_name: 內容
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 演算法：方格紙程式設計
            Introduction:
              name: 介紹
            'Algorithms: Relay Programming':
              name: 演算法：接力程式設計
            Debugging in Collector:
              name: 和收藏家學除錯（Debug）
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops Project in Frozen:
              name: 冰雪奇緣中的巢狀迴圈（Nested Loops）
            'How it Works: The Internet':
              name: 如何運作：網際網路
            'Common Sense Education: Digital Citizenship':
              name: 通識教育 - 數位公民
            'Common Sense Education: Screen Out the Mean':
              name: 常識教育：防止壞蛋騷擾
            'Events: The Big Event':
              name: 事件：大事件
            Events in Star Wars:
              name: 星際大戰中的事件（Event）
            Events with Flappy:
              name: 與像素鳥一起嘗試事件（Event）
            Events in Bounce:
              name: 彈板遊戲中的事件（Event）
            'Conditionals: Conditionals with Cards':
              name: 條件式：使用卡牌學習條件式（Conditional）
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
            Conditional Loops in Maze:
              name: 迷宮裡的條件式迴圈（Conditional Loop）
            Conditionals in Minecraft:
              name: Minecraft 中的條件式
            Conditionals & Loops in Farmer:
              name: 農夫遊戲中的條件式（Conditional）與迴圈（Loop）
            'Variables: Envelope Variables':
              name: 變數：信封裡的變數
            Variables in Artist:
              name: 小藝術家裡的變數
            Variables in Play Lab:
              name: Play Lab 裡的變數
            'For Loops: For Loop Fun':
              name: For（計數）迴圈：有趣的計數迴圈
            For Loops in Bee:
              name: 蜜蜂遊戲中的 for（計數）迴圈
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
            'Functions: Songwriting with Parameters':
              name: 函式：用參數寫歌
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions with Parameters in Artist:
              name: 在藝術家遊戲中學習函式帶參數（Parameter）
            Functions with Parameters in Bee:
              name: 在蜜蜂遊戲中學習函式帶參數（Parameter）
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Revise Your Project:
              name: 修改你的專案
            Present Your Project:
              name: 說明你的專案
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Nested Loops:
              name: 巢狀迴圈
            Loops in Artist (UPDATED!):
              name: 藝術家中的迴圈（已更新！）
            Sarah test stage:
              name: Sarah 測試舞台
        new-stages-sept-2017:
          title: 9/17 新舞台
          lessons:
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Sequences with Scrat:
              name: 和鼠奎特一起學序列（Sequence）
            Testing Template:
              name: 測試範本
        new-e:
          title: E 的新腳本
          lesson_groups:
            csf_e_1:
              display_name: 升至課程 E (可選擇的)
            csf_e_2:
              display_name: 課程 E 內容
            end_of_course_project:
              display_name: 課程結束專案
            extra_course_content:
              display_name: 額外的課程內容
          lessons:
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Sequence in Maze:
              name: 迷宮中的陣列（Sequence）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops in Bee/Zombie:
              name: 蜜蜂/殭屍遊戲裡的巢狀迴圈（Nested Loop）
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            'Algorithms: Dice Race':
              name: 演算法：骰子賽跑
            Course E Introduction:
              name: 課程 E 簡介
            Conditionals:
              name: 條件判斷（Conditionals）
            Private and Personal Information:
              name: 隱私與個人資訊
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
            'Functions: Songwriting':
              name: 函式：作曲
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions in Artist:
              name: 藝術家遊戲中的函式（Function）
            Functions in Farmer:
              name: 農夫遊戲中的函式（Function）
            Determine the Concept:
              name: 釐清概念
            Build a Play Lab Game:
              name: 製作 Play Lab 遊戲
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Present Your Project:
              name: 說明你的專案
            Internet:
              name: 網際網路 Internet
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
        new-f:
          title: F 的新腳本
          lesson_groups:
            csf_f_1:
              display_name: 升至課程 F (可選擇的)
            csf_f_2:
              display_name: 課程 F 內容
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Sequence in Maze:
              name: 迷宮中的陣列（Sequence）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops in Bee/Zombie:
              name: 蜜蜂/殭屍遊戲裡的巢狀迴圈（Nested Loop）
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            'Algorithms: Tangrams':
              name: '演算法: 七巧板'
            Course E Introduction:
              name: 課程 E 簡介
            The Power of Words:
              name: 語言的力量
            Ice Age Play Lab:
              name: 冰原歷險記 Play Lab
            Conditionals in Minecraft:
              name: Minecraft 中的條件式
            Envelope Variables:
              name: 信封變數
            Variables in Artist:
              name: 小藝術家裡的變數
            Variables in Play Lab:
              name: Play Lab 裡的變數
            For Loop Fun:
              name: 有趣的計次迴圈
            For Loops in Bee:
              name: 蜜蜂遊戲中的 for（計數）迴圈
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
            Songwriting with Parameters:
              name: 用參數寫歌
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions with Parameters in Artist:
              name: 在藝術家遊戲中學習函式帶參數（Parameter）
            Functions with Parameters in Bee:
              name: 在蜜蜂遊戲中學習函式帶參數（Parameter）
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Revise Your Project:
              name: 修改你的專案
            Present Your Project:
              name: 說明你的專案
        csd5-old:
          title: CSD 單元 5 - 數據和社會
          description_short: 瞭解大家怎樣使用電腦解決資料問題。
          description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
          lesson_groups:
            csd5_1:
              display_name: 第 1 章：表達信息
            csd5_2:
              display_name: 第 2 章：解決數據問題
          lessons:
            Representation Matters:
              name: 表示事項
            Patterns and Representation:
              name: 模式和標記法
            ASCII and Binary Representation:
              name: ASCII 和 二進位表示法
            Representing Images:
              name: 表示圖像
            Representing Numbers:
              name: 數字表示法
            8-bit Numbers:
              name: 8 位元數字
            Combining Representations:
              name: 組合表示
            Project - Create a Representation:
              name: 專案 - 創建標記法
            Problem Solving and Data:
              name: 問題解決與數據
            Making Decisions with Data:
              name: 依數據來做決定
            Interpreting Data:
              name: 解譯數據
            Automating Data Decisions:
              name: 自動化數據決策
            Problem Solving with Big Data:
              name: 用大數據解決問題
            Project - Solve a Data Problem:
              name: 專案 - 解決數據問題
          student_description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
        subgoals-assessment-staging:
          lessons:
            subgoal assessments:
              name: 子目標評估
            lg by itself:
              name: 關卡群組（獨立）
            test of single level lg:
              name: 測試單一關卡的關卡群組
            submittable question at end of lessson:
              name: 在課堂結束時可提交的問題
            all assessment items as standalone assessment levels:
              name: 所有評估項目做為獨立的評估關卡
            all assessment items clustered in levelgroup:
              name: 所有評估項目叢集進關卡群組
            submittable if last assessment item:
              name: 若為最後的評估項目，則可提交
            assessment sandwiched between app lab levels:
              name: 評估夾在兩個 App Lab 關卡之間
            all assessment items clustered in levelgroup as a single "test":
              name: 所有評估項目叢集進關卡群組，做為單一「測試」
            dummy:
              name: dummy
            CSP 3 updates staging ground:
              name: CSP 3 更新集結地
        hocali:
          lessons:
            new stage:
              name: 新的階段
        colehoc2017:
          title: HoC 17 - Cole
          lessons:
            colehoc2017 stage:
              name: colehoc2017 舞台
        craft17-kiki:
          lessons:
            craft17 stage:
              name: craft17 舞台
        csd4-old:
          title: "（已過時）CSD 單元 4 - 設計流程"
          description_short: 2016/17 年 CSD 單元 4 測試版本
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：用戶為中心的設計
            csd4_2:
              display_name: 第 2 章︰ 應用程式原型
          lessons:
            Analysis of Design:
              name: 設計分析
            Understanding Your User:
              name: 瞭解您的使用者
            User-Centered Design Micro Activity:
              name: 以使用者為中心的微型活動
            User Interface and Prototype Testing:
              name: 使用者介面與原型測試
            Feedback and Prototypes:
              name: 回饋與原型
            Identifying User Needs:
              name: 確定使用者需求
            Project - Paper Prototype:
              name: 專案 - 紙上原型
            Designing Apps for Good:
              name: 設計良好的應用程式
            Market Research:
              name: 市場研究
            Paper Prototypes:
              name: 紙上原型
            Prototype Testing:
              name: 原型測試
            Digital Design:
              name: 數位設計
            Event Driven Programming:
              name: 事件驅動的程式設計
            Basic App Functionality:
              name: 基本的 App 函式
            Testing the App:
              name: 測試應用程式
            Improving and Iterating:
              name: 改善和迭代
            App Presentation:
              name: 應用程式簡報
        csp3-staging:
          title: CSP 3 提議變更臨時集結地
          description_short: 10 月 csp3 變更的臨時集結地
          lesson_groups:
            csp3_1:
              display_name: 第 1 章：程式語言及演算法
            cspAssessment:
              display_name: 章節測驗
          lessons:
            The Need For Programming Languages:
              name: 程式語言的需要
            The Need for Algorithms:
              name: 演算法的需要
            Creativity in Algorithms:
              name: 演算法中的創意
            Using Simple Commands:
              name: 簡單指令的使用
            Creating Functions:
              name: 建立函式
            Functions and Top-Down Design:
              name: 函式與自上而下的設計
            APIs and Function Parameters:
              name: API 和函式參數
            Creating functions with Parameters:
              name: 建立帶參數（Parameter）的函式
            Looping and Random Numbers:
              name: 迴圈與隨機數字
            Practice PT - Design a Digital Scene:
              name: PT 練習 - 設計數位場景
            Unit 3 Chapter 1 Assessment:
              name: 單元 3 第 1 章 評估
        pwc:
          title: PwC「存取你的潛能」課程
          description: PwC 相信，所有學生都有潛質成為科技主導勞動力量的明日領袖。「存取你的潛能」是我們的承諾，協助拉近機會缺口，方法是讓年青人（尤其是弱勢社群人士）獲得所需的財務、科技與事業選擇技能，以改變他們的生活軌跡。做為我們承諾的一部分，我們很高興推出「存取你的潛能」國中科技與事業課程。
          lessons:
            new stage:
              name: 新的階段
            'Problem Solving: Personal Innovations':
              name: 問題解決：個人創新
            'Technology Foundations: What is a Computer?':
              name: 技術基礎：電腦是甚麼？
            'Data Science: Problem Solving with Big Data':
              name: 資料科學：用大數據解決問題
            Personal Innovations:
              name: 個人創新
            What is a Computer?:
              name: 電腦是什麼？
            Problem Solving with Big Data:
              name: 用大數據解決問題
            Programming - Hour of Code:
              name: 程式設計：一小時玩程式
            Simple Encryption:
              name: 簡單加密
            Web Development - Creating Webpages:
              name: Web 開發 - 創建網頁
            App Development Unplugged - User Interfaces:
              name: 應用程式開發（不插電）- 使用者介面
            App Development - Intro to App Lab:
              name: 應用程式開發 - App Lab 入門
            Creating Webpages:
              name: 建立網頁
            User Interfaces:
              name: 使用者介面
            Intro to App Lab:
              name: App Lab 入門
            Smart Clothing Design:
              name: 智慧衣著設計
            Intro to App Lab (13+):
              name: App Lab 入門 (13+)
          student_description: PwC 相信，所有學生都有潛質成為科技主導勞動力量的明日領袖。「存取你的潛能」是我們的承諾，協助拉近機會缺口，方法是讓年青人（尤其是弱勢社群人士）獲得所需的財務、科技與事業選擇技能，以改變他們的生活軌跡。做為我們承諾的一部分，我們很高興推出「存取你的潛能」國中科技與事業課程。
        allthesurveys:
          title: 所有問卷調查
          description_short: 放在舞台上，並測試 Code.org 問卷調查
          lessons:
            CSP pre survey Test:
              name: CSP 課前問卷調查測試
            CSD pre survey test:
              name: CSD 課前問卷調查測試
            CSD pulse check survey:
              name: CSD 脈動調查
            CSD mid-post survey staging:
              name: CSD 課程中期-課後問卷調查集結
            CSP pre survey Test 2017:
              name: 2017 年 CSP 課前問卷調查測試
            CSD mid-post survey 2017 staging:
              name: 2017 年 CSD 課程中期-課後問卷調查集結
            CSP pre survey 2017 staging:
              name: 2017 年 CSP 課前問卷調查集結
            CSD pre survey 2017 staging:
              name: 2017 年 CSD 課前問卷調查集結
            CSD/P pulse check survey 2017:
              name: 2017 年 CSD/P 脈動調查
            CSD mid and post survey 2017 staging:
              name: 2017 年 CSD 課程中期與課後問卷調查集結
            CSP mid and post survey 2017 staging:
              name: 2017 年 CSP 課程中期與課後問卷調查集結
            CSP post survey 2018 staging:
              name: 2018 年 CSP 課後問卷調查集結
            CSD post survey 2018 staging:
              name: 2018 年 CSD 課後問卷調查集結
            CSD pre survey 2018 staging:
              name: 2018 年 CSD 課前問卷調查集結
            CSP pre survey 2018 staging:
              name: 2018 年 CSP 課前問卷調查集結
            CSP mid survey 2018 stagin:
              name: 2018 年 CSP 課程中期問卷調查集結
            CSP mid survey 2018 staging:
              name: 2018 年 CSP 課程中期問卷調查集結
            CSP post course survey 2019 staging:
              name: 2019 年 CSP 課後問卷調查集結
            CSD post course survey 2019 staging:
              name: 2019 年 CSD 課後問卷調查集結
            Place for testing crazy stuff:
              name: 測試瘋狂想法的地方
            CSP pre-survey 21-2:
              name: 電腦科學原理調研21-22
            CSD pre-survey 21-2:
              name: 電腦科學發現調研21-22
        k1hoc2017:
          title: 2017 年 K-1 一小時玩程式
          lessons:
            Collector Hour of Code 2017:
              name: 一小時玩程式 收藏家 2017
        hero:
          title: Minecraft：英雄之旅
          description_short: Minecraft 回來啦，而且帶來了嶄新的一小時玩程式活動！
          description: 全新的一小時玩 Minecraft 活動來了！用程式暢遊 Minecraft 世界吧。
          lessons:
            'Minecraft\: Hero''s Journey Hour of Code':
              name: Minecraft 英雄之旅 一小時玩程式
            Minecraft Hour of Code:
              name: Minecraft：英雄之旅
              description_teacher: 在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。
          student_description: 全新的一小時玩 Minecraft 活動來了！用程式暢遊 Minecraft 世界吧。
          name: 英雄
        applab-intro-staging:
          title: App Lab 入門集結
          lessons:
            Intro to AppLab - Choose Your Own Adventure:
              name: App Lab 入門 - 選擇你的冒險旅程
            Intro to AppLab - Choose Your Own Adventure 2:
              name: App Lab 入門 - 選擇你的冒險旅程 2
            Intro to AppLab - Your First App:
              name: App Lab 入門 - 你的第一支程式
            Intro to AppLab - Your First App 2:
              name: App Lab 入門 - 你的第一支程式 2
            Intro to AppLab - Your First App 3:
              name: App Lab 入門 - 你的第一支程式 3
            Intro to AppLab - Your First App 4:
              name: App Lab 入門 - 你的第一支程式 4
            Intro to AppLab - Getting Started:
              name: App Lab 入門 - 準備開始
            Intro to App Lab:
              name: App Lab 入門
        csp-explore-2017:
          title: 探索 - AP 表現任務準備 ('17-'18)
          description_short: 提供各種課堂與資源，協助學生準備並完成 AP 探索表現任務。
          lesson_groups:
            csp_ap_2:
              display_name: 第 2 章：AP 探索效能任務
            cspSurvey:
              display_name: 問卷
          lessons:
            new stage:
              name: 新的階段
            Explore PT Prep - Reviewing the Task:
              name: 探索 PT 準備 - 檢閱任務
            Explore PT - Making a Plan:
              name: 探索 PT - 制定計畫
            Explore PT - Complete the Task:
              name: 探索 PT - 完成任務
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: 技術設定 - 你的 AP 數位作品與其他工具
            'Setup: Digital Portfolio and Other Tools':
              name: 設定：數位作品與其他工具
            Post-Course Survey:
              name: 課後調查
        csp-create-2017:
          description_short: 提供各種課堂與資源，協助學生準備並完成 AP 建立表現任務。
          lesson_groups:
            csp_ap_3:
              display_name: 第 3 章：AP 建立效能任務
            cspSurvey:
              display_name: 問卷
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: 技術設定 - 你的 AP 數位作品與其他工具
            Create PT Prep - Reviewing the Task:
              name: 建立 PT 準備 - 檢閱任務
            Create PT Prep - Making a Plan:
              name: 建立 PT 準備 - 制定計畫
            Create PT - Complete the Task:
              name: 建立 PT - 完成任務
            Post-Course Survey:
              name: 課後調查
        csp3-reovery:
          title: csp3 海底學生作品回復
          lessons:
            Under the sea recovery:
              name: 海底回復
        csp3-recovery:
          title: CSP3 海底學生作品回復
          lessons:
            Under the sea recovery:
              name: 海底回復
            standalone template:
              name: 獨立範本
        aws-demo:
          title: AWS 展示
          lessons:
            new stage:
              name: 新的階段
        halloween:
          lessons:
            Halloween Artist:
              name: 萬聖節藝術家
        valentine:
          title: 情人節特別內容
          description_short: 享受製作情人節內容
          lessons:
            special valentine:
              name: 特別的情人節
            Valentine Puzzles:
              name: 情人節謎題
        colehoc17:
          lessons:
            new stage:
              name: 新的階段
        course-e-2018:
          title: 2018 年課程 E（已過期！）
          lesson_groups:
            csf_e_1:
              display_name: 升至課程 E (可選擇的)
            csf_e_2:
              display_name: 課程 E 內容
            end_of_course_project:
              display_name: 課程結束專案
            extra_course_content:
              display_name: 額外的課程內容
          lessons:
            courseB_unplugged_MRF_2018:
              name: courseB_unplugged_MRF\_2018
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Sequence in Maze:
              name: 迷宮中的陣列（Sequence）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops:
              name: 巢狀迴圈
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            'Algorithms: Dice Race':
              name: 演算法：骰子賽跑
            Introduction:
              name: 介紹
            Conditionals:
              name: 條件判斷（Conditionals）
            Private and Personal Information:
              name: 隱私與個人資訊
            'Functions: Songwriting':
              name: 函式：作曲
            MINECRAFT STAGE GOES HERE:
              name: 我的世界舞台在這裡
            Functions in Artist:
              name: 藝術家遊戲中的函式（Function）
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions in Farmer:
              name: 農夫遊戲中的函式（Function）
            Determine the Concept:
              name: 釐清概念
            Build a Play Lab Game:
              name: 製作 Play Lab 遊戲
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Present Your Project:
              name: 說明你的專案
            Internet:
              name: 網際網路 Internet
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
            Functions in Harvester:
              name: 收割者遊戲中的函式（Function）
        course-f-2018:
          title: 2018 年課程 F（已過期）
          lesson_groups:
            csf_f_1:
              display_name: 升至課程 F (可選擇的)
            csf_f_2:
              display_name: 課程 F 內容
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Sequence in Maze:
              name: 迷宮中的陣列（Sequence）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops in Bee/Zombie:
              name: 蜜蜂/殭屍遊戲裡的巢狀迴圈（Nested Loop）
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            'Algorithms: Tangrams':
              name: '演算法: 七巧板'
            Introduction:
              name: 介紹
            The Power of Words:
              name: 語言的力量
            Ice Age Play Lab:
              name: 冰原歷險記 Play Lab
            Conditionals in Minecraft:
              name: Minecraft 中的條件式
            Envelope Variables:
              name: 信封變數
            Variables in Artist:
              name: 小藝術家裡的變數
            Variables in Play Lab:
              name: Play Lab 裡的變數
            For Loop Fun:
              name: 有趣的計次迴圈
            For Loops in Bee:
              name: 蜜蜂遊戲中的 for（計數）迴圈
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
            Songwriting with Parameters:
              name: 用參數寫歌
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions with Parameters in Artist:
              name: 在藝術家遊戲中學習函式帶參數（Parameter）
            Functions with Parameters in Bee:
              name: 在蜜蜂遊戲中學習函式帶參數（Parameter）
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Revise Your Project:
              name: 修改你的專案
            Present Your Project:
              name: 說明你的專案
        csd6-old:
          title: "（已過時）CSD 單元 6 - 實體運算"
          lesson_groups:
            csd6_1:
              display_name: 第 1 章：硬體輸出
            csd6_2:
              display_name: 第 2 章：建立物理原型
          lessons:
            Computing Innovations:
              name: 計算創新（Computing Innovations）
            Input Unplugged:
              name: 不插電介紹輸入（Input）
            Event Types:
              name: 事件類型
            Getters and Setters:
              name: Getter 與 Setter
            The Circuit Playground:
              name: 電路（Circuit ）遊樂場
            Lists:
              name: 清單
            Lights:
              name: 燈光
            For Loops:
              name: 計次迴圈（For Loops）
            Lists and For Loops:
              name: 清單和計數迴圈
            Timed Loops:
              name: 計時迴圈
            'Project: Board Output':
              name: 專案：電路板輸出
            Physical Input:
              name: 實體輸入
            Analog Input:
              name: 模擬輸入
            Sensor Applications:
              name: 傳感器應用
            'Project: Prototype an Innovation':
              name: 專案：原型創新
        unembeddedlevels:
          title: 取消嵌入的關卡
          lessons:
            CSD U3 Plotting Shapes Shape Lab - unembed:
              name: CSD 第 3 節 幾何繪圖 Shape Lab - 取消嵌入
            CSD U3 Entertainment Sample 1 - unembed:
              name: CSD 第 3 節 娛樂範例 1 - 取消嵌入
            Only Stage:
              name: 僅舞台
        unembedded:
          title: 取消嵌入的關卡
          lessons:
            Only Stage:
              name: 僅舞台
        csd3-1819draft:
          title: CSD 單元 3 -互動式遊戲和動畫
          description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
          lesson_groups:
            csd3_1:
              display_name: 第 1 章：圖像和動畫
            csd3_2:
              display_name: 第 2 章：創建遊戲
            cspSurvey:
              display_name: 問卷
          lessons:
            Programming for Entertainment:
              name: 娛樂用途的程式設計
            Plotting Shapes:
              name: 幾何繪圖
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
            Shapes and Randomization:
              name: 圖形與隨機化
            Variables:
              name: 變數
            Sprites:
              name: 角色
            The Draw Loop:
              name: draw（繪圖）迴圈
            The Counter Pattern Unplugged:
              name: 計數器模式（不插電）
            Sprite Movement:
              name: 角色動作
            Booleans Unplugged:
              name: 布林值（Boolean）（不插電）
            Conditionals:
              name: 條件判斷（Conditionals）
            Keyboard Input:
              name: 鍵盤輸入
            Other Forms of Input:
              name: 其他輸入形式
            Project - Interactive Card:
              name: 專案 - 互動式卡片
            Velocity:
              name: 速度
            Collision Detection:
              name: 碰撞檢測
            Complex Sprite Movement:
              name: 複合角色動作
            Collisions:
              name: 碰撞
            Functions:
              name: 函式
            The Game Design Process:
              name: 遊戲設計流程
            Using the Game Design Process:
              name: 使用遊戲設計流程
            Project - Design a Game:
              name: 專案 - 設計一個遊戲
            CS Discoveries End of Semester Survey:
              name: 電腦科學探索學期結束問卷調查
          student_description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
        textbook:
          title: CSF 課本頁面
          lessons:
            Test Map Level:
              name: 測試地圖關卡
            new stage:
              name: 新的階段
        glj-behavior-test:
          title: Game Lab Jr. 測試 - 行為
          lessons:
            Cats and Dogs:
              name: 貓狗大戰
        csd3-2018:
          description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
          lesson_groups:
            csd3_1:
              display_name: 第 1 章：圖像和動畫
            csd3_2:
              display_name: 第 2 章：創建遊戲
            cspSurvey:
              display_name: 問卷
          lessons:
            Programming for Entertainment:
              name: 娛樂用途的程式設計
              description_student: 班級裡的學生需要考慮沉悶與個人表達等「問題」，並反思他們會怎樣在自己的生活中處理這些問題。然後，他們會瞭解整體的電腦科學與具體的程式設計，如何協助展示出特定的娛樂形式或做為自我表現的工具。
              description_teacher: 學生需要考慮沉悶與個人表達等「問題」，並反思他們會怎樣在自己的生活中處理這些問題。然後，學生會瞭解整體的電腦科學與具體的程式設計，如何協助展示出特定的娛樂形式或做為自我表現的工具。
            Plotting Shapes:
              name: 幾何繪圖
              description_student: 學生會接受各種挑戰：說明如何以圖形來繪圖，以及在 Game Lab 中使用一種工具，該工具可介紹與何處理這種問題。暖身活動可快速展示在說明位置時的挑戰，而活動中也會提供一些共享的參照點。在主要活動中，學生會學習一款 Game Lab 工具，讓他們以互動方式將圖形放在 Game Lab 的 400 x 400 方格內。然後學生輪流指示同伴如何使用這款工具繪畫隱藏圖像；活動已考慮在 Game Lab 中設計程式時學生會遇到的多種挑戰。學生可選擇建立並說明自己的圖像，然後再進行匯報討論。
              description_teacher: 學生會接受各種挑戰：說明如何以圖形來繪圖，以及在 Game Lab 中使用一種工具，該工具可介紹與何處理這種問題。暖身活動可快速展示在說明位置時的挑戰，而活動中也會提供一些共享的參照點。在主要活動中，學生會學習一款 Game Lab 工具，讓他們以互動方式將圖形放在 Game Lab 的 400 x 400 方格內。然後學生輪流指示同伴如何使用這款工具繪畫隱藏圖像；活動已考慮在 Game Lab 中設計程式時學生會遇到的多種挑戰。學生可選擇建立並說明自己的圖像，然後再進行匯報討論。
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
              description_student: 班級同學會學習 Game Lab 簡介。Game Lab 是本單元的程式設計環境，並會開始將其用於在畫面上為圖形定位。課堂會說明序列與除錯基礎，以及少量簡單命令。在課堂結束時，班級同學會依據前一個課堂中設計的圖像，建立圖像的線上版本。
              description_teacher: 同學會學習 Game Lab 簡介。Game Lab 是本單元的程式設計環境，並會開始將其用於在畫面上為圖形定位。他們會學習序列與除錯基礎，以及少量簡單命令。在課堂結束時，同學將能夠以程式設計方式製作圖像，外觀與前一個課堂中使用繪圖工具製作的圖像相類似。
            Shapes and Randomization:
              name: 圖形與隨機化
            Variables:
              name: 變數
              description_student: 本課堂會介紹變數，做為在程式中標記數字的方式，或儲存隨機產生的值。班級開始課堂時，首先會學習變數使用目的之基本說明，並練習使用新積木。然後，班級同學會使用變數儲存隨機數字，讓程式能夠多次使用同一個隨機數字。
              description_teacher: 在本課堂中，學生會學習如何在自己的程式中使用變數標記數字，或儲存隨機產生的值。學生會學習變數使用目的之基本說明。然後，學生會完成關卡進展， 以加深瞭解變數模型做為標記或命名數字的方式。學生會使用變數儲存隨機數字，從而看到變數會實際儲存數值，讓他們可在程式中多次使用同一個隨機數字。
            Sprites:
              name: 角色
              description_student: 為了製作更有趣與細緻的圖像，班級中的學生會學習角色（Sprite）物件。每個角色都可獲分配一個圖像用於顯示，而角色也可記錄自己的多個值 - 這種做法在隨後製作動畫時能夠用到。在課堂結束時，每位學生都會使用角色建立場景。
              description_teacher: 為了製作更有趣與細緻的圖像，學生會學習角色（Sprite）物件。每個角色都可獲分配一個圖像用於顯示，而角色也可記錄自己的多個值 - 這種做法在隨後製作動畫時能夠用到。
            The Draw Loop:
              name: draw（繪圖）迴圈
              description_student: 本課堂會介紹 draw（繪圖）迴圈，這是 Game Lab 中的其中一種核心程式設計範式（Paradigm）。班級學生會把 draw 迴圈與隨機數字結合，以產生由點組成的簡單動畫，然後再產生由角色組成的動畫。之後，所有學生都會使用所學到的知識，更新前一個課堂的角色場景。
              description_teacher: 在本課堂中，學生會學習介紹 draw（繪圖）迴圈，這是 Game Lab 中的其中一種核心程式設計範式（Paradigm）。課堂開始時，學生會觀看一些手翻動畫書，瞭解多個圖像放在不同的畫格，可產生動作效果。然後，學生會觀看影片，瞭解 Game Lab 中的 draw 迴圈如何協助在自己的程式中呈現相同的效果。學生會把 draw 迴圈與隨機數字結合，以產生由點組成的簡單動畫，然後再產生由角色組成的動畫。在課堂結束時，學生會使用所學到的知識，更新前一個課堂的角色場景。
            The Counter Pattern Unplugged:
              name: 計數器模式（不插電）
              description_student: 本不插電課堂說明變數的基本行為。班級學生會使用記事卡與字串模擬程式內的變數，以實作一些簡短程式。熟悉這種程式語法後，班級學生便會使用相同流程與角色屬性，追蹤角色在螢幕上的進展。
              description_teacher: 學生會在不插電活動中，瞭解變數的基本行為。學生會使用記事卡與字串模擬程式內的變數，以實作一些簡短程式。熟悉這種程式語法後，學生便會使用相同流程與角色屬性，追蹤角色在螢幕上的進展。
            Sprite Movement:
              name: 角色動作
              description_student: 班級學生會合併 Draw（繪圖）迴圈與計數器模式，並編寫程式讓畫面上的角色移動，以及把其他角色屬性動畫化。
              description_teacher: 學生會合併 Draw（繪圖）迴圈與計數器模式，並編寫程式讓畫面上的角色移動，以及把其他角色屬性動畫化。
            Booleans Unplugged:
              name: 布林值（Boolean）（不插電）
              description_student: 本課堂介紹布林值（boolean）與邏輯，以及條件式（conditional）陳述句。班級課堂開始時，學生首先會玩一款簡單的「站起、坐下」遊戲。在遊戲中，布林值（true/false）陳述句用於描述個人屬性（頭髮或眼睛顏色、衣著類型等）。然後，班級同學將依據越來越複雜的布林值陳述句將物件分組，並觀察條件式可怎樣影響程式的流程。
              description_teacher: |-
                在本課堂中，學生會學習布林值（boolean）與邏輯，以及條件式（conditional）陳述句。班級課堂開始時，學生首先會玩一款簡單的「站起、坐下」遊戲。在遊戲中，布林值（true/false）陳述句用於描述個人屬性（頭髮或眼睛顏色、衣著類型等）。這樣，學生就可思考怎樣以二元問題（只有兩個答案），把可能有多個值（例如年齡）的屬性放進框架中。

                然後，學生將會收到一組物件，其物理性質相似但有所差異。學生會與同伴一起，依據越來越複雜的布林值陳述句把該等物件分組，其中包括帶 AND 與 OR 的複合布林值。

                最後，我們會揭曉以條件式做為決策工具，或使用布林值陳述句做為輸入，以影響程式流程。
            Conditionals:
              name: 條件判斷（Conditionals）
              description_student: 班級裡的學生首先會使用布林值，比較某個角色屬性目前的值和目標值，並以這種比較方式判斷角色何時達到畫面的某一點、放大至指定大小，或是以計數器模式達到某個值。學生在直接使用布林值調查值或角色屬性後，便會把條件式 if 陳述句加入編寫的程式碼中，以回應該等布林值的比較。
              description_teacher: 學生首先會使用布林值，比較某個角色屬性目前的值和目標值，並以這種比較方式判斷角色何時達到畫面的某一點、放大至指定大小，或是以計數器模式達到某個值。學生在直接使用布林值調查值或角色屬性後，便會把條件式 if 陳述句加入編寫的程式碼中，以回應該等布林值的比較。
            Keyboard Input:
              name: 鍵盤輸入
              description_student: 在前一個課堂介紹了布林值與 if 陳述句後，學生會學習名為 keyDown() 的新積木。這塊積木會返回一個布林值，並可用於條件式陳述句中，讓角色能夠在畫面上移動。在本課堂結束時，學生編寫的程式將能夠讓使用者以鍵盤輸入，控制畫面上的角色。
              description_teacher: 在前一個課堂介紹了布林值與 if 陳述句後，學生會學習名為「keyDown()」的新積木。這塊積木會返回一個布林值，並可用於條件式陳述句中，讓角色能夠在畫面上移動。在本課堂結束時，學生編寫的程式將能夠讓使用者以鍵盤輸入，控制畫面上的角色。
            Other Forms of Input:
              name: 其他輸入形式
              description_student: 班級裡的同學將繼續學習不同方式使用條件式陳述句擷取使用者輸入的內容。除了昨天學到的簡單 keyDown() 命令外，學生也會學習幾項其他鍵盤輸入命令，以及擷取滑鼠輸入的方式。
              description_teacher: 在本課堂中，學生將繼續學習不同方式使用條件式陳述句擷取使用者輸入的內容。除了昨天學到的簡單「keyDown()」命令外，學生也會學習幾項其他鍵盤輸入命令，以及擷取滑鼠輸入的方式。
            Project - Interactive Card:
              name: 專案 - 互動式卡片
              description_student: 在第 1 章的本累積專案中，班級同學會計畫並開發互動賀卡，他們會使用至今學到的全部程式設計技巧。
              description_teacher: 在第 1 章的本累積專案中，學生會計畫並開發互動賀卡，他們會使用至今學到的全部程式設計技巧。
            Velocity:
              name: 速度
              description_student: 在簡短回顧計數器模式如何用於移動角色後，班級同學便會學習屬性，從而直接設定移動速度與旋轉速度。學生以不同方式使用新屬性，就能夠熟習所需技巧，製作出基本的橫向捲軸遊戲。
              description_teacher: 簡短回顧在先前的課堂中如何使用計數器模式移動角色後，學生便會學習屬性，從而直接設定移動速度與旋轉速度。學生以不同方式使用新屬性，就能夠熟習所需技巧，製作出基本的橫向捲軸遊戲。
            Collision Detection:
              name: 碰撞檢測
              description_student: 班級中的學生會學習電腦上的碰撞偵測。學生會每 2 人一組，學習電腦可怎樣使用角色的位置與大小屬性和數學，偵測兩個角色是否互相接觸。然後，班級同學會使用 isTouching() 積木，建立角色碰撞時的不同效果，包括播放聲音。最後，學生會應用學到的新技巧，改良前一個課堂中開始製作的橫向捲軸遊戲。
              description_teacher: 學生會學習電腦上的碰撞偵測。學生會每 2 人一組，學習電腦可怎樣使用角色的位置與大小屬性和數學，偵測兩個角色是否互相接觸。然後，班級同學會使用「isTouching()」積木，建立角色碰撞時的不同效果，包括播放聲音。最後，學生會應用學到的新技巧，改良前一個課堂中開始製作的橫向捲軸遊戲。
            Complex Sprite Movement:
              name: 複合角色動作
              description_student: 班級會學習合併角色的速度屬性和計數器模式，以製作更複雜的角色移動，例如模擬重力、讓角色跳躍，以及讓角色左右漂浮。在最後的關卡中，學生會合併這些動作，讓單一個角色移動並控制該角色，然後製作簡單遊戲，遊戲角色需要四處漂浮收集金幣。
              description_teacher: 學生會學習合併角色的速度屬性和計數器模式，以製作更複雜的角色移動。具體而言，學生會學習如何模擬重力、讓角色跳躍，以及讓角色左右漂浮。在 Code Studio 進展的最後關卡中，學生會合併這些動作，讓單一個角色移動並控制該角色，然後製作簡單遊戲，遊戲角色需要四處漂浮收集金幣。課堂鼓勵學生在最後關卡中加入屬於自己的內容。
            Collisions:
              name: 碰撞
              description_student: 班級同學會為角色設計程式，從而以全新方式互動。在簡短回顧先前如何使用 isTouching 積木後，學生便會一起思考其他方法讓兩個角色互動。然後學生會使用 isTouching，讓一個角色在畫面中推動另一個角色，之後再練習 4 種碰撞積木（collide、displace、bounce 與 bounceOff）。
              description_teacher: 學生會為角色設計程式，從而以全新方式互動。在簡短回顧先前如何使用「isTouching」積木後，學生便會一起思考其他方法讓兩個角色互動。然後學生會使用「isTouching」，讓一個角色在畫面中推動另一個角色，之後再練習 4 種碰撞積木（「collide」、「displace」、「bounce」與「bounceOff」）。
            Functions:
              name: 函式
              description_student: 本課堂會說明以函式 function 做為方式，以組織程式碼、讓程式碼更易讀懂，並移除重複的程式碼積木。班級裡的學生會學到，更高級別或更抽象的步驟，可讓我們更容易瞭解及思考各步驟，然後學生便會開始在 Game Lab 中建立函式。在課堂結束時，學生會運用這些技巧，組織橫向捲軸遊戲的最終版本，以及再加入其他功能。
              description_teacher: 學生會學習如何建立函式，以組織程式碼、讓程式碼更易讀懂，並移除重複的程式碼積木。不插電暖身活動用於探討不同細緻級別的移動可以有所用處，視當時情況而定。學生將會學到，更高級別或更抽象的步驟，可讓我們更容易瞭解及思考各步驟，然後學生便會開始學習在 Game Lab 中建立函式。他們會使用函式，從 draw 迴圈中移除冗長的程式碼積木，並以單一條函式取代重複的程式碼。在課堂結束時，學生會運用這些技巧，組織橫向捲軸遊戲的最終版本，以及再加入其他功能。
            The Game Design Process:
              name: 遊戲設計流程
              description_student: 本課堂會介紹相關流程，班級裡的學生將會在單元的餘下部分，使用這個流程設計遊戲。學生會在不同的關卡中瞭解這項流程。做為本課堂的一部分，班級同學也會學習在 Game Lab 中使用多畫格的動畫。在課堂結束時，他們將有機會改良遊戲，使之成為自己的作品。
              description_teacher: 本課堂會向學生介紹相關流程，他們將會在單元的餘下部分，使用這個流程設計遊戲。這項流程會以一個專案指南為中心，指南中會要求學生定義其角色、變數與函式，然後才開始為遊戲設計程式。在本課堂中，學生首先會在 Game Lab 中玩一款遊戲，遊戲期間程式碼會被隱藏。學生會展開討論，指出他們認為需使用哪些角色、變數與函式製作這款遊戲。學生會收到完整的專案指南，裡面會說明實作遊戲的一種方式。然後，學生會在不同的關卡中瞭解這項流程。做為本課堂的一部分，學生也會簡短地學習在 Game Lab 中使用多畫格的動畫。在課堂結束時，學生將有機會改良遊戲，使之成為自己的作品。
            Using the Game Design Process:
              name: 使用遊戲設計流程
              description_student: 在這個分為多天進行的課堂中，班級學生會使用單元 1 的問題解決流程，製作平台跳躍遊戲。觀察範例遊戲後，同學便會定義自己的遊戲看起來會怎樣，並使用結構化流程製作遊戲。最後，班級會反思可怎樣改良遊戲，並實作這些變更。
              description_teacher: 在這個分為多天進行的課堂中，學生會使用單元 1 的問題解決流程，製作平台跳躍遊戲。他們首先會觀察一款平台跳躍範例遊戲，然後定義自己的遊戲看起來會怎樣。接著，學生便會使用結構化流程，規畫實作遊戲時需要的背景、變數、角色和函式。為遊戲編寫程式碼後，學生會反思可怎樣改良遊戲，並實作這些變更。
            Project - Design a Game:
              name: 專案 - 設計一個遊戲
              description_student: 班級學生會使用上兩個課堂的專案指南，計畫並製作原創遊戲。同學會分為兩人一組，然後規畫、開發遊戲，並為遊戲提供回饋意見。納入同伴的回饋後，同學便會分發完成的遊戲。
              description_teacher: 學生會計畫並製作自己的遊戲，這時候他們會使用上兩個課堂的專案指南引導製作專案。學生會分為兩人一組，首先決定希望製作的遊戲類型，並以一些範例遊戲做為創作靈感。然後，他們會完成空白的專案指南，說明遊戲的行為，並瞭解需要建立的變數、角色與函式。在 Code Studio 中，會有一些關卡提示學生可使用哪項一般序列實作自己的計畫。在流程的途中，學生會分享自己的專案作品供同儕審查，並在完成遊戲時納入其他同學的回饋意見。在課堂結束時，學生會向同學分享完成的遊戲。此專案會覆延伸至數個課節，且可能很容易便會分為 3-5 個課節。
            CS Discoveries End of Semester Survey:
              name: 電腦科學探索學期結束問卷調查
            CS Discoveries Post-Course Survey:
              name: 電腦科學探索課後問卷調查
          student_description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
        csd2-2018:
          title: CSD 單元 2 - Web 開發  ('18-'19)
          description: 在單元 2 中，你會學習如何在自己的網頁中製作並分享內容。決定你想與全世界分享哪些內容後，便會學習怎樣使用 HTML 與 CSS 構築自己的網頁。你也會練習各種寶貴的程式設計技巧，例如除錯與寫下註解。在單元結束時，你將可製作出屬於自己的個人網站，並可在網際網路上發佈。
          description_short: 在 Web Lab 中學習製作自己的網站。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章：網站內容和 HTML
            csd2_2:
              display_name: 第 2 章：樣式和 CSS
            cspSurvey:
              display_name: 問卷
          lessons:
            Exploring Websites:
              name: 探索不同網站
              description_student: 本課堂會說明網站可能需要為使用者和製作者達成之目的。班級同學會觀看一些美國最多人使用的網站，並討論其中每個網站對使用者的用處有多大，以及可怎樣同時為製作者服務。
              description_teacher: 每個網站都有製作之目的 - 某人製作網站與其他人使用的理由。在本課堂中，學生會開始思考一個網站可能會有的目的，不論是為使用者還是為製作者達成之目的。學生會觀看一些美國最多人使用的網站，並嘗試瞭解每個網站對使用者的用處有多大，以及可怎樣同時為製作者服務。
            'Websites for Expression ':
              name: 建立網站，表達內容
              description_student: 本課堂介紹以網站做為表達自我的途徑。班級同學首先會討論大眾會使用哪些不同方法，以表達並分享自己的興趣和構思，然後觀察一些範例網站，這些網站由前一個課程的學生完成。最後，所有同學都一起思考並分享可加入的主題與興趣清單，為單元餘下部分創造資源，以製作個人網站。
              description_teacher: 在本課堂中，學生會研究不同方法，以使用網站做為個人表達的途徑，並建立希望在個人網站中加入的主題與興趣清單。開始課堂時，學生會一起思考不同方法，以表達並分享自己的興趣和構思。然後，學生會觀察一些範例網站（這些網站由前一個電腦科學探索課程的學生完成），以找出表達構思的方法。最後，學生會一起思考並分享可能想在個人網站中加入的主題與興趣清單，讓他們可在單元進行中時參考，從而獲得靈感構思。
            Intro to HTML:
              name: HTML 簡介
              description_student: 本課堂介紹以 HTML 做為解決方案，解決如何把網站內容與結構傳達給電腦的問題。課堂開始時，首先會進行簡短的不插電活動，展示有效與網頁的結構通訊時的挑戰。班級同學會在 Web Lab 中觀看一個 HTML 網頁，並討論 HTML 標籤如何協助解決這個問題，然後再使用 HTML 編寫單元中的第一個網頁。
              description_teacher: 在本課堂中，學生會學習以 HTML 做為解決方案，解決如何把網站內容與結構傳達給電腦的問題。課堂開始時，首先會進行簡短的不插電活動，展示有效與網頁的結構通訊時的挑戰。學生會在 Web Lab 中觀看一個 HTML 範例網頁，並與同學討論 HTML 標籤如何協助解決這個問題。之後，學生便會編寫第一個 HTML 網頁。總結討論可協助鞏固學生在課堂中，對內容與結構比較的瞭解。
            Headings:
              name: 標題
              description_student: 本課堂會繼續介紹 HTML 標籤，這次會介紹 header。班級會練習使用 header 標籤建立頁面與區域標題，並學習不同的 header 元素在預設下如何顯示。然後，班級同學便會計畫如何在個人網頁中組織內容（這些網頁會在單元內逐步建立），並開始專案的首頁。
              description_teacher: 在本課堂中，學生會繼續使用 HTML 構築網頁上的文字，這次則會製作標題（heading）。學生會學習不同的標題元素在預設下如何顯示，並練習使用這些元素建立頁面與區域標題。然後，學生會開始決定如何在自己的網頁中組織內容。在最後一個關卡中，學生會開始製作專案，並會在整個單元中繼續製作。
            Digital Footprint:
              name: 數位足跡
              description_student: 本課堂會暫停建立個人網站，用來解說大眾選擇以數位分享的個人資訊。班級學生首先會討論有哪些類型的資訊可與他人分享，然後瀏覽一些範例社交媒體頁面，瞭解有哪些類型的個人資訊可能會有意或無意地分享出去。最後，學生會制定一套指引，並在資訊上線遵從這些指引。
              description_teacher: |-
                學生最近已花了一些時間，思考有哪些實際內容會放在個人網站上。現在本課堂會暫停製作橫跨整個單元的專案（發佈個人網站），以協助學生說明自己會選擇以數位形式分享哪些個人資訊，以及向哪些人分享。課堂也會強調，他們選擇以數位形式分享的很多資訊，很大程度在發佈後已無法受自己控制。\\r
                \\r
                學生首先會各自找出合適的受眾，意指學生向這些受眾分享定特的個人資訊時會感到自在。然後，他們會瀏覽一些社交媒體頁面，以判斷大眾會分享關於自己或別人的哪些類型資訊。最後學生會反思一下，認為在線上張貼資訊時應遵守哪些指引。\\r
                \\r
                本課堂的最終要點不是要嚇怕學生，而是以實驗的性質讓學生準確瞭解，他們在線上發佈資訊後無法控制資訊的程度。
            Lists:
              name: 清單
              description_student: 本課堂介紹有序與無序清單，以及相關的 \<ul>、\<ol> 與 \<li> HTML 標籤。班級裡的學生會練習使用標籤，然後回到個人網頁專案中加入新的 HTML 頁面，頁面內包含這些新標籤。
              description_teacher: 學生會學習 HTML 中的有序與無序清單，並完成數個關卡，他們會在關卡裡使用 \<ul>、\<ol> 與 \<li> 標籤。然後他們會返回自己的專案，並加入新的 HTML 頁面。在新頁面中，學生會編寫 HTML，以顯示食譜、「十大」名單，或是使用剛學到的標籤顯示任何其他內容。
            Intellectual Property and Images:
              name: 知慧財產權與圖像
              description_student: 本課堂會說明怎樣在網站內，使用其他人製作的媒體（例如圖像、影片或音樂），同時尊重相關媒體創作者的權利。學習創用 CC（Creative Commons）授權後，班級同學便會學習怎樣把圖像加入網頁上，以及在加入圖像時如何給予適當的姓名標示。
              description_teacher: |-
                班級首先會討論自己的個人意見，說明其他人應怎樣獲得自己的同意使用自己的作品，然後探索著作權（Copyright）之目的，以及其對創意內容創作者和使用者的作用。之後，學生便會開始一項活動，瞭解不同的 Creative Commons 授權，做為難以處理著作權問題的解決方案。

                最後，學生在一致瞭解不同 Creative Commons 授權的限制後，便會學習怎樣使用 \<img> 標籤，把影像加入自己的網頁中。
            Clean Code and Debugging:
              name: 乾淨代碼和偵錯調試
              description_student: 本課堂教導在設計 HTML 網頁時出現的常見問題。班級學生會在一系列越來越複雜的網頁（在 Code Studio 上提供）中修正錯誤，並學習註解（comment）、白色空間（whitespace）與縮排（indentation）在製作網頁時的重要性：這些是讓讀者更易閱讀網頁內容的工具。
              description_teacher: 學生會處理一些在設計 HTML 網頁時出現的常見問題。他們會在一系列越來越複雜的網頁中修正錯誤。在過程中，他們會學習註解（comment）、白色空間（whitespace）與縮排（indentation）在製作網頁時的重要性：這些是讓讀者更易閱讀網頁內容的工具。在課堂結束時，學生會制定策略清單，用於為網頁除錯，並確保內容易於閱讀與維護。
            Project - Multi-Page Websites:
              name: 專案 - 多頁式網站
              description_student: 本課堂會說明超連結（hyperlink），這項功能可讓網頁開發人員將不同的頁面連結至一個網站。班級同學會把所有先前建立的頁面連結至一個專案，並為每頁建立導覽列，然後再把整個網站發佈到 Web 上。
              description_teacher: |-
                學習怎樣互相連結網頁後，學生最終將能夠發佈一直以來製作的網站。在本課堂中，學生會把所有先前建立的頁面連結至一個專案、建立新頁面，並為不同頁面建立導覽列，然後再把整個網站發佈到 Web 上。\\r
                \\r
            Styling Text with CSS:
              name: 透過 CSS 修改文字樣式
              description_student: 本課堂會介紹以 CSS 做為修改頁面元素樣式的方法。班級學生會學習 CSS 規則集的基本語法，然後瞭解會影響 HTML 文字元素的屬性。最後，所有學生都會把文字樣式套用至自己的個人網站。
              description_teacher: |-
                本課堂會介紹以 CSS 做為修改頁面元素樣式的方法。學生會學習 CSS 規則集的基本語法，然後瞭解會影響 HTML 文字元素的屬性。他們會製作關於金氏世界紀錄保持者的 HTML 頁面，並在提供的頁面中加入自己的樣式。在最後一個關卡中，學生會把學到的文字元素樣式，套用至自己的個人網站。\\r
                \\r
            Styling Elements with CSS:
              name: 透過 CSS 修改元素樣式
              description_student: 本課堂會繼續介紹 CSS 樣式屬性，這次會更集中說明文字以外的元素。班級學生首先會研究並修改「世界各地的甜品」頁面上的新 CSS 樣式。然後，所有學生都會把這項知識套用至自己的個人網站中。
              description_teacher: 本課堂會繼續介紹 CSS 樣式屬性，這次會更集中說明文字以外的元素。學生在開始本課堂時，首先會瀏覽關於「世界各地的甜品」的網站。他們會研究並修改這個網站上的新 CSS 樣式，並在網站上加入自己的樣式。完成甜品頁面後，學生會套用新 CSS 屬性的知識，為自己網站做進一步的樣式修改。
            Sources and Search Engines:
              name: 來源和搜尋引擎
              description_student: 班級同學首先會完成網頁搜尋尋寶遊戲，然後再學習搜尋引擎的內部運作，並有機會搜尋怪異與不太可能存在的動物，從而加強分析技巧。
              description_teacher: 本課堂鼓勵學生以更富批判思考精神的方式，思考網頁搜尋如何運作，以及怎樣在線上找出相關且可靠的資訊。檢視討論相關影片（內容關於搜尋引擎如何運作）後，學生會搜尋一些不太可能存在的動物之資訊。他們需要分析找到的網站是否可靠，從而確認哪些動物實際上是惡作劇。
            RGB Colors and Classes:
              name: RGB 色彩與類別
              description_student: 本課堂會說明類別（Classe）與自訂色彩。班級同學首先會學習如何使用 RGB（紅、綠、藍）值指定自訂色彩，然後將這些色彩套用於使用 CSS 類別的全新「四季」網頁。使用類別後，學生便可把更多樣式加入「四季」網頁，然後運用這些技巧修改自己個人網站的樣式。
              description_teacher: 在本課堂中，學生首先會學習如何使用 RGB（紅、綠、藍）值指定自訂色彩，然後將這些色彩套用於使用 CSS 類別的全新「四季」網頁。CSS 類別可讓網頁開發人員處理希望修改樣式的元素群組，且樣式與相同類型的其他元素不同。使用類別後，學生便可把更多樣式加入「四季」網頁，然後運用這些技巧修改自己個人網站的樣式。
            Project - Personal Portfolio Website:
              name: 專案 - 個人作品網站
              description_student: 在單元的最後幾天，班級裡的同學會為自己的網站做最終修改、與同伴每兩人一組取得回饋意見、檢閱評估指標，並將最終修改放在網站上。單元結束時，所有學生都會分享自己的專案，及分享開發的方式。
              description_teacher: 學生已在單元中花上大量時間製作自己的個人網站。在最後兩天，學生會為自己的網站做最終修改。他們會與同伴每兩人一組取得回饋意見、將最終修改放在網站上、檢閱評估指標並反思工作流程。單元結束時，學生會分享自己的專案，及概述他們獲得最終設計的流程。
            CS Discoveries Post-Course Survey:
              name: 電腦科學探索課後問卷調查
          student_description: 在單元 2 中，你會學習如何在自己的網頁中製作並分享內容。決定你想與全世界分享哪些內容後，便會學習怎樣使用 HTML 與 CSS 構築自己的網頁。你也會練習各種寶貴的程式設計技巧，例如除錯與寫下註解。在單元結束時，你將可製作出屬於自己的個人網站，並可在網際網路上發佈。
        coursea-2018:
          title: 課程 A（2018）
          assignment_family_title: 課程 A
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          description_short: 為學齡前兒童設計的計算機科學指引。
          description_audience: 年齡：4-7
          lessons:
            'Debugging: Unspotted Bugs':
              name: 沒被發現的程式的錯誤（Bug）
              description_teacher: 本課將指導學生除錯的步驟。學生會學到步驟「目前發生的事？應該發生的事？這代表什麼？」
            'Persistence & Frustration: Stevie and the Marbles':
              name: Stevie 和 Big Project
              description_teacher: |-
                學生在回答問題或製作專案時若遇到障礙，他們會很容易沮喪並放棄。本課堂會向學生解釋，灰心可以是學習中很重要的部分。在課堂中，灰心可表現為創意流程的一個步驟，而不是失敗的徵兆。\\r
                \\r
                本課堂可以 1 到 2 個課節完成。若你有更多時間，可隨意在彈珠跑跑活動中描繪出建立與修改階段。
            'Real-life Algorithms: Plant a Seed':
              name: 植物種植
              description_teacher: 在本課中，學生將通過實際種植，將演算法的概念與現實生活的活動關聯。這裡的目標是開始培養技能，將現實世界的情況轉化為線上場景，或是相反。\\r
            Learn to Drag and Drop:
              name: 學習滑鼠的拖放
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            'Programming: Happy Maps':
              name: 快樂地圖
              description_teacher: 如果學生理解規畫順序和將它循序編程之間的區別，那麼從演算法過渡到程式設計的時間就不會太長，這項活動將透過速記讀寫代碼的方式幫助學生獲得經驗。
            Programming in Maze:
              name: 與憤怒鳥一起編程
              description_teacher: 在這一系列的線上關卡中，學生將建立演算法、除錯、一般計算機理論的知識。登場的是「憤怒鳥」遊戲中的角色，學生將開發循序演算法，讓憤怒鳥不會撞牆或碰上炸藥。關卡的除錯也被混合到這個階段，以增加解決問題和批判性思維的練習。
            Going Places Safely:
              name: 安全的遨遊網路世界
              description_teacher: 與 [r common-sense-media] 媒體合作，這課在讓學生學習到網站會要求提供私人訊息，並會討論如何負責的處理這類請求。學生也會對神奇的網路世界感到興奮，但他們必須遵守某些規則來維護自己的安全。
            'Loops: Happy Loops':
              name: 迴圈（Loops） - 快樂迴圈
              description_teacher: 迴圈是程式設計中非常有用且強大的工具。為了理解迴圈的用處，就必須逼著學生去思考更簡潔的方式來解決平凡的問題。
            Loops in Collector:
              name: 與 Laurel 一起學習迴圈
              description_teacher: 從「快樂迴圈」中建立重複指令的概念，這個階段會讓學生用迴圈更有效率的收集寶藏。
            Loops in Artist:
              name: 海洋場景與迴圈（Loop）
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            'Events: The Big Event':
              name: 小小大事件
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            Events in Play Lab:
              name: 讓事件活動起來
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！
            Programming in Bee:
              name: 在蜜蜂遊戲中設計程式
            Programming in Harvester:
              name: 和農夫一起學程式
            Loops in Harvester:
              name: 與農夫一起學迴圈（Loops）
            Sequencing in Maze:
              name: 迷宮中的循序（Sequence）
            'Persistence & Frustration: Stevie and the Big Project':
              name: Stevie 和 Big Project
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        express-2018:
          title: 速學課程
          assignment_family_title: 速學課程
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          description_short: 電腦科學簡介：結合我們最優秀的國小課程內容，供年齡較大的學生學習。
          description_audience: 年齡 9-18
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 方格紙編程
            Introduction:
              name: 介紹
            Building a Foundation:
              name: 打好基礎
            Debugging in Collector:
              name: 和收藏家學除錯（Debug）
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 使用迴圈（Loop）繪畫貼紙藝術
            Nested Loops:
              name: 巢狀迴圈
            Nested Loops Project in Frozen:
              name: 冰雪奇緣中的巢狀迴圈（Nested Loops）
            'How it Works: The Internet':
              name: 如何運作：網際網路
            'Common Sense Education: Digital Citizenship':
              name: 通識教育 - 數位公民
            'Common Sense Education: Screen Out the Mean':
              name: 常識教育：防止壞蛋騷擾
            'Events: The Big Event':
              name: 大事件
            Events in Star Wars:
              name: 星際大戰中的事件（Event）
            Events with Flappy:
              name: 與像素鳥一起嘗試事件（Event）
            Events in Bounce:
              name: 彈板遊戲中的事件（Event）
            'Conditionals: Conditionals with Cards':
              name: 條件式：使用卡牌學習條件式（Conditional）
            While Loops in Farmer:
              name: 與農夫一起嘗試 while（當）迴圈
            Conditional Loops in Maze:
              name: 迷宮裡的條件式迴圈（Conditional Loop）
            Conditionals in Minecraft:
              name: Minecraft 中的條件式
            Conditionals & Loops in Farmer:
              name: 農夫遊戲中的條件式（Conditional）與迴圈（Loop）
            'Variables: Envelope Variables':
              name: 變數：信封裡的變數
            Variables in Artist:
              name: 小藝術家裡的變數
            Variables in Play Lab:
              name: Play Lab 裡的變數
            'For Loops: For Loop Fun':
              name: For（計數）迴圈：有趣的計數迴圈
            For Loops in Bee:
              name: 與蜜蜂一起嘗試 for（計數）迴圈
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
            'Functions: Songwriting with Parameters':
              name: 函式：用參數寫歌
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions with Parameters in Artist:
              name: 在藝術家遊戲中學習函式帶參數（Parameter）
            Functions with Parameters in Bee:
              name: 在蜜蜂遊戲中學習函式帶參數（Parameter）
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Revise Your Project:
              name: 修改你的專案
            Present Your Project:
              name: 說明你的專案
            Conditionals in Bee:
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
            Until Loops in Maze:
              name: 迷宮裡的 until（直到）迴圈
            Programming in Maze:
              name: 與憤怒鳥一起編程
            Debugging in Maze:
              name: 與鼠奎特一起除錯
            Programming in Collector:
              name: 和 Laurel 一起收集寶石
            Programming in Artist:
              name: 用代碼創作藝術
            'Loops: Getting Loopy':
              name: 學習迴圈
            Loops with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
            Copyright and Creativity:
              name: 版權與創意
            'Concept Practice with Minecraft ':
              name: 與 Minecraft 一起展望未來
            Nested Loops in Bee:
              name: 蜜蜂裡的巢狀迴圈（Nested Loops）
            Nested Loops in Frozen:
              name: 和安娜與艾莎一同練習巢狀迴圈（Nested Loops）
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Conditionals & Loops in Harvester:
              name: 使用條件式（Conditional）收割農作物
            'Functions: Songwriting':
              name: 歌曲創作
            Functions in Minecraft:
              name: 在 Minecraft 裡寫函式
            Functions in Harvester:
              name: 與收割者一起練習函式（Function）
            Functions in Artist:
              name: 藝術家遊戲中的函式（Function）
            Screen Out the Mean:
              name: 防止壞蛋騷擾
            Determine the Concept:
              name: 釐清概念
            Build a Flappy Game:
              name: 製作像素鳥遊戲
            The Power of Words:
              name: 語言的力量
            Envelope Variables:
              name: 信封變數
            Variables as Constant in Artist:
              name: 在藝術家遊戲中學習變數
            Variables that Change in Bee:
              name: 在蜜蜂遊戲中變更變數
            Variables that Change in Artist:
              name: 在藝術家遊戲中變更變數
            For Loop Fun:
              name: 有趣的計次迴圈
            Learning Sprites with Sprite Lab:
              name: 學習 Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: 外星人舞蹈派對
            Pet Giraffe with Sprite Lab:
              name: 寵物長頸鹿
            Binary Bracelets:
              name: 二進制手環
            'Unplugged: Binary':
              name: 二進制圖像
            Internet:
              name: 網際網路
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
            Relay Programming:
              name: 接力編程
            Graph Paper Programming:
              name: 方格紙編程
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        courseb-2018:
          title: 課程 B（2018）
          assignment_family_title: 課程 B
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          description_short: 為學前兒童準備的電腦科學介紹。類似課程 A，但採用更深入的概念。
          description_audience: 年齡 5-8
          lessons:
            'Debugging: Unspotted Bugs':
              name: 除錯（Debug）- 沒被發現的蟲蟲
            'Persistence & Frustration: Stevie and the Marbles':
              name: 堅持與挫折：Stevie 和彈珠
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
            Learn to Drag and Drop:
              name: 學習滑鼠的拖放
            Your Digital Footprint:
              name: 你的數位足跡
            'Programming: My Robotic Friends':
              name: 我的小機器人朋友
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            Programming with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起寫程式
            'Loops: My Loopy Robotic Friends':
              name: 我的愛迴圈小機器人朋友
            Loops in Collector:
              name: 與 Laurel 一起學習迴圈
            Loops in Artist:
              name: 使用迴圈（Loop）在花園中繪畫
            'Events: The Big Event':
              name: 小小大事件
            Events in Play Lab:
              name: 以事件（Event）展開皇家大戰
            Programming in Ice Age:
              name: 和鼠奎特一起寫程式
            Loops in Ice Age:
              name: 和鼠奎特一起學迴圈（Loop）
            Sequencing with Scrat:
              name: 和鼠奎特一起學序列
            Move It, Move It:
              name: 移動它，移動它
            Copyright and Creativity:
              name: 以公平的方式製作與玩遊戲
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        coursed-2018:
          title: 課程 D（2018）
          assignment_family_title: 課程 D
          description: 學生學習巢狀迴圈、當迴圈、條件與事件，除了編碼，學生還會學到什麼是數位公民。
          description_short: 學習條件式（conditional）陳述句，並創作自己的藝術、故事或遊戲。
          description_audience: 年齡 7-11
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 方格紙編程
            Introduction:
              name: 介紹
            Building a Foundation:
              name: 打好基礎
            Debugging in Collector:
              name: 和 Laurel 學除錯（Debug）
            Events in Bounce:
              name: 彈板遊戲中的事件（Event）
            Loops in Artist:
              name: 以迴圈（Loop）繪畫藝術作品
            Nested Loops in Bee:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Conditionals in Bee:
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
            Conditionals & Loops in Maze:
              name: 迷宮裡的條件式（Conditional）與迴圈（Loop）
            Conditionals & Loops in Farmer:
              name: 農夫遊戲中的條件式（Conditional）與迴圈（Loop）
            Digital Citizenship:
              name: 數位公民
            Build a Play Lab Game:
              name: 忍者大戰海盜遊戲
            'Unplugged: Binary':
              name: 二進制圖像
            Loops in Ice Age:
              name: 冰河歷險紀中的迴圈
            Nested Loops in Frozen:
              name: 和安娜與艾莎一同玩雪花
            Until Loops in Maze:
              name: 迷宮裡的 until（直到）迴圈
            Conditionals in Maze:
              name: 迷宮裡的條件式（Conditional）
            Conditionals & Loops in Harvester:
              name: 使用條件式（Conditional）收割農作物
            Graph Paper Programming:
              name: 方格紙編程
            Relay Programming:
              name: 接力編程
            Introduction to Online Puzzles:
              name: 線上謎題簡介
            Events in Bouncey:
              name: 彈板遊戲中的事件（Event）
            Nested Loops in Bees:
              name: 蜜蜂裡的巢狀迴圈（Nested Loop）
            Nested Loops in Maze:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
          student_description: 學生學習巢狀迴圈、當迴圈、條件與事件，除了編碼，學生還會學到什麼是數位公民。
        jr-test:
          lessons:
            Programming with Behaviors:
              name: 用行為設計程式
            Programming with Forever:
              name: 使用 Forever（永遠）設計程式
            Using Behaviors:
              name: 行為的用法
            Using Forever Loops:
              name: 使用 Forever（永遠）迴圈
            Virtual Pet - Behaviors:
              name: 虛擬寵物 - 行為
            Fish Tank:
              name: 魚缸
            Virtual Pet - Forever:
              name: 虛擬寵物 - Forever
            Alien Dance Party - Input:
              name: 外星人舞蹈派對 - 輸入（Input）
            Virtual Pet - Interactions:
              name: 虛擬寵物 — 互動
        petgame:
          lessons:
            pet game:
              name: 寵物遊戲
        csp-exam:
          title: 電腦科學原理AP測驗準備
          description_short: 電腦科學原理AP測驗準備
          description: 本頁含有所有多選評估問題的副本，這些問題在課程單元 1-5 出現。學生可能需要接受這些小測試，做為多選題考試的練習。
          lessons:
            Unit 1 - Assessment 1:
              name: 單元 1 - 評量 1
            Unit 1 - Assessment 2:
              name: 單元 1 - 評量 2
            Unit 2 - Assessment 1:
              name: 單元 2 - 評量 1
            Unit 2 - Assessment 2:
              name: 單元 2 - 評量 2
            Unit 3 - Assessment 1:
              name: 單元 3 - 評量 1
            Unit 4 - Assessment 1:
              name: 單元 4 - 評量 1
            Unit 5 - Assessment 1:
              name: 單元 5 - 評量 1
            Unit 5 - Assessment 2:
              name: 單元 5 - 評量 2
            Unit 2 - Assessment 3:
              name: 單元 2 - 評量 3
            Unit 2 - Assessment 4:
              name: 單元 2 - 評量 4
            Unit 2 - Assessment 5 - Practice AP Pseudocode Questions:
              name: 單元 2 - 評估 5 - 實踐 AP 虛擬碼問題
            'Unit 1.1 - Binary and Ascii ':
              name: '單元 1.1 - 二進制與 Ascii '
            Unit 1.2 - Internet Protocols, TCP/IP, DNS, HTTP, etc.:
              name: 單元 1.2 - 網際網路協定、TCP/IP、DNS、HTTP 等
            Unit 2 - 1. Bits, Bytes, Hexadecimal and Compression:
              name: 單元 2 - 1. 位元、位元組、十六進制與壓縮
            Unit 2 - 2. Interpreting Data & Charts, Big Data, Global Impacts:
              name: 單元 2 - 2. 詮釋資料與圖表、大數據、全球影響
            Unit 3 - 1. Programming - Turtle, Loops, Functions, Abstraction:
              name: 單元 3 - 1. 程式設計 - 小海龜、迴圈、函式、抽象化
            Unit 3 - 1 Programming - Turtle, Loops, Functions, Abstraction:
              name: 單元 3 - 1 程式設計 - 小海龜、迴圈、函式、抽象化
            'Unit 1 Assessment 1 - Binary and Ascii ':
              name: '單元 1 評估 1 - 二進制與 Ascii '
            Unit 1 Assessment 2 - Internet Protocols, TCP/IP, DNS, HTTP, etc:
              name: 單元 1 評估 2 - 網際網路協定、TCP/IP、DNS、HTTP 等
            Unit 2-1 - Bits, Bytes, Hexadecimal and Compression:
              name: 單元 2-1 - 位元、位元組、十六進制與壓縮
            Unit 2-2 - Interpreting Data & Charts, Big Data, Global Impacts:
              name: 單元 2-2 - 詮釋資料與圖表、大數據、全球影響
            Unit 3 Quiz 1 - Turtle Programming, Loops, Functions, Abstraction:
              name: 單元 3 小測 1 - 小海龜程式設計、迴圈、函式、抽象化
            Unit 2 Assessment 1 - Bits, Bytes, Hexadecimal and Compression:
              name: 單元 2 評估 1 - 位元、位元組、十六進制與壓縮
            Unit 2 Assessment 2 - Interpreting Data & Charts, Big Data, Global Impacts:
              name: 單元 2 評估 2 - 詮釋資料與圖表、大數據、全球影響
            Unit 3 Assessment 1 - Turtle Programming, Loops, Functions, Abstraction:
              name: 單元 3 評估 1 - 小海龜程式設計、迴圈、函式、抽象化
            Unit 4 Assessment 1 - Privacy, Cybersecurity, Encryption:
              name: 單元 4 評估 1 - 隱私、網路安全、加密
            Unit 5 Assessment 1 - Events, Variables, Debugging, Arithmetic, Turtle Review:
              name: 單元 5 評估 1 - 事件、變數、除錯、算術、小海龜回顧
            Unit 5 Assessment 2 - If Statements, Boolean Expressions, Strings:
              name: 單元 5 評估 2 - If 陳述句、布林值運算式、字串
            Unit 5 Assessment 3 - While Loops, Boolean Expressions, Arrays and Lists:
              name: 單元 5 評估 3 - While 迴圈、布林值運算式、陣列與清單
            Unit 5 Assessment 4 - List Algorithms, Functions with Return Values:
              name: 單元 5 評估 4 - 列出演算法、帶回傳值的函式
            Unit 5 Assessment 5 - Practice AP Pseudocode Questions (Variables, Procedures, Loops, Conditionals):
              name: 單元 5 評估 5 - 實踐 AP 虛擬碼問題（變數、程序、迴圈、條件式）
          student_description: 本頁含有所有多選評估問題的副本，這些問題在課程單元 1-5 出現。學生可能需要接受這些小測試，做為多選題考試的練習。
        coursec-2018:
          title: 課程 C（2018）
          assignment_family_title: 課程 C
          description: 以序列、迴圈與事件製作程式。將你的姓名首字母轉換成二進制碼，瞭解不同的問題解決技巧，以及學習怎樣應付網路欺凌。在課程結束時，你可創造出自己的遊戲或故事，然後向別人分享！
          description_short: 學習基本的計算機科學，創造屬於你自己的藝術、故事、遊戲作品。
          description_audience: 年齡 6-10
          lessons:
            Building a Foundation:
              name: 打好基礎
            Programming in Maze:
              name: 與憤怒鳥一起編程
            Debugging in Maze:
              name: 在迷宮中除錯
            'Real-life Algorithms: Paper Planes':
              name: 紙飛機
            Programming in Collector:
              name: 和 Laurel 一起收集寶石
            Programming in Artist:
              name: 用代碼創作藝術
            'Loops: Getting Loopy':
              name: 學習迴圈
            Loops with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
            Loops in Artist:
              name: 使用迴圈（Loop）繪畫貼紙藝術
            Loops in Harvester:
              name: 使用迴圈（Loop）收割農作物
            'Events: The Big Event':
              name: 大事件
            Build a Flappy Game:
              name: 製作像素鳥遊戲
            Events in Play Lab:
              name: 使用事件（Event）玩追逐遊戲
            Screen Out the Mean:
              name: 防止壞蛋騷擾
            Binary Bracelets:
              name: 二進制手環
            Looking Ahead:
              name: 與 Minecraft 一起展望未來
          student_description: 以序列、迴圈與事件製作程式。將你的姓名首字母轉換成二進制碼，瞭解不同的問題解決技巧，以及學習怎樣應付網路欺凌。在課程結束時，你可創造出自己的遊戲或故事，然後向別人分享！
        csd6-2018:
          title: CSD 單元 6 - 物理運算 ('18-'19)
          description_short: 在實體裝置上開發程式
          lesson_groups:
            csd6_1:
              display_name: 第 1 章：硬體輸出
            csd6_2:
              display_name: 第 2 章：建立物理原型
            cspSurvey:
              display_name: 問卷
          lessons:
            Innovations in Computing_:
              name: 運算上的創新\_
            Designing Screens with Code_:
              name: 以程式碼設計螢幕畫面\_
            The Circuit Playground_:
              name: 電路（Circuit ）遊樂場\_
            Input Unplugged_:
              name: 輸入（不插電）\_
            Board Events_:
              name: 電路板事件\_
            Getting Properties_:
              name: 取得屬性\_
            Analog Input_:
              name: 模擬輸入\_
            The Program Design Process_:
              name: 程式設計流程\_
            'Project: Make a Game__':
              name: 專案：創建一個遊戲\_\_
            Arrays and Color LEDs__:
              name: 陣列與彩色 LED\_\_
            Making Music_:
              name: 製作音樂\_
            Arrays and For Loops_:
              name: 陣列和 for（計數）迴圈\_
            Accelerometer_:
              name: 加速計\_
            Functions with Parameters_:
              name: 函式帶參數\_
            Circuits and Physical Prototypes_:
              name: 電路與實體原型\_
            'Project: Prototype an Innovation_':
              name: 專案：原型創新\_
            Innovations in Computing:
              name: 運算上的創新
            Designing Screens with Code:
              name: 以程式碼設計螢幕畫面
            The Circuit Playground:
              name: 電路（Circuit ）遊樂場
            Input Unplugged:
              name: 不插電介紹輸入（Input）
            Board Events:
              name: 電路板事件
            Getting Properties:
              name: 取得屬性
            Analog Input:
              name: 模擬輸入
            The Program Design Process:
              name: 程式設計流程
            'Project: Make a Game':
              name: 專案：創建一個遊戲
            Arrays and Color LEDs:
              name: 陣列與彩色 LED
            Making Music:
              name: 製作音樂
            Arrays and For Loops:
              name: 陣列和 for（計數）迴圈
            Accelerometer:
              name: 加速計
            Functions with Parameters:
              name: 函式帶參數
            Circuits and Physical Prototypes:
              name: 電路與實體原型
            'Project: Prototype an Innovation':
              name: 專案：原型創新
            CS Discoveries Post-Course Survey:
              name: 電腦科學探索課後問卷調查
        coursee-2018:
          title: 課程 E（2018）
          assignment_family_title: 課程 E
          description: 首先使用演算法（algorithm）、迴圈（loop）、條件式（conditional）和事件（event）開始編寫程式，然後你將會學習函式（function）。在本課程的第 2 部分，你便會開始設計和製作一個總結專案，並可與你的好友和家人分享。
          description_short: 預覽課程 C & D 的概念，進一步的學習函式。
          description_audience: 年齡 8-12
          lesson_groups:
            csf_e_1:
              display_name: 升至課程 E (可選擇的)
            csf_e_2:
              display_name: 課程 E 內容
            end_of_course_project:
              display_name: 課程結束專案
            extra_course_content:
              display_name: 額外的課程內容
          lessons:
            'Programming: My Robotic Friends':
              name: 我的機器人朋友
            Sequence in Maze:
              name: 編寫程式時使用註解（Comment）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 用代碼創作藝術
            'Loops: My Loopy Robotic Friends':
              name: 我的愛迴圈機器人朋友
            Loops in Artist:
              name: 以迴圈（Loop）繪畫藝術作品
            Nested Loops:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            'Algorithms: Dice Race':
              name: 演算法：骰子賽跑
              description_student: 在這個關於演算法的課堂中，你會學習如何以電腦的角度描述一款遊戲。
              description_teacher: 在本課堂中，學生將會玩骰子賽跑遊戲，將演算法的概念與現實生活的活動關聯。這裡的目標是開始培養技能，將現實世界的情況轉化為線上場景，或是相反。
            Introduction:
              name: 介紹
              description_student: 這個簡短介紹可讓你有機會練習所需技巧，從而在本課程中完成謎題。
              description_teacher: 在這項進展中，學生會開始瞭解（或回顧，視班級經驗而定）Code.org 的線上工作區。學生會學習介面的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕等。拖曳、刪除與連接 Blockly 積木的功能，也會在開始影片中介紹。在各謎題中，學生會在迷宮與藝術家中練習序列與除錯技巧。
            Conditionals:
              name: 與農夫一起嘗試條件式（Conditional）
              description_student: 在這個有趣而具挑戰的遊戲系列中，你會告訴電腦在某些特定條件下如何行動。
              description_teacher: 本課堂會向學生介紹「while」（當）迴圈與「if / else」（如果/否則）陳述句。_While 迴圈_ 用於在條件是 true 時繼續重複命令。While 迴圈的使用情況是：程式設計師不知道命令確實需要重複多少次，但是知道哪項條件需要為 true，才可讓迴圈繼續重複。「If / Else」陳述句為程式設計提供彈性，程式僅會在某個項目為 true 時執行整個部分，否則便會執行其他項目。
            Private and Personal Information:
              name: 隱私與個人資訊
              description_student: 網際網路刺激有趣，但是也有必要保持安全！本課堂會教你有哪些資訊可安全分享，有哪些資訊則應保持私密。
              description_teacher: |-
                本課堂由常識教育（Common Sense Education）制定，內容關於可在線上安全分享的內容，與不可在線上安全分享的內容有哪些區別。

                瀏覽一些網站時，若網站請求學生取得他們身分的資訊，他們就會學習採取批判性的查詢程序，讓他們能保護自己與家人免遭盜用身分。在本課堂中，學生會學習以批判思考方式，思考部分網站請求或要求取得的使用者資訊。他們會學習私密資訊與個人資訊的分別，並瞭解如何分辦哪些內容可在線上安全分享，哪些內容則不安全。
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
              description_student: 在本課堂中，建立自己的星際大戰遊戲，感受原力的震撼！
              description_teacher: 在本課堂中，學生會練習使用事件（event）製作遊戲，並可在線上分享。在 R2-D2 和其他星際大戰的角色陪伴下，學生會在引導下學習各種事件，然後自由製作屬於自己的遊戲。
            'Functions: Songwriting':
              name: 歌曲創作
              description_student: 即使是搖滾巨星也需要程式設計技巧。本課堂會用歌曲裡的歌詞教授函式。
              description_teacher: 在電腦科學世界中，函式（function）可以說是最壯觀的結構之一。函式有時候稱為程序，是在龐大的程式中的一些迷你程式，可以不斷重複利用。本課堂將會幫助學生直觀的瞭解，為甚麼把這麼多零碎的程式碼組合成函式是非常有用的做法。
            Functions in Artist:
              name: 在藝術家遊戲中使用函式（Function）
              description_student: 使用函式，以更簡易的方式繪畫複雜的圖畫！
              description_teacher: 學生會在 Code.org 上學習使用函式（function）。他們會在藝術家遊戲中，使用函式來製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。
            Functions in Bee:
              name: 在蜜蜂遊戲中學習函式（Function）
              description_student: 不要寫太多程式碼收集所有花蜜與蜂蜜。應改為使用函式！
              description_teacher: 在函式線上練習的第 2 回合，學生會閱覽複雜路徑、收集大量花蜜，並製造出大量蜂蜜。
            Functions in Harvester:
              name: 在收割者遊戲中學習函式（Function）
            Determine the Concept:
              name: 釐清概念
              description_student: |-
                我們甚麼秘密都不會告訴你！
                在這個課堂中，你可使用之前學習的所有技巧。
              description_teacher: 本課堂首先會結合先前各課堂的概念，並讓學生有機會以批判的方式，思考可怎樣解決每個問題，但不會告訴他們應使用哪個概念。學生會重溫基本的演算法、除錯、「repeat」（重複）迴圈、條件式、「while」（當）迴圈與函式。
            Build a Play Lab Game:
              name: 製作 Play Lab 遊戲
              description_student: 練習製作遊戲，並與好友和家人分享。
              description_teacher: 本課堂會介紹 Play Lab 平台，學生可在這裡製作自己的遊戲，並可讓角色和使用者的輸入產生互動。學生會使用事件建立鍵盤控制。這一組謎題也能大概指導學生開發遊戲，但學生可自由加上自己的原創構思。
            Explore Project Ideas:
              name: 找些專案靈感
              description_student: 這裡有幾個遊戲和幾幅圖畫。嘗試所有遊戲和圖畫，為你的專案提供靈感構想！
              description_teacher: |-
                接下來的 4 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是多個課堂或多個星期的體驗，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。

                在探索階段中，學生將能夠檢視預先製作完成的藝術家與 Play Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家或 Play Lab 中製作自己的專案（這可能是專案中最長的階段）。最後，學生將能夠向同伴展示自己的成品。
            The Design Process:
              name: 設計流程
              description_student: 如此大的專案需要時間與充分的計畫。在這裡，你會學習設計流程，並用來製作自己的專案。
              description_teacher: 課程包含 4 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，編寫自己設計的專案。在專案的這個部分，學生會學習設計流程，並瞭解如何在自己的專案中實作。流程中全部 4 個階段的課堂指南，會在本專案流程的階段 1 [這裡] \(<https://curriculum.code.org/csf/coursee/12/>) 提供。
            Build Your Project:
              name: 建立你的專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
              description_teacher: 課程包含 4 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，編寫自己設計的專案。學生可使用藝術家或 Play Lab 自由創作自己的專案。這可能是專案中時間最長的階段。流程中全部 4 個階段的課堂指南，會在本專案流程的階段 1 [這裡] \(<https://curriculum.code.org/csf/coursee/12/>) 提供。
            Present Your Project:
              name: 說明你的專案
              description_student: 是炫耀自己的時候了！向同伴展示一下你的成品吧。
              description_teacher: 課程包含 4 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，編寫自己設計的專案。最後，學生將能夠向同伴展示自己的成品，或者以特殊連結向摯愛分享。流程中全部 4 個階段的課堂指南，會在本專案流程的階段 1 [這裡] \(<https://curriculum.code.org/csf/coursee/12/>) 提供。
            Internet:
              name: 網際網路
              description_student: 你有沒有想過，資訊怎樣在網際網路中傳輸？不是魔術！本課堂將會教導網際網路運作方面的基本知識。
              description_teacher: 即便許多人每天都會上網，但是理解其中原理的中卻不多。在本課堂中，學生會假裝流經網際網路，同時學習連線、URL、IP 位址與 DNS 的知識。
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
              description_student: 本課堂會教導你關於群眾外包（Crowdsourcing）的知識，這是以團隊製作專案的流程。
              description_teacher: 在電腦科學中，我們會面對一些重大而艱鉅的問題。各種挑戰，例如找出大質數或是 DNA 定序等，都是個人幾乎無法做到的事情。集合其他人的力量，就能夠管理這些工作。本課堂會向學生說明團隊合作在電腦科學行業中的效用。
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Minecraft Hour of Code:
              name: 一小時玩 Minecraft
            Functions in Minecraft:
              name: Minecraft 中的函式
            Learning Sprites with Sprite Lab:
              name: 學習 Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: 外星人舞蹈派對
            Pet Giraffe with Sprite Lab:
              name: 寵物長頸鹿
            Copyright and Creativity:
              name: 數位分享
          student_description: 首先使用演算法（algorithm）、迴圈（loop）、條件式（conditional）和事件（event）開始編寫程式，然後你將會學習函式（function）。在本課程的第 2 部分，你便會開始設計和製作一個總結專案，並可與你的好友和家人分享。
        coursef-2018:
          title: 課程 F（2018）
          assignment_family_title: 課程 F
          description: 學習使用不同類型的迴圈（loop）、事件（event）、函式（function）與條件式（conditional）。研究不同的問題解決技巧，並討論電腦運算和網際網路的社會影響。在本課程的第 2 部分，你會設計並製作一份總結專案，然後可把這個專案和好友與家人分享。
          description_short: 學習計算機科學的基礎概念，並創建自己的藝術、故事、遊戲作品。
          description_audience: 年齡 9-13
          lesson_groups:
            csf_f_1:
              display_name: 升至課程 F (可選擇的)
            csf_f_2:
              display_name: 課程 F 內容
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            'Programming: My Robotic Friends':
              name: 我的機器人朋友
            Sequence in Maze:
              name: 編寫程式時使用註解（Comment）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 用代碼創作藝術
            'Loops: My Loopy Robotic Friends':
              name: 我的愛迴圈機器人朋友
            Loops in Artist:
              name: 以迴圈（Loop）繪畫藝術作品
            Nested Loops in Bee/Zombie:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            'Algorithms: Tangrams':
              name: '演算法: 七巧板'
              description_student: 在此將學習使用稱之為七巧板的謎題的算法！
              description_teacher: 本課堂會向我們展示一些有關演算法的重要內容。只要讓演算法盡量保持簡單，便有大量方式可以自由運用。但是，若你想確保所有人都獲得相同結果，你的演算法就可能需要做得更詳細。學生會在玩七巧板時，學習詳細演算法與一般演算法的分別。
            Introduction:
              name: 介紹
              description_student: 本課堂會簡單介紹一些你在本課程中會學到的精彩內容！
              description_teacher: 在本課堂中，學生會學習序列（sequence）、迴圈（loop）與巢狀迴圈（nested loop），讓他們準備好在課程的較後部分學習更複雜的概念。本「提升」課堂可拉近班級裡專家與新手的能力差異。
            The Power of Words:
              name: 語言的力量
              description_student: 欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。
              description_teacher: |-
                學生要思考一下，他們在瀏覽喜愛的網站時，可能會有其他小孩傳送某些訊息，令他們憤怒、受傷、不快或恐懼。他們會學習一些方法處理網路霸凌，以及在線上面對難聽的話時應怎樣做出反應。

                學生會討論在通訊時所有使用科技的方式，並探索親身會面與線上溝通的相似與相異之處。學生之後會一起討論如何面對網路霸凌。
            Ice Age Play Lab:
              name: 冰原歷險記 Play Lab
              description_student: 思考一下你喜愛的電子遊戲。你有沒有想過怎樣製作這些遊戲？在這些謎題中，你會與冰原歷險記的好友，一起開發屬於自己的遊戲！
              description_teacher: 本課堂會引導學生看故事，裡面有冰原歷險記的角色。學生會使用事件（event）與迴圈（loop），讓角色在畫面上移動。在引導式關卡完成後，學生便有機會編寫自己的遊戲或故事。
            Conditionals in Minecraft:
              name: Minecraft 中的條件式
              description_student: 躲開岩漿！在 Minecraft 裡，你可以學會條件判斷。
              description_teacher: 本課堂讓學生有機會學習和練習條件式（conditional）。課堂會有 Minecraft 的角色與設定，學生將會完成和種任務，例如使用自己的程式採礦與搭起建築物。
            Envelope Variables:
              name: 信封變數
              description_student: "「信封」與「變數」有一個共通點：兩者都可放進有用的東西。在這裡，你會學習變數是甚麼，以及變數可以做哪些精彩的事。"
              description_teacher: 變數會用來做為值的佔位符，例如數字或詞語等。在程式設計中，變數可提供大量的自由度。電腦科學家不同輸入很多次同一個句子，或記住含糊的數字；他們可使用變數引用這些內容。本課堂會協助解釋甚麼是變數，以及我們可怎樣以不同方式使用變數。變數這種概念不容易掌握，因此我們建議在課堂結束時預留充足時間討論。
            Variables in Artist:
              name: 小藝術家裡的變數
              description_student: 別忘了把創意帶到課室！在這些謎題中，你會使用變數繪畫漂亮的圖畫。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            Variables in Play Lab:
              name: Play Lab 裡的變數
              description_student: 一會之後，你會學習使用變數，讓角色能夠在遊戲中互動！
              description_teacher: 在本課堂中，學生會在 Play Lab 中製作場景，從而繼續練習使用變數。學生會以使用者輸入，為變數設定各種值，然後用變數自由製作自己的迷你專案。
            For Loop Fun:
              name: 有趣的計次迴圈
              description_student: 玩「for」（計數）迴圈，發掘無窮樂趣！
              description_teacher: 我們知道迴圈可以讓我們不斷重複的做同一件事情。現在，我們要學習如何使用本身有額外結構的迴圈。這些新結構可讓學生編寫更強大、更具動態的程式碼。
            For Loops in Bee:
              name: 與蜜蜂一起嘗試 for（計數）迴圈
              description_student: 嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！
              description_teacher: 本課堂以蜜蜂為角色，集中學習 for 迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後學習使用 for 迴圈，以更有效解決複雜的問題。
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
              description_student: 準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。
              description_teacher: 在本課堂中，學生會繼續練習 for 迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與 for 迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。
            Songwriting with Parameters:
              name: 用參數寫歌
              description_student: 你也許能製作出下一首熱門單曲！在本課堂中，你會學習甚麼是參數，以及參數可怎樣創作精彩的歌曲！
              description_teacher: 在電腦科學世界中，函式（function）可以說是最壯觀的結構之一。函式有時候稱為程序，是在龐大的程式中的一些迷你程式，可以不斷重複利用。本課堂將會幫助學生直觀的瞭解，為甚麼把這麼多零碎的程式碼組合成函式是非常有用的做法，以及在一堆程式碼稍有更改後，可怎樣繼續使用這些結構。
            Functions in Bee:
              name: 蜜蜂遊戲中的函式（Function）
            Functions with Parameters in Artist:
              name: 在藝術家遊戲中學習函式帶參數（Parameter）
              description_student: 準備好動手指編寫程式！在這些謎題中，你會在藝術家中使用帶參數的函式，繪畫令人難忘的畫作。
              description_teacher: 在本課堂中，學生會繼續練習帶參數與不帶參數的函式。學生將有機會使用或不使用參數來繪畫自己的畫作，然後在自由探索關卡中修改函式。
            Functions with Parameters in Bee:
              name: 在蜜蜂遊戲中學習函式帶參數（Parameter）
              description_student: 你已嘗試過一些帶參數的函式練習。本課堂將會繼續與蜜蜂一起練習！
              description_teacher: 本課堂使用蜜蜂環境，並繼續學習前一個藝術家階段中帶參數的函式概念。學生會練習編寫與使用函式在複雜的路徑中移動，並收集花蜜與蜂蜜圖案。
            Explore Project Ideas:
              name: 找些專案靈感
              description_student: 是時候啟發你的靈感！這些謎題會向你展示一些預先製作完成的遊戲與圖例，助你為大型專案制定計畫。
              description_teacher: |-
                接下來的 5 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是預期進行多個課堂或多個星期的專案，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。

                在探索階段中，學生將能夠檢視藝術家與 Play Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家或 Play Lab 中製作自己的專案（這很可能是專案中最長的階段）。在測試與再度思考後，學生會修訂自己的專案。最後，學生將能夠向同伴展示自己的成品。
            The Design Process:
              name: 設計流程
              description_student: 如此大的專案需要時間與充分的計畫。在這裡，你會學習設計流程，並用來製作自己的專案。
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。在專案的這個部分，學生會學習設計流程，並瞭解如何在自己的專案中實作。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Build Your Project:
              name: 建立你的專案
              description_student: 你終於可開始製作屬於自己的專案了！
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。學生可使用藝術家或 Play Lab 自由創作自己的專案。這將會是專案中時間最長的部分。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Revise Your Project:
              name: 修改你的專案
              description_student: 羅馬並不是一天就能建成，你的專案也不應急著完成。請花時間編輯並修改你的專案，從而盡力達到最佳效果。
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。如今學生已經把專案製作完成，現在學生有機會取得同伴意見，以修改自己的專案。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Present Your Project:
              name: 說明你的專案
              description_student: 是時候展示你的作品！你將會把自己的優秀專案展示給同伴看。
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。最後，學生將能夠向同伴展示自己的成品，或者以特殊連結向摯愛分享。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Conditionals:
              name: 與農夫一起嘗試條件式（Conditional）
            Variables as Constant in Artist:
              name: 在藝術家遊戲中學習變數
            Variables that Change in Bee:
              name: 在蜜蜂遊戲中變更變數
            Variables that Change in Artist:
              name: 在藝術家遊戲中變更變數
            Learning Sprites with Sprite Lab:
              name: 學習 Sprite Lab
            Alien Dance Party with Sprite Lab:
              name: 外星人舞蹈派對
            Pet Giraffe with Sprite Lab:
              name: 寵物長頸鹿
            Functions in Minecraft:
              name: 在 Minecraft 裡寫函式
            Conditionals in Farmer:
              name: 與農夫一起嘗試條件式（Conditional）
          student_description: 學習使用不同類型的迴圈（loop）、事件（event）、函式（function）與條件式（conditional）。研究不同的問題解決技巧，並討論電腦運算和網際網路的社會影響。在本課程的第 2 部分，你會設計並製作一份總結專案，然後可把這個專案和好友與家人分享。
        csp1-2018:
          title: CSP 單元 1 - 網際網路 ('18-'19)
          description: 本單元本旨在探索各項技術挑戰與問題，原因是我們有需要在電腦中表示數位資訊，並把資訊在人和運算裝置間來回傳輸。然後，本單元會探索網際網路的結構與設計，以及相關設定決定的意義所在。
          description_short: 瞭解把資訊以位元來表示的各種挑戰，以及怎樣移動這些位元。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csp1_1:
              display_name: 第 1 章：表示及傳輸資訊
            csp1_2:
              display_name: 第 2 章：研發互聯網
          lessons:
            CS Principles Pre-survey:
              name: 計算機科學原理課前問卷調查
            Personal Innovations:
              name: 個人創新
            Sending Binary Messages:
              name: 二進位訊息的發送
            Sending Binary Messages with the Internet Simulator:
              name: 用網路模擬器發送二進位訊息
            Number Systems:
              name: 數字系統
            Binary Numbers:
              name: 二進位數
            Sending Numbers:
              name: 數字的發送
            Encoding and Sending Formatted Text:
              name: 將編碼並傳送格式化文字
            Unit 1 Chapter 1 Assessment:
              name: 單元 1 第 1 節 評量
            The Internet:
              name: 網際網路
            The Need for Addressing:
              name: 定址的需要
            Routers and Redundancy:
              name: 路由器與備援
            Packets and Making a Reliable Internet:
              name: 封包與建立可靠的網際網路
            The Need for DNS:
              name: DNS 的需求
            HTTP and Abstraction:
              name: HTTP 與抽象化
            Practice PT - The Internet and Society:
              name: PT 練習 - 網際網路與社會
            Unit 1 Chapter 2 Assessment:
              name: 單元 1 第 2 節 評量
            Sending Text:
              name: 傳送文字
          student_description: 本單元本旨在探索各項技術挑戰與問題，原因是我們有需要在電腦中表示數位資訊，並把資訊在人和運算裝置間來回傳輸。然後，本單元會探索網際網路的結構與設計，以及相關設定決定的意義所在。
        csd1-2018:
          title: CSD 單元 1 - 問題解決 ('18-'19)
          description_short: 瞭解人類與何與電腦一起解決問題。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csd1_1:
              display_name: 第 1 章：解決問題的流程
            csd1_2:
              display_name: 第 2 章：計算機與問題解決能力
          lessons:
            CS Discoveries Pre-survey:
              name: 電腦科學探索課前問卷調查
            Intro to Problem Solving:
              name: 問題解決能力的介紹
              description_student: 班級學生會分組工作，目標是設計強力的鋁箔船，可盡量放置最多硬幣。在課堂結束時，小組會反思自己在活動中的體驗，並思考在課程的餘下部分中，將會選擇運用哪些解決問題類型。
              description_teacher: 在本課堂中，學生會分組設計鋁箔船，目標是盡量支撐最多硬幣。各小組會有 2 個回合製作鋁箔船，第 2 回合的目標是盡量比第 1 回合載得更多硬幣。這項活動的結構可預示問題解決流程的不同步驟，而在接下來的課堂中，學生會更詳細學習這些流程。在本課堂結束時，學生會反思自己在活動中的經驗，並思考在課程的餘下部分中，將會選擇運用哪些解決問題類型。
            The Problem Solving Process:
              name: 問題解決流程
              description_student: 本課堂會介紹正式的問題解決流程。班級學生會在學年裡運用這種流程：定義 - 準備 - 嘗試 - 反思。學生會把這些步驟，與前一個課堂的鋁箔船問題聯繫起來，然後思考他們擅長解決的一個問題，然後再思考他們希望解決得更好的一個問題。在課堂結束時，班級同學會收集普遍實用的策略清單，用於流程中的每個步驟，然後加到海報上，從而在整個單元與學年中使用。
              description_teacher: 本課堂會介紹正式的問題解決流程。學生會在學年裡運用這種流程：定義 - 準備 - 嘗試 - 反思。課堂首先會讓學生一起思考日常生活中遇到的所有類型問題。接著，學生便會學習問題解決流程的 4 個步驟，並合作把這 4 個抽象的步驟，聯繫到實際解決問題的經驗中。首先，學生會把這些步驟，與前一個課堂的鋁箔船問題聯繫起來，然後思考他們擅長解決的一個問題，然後再思考他們希望解決得更好的一個問題。在課堂結束時，班級同學會收集普遍實用的策略清單，用於流程中的每個步驟，然後加到海報上，從而在整個單元與學年中使用。
            Exploring Problem Solving:
              name: 問題解決探索
              description_student: 在本課堂中，班級學生會把問題解決流程應用至 3 個不同問題：字詞搜尋、為生日派對編排座位，以及計畫旅行。各種問題變得越來越複雜，而且定義差劣，從而強調問題解決流程為甚麼在解決這些問題時特別有用。
              description_teacher: |-
                在本課堂中，學生會把問題解決流程應用至 3 個不同問題中，以加深瞭解每個步驟的價值。他們會完成一次猜詞遊戲、為生日派對編排座位，以及計畫旅行。各種問題變得越來越複雜，而且定義差劣，從而強調問題解決流程為甚麼在解決這些問題時特別有用。課堂結束時，學生會反思自己在問題解決流程方面的經驗。他們會確認加入每個步驟的理由，並會一起思考各種問題或策略，從而協助自己更能定義開放式問題，因為通常這就是最關鍵的步驟。\\r
                \\r
                本課堂大概需要 2 個或更多課節完成。最初 2 個問題也許能放進 1 個課節，但第 3 個問題則需要放在第 2 天。
            What is a Computer?:
              name: 電腦是什麼？
              description_student: 在本課堂中，班級學生會瞭解電腦的初步定義。一起思考電腦可能的各種定義後，學生會分組在海報紙上，把圖片分類為「是電腦」或「不是電腦」，並說明他們在選擇一些最困難的分類時有甚麼原因。然後，教師會介紹電腦的定義，並讓各小組依據新的定義來修改海報內容。
              description_teacher: 在本課堂中，學生會瞭解電腦的初步定義。開始課堂時，學生會一起思考電腦可能的各種定義，然後把思考結果放在黑板上。接著，學生會分組在海報紙上，把圖片分類為「是電腦」或「不是電腦」，並在課室張貼海報紙，然後簡短說明他們在選擇一些最困難的分類時有甚麼原因。之後，教師會介紹電腦的定義，並讓學生依據新的定義來修改海報內容。\\r
            Input and Output:
              name: 輸入與輸出
              description_student: 在本課堂中，班級學生會思考一些運算裝置，並確定裝置使用哪些類型的輸入與輸出。小組會收到一台運算裝置，學生依據教師提供的輸入與輸出定義，列出他們的裝置上有哪些輸入與輸出工具。課堂結束時，學生會檢視在運算裝置上經常會進行的活動，並在圖表上選擇用於該活動的輸入與輸出工具。
              description_teacher: 在本課堂中，學生會思考一些運算裝置，並確定裝置使用哪些類型的輸入與輸出。小組會收到一台運算裝置，並依據教師提供的輸入與輸出定義，列出他們的裝置上有哪些輸入與輸出工具。在活動初期，教師會提示學生專注於更明顯的實體輸入與輸出（例如鍵盤做為輸入，或螢幕做為輸出），但是之後的討論應帶領學生考慮較不明顯的範例（例如觸控螢幕是輸入，同時也是輸出；或是網際網路可同時做為輸入與輸出）。在整個課堂中，教師會在課室前方的 T 圖表中，記錄已確定的輸入和輸出。課堂結束時，學生會檢視在運算裝置上經常會進行的活動，並在圖表上選擇用於該活動的輸入與輸出工具。
            Processing:
              name: 處理
              description_student: 本課堂會更深入探討「處理」的概念，這個概念先前已包含在電腦的定義中。同學分為 2 人一組順序放置卡牌 - 這是處理資訊的一種形式。在結束時，班級學生會在解決資訊問題的背景下討論「處理」的意義。
              description_teacher: 學生會完成 2 項不插電卡牌排序活動，從而瞭解「處理」的意思，以及「處理」和解決問題間的關係。第 1 項活動只有很少限制，用於介紹處理的高階定義。下一項活動會施加更多限制，迫使學生開發一套演算法，從而每次都能成功處理卡牌。學生會反覆與同學一起開發、測試並分享自己的演算法。總結討論會讓學生反思在上述活動中使用的不同類型問題決方法，以及製作演算法解決問題的價值所在。
            Storage:
              name: 儲存
              description_student: 本課堂集中說明電腦定義中的儲存元件，這些儲存元件會在處理資訊時使用。班級同學會用課堂的大部分時間，開發並分享處理資訊的演算法，課堂會強調任何特定演算法需要多少儲存空間。課堂結束時，會討論在處理資訊時儲存的重要性。
              description_teacher: 學生會學習電腦中「輸入-儲存-處理-輸出」模型內儲存的重要性。暖身活動會請學生反思一下，曾經看到電腦儲存哪些類型的資訊，例如文件、照片或影片等。不插電的主要活動會讓學生開發一種演算法，以處理一小疊卡牌，並插尋牌堆裡的特定卡牌。應限制學生移動卡牌的方式，迫使他們即使在處理卡牌時，也會思考儲存的重要性。課堂結束時，會討論本課堂中學生看到的 2 種儲存類型，以及在處理資訊時儲存的重要性。
            Apps and Problem Solving:
              name: App 與問題解決
              description_student: 本課堂會講解電腦在輸入與輸出方面的內容，並會以與學生相關的熟悉方式：應用程式來說明。班級學生會評估一些網頁應用程式，從而分析這些程式設計用於解決的特定問題、程式需要處理的輸入內容，以及程式會向使用者提供的輸出內容。課堂結束時，學生會觀察這些應用程式，教師也會帶領討論應用程式對社會的影響。
              description_teacher: 本課堂會講解電腦在輸入與輸出方面的內容，並會以與學生相關的熟悉方式：應用程式來說明。學生會分為 2 人一組，評估一些網頁應用程式，從而分析這些程式設計用於解決的特定問題、程式需要處理的輸入內容，以及程式會向使用者提供的輸出內容。課堂結束時，學生會觀察這些應用程式，教師也會帶領討論應用程式對社會的影響。
            Project - Propose an App:
              name: 專案 - 提出應用程式建議
              description_student: 為了總結問題解決流程的學習內容，並總結電腦的輸入/輸出/儲存/處理模型，班級同學會提議設計相關應用程式，以解決現實世界的問題。這份專案會橫跨數天完成，最後會進行海報簡報，強調每款應用程式的功能特色。專案預期每 2 人一組完成，但也可 1 人獨自完成。
              description_teacher: 為了總結問題解決流程的學習內容，並總結電腦的輸入/輸出/儲存/處理模型，學生會提議設計相關應用程式，以解決現實世界的問題。這份專案會橫跨數天完成，最後學生會製作海報，強調將會向同學展示的應用程式有哪些功能特色。專案指南為學生提供循序漸進的指示，並協助他們整理自己的思緒。專案預期每 2 人一組完成，但也可 1 人獨自完成。
            Apps and Storage:
              name: 應用程式與儲存
              description_student: 本課堂會講解電腦在輸入與輸出方面的內容，並會以與學生相關的熟悉方式：應用程式來說明。班級學生會評估一些網頁應用程式，從而分析這些程式設計用於解決的特定問題、程式需要處理的輸入內容，以及程式會向使用者提供的輸出內容。課堂結束時，學生會觀察這些應用程式，教師也會帶領討論應用程式對社會的影響。
              description_teacher: 本課堂會檢閱電腦在輸入、輸出、儲存與處理方面內容，並會以與學生相關的熟悉方式：應用程式來說明。學生會分為 2 人一組，評估一些智慧手機應用程式，從而分析這些程式設計用於解決的特定問題、程式需要處理的輸入內容、程式把輸入處理為所需輸出的處理程序，以及程式希望儲存留待日後使用的資訊。班級課堂結束時，學生會展開討論，把課堂和學生更熟悉的應用程式互相聯繫。
        csd4-2018:
          title: CSD 單元 4 - 設計流程 ('18-'19)
          description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
          description_short: 學習如何設計程式，以符合使用者的需要。
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：用戶為中心的設計
            csd4_2:
              display_name: 第 2 章︰ 應用程式原型
            cspSurvey:
              display_name: 問卷
          lessons:
            Analysis of Design:
              name: 設計分析
              description_student: 班級會瞭解多種不同的茶壺設計，以思考怎樣做出設計選擇，以及為甚麼做出這些選擇。班級同學會使用茶壺做為範例，瞭解使用者、使用者需要，以及他們使用的物件設計之間的關係。
              description_teacher: 單元會集中把問題解決內容分組，並為其他使用者開發產品。在單元開始時，學生首先會研究不同茶壺的設計。然後學生會分析每款茶壺，嘗試找出特定使用者的需要可能怎樣在其設計中反映出來。學生思考這些設計選擇，並嘗試把每款茶壺與一位潛在使用者配對後，便可以開始觀察：以使用者為本的方式設計產品（包括實際與數位數產），如何能讓產品更實用和易用。活動結束時，會請學生提議對其中一個茶壺做一些變更，讓茶壺更實用或更易用。
            Understanding Your User:
              name: 瞭解您的使用者
              description_student: 班級學生會以使用者設定檔，瞭解不同的使用者如何可能對各種產品做出反應。每位學生都會扮演不同人物，從而以其他人的角度體驗各種設計。
              description_teacher: 設計師需要瞭解使用者的需要，才可製作出實用的產品。本課堂鼓勵學生思考怎樣為其他人設計產品，方法是以使用者設定檔扮演其他人，並以扮演的角色對一系列產品做出反應。每位學生都會獲分配一個使用者設定檔，用於說明該角色，然後學生便會以該角色選擇恰當的產品、以批判方式評論產品設計，並建議設計上的改良。\\r
            User-Centered Design Micro Activity:
              name: 以使用者為中心的微型活動
              description_student: 班級學生會分為各小組，然後使用設計流程獲得智慧衣著的構思。此活動是單元中提供的第一個練習機會，首先會集合思考，然後確定使用者，最後提出設計建議。本單元提供不同機會，讓學生練習設計解決方案，以解決其他人的需要。
              description_teacher: 本課堂會引導學生完成簡化版本的設計流程，學生會在整個單元中瞭解這個流程。學生首先會一起思考並列出智慧衣著的潛在使用者清單。然後，所有學生一起把這些構想分組至較廣泛的類別，然後每組選擇一個使用者類別。小組會重複這個程序，一起思考他們的使用者有哪些需要或關注事項，接著把這些需要分為不同類別，並選擇集中工作的一個類別。最後，學生會設計一件智慧衣著，過程中會使用剛才想出來的特定需要與關注事項，從而引導他們做出決策。在班級課堂結束時，學生會快速分享自己的決策流程，並接收相關回饋意見，瞭解他們的產品有多能夠解決所選擇的使用者需要。
            User Interfaces:
              name: 使用者介面
              description_student: 看看紙上原型可怎樣在編寫程式碼前，用來測試軟體並取得回饋意見。為了協助開發人員實現他們的構思，班級同學會測試並提供應用程式的紙上原型。
              description_teacher: 完成迷你設計專案後，學生會學習設計的下一個階段 - 製作產品原型，嘗試解決使用者的需要。學生會分為各自的團隊，研究稱為「Txt Ur Grndkdz」的聊天應用程式紙上原型。使用這個紙上原型，學生便有機會瞭解，簡單的紙上原型可怎樣用來快速測試構思與假設，然後才真正使用電腦。「使用」提供的原型後，學生便會開始找出各種方式，以改善下一個迭代的版本。
            Feedback and Testing:
              name: 回饋與測試
              description_student: 使用者一直在測試一款應用程式，他們會有大量回饋意見提供給開發人員。班級同學需要透徹瞭解他們的回饋意見、找出共同的主題與需要，然後開始修改原型，讓原型更能符合使用者的需要。
              description_teacher: 在本課堂中，學生會使用前一個課堂中紙上原型應用程式的「使用者」回饋意見，從而改良紙上原型的使用者介面。課堂開始時，學生會反思：設計師需要把人類的需要，以科技轉化為對使用者介面（或「體驗」）做出的變更。然後，學生會依據前一個課堂中製作的應用程式，收集使用者的回饋意見與請求。學生會分組把回饋意見分類，並找出有哪些方式，讓回饋意見中表達的需要，能夠在變更應用程式介面後解決。之後，學生會分組實作其中一些變更，以滿足他們找到的其中一種需要。
            Identifying User Needs:
              name: 確定使用者需求
              description_student: 直到這個階段為止，班級學生研究的使用者都位於遠端地點，而來自使用者僅有的資訊，皆使用文字或角色扮演來代表。現在，學生會每 2 人一組，互相依賴對方做為潛在的使用者，並會互相訪問，以找出可開發應用程式解決的需要。
              description_teacher: 直到這個階段為止，學生集中設計程式的使用者對象，某程度上都位於遠端地點。不論以集體思考、個人設定檔或是文字回饋意見交流，學生與最終使用者間一直都沒有直接的聯繫。設計這種距離感，是為了協助學生在思考使用者需要時跳出自己的思考框框；但是為了以更直接的方式取得實際使用者的資訊，學生便需要依賴同學。在本課堂中，學生會以 2 人一組，成為對方的使用者（與設計師），讓所有學生都可直接訪問最終使用者，並向對方提出問題，從而取得更多資訊瞭解自己的設計。每組學生會互相訪問對方，並嘗試找出一項能使用應用程式解決的特定需要。
            Project - Paper Prototype:
              name: 專案 - 紙上原型
              description_student: 班級同學會使用前一個課堂的訪談資訊，想出一些應用程式構思，以解決他們的使用者之需要。要表達這些構思，以及測試構思的效用，每位同學將會建立並測試自己的紙上原型。
              description_teacher: 每位學生會依據自己在前一個課堂的同伴訪談，想出一個解決使用者問題的應用程式構思。然後，學生會依據應用程式構思來開始製作紙上原型，在獨立的記事卡上繪畫「螢幕」。專案指南會引導學生完成流程，包括建立並由使用者測試應用程式，從而瞭解自製使用者介面的假設是否準確。
            Designing Apps for Good:
              name: 設計良好的應用程式
              description_student: 開始應用程式設計專案時，班級裡的同學會分為各自的團隊，然後開始探索應用程式主題。一些對社會影響深遠的範例應用程式，會用來做為專案的啟發工具。
              description_teacher: 應用程式設計專案會持續到單元結束。開始專案時，學生首先會瞭解一些應用程式，這些程式由其他學生製作，設計用於對社會產生影響。然後，班級同學會複習問題解決流程中的定義、準備、嘗試和反思步驟，並制定對社會產生影響的應用程式之構思。最後，學生會組成專案團隊安排契約，指出團隊在開發應用程式時如何運作。
            Market Research:
              name: 市場研究
              description_student: 瞭解可能為相似使用者服務的現存應用程式，從而加深瞭解應用程式開發。每個小組會找出一些類似的應用程式，主題與自己製作的程式相同，並使用那些應用程式，協助重新定義學生所追求的應用程式構思。
              description_teacher: 在本課堂中，學生會研究一些應用程式，這些程式與他們打算製作的程式相似，從而更瞭解他們的使用者需要。學生會在團隊內工作、在線上搜尋其他應用程式，然後評估認為有趣的應用程式。在課堂結束時，每個團隊都會清楚瞭解自己想製作的應用程式類型，並進一步細分誰是他們的目標使用者。每個團隊會維護引用資訊清單，列出所有研究過的應用程式，並用於學生的期末專案展示中。
            Paper Prototypes:
              name: 紙上原型
              description_student: 紙上原型可讓開發人員快速測試自己的構思，然後再投放大量時間編寫程式。在本課堂中，各團隊會瞭解在 App Lab 中製作的一些範例應用程式，並使用那些應用程式中獲得的資訊，協助製作自己的應用程式紙上原型。
              description_teacher: 開始設計應用程式前，我們需要幫助學生仔細瞭解自己的期望。因為學生最終會在 App Lab 中製作這些應用程式的原型，若他們的構思和 App Lab 中容易製作原型的應用程式類型相近，就能夠有更充足的準備。團隊在開始這項研究時，首先會觀察一些範例應用程式，這些程式用於展示可使用 App Lab 製作的應用程式。然後，團隊可選擇 1 款（或更多）應用程式，做為自己的應用程式之基礎，之後會有一些時間討論自己的應用程式有哪些基本功能，並使用 3 英吋 x 5 英吋的索引卡開發紙上原型。\\r
            Prototype Testing:
              name: 原型測試
              description_student: 在本課堂中，團隊會與其他同學測試自己的紙上原型。1 位學生扮演電腦、1 位學生說出內容，餘下的學生則會觀察。此時團隊會立即就自己的應用程式獲得回饋意見，為下一個版本的應用程式原型提供實用資訊。
              description_teacher: 開發紙上原型的首要目的是，這樣做可快速測試和迭代，然後才開始編寫程式碼。本課堂的重點在於，讓團隊有機會先測試自己的原型，然後再使用 App Lab。團隊會制定一套計畫，從而和使用者一起測試，之後與班級裡（也可能是班級外）的數個其他同學執行原型測試。為了讓使用者測試原型，學生必須在測試中分配角色（「解說員」、「電腦」與「觀察者」），並準備一些問題，讓使用者在測試結束時回答。
            Digital Design:
              name: 數位設計
              description_student: 在開發、測試與收集紙上原型的回饋意見後，團隊便會移至 App Lab，建立應用程式的下一個迭代。每個團隊成員都會使用拖放設計模式，為自己團隊的應用程式製作至少 1 頁的內容，以回應在前一個回合測試時收到的回饋意見。
              description_teacher: 小組在協作開發應用程式的紙上原型後，便會以分治的方式，依據紙上原型來開始製作互動式數位版本。每位學生會各自使用 App Lab 的拖放設計模式，完成漸進式的技能訓練關卡，以學習怎樣製作紙上原型的數位版本。之後，每個小組成員都會在 App Lab 上，為自己的應用程式製作至少 1 頁內容，並在之後合併為單一個應用程式。
            Linking Screens:
              name: 連結不同畫面
              description_student: 團隊會以前一個課堂中設計的不同畫面做為基礎，合併各畫面並加入單一個應用程式中。然後，學生可加入一些簡單的程式碼，使點擊按鈕後進入適當畫面。
              description_teacher: 在本課堂中，團隊會把前一個課堂設計的各個畫面，合併為單一個應用程式，並使用程式碼互相連結起來。學生會繼續製作前一個課堂中開始製作的模型應用程式，從而學習基本的事件驅動程式設計。除了昨天學生設計的螢幕畫面外，學生也會學習怎樣製作額外的畫面，甚至匯入其他人製作的畫面。
            Testing the App:
              name: 測試應用程式
              description_student: 團隊會執行下一回合的使用者測試，這次會使用他們的互動式原型進行。在這個回合中取得的回饋意見，將會做為應用程式原型最終迭代版本的有用資訊。
              description_teacher: 在前一個課堂結束時，每個團隊都應製作了應用程式的最簡可行原型。本課堂之主要目的，是讓團隊與其他人實際測試應用程式，對象最好是應用程式預期的目標受眾，或是班級裡的其他團隊；至於團隊中的觀察者，則會在先前用於計畫階段的工作表上記錄結果。與測試紙上原型一樣，團隊首先會計畫用於特定情景，然後執行並觀察測試。
            Improving and Iterating:
              name: 改善和迭代
              description_student: 團隊會使用前一回合測試的回饋意見實作變更，以解決使用者的需要。每個團隊都會記錄希望加入的功能特色並安排優先順序，以及記錄需要解決的程式錯誤。
              description_teacher: 在這個階段中，團隊已開發了應用程式原型，並已經過多個迭代與多個回合的使用者測試。每位學生都有機會，依前一回合的使用者測試中取得的資訊與指導，計畫並實作團隊應用程式的改善內容。你可視可用時間與學生的興趣，執行恰當次數的測試與迭代週期。
            Project - App Presentation:
              name: 專案 - 應用程式簡報
              description_student: 每個團隊都會準備一次簡報，以「投售」自己開發的應用程式。這時正是時候分享各種拼搏與勝利經驗，以及計畫未來。
              description_teacher: 這個時候，團隊已研究一項個人與社會重要性的主題、開發並測試紙上原型與數位原型，並開始製作初始應用程式迭代，以結合新的功能特色，以及執行錯誤修正。現在正是時候，讓學生檢閱自己完成的東西，整合成連貫的簡報展示創作的進展。團隊會使用提供的簡報範本，準備展示應用程式開發流程，包括開始解決的問題、他們在測試後以甚麼方式加入回饋意見，以及對未來的計畫。
            CS Discoveries Post-Course Survey:
              name: 電腦科學探索課後問卷調查
          student_description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
        csd5-2018:
          description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
          description_short: 瞭解大家怎樣使用電腦解決資料問題。
          lesson_groups:
            csd5_1:
              display_name: 第 1 章：表達信息
            csd5_2:
              display_name: 第 2 章：解決數據問題
            cspSurvey:
              display_name: 問卷
          lessons:
            Representation Matters:
              name: 表示事項
              description_student: 第一個課堂會概述甚麼是資料，以及資料怎樣用來解決問題。各小組會使用一套資料集，為不同要求的人製作一系列的餐點建議。之後，各小組會比較他們的回答，並討論以不同的方式表示餐點資料，會怎樣影響學生解決不同問題的能力。
              description_teacher: 在資料單元的第一個課堂中，學生會大概瞭解甚麼是資料，以及資料怎樣用來解決問題。學生首先會展開簡短討論，從而普遍瞭解資料是甚麼。然後學生會分為各小組，並使用資料集為不同要求的人製作一系列的餐點建議。每個小組都可選擇以不同方式表示餐點（圖片、食譜、菜單、營養），從而讓不同方式有各自的優點。之後，各小組會比較他們的回答，並討論以不同的方式表示餐點資料，會怎樣影響學生解決不同問題的能力。
            Patterns and Representation:
              name: 模式和標記法
              description_student: 本課堂會更深入瞭解需要以甚麼來建立表示系統。各小組會建立相關系統，從而能夠僅使用一疊卡片，便可表示字母表中的任何字母；然後，學生會使用這些系統建立訊息，並與其他小組交換，從而確保系統像預期般正常運作。之後，班級同學會討論不同工作系統間的共通點，同時瞭解有許多可能的實用解決方案。
              description_teacher: 在本課堂中，學生會建立自己的系統，用於表示資訊。他們首先會一起想出目前用於表示「是-否」回覆的所有不同系統。然後，學生會分為小組工作建立系統，從而僅使用一疊卡片就可表示字母表中的任何字母。使用的卡片有 6 種不同的圖畫內容（6 種動物、6 種顏色等），而為了表示所有字母，學生將需要使用不同卡片的圖樣（pattern）表示每個字母。然後，學生會使用自己的系統建立訊息，並與其他小組交換，從而確保系統像預期般正常運作。在總結討論中，班級學生會檢閱不同系統的優點和缺點。他們會討論不同工作系統間的共通點，同時瞭解有許多可能的實用解決方案，而且重點是所有人都使用相同的任意系統互相通訊。
            ASCII and Binary Representation:
              name: ASCII 和 二進位表示法
              description_student: 本課堂會介紹一款為資訊編碼的正式二進制系統 ASCII，用於表示字母與其他字元。課堂開始時，教師會介紹：電腦必須使用「開」或「關」表示資訊。然後，班級同學會學習 ASCII 系統，以二進制符號表示文字，並練習使用這個系統，之後再使用 ASCII 為自己的訊息編碼。
              description_teacher: 在本課堂中，學生會學習第一款為資訊編碼的正式二進制系統 ASCII，用於表示字母與其他字元。課堂開始時，教師會介紹：電腦必須使用「開」或「關」表示資訊。然後，學生會學習 ASCII 系統，以二進制符號表示文字，並練習使用這個系統，之後再使用 ASCII 為自己的訊息編碼。課堂結束時會進行匯報對話，從而協助結合活動中的關鍵學習目標。
            Representing Images:
              name: 表示圖像
              description_student: 本課堂會繼續學習二進制表示系統，這次會使用圖像來說明。班級同學會學習把圖像分開為多個「正方形」或「像素」的概念，而這些像素可獨立開關，以構成整個圖像。使用圖像化小工具完成少許挑戰後，班級同學便會把圖像表示系統，和前一個課堂學到的文字表示系統互相聯繫起來。
              description_teacher: 在本課堂中，學生會學習電腦怎樣表示圖像。課堂開始時，學生會思考一項挑戰：把所有複雜的圖像轉化為二進制圖樣。學生首先會看到一系列圖像，瞭解這個轉換過程，接著學習把圖像分開為多個正方形或「像素」的概念，而這些像素可獨立開關，以構成整個圖像。然後，學生會使用圖像化小工具完成少許挑戰，從而繪畫出黑白圖像。謎題中會提出一些挑戰，讓學生以這種方式表示圖像。在總結課堂時，學生會把圖像表示系統，和前一個課堂學到的文字表示系統互相聯繫起來。
            Representing Numbers:
              name: 數字表示法
              description_student: 本課堂介紹二進制數字系統。班級同學會收到一組卡片，這些卡片表示二進制（base-2）數字系統中的位值。然後，學生要上下翻轉卡片，以「開啟」或「關閉」卡片，並觀察不同圖樣的結果。最後，圖樣會延伸為通用的 4 位元系統。
              description_teacher: 在本課堂中，學生會學習二進制數字系統。學生會收到一組卡片，這些卡片會以由點構成的組合，來表示二進制（base-2）數字系統中的位值。然後，學生要上下翻轉卡片，以「開啟」或「關閉」卡片，並觀察不同圖樣的結果。最後，學生需要把圖樣延伸為通用的 4 位元系統。
            Keeping Data Secret:
              name: 讓資料保密
              description_student: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
              description_teacher: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
            Combining Representations:
              name: 組合表示
              description_student: 本課堂會合併全部 3 種類型的二進制表示系統（ASCII 字元、二進制數字和圖像），讓學生能夠在某項記錄中，為更複雜的資訊類型編碼。學生會觀察一系列位元，然後需要把位元解碼。在這個過程中，班級學生會學到一個概念：瞭解二進制資訊，就需要同時瞭解使用中的系統，以及加密後的資訊是甚麼意思。
              description_teacher: 在本課堂中，學生會運用全部 3 種類型的二進制表示系統（ASCII 字元、二進制數字和圖像），從而為某項記錄解碼。學生會觀察一系列位元，然後需要把位元解碼。在這個過程中，學生會學到一個概念：為了明白二進制資訊，他們就必須同時瞭解使用中的系統，以及加密後的資訊是甚麼意思。之後，學生便會依據提供的結構，為表示寵物的記錄解碼。
            Project - Create a Representation:
              name: 專案 - 創建標記法
              description_student: 學生會使用這一章所學到的二進制表示系統來設計結構，以表示他們度過的美好一天。在確定相關記錄應擷取哪些資訊後，班級同學便會決定一張儲存多個位元資訊的打孔卡，會以怎樣的方式詮釋，以表示裡面的資訊。之後，所有同學都會使用學到的 ASCII、二進制數字與圖像格式，來表示他們美好的一天，並嘗試解碼同伴美好的一天過得怎樣。
              description_teacher: 在本課堂中，學生會使用這一章所學到的二進制表示系統來設計結構，以表示他們度過的美好一天。他們首先會寫下簡短說明，描述他們美好的一天，然後與同伴一起檢閱內容，找出他們認為電腦會擷取的關鍵資訊。同學會全班一起決定，一張儲存多個位元資訊的打孔卡，會以怎樣的方式詮釋，以表示裡面的資訊。接著，學生會使用學到的 ASCII、二進制數字與圖像格式，來表示他們美好的一天。之後學生會交換打孔卡，並嘗試解碼同伴美好的一天過得怎樣。課堂會以反思來結束。
            Problem Solving and Data:
              name: 問題解決與數據
              description_student: 本課堂會說明可怎樣量身制定問題解決流程，以處理特別是資料方面的問題。班級同學的任務，是決定某個城市最需要投放資源在哪個方面。他們必須找出並使用線上找到的資料支持這個決定。
              description_teacher: 在本課堂中，學生會使用課程初期學到的問題解決流程，以解決資料問題。檢閱流程後，班級同學便要做出決定：某個城市應該建立圖書館、寵物庇護所還是消防局。學生會以團隊方式工作，從線上收集資訊，協助決定應建造甚麼，然後使用這些資訊撰寫理據，從而說服市議會接納他們的選擇。然後他們會把完成的事情，對映至整個課程中一直使用的問題解決流程中，並比較一般問題解決流程和專門應用至資料問題時有甚麼異同。
            Problem Solving with Big Data:
              name: 用大數據解決問題
              description_student: 本課堂講解機構怎樣收集與使用資料，以解決現實世界的問題。班級同學會觀察 3 個可使用資料來解決的情景，並一起思考希望以哪些資料類型解決，以及他們可怎樣收集資料。每個情景也會包含一段影片，瞭解一項真實世界的服務，曾經以資料解決類似的問題。
              description_teacher: 在本課堂中，學生會瞭解機構怎樣收集與使用資料，以解決現實世界的問題。課堂首會快速回顧前一個課堂中學到的資料問題解決流程。然後，學生會觀察 3 個可使用資料來解決的情景，並一起思考希望以哪些資料類型解決，以及他們可怎樣收集資料。每個問題的設計，都用於反映現實世界中存在的服務。集體思考後，學生會觀看一段影片，瞭解一項真實世界的服務， 然後寫下筆記，指出現實世界的服務會收集甚麼資料，還有怎樣使用這些資料。課堂結束時，學生會記錄資料由使用者主動提供、被動記錄下來，還是由感測器來收集。
            Structuring Data:
              name: 資料的建構
              description_student: 本課堂會更深入探討資料詮釋，包括原始資料集清理與視覺化。班級同學首先會瞭解，以不同方式展示資料，可怎樣協助受眾更易理解資料。學生觀察清理與視覺化可怎樣協助大眾做出更好的決定後，便會研究這個流程中的哪些部分可自動化，哪些部分需要人類介入。
              description_teacher: 在本課堂中，學生會更深入探討資料收集與詮釋，包括資料清理與視覺化。學生首先會瞭解，以不同方式展示資料，可怎樣協助受眾更易理解資料，然後再讓自己的資料製作視覺化內容。學生必須使用首選薄餅配料的訪問結果，決定需要怎樣處理無法輕易加入所選視覺化方案的資料。最後，學生會研究這個流程中的哪些部分可由電腦自動化，哪些部分則需要人類做決定。
            Making Decisions with Data:
              name: 依數據來做決定
              description_student: 本課堂讓學生有機會練習前一個課堂介紹的資料問題解決流程。不是所有問題都有正確答案，而在某些情況下，班級同學可以並應該確定應收集更多資料。課堂結束時，會討論不同人可怎樣從相同的資料中得出不同的結論，或是收集不同的資料可能怎樣影響了他們做出的決定。
              description_teacher: 在本課堂中，學生會練習依據某些問題使用資料去做決定，這些問題專門設計讓中學生感到熟悉。學生會分組工作，討論他們會怎樣使用收到的資料做出決定，然後全球討論他們的最後決定。不是所有問題都有正確答案，而在某些情況下，學生可以並應該確定應收集更多資料。課堂結束時，會討論不同人可怎樣從相同的資料中得出不同的結論，或是收集不同的資料可能怎樣影響了他們做出的決定。
            Interpreting Data:
              name: 解譯數據
              description_student: 課堂開始時，學生首先會瞭解一份蛋糕偏好問卷調查，讓受訪者指定一款蛋糕與一款糖霜。他們會討論：瞭解蛋糕和糖霜偏好間的關係，可怎樣幫助他們更能決定建議哪種組合。然後，學生會學習交叉表，讓他們可用圖表展示不同偏好間的關係。他們會運用這項技巧找出偏好問卷調查中的關係，然後一起思考這項流程有助解決哪些不同類型的問題。
              description_teacher: 課堂開始時，學生首先會瞭解一份蛋糕偏好問卷調查，讓受訪者指定一款蛋糕與一款糖霜。他們會討論：瞭解蛋糕和糖霜偏好間的關係，可怎樣幫助他們更能決定建議哪種組合。然後，學生會學習交叉表，讓他們可用圖表展示不同偏好間的關係。他們會運用這項技巧找出偏好問卷調查中的關係，然後一起思考這項流程有助解決哪些不同類型的問題。
            Automating Data Decisions:
              name: 自動化數據決策
              description_student: 在本課堂中，學生會看看簡單範例，瞭解電腦可怎樣用來完成資料問題解決流程的決策步驗驟。學生需要完成的任務是：建立可建議度假地點的演算法。然後，學生會訂立規則或演算法，讓電腦可用來自動做決定。學生會分享各自的規則，以及他們的規則會以類別資料做出哪些選擇。然後，學生會使用自己的規則與同學的資料，測試他們的規則所做的決定是否與人類相同。本課堂結束時，會討論使用電腦把問題解決流程自動化有哪些優點和缺點。
              description_teacher: 在本課堂中，學生會看看簡單範例，瞭解電腦可怎樣用來完成資料問題解決流程的決策步驗驟。學生需要完成的任務是：建立可建議度假地點的演算法。然後，學生會訂立規則或演算法，讓電腦可用來自動做決定。學生會分享各自的規則，以及他們的規則會以類別資料做出哪些選擇。然後，學生會使用自己的規則與同學的資料，測試他們的規則所做的決定是否與人類相同。本課堂結束時，會討論使用電腦把問題解決流程自動化有哪些優點和缺點。
            Project - Solve a Data Problem:
              name: 專案 - 解決數據問題
              description_student: 本單元結束時，班級同學會設計各種方式使用資料，以做出一些建議或預測，從而協助解決問題。在最初的數個步驟中，學生會一起思考問題、從事簡單研究，然後定義一個所選的問題。之後，他們會決定希望收集哪種類型的資料、怎樣收集與怎樣使用，然後再交換回饋意見，並進行期末簡報。
              description_teacher: 本單元結束時，學生會依據同學提供並分析的資料，設計一個建議引擎。觀察一款建議引擎應用程式範例後，學生會遵從專案指南完成這項橫跨多天的活動。在最初的數個步驟中，學生會選擇希望協助使用者做出甚麼選擇、需要為建議引擎提供哪些資料、編寫問卷調查，以及收集同學選擇的資訊。然後，學生會詮釋資料，並使用學到的知識建立建議引擎。最後，他們會以自己的演算法向同學提出建議。學生會進行同儕審查，並對專案做出所有必要的更新，然後準備向全班展示的簡報。
            CS Discoveries Post-Course Survey:
              name: 電腦科學探索課後問卷調查
          student_description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
        csp2-2018:
          title: CSP 單元 2 - 數位資訊 ('18-'19)
          description: 本單元會更深入地探討加密、表示與操控數位資訊的方法。能夠以數位方式操控資料、將資料視覺化並找出模式、趨勢與可能存在的意義，是電腦科學家每天都會做的重要實用技巧。瞭解資料來自哪裡、能夠直覺地知道可從中學習或擷取甚麼，以及能使用運算工具操控並傳達資料，是單元中注意的首要技巧。
          description_short: 瞭解如何以運算與視覺化的方式，表示與操控更複雜的數位資訊。
          lesson_groups:
            csp2_1_2018:
              display_name: 單元 2：數位資訊
            cspAssessment:
              display_name: 章節測驗
          lessons:
            Bytes and File Sizes:
              name: 位元組（Bytes）與檔案大小
            Text Compression:
              name: 文字壓縮
            Encoding B&W Images:
              name: 黑白圖片的編碼
            Encoding Color Images:
              name: 彩色圖片的編碼
            Lossy Compression and File Formats:
              name: 有損壓縮與文件格式
            Practice PT - Encode an Experience:
              name: PT 練習 - 把你的體驗編碼
            Unit 2 Chapter 1 Assessment:
              name: 單元 2 第 1 節 評量
            Intro to Data:
              name: 數據的介紹
            Finding Trends with Visualizations:
              name: 以視覺化尋找趨勢
            Check Your Assumptions:
              name: 驗證你的假設
            Good and Bad Data Visualizations:
              name: 資料視覺化的良好與不良示例
            Making Data Visualizations:
              name: 製作視覺化資料
            Discover a Data Story:
              name: 發現數據故事
            Cleaning Data:
              name: 數據的清理
            Creating Summary Tables:
              name: 建立摘要表
            Practice PT - Tell a Data Story:
              name: PT 練習 - 訴說關於資料的故事
            Unit 2 Chapter 2 Assessment:
              name: 單元 2 第 2 節 評量
            Lossy vs. Lossless Compression:
              name: 有損與無損壓縮
            Rapid Research - Format Showdown:
              name: 快速研究 - 格式攤牌對決
            Lossy vs Lossless Compression:
              name: 有損與無損壓縮
            Unit 2 Assessment:
              name: 單元 2 評估
          student_description: 本單元會更深入地探討加密、表示與操控數位資訊的方法。能夠以數位方式操控資料、將資料視覺化並找出模式、趨勢與可能存在的意義，是電腦科學家每天都會做的重要實用技巧。瞭解資料來自哪裡、能夠直覺地知道可從中學習或擷取甚麼，以及能使用運算工具操控並傳達資料，是單元中注意的首要技巧。
        csp3-2018:
          title: CSP 單元 3 - 程式設計簡介 ('18-'19)
          description_short: 以自上而下的設計方式，使用經典小海龜繪圖來學習 JavaScript 程式設計基礎。
          lesson_groups:
            csp3_1_2018:
              display_name: 單元 3：程式設計簡介
            cspAssessment:
              display_name: 章節測驗
            cspSurvey:
              display_name: 問卷
          lessons:
            The Need For Programming Languages:
              name: 程式語言的需要
            The Need for Algorithms:
              name: 演算法的需要
            Creativity in Algorithms:
              name: 演算法中的創意
            Using Simple Commands:
              name: 簡單指令的使用
            Creating Functions:
              name: 建立函式
            Functions and Top-Down Design:
              name: 函式與自上而下的設計
            APIs and Function Parameters:
              name: API 和函式參數
            Creating functions with Parameters:
              name: 建立帶參數（Parameter）的函式
            Looping and Random Numbers:
              name: 迴圈與隨機數字
            Practice PT - Design a Digital Scene:
              name: PT 練習 - 設計數位場景
            Unit 3 Chapter 1 Assessment:
              name: 單元 3 第 1 章 評估
            Please complete the CSP Mid-course survey!:
              name: 請完成 CSP 課程中期問卷調查！
            Creating Functions with Parameters:
              name: 建立帶參數（Parameter）的函式
            Mid-Year Survey:
              name: 中年級問卷
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        csp-explore-2018:
          title: 探索 - AP 表現任務準備 ('18-'19)
          description: 這些課堂可協助你瞭解、準備與執行 AP 探索表現任務。每個「課堂」都含有實用文件的連結，讓你的老師可幫助你學習。注意：課堂 1 的第 2 個項目與探索 PT 沒有直接關係，但包含需要的一般技術設定與工具，以進行「探索」與「建立」任務的各個元素。
          description_short: 提供各種課堂與資源，協助學生準備並完成 AP 探索表現任務。
          lesson_groups:
            csp_ap_2:
              display_name: 第 2 章：AP 探索效能任務
            cspSurvey:
              display_name: 問卷
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: 探索 PT 準備 - 檢閱任務
            Explore PT - Making a Plan:
              name: 探索 PT - 制定計畫
            Explore PT - Complete the Task:
              name: 探索 PT - 完成任務
            Mid-Year Survey:
              name: 中年級問卷
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
          student_description: 這些課堂可協助你瞭解、準備與執行 AP 探索表現任務。每個「課堂」都含有實用文件的連結，讓你的老師可幫助你學習。注意：課堂 1 的第 2 個項目與探索 PT 沒有直接關係，但包含需要的一般技術設定與工具，以進行「探索」與「建立」任務的各個元素。
        csp-create-2018:
          title: 創建 - AP 效能任務準備 ('18-'19)
          description: 這些課堂可協助你瞭解、準備與執行 AP 建立表現任務。每個「課堂」都含有實用文件的連結，讓你的老師可幫助你學習。注意：課堂 1 的第 1 個項目與建立 PT 沒有直接關係，但包含需要的一般技術設定與工具，以進行「探索」與「建立」任務的各個元素。
          description_short: 提供各種課堂與資源，協助學生準備並完成 AP 建立表現任務。
          lesson_groups:
            csp_ap_3:
              display_name: 第 3 章：AP 建立效能任務
            cspSurvey:
              display_name: 問卷
          lessons:
            Create PT Prep - Reviewing the Task:
              name: 建立 PT 準備 - 檢閱任務
            Create PT Prep - Making a Plan:
              name: 建立 PT 準備 - 制定計畫
            Create PT - Complete the Task:
              name: 建立 PT - 完成任務
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
          student_description: 這些課堂可協助你瞭解、準備與執行 AP 建立表現任務。每個「課堂」都含有實用文件的連結，讓你的老師可幫助你學習。注意：課堂 1 的第 1 個項目與建立 PT 沒有直接關係，但包含需要的一般技術設定與工具，以進行「探索」與「建立」任務的各個元素。
        csp4-2018:
          title: CSP 單元 4 - 大數據與隱私 ('18-'19)
          description: 我們居住在這個資料豐富的世界，而我們會遇到許多複雜的問題，例如和公共政策、法律、道德與社會影響有關的問題。本單元的目標，是要讓學生對世界上的資料有全面且平衡的觀點，包括正面與負面影響，並瞭解在現代社會中為甚麼和怎樣使用加密的基礎。
          description_short: 探索我們居住的這個資料豐富的世界，並瞭解資料可怎樣影響公共政策、個人隱私、安全、法律與道德。
          lesson_groups:
            csp4_1_2018:
              display_name: 單元 4：大數據與私隱
            cspAssessment:
              display_name: 章節測驗
            cspSurvey:
              display_name: 問卷
          lessons:
            What is Big Data?:
              name: 大數據是什麼？
            Rapid Research - Data Innovations:
              name: 快速研究 - 資料創新
            Identifying People with Data:
              name: 以資料識別人物身分
            The Cost of Free:
              name: 免費的代價
            Simple Encryption:
              name: 簡單加密
            Encryption with Keys and Passwords:
              name: 使用金鑰和密碼加密
            Public Key Crypto:
              name: 公開金鑰加密
            Rapid Research - Cybercrime:
              name: 快速研究 - 網路犯罪
            Practice PT - Big Data and Security Dilemmas:
              name: PT 練習 - 大數據與安全困境
            Unit 4 Chapter 1 Assessment:
              name: 單元 4 第 1 章 評估
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
            Finding Trends with Visualizations:
              name: 以視覺化尋找趨勢
            Check Your Assumptions:
              name: 驗證你的假設
            Unit 4 Assessment:
              name: 單元 4 評估
            Mid-Year Survey:
              name: 中年級問卷
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
          student_description: 我們居住在這個資料豐富的世界，而我們會遇到許多複雜的問題，例如和公共政策、法律、道德與社會影響有關的問題。本單元的目標，是要讓學生對世界上的資料有全面且平衡的觀點，包括正面與負面影響，並瞭解在現代社會中為甚麼和怎樣使用加密的基礎。
        csp5-2018:
          title: CSP 單元 5 - 製作應用程式 ('18-'19)
          description: 本單元繼續介紹電腦運算的基礎概念，從而能夠製作內容豐富的互動應用程式。本課程使用 JavaScript 做為程式語言，並以 App Lab 做為程式設計環境來製作應用程式，但這些課堂中學到的概念，適用於所有程式語言和工具。
          description_short: 透過使用 JavaScript 製作豐富、互動的應用程式，繼續學習更多計算機編程的基礎概念 。
          lesson_groups:
            csp5_1:
              display_name: 第 1 章：事件驅動的程式設計
            csp5_2:
              display_name: 第 2 章：資料結構程式設計
            cspSurvey:
              display_name: 問卷
          lessons:
            Buttons and Events:
              name: 按鈕與事件
            Multi-screen Apps:
              name: 多螢幕應用程式
            'Building an App: Multi-Screen App':
              name: 製作應用程式：多螢幕應用程式
            Controlling Memory with Variables:
              name: 以變數（Variable）控制記憶體
            'Building an App: Clicker Game':
              name: 製作應用程式：點擊遊戲
            Unit 5 Assessment 1:
              name: 單元 5 評量 1
            User Input and Strings:
              name: 使用者輸入與字串
            '"If" Statements Unplugged':
              name: "「如果」陳述式不插電教程"
            Boolean Expressions and "If" Statements:
              name: 布林值（Boolean）運算式與「如果」（If）陳述句
            '"if-else-if" and Conditional Logic':
              name: "「如果…否則」和條件判斷式"
            'Building an App: Color Sleuth':
              name: 製作應用程式：顏色偵探
            Unit 5 Assessment 2:
              name: 單元 5 評量 2
            While Loops:
              name: 當…迴圈
            Loops and Simulations:
              name: 迴圈與模擬
            Introduction to Arrays:
              name: 陣列（Arrays）的介紹
            'Building an App: Image Scroller':
              name: 創建一個 APP：圖像播放器
            Unit 5 Assessment 3:
              name: 單元 5 評量 3
            Processing Arrays:
              name: 處理陣列
            Functions with Return Values:
              name: 帶回傳值的函式
            'Building an App: Canvas Painter':
              name: 創建一個 App - 帆布畫家
            Unit 5 Assessment 4:
              name: 單元 5 評量 4
            'Practice PT: Create':
              name: PT 練習 - 創建
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: 單元 5 評估 5 - AP 虛擬碼練習問題
            Participate in a longitudinal study!:
              name: 請參與縱貫研究吧！
            Mid-Year Survey:
              name: 中年級問卷
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
          student_description: 本單元繼續介紹電腦運算的基礎概念，從而能夠製作內容豐富的互動應用程式。本課程使用 JavaScript 做為程式語言，並以 App Lab 做為程式設計環境來製作應用程式，但這些課堂中學到的概念，適用於所有程式語言和工具。
        csppostap-2018:
          title: AP 後 - 資料工具 ('18-'19)
          description_short: 學習在 App Lab 應用程式中收集與使用資料。
          lesson_groups:
            csp_postap_1:
              display_name: 第 1 章：數據操作和可視化
            csp_postap_2:
              display_name: 第 2 章：App 和數據庫
            cspSurvey:
              display_name: 問卷
          lessons:
            Creating Javascript Objects:
              name: Javascript 物件的創建
            Permanent Data Storage:
              name: 永久資料儲存
            Reading Records:
              name: 紀錄的讀取
            Deleting Records:
              name: 刪除紀錄
            Updating Records:
              name: 更新紀錄
            Importing and Exporting Data:
              name: 匯入和匯出資料
            Visualizing Data:
              name: 資料視覺化
            Sample Apps:
              name: 應用程式範例
            Final Project:
              name: 期末專案
            Intro to Data:
              name: 數據的介紹
            Finding Trends with Visualizations:
              name: 以視覺化尋找趨勢
            Check Your Assumptions:
              name: 驗證你的假設
            Good and Bad Data Visualizations:
              name: 資料視覺化的良好與不良示例
            Making Data Visualizations:
              name: 製作視覺化資料
            Discover a Data Story:
              name: 發現數據故事
            Cleaning Data:
              name: 數據的清理
            Creating Summary Tables:
              name: 建立摘要表
            Project - Tell a Data Story:
              name: 專案 - 訴說關於資料的故事
            Unit 2 Chapter 2 Assessment:
              name: 單元 2 第 2 節 評量
            Chapter 1 Assessment:
              name: 第 1 章評估
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        spritelab:
          title: Sprite Lab 簡介（試行）
          description_audience: 課程 E/F 學生
          description_short: 這是 Code.org 最新工具 Sprite Lab 的試行課程，用於課程 E 與 F
          description: 這是 Code.org 最新工具 Sprite Lab 的試行課程，用於課程 E 與 F
          lessons:
            'Fish Tank: Creating Sprites':
              name: 魚缸：製作角色
            Fish Tank - Creating Sprites:
              name: 魚缸 - 製作角色
            Alien Dance Party - Input:
              name: 外星人舞蹈派對 - 輸入（Input）
            Virtual Pet - Interactions:
              name: 虛擬寵物 — 互動
          student_description: 這是 Code.org 最新工具 Sprite Lab 的試行課程，用於課程 E 與 F
        csd1-dlp-18:
          title: 電腦科學探索單元 1 深入學習 2018-2019
          description_audience: CS Discoveries 輔導員培訓 2018-2019
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 1。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 1。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 1 Deeper Learning Reflections:
              name: 完成單元 1 深入學習反思
            Complete Unit 2 Deeper Learning Reflections:
              name: 完成單元 2 深入學習反思
            Complete Unit 3 Deeper Learning Reflections:
              name: 完成單元 3 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 1。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 1。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd2-dlp-18:
          title: 電腦科學探索單元 2 深入學習 2018-2019
          description_audience: CS Discoveries 輔導員培訓 2018-2019
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 2。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 2。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 2 Deeper Learning Reflections:
              name: 完成單元 2 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 2。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 2。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd3-dlp-18:
          title: 電腦科學探索單元 3 深入學習 2018-2019
          description_audience: CS Discoveries 輔導員培訓 2018-2019
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 3。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 3。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 3 Deeper Learning Reflections:
              name: 完成單元 3 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 3。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 3。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd4-dlp-18:
          title: 電腦科學探索單元 4 深入學習 2018-2019
          description_audience: CS Discoveries 輔導員培訓 2018-2019
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 4。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 4。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 2 Deeper Learning Reflections:
              name: 完成單元 2 深入學習反思
            Complete Unit 4 Deeper Learning Reflections:
              name: 完成單元 4 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 4。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 4。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd5-dlp-18:
          title: 電腦科學探索單元 5 深入學習 2018-2019
          description_audience: CS Discoveries 輔導員培訓 2018-2019
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 5。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 5。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 5 Deeper Learning Reflections:
              name: 完成單元 5 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 5。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 5。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd6-dlp-18:
          title: 電腦科學探索單元 6 深入學習 2018-2019
          description_audience: CS Discoveries 輔導員培訓 2018-2019
          description_short: 提供給 CS 探索課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 6。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 6。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 5 Deeper Learning Reflections:
              name: 完成單元 5 深入學習反思
            Complete Unit 6 Deeper Learning Reflections:
              name: 完成單元 6 深入學習反思
          student_description: 這是提供給 Code.org CS 探索課程受訓中輔導員的深入學習計畫單元 6。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 探索課程的單元 6。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp1-dlp-18:
          title: 電腦科學原理單元 1 深入學習 2018-2019
          description_audience: CS Principles 輔導員培訓 2018-2019
          description_short: 提供給 CS 原理課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫單元 1。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的單元 1。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 1 Deeper Learning Reflections:
              name: 完成單元 1 深入學習反思
          student_description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫單元 1。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的單元 1。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp2-dlp-18:
          title: 電腦科學原理單元 2 深入學習 2018-2019
          description_audience: CS Principles 輔導員培訓 2018-2019
          description_short: 提供給 CS 原理課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫單元 2。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的單元 2。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 2 Deeper Learning Reflections:
              name: 完成單元 2 深入學習反思
          student_description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫單元 2。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的單元 2。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp3-dlp-18:
          title: 電腦科學原理單元 3 深入學習 2018-2019
          description_audience: CS Principles 輔導員培訓 2018-2019
          description_short: 提供給 CS 原理課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫單元 3。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的單元 3。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 3 Deeper Learning Reflections:
              name: 完成單元 3 深入學習反思
          student_description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫單元 3。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的單元 3。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp4-dlp-18:
          title: 電腦科學原理單元 4 深入學習 2018-2019
          description_audience: CS Principles 輔導員培訓 2018-2019
          description_short: 提供給 CS 原理課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫單元 4。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的單元 4。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 3 Deeper Learning Reflections:
              name: 完成單元 3 深入學習反思
            Complete Unit 4 Deeper Learning Reflections:
              name: 完成單元 4 深入學習反思
          student_description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫單元 4。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的單元 4。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp5-dlp-18:
          title: 電腦科學原理單元 5 深入學習 2018-2019
          description_audience: CS Principles 輔導員培訓 2018-2019
          description_short: 提供給 CS 原理課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫單元 5。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的單元 5。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 5 Deeper Learning Reflections:
              name: 完成單元 5 深入學習反思
          student_description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫單元 5。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的單元 5。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp-explore-dlp-18:
          title: 電腦科學原理探索深入學習 2018-2019
          description_audience: CS Principles 輔導員培訓 2018-2019
          description_short: 提供給 CS 原理課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫探索 AP 單元。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的探索 AP 單元。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Unit 6 Deeper Learning Reflections:
              name: 完成單元 6 深入學習反思
            Complete Explore AP Unit Deeper Learning Reflections:
              name: 完成探索 AP 單元深入學習反思
            Complete Explore Deeper Learning Reflections:
              name: 完成探索深入學習反思
          student_description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫探索 AP 單元。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的探索 AP 單元。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csp-create-dlp-18:
          title: 電腦科學原理製作深入學習 2018-2019
          description_audience: CS Principles 輔導員培訓 2018-2019
          description_short: 提供給 CS 原理課程受訓中輔導員的深入學習材料
          description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫製作 AP 單元。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的製作 AP 單元。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Create Deeper Learning Reflections:
              name: 完成製作深入學習反思
          student_description: 這是提供給 Code.org CS 原理課程受訓中輔導員的深入學習計畫製作 AP 單元。你將可在這裡找到反思提示與指引，以表現出身為輔導員的你，已熟練 Code.org CS 原理課程的製作 AP 單元。為單元提交你自己的反思後，同儕審查項目便會在本頁底部提供。
        csd-post-survey:
          title: CSD 學生課後問卷調查 ('18-'19)
          description_audience: CSD 學生
          description_short: CSD 學生課後問卷調查
          description: 歡迎來到 Code.org 電腦科學探索課後問卷調查。本問卷調查需要大約 15 分鐘完成。你的回覆將會保持私密與匿名 -- 你的老師可看見全班的匿名匯總結果。這些結果對你的老師與 Code.org 都非常重要，目的是維持和改善課程的品質。感謝你的寶貴時間與關注。
          lesson_groups:
            csd_survey:
              display_name: 課後調查
          lessons:
            CSD post-course survey:
              name: CSD 課後問卷調查
          student_description: 歡迎來到 Code.org 電腦科學探索課後問卷調查。本問卷調查需要大約 15 分鐘完成。你的回覆將會保持私密與匿名 -- 你的老師可看見全班的匿名匯總結果。這些結果對你的老師與 Code.org 都非常重要，目的是維持和改善課程的品質。感謝你的寶貴時間與關注。
        csd-novice-18:
          title: 電腦科學探索新手反思 2018-2019
          description_audience: CS Discoveries 輔導員培訓 2018-2019
          description_short: 提供給 CS 探索課程受訓中輔導員的新手反思材料
          description: 這是為 Code.org 電腦科學探索受訓中輔導員提供的新手反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓週末中執行工作的基礎。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Novice Reflections Overview:
              name: 新手反思概覽
            Welcome:
              name: 歡迎
            Tuesday:
              name: 週二
            Wednesday:
              name: 星期三
            Thursday:
              name: 星期四
            Wrap Up:
              name: 總結
            Friday:
              name: 週五
            Novice Reflection Overview:
              name: 新手反思概覽
            Monday:
              name: 週一
            Day 1:
              name: 第 1 天
            Day 2:
              name: 第 2 天
            Day 3:
              name: 第 3 天
            Day 4:
              name: 第 4 天
          student_description: 這是為 Code.org 電腦科學探索受訓中輔導員提供的新手反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓週末中執行工作的基礎。
        csd-apprentice-18:
          title: 電腦科學探索學徒反思 2018-2019
          description_audience: CS Discoveries 輔導員培訓 2018-2019
          description_short: 提供給 CS 探索課程受訓中輔導員的學徒反思材料
          description: 這是為 Code.org 電腦科學探索受訓中輔導員提供的學徒反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓週末中執行工作的基礎。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Novice Reflection Overview:
              name: 新手反思概覽
            Tuesday:
              name: 週二
            Wednesday:
              name: 星期三
            Thursday:
              name: 星期四
            Wrap Up:
              name: 總結
            Apprentice Reflection Overview:
              name: 學徒反思
            Day 1:
              name: 第 1 天
            Day 2:
              name: 第 2 天
            Day 3:
              name: 第 3 天
            Day 4:
              name: 第 4 天
          student_description: 這是為 Code.org 電腦科學探索受訓中輔導員提供的學徒反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓週末中執行工作的基礎。
        csp-novice-18:
          title: 電腦科學原理新手反思 2018-2019
          description_audience: CS Principles 輔導員培訓 2018-2019
          description_short: 提供給 CS 原理課程受訓中輔導員的新手反思材料
          description: 這是為 Code.org 電腦科學原理受訓中輔導員提供的新手反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓週末中執行工作的基礎。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Novice Reflection Overview:
              name: 新手反思概覽
            Tuesday:
              name: 週二
            Wednesday:
              name: 星期三
            Thursday:
              name: 星期四
            Wrap Up:
              name: 總結
            Monday:
              name: 週一
            Day 1:
              name: 第 1 天
            Day 2:
              name: 第 2 天
            Day 3:
              name: 第 3 天
            Day 4:
              name: 第 4 天
          student_description: 這是為 Code.org 電腦科學原理受訓中輔導員提供的新手反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓週末中執行工作的基礎。
        csp-apprentice-18:
          title: 電腦科學原理學徒反思 2018-2019
          description_audience: CS Principles 輔導員培訓 2018-2019
          description_short: 提供給 CS 原理課程受訓中輔導員的學徒反思材料
          description: 這是為 Code.org 電腦科學原理受訓中輔導員提供的學徒反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓週末中執行工作的基礎。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Novice Reflection Overview:
              name: 新手反思概覽
            Tuesday:
              name: 週二
            Wednesday:
              name: 星期三
            Thursday:
              name: 星期四
            Wrap Up:
              name: 總結
            Apprentice Reflection Overview:
              name: 學徒反思
            Day 1:
              name: 第 1 天
            Day 2:
              name: 第 2 天
            Day 3:
              name: 第 3 天
            Day 4:
              name: 第 4 天
          student_description: 這是為 Code.org 電腦科學原理受訓中輔導員提供的學徒反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓週末中執行工作的基礎。
        pre-express-2018:
          title: 學前兒童的速學課程（2018）
          assignment_family_title: 學前預讀
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          description_short: 為學前兒童提供的電腦科學簡介：結合我們的最佳幼稚園與一年級課程。
          description_audience: 年齡：4-8
          lessons:
            'Debugging: Unspotted Bugs':
              name: 沒被發現的程式的錯誤（Bug）
            'Persistence & Frustration: Stevie and the Marbles':
              name: Stevie 和 Big Project
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
            Learn to Drag and Drop:
              name: 學習滑鼠的拖放
            'Online Safety: Your Digital Footprint':
              name: 線上問卷調查：你的數位足跡
            'Programming: My Robotic Friends':
              name: 我的小機器人朋友
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            'Programming: Star Wars':
              name: 程式設計：星際大戰
            'Loops: My Loopy Robotic Friends':
              name: 我的愛迴圈小機器人朋友
            Loops in Collector:
              name: 與 Laurel 一起學習迴圈
            Loops in Artist:
              name: 使用迴圈（Loop）在花園中繪畫
            'Events: The Big Event':
              name: 小小大事件
            Events in Play Lab:
              name: 以事件（Event）展開皇家大戰
            Spelling Bee:
              name: 拼字蜜蜂
            Move It, Move It:
              name: 移動它，移動它
            Sequencing with Scrat:
              name: 和鼠奎特一起學序列
            Your Digital Footprint:
              name: 你的數位足跡
            Programming in Ice Age:
              name: 和鼠奎特一起寫程式
            Copyright and Creativity:
              name: 以公平的方式製作與玩遊戲
            Programming with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起寫程式
            Loops in Ice Age:
              name: 和鼠奎特一起學迴圈（Loop）
            'Persistence & Frustration: Stevie and the Big Project':
              name: Stevie 和 Big Project
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        spritelab-validated:
          lessons:
            Fish Tank - Creating Sprites:
              name: 魚缸 - 製作角色
            Alien Dance Party - Input:
              name: 外星人舞蹈派對 - 輸入（Input）
            Virtual Pet - Interactions:
              name: 虛擬寵物 — 互動
        2018hoc-ab:
          lessons:
            Labyrinth:
              name: 迷宮
        deepdive-debugging:
          title: 供教師使用的除錯課堂
          lessons:
            Debugging for AB Educators:
              name: 除錯（課程 AB 教師專用）
            Debugging for CDEF Educators:
              name: 除錯（課程 CDEF 教師專用）
        fit-test:
          title: 受訓中輔導員（FIT）培訓練習 - PLC 課程
          description_audience: 受訓中輔導員
          description_short: 受訓中輔導員（FIT）培訓課程
          description: 用於展示 PLC 課程如何運作。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Complete Practice Question:
              name: 完整練習問題
          student_description: 用於展示 PLC 課程如何運作。
        spritelab-simple:
          title: Sprite Lab 簡介（EE）
          description: 這是 Code.org 最新工具 Sprite Lab 的試行課程，用於課程 E 與 F
          description_short: 這是 Code.org 最新工具 Sprite Lab 的試行課程，用於課程 E 與 F
          description_audience: 課程 E/F 學生
          lessons:
            Fish Tank - Creating Sprites:
              name: 魚缸 - 製作角色
            Alien Dance Party - Input:
              name: 外星人舞蹈派對 - 輸入（Input）
            Virtual Pet - Interactions:
              name: 虛擬寵物 — 互動
          student_description: 這是 Code.org 最新工具 Sprite Lab 的試行課程，用於課程 E 與 F
        spritelab-ee:
          title: Sprite Lab 簡介（EE）
          lessons:
            Fish Tank - Creating Sprites:
              name: 魚缸 - 製作角色
            Alien Dance Party - Input:
              name: 外星人舞蹈派對 - 輸入（Input）
            Virtual Pet - Interactions:
              name: 虛擬寵物 — 互動
        craft18:
          title: craft18 測試腳本
          lessons:
            craft18 levels:
              name: craft18 關卡
        frozen-2018:
          title: 新冰雪奇緣腳本
          lessons:
            Artist:
              name: 藝術家
        frozen-2018-test:
          title: 新冰雪奇緣腳本
          lessons:
            Artist:
              name: 藝術家
        dance:
          title: 舞蹈派對 2018
          description_short: 精選 Katy Perry、Madonna、J. Balvin, Sia、Keith Urban、Ciara 和其他 25 位名人！
          description: 寫個你自己的舞蹈程式，並分享給朋友們！
          lessons:
            new stage:
              name: 新的階段
            Dance Party:
              name: 舞蹈派對
              description_student: 在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。
              description_teacher: 在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。
          student_description: 寫個你自己的舞蹈程式，並分享給朋友們！
          name: 舞蹈
        frozen-2018-test-b:
          title: 新冰雪奇緣腳本
          lessons:
            Artist:
              name: 藝術家
        aquatic:
          title: 'Minecraft: 水上巡航'
          description_short: 拿出你的創造力和解決問題能力，用程式探索和建立水下世界！
          description: Minecraft 帶著新活動回來啦！拿出你的創造力和解決問題能力，一同用程式探索與打造水世界。
          lessons:
            Aquatic:
              name: 'Minecraft: 水上巡航'
              description_teacher: 在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。
          student_description: Minecraft 帶著新活動回來啦！拿出你的創造力和解決問題能力，一同用程式探索與打造水世界。
          name: 水生
        sconyers:
          title: 翠絲的遊樂場
          lessons:
            Lesson the first:
              name: 課堂 1
            Digital Design:
              name: 數位設計
            Linking Screens:
              name: 連結不同畫面
            Test Lesson:
              name: 測試課堂
        dance--draft:
          lessons:
            Dance Party:
              name: 舞蹈派對
        dance-draft:
          title: 請勿使用
          lessons:
            Dance Party:
              name: 舞蹈派對
        cspplayground:
          title: CSP 遊樂場
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
          lessons:
            Hannah's Test Stage:
              name: 漢娜的測試舞台
            Hannah Test Stage:
              name: 漢娜測試舞台
            U4 L02 Variables Investigate:
              name: U4 L02 變數研究
            Variables Investigate:
              name: 變數研究
            Variables Explore:
              name: 變數探索
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey:
              name: 學生問卷
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Teacher Surveys:
              name: 老師問卷
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
            Lists Explore:
              name: 清單探索
        dance-extras:
          title: 繼續跳舞 2018
          description_short: 跳出一小時玩程式活動 - 參加這項 Code.org 舞蹈派對教程的跟進活動。
          description: 在一小時之後嘗試更多奇思妙想。
          lessons:
            Dance Party - Go Further:
              name: 舞蹈派對 - 深入學習
              description_student: 在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。
              description_teacher: 在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。
          student_description: 在一小時之後嘗試更多奇思妙想。
        coursef-2019:
          title: 課程 F（2019）
          description: 學習使用不同類型的迴圈（loop）、事件（event）、函式（function）與條件式（conditional）。研究不同的問題解決技巧，並討論電腦運算和網際網路的社會影響。在本課程的第 2 部分，你會設計並製作一份總結專案，然後可把這個專案和好友與家人分享。
          description_short: 學習計算機科學的基礎概念，並創建自己的藝術、故事、遊戲作品。
          description_audience: 年齡 9-13
          lesson_groups:
            ramp_up:
              display_name: 提升
            csf_variables:
              display_name: 變數
            csf_data:
              display_name: 數據
            csf_for_loops:
              display_name: 計次迴圈（For Loops）
            csf_internet:
              display_name: 網際網路 Internet
            csf_sprites:
              display_name: 角色
            csf_digcit:
              display_name: 數位公民
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Sequence in Maze:
              name: 迷宮中的陣列（Sequence）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops in Bee/Zombie:
              name: 蜜蜂/殭屍遊戲裡的巢狀迴圈（Nested Loop）
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Conditionals in Farmer:
              name: 農夫遊戲中的條件式（Conditional）
            Functions in Minecraft:
              name: Minecraft 中的函式
              description_student: 你能指出要如何利用函式提高編程效率嗎？
              description_teacher: 在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！
            The Power of Words:
              name: 語言的力量
              description_student: 欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。
            Envelope Variables:
              name: 信封變數
              description_student: "「信封」與「變數」有一個共通點：兩者都可放進有用的東西。在這裡，你會學習變數是甚麼，以及變數可以做哪些精彩的事。"
              description_teacher: 變數會用來做為值的佔位符，例如數字或詞語等。在程式設計中，變數可提供大量的自由度。電腦科學家不同輸入很多次同一個句子，或記住含糊的數字；他們可使用變數引用這些內容。本課堂會協助解釋甚麼是變數，以及我們可怎樣以不同方式使用變數。變數這種概念不容易掌握，因此我們建議在課堂結束時預留充足時間討論。
            Variables as Constant in Artist:
              name: 在藝術家遊戲中學習變數
              description_student: 別忘了把創意帶到課室！在這些謎題中，你會使用變數繪畫漂亮的圖畫。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀，即使在執行時各個值都沒有變更。
            Variables that Change in Bee:
              name: 在蜜蜂遊戲中變更變數
              description_student: 這隻蜜蜂很喜愛變數！
              description_teacher: 本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。
            Variables that Change in Artist:
              name: 在藝術家遊戲中變更變數
              description_student: 在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            For Loop Fun:
              name: 有趣的計次迴圈
              description_student: 玩「for」（計數）迴圈，發掘無窮樂趣！
              description_teacher: 我們知道迴圈可以讓我們不斷重複的做同一件事情。現在，我們要學習如何使用本身有額外結構的迴圈。這些新結構可讓學生編寫更強大、更具動態的程式碼。
            For Loops in Bee:
              name: 與蜜蜂一起嘗試 for（計數）迴圈
              description_student: 嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！
              description_teacher: 本課堂以蜜蜂為角色，集中學習「for」（計數）迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後觀看 for 迴圈簡介，讓他們可更有效地解決複雜的問題。
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
              description_student: 準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。
              description_teacher: 在本課堂中，學生會繼續練習「for」（計數）迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與「for」迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。
            Learning Sprites with Sprite Lab:
              name: Sprite Lab 中的游泳小魚
              description_student: 學習建立與編輯角色（sprite）。
              description_teacher: 在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。
            Alien Dance Party with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
            Pet Giraffe with Sprite Lab:
              name: Sprite Lab 中的寵物長頸鹿
            Explore Project Ideas:
              name: 找些專案靈感
              description_student: 是時候啟發你的靈感！這些謎題會向你展示一些預先製作完成的遊戲與圖例，助你為大型專案制定計畫。
              description_teacher: |-
                接下來的 5 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是預期進行多個課堂或多個星期的專案，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。

                在探索階段中，學生將能夠檢視藝術家與 Play Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家或 Play Lab 中製作自己的專案（這很可能是專案中最長的階段）。在測試與再度思考後，學生會修訂自己的專案。最後，學生將能夠向同伴展示自己的成品。
            The Design Process:
              name: 設計流程
              description_student: 如此大的專案需要時間與充分的計畫。在這裡，你會學習設計流程，並用來製作自己的專案。
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。在專案的這個部分，學生會學習設計流程，並瞭解如何在自己的專案中實作。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Build Your Project:
              name: 建立你的專案
              description_student: 你終於可開始製作屬於自己的專案了！
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。學生可使用藝術家或 Play Lab 自由創作自己的專案。這將會是專案中時間最長的部分。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Revise Your Project:
              name: 修改你的專案
              description_student: 羅馬並不是一天就能建成，你的專案也不應急著完成。請花時間編輯並修改你的專案，從而盡力達到最佳效果。
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。如今學生已經把專案製作完成，現在學生有機會取得同伴意見，以修改自己的專案。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            Present Your Project:
              name: 說明你的專案
              description_student: 是時候展示你的作品！你將會把自己的優秀專案展示給同伴看。
              description_teacher: 課程包含 5 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，製作自己設計的專案。最後，學生將能夠向同伴展示自己的成品，或者以特殊連結向摯愛分享。概述流程中全部 5 個階段的課堂指南，會在專案流程的開始時在 [這裡] \(<https://curriculum.code.org/csf/coursef/15/>) 提供。
            The Artist:
              name: 藝術家
            Nested Loops in the Maze:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Sequencing in the Maze:
              name: 迷宮中的陣列（Sequence）
            Programming and Loops with the Artist:
              name: 用藝術家設計程式並練習迴圈（Loop）
            Events with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
              description_student: 製作可與同學分享的互動專案。
              description_teacher: 本課堂會介紹 Sprite Lab，這是一個工作平台，讓學生可在這裡製作自己的互動式動畫和遊戲。除了「行為」外，學生今天會結合做為「事件」的使用者輸入，以製成「外星人舞蹈派對」。
            Loops with the Artist:
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Sprite Lab Behaviors:
              name: Sprite Lab 中的行為
            Editing Behaviors:
              name: Sprite Lab 的行為（Behavior）
              description_student: 學習設計程式，控制自己角色的行為！
              description_teacher: 學生將在這裡使用 Sprite Lab，製作角色的自訂行為。
            Virtual Pet:
              name: 在 Sprite Lab 中製作虛擬寵物
              description_student: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              description_teacher: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
            Data from Sprite Lab:
              name: Sprite Lab 中的資料
            End of Course Project:
              name: 課程結束專案
              description_student: 這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！
              description_teacher: |-
                接下來的 5 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是預期進行多個課堂或多個星期的專案，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。\\r
                \\r

                在「探索」階段中，學生將會嘗試預先製作完成的藝術家與 Sprite Lab 程式，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家或 Sprite Lab（或你方便提供的其他介面）中製作自己的專案（這可能是專案中最長的階段）。在測試與同儕審查後，學生會修訂自己的程式碼。最後，學生將能夠向同學展示自己的成品。
            Copyright and Creativity:
              name: 版權與創意
            Internet:
              name: 網際網路
              description_student: 你有沒有想過，資訊怎樣在網際網路中傳輸？不是魔術！本課堂將會教導網際網路運作方面的基本知識。
              description_teacher: 即便許多人每天都會上網，但是理解其中原理的中卻不多。在本課堂中，學生會假裝流經網際網路，同時學習連線、URL、IP 位址與 DNS 的知識。
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
              description_student: 本課堂會教導你關於群眾外包（Crowdsourcing）的知識，這是以團隊製作專案的流程。
              description_teacher: 在電腦科學中，我們會面對一些重大而艱鉅的問題。各種挑戰，例如找出大質數或是 DNA 定序等，都是個人幾乎無法做到的事情。集合其他人的力量，就能夠管理這些工作。本課堂會向學生說明團隊合作在電腦科學行業中的效用。
            Digital Sharing:
              name: 數位分享
              description_student: 在本課堂中，你會學到所有權與著作權方面的挑戰與優點。
              description_teacher: 本課堂由「著作權與創意」團隊借予電腦科學基礎。提供本課堂之目的，是協助學生瞭解尊重所有權與著作權的挑戰和優點，尤其是在數位環境中。教師應鼓勵學生，我們是遵守道德的數位公民，重點之一是尊重藝術家的權利。
            Running Simulations:
              name: 執行模擬
            Simulating Experiments:
              name: 模擬實驗
              description_student: 在電腦上執行模擬，並實驗一下變更參數後的情況。
              description_teacher: 在 Sprite Lab 上執行簡單模擬，學生便會體驗到電腦運算可怎樣用來收集資料，從而找出各種趨勢與模式。多次執行模擬後，學生便會有機會預測一下，變更模擬中的變數可能會怎樣影響結果，然後再測試這個假設。
          student_description: 學習使用不同類型的迴圈（loop）、事件（event）、函式（function）與條件式（conditional）。研究不同的問題解決技巧，並討論電腦運算和網際網路的社會影響。在本課程的第 2 部分，你會設計並製作一份總結專案，然後可把這個專案和好友與家人分享。
        dance-low:
          title: 舞蹈派對（低網路頻寬）
          description_short: 編寫你自己的舞蹈派對，然後分享給好友！（此版本用於連線速度較慢的情況）
          lessons:
            Dance Party:
              name: 舞蹈派對
        coursed-2019:
          title: 課程 D（2019）
          description: 學生學習巢狀迴圈、當迴圈、條件與事件，除了編碼，學生還會學到什麼是數位公民。
          description_short: 學習條件式陳述句。你可製作自己的藝術品、遊戲，甚至舞蹈派對！
          description_audience: 年齡 7-11
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_events:
              display_name: 事件
            csf_loops:
              display_name: 迴圈
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            csf_binary:
              display_name: 二進制（Binary）
            csf_digcit:
              display_name: 數位公民
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 方格紙編程
              description_student: 在本課堂中，你會為同學設計程式，讓同學能夠畫畫！
              description_teacher: 學生會互相為對方「設計程式」繪畫，從而有機會以有趣且無障礙的方式，體驗程式設計中的一些核心概念。班級課堂開始時，首先會讓學生使用符號，互相指導對方在方格紙上的正方形裡填色，以重現出現有的圖片。如果時間允許，課堂結束時可以讓學生自行創作圖像。
            Introduction to Online Puzzles:
              name: 線上謎題簡介
              description_student: 本課堂會讓你練習本課程中需要的技巧。
              description_teacher: 在這組謎題中，首先會向學生簡介（或重溫，視你的班級經驗而定） Code.org 的線上工作區。我們有各種影片指出工作區的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕。這些影片也會說明怎樣拖曳 Blockly 積木、刪除 Blockly 積木與連接 Blockly 積木。之後，學生會在迷宮裡練習_序列_與_除錯_技巧。接著，學生會在學習_迴圈_的基本知識時看到一些新的謎題類型，例如收藏家、藝術家與收割者。
            Relay Programming:
              name: 接力編程
              description_student: 還記得課程開始時，你使用程式碼繪畫嗎？在本課堂中，你會與一個團隊合作，做一些類似的事情！
              description_teacher: 這項活動首先會以簡短的課堂開始，內容關於除錯與堅持，然後會快速轉至倒數計時活動，學生會分為多個團隊，一起編寫程式，每次編寫一項指令。
            Debugging in Collector:
              name: 和 Laurel 學除錯（Debug）
              description_student: 在編寫程式時，你是否遇到過問題？在本課堂中，你會學習除錯的秘密。除錯是找出並解決程式碼問題的流程。
              description_teacher: 在這項線上活動中，學生會在「收藏家」環境中練習除錯。他們會練習閱讀與編輯程式碼，從而使用簡單的演算法、迴圈（loop）與巢狀迴圈（nested loop），修正謎題中的錯誤。
            Events in Bounce:
              name: 彈板遊戲中的事件（Event）
              description_student: 有沒有想過，你可以在學校玩電子遊戲？在本課堂中，你將有機會製作自己的遊戲！
              description_teacher: 在這項線上活動中，學生會學習甚麼是事件（event），以及電腦怎樣在程式（例如電子遊戲）中使用事件。學生會在各種謎題中，讓程式，對事件做出反應（例如按下箭頭按鈕後）。在謎題結束時，學生將有機會以不同的速度與聲音自訂遊戲。
            Loops in Ice Age:
              name: 冰河歷險紀中的迴圈
              description_student: 在本課堂中，你會使用 repeat（重複）積木，協助鼠奎特以最有效率的方式拿到橡樹果實。
              description_teacher: 這個舞台是使用迴圈（loop）的快速更新（或簡介），會讓學生使用「repeat」（重複）積木，讓鼠奎特以更有效率的方式拿到橡樹果實。
            Loops in Artist:
              name: 以迴圈（Loop）繪畫藝術作品
              description_student: 在本課堂中，迴圈（loop）讓你更容易在藝術家中製作酷炫的圖像！
              description_teacher: 本課堂以學生先前在課堂中對迴圈（loop）的認識為基礎，讓學生有機會真正發揮創意。這項活動也會做為除錯練習，獲得額外的問題解決機會。
            Nested Loops in Bee:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明你在建立巢狀迴圈（nested loop）時會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Nested Loops in Artist:
              name: 小藝術家裡的巢狀迴圈（Nested Loops）
            Nested Loops in Frozen:
              name: 冰雪奇緣中的巢狀迴圈（Nested Loop）
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
              description_student: 迴圈（loop）在程式編寫中非用實用。本課堂會教你其中一種：while（當）迴圈！
              description_teacher: |-
                學生學習這個課堂時，應已經充分練習使用「repeat」（重複）迴圈。現在是時候把各種知識結合在一起了。\\r
                \\r
                _While（當）迴圈_用於在符合某項條件時繼續重複命令。程式設計師使用 while 迴圈的情況是：不知道確實需要重複多少次命令，但是知道哪些條件需要是 true，讓迴圈可以繼續重複。例如，學生將會在農夫遊戲中填滿坑洞與挖出土堆。他們不會知道坑洞的大小或土堆的高度，但是會知道只要地面不平坦，便需要一直填滿坑洞與挖出土堆。
            Until Loops in Maze:
              name: 迷宮裡的 until（直到）迴圈
              description_student: 使用 until（直到）迴圈，你就可成就一些精彩的事情！
              description_teacher: 在本課堂中，學生會學習「until」（直到）迴圈。學生會製作程式，讓主角重複動作，「直到」主角到達所需的停駐點。
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
              description_student: 是時候玩一款遊戲，讓你僅在某些條件下賺到點數！
              description_teacher: |-
                本課堂會展示條件式（conditional）可怎樣用來量身制定程式處理特定資訊。我們設計程式時，並不總是能得到全部需要的資訊。有時候在不同的情況下，你需要做一些不同的事情，即便你不知道在執行程式時哪種情況為真。這時候，條件式就派得上用場了。條件式可讓電腦在每次執行你的程式碼時，依據真（true）的資訊做出決定。r
                \\r
            Conditionals in Bee:
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
              description_student: 你已明白甚麼是條件式（conditional）。現在是時候為蜜蜂設計程式，讓蜜蜂在採集蜂蜜與花蜜時使用。
              description_teacher: 到了這個階段，學生已設計了程式，讓程式每次都使用相同的方法執行。這種做法十分可靠，不過欠缺點彈性。在本課堂中，班級同學將會開始使用條件式（conditional）編寫程式，讓他們編寫出來的程式，可依據程式遇到的特定條件，以不同方式運作。
            Conditionals & Loops in Harvester:
              name: 使用條件式（Conditional）收割農作物
              description_student: 我們不會總是清楚瞭解要在甚麼時候使用每項條件式（conditional）。本課堂會幫你練習決定要怎樣做。
              description_teacher: 學生會練習「while」（當）迴圈、「until」（直到）迴圈與「if/else」（如果/否則）陳述句。這幾種積木都會使用條件式。練習全部積木後，學生便會學習到如何編寫複雜且具靈活性的程式碼。
            Digital Citizenship:
              name: 數位公民
              description_student: 有些資訊在網上分享是不安全的。本課將讓學生瞭解安全資訊和私人資訊之間的區別。
              description_teacher: |-
                與 [r common-sense-media] 媒體合作，這課有助學生批判性的思考某些網站的請求或要求的使用者訊息相關問題。\\r
                \\r
                學生會學到隱私訊息和個人訊息的不同，分辨在網路上分享什麼資料是安全的，什麼是不安全的。
            Build a Play Lab Game:
              name: 製作 Play Lab 遊戲
            'Unplugged: Binary':
              name: 二進制圖像
              description_student: 瞭解電腦怎樣使用只有 2 種選項的語言來儲存圖片。
              description_teacher: 雖然很多人認為二進制就是一堆的 0 和 1，但是學生會學習一種概念：資訊可以用不同的二進制表達法表示。這堂課將更深入這個觀念，說明電腦如何同樣的以二進制儲存更複雜的訊息（例如圖像和顏色）。
            Artist Binary:
              description_student: 在本課堂中，你會學習怎樣僅使用 0 和 1 就能製作圖像。
              description_teacher: 這個線上課堂系列，會讓學生學習使用開/關來製作圖像。
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
              description_student: 在本課堂中，建立自己的星際大戰遊戲，感受原力的震撼！
              description_teacher: 在本課堂中，學生會練習使用事件（event）製作遊戲，並可在線上分享。在 R2-D2 和其他星際大戰的角色陪伴下，學生會在引導下學習各種事件，然後自由製作屬於自己的遊戲。
            Dance Party:
              name: 舞蹈派對
              description_student: 現在是時候慶祝一下了！你會在本課堂中編寫程式，製作自己的互動舞蹈派對。
              description_teacher: 在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。
          student_description: 學生學習巢狀迴圈、當迴圈、條件與事件，除了編碼，學生還會學到什麼是數位公民。
        coursee-2019:
          title: 課程 E（2019）
          description: 首先使用演算法（algorithm）、迴圈（loop）、條件式（conditional）和事件（event）開始編寫程式，然後你將會學習函式（function）。在本課程的第 2 部分，你便會開始設計和製作一個總結專案，並可與你的好友和家人分享。
          description_short: 預覽課程 C & D 的概念，進一步的學習函式。
          description_audience: 年齡 8-12
          lesson_groups:
            ramp_up:
              display_name: 提升
            csf_sprites:
              display_name: 角色
            csf_digcit:
              display_name: 數位公民
            csf_impacts:
              display_name: 運算的影響
            csf_nested_loops:
              display_name: 巢狀迴圈
            csf_functions:
              display_name: 函式
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Sequence in Maze:
              name: 迷宮中的陣列（Sequence）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops:
              name: 巢狀迴圈
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Conditionals:
              name: 與農夫一起嘗試條件式（Conditional）
              description_student: 在這個有趣而具挑戰的遊戲系列中，你會告訴電腦在某些特定條件下如何行動。
              description_teacher: 本課堂會向學生介紹「while」（當）迴圈與「if / else」（如果/否則）陳述句。_While 迴圈_ 用於在條件是 true 時繼續重複命令。While 迴圈的使用情況是：程式設計師不知道命令確實需要重複多少次，但是知道哪項條件需要為 true，才可讓迴圈繼續重複。「If / Else」陳述句為程式設計提供彈性，程式僅會在某個項目為 true 時執行整個部分，否則便會執行其他項目。
            Private and Personal Information:
              name: 隱私與個人資訊
              description_student: 網際網路刺激有趣，但是也有必要保持安全！本課堂會教你有哪些資訊可安全分享，有哪些資訊則應保持私密。
              description_teacher: |-
                本課堂由常識教育（Common Sense Education）制定，內容關於可在線上安全分享的內容，與不可在線上安全分享的內容有哪些區別。\\r
                \\r
                瀏覽一些網站時，若網站請求學生取得他們身分的資訊，他們就會學習採取批判性的查詢程序，讓他們能保護自己與家人免遭盜用身分。在本課堂中，學生會學習以批判思考方式，思考部分網站請求或要求取得的使用者資訊。他們會學習私密資訊與個人資訊的分別，並瞭解如何分辦哪些內容可在線上安全分享，哪些內容則不安全。
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
              description_student: 在本課堂中，建立自己的星際大戰遊戲，感受原力的震撼！
              description_teacher: 在本課堂中，學生會練習使用事件（event）製作遊戲，並可在線上分享。在 R2-D2 和其他星際大戰的角色陪伴下，學生會在引導下學習各種事件，然後自由製作屬於自己的遊戲。
            'Functions: Songwriting':
              name: 歌曲創作
              description_student: 即使是搖滾巨星也需要程式設計技巧。本課堂會用歌曲裡的歌詞教授函式。
              description_teacher: 在電腦科學世界中，函式（function）可以說是最壯觀的結構之一。函式有時候稱為程序，是在龐大的程式中的一些迷你程式，可以不斷重複利用。本課堂將會幫助學生直觀的瞭解，為甚麼把這麼多零碎的程式碼組合成函式是非常有用的做法。
            Functions in Minecraft:
              name: Minecraft 中的函式
              description_student: 你能指出要如何利用函式提高編程效率嗎？
              description_teacher: 在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！
            Functions in Harvester:
              name: 在收割者遊戲中學習函式（Function）
              description_student: 協助農夫收割農作物時，函式（function）可為你省下大量工夫！
              description_teacher: 學生已練習在藝術家遊戲中製作精彩的設計，並在蜜蜂遊戲中遊走，但他們今天會使用函式（function），在收割者遊戲中收割農作物。本課堂會鼓勵學生以新的方式使用函式：把函式和「while」（當）迴圈與「if/else」（如果/否則）陳述句結合起來。
            Copyright and Creativity:
              name: 版權與創意
            Functions in Artist:
              name: 在藝術家遊戲中使用函式（Function）
              description_student: 使用函式，以更簡易的方式繪畫複雜的圖畫！
              description_teacher: 學生會在藝術家遊戲中學習使用函式（function）。他們會製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。
            Determine the Concept:
              name: 釐清概念
              description_student: |-
                我們甚麼秘密都不會告訴你！
                在這個課堂中，你可使用之前學習的所有技巧。
              description_teacher: 本課堂首先會結合先前各課堂的概念，並讓學生有機會以批判的方式，思考可怎樣解決每個問題，但不會告訴他們應使用哪個概念。學生會重溫基本的演算法、除錯、「repeat」（重複）迴圈、條件式、「while」（當）迴圈與函式。
            Learning Sprites with Sprite Lab:
              name: Sprite Lab 中的游泳小魚
              description_student: 學習建立與編輯角色（sprite）。
              description_teacher: 在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。
            Alien Dance Party with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
              description_student: 製作可與同學分享的互動專案。
              description_teacher: 本課堂會介紹 Sprite Lab，這是一個工作平台，讓學生可在這裡製作自己的互動式動畫和遊戲。除了「行為」外，學生今天會結合做為「事件」的使用者輸入，以製成「外星人舞蹈派對」。
            Pet Giraffe with Sprite Lab:
              name: Sprite Lab 中的寵物長頸鹿
            Explore Project Ideas:
              name: 找些專案靈感
              description_student: 這裡有幾個遊戲和幾幅圖畫。嘗試所有遊戲和圖畫，為你的專案提供靈感構想！
              description_teacher: |-
                接下來的 4 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是多個課堂或多個星期的體驗，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。

                在探索階段中，學生將能夠檢視預先製作完成的藝術家與 Play Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家或 Play Lab 中製作自己的專案（這可能是專案中最長的階段）。最後，學生將能夠向同伴展示自己的成品。
            The Design Process:
              name: 設計流程
              description_student: 如此大的專案需要時間與充分的計畫。在這裡，你會學習設計流程，並用來製作自己的專案。
              description_teacher: 課程包含 4 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，編寫自己設計的專案。在專案的這個部分，學生會學習設計流程，並瞭解如何在自己的專案中實作。流程中全部 4 個階段的課堂指南，會在本專案流程的階段 1 [這裡] \(<https://curriculum.code.org/csf/coursee/12/>) 提供。
            Build Your Project:
              name: 建立你的專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
              description_teacher: 課程包含 4 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，編寫自己設計的專案。學生可使用藝術家或 Play Lab 自由創作自己的專案。這可能是專案中時間最長的階段。流程中全部 4 個階段的課堂指南，會在本專案流程的階段 1 [這裡] \(<https://curriculum.code.org/csf/coursee/12/>) 提供。
            Present Your Project:
              name: 說明你的專案
              description_student: 是炫耀自己的時候了！向同伴展示一下你的成品吧。
              description_teacher: 課程包含 4 個課堂，學生將會使用 Play Lab 或藝術家做為程式設計環境，編寫自己設計的專案。最後，學生將能夠向同伴展示自己的成品，或者以特殊連結向摯愛分享。流程中全部 4 個階段的課堂指南，會在本專案流程的階段 1 [這裡] \(<https://curriculum.code.org/csf/coursee/12/>) 提供。
            Internet:
              name: 網際網路 Internet
              description_student: 你有沒有想過，資訊怎樣在網際網路中傳輸？不是魔術！本課堂將會教導網際網路運作方面的基本知識。
              description_teacher: 即便許多人每天都會上網，但是理解其中原理的中卻不多。在本課堂中，學生會假裝流經網際網路，同時學習連線、URL、IP 位址與 DNS 的知識。
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
              description_student: 本課堂會教導你關於群眾外包（Crowdsourcing）的知識，這是以團隊製作專案的流程。
              description_teacher: 在電腦科學中，我們會面對一些重大而艱鉅的問題。各種挑戰，例如找出大質數或是 DNA 定序等，都是個人幾乎無法做到的事情。集合其他人的力量，就能夠管理這些工作。本課堂會向學生說明團隊合作在電腦科學行業中的效用。
            Nested Loops in Bee:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Nested Loops in Artist:
              description_student: 更多巢狀迴圈（nested loop）！這一次，你將能夠使用巢狀迴圈製作一些非常漂亮的圖畫！
              description_teacher: 學生會在今天的謎題組合中，使用藝術家來製作精美的圖像。學生會繼續練習巢狀迴圈（nested loop），並訂立新的目標，從而瞭解迴圈在整體上的更多用法。這套謎題也有激發創意的潛力，讓學生有機會在舞台的末尾部分創造自己的設計。
            Nested Loops in Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
              description_student: 安娜與艾莎的滑冰技術非常出眾，但是需要你的協助，在冰上建立模式。請使用巢狀迴圈（nested loop）製作非常酷炫的效果！
              description_teacher: 學生已學懂怎樣把迴圈分層，現在他們可製作許多漂亮的東西。本課堂會把學生帶到一系列的練習中，協助他們運用安娜與艾莎的優秀滑冰技巧，製作適用於自己個人作品的圖像！
            Sequencing in the Maze:
              name: 迷宮中的陣列（Sequence）
              description_student: 在本課堂中，你會學習怎樣編寫自己的程式！
              description_teacher: |-
                在這組謎題中，首先會向學生簡介（或重溫，視你的班級經驗而定） Code.org 的線上工作區。我們有各種影片指出工作區的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕。這些影片也會說明怎樣拖曳 Blockly 積木、刪除 Blockly 積木與連接 Blockly 積木。之後，學生會在迷宮裡練習_序列_與_除錯_技巧。接著，學生會在學習_迴圈_的基本知識時看到一些新的謎題類型，例如收藏家、藝術家與收割者。\\r
                除錯是學習設計程式的重要元素。學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。
            Programming and Loops with the Artist:
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            End of Course Project:
              name: 課程結束專案
              description_student: 這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！
              description_teacher: |-
                接下來的 4 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是多個課堂或多個星期的體驗，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。\\r
                \\r
                在探索階段中，學生將會試玩預先製作完成的藝術家與 Sprite Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家、Sprite Lab 或其他他們熟悉的介面中製作自己的專案（這可能是專案中最長的階段）。最後，學生將能夠向同伴展示自己的成品。
            Conditionals in Minecraft:
              name: Minecraft 中的條件式
            About Me:
              description_student: 學生會使用 SpriteLab 製作互動海報，從而應用在網際網路上分享個人與私人資訊的知識。
              description_teacher: 學生會使用 SpriteLab 製作互動海報，從而應用在網際網路上分享個人與私人資訊的知識。\\r
            Aquatic Conditionals in Minecraft:
              name: Minecraft 水上巡航的條件式
            Access Ability:
              name: 以無障礙為目的設計程式
              description_student: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
              description_teacher: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
            Digital Sharing:
              name: 數位分享
            Simon Says:
              name: 老師說
              description_student: 玩一款遊戲，想想需要使用哪些命令才可獲得正確的結果。
              description_teacher: 在本課堂中，學生會玩一款遊戲，目的是讓他們思考一下，需要以甚麼方式提供命令，才可獲得正確的結果。這樣就可幫助他們更容易在往後的課堂中過渡到 Sprite Lab。
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Minecraft 中的條件式：水上巡航 '
              description_student: 你會在 Minecraft 的世界裡學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            Swimming Fish with Sprite Lab:
              name: Sprite Lab 中的游泳小魚
            Designing for Accessibility:
              name: 以無障礙為目的設計程式
            Songwriting:
              name: 歌曲創作
          student_description: 首先使用演算法（algorithm）、迴圈（loop）、條件式（conditional）和事件（event）開始編寫程式，然後你將會學習函式（function）。在本課程的第 2 部分，你便會開始設計和製作一個總結專案，並可與你的好友和家人分享。
        express-2019:
          title: 速學課程（2019）
          description_short: 電腦科學簡介：結合我們最優秀的國小課程內容，供年齡較大的學生學習。
          description_audience: 年齡 9-18
          lesson_groups:
            csf_warmup:
              display_name: 熱身
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            csf_functions:
              display_name: 函式
            csf_variables:
              display_name: 變數
            csf_for_loops:
              display_name: 計次迴圈（For Loops）
            csf_sprites:
              display_name: 角色
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 演算法：方格紙程式設計
            Programming in Maze:
              name: 與憤怒鳥一起編程
            Relay Programming:
              name: 接力編程
            Debugging in Maze:
              name: 與鼠奎特一起除錯
            Programming in Collector:
              name: 和 Laurel 一起收集寶石
            Programming in Artist:
              name: 用代碼創作藝術
            'Loops: Getting Loopy':
              name: 迴圈：學習迴圈
            Loops with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
            Loops in Artist:
              name: 使用迴圈（Loop）繪畫貼紙藝術
            Copyright and Creativity:
              name: 版權與創意
            'Concept Practice with Minecraft ':
              name: 與 Minecraft 一起展望未來
            Nested Loops in Bee:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
            Nested Loops in Frozen:
              name: 和安娜與艾莎一同玩雪花
            While Loops in Farmer:
              name: 與農夫一起嘗試 while（當）迴圈
            Until Loops in Maze:
              name: 迷宮裡的 until（直到）迴圈
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Conditionals in Bee:
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
            Conditionals & Loops in Harvester:
              name: 使用條件式（Conditional）收割農作物
            'Functions: Songwriting':
              name: 函式：作曲
            Functions in Minecraft:
              name: Minecraft 中的函式
            Functions in Harvester:
              name: 在收割者遊戲中學習函式（Function）
            Functions in Artist:
              name: 在藝術家遊戲中使用函式（Function）
            Screen Out the Mean:
              name: 防止壞蛋騷擾
            Determine the Concept:
              name: 釐清概念
            'Events: The Big Event':
              name: 事件：大事件
            Build a Flappy Game:
              name: 製作像素鳥遊戲
            The Power of Words:
              name: 語言的力量
            Envelope Variables:
              name: 信封變數
            Variables as Constant in Artist:
              name: 在藝術家遊戲中學習變數
            Variables that Change in Bee:
              name: 在蜜蜂遊戲中變更變數
            Variables that Change in Artist:
              name: 在藝術家遊戲中變更變數
            For Loop Fun:
              name: 有趣的計次迴圈
            For Loops in Bee:
              name: 與蜜蜂一起嘗試 for（計數）迴圈
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
            Learning Sprites with Sprite Lab:
              name: Sprite Lab 中的游泳小魚
            Alien Dance Party with Sprite Lab:
              name: 外星人舞蹈派對
            Pet Giraffe with Sprite Lab:
              name: Sprite Lab 中的寵物長頸鹿
            Explore Project Ideas:
              name: 找些專案靈感
            The Design Process:
              name: 設計流程
            Build Your Project:
              name: 建立你的專案
            Revise Your Project:
              name: 修改你的專案
            Present Your Project:
              name: 說明你的專案
            Binary Bracelets:
              name: 二進制手環
            'Unplugged: Binary':
              name: 不插電活動 - 二進制
            Artist Binary:
              name: 小藝術家 - 二進制（Binary）
            Internet:
              name: 網際網路 Internet
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
            Editing Behaviors:
              name: Sprite Lab 的行為（Behavior）
            Virtual Pet with Sprite Lab:
              name: 在 Sprite Lab 中製作虛擬寵物
            Build A Project:
              name: 課程結束專案
            Dance Party:
              name: 舞蹈派對
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Minecraft 中的條件式：水上巡航 '
        csd1-2019:
          title: CSD 單元 1 - 問題解決與運算 ('19-'20)
          description_short: 瞭解人類與何與電腦一起解決問題。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csd1_1:
              display_name: 第 1 章：解決問題的流程
            csd1_2:
              display_name: 第 2 章：計算機與問題解決能力
          lessons:
            CS Discoveries Pre-survey:
              name: 電腦科學探索課前問卷調查
            Intro to Problem Solving:
              name: 問題解決能力的介紹
              description_student: 班級學生會分組工作，目標是設計強力的鋁箔船，可盡量放置最多硬幣。在課堂結束時，小組會反思自己在活動中的體驗，並思考在課程的餘下部分中，將會選擇運用哪些解決問題類型。
              description_teacher: 在本課堂中，學生會分組設計鋁箔船，目標是盡量支撐最多硬幣。各小組會有 2 個回合製作鋁箔船，第 2 回合的目標是盡量比第 1 回合載得更多硬幣。這項活動的結構可預示問題解決流程的不同步驟，而在接下來的課堂中，學生會更詳細學習這些流程。在本課堂結束時，學生會反思自己在活動中的經驗，並思考在課程的餘下部分中，將會選擇運用哪些解決問題類型。
            The Problem Solving Process:
              name: 問題解決流程
              description_student: 本課堂會介紹正式的問題解決流程。班級學生會在學年裡運用這種流程：定義 - 準備 - 嘗試 - 反思。學生會把這些步驟，與前一個課堂的鋁箔船問題聯繫起來，然後思考他們擅長解決的一個問題，然後再思考他們希望解決得更好的一個問題。在課堂結束時，班級同學會收集普遍實用的策略清單，用於流程中的每個步驟，然後加到海報上，從而在整個單元與學年中使用。
              description_teacher: 本課堂會介紹正式的問題解決流程。學生會在學年裡運用這種流程：定義 - 準備 - 嘗試 - 反思。課堂首先會讓學生一起思考日常生活中遇到的所有類型問題。接著，學生便會學習問題解決流程的 4 個步驟，並合作把這 4 個抽象的步驟，聯繫到實際解決問題的經驗中。首先，學生會把這些步驟，與前一個課堂的鋁箔船問題聯繫起來，然後思考他們擅長解決的一個問題，然後再思考他們希望解決得更好的一個問題。在課堂結束時，班級同學會收集普遍實用的策略清單，用於流程中的每個步驟，然後加到海報上，從而在整個單元與學年中使用。
            Exploring Problem Solving:
              name: 問題解決探索
              description_student: 在本課堂中，班級學生會把問題解決流程應用至 3 個不同問題：字詞搜尋、為生日派對編排座位，以及計畫旅行。各種問題變得越來越複雜，而且定義差劣，從而強調問題解決流程為甚麼在解決這些問題時特別有用。
              description_teacher: |-
                在本課堂中，學生會把問題解決流程應用至 3 個不同問題中，以加深瞭解每個步驟的價值。他們會完成一次猜詞遊戲、為生日派對編排座位，以及計畫旅行。各種問題變得越來越複雜，而且定義差劣，從而強調問題解決流程為甚麼在解決這些問題時特別有用。課堂結束時，學生會反思自己在問題解決流程方面的經驗。他們會確認加入每個步驟的理由，並會一起思考各種問題或策略，從而協助自己更能定義開放式問題，因為通常這就是最關鍵的步驟。\\r
                \\r
                本課堂大概需要 2 個或更多課節完成。最初 2 個問題也許能放進 1 個課節，但第 3 個問題則需要放在第 2 天。
            What is a Computer?:
              name: 電腦是什麼？
              description_student: 在本課堂中，班級學生會瞭解電腦的初步定義。一起思考電腦可能的各種定義後，學生會分組在海報紙上，把圖片分類為「是電腦」或「不是電腦」，並說明他們在選擇一些最困難的分類時有甚麼原因。然後，教師會介紹電腦的定義，並讓各小組依據新的定義來修改海報內容。
              description_teacher: 在本課堂中，學生會瞭解電腦的初步定義。開始課堂時，學生會一起思考電腦可能的各種定義，然後把思考結果放在黑板上。接著，學生會分組在海報紙上，把圖片分類為「是電腦」或「不是電腦」，並在課室張貼海報紙，然後簡短說明他們在選擇一些最困難的分類時有甚麼原因。之後，教師會介紹電腦的定義，並讓學生依據新的定義來修改海報內容。\\r
            Input and Output:
              name: 輸入與輸出
              description_student: 在本課堂中，班級學生會思考一些運算裝置，並確定裝置使用哪些類型的輸入與輸出。小組會收到一台運算裝置，學生依據教師提供的輸入與輸出定義，列出他們的裝置上有哪些輸入與輸出工具。課堂結束時，學生會檢視在運算裝置上經常會進行的活動，並在圖表上選擇用於該活動的輸入與輸出工具。
              description_teacher: 在本課堂中，學生會思考一些運算裝置，並確定裝置使用哪些類型的輸入與輸出。小組會收到一台運算裝置，並依據教師提供的輸入與輸出定義，列出他們的裝置上有哪些輸入與輸出工具。在活動初期，教師會提示學生專注於更明顯的實體輸入與輸出（例如鍵盤做為輸入，或螢幕做為輸出），但是之後的討論應帶領學生考慮較不明顯的範例（例如觸控螢幕是輸入，同時也是輸出；或是網際網路可同時做為輸入與輸出）。在整個課堂中，教師會在課室前方的 T 圖表中，記錄已確定的輸入和輸出。課堂結束時，學生會檢視在運算裝置上經常會進行的活動，並在圖表上選擇用於該活動的輸入與輸出工具。
            Processing:
              name: 處理
              description_student: 本課堂會更深入探討「處理」的概念，這個概念先前已包含在電腦的定義中。同學分為 2 人一組順序放置卡牌 - 這是處理資訊的一種形式。在結束時，班級學生會在解決資訊問題的背景下討論「處理」的意義。
              description_teacher: 學生會完成 2 項不插電卡牌排序活動，從而瞭解「處理」的意思，以及「處理」和解決問題間的關係。第 1 項活動只有很少限制，用於介紹處理的高階定義。下一項活動會施加更多限制，迫使學生開發一套演算法，從而每次都能成功處理卡牌。學生會反覆與同學一起開發、測試並分享自己的演算法。總結討論會讓學生反思在上述活動中使用的不同類型問題決方法，以及製作演算法解決問題的價值所在。
            Apps and Storage:
              name: 應用程式與儲存
              description_student: 本課堂會講解電腦在輸入與輸出方面的內容，並會以與學生相關的熟悉方式：應用程式來說明。班級學生會評估一些網頁應用程式，從而分析這些程式設計用於解決的特定問題、程式需要處理的輸入內容，以及程式會向使用者提供的輸出內容。課堂結束時，學生會觀察這些應用程式，教師也會帶領討論應用程式對社會的影響。
              description_teacher: 本課堂會檢閱電腦在輸入、輸出、儲存與處理方面內容，並會以與學生相關的熟悉方式：應用程式來說明。學生會分為 2 人一組，評估一些智慧手機應用程式，從而分析這些程式設計用於解決的特定問題、程式需要處理的輸入內容、程式把輸入處理為所需輸出的處理程序，以及程式希望儲存留待日後使用的資訊。班級課堂結束時，學生會展開討論，把課堂和學生更熟悉的應用程式互相聯繫。
            Project - Propose an App:
              name: 專案 - 提出應用程式建議
              description_student: 為了總結問題解決流程的學習內容，並總結電腦的輸入/輸出/儲存/處理模型，班級同學會提議設計相關應用程式，以解決現實世界的問題。這份專案會橫跨數天完成，最後會進行海報簡報，強調每款應用程式的功能特色。專案預期每 2 人一組完成，但也可 1 人獨自完成。
              description_teacher: 為了總結問題解決流程的學習內容，並總結電腦的輸入/輸出/儲存/處理模型，學生會提議設計相關應用程式，以解決現實世界的問題。這份專案會橫跨數天完成，最後學生會製作海報，強調將會向同學展示的應用程式有哪些功能特色。專案指南為學生提供循序漸進的指示，並協助他們整理自己的思緒。專案預期每 2 人一組完成，但也可 1 人獨自完成。
            Post-Project Test:
              name: 專案後測驗
        andrea-test:
          title: andrea-test
          description_audience: 6-12 受訓中輔導員
          description_short: 這裡用來測試我製作課程的能力
          description: 這段說明較長，我嘗試在製作一個課程…仍然在想概述與內容來自哪裡…
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            new stage:
              name: 新的階段
            module1:
              name: 模組1
            module2:
              name: 模組2
            andrea-g1:
              name: andrea-g1
            andrea-g2:
              name: andrea-g2
            andrea-g3:
              name: andrea-g3
            andrea-s1:
              name: andrea-s1
            andrea-s3:
              name: andrea-s3
            'null':
              name: 'null'
            andrea-stage1:
              name: andrea-stage1
            andrea-test-stage1:
              name: andrea-test-stage1
            andrea-test-stage2:
              name: andrea-test-stage2
            andrea-test-stage3:
              name: andrea-test-stage3
            Deeper Learning Overview:
              name: 深度學習概覽
            andrea-test-stage4:
              name: andrea-test-stage4
            Part 1:
              name: 第一部分
            Part 2:
              name: 第二部分
            part 3:
              name: 第三部分
          name: andrea-test
          student_description: 這段說明較長，我嘗試在製作一個課程…仍然在想概述與內容來自哪裡…
        dance-extras-gallery:
          title: 繼續跳舞
          description_short: 跳出一小時玩程式活動 - 參加這項 Code.org 舞蹈派對教程的跟進活動。
          description: 在一小時之後嘗試更多奇思妙想。
          lessons:
            Dance Party - Go Further:
              name: 舞蹈派對 - 深入學習
          student_description: 在一小時之後嘗試更多奇思妙想。
        coursec-2019:
          title: 課程 C（2019）
          description: 以序列、迴圈與事件製作程式。將你的姓名首字母轉換成二進制碼，瞭解不同的問題解決技巧，以及學習怎樣應付網路欺凌。在課程結束時，你可創造出自己的遊戲或故事，然後向別人分享！
          description_short: 學習基本的計算機科學，創造屬於你自己的藝術、故事、遊戲作品。
          description_audience: 年齡 6-10
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_binary:
              display_name: 二進制（Binary）
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
            csf_data:
              display_name: 數據
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            Programming in Maze:
              name: 與憤怒鳥一起編程
              description_student: 與憤怒鳥一起學習序列與演算法。
              description_teacher: 學生會使用憤怒鳥遊戲中的角色開發序列演算法，讓憤怒鳥能夠從迷宮的一側移動到另一側的豬那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓憤怒鳥向前、向左或是向右移動。
            Debugging in Maze:
              name: 在迷宮中除錯
              description_student: 在謎題中尋找問題，並練習你的除錯技巧。
              description_teacher: 除錯是學習設計程式的重要元素。在本課堂中，學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。
            'Real-life Algorithms: Paper Planes':
              name: 生活中的演算法 - 紙飛機
            Programming in Collector:
              name: 和 Laurel 一起收集寶石
              description_student: 編寫演算法，幫助探險家 Laurel 收集大量寶石！
              description_teacher: 在這組謎題中，學生會繼續增加對演算法和除錯的瞭解。學生會遇到新角色：探除家 Laurel，並製作序列演算法，讓 Laurel 能夠在道路上行走時收集寶藏。
            Programming in Artist:
              name: 用代碼創作藝術
              description_student: 為藝術家設計程式，製作漂亮的圖像。
              description_teacher: 在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。
            'Loops: Getting Loopy':
              name: 迴圈：學習迴圈
            Loops with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
              description_student: 使用迴圈（loop），幫助 BB-8 完成各個迷宮！
              description_teacher: 這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生用迴圈協助 BB-8 更有效率的遊歷迷宮。
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Loops in Harvester:
              name: 使用迴圈（Loop）收割農作物
              description_student: 我們來使用迴圈（loop），幫助收割者收割蔬菜！
              description_teacher: 在前一個舞台中，學生曾經使用（loop）畫出優美的圖畫。現在，他們會開始讓新的動作迴圈，協助收割者收集許多大簇蔬菜！\\r
            'Events: The Big Event':
              name: 大事件
              description_student: 玩一款有趣的遊戲，學習使用事件。
              description_teacher: 學生很快會知道，事件是很好的方式，在預先編寫好的演算法中增加靈活性。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。事件可讓你的程式更有趣，而且有更多互動。
            Build a Flappy Game:
              name: 製作像素鳥遊戲
              description_student: 以你喜歡的方式隨意製作像素鳥遊戲，並盡情與朋友分享！
              description_teacher: 在這個特別舞台中，學生會開始製作自己的第一款像素鳥遊戲。他們會使用事件處理器偵測滑鼠點擊與物件碰撞。在關卡結束時，學生將能夠自訂遊戲，變更視覺元素或規則。
            Screen Out the Mean:
              name: 防止壞蛋騷擾
              description_student: 在本課堂中，你會學習：假如在線上有些事情讓你感到憤怒、傷心或害怕，你應該怎麼辦。
              description_teacher: |-
                本課堂會協助孩童瞭解，若線上某些事情令他們憤怒、傷心或害怕，就必須告訴可以信賴的成人。 \\r
                \\r
                學生會明白在上線時，其他人有時候可能會做出霸凌者的行為。他們會探索甚麼是網路霸凌，以及在遇到這些情況時可以做些甚麼。觀看一個卑劣的線上行為情景後，學生會討論甚麼是網路霸凌、這種行為會讓別人有甚麼感覺，以及應該怎樣應對。最後，學生會運用自己的知識，在日誌上製作簡單的網路霸凌提示表。\\r
            Events in Play Lab:
              name: 使用事件（Event）玩追逐遊戲
              description_student: 是時候發揮創意，在 Play Lab 中製作遊戲！
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            Looking Ahead:
              name: 與 Minecraft 一起展望未來
              description_student: 躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            Binary Bracelets:
              name: 二進制手環
              description_student: 製作屬於你自己的二進制手環，並學習電腦怎樣記得資訊！
              description_teacher: 二進制在電腦世界中極為重要。現代的大多數電腦都會以二進制形式儲存所有類型的資訊。本課堂會協助展示：怎樣能夠把現實世界的東西，轉換成一系列的開/關。
            Create a Design with Loops:
              name: 用迴圈來創作
            'End of Course Project: Create a Play Lab Game':
              name: 課程結束專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
              description_teacher: 本總結課堂會引導學生重溫設計、開發與展示 Play Lab 專案的流程！為了確保流程順暢，我們已提供循序漸進的結構，方面學生按照結構工作 - 從紙張上計畫到在我們的網站上編寫程式。此外，我們也提供多種構思，協助教師完成最終展示！
            'Programming: My Robotic Friends':
              name: 我的小機器人朋友
              description_student: 在本課堂中，你會假設同學是機器人，然後為他們設計程式，建立杯子堆疊的模式。
              description_teacher: 學生會使用一組符號來代替程式碼，設計演算法指示「機器人」把杯子疊起成不同的模式。學生會輪流扮演機器人，且僅回應同伴定義的演算法。這個部分會教導學生符號和行動關的聯繫、演算法和程式間的分別，以及有用的除錯技巧。
            'Loops: My Loopy Robotic Friends':
              name: 我的愛迴圈小機器人朋友
              description_student: 在本課堂中，你會再次為同學設計程式，但會使用迴圈（loop），這樣，你便能夠解決更龐大、更複雜的問題。
              description_teacher: 學生會以最初的「我的機器人朋友」活動為基礎，處理更大型且更複雜的設計。為了幫助「機器人」設計程式，以完成這些更大型的設計，學生將需要找出指令裡有哪些重複模式可使用迴圈（loop）取代。
            Graphing Data:
              name: 資料繪圖
            Powerful Passwords:
              name: 強大的密碼
              description_student: 在本課堂中，你會瞭解密碼可怎樣保護你的資訊，以及怎樣才算是好的密碼。
            Sticker Art with Loops:
              name: 使用迴圈（Loop）繪畫貼紙藝術
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Picturing Data:
              name: 描繪資料
              description_student: 資料可用來幫助學生瞭解自己的世界，並解答有趣的問題。在本課堂中，學生會收集一個 Play Lab 專案的資料，並使用不同類型的圖表將資料視覺化。
              description_teacher: 資料可用來幫助學生瞭解自己的世界，並解答有趣的問題。在本課堂中，學生會收集一個 Play Lab 專案的資料，並使用不同類型的圖表將資料視覺化。
          student_description: 以序列、迴圈與事件製作程式。將你的姓名首字母轉換成二進制碼，瞭解不同的問題解決技巧，以及學習怎樣應付網路欺凌。在課程結束時，你可創造出自己的遊戲或故事，然後向別人分享！
        csp-mid-survey:
          title: CSP 學生年中問卷調查
          description_audience: CSP 學生
          description_short: CSP 學生年中問卷調查
          description: 歡迎來到 Code.org 電腦科學原理年中問卷調查。本問卷調查需要大約 15 分鐘完成。你的回覆將會保持私密與匿名 -- 你的老師可看見全班的匿名匯總結果。這些結果對你的老師與 Code.org 都非常重要，目的是維持和改善課程的品質。感謝你的寶貴時間與關注。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
          lessons:
            CSP Mid-year survey:
              name: CSP 年中問卷調查
          student_description: 歡迎來到 Code.org 電腦科學原理年中問卷調查。本問卷調查需要大約 15 分鐘完成。你的回覆將會保持私密與匿名 -- 你的老師可看見全班的匿名匯總結果。這些結果對你的老師與 Code.org 都非常重要，目的是維持和改善課程的品質。感謝你的寶貴時間與關注。
        gamelab:
          title: Game Lab
          description: 為教師提供的教程，用於在 Game Lab 中進行開發。這些教程會超出 CSD 中涵括的概念。
          lessons:
            Start and End Screens:
              name: 開始與結束畫面
            Start and End Screens2:
              name: 開始與結束畫面2
          student_description: 為教師提供的教程，用於在 Game Lab 中進行開發。這些教程會超出 CSD 中涵括的概念。
        coursea-2019:
          title: 課程 A（2019）
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          description_short: 為學齡前兒童設計的計算機科學指引。
          description_audience: 年齡：4-7
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
          lessons:
            Sequencing in Maze:
              name: 迷宮中的陣列（Sequence）
            'Programming: Happy Maps':
              name: 快樂地圖
              description_student: 編寫指令，讓 Flurb 走到水果那裡。
              description_teacher: 本不插電課堂會把各團隊集合一起完成一項簡單任務：讓「Flurb」走到水果那裡。學生會練習把指令轉換成提供的符號，從而編寫準確的指令。若程式碼中出現問題，學成便應一起識別錯誤和制定解決方案。
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
              description_teacher: 在這一系列的線上關卡中，學生將建立演算法、除錯、一般計算機理論的知識。登場的是「憤怒鳥」遊戲中的角色，學生將開發循序演算法，讓憤怒鳥不會撞牆或碰上炸藥。關卡的除錯也被混合到這個階段，以增加解決問題和批判性思維的練習。
            Programming in Harvester:
              name: 和農夫一起學程式
            Going Places Safely:
              name: 安全的遨遊網路世界
              description_student: 學習瀏覽網路的安全守則。
              description_teacher: 與 Common Sense 媒體合作，這課在讓學生學習到網站會要求提供私人訊息，並會討論如何負責的處理這類請求。學生也會對神奇的網路世界感到興奮，但他們必須遵守某些規則來維護自己的安全。
            'Loops: Happy Loops':
              name: 迴圈（Loops） - 快樂迴圈
              description_student: 使用迴圈（loop），幫助 Flurb 解決更棘手的問題。
              description_teacher: 這個活動會回到「快樂地圖」。這次，學生會使用程式碼，解決更大型且更長的謎題，讓他們觀察結構如何變得更實用，從而以更簡易的方式編寫更長的程式碼。
            Loops in Collector:
              name: 與 Laurel 一起學習迴圈
              description_student: 幫探險家 Laurel 收集地底的寶藏。
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            'Events: The Big Event':
              name: 小小大事件
              description_student: 教師按下巨型遙控器的按鈕後，學生便會移動和大叫。
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            Events in Play Lab:
              name: 讓事件活動起來
              description_student: 創作自己的遊戲或故事。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！
            Ocean Scene with Loops:
              name: 海洋場景與迴圈（Loop）
              description_student: 使用迴圈與模式完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            Learn to Drag and Drop:
              name: 學習滑鼠的拖放
              description_student: 以點擊與拖放的方式完成謎題。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            Loops in Ice Age:
              name: 和鼠奎特一起學迴圈（Loop）
              description_student: 使用迴圈，幫助鼠奎特更快完成任務。
              description_teacher: 這個舞台會以「快樂迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集橡樹果實。
            Programming in Ice Age:
              name: 和鼠奎特一起寫程式
              description_student: 編寫程式，幫助鼠奎特拿到橡樹果實。
              description_teacher: 學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。
            Programming with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起寫程式
              description_student: 協助 BB-8 收集廢金屬。
              description_teacher: 在本課堂中，學生會以更複雜的方式運用新的程式設計技巧，與 BB-8 一起完成更巧妙的關卡。
            Sequencing with Scrat:
              name: 和鼠奎特一起學序列
              description_student: 為鼠奎特設計程式，讓他能夠拿到橡樹果實。
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        courseb-2019:
          title: 課程 B（2019）
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          description_short: 為學前兒童準備的電腦科學介紹。類似課程 A，但採用更深入的概念。
          description_audience: 年齡 5-8
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_impacts:
              display_name: 運算的影響
            csf_events:
              display_name: 事件
          lessons:
            Move It, Move It:
              name: 移動它，移動它
              description_student: 為你的同學設計程式，讓同學小心翼翼從某處移動到另一處。
              description_teacher: 本課堂會讓學生在心理上準備好程式編寫練習，他們會在整個課程中遇到這些練習。學生會組成小隊，以實體活動為同學設計程式，讓同學從某個位置踏步到踏一個位置，直到到達終點。
            Sequencing with Scrat:
              name: 和鼠奎特一起學序列
            Your Digital Footprint:
              name: 你的數位足跡
              description_student: 瞭解自己的數位足跡，並學習怎樣在瀏覽網站時保持安全。
              description_teacher: 本課堂與 **常識教育（Common Sense Education）** 合作，協助學生瞭解瀏覽虛擬世界就像在現實世界中一樣，要隨時注意自己的安全。學生還會學習到，放在網路上的資訊都會留下數位足跡（digital footprint），至於痕跡的大小、利弊，就要靠他們自己來管理。
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Programming in Ice Age:
              name: 在冰河歷險紀裡編程
            Copyright and Creativity:
              name: 版權與創意
            Programming with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起寫程式
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Ice Age:
              name: 冰河歷險紀中的迴圈
            Loops in Collector:
              name: 與 Laurel 一起學習迴圈
              description_student: 為冒險家 Laurel 編寫程式，讓她能夠在開放的洞穴中收集寶藏。
              description_teacher: 在本課堂中，學生會繼續學習迴圈（loop）的概念。在這裡，冒險家 Laurel 會使用迴圈，在開放的洞穴中收集寶藏。這個時候會介紹新的「get treasure」（取得寶藏）積木，協助她完成旅程。
            Loops in Artist:
              name: 使用迴圈（Loop）在花園中繪畫
              description_student: 使用模式與迴圈完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個線上課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，學生會使用迴圈建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            'Events: The Big Event':
              name: 小小大事件
              description_student: 老師按下巨型遙控器的按鈕後，你便會移動或是大叫。
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            Events in Play Lab:
              name: 以事件（Event）展開皇家大戰
              description_student: 使用事件製作故事或互動遊戲。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            'Loops: Getting Loopy':
              name: 學習迴圈
              description_student: 在本課堂中，我們會使用重複迴圈舉行舞蹈派對！
              description_teacher: 我們開始設計更長和更有趣味的程式時，程式碼裡通常都會有大量重複內容。在本課堂中，學生會瞭解怎樣使用迴圈，以更簡易的方式傳達含大量重複內容的指令。學生會觀察舞蹈中的重複移動模式。
            The Right App:
              name: 合適的應用程式
              description_student: 製作你自己的智慧型手機應用程式草稿。
              description_teacher: 本課堂會讓學生明白，電腦可協助現實生活中的大眾。首先，學生會理解一些虛構的智慧型手機使用者，以協助他們找出「合適的應用程式」解決他們的需要。然後，學生會練習同理心與創意，製作自己的智慧型手機應用程式草稿，解決下一位使用者的需要。
            Loops in Harvester:
              name: 與農夫一起學迴圈（Loops）
              description_student: 使用迴圈，幫助收割者收集更多農作物！
              description_teacher: 這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集玉米。
            Programming in Maze:
              name: 與憤怒鳥一起編程
              description_student: 製作程式，協助憤怒鳥完成迷宮。
            Programming in Harvester:
              name: 和農夫一起學程式
              description_student: 幫助收割者在路上收集蔬菜。
              description_teacher: 學生會把所學到的程式設計概念，應用到收割者遊戲的環境中。現在不僅是讓角色到達終點 - 學生必須使用新的積木收集玉米。他們會繼續建立順序演算法的技巧，並開始運用除錯流程。
            Sequencing in Maze:
              name: 迷宮中的循序（Sequence）
              description_student: 協助憤怒鳥在道路上移動至搗蛋豬的位置。
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        pre-express-2019:
          title: 學前兒童的速學課程（2019）
          description_short: 為學前兒童提供的電腦科學簡介：結合我們的最佳幼稚園與一年級課程。
          description_audience: 年齡：4-8
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
          lessons:
            'Debugging: Unspotted Bugs':
              name: 除錯（Debug）- 沒被發現的蟲蟲
            'Persistence & Frustration: Stevie and the Big Project':
              name: 堅持與挫折：Stevie 和 Big Project
            Move It, Move It:
              name: 移動它，移動它
            Sequencing with Scrat:
              name: 和鼠奎特一起學序列
            Your Digital Footprint:
              name: 你的數位足跡
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Programming in Ice Age:
              name: 在冰河歷險紀裡編程
            Copyright and Creativity:
              name: 版權與創意
            Programming with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起寫程式
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Ice Age:
              name: 和鼠奎特一起學迴圈（Loop）
            Loops in Collector:
              name: 與 Laurel 一起學習迴圈
            Loops in Artist:
              name: 使用迴圈（Loop）在花園中繪畫
            'Events: The Big Event':
              name: 事件：大事件
            Events in Play Lab:
              name: Play Lab 中的事件（Event）
            Spelling Bee:
              name: 拼字蜜蜂
            Learn to Drag and Drop:
              name: 學習滑鼠的拖放
            Programming in Maze:
              name: 與憤怒鳥一起編程
            Programming in Harvester:
              name: 和農夫一起學程式
            Tell a Story in Play Lab:
              name: 讓事件活動起來
            Make a Game in Play Lab:
              name: 以事件（Event）展開皇家大戰
            Ocean Scene with Loops:
              name: 海洋場景與迴圈（Loop）
        removed19:
          title: 已從 2019 年 CSF 中移除
          lessons:
            'Debugging: Unspotted Bugs':
              name: 除錯（Debug）- 沒被發現的蟲蟲
            'Persistence & Frustration: Stevie and the Big Project':
              name: 堅持與挫折：Stevie 和 Big Project
            'Real-life Algorithms: Plant a Seed':
              name: 生活中的演算法 - 植物種植
        dani-test-script:
          lessons:
            new stage:
              name: 新的階段
        csd2-2019:
          title: CSD 單元 2 - Web 開發 ('19-'20)
          description: 在單元 2 中，你會學習如何在自己的網頁中製作並分享內容。決定你想與全世界分享哪些內容後，便會學習怎樣使用 HTML 與 CSS 構築自己的網頁。你也會練習各種寶貴的程式設計技巧，例如除錯與寫下註解。在單元結束時，你將可製作出屬於自己的個人網站，並可在網際網路上發佈。
          description_short: 在 Web Lab 中學習製作自己的網站。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章：網站內容和 HTML
            csd2_2:
              display_name: 第 2 章：樣式和 CSS
            cspSurvey:
              display_name: 問卷
          lessons:
            Exploring Websites:
              name: 探索不同網站
              description_student: 本課堂會說明網站可能需要為使用者和製作者達成之目的。班級同學會觀看一些美國最多人使用的網站，並討論其中每個網站對使用者的用處有多大，以及可怎樣同時為製作者服務。
              description_teacher: 每個網站都有製作之目的 - 某人製作網站與其他人使用的理由。在本課堂中，學生會開始思考一個網站可能會有的目的，不論是為使用者還是為製作者達成之目的。學生會觀看一些美國最多人使用的網站，並嘗試瞭解每個網站對使用者的用處有多大，以及可怎樣同時為製作者服務。
            'Websites for Expression ':
              name: 建立網站，表達內容
              description_student: 本課堂介紹以網站做為表達自我的途徑。班級同學首先會討論大眾會使用哪些不同方法，以表達並分享自己的興趣和構思，然後觀察一些範例網站，這些網站由前一個課程的學生完成。最後，所有同學都一起思考並分享可加入的主題與興趣清單，為單元餘下部分創造資源，以製作個人網站。
              description_teacher: 在本課堂中，學生會研究不同方法，以使用網站做為個人表達的途徑，並建立希望在個人網站中加入的主題與興趣清單。開始課堂時，學生會一起思考不同方法，以表達並分享自己的興趣和構思。然後，學生會觀察一些範例網站（這些網站由前一個電腦科學探索課程的學生完成），以找出表達構思的方法。最後，學生會一起思考並分享可能想在個人網站中加入的主題與興趣清單，讓他們可在單元進行中時參考，從而獲得靈感構思。
            Intro to HTML:
              name: HTML 簡介
              description_student: 本課堂介紹以 HTML 做為解決方案，解決如何把網站內容與結構傳達給電腦的問題。課堂開始時，首先會進行簡短的不插電活動，展示有效與網頁的結構通訊時的挑戰。班級同學會在 Web Lab 中觀看一個 HTML 網頁，並討論 HTML 標籤如何協助解決這個問題，然後再使用 HTML 編寫單元中的第一個網頁。
              description_teacher: 在本課堂中，學生會學習以 HTML 做為解決方案，解決如何把網站內容與結構傳達給電腦的問題。課堂開始時，首先會進行簡短的不插電活動，展示有效與網頁的結構通訊時的挑戰。學生會在 Web Lab 中觀看一個 HTML 範例網頁，並與同學討論 HTML 標籤如何協助解決這個問題。之後，學生便會編寫第一個 HTML 網頁。總結討論可協助鞏固學生在課堂中，對內容與結構比較的瞭解。
            Headings:
              name: 標題
              description_student: 本課堂會繼續介紹 HTML 標籤，這次會介紹 header。班級會練習使用 header 標籤建立頁面與區域標題，並學習不同的 header 元素在預設下如何顯示。然後，班級同學便會計畫如何在個人網頁中組織內容（這些網頁會在單元內逐步建立），並開始專案的首頁。
              description_teacher: 在本課堂中，學生會繼續使用 HTML 構築網頁上的文字，這次則會製作標題（heading）。學生會學習不同的標題元素在預設下如何顯示，並練習使用這些元素建立頁面與區域標題。然後，學生會開始決定如何在自己的網頁中組織內容。在最後一個關卡中，學生會開始製作專案，並會在整個單元中繼續製作。
            Digital Footprint:
              name: 數位足跡
              description_student: 本課堂會暫停建立個人網站，用來解說大眾選擇以數位分享的個人資訊。班級學生首先會討論有哪些類型的資訊可與他人分享，然後瀏覽一些範例社交媒體頁面，瞭解有哪些類型的個人資訊可能會有意或無意地分享出去。最後，學生會制定一套指引，並在資訊上線遵從這些指引。
              description_teacher: |-
                學生最近已花了一些時間，思考有哪些實際內容會放在個人網站上。現在本課堂會暫停製作橫跨整個單元的專案（發佈個人網站），以協助學生說明自己會選擇以數位形式分享哪些個人資訊，以及向哪些人分享。課堂也會強調，他們選擇以數位形式分享的很多資訊，很大程度在發佈後已無法受自己控制。\\r
                \\r
                學生首先會各自找出合適的受眾，意指學生向這些受眾分享定特的個人資訊時會感到自在。然後，他們會瀏覽一些社交媒體頁面，以判斷大眾會分享關於自己或別人的哪些類型資訊。最後學生會反思一下，認為在線上張貼資訊時應遵守哪些指引。\\r
                \\r
                本課堂的最終要點不是要嚇怕學生，而是以實驗的性質讓學生準確瞭解，他們在線上發佈資訊後無法控制資訊的程度。
            Lists:
              name: 清單
              description_student: 本課堂介紹有序與無序清單，以及相關的 \<ul>、\<ol> 與 \<li> HTML 標籤。班級裡的學生會練習使用標籤，然後回到個人網頁專案中加入新的 HTML 頁面，頁面內包含這些新標籤。
              description_teacher: 學生會學習 HTML 中的有序與無序清單，並完成數個關卡，他們會在關卡裡使用 \<ul>、\<ol> 與 \<li> 標籤。然後他們會返回自己的專案，並加入新的 HTML 頁面。在新頁面中，學生會編寫 HTML，以顯示食譜、「十大」名單，或是使用剛學到的標籤顯示任何其他內容。
            Intellectual Property and Images:
              name: 知慧財產權與圖像
              description_student: 本課堂會說明怎樣在網站內，使用其他人製作的媒體（例如圖像、影片或音樂），同時尊重相關媒體創作者的權利。學習創用 CC（Creative Commons）授權後，班級同學便會學習怎樣把圖像加入網頁上，以及在加入圖像時如何給予適當的姓名標示。
              description_teacher: |-
                班級首先會討論自己的個人意見，說明其他人應怎樣獲得自己的同意使用自己的作品，然後探索著作權（Copyright）之目的，以及其對創意內容創作者和使用者的作用。之後，學生便會開始一項活動，瞭解不同的 Creative Commons 授權，做為難以處理著作權問題的解決方案。

                最後，學生在一致瞭解不同 Creative Commons 授權的限制後，便會學習怎樣使用 \<img> 標籤，把影像加入自己的網頁中。
            Clean Code and Debugging:
              name: 乾淨代碼和偵錯調試
              description_student: 本課堂教導在設計 HTML 網頁時出現的常見問題。班級學生會在一系列越來越複雜的網頁（在 Code Studio 上提供）中修正錯誤，並學習註解（comment）、白色空間（whitespace）與縮排（indentation）在製作網頁時的重要性：這些是讓讀者更易閱讀網頁內容的工具。
              description_teacher: 學生會處理一些在設計 HTML 網頁時出現的常見問題。他們會在一系列越來越複雜的網頁中修正錯誤。在過程中，他們會學習註解（comment）、白色空間（whitespace）與縮排（indentation）在製作網頁時的重要性：這些是讓讀者更易閱讀網頁內容的工具。在課堂結束時，學生會制定策略清單，用於為網頁除錯，並確保內容易於閱讀與維護。
            Project - Multi-Page Websites:
              name: 專案 - 多頁式網站
              description_student: 本課堂會說明超連結（hyperlink），這項功能可讓網頁開發人員將不同的頁面連結至一個網站。班級同學會把所有先前建立的頁面連結至一個專案，並為每頁建立導覽列，然後再把整個網站發佈到 Web 上。
              description_teacher: |-
                學習怎樣互相連結網頁後，學生最終將能夠發佈一直以來製作的網站。在本課堂中，學生會把所有先前建立的頁面連結至一個專案、建立新頁面，並為不同頁面建立導覽列，然後再把整個網站發佈到 Web 上。\\r
                \\r
            Styling Text with CSS:
              name: 透過 CSS 修改文字樣式
              description_student: 本課堂會介紹以 CSS 做為修改頁面元素樣式的方法。班級學生會學習 CSS 規則集的基本語法，然後瞭解會影響 HTML 文字元素的屬性。最後，所有學生都會把文字樣式套用至自己的個人網站。
              description_teacher: |-
                本課堂會介紹以 CSS 做為修改頁面元素樣式的方法。學生會學習 CSS 規則集的基本語法，然後瞭解會影響 HTML 文字元素的屬性。他們會製作關於金氏世界紀錄保持者的 HTML 頁面，並在提供的頁面中加入自己的樣式。在最後一個關卡中，學生會把學到的文字元素樣式，套用至自己的個人網站。\\r
                \\r
            Styling Elements with CSS:
              name: 透過 CSS 修改元素樣式
              description_student: 本課堂會繼續介紹 CSS 樣式屬性，這次會更集中說明文字以外的元素。班級學生首先會研究並修改「世界各地的甜品」頁面上的新 CSS 樣式。然後，所有學生都會把這項知識套用至自己的個人網站中。
              description_teacher: 本課堂會繼續介紹 CSS 樣式屬性，這次會更集中說明文字以外的元素。學生在開始本課堂時，首先會瀏覽關於「世界各地的甜品」的網站。他們會研究並修改這個網站上的新 CSS 樣式，並在網站上加入自己的樣式。完成甜品頁面後，學生會套用新 CSS 屬性的知識，為自己網站做進一步的樣式修改。
            Sources and Search Engines:
              name: 來源和搜尋引擎
              description_student: 班級同學首先會完成網頁搜尋尋寶遊戲，然後再學習搜尋引擎的內部運作，並有機會搜尋怪異與不太可能存在的動物，從而加強分析技巧。
              description_teacher: 本課堂鼓勵學生以更富批判思考精神的方式，思考網頁搜尋如何運作，以及怎樣在線上找出相關且可靠的資訊。檢視討論相關影片（內容關於搜尋引擎如何運作）後，學生會搜尋一些不太可能存在的動物之資訊。他們需要分析找到的網站是否可靠，從而確認哪些動物實際上是惡作劇。
            RGB Colors and Classes:
              name: RGB 色彩與類別
              description_student: 本課堂會說明類別（Classe）與自訂色彩。班級同學首先會學習如何使用 RGB（紅、綠、藍）值指定自訂色彩，然後將這些色彩套用於使用 CSS 類別的全新「四季」網頁。使用類別後，學生便可把更多樣式加入「四季」網頁，然後運用這些技巧修改自己個人網站的樣式。
              description_teacher: 在本課堂中，學生首先會學習如何使用 RGB（紅、綠、藍）值指定自訂色彩，然後將這些色彩套用於使用 CSS 類別的全新「四季」網頁。CSS 類別可讓網頁開發人員處理希望修改樣式的元素群組，且樣式與相同類型的其他元素不同。使用類別後，學生便可把更多樣式加入「四季」網頁，然後運用這些技巧修改自己個人網站的樣式。
            Project - Personal Portfolio Website:
              name: 專案 - 個人作品網站
              description_student: 在單元的最後幾天，班級裡的同學會為自己的網站做最終修改、與同伴每兩人一組取得回饋意見、檢閱評估指標，並將最終修改放在網站上。單元結束時，所有學生都會分享自己的專案，及分享開發的方式。
              description_teacher: 學生已在單元中花上大量時間製作自己的個人網站。在最後兩天，學生會為自己的網站做最終修改。他們會與同伴每兩人一組取得回饋意見、將最終修改放在網站上、檢閱評估指標並反思工作流程。單元結束時，學生會分享自己的專案，及概述他們獲得最終設計的流程。
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
          student_description: 在單元 2 中，你會學習如何在自己的網頁中製作並分享內容。決定你想與全世界分享哪些內容後，便會學習怎樣使用 HTML 與 CSS 構築自己的網頁。你也會練習各種寶貴的程式設計技巧，例如除錯與寫下註解。在單元結束時，你將可製作出屬於自己的個人網站，並可在網際網路上發佈。
        csd3-2019:
          description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
          lesson_groups:
            csd3_1:
              display_name: 第 1 章：圖像和動畫
            csd3_2:
              display_name: 第 2 章：創建遊戲
            cspSurvey:
              display_name: 問卷
          lessons:
            Programming for Entertainment:
              name: 娛樂用途的程式設計
              description_student: 班級裡的學生需要考慮沉悶與個人表達等「問題」，並反思他們會怎樣在自己的生活中處理這些問題。然後，他們會瞭解整體的電腦科學與具體的程式設計，如何協助展示出特定的娛樂形式或做為自我表現的工具。
              description_teacher: 學生需要考慮沉悶與個人表達等「問題」，並反思他們會怎樣在自己的生活中處理這些問題。然後，學生會瞭解整體的電腦科學與具體的程式設計，如何協助展示出特定的娛樂形式或做為自我表現的工具。
            Plotting Shapes:
              name: 幾何繪圖
              description_student: 學生會接受各種挑戰：說明如何以圖形來繪圖，以及在 Game Lab 中使用一種工具，該工具可介紹與何處理這種問題。暖身活動可快速展示在說明位置時的挑戰，而活動中也會提供一些共享的參照點。在主要活動中，學生會學習一款 Game Lab 工具，讓他們以互動方式將圖形放在 Game Lab 的 400 x 400 方格內。然後學生輪流指示同伴如何使用這款工具繪畫隱藏圖像；活動已考慮在 Game Lab 中設計程式時學生會遇到的多種挑戰。學生可選擇建立並說明自己的圖像，然後再進行匯報討論。
              description_teacher: 學生會接受各種挑戰：說明如何以圖形來繪圖，以及在 Game Lab 中使用一種工具，該工具可介紹與何處理這種問題。暖身活動可快速展示在說明位置時的挑戰，而活動中也會提供一些共享的參照點。在主要活動中，學生會學習一款 Game Lab 工具，讓他們以互動方式將圖形放在 Game Lab 的 400 x 400 方格內。然後學生輪流指示同伴如何使用這款工具繪畫隱藏圖像；活動已考慮在 Game Lab 中設計程式時學生會遇到的多種挑戰。學生可選擇建立並說明自己的圖像，然後再進行匯報討論。
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
              description_student: 班級同學會學習 Game Lab 簡介。Game Lab 是本單元的程式設計環境，並會開始將其用於在畫面上為圖形定位。課堂會說明序列與除錯基礎，以及少量簡單命令。在課堂結束時，班級同學會依據前一個課堂中設計的圖像，建立圖像的線上版本。
              description_teacher: 同學會學習 Game Lab 簡介。Game Lab 是本單元的程式設計環境，並會開始將其用於在畫面上為圖形定位。他們會學習序列與除錯基礎，以及少量簡單命令。在課堂結束時，同學將能夠以程式設計方式製作圖像，外觀與前一個課堂中使用繪圖工具製作的圖像相類似。
            Shapes and Randomization:
              name: 圖形與隨機化
            Variables:
              name: 變數
              description_student: 本課堂會介紹變數，做為在程式中標記數字的方式，或儲存隨機產生的值。班級開始課堂時，首先會學習變數使用目的之基本說明，並練習使用新積木。然後，班級同學會使用變數儲存隨機數字，讓程式能夠多次使用同一個隨機數字。
              description_teacher: 在本課堂中，學生會學習如何在自己的程式中使用變數標記數字，或儲存隨機產生的值。學生會學習變數使用目的之基本說明。然後，學生會完成關卡進展， 以加深瞭解變數模型做為標記或命名數字的方式。學生會使用變數儲存隨機數字，從而看到變數會實際儲存數值，讓他們可在程式中多次使用同一個隨機數字。
            Sprites:
              name: 角色
              description_student: 為了製作更有趣與細緻的圖像，班級中的學生會學習角色（Sprite）物件。每個角色都可獲分配一個圖像用於顯示，而角色也可記錄自己的多個值 - 這種做法在隨後製作動畫時能夠用到。在課堂結束時，每位學生都會使用角色建立場景。
              description_teacher: 為了製作更有趣與細緻的圖像，學生會學習角色（Sprite）物件。每個角色都可獲分配一個圖像用於顯示，而角色也可記錄自己的多個值 - 這種做法在隨後製作動畫時能夠用到。
            The Draw Loop:
              name: draw（繪圖）迴圈
              description_student: 本課堂會介紹 draw（繪圖）迴圈，這是 Game Lab 中的其中一種核心程式設計範式（Paradigm）。班級學生會把 draw 迴圈與隨機數字結合，以產生由點組成的簡單動畫，然後再產生由角色組成的動畫。之後，所有學生都會使用所學到的知識，更新前一個課堂的角色場景。
              description_teacher: 在本課堂中，學生會學習介紹 draw（繪圖）迴圈，這是 Game Lab 中的其中一種核心程式設計範式（Paradigm）。課堂開始時，學生會觀看一些手翻動畫書，瞭解多個圖像放在不同的畫格，可產生動作效果。然後，學生會觀看影片，瞭解 Game Lab 中的 draw 迴圈如何協助在自己的程式中呈現相同的效果。學生會把 draw 迴圈與隨機數字結合，以產生由點組成的簡單動畫，然後再產生由角色組成的動畫。在課堂結束時，學生會使用所學到的知識，更新前一個課堂的角色場景。
            The Counter Pattern Unplugged:
              name: 計數器模式（不插電）
              description_student: 本不插電課堂說明變數的基本行為。班級學生會使用記事卡與字串模擬程式內的變數，以實作一些簡短程式。熟悉這種程式語法後，班級學生便會使用相同流程與角色屬性，追蹤角色在螢幕上的進展。
              description_teacher: 學生會在不插電活動中，瞭解變數的基本行為。學生會使用記事卡與字串模擬程式內的變數，以實作一些簡短程式。熟悉這種程式語法後，學生便會使用相同流程與角色屬性，追蹤角色在螢幕上的進展。
            Sprite Movement:
              name: 角色動作
              description_student: 班級學生會合併 Draw（繪圖）迴圈與計數器模式，並編寫程式讓畫面上的角色移動，以及把其他角色屬性動畫化。
              description_teacher: 學生會合併 Draw（繪圖）迴圈與計數器模式，並編寫程式讓畫面上的角色移動，以及把其他角色屬性動畫化。
            Booleans Unplugged:
              name: 布林值（Boolean）（不插電）
              description_student: 本課堂介紹布林值（boolean）與邏輯，以及條件式（conditional）陳述句。班級課堂開始時，學生首先會玩一款簡單的「站起、坐下」遊戲。在遊戲中，布林值（true/false）陳述句用於描述個人屬性（頭髮或眼睛顏色、衣著類型等）。然後，班級同學將依據越來越複雜的布林值陳述句將物件分組，並觀察條件式可怎樣影響程式的流程。
              description_teacher: |-
                在本課堂中，學生會學習布林值（boolean）與邏輯，以及條件式（conditional）陳述句。班級課堂開始時，學生首先會玩一款簡單的「站起、坐下」遊戲。在遊戲中，布林值（true/false）陳述句用於描述個人屬性（頭髮或眼睛顏色、衣著類型等）。這樣，學生就可思考怎樣以二元問題（只有兩個答案），把可能有多個值（例如年齡）的屬性放進框架中。

                然後，學生將會收到一組物件，其物理性質相似但有所差異。學生會與同伴一起，依據越來越複雜的布林值陳述句把該等物件分組，其中包括帶 AND 與 OR 的複合布林值。

                最後，我們會揭曉以條件式做為決策工具，或使用布林值陳述句做為輸入，以影響程式流程。
            Conditionals:
              name: 條件判斷（Conditionals）
              description_student: 班級裡的學生首先會使用布林值，比較某個角色屬性目前的值和目標值，並以這種比較方式判斷角色何時達到畫面的某一點、放大至指定大小，或是以計數器模式達到某個值。學生在直接使用布林值調查值或角色屬性後，便會把條件式 if 陳述句加入編寫的程式碼中，以回應該等布林值的比較。
              description_teacher: 學生首先會使用布林值，比較某個角色屬性目前的值和目標值，並以這種比較方式判斷角色何時達到畫面的某一點、放大至指定大小，或是以計數器模式達到某個值。學生在直接使用布林值調查值或角色屬性後，便會把條件式 if 陳述句加入編寫的程式碼中，以回應該等布林值的比較。
            Keyboard Input:
              name: 鍵盤輸入
              description_student: 在前一個課堂介紹了布林值與 if 陳述句後，學生會學習名為 keyDown() 的新積木。這塊積木會返回一個布林值，並可用於條件式陳述句中，讓角色能夠在畫面上移動。在本課堂結束時，學生編寫的程式將能夠讓使用者以鍵盤輸入，控制畫面上的角色。
              description_teacher: 在前一個課堂介紹了布林值與 if 陳述句後，學生會學習名為「keyDown()」的新積木。這塊積木會返回一個布林值，並可用於條件式陳述句中，讓角色能夠在畫面上移動。在本課堂結束時，學生編寫的程式將能夠讓使用者以鍵盤輸入，控制畫面上的角色。
            Other Forms of Input:
              name: 其他輸入形式
              description_student: 班級裡的同學將繼續學習不同方式使用條件式陳述句擷取使用者輸入的內容。除了昨天學到的簡單 keyDown() 命令外，學生也會學習幾項其他鍵盤輸入命令，以及擷取滑鼠輸入的方式。
              description_teacher: 在本課堂中，學生將繼續學習不同方式使用條件式陳述句擷取使用者輸入的內容。除了昨天學到的簡單「keyDown()」命令外，學生也會學習幾項其他鍵盤輸入命令，以及擷取滑鼠輸入的方式。
            Project - Interactive Card:
              name: 專案 - 互動式卡片
              description_student: 在第 1 章的本累積專案中，班級同學會計畫並開發互動賀卡，他們會使用至今學到的全部程式設計技巧。
              description_teacher: 在第 1 章的本累積專案中，學生會計畫並開發互動賀卡，他們會使用至今學到的全部程式設計技巧。
            Velocity:
              name: 速度
              description_student: 在簡短回顧計數器模式如何用於移動角色後，班級同學便會學習屬性，從而直接設定移動速度與旋轉速度。學生以不同方式使用新屬性，就能夠熟習所需技巧，製作出基本的橫向捲軸遊戲。
              description_teacher: 簡短回顧在先前的課堂中如何使用計數器模式移動角色後，學生便會學習屬性，從而直接設定移動速度與旋轉速度。學生以不同方式使用新屬性，就能夠熟習所需技巧，製作出基本的橫向捲軸遊戲。
            Collision Detection:
              name: 碰撞檢測
              description_student: 班級中的學生會學習電腦上的碰撞偵測。學生會每 2 人一組，學習電腦可怎樣使用角色的位置與大小屬性和數學，偵測兩個角色是否互相接觸。然後，班級同學會使用 isTouching() 積木，建立角色碰撞時的不同效果，包括播放聲音。最後，學生會應用學到的新技巧，改良前一個課堂中開始製作的橫向捲軸遊戲。
              description_teacher: 學生會學習電腦上的碰撞偵測。學生會每 2 人一組，學習電腦可怎樣使用角色的位置與大小屬性和數學，偵測兩個角色是否互相接觸。然後，班級同學會使用「isTouching()」積木，建立角色碰撞時的不同效果，包括播放聲音。最後，學生會應用學到的新技巧，改良前一個課堂中開始製作的橫向捲軸遊戲。
            Complex Sprite Movement:
              name: 複合角色動作
              description_student: 班級會學習合併角色的速度屬性和計數器模式，以製作更複雜的角色移動，例如模擬重力、讓角色跳躍，以及讓角色左右漂浮。在最後的關卡中，學生會合併這些動作，讓單一個角色移動並控制該角色，然後製作簡單遊戲，遊戲角色需要四處漂浮收集金幣。
              description_teacher: 學生會學習合併角色的速度屬性和計數器模式，以製作更複雜的角色移動。具體而言，學生會學習如何模擬重力、讓角色跳躍，以及讓角色左右漂浮。在 Code Studio 進展的最後關卡中，學生會合併這些動作，讓單一個角色移動並控制該角色，然後製作簡單遊戲，遊戲角色需要四處漂浮收集金幣。課堂鼓勵學生在最後關卡中加入屬於自己的內容。
            Collisions:
              name: 碰撞
              description_student: 班級同學會為角色設計程式，從而以全新方式互動。在簡短回顧先前如何使用 isTouching 積木後，學生便會一起思考其他方法讓兩個角色互動。然後學生會使用 isTouching，讓一個角色在畫面中推動另一個角色，之後再練習 4 種碰撞積木（collide、displace、bounce 與 bounceOff）。
              description_teacher: 學生會為角色設計程式，從而以全新方式互動。在簡短回顧先前如何使用「isTouching」積木後，學生便會一起思考其他方法讓兩個角色互動。然後學生會使用「isTouching」，讓一個角色在畫面中推動另一個角色，之後再練習 4 種碰撞積木（「collide」、「displace」、「bounce」與「bounceOff」）。
            Functions:
              name: 函式
              description_student: 本課堂會說明以函式 function 做為方式，以組織程式碼、讓程式碼更易讀懂，並移除重複的程式碼積木。班級裡的學生會學到，更高級別或更抽象的步驟，可讓我們更容易瞭解及思考各步驟，然後學生便會開始在 Game Lab 中建立函式。在課堂結束時，學生會運用這些技巧，組織橫向捲軸遊戲的最終版本，以及再加入其他功能。
              description_teacher: 學生會學習如何建立函式，以組織程式碼、讓程式碼更易讀懂，並移除重複的程式碼積木。不插電暖身活動用於探討不同細緻級別的移動可以有所用處，視當時情況而定。學生將會學到，更高級別或更抽象的步驟，可讓我們更容易瞭解及思考各步驟，然後學生便會開始學習在 Game Lab 中建立函式。他們會使用函式，從 draw 迴圈中移除冗長的程式碼積木，並以單一條函式取代重複的程式碼。在課堂結束時，學生會運用這些技巧，組織橫向捲軸遊戲的最終版本，以及再加入其他功能。
            The Game Design Process:
              name: 遊戲設計流程
              description_student: 本課堂會介紹相關流程，班級裡的學生將會在單元的餘下部分，使用這個流程設計遊戲。學生會在不同的關卡中瞭解這項流程。做為本課堂的一部分，班級同學也會學習在 Game Lab 中使用多畫格的動畫。在課堂結束時，他們將有機會改良遊戲，使之成為自己的作品。
              description_teacher: 本課堂會向學生介紹相關流程，他們將會在單元的餘下部分，使用這個流程設計遊戲。這項流程會以一個專案指南為中心，指南中會要求學生定義其角色、變數與函式，然後才開始為遊戲設計程式。在本課堂中，學生首先會在 Game Lab 中玩一款遊戲，遊戲期間程式碼會被隱藏。學生會展開討論，指出他們認為需使用哪些角色、變數與函式製作這款遊戲。學生會收到完整的專案指南，裡面會說明實作遊戲的一種方式。然後，學生會在不同的關卡中瞭解這項流程。做為本課堂的一部分，學生也會簡短地學習在 Game Lab 中使用多畫格的動畫。在課堂結束時，學生將有機會改良遊戲，使之成為自己的作品。
            Using the Game Design Process:
              name: 使用遊戲設計流程
              description_student: 在這個分為多天進行的課堂中，班級學生會使用單元 1 的問題解決流程，製作平台跳躍遊戲。觀察範例遊戲後，同學便會定義自己的遊戲看起來會怎樣，並使用結構化流程製作遊戲。最後，班級會反思可怎樣改良遊戲，並實作這些變更。
              description_teacher: 在這個分為多天進行的課堂中，學生會使用單元 1 的問題解決流程，製作平台跳躍遊戲。他們首先會觀察一款平台跳躍範例遊戲，然後定義自己的遊戲看起來會怎樣。接著，學生便會使用結構化流程，規畫實作遊戲時需要的背景、變數、角色和函式。為遊戲編寫程式碼後，學生會反思可怎樣改良遊戲，並實作這些變更。
            Project - Design a Game:
              name: 專案 - 設計一個遊戲
              description_student: 班級學生會使用上兩個課堂的專案指南，計畫並製作原創遊戲。同學會分為兩人一組，然後規畫、開發遊戲，並為遊戲提供回饋意見。納入同伴的回饋後，同學便會分發完成的遊戲。
              description_teacher: 學生會計畫並製作自己的遊戲，這時候他們會使用上兩個課堂的專案指南引導製作專案。學生會分為兩人一組，首先決定希望製作的遊戲類型，並以一些範例遊戲做為創作靈感。然後，他們會完成空白的專案指南，說明遊戲的行為，並瞭解需要建立的變數、角色與函式。在 Code Studio 中，會有一些關卡提示學生可使用哪項一般序列實作自己的計畫。在流程的途中，學生會分享自己的專案作品供同儕審查，並在完成遊戲時納入其他同學的回饋意見。在課堂結束時，學生會向同學分享完成的遊戲。此專案會覆延伸至數個課節，且可能很容易便會分為 3-5 個課節。
            CS Discoveries End of Semester Survey:
              name: 電腦科學探索學期結束問卷調查
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
          student_description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
        csd4-2019:
          title: CSD 單元 4 - 設計流程 ('19-'20)
          description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
          description_short: 學習如何設計程式，以符合使用者的需要。
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：用戶為中心的設計
            csd4_2:
              display_name: 第 2 章︰ 應用程式原型
            csd5_2:
              display_name: 第 2 章：解決數據問題
            cspSurvey:
              display_name: 問卷
          lessons:
            Analysis of Design:
              name: 設計分析
              description_student: 班級會瞭解多種不同的茶壺設計，以思考怎樣做出設計選擇，以及為甚麼做出這些選擇。班級同學會使用茶壺做為範例，瞭解使用者、使用者需要，以及他們使用的物件設計之間的關係。
              description_teacher: 單元會集中把問題解決內容分組，並為其他使用者開發產品。在單元開始時，學生首先會研究不同茶壺的設計。然後學生會分析每款茶壺，嘗試找出特定使用者的需要可能怎樣在其設計中反映出來。學生思考這些設計選擇，並嘗試把每款茶壺與一位潛在使用者配對後，便可以開始觀察：以使用者為本的方式設計產品（包括實際與數位數產），如何能讓產品更實用和易用。活動結束時，會請學生提議對其中一個茶壺做一些變更，讓茶壺更實用或更易用。
            Understanding Your User:
              name: 瞭解您的使用者
              description_student: 班級學生會以使用者設定檔，瞭解不同的使用者如何可能對各種產品做出反應。每位學生都會扮演不同人物，從而以其他人的角度體驗各種設計。
              description_teacher: 設計師需要瞭解使用者的需要，才可製作出實用的產品。本課堂鼓勵學生思考怎樣為其他人設計產品，方法是以使用者設定檔扮演其他人，並以扮演的角色對一系列產品做出反應。每位學生都會獲分配一個使用者設定檔，用於說明該角色，然後學生便會以該角色選擇恰當的產品、以批判方式評論產品設計，並建議設計上的改良。\\r
            User-Centered Design Micro Activity:
              name: 以使用者為中心的微型活動
              description_student: 班級學生會分為各小組，然後使用設計流程獲得智慧衣著的構思。此活動是單元中提供的第一個練習機會，首先會集合思考，然後確定使用者，最後提出設計建議。本單元提供不同機會，讓學生練習設計解決方案，以解決其他人的需要。
              description_teacher: 本課堂會引導學生完成簡化版本的設計流程，學生會在整個單元中瞭解這個流程。學生首先會一起思考並列出智慧衣著的潛在使用者清單。然後，所有學生一起把這些構想分組至較廣泛的類別，然後每組選擇一個使用者類別。小組會重複這個程序，一起思考他們的使用者有哪些需要或關注事項，接著把這些需要分為不同類別，並選擇集中工作的一個類別。最後，學生會設計一件智慧衣著，過程中會使用剛才想出來的特定需要與關注事項，從而引導他們做出決策。在班級課堂結束時，學生會快速分享自己的決策流程，並接收相關回饋意見，瞭解他們的產品有多能夠解決所選擇的使用者需要。
            User Interfaces:
              name: 使用者介面
              description_student: 看看紙上原型可怎樣在編寫程式碼前，用來測試軟體並取得回饋意見。為了協助開發人員實現他們的構思，班級同學會測試並提供應用程式的紙上原型。
              description_teacher: 完成迷你設計專案後，學生會學習設計的下一個階段 - 製作產品原型，嘗試解決使用者的需要。學生會分為各自的團隊，研究稱為「Txt Ur Grndkdz」的聊天應用程式紙上原型。使用這個紙上原型，學生便有機會瞭解，簡單的紙上原型可怎樣用來快速測試構思與假設，然後才真正使用電腦。「使用」提供的原型後，學生便會開始找出各種方式，以改善下一個迭代的版本。
            Feedback and Testing:
              name: 回饋與測試
              description_student: 使用者一直在測試一款應用程式，他們會有大量回饋意見提供給開發人員。班級同學需要透徹瞭解他們的回饋意見、找出共同的主題與需要，然後開始修改原型，讓原型更能符合使用者的需要。
              description_teacher: 在本課堂中，學生會使用前一個課堂中紙上原型應用程式的「使用者」回饋意見，從而改良紙上原型的使用者介面。課堂開始時，學生會反思：設計師需要把人類的需要，以科技轉化為對使用者介面（或「體驗」）做出的變更。然後，學生會依據前一個課堂中製作的應用程式，收集使用者的回饋意見與請求。學生會分組把回饋意見分類，並找出有哪些方式，讓回饋意見中表達的需要，能夠在變更應用程式介面後解決。之後，學生會分組實作其中一些變更，以滿足他們找到的其中一種需要。
            Identifying User Needs:
              name: 確定使用者需求
              description_student: 直到這個階段為止，班級學生研究的使用者都位於遠端地點，而來自使用者僅有的資訊，皆使用文字或角色扮演來代表。現在，學生會每 2 人一組，互相依賴對方做為潛在的使用者，並會互相訪問，以找出可開發應用程式解決的需要。
              description_teacher: 直到這個階段為止，學生集中設計程式的使用者對象，某程度上都位於遠端地點。不論以集體思考、個人設定檔或是文字回饋意見交流，學生與最終使用者間一直都沒有直接的聯繫。設計這種距離感，是為了協助學生在思考使用者需要時跳出自己的思考框框；但是為了以更直接的方式取得實際使用者的資訊，學生便需要依賴同學。在本課堂中，學生會以 2 人一組，成為對方的使用者（與設計師），讓所有學生都可直接訪問最終使用者，並向對方提出問題，從而取得更多資訊瞭解自己的設計。每組學生會互相訪問對方，並嘗試找出一項能使用應用程式解決的特定需要。
            Project - Paper Prototype:
              name: 專案 - 紙上原型
              description_student: 班級同學會使用前一個課堂的訪談資訊，想出一些應用程式構思，以解決他們的使用者之需要。要表達這些構思，以及測試構思的效用，每位同學將會建立並測試自己的紙上原型。
              description_teacher: 每位學生會依據自己在前一個課堂的同伴訪談，想出一個解決使用者問題的應用程式構思。然後，學生會依據應用程式構思來開始製作紙上原型，在獨立的記事卡上繪畫「螢幕」。專案指南會引導學生完成流程，包括建立並由使用者測試應用程式，從而瞭解自製使用者介面的假設是否準確。
            Designing Apps for Good:
              name: 設計良好的應用程式
              description_student: 開始應用程式設計專案時，班級裡的同學會分為各自的團隊，然後開始探索應用程式主題。一些對社會影響深遠的範例應用程式，會用來做為專案的啟發工具。
              description_teacher: 應用程式設計專案會持續到單元結束。開始專案時，學生首先會瞭解一些應用程式，這些程式由其他學生製作，設計用於對社會產生影響。然後，班級同學會複習問題解決流程中的定義、準備、嘗試和反思步驟，並制定對社會產生影響的應用程式之構思。最後，學生會組成專案團隊安排契約，指出團隊在開發應用程式時如何運作。
            Market Research:
              name: 市場研究
              description_student: 瞭解可能為相似使用者服務的現存應用程式，從而加深瞭解應用程式開發。每個小組會找出一些類似的應用程式，主題與自己製作的程式相同，並使用那些應用程式，協助重新定義學生所追求的應用程式構思。
              description_teacher: 在本課堂中，學生會研究一些應用程式，這些程式與他們打算製作的程式相似，從而更瞭解他們的使用者需要。學生會在團隊內工作、在線上搜尋其他應用程式，然後評估認為有趣的應用程式。在課堂結束時，每個團隊都會清楚瞭解自己想製作的應用程式類型，並進一步細分誰是他們的目標使用者。每個團隊會維護引用資訊清單，列出所有研究過的應用程式，並用於學生的期末專案展示中。
            Paper Prototypes:
              name: 紙上原型
              description_student: 紙上原型可讓開發人員快速測試自己的構思，然後再投放大量時間編寫程式。在本課堂中，各團隊會瞭解在 App Lab 中製作的一些範例應用程式，並使用那些應用程式中獲得的資訊，協助製作自己的應用程式紙上原型。
              description_teacher: 開始設計應用程式前，我們需要幫助學生仔細瞭解自己的期望。因為學生最終會在 App Lab 中製作這些應用程式的原型，若他們的構思和 App Lab 中容易製作原型的應用程式類型相近，就能夠有更充足的準備。團隊在開始這項研究時，首先會觀察一些範例應用程式，這些程式用於展示可使用 App Lab 製作的應用程式。然後，團隊可選擇 1 款（或更多）應用程式，做為自己的應用程式之基礎，之後會有一些時間討論自己的應用程式有哪些基本功能，並使用 3 英吋 x 5 英吋的索引卡開發紙上原型。\\r
            Prototype Testing:
              name: 原型測試
              description_student: 在本課堂中，團隊會與其他同學測試自己的紙上原型。1 位學生扮演電腦、1 位學生說出內容，餘下的學生則會觀察。此時團隊會立即就自己的應用程式獲得回饋意見，為下一個版本的應用程式原型提供實用資訊。
              description_teacher: 開發紙上原型的首要目的是，這樣做可快速測試和迭代，然後才開始編寫程式碼。本課堂的重點在於，讓團隊有機會先測試自己的原型，然後再使用 App Lab。團隊會制定一套計畫，從而和使用者一起測試，之後與班級裡（也可能是班級外）的數個其他同學執行原型測試。為了讓使用者測試原型，學生必須在測試中分配角色（「解說員」、「電腦」與「觀察者」），並準備一些問題，讓使用者在測試結束時回答。
            Digital Design:
              name: 數位設計
              description_student: 在開發、測試與收集紙上原型的回饋意見後，團隊便會移至 App Lab，建立應用程式的下一個迭代。每個團隊成員都會使用拖放設計模式，為自己團隊的應用程式製作至少 1 頁的內容，以回應在前一個回合測試時收到的回饋意見。
              description_teacher: 小組在協作開發應用程式的紙上原型後，便會以分治的方式，依據紙上原型來開始製作互動式數位版本。每位學生會各自使用 App Lab 的拖放設計模式，完成漸進式的技能訓練關卡，以學習怎樣製作紙上原型的數位版本。之後，每個小組成員都會在 App Lab 上，為自己的應用程式製作至少 1 頁內容，並在之後合併為單一個應用程式。
            Linking Screens:
              name: 連結不同畫面
              description_student: 團隊會以前一個課堂中設計的不同畫面做為基礎，合併各畫面並加入單一個應用程式中。然後，學生可加入一些簡單的程式碼，使點擊按鈕後進入適當畫面。
              description_teacher: 在本課堂中，團隊會把前一個課堂設計的各個畫面，合併為單一個應用程式，並使用程式碼互相連結起來。學生會繼續製作前一個課堂中開始製作的模型應用程式，從而學習基本的事件驅動程式設計。除了昨天學生設計的螢幕畫面外，學生也會學習怎樣製作額外的畫面，甚至匯入其他人製作的畫面。
            Testing the App:
              name: 測試應用程式
              description_student: 團隊會執行下一回合的使用者測試，這次會使用他們的互動式原型進行。在這個回合中取得的回饋意見，將會做為應用程式原型最終迭代版本的有用資訊。
              description_teacher: 在前一個課堂結束時，每個團隊都應製作了應用程式的最簡可行原型。本課堂之主要目的，是讓團隊與其他人實際測試應用程式，對象最好是應用程式預期的目標受眾，或是班級裡的其他團隊；至於團隊中的觀察者，則會在先前用於計畫階段的工作表上記錄結果。與測試紙上原型一樣，團隊首先會計畫用於特定情景，然後執行並觀察測試。
            Improving and Iterating:
              name: 改善和迭代
              description_student: 團隊會使用前一回合測試的回饋意見實作變更，以解決使用者的需要。每個團隊都會記錄希望加入的功能特色並安排優先順序，以及記錄需要解決的程式錯誤。
              description_teacher: 在這個階段中，團隊已開發了應用程式原型，並已經過多個迭代與多個回合的使用者測試。每位學生都有機會，依前一回合的使用者測試中取得的資訊與指導，計畫並實作團隊應用程式的改善內容。你可視可用時間與學生的興趣，執行恰當次數的測試與迭代週期。
            Project - App Presentation:
              name: 專案 - 應用程式簡報
              description_student: 每個團隊都會準備一次簡報，以「投售」自己開發的應用程式。這時正是時候分享各種拼搏與勝利經驗，以及計畫未來。
              description_teacher: 這個時候，團隊已研究一項個人與社會重要性的主題、開發並測試紙上原型與數位原型，並開始製作初始應用程式迭代，以結合新的功能特色，以及執行錯誤修正。現在正是時候，讓學生檢閱自己完成的東西，整合成連貫的簡報展示創作的進展。團隊會使用提供的簡報範本，準備展示應用程式開發流程，包括開始解決的問題、他們在測試後以甚麼方式加入回饋意見，以及對未來的計畫。
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
            Post-Project Test:
              name: 專案後測驗
          student_description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
        csd5-2019:
          description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
          description_short: 瞭解大家怎樣使用電腦解決資料問題。
          lesson_groups:
            csd5_1:
              display_name: 第 1 章：表達信息
            csd5_2:
              display_name: 第 2 章：解決數據問題
            cspSurvey:
              display_name: 問卷
          lessons:
            Representation Matters:
              name: 表示事項
              description_student: 第一個課堂會概述甚麼是資料，以及資料怎樣用來解決問題。各小組會使用一套資料集，為不同要求的人製作一系列的餐點建議。之後，各小組會比較他們的回答，並討論以不同的方式表示餐點資料，會怎樣影響學生解決不同問題的能力。
              description_teacher: 在資料單元的第一個課堂中，學生會大概瞭解甚麼是資料，以及資料怎樣用來解決問題。學生首先會展開簡短討論，從而普遍瞭解資料是甚麼。然後學生會分為各小組，並使用資料集為不同要求的人製作一系列的餐點建議。每個小組都可選擇以不同方式表示餐點（圖片、食譜、菜單、營養），從而讓不同方式有各自的優點。之後，各小組會比較他們的回答，並討論以不同的方式表示餐點資料，會怎樣影響學生解決不同問題的能力。
            Patterns and Representation:
              name: 模式和標記法
              description_student: 本課堂會更深入瞭解需要以甚麼來建立表示系統。各小組會建立相關系統，從而能夠僅使用一疊卡片，便可表示字母表中的任何字母；然後，學生會使用這些系統建立訊息，並與其他小組交換，從而確保系統像預期般正常運作。之後，班級同學會討論不同工作系統間的共通點，同時瞭解有許多可能的實用解決方案。
              description_teacher: 在本課堂中，學生會建立自己的系統，用於表示資訊。他們首先會一起想出目前用於表示「是-否」回覆的所有不同系統。然後，學生會分為小組工作建立系統，從而僅使用一疊卡片就可表示字母表中的任何字母。使用的卡片有 6 種不同的圖畫內容（6 種動物、6 種顏色等），而為了表示所有字母，學生將需要使用不同卡片的圖樣（pattern）表示每個字母。然後，學生會使用自己的系統建立訊息，並與其他小組交換，從而確保系統像預期般正常運作。在總結討論中，班級學生會檢閱不同系統的優點和缺點。他們會討論不同工作系統間的共通點，同時瞭解有許多可能的實用解決方案，而且重點是所有人都使用相同的任意系統互相通訊。
            ASCII and Binary Representation:
              name: ASCII 和 二進位表示法
              description_student: 本課堂會介紹一款為資訊編碼的正式二進制系統 ASCII，用於表示字母與其他字元。課堂開始時，教師會介紹：電腦必須使用「開」或「關」表示資訊。然後，班級同學會學習 ASCII 系統，以二進制符號表示文字，並練習使用這個系統，之後再使用 ASCII 為自己的訊息編碼。
              description_teacher: 在本課堂中，學生會學習第一款為資訊編碼的正式二進制系統 ASCII，用於表示字母與其他字元。課堂開始時，教師會介紹：電腦必須使用「開」或「關」表示資訊。然後，學生會學習 ASCII 系統，以二進制符號表示文字，並練習使用這個系統，之後再使用 ASCII 為自己的訊息編碼。課堂結束時會進行匯報對話，從而協助結合活動中的關鍵學習目標。
            Representing Images:
              name: 表示圖像
              description_student: 本課堂會繼續學習二進制表示系統，這次會使用圖像來說明。班級同學會學習把圖像分開為多個「正方形」或「像素」的概念，而這些像素可獨立開關，以構成整個圖像。使用圖像化小工具完成少許挑戰後，班級同學便會把圖像表示系統，和前一個課堂學到的文字表示系統互相聯繫起來。
              description_teacher: 在本課堂中，學生會學習電腦怎樣表示圖像。課堂開始時，學生會思考一項挑戰：把所有複雜的圖像轉化為二進制圖樣。學生首先會看到一系列圖像，瞭解這個轉換過程，接著學習把圖像分開為多個正方形或「像素」的概念，而這些像素可獨立開關，以構成整個圖像。然後，學生會使用圖像化小工具完成少許挑戰，從而繪畫出黑白圖像。謎題中會提出一些挑戰，讓學生以這種方式表示圖像。在總結課堂時，學生會把圖像表示系統，和前一個課堂學到的文字表示系統互相聯繫起來。
            Representing Numbers:
              name: 數字表示法
              description_student: 本課堂介紹二進制數字系統。班級同學會收到一組卡片，這些卡片表示二進制（base-2）數字系統中的位值。然後，學生要上下翻轉卡片，以「開啟」或「關閉」卡片，並觀察不同圖樣的結果。最後，圖樣會延伸為通用的 4 位元系統。
              description_teacher: 在本課堂中，學生會學習二進制數字系統。學生會收到一組卡片，這些卡片會以由點構成的組合，來表示二進制（base-2）數字系統中的位值。然後，學生要上下翻轉卡片，以「開啟」或「關閉」卡片，並觀察不同圖樣的結果。最後，學生需要把圖樣延伸為通用的 4 位元系統。
            Keeping Data Secret:
              name: 讓資料保密
              description_student: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
              description_teacher: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
            Combining Representations:
              name: 組合表示
              description_student: 本課堂會合併全部 3 種類型的二進制表示系統（ASCII 字元、二進制數字和圖像），讓學生能夠在某項記錄中，為更複雜的資訊類型編碼。學生會觀察一系列位元，然後需要把位元解碼。在這個過程中，班級學生會學到一個概念：瞭解二進制資訊，就需要同時瞭解使用中的系統，以及加密後的資訊是甚麼意思。
              description_teacher: 在本課堂中，學生會運用全部 3 種類型的二進制表示系統（ASCII 字元、二進制數字和圖像），從而為某項記錄解碼。學生會觀察一系列位元，然後需要把位元解碼。在這個過程中，學生會學到一個概念：為了明白二進制資訊，他們就必須同時瞭解使用中的系統，以及加密後的資訊是甚麼意思。之後，學生便會依據提供的結構，為表示寵物的記錄解碼。
            Project - Create a Representation:
              name: 專案 - 創建標記法
              description_student: 學生會使用這一章所學到的二進制表示系統來設計結構，以表示他們度過的美好一天。在確定相關記錄應擷取哪些資訊後，班級同學便會決定一張儲存多個位元資訊的打孔卡，會以怎樣的方式詮釋，以表示裡面的資訊。之後，所有同學都會使用學到的 ASCII、二進制數字與圖像格式，來表示他們美好的一天，並嘗試解碼同伴美好的一天過得怎樣。
              description_teacher: 在本課堂中，學生會使用這一章所學到的二進制表示系統來設計結構，以表示他們度過的美好一天。他們首先會寫下簡短說明，描述他們美好的一天，然後與同伴一起檢閱內容，找出他們認為電腦會擷取的關鍵資訊。同學會全班一起決定，一張儲存多個位元資訊的打孔卡，會以怎樣的方式詮釋，以表示裡面的資訊。接著，學生會使用學到的 ASCII、二進制數字與圖像格式，來表示他們美好的一天。之後學生會交換打孔卡，並嘗試解碼同伴美好的一天過得怎樣。課堂會以反思來結束。
            Problem Solving and Data:
              name: 問題解決與數據
              description_student: 本課堂會說明可怎樣量身制定問題解決流程，以處理特別是資料方面的問題。班級同學的任務，是決定某個城市最需要投放資源在哪個方面。他們必須找出並使用線上找到的資料支持這個決定。
              description_teacher: 在本課堂中，學生會使用課程初期學到的問題解決流程，以解決資料問題。檢閱流程後，班級同學便要做出決定：某個城市應該建立圖書館、寵物庇護所還是消防局。學生會以團隊方式工作，從線上收集資訊，協助決定應建造甚麼，然後使用這些資訊撰寫理據，從而說服市議會接納他們的選擇。然後他們會把完成的事情，對映至整個課程中一直使用的問題解決流程中，並比較一般問題解決流程和專門應用至資料問題時有甚麼異同。
            Problem Solving with Big Data:
              name: 用大數據解決問題
              description_student: 本課堂講解機構怎樣收集與使用資料，以解決現實世界的問題。班級同學會觀察 3 個可使用資料來解決的情景，並一起思考希望以哪些資料類型解決，以及他們可怎樣收集資料。每個情景也會包含一段影片，瞭解一項真實世界的服務，曾經以資料解決類似的問題。
              description_teacher: 在本課堂中，學生會瞭解機構怎樣收集與使用資料，以解決現實世界的問題。課堂首會快速回顧前一個課堂中學到的資料問題解決流程。然後，學生會觀察 3 個可使用資料來解決的情景，並一起思考希望以哪些資料類型解決，以及他們可怎樣收集資料。每個問題的設計，都用於反映現實世界中存在的服務。集體思考後，學生會觀看一段影片，瞭解一項真實世界的服務， 然後寫下筆記，指出現實世界的服務會收集甚麼資料，還有怎樣使用這些資料。課堂結束時，學生會記錄資料由使用者主動提供、被動記錄下來，還是由感測器來收集。
            Structuring Data:
              name: 資料的建構
              description_student: 本課堂會更深入探討資料詮釋，包括原始資料集清理與視覺化。班級同學首先會瞭解，以不同方式展示資料，可怎樣協助受眾更易理解資料。學生觀察清理與視覺化可怎樣協助大眾做出更好的決定後，便會研究這個流程中的哪些部分可自動化，哪些部分需要人類介入。
              description_teacher: 在本課堂中，學生會更深入探討資料收集與詮釋，包括資料清理與視覺化。學生首先會瞭解，以不同方式展示資料，可怎樣協助受眾更易理解資料，然後再讓自己的資料製作視覺化內容。學生必須使用首選薄餅配料的訪問結果，決定需要怎樣處理無法輕易加入所選視覺化方案的資料。最後，學生會研究這個流程中的哪些部分可由電腦自動化，哪些部分則需要人類做決定。
            Making Decisions with Data:
              name: 依數據來做決定
              description_student: 本課堂讓學生有機會練習前一個課堂介紹的資料問題解決流程。不是所有問題都有正確答案，而在某些情況下，班級同學可以並應該確定應收集更多資料。課堂結束時，會討論不同人可怎樣從相同的資料中得出不同的結論，或是收集不同的資料可能怎樣影響了他們做出的決定。
              description_teacher: 在本課堂中，學生會練習依據某些問題使用資料去做決定，這些問題專門設計讓中學生感到熟悉。學生會分組工作，討論他們會怎樣使用收到的資料做出決定，然後全球討論他們的最後決定。不是所有問題都有正確答案，而在某些情況下，學生可以並應該確定應收集更多資料。課堂結束時，會討論不同人可怎樣從相同的資料中得出不同的結論，或是收集不同的資料可能怎樣影響了他們做出的決定。
            Interpreting Data:
              name: 解譯數據
              description_student: 課堂開始時，學生首先會瞭解一份蛋糕偏好問卷調查，讓受訪者指定一款蛋糕與一款糖霜。他們會討論：瞭解蛋糕和糖霜偏好間的關係，可怎樣幫助他們更能決定建議哪種組合。然後，學生會學習交叉表，讓他們可用圖表展示不同偏好間的關係。他們會運用這項技巧找出偏好問卷調查中的關係，然後一起思考這項流程有助解決哪些不同類型的問題。
              description_teacher: 課堂開始時，學生首先會瞭解一份蛋糕偏好問卷調查，讓受訪者指定一款蛋糕與一款糖霜。他們會討論：瞭解蛋糕和糖霜偏好間的關係，可怎樣幫助他們更能決定建議哪種組合。然後，學生會學習交叉表，讓他們可用圖表展示不同偏好間的關係。他們會運用這項技巧找出偏好問卷調查中的關係，然後一起思考這項流程有助解決哪些不同類型的問題。
            Automating Data Decisions:
              name: 自動化數據決策
              description_student: 在本課堂中，學生會看看簡單範例，瞭解電腦可怎樣用來完成資料問題解決流程的決策步驗驟。學生需要完成的任務是：建立可建議度假地點的演算法。然後，學生會訂立規則或演算法，讓電腦可用來自動做決定。學生會分享各自的規則，以及他們的規則會以類別資料做出哪些選擇。然後，學生會使用自己的規則與同學的資料，測試他們的規則所做的決定是否與人類相同。本課堂結束時，會討論使用電腦把問題解決流程自動化有哪些優點和缺點。
              description_teacher: 在本課堂中，學生會看看簡單範例，瞭解電腦可怎樣用來完成資料問題解決流程的決策步驗驟。學生需要完成的任務是：建立可建議度假地點的演算法。然後，學生會訂立規則或演算法，讓電腦可用來自動做決定。學生會分享各自的規則，以及他們的規則會以類別資料做出哪些選擇。然後，學生會使用自己的規則與同學的資料，測試他們的規則所做的決定是否與人類相同。本課堂結束時，會討論使用電腦把問題解決流程自動化有哪些優點和缺點。
            Project - Solve a Data Problem:
              name: 專案 - 解決數據問題
              description_student: 本單元結束時，班級同學會設計各種方式使用資料，以做出一些建議或預測，從而協助解決問題。在最初的數個步驟中，學生會一起思考問題、從事簡單研究，然後定義一個所選的問題。之後，他們會決定希望收集哪種類型的資料、怎樣收集與怎樣使用，然後再交換回饋意見，並進行期末簡報。
              description_teacher: 本單元結束時，學生會依據同學提供並分析的資料，設計一個建議引擎。觀察一款建議引擎應用程式範例後，學生會遵從專案指南完成這項橫跨多天的活動。在最初的數個步驟中，學生會選擇希望協助使用者做出甚麼選擇、需要為建議引擎提供哪些資料、編寫問卷調查，以及收集同學選擇的資訊。然後，學生會詮釋資料，並使用學到的知識建立建議引擎。最後，他們會以自己的演算法向同學提出建議。學生會進行同儕審查，並對專案做出所有必要的更新，然後準備向全班展示的簡報。
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
          student_description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
        csd6-2019:
          title: CSD 單元 6 - 物理運算 ('19-'20)
          description_short: 在實體裝置上開發程式
          lesson_groups:
            csd6_1:
              display_name: 第 1 章：硬體輸出
            csd6_2:
              display_name: 第 2 章：建立物理原型
            cspSurvey:
              display_name: 問卷
          lessons:
            Innovations in Computing:
              name: 運算上的創新
            Designing Screens with Code:
              name: 以程式碼設計螢幕畫面
            The Circuit Playground:
              name: 電路（Circuit ）遊樂場
            Input Unplugged:
              name: 不插電介紹輸入（Input）
            Board Events:
              name: 電路板事件
            Getting Properties:
              name: 取得屬性
            Analog Input:
              name: 模擬輸入
            The Program Design Process:
              name: 程式設計流程
            'Project: Make a Game':
              name: 專案：創建一個遊戲
            Arrays and Color LEDs:
              name: 陣列與彩色 LED
            Making Music:
              name: 製作音樂
            Arrays and For Loops:
              name: 陣列和 for（計數）迴圈
            Accelerometer:
              name: 加速計
            Functions with Parameters:
              name: 函式帶參數
            Circuits and Physical Prototypes:
              name: 電路與實體原型
            'Project: Prototype an Innovation':
              name: 專案：原型創新
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
        csp4-pilot:
          title: CSP 單元 4 試行版 - 變數（Variable）、條件式（Conditional）與函式（Function）
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
            required:
              display_name: 概覽
            optional_stages:
              display_name: 可選階段
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey:
              name: 學生問卷
            Surveys:
              name: 問卷調查
            Student Surveys:
              name: 學生問卷
            'Teacher Surveys: HIDE':
              name: 教師問卷調查：隱藏
            Teacher Surveys:
              name: 老師問卷
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
            'Lesson 15: Unit 4 Assessment':
              name: 課堂 15：單元 4 評估
            Unit 4 STUDENT Survey:
              name: 單元 4 學生問卷調查
            Unit 4 TEACHER Survey:
              name: 單元 4 教師問卷調查
            'Lesson 15: Assessment Day':
              name: 課堂 15：評估日
            Project - Decision Maker App - Part 1:
              name: 專案 - 決策者應用程式 - 第 1 部分
            Project - Decision Maker App - Part 2:
              name: 專案 - 決策者應用程式 - 第 2 部分
            Project - Decision Maker App - Part 3:
              name: 專案 - 決策者應用程式 - 第 3 部分
            Project - Decision Maker App Part 1:
              name: 專案 - 決策者應用程式 第 1 部分
            Project - Decision Maker App Part 2:
              name: 專案 - 決策者應用程式 第 2 部分
            Project - Decision Maker App Part 3:
              name: 專案 - 決策者應用程式 第 3 部分
            "[OLD] Variables Make":
              name: "[舊版] 變數製作"
            "[OLD] Conditionals Make":
              name: "[舊版] 條件式製作"
            "[OLD] Functions Make":
              name: "[舊版] 函式製作"
        csp1-2019:
          title: CSP 單元 1 - 網際網路 ('19-'20)
          description: 本單元本旨在探索各項技術挑戰與問題，原因是我們有需要在電腦中表示數位資訊，並把資訊在人和運算裝置間來回傳輸。然後，本單元會探索網際網路的結構與設計，以及相關設定決定的意義所在。
          description_short: 瞭解把資訊以位元來表示的各種挑戰，以及怎樣移動這些位元。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csp1_1:
              display_name: 第 1 章：表示及傳輸資訊
            csp1_2:
              display_name: 第 2 章：研發互聯網
          lessons:
            CS Principles Pre-survey:
              name: 計算機科學原理課前問卷調查
            Personal Innovations:
              name: 個人創新
            Sending Binary Messages:
              name: 二進位訊息的發送
            Sending Binary Messages with the Internet Simulator:
              name: 用網路模擬器發送二進位訊息
            Number Systems:
              name: 數字系統
            Binary Numbers:
              name: 二進位數
            Sending Numbers:
              name: 數字的發送
            Sending Text:
              name: 傳送文字
            Unit 1 Chapter 1 Assessment:
              name: 單元 1 第 1 節 評量
            The Internet:
              name: 網際網路
            The Need for Addressing:
              name: 定址的需要
            Routers and Redundancy:
              name: 路由器與備援
            Packets and Making a Reliable Internet:
              name: 封包與建立可靠的網際網路
            The Need for DNS:
              name: DNS 的需求
            HTTP and Abstraction:
              name: HTTP 與抽象化
            Practice PT - The Internet and Society:
              name: PT 練習 - 網際網路與社會
            Unit 1 Chapter 2 Assessment:
              name: 單元 1 第 2 節 評量
          student_description: 本單元本旨在探索各項技術挑戰與問題，原因是我們有需要在電腦中表示數位資訊，並把資訊在人和運算裝置間來回傳輸。然後，本單元會探索網際網路的結構與設計，以及相關設定決定的意義所在。
        csp2-2019:
          title: CSP 單元 2 - 數位資訊 ('19-'20)
          description: 本單元會更深入地探討加密、表示與操控數位資訊的方法。能夠以數位方式操控資料、將資料視覺化並找出模式、趨勢與可能存在的意義，是電腦科學家每天都會做的重要實用技巧。瞭解資料來自哪裡、能夠直覺地知道可從中學習或擷取甚麼，以及能使用運算工具操控並傳達資料，是單元中注意的首要技巧。
          description_short: 瞭解如何以運算與視覺化的方式，表示與操控更複雜的數位資訊。
          lesson_groups:
            csp2_1_2018:
              display_name: 單元 2：數位資訊
            cspAssessment:
              display_name: 章節測驗
            cspSurvey:
              display_name: 問卷
          lessons:
            Bytes and File Sizes:
              name: 位元組（Bytes）與檔案大小
            Text Compression:
              name: 文字壓縮
            Encoding B&W Images:
              name: 黑白圖片的編碼
            Encoding Color Images:
              name: 彩色圖片的編碼
            Lossy vs Lossless Compression:
              name: 有損與無損壓縮
            Rapid Research - Format Showdown:
              name: 快速研究 - 格式攤牌對決
            Unit 2 Assessment:
              name: 單元 2 評估
            CS Principles Post Course survey:
              name: 電腦科學原理課後問卷調查
          student_description: 本單元會更深入地探討加密、表示與操控數位資訊的方法。能夠以數位方式操控資料、將資料視覺化並找出模式、趨勢與可能存在的意義，是電腦科學家每天都會做的重要實用技巧。瞭解資料來自哪裡、能夠直覺地知道可從中學習或擷取甚麼，以及能使用運算工具操控並傳達資料，是單元中注意的首要技巧。
        csp3-2019:
          title: CSP 單元 3 - 程式設計簡介 ('19-'20)
          description_short: 以自上而下的設計方式，使用經典小海龜繪圖來學習 JavaScript 程式設計基礎。
          lesson_groups:
            csp3_1_2018:
              display_name: 單元 3：程式設計簡介
            cspAssessment:
              display_name: 章節測驗
            cspSurvey:
              display_name: 問卷
          lessons:
            The Need For Programming Languages:
              name: 程式語言的需要
            The Need for Algorithms:
              name: 演算法的需要
            Creativity in Algorithms:
              name: 演算法中的創意
            Using Simple Commands:
              name: 簡單指令的使用
            Creating Functions:
              name: 建立函式
            Functions and Top-Down Design:
              name: 函式與自上而下的設計
            APIs and Function Parameters:
              name: API 和函式參數
            Creating functions with Parameters:
              name: 建立帶參數（Parameter）的函式
            Looping and Random Numbers:
              name: 迴圈與隨機數字
            Practice PT - Design a Digital Scene:
              name: PT 練習 - 設計數位場景
            Unit 3 Chapter 1 Assessment:
              name: 單元 3 第 1 章 評估
            Mid-Year Survey:
              name: 中年級問卷
            CS Principles Post Course survey:
              name: 電腦科學原理課後問卷調查
        csp4-2019:
          title: CSP 單元 4 - 大數據與隱私 ('19-'20)
          description: 我們居住在這個資料豐富的世界，而我們會遇到許多複雜的問題，例如和公共政策、法律、道德與社會影響有關的問題。本單元的目標，是要讓學生對世界上的資料有全面且平衡的觀點，包括正面與負面影響，並瞭解在現代社會中為甚麼和怎樣使用加密的基礎。
          description_short: 探索我們居住的這個資料豐富的世界，並瞭解資料可怎樣影響公共政策、個人隱私、安全、法律與道德。
          lesson_groups:
            csp4_1_2018:
              display_name: 單元 4：大數據與私隱
            cspAssessment:
              display_name: 章節測驗
            optional:
              display_name: 可選
            cspSurvey:
              display_name: 問卷
          lessons:
            What is Big Data?:
              name: 大數據是什麼？
            Finding Trends with Visualizations:
              name: 以視覺化尋找趨勢
            Check Your Assumptions:
              name: 驗證你的假設
            Rapid Research - Data Innovations:
              name: 快速研究 - 資料創新
            Identifying People with Data:
              name: 以資料識別人物身分
            The Cost of Free:
              name: 免費的代價
            Simple Encryption:
              name: 簡單加密
            Encryption with Keys and Passwords:
              name: 使用金鑰和密碼加密
            Public Key Crypto:
              name: 公開金鑰加密
            Rapid Research - Cybercrime:
              name: 快速研究 - 網路犯罪
            Unit 4 Assessment:
              name: 單元 4 評估
            Mid-Year Survey:
              name: 中年級問卷
            'Optional: Data Questions':
              name: 可選：資料問題
            CS Principles Post Course survey:
              name: 電腦科學原理課後問卷調查
          student_description: 我們居住在這個資料豐富的世界，而我們會遇到許多複雜的問題，例如和公共政策、法律、道德與社會影響有關的問題。本單元的目標，是要讓學生對世界上的資料有全面且平衡的觀點，包括正面與負面影響，並瞭解在現代社會中為甚麼和怎樣使用加密的基礎。
        csp5-2019:
          title: CSP 單元 5 - 製作應用程式 ('19-'20)
          description: 本單元繼續介紹電腦運算的基礎概念，從而能夠製作內容豐富的互動應用程式。本課程使用 JavaScript 做為程式語言，並以 App Lab 做為程式設計環境來製作應用程式，但這些課堂中學到的概念，適用於所有程式語言和工具。
          description_short: 透過使用 JavaScript 製作豐富、互動的應用程式，繼續學習更多計算機編程的基礎概念 。
          lesson_groups:
            csp5_1:
              display_name: 第 1 章：事件驅動的程式設計
            csp5_2:
              display_name: 第 2 章：資料結構程式設計
            cspSurvey:
              display_name: 問卷
          lessons:
            Buttons and Events:
              name: 按鈕與事件
            Multi-screen Apps:
              name: 多螢幕應用程式
            'Building an App: Multi-Screen App':
              name: 製作應用程式：多螢幕應用程式
            Controlling Memory with Variables:
              name: 以變數（Variable）控制記憶體
            'Building an App: Clicker Game':
              name: 製作應用程式：點擊遊戲
            Unit 5 Assessment 1:
              name: 單元 5 評量 1
            User Input and Strings:
              name: 使用者輸入與字串
            '"If" Statements Unplugged':
              name: "「如果」陳述式不插電教程"
            Boolean Expressions and "If" Statements:
              name: 布林值（Boolean）運算式與「如果」（If）陳述句
            '"if-else-if" and Conditional Logic':
              name: "「如果…否則」和條件判斷式"
            'Building an App: Color Sleuth':
              name: 製作應用程式：顏色偵探
            Unit 5 Assessment 2:
              name: 單元 5 評量 2
            While Loops:
              name: 當…迴圈
            Loops and Simulations:
              name: 迴圈與模擬
            Introduction to Arrays:
              name: 陣列（Arrays）的介紹
            'Building an App: Image Scroller':
              name: 創建一個 APP：圖像播放器
            Unit 5 Assessment 3:
              name: 單元 5 評量 3
            Processing Arrays:
              name: 處理陣列
            Functions with Return Values:
              name: 帶回傳值的函式
            'Building an App: Canvas Painter':
              name: 創建一個 App - 帆布畫家
            Unit 5 Assessment 4:
              name: 單元 5 評量 4
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: 單元 5 評估 5 - AP 虛擬碼練習問題
            Mid-Year Survey:
              name: 中年級問卷
            CS Principles Post Course survey:
              name: 電腦科學原理課後問卷調查
          student_description: 本單元繼續介紹電腦運算的基礎概念，從而能夠製作內容豐富的互動應用程式。本課程使用 JavaScript 做為程式語言，並以 App Lab 做為程式設計環境來製作應用程式，但這些課堂中學到的概念，適用於所有程式語言和工具。
        csp-explore-2019:
          title: 探索 - AP 表現任務準備 ('19-'20)
          description: 這些課堂可協助你瞭解、準備與執行 AP 探索表現任務。每個「課堂」都含有實用文件的連結，讓你的老師可幫助你學習。注意：課堂 1 的第 2 個項目與探索 PT 沒有直接關係，但包含需要的一般技術設定與工具，以進行「探索」與「建立」任務的各個元素。
          description_short: 提供各種課堂與資源，協助學生準備並完成 AP 探索表現任務。
          lesson_groups:
            csp_ap_2:
              display_name: 第 2 章：AP 探索效能任務
            cspSurvey:
              display_name: 問卷
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: 探索 PT 準備 - 檢閱任務
            Explore PT - Making a Plan:
              name: 探索 PT - 制定計畫
            Explore PT - Complete the Task:
              name: 探索 PT - 完成任務
            Mid-Year Survey:
              name: 中年級問卷
            CS Principles Post Course survey:
              name: 電腦科學原理課後問卷調查
          student_description: 這些課堂可協助你瞭解、準備與執行 AP 探索表現任務。每個「課堂」都含有實用文件的連結，讓你的老師可幫助你學習。注意：課堂 1 的第 2 個項目與探索 PT 沒有直接關係，但包含需要的一般技術設定與工具，以進行「探索」與「建立」任務的各個元素。
        csp-create-2019:
          title: 創建 - AP 效能任務準備 ('19-'20)
          description: 這些課堂可協助你瞭解、準備與執行 AP 建立表現任務。每個「課堂」都含有實用文件的連結，讓你的老師可幫助你學習。注意：課堂 1 的第 1 個項目與建立 PT 沒有直接關係，但包含需要的一般技術設定與工具，以進行「探索」與「建立」任務的各個元素。
          description_short: 提供各種課堂與資源，協助學生準備並完成 AP 建立表現任務。
          lesson_groups:
            csp_ap_3:
              display_name: 第 3 章：AP 建立效能任務
            cspSurvey:
              display_name: 問卷
          lessons:
            Create PT Prep - Reviewing the Task:
              name: 建立 PT 準備 - 檢閱任務
            Create PT Prep - Making a Plan:
              name: 建立 PT 準備 - 制定計畫
            Create PT - Complete the Task:
              name: 建立 PT - 完成任務
            CS Principles Post Course survey:
              name: 電腦科學原理課後問卷調查
          student_description: 這些課堂可協助你瞭解、準備與執行 AP 建立表現任務。每個「課堂」都含有實用文件的連結，讓你的老師可幫助你學習。注意：課堂 1 的第 1 個項目與建立 PT 沒有直接關係，但包含需要的一般技術設定與工具，以進行「探索」與「建立」任務的各個元素。
        csppostap-2019:
          title: AP 後 - 資料工具 ('19-'20)
          description_short: 學習在 App Lab 應用程式中收集與使用資料。
          lesson_groups:
            csp_postap_1:
              display_name: 第 1 章：數據操作和可視化
            csp_postap_2:
              display_name: 第 2 章：App 和數據庫
            cspSurvey:
              display_name: 問卷
          lessons:
            Intro to Data:
              name: 數據的介紹
            Good and Bad Data Visualizations:
              name: 資料視覺化的良好與不良示例
            Making Data Visualizations:
              name: 製作視覺化資料
            Discover a Data Story:
              name: 發現數據故事
            Cleaning Data:
              name: 數據的清理
            Creating Summary Tables:
              name: 建立摘要表
            Project - Tell a Data Story:
              name: 專案 - 訴說關於資料的故事
            Chapter 1 Assessment:
              name: 第 1 章評估
            Creating Javascript Objects:
              name: Javascript 物件的創建
            Permanent Data Storage:
              name: 永久資料儲存
            Reading Records:
              name: 紀錄的讀取
            Deleting Records:
              name: 刪除紀錄
            Updating Records:
              name: 更新紀錄
            Importing and Exporting Data:
              name: 匯入和匯出資料
            Visualizing Data:
              name: 資料視覺化
            Sample Apps:
              name: 應用程式範例
            Final Project:
              name: 期末專案
            CS Principles Post Course survey:
              name: 電腦科學原理課後問卷調查
        csp1-pilot:
          title: CSP 單元 1 試行版 - 數位資訊
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            required:
              display_name: 概覽
          lessons:
            new stage:
              name: 新的階段
            Number Systems:
              name: 數字系統
            Bit Sending Device:
              name: 位元傳送裝置
            Flippy Do Pt 1:
              name: "「翻配多」（Flippy Do） 第 1 部分"
            Flippy Do Pt 2:
              name: "「翻配多」（Flippy Do） 第 2 部分"
            Sending Text:
              name: 傳送文字
            Black and White Images:
              name: 黑白圖像
            Color Images:
              name: 彩色圖像
            Lossless Compression:
              name: 無損壓縮
            Welcome to CSP:
              name: 歡迎來到 CSP
            Sending Binary Messages:
              name: 二進位訊息的發送
            Sending Binary Messages with the Internet Simulator:
              name: 用網路模擬器發送二進位訊息
            AB Patterns:
              name: AB 模式
            Flippy Do, pt. 1:
              name: "「翻配多」（Flippy Do），第 1 部分"
            Flippy Do, pt. 2:
              name: "「翻配多」（Flippy Do），第 2 部分"
            Lossy Compression:
              name: 有損壓縮
            Intellectual Property:
              name: 知識產權
            'Project: Digital Information Dilemmas, pt. 1':
              name: 專案：數位資訊困境，第 1 部分
            'Project: Digital Information Dilemmas, pt. 2':
              name: 專案：數位資訊困境，第 2 部分
            Unit Assessment:
              name: 單元評估
            Flippy Do, pt 1:
              name: "「翻配多」（Flippy Do），第 1 部分"
            Flippy Do, pt 2:
              name: "「翻配多」（Flippy Do），第 2 部分"
            'Project: Digital Information Dilemmas, pt 1':
              name: 專案：數位資訊困境，第 1 部分
            'Project: Digital Information Dilemmas, pt 2':
              name: 專案：數位資訊困境，第 2 部分
            CS Principles Pre-survey:
              name: 計算機科學原理課前問卷調查
            Binary Numbers:
              name: 二進位數
            Overflow and Rounding:
              name: 溢位與捨入
            CS Principles Unit 1 Survey:
              name: 電腦科學原理單元 1 問卷調查
            Unit 1 Survey:
              name: 單元 1 問卷調查
            'Lesson 15: Unit Assessment':
              name: 課堂 15：單元評估
            Unit 1 STUDENT Survey:
              name: 單元 1 學生問卷調查
            Unit 1 TEACHER Survey:
              name: 單元 1 教師問卷調查
            'Lesson 14: Unit Assessment':
              name: 課堂 14：單元評估
            Representing Information:
              name: 表示資訊
            Representing Text:
              name: 表示文字
            Circle Square Patterns:
              name: 圓形與正方形模式
            'Lesson 14: Assessment Day':
              name: 課堂 14：評估日
            'Project: Digital Information Dilemmas Part 1':
              name: 專案：數位資訊困境 第 1 部分
            'Project: Digital Information Dilemmas Part 2':
              name: 專案：數位資訊困境 第 2 部分
            Project - Digital Information Dilemmas Part 1:
              name: 專案 - 數位資訊困境 第 1 部分
            Project - Digital Information Dilemmas Part 2:
              name: 專案 - 數位資訊困境 第 2 部分
        csd-tests:
          title: CSD 專案後測驗
          lessons:
            Computers and Problem Solving:
              name: 計算機與問題解決
            Web Development:
              name: Web 開發
            Interactive Animations and Games:
              name: 互動式動畫和遊戲
        csd-videos:
          title: CSD 影片
          description_short: 電腦科學探索的所有影片
          description: 電腦科學探索的所有影片
          lessons:
            new stage:
              name: 新的階段
            Problem Solving and Computers:
              name: 問題解決與電腦
            Web Development:
              name: Web 開發
            Games and Animations:
              name: 遊戲和動畫
            User Centered Design:
              name: 以使用者為中心的設計
            Data and Society:
              name: 資料與社會
            Physical Computing:
              name: 實體運算
          student_description: 電腦科學探索的所有影片
        time4csdemo:
          title: Time4CS 佛羅里達州的多樣性
          description_audience: 四年級
          description_short: 本模組集中說明四年級學生的科學與社會科標準。在科學上，他們會檢視各種生態標準，範圍涵蓋棲息地、生態系統、原生物種與入侵物種。在社會學中，學生會以佛羅里達州政府部門做為思考對象，並思考日常生活中的市民可怎樣影響當地與州的政策。
          description: 本模組集中說明四年級學生的科學與社會科標準。在科學上，他們會檢視各種生態標準，範圍涵蓋棲息地、生態系統、原生物種與入侵物種。在社會學中，學生會以佛羅里達州政府部門做為思考對象，並思考日常生活中的市民可怎樣影響當地與州的政策。
          lesson_groups:
            ramp_up:
              display_name: 提升
            csf_sprites:
              display_name: 角色
            time4cs_c1:
              display_name: 系列 1：佛羅里達大沼澤地和生態系統
            time4cs_c2:
              display_name: 系列 2：食物鏈（佛羅里達大沼澤地）
            time4cs_c3:
              display_name: 系列 3：原生物種（佛羅里達大沼澤地）
            time4cs_c4:
              display_name: 系列 4：入侵物種的影響（佛羅里達大沼澤地）
            time4cs_c5:
              display_name: 系列 5：市民來採取行動
          lessons:
            Introduction to the Problem:
              name: 問題簡介
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
            Everglades Habitats:
              name: 大沼澤地棲息地
            Reviewing Projects:
              name: 檢閱專案
            Food Chains:
              name: 食物鏈
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Alligator Holes:
              name: 鱷魚洞
            Conditionals in Sprite Lab:
              name: Sprite Lab 中的條件式（Conditional）
            'Programming: My Robotic Friends':
              name: 程式設計：我的機器人朋友
            Sequence in Maze:
              name: 迷宮中的陣列（Sequence）
            Building a Foundation:
              name: 打好基礎
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Programming in Artist:
              name: 在藝術家中學習程式設計
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops in Bee/Zombie:
              name: 蜜蜂/殭屍遊戲裡的巢狀迴圈（Nested Loop）
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            Learning Sprites with Sprite Lab:
              name: 在 Sprite Lab 中學習角色（Sprite）
            Alien Dance Party with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
            Pet Giraffe with Sprite Lab:
              name: Sprite Lab 中的寵物長頸鹿
            Build a Flappy Game:
              name: 製作像素鳥遊戲
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
            Invasive Species:
              name: 入侵物種
            'Events: The Big Event':
              name: 事件：大事件
            I'm in Big Trouble:
              name: 我遇上大麻煩了
            Events in Sprite Lab:
              name: Sprite Lab 中的事件（Event）
            Fishy Business:
              name: 漁業
            Broadcast a Message:
              name: 廣播訊息
            Pythons & Mammals:
              name: 蟒蛇與哺乳動物
            Broadcast in Scratch:
              name: Scratch 中的廣播
            Current Solutions:
              name: 目前的解決方案
            'Functions: Songwriting':
              name: 函式：作曲
            Functions in Minecraft:
              name: Minecraft 中的函式
            Functions in Harvester:
              name: 收割者遊戲中的函式（Function）
            Functions in Artist:
              name: 藝術家遊戲中的函式（Function）
            Determine the Concept:
              name: 釐清概念
            Debate:
              name: 辯論
            Functions in Sprite Lab:
              name: Sprite Lab 中的函式（Function）
            I'm in Big Trouble!:
              name: 我遇上大麻煩了！
            I am in Big Trouble:
              name: 我遇上大麻煩了！
          student_description: 本模組集中說明四年級學生的科學與社會科標準。在科學上，他們會檢視各種生態標準，範圍涵蓋棲息地、生態系統、原生物種與入侵物種。在社會學中，學生會以佛羅里達州政府部門做為思考對象，並思考日常生活中的市民可怎樣影響當地與州的政策。
        csp1-pilot-staging:
          title: 單元 1：位元與位元組
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
        csp2-pilot-staging:
          title: "（舊）單元 2：網際網路"
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
        csp3-pilot-staging:
          title: 單元 3：應用程式開發簡介
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
            Introduction to Apps:
              name: 應用程式簡介
            'Project: Designing an App, pt. 1':
              name: 專案：設計應用程式，第 1 部分
            'Project: Designing an App, pt. 2':
              name: 專案：設計應用程式，第 2 部分
            Programs Investigate:
              name: 程式研究
            Programs Practice:
              name: 編程的練習
            'Project: Designing an App, pt. 3':
              name: 專案：設計應用程式，第 3 部分
            'Project: Designing an App, pt. 4':
              name: 專案：設計應用程式，第 4 部分
            'Project: Share Your App':
              name: 專案：分享你的應用程式
            'Project: Designing an App pt. 1':
              name: 專案：設計應用程式 第 1 部分
            'Project: Designing an App pt. 2':
              name: 專案：設計應用程式 第 2 部分
            Project - Designing an App Part 1:
              name: 專案 - 設計應用程式 第 1 部分
            Project - Designing an App Part 2:
              name: 專案 - 設計應用程式 第 2 部分
            Project - Designing an App Part 3:
              name: 專案 - 設計應用程式 第 3 部分
            Project - Designing an App Part 4:
              name: 專案 - 設計應用程式 第 4 部分
            The Need for Programming Languages:
              name: 程式語言的需要
        csp4-pilot-staging:
          title: 單元 4：變數（Variable）、條件式（Conditional）與函式（Function）
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
        csp5-pilot-staging:
          title: 單元 5：清單（List）、迴圈（Loop）與尋訪（Traversal）
          lesson_groups:
            csp_lists:
              display_name: 清單
            csp_loops:
              display_name: 迴圈
            csp_traversals:
              display_name: 尋訪
            csp_project:
              display_name: 專案
            csp_libraries:
              display_name: 程式庫
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
            Lists Explore:
              name: 清單探索
            Lists Investigate:
              name: 清單研究
            Loops Explore:
              name: 迴圈探索
            Traversals Explore:
              name: 尋訪探索
            Lists Practice:
              name: 清單的練習
            'Loops Practice: While Loops':
              name: 迴圈練習：While（當）迴圈
            'Loops Practice: Simulations':
              name: 迴圈練習：模擬
            Lists Make:
              name: 清單製作
            Traversals Investigate:
              name: 尋訪研究
            Traversals Practice:
              name: 遍歷的練習
            Traversals Make:
              name: 尋訪製作
            Unit 5 Mini Assessment:
              name: 單元 5 迷你評估
            Mini PT:
              name: 迷你 PT
            Student Survey (Lists):
              name: 學生問卷調查（清單）
            Teacher Survey (Lists):
              name: 教師問卷調查（清單）
            Student Survey (Traversals):
              name: 學生問卷調查（尋訪）
            Teacher Survey (Traversals):
              name: 教師問卷調查（尋訪）
            Student Survey (Mini PT):
              name: 學生問卷調查（迷你 PT）
            Loops Investigate and Practice:
              name: 迴圈（Loop）研究與練習
            Libraries Explore:
              name: 函式庫探索
            Libraries Investigate:
              name: 函式庫研究
            Student Survey (Libraries):
              name: 學生問卷調查（函式庫）
            Teacher Survey (Libraries):
              name: 教師問卷調查（函式庫）
        csp6-pilot-staging:
          title: 單元 6：演算法
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
        csp7-pilot-staging:
          title: 單元 7：函式（Function）與函式庫
          lesson_groups:
            csp_parameters_return_values:
              display_name: 參數及函數回傳值
            csp_libraries:
              display_name: 程式庫
          lessons:
            new stage:
              name: 新的階段
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
            Functions with Parameters and Return Explore:
              name: 帶參數與回傳值的函式探索
            Libraries:
              name: 程式庫
            Parameters and Return Values Explore:
              name: 參數與回傳值探索
            Parameters and Return Values Investigate:
              name: 參數與回傳值研究
            Parameters and Return Values Practice:
              name: 參數與回傳值練習
            Libraries Explore:
              name: 函式庫探索
            Libraries Investigate:
              name: 函式庫研究
            Libraries Mini PT:
              name: 函式庫迷你 PT
            Student Survey (Lists):
              name: 學生問卷調查（清單）
            Teacher Survey (Lists):
              name: 教師問卷調查（清單）
            Student Survey (Libraries):
              name: 學生問卷調查（函式庫）
            Teacher Survey (Libraries):
              name: 教師問卷調查（函式庫）
            Libraries Project:
              name: 函式庫專案
        csp8-pilot-staging:
          title: 單元 8：建立表現任務 (PT)
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
        csp9-pilot-staging:
          title: 單元 9：資料
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
        csp10-pilot-staging:
          title: 單元 10：全球影響
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Student Survey (Variables):
              name: 學生問卷調查（變數）
            Teacher Surveys (Variables):
              name: 教師問卷調查（變數）
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Student Survey (Conditionals):
              name: 學生問卷調查（條件式）
            Teacher Surveys (Conditionals):
              name: 教師問卷調查（條件式）
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            Unit 4 Assessment:
              name: 單元 4 評估
        pluralsight:
          title: 取得 Pluralsight One 的存取權
          lessons:
            Pluralsight LevelGroup:
              name: Pluralsight 級別群組
        express-2018-vn:
          description: Khoa Học Máy Tính (Computer Science) là môn học cơ bản của thời đại kinh tế số và đã được đưa vào dạy đại trà từ tiểu học ở Mỹ, Canada, Anh, Nhật và các nước phát triển khác. Khoá học này nhằm giới thiệu Khoa Học Máy Tính cơ bản đến với học sinh Việt Nam. Chương trình được xây dựng trực tiếp từ chương trình hiện hành cho học sinh tiểu học ở Mỹ và cô động cho phù hợp với học sinh Việt Nam.
          lessons:
            Graph Paper Programming:
              name: 方格紙編程
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            Loops with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
        csd-post-survey-2018:
          title: CSD 學生課後問卷調查 ('18-'19)
          description_audience: CSD 學生
          description_short: CSD 學生課後問卷調查 2018
          lesson_groups:
            cspSurvey:
              display_name: 問卷
          lessons:
            CSD post-course survey:
              name: CSD 學生課後問卷調查 ('18-'19)
        csp-post-survey-2018:
          title: CSP 學生課後問卷調查 ('18-'19)
          description_audience: CSP 學生
          description_short: CSP 學生課後問卷調查
          description: 歡迎來到 Code.org 電腦科學原理課後問卷調查。本問卷調查需要大約 15 分鐘完成。你的回覆將會保持私密與匿名 -- 你的老師可看見全班的匿名匯總結果。這些結果對你的老師與 Code.org 都非常重要，目的是維持和改善課程的品質。感謝你的寶貴時間與關注。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
          lessons:
            CSP post-course survey:
              name: CSP 學生課後問卷調查 ('18-'19)
          student_description: 歡迎來到 Code.org 電腦科學原理課後問卷調查。本問卷調查需要大約 15 分鐘完成。你的回覆將會保持私密與匿名 -- 你的老師可看見全班的匿名匯總結果。這些結果對你的老師與 Code.org 都非常重要，目的是維持和改善課程的品質。感謝你的寶貴時間與關注。
        csp5-pilot:
          title: CSP 單元 5 試行版 - 清單（List）、迴圈（Loop）與尋訪（Traversal）
          lesson_groups:
            csp_lists:
              display_name: 清單
            csp_loops:
              display_name: 迴圈
            csp_traversals:
              display_name: 尋訪
            csp_project:
              display_name: 專案
            required:
              display_name: 概覽
            optional_stages:
              display_name: 可選階段
          lessons:
            new stage:
              name: 新的階段
            Lists Explore:
              name: 清單探索
            Lists Investigate:
              name: 清單研究
            Lists Practice:
              name: 清單的練習
            Lists Make:
              name: 清單製作
            Loops Explore:
              name: 迴圈探索
            'Loops Practice: While Loops':
              name: 迴圈練習：While（當）迴圈
            'Loops Practice: Simulations':
              name: 迴圈練習：模擬
            Traversals Explore:
              name: 尋訪探索
            Traversals Investigate:
              name: 尋訪研究
            Traversals Practice:
              name: 遍歷的練習
            Traversals Make:
              name: 尋訪製作
            Student Survey (Lists):
              name: 學生問卷調查（清單）
            Student Survey (Traversals):
              name: 學生問卷調查（尋訪）
            Unit 5 Mini Assessment:
              name: 單元 5 迷你評估
            Mini PT:
              name: 迷你 PT
            Teacher Survey (Lists):
              name: 教師問卷調查（清單）
            Teacher Survey (Traversals):
              name: 教師問卷調查（尋訪）
            Student Survey (Mini PT):
              name: 學生問卷調查（迷你 PT）
            Loops Investigate and Practice:
              name: 迴圈（Loop）研究與練習
            Parameters and Return Values Explore:
              name: 參數與回傳值探索
            Parameters and Return Values Investigate:
              name: 參數與回傳值研究
            Parameters and Return Values Practice:
              name: 參數與回傳值練習
            App Lab Experiments Dashboard:
              name: App Lab 實驗控制台
            Libraries Explore:
              name: 函式庫探索
            Libraries Investigate:
              name: 函式庫研究
            Libraries Project:
              name: 函式庫專案
            Student Survey (Libraries):
              name: 學生問卷調查（函式庫）
            Teacher Survey (Libraries):
              name: 教師問卷調查（函式庫）
            Loops Investigate:
              name: 迴圈研究
            Loops Practice:
              name: 迴圈的練習
            Loops Make:
              name: 迴圈製作
            Semester Hackathon Part 1:
              name: 學期黑客松 第 1 部分
            Semester Hackathon Part 2:
              name: 學期黑客松 第 2 部分
            Semester Hackathon Part 3:
              name: 學期黑客松 第 3 部分
            Semester Hackathon Part 4:
              name: 學期黑客松 第 4 部分
            Semester Hackathon Part 5:
              name: 學期黑客松 第 5 部分
            Unit 5 Assessment:
              name: 單元 5 評估
            Semester Exam:
              name: 學期考試
            'Lesson 13: Assessment Day':
              name: 課堂 13：評估日
            Unit 5 STUDENT Survey:
              name: 單元 5 學生問卷調查
            Unit 5 TEACHER Survey:
              name: 單元 5 教師問卷調查
            'Lesson 18: Assessment Day':
              name: 課堂 18：評估日
            "[OLD] Lists Make":
              name: "[舊版] 清單製作"
            "[OLD] Loops Make":
              name: "[舊版] 迴圈製作"
            "[OLD] Traversals Make":
              name: "[舊版] 尋訪製作"
        fit2019-novice:
          title: 夏日工作坊 2019 新手反思
          description_audience: 6 - 12 受訓中輔導員新手
          description_short: 提供給 2019 年受訓中輔導員的新手反思材料
          description: 這是為 Code.org 受訓中輔導員提供的新手反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓工作坊中執行工作的基礎。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Novice Reflection Overview:
              name: 新手反思概覽
            Day 1:
              name: 第 1 天
            Day 2:
              name: 第 2 天
            Day 3:
              name: 第 3 天
            Day 4:
              name: 第 4 天
            Wrap Up:
              name: 總結
          student_description: 這是為 Code.org 受訓中輔導員提供的新手反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓工作坊中執行工作的基礎。
        csd-test-saving-state:
          title: 線上活動範例
          lessons:
            csd digital unplugged WIAC L1:
              name: csd 數位不插電 WIAC L1
            csd digital unplugged WIAC L2:
              name: csd 數位不插電 WIAC L2
            csd digital unplugged WIAC L3:
              name: csd 數位不插電 WIAC L3
            What is a Computer?:
              name: 電腦是什麼？
            Problem Solving Process:
              name: 問題解決流程
        fit2019-apprentice:
          title: 夏日工作坊 2019 學徒反思
          description_audience: 6 - 12 受訓中輔導員學徒
          description_short: 提供給 2019 年受訓中輔導員的學徒反思材料
          description: 這是為 Code.org 受訓中輔導員提供的學徒反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓工作坊中執行工作的基礎。
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Apprentice Reflection Overview:
              name: 學徒反思
            Day 1:
              name: 第 1 天
            Day 2:
              name: 第 2 天
            Day 3:
              name: 第 3 天
            Day 4:
              name: 第 4 天
            Wrap Up:
              name: 總結
          student_description: 這是為 Code.org 受訓中輔導員提供的學徒反思套裝，用於輔導員的 5 天夏日工作坊。你將在這裡找到實體 5 天夏日工作坊的每日反思提示。這些問題將會是我們在輔導員培訓工作坊中執行工作的基礎。
        csd-sample-online:
          title: 電腦科學探索線上活動範例
          lessons:
            What is a Computer? - sample progression:
              name: 電腦是甚麼？- 範例進度
            Problem Solving Process - sample activities:
              name: 問題解決流程 - 範例活動
        csd1-pilot:
          description_short: 瞭解人類與何與電腦一起解決問題。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csd1_1:
              display_name: 第 1 章：解決問題的流程
            csd1_2:
              display_name: 第 2 章：計算機與問題解決能力
          lessons:
            CS Discoveries Pre-survey:
              name: 電腦科學探索課前問卷調查
            Intro to Problem Solving:
              name: 問題解決能力的介紹
              description_student: 班級學生會分組工作，目標是設計強力的鋁箔船，可盡量放置最多硬幣。在課堂結束時，小組會反思自己在活動中的體驗，並思考在課程的餘下部分中，將會選擇運用哪些解決問題類型。
              description_teacher: 在本課堂中，學生會分組設計鋁箔船，目標是盡量支撐最多硬幣。各小組會有 2 個回合製作鋁箔船，第 2 回合的目標是盡量比第 1 回合載得更多硬幣。這項活動的結構可預示問題解決流程的不同步驟，而在接下來的課堂中，學生會更詳細學習這些流程。在本課堂結束時，學生會反思自己在活動中的經驗，並思考在課程的餘下部分中，將會選擇運用哪些解決問題類型。
            The Problem Solving Process:
              name: 問題解決流程
              description_student: 本課堂會介紹正式的問題解決流程。班級學生會在學年裡運用這種流程：定義 - 準備 - 嘗試 - 反思。學生會把這些步驟，與前一個課堂的鋁箔船問題聯繫起來，然後思考他們擅長解決的一個問題，然後再思考他們希望解決得更好的一個問題。在課堂結束時，班級同學會收集普遍實用的策略清單，用於流程中的每個步驟，然後加到海報上，從而在整個單元與學年中使用。
              description_teacher: 本課堂會介紹正式的問題解決流程。學生會在學年裡運用這種流程：定義 - 準備 - 嘗試 - 反思。課堂首先會讓學生一起思考日常生活中遇到的所有類型問題。接著，學生便會學習問題解決流程的 4 個步驟，並合作把這 4 個抽象的步驟，聯繫到實際解決問題的經驗中。首先，學生會把這些步驟，與前一個課堂的鋁箔船問題聯繫起來，然後思考他們擅長解決的一個問題，然後再思考他們希望解決得更好的一個問題。在課堂結束時，班級同學會收集普遍實用的策略清單，用於流程中的每個步驟，然後加到海報上，從而在整個單元與學年中使用。
            Exploring Problem Solving:
              name: 問題解決探索
              description_student: 在本課堂中，班級學生會把問題解決流程應用至 3 個不同問題：字詞搜尋、為生日派對編排座位，以及計畫旅行。各種問題變得越來越複雜，而且定義差劣，從而強調問題解決流程為甚麼在解決這些問題時特別有用。
              description_teacher: |-
                在本課堂中，學生會把問題解決流程應用至 3 個不同問題中，以加深瞭解每個步驟的價值。他們會完成一次猜詞遊戲、為生日派對編排座位，以及計畫旅行。各種問題變得越來越複雜，而且定義差劣，從而強調問題解決流程為甚麼在解決這些問題時特別有用。課堂結束時，學生會反思自己在問題解決流程方面的經驗。他們會確認加入每個步驟的理由，並會一起思考各種問題或策略，從而協助自己更能定義開放式問題，因為通常這就是最關鍵的步驟。\\r
                \\r
                本課堂大概需要 2 個或更多課節完成。最初 2 個問題也許能放進 1 個課節，但第 3 個問題則需要放在第 2 天。
            What is a Computer?:
              name: 電腦是什麼？
              description_student: 在本課堂中，班級學生會瞭解電腦的初步定義。一起思考電腦可能的各種定義後，學生會分組在海報紙上，把圖片分類為「是電腦」或「不是電腦」，並說明他們在選擇一些最困難的分類時有甚麼原因。然後，教師會介紹電腦的定義，並讓各小組依據新的定義來修改海報內容。
              description_teacher: 在本課堂中，學生會瞭解電腦的初步定義。開始課堂時，學生會一起思考電腦可能的各種定義，然後把思考結果放在黑板上。接著，學生會分組在海報紙上，把圖片分類為「是電腦」或「不是電腦」，並在課室張貼海報紙，然後簡短說明他們在選擇一些最困難的分類時有甚麼原因。之後，教師會介紹電腦的定義，並讓學生依據新的定義來修改海報內容。\\r
            Input and Output:
              name: 輸入與輸出
              description_student: 在本課堂中，班級學生會思考一些運算裝置，並確定裝置使用哪些類型的輸入與輸出。小組會收到一台運算裝置，學生依據教師提供的輸入與輸出定義，列出他們的裝置上有哪些輸入與輸出工具。課堂結束時，學生會檢視在運算裝置上經常會進行的活動，並在圖表上選擇用於該活動的輸入與輸出工具。
              description_teacher: 在本課堂中，學生會思考一些運算裝置，並確定裝置使用哪些類型的輸入與輸出。小組會收到一台運算裝置，並依據教師提供的輸入與輸出定義，列出他們的裝置上有哪些輸入與輸出工具。在活動初期，教師會提示學生專注於更明顯的實體輸入與輸出（例如鍵盤做為輸入，或螢幕做為輸出），但是之後的討論應帶領學生考慮較不明顯的範例（例如觸控螢幕是輸入，同時也是輸出；或是網際網路可同時做為輸入與輸出）。在整個課堂中，教師會在課室前方的 T 圖表中，記錄已確定的輸入和輸出。課堂結束時，學生會檢視在運算裝置上經常會進行的活動，並在圖表上選擇用於該活動的輸入與輸出工具。
            Processing:
              name: 處理
              description_student: 本課堂會更深入探討「處理」的概念，這個概念先前已包含在電腦的定義中。同學分為 2 人一組順序放置卡牌 - 這是處理資訊的一種形式。在結束時，班級學生會在解決資訊問題的背景下討論「處理」的意義。
              description_teacher: 學生會完成 2 項不插電卡牌排序活動，從而瞭解「處理」的意思，以及「處理」和解決問題間的關係。第 1 項活動只有很少限制，用於介紹處理的高階定義。下一項活動會施加更多限制，迫使學生開發一套演算法，從而每次都能成功處理卡牌。學生會反覆與同學一起開發、測試並分享自己的演算法。總結討論會讓學生反思在上述活動中使用的不同類型問題決方法，以及製作演算法解決問題的價值所在。
            Apps and Storage:
              name: 應用程式與儲存
              description_student: 本課堂會講解電腦在輸入與輸出方面的內容，並會以與學生相關的熟悉方式：應用程式來說明。班級學生會評估一些網頁應用程式，從而分析這些程式設計用於解決的特定問題、程式需要處理的輸入內容，以及程式會向使用者提供的輸出內容。課堂結束時，學生會觀察這些應用程式，教師也會帶領討論應用程式對社會的影響。
              description_teacher: 本課堂會檢閱電腦在輸入、輸出、儲存與處理方面內容，並會以與學生相關的熟悉方式：應用程式來說明。學生會分為 2 人一組，評估一些智慧手機應用程式，從而分析這些程式設計用於解決的特定問題、程式需要處理的輸入內容、程式把輸入處理為所需輸出的處理程序，以及程式希望儲存留待日後使用的資訊。班級課堂結束時，學生會展開討論，把課堂和學生更熟悉的應用程式互相聯繫。
            Project - Propose an App:
              name: 專案 - 提出應用程式建議
              description_student: 為了總結問題解決流程的學習內容，並總結電腦的輸入/輸出/儲存/處理模型，班級同學會提議設計相關應用程式，以解決現實世界的問題。這份專案會橫跨數天完成，最後會進行海報簡報，強調每款應用程式的功能特色。專案預期每 2 人一組完成，但也可 1 人獨自完成。
              description_teacher: 為了總結問題解決流程的學習內容，並總結電腦的輸入/輸出/儲存/處理模型，學生會提議設計相關應用程式，以解決現實世界的問題。這份專案會橫跨數天完成，最後學生會製作海報，強調將會向同學展示的應用程式有哪些功能特色。專案指南為學生提供循序漸進的指示，並協助他們整理自己的思緒。專案預期每 2 人一組完成，但也可 1 人獨自完成。
            Post-Project Test:
              name: 專案後測驗
        csd2-pilot:
          description: 在單元 2 中，你會學習如何在自己的網頁中製作並分享內容。決定你想與全世界分享哪些內容後，便會學習怎樣使用 HTML 與 CSS 構築自己的網頁。你也會練習各種寶貴的程式設計技巧，例如除錯與寫下註解。在單元結束時，你將可製作出屬於自己的個人網站，並可在網際網路上發佈。
          description_short: 在 Web Lab 中學習製作自己的網站。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章：網站內容和 HTML
            csd2_2:
              display_name: 第 2 章：樣式和 CSS
            cspSurvey:
              display_name: 問卷
          lessons:
            Exploring Websites:
              name: 探索不同網站
              description_student: 本課堂會說明網站可能需要為使用者和製作者達成之目的。班級同學會觀看一些美國最多人使用的網站，並討論其中每個網站對使用者的用處有多大，以及可怎樣同時為製作者服務。
              description_teacher: 每個網站都有製作之目的 - 某人製作網站與其他人使用的理由。在本課堂中，學生會開始思考一個網站可能會有的目的，不論是為使用者還是為製作者達成之目的。學生會觀看一些美國最多人使用的網站，並嘗試瞭解每個網站對使用者的用處有多大，以及可怎樣同時為製作者服務。
            'Websites for Expression ':
              name: 建立網站，表達內容
              description_student: 本課堂介紹以網站做為表達自我的途徑。班級同學首先會討論大眾會使用哪些不同方法，以表達並分享自己的興趣和構思，然後觀察一些範例網站，這些網站由前一個課程的學生完成。最後，所有同學都一起思考並分享可加入的主題與興趣清單，為單元餘下部分創造資源，以製作個人網站。
              description_teacher: 在本課堂中，學生會研究不同方法，以使用網站做為個人表達的途徑，並建立希望在個人網站中加入的主題與興趣清單。開始課堂時，學生會一起思考不同方法，以表達並分享自己的興趣和構思。然後，學生會觀察一些範例網站（這些網站由前一個電腦科學探索課程的學生完成），以找出表達構思的方法。最後，學生會一起思考並分享可能想在個人網站中加入的主題與興趣清單，讓他們可在單元進行中時參考，從而獲得靈感構思。
            Intro to HTML:
              name: HTML 簡介
              description_student: 本課堂介紹以 HTML 做為解決方案，解決如何把網站內容與結構傳達給電腦的問題。課堂開始時，首先會進行簡短的不插電活動，展示有效與網頁的結構通訊時的挑戰。班級同學會在 Web Lab 中觀看一個 HTML 網頁，並討論 HTML 標籤如何協助解決這個問題，然後再使用 HTML 編寫單元中的第一個網頁。
              description_teacher: 在本課堂中，學生會學習以 HTML 做為解決方案，解決如何把網站內容與結構傳達給電腦的問題。課堂開始時，首先會進行簡短的不插電活動，展示有效與網頁的結構通訊時的挑戰。學生會在 Web Lab 中觀看一個 HTML 範例網頁，並與同學討論 HTML 標籤如何協助解決這個問題。之後，學生便會編寫第一個 HTML 網頁。總結討論可協助鞏固學生在課堂中，對內容與結構比較的瞭解。
            Headings:
              name: 標題
              description_student: 本課堂會繼續介紹 HTML 標籤，這次會介紹 header。班級會練習使用 header 標籤建立頁面與區域標題，並學習不同的 header 元素在預設下如何顯示。然後，班級同學便會計畫如何在個人網頁中組織內容（這些網頁會在單元內逐步建立），並開始專案的首頁。
              description_teacher: 在本課堂中，學生會繼續使用 HTML 構築網頁上的文字，這次則會製作標題（heading）。學生會學習不同的標題元素在預設下如何顯示，並練習使用這些元素建立頁面與區域標題。然後，學生會開始決定如何在自己的網頁中組織內容。在最後一個關卡中，學生會開始製作專案，並會在整個單元中繼續製作。
            Digital Footprint:
              name: 數位足跡
              description_student: 本課堂會暫停建立個人網站，用來解說大眾選擇以數位分享的個人資訊。班級學生首先會討論有哪些類型的資訊可與他人分享，然後瀏覽一些範例社交媒體頁面，瞭解有哪些類型的個人資訊可能會有意或無意地分享出去。最後，學生會制定一套指引，並在資訊上線遵從這些指引。
              description_teacher: |-
                學生最近已花了一些時間，思考有哪些實際內容會放在個人網站上。現在本課堂會暫停製作橫跨整個單元的專案（發佈個人網站），以協助學生說明自己會選擇以數位形式分享哪些個人資訊，以及向哪些人分享。課堂也會強調，他們選擇以數位形式分享的很多資訊，很大程度在發佈後已無法受自己控制。\\r
                \\r
                學生首先會各自找出合適的受眾，意指學生向這些受眾分享定特的個人資訊時會感到自在。然後，他們會瀏覽一些社交媒體頁面，以判斷大眾會分享關於自己或別人的哪些類型資訊。最後學生會反思一下，認為在線上張貼資訊時應遵守哪些指引。\\r
                \\r
                本課堂的最終要點不是要嚇怕學生，而是以實驗的性質讓學生準確瞭解，他們在線上發佈資訊後無法控制資訊的程度。
            Lists:
              name: 清單
              description_student: 本課堂介紹有序與無序清單，以及相關的 \<ul>、\<ol> 與 \<li> HTML 標籤。班級裡的學生會練習使用標籤，然後回到個人網頁專案中加入新的 HTML 頁面，頁面內包含這些新標籤。
              description_teacher: 學生會學習 HTML 中的有序與無序清單，並完成數個關卡，他們會在關卡裡使用 \<ul>、\<ol> 與 \<li> 標籤。然後他們會返回自己的專案，並加入新的 HTML 頁面。在新頁面中，學生會編寫 HTML，以顯示食譜、「十大」名單，或是使用剛學到的標籤顯示任何其他內容。
            Intellectual Property and Images:
              name: 知慧財產權與圖像
              description_student: 本課堂會說明怎樣在網站內，使用其他人製作的媒體（例如圖像、影片或音樂），同時尊重相關媒體創作者的權利。學習創用 CC（Creative Commons）授權後，班級同學便會學習怎樣把圖像加入網頁上，以及在加入圖像時如何給予適當的姓名標示。
              description_teacher: |-
                班級首先會討論自己的個人意見，說明其他人應怎樣獲得自己的同意使用自己的作品，然後探索著作權（Copyright）之目的，以及其對創意內容創作者和使用者的作用。之後，學生便會開始一項活動，瞭解不同的 Creative Commons 授權，做為難以處理著作權問題的解決方案。

                最後，學生在一致瞭解不同 Creative Commons 授權的限制後，便會學習怎樣使用 \<img> 標籤，把影像加入自己的網頁中。
            Clean Code and Debugging:
              name: 乾淨代碼和偵錯調試
              description_student: 本課堂教導在設計 HTML 網頁時出現的常見問題。班級學生會在一系列越來越複雜的網頁（在 Code Studio 上提供）中修正錯誤，並學習註解（comment）、白色空間（whitespace）與縮排（indentation）在製作網頁時的重要性：這些是讓讀者更易閱讀網頁內容的工具。
              description_teacher: 學生會處理一些在設計 HTML 網頁時出現的常見問題。他們會在一系列越來越複雜的網頁中修正錯誤。在過程中，他們會學習註解（comment）、白色空間（whitespace）與縮排（indentation）在製作網頁時的重要性：這些是讓讀者更易閱讀網頁內容的工具。在課堂結束時，學生會制定策略清單，用於為網頁除錯，並確保內容易於閱讀與維護。
            Project - Multi-Page Websites:
              name: 專案 - 多頁式網站
              description_student: 本課堂會說明超連結（hyperlink），這項功能可讓網頁開發人員將不同的頁面連結至一個網站。班級同學會把所有先前建立的頁面連結至一個專案，並為每頁建立導覽列，然後再把整個網站發佈到 Web 上。
              description_teacher: |-
                學習怎樣互相連結網頁後，學生最終將能夠發佈一直以來製作的網站。在本課堂中，學生會把所有先前建立的頁面連結至一個專案、建立新頁面，並為不同頁面建立導覽列，然後再把整個網站發佈到 Web 上。\\r
                \\r
            Styling Text with CSS:
              name: 透過 CSS 修改文字樣式
              description_student: 本課堂會介紹以 CSS 做為修改頁面元素樣式的方法。班級學生會學習 CSS 規則集的基本語法，然後瞭解會影響 HTML 文字元素的屬性。最後，所有學生都會把文字樣式套用至自己的個人網站。
              description_teacher: |-
                本課堂會介紹以 CSS 做為修改頁面元素樣式的方法。學生會學習 CSS 規則集的基本語法，然後瞭解會影響 HTML 文字元素的屬性。他們會製作關於金氏世界紀錄保持者的 HTML 頁面，並在提供的頁面中加入自己的樣式。在最後一個關卡中，學生會把學到的文字元素樣式，套用至自己的個人網站。\\r
                \\r
            Styling Elements with CSS:
              name: 透過 CSS 修改元素樣式
              description_student: 本課堂會繼續介紹 CSS 樣式屬性，這次會更集中說明文字以外的元素。班級學生首先會研究並修改「世界各地的甜品」頁面上的新 CSS 樣式。然後，所有學生都會把這項知識套用至自己的個人網站中。
              description_teacher: 本課堂會繼續介紹 CSS 樣式屬性，這次會更集中說明文字以外的元素。學生在開始本課堂時，首先會瀏覽關於「世界各地的甜品」的網站。他們會研究並修改這個網站上的新 CSS 樣式，並在網站上加入自己的樣式。完成甜品頁面後，學生會套用新 CSS 屬性的知識，為自己網站做進一步的樣式修改。
            Sources and Search Engines:
              name: 來源和搜尋引擎
              description_student: 班級同學首先會完成網頁搜尋尋寶遊戲，然後再學習搜尋引擎的內部運作，並有機會搜尋怪異與不太可能存在的動物，從而加強分析技巧。
              description_teacher: 本課堂鼓勵學生以更富批判思考精神的方式，思考網頁搜尋如何運作，以及怎樣在線上找出相關且可靠的資訊。檢視討論相關影片（內容關於搜尋引擎如何運作）後，學生會搜尋一些不太可能存在的動物之資訊。他們需要分析找到的網站是否可靠，從而確認哪些動物實際上是惡作劇。
            RGB Colors and Classes:
              name: RGB 色彩與類別
              description_student: 本課堂會說明類別（Classe）與自訂色彩。班級同學首先會學習如何使用 RGB（紅、綠、藍）值指定自訂色彩，然後將這些色彩套用於使用 CSS 類別的全新「四季」網頁。使用類別後，學生便可把更多樣式加入「四季」網頁，然後運用這些技巧修改自己個人網站的樣式。
              description_teacher: 在本課堂中，學生首先會學習如何使用 RGB（紅、綠、藍）值指定自訂色彩，然後將這些色彩套用於使用 CSS 類別的全新「四季」網頁。CSS 類別可讓網頁開發人員處理希望修改樣式的元素群組，且樣式與相同類型的其他元素不同。使用類別後，學生便可把更多樣式加入「四季」網頁，然後運用這些技巧修改自己個人網站的樣式。
            Project - Personal Portfolio Website:
              name: 專案 - 個人作品網站
              description_student: 在單元的最後幾天，班級裡的同學會為自己的網站做最終修改、與同伴每兩人一組取得回饋意見、檢閱評估指標，並將最終修改放在網站上。單元結束時，所有學生都會分享自己的專案，及分享開發的方式。
              description_teacher: 學生已在單元中花上大量時間製作自己的個人網站。在最後兩天，學生會為自己的網站做最終修改。他們會與同伴每兩人一組取得回饋意見、將最終修改放在網站上、檢閱評估指標並反思工作流程。單元結束時，學生會分享自己的專案，及概述他們獲得最終設計的流程。
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
            Intellectual Property:
              name: 知識產權
            Project - Planning Layout and Style:
              name: 專案 - 計畫佈局與樣式
            Project - Building a Webpage:
              name: 專案 — 製作網頁
            Purpose of a  Websites:
              name: 網站的目的
            Images:
              name: 圖像
            Exploring Web Pages:
              name: 瀏覽網頁
            Searching and Research:
              name: 搜索與研究
            Sources and Research:
              name: 資料來源與研究
            Team Problem Solving:
              name: 團隊問題解決
            Wireframes and Planning:
              name: 線框稿與計畫
            Linking Pages:
              name: 鏈接頁面
            Planning a Multi-page Website:
              name: 規劃多頁網站
            Linking and Navigation:
              name: 鏈接與導航
            Peer Review and Final Touches:
              name: 同儕審查與最後修訂
            Project - Website for a Purpose:
              name: 專案 - 為達成目的而製作網站
          student_description: 在單元 2 中，你會學習如何在自己的網頁中製作並分享內容。決定你想與全世界分享哪些內容後，便會學習怎樣使用 HTML 與 CSS 構築自己的網頁。你也會練習各種寶貴的程式設計技巧，例如除錯與寫下註解。在單元結束時，你將可製作出屬於自己的個人網站，並可在網際網路上發佈。
        csd3-pilot:
          description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
          lesson_groups:
            csd3_1:
              display_name: 第 1 章：圖像和動畫
            csd3_2:
              display_name: 第 2 章：創建遊戲
            cspSurvey:
              display_name: 問卷
          lessons:
            Programming for Entertainment:
              name: 娛樂用途的程式設計
              description_student: 班級裡的學生需要考慮沉悶與個人表達等「問題」，並反思他們會怎樣在自己的生活中處理這些問題。然後，他們會瞭解整體的電腦科學與具體的程式設計，如何協助展示出特定的娛樂形式或做為自我表現的工具。
              description_teacher: 學生需要考慮沉悶與個人表達等「問題」，並反思他們會怎樣在自己的生活中處理這些問題。然後，學生會瞭解整體的電腦科學與具體的程式設計，如何協助展示出特定的娛樂形式或做為自我表現的工具。
            Plotting Shapes:
              name: 幾何繪圖
              description_student: 學生會接受各種挑戰：說明如何以圖形來繪圖，以及在 Game Lab 中使用一種工具，該工具可介紹與何處理這種問題。暖身活動可快速展示在說明位置時的挑戰，而活動中也會提供一些共享的參照點。在主要活動中，學生會學習一款 Game Lab 工具，讓他們以互動方式將圖形放在 Game Lab 的 400 x 400 方格內。然後學生輪流指示同伴如何使用這款工具繪畫隱藏圖像；活動已考慮在 Game Lab 中設計程式時學生會遇到的多種挑戰。學生可選擇建立並說明自己的圖像，然後再進行匯報討論。
              description_teacher: 學生會接受各種挑戰：說明如何以圖形來繪圖，以及在 Game Lab 中使用一種工具，該工具可介紹與何處理這種問題。暖身活動可快速展示在說明位置時的挑戰，而活動中也會提供一些共享的參照點。在主要活動中，學生會學習一款 Game Lab 工具，讓他們以互動方式將圖形放在 Game Lab 的 400 x 400 方格內。然後學生輪流指示同伴如何使用這款工具繪畫隱藏圖像；活動已考慮在 Game Lab 中設計程式時學生會遇到的多種挑戰。學生可選擇建立並說明自己的圖像，然後再進行匯報討論。
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
              description_student: 班級同學會學習 Game Lab 簡介。Game Lab 是本單元的程式設計環境，並會開始將其用於在畫面上為圖形定位。課堂會說明序列與除錯基礎，以及少量簡單命令。在課堂結束時，班級同學會依據前一個課堂中設計的圖像，建立圖像的線上版本。
              description_teacher: 同學會學習 Game Lab 簡介。Game Lab 是本單元的程式設計環境，並會開始將其用於在畫面上為圖形定位。他們會學習序列與除錯基礎，以及少量簡單命令。在課堂結束時，同學將能夠以程式設計方式製作圖像，外觀與前一個課堂中使用繪圖工具製作的圖像相類似。
            Shapes and Randomization:
              name: 圖形與隨機化
            Variables:
              name: 變數
              description_student: 本課堂會介紹變數，做為在程式中標記數字的方式，或儲存隨機產生的值。班級開始課堂時，首先會學習變數使用目的之基本說明，並練習使用新積木。然後，班級同學會使用變數儲存隨機數字，讓程式能夠多次使用同一個隨機數字。
              description_teacher: 在本課堂中，學生會學習如何在自己的程式中使用變數標記數字，或儲存隨機產生的值。學生會學習變數使用目的之基本說明。然後，學生會完成關卡進展， 以加深瞭解變數模型做為標記或命名數字的方式。學生會使用變數儲存隨機數字，從而看到變數會實際儲存數值，讓他們可在程式中多次使用同一個隨機數字。
            Sprites:
              name: 角色
              description_student: 為了製作更有趣與細緻的圖像，班級中的學生會學習角色（Sprite）物件。每個角色都可獲分配一個圖像用於顯示，而角色也可記錄自己的多個值 - 這種做法在隨後製作動畫時能夠用到。在課堂結束時，每位學生都會使用角色建立場景。
              description_teacher: 為了製作更有趣與細緻的圖像，學生會學習角色（Sprite）物件。每個角色都可獲分配一個圖像用於顯示，而角色也可記錄自己的多個值 - 這種做法在隨後製作動畫時能夠用到。
            The Draw Loop:
              name: draw（繪圖）迴圈
              description_student: 本課堂會介紹 draw（繪圖）迴圈，這是 Game Lab 中的其中一種核心程式設計範式（Paradigm）。班級學生會把 draw 迴圈與隨機數字結合，以產生由點組成的簡單動畫，然後再產生由角色組成的動畫。之後，所有學生都會使用所學到的知識，更新前一個課堂的角色場景。
              description_teacher: 在本課堂中，學生會學習介紹 draw（繪圖）迴圈，這是 Game Lab 中的其中一種核心程式設計範式（Paradigm）。課堂開始時，學生會觀看一些手翻動畫書，瞭解多個圖像放在不同的畫格，可產生動作效果。然後，學生會觀看影片，瞭解 Game Lab 中的 draw 迴圈如何協助在自己的程式中呈現相同的效果。學生會把 draw 迴圈與隨機數字結合，以產生由點組成的簡單動畫，然後再產生由角色組成的動畫。在課堂結束時，學生會使用所學到的知識，更新前一個課堂的角色場景。
            The Counter Pattern Unplugged:
              name: 計數器模式（不插電）
              description_student: 本不插電課堂說明變數的基本行為。班級學生會使用記事卡與字串模擬程式內的變數，以實作一些簡短程式。熟悉這種程式語法後，班級學生便會使用相同流程與角色屬性，追蹤角色在螢幕上的進展。
              description_teacher: 學生會在不插電活動中，瞭解變數的基本行為。學生會使用記事卡與字串模擬程式內的變數，以實作一些簡短程式。熟悉這種程式語法後，學生便會使用相同流程與角色屬性，追蹤角色在螢幕上的進展。
            Sprite Movement:
              name: 角色動作
              description_student: 班級學生會合併 Draw（繪圖）迴圈與計數器模式，並編寫程式讓畫面上的角色移動，以及把其他角色屬性動畫化。
              description_teacher: 學生會合併 Draw（繪圖）迴圈與計數器模式，並編寫程式讓畫面上的角色移動，以及把其他角色屬性動畫化。
            Booleans Unplugged:
              name: 布林值（Boolean）（不插電）
              description_student: 本課堂介紹布林值（boolean）與邏輯，以及條件式（conditional）陳述句。班級課堂開始時，學生首先會玩一款簡單的「站起、坐下」遊戲。在遊戲中，布林值（true/false）陳述句用於描述個人屬性（頭髮或眼睛顏色、衣著類型等）。然後，班級同學將依據越來越複雜的布林值陳述句將物件分組，並觀察條件式可怎樣影響程式的流程。
              description_teacher: |-
                在本課堂中，學生會學習布林值（boolean）與邏輯，以及條件式（conditional）陳述句。班級課堂開始時，學生首先會玩一款簡單的「站起、坐下」遊戲。在遊戲中，布林值（true/false）陳述句用於描述個人屬性（頭髮或眼睛顏色、衣著類型等）。這樣，學生就可思考怎樣以二元問題（只有兩個答案），把可能有多個值（例如年齡）的屬性放進框架中。

                然後，學生將會收到一組物件，其物理性質相似但有所差異。學生會與同伴一起，依據越來越複雜的布林值陳述句把該等物件分組，其中包括帶 AND 與 OR 的複合布林值。

                最後，我們會揭曉以條件式做為決策工具，或使用布林值陳述句做為輸入，以影響程式流程。
            Conditionals:
              name: 條件判斷（Conditionals）
              description_student: 班級裡的學生首先會使用布林值，比較某個角色屬性目前的值和目標值，並以這種比較方式判斷角色何時達到畫面的某一點、放大至指定大小，或是以計數器模式達到某個值。學生在直接使用布林值調查值或角色屬性後，便會把條件式 if 陳述句加入編寫的程式碼中，以回應該等布林值的比較。
              description_teacher: 學生首先會使用布林值，比較某個角色屬性目前的值和目標值，並以這種比較方式判斷角色何時達到畫面的某一點、放大至指定大小，或是以計數器模式達到某個值。學生在直接使用布林值調查值或角色屬性後，便會把條件式 if 陳述句加入編寫的程式碼中，以回應該等布林值的比較。
            Keyboard Input:
              name: 鍵盤輸入
              description_student: 在前一個課堂介紹了布林值與 if 陳述句後，學生會學習名為 keyDown() 的新積木。這塊積木會返回一個布林值，並可用於條件式陳述句中，讓角色能夠在畫面上移動。在本課堂結束時，學生編寫的程式將能夠讓使用者以鍵盤輸入，控制畫面上的角色。
              description_teacher: 在前一個課堂介紹了布林值與 if 陳述句後，學生會學習名為「keyDown()」的新積木。這塊積木會返回一個布林值，並可用於條件式陳述句中，讓角色能夠在畫面上移動。在本課堂結束時，學生編寫的程式將能夠讓使用者以鍵盤輸入，控制畫面上的角色。
            Other Forms of Input:
              name: 其他輸入形式
              description_student: 班級裡的同學將繼續學習不同方式使用條件式陳述句擷取使用者輸入的內容。除了昨天學到的簡單 keyDown() 命令外，學生也會學習幾項其他鍵盤輸入命令，以及擷取滑鼠輸入的方式。
              description_teacher: 在本課堂中，學生將繼續學習不同方式使用條件式陳述句擷取使用者輸入的內容。除了昨天學到的簡單「keyDown()」命令外，學生也會學習幾項其他鍵盤輸入命令，以及擷取滑鼠輸入的方式。
            Project - Interactive Card:
              name: 專案 - 互動式卡片
              description_student: 在第 1 章的本累積專案中，班級同學會計畫並開發互動賀卡，他們會使用至今學到的全部程式設計技巧。
              description_teacher: 在第 1 章的本累積專案中，學生會計畫並開發互動賀卡，他們會使用至今學到的全部程式設計技巧。
            Velocity:
              name: 速度
              description_student: 在簡短回顧計數器模式如何用於移動角色後，班級同學便會學習屬性，從而直接設定移動速度與旋轉速度。學生以不同方式使用新屬性，就能夠熟習所需技巧，製作出基本的橫向捲軸遊戲。
              description_teacher: 簡短回顧在先前的課堂中如何使用計數器模式移動角色後，學生便會學習屬性，從而直接設定移動速度與旋轉速度。學生以不同方式使用新屬性，就能夠熟習所需技巧，製作出基本的橫向捲軸遊戲。
            Collision Detection:
              name: 碰撞檢測
              description_student: 班級中的學生會學習電腦上的碰撞偵測。學生會每 2 人一組，學習電腦可怎樣使用角色的位置與大小屬性和數學，偵測兩個角色是否互相接觸。然後，班級同學會使用 isTouching() 積木，建立角色碰撞時的不同效果，包括播放聲音。最後，學生會應用學到的新技巧，改良前一個課堂中開始製作的橫向捲軸遊戲。
              description_teacher: 學生會學習電腦上的碰撞偵測。學生會每 2 人一組，學習電腦可怎樣使用角色的位置與大小屬性和數學，偵測兩個角色是否互相接觸。然後，班級同學會使用「isTouching()」積木，建立角色碰撞時的不同效果，包括播放聲音。最後，學生會應用學到的新技巧，改良前一個課堂中開始製作的橫向捲軸遊戲。
            Complex Sprite Movement:
              name: 複合角色動作
              description_student: 班級會學習合併角色的速度屬性和計數器模式，以製作更複雜的角色移動，例如模擬重力、讓角色跳躍，以及讓角色左右漂浮。在最後的關卡中，學生會合併這些動作，讓單一個角色移動並控制該角色，然後製作簡單遊戲，遊戲角色需要四處漂浮收集金幣。
              description_teacher: 學生會學習合併角色的速度屬性和計數器模式，以製作更複雜的角色移動。具體而言，學生會學習如何模擬重力、讓角色跳躍，以及讓角色左右漂浮。在 Code Studio 進展的最後關卡中，學生會合併這些動作，讓單一個角色移動並控制該角色，然後製作簡單遊戲，遊戲角色需要四處漂浮收集金幣。課堂鼓勵學生在最後關卡中加入屬於自己的內容。
            Collisions:
              name: 碰撞
              description_student: 班級同學會為角色設計程式，從而以全新方式互動。在簡短回顧先前如何使用 isTouching 積木後，學生便會一起思考其他方法讓兩個角色互動。然後學生會使用 isTouching，讓一個角色在畫面中推動另一個角色，之後再練習 4 種碰撞積木（collide、displace、bounce 與 bounceOff）。
              description_teacher: 學生會為角色設計程式，從而以全新方式互動。在簡短回顧先前如何使用「isTouching」積木後，學生便會一起思考其他方法讓兩個角色互動。然後學生會使用「isTouching」，讓一個角色在畫面中推動另一個角色，之後再練習 4 種碰撞積木（「collide」、「displace」、「bounce」與「bounceOff」）。
            Functions:
              name: 函式
              description_student: 本課堂會說明以函式 function 做為方式，以組織程式碼、讓程式碼更易讀懂，並移除重複的程式碼積木。班級裡的學生會學到，更高級別或更抽象的步驟，可讓我們更容易瞭解及思考各步驟，然後學生便會開始在 Game Lab 中建立函式。在課堂結束時，學生會運用這些技巧，組織橫向捲軸遊戲的最終版本，以及再加入其他功能。
              description_teacher: 學生會學習如何建立函式，以組織程式碼、讓程式碼更易讀懂，並移除重複的程式碼積木。不插電暖身活動用於探討不同細緻級別的移動可以有所用處，視當時情況而定。學生將會學到，更高級別或更抽象的步驟，可讓我們更容易瞭解及思考各步驟，然後學生便會開始學習在 Game Lab 中建立函式。他們會使用函式，從 draw 迴圈中移除冗長的程式碼積木，並以單一條函式取代重複的程式碼。在課堂結束時，學生會運用這些技巧，組織橫向捲軸遊戲的最終版本，以及再加入其他功能。
            The Game Design Process:
              name: 遊戲設計流程
              description_student: 本課堂會介紹相關流程，班級裡的學生將會在單元的餘下部分，使用這個流程設計遊戲。學生會在不同的關卡中瞭解這項流程。做為本課堂的一部分，班級同學也會學習在 Game Lab 中使用多畫格的動畫。在課堂結束時，他們將有機會改良遊戲，使之成為自己的作品。
              description_teacher: 本課堂會向學生介紹相關流程，他們將會在單元的餘下部分，使用這個流程設計遊戲。這項流程會以一個專案指南為中心，指南中會要求學生定義其角色、變數與函式，然後才開始為遊戲設計程式。在本課堂中，學生首先會在 Game Lab 中玩一款遊戲，遊戲期間程式碼會被隱藏。學生會展開討論，指出他們認為需使用哪些角色、變數與函式製作這款遊戲。學生會收到完整的專案指南，裡面會說明實作遊戲的一種方式。然後，學生會在不同的關卡中瞭解這項流程。做為本課堂的一部分，學生也會簡短地學習在 Game Lab 中使用多畫格的動畫。在課堂結束時，學生將有機會改良遊戲，使之成為自己的作品。
            Using the Game Design Process:
              name: 使用遊戲設計流程
              description_student: 在這個分為多天進行的課堂中，班級學生會使用單元 1 的問題解決流程，製作平台跳躍遊戲。觀察範例遊戲後，同學便會定義自己的遊戲看起來會怎樣，並使用結構化流程製作遊戲。最後，班級會反思可怎樣改良遊戲，並實作這些變更。
              description_teacher: 在這個分為多天進行的課堂中，學生會使用單元 1 的問題解決流程，製作平台跳躍遊戲。他們首先會觀察一款平台跳躍範例遊戲，然後定義自己的遊戲看起來會怎樣。接著，學生便會使用結構化流程，規畫實作遊戲時需要的背景、變數、角色和函式。為遊戲編寫程式碼後，學生會反思可怎樣改良遊戲，並實作這些變更。
            Project - Design a Game:
              name: 專案 - 設計一個遊戲
              description_student: 班級學生會使用上兩個課堂的專案指南，計畫並製作原創遊戲。同學會分為兩人一組，然後規畫、開發遊戲，並為遊戲提供回饋意見。納入同伴的回饋後，同學便會分發完成的遊戲。
              description_teacher: 學生會計畫並製作自己的遊戲，這時候他們會使用上兩個課堂的專案指南引導製作專案。學生會分為兩人一組，首先決定希望製作的遊戲類型，並以一些範例遊戲做為創作靈感。然後，他們會完成空白的專案指南，說明遊戲的行為，並瞭解需要建立的變數、角色與函式。在 Code Studio 中，會有一些關卡提示學生可使用哪項一般序列實作自己的計畫。在流程的途中，學生會分享自己的專案作品供同儕審查，並在完成遊戲時納入其他同學的回饋意見。在課堂結束時，學生會向同學分享完成的遊戲。此專案會覆延伸至數個課節，且可能很容易便會分為 3-5 個課節。
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
            Random Numbers:
              name: 隨機取數
            Sprites and Animations:
              name: 角色與動畫
            Create a Scene:
              name: 製作場景
            Text and Captioned Scenes:
              name: 文字與字幕場景
          student_description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
        csd-bugs:
          title: 程式錯誤範例（供 CSD 教師閱覽）
          lessons:
            Game Lab Bugs:
              name: Game Lab 程式錯誤
            Immovable Crab:
              name: 無法移動的蟹
        maddie-test:
          lessons:
            stage 1:
              name: 舞台 1
            new stage:
              name: 新的階段
        csp3-pilot:
          title: CSP 單元 3 試行版 - 應用程式設計簡介
          lesson_groups:
            content:
              display_name: 內容
            required:
              display_name: 概覽
          lessons:
            Introduction to Apps:
              name: 應用程式簡介
            Project - Designing an App Part 1:
              name: 專案 - 設計應用程式 第 1 部分
            Project - Designing an App Part 2:
              name: 專案 - 設計應用程式 第 2 部分
            Programs Investigate:
              name: 程式研究
            Programs Practice:
              name: 編程的練習
            Project - Designing an App Part 3:
              name: 專案 - 設計應用程式 第 3 部分
            Project - Designing an App Part 4:
              name: 專案 - 設計應用程式 第 4 部分
            'Project: Share Your App':
              name: 專案：分享你的應用程式
            The Need for Programming Languages:
              name: 程式語言的需要
            'Project: Finish Your App':
              name: 專案：完成你的應用程式
            Programs Explore:
              name: 程式探索
            Unit 3 STUDENT Survey:
              name: 單元 3 學生問卷調查
            Unit 3 TEACHER Survey:
              name: 單元 3 教師問卷調查
            'Lesson 11: Unit Assessment':
              name: 課堂 11：單元評估
            'Lesson 11: Assessment Day':
              name: 課堂 11：評估日
            Project - Designing an App Part 5:
              name: 專案 - 設計應用程式 第 5 部分
            Intro to Programming:
              name: 程式設計簡介
            Debugging:
              name: 除錯
        csl-vn:
          title: 越南的計算機科學素養
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
          lessons:
            Sequencing with Scrat:
              name: 和鼠奎特一起學序列
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            Programming with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起寫程式
            Loops in Ice Age:
              name: 冰河歷險紀中的迴圈
            Ocean Scene with Loops:
              name: 海洋場景與迴圈（Loop）
            Tell a Story in Play Lab:
              name: 在 Play Lab 中說故事
        dlp19-csd-mod-fit:
          title: 電腦科學探索深入學習 2019 受訓中輔導員（FiT）模組
          description_audience: 電腦科學探索受訓中輔導員 2019
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Demonstrating Understanding:
              name: 表現出瞭解內容
            Focus Area 1:
              name: 課程
        dlp19-csp-mod-fit:
          title: 電腦科學原理深入學習 2019 受訓中輔導員（FiT）工作坊
          description_audience: CS Principles 輔導員培訓 2019
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Deeper Learning Overview:
              name: 深度學習概覽
            Understanding the Curriculum:
              name: 瞭解課程
            Demonstrating Understanding:
              name: 表現出瞭解內容
        pl-csd-bugs:
          title: CSD 工作坊 1 程式錯誤
          description_short: 在 Game Lab 中除錯 - 學年工作坊 1
          lessons:
            CSD Workshop 1 Bugs:
              name: CSD 工作坊 1 程式錯誤
        dlp19-csd-mod-w1:
          title: 電腦科學探索深入學習 2019 工作坊模組 1
          description_audience: 電腦科學探索受訓中輔導員 2019
          description_short: 學年工作坊 1
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            Module 1:
              name: 模組 1
            Step 1:
              name: 步驟1
            Step 2:
              name: 步骤2
            'Step 1: Develop Understanding':
              name: 步驟 1：學習瞭解內容
            'Step 2: Demonstrate Understanding':
              name: 步驟 2：表現出瞭解內容
            Deeper Learning Overview:
              name: 深度學習概覽
        dlp19-csd-mod-w2:
          title: 電腦科學探索深入學習 工作坊模組 2
          description_audience: 電腦科學探索受訓中輔導員 2019
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            new stage:
              name: 新的階段
            CS Discoveries Deeper Learning Module 2:
              name: 電腦科學探索深入學習 模組 2
            Deeper Learning Overview:
              name: 深度學習概覽
            'Step 1: Develop Understanding':
              name: 步驟 1：學習瞭解內容
            'Step 2: Demonstrate Understanding':
              name: 步驟 2：表現出瞭解內容
        dlp19-csd-mod-w3:
          title: 電腦科學探索深入學習 工作坊模組 3
          description_audience: 電腦科學探索受訓中輔導員 2019
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            CS Discoveries Deeper Learning Module 3:
              name: 電腦科學探索深入學習 模組 3
            Deeper Learning Overview:
              name: 深度學習概覽
            'Step 1: Develop Understanding':
              name: 步驟 1：學習瞭解內容
            'Step 2: Demonstrate Understanding':
              name: 步驟 2：表現出瞭解內容
        dlp19-csd-mod-w4:
          title: 電腦科學探索深入學習 工作坊模組 4
          description_audience: 電腦科學探索受訓中輔導員 2019
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            CS Discoveries Deeper Learning Module 4:
              name: 電腦科學探索深入學習 模組 4
            Deeper Learning Overview:
              name: 深度學習概覽
            'Step 1: Develop Understanding':
              name: 步驟 1：學習瞭解內容
            'Step 2: Demonstrate Understanding':
              name: 步驟 2：表現出瞭解內容
        dlp19-csp-mod-w1:
          title: 電腦科學原理深入學習 工作坊模組 1
          description_audience: CS Principles 輔導員培訓 2019
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            CS Principles Deeper Learning Module 1:
              name: 電腦科學原理深入學習 模組 1
            'Step 1: Develop Understanding':
              name: 步驟 1：學習瞭解內容
            'Step 2: Demonstrate Understanding':
              name: 步驟 2：表現出瞭解內容
            Deeper Learning Overview:
              name: 深度學習概覽
        dlp19-csp-mod-w2:
          title: 電腦科學原理深入學習 工作坊模組 2
          description_audience: CS Principles 輔導員培訓 2019
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            CS Principles Deeper Learning Module 2:
              name: 電腦科學原理深入學習 模組 2
            Deeper Learning Overview:
              name: 深度學習概覽
            'Step 1: Develop Understanding':
              name: 步驟 1：學習瞭解內容
            'Step 2: Demonstrate Understanding':
              name: 步驟 2：表現出瞭解內容
        dlp19-csp-mod-w3:
          title: 電腦科學原理深入學習 工作坊模組 3
          description_audience: CS Principles 輔導員培訓 2019
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            CS Principles Deeper Learning Module 3:
              name: 電腦科學原理深入學習 模組 3
            Deeper Learning Overview:
              name: 深度學習概覽
            'Step 1: Develop Understanding':
              name: 步驟 1：學習瞭解內容
            'Step 2: Demonstrate Understanding':
              name: 步驟 2：表現出瞭解內容
        dlp19-csp-mod-w4:
          title: 電腦科學原理深入學習 工作坊模組 4
          description_audience: CS Principles 輔導員培訓 2019
          lesson_groups:
            required:
              display_name: 概覽
            content:
              display_name: 內容
          lessons:
            CS Principles Deeper Learning Module 4:
              name: 電腦科學原理深入學習 模組 4
            Deeper Learning Overview:
              name: 深度學習概覽
            'Step 1: Develop Understanding':
              name: 步驟 1：學習瞭解內容
            'Step 2: Demonstrate Understanding':
              name: 步驟 2：表現出瞭解內容
        csd-pilot:
          title: CSD 試行課程
          lessons:
            Pilot Information:
              name: 試行版資訊
            Pilot Information 1:
              name: 試行版資訊 1
            Pilot Information 2:
              name: 試行版資訊 2
            Pilot Information 3:
              name: 試行版資訊 3
            Pilot Information 4:
              name: 試行版資訊 4
            Pilot Information 5:
              name: 試行版資訊 5
            Pilot Information 6:
              name: 試行版資訊 6
            Pilot Information 7:
              name: 試行版資訊 7
            Pilot Information 8:
              name: 試行版資訊 8
            Pilot Information 9:
              name: 試行版資訊 9
            Pilot Information 10:
              name: 試行版資訊 10
            Pilot Information 11:
              name: 試行版資訊 11
            Pilot Information 12:
              name: 試行版資訊 12
            Pilot Information 13:
              name: 試行版資訊 13
            Pilot Information 14:
              name: 試行版資訊 14
            Pilot Information 15:
              name: 試行版資訊 15
            Pilot Information 16:
              name: 試行版資訊 16
            Pilot Information 17:
              name: 試行版資訊 17
            Pilot Information 18:
              name: 試行版資訊 18
            Pilot Information 19:
              name: 試行版資訊 19
            Pilot Information 20:
              name: 試行版資訊 20
            Pilot Information 21:
              name: 試行版資訊 21
            Pilot Information 22:
              name: 試行版資訊 22
            Pilot Information 23:
              name: 試行版資訊 23
            Pilot Information 24:
              name: 試行版資訊 24
            Pilot Information 25:
              name: 試行版資訊 25
            Pilot Information 26:
              name: 試行版資訊 26
            Pilot Information 27:
              name: 試行版資訊 27
            Pilot Information 28:
              name: 試行版資訊 28
            Pilot Information 29:
              name: 試行版資訊 29
        csd4-pilot:
          title: 電腦與問題解決
          lesson_groups:
            csd1_2:
              display_name: 第 2 章：計算機與問題解決能力
          lessons:
            What is a Computer?:
              name: 電腦是什麼？
            Input and Output:
              name: 輸入與輸出
            Processing:
              name: 處理
            Apps and Storage:
              name: 應用程式與儲存
            Project - Propose an App:
              name: 專案 - 提出應用程式建議
            Post-Project Test:
              name: 專案後測驗
        csp2-pilot:
          lesson_groups:
            content:
              display_name: 內容
            required:
              display_name: 概覽
          lessons:
            new stage:
              name: 新的階段
            Building a Network:
              name: 建立網路
            IP Addresses:
              name: IP 位址
            Routers and Redundancy:
              name: 路由器與備援
            Packets:
              name: 封包
            The Growing Internet:
              name: 不斷狀大的網際網路
            Internet Dilemmas pt 1:
              name: 網際網路困境 第 1 部分
            Internet Dilemmas, pt 2:
              name: 網際網路困境 第 2 部分
            Unit 2 Assessment:
              name: 單元 2 評估
            Unit Assessment:
              name: 單元評估
            'Lesson 8: Unit Assessment':
              name: 課程 8：單元評估
            Unit 2 STUDENT Survey:
              name: 單元 2 學生問卷調查
            Unit 2 TEACHER Survey:
              name: 單元 2 教師問卷調查
            DNS and HTTP:
              name: DNS 與 HTTP
            Welcome to the Internet:
              name: 歡迎來到網際網路
            'Lesson 9: Assessment Day':
              name: 課堂 9：評估日
            The Need for Addressing:
              name: 定址的需要
            Project - Internet Dilemmas Part 1:
              name: 專案 - 網際網路困境 第 1 部分
            Project - Internet Dilemmas Part 2:
              name: 專案 - 網際網路困境 第 2 部分
        denny-science:
          title: 地震探測器
          lessons:
            Earthquake Detector:
              name: 地震探測器
            'Earthquake Detector: Designing Screens':
              name: 地震探測器：設計場景
            'Earthquake Detector: Processing with Events':
              name: 地震探測器：使用事件來處理
        peru-2019:
          title: 2019 年一小時玩程式（秘魯）
          lessons:
            new stage:
              name: 新的階段
            Introduction:
              name: 介紹
            Debugging in Collector:
              name: 和收藏家學除錯（Debug）
            'Loops: My Loopy Robotic Friends':
              name: 迴圈：我的愛迴圈機器人朋友
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops:
              name: 巢狀迴圈
            Nested Loops Project in Frozen:
              name: 冰雪奇緣中的巢狀迴圈（Nested Loops）
            Events in Star Wars:
              name: 星際大戰中的事件（Event）
            Introduction to Debugging:
              name: 除錯 Debug 介紹
            Nested Loops in Frozen:
              name: 冰雪奇緣中的巢狀迴圈（Nested Loop）
        csp6-pilot:
          lesson_groups:
            content:
              display_name: 內容
            required:
              display_name: 概覽
          lessons:
            Algorithms Solve Problems:
              name: 用演算法解決問題
            Algorithm Efficiency:
              name: 演算法效率
            Unreasonable Time:
              name: 不合理的執行時間
            Traveling Salesman:
              name: 旅行推銷員
            Parallel and Distributed Algorithms:
              name: 平行與分散式演算法
            The Limits of Algorithms:
              name: 演算法的限制
            Unit 6 STUDENT Survey:
              name: 單元 6 學生問卷調查
            Unit 6 TEACHER Survey:
              name: 單元 6 教師問卷調查
            'Lesson 6: Assessment Day':
              name: 課堂 6：評估日
        denny-science-8:
          title: 碰撞偵測器
          lessons:
            'Earthquake Detector: Designing Screens':
              name: 地震探測器：設計場景
            'Earthquake Detector: Processing with Events':
              name: 地震探測器：使用事件來處理
            'Collision Detector: Designing Screens':
              name: 碰撞偵測器：設計場景
            'Collision Detector: Processing with Events':
              name: 碰撞偵測器：使用事件來處理
        denny-science-copy:
          lessons:
            'Collision Detector: Designing Screens':
              name: 碰撞偵測器：設計場景
            'Collision Detector: Processing with Events':
              name: 碰撞偵測器：使用事件來處理
        dance-2019:
          title: 舞蹈派對 2019
          description_short: 精選 Katy Perry、 Shawn Mendes、Panic! At The Disco、Lil Nas X、Jonas Brothers、Nicki Minaj，和其他 34 位名人！
          description: 寫個你自己的舞蹈程式，並分享給朋友們！
          lessons:
            Dance Party:
              name: 舞蹈派對 2019
              description_student: 在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。
              description_teacher: 在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。
          student_description: 寫個你自己的舞蹈程式，並分享給朋友們！
        k5-onlinepd-2019:
          title: 計算機科學基礎的教授
          description: 使用 Code.org 的電腦科學基礎 - 免費的自訂進度線上課程，學習怎樣教授電腦科學！
          lesson_groups:
            k5_getting_started:
              display_name: 新手上路
            k5_basic_concepts:
              display_name: 基本編程概念和教學練習
            k5_diving_deeper:
              display_name: 深造：課程 E 和 F
            k5_next_steps:
              display_name: 下一步
          lessons:
            Getting Started:
              name: 新手上路
            Computer Science Fundamentals:
              name: 計算機科學基礎
            Looking Ahead:
              name: 展望未來
            'Mastering the Basics: Sequencing':
              name: 掌握基本知識：序列（Sequencing）
            'Mastering the Basics: Loops':
              name: 掌握基本知識：迴圈（Loops）
            'Mastering the Basics: Conditionals':
              name: 掌握基本知識：條件判斷（Conditionals）
            'Mastering the Basics: Functions':
              name: 掌握基本知識：函式（Functions）
            'Mastering the Basics: Events':
              name: 掌握基本知識：事件（Evnets）
            Best Practices for Teaching Computer Science:
              name: 教授計算機科學的最佳實踐
            Planning:
              name: 計畫
            Next Steps:
              name: 下一步
            Understanding the Computer Science Fundamentals Courses:
              name: 瞭解計算機科學基礎課程
            extra:
              name: 額外
            Welcome to this online course:
              name: 歡迎來到這個線上課程
            Understanding the Computer Science Fundamentals courses:
              name: 瞭解計算機科學基礎課程
            Best practices for teaching computer science:
              name: 為教師準備的計算機科學最佳實踐
            Sequencing:
              name: 序列
            Loops:
              name: 迴圈
            Conditionals:
              name: 條件判斷（Conditionals）
            Events:
              name: 事件
            Functions:
              name: 函式
            Diving Deeper:
              name: 深造
            Next steps:
              name: 下一步
            Diving deeper:
              name: 深造
            Diving deeper (for Courses E and F):
              name: 深造（課程 E 和 F）
            Welcome to "Teaching Computer Science Fundamentals":
              name: 歡迎來到「教授計算機科學基礎」
            Diving Deeper (for Courses E and F):
              name: 深造（課程 E 和 F）
            'Diving Deeper: Courses E and F':
              name: 深造：課程 E 和 F
            Sprite Lab:
              name: Sprite Lab
            Variables:
              name: 變數
            For Loops:
              name: 計次迴圈（For Loops）
            End-of-course projects:
              name: 課程結束專案
            Who is this section for?:
              name: 這個部分為誰而設？
            Reviewing reflections:
              name: 檢閱反思
            Reviewing your reflections:
              name: 檢閱你的反思
            End of Course projects:
              name: 課程結束專案
          student_description: 使用 Code.org 的電腦科學基礎 - 免費的自訂進度線上課程，學習怎樣教授電腦科學！
        dance-extras-2019:
          title: 繼續跳舞 2019
          description: 在一小時之後嘗試更多奇思妙想。
          description_short: 跳出一小時玩程式活動 - 參加這項 Code.org 舞蹈派對教程的跟進活動。
          lessons:
            Dance Party - Go Further:
              name: 舞蹈派對 - 深入學習
          student_description: 在一小時之後嘗試更多奇思妙想。
        csp10-pilot:
          title: 網路安全與全球影響
          lessons:
            new stage:
              name: 新的階段
            'Project: Innovation Simulation Part 1':
              name: 專案：創新模擬 第 1 部分
            'Project: Innovation Simulation Part 2':
              name: 專案：創新模擬 第 2 部分
            Security Risks Part 1:
              name: 安全風險第 1 部分
            Security Risks Part 2:
              name: 安全風險第 2 部分
            Data Policies and Privacy:
              name: 資料政策與隱私
            The Value of Privacy:
              name: 隱私的價值
            'Project: Innovation Simulation Part 3':
              name: 專案：創新模擬 第 3 部分
            Protecting Data Part 1:
              name: 保護資料第 1 部分
            Protecting Data Part 2:
              name: 保護資料第 2 部分
            'Lesson 14: Unit Assessment Day':
              name: 課堂 14：單元評估日
            'Project: Innovation Simulation Part 4':
              name: 專案：創新模擬 第 4 部分
            'Project: Innovation Simulation Part 5':
              name: 專案：創新模擬 第 5 部分
            'Project: Innovation Simulation Part 6':
              name: 專案：創新模擬 第 6 部分
            'Project: Innovation Simulation Part 7':
              name: 專案：創新模擬 第 7 部分
            Project - Innovation Simulation Part 1:
              name: 專案 - 創新模擬 第 1 部分
            Project - Innovation Simulation Part 2:
              name: 專案 - 創新模擬 第 2 部分
            Project - Innovation Simulation Part 3:
              name: 專案 - 創新模擬 第 3 部分
            Project - Innovation Simulation Part 4:
              name: 專案 - 創新模擬 第 4 部分
            Project - Innovation Simulation Part 6:
              name: 專案 - 創新模擬 第 6 部分
            Project - Innovation Simulation Part 7:
              name: 專案 - 創新模擬 第 7 部分
        csp4-preview:
          title: CSP 預覽：變數（Variable）、條件式（Conditional）與函式（Function）
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
          lessons:
            new stage:
              name: 新的階段
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Practice PT Part 1:
              name: PT 練習 第 1 部分
            Practice PT Part 2:
              name: PT 練習 第 2 部分
            Practice PT Part 3:
              name: PT 練習 第 3 部分
            'Lesson 15: Unit 4 Assessment':
              name: 課堂 15：單元 4 評估
            'Lesson 15: Assessment Day':
              name: 課堂 15：評估日
        time4cs-original-unit-1:
          title: Time4CS 原始單元 1
          lessons:
            Sequencing in Maze:
              name: 迷宮中的陣列（Sequence）
            Programming and Loops with the Artist:
              name: 用藝術家設計程式並練習迴圈（Loop）
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Minecraft 中的條件式：水上巡航 '
            Conditionals:
              name: 條件判斷（Conditionals）
            'Events: The Big Event':
              name: 事件：大事件
            Simon Says:
              name: 老師說
            Learning Sprites with Sprite Lab:
              name: 在 Sprite Lab 中學習角色（Sprite）
            Alien Dance Party with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
            Private and Personal Information:
              name: 隱私與個人資訊
            About Me:
              name: 關於我
            Access Ability:
              name: 輔助功能
            Conditionals Review:
              name: 條件式（Conditional）複習
            Drawing with Loops:
              name: 以迴圈（Loop）繪畫
        time4cs-control-unit-2:
          title: Time4CS 控制單元 2
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            csf_nested_loops:
              display_name: 巢狀迴圈
            csf_functions:
              display_name: 函式
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
            Nested Loops in Bee:
              name: 蜜蜂裡的巢狀迴圈（Nested Loops）
            Nested Loops in Artist:
              name: 小藝術家裡的巢狀迴圈（Nested Loops）
            Nested Loops in Frozen:
              name: 冰雪奇緣中的巢狀迴圈（Nested Loop）
            'Functions: Songwriting':
              name: 函式：作曲
            Functions in Minecraft:
              name: Minecraft 中的函式
            Functions in Harvester:
              name: 收割者遊戲中的函式（Function）
            Functions in Artist:
              name: 藝術家遊戲中的函式（Function）
            End of Course Project:
              name: 課程結束專案
            Nested Loops in the Maze:
              name: 迷宮裡的巢狀迴圈（Nested Loop）
        time4cs-experiment-unit-2:
          title: Time4CS 實驗單元 2
          description_short: "[加入說明]"
          description: "[加入說明]"
          lesson_groups:
            time4cs_c1:
              display_name: 系列 1：佛羅里達大沼澤地和生態系統
            time4cs_c2:
              display_name: 系列 2：食物鏈（佛羅里達大沼澤地）
            time4cs_c3:
              display_name: 系列 3：原生物種（佛羅里達大沼澤地）
            time4cs_c4:
              display_name: 系列 4：入侵物種的影響（佛羅里達大沼澤地）
            time4cs_c5:
              display_name: 系列 5：市民來採取行動
          lessons:
            Introduction to the Problem:
              name: 問題簡介
            Crowdsourcing (Integrated lesson):
              name: 群眾外包（整合版）
            Everglades Habitats:
              name: 大沼澤地棲息地
            Evaluating a Project in Sprite Lab:
              name: 評估 Sprite Lab 中的專案
            Food Chains:
              name: 食物鏈
            Conditionals with Cards (Integrated Lesson)- Part 1:
              name: 用撲克牌學習條件式（Conditional）（整合課堂）- 第 1 部分
            Alligator Holes:
              name: 鱷魚洞
            Food Chain Game:
              name: 食物鏈遊戲
            Invasive Species:
              name: 入侵物種
            Conditionals with Cards (Integrated Lesson)- Part 2:
              name: 用撲克牌學習條件式（Conditional）（整合課堂）- 第 2 部分
            I am in Big Trouble:
              name: 我遇上大麻煩了！
            Conditionals in Sprite Lab:
              name: Sprite Lab 中的條件式（Conditional）
            Nested Loops in Maze:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
            Nested Loops with Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
            Fishy Business:
              name: 漁業
            Songwriting (Integrated Lesson):
              name: 作曲（整合版）
            Functions in Minecraft:
              name: Minecraft 中的函式
            Functions with Harvester:
              name: 在收割者遊戲中學習函式（Function）
            Functions with Artist:
              name: 在藝術家遊戲中使用函式（Function）
            Pythons impacting native populations:
              name: 蟒蛇影響原生物種數量
            Functions in Sprite Lab:
              name: Sprite Lab 中的函式（Function）
            Python Problem- Current Solutions:
              name: 蟒蛇問題- 目前的解決方案
            End of Course Project (integrated- project planning lesson):
              name: 課程結束專案（整合式專案計畫課堂）
            Debate- Pythons impacting native populations:
              name: 辯論- 蟒蛇影響原生物種數量
            Work on Project:
              name: 製作專案
          student_description: "[加入說明]"
        time4cs-control-unit-1:
          title: Time4CS 控制單元 1
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            csf_events:
              display_name: 事件
            csf_sprites:
              display_name: 角色
            csf_digcit:
              display_name: 數位公民
            csf_impacts:
              display_name: 運算的影響
            ramp_up:
              display_name: 提升
          lessons:
            Sequencing in Maze:
              name: 迷宮中的陣列（Sequence）
            Programming and Loops with the Artist:
              name: 用藝術家設計程式並練習迴圈（Loop）
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Minecraft 中的條件式：水上巡航 '
            Conditionals:
              name: 條件判斷（Conditionals）
            'Events: The Big Event':
              name: 事件：大事件
            Simon Says:
              name: 老師說
            Learning Sprites with Sprite Lab:
              name: 在 Sprite Lab 中學習角色（Sprite）
            Alien Dance Party with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
            Private and Personal Information:
              name: 隱私與個人資訊
            About Me:
              name: 關於我
            Access Ability:
              name: 輔助功能
            Conditionals Review:
              name: 條件式（Conditional）複習
        time4cs-experiment-unit-1:
          title: Time4CS 實驗單元 1
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            csf_events:
              display_name: 事件
            csf_sprites:
              display_name: 角色
            csf_digcit:
              display_name: 數位公民
            csf_impacts:
              display_name: 運算的影響
            ramp_up:
              display_name: 提升
          lessons:
            Sequencing in Maze:
              name: 迷宮中的陣列（Sequence）
            Programming and Loops with the Artist:
              name: 用藝術家設計程式並練習迴圈（Loop）
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Minecraft 中的條件式：水上巡航 '
            Conditionals:
              name: 條件判斷（Conditionals）
            'Events: The Big Event':
              name: 事件：大事件
            Simon Says:
              name: 老師說
            Learning Sprites with Sprite Lab:
              name: 在 Sprite Lab 中學習角色（Sprite）
            Alien Dance Party with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
            Private and Personal Information:
              name: 隱私與個人資訊
            About Me:
              name: 關於我
            Access Ability:
              name: 輔助功能
            Conditionals Review:
              name: 條件式（Conditional）複習
        csp7-pilot:
          title: CSP 單元 7 試行版 - 參數（Parameter）、回傳（Return）與函式庫（Library）
          lesson_groups:
            csp_parameters_return_values:
              display_name: 參數及函數回傳值
            csp_libraries:
              display_name: 程式庫
            required:
              display_name: 概覽
            optional_stages:
              display_name: 可選階段
          lessons:
            Parameters and Returns Explore:
              name: 參數與回傳探索
            Parameters and Returns Investigate:
              name: 參數與回傳研究
            Parameters and Returns Practice:
              name: 參數與回傳練習
            Parameters and Returns Make:
              name: 參數與回傳製作
            Libraries Explore:
              name: 函式庫探索
            Libraries Investigate:
              name: 函式庫研究
            Libraries Practice:
              name: 函式庫練習
            Libraries Make:
              name: 函式庫製作
            Project - Libraries Part 1:
              name: 專案 - 函式庫 第 1 部分
            Project - Libraries Part 2:
              name: 專案 - 函式庫 第 2 部分
            Project - Libraries Part 3:
              name: 專案 - 函式庫 第 3 部分
            Assessment Day:
              name: 評估日
            Parameters and Return Explore:
              name: 參數與回傳探索
            Parameters and Return Investigate:
              name: 參數與回傳研究
            Parameters and Return Practice:
              name: 參數與回傳練習
            Parameters and Return Make:
              name: 參數與回傳製作
            Libraries Make Part 1:
              name: 函式庫製作 第 1 部分
            Libraries Make Part  2:
              name: 函式庫製作 第 2 部分
            Libraries Make Part 3:
              name: 函式庫製作 第 3 部分
            Project - Make a Library Part 1:
              name: 專案 - 製作函式庫 第 1 部分
            Project - Make a Library Part 2:
              name: 專案 - 製作函式庫 第 2 部分
            Project - Make a Library Part 3:
              name: 專案 - 製作函式庫 第 3 部分
            Variables Make Demo:
              name: 變數製作範例
            Unit 7 STUDENT Survey:
              name: 單元 7 學生調查
            Unit 7 TEACHER Survey:
              name: 單元 7 教師調查
            'Lesson 11: Assessment Day':
              name: 課堂 11：評估日
            "[OLD] Parameters and Return Make":
              name: "[舊版] 參數與回傳製作"
        csp8-pilot:
          title: CSP 單元 8 試行版 - 建立 PT 準備
          lessons:
            new stage:
              name: 新的階段
            Create PT - Review the Task:
              name: 建立 PT - 檢閱任務
            Create PT - Make a Plan:
              name: 建立 PT - 制定計畫
            Create PT - Complete the Task:
              name: 建立 PT - 完成任務
        csp4-2020:
          title: CSP 單元 4 - 變數（Variable）、條件式（Conditional）與函式（Function）('20-'21)
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
            cspSurvey2020:
              display_name: 課後調查
          lessons:
            Variables Explore:
              name: 變數探索
            Variables Investigate:
              name: 變數研究
            Variables Practice:
              name: 變數的練習
            Variables Make:
              name: 變數的建立
            Conditionals Explore:
              name: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
            Conditional Make:
              name: 條件式製作
            Functions Explore / Investigate:
              name: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
            Functions Make:
              name: 函式的建立
            Project - Decision Maker App Part 1:
              name: 專案 - 決策者應用程式 第 1 部分
            Project - Decision Maker App Part 2:
              name: 專案 - 決策者應用程式 第 2 部分
            Project - Decision Maker App Part 3:
              name: 專案 - 決策者應用程式 第 3 部分
            'Lesson 15: Assessment Day':
              name: 評估日
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        csp5-2020:
          title: CSP 單元 5 - 清單（List）、迴圈（Loop）與尋訪（Traversal）('20-'21)
          lesson_groups:
            csp_lists:
              display_name: 清單
            csp_loops:
              display_name: 迴圈
            csp_traversals:
              display_name: 尋訪
            csp_project:
              display_name: 專案
            cspSurvey2020:
              display_name: 課後調查
          lessons:
            Lists Explore:
              name: 清單探索
            Lists Investigate:
              name: 清單研究
            Lists Practice:
              name: 清單的練習
            Lists Make:
              name: 清單製作
            Loops Explore:
              name: 迴圈探索
            Loops Investigate:
              name: 迴圈研究
            Loops Practice:
              name: 迴圈的練習
            Loops Make:
              name: 迴圈製作
            Traversals Explore:
              name: 尋訪探索
            Traversals Investigate:
              name: 尋訪研究
            Traversals Practice:
              name: 遍歷的練習
            Traversals Make:
              name: 尋訪製作
            Semester Hackathon Part 1:
              name: 學期黑客松 第 1 部分
            Semester Hackathon Part 2:
              name: 學期黑客松 第 2 部分
            Semester Hackathon Part 3:
              name: 學期黑客松 第 3 部分
            Semester Hackathon Part 4:
              name: 學期黑客松 第 4 部分
            Semester Hackathon Part 5:
              name: 學期黑客松 第 5 部分
            'Lesson 18: Assessment Day':
              name: 評估日
            Unit 5 STUDENT Survey:
              name: 單元 5 學生問卷調查
            Unit 5 TEACHER Survey:
              name: 單元 5 教師問卷調查
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        csp7-2020:
          lesson_groups:
            csp_parameters_return_values:
              display_name: 參數及函數回傳值
            csp_libraries:
              display_name: 程式庫
            cspSurvey2020:
              display_name: 課後調查
          lessons:
            Parameters and Return Explore:
              name: 參數與回傳探索
            Parameters and Return Investigate:
              name: 參數與回傳研究
            Parameters and Return Practice:
              name: 參數與回傳練習
            Parameters and Return Make:
              name: 參數與回傳製作
            Libraries Explore:
              name: 函式庫探索
            Libraries Investigate:
              name: 函式庫研究
            Libraries Practice:
              name: 函式庫練習
            Project - Make a Library Part 1:
              name: 專案 - 製作函式庫 第 1 部分
            Project - Make a Library Part 2:
              name: 專案 - 製作函式庫 第 2 部分
            Project - Make a Library Part 3:
              name: 專案 - 製作函式庫 第 3 部分
            Assessment Day:
              name: 評估日
            Unit 7 STUDENT Survey:
              name: 單元 7 學生調查
            Unit 7 TEACHER Survey:
              name: 單元 7 教師調查
            Variables Make Demo:
              name: 變數製作範例
            'Lesson 11: Assessment Day':
              name: 評估日
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        csd2-projects-temp:
          title: CSD Web 專案 - 暫存
          description: 暫存位置，以放置新的 CSD Web 開發迷你專案
          lessons:
            HTML  Project:
              name: HTML 專案
            CSS Project:
              name: CSS 專案
          student_description: 暫存位置，以放置新的 CSD Web 開發迷你專案
        csp9-pilot:
          title: CSP 單元 9 試行版 - 資料
          lessons:
            new stage:
              name: 新的階段
            Learning From Data:
              name: 從資料中學習
            Exploring One Column:
              name: 學習 1 個欄
            Filtering and Cleaning Data:
              name: 篩選與清理資料
            Exploring Two Columns - Discrete:
              name: 學習 2 個欄 - 離散型
            Exploring Two Columns - Continuous:
              name: 學習 2 個欄 - 連續型
            Big Data, Crowdsourcing, and Machine Learning:
              name: 大數據、群眾外包與機器學習
            Machine Learning and Bias:
              name: 機器學習與偏見
            Project - Tell a Data Story - Part 1:
              name: 專案 - 訴說關於資料的故事 - 第 1 部分
            Project - Tell a Data Story - Part 2:
              name: 專案 - 訴說關於資料的故事 - 第 2 部分
            'Lesson 10: Assessment Day':
              name: 課堂 10：評估日
            Exploring Two Columns:
              name: 學習 2 個欄
            'Lesson 9: Assessment Day':
              name: 課堂 9：評估日
        csd2-2020:
          title: CSD 單元 2 - Web 開發 ('20-'21)
          description: In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet.
          description_short: 在 Web Lab 中學習製作自己的網站。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章：網站內容和 HTML
            csd2_2:
              display_name: 第 2 章：樣式和 CSS
            cspSurvey:
              display_name: 問卷
            csd2_1v2:
              display_name: '第1章: 建立網頁'
            csd2_2v2:
              display_name: '第2章: 多網頁網站'
          lessons:
            Exploring Web Pages:
              name: 瀏覽網頁
            Intro to HTML:
              name: HTML 簡介
              description_student: This lesson introduces to HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. The class looks at an HTML page in Web Lab and discusses how HTML tags help solve this problem, then uses HTML to write the first web pages of the unit.
              description_teacher: In this lesson students are introduced HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. Students then look at an exemplar HTML page in Web Lab and discuss with their classmates how HTML tags help solve this problem. Students then write their first HTML. A wrap-up discussion helps to solidify the understanding of content vs. structure that was developed throughout the lesson.
            Headings:
              name: 標題
              description_student: This lesson continues the introduction to HTML tags, this time with headers.  The class practices using header tags to create page and section titles and learns how the different header elements are displayed by default.  Next, the class plans how to organize their content on the personal web pages that will be built across the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to structure text on web pages, this time with headings.  Students learn how the different heading elements are displayed by default and practice using them to create page and section titles.  Students then start to decide how they will organize their content on their own personal web pages.  In the last level, students begin the project that they will continue to work on throughout the unit.
            Digital Footprint:
              name: 數位足跡
              description_student: This lesson takes a step back from creating the personal website to talk about personal information people choose to share digitally.  The class begins by discussing what types of information are good to share with other people, then looks at several sample social media pages to see what types of personal information could be shared intentionally or unintentionally.  Finally, the class comes up with a set of guidelines to follow when putting information online.
              description_teacher: |-
                As students have recently spent some time thinking about the actual content that will go into their personal website, this lesson takes a step back from the unit-long project (publication of a personal website) to help students articulate what personal information they choose to share digitally and with whom.  It also reinforces the notion that much of the information that they choose to share digitally falls largely out of their control the moment it is released.  \\r
                \\r
                Students begin by individually identifying appropriate audiences with whom they would be comfortable sharing given pieces of personal information.  They then look at several social media pages to determine what sorts of information people are sharing about themselves or one another.  Last, students reflect on what guidelines they think are appropriate for posting information online.\\r
                \\r
                The ultimate point of this lesson is not to scare students, but rather to experientially bring students to realizing precisely what level of control they don’t have in releasing information into the web.
            Styling Text with CSS:
              name: 透過 CSS 修改文字樣式
              description_student: This lesson introduces CSS as a way to style elements on the page. The class learns the basic syntax for CSS rule-sets and then explores properties that impact HTML text elements.  Finally, everyone applies text styles to their personal websites.
              description_teacher: |-
                This lesson introduces CSS as a way to style elements on the page. Students learn the basic syntax for CSS rule-sets and then explore properties that impact HTML text elements. They work on a HTML page about Guinness World Record holders, adding their own style to the provided page. In the last level, students apply what they have learned about styles for text elements to their personal web page.\\r
                \\r
            Intellectual Property:
              name: 知識產權
            Images:
              name: 圖像
              description_student: |-
                **每日問題: 我們如何將圖片加到我們的網站，並同時遵守授權規定?**\\r
                \\r
                本課程一開始將探討使用圖片的論理議題，特別是其智慧財產權。接著學習如何使用 \<img> 標籤以及如何正確地引用圖片的來源。
              description_teacher: |-
                **每日問題: 我們如何將圖片加到我們的網站，並同時遵守授權規定?**\\r
                \\r
                本課程一開始將探討使用圖片的論理議題，特別是其智慧財產權。接著學習如何使用 \<img> 標籤以及如何正確地引用圖片的來源。
            'Websites for Expression ':
              name: 建立網站，表達內容
              description_student: 'This lesson introduces websites as a means of personal expression.  The class first discusses different ways that people express and share their interests and ideas, then looks at a few exemplar websites made by students from a previous course. Finally everyone brainstorms and shares a list of topics and interests to include, creating a resource for developing a personal website in the rest of the unit. '
              description_teacher: In this lesson students investigate ways to use websites as a means of personal expression and develop a list of topics and interests that they would want to include on a personal website. To begin the lesson students brainstorm different ways that people express and share their interests and ideas. Students then look at a few exemplar websites made by students from a previous CS Discoveries course to identify ways they are expressing their ideas. Finally students brainstorm and share a list of topics and interests they might want to include on a personal website which they can reference for ideas as they progress through the unit.
            Styling Elements with CSS:
              name: 透過 CSS 修改元素樣式
              description_student: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. The class begins by investigating and modifying the new CSS styles on a Desserts of the World page. Afterwards, everyone applies this new knowledge to their personal websites.
              description_teacher: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. Students begin this lesson by looking at a website about Desserts of the World. They investigate and modify the new CSS styles on this website, adding their own styles to the page. After working on the Desserts page, students apply their knowledge of new CSS properties to do more styling of their personal websites.
            Project - Planning Layout and Style:
              name: 專案 - 計畫佈局與樣式
            Project - Building a Webpage:
              name: 專案 — 製作網頁
            Purpose of a  Websites:
              name: 網站的目的
            Team Problem Solving:
              name: 團隊問題解決
            Sources and Research:
              name: 資料來源與研究
            Planning a Multi-page Website:
              name: 規劃多頁網站
            Linking and Navigation:
              name: 鏈接與導航
            Project - Website for a Purpose:
              name: 專案 - 為達成目的而製作網站
            Peer Review and Final Touches:
              name: 同儕審查與最後修訂
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
            'Mini-Project: HTML Web Page':
              name: '迷你專案: HTML網頁'
              description_student: |-
                **每日問題: 我如何運用 HTML 來顯示個人資料?**\\r
                \\r
                在這堂課中，同學將以他們自選的主題來建立一個個人網頁。課程一開始將會複習 HTML 標籤，接著設計網頁並決定哪些標籤需要被實作，最後將網頁建立在 Web Lab 中。
            'Mini-Project: Your Personal Style':
              name: '迷你專案: 你的個人風格'
            'Your Web Page - Define ':
              name: 你的網頁 -  定義
            Your Web Page - Prepare:
              name: 你的網頁 - 準備
            Project - Personal Web Page:
              name: 專案 - 個人網頁
            Websites for a Purpose:
              name: 有目的的網站
            Linking Pages:
              name: 鏈接頁面
            Using Images:
              name: 使用圖片
          student_description: In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet.
        csd1-2020:
          description_short: 瞭解人類與何與電腦一起解決問題。
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csd1_1:
              display_name: 第 1 章：解決問題的流程
            csd1_2:
              display_name: 第 2 章：計算機與問題解決能力
            csd1_3:
              display_name: 替代課程
          lessons:
            CS Discoveries Pre-survey:
              name: 電腦科學探索課前問卷調查
            Intro to Problem Solving:
              name: 問題解決能力的介紹
              description_student: 'The class works in groups to design aluminum foil boats that will support as many pennies as possible.  At the end of the lesson groups reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course. '
              description_teacher: In this lesson, students work in groups to design aluminum foil boats that will support as many pennies as possible. Groups have two rounds to work on their boats, with the goal of trying to hold more pennies than they did in round 1. The structure of the activity foreshadows different steps of the problem solving process that students will be introduced to in more detail in the following lesson. At the end of the lesson students reflect on their experiences with the activity and make connections to the types of problem solving they will be doing for the rest of the course.
            The Problem Solving Process:
              name: 問題解決流程
              description_student: This lesson introduces the formal problem solving process that the class will use over the course of the year, Define - Prepare - Try - Reflect.  The class relates these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
              description_teacher: This lesson introduces the formal problem solving process that students will use over the course of the year, Define - Prepare - Try - Reflect. The lesson begins by asking students to brainstorm all the different types of problems that they encounter in everyday life. Students are then shown the four steps of the problem solving process and work together to relate these abstract steps to their actual experiences solving problems. First students relate these steps to the aluminum boats problem from the previous lesson, then a problem they are good at solving, then a problem they want to improve at solving. At the end of the lesson the class collects a list of generally useful strategies for each step of the process to put on posters that will be used throughout the unit and year.
            Exploring Problem Solving:
              name: 問題解決探索
              description_student: 'In this lesson the class applies the problem solving process to three different problems: a word search, a seating arrangement for a birthday party, and planning a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems.'
              description_teacher: |-
                In this lesson students apply the problem solving process to three different problems in order to better understand the value of each step. They will solve a word search, arrange seating for a birthday party, and plan a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems. The lesson concludes with students reflecting on their experience with the problem solving process. They will justify the inclusion of each step and will brainstorm questions or strategies that can help them better define open-ended problems, as this is often the most critical step.\\r
                \\r
                This lesson will likely take two class periods or more to complete. The first two problems may fit into a single class period but the third will need to be moved to a second day.
            What is a Computer?:
              name: 電腦是什麼？
              description_student: In this lesson the class develops a preliminary definition of a computer. After brainstorming the possible definitions for a computer, the class works in groups to sort pictures into “is a computer” or “is not a computer” on poster paper and explain their motivations for choosing some of the most difficult categorizations.  The teacher then introduces a definition of the computer and allows groups to revise their posters according to the new definition.
              description_teacher: In this lesson students develop a preliminary definition of a computer. To begin the lesson, the class will brainstorm possible definitions for a computer and place the results of this brainstorm on the board. Next, students will work in groups to sort pictures into “is a computer” or “is not a computer” on poster paper. Groups will place their posters around the room and briefly explain their motivations for choosing some of their most difficult categorizations.  The teacher will then introduce a definition of the computer and allow students to revise their posters according to the new definition.\\r
            Input and Output:
              name: 輸入與輸出
              description_student: In this the class students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device.  To conclude the lesson the class examines common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
              description_teacher: In this lesson students consider a number of computing devices to determine what types of inputs and outputs they use. Groups are assigned to a computing device and based on a teacher-provided definition of input and output, list the inputs and outputs of their device. Earlier in the activity students are prompted to focus on more obvious physical inputs and outputs (e.g. a keyboard as an input or a screen as an output) but later discussions lead students to consider less obvious examples (e.g. that a touch screen is both an input and output, or the fact that the Internet can serve as both input and output). Throughout the lesson the teacher records inputs and outputs that are identified on a T-Chart at the front of the room. To conclude the lesson students examine common activities they do on a computing device and select the inputs and outputs used for that activity from the chart.
            Processing:
              name: 處理
              description_student: This lesson dives deeper into the concept of processing that was introduced as part of the definition of a computer.  Pairs work together to put a deck of cards in order, a form of processing information.  In the end, the class discusses what processing means within the context of solving information problems.
              description_teacher: Students complete two unplugged card sorting activities to explore the meaning of processing and its relationship to problem-solving. The first activity has few constraints and is used to introduce a high-level definition of processing. The next introduces more constraints that force students to develop an algorithm that will always successfully process the cards. Students iteratively develop, test, and share their algorithms with classmates. A wrap-up discussion has students reflect on the different types of problem-solving they used in these activities and the value of producing an algorithm to solve a problem.
            Apps and Storage:
              name: 應用程式與儲存
              description_student: 'This lesson covers the input and output aspects of computers in a context that is relevant and familiar to students: apps. The class evaluates various web applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the outputs they provide to users. The class concludes with observations of these apps as well as a teacher led discussion about the impact of apps on society. '
              description_teacher: 'This lesson reviews the input, output, storage, and processing aspects of a computer in a context that is relevant and familiar to students: apps. In pairs, students evaluate smartphone applications to analyze the specific problems that they were designed to solve, the inputs that they need to work, and the processing that turns those inputs into the desired output, and what information they would want to store for later. The class concludes with a discussion that connects the lesson to apps students are more familiar with. '
            Project - Propose an App:
              name: 專案 - 提出應用程式建議
              description_student: To conclude the study of the problem solving process and the input/output/store/process model of a computer, the class proposes apps designed to solve real world problems. This project is completed across multiple days and culminates in a poster presentation highlighting the features of each app. The project is designed to be completed in pairs though it can be completed individually.
              description_teacher: To conclude their study of the problem solving process and the input/output/store/process model of a computer, students will propose an app designed to solve a real world problem. This project will be completed across multiple days and will result in students creating a poster highlighting the features of their app that they will present to their classmates. A project guide provides step by step instructions for students and helps them organize their thoughts. The project is designed to be completed in pairs though it can be completed individually.
            Post-Project Test:
              name: 專案後測驗
            'Alternate Versions of Lesson 1: Intro to Problem Solving':
              name: 課堂 1 替代版本：問題解決簡介
            'Alternate Versions of Lesson 3: Exploring Problem Solving':
              name: 課堂 3 替代版本：探索問題解決
            'Lesson 1: Intro to Problem Solving - Newspaper Table':
              name: 課堂 1：問題解決簡介 - 讀報桌
            'Lesson 1: Intro to Problem Solving - Spaghetti Bridge':
              name: 課堂 1：問題解決簡介 - 義大利麵橋
            'Lesson 1: Intro to Problem Solving - Paper Tower':
              name: 課堂 1：問題解決簡介 - 紙塔
            'Lesson 3: Exploring Problem Solving - Games Theme':
              name: 課堂 3：探索問題解決 - 遊戲主題
            'Lesson 3: Exploring Problem Solving - Animals Theme':
              name: 課堂 3：探索問題解決 - 動物主題
            'Games Theme (Lesson 3: Exploring Problem Solving)':
              name: 遊戲主題（課程3：探索解決問題）
            'Exploring Problem Solving (Lesson 3: Exploring Problem Solving)':
              name: 探索解決問題（課程3：探索解決問題）
            'Games Theme (Alternate Lesson 3: Exploring Problem Solving)':
              name: 遊戲主題（替代課程3：探索解決問題）
            'Exploring Problem Solving (Alternate Lesson 3: Exploring Problem Solving)':
              name: 探索解決問題（替代課程3：探索解決問題）
            Storage:
              name: 儲存
        csd4-2020:
          description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
          description_short: 學習如何設計程式，以符合使用者的需要。
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：用戶為中心的設計
            csd4_2:
              display_name: 第 2 章︰ 應用程式原型
            csd5_2:
              display_name: 第 2 章：解決數據問題
            cspSurvey:
              display_name: 問卷
          lessons:
            Analysis of Design:
              name: 設計分析
              description_student: 班級會瞭解多種不同的茶壺設計，以思考怎樣做出設計選擇，以及為甚麼做出這些選擇。班級同學會使用茶壺做為範例，瞭解使用者、使用者需要，以及他們使用的物件設計之間的關係。
              description_teacher: 單元會集中把問題解決內容分組，並為其他使用者開發產品。在單元開始時，學生首先會研究不同茶壺的設計。然後學生會分析每款茶壺，嘗試找出特定使用者的需要可能怎樣在其設計中反映出來。學生思考這些設計選擇，並嘗試把每款茶壺與一位潛在使用者配對後，便可以開始觀察：以使用者為本的方式設計產品（包括實際與數位數產），如何能讓產品更實用和易用。活動結束時，會請學生提議對其中一個茶壺做一些變更，讓茶壺更實用或更易用。
            Understanding Your User:
              name: 瞭解您的使用者
              description_student: 班級學生會以使用者設定檔，瞭解不同的使用者如何可能對各種產品做出反應。每位學生都會扮演不同人物，從而以其他人的角度體驗各種設計。
              description_teacher: 設計師需要瞭解使用者的需要，才可製作出實用的產品。本課堂鼓勵學生思考怎樣為其他人設計產品，方法是以使用者設定檔扮演其他人，並以扮演的角色對一系列產品做出反應。每位學生都會獲分配一個使用者設定檔，用於說明該角色，然後學生便會以該角色選擇恰當的產品、以批判方式評論產品設計，並建議設計上的改良。\\r
            User-Centered Design Micro Activity:
              name: 以使用者為中心的微型活動
              description_student: 班級學生會分為各小組，然後使用設計流程獲得智慧衣著的構思。此活動是單元中提供的第一個練習機會，首先會集合思考，然後確定使用者，最後提出設計建議。本單元提供不同機會，讓學生練習設計解決方案，以解決其他人的需要。
              description_teacher: 本課堂會引導學生完成簡化版本的設計流程，學生會在整個單元中瞭解這個流程。學生首先會一起思考並列出智慧衣著的潛在使用者清單。然後，所有學生一起把這些構想分組至較廣泛的類別，然後每組選擇一個使用者類別。小組會重複這個程序，一起思考他們的使用者有哪些需要或關注事項，接著把這些需要分為不同類別，並選擇集中工作的一個類別。最後，學生會設計一件智慧衣著，過程中會使用剛才想出來的特定需要與關注事項，從而引導他們做出決策。在班級課堂結束時，學生會快速分享自己的決策流程，並接收相關回饋意見，瞭解他們的產品有多能夠解決所選擇的使用者需要。
            User Interfaces:
              name: 使用者介面
              description_student: 看看紙上原型可怎樣在編寫程式碼前，用來測試軟體並取得回饋意見。為了協助開發人員實現他們的構思，班級同學會測試並提供應用程式的紙上原型。
              description_teacher: 完成迷你設計專案後，學生會學習設計的下一個階段 - 製作產品原型，嘗試解決使用者的需要。學生會分為各自的團隊，研究稱為「Txt Ur Grndkdz」的聊天應用程式紙上原型。使用這個紙上原型，學生便有機會瞭解，簡單的紙上原型可怎樣用來快速測試構思與假設，然後才真正使用電腦。「使用」提供的原型後，學生便會開始找出各種方式，以改善下一個迭代的版本。
            Feedback and Testing:
              name: 回饋與測試
              description_student: 使用者一直在測試一款應用程式，他們會有大量回饋意見提供給開發人員。班級同學需要透徹瞭解他們的回饋意見、找出共同的主題與需要，然後開始修改原型，讓原型更能符合使用者的需要。
              description_teacher: 在本課堂中，學生會使用前一個課堂中紙上原型應用程式的「使用者」回饋意見，從而改良紙上原型的使用者介面。課堂開始時，學生會反思：設計師需要把人類的需要，以科技轉化為對使用者介面（或「體驗」）做出的變更。然後，學生會依據前一個課堂中製作的應用程式，收集使用者的回饋意見與請求。學生會分組把回饋意見分類，並找出有哪些方式，讓回饋意見中表達的需要，能夠在變更應用程式介面後解決。之後，學生會分組實作其中一些變更，以滿足他們找到的其中一種需要。
            Identifying User Needs:
              name: 確定使用者需求
              description_student: 直到這個階段為止，班級學生研究的使用者都位於遠端地點，而來自使用者僅有的資訊，皆使用文字或角色扮演來代表。現在，學生會每 2 人一組，互相依賴對方做為潛在的使用者，並會互相訪問，以找出可開發應用程式解決的需要。
              description_teacher: 直到這個階段為止，學生集中設計程式的使用者對象，某程度上都位於遠端地點。不論以集體思考、個人設定檔或是文字回饋意見交流，學生與最終使用者間一直都沒有直接的聯繫。設計這種距離感，是為了協助學生在思考使用者需要時跳出自己的思考框框；但是為了以更直接的方式取得實際使用者的資訊，學生便需要依賴同學。在本課堂中，學生會以 2 人一組，成為對方的使用者（與設計師），讓所有學生都可直接訪問最終使用者，並向對方提出問題，從而取得更多資訊瞭解自己的設計。每組學生會互相訪問對方，並嘗試找出一項能使用應用程式解決的特定需要。
            Project - Paper Prototype:
              name: 專案 - 紙上原型
              description_student: 班級同學會使用前一個課堂的訪談資訊，想出一些應用程式構思，以解決他們的使用者之需要。要表達這些構思，以及測試構思的效用，每位同學將會建立並測試自己的紙上原型。
              description_teacher: 每位學生會依據自己在前一個課堂的同伴訪談，想出一個解決使用者問題的應用程式構思。然後，學生會依據應用程式構思來開始製作紙上原型，在獨立的記事卡上繪畫「螢幕」。專案指南會引導學生完成流程，包括建立並由使用者測試應用程式，從而瞭解自製使用者介面的假設是否準確。
            Designing Apps for Good:
              name: 設計良好的應用程式
              description_student: 開始應用程式設計專案時，班級裡的同學會分為各自的團隊，然後開始探索應用程式主題。一些對社會影響深遠的範例應用程式，會用來做為專案的啟發工具。
              description_teacher: 應用程式設計專案會持續到單元結束。開始專案時，學生首先會瞭解一些應用程式，這些程式由其他學生製作，設計用於對社會產生影響。然後，班級同學會複習問題解決流程中的定義、準備、嘗試和反思步驟，並制定對社會產生影響的應用程式之構思。最後，學生會組成專案團隊安排契約，指出團隊在開發應用程式時如何運作。
            Market Research:
              name: 市場研究
              description_student: 瞭解可能為相似使用者服務的現存應用程式，從而加深瞭解應用程式開發。每個小組會找出一些類似的應用程式，主題與自己製作的程式相同，並使用那些應用程式，協助重新定義學生所追求的應用程式構思。
              description_teacher: 在本課堂中，學生會研究一些應用程式，這些程式與他們打算製作的程式相似，從而更瞭解他們的使用者需要。學生會在團隊內工作、在線上搜尋其他應用程式，然後評估認為有趣的應用程式。在課堂結束時，每個團隊都會清楚瞭解自己想製作的應用程式類型，並進一步細分誰是他們的目標使用者。每個團隊會維護引用資訊清單，列出所有研究過的應用程式，並用於學生的期末專案展示中。
            Paper Prototypes:
              name: 紙上原型
              description_student: 紙上原型可讓開發人員快速測試自己的構思，然後再投放大量時間編寫程式。在本課堂中，各團隊會瞭解在 App Lab 中製作的一些範例應用程式，並使用那些應用程式中獲得的資訊，協助製作自己的應用程式紙上原型。
              description_teacher: 開始設計應用程式前，我們需要幫助學生仔細瞭解自己的期望。因為學生最終會在 App Lab 中製作這些應用程式的原型，若他們的構思和 App Lab 中容易製作原型的應用程式類型相近，就能夠有更充足的準備。團隊在開始這項研究時，首先會觀察一些範例應用程式，這些程式用於展示可使用 App Lab 製作的應用程式。然後，團隊可選擇 1 款（或更多）應用程式，做為自己的應用程式之基礎，之後會有一些時間討論自己的應用程式有哪些基本功能，並使用 3 英吋 x 5 英吋的索引卡開發紙上原型。\\r
            Prototype Testing:
              name: 原型測試
              description_student: 在本課堂中，團隊會與其他同學測試自己的紙上原型。1 位學生扮演電腦、1 位學生說出內容，餘下的學生則會觀察。此時團隊會立即就自己的應用程式獲得回饋意見，為下一個版本的應用程式原型提供實用資訊。
              description_teacher: 開發紙上原型的首要目的是，這樣做可快速測試和迭代，然後才開始編寫程式碼。本課堂的重點在於，讓團隊有機會先測試自己的原型，然後再使用 App Lab。團隊會制定一套計畫，從而和使用者一起測試，之後與班級裡（也可能是班級外）的數個其他同學執行原型測試。為了讓使用者測試原型，學生必須在測試中分配角色（「解說員」、「電腦」與「觀察者」），並準備一些問題，讓使用者在測試結束時回答。
            Digital Design:
              name: 數位設計
              description_student: 在開發、測試與收集紙上原型的回饋意見後，團隊便會移至 App Lab，建立應用程式的下一個迭代。每個團隊成員都會使用拖放設計模式，為自己團隊的應用程式製作至少 1 頁的內容，以回應在前一個回合測試時收到的回饋意見。
              description_teacher: 小組在協作開發應用程式的紙上原型後，便會以分治的方式，依據紙上原型來開始製作互動式數位版本。每位學生會各自使用 App Lab 的拖放設計模式，完成漸進式的技能訓練關卡，以學習怎樣製作紙上原型的數位版本。之後，每個小組成員都會在 App Lab 上，為自己的應用程式製作至少 1 頁內容，並在之後合併為單一個應用程式。
            Linking Screens:
              name: 連結不同畫面
              description_student: 團隊會以前一個課堂中設計的不同畫面做為基礎，合併各畫面並加入單一個應用程式中。然後，學生可加入一些簡單的程式碼，使點擊按鈕後進入適當畫面。
              description_teacher: 在本課堂中，團隊會把前一個課堂設計的各個畫面，合併為單一個應用程式，並使用程式碼互相連結起來。學生會繼續製作前一個課堂中開始製作的模型應用程式，從而學習基本的事件驅動程式設計。除了昨天學生設計的螢幕畫面外，學生也會學習怎樣製作額外的畫面，甚至匯入其他人製作的畫面。
            Testing the App:
              name: 測試應用程式
              description_student: 團隊會執行下一回合的使用者測試，這次會使用他們的互動式原型進行。在這個回合中取得的回饋意見，將會做為應用程式原型最終迭代版本的有用資訊。
              description_teacher: 在前一個課堂結束時，每個團隊都應製作了應用程式的最簡可行原型。本課堂之主要目的，是讓團隊與其他人實際測試應用程式，對象最好是應用程式預期的目標受眾，或是班級裡的其他團隊；至於團隊中的觀察者，則會在先前用於計畫階段的工作表上記錄結果。與測試紙上原型一樣，團隊首先會計畫用於特定情景，然後執行並觀察測試。
            Improving and Iterating:
              name: 改善和迭代
              description_student: 團隊會使用前一回合測試的回饋意見實作變更，以解決使用者的需要。每個團隊都會記錄希望加入的功能特色並安排優先順序，以及記錄需要解決的程式錯誤。
              description_teacher: 在這個階段中，團隊已開發了應用程式原型，並已經過多個迭代與多個回合的使用者測試。每位學生都有機會，依前一回合的使用者測試中取得的資訊與指導，計畫並實作團隊應用程式的改善內容。你可視可用時間與學生的興趣，執行恰當次數的測試與迭代週期。
            Project - App Presentation:
              name: 專案 - 應用程式簡報
              description_student: 每個團隊都會準備一次簡報，以「投售」自己開發的應用程式。這時正是時候分享各種拼搏與勝利經驗，以及計畫未來。
              description_teacher: 這個時候，團隊已研究一項個人與社會重要性的主題、開發並測試紙上原型與數位原型，並開始製作初始應用程式迭代，以結合新的功能特色，以及執行錯誤修正。現在正是時候，讓學生檢閱自己完成的東西，整合成連貫的簡報展示創作的進展。團隊會使用提供的簡報範本，準備展示應用程式開發流程，包括開始解決的問題、他們在測試後以甚麼方式加入回饋意見，以及對未來的計畫。
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
          student_description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
        csd5-2020:
          description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
          description_short: 瞭解大家怎樣使用電腦解決資料問題。
          lesson_groups:
            csd5_1:
              display_name: 第 1 章：表達信息
            csd5_2:
              display_name: 第 2 章：解決數據問題
            cspSurvey:
              display_name: 問卷
          lessons:
            Representation Matters:
              name: 表示事項
              description_student: 第一個課堂會概述甚麼是資料，以及資料怎樣用來解決問題。各小組會使用一套資料集，為不同要求的人製作一系列的餐點建議。之後，各小組會比較他們的回答，並討論以不同的方式表示餐點資料，會怎樣影響學生解決不同問題的能力。
              description_teacher: 在資料單元的第一個課堂中，學生會大概瞭解甚麼是資料，以及資料怎樣用來解決問題。學生首先會展開簡短討論，從而普遍瞭解資料是甚麼。然後學生會分為各小組，並使用資料集為不同要求的人製作一系列的餐點建議。每個小組都可選擇以不同方式表示餐點（圖片、食譜、菜單、營養），從而讓不同方式有各自的優點。之後，各小組會比較他們的回答，並討論以不同的方式表示餐點資料，會怎樣影響學生解決不同問題的能力。
            Patterns and Representation:
              name: 模式和標記法
              description_student: 本課堂會更深入瞭解需要以甚麼來建立表示系統。各小組會建立相關系統，從而能夠僅使用一疊卡片，便可表示字母表中的任何字母；然後，學生會使用這些系統建立訊息，並與其他小組交換，從而確保系統像預期般正常運作。之後，班級同學會討論不同工作系統間的共通點，同時瞭解有許多可能的實用解決方案。
              description_teacher: 在本課堂中，學生會建立自己的系統，用於表示資訊。他們首先會一起想出目前用於表示「是-否」回覆的所有不同系統。然後，學生會分為小組工作建立系統，從而僅使用一疊卡片就可表示字母表中的任何字母。使用的卡片有 6 種不同的圖畫內容（6 種動物、6 種顏色等），而為了表示所有字母，學生將需要使用不同卡片的圖樣（pattern）表示每個字母。然後，學生會使用自己的系統建立訊息，並與其他小組交換，從而確保系統像預期般正常運作。在總結討論中，班級學生會檢閱不同系統的優點和缺點。他們會討論不同工作系統間的共通點，同時瞭解有許多可能的實用解決方案，而且重點是所有人都使用相同的任意系統互相通訊。
            ASCII and Binary Representation:
              name: ASCII 和 二進位表示法
              description_student: 本課堂會介紹一款為資訊編碼的正式二進制系統 ASCII，用於表示字母與其他字元。課堂開始時，教師會介紹：電腦必須使用「開」或「關」表示資訊。然後，班級同學會學習 ASCII 系統，以二進制符號表示文字，並練習使用這個系統，之後再使用 ASCII 為自己的訊息編碼。
              description_teacher: 在本課堂中，學生會學習第一款為資訊編碼的正式二進制系統 ASCII，用於表示字母與其他字元。課堂開始時，教師會介紹：電腦必須使用「開」或「關」表示資訊。然後，學生會學習 ASCII 系統，以二進制符號表示文字，並練習使用這個系統，之後再使用 ASCII 為自己的訊息編碼。課堂結束時會進行匯報對話，從而協助結合活動中的關鍵學習目標。
            Representing Images:
              name: 表示圖像
              description_student: 本課堂會繼續學習二進制表示系統，這次會使用圖像來說明。班級同學會學習把圖像分開為多個「正方形」或「像素」的概念，而這些像素可獨立開關，以構成整個圖像。使用圖像化小工具完成少許挑戰後，班級同學便會把圖像表示系統，和前一個課堂學到的文字表示系統互相聯繫起來。
              description_teacher: 在本課堂中，學生會學習電腦怎樣表示圖像。課堂開始時，學生會思考一項挑戰：把所有複雜的圖像轉化為二進制圖樣。學生首先會看到一系列圖像，瞭解這個轉換過程，接著學習把圖像分開為多個正方形或「像素」的概念，而這些像素可獨立開關，以構成整個圖像。然後，學生會使用圖像化小工具完成少許挑戰，從而繪畫出黑白圖像。謎題中會提出一些挑戰，讓學生以這種方式表示圖像。在總結課堂時，學生會把圖像表示系統，和前一個課堂學到的文字表示系統互相聯繫起來。
            Representing Numbers:
              name: 數字表示法
              description_student: 本課堂介紹二進制數字系統。班級同學會收到一組卡片，這些卡片表示二進制（base-2）數字系統中的位值。然後，學生要上下翻轉卡片，以「開啟」或「關閉」卡片，並觀察不同圖樣的結果。最後，圖樣會延伸為通用的 4 位元系統。
              description_teacher: 在本課堂中，學生會學習二進制數字系統。學生會收到一組卡片，這些卡片會以由點構成的組合，來表示二進制（base-2）數字系統中的位值。然後，學生要上下翻轉卡片，以「開啟」或「關閉」卡片，並觀察不同圖樣的結果。最後，學生需要把圖樣延伸為通用的 4 位元系統。
            Keeping Data Secret:
              name: 讓資料保密
              description_student: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
              description_teacher: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
            Combining Representations:
              name: 組合表示
              description_student: 本課堂會合併全部 3 種類型的二進制表示系統（ASCII 字元、二進制數字和圖像），讓學生能夠在某項記錄中，為更複雜的資訊類型編碼。學生會觀察一系列位元，然後需要把位元解碼。在這個過程中，班級學生會學到一個概念：瞭解二進制資訊，就需要同時瞭解使用中的系統，以及加密後的資訊是甚麼意思。
              description_teacher: 在本課堂中，學生會運用全部 3 種類型的二進制表示系統（ASCII 字元、二進制數字和圖像），從而為某項記錄解碼。學生會觀察一系列位元，然後需要把位元解碼。在這個過程中，學生會學到一個概念：為了明白二進制資訊，他們就必須同時瞭解使用中的系統，以及加密後的資訊是甚麼意思。之後，學生便會依據提供的結構，為表示寵物的記錄解碼。
            Project - Create a Representation:
              name: 專案 - 創建標記法
              description_student: 學生會使用這一章所學到的二進制表示系統來設計結構，以表示他們度過的美好一天。在確定相關記錄應擷取哪些資訊後，班級同學便會決定一張儲存多個位元資訊的打孔卡，會以怎樣的方式詮釋，以表示裡面的資訊。之後，所有同學都會使用學到的 ASCII、二進制數字與圖像格式，來表示他們美好的一天，並嘗試解碼同伴美好的一天過得怎樣。
              description_teacher: 在本課堂中，學生會使用這一章所學到的二進制表示系統來設計結構，以表示他們度過的美好一天。他們首先會寫下簡短說明，描述他們美好的一天，然後與同伴一起檢閱內容，找出他們認為電腦會擷取的關鍵資訊。同學會全班一起決定，一張儲存多個位元資訊的打孔卡，會以怎樣的方式詮釋，以表示裡面的資訊。接著，學生會使用學到的 ASCII、二進制數字與圖像格式，來表示他們美好的一天。之後學生會交換打孔卡，並嘗試解碼同伴美好的一天過得怎樣。課堂會以反思來結束。
            Problem Solving and Data:
              name: 問題解決與數據
              description_student: 本課堂會說明可怎樣量身制定問題解決流程，以處理特別是資料方面的問題。班級同學的任務，是決定某個城市最需要投放資源在哪個方面。他們必須找出並使用線上找到的資料支持這個決定。
              description_teacher: 在本課堂中，學生會使用課程初期學到的問題解決流程，以解決資料問題。檢閱流程後，班級同學便要做出決定：某個城市應該建立圖書館、寵物庇護所還是消防局。學生會以團隊方式工作，從線上收集資訊，協助決定應建造甚麼，然後使用這些資訊撰寫理據，從而說服市議會接納他們的選擇。然後他們會把完成的事情，對映至整個課程中一直使用的問題解決流程中，並比較一般問題解決流程和專門應用至資料問題時有甚麼異同。
            Problem Solving with Big Data:
              name: 用大數據解決問題
              description_student: 本課堂講解機構怎樣收集與使用資料，以解決現實世界的問題。班級同學會觀察 3 個可使用資料來解決的情景，並一起思考希望以哪些資料類型解決，以及他們可怎樣收集資料。每個情景也會包含一段影片，瞭解一項真實世界的服務，曾經以資料解決類似的問題。
              description_teacher: 在本課堂中，學生會瞭解機構怎樣收集與使用資料，以解決現實世界的問題。課堂首會快速回顧前一個課堂中學到的資料問題解決流程。然後，學生會觀察 3 個可使用資料來解決的情景，並一起思考希望以哪些資料類型解決，以及他們可怎樣收集資料。每個問題的設計，都用於反映現實世界中存在的服務。集體思考後，學生會觀看一段影片，瞭解一項真實世界的服務， 然後寫下筆記，指出現實世界的服務會收集甚麼資料，還有怎樣使用這些資料。課堂結束時，學生會記錄資料由使用者主動提供、被動記錄下來，還是由感測器來收集。
            Structuring Data:
              name: 資料的建構
              description_student: 本課堂會更深入探討資料詮釋，包括原始資料集清理與視覺化。班級同學首先會瞭解，以不同方式展示資料，可怎樣協助受眾更易理解資料。學生觀察清理與視覺化可怎樣協助大眾做出更好的決定後，便會研究這個流程中的哪些部分可自動化，哪些部分需要人類介入。
              description_teacher: 在本課堂中，學生會更深入探討資料收集與詮釋，包括資料清理與視覺化。學生首先會瞭解，以不同方式展示資料，可怎樣協助受眾更易理解資料，然後再讓自己的資料製作視覺化內容。學生必須使用首選薄餅配料的訪問結果，決定需要怎樣處理無法輕易加入所選視覺化方案的資料。最後，學生會研究這個流程中的哪些部分可由電腦自動化，哪些部分則需要人類做決定。
            Making Decisions with Data:
              name: 依數據來做決定
              description_student: 本課堂讓學生有機會練習前一個課堂介紹的資料問題解決流程。不是所有問題都有正確答案，而在某些情況下，班級同學可以並應該確定應收集更多資料。課堂結束時，會討論不同人可怎樣從相同的資料中得出不同的結論，或是收集不同的資料可能怎樣影響了他們做出的決定。
              description_teacher: 在本課堂中，學生會練習依據某些問題使用資料去做決定，這些問題專門設計讓中學生感到熟悉。學生會分組工作，討論他們會怎樣使用收到的資料做出決定，然後全球討論他們的最後決定。不是所有問題都有正確答案，而在某些情況下，學生可以並應該確定應收集更多資料。課堂結束時，會討論不同人可怎樣從相同的資料中得出不同的結論，或是收集不同的資料可能怎樣影響了他們做出的決定。
            Interpreting Data:
              name: 解譯數據
              description_student: 課堂開始時，學生首先會瞭解一份蛋糕偏好問卷調查，讓受訪者指定一款蛋糕與一款糖霜。他們會討論：瞭解蛋糕和糖霜偏好間的關係，可怎樣幫助他們更能決定建議哪種組合。然後，學生會學習交叉表，讓他們可用圖表展示不同偏好間的關係。他們會運用這項技巧找出偏好問卷調查中的關係，然後一起思考這項流程有助解決哪些不同類型的問題。
              description_teacher: 課堂開始時，學生首先會瞭解一份蛋糕偏好問卷調查，讓受訪者指定一款蛋糕與一款糖霜。他們會討論：瞭解蛋糕和糖霜偏好間的關係，可怎樣幫助他們更能決定建議哪種組合。然後，學生會學習交叉表，讓他們可用圖表展示不同偏好間的關係。他們會運用這項技巧找出偏好問卷調查中的關係，然後一起思考這項流程有助解決哪些不同類型的問題。
            Automating Data Decisions:
              name: 自動化數據決策
              description_student: 在本課堂中，學生會看看簡單範例，瞭解電腦可怎樣用來完成資料問題解決流程的決策步驗驟。學生需要完成的任務是：建立可建議度假地點的演算法。然後，學生會訂立規則或演算法，讓電腦可用來自動做決定。學生會分享各自的規則，以及他們的規則會以類別資料做出哪些選擇。然後，學生會使用自己的規則與同學的資料，測試他們的規則所做的決定是否與人類相同。本課堂結束時，會討論使用電腦把問題解決流程自動化有哪些優點和缺點。
              description_teacher: 在本課堂中，學生會看看簡單範例，瞭解電腦可怎樣用來完成資料問題解決流程的決策步驗驟。學生需要完成的任務是：建立可建議度假地點的演算法。然後，學生會訂立規則或演算法，讓電腦可用來自動做決定。學生會分享各自的規則，以及他們的規則會以類別資料做出哪些選擇。然後，學生會使用自己的規則與同學的資料，測試他們的規則所做的決定是否與人類相同。本課堂結束時，會討論使用電腦把問題解決流程自動化有哪些優點和缺點。
            Project - Solve a Data Problem:
              name: 專案 - 解決數據問題
              description_student: 本單元結束時，班級同學會設計各種方式使用資料，以做出一些建議或預測，從而協助解決問題。在最初的數個步驟中，學生會一起思考問題、從事簡單研究，然後定義一個所選的問題。之後，他們會決定希望收集哪種類型的資料、怎樣收集與怎樣使用，然後再交換回饋意見，並進行期末簡報。
              description_teacher: 本單元結束時，學生會依據同學提供並分析的資料，設計一個建議引擎。觀察一款建議引擎應用程式範例後，學生會遵從專案指南完成這項橫跨多天的活動。在最初的數個步驟中，學生會選擇希望協助使用者做出甚麼選擇、需要為建議引擎提供哪些資料、編寫問卷調查，以及收集同學選擇的資訊。然後，學生會詮釋資料，並使用學到的知識建立建議引擎。最後，他們會以自己的演算法向同學提出建議。學生會進行同儕審查，並對專案做出所有必要的更新，然後準備向全班展示的簡報。
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
          student_description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
        csd6-2020:
          description_short: 在實體裝置上開發程式
          lesson_groups:
            csd6_1:
              display_name: 第 1 章：硬體輸出
            csd6_2:
              display_name: 第 2 章：建立物理原型
            cspSurvey:
              display_name: 問卷
          lessons:
            Innovations in Computing:
              name: 運算上的創新
            Designing Screens with Code:
              name: 以程式碼設計螢幕畫面
            The Circuit Playground:
              name: 電路（Circuit ）遊樂場
            Input Unplugged:
              name: 不插電介紹輸入（Input）
            Board Events:
              name: 電路板事件
            Getting Properties:
              name: 取得屬性
            Analog Input:
              name: 模擬輸入
            The Program Design Process:
              name: 程式設計流程
            'Project: Make a Game':
              name: 專案：創建一個遊戲
            Arrays and Color LEDs:
              name: 陣列與彩色 LED
            Making Music:
              name: 製作音樂
            Arrays and For Loops:
              name: 陣列和 for（計數）迴圈
            Accelerometer:
              name: 加速計
            Functions with Parameters:
              name: 函式帶參數
            Circuits and Physical Prototypes:
              name: 電路與實體原型
            'Project: Prototype an Innovation':
              name: 專案：原型創新
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
        csd3-2020:
          description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
          lesson_groups:
            csd3_1:
              display_name: 第 1 章：圖像和動畫
            csd3_2:
              display_name: 第 2 章：創建遊戲
            cspSurvey:
              display_name: 問卷
          lessons:
            Programming for Entertainment:
              name: 娛樂用途的程式設計
              description_student: The class is asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
              description_teacher: Students are asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
            Plotting Shapes:
              name: 幾何繪圖
              description_student: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
              description_teacher: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
              description_student: The class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. Thee lesson covers the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, the class creates an online version of the image they designed in the previous lesson.
              description_teacher: Students are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.
            Variables:
              name: 變數
              description_student: This lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks.  Afterwards, the class uses variables to save a random number, allowing the programs to use the same random number multiple times.
              description_teacher: In this lesson students learn how to use variables to label a number in their program or save a randomly generated value. Students begin the lesson with a very basic description of the purpose of a variable. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number. Students use variables to save a random number to see that variables actually store or save their values, allowing them to use the same random number multiple times in their programs.
            Random Numbers:
              name: 隨機取數
            Sprites and Animations:
              name: 角色與動畫
            Text and Captioned Scenes:
              name: 文字與字幕場景
            The Draw Loop:
              name: draw（繪圖）迴圈
              description_student: This lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. Afterwards, everyone uses what they learned to update the sprite scene from the previous lesson.
              description_teacher: In this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. At the end of the lesson students use what they learned to update their sprite scene from the previous lesson.
            The Counter Pattern Unplugged:
              name: 計數器模式（不插電）
              description_student: 本不插電課堂說明變數的基本行為。班級學生會使用記事卡與字串模擬程式內的變數，以實作一些簡短程式。熟悉這種程式語法後，班級學生便會使用相同流程與角色屬性，追蹤角色在螢幕上的進展。
              description_teacher: 學生會在不插電活動中，瞭解變數的基本行為。學生會使用記事卡與字串模擬程式內的變數，以實作一些簡短程式。熟悉這種程式語法後，學生便會使用相同流程與角色屬性，追蹤角色在螢幕上的進展。
            Sprite Movement:
              name: 角色動作
              description_student: By combining the Draw Loop and the Counter Pattern, the class writes programs that move sprites across the screen, as well as animate other sprite properties.
              description_teacher: By combining the Draw Loop and the Counter Pattern, students write programs that move sprites across the screen, as well as animate other sprite properties.
            Booleans Unplugged:
              name: 布林值（Boolean）（不插電）
              description_student: 本課堂介紹布林值（boolean）與邏輯，以及條件式（conditional）陳述句。班級課堂開始時，學生首先會玩一款簡單的「站起、坐下」遊戲。在遊戲中，布林值（true/false）陳述句用於描述個人屬性（頭髮或眼睛顏色、衣著類型等）。然後，班級同學將依據越來越複雜的布林值陳述句將物件分組，並觀察條件式可怎樣影響程式的流程。
              description_teacher: |-
                在本課堂中，學生會學習布林值（boolean）與邏輯，以及條件式（conditional）陳述句。班級課堂開始時，學生首先會玩一款簡單的「站起、坐下」遊戲。在遊戲中，布林值（true/false）陳述句用於描述個人屬性（頭髮或眼睛顏色、衣著類型等）。這樣，學生就可思考怎樣以二元問題（只有兩個答案），把可能有多個值（例如年齡）的屬性放進框架中。

                然後，學生將會收到一組物件，其物理性質相似但有所差異。學生會與同伴一起，依據越來越複雜的布林值陳述句把該等物件分組，其中包括帶 AND 與 OR 的複合布林值。

                最後，我們會揭曉以條件式做為決策工具，或使用布林值陳述句做為輸入，以影響程式流程。
            Conditionals:
              name: 條件判斷（Conditionals）
              description_student: The class starts by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, the class adds conditional if statements to write code that responds to those boolean comparisons.
              description_teacher: Students start by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, students add conditional _if_ statements to write code that responds to those boolean comparisons.
            Keyboard Input:
              name: 鍵盤輸入
              description_student: Following the introduction to booleans and if statements in the previous lesson, students are introduced to a new block called keyDown() which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
              description_teacher: Following the introduction to booleans and _if_ statements in the previous lesson, students are introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
            Other Forms of Input:
              name: 其他輸入形式
              description_student: 班級裡的同學將繼續學習不同方式使用條件式陳述句擷取使用者輸入的內容。除了昨天學到的簡單 keyDown() 命令外，學生也會學習幾項其他鍵盤輸入命令，以及擷取滑鼠輸入的方式。
              description_teacher: 在本課堂中，學生將繼續學習不同方式使用條件式陳述句擷取使用者輸入的內容。除了昨天學到的簡單「keyDown()」命令外，學生也會學習幾項其他鍵盤輸入命令，以及擷取滑鼠輸入的方式。
            Project - Interactive Card:
              name: 專案 - 互動式卡片
              description_student: In this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point.
              description_teacher: In this cumulative project for Chapter 1, students plan for and develop an interactive greeting card using all of the programming techniques they've learned to this point.
            Velocity:
              name: 速度
              description_student: After a brief review of how the counter pattern is used to move sprites, the class is introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
              description_teacher: After a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
            Collision Detection:
              name: 碰撞檢測
              description_student: The class learns about collision detection on the computer.  Pairs explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  The class then uses the isTouching() block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
              description_teacher: Students learn about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
            Complex Sprite Movement:
              name: 複合角色動作
              description_student: 'The class learns to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement, such as simulating gravity, making a sprite jump, and allowing a sprite to float left or right. In the final levels the class combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects coins. '
              description_teacher: Students learn to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. In particular students will learn how to simulate gravity, make a sprite jump, and allow a sprite to float left or right. In the final levels of the Code Studio progression students combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects a coin. Students are encouraged to make their own additions to the game in the final level.
            Collisions:
              name: 碰撞
              description_student: The class programs their sprites to interact in new ways.  After a brief review of how they used the isTouching block, the class brainstorms other ways that two sprites could interact.  They then use isTouching to make one sprite push another across the screen before practicing with the four collision blocks (collide, displace, bounce, and bounceOff).
              description_teacher: Students program their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`).
            Functions:
              name: 函式
              description_student: This lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab.  At the end of the lesson the class uses these skills to organize and add functionality to the final version of their side scroller game.
              description_teacher: Students learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. An unplugged warmup explores how directions at different levels of detail can be useful depending on context. Students learn that higher level or more abstract steps make it easier to understand and reason about steps. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function. At the end of the lesson students use these skills to organize and add functionality to the final version of their side scroller game.
            The Game Design Process:
              name: 遊戲設計流程
              description_student: This lesson introduces the process the class will use to design games for the remainder of the unit. The class walks through through this process in a series of levels. As part of this lesson the class also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson they have an opportunity to make improvements to the game to make it their own.
              description_teacher: This lesson introduces students to the process they will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. In this lesson students begin by playing a game on Game Lab where the code is hidden. They discuss what they think the sprites, variables, and functions would need to be to make the game. They are then given a completed project guide which shows one way to implement the game. Students are then walked through this process through a series of levels. As part of this lesson students also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson students have an opportunity to make improvements to the game to make it their own.
            Using the Game Design Process:
              name: 使用遊戲設計流程
              description_student: In this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes.
              description_teacher: In this multi-day lesson, students use the problem solving process from Unit 1 to create a platform jumper game.  They start by looking at an example of a platform jumper, then define what their games will look like.  Next, they use a structured process to plan the backgrounds, variables, sprites, and functions they will need to implement their game.  After writing the code for the game, students will reflect on how the game could be improved, and implement those changes.
            Project - Design a Game:
              name: 專案 - 設計一個遊戲
              description_student: The class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class shares out the completed games.
              description_teacher: Students will plan and build their own game using the project guide from the previous two lessons to guide their project. Working individually or in pairs, students will first decide on the type of game they'd like to build, taking as inspiration a set of sample games. They will then complete a blank project guide where they will describe the game's behavior and scope out the variables, sprites, and functions they'll need to build. In Code Studio, a series of levels prompts them on a general sequence they can use to implement this plan. Partway through the process, students will share their projects for peer review and will incorporate feedback as they finish their game. At the end of the lesson, students will share their completed games with their classmates. This project will span multiple classes and can easily take anywhere from 3-5 class periods.
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
            Text:
              name: 文字
            Sprites:
              name: 角色
          student_description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
        coursea-2020:
          title: 課程 A（2019）
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          description_short: 為學齡前兒童設計的計算機科學指引。
          description_audience: 年齡：4-7
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
          lessons:
            Going Places Safely:
              name: 安全的遨遊網路世界
              description_student: 學習瀏覽網路的安全守則。
              description_teacher: 與 Common Sense 媒體合作，這課在讓學生學習到網站會要求提供私人訊息，並會討論如何負責的處理這類請求。學生也會對神奇的網路世界感到興奮，但他們必須遵守某些規則來維護自己的安全。
            Learn to Drag and Drop:
              name: 學習滑鼠的拖放
              description_student: 以點擊與拖放的方式完成謎題。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            'Programming: Happy Maps':
              name: 快樂地圖
              description_student: 編寫指令，讓 Flurb 走到水果那裡。
              description_teacher: 本不插電課堂會把各團隊集合一起完成一項簡單任務：讓「Flurb」走到水果那裡。學生會練習把指令轉換成提供的符號，從而編寫準確的指令。若程式碼中出現問題，學成便應一起識別錯誤和制定解決方案。
            Sequencing with Scrat:
              name: 和鼠奎特一起學序列
              description_student: 為鼠奎特設計程式，讓他能夠拿到橡樹果實。
            Programming in Ice Age:
              name: 和鼠奎特一起寫程式
              description_student: 編寫程式，幫助鼠奎特拿到橡樹果實。
              description_teacher: 學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。
            Programming with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起寫程式
              description_student: 協助 BB-8 收集廢金屬。
              description_teacher: 在本課堂中，學生會以更複雜的方式運用新的程式設計技巧，與 BB-8 一起完成更巧妙的關卡。
            'Loops: Happy Loops':
              name: 迴圈（Loops） - 快樂迴圈
              description_student: 使用迴圈（loop），幫助 Flurb 解決更棘手的問題。
              description_teacher: 這個活動會回到「快樂地圖」。這次，學生會使用程式碼，解決更大型且更長的謎題，讓他們觀察結構如何變得更實用，從而以更簡易的方式編寫更長的程式碼。
            Loops in Ice Age:
              name: 和鼠奎特一起學迴圈（Loop）
              description_student: 使用迴圈，幫助鼠奎特更快完成任務。
              description_teacher: 這個舞台會以「快樂迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集橡樹果實。
            Loops in Collector:
              name: 與 Laurel 一起學習迴圈
              description_student: 幫探險家 Laurel 收集地底的寶藏。
            Ocean Scene with Loops:
              name: 海洋場景與迴圈（Loop）
              description_student: 使用迴圈與模式完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            'Events: The Big Event':
              name: 小小大事件
              description_student: 教師按下巨型遙控器的按鈕後，學生便會移動和大叫。
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            Events in Play Lab:
              name: 讓事件活動起來
              description_student: 創作自己的遊戲或故事。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        courseb-2020:
          title: 課程 B（2019）
          description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          description_short: 為學前兒童準備的電腦科學介紹。類似課程 A，但採用更深入的概念。
          description_audience: 年齡 5-8
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_impacts:
              display_name: 運算的影響
            csf_events:
              display_name: 事件
          lessons:
            Your Digital Footprint:
              name: 你的數位足跡
              description_student: 瞭解自己的數位足跡，並學習怎樣在瀏覽網站時保持安全。
              description_teacher: 與 [r common-sense-media] 媒體合作，這課在讓學生瞭解訪問虛擬世界就像在現實世界中一樣要隨時注意自己的安全。學生還會學習到在網路上的訊息都會留下數位足跡（digital footprint），至於痕跡的大小、利弊，就要靠他們自己來管理。
            Move It, Move It:
              name: 移動它，移動它
              description_student: 為你的同學設計程式，讓同學小心翼翼從某處移動到另一處。
              description_teacher: 本課堂會讓學生在心理上準備好程式編寫練習，他們會在整個課程中遇到這些練習。學生會組成小隊，以實體活動為同學設計程式，讓同學從某個位置踏步到踏一個位置，直到到達終點。
            Sequencing in Maze:
              name: 迷宮中的循序（Sequence）
              description_student: 協助憤怒鳥在道路上移動至搗蛋豬的位置。
            Programming in Maze:
              name: 與憤怒鳥一起編程
              description_student: 製作程式，協助憤怒鳥完成迷宮。
            Programming in Harvester:
              name: 和農夫一起學程式
              description_student: 幫助收割者在路上收集蔬菜。
              description_teacher: 學生會把所學到的程式設計概念，應用到收割者遊戲的環境中。現在不僅是讓角色到達終點 - 學生必須使用新的積木收集玉米。他們會繼續建立順序演算法的技巧，並開始運用除錯流程。
            'Loops: Getting Loopy':
              name: 學習迴圈
              description_student: 在本課堂中，我們會使用重複迴圈舉行舞蹈派對！
              description_teacher: 我們開始設計更長和更有趣味的程式時，程式碼裡通常都會有大量重複內容。在本課堂中，學生會瞭解怎樣使用迴圈，以更簡易的方式傳達含大量重複內容的指令。學生會觀察舞蹈中的重複移動模式。
            Loops in Harvester:
              name: 與農夫一起學迴圈（Loops）
              description_student: 使用迴圈，幫助收割者收集更多農作物！
              description_teacher: 這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集玉米。
            Loops in Collector:
              name: 與 Laurel 一起學習迴圈
              description_student: 為冒險家 Laurel 編寫程式，讓她能夠在開放的洞穴中收集寶藏。
              description_teacher: 在本課堂中，學生會繼續學習迴圈（loop）的概念。在這裡，冒險家 Laurel 會使用迴圈，在開放的洞穴中收集寶藏。這個時候會介紹新的「get treasure」（取得寶藏）積木，協助她完成旅程。
            Loops in Artist:
              name: 使用迴圈（Loop）在花園中繪畫
              description_student: 使用模式與迴圈完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個線上課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，學生會使用迴圈建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            The Right App:
              name: 合適的應用程式
              description_student: 製作你自己的智慧型手機應用程式草稿。
              description_teacher: 本課堂會讓學生明白，電腦可協助現實生活中的大眾。首先，學生會理解一些虛構的智慧型手機使用者，以協助他們找出「合適的應用程式」解決他們的需要。然後，學生會練習同理心與創意，製作自己的智慧型手機應用程式草稿，解決下一位使用者的需要。
            'Events: The Big Event':
              name: 小小大事件
              description_student: 老師按下巨型遙控器的按鈕後，你便會移動或是大叫。
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            Events in Play Lab:
              name: 以事件（Event）展開皇家大戰
              description_student: 使用事件製作故事或互動遊戲。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            Digital Trails:
              description_student: 瞭解自己的數位足跡，並學習怎樣在瀏覽網站時保持安全。
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        coursec-2020:
          title: 課程 C（2019）
          description: 以序列、迴圈與事件製作程式。將你的姓名首字母轉換成二進制碼，瞭解不同的問題解決技巧，以及學習怎樣應付網路欺凌。在課程結束時，你可創造出自己的遊戲或故事，然後向別人分享！
          description_short: 學習基本的計算機科學，創造屬於你自己的藝術、故事、遊戲作品。
          description_audience: 年齡 6-10
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_binary:
              display_name: 二進制（Binary）
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
            csf_data:
              display_name: 數據
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            Screen Out the Mean:
              name: 防止壞蛋騷擾
              description_student: 在本課堂中，你會學習：假如在線上有些事情讓你感到憤怒、傷心或害怕，你應該怎麼辦。
              description_teacher: |-
                本課堂會協助孩童瞭解，若線上某些事情令他們憤怒、傷心或害怕，就必須告訴可以信賴的成人。 \\r
                \\r
                學生會明白在上線時，其他人有時候可能會做出霸凌者的行為。他們會探索甚麼是網路霸凌，以及在遇到這些情況時可以做些甚麼。觀看一個卑劣的線上行為情景後，學生會討論甚麼是網路霸凌、這種行為會讓別人有甚麼感覺，以及應該怎樣應對。最後，學生會運用自己的知識，在日誌上製作簡單的網路霸凌提示表。\\r
            Powerful Passwords:
              name: 強大的密碼
              description_student: 在本課堂中，你會瞭解密碼可怎樣保護你的資訊，以及怎樣才算是好的密碼。
              description_teacher: |-
                學生會瞭解大家為甚麼要使用密碼、瞭解使用密碼的優點，並發掘各種策略，從而建立並保管強效、安全的密碼。\\r
                \\r
                學生會學習密碼要訣、以互動遊戲測試現有的密碼，並依據強效密碼指引來建立新密碼。\\r
            'Programming: My Robotic Friends':
              name: 我的小機器人朋友
              description_student: 在本課堂中，你會假設同學是機器人，然後為他們設計程式，建立杯子堆疊的模式。
              description_teacher: 學生會使用一組符號來代替程式碼，設計演算法指示「機器人」把杯子疊起成不同的模式。學生會輪流扮演機器人，且僅回應同伴定義的演算法。這個部分會教導學生符號和行動關的聯繫、演算法和程式間的分別，以及有用的除錯技巧。
            Programming in Maze:
              name: 與憤怒鳥一起編程
              description_student: 與憤怒鳥一起學習序列與演算法。
              description_teacher: 學生會使用憤怒鳥遊戲中的角色開發序列演算法，讓憤怒鳥能夠從迷宮的一側移動到另一側的豬那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓憤怒鳥向前、向左或是向右移動。
            Debugging in Maze:
              name: 在迷宮中除錯
              description_student: 在謎題中尋找問題，並練習你的除錯技巧。
              description_teacher: 除錯是學習設計程式的重要元素。在本課堂中，學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。
            Programming in Collector:
              name: 和 Laurel 一起收集寶石
              description_student: 編寫演算法，幫助探險家 Laurel 收集大量寶石！
              description_teacher: 在這組謎題中，學生會繼續增加對演算法和除錯的瞭解。學生會遇到新角色：探除家 Laurel，並製作序列演算法，讓 Laurel 能夠在道路上行走時收集寶藏。
            Programming in Artist:
              name: 用代碼創作藝術
              description_student: 為藝術家設計程式，製作漂亮的圖像。
              description_teacher: 在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。
            Binary Bracelets:
              name: 二進制手環
              description_student: 製作屬於你自己的二進制手環，並學習電腦怎樣記得資訊！
              description_teacher: 二進制在電腦世界中極為重要。現代的大多數電腦都會以二進制形式儲存所有類型的資訊。本課堂會協助展示：怎樣能夠把現實世界的東西，轉換成一系列的開/關。
            'Loops: My Loopy Robotic Friends':
              name: 我的愛迴圈小機器人朋友
              description_student: 在本課堂中，你會再次為同學設計程式，但會使用迴圈（loop），這樣，你便能夠解決更龐大、更複雜的問題。
              description_teacher: 學生會以最初的「我的機器人朋友」活動為基礎，處理更大型且更複雜的設計。為了幫助「機器人」設計程式，以完成這些更大型的設計，學生將需要找出指令裡有哪些重複模式可使用迴圈（loop）取代。
            Loops with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
              description_student: 使用迴圈（loop），幫助 BB-8 完成各個迷宮！
              description_teacher: 這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生用迴圈協助 BB-8 更有效率的遊歷迷宮。
            Loops in Harvester:
              name: 使用迴圈（Loop）收割農作物
              description_student: 我們來使用迴圈（loop），幫助收割者收割蔬菜！
              description_teacher: 在前一個舞台中，學生曾經使用（loop）畫出優美的圖畫。現在，他們會開始讓新的動作迴圈，協助收割者收集許多大簇蔬菜！\\r
            Looking Ahead:
              name: 與 Minecraft 一起展望未來
              description_student: 躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            Sticker Art with Loops:
              name: 使用迴圈（Loop）繪畫貼紙藝術
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            'Events: The Big Event':
              name: 大事件
              description_student: 玩一款有趣的遊戲，學習使用事件。
              description_teacher: 學生很快會知道，事件是很好的方式，在預先編寫好的演算法中增加靈活性。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。事件可讓你的程式更有趣，而且有更多互動。
            Build a Flappy Game:
              name: 製作像素鳥遊戲
              description_student: 以你喜歡的方式隨意製作像素鳥遊戲，並盡情與朋友分享！
              description_teacher: 在這個特別舞台中，學生會開始製作自己的第一款像素鳥遊戲。他們會使用事件處理器偵測滑鼠點擊與物件碰撞。在關卡結束時，學生將能夠自訂遊戲，變更視覺元素或規則。
            Events in Play Lab:
              name: 使用事件（Event）玩追逐遊戲
              description_student: 是時候發揮創意，在 Play Lab 中製作遊戲！
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            Picturing Data:
              name: 描繪資料
              description_student: 資料可用來幫助學生瞭解自己的世界，並解答有趣的問題。在本課堂中，學生會收集一個 Play Lab 專案的資料，並使用不同類型的圖表將資料視覺化。
              description_teacher: 資料可用來幫助學生瞭解自己的世界，並解答有趣的問題。在本課堂中，學生會收集一個 Play Lab 專案的資料，並使用不同類型的圖表將資料視覺化。
            'End of Course Project: Create a Play Lab Game':
              name: 課程結束專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
              description_teacher: 本總結課堂會引導學生重溫設計、開發與展示 Play Lab 專案的流程！為了確保流程順暢，我們已提供循序漸進的結構，方面學生按照結構工作 - 從紙張上計畫到在我們的網站上編寫程式。此外，我們也提供多種構思，協助教師完成最終展示！
            Password Power-Up:
              description_student: 在本課堂中，你會瞭解密碼可怎樣保護你的資訊，以及怎樣才算是好的密碼。
          student_description: 以序列、迴圈與事件製作程式。將你的姓名首字母轉換成二進制碼，瞭解不同的問題解決技巧，以及學習怎樣應付網路欺凌。在課程結束時，你可創造出自己的遊戲或故事，然後向別人分享！
        coursed-2020:
          title: 課程 D（2019）
          description: 學生學習巢狀迴圈、當迴圈、條件與事件，除了編碼，學生還會學到什麼是數位公民。
          description_short: 學習條件式陳述句。你可製作自己的藝術品、遊戲，甚至舞蹈派對！
          description_audience: 年齡 7-11
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_events:
              display_name: 事件
            csf_loops:
              display_name: 迴圈
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            csf_binary:
              display_name: 二進制（Binary）
            csf_digcit:
              display_name: 數位公民
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 方格紙編程
              description_student: 在本課堂中，你會為同學設計程式，讓同學能夠畫畫！
              description_teacher: 學生會互相為對方「設計程式」繪畫，從而有機會以有趣且無障礙的方式，體驗程式設計中的一些核心概念。班級課堂開始時，首先會讓學生使用符號，互相指導對方在方格紙上的正方形裡填色，以重現出現有的圖片。如果時間允許，課堂結束時可以讓學生自行創作圖像。
            Introduction to Online Puzzles:
              name: 線上謎題簡介
              description_student: 本課堂會讓你練習本課程中需要的技巧。
              description_teacher: 在這組謎題中，首先會向學生簡介（或重溫，視你的班級經驗而定） Code.org 的線上工作區。我們有各種影片指出工作區的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕。這些影片也會說明怎樣拖曳 Blockly 積木、刪除 Blockly 積木與連接 Blockly 積木。之後，學生會在迷宮裡練習_序列_與_除錯_技巧。接著，學生會在學習_迴圈_的基本知識時看到一些新的謎題類型，例如收藏家、藝術家與收割者。
            Relay Programming:
              name: 接力編程
              description_student: 還記得課程開始時，你使用程式碼繪畫嗎？在本課堂中，你會與一個團隊合作，做一些類似的事情！
              description_teacher: 這項活動首先會以簡短的課堂開始，內容關於除錯與堅持，然後會快速轉至倒數計時活動，學生會分為多個團隊，一起編寫程式，每次編寫一項指令。
            Debugging in Collector:
              name: 和 Laurel 學除錯（Debug）
              description_student: 在編寫程式時，你是否遇到過問題？在本課堂中，你會學習除錯的秘密。除錯是找出並解決程式碼問題的流程。
              description_teacher: 在這項線上活動中，學生會在「收藏家」環境中練習除錯。他們會練習閱讀與編輯程式碼，從而使用簡單的演算法、迴圈（loop）與巢狀迴圈（nested loop），修正謎題中的錯誤。
            Events in Bounce:
              name: 彈板遊戲中的事件（Event）
              description_student: 有沒有想過，你可以在學校玩電子遊戲？在本課堂中，你將有機會製作自己的遊戲！
              description_teacher: 在這項線上活動中，學生會學習甚麼是事件（event），以及電腦怎樣在程式（例如電子遊戲）中使用事件。學生會在各種謎題中，讓程式，對事件做出反應（例如按下箭頭按鈕後）。在謎題結束時，學生將有機會以不同的速度與聲音自訂遊戲。
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
              description_student: 在本課堂中，建立自己的星際大戰遊戲，感受原力的震撼！
              description_teacher: 在本課堂中，學生會練習使用事件（event）製作遊戲，並可在線上分享。在 R2-D2 和其他星際大戰的角色陪伴下，學生會在引導下學習各種事件，然後自由製作屬於自己的遊戲。
            Loops in Ice Age:
              name: 冰河歷險紀中的迴圈
              description_student: 在本課堂中，你會使用 repeat（重複）積木，協助鼠奎特以最有效率的方式拿到橡樹果實。
              description_teacher: 這個舞台是使用迴圈（loop）的快速更新（或簡介），會讓學生使用「repeat」（重複）積木，讓鼠奎特以更有效率的方式拿到橡樹果實。
            Loops in Artist:
              name: 以迴圈（Loop）繪畫藝術作品
              description_student: 在本課堂中，迴圈（loop）讓你更容易在藝術家中製作酷炫的圖像！
              description_teacher: 本課堂以學生先前在課堂中對迴圈（loop）的認識為基礎，讓學生有機會真正發揮創意。這項活動也會做為除錯練習，獲得額外的問題解決機會。
            Nested Loops in Bee:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明你在建立巢狀迴圈（nested loop）時會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
              description_student: 是時候玩一款遊戲，讓你僅在某些條件下賺到點數！
              description_teacher: |-
                本課堂會展示條件式（conditional）可怎樣用來量身制定程式處理特定資訊。我們設計程式時，並不總是能得到全部需要的資訊。有時候在不同的情況下，你需要做一些不同的事情，即便你不知道在執行程式時哪種情況為真。這時候，條件式就派得上用場了。條件式可讓電腦在每次執行你的程式碼時，依據真（true）的資訊做出決定。r
                \\r
            Conditionals in Bee:
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
              description_student: 你已明白甚麼是條件式（conditional）。現在是時候為蜜蜂設計程式，讓蜜蜂在採集蜂蜜與花蜜時使用。
              description_teacher: 到了這個階段，學生已設計了程式，讓程式每次都使用相同的方法執行。這種做法十分可靠，不過欠缺點彈性。在本課堂中，班級同學將會開始使用條件式（conditional）編寫程式，讓他們編寫出來的程式，可依據程式遇到的特定條件，以不同方式運作。
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
              description_student: 迴圈（loop）在程式編寫中非用實用。本課堂會教你其中一種：while（當）迴圈！
              description_teacher: |-
                學生學習這個課堂時，應已經充分練習使用「repeat」（重複）迴圈。現在是時候把各種知識結合在一起了。\\r
                \\r
                _While（當）迴圈_用於在符合某項條件時繼續重複命令。程式設計師使用 while 迴圈的情況是：不知道確實需要重複多少次命令，但是知道哪些條件需要是 true，讓迴圈可以繼續重複。例如，學生將會在農夫遊戲中填滿坑洞與挖出土堆。他們不會知道坑洞的大小或土堆的高度，但是會知道只要地面不平坦，便需要一直填滿坑洞與挖出土堆。
            Until Loops in Maze:
              name: 迷宮裡的 until（直到）迴圈
              description_student: 使用 until（直到）迴圈，你就可成就一些精彩的事情！
              description_teacher: 在本課堂中，學生會學習「until」（直到）迴圈。學生會製作程式，讓主角重複動作，「直到」主角到達所需的停駐點。
            Conditionals & Loops in Harvester:
              name: 使用條件式（Conditional）收割農作物
              description_student: 我們不會總是清楚瞭解要在甚麼時候使用每項條件式（conditional）。本課堂會幫你練習決定要怎樣做。
              description_teacher: 學生會練習「while」（當）迴圈、「until」（直到）迴圈與「if/else」（如果/否則）陳述句。這幾種積木都會使用條件式。練習全部積木後，學生便會學習到如何編寫複雜且具靈活性的程式碼。
            'Unplugged: Binary':
              name: 二進制圖像
              description_student: 瞭解電腦怎樣使用只有 2 種選項的語言來儲存圖片。
              description_teacher: 雖然很多人認為二進制就是一堆的 0 和 1，但是學生會學習一種概念：資訊可以用不同的二進制表達法表示。這堂課將更深入這個觀念，說明電腦如何同樣的以二進制儲存更複雜的訊息（例如圖像和顏色）。
            Artist Binary:
              description_student: 在本課堂中，你會學習怎樣僅使用 0 和 1 就能製作圖像。
              description_teacher: 這個線上課堂系列，會讓學生學習使用開/關來製作圖像。
            Digital Citizenship:
              name: 數位公民
              description_student: 有些資訊在網上分享是不安全的。本課將讓學生瞭解安全資訊和私人資訊之間的區別。
              description_teacher: |-
                與 [r common-sense-media] 媒體合作，這課有助學生批判性的思考某些網站的請求或要求的使用者訊息相關問題。\\r
                \\r
                學生會學到隱私訊息和個人訊息的不同，分辨在網路上分享什麼資料是安全的，什麼是不安全的。
            Dance Party:
              name: 舞蹈派對
              description_student: 現在是時候慶祝一下了！你會在本課堂中編寫程式，製作自己的互動舞蹈派對。
              description_teacher: 在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。
            Dance Part:
              name: 舞蹈派對
            End of Course Project:
              name: 課程結束專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
          student_description: 學生學習巢狀迴圈、當迴圈、條件與事件，除了編碼，學生還會學到什麼是數位公民。
        coursee-2020:
          title: 課程 E（2019）
          description: 首先使用演算法（algorithm）、迴圈（loop）、條件式（conditional）和事件（event）開始編寫程式，然後你將會學習函式（function）。在本課程的第 2 部分，你便會開始設計和製作一個總結專案，並可與你的好友和家人分享。
          description_short: 預覽課程 C & D 的概念，進一步的學習函式。
          description_audience: 年齡 8-12
          lesson_groups:
            ramp_up:
              display_name: 提升
            csf_sprites:
              display_name: 角色
            csf_digcit:
              display_name: 數位公民
            csf_nested_loops:
              display_name: 巢狀迴圈
            csf_functions:
              display_name: 函式
            csf_impacts:
              display_name: 運算的影響
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            Sequencing in the Maze:
              name: 迷宮中的陣列（Sequence）
              description_student: 在本課堂中，你會學習怎樣編寫自己的程式！
              description_teacher: |-
                在這組謎題中，首先會向學生簡介（或重溫，視你的班級經驗而定） Code.org 的線上工作區。我們有各種影片指出工作區的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕。這些影片也會說明怎樣拖曳 Blockly 積木、刪除 Blockly 積木與連接 Blockly 積木。之後，學生會在迷宮裡練習_序列_與_除錯_技巧。接著，學生會在學習_迴圈_的基本知識時看到一些新的謎題類型，例如收藏家、藝術家與收割者。\\r
                除錯是學習設計程式的重要元素。學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。
            Programming and Loops with the Artist:
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Minecraft 中的條件式：水上巡航 '
              description_student: 你會在 Minecraft 的世界裡學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            Conditionals:
              name: 與農夫一起嘗試條件式（Conditional）
              description_student: 在這個有趣而具挑戰的遊戲系列中，你會告訴電腦在某些特定條件下如何行動。
              description_teacher: 本課堂會向學生介紹「while」（當）迴圈與「if / else」（如果/否則）陳述句。_While 迴圈_ 用於在條件是 true 時繼續重複命令。While 迴圈的使用情況是：程式設計師不知道命令確實需要重複多少次，但是知道哪項條件需要為 true，才可讓迴圈繼續重複。「If / Else」陳述句為程式設計提供彈性，程式僅會在某個項目為 true 時執行整個部分，否則便會執行其他項目。
            Simon Says:
              name: 老師說
              description_student: 玩一款遊戲，想想需要使用哪些命令才可獲得正確的結果。
              description_teacher: 在本課堂中，學生會玩一款遊戲，目的是讓他們思考一下，需要以甚麼方式提供命令，才可獲得正確的結果。這樣就可幫助他們更容易在往後的課堂中過渡到 Sprite Lab。
            Learning Sprites with Sprite Lab:
              name: Sprite Lab 中的游泳小魚
              description_student: 學習建立與編輯角色（sprite）。
              description_teacher: 在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。
            Alien Dance Party with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
              description_student: 製作可與同學分享的互動專案。
              description_teacher: 本課堂會介紹 Sprite Lab，這是一個工作平台，讓學生可在這裡製作自己的互動式動畫和遊戲。除了「行為」外，學生今天會結合做為「事件」的使用者輸入，以製成「外星人舞蹈派對」。
            Private and Personal Information:
              name: 隱私與個人資訊
              description_student: 網際網路刺激有趣，但是也有必要保持安全！本課堂會教你有哪些資訊可安全分享，有哪些資訊則應保持私密。
            About Me:
              description_student: 學生會使用 SpriteLab 製作互動海報，從而應用在網際網路上分享個人與私人資訊的知識。
              description_teacher: 學生會使用 SpriteLab 製作互動海報，從而應用在網際網路上分享個人與私人資訊的知識。\\r
            Access Ability:
              name: 以無障礙為目的設計程式
              description_student: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
              description_teacher: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
            Nested Loops in Bee:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Nested Loops in Artist:
              description_student: 更多巢狀迴圈（nested loop）！這一次，你將能夠使用巢狀迴圈製作一些非常漂亮的圖畫！
              description_teacher: 學生會在今天的謎題組合中，使用藝術家來製作精美的圖像。學生會繼續練習巢狀迴圈（nested loop），並訂立新的目標，從而瞭解迴圈在整體上的更多用法。這套謎題也有激發創意的潛力，讓學生有機會在舞台的末尾部分創造自己的設計。
            Nested Loops in Frozen:
              name: 在冰雪奇緣中使用巢狀迴圈（Nested Loop）
              description_student: 安娜與艾莎的滑冰技術非常出眾，但是需要你的協助，在冰上建立模式。請使用巢狀迴圈（nested loop）製作非常酷炫的效果！
              description_teacher: 學生已學懂怎樣把迴圈分層，現在他們可製作許多漂亮的東西。本課堂會把學生帶到一系列的練習中，協助他們運用安娜與艾莎的優秀滑冰技巧，製作適用於自己個人作品的圖像！
            'Functions: Songwriting':
              name: 歌曲創作
              description_student: 即使是搖滾巨星也需要程式設計技巧。本課堂會用歌曲裡的歌詞教授函式。
              description_teacher: 在電腦科學世界中，函式（function）可以說是最壯觀的結構之一。函式有時候稱為程序，是在龐大的程式中的一些迷你程式，可以不斷重複利用。本課堂將會幫助學生直觀的瞭解，為甚麼把這麼多零碎的程式碼組合成函式是非常有用的做法。
            Functions in Minecraft:
              name: Minecraft 中的函式
              description_student: 你能指出要如何利用函式提高編程效率嗎？
              description_teacher: 在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！
            Functions in Harvester:
              name: 在收割者遊戲中學習函式（Function）
              description_student: 協助農夫收割農作物時，函式（function）可為你省下大量工夫！
              description_teacher: 學生已練習在藝術家遊戲中製作精彩的設計，並在蜜蜂遊戲中遊走，但他們今天會使用函式（function），在收割者遊戲中收割農作物。本課堂會鼓勵學生以新的方式使用函式：把函式和「while」（當）迴圈與「if/else」（如果/否則）陳述句結合起來。
            Functions in Artist:
              name: 在藝術家遊戲中使用函式（Function）
              description_student: 使用函式，以更簡易的方式繪畫複雜的圖畫！
              description_teacher: 學生會在藝術家遊戲中學習使用函式（function）。他們會製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。
            End of Course Project:
              name: 課程結束專案
              description_student: 這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！
              description_teacher: |-
                接下來的 4 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是多個課堂或多個星期的體驗，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。\\r
                \\r
                在探索階段中，學生將會試玩預先製作完成的藝術家與 Sprite Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家、Sprite Lab 或其他他們熟悉的介面中製作自己的專案（這可能是專案中最長的階段）。最後，學生將能夠向同伴展示自己的成品。
            Digital Sharing:
              name: 數位分享
              description_student: 在本課堂中，你會學到所有權與著作權方面的挑戰與優點。
              description_teacher: 本課堂由「著作權與創意」團隊借予電腦科學基礎。提供本課堂之目的，是協助學生瞭解尊重所有權與著作權的挑戰和優點，尤其是在數位環境中。教師應鼓勵學生，我們是遵守道德的數位公民，重點之一是尊重藝術家的權利。
            Designing for Accessibility:
              name: 以無障礙為目的設計程式
              description_student: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
              description_teacher: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
          student_description: 首先使用演算法（algorithm）、迴圈（loop）、條件式（conditional）和事件（event）開始編寫程式，然後你將會學習函式（function）。在本課程的第 2 部分，你便會開始設計和製作一個總結專案，並可與你的好友和家人分享。
        coursef-2020:
          title: 課程 F（2019）
          description: 學習使用不同類型的迴圈（loop）、事件（event）、函式（function）與條件式（conditional）。研究不同的問題解決技巧，並討論電腦運算和網際網路的社會影響。在本課程的第 2 部分，你會設計並製作一份總結專案，然後可把這個專案和好友與家人分享。
          description_short: 學習計算機科學的基礎概念，並創建自己的藝術、故事、遊戲作品。
          description_audience: 年齡 9-13
          lesson_groups:
            ramp_up:
              display_name: 提升
            csf_digcit:
              display_name: 數位公民
            csf_variables:
              display_name: 變數
            csf_data:
              display_name: 數據
            csf_for_loops:
              display_name: 計次迴圈（For Loops）
            csf_sprites:
              display_name: 角色
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            Functions in Minecraft:
              name: Minecraft 中的函式
              description_student: 你能指出要如何利用函式提高編程效率嗎？
              description_teacher: 在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！
            Learning Sprites with Sprite Lab:
              name: Sprite Lab 中的游泳小魚
              description_student: 學習建立與編輯角色（sprite）。
              description_teacher: 在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。
            Events with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
              description_student: 製作可與同學分享的互動專案。
              description_teacher: 本課堂會介紹 Sprite Lab，這是一個工作平台，讓學生可在這裡製作自己的互動式動畫和遊戲。除了「行為」外，學生今天會結合做為「事件」的使用者輸入，以製成「外星人舞蹈派對」。
            Loops with the Artist:
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Nested Loops in the Maze:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Envelope Variables:
              name: 信封變數
              description_student: "「信封」與「變數」有一個共通點：兩者都可放進有用的東西。在這裡，你會學習變數是甚麼，以及變數可以做哪些精彩的事。"
              description_teacher: 變數會用來做為值的佔位符，例如數字或詞語等。在程式設計中，變數可提供大量的自由度。電腦科學家不同輸入很多次同一個句子，或記住含糊的數字；他們可使用變數引用這些內容。本課堂會協助解釋甚麼是變數，以及我們可怎樣以不同方式使用變數。變數這種概念不容易掌握，因此我們建議在課堂結束時預留充足時間討論。
            Variables as Constant in Artist:
              name: 在藝術家遊戲中學習變數
              description_student: 別忘了把創意帶到課室！在這些謎題中，你會使用變數繪畫漂亮的圖畫。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀，即使在執行時各個值都沒有變更。
            Variables that Change in Bee:
              name: 在蜜蜂遊戲中變更變數
              description_student: 這隻蜜蜂很喜愛變數！
              description_teacher: 本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。
            Variables that Change in Artist:
              name: 在藝術家遊戲中變更變數
              description_student: 在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            Simulating Experiments:
              name: 模擬實驗
              description_student: 在電腦上執行模擬，並實驗一下變更參數後的情況。
              description_teacher: 在 Sprite Lab 上執行簡單模擬，學生便會體驗到電腦運算可怎樣用來收集資料，從而找出各種趨勢與模式。多次執行模擬後，學生便會有機會預測一下，變更模擬中的變數可能會怎樣影響結果，然後再測試這個假設。
            For Loop Fun:
              name: 有趣的計次迴圈
              description_student: 玩「for」（計數）迴圈，發掘無窮樂趣！
              description_teacher: 我們知道迴圈可以讓我們不斷重複的做同一件事情。現在，我們要學習如何使用本身有額外結構的迴圈。這些新結構可讓學生編寫更強大、更具動態的程式碼。
            For Loops in Bee:
              name: 與蜜蜂一起嘗試 for（計數）迴圈
              description_student: 嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！
              description_teacher: 本課堂以蜜蜂為角色，集中學習「for」（計數）迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後觀看 for 迴圈簡介，讓他們可更有效地解決複雜的問題。
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
              description_student: 準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。
              description_teacher: 在本課堂中，學生會繼續練習「for」（計數）迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與「for」迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。
            Internet:
              name: 網際網路
              description_student: 你有沒有想過，資訊怎樣在網際網路中傳輸？不是魔術！本課堂將會教導網際網路運作方面的基本知識。
              description_teacher: 即便許多人每天都會上網，但是理解其中原理的中卻不多。在本課堂中，學生會假裝流經網際網路，同時學習連線、URL、IP 位址與 DNS 的知識。
            Editing Behaviors:
              name: Sprite Lab 的行為（Behavior）
              description_student: 學習設計程式，控制自己角色的行為！
              description_teacher: 學生將在這裡使用 Sprite Lab，製作角色的自訂行為。
            Virtual Pet:
              name: 在 Sprite Lab 中製作虛擬寵物
              description_student: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              description_teacher: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
            The Power of Words:
              name: 語言的力量
              description_student: 欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。
            Crowdsourcing:
              name: 群眾外包（Crowdsourcing）
              description_student: 本課堂會教導你關於群眾外包（Crowdsourcing）的知識，這是以團隊製作專案的流程。
              description_teacher: 在電腦科學中，我們會面對一些重大而艱鉅的問題。各種挑戰，例如找出大質數或是 DNA 定序等，都是個人幾乎無法做到的事情。集合其他人的力量，就能夠管理這些工作。本課堂會向學生說明團隊合作在電腦科學行業中的效用。
            Digital Sharing:
              name: 數位分享
              description_student: 在本課堂中，你會學到所有權與著作權方面的挑戰與優點。
              description_teacher: 本課堂由「著作權與創意」團隊借予電腦科學基礎。提供本課堂之目的，是協助學生瞭解尊重所有權與著作權的挑戰和優點，尤其是在數位環境中。教師應鼓勵學生，我們是遵守道德的數位公民，重點之一是尊重藝術家的權利。
            End of Course Project:
              name: 課程結束專案
              description_student: 這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！
              description_teacher: |-
                接下來的 5 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是預期進行多個課堂或多個星期的專案，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。\\r
                \\r

                在「探索」階段中，學生將會嘗試預先製作完成的藝術家與 Sprite Lab 程式，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家或 Sprite Lab（或你方便提供的其他介面）中製作自己的專案（這可能是專案中最長的階段）。在測試與同儕審查後，學生會修訂自己的程式碼。最後，學生將能夠向同學展示自己的成品。
            AI for Oceans:
              name: 在海洋中使用的 AI
              description_student: 教程摘要：學生首先會把物件分類為「fish」（魚）或「not fish」（不是魚），從而嘗試清除海洋中的垃圾。然後，學生將需要擴充訓練資料集，加入屬於海洋的其他海洋生物。在活動的第 2 部分，學生會自行選擇標籤套用於隨機產生的魚中。這些訓練資料會在機器學習模型中使用，然後學習模型便應能夠自行標籤新的圖像。
          student_description: 學習使用不同類型的迴圈（loop）、事件（event）、函式（function）與條件式（conditional）。研究不同的問題解決技巧，並討論電腦運算和網際網路的社會影響。在本課程的第 2 部分，你會設計並製作一份總結專案，然後可把這個專案和好友與家人分享。
        express-2020:
          title: 速學課程（2019）
          description_short: 電腦科學簡介：結合我們最優秀的國小課程內容，供年齡較大的學生學習。
          description_audience: 年齡 9-18
          lesson_groups:
            csf_warmup:
              display_name: 熱身
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            csf_functions:
              display_name: 函式
            csf_variables:
              display_name: 變數
            csf_for_loops:
              display_name: 計次迴圈（For Loops）
            csf_sprites:
              display_name: 角色
            end_of_course_project:
              display_name: 課程結束專案
          lessons:
            Dance Party:
              name: 舞蹈派對
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            Debugging in Maze:
              name: 在迷宮中除錯
            Programming in Collector:
              name: 和收藏家學編程（Program）
            Programming in Artist:
              name: 在藝術家中學習程式設計
            Loops with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
            Nested Loops in Bee:
              name: 蜜蜂裡的巢狀迴圈（Nested Loops）
            Nested Loops in Frozen:
              name: 冰雪奇緣中的巢狀迴圈（Nested Loop）
            'Concept Practice with Minecraft ':
              name: 與 Minecraft 一起實踐所學
            Conditionals in Bee:
              name: 在蜜蜂遊戲中的條件式（Conditional）
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Minecraft 中的條件式：水上巡航 '
            Until Loops in Maze:
              name: 迷宮裡的 until（直到）迴圈
            Conditionals & Loops in Harvester:
              name: 收割者遊戲中的條件式（Conditional）與迴圈（Loop）
            Functions in Minecraft:
              name: Minecraft 中的函式
            Functions in Harvester:
              name: 收割者遊戲中的函式（Function）
            Functions in Artist:
              name: 藝術家遊戲中的函式（Function）
            Variables as Constant in Artist:
              name: 在藝術家中以變數做為常數
            Variables that Change in Bee:
              name: 在蜜蜂遊戲中更改的變數
            Variables that Change in Artist:
              name: 在藝術家遊戲中更改的變數
            For Loops in Bee:
              name: 蜜蜂遊戲中的 for（計數）迴圈
            For Loops in Artist:
              name: 藝術家中的計數迴圈（For Loops）
            Learning Sprites with Sprite Lab:
              name: 在 Sprite Lab 中學習角色（Sprite）
            Alien Dance Party with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
            Editing Behaviors:
              name: 行為的修改
            Virtual Pet with Sprite Lab:
              name: 在 Sprite Lab 中製作虛擬寵物
            Build A Project:
              name: 製作專案
            Swimming Fish with Sprite Lab:
              name: Sprite Lab 中的游泳小魚
            End of Course Project:
              name: 課程結束專案
            Programming with Angry Birds:
              name: 與憤怒鳥一起編程
            Debugging with Scrat:
              name: 與鼠奎特一起除錯
            Collecting Treasure with Laurel:
              name: 和 Laurel 一起收集寶石
            Creating Art with Code:
              name: 用代碼創作藝術
            Sticker Art with Loops:
              name: 使用迴圈（Loop）繪畫貼紙藝術
            Nested Loops in Maze:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
            Snowflakes with Anna and Elsa:
              name: 和安娜與艾莎一同玩雪花
            If/Else with Bee:
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
            While Loops with the Farmer:
              name: 與農夫一起嘗試 while（當）迴圈
            Harvesting with Conditionals:
              name: 使用條件式（Conditional）收割農作物
            Functions with Harvester:
              name: 在收割者遊戲中學習函式（Function）
            Functions with Artist:
              name: 在藝術家遊戲中使用函式（Function）
            Variables with Artist:
              name: 在藝術家遊戲中學習變數
            Changing Variables with Bee:
              name: 在蜜蜂遊戲中變更變數
            Changing Variables with Artist:
              name: 在藝術家遊戲中變更變數
            For Loops with Bee:
              name: 與蜜蜂一起嘗試 for（計數）迴圈
            For Loops with Artist:
              name: 藝術家中的計數迴圈（For Loops）
            Swimming Fish in Sprite Lab:
              name: Sprite Lab 中的游泳小魚
            Alien Dance Party:
              name: 外星人舞蹈派對
            Behaviors in Sprite Lab:
              name: Sprite Lab 的行為（Behavior）
        pre-express-2020:
          title: 學前兒童的速學課程（2020）
          description_short: 為學前兒童提供的電腦科學簡介：結合我們的最佳幼稚園與一年級課程。
          description_audience: 年齡：4-8
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
          lessons:
            Learn to Drag and Drop:
              name: 學習滑鼠的拖放
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            Sequencing with Scrat:
              name: 和鼠奎特一起學序列
            Programming in Maze:
              name: 在迷宮中編程（Programming ）
            Programming with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起寫程式
              description_teacher: 在本課堂中，學生會以更複雜的方式運用新的程式設計技巧，與 BB-8 一起完成更巧妙的關卡。
            Programming in Harvester:
              name: 和農夫一起學程式
              description_teacher: 學生會把所學到的程式設計概念，應用到收割者遊戲的環境中。現在不僅是讓角色到達終點 - 學生必須使用新的積木收集玉米。他們會繼續建立順序演算法的技巧，並開始運用除錯流程。
            Spelling Bee:
              name: 拼字蜜蜂
            Loops in Ice Age:
              name: 冰河歷險紀中的迴圈
            Loops in Collector:
              name: 和收藏家學迴圈（Loop）
              description_teacher: 在本課堂中，學生會繼續學習迴圈（loop）的概念。在這裡，冒險家 Laurel 會使用迴圈，在開放的洞穴中收集寶藏。這個時候會介紹新的「get treasure」（取得寶藏）積木，協助她完成旅程。
            Ocean Scene with Loops:
              name: 海洋場景與迴圈（Loop）
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            Loops in Artist:
              name: 藝術家中的迴圈（Loops）
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個線上課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，學生會使用迴圈建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            Tell a Story in Play Lab:
              name: 在 Play Lab 中說故事
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！
            Make a Game in Play Lab:
              name: 在 Play Lab 中製作遊戲
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            Loops with Scrat:
              name: 和鼠奎特一起學迴圈（Loop）
            Loops with Laurel:
              name: 與 Laurel 一起學習迴圈
            Drawing Gardens with Loops:
              name: 使用迴圈（Loop）在花園中繪畫
            On the Move with Events:
              name: 讓事件活動起來
            A Royal Battle with Events:
              name: 以事件（Event）展開皇家大戰
        csp1-2020:
          title: CSP 單元 1 - 數位資訊 ('20-'21)
          lesson_groups:
            csp_unit1_2020:
              display_name: "（舊）單元 1：數位資訊"
            cspSurvey:
              display_name: 問卷
            cspSurvey2020:
              display_name: 課後調查
          lessons:
            new stage:
              name: 新的階段
            Welcome to CSP:
              name: 歡迎來到 CSP
            Representing Information:
              name: 表示資訊
            Circle Square Patterns:
              name: 圓形與正方形模式
            Binary Numbers:
              name: 二進位數
            Overflow and Rounding:
              name: 溢位與捨入
            Representing Text:
              name: 表示文字
            Black and White Images:
              name: 黑白圖像
            Color Images:
              name: 彩色圖像
            Lossless Compression:
              name: 無損壓縮
            Lossy Compression:
              name: 有損壓縮
            Intellectual Property:
              name: 知識產權
            Project - Digital Information Dilemmas Part 1:
              name: 專案 - 數位資訊困境 第 1 部分
            Project - Digital Information Dilemmas Part 2:
              name: 專案 - 數位資訊困境 第 2 部分
            'Lesson 14: Assessment Day':
              name: 評估日
            CS Principles Pre-survey:
              name: 計算機科學原理課前問卷調查
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        csp2-2020:
          title: CSP 單元 2 - 網際網路 ('20-'21)
          lesson_groups:
            csp_unit2_2020:
              display_name: "（舊）單元 2：網際網路"
            cspSurvey2020:
              display_name: 課後調查
          lessons:
            new stage:
              name: 新的階段
            Welcome to the Internet:
              name: 歡迎來到網際網路
            Building a Network:
              name: 建立網路
            The Need for Addressing:
              name: 定址的需要
            Routers and Redundancy:
              name: 路由器與備援
            Packets:
              name: 封包
            DNS and HTTP:
              name: DNS 與 HTTP
            Project - Internet Dilemmas Part 1:
              name: 專案 - 網際網路困境 第 1 部分
            Project - Internet Dilemmas Part 2:
              name: 專案 - 網際網路困境 第 2 部分
            'Lesson 9: Assessment Day':
              name: 評估日
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        csp3-2020:
          title: CSP 單元 3 - 應用程式設計簡介 ('20-'21)
          lesson_groups:
            csp_unit3_2020:
              display_name: 單元 3：應用程式設計簡介
            cspSurvey2020:
              display_name: 課後調查
          lessons:
            new stage:
              name: 新的階段
            Introduction to Apps:
              name: 應用程式簡介
            Project - Designing an App Part 1:
              name: 專案 - 設計應用程式 第 1 部分
            Project - Designing an App Part 2:
              name: 專案 - 設計應用程式 第 2 部分
            The Need for Programming Languages:
              name: 程式語言的需要
            Intro to Programming:
              name: 程式設計簡介
            Debugging:
              name: 除錯
            Project - Designing an App Part 3:
              name: 專案 - 設計應用程式 第 3 部分
            Project - Designing an App Part 4:
              name: 專案 - 設計應用程式 第 4 部分
            Project - Designing an App Part 5:
              name: 專案 - 設計應用程式 第 5 部分
            'Lesson 11: Assessment Day':
              name: 評估日
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        csp6-2020:
          title: CSP 單元 6 - 演算法 ('20-'21)
          lesson_groups:
            csp_unit6_2020:
              display_name: 單元 6：演算法
            cspSurvey2020:
              display_name: 課後調查
          lessons:
            new stage:
              name: 新的階段
            Algorithms Solve Problems:
              name: 用演算法解決問題
            Algorithm Efficiency:
              name: 演算法效率
            Unreasonable Time:
              name: 不合理的執行時間
            The Limits of Algorithms:
              name: 演算法的限制
            Parallel and Distributed Algorithms:
              name: 平行與分散式演算法
            'Lesson 6: Assessment Day':
              name: 評估日
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        csp8-2020:
          title: CSP 單元 8 - 建立 PT 準備 ('20-'21)
          lessons:
            new stage:
              name: 新的階段
            Create PT - Review the Task:
              name: 建立 PT - 檢閱任務
            Create PT - Make a Plan:
              name: 建立 PT - 制定計畫
            Create PT - Complete the Task:
              name: 建立 PT - 完成任務
        csp9-2020:
          title: CSP 單元 9 - 資料 ('20-'21)
          lesson_groups:
            csp_unit9_2020:
              display_name: 單元 9：資料
            cspSurvey2020:
              display_name: 課後調查
          lessons:
            new stage:
              name: 新的階段
            Learning From Data:
              name: 從資料中學習
            Exploring One Column:
              name: 學習 1 個欄
            Filtering and Cleaning Data:
              name: 篩選與清理資料
            Exploring Two Columns:
              name: 學習 2 個欄
            Big Data, Crowdsourcing, and Machine Learning:
              name: 大數據、群眾外包與機器學習
            Machine Learning and Bias:
              name: 機器學習與偏見
            Project - Tell a Data Story - Part 1:
              name: 專案 - 訴說關於資料的故事 - 第 1 部分
            Project - Tell a Data Story - Part 2:
              name: 專案 - 訴說關於資料的故事 - 第 2 部分
            'Lesson 9: Assessment Day':
              name: 評估日
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        csp10-2020:
          title: CSP 單元 10 - 網路安全與全球影響 ('20-'21)
          lesson_groups:
            csp_unit10_2020:
              display_name: 單元 10：網路安全與全球影響
            cspSurvey2020:
              display_name: 課後調查
          lessons:
            new stage:
              name: 新的階段
            Project - Innovation Simulation Part 1:
              name: 專案 - 創新模擬 第 1 部分
            Project - Innovation Simulation Part 2:
              name: 專案 - 創新模擬 第 2 部分
            Project - Innovation Simulation Part 3:
              name: 專案 - 創新模擬 第 3 部分
            Data Policies and Privacy:
              name: 資料政策與隱私
            The Value of Privacy:
              name: 隱私的價值
            Project - Innovation Simulation Part 4:
              name: 專案 - 創新模擬 第 4 部分
            Security Risks Part 1:
              name: 安全風險第 1 部分
            Security Risks Part 2:
              name: 安全風險第 2 部分
            'Project: Innovation Simulation Part 4':
              name: 專案：創新模擬 第 4 部分
            Project - Innovation Simulation Part 6:
              name: 專案 - 創新模擬 第 6 部分
            Project - Innovation Simulation Part 7:
              name: 專案 - 創新模擬 第 7 部分
            Protecting Data Part 1:
              name: 保護資料第 1 部分
            Protecting Data Part 2:
              name: 保護資料第 2 部分
            'Project: Innovation Simulation Part 5':
              name: 專案：創新模擬 第 5 部分
            'Project: Innovation Simulation Part 6':
              name: 專案：創新模擬 第 6 部分
            'Project: Innovation Simulation Part 7':
              name: 專案：創新模擬 第 7 部分
            CS Principles Post-Course Survey:
              name: 電腦科學原理課後問卷調查
        csp-march-virtual:
          title: 電腦科學原理輔導員課程培訓
          lessons:
            Kick-off:
              name: 開始
            Changes:
              name: 變更
            Curriculum Investigations:
              name: 課程研究
            Wrap up:
              name: 總結
            new stage:
              name: 新的階段
            Pre-work:
              name: 工作前
            Reflections:
              name: 反思
            Part 1:
              name: 第一部分
            Part 2:
              name: 第二部分
        csp3-virtual:
          description_short: 以自上而下的設計方式，使用經典小海龜繪圖來學習 JavaScript 程式設計基礎。
          lesson_groups:
            csp3_1_2018:
              display_name: 單元 3：程式設計簡介
          lessons:
            The Need For Programming Languages:
              name: 程式語言的需要
            The Need for Algorithms:
              name: 演算法的需要
            Creativity in Algorithms:
              name: 演算法中的創意
            Using Simple Commands:
              name: 簡單指令的使用
            Creating Functions:
              name: 建立函式
            Functions and Top-Down Design:
              name: 函式與自上而下的設計
            APIs and Function Parameters:
              name: API 和函式參數
            Creating functions with Parameters:
              name: 建立帶參數（Parameter）的函式
            Looping and Random Numbers:
              name: 迴圈與隨機數字
            Practice PT - Design a Digital Scene:
              name: PT 練習 - 設計數位場景
            Unit 3 Chapter 1 Assessment:
              name: 單元 3 第 1 章 評估
            CS Principles Post Course survey:
              name: 電腦科學原理課後問卷調查
        jess-test-script:
          lessons:
            new stage:
              name: 新的階段
            Tools:
              name: 工具
            Debugging:
              name: 除錯
            Module 1:
              name: 模組 1
            Module 2:
              name: 模組 2
            Module 3:
              name: 模組 3
            Module 4:
              name: 模組 4
            Module 5:
              name: 模組 5
            Module 6:
              name: 模組 6
            Module 8:
              name: 模組 8
            Module 7:
              name: 模組 7
        csd2-virtual:
          lesson_groups:
            csd2_1:
              display_name: 第 1 章：網站內容和 HTML
            csd2_2:
              display_name: 第 2 章：樣式和 CSS
          lessons:
            Exploring Web Pages:
              name: 瀏覽網頁
            Intro to HTML:
              name: HTML 簡介
              description_student: 本課堂介紹以 HTML 做為解決方案，解決如何把網站內容與結構傳達給電腦的問題。課堂開始時，首先會進行簡短的不插電活動，展示有效與網頁的結構通訊時的挑戰。班級同學會在 Web Lab 中觀看一個 HTML 網頁，並討論 HTML 標籤如何協助解決這個問題，然後再使用 HTML 編寫單元中的第一個網頁。
              description_teacher: 在本課堂中，學生會學習以 HTML 做為解決方案，解決如何把網站內容與結構傳達給電腦的問題。課堂開始時，首先會進行簡短的不插電活動，展示有效與網頁的結構通訊時的挑戰。學生會在 Web Lab 中觀看一個 HTML 範例網頁，並與同學討論 HTML 標籤如何協助解決這個問題。之後，學生便會編寫第一個 HTML 網頁。總結討論可協助鞏固學生在課堂中，對內容與結構比較的瞭解。
            Headings:
              name: 標題
              description_student: 本課堂會繼續介紹 HTML 標籤，這次會介紹 header。班級會練習使用 header 標籤建立頁面與區域標題，並學習不同的 header 元素在預設下如何顯示。然後，班級同學便會計畫如何在個人網頁中組織內容（這些網頁會在單元內逐步建立），並開始專案的首頁。
              description_teacher: 在本課堂中，學生會繼續使用 HTML 構築網頁上的文字，這次則會製作標題（heading）。學生會學習不同的標題元素在預設下如何顯示，並練習使用這些元素建立頁面與區域標題。然後，學生會開始決定如何在自己的網頁中組織內容。在最後一個關卡中，學生會開始製作專案，並會在整個單元中繼續製作。
            Digital Footprint:
              name: 數位足跡
              description_student: 本課堂會暫停建立個人網站，用來解說大眾選擇以數位分享的個人資訊。班級學生首先會討論有哪些類型的資訊可與他人分享，然後瀏覽一些範例社交媒體頁面，瞭解有哪些類型的個人資訊可能會有意或無意地分享出去。最後，學生會制定一套指引，並在資訊上線遵從這些指引。
              description_teacher: |-
                學生最近已花了一些時間，思考有哪些實際內容會放在個人網站上。現在本課堂會暫停製作橫跨整個單元的專案（發佈個人網站），以協助學生說明自己會選擇以數位形式分享哪些個人資訊，以及向哪些人分享。課堂也會強調，他們選擇以數位形式分享的很多資訊，很大程度在發佈後已無法受自己控制。\\r
                \\r
                學生首先會各自找出合適的受眾，意指學生向這些受眾分享定特的個人資訊時會感到自在。然後，他們會瀏覽一些社交媒體頁面，以判斷大眾會分享關於自己或別人的哪些類型資訊。最後學生會反思一下，認為在線上張貼資訊時應遵守哪些指引。\\r
                \\r
                本課堂的最終要點不是要嚇怕學生，而是以實驗的性質讓學生準確瞭解，他們在線上發佈資訊後無法控制資訊的程度。
            Styling Text with CSS:
              name: 透過 CSS 修改文字樣式
              description_student: 本課堂會介紹以 CSS 做為修改頁面元素樣式的方法。班級學生會學習 CSS 規則集的基本語法，然後瞭解會影響 HTML 文字元素的屬性。最後，所有學生都會把文字樣式套用至自己的個人網站。
              description_teacher: |-
                本課堂會介紹以 CSS 做為修改頁面元素樣式的方法。學生會學習 CSS 規則集的基本語法，然後瞭解會影響 HTML 文字元素的屬性。他們會製作關於金氏世界紀錄保持者的 HTML 頁面，並在提供的頁面中加入自己的樣式。在最後一個關卡中，學生會把學到的文字元素樣式，套用至自己的個人網站。\\r
                \\r
            Intellectual Property:
              name: 知識產權
            Images:
              name: 圖像
            'Websites for Expression ':
              name: 建立網站，表達內容
              description_student: 本課堂介紹以網站做為表達自我的途徑。班級同學首先會討論大眾會使用哪些不同方法，以表達並分享自己的興趣和構思，然後觀察一些範例網站，這些網站由前一個課程的學生完成。最後，所有同學都一起思考並分享可加入的主題與興趣清單，為單元餘下部分創造資源，以製作個人網站。
              description_teacher: 在本課堂中，學生會研究不同方法，以使用網站做為個人表達的途徑，並建立希望在個人網站中加入的主題與興趣清單。開始課堂時，學生會一起思考不同方法，以表達並分享自己的興趣和構思。然後，學生會觀察一些範例網站（這些網站由前一個電腦科學探索課程的學生完成），以找出表達構思的方法。最後，學生會一起思考並分享可能想在個人網站中加入的主題與興趣清單，讓他們可在單元進行中時參考，從而獲得靈感構思。
            Styling Elements with CSS:
              name: 透過 CSS 修改元素樣式
              description_student: 本課堂會繼續介紹 CSS 樣式屬性，這次會更集中說明文字以外的元素。班級學生首先會研究並修改「世界各地的甜品」頁面上的新 CSS 樣式。然後，所有學生都會把這項知識套用至自己的個人網站中。
              description_teacher: 本課堂會繼續介紹 CSS 樣式屬性，這次會更集中說明文字以外的元素。學生在開始本課堂時，首先會瀏覽關於「世界各地的甜品」的網站。他們會研究並修改這個網站上的新 CSS 樣式，並在網站上加入自己的樣式。完成甜品頁面後，學生會套用新 CSS 屬性的知識，為自己網站做進一步的樣式修改。
            Project - Planning Layout and Style:
              name: 專案 - 計畫佈局與樣式
            Project - Building a Webpage:
              name: 專案 — 製作網頁
            Purpose of a  Websites:
              name: 網站的目的
            Team Problem Solving:
              name: 團隊問題解決
            Sources and Research:
              name: 資料來源與研究
            Planning a Multi-page Website:
              name: 規劃多頁網站
            Linking and Navigation:
              name: 鏈接與導航
            Project - Website for a Purpose:
              name: 專案 - 為達成目的而製作網站
            Peer Review and Final Touches:
              name: 同儕審查與最後修訂
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
        csp5-virtual:
          lessons:
            Buttons and Events:
              name: 按鈕與事件
            Multi-screen Apps:
              name: 多螢幕應用程式
            'Building an App: Multi-Screen App':
              name: 製作應用程式：多螢幕應用程式
            Controlling Memory with Variables:
              name: 以變數（Variable）控制記憶體
            'Building an App: Clicker Game':
              name: 製作應用程式：點擊遊戲
            Unit 5 Assessment 1:
              name: 單元 5 評量 1
            User Input and Strings:
              name: 使用者輸入與字串
            '"If" Statements Unplugged':
              name: "「如果」陳述式不插電教程"
            Boolean Expressions and "If" Statements:
              name: 布林值（Boolean）運算式與「如果」（If）陳述句
            '"if-else-if" and Conditional Logic':
              name: "「如果…否則」和條件判斷式"
            'Building an App: Color Sleuth':
              name: 製作應用程式：顏色偵探
            Unit 5 Assessment 2:
              name: 單元 5 評量 2
            While Loops:
              name: 當…迴圈
            Loops and Simulations:
              name: 迴圈與模擬
            Introduction to Arrays:
              name: 陣列（Arrays）的介紹
            'Building an App: Image Scroller':
              name: 創建一個 APP：圖像播放器
            Unit 5 Assessment 3:
              name: 單元 5 評量 3
            Processing Arrays:
              name: 處理陣列
            Functions with Return Values:
              name: 帶回傳值的函式
            'Building an App: Canvas Painter':
              name: 創建一個 App - 帆布畫家
            Unit 5 Assessment 4:
              name: 單元 5 評量 4
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: 單元 5 評估 5 - AP 虛擬碼練習問題
            CS Principles Post Course survey:
              name: 電腦科學原理課後問卷調查
            Intro to App Lab:
              name: App Lab 入門
            Variables:
              name: 變數
        virtual-holding-place:
          lesson_groups:
            content:
              display_name: 內容
            csd3_2:
              display_name: 第 2 章：創建遊戲
          lessons:
            Velocity:
              name: 速度
            Collision Detection:
              name: 碰撞檢測
            Complex Sprite Movement:
              name: 複合角色動作
            Collisions:
              name: 碰撞
            Functions:
              name: 函式
            The Game Design Process:
              name: 遊戲設計流程
            Using the Game Design Process:
              name: 使用遊戲設計流程
            Project - Design a Game:
              name: 專案 - 設計一個遊戲
        code-break:
          lessons:
            new stage:
              name: 新的階段
            Algorithms:
              name: 演算法
            Events:
              name: 事件
        no-lg:
          lessons:
            new stage:
              name: 新的階段
        csp5-virtual-part2:
          lesson_groups:
            csp5_1:
              display_name: 第 1 章：事件驅動的程式設計
            csp5_2:
              display_name: 第 2 章：資料結構程式設計
          lessons:
            Unit 5 Assessment 2:
              name: 單元 5 評量 2
            While Loops:
              name: 當…迴圈
            Loops and Simulations:
              name: 迴圈與模擬
            Introduction to Arrays:
              name: 陣列（Arrays）的介紹
            'Building an App: Image Scroller':
              name: 創建一個 APP：圖像播放器
            Unit 5 Assessment 3:
              name: 單元 5 評量 3
            Processing Arrays:
              name: 處理陣列
            Functions with Return Values:
              name: 帶回傳值的函式
            'Building an App: Canvas Painter':
              name: 創建一個 App - 帆布畫家
            Unit 5 Assessment 4:
              name: 單元 5 評量 4
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: 單元 5 評估 5 - AP 虛擬碼練習問題
        k5-onlinepd-2020:
          title: 計算機科學基礎的教授
          description: 使用 Code.org 的電腦科學基礎 - 免費的自訂進度線上課程，學習怎樣教授電腦科學！
          lessons:
            Welcome to "Teaching Computer Science Fundamentals":
              name: 歡迎來到「教授計算機科學基礎」
            Understanding the Computer Science Fundamentals Courses:
              name: 瞭解計算機科學基礎課程
            Sequencing:
              name: 序列
            Loops:
              name: 迴圈
            Events:
              name: 事件
            Conditionals:
              name: 條件判斷（Conditionals）
            End of Course projects:
              name: 課程結束專案
            Functions:
              name: 函式
            Variables:
              name: 變數
            For Loops:
              name: 計次迴圈（For Loops）
            Sprite Lab:
              name: Sprite Lab
            Reviewing your reflections:
              name: 檢閱你的反思
            Next steps:
              name: 下一步
          lesson_groups:
            k5_getting_started_1:
              display_name: 新手上路
            k5_basic_concepts_1:
              display_name: 基本編程概念和教學練習
            k5_diving_deeper_1:
              display_name: 深造：課程 E 和 F
            k5_next_steps_1:
              display_name: 下一步
          student_description: 使用 Code.org 的電腦科學基礎 - 免費的自訂進度線上課程，學習怎樣教授電腦科學！
        dani-june-2020-test:
          lessons:
            lesson 2:
              name: 第 2 課
            CS Principles Pre-survey:
              name: 計算機科學原理課前問卷調查
            Buttons and Events:
              name: 按鈕與事件
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csp5_1:
              display_name: 第 1 章：事件驅動的程式設計
        csd3-virtual:
          lessons:
            Programming for Entertainment:
              name: 娛樂用途的程式設計
              description_student: The class is asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
              description_teacher: Students are asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.
            Plotting Shapes:
              name: 幾何繪圖
              description_student: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
              description_teacher: Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity quickly demonstrates the challenges of communicating position without some shared reference point. In the main activity students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. Students optionally create their own image to communicate before a debrief discussion.
            Drawing in Game Lab:
              name: 用 Game Lab 繪圖
              description_student: The class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. Thee lesson covers the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, the class creates an online version of the image they designed in the previous lesson.
              description_teacher: Students are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.
            Variables:
              name: 變數
              description_student: This lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks.  Afterwards, the class uses variables to save a random number, allowing the programs to use the same random number multiple times.
              description_teacher: In this lesson students learn how to use variables to label a number in their program or save a randomly generated value. Students begin the lesson with a very basic description of the purpose of a variable. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number. Students use variables to save a random number to see that variables actually store or save their values, allowing them to use the same random number multiple times in their programs.
            Random Numbers:
              name: 隨機取數
            Sprites:
              name: 角色
            Text:
              name: 文字
            The Draw Loop:
              name: draw（繪圖）迴圈
              description_student: This lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. Afterwards, everyone uses what they learned to update the sprite scene from the previous lesson.
              description_teacher: In this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. At the end of the lesson students use what they learned to update their sprite scene from the previous lesson.
            Sprite Movement:
              name: 角色動作
              description_student: By combining the Draw Loop and the Counter Pattern, the class writes programs that move sprites across the screen, as well as animate other sprite properties.
              description_teacher: By combining the Draw Loop and the Counter Pattern, students write programs that move sprites across the screen, as well as animate other sprite properties.
            Conditionals:
              name: 條件判斷（Conditionals）
              description_student: The class starts by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, the class adds conditional if statements to write code that responds to those boolean comparisons.
              description_teacher: Students start by using booleans to compare the current value of a sprite property with a target value, using that comparison to determine when a sprite has reached a point on the screen, grown to a given size, or otherwise reached a value using the counter pattern. After using booleans directly to investigate the values or sprite properties, students add conditional _if_ statements to write code that responds to those boolean comparisons.
            Keyboard Input:
              name: 鍵盤輸入
              description_student: Following the introduction to booleans and if statements in the previous lesson, students are introduced to a new block called keyDown() which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
              description_teacher: Following the introduction to booleans and _if_ statements in the previous lesson, students are introduced to a new block called `keyDown()` which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.
            Project - Interactive Card:
              name: 專案 - 互動式卡片
              description_student: In this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point.
              description_teacher: In this cumulative project for Chapter 1, students plan for and develop an interactive greeting card using all of the programming techniques they've learned to this point.
            Velocity:
              name: 速度
              description_student: After a brief review of how the counter pattern is used to move sprites, the class is introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
              description_teacher: After a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
            Collision Detection:
              name: 碰撞檢測
              description_student: The class learns about collision detection on the computer.  Pairs explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  The class then uses the isTouching() block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
              description_teacher: Students learn about collision detection on the computer.  Working in pairs, they explore how a computer could use sprite location and size properties and math to detect whether two sprites are touching.  They then use the `isTouching()` block to create different effects when sprites collide, including playing sounds.  Last, they use their new skills to improve the sidescroller game that they started in the last lesson.
            Complex Sprite Movement:
              name: 複合角色動作
              description_student: 'The class learns to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement, such as simulating gravity, making a sprite jump, and allowing a sprite to float left or right. In the final levels the class combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects coins. '
              description_teacher: Students learn to combine the velocity properties of sprites with the counter pattern to create more complex sprite movement. In particular students will learn how to simulate gravity, make a sprite jump, and allow a sprite to float left or right. In the final levels of the Code Studio progression students combine these movements to animate and control a single sprite and build a simple game in which a character flies around and collects a coin. Students are encouraged to make their own additions to the game in the final level.
            Collisions:
              name: 碰撞
              description_student: The class programs their sprites to interact in new ways.  After a brief review of how they used the isTouching block, the class brainstorms other ways that two sprites could interact.  They then use isTouching to make one sprite push another across the screen before practicing with the four collision blocks (collide, displace, bounce, and bounceOff).
              description_teacher: Students program their sprites to interact in new ways.  After a brief review of how they used the `isTouching` block, students brainstorm other ways that two sprites could interact.  They then use `isTouching` to make one sprite push another across the screen before practicing with the four collision blocks (`collide`, `displace`, `bounce`, and `bounceOff`).
            Functions:
              name: 函式
              description_student: This lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab.  At the end of the lesson the class uses these skills to organize and add functionality to the final version of their side scroller game.
              description_teacher: Students learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. An unplugged warmup explores how directions at different levels of detail can be useful depending on context. Students learn that higher level or more abstract steps make it easier to understand and reason about steps. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function. At the end of the lesson students use these skills to organize and add functionality to the final version of their side scroller game.
            The Game Design Process:
              name: 遊戲設計流程
              description_student: This lesson introduces the process the class will use to design games for the remainder of the unit. The class walks through through this process in a series of levels. As part of this lesson the class also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson they have an opportunity to make improvements to the game to make it their own.
              description_teacher: This lesson introduces students to the process they will use to design games for the remainder of the unit. This process is centered around a project guide which asks students to define their sprites, variables, and functions before they begin programming their game. In this lesson students begin by playing a game on Game Lab where the code is hidden. They discuss what they think the sprites, variables, and functions would need to be to make the game. They are then given a completed project guide which shows one way to implement the game. Students are then walked through this process through a series of levels. As part of this lesson students also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson students have an opportunity to make improvements to the game to make it their own.
            Using the Game Design Process:
              name: 使用遊戲設計流程
              description_student: In this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes.
              description_teacher: In this multi-day lesson, students use the problem solving process from Unit 1 to create a platform jumper game.  They start by looking at an example of a platform jumper, then define what their games will look like.  Next, they use a structured process to plan the backgrounds, variables, sprites, and functions they will need to implement their game.  After writing the code for the game, students will reflect on how the game could be improved, and implement those changes.
            Project - Design a Game:
              name: 專案 - 設計一個遊戲
              description_student: The class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class shares out the completed games.
              description_teacher: Students will plan and build their own game using the project guide from the previous two lessons to guide their project. Working individually or in pairs, students will first decide on the type of game they'd like to build, taking as inspiration a set of sample games. They will then complete a blank project guide where they will describe the game's behavior and scope out the variables, sprites, and functions they'll need to build. In Code Studio, a series of levels prompts them on a general sequence they can use to implement this plan. Partway through the process, students will share their projects for peer review and will incorporate feedback as they finish their game. At the end of the lesson, students will share their completed games with their classmates. This project will span multiple classes and can easily take anywhere from 3-5 class periods.
            Post-Project Test:
              name: 專案後測驗
            CS Discoveries Post Course survey:
              name: 電腦科學探索課後問卷調查
          lesson_groups:
            csd3_1:
              display_name: 內容
            csd3_2:
              display_name: 內容
            cspSurvey:
              display_name: 內容
        ui-test-script-in-course-2017:
          lessons:
            Lesson:
              name: 階段
          lesson_groups:
            lg_1:
              display_name: 內容
        ui-test-script-in-course-2019:
          lessons:
            Lesson:
              name: 階段
          lesson_groups:
            lg_1:
              display_name: 內容
        ui-test-versioned-script-2017:
          lessons:
            Lesson:
              name: 階段
          lesson_groups:
            lg_1:
              display_name: 內容
        ui-test-versioned-script-2019:
          lessons:
            Lesson:
              name: 階段
          lesson_groups:
            lg_1:
              display_name: 內容
        kaitie-test-script:
          lessons:
            Module 1:
              name: 模組 1
            Module 2:
              name: 模組 2
            Module 3:
              name: 模組 3
            Module 4:
              name: 模組 4
            Module 5:
              name: 模組 5
            Module 6:
              name: 模組 6
            Module 7:
              name: 模組 7
            Module 8:
              name: 模組 8
        vpl-csd-2020:
          lessons:
            Module 1:
              name: 模組 1
            Module 2:
              name: 模組 2
            Module 3:
              name: 模組 3
            Module 4:
              name: 模組 4
            Module 5:
              name: 模組 5
            Module 6:
              name: 模組 6
            Module 7:
              name: 模組 7
            Module 8:
              name: 模組 8
        curriculum-sandbox-levels:
          lessons:
            Course A:
              name: 課程 A
            Course B:
              name: 課程 B
            CS Discoveries:
              name: 計算機科學探索
            Course E:
              name: 課程 E
            Course F:
              name: 課程 F
            csf:
              name: CS 基本原理
            sprites_in_action_2021:
              name: Sprite Lab：會動的精靈圖（CSF 2021 先導）
            text_and_prompts_2021:
              name: Sprite Lab：文字與提示（CSF 2021 先導）
        virustest:
          title: 模擬疫情爆發
          description_short: '使用精靈圖實驗室創建一個病毒爆發模擬。 '
        ml-playground:
          lessons:
            AI for Oceans:
              name: 在海洋中使用的 AI
            visualizing:
              name: 資料視覺化
            CSP Tester:
              name: 電腦科學原理測試員
        outbreak:
          lessons:
            Virus Simulation for Code Bytes:
              name: 編碼一個模擬
            Outbreak:
              name: 編碼一個模擬
          lesson_groups:
            outbreak:
              display_name: 疫情爆發模擬
          title: 疫情爆發模擬
          description_short: '使用精靈圖實驗室進行病毒爆發模擬程式設計。 '
          description: '使用精靈圖實驗室進行病毒爆發模擬程式設計。 '
          name: 疫情爆發
          student_description: '使用精靈圖實驗室進行病毒爆發模擬程式設計。 '
        2021drafting:
          lessons:
            Course F Introduction:
              name: Sprite Lab 簡介
            Virus Simulation for Code Bytes:
              name: 編碼一個模擬
            Making Sprites:
              name: 製作精靈圖
            Sprites in Action:
              name: 運行中的角色
            End of Course Project:
              name: 課程結束專案
            Outbreaklab:
              name: 疫情爆發獨立實驗室
          lesson_groups:
            introduction:
              display_name: 介紹
            lessonGroup-3:
              display_name: 變數
            outbreak:
              display_name: 疫情爆發模擬
            debugging:
              display_name: 除錯
        csd1-2021:
          description_short: 瞭解人類與何與電腦一起解決問題。
          lessons:
            CS Discoveries Pre-survey:
              key: 電腦科學探索課前問卷調查
              name: 電腦科學探索課前問卷調查
            Intro to Problem Solving:
              key: 問題解決能力的介紹
              name: 問題解決能力的介紹
            The Problem Solving Process:
              key: 問題解決流程
              name: 問題解決流程
            Exploring Problem Solving:
              key: 問題解決探索
              name: 問題解決探索
            What is a Computer?:
              key: 電腦是什麼？
              name: 電腦是什麼？
              description_teacher: In this lesson students develop a preliminary definition of a computer. To begin the lesson, the class will brainstorm possible definitions for a computer and place the results of this brainstorm on the board. Next, students will work in groups to sort pictures into “is a computer” or “is not a computer” on poster paper. Groups will place their posters around the room and briefly explain their motivations for choosing some of their most difficult categorizations.  The teacher will then introduce a definition of the computer and allow students to revise their posters according to the new definition.\\r
            Input and Output:
              key: 輸入與輸出
              name: 輸入與輸出
            Processing:
              key: 處理
              name: 處理
              description_teacher: Students complete two unplugged card sorting activities to explore the meaning of processing and its relationship to problem-solving. The first activity has few constraints and is used to introduce a high-level definition of processing. The next introduces more constraints that force students to develop an algorithm that will always successfully process the cards. Students iteratively develop, test, and share their algorithms with classmates. A wrap-up discussion has students reflect on the different types of problem-solving they used in these activities and the value of producing an algorithm to solve a problem.
            Storage:
              key: 儲存
              name: 儲存
            Project - Propose an App:
              key: 專案 - 提出應用程式建議
              name: 專案 - 提出應用程式建議
              description_teacher: To conclude their study of the problem solving process and the input/output/store/process model of a computer, students will propose an app designed to solve a real world problem. This project will be completed across multiple days and will result in students creating a poster highlighting the features of their app that they will present to their classmates. A project guide provides step by step instructions for students and helps them organize their thoughts. The project is designed to be completed in pairs though it can be completed individually.
            Post-Project Test:
              key: 專案後測驗
              name: 專案後測驗
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csd1_1:
              display_name: 第 1 章：解決問題的流程
            csd1_2:
              display_name: 第 2 章：計算機與問題解決能力
            csd1_3:
              display_name: 替代課程
        csd2-2021:
          description_short: 在 Web Lab 中學習製作自己的網站。
          lessons:
            Exploring Web Pages:
              key: 瀏覽網頁
              name: 瀏覽網頁
            Intro to HTML:
              key: HTML 簡介
              name: HTML 簡介
            Headings:
              key: 標題
              name: 標題
            'Mini-Project: HTML Web Page':
              key: '迷你專案: HTML網頁'
              name: '迷你專案: HTML網頁'
            Digital Footprint:
              key: 數位足跡
              name: 數位足跡
            Styling Text with CSS:
              key: 透過 CSS 修改文字樣式
              name: 透過 CSS 修改文字樣式
              description_teacher: |-
                This lesson introduces CSS as a way to style elements on the page. Students learn the basic syntax for CSS rule-sets and then explore properties that impact HTML text elements. They work on a HTML page about Guinness World Record holders, adding their own style to the provided page. In the last level, students apply what they have learned about styles for text elements to their personal web page.\\r
                \\r
            'Mini-Project: Your Personal Style':
              key: '迷你專案: 你的個人風格'
              name: '迷你專案: 你的個人風格'
            Intellectual Property:
              key: 知識產權
              name: 知識產權
            Using Images:
              key: 使用圖片
              name: 使用圖片
            'Websites for Expression ':
              key: 建立網站，表達內容
            Styling Elements with CSS:
              key: 透過 CSS 修改元素樣式
              name: 透過 CSS 修改元素樣式
              description_teacher: This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. Students begin this lesson by looking at a website about Desserts of the World. They investigate and modify the new CSS styles on this website, adding their own styles to the page. After working on the Desserts page, students apply their knowledge of new CSS properties to do more styling of their personal websites.
            Your Web Page - Prepare:
              key: 你的網頁 - 準備
              name: 你的網頁 - 準備
            Project - Personal Web Page:
              key: 專案 - 個人網頁
              name: 專案 - 個人網頁
            Websites for a Purpose:
              key: 有目的的網站
              name: 有目的的網站
            Team Problem Solving:
              key: 團隊問題解決
              name: 團隊問題解決
            Sources and Research:
              key: 資料來源與研究
              name: 資料來源與研究
            Planning a Multi-page Website:
              key: 規劃多頁網站
            Linking Pages:
              key: 鏈接頁面
              name: 鏈接頁面
            Project - Website for a Purpose:
              key: 專案 - 為達成目的而製作網站
              name: 專案 - 為達成目的而製作網站
            Peer Review and Final Touches:
              key: 同儕審查與最後修訂
              name: 同儕審查與最後修訂
            Post-Project Test:
              key: 專案後測驗
              name: 專案後測驗
            CS Discoveries Post Course survey:
              key: 電腦科學探索課後問卷調查
              name: 電腦科學探索課後問卷調查
            lesson-1:
              name: 電腦科學探索課後問卷調查
          lesson_groups:
            csd2_1v2:
              display_name: '第1章: 建立網頁'
            csd2_2v2:
              display_name: '第2章: 多網頁網站'
            cspSurvey:
              display_name: 問卷
          student_description: In Unit 2, you’ll learn how to create and share the content on your own web pages. After deciding what content you want to share with the world, you’ll learn how to structure and style your pages using HTML and CSS. You’ll also practice valuable programming skills such as debugging and commenting.  By the end of the unit, you’ll have a personal website that you can publish to the Internet.
        csd3-2021:
          lessons:
            Programming for Entertainment:
              key: 娛樂用途的程式設計
              name: 娛樂用途的程式設計
            Plotting Shapes:
              key: 幾何繪圖
              name: 幾何繪圖
            Drawing in Game Lab:
              key: 用 Game Lab 繪圖
              name: 用 Game Lab 繪圖
              description_teacher: Students are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.
            Variables:
              key: 變數
              name: 變數
            Random Numbers:
              key: 隨機取數
              name: 隨機取數
            Sprites:
              key: 角色
              name: 角色
            Text:
              key: 文字
              name: 文字
            The Draw Loop:
              key: draw（繪圖）迴圈
              name: draw（繪圖）迴圈
              description_teacher: In this lesson students are introduced to the draw loop, one of the core programming paradigms in Game Lab. To begin the lesson students look at some physical flipbooks to see that having many frames with different images creates the impression of motion. Students then watch a video explaining how the draw loop in Game Lab helps to create this same impression in their programs. Students combine the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. At the end of the lesson students use what they learned to update their sprite scene from the previous lesson.
            Sprite Movement:
              key: 角色動作
              name: 角色動作
            Conditionals:
              key: 條件判斷（Conditionals）
              name: 條件判斷（Conditionals）
            Keyboard Input:
              key: 鍵盤輸入
              name: 鍵盤輸入
            Project - Interactive Card:
              key: 專案 - 互動式卡片
              name: 專案 - 互動式卡片
            Velocity:
              key: 速度
              name: 速度
              description_teacher: After a brief review of how they used the counter pattern to move sprites in previous lessons, students are introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.
            Collision Detection:
              key: 碰撞檢測
              name: 碰撞檢測
            Complex Sprite Movement:
              key: 複合角色動作
              name: 複合角色動作
            Collisions:
              key: 碰撞
              name: 碰撞
              description_teacher: "**今日問題：程式師如何在抽象的基礎上構建進一步的抽象？**\\\\r\n\\\\r\n在這節課中，學生進行程式設計，讓精靈圖以新的方式互動。在簡要回顧他們如何使用[`isTouching`(#f78183)](/docs/gamelab/isTouching/)積木之後，學生們就兩個精靈圖的其他互動方式進行頭腦風暴。然後他們使用[`isTouching`(#f78183)](/docs/gamelab/isTouching/)以便在練習4個碰撞積木之前，讓一個精靈圖在螢幕上推動另一個精靈圖([`collide`(#f78183)](/docs/gamelab/collide/)，[`displace`(#f78183)](/docs/gamelab/displace/)，[`bounce`(#f78183)](/docs/gamelab/bounce/)，[`bounceOff`(#f78183)](/docs/gamelab/bounceOff/))。"
            Functions:
              key: 函式
              name: 函式
              description_teacher: Students learn how to create functions to organize their code, make it more readable, and remove repeated blocks of code. An unplugged warmup explores how directions at different levels of detail can be useful depending on context. Students learn that higher level or more abstract steps make it easier to understand and reason about steps. Afterwards students learn to create functions in Game Lab. They will use functions to remove long blocks of code from their draw loop and to replace repeated pieces of code with a single function. At the end of the lesson students use these skills to organize and add functionality to the final version of their side scroller game.
            The Game Design Process:
              key: 遊戲設計流程
              name: 遊戲設計流程
            Using the Game Design Process:
              key: 使用遊戲設計流程
              name: 使用遊戲設計流程
            Project - Design a Game:
              key: 專案 - 設計一個遊戲
              name: 專案 - 設計一個遊戲
            Post-Project Test:
              key: 專案後測驗
              name: 專案後測驗
            CS Discoveries Post Course survey:
              key: 電腦科學探索課後問卷調查
              name: 電腦科學探索課後問卷調查
            lesson-1:
              name: 電腦科學探索課後問卷調查
          lesson_groups:
            csd3_1:
              display_name: 第 1 章：圖像和動畫
            csd3_2:
              display_name: 第 2 章：創建遊戲
            cspSurvey:
              display_name: 問卷
          student_description: 在單元 3 中，你將會以自己的程式設計經驗為基礎，在 Game Lab 中設計動畫、互動藝術與遊戲程式。單元開始時會供各種簡單圖形，並製作成為更高級的角色遊戲，其中會使用與電腦科學家每天使用的相同程式設計概念與設計流程。在期末專案中，你將會開發個人化的互動程式。
        csd4-2021:
          description_short: 學習如何設計程式，以符合使用者的需要。
          lessons:
            Analysis of Design:
              key: 設計分析
            Understanding Your User:
              key: 瞭解您的使用者
              name: 瞭解您的使用者
            User-Centered Design Micro Activity:
              key: 以使用者為中心的微型活動
              name: 以使用者為中心的微型活動
            User Interfaces:
              key: 使用者介面
              name: 使用者介面
            Feedback and Testing:
              key: 回饋與測試
              name: 回饋與測試
            Identifying User Needs:
              key: 確定使用者需求
              name: 確定使用者需求
            Project - Paper Prototype:
              key: 專案 - 紙上原型
              name: 專案 - 紙上原型
            Designing Apps for Good:
              key: 設計良好的應用程式
              name: 設計良好的應用程式
            Market Research:
              key: 市場研究
              name: 市場研究
            Paper Prototypes:
              key: 紙上原型
            Prototype Testing:
              key: 原型測試
              name: 原型測試
            Digital Design:
              key: 數位設計
            Linking Screens:
              key: 連結不同畫面
            Testing the App:
              key: 測試應用程式
              name: 測試應用程式
            Improving and Iterating:
              key: 改善和迭代
              name: 改善和迭代
            Project - App Presentation:
              key: 專案 - 應用程式簡報
              name: 專案 - 應用程式簡報
            Post-Project Test:
              key: 專案後測驗
              name: 專案後測驗
            CS Discoveries Post Course survey:
              key: 電腦科學探索課後問卷調查
              name: 電腦科學探索課後問卷調查
            CS Discoveries Post-Course Survey:
              name: 電腦科學探索課後問卷調查
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：用戶為中心的設計
            csd4_2:
              display_name: 第 2 章︰ 應用程式原型
            csd5_2:
              display_name: 第 2 章：解決數據問題
            cspSurvey:
              display_name: 問卷
          student_description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
        csd5-2021:
          description_short: 瞭解大家怎樣使用電腦解決資料問題。
          lessons:
            Representation Matters:
              key: 表示事項
              name: 表示事項
            Patterns and Representation:
              key: 模式和標記法
              name: 模式和標記法
            ASCII and Binary Representation:
              key: ASCII 和 二進位表示法
              name: ASCII 和 二進位表示法
            Representing Images:
              key: 表示圖像
              name: 表示圖像
            Representing Numbers:
              key: 數字表示法
              name: 數字表示法
            Keeping Data Secret:
              key: 讓資料保密
              name: 讓資料保密
            Combining Representations:
              key: 組合表示
              name: 組合表示
            Project - Create a Representation:
              key: 專案 - 創建標記法
            Problem Solving and Data:
              key: 問題解決與數據
              name: 問題解決與數據
            Problem Solving with Big Data:
              key: 用大數據解決問題
              name: 用大數據解決問題
            Structuring Data:
              key: 資料的建構
              name: 資料的建構
            Making Decisions with Data:
              key: 依數據來做決定
              name: 依數據來做決定
            Interpreting Data:
              key: 解譯數據
              name: 解譯數據
            Automating Data Decisions:
              key: 自動化數據決策
              name: 自動化數據決策
            Post-Project Test:
              key: 專案後測驗
              name: 專案後測驗
            CS Discoveries Post Course survey:
              key: 電腦科學探索課後問卷調查
              name: 電腦科學探索課後問卷調查
            CS Discoveries Post-Course Survey:
              name: 電腦科學探索課後問卷調查
          lesson_groups:
            csd5_1:
              display_name: 第 1 章：表達信息
            csd5_2:
              display_name: 第 2 章：解決數據問題
            cspSurvey:
              display_name: 問卷
          student_description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
        csd6-2021:
          description_short: 在實體裝置上開發程式
          lessons:
            Innovations in Computing:
              key: 運算上的創新
              name: 運算上的創新
              description_teacher: 在這個本課程的最後一個單元中，學生首先會做一些研究，瞭解電腦運算的有趣創新成果。本課堂會讓學生瞭解更多電腦運算的形式（電腦的外觀看起來怎樣），以及受電腦運算影響的範疇。在本單元的後期，學生會在開發自己的運算裝置時，回顧本課堂中看到的裝置。
            Designing Screens with Code:
              key: 以程式碼設計螢幕畫面
              name: 以程式碼設計螢幕畫面
            The Circuit Playground:
              key: 電路（Circuit ）遊樂場
              name: 電路（Circuit ）遊樂場
              description_teacher: 在本課堂中，學生會有第一次機會編寫運用 Circuit Playground 的程式。學生首先會目視檢查電路板，並假設有哪些可能的功能，然後便會移至線上，學習編寫可控制 LED 的應用程式。把 App Lab 畫面與 Circuit Playground 結合後，學生就可逐漸開始整合電路板（輸出裝置）上的各種元素，同時依賴 App Lab 供使用者輸入。
            Input Unplugged:
              key: 不插電介紹輸入（Input）
              name: 不插電介紹輸入（Input）
              description_teacher: 為了準備更深入探討使用 App Lab 設計程式，學生會學習在 Game Lab 與 App Lab 中編寫的幾種不同程式，會怎樣處理使用者的輸入。比較範例應用程式中看到的不同方法後，學生會分組練習兩種不同的輸入模型（無限迴圈與非同步事件中的條件式），從而加深瞭解它們的工作方式。
            Board Events:
              key: 電路板事件
              name: 電路板事件
            Getting Properties:
              key: 取得屬性
              name: 取得屬性
            Analog Input:
              key: 模擬輸入
              name: 模擬輸入
              description_teacher: 在本課堂中，學生會學習 3 個類比感測器（聲音、燈光與溫度）可怎樣用來編寫程式，回應環境中的變更。使用這些感測器，就標誌著使用者與程式互動的轉變。應用程式的使用者以感測器做為輸入，就不用直接與程式互動，或是在互動時不用實際瞭解裡面正在做些甚麼。
            The Program Design Process:
              key: 程式設計流程
              name: 程式設計流程
              description_teacher: 本課堂會向學生介紹相關流程，他們將會在整個單元中，使用這個流程設計自己的程式。這項流程會以一個專案指南為中心，指南中會要求學生繪製畫面草圖、找出要使用的 Circuit Playground 元件、定義變數與描述事件，然後才開始設計程式。這項流程與單元 3 中使用的遊戲設計流程。在本課堂中，學生首先會玩一款拔河風格的遊戲，遊戲期間程式碼會被隱藏。學生會展開討論，指出他們認為需使用哪些電路板元件、事件與變數製作這款程式。學生會收到完整的專案指南，裡面會說明實作專案的一種方式。然後，學生會在不同的關卡中瞭解這項流程。在課堂結束時，學生將有機會改良程式，使之成為自己的作品。
            'Project: Make a Game':
              key: 專案：創建一個遊戲
            Arrays and Color LEDs:
              key: 陣列與彩色 LED
              name: 陣列與彩色 LED
              description_teacher: 陣列是項目的有序的集合，通常含有相同的項目類型。在本課堂中，學生會學習各種方式，使用其索引存取清單中指定或隨機的值。然後，學生會學習怎樣存取 colorLEDs 陣列，以控制 Circuit Playground 上的彩色 LED 行為。學生會控制 LED 的顏色與強度，然後使用所學到的知識編寫燈光模式程式，從而在 Circuit Playground 上進行燈光表演。
            Making Music:
              key: 製作音樂
              name: 製作音樂
            Arrays and For Loops:
              key: 陣列和 for（計數）迴圈
              name: 陣列和 for（計數）迴圈
              description_teacher: 使用 _for（計數）迴圈_來重複迭代陣列中的所有元素，在所有程式語言中都是非常實用的建構。在本課堂中，學生會學習 for（計數）如何用於重複程式碼的基礎，然後將它結合到所學到的陣列知識中，編寫程式處理陣列中的所有元素。學生會使用 for 迴圈，每次執行清單上的每個元素，而不用為每個元素編寫程式碼。課堂結束時，學生會把這項知識與「colorLed」清單應用到電路板上，以製作一款應用程式，讓使用者每次點擊一個按鈕後，便能變更所有 LED。
            Accelerometer:
              key: 加速計
              name: 加速計
              description_teacher: 在本課堂中，學生會學習加速計和它的功能。他們會熟習事件與屬性，並製作多個利用加速計的程式，這些程式和現實世界中可能遇到過的程式相似。
            Functions with Parameters:
              key: 函式帶參數
              name: 函式帶參數
              description_teacher: 課堂開始時，學生首先會快速檢閱參數，期間會使用最近看過的 App Lab 積木。然後，學生會參閱一些參數範例（這些參數在 App Lab 裡由使用者建立的函式中）、為自己建立與呼叫函式，並以此控制畫面上的多種元素。之後，學生會使用 for（計數）迴圈讓一個陣列迭代，將每項元素傳入一個函式中。最後，學生會運用所學到的知識製作摘星遊戲。
            Circuits and Physical Prototypes:
              key: 電路與實體原型
              name: 電路與實體原型
              description_teacher: 為了準備這一章的期末專案，學生會學習怎樣開發包含 Circuit Playground 的實物原型。學生會使用範例專案計畫指南，學習怎樣編寫一些簡單電路和製作原型，從而可使用便宜且容易找到的材料（例如紙板與膠帶）展現出預期產品的設計。
            'Project: Prototype an Innovation':
              key: 專案：原型創新
              description_teacher: 在課程的這個期末專案中，學生會以團隊方式開發並測試一款創新運算裝置的原型，這個原型以 Circuit Playground 為基礎。各小組會使用電路板上可用的輸入與輸出來製作程式，讓程式可與使用者進行有趣且獨一無二的互動。
            Post-Project Test:
              key: 專案後測驗
              name: 專案後測驗
            CS Discoveries Post Course survey:
              key: 電腦科學探索課後問卷調查
              name: 電腦科學探索課後問卷調查
            CS Discoveries Post-Course Survey:
              name: 電腦科學探索課後問卷調查
          lesson_groups:
            csd6_1:
              display_name: 第 1 章：硬體輸出
            csd6_2:
              display_name: 第 2 章：建立物理原型
            cspSurvey:
              display_name: 問卷
        csp1-2021:
          lessons:
            CS Principles Pre-survey:
              key: 計算機科學原理課前問卷調查
              name: 計算機科學原理課前問卷調查
            Welcome to CSP:
              key: 歡迎來到 CSP
              name: 歡迎來到 CSP
            Representing Information:
              key: 表示資訊
              name: 表示資訊
            Circle Square Patterns:
              key: 圓形與正方形模式
              name: 圓形與正方形模式
            Binary Numbers:
              key: 二進位數
              name: 二進位數
            Overflow and Rounding:
              key: 溢位與捨入
              name: 溢位與捨入
            Representing Text:
              key: 表示文字
              name: 表示文字
            Black and White Images:
              key: 黑白圖像
              name: 黑白圖像
            Color Images:
              key: 彩色圖像
              name: 彩色圖像
            Lossless Compression:
              key: 無損壓縮
              name: 無損壓縮
            Lossy Compression:
              key: 有損壓縮
              name: 有損壓縮
            Intellectual Property:
              key: 知識產權
              name: 知識產權
            Project - Digital Information Dilemmas Part 1:
              key: 專案 - 數位資訊困境 第 1 部分
            Project - Digital Information Dilemmas Part 2:
              key: 專案 - 數位資訊困境 第 2 部分
            'Lesson 14: Assessment Day':
              key: 課堂 14：評估日
              name: 評估日
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csp_unit1_2020:
              display_name: "（舊）單元 1：數位資訊"
        csp2-2021:
          lessons:
            Welcome to the Internet:
              key: 歡迎來到網際網路
              name: 歡迎來到網際網路
            Building a Network:
              key: 建立網路
              name: 建立網路
            The Need for Addressing:
              key: 定址的需要
              name: 定址的需要
            Routers and Redundancy:
              key: 路由器與備援
              name: 路由器與備援
            Packets:
              key: 封包
              name: 封包
            DNS and HTTP:
              key: DNS 與 HTTP
            Project - Internet Dilemmas Part 1:
              key: 專案 - 網際網路困境 第 1 部分
            Project - Internet Dilemmas Part 2:
              key: 專案 - 網際網路困境 第 2 部分
            'Lesson 9: Assessment Day':
              key: 課堂 9：評估日
              name: 評估日
            lesson-1:
              name: 電腦科學原理課後問卷調查
          lesson_groups:
            csp_unit2_2020:
              display_name: "（舊）單元 2：網際網路"
            lessonGroup-2:
              display_name: 問卷
        csp3-2021:
          lessons:
            Introduction to Apps:
              key: 應用程式簡介
              name: 應用程式簡介
            Project - Designing an App Part 1:
              key: 專案 - 設計應用程式 第 1 部分
            Project - Designing an App Part 2:
              key: 專案 - 設計應用程式 第 2 部分
            The Need for Programming Languages:
              key: 程式語言的需要
              name: 程式語言的需要
            Intro to Programming:
              key: 程式設計簡介
              name: 程式設計簡介
            Debugging:
              key: 除錯
              name: 除錯
            Project - Designing an App Part 3:
              key: 專案 - 設計應用程式 第 3 部分
            Project - Designing an App Part 4:
              key: 專案 - 設計應用程式 第 4 部分
            Project - Designing an App Part 5:
              key: 專案 - 設計應用程式 第 5 部分
            'Lesson 11: Assessment Day':
              key: 課堂 11：評估日
              name: 評估日
          lesson_groups:
            csp_unit3_2020:
              display_name: 單元 3：應用程式設計簡介
        csp4-2021:
          lessons:
            Variables Explore:
              key: 變數探索
              name: 變數探索
            Variables Investigate:
              key: 變數研究
              name: 變數研究
            Variables Practice:
              key: 變數的練習
              name: 變數的練習
            Variables Make:
              key: 變數的建立
              name: 變數的建立
            Conditionals Explore:
              key: 條件式探索
              name: 條件式探索
            Conditionals Investigate:
              key: 條件式研究
              name: 條件式研究
            Conditionals Practice:
              key: 條件判斷的練習
              name: 條件判斷的練習
            Conditional Make:
              key: 條件式製作
            Functions Explore / Investigate:
              key: 函式探索 / 研究
              name: 函式探索 / 研究
            Functions Practice:
              key: 函式的練習
              name: 函式的練習
            Functions Make:
              key: 函式的建立
              name: 函式的建立
            Project - Decision Maker App Part 1:
              key: 專案 - 決策者應用程式 第 1 部分
            Project - Decision Maker App Part 2:
              key: 專案 - 決策者應用程式 第 2 部分
            Project - Decision Maker App Part 3:
              key: 專案 - 決策者應用程式 第 3 部分
            'Lesson 15: Assessment Day':
              key: 課堂 15：評估日
              name: 評估日
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
        csp5-2021:
          lessons:
            Lists Explore:
              key: 清單探索
              name: 清單探索
            Lists Investigate:
              key: 清單研究
              name: 清單研究
            Lists Practice:
              key: 清單的練習
              name: 清單的練習
            Lists Make:
              key: 清單製作
              name: 清單製作
            Loops Explore:
              key: 迴圈探索
              name: 迴圈探索
            Loops Investigate:
              key: 迴圈研究
              name: 迴圈研究
            Loops Practice:
              key: 迴圈的練習
              name: 迴圈的練習
            Loops Make:
              key: 迴圈製作
              name: 迴圈製作
            Traversals Explore:
              key: 尋訪探索
              name: 尋訪探索
            Traversals Investigate:
              key: 尋訪研究
              name: 尋訪研究
            Traversals Practice:
              key: 遍歷的練習
              name: 遍歷的練習
            Traversals Make:
              key: 尋訪製作
              name: 尋訪製作
            Semester Hackathon Part 1:
              key: 學期黑客松 第 1 部分
            Semester Hackathon Part 2:
              key: 學期黑客松 第 2 部分
            Semester Hackathon Part 3:
              key: 學期黑客松 第 3 部分
            Semester Hackathon Part 4:
              key: 學期黑客松 第 4 部分
            Semester Hackathon Part 5:
              key: 學期黑客松 第 5 部分
            'Lesson 18: Assessment Day':
              key: 課堂 18：評估日
              name: 評估日
            lesson-1:
              name: 電腦科學原理課後問卷調查
          lesson_groups:
            csp_lists:
              display_name: 清單
            csp_loops:
              display_name: 迴圈
            csp_traversals:
              display_name: 尋訪
            csp_project:
              display_name: 專案
            lessonGroup-5:
              display_name: 課後調查
        csp6-2021:
          lessons:
            Algorithms Solve Problems:
              key: 用演算法解決問題
              name: 用演算法解決問題
            Algorithm Efficiency:
              key: 演算法效率
              name: 演算法效率
            Unreasonable Time:
              key: 不合理的執行時間
              name: 不合理的執行時間
            The Limits of Algorithms:
              key: 演算法的限制
              name: 演算法的限制
            Parallel and Distributed Algorithms:
              key: 平行與分散式演算法
              name: 平行與分散式演算法
            'Lesson 6: Assessment Day':
              key: 課堂 6：評估日
              name: 評估日
            lesson-1:
              name: 電腦科學原理課後問卷調查
          lesson_groups:
            csp_unit6_2020:
              display_name: 演算法
            lessonGroup-2:
              display_name: 課後調查
        csp7-2021:
          lessons:
            Parameters and Return Explore:
              key: 參數與回傳探索
              name: 參數與回傳探索
            Parameters and Return Investigate:
              key: 參數與回傳研究
              name: 參數與回傳研究
            Parameters and Return Practice:
              key: 參數與回傳練習
              name: 參數與回傳練習
            Parameters and Return Make:
              key: 參數與回傳製作
              name: 參數與回傳製作
            Libraries Explore:
              key: 函式庫探索
              name: 函式庫探索
            Libraries Investigate:
              key: 函式庫研究
              name: 函式庫研究
            Libraries Practice:
              key: 函式庫練習
              name: 函式庫練習
            Project - Make a Library Part 1:
              key: 專案 - 製作函式庫 第 1 部分
            Project - Make a Library Part 2:
              key: 專案 - 製作函式庫 第 2 部分
            Project - Make a Library Part 3:
              key: 專案 - 製作函式庫 第 3 部分
            'Lesson 11: Assessment Day':
              key: 課堂 11：評估日
              name: 評估日
            lesson-1:
              name: 電腦科學原理課後問卷調查
          lesson_groups:
            csp_parameters_return_values:
              display_name: 參數及函數回傳值
            csp_libraries:
              display_name: 程式庫
            lessonGroup-3:
              display_name: 問卷
        csp8-2021:
          lessons:
            Create PT - Review the Task:
              key: 建立 PT - 檢閱任務
            Create PT - Make a Plan:
              key: 建立 PT - 制定計畫
            Create PT - Complete the Task:
              key: 建立 PT - 完成任務
            lesson-1:
              name: 電腦科學原理課後問卷調查
          lesson_groups:
            lessonGroup-2:
              display_name: 建立 PT
            lessonGroup-3:
              display_name: 問卷
        csp9-2021:
          lessons:
            Learning From Data:
              key: 從資料中學習
            Exploring One Column:
              key: 學習 1 個欄
              name: 學習 1 個欄
            Filtering and Cleaning Data:
              key: 篩選與清理資料
              name: 篩選與清理資料
            Exploring Two Columns:
              key: 學習 2 個欄
              name: 學習 2 個欄
            Big Data, Crowdsourcing, and Machine Learning:
              key: 大數據、群眾外包與機器學習
            Machine Learning and Bias:
              key: 機器學習與偏見
              name: 機器學習
            Project - Tell a Data Story - Part 1:
              key: 專案 - 訴說關於資料的故事 - 第 1 部分
            Project - Tell a Data Story - Part 2:
              key: 專案 - 訴說關於資料的故事 - 第 2 部分
            'Lesson 9: Assessment Day':
              key: 課堂 9：評估日
              name: 評估日
            lesson-1:
              name: 電腦科學原理課後問卷調查
          lesson_groups:
            csp_unit9_2020:
              display_name: 單元 9：資料
            lessonGroup-2:
              display_name: 問卷
        csp10-2021:
          lessons:
            Project - Innovation Simulation Part 1:
              key: 專案 - 創新模擬 第 1 部分
            Project - Innovation Simulation Part 2:
              key: 專案 - 創新模擬 第 2 部分
            Data Policies and Privacy:
              key: 資料政策與隱私
              name: 資料政策與隱私
            The Value of Privacy:
              key: 隱私的價值
              name: 隱私的價值
            Project - Innovation Simulation Part 3:
              key: 專案 - 創新模擬 第 3 部分
            Security Risks Part 1:
              key: 安全風險第 1 部分
              name: 安全風險第 1 部分
            Security Risks Part 2:
              key: 安全風險第 2 部分
              name: 安全風險第 2 部分
            'Project: Innovation Simulation Part 4':
              key: 專案：創新模擬 第 4 部分
            Protecting Data Part 1:
              key: 保護資料第 1 部分
              name: 保護資料第 1 部分
            Protecting Data Part 2:
              key: 保護資料第 2 部分
              name: 保護資料第 2 部分
            'Project: Innovation Simulation Part 5':
              key: 專案：創新模擬 第 5 部分
            'Project: Innovation Simulation Part 6':
              key: 專案：創新模擬 第 6 部分
              description_student: 教學內容概覽
            'Project: Innovation Simulation Part 7':
              key: 專案：創新模擬 第 7 部分
              description_student: 教學內容概覽
            'Lesson 14: Unit Assessment Day':
              key: 課堂 14：單元評估日
              name: 評估日
            lesson-1:
              name: 電腦科學原理課後問卷調查
          lesson_groups:
            csp_unit10_2020:
              display_name: 單元 10：網路安全與全球影響
            lessonGroup-2:
              display_name: 問卷
        coursea-2021:
          description_short: 為學齡前兒童設計的計算機科學指引。
          description_audience: 年齡：4-7
          lessons:
            Learn to Drag and Drop:
              key: 學習滑鼠的拖放
              name: 學習滑鼠的拖放
              description_student: 以點擊與拖放的方式完成謎題。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            'Programming: Happy Maps':
              key: 程式設計：快樂地圖
              name: 快樂地圖
              description_student: 編寫指令，讓 Flurb 走到水果那裡。
              description_teacher: 如果學生理解規畫順序和將它循序編程之間的區別，那麼從演算法過渡到程式設計的時間就不會太長，這項活動將透過速記讀寫代碼的方式幫助學生獲得經驗。
            Sequencing with Scrat:
              key: 和鼠奎特一起學序列
              name: 和鼠奎特一起學序列
              description_student: 為鼠奎特設計程式，讓他能夠拿到橡樹果實。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            Programming in Ice Age:
              key: 在冰河歷險紀裡編程
              name: 和鼠奎特一起寫程式
              description_student: 編寫程式，幫助鼠奎特拿到橡樹果實。
              description_teacher: 學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。
            Programming with Rey and BB-8:
              key: 和 BB-8 與 Rey 一起寫程式
              name: 和 BB-8 與 Rey 一起寫程式
              description_student: 協助 BB-8 收集廢金屬。
              description_teacher: 在本課堂中，學生會以更複雜的方式運用新的程式設計技巧，與 BB-8 一起完成更巧妙的關卡。
            'Loops: Happy Loops':
              key: 迴圈（Loops） - 快樂迴圈
              name: 迴圈（Loops） - 快樂迴圈
              description_student: 使用迴圈（loop），幫助 Flurb 解決更棘手的問題。
              description_teacher: 迴圈是程式設計中非常有用且強大的工具。為了理解迴圈的用處，就必須逼著學生去思考更簡潔的方式來解決平凡的問題。
            Loops in Ice Age:
              key: 冰河歷險紀中的迴圈
              name: 和鼠奎特一起學迴圈（Loop）
              description_student: 使用迴圈，幫助鼠奎特更快完成任務。
              description_teacher: 這個舞台會以「快樂迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集橡樹果實。
            Loops in Collector:
              key: 和收藏家學迴圈（Loop）
              name: 與 Laurel 一起學習迴圈
              description_student: 幫探險家 Laurel 收集地底的寶藏。
              description_teacher: 從「快樂迴圈」中建立重複指令的概念，這個階段會讓學生用迴圈更有效率的收集寶藏。
            Ocean Scene with Loops:
              key: 海洋場景與迴圈（Loop）
              name: 海洋場景與迴圈（Loop）
              description_student: 使用迴圈與模式完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            'Events: The Big Event':
              key: 事件：大事件
              name: 小小大事件
              description_student: 教師按下巨型遙控器的按鈕後，學生便會移動和大叫。
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            Events in Play Lab:
              key: Play Lab 中的事件（Event）
              description_student: 創作自己的遊戲或故事。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！
            lesson-1:
              name: 課程結束專案
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
            lessonGroup-5:
              display_name: 課程結束專案
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        courseb-2021:
          description_short: 為學前兒童準備的電腦科學介紹。類似課程 A，但採用更深入的概念。
          description_audience: 年齡 5-8
          lessons:
            Digital Trails:
              description_student: 瞭解自己的數位足跡，並學習怎樣在瀏覽網站時保持安全。
            Move It, Move It:
              key: 移動它，移動它
              name: 移動它，移動它
              description_student: 為你的同學設計程式，讓同學小心翼翼從某處移動到另一處。
              description_teacher: 本課堂會讓學生在心理上準備好程式編寫練習，他們會在整個課程中遇到這些練習。學生會組成小隊，以實體活動為同學設計程式，讓同學從某個位置踏步到踏一個位置，直到到達終點。
            Sequencing in Maze:
              key: 迷宮中的陣列（Sequence）
              name: 迷宮中的循序（Sequence）
              description_student: 協助憤怒鳥在道路上移動至搗蛋豬的位置。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            Programming in Maze:
              key: 在迷宮中編程（Programming ）
              name: 與憤怒鳥一起編程
              description_student: 製作程式，協助憤怒鳥完成迷宮。
              description_teacher: 學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。
            Programming in Harvester:
              key: 和農夫一起學程式
              name: 和農夫一起學程式
              description_student: 幫助收割者在路上收集蔬菜。
              description_teacher: 學生會把所學到的程式設計概念，應用到收割者遊戲的環境中。現在不僅是讓角色到達終點 - 學生必須使用新的積木收集玉米。他們會繼續建立順序演算法的技巧，並開始運用除錯流程。
            'Loops: Getting Loopy':
              key: 迴圈：學習迴圈
              name: 學習迴圈
              description_student: 在本課堂中，我們會使用重複迴圈舉行舞蹈派對！
              description_teacher: 我們開始設計更長和更有趣味的程式時，程式碼裡通常都會有大量重複內容。在本課堂中，學生會瞭解怎樣使用迴圈，以更簡易的方式傳達含大量重複內容的指令。學生會觀察舞蹈中的重複移動模式。
            Loops in Harvester:
              key: 與農夫一起學迴圈（Loops）
              name: 與農夫一起學迴圈（Loops）
              description_student: 使用迴圈，幫助收割者收集更多農作物！
              description_teacher: 這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集玉米。
            Loops in Collector:
              key: 和收藏家學迴圈（Loop）
              name: 與 Laurel 一起學習迴圈
              description_student: 為冒險家 Laurel 編寫程式，讓她能夠在開放的洞穴中收集寶藏。
              description_teacher: 在本課堂中，學生會繼續學習迴圈（loop）的概念。在這裡，冒險家 Laurel 會使用迴圈，在開放的洞穴中收集寶藏。這個時候會介紹新的「get treasure」（取得寶藏）積木，協助她完成旅程。
            Loops in Artist:
              key: 藝術家中的迴圈（Loops）
              name: 使用迴圈（Loop）在花園中繪畫
              description_student: 使用模式與迴圈完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個線上課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，學生會使用迴圈建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            The Right App:
              key: 合適的應用程式
              name: 合適的應用程式
              description_student: 製作你自己的智慧型手機應用程式草稿。
              description_teacher: 本課堂會讓學生明白，電腦可協助現實生活中的大眾。首先，學生會理解一些虛構的智慧型手機使用者，以協助他們找出「合適的應用程式」解決他們的需要。然後，學生會練習同理心與創意，製作自己的智慧型手機應用程式草稿，解決下一位使用者的需要。
            'Events: The Big Event':
              key: 事件：大事件
              name: 小小大事件
              description_student: 老師按下巨型遙控器的按鈕後，你便會移動或是大叫。
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            Events in Play Lab:
              key: Play Lab 中的事件（Event）
              description_student: 使用事件製作故事或互動遊戲。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            lesson-1:
              name: 課程結束專案
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_impacts:
              display_name: 運算的影響
            csf_events:
              display_name: 事件
            lessonGroup-6:
              display_name: 課程結束專案
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
        coursec-2021:
          description_short: 學習基本的計算機科學，創造屬於你自己的藝術、故事、遊戲作品。
          description_audience: 年齡 6-10
          lessons:
            'Programming: My Robotic Friends':
              key: 程式設計：我的機器人朋友
              name: 我的小機器人朋友
              description_student: 在本課堂中，你會假設同學是機器人，然後為他們設計程式，建立杯子堆疊的模式。
              description_teacher: 學生會使用一組符號來代替程式碼，設計演算法指示「機器人」把杯子疊起成不同的模式。學生會輪流扮演機器人，且僅回應同伴定義的演算法。這個部分會教導學生符號和行動關的聯繫、演算法和程式間的分別，以及有用的除錯技巧。
            Programming in Maze:
              key: 在迷宮中編程（Programming ）
              name: 與憤怒鳥一起編程
              description_student: 與憤怒鳥一起學習序列與演算法。
              description_teacher: 學生會使用憤怒鳥遊戲中的角色開發序列演算法，讓憤怒鳥能夠從迷宮的一側移動到另一側的豬那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓憤怒鳥向前、向左或是向右移動。
            Debugging in Maze:
              key: 在迷宮中除錯
              name: 在迷宮中除錯
              description_student: 在謎題中尋找問題，並練習你的除錯技巧。
              description_teacher: 除錯是學習設計程式的重要元素。在本課堂中，學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。
            Programming in Collector:
              key: 和收藏家學編程（Program）
              name: 和 Laurel 一起收集寶石
              description_student: 編寫演算法，幫助探險家 Laurel 收集大量寶石！
              description_teacher: 在這組謎題中，學生會繼續增加對演算法和除錯的瞭解。學生會遇到新角色：探除家 Laurel，並製作序列演算法，讓 Laurel 能夠在道路上行走時收集寶藏。
            Programming in Artist:
              key: 在藝術家中學習程式設計
              name: 用代碼創作藝術
              description_student: 為藝術家設計程式，製作漂亮的圖像。
              description_teacher: 在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。
            Binary Bracelets:
              key: 二進制手環
              name: 二進制手環
              description_student: 製作屬於你自己的二進制手環，並學習電腦怎樣記得資訊！
              description_teacher: 二進制在電腦世界中極為重要。現代的大多數電腦都會以二進制形式儲存所有類型的資訊。本課堂會協助展示：怎樣能夠把現實世界的東西，轉換成一系列的開/關。
            'Loops: My Loopy Robotic Friends':
              key: 迴圈：我的愛迴圈機器人朋友
              name: 我的愛迴圈小機器人朋友
              description_student: 在本課堂中，你會再次為同學設計程式，但會使用迴圈（loop），這樣，你便能夠解決更龐大、更複雜的問題。
              description_teacher: 學生會以最初的「我的機器人朋友」活動為基礎，處理更大型且更複雜的設計。為了幫助「機器人」設計程式，以完成這些更大型的設計，學生將需要找出指令裡有哪些重複模式可使用迴圈（loop）取代。
            Loops with Rey and BB-8:
              key: 和 BB-8 與 Rey 一起練習迴圈（Loop）
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
              description_student: 使用迴圈（loop），幫助 BB-8 完成各個迷宮！
              description_teacher: 這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生用迴圈協助 BB-8 更有效率的遊歷迷宮。
            Loops in Harvester:
              key: 與農夫一起學迴圈（Loops）
              name: 使用迴圈（Loop）收割農作物
              description_student: 我們來使用迴圈（loop），幫助收割者收割蔬菜！
            Looking Ahead:
              key: 展望未來
              name: 與 Minecraft 一起展望未來
              description_student: 躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            Sticker Art with Loops:
              key: 使用迴圈（Loop）繪畫貼紙藝術
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
            'Events: The Big Event':
              key: 事件：大事件
              name: 大事件
              description_student: 玩一款有趣的遊戲，學習使用事件。
              description_teacher: 學生很快會知道，事件是很好的方式，在預先編寫好的演算法中增加靈活性。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。事件可讓你的程式更有趣，而且有更多互動。
            Build a Flappy Game:
              key: 製作像素鳥遊戲
              name: 製作像素鳥遊戲
              description_student: 以你喜歡的方式隨意製作像素鳥遊戲，並盡情與朋友分享！
              description_teacher: 在這個特別舞台中，學生會開始製作自己的第一款像素鳥遊戲。他們會使用事件處理器偵測滑鼠點擊與物件碰撞。在關卡結束時，學生將能夠自訂遊戲，變更視覺元素或規則。
            Events in Play Lab:
              key: Play Lab 中的事件（Event）
              description_student: 是時候發揮創意，在 Play Lab 中製作遊戲！
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            Picturing Data:
              key: 描繪資料
              name: 描繪資料
              description_student: 資料可用來幫助學生瞭解自己的世界，並解答有趣的問題。在本課堂中，學生會收集一個 Play Lab 專案的資料，並使用不同類型的圖表將資料視覺化。
              description_teacher: 資料可用來幫助學生瞭解自己的世界，並解答有趣的問題。在本課堂中，學生會收集一個 Play Lab 專案的資料，並使用不同類型的圖表將資料視覺化。
            'End of Course Project: Create a Play Lab Game':
              name: 課程結束專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
              description_teacher: 本總結課堂會引導學生重溫設計、開發與展示 Play Lab 專案的流程！為了確保流程順暢，我們已提供循序漸進的結構，方面學生按照結構工作 - 從紙張上計畫到在我們的網站上編寫程式。此外，我們也提供多種構思，協助教師完成最終展示！
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_binary:
              display_name: 二進制（Binary）
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
            csf_data:
              display_name: 數據
            end_of_course_project:
              display_name: 課程結束專案
          student_description: 以序列、迴圈與事件製作程式。將你的姓名首字母轉換成二進制碼，瞭解不同的問題解決技巧，以及學習怎樣應付網路欺凌。在課程結束時，你可創造出自己的遊戲或故事，然後向別人分享！
        coursed-2021:
          title: 課程 D（2021）
          description_short: 學習條件式陳述句。你可製作自己的藝術品、遊戲，甚至舞蹈派對！
          description_audience: 年齡 7-11
          lessons:
            'Algorithms: Graph Paper Programming':
              key: 演算法：方格紙程式設計
              name: 方格紙編程
              description_student: 在本課堂中，你會為同學設計程式，讓同學能夠畫畫！
              description_teacher: 學生會互相為對方「設計程式」繪畫，從而有機會以有趣且無障礙的方式，體驗程式設計中的一些核心概念。班級課堂開始時，首先會讓學生使用符號，互相指導對方在方格紙上的正方形裡填色，以重現出現有的圖片。如果時間允許，課堂結束時可以讓學生自行創作圖像。
            Introduction to Online Puzzles:
              key: 線上謎題簡介
              name: 線上謎題簡介
              description_student: 本課堂會讓你練習本課程中需要的技巧。
              description_teacher: 在這組謎題中，首先會向學生簡介（或重溫，視你的班級經驗而定） Code.org 的線上工作區。我們有各種影片指出工作區的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕。這些影片也會說明怎樣拖曳 Blockly 積木、刪除 Blockly 積木與連接 Blockly 積木。之後，學生會在迷宮裡練習_序列_與_除錯_技巧。接著，學生會在學習_迴圈_的基本知識時看到一些新的謎題類型，例如收藏家、藝術家與收割者。
            Relay Programming:
              key: 接力編程
              name: 接力編程
              description_student: 還記得課程開始時，你使用程式碼繪畫嗎？在本課堂中，你會與一個團隊合作，做一些類似的事情！
            Debugging in Collector:
              key: 和收藏家學除錯（Debug）
              name: 和 Laurel 學除錯（Debug）
              description_student: 在編寫程式時，你是否遇到過問題？在本課堂中，你會學習除錯的秘密。除錯是找出並解決程式碼問題的流程。
              description_teacher: 在這項線上活動中，學生會在「收藏家」環境中練習除錯。他們會練習閱讀與編輯程式碼，從而使用簡單的演算法、迴圈（loop）與巢狀迴圈（nested loop），修正謎題中的錯誤。
            Events in Bounce:
              key: 彈板遊戲中的事件（Event）
              name: 彈板遊戲中的事件（Event）
              description_student: 有沒有想過，你可以在學校玩電子遊戲？在本課堂中，你將有機會製作自己的遊戲！
              description_teacher: 在這項線上活動中，學生會學習甚麼是事件（event），以及電腦怎樣在程式（例如電子遊戲）中使用事件。學生會在各種謎題中，讓程式，對事件做出反應（例如按下箭頭按鈕後）。在謎題結束時，學生將有機會以不同的速度與聲音自訂遊戲。
            Build a Star Wars Game:
              key: 創建一個星際大戰遊戲！
              name: 創建一個星際大戰遊戲！
              description_student: 在本課堂中，建立自己的星際大戰遊戲，感受原力的震撼！
              description_teacher: 在本課堂中，學生會練習使用事件（event）製作遊戲，並可在線上分享。在 R2-D2 和其他星際大戰的角色陪伴下，學生會在引導下學習各種事件，然後自由製作屬於自己的遊戲。
            Dance Party:
              key: 舞蹈派對
              name: 舞蹈派對
              description_student: 現在是時候慶祝一下了！你會在本課堂中編寫程式，製作自己的互動舞蹈派對。
              description_teacher: 在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。
            Loops in Ice Age:
              key: 冰河歷險紀中的迴圈
              name: 冰河歷險紀中的迴圈
              description_student: 在本課堂中，你會使用 repeat（重複）積木，協助鼠奎特以最有效率的方式拿到橡樹果實。
              description_teacher: 這個舞台是使用迴圈（loop）的快速更新（或簡介），會讓學生使用「repeat」（重複）積木，讓鼠奎特以更有效率的方式拿到橡樹果實。
            Loops in Artist:
              key: 藝術家中的迴圈（Loops）
              name: 以迴圈（Loop）繪畫藝術作品
              description_student: 在本課堂中，迴圈（loop）讓你更容易在藝術家中製作酷炫的圖像！
              description_teacher: 本課堂以學生先前在課堂中對迴圈（loop）的認識為基礎，讓學生有機會真正發揮創意。這項活動也會做為除錯練習，獲得額外的問題解決機會。
            Nested Loops in Bee:
              key: 蜜蜂裡的巢狀迴圈（Nested Loops）
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明你在建立巢狀迴圈（nested loop）時會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Conditionals with Cards:
              key: 用撲克牌學習條件判斷（Conditionals）
              name: 用撲克牌學習條件判斷（Conditionals）
              description_student: 是時候玩一款遊戲，讓你僅在某些條件下賺到點數！
            Conditionals in Bee:
              key: 在蜜蜂遊戲中的條件式（Conditional）
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
              description_student: 你已明白甚麼是條件式（conditional）。現在是時候為蜜蜂設計程式，讓蜜蜂在採集蜂蜜與花蜜時使用。
              description_teacher: 到了這個階段，學生已設計了程式，讓程式每次都使用相同的方法執行。這種做法十分可靠，不過欠缺點彈性。在本課堂中，班級同學將會開始使用條件式（conditional）編寫程式，讓他們編寫出來的程式，可依據程式遇到的特定條件，以不同方式運作。
            While Loops in Farmer:
              key: 農夫遊戲中的 while（當）迴圈
              name: 農夫遊戲中的 while（當）迴圈
              description_student: 迴圈（loop）在程式編寫中非用實用。本課堂會教你其中一種：while（當）迴圈！
            Until Loops in Maze:
              key: 迷宮裡的 until（直到）迴圈
              name: 迷宮裡的 until（直到）迴圈
              description_student: 使用 until（直到）迴圈，你就可成就一些精彩的事情！
              description_teacher: 在本課堂中，學生會學習「until」（直到）迴圈。學生會製作程式，讓主角重複動作，「直到」主角到達所需的停駐點。
            Conditionals & Loops in Harvester:
              key: 收割者遊戲中的條件式（Conditional）與迴圈（Loop）
              description_student: 我們不會總是清楚瞭解要在甚麼時候使用每項條件式（conditional）。本課堂會幫你練習決定要怎樣做。
              description_teacher: 學生會練習「while」（當）迴圈、「until」（直到）迴圈與「if/else」（如果/否則）陳述句。這幾種積木都會使用條件式。練習全部積木後，學生便會學習到如何編寫複雜且具靈活性的程式碼。
            'Unplugged: Binary':
              key: 不插電活動 - 二進制
              name: 二進制圖像
              description_student: 瞭解電腦怎樣使用只有 2 種選項的語言來儲存圖片。
              description_teacher: 雖然很多人認為二進制就是一堆的 0 和 1，但是學生會學習一種概念：資訊可以用不同的二進制表達法表示。這堂課將更深入這個觀念，說明電腦如何同樣的以二進制儲存更複雜的訊息（例如圖像和顏色）。
            Artist Binary:
              key: 小藝術家 - 二進制（Binary）
              description_student: 在本課堂中，你會學習怎樣僅使用 0 和 1 就能製作圖像。
              description_teacher: 這個線上課堂系列，會讓學生學習使用開/關來製作圖像。
            End of Course Project:
              key: 課程結束專案
              name: 課程結束專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
            lesson-6:
              name: 與 Minecraft 一起展望未來
              description_student: 躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            lesson-5:
              description_student: 在本課堂中，你會瞭解密碼可怎樣保護你的資訊，以及怎樣才算是好的密碼。
            lesson-1:
              name: 語言的力量
              description_student: 欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_events:
              display_name: 事件
            csf_loops:
              display_name: 迴圈
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            csf_binary:
              display_name: 二進制（Binary）
            csf_digcit:
              display_name: 數位公民
            end_of_course_project:
              display_name: 課程結束專案
            lessonGroup-6:
              display_name: 數位公民
        coursee-2021:
          description_audience: 年齡 8-12
          lessons:
            Sequencing in the Maze:
              key: 迷宮中的陣列（Sequence）
              name: 迷宮中的陣列（Sequence）
              description_student: 在本課堂中，你會學習怎樣編寫自己的程式！
              description_teacher: |-
                在這組謎題中，首先會向學生簡介（或重溫，視你的班級經驗而定） Code.org 的線上工作區。我們有各種影片指出工作區的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕。這些影片也會說明怎樣拖曳 Blockly 積木、刪除 Blockly 積木與連接 Blockly 積木。之後，學生會在迷宮裡練習_序列_與_除錯_技巧。接著，學生會在學習_迴圈_的基本知識時看到一些新的謎題類型，例如收藏家、藝術家與收割者。\\r
                除錯是學習設計程式的重要元素。學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。
            Programming and Loops with the Artist:
              key: 用藝術家設計程式並練習迴圈（Loop）
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            'Conditionals in Minecraft: Voyage Aquatic':
              key: 'Minecraft 中的條件式：水上巡航 '
              name: 'Minecraft 中的條件式：水上巡航 '
              description_student: 你會在 Minecraft 的世界裡學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            Conditionals:
              key: 條件判斷（Conditionals）
              name: 與農夫一起嘗試條件式（Conditional）
              description_student: 在這個有趣而具挑戰的遊戲系列中，你會告訴電腦在某些特定條件下如何行動。
              description_teacher: 本課堂會向學生介紹「while」（當）迴圈與「if / else」（如果/否則）陳述句。_While 迴圈_ 用於在條件是 true 時繼續重複命令。While 迴圈的使用情況是：程式設計師不知道命令確實需要重複多少次，但是知道哪項條件需要為 true，才可讓迴圈繼續重複。「If / Else」陳述句為程式設計提供彈性，程式僅會在某個項目為 true 時執行整個部分，否則便會執行其他項目。
            Simon Says:
              key: 老師說
              description_student: 玩一款遊戲，想想需要使用哪些命令才可獲得正確的結果。
              description_teacher: 在本課堂中，學生會玩一款遊戲，目的是讓他們思考一下，需要以甚麼方式提供命令，才可獲得正確的結果。這樣就可幫助他們更容易在往後的課堂中過渡到 Sprite Lab。
            Learning Sprites with Sprite Lab:
              key: 在 Sprite Lab 中學習角色（Sprite）
              name: Sprite Lab 中的游泳小魚
              description_student: 學習建立與編輯角色（sprite）。
              description_teacher: 在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。
            Alien Dance Party with Sprite Lab:
              key: 用 Sprite Lab 創作外星人舞蹈派對
              name: 用 Sprite Lab 創作外星人舞蹈派對
              description_student: 製作可與同學分享的互動專案。
              description_teacher: 本課堂會介紹 Sprite Lab，這是一個工作平台，讓學生可在這裡製作自己的互動式動畫和遊戲。除了「行為」外，學生今天會結合做為「事件」的使用者輸入，以製成「外星人舞蹈派對」。
            Private and Personal Information:
              key: 隱私與個人資訊
              name: 隱私與個人資訊
              description_student: 網際網路刺激有趣，但是也有必要保持安全！本課堂會教你有哪些資訊可安全分享，有哪些資訊則應保持私密。
            About Me:
              key: 關於我
              name: 關於我
              description_student: 學生會使用 SpriteLab 製作互動海報，從而應用在網際網路上分享個人與私人資訊的知識。
            Digital Sharing:
              key: 數位分享
              name: 數位分享
              description_student: 在本課堂中，你會學到所有權與著作權方面的挑戰與優點。
            Nested Loops in Bee:
              key: 蜜蜂裡的巢狀迴圈（Nested Loops）
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Nested Loops in Artist:
              key: 小藝術家裡的巢狀迴圈（Nested Loops）
              description_student: 更多巢狀迴圈（nested loop）！這一次，你將能夠使用巢狀迴圈製作一些非常漂亮的圖畫！
            Nested Loops in Frozen:
              key: 冰雪奇緣中的巢狀迴圈（Nested Loop）
              description_student: 安娜與艾莎的滑冰技術非常出眾，但是需要你的協助，在冰上建立模式。請使用巢狀迴圈（nested loop）製作非常酷炫的效果！
            'Functions: Songwriting':
              key: 函式：作曲
              name: 歌曲創作
              description_student: 即使是搖滾巨星也需要程式設計技巧。本課堂會用歌曲裡的歌詞教授函式。
              description_teacher: 在電腦科學世界中，函式（function）可以說是最壯觀的結構之一。函式有時候稱為程序，是在龐大的程式中的一些迷你程式，可以不斷重複利用。本課堂將會幫助學生直觀的瞭解，為甚麼把這麼多零碎的程式碼組合成函式是非常有用的做法。
            Functions in Minecraft:
              key: Minecraft 中的函式
              name: Minecraft 中的函式
              description_student: 你能指出要如何利用函式提高編程效率嗎？
              description_teacher: 在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！
            Functions in Harvester:
              key: 收割者遊戲中的函式（Function）
              name: 在收割者遊戲中學習函式（Function）
              description_student: 協助農夫收割農作物時，函式（function）可為你省下大量工夫！
              description_teacher: 學生已練習在藝術家遊戲中製作精彩的設計，並在蜜蜂遊戲中遊走，但他們今天會使用函式（function），在收割者遊戲中收割農作物。本課堂會鼓勵學生以新的方式使用函式：把函式和「while」（當）迴圈與「if/else」（如果/否則）陳述句結合起來。
            Functions in Artist:
              key: 藝術家遊戲中的函式（Function）
              name: 在藝術家遊戲中使用函式（Function）
              description_student: 使用函式，以更簡易的方式繪畫複雜的圖畫！
              description_teacher: 學生會在藝術家遊戲中學習使用函式（function）。他們會製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。
            Designing for Accessibility:
              key: 以無障礙為目的設計程式
              name: 以無障礙為目的設計程式
              description_student: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
              description_teacher: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
            End of Course Project:
              key: 課程結束專案
              name: 課程結束專案
              description_student: 這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！
              description_teacher: |-
                接下來的 4 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是多個課堂或多個星期的體驗，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。\\r
                \\r
                在探索階段中，學生將會試玩預先製作完成的藝術家與 Sprite Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家、Sprite Lab 或其他他們熟悉的介面中製作自己的專案（這可能是專案中最長的階段）。最後，學生將能夠向同伴展示自己的成品。
            lesson-1:
              name: 以無障礙為目的設計程式
              description_teacher: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
          lesson_groups:
            ramp_up:
              display_name: 巢狀迴圈
            csf_sprites:
              display_name: 角色
            csf_digcit:
              display_name: 數位公民
            csf_nested_loops:
              display_name: 條件判斷（Conditionals）
            csf_functions:
              display_name: 函式
            csf_impacts:
              display_name: 運算的影響
            end_of_course_project:
              display_name: 課程結束專案
            lessonGroup-7:
              display_name: 運算的影響
        coursef-2021:
          description_short: 學習計算機科學的基礎概念，並創建自己的藝術、故事、遊戲作品。
          description_audience: 年齡 9-13
          lessons:
            Functions in Minecraft:
              key: Minecraft 中的函式
              name: Minecraft 中的函式
              description_student: 你能指出要如何利用函式提高編程效率嗎？
              description_teacher: 在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！
            Learning Sprites with Sprite Lab:
              key: 在 Sprite Lab 中學習角色（Sprite）
              name: Sprite Lab 中的游泳小魚
              description_student: 學習建立與編輯角色（sprite）。
              description_teacher: 在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。
            Events with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
              description_student: 製作可與同學分享的互動專案。
              description_teacher: 本課堂會介紹 Sprite Lab，這是一個工作平台，讓學生可在這裡製作自己的互動式動畫和遊戲。除了「行為」外，學生今天會結合做為「事件」的使用者輸入，以製成「外星人舞蹈派對」。
            Loops with the Artist:
              key: 讓畫家進行迴圈操作
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Nested Loops in the Maze:
              key: 迷宮裡的巢狀迴圈（Nested Loop）
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            The Power of Words:
              key: 語言的力量
              name: 語言的力量
              description_student: 欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。
            Envelope Variables:
              key: 信封變數
              name: 信封變數
              description_student: "「信封」與「變數」有一個共通點：兩者都可放進有用的東西。在這裡，你會學習變數是甚麼，以及變數可以做哪些精彩的事。"
              description_teacher: 變數會用來做為值的佔位符，例如數字或詞語等。在程式設計中，變數可提供大量的自由度。電腦科學家不同輸入很多次同一個句子，或記住含糊的數字；他們可使用變數引用這些內容。本課堂會協助解釋甚麼是變數，以及我們可怎樣以不同方式使用變數。變數這種概念不容易掌握，因此我們建議在課堂結束時預留充足時間討論。
            Variables as Constant in Artist:
              key: 在藝術家中以變數做為常數
              name: 在藝術家遊戲中學習變數
              description_student: 別忘了把創意帶到課室！在這些謎題中，你會使用變數繪畫漂亮的圖畫。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀，即使在執行時各個值都沒有變更。
            Variables that Change in Bee:
              key: 在蜜蜂遊戲中更改的變數
              name: 在蜜蜂遊戲中變更變數
              description_student: 這隻蜜蜂很喜愛變數！
              description_teacher: 本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。
            Variables that Change in Artist:
              key: 在藝術家遊戲中更改的變數
              description_student: 在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            Simulating Experiments:
              key: 模擬實驗
              name: 模擬實驗
              description_student: 在電腦上執行模擬，並實驗一下變更參數後的情況。
              description_teacher: 在 Sprite Lab 上執行簡單模擬，學生便會體驗到電腦運算可怎樣用來收集資料，從而找出各種趨勢與模式。多次執行模擬後，學生便會有機會預測一下，變更模擬中的變數可能會怎樣影響結果，然後再測試這個假設。
            AI for Oceans:
              key: 在海洋中使用的 AI
              name: 在海洋中使用的 AI
            Internet:
              key: 網際網路 Internet
              name: 網際網路
              description_student: 你有沒有想過，資訊怎樣在網際網路中傳輸？不是魔術！本課堂將會教導網際網路運作方面的基本知識。
              description_teacher: 即便許多人每天都會上網，但是理解其中原理的中卻不多。在本課堂中，學生會假裝流經網際網路，同時學習連線、URL、IP 位址與 DNS 的知識。
            For Loop Fun:
              key: 有趣的計次迴圈
              name: 有趣的計次迴圈
              description_student: 玩「for」（計數）迴圈，發掘無窮樂趣！
              description_teacher: 我們知道迴圈可以讓我們不斷重複的做同一件事情。現在，我們要學習如何使用本身有額外結構的迴圈。這些新結構可讓學生編寫更強大、更具動態的程式碼。
            For Loops in Bee:
              key: 蜜蜂遊戲中的 for（計數）迴圈
              name: 與蜜蜂一起嘗試 for（計數）迴圈
              description_student: 嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！
              description_teacher: 本課堂以蜜蜂為角色，集中學習「for」（計數）迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後觀看 for 迴圈簡介，讓他們可更有效地解決複雜的問題。
            For Loops in Artist:
              key: 藝術家中的計數迴圈（For Loops）
              name: 藝術家中的計數迴圈（For Loops）
              description_student: 準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。
              description_teacher: 在本課堂中，學生會繼續練習「for」（計數）迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與「for」迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。
            Editing Behaviors:
              key: 行為的修改
              name: Sprite Lab 的行為（Behavior）
              description_student: 學習設計程式，控制自己角色的行為！
              description_teacher: 學生將在這裡使用 Sprite Lab，製作角色的自訂行為。
            Virtual Pet:
              key: 虛擬寵物
              name: '小專案: 虛擬寵物'
              description_student: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              description_teacher: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
            End of Course Project:
              key: 課程結束專案
              name: 課程結束專案
              description_student: 這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！
            lesson-1:
              name: 以無障礙為目的設計程式
              description_student: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
              description_teacher: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
            lesson-6:
              name: Sprite Lab 簡介
            lesson-7:
              name: 製作精靈圖
            lesson-8:
              name: 運行中的角色
            lesson-5:
              name: 疫情爆發
            lesson-2:
              name: 語言的力量
              description_student: 欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。
          lesson_groups:
            ramp_up:
              display_name: 角色
            csf_digcit:
              display_name: 數位公民
            csf_variables:
              display_name: 計次迴圈（For Loops）
            csf_for_loops:
              display_name: 計次迴圈（For Loops）
            csf_sprites:
              display_name: 運算的影響
            end_of_course_project:
              display_name: 課程結束專案
            lessonGroup-8:
              display_name: 變數
            lessonGroup-9:
              display_name: 移除
            lessonGroup-7:
              display_name: 數位公民
        express-2021:
          description_short: 電腦科學簡介：結合我們最優秀的國小課程內容，供年齡較大的學生學習。
          description_audience: 年齡 9-18
          lessons:
            Dance Party:
              key: 舞蹈派對
              name: 舞蹈派對
              description_student: 在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。
              description_teacher: 在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。
            Programming with Angry Birds:
              key: 與憤怒鳥一起編程
              name: 與憤怒鳥一起編程
              description_student: 與憤怒鳥一起學習序列與演算法。
              description_teacher: 學生會使用憤怒鳥遊戲中的角色開發序列演算法，讓憤怒鳥能夠從迷宮的一側移動到另一側的豬那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓憤怒鳥向前、向左或是向右移動。
            Debugging with Scrat:
              key: 與鼠奎特一起除錯
              name: 在迷宮中除錯
              description_student: 在謎題中尋找問題，並練習你的除錯技巧。
              description_teacher: 除錯是學習設計程式的重要元素。在本課堂中，學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。
            Collecting Treasure with Laurel:
              key: 和 Laurel 一起收集寶石
              name: 和 Laurel 一起收集寶石
            Creating Art with Code:
              key: 用代碼創作藝術
              name: 用代碼創作藝術
              description_student: 為藝術家設計程式，製作漂亮的圖像。
              description_teacher: 在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。
            Loops with Rey and BB-8:
              key: 和 BB-8 與 Rey 一起練習迴圈（Loop）
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
              description_student: 使用迴圈（loop），幫助 BB-8 完成各個迷宮！
            Sticker Art with Loops:
              key: 使用迴圈（Loop）繪畫貼紙藝術
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Nested Loops in Maze:
              key: 迷宮裡的巢狀迴圈（Nested Loops）
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明你在建立巢狀迴圈（nested loop）時會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Snowflakes with Anna and Elsa:
              key: 和安娜與艾莎一同玩雪花
              name: 和安娜與艾莎一同玩雪花
              description_student: 安娜與艾莎的滑冰技術非常出眾，但是需要你的協助，在冰上建立模式。請使用巢狀迴圈（nested loop）製作非常酷炫的效果！
              description_teacher: 學生已學懂怎樣把迴圈分層，現在他們可製作許多漂亮的東西。本課堂會把學生帶到一系列的練習中，協助他們運用安娜與艾莎的優秀滑冰技巧，製作適用於自己個人作品的圖像！
            'Looking Ahead with Minecraft ':
              name: 與 Minecraft 一起展望未來
              description_student: 躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            If/Else with Bee:
              key: 與小蜜蜂一起嘗試 If/Else（如果/否則）
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
              description_student: 你已明白甚麼是條件式（conditional）。現在是時候為蜜蜂設計程式，讓蜜蜂在採集蜂蜜與花蜜時使用。
              description_teacher: 到了這個階段，學生已設計了程式，讓程式每次都使用相同的方法執行。這種做法十分可靠，不過欠缺點彈性。在本課堂中，班級同學將會開始使用條件式（conditional）編寫程式，讓他們編寫出來的程式，可依據程式遇到的特定條件，以不同方式運作。
            While Loops with the Farmer:
              key: 與農夫一起嘗試 while（當）迴圈
              name: 農夫遊戲中的 while（當）迴圈
              description_student: 迴圈（loop）在程式編寫中非用實用。本課堂會教你其中一種：while（當）迴圈！
            'Conditionals in Minecraft: Voyage Aquatic':
              key: 'Minecraft 中的條件式：水上巡航 '
              name: 'Minecraft 中的條件式：水上巡航 '
              description_student: 你會在 Minecraft 的世界裡學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            Until Loops in Maze:
              key: 迷宮裡的 until（直到）迴圈
              name: 迷宮裡的 until（直到）迴圈
              description_student: 使用 until（直到）迴圈，你就可成就一些精彩的事情！
              description_teacher: 在本課堂中，學生會學習「until」（直到）迴圈。學生會製作程式，讓主角重複動作，「直到」主角到達所需的停駐點。
            Harvesting with Conditionals:
              key: 使用條件式（Conditional）收割農作物
              name: 使用條件式（Conditional）收割農作物
              description_student: 我們不會總是清楚瞭解要在甚麼時候使用每項條件式（conditional）。本課堂會幫你練習決定要怎樣做。
              description_teacher: 學生會練習「while」（當）迴圈、「until」（直到）迴圈與「if/else」（如果/否則）陳述句。這幾種積木都會使用條件式。練習全部積木後，學生便會學習到如何編寫複雜且具靈活性的程式碼。
            Functions in Minecraft:
              key: Minecraft 中的函式
              name: Minecraft 中的函式
              description_student: 你能指出要如何利用函式提高編程效率嗎？
              description_teacher: 在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！
            Functions with Harvester:
              key: 在收割者遊戲中學習函式（Function）
              name: 在收割者遊戲中學習函式（Function）
              description_student: 協助農夫收割農作物時，函式（function）可為你省下大量工夫！
              description_teacher: 學生已練習在藝術家遊戲中製作精彩的設計，並在蜜蜂遊戲中遊走，但他們今天會使用函式（function），在收割者遊戲中收割農作物。本課堂會鼓勵學生以新的方式使用函式：把函式和「while」（當）迴圈與「if/else」（如果/否則）陳述句結合起來。
            Functions with Artist:
              key: 在藝術家遊戲中使用函式（Function）
              name: 在藝術家遊戲中使用函式（Function）
              description_student: 使用函式，以更簡易的方式繪畫複雜的圖畫！
              description_teacher: 學生會在藝術家遊戲中學習使用函式（function）。他們會製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。
            Variables with Artist:
              key: 在藝術家遊戲中學習變數
              description_student: 在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            Changing Variables with Bee:
              key: 在蜜蜂遊戲中變更變數
              name: 在蜜蜂遊戲中變更變數
              description_student: 這隻蜜蜂很喜愛變數！
              description_teacher: 本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。
            Changing Variables with Artist:
              key: 在藝術家遊戲中變更變數
              name: 在藝術家遊戲中變更變數
              description_student: 在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。
            For Loops with Bee:
              key: 與蜜蜂一起嘗試 for（計數）迴圈
              name: 與蜜蜂一起嘗試 for（計數）迴圈
              description_student: 嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！
              description_teacher: 本課堂以蜜蜂為角色，集中學習「for」（計數）迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後觀看 for 迴圈簡介，讓他們可更有效地解決複雜的問題。
            For Loops with Artist:
              key: 藝術家中的計數迴圈（For Loops）
              name: 藝術家中的計數迴圈（For Loops）
              description_student: 準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。
              description_teacher: 在本課堂中，學生會繼續練習「for」（計數）迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與「for」迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。
            Swimming Fish in Sprite Lab:
              key: Sprite Lab 中的游泳小魚
              name: Sprite Lab 中的游泳小魚
              description_student: 學習建立與編輯角色（sprite）。
              description_teacher: 在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。
            Alien Dance Party:
              key: 外星人舞蹈派對
              name: 外星人舞蹈派對
              description_student: 製作可與同學分享的互動專案。
              description_teacher: 本課堂會介紹 Sprite Lab，這是一個工作平台，讓學生可在這裡製作自己的互動式動畫和遊戲。除了「行為」外，學生今天會結合做為「事件」的使用者輸入，以製成「外星人舞蹈派對」。
            Behaviors in Sprite Lab:
              key: Sprite Lab 的行為（Behavior）
              name: Sprite Lab 的行為（Behavior）
              description_student: 學習設計程式，控制自己角色的行為！
              description_teacher: 學生將在這裡使用 Sprite Lab，製作角色的自訂行為。
            Virtual Pet with Sprite Lab:
              key: 在 Sprite Lab 中製作虛擬寵物
              name: 在 Sprite Lab 中製作虛擬寵物
              description_student: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              description_teacher: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
            End of Course Project:
              key: 課程結束專案
              name: 課程結束專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
            lesson-1:
              name: 舞蹈派對
              description_student: 現在是時候慶祝一下了！你會在本課堂中編寫程式，製作自己的互動舞蹈派對。
              description_teacher: 在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。
            lesson-2:
              name: 製作精靈圖
            lesson-3:
              name: 運行中的角色
          lesson_groups:
            csf_warmup:
              display_name: 熱身
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            csf_functions:
              display_name: 函式
            csf_variables:
              display_name: 變數
            csf_for_loops:
              display_name: 計次迴圈（For Loops）
            csf_sprites:
              display_name: 角色
            end_of_course_project:
              display_name: 課程結束專案
            lessonGroup-9:
              display_name: 事件
        pre-express-2021:
          description_short: 為學前兒童提供的電腦科學簡介：結合我們的最佳幼稚園與一年級課程。
          description_audience: 年齡：4-8
          lessons:
            Learn to Drag and Drop:
              key: 學習滑鼠的拖放
              name: 學習滑鼠的拖放
              description_student: 以點擊與拖放的方式完成謎題。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            Sequencing with Scrat:
              key: 和鼠奎特一起學序列
              name: 和鼠奎特一起學序列
              description_student: 為鼠奎特設計程式，讓他能夠拿到橡樹果實。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            Programming in with Angry Birds:
              name: 與憤怒鳥一起編程
              description_teacher: 學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。
            Programming with Rey and BB-8:
              key: 和 BB-8 與 Rey 一起寫程式
              name: 和 BB-8 與 Rey 一起寫程式
              description_teacher: 在本課堂中，學生會以更複雜的方式運用新的程式設計技巧，與 BB-8 一起完成更巧妙的關卡。
            Programming in Harvester:
              key: 和農夫一起學程式
              name: 和農夫一起學程式
              description_student: 幫助收割者在路上收集蔬菜。
              description_teacher: 學生會把所學到的程式設計概念，應用到收割者遊戲的環境中。現在不僅是讓角色到達終點 - 學生必須使用新的積木收集玉米。他們會繼續建立順序演算法的技巧，並開始運用除錯流程。
            Loops with Scrat:
              key: 和鼠奎特一起學迴圈（Loop）
              name: 和鼠奎特一起學迴圈（Loop）
              description_student: 使用迴圈，幫助鼠奎特更快完成任務。
            Loops with Laurel:
              key: 與 Laurel 一起學習迴圈
              name: 與 Laurel 一起學習迴圈
              description_teacher: 在本課堂中，學生會繼續學習迴圈（loop）的概念。在這裡，冒險家 Laurel 會使用迴圈，在開放的洞穴中收集寶藏。這個時候會介紹新的「get treasure」（取得寶藏）積木，協助她完成旅程。
            Ocean Scene with Loops:
              key: 海洋場景與迴圈（Loop）
              name: 海洋場景與迴圈（Loop）
              description_student: 使用迴圈與模式完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            Drawing Gardens with Loops:
              key: 使用迴圈（Loop）在花園中繪畫
              name: 使用迴圈（Loop）在花園中繪畫
              description_student: 使用模式與迴圈完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個線上課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，學生會使用迴圈建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            On the Move with Events:
              key: 讓事件活動起來
              name: 讓事件活動起來
              description_student: 創作自己的遊戲或故事。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！
            A Royal Battle with Events:
              key: 以事件（Event）展開皇家大戰
              name: 以事件（Event）展開皇家大戰
              description_student: 使用事件製作故事或互動遊戲。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
        csf-2021-pilot:
          lessons:
            Learning Sprites with Sprite Lab:
              name: Sprite Lab 中的游泳小魚
            Virus Simulation for Code Bytes:
              name: 編碼一個模擬
            Course F Introduction:
              name: Sprite Lab 簡介
            Making Sprites:
              name: 製作精靈圖
            Sprites in Action:
              name: 運行中的角色
            introducing-spritelab:
              name: Sprite Lab 簡介
          lesson_groups:
            ramp_up:
              display_name: 介紹
            outbreak:
              display_name: 疫情爆發模擬
            lessonGroup-3:
              display_name: 變數
            Sprites:
              display_name: 角色
            variables:
              display_name: 變數
        csd4-preview-2021:
          description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
          description_short: 學習如何設計程式，以符合使用者的需要。
          lessons:
            Analysis of Design:
              key: 設計分析
              name: 設計分析
              description_student: 班級會瞭解多種不同的茶壺設計，以思考怎樣做出設計選擇，以及為甚麼做出這些選擇。班級同學會使用茶壺做為範例，瞭解使用者、使用者需要，以及他們使用的物件設計之間的關係。
              description_teacher: 單元會集中把問題解決內容分組，並為其他使用者開發產品。在單元開始時，學生首先會研究不同茶壺的設計。然後學生會分析每款茶壺，嘗試找出特定使用者的需要可能怎樣在其設計中反映出來。學生思考這些設計選擇，並嘗試把每款茶壺與一位潛在使用者配對後，便可以開始觀察：以使用者為本的方式設計產品（包括實際與數位數產），如何能讓產品更實用和易用。活動結束時，會請學生提議對其中一個茶壺做一些變更，讓茶壺更實用或更易用。
            Understanding Your User:
              key: 瞭解您的使用者
              name: 瞭解您的使用者
              description_student: 班級學生會以使用者設定檔，瞭解不同的使用者如何可能對各種產品做出反應。每位學生都會扮演不同人物，從而以其他人的角度體驗各種設計。
              description_teacher: 設計師需要瞭解使用者的需要，才可製作出實用的產品。本課堂鼓勵學生思考怎樣為其他人設計產品，方法是以使用者設定檔扮演其他人，並以扮演的角色對一系列產品做出反應。每位學生都會獲分配一個使用者設定檔，用於說明該角色，然後學生便會以該角色選擇恰當的產品、以批判方式評論產品設計，並建議設計上的改良。\\r
            User-Centered Design Micro Activity:
              key: 以使用者為中心的微型活動
              name: 以使用者為中心的微型活動
              description_student: 班級學生會分為各小組，然後使用設計流程獲得智慧衣著的構思。此活動是單元中提供的第一個練習機會，首先會集合思考，然後確定使用者，最後提出設計建議。本單元提供不同機會，讓學生練習設計解決方案，以解決其他人的需要。
              description_teacher: 本課堂會引導學生完成簡化版本的設計流程，學生會在整個單元中瞭解這個流程。學生首先會一起思考並列出智慧衣著的潛在使用者清單。然後，所有學生一起把這些構想分組至較廣泛的類別，然後每組選擇一個使用者類別。小組會重複這個程序，一起思考他們的使用者有哪些需要或關注事項，接著把這些需要分為不同類別，並選擇集中工作的一個類別。最後，學生會設計一件智慧衣著，過程中會使用剛才想出來的特定需要與關注事項，從而引導他們做出決策。在班級課堂結束時，學生會快速分享自己的決策流程，並接收相關回饋意見，瞭解他們的產品有多能夠解決所選擇的使用者需要。
            User Interfaces:
              key: 使用者介面
              name: 使用者介面
              description_student: 看看紙上原型可怎樣在編寫程式碼前，用來測試軟體並取得回饋意見。為了協助開發人員實現他們的構思，班級同學會測試並提供應用程式的紙上原型。
              description_teacher: 完成迷你設計專案後，學生會學習設計的下一個階段 - 製作產品原型，嘗試解決使用者的需要。學生會分為各自的團隊，研究稱為「Txt Ur Grndkdz」的聊天應用程式紙上原型。使用這個紙上原型，學生便有機會瞭解，簡單的紙上原型可怎樣用來快速測試構思與假設，然後才真正使用電腦。「使用」提供的原型後，學生便會開始找出各種方式，以改善下一個迭代的版本。
            Feedback and Testing:
              key: 回饋與測試
              name: 回饋與測試
              description_student: 使用者一直在測試一款應用程式，他們會有大量回饋意見提供給開發人員。班級同學需要透徹瞭解他們的回饋意見、找出共同的主題與需要，然後開始修改原型，讓原型更能符合使用者的需要。
              description_teacher: 在本課堂中，學生會使用前一個課堂中紙上原型應用程式的「使用者」回饋意見，從而改良紙上原型的使用者介面。課堂開始時，學生會反思：設計師需要把人類的需要，以科技轉化為對使用者介面（或「體驗」）做出的變更。然後，學生會依據前一個課堂中製作的應用程式，收集使用者的回饋意見與請求。學生會分組把回饋意見分類，並找出有哪些方式，讓回饋意見中表達的需要，能夠在變更應用程式介面後解決。之後，學生會分組實作其中一些變更，以滿足他們找到的其中一種需要。
            Identifying User Needs:
              key: 確定使用者需求
              name: 確定使用者需求
              description_student: 直到這個階段為止，班級學生研究的使用者都位於遠端地點，而來自使用者僅有的資訊，皆使用文字或角色扮演來代表。現在，學生會每 2 人一組，互相依賴對方做為潛在的使用者，並會互相訪問，以找出可開發應用程式解決的需要。
              description_teacher: 直到這個階段為止，學生集中設計程式的使用者對象，某程度上都位於遠端地點。不論以集體思考、個人設定檔或是文字回饋意見交流，學生與最終使用者間一直都沒有直接的聯繫。設計這種距離感，是為了協助學生在思考使用者需要時跳出自己的思考框框；但是為了以更直接的方式取得實際使用者的資訊，學生便需要依賴同學。在本課堂中，學生會以 2 人一組，成為對方的使用者（與設計師），讓所有學生都可直接訪問最終使用者，並向對方提出問題，從而取得更多資訊瞭解自己的設計。每組學生會互相訪問對方，並嘗試找出一項能使用應用程式解決的特定需要。
            Project - Paper Prototype:
              key: 專案 - 紙上原型
              name: 專案 - 紙上原型
              description_student: 班級同學會使用前一個課堂的訪談資訊，想出一些應用程式構思，以解決他們的使用者之需要。要表達這些構思，以及測試構思的效用，每位同學將會建立並測試自己的紙上原型。
              description_teacher: 每位學生會依據自己在前一個課堂的同伴訪談，想出一個解決使用者問題的應用程式構思。然後，學生會依據應用程式構思來開始製作紙上原型，在獨立的記事卡上繪畫「螢幕」。專案指南會引導學生完成流程，包括建立並由使用者測試應用程式，從而瞭解自製使用者介面的假設是否準確。
            Designing Apps for Good:
              key: 設計良好的應用程式
              name: 設計良好的應用程式
              description_student: 開始應用程式設計專案時，班級裡的同學會分為各自的團隊，然後開始探索應用程式主題。一些對社會影響深遠的範例應用程式，會用來做為專案的啟發工具。
              description_teacher: 應用程式設計專案會持續到單元結束。開始專案時，學生首先會瞭解一些應用程式，這些程式由其他學生製作，設計用於對社會產生影響。然後，班級同學會複習問題解決流程中的定義、準備、嘗試和反思步驟，並制定對社會產生影響的應用程式之構思。最後，學生會組成專案團隊安排契約，指出團隊在開發應用程式時如何運作。
            Market Research:
              key: 市場研究
              name: 市場研究
              description_student: 瞭解可能為相似使用者服務的現存應用程式，從而加深瞭解應用程式開發。每個小組會找出一些類似的應用程式，主題與自己製作的程式相同，並使用那些應用程式，協助重新定義學生所追求的應用程式構思。
              description_teacher: 在本課堂中，學生會研究一些應用程式，這些程式與他們打算製作的程式相似，從而更瞭解他們的使用者需要。學生會在團隊內工作、在線上搜尋其他應用程式，然後評估認為有趣的應用程式。在課堂結束時，每個團隊都會清楚瞭解自己想製作的應用程式類型，並進一步細分誰是他們的目標使用者。每個團隊會維護引用資訊清單，列出所有研究過的應用程式，並用於學生的期末專案展示中。
            Paper Prototypes:
              key: 紙上原型
              name: 紙上原型
              description_student: 紙上原型可讓開發人員快速測試自己的構思，然後再投放大量時間編寫程式。在本課堂中，各團隊會瞭解在 App Lab 中製作的一些範例應用程式，並使用那些應用程式中獲得的資訊，協助製作自己的應用程式紙上原型。
              description_teacher: 開始設計應用程式前，我們需要幫助學生仔細瞭解自己的期望。因為學生最終會在 App Lab 中製作這些應用程式的原型，若他們的構思和 App Lab 中容易製作原型的應用程式類型相近，就能夠有更充足的準備。團隊在開始這項研究時，首先會觀察一些範例應用程式，這些程式用於展示可使用 App Lab 製作的應用程式。然後，團隊可選擇 1 款（或更多）應用程式，做為自己的應用程式之基礎，之後會有一些時間討論自己的應用程式有哪些基本功能，並使用 3 英吋 x 5 英吋的索引卡開發紙上原型。\\r
            Prototype Testing:
              key: 原型測試
              name: 原型測試
              description_student: 在本課堂中，團隊會與其他同學測試自己的紙上原型。1 位學生扮演電腦、1 位學生說出內容，餘下的學生則會觀察。此時團隊會立即就自己的應用程式獲得回饋意見，為下一個版本的應用程式原型提供實用資訊。
              description_teacher: 開發紙上原型的首要目的是，這樣做可快速測試和迭代，然後才開始編寫程式碼。本課堂的重點在於，讓團隊有機會先測試自己的原型，然後再使用 App Lab。團隊會制定一套計畫，從而和使用者一起測試，之後與班級裡（也可能是班級外）的數個其他同學執行原型測試。為了讓使用者測試原型，學生必須在測試中分配角色（「解說員」、「電腦」與「觀察者」），並準備一些問題，讓使用者在測試結束時回答。
            Digital Design:
              key: 數位設計
              name: 數位設計
              description_student: 在開發、測試與收集紙上原型的回饋意見後，團隊便會移至 App Lab，建立應用程式的下一個迭代。每個團隊成員都會使用拖放設計模式，為自己團隊的應用程式製作至少 1 頁的內容，以回應在前一個回合測試時收到的回饋意見。
              description_teacher: 小組在協作開發應用程式的紙上原型後，便會以分治的方式，依據紙上原型來開始製作互動式數位版本。每位學生會各自使用 App Lab 的拖放設計模式，完成漸進式的技能訓練關卡，以學習怎樣製作紙上原型的數位版本。之後，每個小組成員都會在 App Lab 上，為自己的應用程式製作至少 1 頁內容，並在之後合併為單一個應用程式。
            Linking Screens:
              key: 連結不同畫面
              name: 連結不同畫面
              description_student: 團隊會以前一個課堂中設計的不同畫面做為基礎，合併各畫面並加入單一個應用程式中。然後，學生可加入一些簡單的程式碼，使點擊按鈕後進入適當畫面。
              description_teacher: 在本課堂中，團隊會把前一個課堂設計的各個畫面，合併為單一個應用程式，並使用程式碼互相連結起來。學生會繼續製作前一個課堂中開始製作的模型應用程式，從而學習基本的事件驅動程式設計。除了昨天學生設計的螢幕畫面外，學生也會學習怎樣製作額外的畫面，甚至匯入其他人製作的畫面。
            Testing the App:
              key: 測試應用程式
              name: 測試應用程式
              description_student: 團隊會執行下一回合的使用者測試，這次會使用他們的互動式原型進行。在這個回合中取得的回饋意見，將會做為應用程式原型最終迭代版本的有用資訊。
              description_teacher: 在前一個課堂結束時，每個團隊都應製作了應用程式的最簡可行原型。本課堂之主要目的，是讓團隊與其他人實際測試應用程式，對象最好是應用程式預期的目標受眾，或是班級裡的其他團隊；至於團隊中的觀察者，則會在先前用於計畫階段的工作表上記錄結果。與測試紙上原型一樣，團隊首先會計畫用於特定情景，然後執行並觀察測試。
            Improving and Iterating:
              key: 改善和迭代
              name: 改善和迭代
              description_student: 團隊會使用前一回合測試的回饋意見實作變更，以解決使用者的需要。每個團隊都會記錄希望加入的功能特色並安排優先順序，以及記錄需要解決的程式錯誤。
              description_teacher: 在這個階段中，團隊已開發了應用程式原型，並已經過多個迭代與多個回合的使用者測試。每位學生都有機會，依前一回合的使用者測試中取得的資訊與指導，計畫並實作團隊應用程式的改善內容。你可視可用時間與學生的興趣，執行恰當次數的測試與迭代週期。
            Project - App Presentation:
              key: 專案 - 應用程式簡報
              name: 專案 - 應用程式簡報
              description_student: 每個團隊都會準備一次簡報，以「投售」自己開發的應用程式。這時正是時候分享各種拼搏與勝利經驗，以及計畫未來。
              description_teacher: 這個時候，團隊已研究一項個人與社會重要性的主題、開發並測試紙上原型與數位原型，並開始製作初始應用程式迭代，以結合新的功能特色，以及執行錯誤修正。現在正是時候，讓學生檢閱自己完成的東西，整合成連貫的簡報展示創作的進展。團隊會使用提供的簡報範本，準備展示應用程式開發流程，包括開始解決的問題、他們在測試後以甚麼方式加入回饋意見，以及對未來的計畫。
            Post-Project Test:
              key: 專案後測驗
              name: 專案後測驗
            CS Discoveries Post Course survey:
              key: 電腦科學探索課後問卷調查
              name: 電腦科學探索課後問卷調查
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：用戶為中心的設計
            csd4_2:
              display_name: 第 2 章︰ 應用程式原型
            csd5_2:
              display_name: 第 2 章：解決數據問題
            cspSurvey:
              display_name: 問卷
            csdSurvey:
              display_name: 問卷
          student_description: 單元 4 會介紹電腦運算對社會產生的更廣泛影響。在一系列的設計挑戰中，你會學習怎樣更瞭解別人的需要，同時制定一套解決方案去處理問題。單元的下半部分含有反覆改良的專案，期間團隊有機會確認他們關注的需要、在紙上和 App Lab 中製作原型，然後讓真實的使用者測試解決方案，從而取得回饋意見並推動反覆改良。
        csd5-preview-2021:
          description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
          description_short: 瞭解大家怎樣使用電腦解決資料問題。
          lessons:
            Representation Matters:
              key: 表示事項
              name: 表示事項
              description_student: 第一個課堂會概述甚麼是資料，以及資料怎樣用來解決問題。各小組會使用一套資料集，為不同要求的人製作一系列的餐點建議。之後，各小組會比較他們的回答，並討論以不同的方式表示餐點資料，會怎樣影響學生解決不同問題的能力。
              description_teacher: 在資料單元的第一個課堂中，學生會大概瞭解甚麼是資料，以及資料怎樣用來解決問題。學生首先會展開簡短討論，從而普遍瞭解資料是甚麼。然後學生會分為各小組，並使用資料集為不同要求的人製作一系列的餐點建議。每個小組都可選擇以不同方式表示餐點（圖片、食譜、菜單、營養），從而讓不同方式有各自的優點。之後，各小組會比較他們的回答，並討論以不同的方式表示餐點資料，會怎樣影響學生解決不同問題的能力。
            Patterns and Representation:
              key: 模式和標記法
              name: 模式和標記法
              description_student: 本課堂會更深入瞭解需要以甚麼來建立表示系統。各小組會建立相關系統，從而能夠僅使用一疊卡片，便可表示字母表中的任何字母；然後，學生會使用這些系統建立訊息，並與其他小組交換，從而確保系統像預期般正常運作。之後，班級同學會討論不同工作系統間的共通點，同時瞭解有許多可能的實用解決方案。
              description_teacher: 在本課堂中，學生會建立自己的系統，用於表示資訊。他們首先會一起想出目前用於表示「是-否」回覆的所有不同系統。然後，學生會分為小組工作建立系統，從而僅使用一疊卡片就可表示字母表中的任何字母。使用的卡片有 6 種不同的圖畫內容（6 種動物、6 種顏色等），而為了表示所有字母，學生將需要使用不同卡片的圖樣（pattern）表示每個字母。然後，學生會使用自己的系統建立訊息，並與其他小組交換，從而確保系統像預期般正常運作。在總結討論中，班級學生會檢閱不同系統的優點和缺點。他們會討論不同工作系統間的共通點，同時瞭解有許多可能的實用解決方案，而且重點是所有人都使用相同的任意系統互相通訊。
            ASCII and Binary Representation:
              key: ASCII 和 二進位表示法
              name: ASCII 和 二進位表示法
              description_student: 本課堂會介紹一款為資訊編碼的正式二進制系統 ASCII，用於表示字母與其他字元。課堂開始時，教師會介紹：電腦必須使用「開」或「關」表示資訊。然後，班級同學會學習 ASCII 系統，以二進制符號表示文字，並練習使用這個系統，之後再使用 ASCII 為自己的訊息編碼。
              description_teacher: 在本課堂中，學生會學習第一款為資訊編碼的正式二進制系統 ASCII，用於表示字母與其他字元。課堂開始時，教師會介紹：電腦必須使用「開」或「關」表示資訊。然後，學生會學習 ASCII 系統，以二進制符號表示文字，並練習使用這個系統，之後再使用 ASCII 為自己的訊息編碼。課堂結束時會進行匯報對話，從而協助結合活動中的關鍵學習目標。
            Representing Images:
              key: 表示圖像
              name: 表示圖像
              description_student: 本課堂會繼續學習二進制表示系統，這次會使用圖像來說明。班級同學會學習把圖像分開為多個「正方形」或「像素」的概念，而這些像素可獨立開關，以構成整個圖像。使用圖像化小工具完成少許挑戰後，班級同學便會把圖像表示系統，和前一個課堂學到的文字表示系統互相聯繫起來。
              description_teacher: 在本課堂中，學生會學習電腦怎樣表示圖像。課堂開始時，學生會思考一項挑戰：把所有複雜的圖像轉化為二進制圖樣。學生首先會看到一系列圖像，瞭解這個轉換過程，接著學習把圖像分開為多個正方形或「像素」的概念，而這些像素可獨立開關，以構成整個圖像。然後，學生會使用圖像化小工具完成少許挑戰，從而繪畫出黑白圖像。謎題中會提出一些挑戰，讓學生以這種方式表示圖像。在總結課堂時，學生會把圖像表示系統，和前一個課堂學到的文字表示系統互相聯繫起來。
            Representing Numbers:
              key: 數字表示法
              name: 數字表示法
              description_student: 本課堂介紹二進制數字系統。班級同學會收到一組卡片，這些卡片表示二進制（base-2）數字系統中的位值。然後，學生要上下翻轉卡片，以「開啟」或「關閉」卡片，並觀察不同圖樣的結果。最後，圖樣會延伸為通用的 4 位元系統。
              description_teacher: 在本課堂中，學生會學習二進制數字系統。學生會收到一組卡片，這些卡片會以由點構成的組合，來表示二進制（base-2）數字系統中的位值。然後，學生要上下翻轉卡片，以「開啟」或「關閉」卡片，並觀察不同圖樣的結果。最後，學生需要把圖樣延伸為通用的 4 位元系統。
            Keeping Data Secret:
              key: 讓資料保密
              name: 讓資料保密
              description_student: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
              description_teacher: 學生會討論個人資料的不同安全等級。整個班級都瞭解隱私有多重要後，他們便會學習加密資訊的流程：為同伴加密筆記，然後解密同伴的筆記。班級在課堂結束時，會討論實體與數位安全的重要性。
            Combining Representations:
              key: 組合表示
              name: 組合表示
              description_student: 本課堂會合併全部 3 種類型的二進制表示系統（ASCII 字元、二進制數字和圖像），讓學生能夠在某項記錄中，為更複雜的資訊類型編碼。學生會觀察一系列位元，然後需要把位元解碼。在這個過程中，班級學生會學到一個概念：瞭解二進制資訊，就需要同時瞭解使用中的系統，以及加密後的資訊是甚麼意思。
              description_teacher: 在本課堂中，學生會運用全部 3 種類型的二進制表示系統（ASCII 字元、二進制數字和圖像），從而為某項記錄解碼。學生會觀察一系列位元，然後需要把位元解碼。在這個過程中，學生會學到一個概念：為了明白二進制資訊，他們就必須同時瞭解使用中的系統，以及加密後的資訊是甚麼意思。之後，學生便會依據提供的結構，為表示寵物的記錄解碼。
            Project - Create a Representation:
              key: 專案 - 創建標記法
              name: 專案 - 創建標記法
              description_student: 學生會使用這一章所學到的二進制表示系統來設計結構，以表示他們度過的美好一天。在確定相關記錄應擷取哪些資訊後，班級同學便會決定一張儲存多個位元資訊的打孔卡，會以怎樣的方式詮釋，以表示裡面的資訊。之後，所有同學都會使用學到的 ASCII、二進制數字與圖像格式，來表示他們美好的一天，並嘗試解碼同伴美好的一天過得怎樣。
              description_teacher: 在本課堂中，學生會使用這一章所學到的二進制表示系統來設計結構，以表示他們度過的美好一天。他們首先會寫下簡短說明，描述他們美好的一天，然後與同伴一起檢閱內容，找出他們認為電腦會擷取的關鍵資訊。同學會全班一起決定，一張儲存多個位元資訊的打孔卡，會以怎樣的方式詮釋，以表示裡面的資訊。接著，學生會使用學到的 ASCII、二進制數字與圖像格式，來表示他們美好的一天。之後學生會交換打孔卡，並嘗試解碼同伴美好的一天過得怎樣。課堂會以反思來結束。
            Problem Solving and Data:
              key: 問題解決與數據
              name: 問題解決與數據
              description_student: 本課堂會說明可怎樣量身制定問題解決流程，以處理特別是資料方面的問題。班級同學的任務，是決定某個城市最需要投放資源在哪個方面。他們必須找出並使用線上找到的資料支持這個決定。
              description_teacher: 在本課堂中，學生會使用課程初期學到的問題解決流程，以解決資料問題。檢閱流程後，班級同學便要做出決定：某個城市應該建立圖書館、寵物庇護所還是消防局。學生會以團隊方式工作，從線上收集資訊，協助決定應建造甚麼，然後使用這些資訊撰寫理據，從而說服市議會接納他們的選擇。然後他們會把完成的事情，對映至整個課程中一直使用的問題解決流程中，並比較一般問題解決流程和專門應用至資料問題時有甚麼異同。
            Problem Solving with Big Data:
              key: 用大數據解決問題
              name: 用大數據解決問題
              description_student: 本課堂講解機構怎樣收集與使用資料，以解決現實世界的問題。班級同學會觀察 3 個可使用資料來解決的情景，並一起思考希望以哪些資料類型解決，以及他們可怎樣收集資料。每個情景也會包含一段影片，瞭解一項真實世界的服務，曾經以資料解決類似的問題。
              description_teacher: 在本課堂中，學生會瞭解機構怎樣收集與使用資料，以解決現實世界的問題。課堂首會快速回顧前一個課堂中學到的資料問題解決流程。然後，學生會觀察 3 個可使用資料來解決的情景，並一起思考希望以哪些資料類型解決，以及他們可怎樣收集資料。每個問題的設計，都用於反映現實世界中存在的服務。集體思考後，學生會觀看一段影片，瞭解一項真實世界的服務， 然後寫下筆記，指出現實世界的服務會收集甚麼資料，還有怎樣使用這些資料。課堂結束時，學生會記錄資料由使用者主動提供、被動記錄下來，還是由感測器來收集。
            Structuring Data:
              key: 資料的建構
              name: 資料的建構
              description_student: 本課堂會更深入探討資料詮釋，包括原始資料集清理與視覺化。班級同學首先會瞭解，以不同方式展示資料，可怎樣協助受眾更易理解資料。學生觀察清理與視覺化可怎樣協助大眾做出更好的決定後，便會研究這個流程中的哪些部分可自動化，哪些部分需要人類介入。
              description_teacher: 在本課堂中，學生會更深入探討資料收集與詮釋，包括資料清理與視覺化。學生首先會瞭解，以不同方式展示資料，可怎樣協助受眾更易理解資料，然後再讓自己的資料製作視覺化內容。學生必須使用首選薄餅配料的訪問結果，決定需要怎樣處理無法輕易加入所選視覺化方案的資料。最後，學生會研究這個流程中的哪些部分可由電腦自動化，哪些部分則需要人類做決定。
            Making Decisions with Data:
              key: 依數據來做決定
              name: 依數據來做決定
              description_student: 本課堂讓學生有機會練習前一個課堂介紹的資料問題解決流程。不是所有問題都有正確答案，而在某些情況下，班級同學可以並應該確定應收集更多資料。課堂結束時，會討論不同人可怎樣從相同的資料中得出不同的結論，或是收集不同的資料可能怎樣影響了他們做出的決定。
              description_teacher: 在本課堂中，學生會練習依據某些問題使用資料去做決定，這些問題專門設計讓中學生感到熟悉。學生會分組工作，討論他們會怎樣使用收到的資料做出決定，然後全球討論他們的最後決定。不是所有問題都有正確答案，而在某些情況下，學生可以並應該確定應收集更多資料。課堂結束時，會討論不同人可怎樣從相同的資料中得出不同的結論，或是收集不同的資料可能怎樣影響了他們做出的決定。
            Interpreting Data:
              key: 解譯數據
              name: 解譯數據
              description_student: 課堂開始時，學生首先會瞭解一份蛋糕偏好問卷調查，讓受訪者指定一款蛋糕與一款糖霜。他們會討論：瞭解蛋糕和糖霜偏好間的關係，可怎樣幫助他們更能決定建議哪種組合。然後，學生會學習交叉表，讓他們可用圖表展示不同偏好間的關係。他們會運用這項技巧找出偏好問卷調查中的關係，然後一起思考這項流程有助解決哪些不同類型的問題。
              description_teacher: 課堂開始時，學生首先會瞭解一份蛋糕偏好問卷調查，讓受訪者指定一款蛋糕與一款糖霜。他們會討論：瞭解蛋糕和糖霜偏好間的關係，可怎樣幫助他們更能決定建議哪種組合。然後，學生會學習交叉表，讓他們可用圖表展示不同偏好間的關係。他們會運用這項技巧找出偏好問卷調查中的關係，然後一起思考這項流程有助解決哪些不同類型的問題。
            Automating Data Decisions:
              key: 自動化數據決策
              name: 自動化數據決策
              description_student: 在本課堂中，學生會看看簡單範例，瞭解電腦可怎樣用來完成資料問題解決流程的決策步驗驟。學生需要完成的任務是：建立可建議度假地點的演算法。然後，學生會訂立規則或演算法，讓電腦可用來自動做決定。學生會分享各自的規則，以及他們的規則會以類別資料做出哪些選擇。然後，學生會使用自己的規則與同學的資料，測試他們的規則所做的決定是否與人類相同。本課堂結束時，會討論使用電腦把問題解決流程自動化有哪些優點和缺點。
              description_teacher: 在本課堂中，學生會看看簡單範例，瞭解電腦可怎樣用來完成資料問題解決流程的決策步驗驟。學生需要完成的任務是：建立可建議度假地點的演算法。然後，學生會訂立規則或演算法，讓電腦可用來自動做決定。學生會分享各自的規則，以及他們的規則會以類別資料做出哪些選擇。然後，學生會使用自己的規則與同學的資料，測試他們的規則所做的決定是否與人類相同。本課堂結束時，會討論使用電腦把問題解決流程自動化有哪些優點和缺點。
            Post-Project Test:
              key: 專案後測驗
              name: 專案後測驗
            CS Discoveries Post Course survey:
              key: 電腦科學探索課後問卷調查
              name: 電腦科學探索課後問卷調查
          lesson_groups:
            csd5_1:
              display_name: 第 1 章：表達信息
            csd5_2:
              display_name: 第 2 章：解決數據問題
            cspSurvey:
              display_name: 問卷
          student_description: 單元 5 用於說明資料在解決問題中有多重要，並強調電腦在此流程中如何提供協助。第 1 章旨在探索有哪些不同系統用來表示電腦中的資訊，以及使用這些系統會有哪些挑戰與限制。在第 2 章中，你會學習收集到的資料如何用來解決問題，以及電腦怎樣協助把這個流程自動化。在第 2 章的末尾處會做出總結，思考資料問題解決流程可怎樣應用於你選擇的範疇。
        testtess:
          lessons:
            lesson-2:
              name: 新課程 1
        contagion-pilot:
          description_audience: 年級 5
          description_short: '使用精靈圖實驗室進行病毒爆發模擬程式設計。 '
          description: '使用精靈圖實驗室進行病毒爆發模擬程式設計。 '
          student_description: '使用精靈圖實驗室進行病毒爆發模擬程式設計。 '
        csa1-pilot:
          lessons:
            lesson-20:
              name: 評估日
            lesson-24:
              name: Java 實驗室
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        csa2-pilot:
          lessons:
            lesson-15:
              name: 評估日
            lesson-1:
              name: 第2單元領航問卷
            lesson-16:
              name: Java 實驗室
          lesson_groups:
            lesson group:
              display_name: 內容
            lessonGroup-4:
              display_name: 沙盒
        csa3-pilot:
          lessons:
            lesson-15:
              name: 評估日
            lesson-16:
              name: 第3單元領航問卷
            lesson-17:
              name: Java 實驗室
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        csa4-pilot:
          lessons:
            lesson-7:
              description_student: 我們已經比較了兩個`int`或`double`相等，但是我們如何比較物件呢？兩個'String '相等意味著什麼？兩個甜甜圈呢？你將在Pop the Balloons遊戲中探索如何測試兩個對象的相等，並實施你的探索。
              description_teacher: 學生區分對象和原始值的比較。學生探索對對象使用`==`或`!=`來確定是否需要'equals()'方法來比較對象數據。通過使用'equals()'方法，學生添加到Pop the Balloons遊戲中以比較`Balloon`對象，並確定是否還有有效的移動。
            lesson-8:
              description_student: 你檢查'if/else'語句以根據布林運算式的結果實現替代操作。你練習在'Math.random()'中使用'if/else'語句來訪問The Neighborhood中陣列的隨機元素。在Pop the Balloons遊戲中，你使用`if/else`語句檢查玩家移動的有效性。
              description_teacher: 學生檢查'if/else'語句以根據布林運算式的結果實現替代操作。學生練習在'Math.random()'中使用'if/else'語句來訪問The Neighborhood中陣列的隨機元素。在Pop the Balloons遊戲中，學生使用`if/else`語句檢查玩家移動的有效性。
            lesson-9:
              description_student: 有時我們需要檢查多個條件來確定正確的結果。在The Neighborhood中，你將學習使用“if/else-if/else”語句來解決“Painter”的問題。然後你在Pop the Balloons遊戲中執行“if/else-if/else”語句，以檢查遊戲狀態並決定玩家是否獲勝。
              description_teacher: 學生使用“if/else-if/else”語句來評估多個條件，以選擇一個特定的期望結果。為了檢查遊戲的狀態並確定玩家是否獲勝，學生使用多重選擇語句來檢查遊戲的條件，並選擇合適的結果。
            lesson-10:
              description_student: 你將探索涉及多個條件的問題，並學習在解決方案中使用嵌套“if”語句。在條件陳述式中使用新的邏輯運算子編寫運算式，並確定這些運算子對結果的影響。然後，你可以使用嵌套“if”語句和邏輯運算子改進Pop the Balloons遊戲的玩法和功能。
              description_teacher: 學生探索涉及多個條件的問題，並編寫嵌套“if”語句來開發解決方案。學生在條件陳述式中使用邏輯運算子編寫運算式，並識別邏輯運算子對結果的影響。然後在Pop the Balloons遊戲中實現嵌套“if”語句和邏輯運算子，以改善遊戲玩法和整體功能。
            lesson-15:
              name: 評估日
            lesson-16:
              name: Java 實驗室
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-4:
              display_name: 沙盒
        csa5-pilot:
          lessons:
            lesson-15:
              name: 評估日
            Java Lab:
              name: Java 實驗室
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-4:
              display_name: 沙盒
        csa6-pilot:
          lessons:
            Java Lab:
              name: Java 實驗室
            lesson-1:
              description_student: 你在整個課程中所開發的專案已為社群帶來諸多創意！《四鄰燈光節》即將到來，鄰居們將展示創意故事、劇本、歌詞、文字和詩歌。《四鄰燈光節》是一個大型專案，你將在整個單元中參與其中，專案管理戰略板將説明你組織和構建你的創作。你將探索編寫和構建代碼的策略，供其他軟體工程師輕鬆理解和使用Java工具來創建程式文檔。
              description_teacher: 向學生們介紹《四鄰燈光節》專案，並評估要求和示例，明確其中的問題和關鍵特徵。在著手專案之前，學生們透過確定最佳實踐和探索如何使用Javadoc生成程式文檔，來擴展他們對程式結構和注釋的理解。
            lesson-2:
              description_student: 你將構建`Integer`和`Double`物件來將`int`和`double`原始值表示為參考值。使用`Integer`和`Double`類中的方法，你可以返回這些物件存儲為原始值的值。 在規劃《四鄰燈光節》所需的籌備任務前，你還將探索整數的最小和最大值，以避免溢出錯誤。
              description_teacher: 學生們將構建`Integer`和`Double`對象來將`int`和`double`原始值表示為參考值。使用`Integer`和`Double`類中的方法，學生們可以返回這些物件存儲為原始值的值。 在規劃《四鄰燈光節》所需的籌備任務前，學生們還將探索整數的最小和最大值，以避免溢出錯誤。
            lesson-3:
              description_student: 在處理陣列和清單時，我們有時會遇到元素數量未知或清單大小不斷變化的問題。在本節課中，你將學習`ArrayList`結構，並明確這種資料結構較適宜的場景。
              description_teacher: 學生們將創建`ArrayList`來存儲`int`和`double`值。學生們區分`ArrayList`和一維陣列，以確定某個特定場景下最適宜的資料結構。 學生們將向`ArrayList`中添加元素，並在處理存儲的資料時，學習如何在原始值和包裝類之間進行自動裝箱轉換。
            lesson-4:
              description_student: 你將使用`ArrayList`方法`get()`和`set()`，來檢索和修改元素，並學習`String`方法`length()`，來計算`String`物件中的字元數。你將應用在一維和二維陣列中所開發出的標準演算法來修改`ArrayList`中的元素。你將在處理存儲在`ArrayList`中的資料時，學習如何在原始值和包裝類之間執行拆箱轉換。
              description_teacher: 學生們將使用`ArrayList`方法`get()`和`set()`，來檢索和修改元素，並學習`String`方法`length()`，來返回`String`物件中的字元數。他們將應用在一維和二維陣列中所開發出的標準演算法來修改`ArrayList`中的元素。學生們將在處理存儲在`ArrayList`中的資料時，學習如何在原始值和包裝類之間執行拆箱轉換。
            lesson-5:
              description_student: 到目前為止，你已經創建了`ArrayList`來存儲`Integer`、`Double`和`String`。與一維和二維陣列一樣，你也可以將創建的物件存儲在`ArrayList`中。在本節課中，你將創建一個物件的`ArrayList`，以應用你在全年中所使用的標準演算法來處理存儲在此清單中的資料。
              description_teacher: 學生將創建`ArrayList`來存儲物件，並學習Java中的通用類型。學生們將一維陣列中所學到的演算法應用於`ArrayList`，以查找最小值和最大值、計算總和及平均值，或找出滿足特定條件的元素。
            lesson-6:
              description_student: 你將探索`ArrayList`類中的`remove()`方法的功能，並在遍歷該列表的過程中，在嘗試刪除專案時識別出潛在的錯誤。在此過程中，你會認識到`ArrayList`在哪種情況下最適合某個場景或問題。
              description_teacher: 學生們將探索`ArrayList`類中的`remove()`方法的功能，並在遍歷該列表的過程中，在嘗試刪除專案時識別出潛在的錯誤。學生們會認識到`ArrayList`在哪種情況下最適合某個場景或問題。
            lesson-7:
              description_student: 你將探索`String`結構，了解`String`屬於物件。你將使用`indexOf()`和`substring()`方法來搜索`String`中的子字串，並從當前`String`中創建新的`String`物件。
              description_teacher: 學生們將探索`String`結構，了解`String`屬於物件。學生們將使用`indexOf()`和`substring()`方法來搜索`String`中的子字串，並從當前`String`中創建新的`String`物件。
            lesson-8:
              description_student: 你將探索如何使用`compareTo()`，來檢查`String`是否按字母順序排列。然後，你將啟動《四鄰燈光節》專案，特別留意專案規劃板上的任務。
              description_teacher: 學生們將探索如何使用`compareTo()`，來檢查`String`是否按字母順序排列。然後，學生們將啟動《四鄰燈光節》專案，特別留意專案規劃板上的任務。
            lesson-9:
              description_student: 你將綜合標準演算法和`String`的知識，來檢查`String`是否是回文串。然後，你將參加同行評議會話，並反思《四鄰燈光節》項目的進展。
              description_teacher: 學生們將綜合標準演算法和`String`的知識，來檢查`String`是否是回文串。然後，學生們將參加同行評議會話，並反思各自《四鄰燈光節》項目的進展。
            lesson-10:
              description_student: 你將在一維陣列和二維陣列中所編寫的標準演算法應用於`ArrayList`。你將應用新的標準演算法，從整數中獲取單個數位，然後修改和應用之前的演算法，以交換元素、刪除重複項，或在《四鄰燈光節》專案中查找符合特定條件的元素。
              description_teacher: 學生們將在一維陣列和二維陣列中所編寫的標準演算法應用於`ArrayList`。學生們將應用新的標準演算法，從整數中獲取單個數位，然後修改和應用之前的演算法，以交換元素、刪除重複項，或在《四鄰燈光節》專案中查找符合特定條件的元素。
            lesson-11:
              name: "《四鄰燈光節》項目 - 第1天"
              description_student: 你將繼續開發自己的《四鄰燈光節》專案，參照最喜歡的作家或藝術家的作品鑒賞來創作故事、詩歌、歌曲或其他形式的文學作品。首先你將自我測評自己的作品，按照專案完成要求評估進度情況，然後針對專案中的某個功能編寫驗收標準，供同行測試。你借助自我評估和同行評議的形式，確定剩餘任務的優先順序，並繼續開發自己的專案。
              description_teacher: 學生們將繼續開發自己的《四鄰燈光節》專案，參照最喜歡的作家或藝術家的作品鑒賞來創作故事、詩歌、歌曲或其他形式的文學作品。首先學生們將自我測評自己的作品，按照專案完成要求評估進度情況，然後針對專案中的某個功能編寫驗收標準，供同行測試。學生們借助自我評估和同行評議的形式，確定剩餘任務的優先順序，並繼續開發自己的專案。
            lesson-12:
              name: "《四鄰燈光節》項目 - 第2天"
              description_student: 在上一課中，你已經完成了自我測評，並為自己的項目編寫了驗收標準。在本節課中，你將獲得同行評議，以確定待完成的剩餘任務並繼續開發自己的《四鄰燈光節》專案。
              description_teacher: 在上一課中，學生們已經完成了自我測評，並為自己的項目編寫了驗收標準。在本節課中，學生們將獲得同行評議，以確定待完成的剩餘任務並繼續開發自己的《四鄰燈光節》專案。
            lesson-13:
              name: "《四鄰燈光節》項目 - 第3天"
              description_student: 你根據代碼審查和專案規劃板，完成最終的修改和更新任務。你將與同行分享各自的《四鄰燈光節》項目。隨後，你將慶祝自己大功告成，並對自己的開發進度作出最後的反思。
              description_teacher: 學生們根據代碼審查和專案規劃板，完成最終的修改和更新任務。學生們將與同行分享各自的《四鄰燈光節》項目。隨後，學生們將慶祝自己大功告成，並對自己的開發進度作出最後的反思。
            lesson-15:
              name: 評估日
              description_student: 在本單元中，你將使用`ArrayList`來存儲程式資料，並區分何時使用一維陣列、二維陣列及`ArrayList`。你將使用`ArrayList`來解決涉及數值和物件資料的問題，借此探索該資料結構的優勢和功能。你將使用`String`類中的方法來分析和處理來自使用者和檔輸入中的文本。在整個單元中，你將使用單行注釋、多行注釋和Javadoc注釋編寫程式文檔，以創建API文檔。在此過程中，你將確定並記錄物件和方法的前置條件和後置條件。此外，你將接受多選題測驗，來評估本單元學習目標和技能的掌握情況。
              description_teacher: 在本單元中，學生們將使用`ArrayList`來存儲程式資料，並區分何時使用一維陣列、二維陣列及`ArrayList`。學生們將使用`ArrayList`來解決涉及數值和物件資料的問題，借此探索該資料結構的優勢和功能。學生們將使用`String`類中的方法來分析和處理來自使用者和檔輸入中的文本。在整個單元中，學生們將使用單行注釋、多行注釋和Javadoc注釋編寫程式文檔，以創建API文檔。在此過程中，學生們將確定並記錄物件和方法的前置條件和後置條件。此外，學生們將接受多選題測驗，來評估本單元學習目標和技能的掌握情況。
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        csa7-pilot:
          lessons:
            Java Lab:
              name: Java 實驗室
            lesson-5:
              name: 評估日
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        csa8-pilot:
          lessons:
            Java Lab:
              name: Java 實驗室
            lesson-15:
              name: 評估日
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        k5-onlinepd-2021:
          lessons:
            Welcome to "Teaching Computer Science Fundamentals":
              key: 歡迎來到「教授計算機科學基礎」
            Understanding the Computer Science Fundamentals Courses:
              key: 瞭解計算機科學基礎課程
            Sequencing:
              key: 序列
              name: 序列
            Loops:
              key: 迴圈
              name: 迴圈
            Events:
              key: 事件
              name: 事件
            Conditionals:
              key: 條件判斷（Conditionals）
              name: 條件判斷（Conditionals）
            End of Course projects:
              key: 課程結束專案
              name: 課程結束專案
            Functions:
              key: 函式
              name: 函式
            Variables:
              key: 變數
              name: 變數
            For Loops:
              key: 計次迴圈（For Loops）
              name: 計次迴圈（For Loops）
            Sprite Lab:
              key: Sprite Lab
            Reviewing your reflections:
              key: 檢閱你的反思
              name: 檢閱你的反思
            Next steps:
              key: 下一步
            Module 1:
              name: 模組 1
            Getting Started:
              name: 新手上路
          lesson_groups:
            k5_getting_started_1:
              display_name: 介紹
            k5_diving_deeper_1:
              display_name: 深造：課程 E 和 F
            Introduction:
              display_name: 介紹
        haikubot-pilot:
          lesson_groups:
            Lesson 3:
              display_name: 第 3 課
            Lesson 4:
              display_name: 第 4 課
            Lesson 5:
              display_name: 第 5 課
        pl-playground:
          lessons:
            lesson-9:
              name: 入門課程 1
        outbreakmodule:
          lessons:
            intro monster town:
              name: 歡迎來到怪物城鎮
          lesson_groups:
            Outbreak Module:
              display_name: 疫情爆發模組
          name: 疫情爆發模組
          title: 疫情爆發模組\_V2
        csp-post-survey-2020:
          lessons:
            CSP post-course survey:
              name: CSP 課後問卷調查
          lesson_groups:
            cspSurvey2020:
              display_name: 問卷
          description_audience: CSP 學生
          description_short: CSP 學生課後問卷調查
          description: 歡迎來到 Code.org 電腦科學原理課後問卷調查。本問卷調查需要大約 15 分鐘完成。你的回覆將會保持私密與匿名 -- 你的老師可看見全班的匿名匯總結果。這些結果對你的老師與 Code.org 都非常重要，目的是維持和改善課程的品質。感謝你的寶貴時間與關注。
          student_description: 歡迎來到 Code.org 電腦科學原理課後問卷調查。本問卷調查需要大約 15 分鐘完成。你的回覆將會保持私密與匿名 -- 你的老師可看見全班的匿名匯總結果。這些結果對你的老師與 Code.org 都非常重要，目的是維持和改善課程的品質。感謝你的寶貴時間與關注。
        aiml-2021:
          lessons:
            lesson9:
              description_teacher: |-
                在本課中，學生參與一個線下活動，模擬僵屍疫情爆發。學生必須利用鄰近城鎮的數據來預測城鎮的哪一部分擁有最少的僵屍。學生們將使用相似度和平均值來預測某一特定地點的僵屍數量。然後，學生得到拯救，並將他們的預測與實際數字進行比較，以討論數字數據與分類數據的準確性有何不同。

                **今日問題。**電腦如何學習用數字資料進行預測？
            lesson-22:
              name: 設計數據收集
          lesson_groups:
            lessonGroup-4:
              display_name: 問卷
        csd7-2021:
          lessons:
            Similarity Models:
              description_teacher: |-
                在本課中，學生參與一個線下活動，模擬僵屍疫情爆發。學生必須利用鄰近城鎮的數據來預測城鎮的哪一部分擁有最少的僵屍。學生們將使用相似度和平均值來預測某一特定地點的僵屍數量。然後，學生得到拯救，並將他們的預測與實際數字進行比較，以討論數字數據與分類數據的準確性有何不同。

                **今日問題。**電腦如何學習用數字資料進行預測？
            Survey Planning:
              name: 設計數據收集
            CS Discoveries Post-Course Survey:
              name: 電腦科學探索課後問卷調查
          lesson_groups:
            lessonGroup-4:
              display_name: 問卷
        kodea-pd-2021:
          lessons:
            Getting Started:
              key: 新手上路
              name: 新手上路
            Computer Science Fundamentals:
              key: 計算機科學基礎
              name: 計算機科學基礎
            Looking Ahead:
              key: 展望未來
              name: 展望未來
            'Mastering the Basics: Sequencing':
              key: 掌握基本知識：序列（Sequencing）
              name: 掌握基本知識：序列（Sequencing）
            'Mastering the Basics: Loops':
              key: 掌握基本知識：迴圈（Loops）
              name: 掌握基本知識：迴圈（Loops）
            'Mastering the Basics: Conditionals':
              key: 掌握基本知識：條件判斷（Conditionals）
              name: 掌握基本知識：條件判斷（Conditionals）
            'Mastering the Basics: Functions':
              key: 掌握基本知識：函式（Functions）
              name: 掌握基本知識：函式（Functions）
            'Mastering the Basics: Events':
              key: 掌握基本知識：事件（Evnets）
              name: 掌握基本知識：事件（Evnets）
            Best Practices for Teaching Computer Science:
              key: 教授計算機科學的最佳實踐
              name: 教授計算機科學的最佳實踐
            Planning:
              key: 計畫
              name: 計畫
            Next Steps:
              key: 下一步
              name: 下一步
        vpl-csd-2021:
          lessons:
            Module 1:
              key: 模組 1
              name: 模組 1
            Module 2:
              key: 模組 2
              name: 模組 2
            Module 3:
              key: 模組 3
              name: 模組 3
            Module 4:
              key: 模組 4
              name: 模組 4
            Module 5:
              key: 模組 5
              name: 模組 5
            Module 6:
              key: 模組 6
              name: 模組 6
            Module 7:
              key: 模組 7
              name: 模組 7
            Module 8:
              key: 模組 8
              name: 模組 8
          lesson_groups:
            CSD_Module 1:
              display_name: 模組 1
            CSD_Module 2:
              display_name: 模組 2
            CSD_Module 3:
              display_name: 模組 3
            CSD_Module 4:
              display_name: 模組 4
            CSD_Module 5:
              display_name: 模組 5
            CSD_Module 6:
              display_name: 模組 6
            CSD_Module 7:
              display_name: 模組 7
            CSD_Module 8:
              display_name: 模組 8
        vpl-csp-2021:
          lessons:
            Module 1:
              key: 模組 1
              name: 模組 1
            Module 2:
              key: 模組 2
              name: 模組 2
            Module 3:
              key: 模組 3
              name: 模組 3
            Module 4:
              key: 模組 4
              name: 模組 4
            Module 5:
              key: 模組 5
            Module 6:
              key: 模組 6
            Module 7:
              key: 模組 7
            Module 8:
              key: 模組 8
        self-paced-pl-csd1-2021:
          lessons:
            lesson-4:
              name: 歡迎
          lesson_groups:
            lessonGroup-2:
              display_name: 歡迎
        self-paced-pl-csd2-2021:
          lessons:
            lesson-9:
              name: 教師社群
        self-paced-pl-csd5-2021:
          lessons:
            lesson-2:
              name: Web 開發
            lesson-3:
              name: 互動式動畫和遊戲
            lesson-4:
              name: 設計流程
            lesson-5:
              name: 資料與社會
            lesson-6:
              name: 實體運算
        self-paced-pl-csd6-2021:
          lessons:
            lesson-4:
              name: 資料與社會
            lesson-6:
              name: 資料與社會
        outbreak-module:
          name: 疫情爆發-模組
          title: 疫情爆發
        csa1-exemplars:
          lessons:
            lesson-20:
              name: 評估日
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        csa2-exemplars:
          lessons:
            lesson-15:
              name: 評估日
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        csa-videos:
          lesson_groups:
            lessonGroup-3:
              display_name: 資源
            lessonGroup-2:
              display_name: 單元 1
            lessonGroup-4:
              display_name: 單元 2
            lessonGroup-5:
              display_name: 單元 3
            lessonGroup-6:
              display_name: 單元 4
            lessonGroup-7:
              display_name: 單元 5
        csa3-exemplars:
          lessons:
            lesson-15:
              name: 評估日
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        ai-lab:
          lessons:
            lesson-3:
              name: 測試
        dlp21-csp-mod4:
          lesson_groups:
            lessonGroup-2:
              display_name: 階段 1
            lessonGroup-3:
              display_name: 階段 2
        dlp21-csp-mod1:
          title: 電腦科學原理深入學習 模組 1
        dlp21-csd:
          lesson_groups:
            lessonGroup-2:
              display_name: 模組 1
              description: 測試
            lessonGroup-3:
              display_name: 模組 2
            lessonGroup-4:
              display_name: 模組 3
            lessonGroup-5:
              display_name: 模組 4
        dlp21-csd-overview:
          lessons:
            lesson-1:
              name: 概覽
        dlp21-csp-overview:
          lessons:
            lesson-1:
              name: 概覽
        csa-u6-dev:
          lessons:
            lesson-12:
              name: 工具
            lesson-17:
              name: 主控台
            lesson-18:
              name: 視窗元件
          lesson_groups:
            lessonGroup-2:
              display_name: 階段
            lessonGroup-3:
              display_name: 專案
            lessonGroup-4:
              display_name: 演示和資源
        hello-world-draft:
          lessons:
            lesson-1:
              name: 你好，世界！
          title: 你好，世界！
        csa-self-paced-pl:
          lessons:
            Navigating the Codeorg learning platform:
              description_teacher: |-
                **你將學習如何：**

                -   流覽Code.org網站和教師工具。

                **建議時間：** 30分鐘
            Navigating lesson plans and resources:
              description_teacher: |-
                **你將學習如何：**

                -   定位和使用課程教學計劃和教師資源。

                **建議時間：** 30分鐘
            Navigating support:
              description_teacher: |-
                **你將學習如何：**

                -   在電腦科學發現教學時獲取支援。

                **建議時間：** 15分鐘
            lesson-4:
              key: 第4課
              description_teacher: |-
                **你將學習如何：**

                -   流覽Code.org網站和教師工具。

                **建議時間：** 30分鐘
            lesson-3:
              key: 第3課
              description_teacher: |-
                **你將學習如何：**

                -   定位和使用課程教學計畫和教師資源。

                **建議時間：** 25分鐘
            lesson-8:
              key: 第8課
              description_teacher: |-
                **你將學習如何：**

                -   在電腦科學發現教學時獲取支援。

                **建議時間：** 15分鐘
          title: CSA領航教師Code.org導航
          description: "本模組旨在引導你瞭解在教授CSA時用於支持學生學習的工具。 \n\n\\*你將學習如何：\\*\\*\n\n-   流覽Code.org網站和教師工具。\n-   定位和使用課程教案和教師資源。 \n\n**建議時間：** 1小時"
          name: csa-self-paced-pl
        csa1-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評估日
            lesson-1:
              key: 第1課
              name: Java 實驗室
            lesson-2:
              key: 第2課
            lesson-3:
              key: 第3課
            lesson-4:
              key: 第4課
            lesson-5:
              key: 第5課
            lesson-6:
              key: 第6課
            lesson-7:
              key: 第7課
            lesson-8:
              key: 第8課
            lesson-9:
              key: 第9課
            lesson-10:
              key: 第10課
            lesson-11:
              key: 第11課
            lesson-12:
              key: 第12課
            lesson-13:
              key: 第13課
            lesson-14:
              key: 第14課
            lesson-15:
              key: 第15課
            lesson-16:
              key: 第16課
            lesson-17:
              key: 第17課
            lesson-18:
              key: 第18課
            lesson-19:
              key: 第19課
            lesson-20:
              key: 第20課
              name: 評估日
            lesson-21:
              key: 第21課
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
          name: csa1-pilot-facilitator
        csa2-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評估日
            Unit 2 Pilot Survey:
              name: 第2單元領航問卷
            lesson-2:
              key: 第2課
            lesson-3:
              key: 第3課
            lesson-4:
              key: 第4課
            lesson-5:
              key: 第5課
            lesson-6:
              key: 第6課
            lesson-7:
              key: 第7課
            lesson-8:
              key: 第8課
            lesson-9:
              key: 第9課
            lesson-10:
              key: 第10課
            lesson-11:
              key: 第11課
            lesson-12:
              key: 第12課
            lesson-13:
              key: 第13課
            lesson-14:
              key: 第14課
            lesson-15:
              key: 第15課
              name: 評估日
            lesson-1:
              key: 第1課
              name: Java 實驗室
          lesson_groups:
            lesson group:
              display_name: 內容
            lessonGroup-4:
              display_name: 沙盒
          name: csa2-pilot-facilitator
        csa3-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評估日
            Unit 3 Pilot Survey:
              name: 第3單元領航問卷
            lesson-1:
              key: 第1課
              name: Java 實驗室
            lesson-2:
              key: 第2課
            lesson-3:
              key: 第3課
            lesson-4:
              key: 第4課
              description_student: 你還記得“while”迴圈嗎？在這節課中，你將研究“while”迴圈的邊緣情況，並在“while”和“for”迴圈之間建立聯繫。你可以使用“矩形”類為你的音樂創建視覺效果。
              description_teacher: 學生複習“while”迴圈並學習無限迴圈。在“while”和“for”迴圈之間轉換之前，學生探索如何創建視覺效果。學生使用“矩形”類創建自己的音樂視覺效果。
            lesson-5:
              key: 第5課
              description_student: 你將探索名為多態性的對象導向原則的功能和優點，該原則用於創建和遍歷“Animal”對象陣列。在回顧繼承之後，你將發現每個子類如何擁有自己的行為版本。你可以使用一個“Animal”對象陣列在The Theater中為你的音樂會創建一個新場景，並使用每個“Animal”版本的“speak()”方法。
            lesson-6:
              key: 第6課
            lesson-7:
              key: 第7課
            lesson-8:
              key: 第8課
            lesson-9:
              key: 第9課
            lesson-10:
              key: 第10課
            lesson-11:
              key: 第11課
            lesson-12:
              key: 第12課
              description_teacher: 在之前的課程中，學生編寫了一個再混合演算法，並將其與他們在早期課程中開發的演算法相結合。學生使用靜態變數和常量來限制音樂會的長度。他們使用“Shape”陣列為音樂會添加視覺效果，然後在開發程式時參與代碼評審並使用回饋。
            lesson-13:
              key: 第13課
            lesson-14:
              key: 第14課
            lesson-15:
              key: 第15課
              name: 評估日
            lesson-16:
              key: 第16課
              name: 第3單元領航問卷
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
          name: csa3-pilot-facilitator
        csa4-pilot-facilitator:
          lessons:
            Comparing Object References and Data:
              description_student: 我們已經比較了兩個`int`或`double`相等，但是我們如何比較物件呢？兩個'String '相等意味著什麼？兩個甜甜圈呢？你將在Pop the Balloons遊戲中探索如何測試兩個對象的相等，並實施你的探索。
              description_teacher: 學生區分對象和原始值的比較。學生探索對對象使用`==`或`!=`來確定是否需要'equals()'方法來比較對象數據。通過使用'equals()'方法，學生添加到Pop the Balloons遊戲中以比較`Balloon`對象，並確定是否還有有效的移動。
            Providing an Alternate Path of Execution:
              description_student: 你檢查'if/else'語句以根據布林運算式的結果實現替代操作。你練習在'Math.random()'中使用'if/else'語句來訪問The Neighborhood中陣列的隨機元素。在Pop the Balloons遊戲中，你使用`if/else`語句檢查玩家移動的有效性。
              description_teacher: 學生檢查'if/else'語句以根據布林運算式的結果實現替代操作。學生練習在'Math.random()'中使用'if/else'語句來訪問The Neighborhood中陣列的隨機元素。在Pop the Balloons遊戲中，學生使用`if/else`語句檢查玩家移動的有效性。
            Testing Multiple Conditions:
              description_student: 有時我們需要檢查多個條件來確定正確的結果。在The Neighborhood中，你將學習使用“if/else-if/else”語句來解決“Painter”的問題。然後你在Pop the Balloons遊戲中執行“if/else-if/else”語句，以檢查遊戲狀態並決定玩家是否獲勝。
              description_teacher: 學生使用“if/else-if/else”語句來評估多個條件，以選擇一個特定的期望結果。為了檢查遊戲的狀態並確定玩家是否獲勝，學生使用多重選擇語句來檢查遊戲的條件，並選擇合適的結果。
            Using Logical Operators:
              description_student: 你將探索涉及多個條件的問題，並學習在解決方案中使用嵌套“if”語句。在條件陳述式中使用新的邏輯運算子編寫運算式，並確定這些運算子對結果的影響。然後，你可以使用嵌套“if”語句和邏輯運算子改進Pop the Balloons遊戲的玩法和功能。
              description_teacher: 學生探索涉及多個條件的問題，並編寫嵌套“if”語句來開發解決方案。學生在條件陳述式中使用邏輯運算子編寫運算式，並識別邏輯運算子對結果的影響。然後在Pop the Balloons遊戲中實現嵌套“if”語句和邏輯運算子，以改善遊戲玩法和整體功能。
            Assessment Day:
              name: 評估日
            lesson-1:
              key: 第1課
              name: Java 實驗室
            lesson-3:
              key: 第3課
            lesson-4:
              key: 第4課
            lesson-5:
              key: 第5課
            lesson-6:
              key: 第6課
            lesson-7:
              key: 第7課
            lesson-8:
              key: 第8課
            lesson-9:
              key: 第9課
            lesson-10:
              key: 第10課
            lesson-11:
              key: 第11課
            lesson-2:
              key: 第2課
            lesson-12:
              key: 第12課
            lesson-13:
              key: 第13課
            lesson-14:
              key: 第14課
            lesson-15:
              key: 第15課
              name: 評估日
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-4:
              display_name: 沙盒
          name: csa4-pilot-facilitator
        csa5-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評估日
            lesson-1:
              key: 第1課
            lesson-2:
              key: 第2課
            lesson-3:
              key: 第3課
            lesson-4:
              key: 第4課
            lesson-5:
              key: 第5課
            lesson-6:
              key: 第6課
            lesson-7:
              key: 第7課
            lesson-8:
              key: 第8課
            lesson-9:
              key: 第9課
            lesson-10:
              key: 第10課
            lesson-11:
              key: 第11課
            lesson-12:
              key: 第12課
            lesson-13:
              key: 第13課
            lesson-14:
              key: 第14課
            lesson-15:
              key: 第15課
              name: 評估日
            Java Lab:
              name: Java 實驗室
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-4:
              display_name: 沙盒
          name: csa5-pilot-facilitator
        poetry-hoc:
          lessons:
            lesson-1:
              name: 情緒和態度
          name: poetry-hoc
          title: Poetry HoC
          description_short: '一小時玩程式活動 - V2 '
        csdu6-playground:
          lessons:
            lesson-1:
              name: 範本
            lesson-2:
              name: 運算上的創新
            lesson-3:
              name: 面板輸出（LED蜂鳴器）
              description_teacher: |-
                -   使用電路遊戲台上的蜂鳴器
                -   使用電路遊戲台上的LED
                -   沒有變數；沒有if語句；沒有螢幕元素
            lesson-4:
              name: 應用實驗室輸出（setProperty）
              description_teacher: "-   使用setProperty()改變螢幕上的元素\n    -   使用亂數聚焦顏色和x/y位置\n-   使用setText()來更改螢幕上的文本 \n-   沒有電路遊戲台；沒有if語句；沒有變數"
            lesson-5:
              name: 感測器
            lesson-6:
              name: 面板輸入（按鈕切換）
              description_teacher: |-
                -   使用按鈕來改變螢幕上的元素
                -   使用切換開關來改變螢幕上的元素
                -   在電路遊戲台上使用按鈕並用蜂鳴器切換
                -   沒有if語句；沒有變數；好的螢幕輸出
            lesson-7:
              name: 變數 + If語句
              description_teacher: |-
                -   使用變數+計數器模式來更新螢幕上的元素
                -   示例：對按鈕按下的次數計數
                -   使用if語句檢查切換開關的位置
                -   使用變數檢查變數的值
                -   例如：點擊一定次數後播放蜂鳴器
            lesson-8:
              name: 迷你項目：隨身APP
            lesson-9:
              name: 彩色顯示器
              description_teacher: |-
                -   使用螢幕事件來改變電路遊戲台的彩色LED
                -   使用on()、off()、pulse()、toggle()和blink() LED功能
                -   改變彩色LED的強度
                -   不是焦點：陣列。
                -   只需要從0開始計數的概念和位置映射的概念（即：[0]映射到CP上的特定LED；[5]映射到CP上的不同LED）
            lesson-10:
              name: 應用實驗室輸入（getProperty，getText）（下拉輸入滑塊？）
              description_teacher: |-
                僅在應用實驗室 - 沒有電路遊戲台（目前）。

                全部關於getProperty、變數和if語句

                -   從下拉清單中獲取屬性。If (X) -> do (Y)
                -   從滑塊中獲取屬性。用來更新螢幕上某物的位置？
                -   從輸入中獲取文本。用於更新標籤

                **關注新的getProperty()命令和如何在新的設計elts上使用它。為明天保存面板輸入/輸出！**

                在明天的課程中包含摩托車遊戲，你按下CP，螢幕上會有一些改變。
            lesson-11:
              name: 組合輸入
              description_teacher: |-
                -   使用下拉和滑塊來更新電路遊戲台的各個方面
                -   使用getProperty()和setProperty()讓CP輸入更新螢幕元素
                -   螢幕輸入 \<> 面板輸出是為第1通道末端的Maker專案做準備的

                **自我備註：這些級別應該使用彩色LED而不是常規LED。** 在原來的課程中，我們只能使用LED和蜂鳴器。但是現在，我們有了彩色LED，所以讓我們在這裡也使用它們
            lesson-12:
              name: 項目：Maker
            lesson-13:
              name: 加速計
            lesson-14:
              name: 音樂 + 陣列
            lesson-15:
              name: 迷你項目：感測器
            lesson-17:
              name: 物理輸出（LED）
            lesson-16:
              name: 物理輸入
            lesson-18:
              name: 原型設計
            lesson-19:
              name: 專案
            Circuits and Physical Prototypes:
              description_teacher: 為了準備這一章的期末專案，學生會學習怎樣開發包含 Circuit Playground 的實物原型。學生會使用範例專案計畫指南，學習怎樣編寫一些簡單電路和製作原型，從而可使用便宜且容易找到的材料（例如紙板與膠帶）展現出預期產品的設計。
          lesson_groups:
            lessonGroup-3:
              display_name: 範本
            lessonGroup-2:
              display_name: 第1章
            lessonGroup-4:
              display_name: 第2章
          name: csdu6-playground
          title: CSD單元6游戲台
          description_short: CSD單元6游戲台。有問題請參閲Dan Schneider
          student_description: CSD單元6游戲台。有問題請參閲Dan Schneider
        hello-world-food:
          lessons:
            lesson-1:
              name: 你好世界
          name: hello-world-food
        csa-u7-dev:
          lessons:
            lesson-2:
              name: 視窗元件
            lesson-3:
              name: 工具
          lesson_groups:
            lessonGroup-2:
              display_name: 階段
            lessonGroup-3:
              display_name: 專案
            lessonGroup-4:
              display_name: 演示和資源
        tesstest921:
          lessons:
            lesson-1:
              name: 測試CSA克隆
          name: tesstest921
        hello-world-animals:
          lessons:
            lesson-1:
              name: 你好世界
        hello-world-emoji:
          lessons:
            lesson-1:
              name: 你好世界
        hello-world-retro:
          lessons:
            lesson-1:
              name: 你好世界
        hello-world-batman:
          lessons:
            lesson-1:
              name: 你好世界
          title: 你好世界
        csa4-exemplars:
          lessons:
            lesson-15:
              name: 評估日
          lesson_groups:
            lesson group:
              display_name: 內容
            content:
              display_name: 內容
            lesson_group:
              display_name: 內容
            lessonGroup-2:
              display_name: 內容
        ai-ethics:
          lessons:
            lesson-1:
              description_student: 合作研究人工智慧倫理，並創建可共用的行為準則。
        dance-unplugged:
          lessons:
            lesson-1:
              description_student: '舉辦課堂舞會來學習事件。 '
        csc-things:
          lessons:
            lesson-1:
              name: 詩歌稿紙
          name: CSC事項
          title: CSC大腦轉儲
          description: '這些只是正在進行中的工作 :) '
        poetry-hoc2:
          lessons:
            lesson-1:
              name: Poetry HoC v2
          name: poetry-hoc2
          title: Poetry HoC v2
        poetry-hoc3:
          lessons:
            lesson-1:
              name: 情緒學習
          name: poetry-hoc3
          title: Poetry HoC v3
        spritelab-effects-challenge:
          lessons:
            lesson-1:
              name: 精靈圖效果挑戰
          name: 精靈圖效果挑戰
          title: 精靈圖效果挑戰
          description_audience: 精靈圖實驗室中級/高級用戶
          description_short: 接受挑戰，使用精靈圖實驗室創建自己的精靈圖效果！
        csa-u8-dev:
          lessons:
            lesson-1:
              name: 視窗元件
            lesson-2:
              name: 工具
          lesson_groups:
            lessonGroup-2:
              display_name: 演示和資源
          name: csa-u8-dev
          title: CSA單元8開發
        poem-art:
          lessons:
            lesson-1:
              name: 詩歌藝術
          name: 詩歌藝術
          title: 詩歌藝術
        poetry:
          lessons:
            lesson-1:
              name: 詩歌藝術
            lesson-2:
              name: 詩歌程式設計
            lesson-4:
              name: 構建一個詩歌生成器應用程式
            lesson-5:
              name: 仔細選擇詞語
          name: 詩歌
          title: 電腦科學與詩歌
        spelling-bee:
          lessons:
            lesson-1:
              name: 拼字蜜蜂
              description_student: '幫助蜜蜂拼寫新單詞！  '
              description_teacher: "本課以涉及拼寫和識別大寫字母的先前活動為基礎。與蜜蜂一起拼寫可以幫助幼稚園和一年級的學生練習跟隨和計數構成單詞的字母序列。他們使用一系列編碼命令讓拼字蜜蜂在一個字母網格中移動，以拼寫單詞。學生學習如何使用拖放編碼積木來移動字元，以及按正確順序排列命令的重要性，這樣他們才能拼寫一個單詞。\n\n#### 必備技能\n\n這節課的目的不是向學生介紹字母、字母組成單詞的順序或計數。學生進入本課程之前應該具備以下知識和技能\n\n-   識別字母表中的大寫字母。\n-   識別10以下的數位並用手指、物體或操縱器計數。\n-   認識到單詞是由一系列字母組成的。"
          name: 拼字比賽
          title: 拼字蜜蜂
        outbreak-csc:
          lessons:
            lesson-1:
              name: 疫情爆發第1天
            lesson-2:
              name: 疫情爆發第2天
          name: 疫情爆發CSC
          title: 疫情爆發
        explore-data-1:
          lessons:
            lesson-1:
              name: 探索箱形圖和長條圖
              description_student: '在應用實驗室的數據視覺化工具中創建橫條圖和柱狀圖。  '
              description_teacher: "本課建立在已經給學生介紹過的橫條圖和柱狀圖概念之上。學生將練習從圖表中得出結論，並學習使用應用實驗室中的數據視覺化工具來創建兩種不同類型的圖表：橫條圖和柱狀圖。該工具旨在快速將學生與現實世界的數據集連接起來，並使其可以輕鬆地從數據創建視覺化，而無需學習如何流覽更複雜的工具。學生還可以訪問幾個真實世界的數據集，他們可以使用這些數據集來創建圖表。\n\n這節課從快速回顧圖表為什麼對查看數據有用的原因開始。然後學生們在應用實驗室的數據視覺化工具中練習創建橫條圖。然後他們學習如何製作柱狀圖，以便在橫條圖可能沒用的情況下構建圖表。然後，學生們有機會探索不同的現實世界數據集，並瞭解製作圖表如何有助於交流相關的話題資訊。\n\n#### 必備技能和詞彙\n\n本課程旨在豐富或強化關於橫條圖和柱狀圖的現有課程。 它並不是為了向學生介紹新的核心內容。學生在上這節課之前應該具備以下知識和技能：\n\n-   知道如何閱讀橫條圖，理解x和y軸上的值代表什麼\n-   知道如何閱讀柱狀圖，理解值的範圍代表什麼"
          name: 探索數據1
          title: 探索箱形圖和長條圖
        counting-csc:
          lessons:
            lesson-1:
              name: 與Laurel一起計算
              description_student: 幫助尋寶獵人Laurel計數和加總步數以收集寶石！
              description_teacher: "本課建立在涉及計數和加法的先前活動之上。與Laurel一起計數支援幼稚園和一年級的學生，在他們使用迴圈幫助尋寶獵人在迷宮網格中收集寶石時，練習計數和相加。他們使用一系列編碼命令引導Laurel穿過網格去收集寶石，利用要求他們計算Laurel需要走多少步的“Repeat”積木，然後在代碼積木中使用正確的數來表示這個數字。\n\n#### 必備技能\n\n這節課並不是要向學生介紹數字、計數或加法。學生在上這節課之前應該具備以下知識和技能：\n\n-   識別10以下的數位並用圖像、手指或操縱器計數。\n-   將對象、圖像、手指或操縱器相加，總和最多為10。"
          name: 計算CSC
          title: 與Laurel一起計算
        csa5-exemplars:
          lessons:
            lesson-14:
              name: 評估日
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
          name: csa5-exemplars
          title: 第5單元 - 給予對象組織[Exemplars]
        csd-post-survey-2021:
          lessons:
            lesson-1:
              name: 課後調查
          name: csd-post-survey-2021
          title: 電腦科學探索課後問卷調查
          description: 本單元包含《電腦科學探索》課後調查問卷。本單元可在學生們完成《電腦科學探索》最後一個單元後進行分配。
          student_description: 本單元包含一個調查問卷，待完成《電腦科學探索》所有單元後進行填寫。教師將告訴你何時填寫該調查問卷。
        csa-pl-test:
          lessons:
            lesson-1:
              name: 模組 1 - 入門課程
          name: csa-pl-test
        csa-pl-module-1-test:
          name: csa-pl-module-1-test
          title: Code.org和CSA介紹
        csa-pl-module-2-test:
          name: csa-pl-module-2-test
          title: Code.org工具導航
        csa-pl-module-3-test:
          name: csa-pl-module-3-test
          title: 基於文本的程式設計支援
        csa6-pilot-facilitator:
          lessons:
            Documenting Program Code:
              description_student: 你在整個課程中所開發的專案已為社群帶來諸多創意！《四鄰燈光節》即將到來，鄰居們將展示創意故事、劇本、歌詞、文字和詩歌。《四鄰燈光節》是一個大型專案，你將在整個單元中參與其中，專案管理戰略板將説明你組織和構建你的創作。你將探索編寫和構建代碼的策略，供其他軟體工程師輕鬆理解和使用Java工具來創建程式文檔。
              description_teacher: 向學生們介紹《四鄰燈光節》專案，並評估要求和示例，明確其中的問題和關鍵特徵。在著手專案之前，學生們透過確定最佳實踐和探索如何使用Javadoc生成程式文檔，來擴展他們對程式結構和注釋的理解。
            Exploring Integer and Double Objects:
              description_student: 你將構建`Integer`和`Double`物件來將`int`和`double`原始值表示為參考值。使用`Integer`和`Double`類中的方法，你可以返回這些物件存儲為原始值的值。 在規劃《四鄰燈光節》所需的籌備任務前，你還將探索整數的最小和最大值，以避免溢出錯誤。
              description_teacher: 學生們將構建`Integer`和`Double`對象來將`int`和`double`原始值表示為參考值。使用`Integer`和`Double`類中的方法，學生們可以返回這些物件存儲為原始值的值。 在規劃《四鄰燈光節》所需的籌備任務前，學生們還將探索整數的最小和最大值，以避免溢出錯誤。
            Using ArrayLists to Store Data:
              description_student: 在處理陣列和清單時，我們有時會遇到元素數量未知或清單大小不斷變化的問題。在本節課中，你將學習`ArrayList`結構，並明確這種資料結構較適宜的場景。
              description_teacher: 學生們將創建`ArrayList`來存儲`int`和`double`值。學生們區分`ArrayList`和一維陣列，以確定某個特定場景下最適宜的資料結構。 學生們將向`ArrayList`中添加元素，並在處理存儲的資料時，學習如何在原始值和包裝類之間進行自動裝箱轉換。
            Working with ArrayList Data:
              description_student: 你將使用`ArrayList`方法`get()`和`set()`，來檢索和修改元素，並學習`String`方法`length()`，來計算`String`物件中的字元數。你將應用在一維和二維陣列中所開發出的標準演算法來修改`ArrayList`中的元素。你將在處理存儲在`ArrayList`中的資料時，學習如何在原始值和包裝類之間執行拆箱轉換。
              description_teacher: 學生們將使用`ArrayList`方法`get()`和`set()`，來檢索和修改元素，並學習`String`方法`length()`，來返回`String`物件中的字元數。他們將應用在一維和二維陣列中所開發出的標準演算法來修改`ArrayList`中的元素。學生們將在處理存儲在`ArrayList`中的資料時，學習如何在原始值和包裝類之間執行拆箱轉換。
            Storing Objects in an ArrayList:
              description_student: 到目前為止，你已經創建了`ArrayList`來存儲`Integer`、`Double`和`String`。與一維和二維陣列一樣，你也可以將創建的物件存儲在`ArrayList`中。在本節課中，你將創建一個物件的`ArrayList`，以應用你在全年中所使用的標準演算法來處理存儲在此清單中的資料。
              description_teacher: 學生將創建`ArrayList`來存儲物件，並學習Java中的通用類型。學生們將一維陣列中所學到的演算法應用於`ArrayList`，以查找最小值和最大值、計算總和及平均值，或找出滿足特定條件的元素。
            Removing Data from an ArrayList:
              description_student: 你將探索`ArrayList`類中的`remove()`方法的功能，並在遍歷該列表的過程中，在嘗試刪除專案時識別出潛在的錯誤。在此過程中，你會認識到`ArrayList`在哪種情況下最適合某個場景或問題。
              description_teacher: 學生們將探索`ArrayList`類中的`remove()`方法的功能，並在遍歷該列表的過程中，在嘗試刪除專案時識別出潛在的錯誤。學生們會認識到`ArrayList`在哪種情況下最適合某個場景或問題。
            Using String Methods:
              description_student: 你將探索`String`結構，了解`String`屬於物件。你將使用`indexOf()`和`substring()`方法來搜索`String`中的子字串，並從當前`String`中創建新的`String`物件。
              description_teacher: 學生們將探索`String`結構，了解`String`屬於物件。學生們將使用`indexOf()`和`substring()`方法來搜索`String`中的子字串，並從當前`String`中創建新的`String`物件。
            Comparing Strings:
              description_student: 你將探索如何使用`compareTo()`，來檢查`String`是否按字母順序排列。然後，你將啟動《四鄰燈光節》專案，特別留意專案規劃板上的任務。
              description_teacher: 學生們將探索如何使用`compareTo()`，來檢查`String`是否按字母順序排列。然後，學生們將啟動《四鄰燈光節》專案，特別留意專案規劃板上的任務。
            Solving Problems with Strings:
              description_student: 你將綜合標準演算法和`String`的知識，來檢查`String`是否是回文串。然後，你將參加同行評議會話，並反思《四鄰燈光節》項目的進展。
              description_teacher: 學生們將綜合標準演算法和`String`的知識，來檢查`String`是否是回文串。然後，學生們將參加同行評議會話，並反思各自《四鄰燈光節》項目的進展。
            Solving Problems with ArrayLists:
              description_student: 你將在一維陣列和二維陣列中所編寫的標準演算法應用於`ArrayList`。你將應用新的標準演算法，從整數中獲取單個數位，然後修改和應用之前的演算法，以交換元素、刪除重複項，或在《四鄰燈光節》專案中查找符合特定條件的元素。
              description_teacher: 學生們將在一維陣列和二維陣列中所編寫的標準演算法應用於`ArrayList`。學生們將應用新的標準演算法，從整數中獲取單個數位，然後修改和應用之前的演算法，以交換元素、刪除重複項，或在《四鄰燈光節》專案中查找符合特定條件的元素。
            Neighborhood Lit Fest Project - Day 1:
              name: "《四鄰燈光節》項目 - 第1天"
              description_student: 你將繼續開發自己的《四鄰燈光節》專案，參照最喜歡的作家或藝術家的作品鑒賞來創作故事、詩歌、歌曲或其他形式的文學作品。首先你將自我測評自己的作品，按照專案完成要求評估進度情況，然後針對專案中的某個功能編寫驗收標準，供同行測試。你借助自我評估和同行評議的形式，確定剩餘任務的優先順序，並繼續開發自己的專案。
              description_teacher: 學生們將繼續開發自己的《四鄰燈光節》專案，參照最喜歡的作家或藝術家的作品鑒賞來創作故事、詩歌、歌曲或其他形式的文學作品。首先學生們將自我測評自己的作品，按照專案完成要求評估進度情況，然後針對專案中的某個功能編寫驗收標準，供同行測試。學生們借助自我評估和同行評議的形式，確定剩餘任務的優先順序，並繼續開發自己的專案。
            Neighborhood Lit Fest Project - Day 2:
              name: "《四鄰燈光節》項目 - 第2天"
              description_student: 在上一課中，你已經完成了自我測評，並為自己的項目編寫了驗收標準。在本節課中，你將獲得同行評議，以確定待完成的剩餘任務並繼續開發自己的《四鄰燈光節》專案。
              description_teacher: 在上一課中，學生們已經完成了自我測評，並為自己的項目編寫了驗收標準。在本節課中，學生們將獲得同行評議，以確定待完成的剩餘任務並繼續開發自己的《四鄰燈光節》專案。
            Neighborhood Lit Fest Project - Day 3:
              name: "《四鄰燈光節》項目 - 第3天"
              description_student: 你根據代碼審查和專案規劃板，完成最終的修改和更新任務。你將與同行分享各自的《四鄰燈光節》項目。隨後，你將慶祝自己大功告成，並對自己的開發進度作出最後的反思。
              description_teacher: 學生們根據代碼審查和專案規劃板，完成最終的修改和更新任務。學生們將與同行分享各自的《四鄰燈光節》項目。隨後，學生們將慶祝自己大功告成，並對自己的開發進度作出最後的反思。
            Assessment Day:
              name: 評估日
              description_student: 在本單元中，你將使用`ArrayList`來存儲程式資料，並區分何時使用一維陣列、二維陣列及`ArrayList`。你將使用`ArrayList`來解決涉及數值和物件資料的問題，借此探索該資料結構的優勢和功能。你將使用`String`類中的方法來分析和處理來自使用者和檔輸入中的文本。在整個單元中，你將使用單行注釋、多行注釋和Javadoc注釋編寫程式文檔，以創建API文檔。在此過程中，你將確定並記錄物件和方法的前置條件和後置條件。此外，你將接受多選題測驗，來評估本單元學習目標和技能的掌握情況。
              description_teacher: 在本單元中，學生們將使用`ArrayList`來存儲程式資料，並區分何時使用一維陣列、二維陣列及`ArrayList`。學生們將使用`ArrayList`來解決涉及數值和物件資料的問題，借此探索該資料結構的優勢和功能。學生們將使用`String`類中的方法來分析和處理來自使用者和檔輸入中的文本。在整個單元中，學生們將使用單行注釋、多行注釋和Javadoc注釋編寫程式文檔，以創建API文檔。在此過程中，學生們將確定並記錄物件和方法的前置條件和後置條件。此外，學生們將接受多選題測驗，來評估本單元學習目標和技能的掌握情況。
            Java Lab:
              name: Java 實驗室
              key: Java 實驗室
            lesson-1:
              key: 第1課
            lesson-2:
              key: 第2課
              description_student: 你將構建`Integer`和`Double`物件來將`int`和`double`原始值表示為參考值。使用`Integer`和`Double`類中的方法，你可以返回這些物件存儲為原始值的值。 在規劃《四鄰燈光節》所需的籌備任務前，你還將探索整數的最小和最大值，以避免溢出錯誤。
              description_teacher: 學生們將構建`Integer`和`Double`對象來將`int`和`double`原始值表示為參考值。使用`Integer`和`Double`類中的方法，學生們可以返回這些物件存儲為原始值的值。 在規劃《四鄰燈光節》所需的籌備任務前，學生們還將探索整數的最小和最大值，以避免溢出錯誤。
            lesson-3:
              key: 第3課
              description_student: 在處理陣列和清單時，我們有時會遇到元素數量未知或清單大小不斷變化的問題。在本節課中，你將學習`ArrayList`結構，並明確這種資料結構較適宜的場景。
              description_teacher: 學生們將創建`ArrayList`來存儲`int`和`double`值。學生們區分`ArrayList`和一維陣列，以確定某個特定場景下最適宜的資料結構。 學生們將向`ArrayList`中添加元素，並在處理存儲的資料時，學習如何在原始值和包裝類之間進行自動裝箱轉換。
            lesson-4:
              key: 第4課
              description_student: 你將使用`ArrayList`方法`get()`和`set()`，來檢索和修改元素，並學習`String`方法`length()`，來計算`String`物件中的字元數。你將應用在一維和二維陣列中所開發出的標準演算法來修改`ArrayList`中的元素。你將在處理存儲在`ArrayList`中的資料時，學習如何在原始值和包裝類之間執行拆箱轉換。
              description_teacher: 學生們將使用`ArrayList`方法`get()`和`set()`，來檢索和修改元素，並學習`String`方法`length()`，來返回`String`物件中的字元數。他們將應用在一維和二維陣列中所開發出的標準演算法來修改`ArrayList`中的元素。學生們將在處理存儲在`ArrayList`中的資料時，學習如何在原始值和包裝類之間執行拆箱轉換。
            lesson-5:
              key: 第5課
              description_student: 到目前為止，你已經創建了`ArrayList`來存儲`Integer`、`Double`和`String`。與一維和二維陣列一樣，你也可以將創建的物件存儲在`ArrayList`中。在本節課中，你將創建一個物件的`ArrayList`，以應用你在全年中所使用的標準演算法來處理存儲在此清單中的資料。
              description_teacher: 學生將創建`ArrayList`來存儲物件，並學習Java中的通用類型。學生們將一維陣列中所學到的演算法應用於`ArrayList`，以查找最小值和最大值、計算總和及平均值，或找出滿足特定條件的元素。
            lesson-6:
              key: 第6課
              description_student: 你將探索`ArrayList`類中的`remove()`方法的功能，並在遍歷該列表的過程中，在嘗試刪除專案時識別出潛在的錯誤。在此過程中，你會認識到`ArrayList`在哪種情況下最適合某個場景或問題。
              description_teacher: 學生們將探索`ArrayList`類中的`remove()`方法的功能，並在遍歷該列表的過程中，在嘗試刪除專案時識別出潛在的錯誤。學生們會認識到`ArrayList`在哪種情況下最適合某個場景或問題。
            lesson-7:
              key: 第7課
              description_student: 你將探索`String`結構，了解`String`屬於物件。你將使用`indexOf()`和`substring()`方法來搜索`String`中的子字串，並從當前`String`中創建新的`String`物件。
              description_teacher: 學生們將探索`String`結構，了解`String`屬於物件。學生們將使用`indexOf()`和`substring()`方法來搜索`String`中的子字串，並從當前`String`中創建新的`String`物件。
            lesson-8:
              key: 第8課
              description_student: 你將探索如何使用`compareTo()`，來檢查`String`是否按字母順序排列。然後，你將啟動《四鄰燈光節》專案，特別留意專案規劃板上的任務。
              description_teacher: 學生們將探索如何使用`compareTo()`，來檢查`String`是否按字母順序排列。然後，學生們將啟動《四鄰燈光節》專案，特別留意專案規劃板上的任務。
            lesson-9:
              key: 第9課
              description_student: 你將綜合標準演算法和`String`的知識，來檢查`String`是否是回文串。然後，你將參加同行評議會話，並反思《四鄰燈光節》項目的進展。
              description_teacher: 學生們將綜合標準演算法和`String`的知識，來檢查`String`是否是回文串。然後，學生們將參加同行評議會話，並反思各自《四鄰燈光節》項目的進展。
            lesson-10:
              key: 第10課
              description_student: 你將在一維陣列和二維陣列中所編寫的標準演算法應用於`ArrayList`。你將應用新的標準演算法，從整數中獲取單個數位，然後修改和應用之前的演算法，以交換元素、刪除重複項，或在《四鄰燈光節》專案中查找符合特定條件的元素。
              description_teacher: 學生們將在一維陣列和二維陣列中所編寫的標準演算法應用於`ArrayList`。學生們將應用新的標準演算法，從整數中獲取單個數位，然後修改和應用之前的演算法，以交換元素、刪除重複項，或在《四鄰燈光節》專案中查找符合特定條件的元素。
            lesson-11:
              key: 第11課
              name: "《四鄰燈光節》項目 - 第1天"
              description_student: 你將繼續開發自己的《四鄰燈光節》專案，參照最喜歡的作家或藝術家的作品鑒賞來創作故事、詩歌、歌曲或其他形式的文學作品。首先你將自我測評自己的作品，按照專案完成要求評估進度情況，然後針對專案中的某個功能編寫驗收標準，供同行測試。你借助自我評估和同行評議的形式，確定剩餘任務的優先順序，並繼續開發自己的專案。
              description_teacher: 學生們將繼續開發自己的《四鄰燈光節》專案，參照最喜歡的作家或藝術家的作品鑒賞來創作故事、詩歌、歌曲或其他形式的文學作品。首先學生們將自我測評自己的作品，按照專案完成要求評估進度情況，然後針對專案中的某個功能編寫驗收標準，供同行測試。學生們借助自我評估和同行評議的形式，確定剩餘任務的優先順序，並繼續開發自己的專案。
            lesson-12:
              key: 第12課
              name: "《四鄰燈光節》項目 - 第2天"
              description_student: 在上一課中，你已經完成了自我測評，並為自己的項目編寫了驗收標準。在本節課中，你將獲得同行評議，以確定待完成的剩餘任務並繼續開發自己的《四鄰燈光節》專案。
              description_teacher: 在上一課中，學生們已經完成了自我測評，並為自己的項目編寫了驗收標準。在本節課中，學生們將獲得同行評議，以確定待完成的剩餘任務並繼續開發自己的《四鄰燈光節》專案。
            lesson-13:
              key: 第13課
              name: "《四鄰燈光節》項目 - 第3天"
              description_student: 你根據代碼審查和專案規劃板，完成最終的修改和更新任務。你將與同行分享各自的《四鄰燈光節》項目。隨後，你將慶祝自己大功告成，並對自己的開發進度作出最後的反思。
              description_teacher: 學生們根據代碼審查和專案規劃板，完成最終的修改和更新任務。學生們將與同行分享各自的《四鄰燈光節》項目。隨後，學生們將慶祝自己大功告成，並對自己的開發進度作出最後的反思。
            lesson-14:
              key: 第14課
            lesson-15:
              key: 第15課
              name: 評估日
              description_student: 在本單元中，你將使用`ArrayList`來存儲程式資料，並區分何時使用一維陣列、二維陣列及`ArrayList`。你將使用`ArrayList`來解決涉及數值和物件資料的問題，借此探索該資料結構的優勢和功能。你將使用`String`類中的方法來分析和處理來自使用者和檔輸入中的文本。在整個單元中，你將使用單行注釋、多行注釋和Javadoc注釋編寫程式文檔，以創建API文檔。在此過程中，你將確定並記錄物件和方法的前置條件和後置條件。此外，你將接受多選題測驗，來評估本單元學習目標和技能的掌握情況。
              description_teacher: 在本單元中，學生們將使用`ArrayList`來存儲程式資料，並區分何時使用一維陣列、二維陣列及`ArrayList`。學生們將使用`ArrayList`來解決涉及數值和物件資料的問題，借此探索該資料結構的優勢和功能。學生們將使用`String`類中的方法來分析和處理來自使用者和檔輸入中的文本。在整個單元中，學生們將使用單行注釋、多行注釋和Javadoc注釋編寫程式文檔，以創建API文檔。在此過程中，學生們將確定並記錄物件和方法的前置條件和後置條件。此外，學生們將接受多選題測驗，來評估本單元學習目標和技能的掌握情況。
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        ai-ethics-2021:
          lessons:
            Our AI Code of Ethics:
              description_student: 合作研究人工智慧倫理，並創建可共用的行為準則。
            lesson-1:
              key: 第1課
              description_student: 合作研究人工智慧倫理，並創建可共用的行為準則。
        poem-art-2021:
          lessons:
            Poem Art:
              name: 詩歌藝術
              description_teacher: |-
                在本節電腦科學和ELA綜合課程中，學生們將使用代碼來動畫化一篇詩歌，以展現詩歌的意境。學生們將賞析和感受詩歌的意境。然後，他們將查找對應的效果和圖像，來展現這篇詩歌的意境。最後，學生們將使用事件（代碼）來展現詩歌中意境的轉換或採用動畫效果引入新畫面。

                本節課可作為1小時的獨立課程完成。或將本節課作為多課時模組[詩歌程式設計](http://studio.code.org/s/poetry-2021)的第一節課。
            lesson-1:
              key: 第1課
              name: 詩歌藝術
          title: 詩歌藝術
        poetry-2021:
          lessons:
            Poem Art:
              name: 詩歌藝術
              description_teacher: 在這個電腦科學和ELA綜合課程中，學生們將用代碼動畫化一首詩來展現詩歌的意境。學生將閱讀和發現一首詩的意境。然後學生會找到相應的效果和圖像，以説明展現詩歌的意境。最後，學生將使用事件（代碼）來展現意境的變化或在詩歌中動畫引入新形象。
            Code Your Own Poem:
              name: 詩歌程式設計
            Build a Poem Generator:
              name: 構建一個詩歌生成器應用程式
            Choosing Words Carefully:
              name: 仔細選擇詞語
            lesson-1:
              key: 第1課
              name: 詩歌藝術
            lesson-2:
              key: 第2課
              name: 詩歌程式設計
            lesson-3:
              key: 第3課
            lesson-4:
              key: 第4課
            lesson-5:
              key: 第5課
              name: 仔細選擇詞語
            lesson-7:
              key: 第7課
            lesson-6:
              key: 第6課
        hello-world-food-2021:
          lessons:
            lesson-1:
              key: 第1課
              name: 你好世界
        hello-world-emoji-2021:
          lessons:
            lesson-1:
              key: 第1課
              name: 你好世界
        hello-world-animals-2021:
          lessons:
            lesson-1:
              key: 第1課
              name: 你好世界
        hello-world-retro-2021:
          lessons:
            lesson-1:
              key: 第1課
              name: 你好世界
        spelling-bee-2021:
          lessons:
            Spelling Bee:
              description_student: '幫助蜜蜂拼寫新單詞！  '
              description_teacher: "本課以涉及拼寫和識別大寫字母的先前活動為基礎。與蜜蜂一起拼寫可以幫助幼稚園和一年級的學生練習跟隨和計數構成單詞的字母序列。他們使用一系列編碼命令讓拼字蜜蜂在一個字母網格中移動，以拼寫單詞。學生學習如何使用拖放編碼積木來移動字元，以及按正確順序排列命令的重要性，這樣他們才能拼寫一個單詞。\n\n#### 必備技能\n\n這節課的目的不是向學生介紹字母、字母組成單詞的順序或計數。學生進入本課程之前應該具備以下知識和技能\n\n-   識別字母表中的大寫字母。\n-   識別10以下的數位並用手指、物體或操縱器計數。\n-   認識到單詞是由一系列字母組成的。"
            lesson-1:
              key: 第1課
              name: 拼字蜜蜂
              description_student: '幫助蜜蜂拼寫新單詞！  '
              description_teacher: "本課以涉及拼寫和識別大寫字母的先前活動為基礎。與蜜蜂一起拼寫可以幫助幼稚園和一年級的學生練習跟隨和計數構成單詞的字母序列。他們使用一系列編碼命令讓拼字蜜蜂在一個字母網格中移動，以拼寫單詞。學生學習如何使用拖放編碼積木來移動字元，以及按正確順序排列命令的重要性，這樣他們才能拼寫一個單詞。\n\n#### 必備技能\n\n這節課的目的不是向學生介紹字母、字母組成單詞的順序或計數。學生進入本課程之前應該具備以下知識和技能\n\n-   識別字母表中的大寫字母。\n-   識別10以下的數位並用手指、物體或操縱器計數。\n-   認識到單詞是由一系列字母組成的。"
        explore-data-1-2021:
          lessons:
            Exploring Box Plots and Histograms:
              name: 資料視覺化
              description_student: '在應用實驗室的數據視覺化工具中創建橫條圖和柱狀圖。  '
              description_teacher: "本課建立在已經給學生介紹過的橫條圖和柱狀圖概念之上。學生將練習從圖表中得出結論，並學習使用應用實驗室中的數據視覺化工具來創建兩種不同類型的圖表：橫條圖和柱狀圖。該工具旨在快速將學生與現實世界的數據集連接起來，並使其可以輕鬆地從數據創建視覺化，而無需學習如何流覽更複雜的工具。學生還可以訪問幾個真實世界的數據集，他們可以使用這些數據集來創建圖表。\n\n這節課從快速回顧圖表為什麼對查看數據有用的原因開始。然後學生們在應用實驗室的數據視覺化工具中練習創建橫條圖。然後他們學習如何製作柱狀圖，以便在橫條圖可能沒用的情況下構建圖表。然後，學生們有機會探索不同的現實世界數據集，並瞭解製作圖表如何有助於交流相關的話題資訊。\n\n#### 必備技能和詞彙\n\n本課程旨在豐富或強化關於橫條圖和柱狀圖的現有課程。 它並不是為了向學生介紹新的核心內容。學生在上這節課之前應該具備以下知識和技能：\n\n-   知道如何閱讀橫條圖，理解x和y軸上的值代表什麼\n-   知道如何閱讀柱狀圖，理解值的範圍代表什麼"
            lesson-1:
              key: 第1課
              name: 探索箱形圖和長條圖
              description_student: '在應用實驗室的數據視覺化工具中創建橫條圖和柱狀圖。  '
              description_teacher: "本課建立在已經給學生介紹過的橫條圖和柱狀圖概念之上。學生將練習從圖表中得出結論，並學習使用應用實驗室中的數據視覺化工具來創建兩種不同類型的圖表：橫條圖和柱狀圖。該工具旨在快速將學生與現實世界的數據集連接起來，並使其可以輕鬆地從數據創建視覺化，而無需學習如何流覽更複雜的工具。學生還可以訪問幾個真實世界的數據集，他們可以使用這些數據集來創建圖表。\n\n這節課從快速回顧圖表為什麼對查看數據有用的原因開始。然後學生們在應用實驗室的數據視覺化工具中練習創建橫條圖。然後他們學習如何製作柱狀圖，以便在橫條圖可能沒用的情況下構建圖表。然後，學生們有機會探索不同的現實世界數據集，並瞭解製作圖表如何有助於交流相關的話題資訊。\n\n#### 必備技能和詞彙\n\n本課程旨在豐富或強化關於橫條圖和柱狀圖的現有課程。 它並不是為了向學生介紹新的核心內容。學生在上這節課之前應該具備以下知識和技能：\n\n-   知道如何閱讀橫條圖，理解x和y軸上的值代表什麼\n-   知道如何閱讀柱狀圖，理解值的範圍代表什麼"
          title: 資料視覺化
        counting-csc-2021:
          lessons:
            Counting with Laurel:
              name: 與Laurel一起計算
              description_student: 幫助尋寶獵人Laurel計數和加總步數以收集寶石！
              description_teacher: "本課建立在涉及計數和加法的先前活動之上。與Laurel一起計數支援幼稚園和一年級的學生，在他們使用迴圈幫助尋寶獵人在迷宮網格中收集寶石時，練習計數和相加。他們使用一系列編碼命令引導Laurel穿過網格去收集寶石，利用要求他們計算Laurel需要走多少步的“Repeat”積木，然後在代碼積木中使用正確的數來表示這個數字。\n\n#### 必備技能\n\n這節課並不是要向學生介紹數字、計數或加法。學生在上這節課之前應該具備以下知識和技能：\n\n-   識別10以下的數位並用圖像、手指或操縱器計數。\n-   將對象、圖像、手指或操縱器相加，總和最多為10。"
            lesson-1:
              key: 第1課
              name: 與Laurel一起計算
              description_student: 幫助尋寶獵人Laurel計數和加總步數以收集寶石！
              description_teacher: "本課建立在涉及計數和加法的先前活動之上。與Laurel一起計數支援幼稚園和一年級的學生，在他們使用迴圈幫助尋寶獵人在迷宮網格中收集寶石時，練習計數和相加。他們使用一系列編碼命令引導Laurel穿過網格去收集寶石，利用要求他們計算Laurel需要走多少步的“Repeat”積木，然後在代碼積木中使用正確的數來表示這個數字。\n\n#### 必備技能\n\n這節課並不是要向學生介紹數字、計數或加法。學生在上這節課之前應該具備以下知識和技能：\n\n-   識別10以下的數位並用圖像、手指或操縱器計數。\n-   將對象、圖像、手指或操縱器相加，總和最多為10。"
          title: 與Laurel一起計算
        hello-world-gabrielle-validation:
          lessons:
            lesson-1:
              name: 階段
        csa6-exemplars:
          lessons:
            lesson-11:
              name: "《四鄰燈光節》項目 - 第1天"
            lesson-12:
              name: "《四鄰燈光節》項目 - 第2天"
            lesson-13:
              name: "《四鄰燈光節》項目 - 第3天"
            lesson-15:
              name: 評估日
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        2022drafting:
          lessons:
            lesson-4:
              name: 疫情爆發模擬
            lesson-5:
              name: 關於我
            Drawing with Loops:
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Using Variables with the Artist:
              description_student: 在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            Programming with the Bee:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Variables with the Bee:
              name: 在蜜蜂遊戲中變更變數
              description_student: 這隻蜜蜂很喜愛變數！
              description_teacher: 本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。
            For Loop Fun:
              name: 有趣的計次迴圈
              description_student: 玩「for」（計數）迴圈，發掘無窮樂趣！
              description_teacher: 我們知道迴圈可以讓我們不斷重複的做同一件事情。現在，我們要學習如何使用本身有額外結構的迴圈。這些新結構可讓學生編寫更強大、更具動態的程式碼。
            For Loops with Bee:
              name: 與蜜蜂一起嘗試 for（計數）迴圈
              description_student: 嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！
              description_teacher: 本課堂以蜜蜂為角色，集中學習「for」（計數）迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後觀看 for 迴圈簡介，讓他們可更有效地解決複雜的問題。
            For Loops with Artist:
              name: 藝術家中的計數迴圈（For Loops）
              description_student: 準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。
              description_teacher: 在本課堂中，學生會繼續練習「for」（計數）迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與「for」迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。
            Follow the Algorithm:
              description_student: 玩一款遊戲，想想需要使用哪些命令才可獲得正確的結果。
              description_teacher: 在本課堂中，學生會玩一款遊戲，目的是讓他們思考一下，需要以甚麼方式提供命令，才可獲得正確的結果。這樣就可幫助他們更容易在往後的課堂中過渡到 Sprite Lab。
            Alien Dance Party with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
              description_student: 製作可與同學分享的互動專案。
              description_teacher: 本課堂會介紹 Sprite Lab，這是一個工作平台，讓學生可在這裡製作自己的互動式動畫和遊戲。除了「行為」外，學生今天會結合做為「事件」的使用者輸入，以製成「外星人舞蹈派對」。
          lesson_groups:
            lessonGroup-5:
              display_name: 課程F-變數（已棄用）
            lessonGroup-6:
              display_name: 課程F-For循環（已棄用）
            lessonGroup-7:
              display_name: 課程E-精靈圖（已棄用）
            lessonGroup-8:
              display_name: 一小時玩程式
        csa7-exemplars:
          lessons:
            lesson-15:
              name: 評估日
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        csf-2022-pilot:
          lessons:
            Introducing Sprite Lab:
              name: Sprite Lab 簡介
            Making Sprites:
              name: 製作精靈圖
            Sprites in Action:
              name: 運行中的角色
            'Mini-Project: Virtual Pet':
              name: '小專案: 虛擬寵物'
              description_student: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              description_teacher: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
            Simulating Experiments:
              name: 模擬實驗
              description_student: 在電腦上執行模擬，並實驗一下變更參數後的情況。
              description_teacher: 在 Sprite Lab 上執行簡單模擬，學生便會體驗到電腦運算可怎樣用來收集資料，從而找出各種趨勢與模式。多次執行模擬後，學生便會有機會預測一下，變更模擬中的變數可能會怎樣影響結果，然後再測試這個假設。
            End of Course Project:
              description_student: 這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！
          lesson_groups:
            lessonGroup-2:
              display_name: 角色
            lessonGroup-3:
              display_name: 變數
            lessonGroup-4:
              display_name: 課程結束專案
        csd6-pilot-2022:
          lessons:
            Project - Prototype an Innovation:
              description_teacher: 在課程的這個期末專案中，學生會以團隊方式開發並測試一款創新運算裝置的原型，這個原型以 Circuit Playground 為基礎。各小組會使用電路板上可用的輸入與輸出來製作程式，讓程式可與使用者進行有趣且獨一無二的互動。
            Innovations in Computing:
              name: 運算上的創新
              description_teacher: 在這個本課程的最後一個單元中，學生首先會做一些研究，瞭解電腦運算的有趣創新成果。本課堂會讓學生瞭解更多電腦運算的形式（電腦的外觀看起來怎樣），以及受電腦運算影響的範疇。在本單元的後期，學生會在開發自己的運算裝置時，回顧本課堂中看到的裝置。
            The Circuit Playground:
              name: 電路（Circuit ）遊樂場
            Board Events:
              name: 電路板事件
            Arrays and Color LEDs:
              name: 彩色顯示器
            lesson-10:
              name: 組合輸入
            Accelerometer:
              name: 加速計
              description_teacher: 在本課堂中，學生會學習加速計和它的功能。他們會熟習事件與屬性，並製作多個利用加速計的程式，這些程式和現實世界中可能遇到過的程式相似。
            Making Music:
              name: 製作音樂
            Functions with Parameters:
              name: 函式
          lesson_groups:
            lessonGroup-2:
              display_name: 第1章
            lessonGroup-3:
              display_name: 第2章
        csa8-exemplars:
          lessons:
            lesson-15:
              name: 評估日
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        csa7-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評估日
            Java Lab:
              name: Java 實驗室
              key: Java 實驗室
            lesson-10:
              key: 第10課
            lesson-6:
              key: 第6課
            lesson-7:
              key: 第7課
            lesson-8:
              key: 第8課
            lesson-9:
              key: 第9課
            lesson-11:
              key: 第11課
            lesson-12:
              key: 第12課
            lesson-13:
              key: 第13課
            lesson-14:
              key: 第14課
            lesson-15:
              key: 第15課
            lesson-1:
              key: 第1課
            lesson-2:
              key: 第2課
            lesson-3:
              key: 第3課
            lesson-4:
              key: 第4課
            lesson-5:
              key: 第5課
              name: 評估日
            lesson-16:
              key: 第16課
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        csa8-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評估日
            Java Lab:
              name: Java 實驗室
              key: Java 實驗室
            lesson-1:
              key: 第1課
            lesson-2:
              key: 第2課
            lesson-3:
              key: 第3課
            lesson-4:
              key: 第4課
            lesson-5:
              key: 第5課
            lesson-10:
              key: 第10課
            lesson-6:
              key: 第6課
            lesson-7:
              key: 第7課
            lesson-8:
              key: 第8課
            lesson-9:
              key: 第9課
            lesson-11:
              key: 第11課
            lesson-12:
              key: 第12課
            lesson-13:
              key: 第13課
            lesson-14:
              key: 第14課
            lesson-15:
              key: 第15課
              name: 評估日
            lesson-16:
              key: 第16課
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        coursea-2022:
          lessons:
            Learn to Drag and Drop:
              name: 學習滑鼠的拖放
              description_student: 以點擊與拖放的方式完成謎題。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
              key: 學習滑鼠的拖放
            Happy Maps:
              name: 快樂地圖
              description_student: 編寫指令，讓 Flurb 走到水果那裡。
              description_teacher: 如果學生理解規畫順序和將它循序編程之間的區別，那麼從演算法過渡到程式設計的時間就不會太長，這項活動將透過速記讀寫代碼的方式幫助學生獲得經驗。
            Sequencing with Scrat:
              name: 和鼠奎特一起學序列
              description_student: 為鼠奎特設計程式，讓他能夠拿到橡樹果實。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
              key: 和鼠奎特一起學序列
            Programming with Scrat:
              name: 和鼠奎特一起寫程式
              description_student: 編寫程式，幫助鼠奎特拿到橡樹果實。
              description_teacher: 學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。
            Programming with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起寫程式
              description_student: 協助 BB-8 收集廢金屬。
              description_teacher: 在本課堂中，學生會以更複雜的方式運用新的程式設計技巧，與 BB-8 一起完成更巧妙的關卡。
              key: 和 BB-8 與 Rey 一起寫程式
            Happy Loops:
              name: 迴圈（Loops） - 快樂迴圈
              description_student: 使用迴圈（loop），幫助 Flurb 解決更棘手的問題。
              description_teacher: 迴圈是程式設計中非常有用且強大的工具。為了理解迴圈的用處，就必須逼著學生去思考更簡潔的方式來解決平凡的問題。
            Loops with Scrat:
              name: 和鼠奎特一起學迴圈（Loop）
              description_student: 使用迴圈，幫助鼠奎特更快完成任務。
              description_teacher: 這個舞台會以「快樂迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集橡樹果實。
            Loops with Laurel:
              name: 與 Laurel 一起學習迴圈
              description_student: 幫探險家 Laurel 收集地底的寶藏。
              description_teacher: 從「快樂迴圈」中建立重複指令的概念，這個階段會讓學生用迴圈更有效率的收集寶藏。
            Ocean Scene with Loops:
              name: 海洋場景與迴圈（Loop）
              description_student: 使用迴圈與模式完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
              key: 海洋場景與迴圈（Loop）
            The Big Event Jr:
              name: 小小大事件
              description_student: 教師按下巨型遙控器的按鈕後，學生便會移動和大叫。
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            'Mini-Project: On the Move with Play Lab':
              description_student: 創作自己的遊戲或故事。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！
            End of Course Project:
              name: 課程結束專案
            'Programming: Happy Maps':
              key: 程式設計：快樂地圖
              name: 快樂地圖
              description_student: 編寫指令，讓 Flurb 走到水果那裡。
              description_teacher: 如果學生理解規畫順序和將它循序編程之間的區別，那麼從演算法過渡到程式設計的時間就不會太長，這項活動將透過速記讀寫代碼的方式幫助學生獲得經驗。
            Programming in Ice Age:
              key: 在冰河歷險紀裡編程
              name: 和鼠奎特一起寫程式
              description_student: 編寫程式，幫助鼠奎特拿到橡樹果實。
              description_teacher: 學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。
            'Loops: Happy Loops':
              key: 迴圈（Loops） - 快樂迴圈
              name: 迴圈（Loops） - 快樂迴圈
              description_student: 使用迴圈（loop），幫助 Flurb 解決更棘手的問題。
              description_teacher: 迴圈是程式設計中非常有用且強大的工具。為了理解迴圈的用處，就必須逼著學生去思考更簡潔的方式來解決平凡的問題。
            Loops in Ice Age:
              key: 冰河歷險紀中的迴圈
              name: 和鼠奎特一起學迴圈（Loop）
              description_student: 使用迴圈，幫助鼠奎特更快完成任務。
              description_teacher: 這個舞台會以「快樂迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集橡樹果實。
            Loops in Collector:
              key: 和收藏家學迴圈（Loop）
              name: 與 Laurel 一起學習迴圈
              description_student: 幫探險家 Laurel 收集地底的寶藏。
              description_teacher: 從「快樂迴圈」中建立重複指令的概念，這個階段會讓學生用迴圈更有效率的收集寶藏。
            'Events: The Big Event':
              key: 事件：大事件
              name: 小小大事件
              description_student: 教師按下巨型遙控器的按鈕後，學生便會移動和大叫。
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            Events in Play Lab:
              key: Play Lab 中的事件（Event）
              description_student: 創作自己的遊戲或故事。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！
            lesson-1:
              key: 第1課
              name: 課程結束專案
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
            lessonGroup-5:
              display_name: 課程結束專案
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          description_short: 為學齡前兒童設計的計算機科學指引。
          description_audience: 年齡：4-7
        express-2022:
          lessons:
            Programming with Angry Birds:
              name: 與憤怒鳥一起編程
              description_student: 與憤怒鳥一起學習序列與演算法。
              description_teacher: 學生會使用憤怒鳥遊戲中的角色開發序列演算法，讓憤怒鳥能夠從迷宮的一側移動到另一側的豬那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓憤怒鳥向前、向左或是向右移動。
              key: 與憤怒鳥一起編程
            Debugging in Maze:
              name: 在迷宮中除錯
              description_student: 在謎題中尋找問題，並練習你的除錯技巧。
              description_teacher: 除錯是學習設計程式的重要元素。在本課堂中，學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。
            Collecting Treasure with Laurel:
              name: 和 Laurel 一起收集寶石
              key: 和 Laurel 一起收集寶石
            Creating Art with Code:
              name: 用代碼創作藝術
              description_student: 為藝術家設計程式，製作漂亮的圖像。
              description_teacher: 在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。
              key: 用代碼創作藝術
            Swimming Fish in Sprite Lab:
              name: Sprite Lab 中的游泳小魚
              description_student: 學習建立與編輯角色（sprite）。
              description_teacher: 在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。
              key: Sprite Lab 中的游泳小魚
            Making Sprites:
              name: 製作精靈圖
            Sprites in Action:
              name: 運行中的角色
            Virtual Pet with Sprite Lab:
              name: 在 Sprite Lab 中製作虛擬寵物
              description_student: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              description_teacher: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              key: 在 Sprite Lab 中製作虛擬寵物
            Dance Party:
              name: 舞蹈派對
              description_student: 現在是時候慶祝一下了！你會在本課堂中編寫程式，製作自己的互動舞蹈派對。
              description_teacher: 在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。
            Loops with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
              description_student: 使用迴圈（loop），幫助 BB-8 完成各個迷宮！
              key: 和 BB-8 與 Rey 一起練習迴圈（Loop）
            'Mini-Project: Sticker Art':
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Nested Loops in Maze:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明你在建立巢狀迴圈（nested loop）時會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
              key: 迷宮裡的巢狀迴圈（Nested Loops）
            Snowflakes with Anna and Elsa:
              name: 和安娜與艾莎一同玩雪花
              description_student: 安娜與艾莎的滑冰技術非常出眾，但是需要你的協助，在冰上建立模式。請使用巢狀迴圈（nested loop）製作非常酷炫的效果！
              description_teacher: 學生已學懂怎樣把迴圈分層，現在他們可製作許多漂亮的東西。本課堂會把學生帶到一系列的練習中，協助他們運用安娜與艾莎的優秀滑冰技巧，製作適用於自己個人作品的圖像！
              key: 和安娜與艾莎一同玩雪花
            Looking Ahead with Minecraft:
              name: 與 Minecraft 一起展望未來
              description_student: 躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            If/Else with Bee:
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
              description_student: 你已明白甚麼是條件式（conditional）。現在是時候為蜜蜂設計程式，讓蜜蜂在採集蜂蜜與花蜜時使用。
              description_teacher: 到了這個階段，學生已設計了程式，讓程式每次都使用相同的方法執行。這種做法十分可靠，不過欠缺點彈性。在本課堂中，班級同學將會開始使用條件式（conditional）編寫程式，讓他們編寫出來的程式，可依據程式遇到的特定條件，以不同方式運作。
              key: 與小蜜蜂一起嘗試 If/Else（如果/否則）
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
              description_student: 迴圈（loop）在程式編寫中非用實用。本課堂會教你其中一種：while（當）迴圈！
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Minecraft 中的條件式：水上巡航 '
              description_student: 你會在 Minecraft 的世界裡學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
              key: 'Minecraft 中的條件式：水上巡航 '
            Until Loops in Maze:
              name: 迷宮裡的 until（直到）迴圈
              description_student: 使用 until（直到）迴圈，你就可成就一些精彩的事情！
              description_teacher: 在本課堂中，學生會學習「until」（直到）迴圈。學生會製作程式，讓主角重複動作，「直到」主角到達所需的停駐點。
              key: 迷宮裡的 until（直到）迴圈
            Harvesting with Conditionals:
              name: 使用條件式（Conditional）收割農作物
              description_student: 我們不會總是清楚瞭解要在甚麼時候使用每項條件式（conditional）。本課堂會幫你練習決定要怎樣做。
              description_teacher: 學生會練習「while」（當）迴圈、「until」（直到）迴圈與「if/else」（如果/否則）陳述句。這幾種積木都會使用條件式。練習全部積木後，學生便會學習到如何編寫複雜且具靈活性的程式碼。
              key: 使用條件式（Conditional）收割農作物
            Functions in Minecraft:
              name: Minecraft 中的函式
              description_student: 你能指出要如何利用函式提高編程效率嗎？
              description_teacher: 在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！
              key: Minecraft 中的函式
            Functions with Artist:
              name: 在藝術家遊戲中使用函式（Function）
              description_student: 使用函式，以更簡易的方式繪畫複雜的圖畫！
              description_teacher: 學生會在藝術家遊戲中學習使用函式（function）。他們會製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。
              key: 在藝術家遊戲中使用函式（Function）
            Functions with Harvester:
              name: 在收割者遊戲中學習函式（Function）
              description_student: 協助農夫收割農作物時，函式（function）可為你省下大量工夫！
              description_teacher: 學生已練習在藝術家遊戲中製作精彩的設計，並在蜜蜂遊戲中遊走，但他們今天會使用函式（function），在收割者遊戲中收割農作物。本課堂會鼓勵學生以新的方式使用函式：把函式和「while」（當）迴圈與「if/else」（如果/否則）陳述句結合起來。
              key: 在收割者遊戲中學習函式（Function）
            Using Variables with the Artist:
              description_student: 在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            Variables with the Bee:
              name: 在蜜蜂遊戲中變更變數
              description_student: 這隻蜜蜂很喜愛變數！
              description_teacher: 本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。
            For Loops with Bee:
              name: 與蜜蜂一起嘗試 for（計數）迴圈
              description_student: 嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！
              description_teacher: 本課堂以蜜蜂為角色，集中學習「for」（計數）迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後觀看 for 迴圈簡介，讓他們可更有效地解決複雜的問題。
              key: 與蜜蜂一起嘗試 for（計數）迴圈
            For Loops with Artist:
              name: 藝術家中的計數迴圈（For Loops）
              description_student: 準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。
              description_teacher: 在本課堂中，學生會繼續練習「for」（計數）迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與「for」迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。
              key: 藝術家中的計數迴圈（For Loops）
            End of Course Project:
              name: 課程結束專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
              key: 課程結束專案
            Debugging with Scrat:
              key: 與鼠奎特一起除錯
              name: 在迷宮中除錯
              description_student: 在謎題中尋找問題，並練習你的除錯技巧。
              description_teacher: 除錯是學習設計程式的重要元素。在本課堂中，學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。
            lesson-2:
              key: 第2課
              name: 製作精靈圖
            lesson-3:
              key: 第3課
              name: 運行中的角色
            lesson-1:
              key: 第1課
              name: 舞蹈派對
              description_student: 現在是時候慶祝一下了！你會在本課堂中編寫程式，製作自己的互動舞蹈派對。
              description_teacher: 在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。
            Sticker Art with Loops:
              key: 使用迴圈（Loop）繪畫貼紙藝術
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            'Looking Ahead with Minecraft ':
              name: 與 Minecraft 一起展望未來
              description_student: 躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            While Loops with the Farmer:
              key: 與農夫一起嘗試 while（當）迴圈
              name: 農夫遊戲中的 while（當）迴圈
              description_student: 迴圈（loop）在程式編寫中非用實用。本課堂會教你其中一種：while（當）迴圈！
            lesson-4:
              key: 第4課
            Variables with Artist:
              key: 在藝術家遊戲中學習變數
              description_student: 在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            Changing Variables with Bee:
              key: 在蜜蜂遊戲中變更變數
              name: 在蜜蜂遊戲中變更變數
              description_student: 這隻蜜蜂很喜愛變數！
              description_teacher: 本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_sprites:
              display_name: 角色
            lessonGroup-9:
              display_name: 事件
            csf_loops:
              display_name: 迴圈
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            csf_functions:
              display_name: 函式
            csf_variables:
              display_name: 變數
            csf_for_loops:
              display_name: 計次迴圈（For Loops）
            end_of_course_project:
              display_name: 課程結束專案
          description_short: 電腦科學簡介：結合我們最優秀的國小課程內容，供年齡較大的學生學習。
          description_audience: 年齡 9-18
          name: express-2022
        csp1-2022:
          lessons:
            CS Principles Pre-survey:
              name: 計算機科學原理課前問卷調查
              key: 計算機科學原理課前問卷調查
            Welcome to CSP:
              name: 歡迎來到 CSP
              key: 歡迎來到 CSP
            Representing Information:
              name: 表示資訊
              key: 表示資訊
            Circle Square Patterns:
              name: 圓形與正方形模式
              key: 圓形與正方形模式
            Binary Numbers:
              name: 二進位數
              key: 二進位數
            Overflow and Rounding:
              name: 溢位與捨入
              key: 溢位與捨入
            Representing Text:
              name: 表示文字
              key: 表示文字
            Black and White Images:
              name: 黑白圖像
              key: 黑白圖像
            Color Images:
              name: 彩色圖像
              key: 彩色圖像
            Lossless Compression:
              name: 無損壓縮
              key: 無損壓縮
            Lossy Compression:
              name: 有損壓縮
              key: 有損壓縮
            Intellectual Property:
              name: 知識產權
              key: 知識產權
            Assessment Day:
              name: 評估日
            Project - Digital Information Dilemmas Part 1:
              key: 專案 - 數位資訊困境 第 1 部分
            Project - Digital Information Dilemmas Part 2:
              key: 專案 - 數位資訊困境 第 2 部分
            'Lesson 14: Assessment Day':
              key: 課堂 14：評估日
              name: 評估日
          lesson_groups:
            cspSurvey:
              display_name: 問卷
            csp_unit1_2020:
              display_name: "（舊）單元 1：數位資訊"
        csp2-2022:
          lessons:
            Welcome to the Internet:
              name: 歡迎來到網際網路
              key: 歡迎來到網際網路
            Building a Network:
              name: 建立網路
              key: 建立網路
            The Need for Addressing:
              name: 定址的需要
              key: 定址的需要
            Routers and Redundancy:
              name: 路由器與備援
              key: 路由器與備援
            Packets:
              name: 封包
              key: 封包
            Assessment Day:
              name: 評估日
            DNS and HTTP:
              key: DNS 與 HTTP
            Project - Internet Dilemmas Part 1:
              key: 專案 - 網際網路困境 第 1 部分
            Project - Internet Dilemmas Part 2:
              key: 專案 - 網際網路困境 第 2 部分
            'Lesson 9: Assessment Day':
              key: 課堂 9：評估日
              name: 評估日
          lesson_groups:
            csp_unit2_2020:
              display_name: "（舊）單元 2：網際網路"
        csp3-2022:
          lessons:
            Introduction to Apps:
              name: 應用程式簡介
              key: 應用程式簡介
            The Need for Programming Languages:
              name: 程式語言的需要
              key: 程式語言的需要
            Intro to Programming:
              name: 程式設計簡介
              key: 程式設計簡介
            Debugging:
              name: 除錯
              key: 除錯
            Assessment Day:
              name: 評估日
            Project - Designing an App Part 1:
              key: 專案 - 設計應用程式 第 1 部分
            Project - Designing an App Part 2:
              key: 專案 - 設計應用程式 第 2 部分
            Project - Designing an App Part 3:
              key: 專案 - 設計應用程式 第 3 部分
            Project - Designing an App Part 4:
              key: 專案 - 設計應用程式 第 4 部分
            Project - Designing an App Part 5:
              key: 專案 - 設計應用程式 第 5 部分
            'Lesson 11: Assessment Day':
              key: 課堂 11：評估日
              name: 評估日
          lesson_groups:
            csp_unit3_2020:
              display_name: 單元 3：應用程式設計簡介
        csp4-2022:
          lessons:
            Variables Explore:
              name: 變數探索
              key: 變數探索
            Variables Investigate:
              name: 變數研究
              key: 變數研究
            Variables Practice:
              name: 變數的練習
              key: 變數的練習
            Variables Make:
              name: 變數的建立
              key: 變數的建立
            Conditionals Explore:
              name: 條件式探索
              key: 條件式探索
            Conditionals Investigate:
              name: 條件式研究
              key: 條件式研究
            Conditionals Practice:
              name: 條件判斷的練習
              key: 條件判斷的練習
            Functions Explore / Investigate:
              name: 函式探索 / 研究
              key: 函式探索 / 研究
            Functions Practice:
              name: 函式的練習
              key: 函式的練習
            Functions Make:
              name: 函式的建立
              key: 函式的建立
            Assessment Day:
              name: 評估日
            Conditional Make:
              key: 條件式製作
            Project - Decision Maker App Part 1:
              key: 專案 - 決策者應用程式 第 1 部分
            Project - Decision Maker App Part 2:
              key: 專案 - 決策者應用程式 第 2 部分
            Project - Decision Maker App Part 3:
              key: 專案 - 決策者應用程式 第 3 部分
            'Lesson 15: Assessment Day':
              key: 課堂 15：評估日
              name: 評估日
          lesson_groups:
            csp_variables:
              display_name: 變數
            csp_conditionals:
              display_name: 條件判斷（Conditionals）
            csp_functions:
              display_name: 函式
            csp_project:
              display_name: 專案
        csp5-2022:
          lessons:
            Lists Explore:
              name: 清單探索
              key: 清單探索
            Lists Investigate:
              name: 清單研究
              key: 清單研究
            Lists Practice:
              name: 清單的練習
              key: 清單的練習
            Lists Make:
              name: 清單製作
              key: 清單製作
            Loops Explore:
              name: 迴圈探索
              key: 迴圈探索
            Loops Investigate:
              name: 迴圈研究
              key: 迴圈研究
            Loops Practice:
              name: 迴圈的練習
              key: 迴圈的練習
            Loops Make:
              name: 迴圈製作
              key: 迴圈製作
            Traversals Explore:
              name: 尋訪探索
              key: 尋訪探索
            Traversals Investigate:
              name: 尋訪研究
              key: 尋訪研究
            Traversals Practice:
              name: 遍歷的練習
              key: 遍歷的練習
            Traversals Make:
              name: 尋訪製作
              key: 尋訪製作
            Assessment Day:
              name: 評估日
            Semester Hackathon Part 1:
              key: 學期黑客松 第 1 部分
            Semester Hackathon Part 2:
              key: 學期黑客松 第 2 部分
            Semester Hackathon Part 3:
              key: 學期黑客松 第 3 部分
            Semester Hackathon Part 4:
              key: 學期黑客松 第 4 部分
            Semester Hackathon Part 5:
              key: 學期黑客松 第 5 部分
            'Lesson 18: Assessment Day':
              key: 課堂 18：評估日
              name: 評估日
          lesson_groups:
            csp_lists:
              display_name: 清單
            csp_loops:
              display_name: 迴圈
            csp_traversals:
              display_name: 尋訪
            csp_project:
              display_name: 專案
        courseb-2022:
          lessons:
            Digital Trails:
              description_student: 瞭解自己的數位足跡，並學習怎樣在瀏覽網站時保持安全。
            Move It, Move It:
              name: 移動它，移動它
              description_student: 為你的同學設計程式，讓同學小心翼翼從某處移動到另一處。
              description_teacher: 本課堂會讓學生在心理上準備好程式編寫練習，他們會在整個課程中遇到這些練習。學生會組成小隊，以實體活動為同學設計程式，讓同學從某個位置踏步到踏一個位置，直到到達終點。
              key: 移動它，移動它
            Sequencing with Angry Birds:
              name: 迷宮中的循序（Sequence）
              description_student: 協助憤怒鳥在道路上移動至搗蛋豬的位置。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            Programming with Angry Birds:
              name: 與憤怒鳥一起編程
              description_student: 製作程式，協助憤怒鳥完成迷宮。
              description_teacher: 學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。
            Programming with Harvester:
              name: 和農夫一起學程式
              description_student: 幫助收割者在路上收集蔬菜。
              description_teacher: 學生會把所學到的程式設計概念，應用到收割者遊戲的環境中。現在不僅是讓角色到達終點 - 學生必須使用新的積木收集玉米。他們會繼續建立順序演算法的技巧，並開始運用除錯流程。
            Getting Loopy:
              name: 學習迴圈
              description_student: 在本課堂中，我們會使用重複迴圈舉行舞蹈派對！
              description_teacher: 我們開始設計更長和更有趣味的程式時，程式碼裡通常都會有大量重複內容。在本課堂中，學生會瞭解怎樣使用迴圈，以更簡易的方式傳達含大量重複內容的指令。學生會觀察舞蹈中的重複移動模式。
            Loops with Harvester:
              name: 與農夫一起學迴圈（Loops）
              description_student: 使用迴圈，幫助收割者收集更多農作物！
              description_teacher: 這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集玉米。
            Loops with Laurel:
              name: 與 Laurel 一起學習迴圈
              description_student: 為冒險家 Laurel 編寫程式，讓她能夠在開放的洞穴中收集寶藏。
              description_teacher: 在本課堂中，學生會繼續學習迴圈（loop）的概念。在這裡，冒險家 Laurel 會使用迴圈，在開放的洞穴中收集寶藏。這個時候會介紹新的「get treasure」（取得寶藏）積木，協助她完成旅程。
            Drawing Gardens with Loops:
              name: 使用迴圈（Loop）在花園中繪畫
              description_student: 使用模式與迴圈完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個線上課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，學生會使用迴圈建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            The Right App:
              name: 合適的應用程式
              description_student: 製作你自己的智慧型手機應用程式草稿。
              description_teacher: 本課堂會讓學生明白，電腦可協助現實生活中的大眾。首先，學生會理解一些虛構的智慧型手機使用者，以協助他們找出「合適的應用程式」解決他們的需要。然後，學生會練習同理心與創意，製作自己的智慧型手機應用程式草稿，解決下一位使用者的需要。
              key: 合適的應用程式
            The Big Event Jr:
              name: 小小大事件
              description_student: 老師按下巨型遙控器的按鈕後，你便會移動或是大叫。
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            'Mini-Project: A Royal Battle with Events':
              description_student: 使用事件製作故事或互動遊戲。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            End of Course Project:
              name: 課程結束專案
            Sequencing in Maze:
              key: 迷宮中的陣列（Sequence）
              name: 迷宮中的循序（Sequence）
              description_student: 協助憤怒鳥在道路上移動至搗蛋豬的位置。
              description_teacher: 本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。
            Programming in Maze:
              key: 在迷宮中編程（Programming ）
              name: 與憤怒鳥一起編程
              description_student: 製作程式，協助憤怒鳥完成迷宮。
              description_teacher: 學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。
            Programming in Harvester:
              key: 和農夫一起學程式
              name: 和農夫一起學程式
              description_student: 幫助收割者在路上收集蔬菜。
              description_teacher: 學生會把所學到的程式設計概念，應用到收割者遊戲的環境中。現在不僅是讓角色到達終點 - 學生必須使用新的積木收集玉米。他們會繼續建立順序演算法的技巧，並開始運用除錯流程。
            'Loops: Getting Loopy':
              key: 迴圈：學習迴圈
              name: 學習迴圈
              description_student: 在本課堂中，我們會使用重複迴圈舉行舞蹈派對！
              description_teacher: 我們開始設計更長和更有趣味的程式時，程式碼裡通常都會有大量重複內容。在本課堂中，學生會瞭解怎樣使用迴圈，以更簡易的方式傳達含大量重複內容的指令。學生會觀察舞蹈中的重複移動模式。
            Loops in Harvester:
              key: 與農夫一起學迴圈（Loops）
              name: 與農夫一起學迴圈（Loops）
              description_student: 使用迴圈，幫助收割者收集更多農作物！
              description_teacher: 這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集玉米。
            Loops in Collector:
              key: 和收藏家學迴圈（Loop）
              name: 與 Laurel 一起學習迴圈
              description_student: 為冒險家 Laurel 編寫程式，讓她能夠在開放的洞穴中收集寶藏。
              description_teacher: 在本課堂中，學生會繼續學習迴圈（loop）的概念。在這裡，冒險家 Laurel 會使用迴圈，在開放的洞穴中收集寶藏。這個時候會介紹新的「get treasure」（取得寶藏）積木，協助她完成旅程。
            Loops in Artist:
              key: 藝術家中的迴圈（Loops）
              name: 使用迴圈（Loop）在花園中繪畫
              description_student: 使用模式與迴圈完成圖像。
              description_teacher: 學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個線上課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，學生會使用迴圈建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。
            'Events: The Big Event':
              key: 事件：大事件
              name: 小小大事件
              description_student: 老師按下巨型遙控器的按鈕後，你便會移動或是大叫。
              description_teacher: 事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。
            Events in Play Lab:
              key: Play Lab 中的事件（Event）
              description_student: 使用事件製作故事或互動遊戲。
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            lesson-1:
              key: 第1課
              name: 課程結束專案
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_impacts:
              display_name: 運算的影響
            csf_events:
              display_name: 事件
            lessonGroup-6:
              display_name: 課程結束專案
          student_description: 學習計算機科學以及網路安全的基礎知識，在課程結束後，創造並分享屬於你自己的遊戲或故事。
          description_short: 為學前兒童準備的電腦科學介紹。類似課程 A，但採用更深入的概念。
          description_audience: 年齡 5-8
        coursec-2022:
          lessons:
            My Robotic Friends Jr:
              name: 我的小機器人朋友
              description_student: 在本課堂中，你會假設同學是機器人，然後為他們設計程式，建立杯子堆疊的模式。
              description_teacher: 學生會使用一組符號來代替程式碼，設計演算法指示「機器人」把杯子疊起成不同的模式。學生會輪流扮演機器人，且僅回應同伴定義的演算法。這個部分會教導學生符號和行動關的聯繫、演算法和程式間的分別，以及有用的除錯技巧。
            Programming with Angry Birds:
              name: 與憤怒鳥一起編程
              description_student: 與憤怒鳥一起學習序列與演算法。
              description_teacher: 學生會使用憤怒鳥遊戲中的角色開發序列演算法，讓憤怒鳥能夠從迷宮的一側移動到另一側的豬那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓憤怒鳥向前、向左或是向右移動。
            Debugging in Maze:
              name: 在迷宮中除錯
              description_student: 在謎題中尋找問題，並練習你的除錯技巧。
              description_teacher: 除錯是學習設計程式的重要元素。在本課堂中，學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。
              key: 在迷宮中除錯
            Collecting Treasure with Laurel:
              name: 和 Laurel 一起收集寶石
              description_student: 編寫演算法，幫助探險家 Laurel 收集大量寶石！
              description_teacher: 在這組謎題中，學生會繼續增加對演算法和除錯的瞭解。學生會遇到新角色：探除家 Laurel，並製作序列演算法，讓 Laurel 能夠在道路上行走時收集寶藏。
            Creating Art with Code:
              name: 用代碼創作藝術
              description_student: 為藝術家設計程式，製作漂亮的圖像。
              description_teacher: 在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。
            My Loopy Robotic Friends Jr:
              name: 我的愛迴圈小機器人朋友
              description_student: 在本課堂中，你會再次為同學設計程式，但會使用迴圈（loop），這樣，你便能夠解決更龐大、更複雜的問題。
              description_teacher: 學生會以最初的「我的機器人朋友」活動為基礎，處理更大型且更複雜的設計。為了幫助「機器人」設計程式，以完成這些更大型的設計，學生將需要找出指令裡有哪些重複模式可使用迴圈（loop）取代。
            Loops with Rey and BB-8:
              name: 和 BB-8 與 Rey 一起練習迴圈（Loop）
              description_student: 使用迴圈（loop），幫助 BB-8 完成各個迷宮！
              description_teacher: 這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生用迴圈協助 BB-8 更有效率的遊歷迷宮。
              key: 和 BB-8 與 Rey 一起練習迴圈（Loop）
            Harvesting Crops with Loops:
              name: 使用迴圈（Loop）收割農作物
              description_student: 我們來使用迴圈（loop），幫助收割者收割蔬菜！
            'Mini-Project: Sticker Art':
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
            The Big Event:
              name: 大事件
              description_student: 玩一款有趣的遊戲，學習使用事件。
              description_teacher: 學生很快會知道，事件是很好的方式，在預先編寫好的演算法中增加靈活性。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。事件可讓你的程式更有趣，而且有更多互動。
            Build a Flappy Game:
              name: 製作像素鳥遊戲
              description_student: 以你喜歡的方式隨意製作像素鳥遊戲，並盡情與朋友分享！
              description_teacher: 在這個特別舞台中，學生會開始製作自己的第一款像素鳥遊戲。他們會使用事件處理器偵測滑鼠點擊與物件碰撞。在關卡結束時，學生將能夠自訂遊戲，變更視覺元素或規則。
              key: 製作像素鳥遊戲
            'Mini-Project: Chase Game':
              description_student: 是時候發揮創意，在 Play Lab 中製作遊戲！
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            Picturing Data:
              name: 描繪資料
              description_student: 資料可用來幫助學生瞭解自己的世界，並解答有趣的問題。在本課堂中，學生會收集一個 Play Lab 專案的資料，並使用不同類型的圖表將資料視覺化。
              description_teacher: 資料可用來幫助學生瞭解自己的世界，並解答有趣的問題。在本課堂中，學生會收集一個 Play Lab 專案的資料，並使用不同類型的圖表將資料視覺化。
              key: 描繪資料
            Binary Bracelets:
              name: 二進制手環
              description_student: 製作屬於你自己的二進制手環，並學習電腦怎樣記得資訊！
              description_teacher: 二進制在電腦世界中極為重要。現代的大多數電腦都會以二進制形式儲存所有類型的資訊。本課堂會協助展示：怎樣能夠把現實世界的東西，轉換成一系列的開/關。
              key: 二進制手環
            End of Course Project:
              name: 課程結束專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
              description_teacher: 本總結課堂會引導學生重溫設計、開發與展示 Play Lab 專案的流程！為了確保流程順暢，我們已提供循序漸進的結構，方面學生按照結構工作 - 從紙張上計畫到在我們的網站上編寫程式。此外，我們也提供多種構思，協助教師完成最終展示！
            'Programming: My Robotic Friends':
              key: 程式設計：我的機器人朋友
              name: 我的小機器人朋友
              description_student: 在本課堂中，你會假設同學是機器人，然後為他們設計程式，建立杯子堆疊的模式。
              description_teacher: 學生會使用一組符號來代替程式碼，設計演算法指示「機器人」把杯子疊起成不同的模式。學生會輪流扮演機器人，且僅回應同伴定義的演算法。這個部分會教導學生符號和行動關的聯繫、演算法和程式間的分別，以及有用的除錯技巧。
            Programming in Maze:
              key: 在迷宮中編程（Programming ）
              name: 與憤怒鳥一起編程
              description_student: 與憤怒鳥一起學習序列與演算法。
              description_teacher: 學生會使用憤怒鳥遊戲中的角色開發序列演算法，讓憤怒鳥能夠從迷宮的一側移動到另一側的豬那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓憤怒鳥向前、向左或是向右移動。
            Programming in Collector:
              key: 和收藏家學編程（Program）
              name: 和 Laurel 一起收集寶石
              description_student: 編寫演算法，幫助探險家 Laurel 收集大量寶石！
              description_teacher: 在這組謎題中，學生會繼續增加對演算法和除錯的瞭解。學生會遇到新角色：探除家 Laurel，並製作序列演算法，讓 Laurel 能夠在道路上行走時收集寶藏。
            Programming in Artist:
              key: 在藝術家中學習程式設計
              name: 用代碼創作藝術
              description_student: 為藝術家設計程式，製作漂亮的圖像。
              description_teacher: 在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。
            'Loops: My Loopy Robotic Friends':
              key: 迴圈：我的愛迴圈機器人朋友
              name: 我的愛迴圈小機器人朋友
              description_student: 在本課堂中，你會再次為同學設計程式，但會使用迴圈（loop），這樣，你便能夠解決更龐大、更複雜的問題。
              description_teacher: 學生會以最初的「我的機器人朋友」活動為基礎，處理更大型且更複雜的設計。為了幫助「機器人」設計程式，以完成這些更大型的設計，學生將需要找出指令裡有哪些重複模式可使用迴圈（loop）取代。
            Loops in Harvester:
              key: 與農夫一起學迴圈（Loops）
              name: 使用迴圈（Loop）收割農作物
              description_student: 我們來使用迴圈（loop），幫助收割者收割蔬菜！
            Sticker Art with Loops:
              key: 使用迴圈（Loop）繪畫貼紙藝術
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
            'Events: The Big Event':
              key: 事件：大事件
              name: 大事件
              description_student: 玩一款有趣的遊戲，學習使用事件。
              description_teacher: 學生很快會知道，事件是很好的方式，在預先編寫好的演算法中增加靈活性。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。事件可讓你的程式更有趣，而且有更多互動。
            Events in Play Lab:
              key: Play Lab 中的事件（Event）
              description_student: 是時候發揮創意，在 Play Lab 中製作遊戲！
              description_teacher: 在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！
            'End of Course Project: Create a Play Lab Game':
              name: 課程結束專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
              description_teacher: 本總結課堂會引導學生重溫設計、開發與展示 Play Lab 專案的流程！為了確保流程順暢，我們已提供循序漸進的結構，方面學生按照結構工作 - 從紙張上計畫到在我們的網站上編寫程式。此外，我們也提供多種構思，協助教師完成最終展示！
          lesson_groups:
            csf_digcit:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
            csf_data:
              display_name: 數據
            end_of_course_project:
              display_name: 課程結束專案
          student_description: 以序列、迴圈與事件製作程式。將你的姓名首字母轉換成二進制碼，瞭解不同的問題解決技巧，以及學習怎樣應付網路欺凌。在課程結束時，你可創造出自己的遊戲或故事，然後向別人分享！
          description_short: 學習基本的計算機科學，創造屬於你自己的藝術、故事、遊戲作品。
          description_audience: 年齡 6-10
        csp6-2022:
          lessons:
            Algorithms Solve Problems:
              name: 用演算法解決問題
              key: 用演算法解決問題
            Algorithm Efficiency:
              name: 演算法效率
              key: 演算法效率
            Unreasonable Time:
              name: 不合理的執行時間
              key: 不合理的執行時間
            The Limits of Algorithms:
              name: 演算法的限制
              key: 演算法的限制
            Parallel and Distributed Algorithms:
              name: 平行與分散式演算法
              key: 平行與分散式演算法
            Assessment Day:
              name: 評估日
            'Lesson 6: Assessment Day':
              key: 課堂 6：評估日
              name: 評估日
          lesson_groups:
            csp_unit6_2020:
              display_name: 單元 6：演算法
        csp7-2022:
          lessons:
            Parameters and Return Explore:
              name: 參數與回傳探索
              key: 參數與回傳探索
            Parameters and Return Investigate:
              name: 參數與回傳研究
              key: 參數與回傳研究
            Parameters and Return Practice:
              name: 參數與回傳練習
              key: 參數與回傳練習
            Parameters and Return Make:
              name: 參數與回傳製作
              key: 參數與回傳製作
            Libraries Explore:
              name: 函式庫探索
              key: 函式庫探索
            Libraries Investigate:
              name: 函式庫研究
              key: 函式庫研究
            Libraries Practice:
              name: 函式庫練習
              key: 函式庫練習
            Assessment Day:
              name: 評估日
            Project - Make a Library Part 1:
              key: 專案 - 製作函式庫 第 1 部分
            Project - Make a Library Part 2:
              key: 專案 - 製作函式庫 第 2 部分
            Project - Make a Library Part 3:
              key: 專案 - 製作函式庫 第 3 部分
            'Lesson 11: Assessment Day':
              key: 課堂 11：評估日
              name: 評估日
          lesson_groups:
            csp_parameters_return_values:
              display_name: 參數及函數回傳值
            csp_libraries:
              display_name: 程式庫
        csp8-2022:
          lessons:
            Create PT - Review the Task:
              key: 建立 PT - 檢閱任務
            lesson-4:
              key: 第4課
            Create PT - Make a Plan:
              key: 建立 PT - 制定計畫
            Create PT - Complete the Task:
              key: 建立 PT - 完成任務
        csp9-2022:
          lessons:
            Exploring One Column:
              name: 學習 1 個欄
              key: 學習 1 個欄
            Filtering and Cleaning Data:
              name: 篩選與清理資料
              key: 篩選與清理資料
            Exploring Two Columns:
              name: 學習 2 個欄
              key: 學習 2 個欄
            Machine Learning:
              name: 機器學習
            Assessment Day:
              name: 評估日
            Learning From Data:
              key: 從資料中學習
            Big Data, Crowdsourcing, and Machine Learning:
              key: 大數據、群眾外包與機器學習
            Machine Learning and Bias:
              key: 機器學習與偏見
              name: 機器學習
            lesson-10:
              key: 第10課
            Project - Tell a Data Story - Part 1:
              key: 專案 - 訴說關於資料的故事 - 第 1 部分
            Project - Tell a Data Story - Part 2:
              key: 專案 - 訴說關於資料的故事 - 第 2 部分
            'Lesson 9: Assessment Day':
              key: 課堂 9：評估日
              name: 評估日
          lesson_groups:
            csp_unit9_2020:
              display_name: 單元 9：資料
        csp10-2022:
          lessons:
            Data Policies and Privacy:
              name: 資料政策與隱私
              key: 資料政策與隱私
            The Value of Privacy:
              name: 隱私的價值
              key: 隱私的價值
            Security Risks Part 1:
              name: 安全風險第 1 部分
              key: 安全風險第 1 部分
            Security Risks Part 2:
              name: 安全風險第 2 部分
              key: 安全風險第 2 部分
            Protecting Data Part 1:
              name: 保護資料第 1 部分
              key: 保護資料第 1 部分
            Protecting Data Part 2:
              name: 保護資料第 2 部分
              key: 保護資料第 2 部分
            Project   Innovation Simulation Part 6:
              description_student: 教學內容概覽
            Project   Innovation Simulation Part 7:
              description_student: 教學內容概覽
            Assessment Day:
              name: 評估日
            Project - Innovation Simulation Part 1:
              key: 專案 - 創新模擬 第 1 部分
            Project - Innovation Simulation Part 2:
              key: 專案 - 創新模擬 第 2 部分
            Project - Innovation Simulation Part 3:
              key: 專案 - 創新模擬 第 3 部分
            'Project: Innovation Simulation Part 4':
              key: 專案：創新模擬 第 4 部分
            'Project: Innovation Simulation Part 5':
              key: 專案：創新模擬 第 5 部分
            'Project: Innovation Simulation Part 6':
              key: 專案：創新模擬 第 6 部分
              description_student: 教學內容概覽
            'Project: Innovation Simulation Part 7':
              key: 專案：創新模擬 第 7 部分
              description_student: 教學內容概覽
            'Lesson 14: Unit Assessment Day':
              key: 課堂 14：單元評估日
              name: 評估日
          lesson_groups:
            csp_unit10_2020:
              display_name: 單元 10：網路安全與全球影響
        coursed-2022:
          lessons:
            Password Power-Up:
              description_student: 在本課堂中，你會瞭解密碼可怎樣保護你的資訊，以及怎樣才算是好的密碼。
            Graph Paper Programming:
              name: 方格紙編程
              description_student: 在本課堂中，你會為同學設計程式，讓同學能夠畫畫！
              description_teacher: 學生會互相為對方「設計程式」繪畫，從而有機會以有趣且無障礙的方式，體驗程式設計中的一些核心概念。班級課堂開始時，首先會讓學生使用符號，互相指導對方在方格紙上的正方形裡填色，以重現出現有的圖片。如果時間允許，課堂結束時可以讓學生自行創作圖像。
            Introduction to Online Puzzles:
              name: 線上謎題簡介
              description_student: 本課堂會讓你練習本課程中需要的技巧。
              description_teacher: 在這組謎題中，首先會向學生簡介（或重溫，視你的班級經驗而定） Code.org 的線上工作區。我們有各種影片指出工作區的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕。這些影片也會說明怎樣拖曳 Blockly 積木、刪除 Blockly 積木與連接 Blockly 積木。之後，學生會在迷宮裡練習_序列_與_除錯_技巧。接著，學生會在學習_迴圈_的基本知識時看到一些新的謎題類型，例如收藏家、藝術家與收割者。
              key: 線上謎題簡介
            Relay Programming:
              name: 接力編程
              description_student: 還記得課程開始時，你使用程式碼繪畫嗎？在本課堂中，你會與一個團隊合作，做一些類似的事情！
              key: 接力編程
            Debugging with Laurel:
              name: 和 Laurel 學除錯（Debug）
              description_student: 在編寫程式時，你是否遇到過問題？在本課堂中，你會學習除錯的秘密。除錯是找出並解決程式碼問題的流程。
              description_teacher: 在這項線上活動中，學生會在「收藏家」環境中練習除錯。他們會練習閱讀與編輯程式碼，從而使用簡單的演算法、迴圈（loop）與巢狀迴圈（nested loop），修正謎題中的錯誤。
            Events in Bounce:
              name: 彈板遊戲中的事件（Event）
              description_student: 有沒有想過，你可以在學校玩電子遊戲？在本課堂中，你將有機會製作自己的遊戲！
              description_teacher: 在這項線上活動中，學生會學習甚麼是事件（event），以及電腦怎樣在程式（例如電子遊戲）中使用事件。學生會在各種謎題中，讓程式，對事件做出反應（例如按下箭頭按鈕後）。在謎題結束時，學生將有機會以不同的速度與聲音自訂遊戲。
              key: 彈板遊戲中的事件（Event）
            Build a Star Wars Game:
              name: 創建一個星際大戰遊戲！
              description_student: 在本課堂中，建立自己的星際大戰遊戲，感受原力的震撼！
              description_teacher: 在本課堂中，學生會練習使用事件（event）製作遊戲，並可在線上分享。在 R2-D2 和其他星際大戰的角色陪伴下，學生會在引導下學習各種事件，然後自由製作屬於自己的遊戲。
              key: 創建一個星際大戰遊戲！
            Dance Party:
              name: 舞蹈派對
              description_student: 現在是時候慶祝一下了！你會在本課堂中編寫程式，製作自己的互動舞蹈派對。
              description_teacher: 在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。
              key: 舞蹈派對
            Loops in Ice Age:
              name: 冰河歷險紀中的迴圈
              description_student: 在本課堂中，你會使用 repeat（重複）積木，協助鼠奎特以最有效率的方式拿到橡樹果實。
              description_teacher: 這個舞台是使用迴圈（loop）的快速更新（或簡介），會讓學生使用「repeat」（重複）積木，讓鼠奎特以更有效率的方式拿到橡樹果實。
              key: 冰河歷險紀中的迴圈
            Drawing Shapes with Loops:
              name: 以迴圈（Loop）繪畫藝術作品
              description_student: 在本課堂中，迴圈（loop）讓你更容易在藝術家中製作酷炫的圖像！
              description_teacher: 本課堂以學生先前在課堂中對迴圈（loop）的認識為基礎，讓學生有機會真正發揮創意。這項活動也會做為除錯練習，獲得額外的問題解決機會。
            Nested Loops in Maze:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明你在建立巢狀迴圈（nested loop）時會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Conditionals with Cards:
              name: 用撲克牌學習條件判斷（Conditionals）
              description_student: 是時候玩一款遊戲，讓你僅在某些條件下賺到點數！
              key: 用撲克牌學習條件判斷（Conditionals）
            Looking Ahead with Minecraft:
              name: 與 Minecraft 一起展望未來
              description_student: 躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            If/Else with Bee:
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
              description_student: 你已明白甚麼是條件式（conditional）。現在是時候為蜜蜂設計程式，讓蜜蜂在採集蜂蜜與花蜜時使用。
              description_teacher: 到了這個階段，學生已設計了程式，讓程式每次都使用相同的方法執行。這種做法十分可靠，不過欠缺點彈性。在本課堂中，班級同學將會開始使用條件式（conditional）編寫程式，讓他們編寫出來的程式，可依據程式遇到的特定條件，以不同方式運作。
            While Loops in Farmer:
              name: 農夫遊戲中的 while（當）迴圈
              description_student: 迴圈（loop）在程式編寫中非用實用。本課堂會教你其中一種：while（當）迴圈！
              key: 農夫遊戲中的 while（當）迴圈
            Until Loops in Maze:
              name: 迷宮裡的 until（直到）迴圈
              description_student: 使用 until（直到）迴圈，你就可成就一些精彩的事情！
              description_teacher: 在本課堂中，學生會學習「until」（直到）迴圈。學生會製作程式，讓主角重複動作，「直到」主角到達所需的停駐點。
              key: 迷宮裡的 until（直到）迴圈
            End of Course Project:
              name: 課程結束專案
              description_student: 準備就緒，開始編寫大量程式！是時候開始製作你的專案了。
              key: 課程結束專案
            lesson-5:
              key: 第5課
              description_student: 在本課堂中，你會瞭解密碼可怎樣保護你的資訊，以及怎樣才算是好的密碼。
            'Algorithms: Graph Paper Programming':
              key: 演算法：方格紙程式設計
              name: 方格紙編程
              description_student: 在本課堂中，你會為同學設計程式，讓同學能夠畫畫！
              description_teacher: 學生會互相為對方「設計程式」繪畫，從而有機會以有趣且無障礙的方式，體驗程式設計中的一些核心概念。班級課堂開始時，首先會讓學生使用符號，互相指導對方在方格紙上的正方形裡填色，以重現出現有的圖片。如果時間允許，課堂結束時可以讓學生自行創作圖像。
            Debugging in Collector:
              key: 和收藏家學除錯（Debug）
              name: 和 Laurel 學除錯（Debug）
              description_student: 在編寫程式時，你是否遇到過問題？在本課堂中，你會學習除錯的秘密。除錯是找出並解決程式碼問題的流程。
              description_teacher: 在這項線上活動中，學生會在「收藏家」環境中練習除錯。他們會練習閱讀與編輯程式碼，從而使用簡單的演算法、迴圈（loop）與巢狀迴圈（nested loop），修正謎題中的錯誤。
            Loops in Artist:
              key: 藝術家中的迴圈（Loops）
              name: 以迴圈（Loop）繪畫藝術作品
              description_student: 在本課堂中，迴圈（loop）讓你更容易在藝術家中製作酷炫的圖像！
              description_teacher: 本課堂以學生先前在課堂中對迴圈（loop）的認識為基礎，讓學生有機會真正發揮創意。這項活動也會做為除錯練習，獲得額外的問題解決機會。
            Nested Loops in Bee:
              key: 蜜蜂裡的巢狀迴圈（Nested Loops）
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明你在建立巢狀迴圈（nested loop）時會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            lesson-6:
              key: 第6課
              name: 與 Minecraft 一起展望未來
              description_student: 躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
            Conditionals in Bee:
              key: 在蜜蜂遊戲中的條件式（Conditional）
              name: 與小蜜蜂一起嘗試 If/Else（如果/否則）
              description_student: 你已明白甚麼是條件式（conditional）。現在是時候為蜜蜂設計程式，讓蜜蜂在採集蜂蜜與花蜜時使用。
              description_teacher: 到了這個階段，學生已設計了程式，讓程式每次都使用相同的方法執行。這種做法十分可靠，不過欠缺點彈性。在本課堂中，班級同學將會開始使用條件式（conditional）編寫程式，讓他們編寫出來的程式，可依據程式遇到的特定條件，以不同方式運作。
          lesson_groups:
            lessonGroup-6:
              display_name: 數位公民
            csf_sequencing:
              display_name: 序列
            csf_events:
              display_name: 事件
            csf_loops:
              display_name: 迴圈
            csf_conditionals:
              display_name: 條件判斷（Conditionals）
            end_of_course_project:
              display_name: 課程結束專案
          title: 課程 D（2021）
          description_short: 學習條件式陳述句。你可製作自己的藝術品、遊戲，甚至舞蹈派對！
          description_audience: 年齡 7-11
        coursee-2022:
          lessons:
            Follow the Algorithm:
              description_student: 玩一款遊戲，想想需要使用哪些命令才可獲得正確的結果。
              description_teacher: 在本課堂中，學生會玩一款遊戲，目的是讓他們思考一下，需要以甚麼方式提供命令，才可獲得正確的結果。這樣就可幫助他們更容易在往後的課堂中過渡到 Sprite Lab。
            Swimming Fish with Sprite Lab:
              name: Sprite Lab 中的游泳小魚
              description_student: 學習建立與編輯角色（sprite）。
              description_teacher: 在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。
            Alien Dance Party with Sprite Lab:
              name: 用 Sprite Lab 創作外星人舞蹈派對
              description_student: 製作可與同學分享的互動專案。
              description_teacher: 本課堂會介紹 Sprite Lab，這是一個工作平台，讓學生可在這裡製作自己的互動式動畫和遊戲。除了「行為」外，學生今天會結合做為「事件」的使用者輸入，以製成「外星人舞蹈派對」。
              key: 用 Sprite Lab 創作外星人舞蹈派對
            Private and Personal Information:
              name: 隱私與個人資訊
              description_student: 網際網路刺激有趣，但是也有必要保持安全！本課堂會教你有哪些資訊可安全分享，有哪些資訊則應保持私密。
              key: 隱私與個人資訊
            'Mini-Project: About Me':
              name: 關於我
              description_student: 學生會使用 SpriteLab 製作互動海報，從而應用在網際網路上分享個人與私人資訊的知識。
            Digital Sharing:
              name: 數位分享
              description_student: 在本課堂中，你會學到所有權與著作權方面的挑戰與優點。
              key: 數位分享
            Drawing with Loops:
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Fancy Shapes using Nested Loops:
              description_student: 更多巢狀迴圈（nested loop）！這一次，你將能夠使用巢狀迴圈製作一些非常漂亮的圖畫！
            'Mini-Project: Design a Snowflake':
              description_student: 安娜與艾莎的滑冰技術非常出眾，但是需要你的協助，在冰上建立模式。請使用巢狀迴圈（nested loop）製作非常酷炫的效果！
            Songwriting:
              name: 歌曲創作
              description_student: 即使是搖滾巨星也需要程式設計技巧。本課堂會用歌曲裡的歌詞教授函式。
              description_teacher: 在電腦科學世界中，函式（function）可以說是最壯觀的結構之一。函式有時候稱為程序，是在龐大的程式中的一些迷你程式，可以不斷重複利用。本課堂將會幫助學生直觀的瞭解，為甚麼把這麼多零碎的程式碼組合成函式是非常有用的做法。
            Functions in Minecraft:
              name: Minecraft 中的函式
              description_student: 你能指出要如何利用函式提高編程效率嗎？
              description_teacher: 在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！
              key: Minecraft 中的函式
            Functions with Artist:
              name: 在藝術家遊戲中使用函式（Function）
              description_student: 使用函式，以更簡易的方式繪畫複雜的圖畫！
              description_teacher: 學生會在藝術家遊戲中學習使用函式（function）。他們會製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'Minecraft 中的條件式：水上巡航 '
              description_student: 你會在 Minecraft 的世界裡學習條件式。
              description_teacher: 本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！
              key: 'Minecraft 中的條件式：水上巡航 '
            Conditionals with the Farmer:
              name: 與農夫一起嘗試條件式（Conditional）
              description_student: 在這個有趣而具挑戰的遊戲系列中，你會告訴電腦在某些特定條件下如何行動。
              description_teacher: 本課堂會向學生介紹「while」（當）迴圈與「if / else」（如果/否則）陳述句。_While 迴圈_ 用於在條件是 true 時繼續重複命令。While 迴圈的使用情況是：程式設計師不知道命令確實需要重複多少次，但是知道哪項條件需要為 true，才可讓迴圈繼續重複。「If / Else」陳述句為程式設計提供彈性，程式僅會在某個項目為 true 時執行整個部分，否則便會執行其他項目。
            Functions with Harvester:
              name: 在收割者遊戲中學習函式（Function）
              description_student: 協助農夫收割農作物時，函式（function）可為你省下大量工夫！
              description_teacher: 學生已練習在藝術家遊戲中製作精彩的設計，並在蜜蜂遊戲中遊走，但他們今天會使用函式（function），在收割者遊戲中收割農作物。本課堂會鼓勵學生以新的方式使用函式：把函式和「while」（當）迴圈與「if/else」（如果/否則）陳述句結合起來。
            Designing for Accessibility:
              name: 以無障礙為目的設計程式
              description_teacher: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
            End of Course Project:
              name: 課程結束專案
              description_student: 這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！
              description_teacher: |-
                接下來的 4 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是多個課堂或多個星期的體驗，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。\\r
                \\r
                在探索階段中，學生將會試玩預先製作完成的藝術家與 Sprite Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家、Sprite Lab 或其他他們熟悉的介面中製作自己的專案（這可能是專案中最長的階段）。最後，學生將能夠向同伴展示自己的成品。
              key: 課程結束專案
            Simon Says:
              key: 老師說
              description_student: 玩一款遊戲，想想需要使用哪些命令才可獲得正確的結果。
              description_teacher: 在本課堂中，學生會玩一款遊戲，目的是讓他們思考一下，需要以甚麼方式提供命令，才可獲得正確的結果。這樣就可幫助他們更容易在往後的課堂中過渡到 Sprite Lab。
            Learning Sprites with Sprite Lab:
              key: 在 Sprite Lab 中學習角色（Sprite）
              name: Sprite Lab 中的游泳小魚
              description_student: 學習建立與編輯角色（sprite）。
              description_teacher: 在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。
            lesson-4:
              key: 第4課
            About Me:
              key: 關於我
              name: 關於我
              description_student: 學生會使用 SpriteLab 製作互動海報，從而應用在網際網路上分享個人與私人資訊的知識。
            Programming and Loops with the Artist:
              key: 用藝術家設計程式並練習迴圈（Loop）
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Nested Loops in Artist:
              key: 小藝術家裡的巢狀迴圈（Nested Loops）
              description_student: 更多巢狀迴圈（nested loop）！這一次，你將能夠使用巢狀迴圈製作一些非常漂亮的圖畫！
            Nested Loops in Frozen:
              key: 冰雪奇緣中的巢狀迴圈（Nested Loop）
              description_student: 安娜與艾莎的滑冰技術非常出眾，但是需要你的協助，在冰上建立模式。請使用巢狀迴圈（nested loop）製作非常酷炫的效果！
            'Functions: Songwriting':
              key: 函式：作曲
              name: 歌曲創作
              description_student: 即使是搖滾巨星也需要程式設計技巧。本課堂會用歌曲裡的歌詞教授函式。
              description_teacher: 在電腦科學世界中，函式（function）可以說是最壯觀的結構之一。函式有時候稱為程序，是在龐大的程式中的一些迷你程式，可以不斷重複利用。本課堂將會幫助學生直觀的瞭解，為甚麼把這麼多零碎的程式碼組合成函式是非常有用的做法。
            Functions in Artist:
              key: 藝術家遊戲中的函式（Function）
              name: 在藝術家遊戲中使用函式（Function）
              description_student: 使用函式，以更簡易的方式繪畫複雜的圖畫！
              description_teacher: 學生會在藝術家遊戲中學習使用函式（function）。他們會製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。
            Conditionals:
              key: 條件判斷（Conditionals）
              name: 與農夫一起嘗試條件式（Conditional）
              description_student: 在這個有趣而具挑戰的遊戲系列中，你會告訴電腦在某些特定條件下如何行動。
              description_teacher: 本課堂會向學生介紹「while」（當）迴圈與「if / else」（如果/否則）陳述句。_While 迴圈_ 用於在條件是 true 時繼續重複命令。While 迴圈的使用情況是：程式設計師不知道命令確實需要重複多少次，但是知道哪項條件需要為 true，才可讓迴圈繼續重複。「If / Else」陳述句為程式設計提供彈性，程式僅會在某個項目為 true 時執行整個部分，否則便會執行其他項目。
            Functions in Harvester:
              key: 收割者遊戲中的函式（Function）
              name: 在收割者遊戲中學習函式（Function）
              description_student: 協助農夫收割農作物時，函式（function）可為你省下大量工夫！
              description_teacher: 學生已練習在藝術家遊戲中製作精彩的設計，並在蜜蜂遊戲中遊走，但他們今天會使用函式（function），在收割者遊戲中收割農作物。本課堂會鼓勵學生以新的方式使用函式：把函式和「while」（當）迴圈與「if/else」（如果/否則）陳述句結合起來。
            lesson-1:
              key: 第1課
              name: 以無障礙為目的設計程式
              description_teacher: 在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。
            'Hello World: Food':
              name: 你好世界
              description_student: 在這個課程中，你將學習創建和動畫化精靈圖，並使用事件使它們互動。
              description_teacher: 在這個**技能建設**課程中，你將學習創建和動畫化精靈圖，並使用事件使它們互動。
          lesson_groups:
            csf_sprites:
              display_name: 角色
            csf_digcit:
              display_name: 數位公民
            ramp_up:
              display_name: 巢狀迴圈
            csf_functions:
              display_name: 函式
            csf_nested_loops:
              display_name: 條件判斷（Conditionals）
            lessonGroup-7:
              display_name: 運算的影響
            end_of_course_project:
              display_name: 課程結束專案
          description_audience: 年齡 8-12
        coursef-2022:
          lessons:
            Introducing Sprite Lab:
              name: Sprite Lab 簡介
            Making Sprites:
              name: 製作精靈圖
            Sprites in Action:
              name: 運行中的角色
            'Mini-Project: Virtual Pet':
              name: '小專案: 虛擬寵物'
              description_student: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              description_teacher: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
            The Power of Words:
              name: 語言的力量
              description_student: 欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。
            Drawing with Loops:
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Using Variables with the Artist:
              description_student: 在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            Programming with the Bee:
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Variables with the Bee:
              name: 在蜜蜂遊戲中變更變數
              description_student: 這隻蜜蜂很喜愛變數！
              description_teacher: 本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。
            For Loop Fun:
              name: 有趣的計次迴圈
              description_student: 玩「for」（計數）迴圈，發掘無窮樂趣！
              description_teacher: 我們知道迴圈可以讓我們不斷重複的做同一件事情。現在，我們要學習如何使用本身有額外結構的迴圈。這些新結構可讓學生編寫更強大、更具動態的程式碼。
              key: 有趣的計次迴圈
            For Loops with Bee:
              name: 與蜜蜂一起嘗試 for（計數）迴圈
              description_student: 嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！
              description_teacher: 本課堂以蜜蜂為角色，集中學習「for」（計數）迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後觀看 for 迴圈簡介，讓他們可更有效地解決複雜的問題。
            For Loops with Artist:
              name: 藝術家中的計數迴圈（For Loops）
              description_student: 準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。
              description_teacher: 在本課堂中，學生會繼續練習「for」（計數）迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與「for」迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。
            Simulating Experiments:
              name: 模擬實驗
              description_student: 在電腦上執行模擬，並實驗一下變更參數後的情況。
              description_teacher: 在 Sprite Lab 上執行簡單模擬，學生便會體驗到電腦運算可怎樣用來收集資料，從而找出各種趨勢與模式。多次執行模擬後，學生便會有機會預測一下，變更模擬中的變數可能會怎樣影響結果，然後再測試這個假設。
              key: 模擬實驗
            Outbreak:
              name: 疫情爆發
            AI For Oceans:
              name: 在海洋中使用的 AI
            The Internet:
              name: 網際網路
              description_student: 你有沒有想過，資訊怎樣在網際網路中傳輸？不是魔術！本課堂將會教導網際網路運作方面的基本知識。
              description_teacher: 即便許多人每天都會上網，但是理解其中原理的中卻不多。在本課堂中，學生會假裝流經網際網路，同時學習連線、URL、IP 位址與 DNS 的知識。
            End of Course Project:
              name: 課程結束專案
              description_student: 這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！
              key: 課程結束專案
            lesson-6:
              key: 第6課
            lesson-7:
              key: 第7課
              name: 製作精靈圖
            lesson-8:
              key: 第8課
              name: 運行中的角色
            Virtual Pet:
              key: 虛擬寵物
              name: '小專案: 虛擬寵物'
              description_student: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              description_teacher: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
            lesson-2:
              key: 第2課
              name: 語言的力量
              description_student: 欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。
            lesson-9:
              key: 第9課
            lesson-10:
              key: 第10課
            lesson-11:
              key: 第11課
            Loops with the Artist:
              key: 讓畫家進行迴圈操作
              name: 以迴圈（Loop）繪畫
              description_student: 在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！
              description_teacher: 觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。
            Variables that Change in Artist:
              key: 在藝術家遊戲中更改的變數
              description_student: 在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。
              description_teacher: 在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。
            Nested Loops in the Maze:
              key: 迷宮裡的巢狀迴圈（Nested Loop）
              name: 迷宮裡的巢狀迴圈（Nested Loops）
              description_student: 迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。
              description_teacher: 在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。
            Variables that Change in Bee:
              key: 在蜜蜂遊戲中更改的變數
              name: 在蜜蜂遊戲中變更變數
              description_student: 這隻蜜蜂很喜愛變數！
              description_teacher: 本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。
            For Loops in Bee:
              key: 蜜蜂遊戲中的 for（計數）迴圈
              name: 與蜜蜂一起嘗試 for（計數）迴圈
              description_student: 嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！
              description_teacher: 本課堂以蜜蜂為角色，集中學習「for」（計數）迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後觀看 for 迴圈簡介，讓他們可更有效地解決複雜的問題。
            For Loops in Artist:
              key: 藝術家中的計數迴圈（For Loops）
              name: 藝術家中的計數迴圈（For Loops）
              description_student: 準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。
              description_teacher: 在本課堂中，學生會繼續練習「for」（計數）迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與「for」迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。
            lesson-5:
              key: 第5課
            AI for Oceans:
              key: 在海洋中使用的 AI
              name: 在海洋中使用的 AI
            Internet:
              key: 網際網路 Internet
              name: 網際網路
              description_student: 你有沒有想過，資訊怎樣在網際網路中傳輸？不是魔術！本課堂將會教導網際網路運作方面的基本知識。
              description_teacher: 即便許多人每天都會上網，但是理解其中原理的中卻不多。在本課堂中，學生會假裝流經網際網路，同時學習連線、URL、IP 位址與 DNS 的知識。
          lesson_groups:
            ramp_up:
              display_name: 角色
            lessonGroup-7:
              display_name: 數位公民
            lessonGroup-8:
              display_name: 變數
            end_of_course_project:
              display_name: 課程結束專案
          description_short: 學習計算機科學的基礎概念，並創建自己的藝術、故事、遊戲作品。
          description_audience: 年齡 9-13
        csp-post-survey-2021:
          title: 電腦科學原理課後問卷調查
        csa1-2022:
          lessons:
            lesson-2:
              name: Java 實驗室
            lesson-9:
              name: 迴圈
            lesson-21:
              name: 主控台
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        pre-express-2022:
          lessons:
            Learn to Drag and Drop:
              key: 學習滑鼠的拖放
              name: 學習滑鼠的拖放
            Sequencing with Scrat:
              key: 和鼠奎特一起學序列
              name: 和鼠奎特一起學序列
            Programming with Angry Birds:
              key: 與憤怒鳥一起編程
              name: 與憤怒鳥一起編程
            Programming with Rey and BB-8:
              key: 和 BB-8 與 Rey 一起寫程式
              name: 和 BB-8 與 Rey 一起寫程式
            Programming with Harvester:
              key: 和農夫一起學程式
              name: 和農夫一起學程式
            Loops with Scrat:
              key: 和鼠奎特一起學迴圈（Loop）
              name: 和鼠奎特一起學迴圈（Loop）
            Loops with Laurel:
              key: 與 Laurel 一起學習迴圈
              name: 與 Laurel 一起學習迴圈
            Ocean Scene with Loops:
              key: 海洋場景與迴圈（Loop）
              name: 海洋場景與迴圈（Loop）
            Drawing Gardens with Loops:
              key: 使用迴圈（Loop）在花園中繪畫
              name: 使用迴圈（Loop）在花園中繪畫
            On the Move with Events:
              key: 讓事件活動起來
              name: 讓事件活動起來
            A Royal Battle with Events:
              key: 以事件（Event）展開皇家大戰
              name: 以事件（Event）展開皇家大戰
          lesson_groups:
            csf_sequencing:
              display_name: 序列
            csf_loops:
              display_name: 迴圈
            csf_events:
              display_name: 事件
        csa2-2022:
          lessons:
            lesson-5:
              name: 單元 2 評估
            lesson-6:
              name: 變數
            lesson-16:
              name: 主控台
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        csa3-2022:
          lessons:
            lesson-5:
              name: 計次迴圈（For Loops）
            lesson-16:
              name: 主控台
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        tessplayground:
          name: tessplayground
        cs4all-invasive-species:
          lessons:
            lesson-12:
              name: 條件判斷（Conditionals）
            lesson-14:
              name: Minecraft 中的條件式
            lesson-16:
              name: 除錯
            lesson-17:
              name: 專案靈感
            lesson-19:
              name: 除錯
        csa4-2022:
          lessons:
            lesson-2:
              name: 單元 4 評估
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        csa5-2022:
          lessons:
            lesson-2:
              name: 單元 5 評估
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        csa1-2022-exemplars:
          lessons:
            lesson-2:
              name: Java 實驗室
            lesson-9:
              name: 迴圈
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        csa7-pilot-extra:
          lessons:
            Assessment Day:
              name: 評估日
            Java Lab:
              name: Java 實驗室
              key: Java 實驗室
            lesson-10:
              key: 第10課
            lesson-6:
              key: 第6課
            lesson-7:
              key: 第7課
            lesson-8:
              key: 第8課
            lesson-9:
              key: 第9課
            lesson-11:
              key: 第11課
            lesson-12:
              key: 第12課
            lesson-13:
              key: 第13課
            lesson-14:
              key: 第14課
            lesson-15:
              key: 第15課
            lesson-1:
              key: 第1課
            lesson-2:
              key: 第2課
            lesson-3:
              key: 第3課
            lesson-4:
              key: 第4課
            lesson-5:
              key: 第5課
              name: 評估日
            lesson-16:
              key: 第16課
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        csa8-pilot-extra:
          lessons:
            Assessment Day:
              name: 評估日
            Java Lab:
              name: Java 實驗室
              key: Java 實驗室
            lesson-1:
              key: 第1課
            lesson-2:
              key: 第2課
            lesson-3:
              key: 第3課
            lesson-4:
              key: 第4課
            lesson-5:
              key: 第5課
            lesson-10:
              key: 第10課
            lesson-6:
              key: 第6課
            lesson-7:
              key: 第7課
            lesson-8:
              key: 第8課
            lesson-9:
              key: 第9課
            lesson-11:
              key: 第11課
            lesson-12:
              key: 第12課
            lesson-13:
              key: 第13課
            lesson-14:
              key: 第14課
            lesson-15:
              key: 第15課
              name: 評估日
            lesson-16:
              key: 第16課
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        coursef-2022-pilot:
          lessons:
            The Power of Words:
              name: 語言的力量
              description_student: 欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。
              key: 語言的力量
            Introducing Sprite Lab:
              name: Sprite Lab 簡介
              key: Sprite Lab 簡介
            Making Sprites:
              name: 製作精靈圖
              key: 製作精靈圖
            Sprites in Action:
              name: 運行中的角色
              key: 運行中的角色
            'Mini-Project: Virtual Pet':
              name: '小專案: 虛擬寵物'
              description_student: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              description_teacher: 在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！
              key: '小專案: 虛擬寵物'
            Simulating Experiments:
              name: 模擬實驗
              description_student: 在電腦上執行模擬，並實驗一下變更參數後的情況。
              description_teacher: 在 Sprite Lab 上執行簡單模擬，學生便會體驗到電腦運算可怎樣用來收集資料，從而找出各種趨勢與模式。多次執行模擬後，學生便會有機會預測一下，變更模擬中的變數可能會怎樣影響結果，然後再測試這個假設。
              key: 模擬實驗
            Outbreak:
              name: 疫情爆發
              key: 疫情爆發
            AI For Oceans:
              name: 在海洋中使用的 AI
              key: 在海洋中使用的 AI
            The Internet:
              name: 網際網路
              description_student: 你有沒有想過，資訊怎樣在網際網路中傳輸？不是魔術！本課堂將會教導網際網路運作方面的基本知識。
              description_teacher: 即便許多人每天都會上網，但是理解其中原理的中卻不多。在本課堂中，學生會假裝流經網際網路，同時學習連線、URL、IP 位址與 DNS 的知識。
              key: 網際網路
            End of Course Project:
              name: 課程結束專案
              description_student: 這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！
              key: 課程結束專案
          lesson_groups:
            lessonGroup-7:
              display_name: 數位公民
            ramp_up:
              display_name: 角色
            lessonGroup-8:
              display_name: 變數
            end_of_course_project:
              display_name: 課程結束專案
          description_audience: 年齡 9-13
          description_short: 學習計算機科學的基礎概念，並創建自己的藝術、故事、遊戲作品。
        csa6-2022:
          lessons:
            Documenting Program Code:
              description_student: 你在整個課程中所開發的專案已為社群帶來諸多創意！《四鄰燈光節》即將到來，鄰居們將展示創意故事、劇本、歌詞、文字和詩歌。《四鄰燈光節》是一個大型專案，你將在整個單元中參與其中，專案管理戰略板將説明你組織和構建你的創作。你將探索編寫和構建代碼的策略，供其他軟體工程師輕鬆理解和使用Java工具來創建程式文檔。
              description_teacher: 向學生們介紹《四鄰燈光節》專案，並評估要求和示例，明確其中的問題和關鍵特徵。在著手專案之前，學生們透過確定最佳實踐和探索如何使用Javadoc生成程式文檔，來擴展他們對程式結構和注釋的理解。
            Exploring Integer and Double Objects:
              description_student: 你將構建`Integer`和`Double`物件來將`int`和`double`原始值表示為參考值。使用`Integer`和`Double`類中的方法，你可以返回這些物件存儲為原始值的值。 在規劃《四鄰燈光節》所需的籌備任務前，你還將探索整數的最小和最大值，以避免溢出錯誤。
              description_teacher: 學生們將構建`Integer`和`Double`對象來將`int`和`double`原始值表示為參考值。使用`Integer`和`Double`類中的方法，學生們可以返回這些物件存儲為原始值的值。 在規劃《四鄰燈光節》所需的籌備任務前，學生們還將探索整數的最小和最大值，以避免溢出錯誤。
            Using ArrayLists to Store Data:
              description_student: 在處理陣列和清單時，我們有時會遇到元素數量未知或清單大小不斷變化的問題。在本節課中，你將學習`ArrayList`結構，並明確這種資料結構較適宜的場景。
              description_teacher: 學生們將創建`ArrayList`來存儲`int`和`double`值。學生們區分`ArrayList`和一維陣列，以確定某個特定場景下最適宜的資料結構。 學生們將向`ArrayList`中添加元素，並在處理存儲的資料時，學習如何在原始值和包裝類之間進行自動裝箱轉換。
            Working with ArrayList Data:
              description_student: 你將使用`ArrayList`方法`get()`和`set()`，來檢索和修改元素，並學習`String`方法`length()`，來計算`String`物件中的字元數。你將應用在一維和二維陣列中所開發出的標準演算法來修改`ArrayList`中的元素。你將在處理存儲在`ArrayList`中的資料時，學習如何在原始值和包裝類之間執行拆箱轉換。
              description_teacher: 學生們將使用`ArrayList`方法`get()`和`set()`，來檢索和修改元素，並學習`String`方法`length()`，來返回`String`物件中的字元數。他們將應用在一維和二維陣列中所開發出的標準演算法來修改`ArrayList`中的元素。學生們將在處理存儲在`ArrayList`中的資料時，學習如何在原始值和包裝類之間執行拆箱轉換。
            Storing Objects in an ArrayList:
              description_student: 到目前為止，你已經創建了`ArrayList`來存儲`Integer`、`Double`和`String`。與一維和二維陣列一樣，你也可以將創建的物件存儲在`ArrayList`中。在本節課中，你將創建一個物件的`ArrayList`，以應用你在全年中所使用的標準演算法來處理存儲在此清單中的資料。
              description_teacher: 學生將創建`ArrayList`來存儲物件，並學習Java中的通用類型。學生們將一維陣列中所學到的演算法應用於`ArrayList`，以查找最小值和最大值、計算總和及平均值，或找出滿足特定條件的元素。
            Removing Data from an ArrayList:
              description_student: 你將探索`ArrayList`類中的`remove()`方法的功能，並在遍歷該列表的過程中，在嘗試刪除專案時識別出潛在的錯誤。在此過程中，你會認識到`ArrayList`在哪種情況下最適合某個場景或問題。
              description_teacher: 學生們將探索`ArrayList`類中的`remove()`方法的功能，並在遍歷該列表的過程中，在嘗試刪除專案時識別出潛在的錯誤。學生們會認識到`ArrayList`在哪種情況下最適合某個場景或問題。
            Using String Methods:
              description_student: 你將探索`String`結構，了解`String`屬於物件。你將使用`indexOf()`和`substring()`方法來搜索`String`中的子字串，並從當前`String`中創建新的`String`物件。
              description_teacher: 學生們將探索`String`結構，了解`String`屬於物件。學生們將使用`indexOf()`和`substring()`方法來搜索`String`中的子字串，並從當前`String`中創建新的`String`物件。
            Comparing Strings:
              description_student: 你將探索如何使用`compareTo()`，來檢查`String`是否按字母順序排列。然後，你將啟動《四鄰燈光節》專案，特別留意專案規劃板上的任務。
              description_teacher: 學生們將探索如何使用`compareTo()`，來檢查`String`是否按字母順序排列。然後，學生們將啟動《四鄰燈光節》專案，特別留意專案規劃板上的任務。
            Solving Problems with Strings:
              description_student: 你將綜合標準演算法和`String`的知識，來檢查`String`是否是回文串。然後，你將參加同行評議會話，並反思《四鄰燈光節》項目的進展。
              description_teacher: 學生們將綜合標準演算法和`String`的知識，來檢查`String`是否是回文串。然後，學生們將參加同行評議會話，並反思各自《四鄰燈光節》項目的進展。
            Solving Problems with ArrayLists:
              description_student: 你將在一維陣列和二維陣列中所編寫的標準演算法應用於`ArrayList`。你將應用新的標準演算法，從整數中獲取單個數位，然後修改和應用之前的演算法，以交換元素、刪除重複項，或在《四鄰燈光節》專案中查找符合特定條件的元素。
              description_teacher: 學生們將在一維陣列和二維陣列中所編寫的標準演算法應用於`ArrayList`。學生們將應用新的標準演算法，從整數中獲取單個數位，然後修改和應用之前的演算法，以交換元素、刪除重複項，或在《四鄰燈光節》專案中查找符合特定條件的元素。
            Neighborhood Lit Fest Project - Day 1:
              name: "《四鄰燈光節》項目 - 第1天"
              description_student: 你將繼續開發自己的《四鄰燈光節》專案，參照最喜歡的作家或藝術家的作品鑒賞來創作故事、詩歌、歌曲或其他形式的文學作品。首先你將自我測評自己的作品，按照專案完成要求評估進度情況，然後針對專案中的某個功能編寫驗收標準，供同行測試。你借助自我評估和同行評議的形式，確定剩餘任務的優先順序，並繼續開發自己的專案。
              description_teacher: 學生們將繼續開發自己的《四鄰燈光節》專案，參照最喜歡的作家或藝術家的作品鑒賞來創作故事、詩歌、歌曲或其他形式的文學作品。首先學生們將自我測評自己的作品，按照專案完成要求評估進度情況，然後針對專案中的某個功能編寫驗收標準，供同行測試。學生們借助自我評估和同行評議的形式，確定剩餘任務的優先順序，並繼續開發自己的專案。
              key: "《四鄰燈光節》項目 - 第1天"
            Neighborhood Lit Fest Project - Day 2:
              name: "《四鄰燈光節》項目 - 第2天"
              description_student: 在上一課中，你已經完成了自我測評，並為自己的項目編寫了驗收標準。在本節課中，你將獲得同行評議，以確定待完成的剩餘任務並繼續開發自己的《四鄰燈光節》專案。
              description_teacher: 在上一課中，學生們已經完成了自我測評，並為自己的項目編寫了驗收標準。在本節課中，學生們將獲得同行評議，以確定待完成的剩餘任務並繼續開發自己的《四鄰燈光節》專案。
              key: "《四鄰燈光節》項目 - 第2天"
            Neighborhood Lit Fest Project - Day 3:
              name: "《四鄰燈光節》項目 - 第3天"
              description_student: 你根據代碼審查和專案規劃板，完成最終的修改和更新任務。你將與同行分享各自的《四鄰燈光節》項目。隨後，你將慶祝自己大功告成，並對自己的開發進度作出最後的反思。
              description_teacher: 學生們根據代碼審查和專案規劃板，完成最終的修改和更新任務。學生們將與同行分享各自的《四鄰燈光節》項目。隨後，學生們將慶祝自己大功告成，並對自己的開發進度作出最後的反思。
              key: "《四鄰燈光節》項目 - 第3天"
            Assessment Day:
              name: 評估日
              description_student: 在本單元中，你將使用`ArrayList`來存儲程式資料，並區分何時使用一維陣列、二維陣列及`ArrayList`。你將使用`ArrayList`來解決涉及數值和物件資料的問題，借此探索該資料結構的優勢和功能。你將使用`String`類中的方法來分析和處理來自使用者和檔輸入中的文本。在整個單元中，你將使用單行注釋、多行注釋和Javadoc注釋編寫程式文檔，以創建API文檔。在此過程中，你將確定並記錄物件和方法的前置條件和後置條件。此外，你將接受多選題測驗，來評估本單元學習目標和技能的掌握情況。
              description_teacher: 在本單元中，學生們將使用`ArrayList`來存儲程式資料，並區分何時使用一維陣列、二維陣列及`ArrayList`。學生們將使用`ArrayList`來解決涉及數值和物件資料的問題，借此探索該資料結構的優勢和功能。學生們將使用`String`類中的方法來分析和處理來自使用者和檔輸入中的文本。在整個單元中，學生們將使用單行注釋、多行注釋和Javadoc注釋編寫程式文檔，以創建API文檔。在此過程中，學生們將確定並記錄物件和方法的前置條件和後置條件。此外，學生們將接受多選題測驗，來評估本單元學習目標和技能的掌握情況。
              key: 評估日
            Java Lab:
              name: Java 實驗室
              key: Java 實驗室
            lesson-1:
              key: 第1課
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        csa7-2022:
          lessons:
            Assessment Day:
              name: 評估日
              key: 評估日
            Java Lab:
              name: Java 實驗室
              key: Java 實驗室
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        csa8-2022:
          lessons:
            Assessment Day:
              name: 評估日
              key: 評估日
            Java Lab:
              name: Java 實驗室
              key: Java 實驗室
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
            lessonGroup-5:
              display_name: 沙盒
        vpl-csd1-summer-pilot-2022:
          lessons:
            lesson-1:
              name: 歡迎
            lesson-9:
              name: 教學計畫
        csa2-2022-exemplars:
          lessons:
            lesson-1:
              name: 變數
            lesson-15:
              name: 單元 2 評估
          lesson_groups:
            lessonGroup-2:
              display_name: 內容
        k5-onlinepd-2022:
          lessons:
            Getting Started:
              name: 新手上路
              key: 新手上路
            Sequencing:
              name: 序列
              key: 序列
            Loops:
              name: 迴圈
              key: 迴圈
            Events:
              name: 事件
              key: 事件
            Conditionals:
              name: 條件判斷（Conditionals）
              key: 條件判斷（Conditionals）
            Functions:
              name: 函式
              key: 函式
            Variables:
              name: 變數
              key: 變數
            For Loops:
              name: 計次迴圈（For Loops）
              key: 計次迴圈（For Loops）
            End of Course projects:
              name: 課程結束專案
              key: 課程結束專案
            Reviewing your reflections:
              name: 檢閱你的反思
              key: 檢閱你的反思
            Welcome to "Teaching Computer Science Fundamentals":
              key: 歡迎來到「教授計算機科學基礎」
            Lesson Planning:
              key: 教學計畫
            Next steps:
              key: 下一步
        vpl-csd2-ci-pilot-2022:
          lessons:
            lesson-5:
              name: 實體運算
        vpl-csd3-ci-pilot-2022:
          lessons:
            lesson-5:
              name: 實體運算
        hello-world-csc:
          title: 你好世界
