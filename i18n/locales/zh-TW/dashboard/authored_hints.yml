zh-TW:
  data:
    authored_hints:
      2-3 Artist 1 new_authored_hint:
        2-3_Artist_1_new_a: 如果你使用`移動-向前 100 像素`這個積木，我就會向前移動並自動畫一條線啦。
        2-3_Artist_1_new_b: 要如何才能轉彎？試試`轉向-右方 90 度`積木。
      2-3 Artist 11_authored_hint:
        2-3_Artist_11_a: '遇到角度的問題了嗎？你需要轉 8 次才能圍成一圈，也就是 360 度，那麼 360 ÷ 8 是多少呢？ '
      2-3 Artist 12_authored_hint:
        2-3_Artist_12_a: 一圈共是 360 度，所以，如果小藝術家每次轉 1 度的話，就要重複做 360 次才會轉一圈。
      2-3 Artist 2 new_authored_hint:
        2-3_Artist_2_new_a: 小藝術家好像沒有按照正確的方向前進，你可以讓他在畫線之前轉個彎嗎？
      2-3 Artist 3new_authored_hint:
        2-3_Artist_3new_a: 100 - 70 是多少呢？依照問題的描述，就可以得出帽子的高度！
        2-3_Artist_3new_b: 小藝術家好像沒有按照正確的方向前進，你可以讓他在畫線之前轉個彎嗎？
      2-3 Artist 4_authored_hint:
        2-3_Artist_4_a: 要蓋出這個房子的話，我們需要畫個正方形！
      2-3 Artist 6_authored_hint:
        2-3_Artist_6_a: '如果要做出這些小小的角度，我們必須讓每次畫完正方形之後的轉向角度大一些。   '
        2-3_Artist_6_b: 因為我們已經面向右邊，所以最簡單的方式，就是先往前移動，再向左轉，就可以製作出這個三角形。
        2-3_Artist_6_c: 三角形的每個邊長和正方形的邊長一樣，都是 100 像素！
      2-3 Artist 7_authored_hint:
        2-3_Artist_7_a: 要解決這個關卡最簡單的方法就是，在畫完第一個正方形時，讓小畫家在面朝下方，接著再畫出第二個正方形。
      2-3 Artist 8_authored_hint:
        2-3_Artist_8_a: 如果把 200 分成兩半，每個正方形是多少像素？
      2-3 Artist 9 NEW_authored_hint:
        2-3_Artist_9_a: 這個菱形的邊實際上和正方形的邊一樣。
      2-3 Artist 9 REPLACEMENT_authored_hint:
        step_size: 每一步都是 100 像素寬跟 100 像素高。
      2-3 Artist 9_authored_hint:
        2-3_Artist_9_a: 這個菱形實際上只是正方形轉了 45 度。
        2-3_Artist_9_b: |-
          別忘了將藝術家向左轉 45 度再開始畫正方形！

          ![](https://images.code.org/47cc2474e533667101a2d73b98da204e-image-1467744539967.gif)
      2-3 Artist Debugging 10_authored_hint:
        2-3_Artist_Debugging_10_a: 記得，你想要讓控制面板 *寬* 10 像素......所以確保要 **增加** 10 到任何你想要改變的數字。
        2-3_Artist_Debugging_10_b: "**錯誤嘗試在這裡完全沒關係！**  \n\n可以從一次改變一個數字開始。\n\n每個數字會有什麼效果？\n\n如果你有點混淆了，只要按下「重新開始」，然後你的程式碼就會被重置。"
      2-3 Artist Debugging 2_authored_hint:
        2-3_Artist_Debugging_2_a: '提示：每個鬍鬚長度為 75 像素。'
      2-3 Artist Debugging 3_authored_hint:
        2-3_Artist_Debugging_3_a: 其中的一個轉向角度太小，只有 15 度。
        2-3_Artist_Debugging_3_b: 如果程式運行太快，看不清楚發生了什麼，可以嘗試使用滑桿來降低運行的速度。
      2-3 Artist Debugging 7_authored_hint:
        2-3_Artist_Debugging_7_a: 如果你讓藝術家畫完第一條線之後就向後移動或跳躍的話，會發生什麼？
      2-3 Artist Debugging 8_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          我的形狀重複了幾次？

          形狀 *應該* 要重複幾次？

          怎樣在你的程式裡做出對應的改變？
      2-3 Artist Debugging 9_authored_hint:
        2-3_Artist_Debugging_9_a: 藝術家必須要向左再轉 60 度之後才能開始繪畫！
        2-3_Artist_Debugging_9_b: 你不需要添加另一個積木才能轉整圈，只要在`轉向-左方`積木上增加 60 度就行了！
      2-3 Artist Functions 1 a_authored_hint:
        2-3_Artist_Functions_1_a: 正方形每邊都有 100 像素，這代表你需要向前移動 175 像素之後才能開始畫第二個正方形。
        2-3_Artist_Functions_1_b: 畫出眼鏡時可以讓你的兩條線重疊沒關係。
      2-3 Artist Functions 1_authored_hint:
        2-3_Artist_Functions_1_a: 正方形每邊都有 100 像素，這代表你需要向前移動 175 像素之後才能開始畫第二個正方形。
        2-3_Artist_Functions_1_b: 畫出眼鏡時可以讓你的兩條線重疊沒關係。
      2-3 Artist Functions 11 a_authored_hint:
        2-3_Artist_Functions_11_a: 你不只需要改變函式中的數字跟每個邊長的長度，還需要改變藝術家在每邊需要轉的角度。
      2-3 Artist Functions 11_authored_hint:
        2-3_Artist_Functions_11_a: 你不只需要改變函式中的數字跟每個邊長的長度，還需要改變藝術家在每邊需要轉的角度。
      2-3 Artist Functions 12 a_authored_hint:
        2-3_Artist_Functions_12_a: 試著先運行程式碼，再看看你需要加些什麼。
      2-3 Artist Functions 12_authored_hint:
        2-3_Artist_Functions_12_a: 試著先運行程式碼，再看看你需要加些什麼。
      2-3 Artist Functions 2 a_authored_hint:
        2-3_Artist_Functions_2_a: |-
          你的程式應該要：
          - 使用函式
          - 向前移動 100 + 75 像素
          - 使用函式
      2-3 Artist Functions 2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          你的程式應該要：
          - 使用函式
          - 向前移動 100 + 75 像素
          - 使用函式
      2-3 Artist Functions 3 a_authored_hint:
        2-3_Artist_Functions_3_a: "* * 115 + 45 = 160 * *"
      2-3 Artist Functions 3_authored_hint:
        2-3_Artist_Functions_3_a: "* * 115 + 45 = 160 * *"
      2-3 Artist Functions 4 a_authored_hint:
        2-3_Artist_Functions_4_a: 藝術家需要在每個正方形之間轉 120 度才能完成這個設計。
      2-3 Artist Functions 4_authored_hint:
        2-3_Artist_Functions_4_a: 藝術家需要在每個正方形之間轉 120 度才能完成這個設計。
      2-3 Artist Loops New 11_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          記住上個關卡的程式：

          ![](https://images.code.org/15288d042780242ec5edeed5204c6ebb-image-1469640792081.png)
        2-3_Artist_Loops_New_11_b: 你的下一個轉彎動作應該要在迴圈中程式碼的**最後面**。
      2-3 Artist Loops New 12_authored_hint:
        2-3_Artist Loops_New_12_a: 開始畫菱形之前，藝術家需要向左轉 60 度才能夠朝向正確的路徑。
        2-3_Artist Loops_New_12_b: 在藝術家向前走 100 像素之後，他需要向右轉 120 度才能做出銳角。
        2-3_Artist Loops_New_12_c: 這個藝術家只需要向右轉 60 度就能創造出鈍角。
      2-3 Artist Loops New 13_authored_hint:
        2-3_Artist_Loops_New_13_a: "在畫出一個菱形之後，藝術家已經面對了開始下一個的方向。\n\n因為這樣，我們不需要增加額外的`轉向-左方`積木。"
        2-3_Artist_Loops_New_13_b: "要做出每個菱形，藝術家需要：\n- 移動\n- 向右轉 120 度\n- 移動\n- 向右轉 60 度\n\n然後再做一次相同的動作！"
      2-3 Artist Loops New 9_authored_hint:
        2-3_Artist_Loops_New_9_a: 這個藝術家需要向右轉 45 度之後才能開始繪畫。
        2-3_Artist_Loops_New_9_b: 這個 V 形，其實就只是半個正方形。怎樣的程式碼可以畫出半個正方形？
      2-3 Artist Nested Loops 1_authored_hint:
        2-3_Artist_Nested_Loops_1_a: 記得把灰化的所有積木放進你的迴圈中。
      2-3 Artist Nested Loops 3_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "需要我幫你找到正確的角度嗎？\n**360 / 12 = 30**"
        2-3_Artist_Nested_Loops_3_b: 記得把灰化的程式，還有轉向積木放到迴圈裡頭。
      2-3 Artist Nested Loops 4_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "需要我幫你找到正確的角度嗎？\n**360 / 12 = 30**"
      2-3 Artist Nested Loops 5_authored_hint:
        2-3_Artist_Nested_Loops_5_a: "試著用`跳躍-向前`積木，讓小藝術家在畫完一個正方形後，跳到下一個要開始的地方。\n\n如果你的正方形是 20 像素高，而且兩個正方形相隔 20 像素遠，你需要跳多遠？"
      2-3 Artist Nested Loops 7_authored_hint:
        2-3_Artist_Nested_Loops_7_a: "你需要在每次的循環轉幾度？\n\n360/10 是多少？"
      2-3 Artist Nested Loops 9_authored_hint:
        2-3_Artist_Nested_Loops_9_a: |-
          需要幫忙來找到正確的角度嗎？

          **360 / 12 = 30**
      2-3 Bee Conditionals 14_authored_hint:
        2-3_Bee_Conditionals_14_a: 想不到要如何減少積木的使用量？試著把用在紫花上的程式套用到紅花上。
        2-3_Bee_Conditionals_14_b: 如果紅花變成紫花，想一想，要怎麼另外使用`重複`迴圈來減少代碼的使用？
        2-3_Bee_Conditionals_14_c: "試試把它分成兩塊來完成：\n\n![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)\n\n1) 收集花蜜 3 次\n - 向前移動 5 次\n - 檢查是否為花蜜，如果是就採集\n - 向左轉\n \n2) 釀造蜂蜜\n - 向前移動 1 認\n - 釀造 2 個蜂蜜"
      2-3 Bee Conditionals 15_authored_hint:
        2-3_Bee_Conditionals_15_a: '請記住：每次你運行程式後，紫花的花蜜數會變成 0 或 1！'
      2-3 Bee Conditionals 3_authored_hint:
        2-3_Bee_Conditionals_3_a: 如果你用迴圈的方式，程式就會精簡許多。一個迴圈用來向前移動，另一個迴圈用來收集花蜜，再一個迴圈來釀造蜂蜜。
      2-3 Bee Conditionals 6_authored_hint:
        2-3_Bee_Conditionals_6_a: '請記住：當你運行程式後，紫花的花蜜數會變成 0 或 1！'
      2-3 Bee Debugging 1_authored_hint:
        2-3_Bee_Debugging_1_a: 在你找到並修正了不正確的積木的過程中，有發現哪些地方可以用一個`重複`迴圈讓程式變得更簡單嗎？
      2-3 Bee Debugging 2_authored_hint:
        2-3_Bee_Debugging_2_a: 在你找到並修正了不正確的積木的過程中，有發現哪些地方可以用一個`重複`迴圈讓程式變得更簡單嗎？
      2-3 Bee Debugging 4_authored_hint:
        2-3_Bee_Debugging_4_a: 蜜蜂做的事情裡頭好像有些地方不大對勁？當你更改那個積木後會發生什麼事呢？
      2-3 Bee Functions 4_authored_hint:
        2-3_Bee_Functions_4_a: 你不需要使用在迴圈裡頭帶個函式。試著移動，然後使用函式，接著再移動，再使用函式一遍。
      2-3 Bee Functions 6_authored_hint:
        2-3_Bee_Functions_6_a: 你不需要使用在迴圈裡頭帶個函式。試著移動，然後使用函式，接著再移動，再使用函式一遍。
      2-3 Bee Functions 8_authored_hint:
        2-3_Bee_Functions_8_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9_authored_hint:
        2-3_Bee_Functions_8_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
        2-3_Bee_Functions_8_b: |-
          記得要在綠色的函式積木裡建置你的程式。

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2_authored_hint:
        2-3_Bee_Loops_2_a: 你的迴圈中應該要有 4 個積木。
      2-3 Bee Loops 3_authored_hint:
        2-3_Bee_Loops_3_a: 你的迴圈中應該要有 6 個積木。
      2-3 Bee Loops 3B_authored_hint:
        2-3_Bee_Loops_3B_a: 你需要 2 個不同的`重複`迴圈，一個接著一個。
      2-3 Bee Loops 4_authored_hint:
        2-3_Bee_Loops_4_a: 你的迴圈中應該要有 5 個積木。
      2-3 Bee Loops 4A_authored_hint:
        2-3_Bee_Loops_4A_a: 第一個動作是轉向，而不是移動。
        2-3_Bee_Loops_4A_b: 在迴圈之外的結尾處再加上一些程式就可以完成了。
        2-3_Bee_Loops_4A_c: 如果你還不能準確的使用迴圈，可以先用長串的指令，然後再找出有什麼地方是可以用`重複`迴圈來替代的。
      2-3 Bee Loops 5_authored_hint:
        2-3_Bee_Loops_5_a: 如果你不能馬上的就使用`重複`積木來寫出程式，可以先把一個個的指令寫出來，然後找出指令間共同的模式。
      2-3 Bee Loops 6_authored_hint:
        2-3_Bee_Loops_6_a: 如果你沒有辦法很快的分辨出要在`重複`迴圈中放些什麼積木，可以試著先按照順序拖曳出每個積木，並在拖曳過程中找出它們的規律。
        2-3_Bee_Loops_6_b: 你的`重複`迴圈裡應該要有 6 個積木才對。
      2-3 Bee Loops 7_authored_hint:
        2-3_Bee_Loops_7_a: 第一個動作是轉向，而不是移動。
        2-3_Bee_Loops_7_b: '如果你實在無法從頭想像迴圈的內容，可以先把需要的指令寫成長一點的程式，然後從裡頭找出組合模式。  '
      2-3 Maze 1_authored_hint:
        2-3_Maze_1_a: 要使用`移動-向前`積木的方式是，從工具箱把它拖曳到工作區中，並把它連接在`當運行時`積木下方。
      2-3 Maze 16_authored_hint:
        2-3_Maze_16_a: 如果很難去找到匹配的模式，試試先一點一點的把指令全寫出來，然後看看哪些部分是重複的，最後把這些重複的部分放進迴圈裡。
        2-3_Maze_16_b: "如果要在`重複`迴圈中放置多個積木，只要拖曳一個迴圈到工作區，然後再把工作區上的積木堆拖曳到裡面。\n\n把它們放到`當運行時`積木就大功告成囉！"
      2-3 Maze 6_authored_hint:
        2-3_Maze_6_a: 有 2 個方法可以完成這個關卡！
      2-3 Maze Loops 17_authored_hint:
        2-3_Maze_Loops_17_a: 如果很難去找到匹配的模式，試試先一點一點的把指令全寫出來，然後看看哪些部分是重複的，最後把這些重複的部分放進迴圈裡。
        2-3_Maze_Loops_17_b: 你把預先建立好的程式給刪除了嗎？點擊`重新開始`按鈕把程式找回來吧！
      2-3 Maze Loops 18_authored_hint:
        2-3_Maze_Loops_18_a: 如果很難去找到匹配的模式，試試先一點一點的把指令全寫出來，然後看看哪些部分是重複的，最後把這些重複的部分放進迴圈裡。
      2-3 Maze Loops 19_authored_hint:
        2-3_Maze_Loops_19_a: 如果你卡關了，一開始先不要用迴圈，試著先寫出所有的程式，然後在裡頭找規律。
        2-3_Maze_Loops_19_b: 放一個重複迴圈到另一個裡頭，這可以減少積木的使用量。
      2-3 Maze Loops 20_authored_hint:
        2-3_Maze_Loops_20_a: 找找這個樓梯迷宮的組合模式，看看是不是有重複的部分可以用迴圈替代。
      2-3 Maze Loops 21_authored_hint:
        2-3_Maze_Loops_21_a: 如果你一時之間找不到樓梯的組合模式，試試用手蓋住被擋住的路徑。
      4-5 Artist 1_authored_hint:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11_authored_hint:
        4-5_Artist_11_a: 在你的迴圈裡，確定小藝術家在畫完每個線條之後有使用跳躍積木。
      4-5 Artist 3_authored_hint:
        4-5_Artist_3_a: |-
          如果花壇的周長 600 像素，其中的二邊是 200 像素，短邊的長度會是多少：

          **600 - 200 - 200 = 200**

          那表示二條短邊共是 200 像素長，那一條呢？

          **200 / 2 是多少呢？**
        4-5_Artist_3_b: 如果你無法直接用`重複`積木來建立迴圈，試著先把需要的積木一個個的貼合起來，然後找到它們之間的規律。
      4-5 Artist 4_authored_hint:
        4-5_Artist_4_a: "一圈共有 360 度！\n\n這就是你要重複這個程式的次數（因為每次只轉 1 度）！"
      4-5 Artist 5_authored_hint:
        4-5_Artist_5_a: |-
          錯中學、學中錯…要解決這個問題的話，可以把 90 度除以 3。

          **90 / 3 = _____**
      4-5 Artist 7_authored_hint:
        4-5_Artist_7_a: '哪個角度最小？小藝術家面對的角度是多少？ '
      4-5 Artist 8_authored_hint:
        4-5_Artist_8_a: "每個長邊為 240 像素，也就是說其他的 2 個短邊計算方式為：\n\n**800 - 240 - 240 = 320**\n\n**320/2** 是多少呢？ "
        4-5_Artist_8_b: "這個圖案可以用 2 個方式畫出來！\n- 畫出二個長方形，長是 **120** 高是 **160**，然後部分重疊在一塊。\n\n- 畫出一個長方式，長是 **240** 高是 **160** ，接著在中間加上一條線。"
      4-5 Artist 9_authored_hint:
        4-5_Artist_9_a: "當一個三角形是等邊時，所有的邊的長度和所有角的角度都會一樣。\n"
        4-5_Artist_9_b: 你需要畫出三相同尺寸的三角形，別忘了每畫完一個就要跳到下一個新的位置。
      4-5 Artist Assessment 1_authored_hint:
        4-5_Artist_Assessment_1_a: 你只要畫出外部的三角形就可以完成這關。
      4-5 Artist Patterns 11_authored_hint:
        4-5_Artist_Patterns_11_a: 如果有個 360 度角的圓形，每次循環小藝術家會轉 3 度，你需要循環幾次（轉多少次）才能畫出一個半圓？
      4-5 Artist Patterns 2_authored_hint:
        4-5_Artist_Patterns_2_a: 注意，由於正方形是 20 像素長，你需要跳躍 20 像素，在你開始你的下一個迴圈之前。
      4-5 Artist Patterns 3_authored_hint:
        4-5_Artist_Patterns_3_a: 每次你試新的積木時，在工具箱拖曳出來請小心別和當前程式攪和在一起。
        4-5_Artist_Patterns_3_b: 如果你的程式變得太雜亂，你可以點擊「重新開始」恢復成原狀，然後重新再一次！
      4-5 Artist Patterns 5_authored_hint:
        4-5_Artist_Patterns_5_a: "現在，當小藝術家完成每個菱形時，他面對的方向和接著要畫下個圖形的方向是相反的。\n\n他要轉多少度才能夠面對正確的方向呢？"
      4-5 Bee Conditionals 4_authored_hint:
        remember_quantum: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      4-5 Bee Conditionals 5_authored_hint:
        remember_quantum: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      4-5 Bee Conditionals 6_authored_hint:
        4-5 Bee Conditionals 6_a: 你只可以用工作區所有的積木來完成關卡，要怎麼樣排列它們呢？
        4-5 Bee Conditionals 6_b: 請確定你檢查了花朵上是否有 **0** 個以上的花蜜，至少檢查 **3** 次才能完成這個關卡。
      4-5 Bee Debugging 1_authored_hint:
        4-5_Bee_Debugging_1_a: 如果你無法看出問題在哪，可以運行程式，看看是哪裡出錯了。
      4-5 Bee Nested Loops Rows_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: 這就像個長方形，蜜蜂要往前移動、向左轉，總共多少次才能走完這個圖形。
      4-5 Maze 10_authored_hint:
        4-5_Maze_10_a: |-
          如果你不是很了解怎樣利用迴圈解決問題，試著先寫出長一點的程式，接著從裡頭找尋模式。

          你應該在`重複`積木裡放什麼程式，才能讓程式變得比較短？
      4-5 Maze 4_authored_hint:
        4-5_Maze_4_a: 如果你很難一次就找出可以放進迴圈的程式，試試先把所有程式寫出來，然後從裡頭找規律。
      4-5 Maze 5_authored_hint:
        4-5_Maze_5_a: 每次你用了二次以上的`移動-向前`積木時，試著改用`重複`迴圈來取代這些步驟。
        4-5_Maze_5_b: 你可以在這個關卡中使用多個`重複`迴圈。
      4-5 Maze 6_authored_hint:
        4-5_Maze_6_a: "試著用手指在畫面上走看看。\n這是你可以找到的最短路徑嗎？"
      4-5 Maze 7_authored_hint:
        4-5_Maze_7_a: "**想要讓你的程式變得更精簡？**\n\n在你的程式積木裡找到匹配的模式，你看得出來哪個部分是重複的嗎？試著把那些重複的部分放到一個迴圈進執行！"
      4-5 Nested Loops 12_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 6_authored_hint:
        4-5_Nested_Loops_6_a: |-
          別忘了在內部循環中加上轉向。

          在一圈 360 度裡要畫出 6 個三角形。

          **360 / 6 = ?**
      4-5 Nested Loops 7_authored_hint:
        4-5_Nested_Loops_7_a: |-
          這個圖案會循環 10 次，在一圈 360 度裡。

          **360 / 10 = ?**
      4-5 Nested Loops 8_authored_hint:
        4-5_Nested_Loops_8_a: |-
          你要重複畫這個圖形 6 次，在一圈 360 度內。

          **360 / 6 = ?**
      4-5 While Loops 8_authored_hint:
        4-5_While_Loops_8_a: 每個項目都需要有自己的`當…`迴圈。
      Artist Autorun Test_authored_hint:
        2-3_Artist_Functions_4_a: 藝術家需要在每個正方形之間轉 120 度才能完成這個設計。
      Artist Inspiration_authored_hint:
        brush_width: 在我們開始前，先將筆刷的寬度設為 1，顏色設為藍色。
        double_loop: 試著放置一個`計數迴圈`到`重複`積木裡頭。
        specifics: "畫出 6 個「花瓣」的這個`計數迴圈`，每一次都會從 3 開始執行到 17，而畫出的形狀的邊數都會是奇數。\n\n`設置透明度`的積木中用了計數器，當計數器的值愈高時，顏色會變得愈淡。"
        after: 當你完成每個「花瓣」時，請檢查是否在你轉彎 60 度之前`移動-向前`了 20 像素。
        solution: |-
          **解決方案：**


          ![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      Bergeron Robot Maze1_authored_hint:
        2-3_Maze_1_a: 要使用`移動-向前`積木的方式是，從工具箱把它拖曳到工作區中，並把它連接在`當運行時`積木下方。
      Course 4 Artist 11_authored_hint:
        Course_4_Artist_11_a: '這個半六邊形有一個**30 像素的邊**還有需要轉向**60 度**。  '
        Course_4_Artist_11_b: '這個 2/3 的三角形有一個**80 像素的邊**還有需要轉向**120 度**。 '
      Course 4 Artist 12_authored_hint:
        Course_4_Artist_12_a: '每個重複的圖形都是**半六邊形**的組合，跟著**2/3 三角形**。 '
        Course_4_Artist_12_b: '部分圖形和上個關卡有些類似，除了半六邊形大了一點以外。 '
        Course_4_Artist_12_c: "1) 開始的三個線段為 60 像素長，你需要轉向 60 度。\n2) 接著的二個線段為 80 像素長，你需要轉向 120 度。 "
        Course_4_Artist_12_d: |-
          **解決方案：**

          ![Image of Solution Blocks](https://images.code.org/03dfe3f862f4bdbee2a1f5865b7d9d50-image-1469641020695.png)
      Course 4 Artist 6_authored_hint:
        Course_4_Artist_6_a: 在一圈 360 度中共有 3 個三角形…360 除以 3 是多少？
      Course 4 Artist 8a_authored_hint:
        Course_4_Artist_8a: |-
          想要知道轉向的角度嗎？

          一圈 360 度中有 3 個三角形。

          360 除以 3 是多少？
      Course 4 Artist 9_authored_hint:
        Course_4_Artist_9_a: "想知道要轉多少度嗎？\n\n360 除以 10 等於多少？"
      Course 4 Artist Binary Free Play 2b_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: 這個程式中使用了 2 個`計數迴圈`，第一個從 1 算到 8，另一個則是從 8 算到 1。
        Course_4_Artist_Binary_Free_Play_2b_b: 每個`計數迴圈`裡有 3 個`重複`積木，第一個畫出左半部、第二個畫出中間、第三個畫出右半部。
        Course_4_Artist_Binary_Free_Play_2b_c: 在每一次的循環裡，你需要為 1s 使用 `counter` 計數，還有為 0s 使用 `16-(2 x counter)` 來計數。
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **解決方案：**


          ![solution](https://images.code.org/b282dd6324910b7d604e24182cbbccbb-image-1469641477135.png)
      Course 4 Artist For Loops 11_authored_hint:
        Course_4_Artist_For_Loops_11_a: "每個圖形之後轉向的角度都會改變！\n\\r\n使用運算類別積木，並輸入 360 除以邊數來產生圖形要轉向的角度。 "
      Course 4 Artist For Loops 11a_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 除以多邊形的邊數，就是你要轉向的度數。 '
        Course_4_Artist_For_Loops_11a_b: '每一次你需要向前移動，共 10 次。移動的長度相當於多邊形的邊數。 '
      Course 4 Artist For Loops 3_authored_hint:
        Course_4_Artist_For_Loops_3_a: 如果要使用`計數`迴圈來作為移動的依據，請檢查你是不是使用了`counter`當作距離。
      Course 4 Artist For Loops 4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "**需要的數字至少要是多少？\n最大的數字又是多少？\n每循環一次要增加多少？**\n\n這些問題是你每次在使用`計數`迴圈要思考的。"
      Course 4 Artist For Loops Challenge_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: 最大的形狀有 19 個邊，最小的則只有 2 個邊。
        Course_4_Artist_For_Loops_Challenge_b: '`計數`迴圈會在每一次循環增加或減少數字。'
      Course 4 Artist For Loops Challenge_a_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: 最大的多邊形有 19 個邊。
        Course_4_Artist_For_Loops_Challenge_b: 每個多邊形都不完整，其中有一條邊會比原來的短。
      Course 4 Artist For Loops inspire_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: 這個程式的基礎和上個挑戰關卡很像…有些地方改了就是。
        Course_4_Artist_For_Loops_inspire_b: 試試看這個`計數`迴圈，從 3 算到 10，每次增加 1。
        Course_4_Artist_For_Loops_inspire_c: 在這個`計數`迴圈裡用了二個`重複`積木，不過第二個會轉成相反的方向。
        Course_4_Artist_For_Loops_inspire_d: "**解決方案：**\n\n![Solution](https://images.code.org/418dfd57794706de541f1c162911a6e2-image-1469641233597.png)"
      Course 4 Artist Functions Inspiration_authored_hint:
        Course_4_Artist_Functions_Inspiration_a: 利用上個關卡的程式，再添加額外的`轉向-右方 3 度`積木到重複迴圈裡頭。
        Course_4_Artist_Functions_Inspiration_b: 試試把`重複迴圈`之外的轉向角度改成比 90 度大，轉向的指令還是要放在`計數迴圈`裡。
        Course_4_Artist_Functions_Inspiration_c: |-
          **解決方案：**
          ![Solution](https://images.code.org/0c94bcde33a00595aa099fea964ca80e-image-1469641309381.png)
      Course 4 Artist Functions challenge_authored_hint:
        Course_4_Artist_Functions_challenge_a: 要掌握函式的使用方式，就是確定出哪些是你需要的，哪些是你不需要的。
        Course_4_Artist_Functions_challenge_b: 使用一個`計數迴圈`，然後在巢狀式的`重複`迴圈裡頭，使用它的計數變數。
        Course_4_Artist_Functions_challenge_c: 每次的循環，你都要畫個正方形然後向前跳躍。
        Course_4_Artist_Functions_challenge_d: 你需要在`重複`積木的外面添加向左轉 90 度的指令，不過指令還是要在`計數迴圈`裡頭。
      Course 4 Artist Inspire_authored_hint:
        Course_4_Artist_Inspire_a: 在你完成一個正方形後（轉向製作下一個之前）向前跳躍，跳的距離是邊長的一半。
        Course_4_Artist_Inspire_b: 畫出一個正方形然後跳躍，共重複 4 次（每次之間又用了向左轉），就可以做出這個像風車一樣的圖案。
        Course_4_Artist_Inspire_c: 每個風車圖案也重複了 4 次，轉向的角度為 **360/sides**。
        Course_4_Artist_Inspire_d: |-
          **解決方案：**
          ![Blocks for solution](https://images.code.org/35fa852515d73aa8cf6c2bde4f2d46a3-image-1469641128278.png)
      Course 4 Artist Vars 13_authored_hint:
        Course_4_Artist_Vars_13_a: 你需要 2 個重複迴圈（一個包著一個），兩個都重複 `sides`次。
        Course_4_Artist_Vars_13_b: "裡面的重複迴圈畫出了一個八邊形（轉向左邊）。\n\n之後，你只需要在迴圈外層添加向前移動，然後向右轉的程式。"
        Course_4_Artist_Vars_13_c: 如果要在邊數改變的同時又保持圖形的尺寸，可以使用運算積木，將周長除以邊數。
      Course 4 Artist Vars 6_authored_hint:
        Course_4_Artist_Vars_6_a: 若要畫出一個正多邊形，可以在每一次循環轉 **360/邊數** 度。
      Course 4 Artist Vars 8_authored_hint:
        Course_4_Artist_Vars_8_a: 如果你將起始長邊除以側邊數，當側邊個數越大時，每個的長邊將會變短
      Course 4 Bee Params 7_authored_hint:
        notice_pattern: '你找到花蜜數量變化的模式了嗎？ '
        count_with_for: 注意花蜜數量變化的方式，哪個積木可以用來重複執行程式，同時又可以每次向上計數呢？
      Course 4 Bee Params 8_authored_hint:
        Course_4_Bee_Params_8_a: 可以試試在每次都去查詢蜂蜜或花蜜的數量，如果沒有的話，數量會是 0。
      Course 4 Play Lab Params 2_authored_hint:
        Course_4_Play_Lab_Params_2_a: 你必須在 jump（跳躍）函式上點擊「編輯」，然後更新它，讓它可以使用 `height`（高度）參數。
      Course 4 Play Lab Vars 2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: 確定在 `dog_speed`（小狗的速度）上設定的數值要大於 `cat_speed`（小貓的速度）。
      Course 4 Play Labs For Loops 2_authored_hint:
        Course_4_Play_Labs_For_Loops_2_a: 在`計數`迴圈上每次要加多少，才可以跳過偶數？
      Course 4 Playlab For Loops 4b_authored_hint:
        Course_4_Playlab_For_Loops_4b_a: 這個旗子離角色大概有 330 像素遠。
        Course_4_Playlab_For_Loops_4b_b: 在計數的起始數值和結束數值不同的情況下，你要怎麼樣才能讓每個角色都能移動 330 像素？
        Course_4_Playlab_For_Loops_4b_c: 記住，不管角色的最後一步移動距離多大，只要他能通過旗子就可以了。
      Course 4 Playlab For Loops 5b_authored_hint:
        Course_4_Playlab_For_Loops_5b_a: 這個角色離中心點大概有 175 像素遠。
        Course_4_Playlab_For_Loops_5b_b: 記住，一個角色的下個執行動作的時間，會比上一個還要長，因為 counter 會變得愈來愈大。
      Course 4 SCF 1_authored_hint:
        Course_4_SCF_1_a: 每個六邊形的邊長都是 40 像素。
        Course_4_SCF_1_b: 每個六邊形之間的水平距離是 120 像素。
        Course_4_SCF_1_c: "在你畫出第二排的六邊形之前，你需要向右轉 60 度，然後向前跳 40 像素。\n\n在你到了正確的垂直位置後，你必須讓小藝術家再轉過頭來，然後向前跳 320 像素。"
        Course_4_SCF_1_d: "在你畫出第三排的多邊形之前，你需要向右轉 60 度，然後向前跳 40 像素。\n\n在你到了正確的垂直位置後，你必須讓小藝術家再轉過頭來，然後向前跳 440 像素（比你的函式 `shift down/forward` 還要多 120 像素）。 "
        Course_4_SCF_1_e: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      Course 4 SCF 1a_authored_hint:
        Course_4_SCF_1a_a: 別忘了你在階段 16 建立過的函式。
        Course_4_SCF_1a_b: "觀察這個路徑，作為你的主要路線：\n\n![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)"
        Course_4_SCF_1a_c: 請考慮使用一個`計數迴圈`，不是用在指令步驟，而是要用在函式的參數上。
        Course_4_SCF_1a_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/aa5a636a1d072e1449b481973ff27337-image-1469727008929.png)
      Course 4 SCF 1b_authored_hint:
        Course_4_SCF_1b_a: "注意，所有花蜜收集點的形狀是相同的 。\n\n這樣很適合使用函式！"
        Course_4_SCF_1b_b: "看看可行的移動方式：\n\n![](https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_c: 你應該思考一下如何使用一個`計數迴圈`來作為蜜蜂的移動依據。
        Course_4_SCF_1b_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/15ef56cd19a1efd510527345f077d6eb-image-1469726894398.png)
      Course 4 SCF 2_authored_hint:
        Course_4_SCF_2_a: 每個八邊形的邊長都是 40 像素。
        Course_4_SCF_2_b: 每個八邊形之間的水平距離是 136 像素。
        Course_4_SCF_2_c: "在你畫出第二排的八邊形之前，你需要向右轉 45 度，然後向前跳 96 像素。\n\n在你到了正確的垂直位置後，你必須讓小藝術家再轉過頭來，然後向前跳 408 像素。 "
        Course_4_SCF_2_d: "注意，因為在偶數列上的八邊形比較少，所以你不必再跳回奇數列的起始點。\n\n這表示你可以在所有橫列上使用相同的函式。"
        Course_4_SCF_2_e: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/de5a99b0fb4c079504ff7cca9a249f02-image-1469727175091.png)
      Course 4 SCF 3_authored_hint:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_b: '這是一系列的八邊形，計數 `counter` 使用了 `sides` ，並當作每個形狀的邊長。 '
        Course_4_SCF_3_c: '每個八邊形都是由每次的循環構成，迴圈的計數方式是從 200 算到 2，間隔數是 2。 '
        Course_4_SCF_3_d: '別忘了在每個循環之後轉向 22.5 度。 '
        Course_4_SCF_3_e: 每個八邊形的顏色還有線條的寬度是利用 `counter` 變數來控制的。
        Course_4_SCF_3_f: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      Course 4 SCFL 1_authored_hint:
        Course_4_SCFL_1_a: "看看可用的移動方式：\n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        Course_4_SCFL_1_b: '試著使用 2 個`計數`迴圈：一個用來往上爬然後採集花蜜，另一個則是往下爬然後釀造蜂蜜。'
        Course_4_SCFL_1_c: "注意一個`計數`迴圈裡頭需要數個規律的重複積木，以重複 `counter` 次來製作出樓梯的模式。\n\n其它的`計數`迴圈只需要一個普通的重複積木以收集到 `counter` 個蜂蜜。"
        Course_4_SCFL_1_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/1a61eae7e12742c8d850f2bf7e939f72-image-1469726415313.png)
      Course 4 SCFL 1a_authored_hint:
        Course_4_SCFL_1a_a: 盡可以減少積木的使用量，路還長得很呢！
        Course_4_SCFL_1a_b: "看看可用的移動方式：\n\n![](https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)"
        Course_4_SCFL_1a_c: 一個`計數迴圈`能幫你執行一些相同模式的程式，但每次執行又可以有一些變化，注意變化的數字需要從 7 算到 5，間隔數是 1。
        Course_4_SCFL_1a_d: |-
          **解決方案：**

          ![Solution Blocks\t](https://images.code.org/8742b441717ee3ab7cbc91d84f688dbb-image-1469726297064.png)
      Course 4 SCFL 1b_authored_hint:
        Course_4_SCFL_1b_a: 試著使用一個`計數迴圈`。
        Course_4_SCFL_1b_b: "看看可用的移動方式：\n\n![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)"
        Course_4_SCFL_1b_c: |-
          **解決方案：**

          ![](https://images.code.org/349a0baf93e00a679cf7ed348f8309b4-image-1469642354856.png)
      Course 4 SCFL 2_authored_hint:
        Course_4_SCFL_2_a: "看看可用的移動方式：\n\n![](https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)"
        Course_4_SCFL_2_b: 注意，在`計數`迴圈中，每次的循環結束時都會有個停止的點，總共會有 3 個點。
        Course_4_SCFL_2_c: 在`計數`迴圈中，每一次的循環期間，每個物件的數字都會和 `counter` 變數有關。
        Course_4_SCFL_2_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/df47aa475c36d0c1664c2fdb16b5613c-image-1469726516185.png)
      Course 4 SCFL 3_authored_hint:
        Course_4_SCFL_3_a: '`pen width`（筆跡寬度）是 1。而第一個正方形的邊長是 50 像素，每個正方形之間的邊長差了 50 像素。'
        Course_4_SCFL_3_b: 筆刷的透明度固定都是 `counter`/2。
        Course_4_SCFL_3_c: 在你畫出一個正方形後，別忘了跳回去，轉向，再跳一次，再轉回去！
        Course_4_SCFL_3_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/7f14ddfa5cdcbfdfacd8b1e45511d583-image-1469726581880.png)
      Course 4 SCFL 4_authored_hint:
        Course_4_SCFL_4_a: 使用`設定顏色`積木，可以讓顏色改變，使用的是 RGB 顏色代碼。R（Red，紅）的值為 `counter`、G（Green，綠）的值為 `255 - counter`、B（Blue，藍）的值則固定為 255。
        Course_4_SCFL_4_b: 每個正方形的邊長為 `counter` 像素，從 5px 開始算到 200px，每次增加 5px。
        Course_4_SCFL_4_c: 小藝術家在每次畫出正万形後轉向 15 度。
        Course_4_SCFL_4_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/b85604648076fa7adfc7a30be41d13fa-image-1469726651617.png)
      Course 4 SCFL 6_authored_hint:
        Course_4_SCFL_6_a: 使用`設定顏色`積木，可以讓顏色改變，使用的是 Rgb 顏色代碼。R（Red，紅）的值固定為 255、G（Green，綠）的值為 `counter`、B（Blue，藍）的值為 `255 - counter`。
        Course_4_SCFL_6_b: 這個程式並沒有你想的這麼複雜，只需要設定好`計數迴圈`裡頭的顏色部分，然後向前移動，最後轉向。
        Course_4_SCFL_6_c: '這個`計數迴圈`是從 5 算到 250，間隔數是 2。 '
        Course_4_SCFL_6_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/a61c16d76d876d9c26ebcaebef3f97a2-image-1469726730055.png)
      Course 4 SCFL 7_authored_hint:
        Course_4_SCFL_7_a: 使用`設定顏色`積木，可以讓顏色改變，使用的是 Rgb 顏色代碼。R（Red，紅）的值為 `counter`、G（Green，綠）的值為 `255 - counter`、B（Blue，藍）的值則固定為 255。
        Course_4_SCFL_7_b: '這個圖案是用兩個類似的`計數迴圈`畫出來的。一個是從 5 算到 200，間隔數是 2；另一個則是從 200 算到 5，間隔數是 2。 '
        Course_4_SCFL_7_c: 在每個`計數迴圈`裡，你要在轉向 `360 / counter` 之前向前移動 5 像素。在運行前別忘了筆刷的寬度要設成 `counter`。
        Course_4_SCFL_7_d: 你需要在兩個`計數迴圈`之間向左轉 225 度。
        Course_4_SCFL_7_e: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/96adbffef5520417927b6129875e6125-image-1469726787490.png)
      Course 4 SCV 1_authored_hint:
        Course_4_SCV_1_a: '變數非常有用，因為你每循環一次就可以加一個數值上去。 '
        Course_4_SCV_1_b: 這個關卡有個畫出多邊形的迴圈，一個用來重複多邊形 `sides` 次，另一個在 `sides` 加上 5 以後再做一次。
        Course_4_SCV_1_c: 使用變數，`sides` 代表邊數，`length` 代表長度，用它們可以編寫出簡潔的程式，因為我們可以透過迴圈來執行相同的程式多次，這樣一來，模式相同但數字不同的程式就不需要編寫好多次。
        Course_4_SCV_1_d: |-
          **解決方案：**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      Course 4 SCV 2_authored_hint:
        Course_4_SCV_2_a: "這個圖形是用 10 個這樣的「花朵」畫出來的：\n![](https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png)\n\n而「花朵」則是用 10 個這樣的「花瓣」畫出來的：\n![](https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png)"
        Course_4_SCV_2_b: '這個圖案使用了巢狀迴圈（三層）。所有的迴圈執行了 `sides` 次（sides 是個變數名稱，是邊數的意思）。 '
        Course_4_SCV_2_c: 小藝術家每畫出一個「花瓣」後就向左轉，但在另一個迴圈時又向右轉。
        Course_4_SCV_2_d: 如果要避免你的 10 個花都畫在同一個位置上，請在你轉向 360/`sides` 度之前向前跳，跳的距離為 360/`sides` 像素。
        Course_4_SCV_2_e: |-
          **解決方案：**

          ![Solution](https://images.code.org/889fda43ab85f9972fdabe5bb968ff95-image-1469642093490.png)
      Course 4 SCV 3_authored_hint:
        Course_4_SCV_3_a: '在角色撞在一起時，使用運算積木來為 `points` 變數加分或是減分。 '
        Course_4_SCV_3_b: 在每次方向鍵點擊時，你可以將參數改成角色移動的距離。
        Course_4_SCV_3_c: |-
          **解決方案：**

          ![solution](https://images.code.org/8d4bcfb29308eabff39500ad9db813fd-image-1469641570287.png)
      Course 4 SCV 4_authored_hint:
        Course_4_SCV_4_a: 用 3 個變數來幫你解決。一個用來代表花蜜數、一個代表蜂蜜數、一個代表蜜蜂移動格數。
        Course_4_SCV_4_b: '在你的主迴圈裡頭再加上 3 個迴圈，程式就會變得很猛了。這 3 個迴圈中，一個用來向前移動、一個收集花蜜、一個收集蜂蜜。 '
        Course_4_SCV_4_c: "看看可用的移動方式：\n\n![](https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)"
        Course_4_SCV_4_d: |-
          **解決方案：**

          ![Solution](https://images.code.org/c57fc9df2e24b1f8497b7e4ca9e1f568-image-1469641818826.png)
      Course 4 SCV 5_authored_hint:
        Course_4_SCV_5_a: |-
          看看可用的移動方式：

          ![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: 每次進入迴圈時，花會少兩份花蜜且蜜蜂要多做一份花蜜
        Course_4_SCV_5_c: 注意迴圈之外的開頭之處，蜜蜂移動的次數要和下一朵有花蜜的花的格數一樣。
        Course_4_SCV_5_d: |-
          **解決方案：**

          ![Image of Solution](https://images.code.org/831d8675f6551d79b212da594a9a73f0-image-1469641703833.png)
      Course 4 SCV 6_authored_hint:
        Course_4_SCV_6_a: |-
          看看怎樣用單個積木來完成圖形：.

          ![](https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_b: '用變數來處理會非常的有效率，你可以設定 8 個變數： red1, green1, blue1, red2, green2, blue2, length, sides。'
        Course_4_SCV_6_c: 每個形狀的五個邊被分成`length`/`sides`，向左曲折的是青藍色 (rgb = 0,175,200) 以及向右曲折的是紫色 (rgb = 100, 50, 150)。
        Course_4_SCV_6_d: '要向左曲折的話，向左轉`360`/`sides`。要向右曲折的話，向右轉`360`/`sides`。'
        Course_4_SCV_6_e: '程式的其它部分很基礎，就是要在一個形狀上製作出一個 360 的迴轉，不同之處在於我們將這些形狀重疊一半，所以我們要向右轉 180 ÷ sides（邊數）度，意思是我們必須要比平常還要多 2 倍（sides*2 重複） '
        Course_4_SCV_6_f: |-
          **解決方案：**

          ![Solution](https://images.code.org/72f0ce970999deffe87bd93af0db959f-image-1469642214408.png)
      Course E MC Conditionals1_authored_hint:
        mc_9_a: 你面對的是正確的方式嗎?“破壞程式積木”把你前面的程式積木埋起來。
        mc_9_b: 牆上的黑點是煤！用“摧毀程式積木”來開採煤炭。
        mc_9_c: 用“放置火炬”把火炬放在你站的地方。
      CourseF_PlayLab_vars2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: 確定在 `dog_speed`（小狗的速度）上設定的數值要大於 `cat_speed`（小貓的速度）。
      Dance short test 2_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 您需要在歌曲第七個小節的某個時候變更背景效果。

          *此層級在 10 個小節後結束。*
        challenges: |-
          **可選挑戰**

          在 <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> 事件之下，連接新的程式積木，以在歌曲期間的不同時間點變更背景效果。
      Dance short test_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 您需要在歌曲第七個小節的某個時候變更背景效果。

          *此層級在 10 個小節後結束。*
        challenges: |-
          **可選挑戰**

          在 <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> 事件之下，連接新的程式積木，以在歌曲期間的不同時間點變更背景效果。
      Dance_Party_01_authored_hint:
        validation: |-
          **我如何通過此層級？**
          * 確保舞者出現在螢幕上。

          *此層級在 4 個小節後結束。*
        challenges: |-
          **可選挑戰**
          * 選擇不同的歌曲播放。
          * 選擇一個看起來像麋鹿的不同項目！
          * 重新命名您的舞者。
      Dance_Party_01_low_authored_hint:
        validation: |-
          **我如何通過此層級？**
          * 確保舞者出現在螢幕上。

          *此層級在 4 個小節後結束。*
        challenges: |-
          **可選挑戰**
          * 選擇不同的歌曲播放。
          * 選擇一個看起來像麋鹿的不同項目！
          * 重新命名您的舞者。
      Dance_Party_02_authored_hint:
        validation: |-
          **我如何通過此層級？**
          * 舞者需要在 4 小節後切換到新的動作。

          *該層級在 8 個小節後結束。*
      Dance_Party_03_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 6 個小節後，您的舞者需要進行與 4 小節之後不同的舞蹈。

          *該層級在 12 個小節後結束。*
      Dance_Party_04_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 您需要在歌曲第七個小節的某個時候變更背景效果。

          *此層級在 10 個小節後結束。*
        challenges: |-
          **可選挑戰**

          在 <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> 事件之下，連接新的程式積木，以在歌曲期間的不同時間點變更背景效果。
      Dance_Party_06_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 您需要至少有兩個舞者。

          *此層級在 6 個小節後結束。*
        challenges: |-
          **可選挑戰**

          * 新增第三個舞者（或按需求盡量增加！）
          * 讓所有舞者在歌曲的不同時間點執行不同的動作。
      Dance_Party_08_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 兩個舞者需要有 100 以外的尺寸。

          *此層級在 6 個小節後結束。*
        challenges: |-
          **可選挑戰**

          * 變更其他屬性（寬度、高度、旋轉等）以進行實驗
      Dance_Party_09_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 變更至少一個舞者的色調。

          *此層級在 8 個小節後結束。*
      Dance_Party_1_authored_hint:
        validation: |-
          **我如何通過此層級？**
          * 確保舞者出現在螢幕上。

          *此層級在 4 個小節後結束。*
        challenges: |-
          **可選挑戰**
          * 選擇不同的歌曲播放。
          * 選擇一個看起來像麋鹿的不同項目！
          * 重新命名您的舞者。
      Dance_Party_10_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 兩個或更多的舞者屬性必須變更。

          *此層級在 8 個小節後結束。*
      Dance_Party_11.5_test_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 發揮創意即可！

          *此層級在 8 個小節後結束。*
      Dance_Party_11_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 發揮創意即可！

          *此層級在 8 個小節後結束。*
      Dance_Party_11_5_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 發揮創意即可！

          *此層級在 8 個小節後結束。*
      Dance_Party_11b_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 使用「按下左箭頭時」程式積木，讓機器人在您按下時進行舞蹈動作。

          *此層級在 8 個小節後結束。*
      Dance_Party_2_authored_hint:
        validation: |-
          **我如何通過此層級？**
          * 舞者需要在 4 小節後切換到新的動作。

          *該層級在 8 個小節後結束。*
      Dance_Party_3_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 6 個小節後，您的舞者需要進行與 4 小節之後不同的舞蹈。

          *該層級在 12 個小節後結束。*
      Dance_Party_4_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 您需要在歌曲第七個小節的某個時候變更背景效果。

          *此層級在 10 個小節後結束。*
        challenges: |-
          **可選挑戰**

          在 <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> 事件之下，連接新的程式積木，以在歌曲期間的不同時間點變更背景效果。
      Dance_Party_5_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 您的舞蹈必須在歌曲的前 12 個小節當中執行不同的動作。

          *此層級在 12 個小節後結束。*
      Dance_Party_6_authored_hint:
        challenges: |-
          **可選挑戰**

          * 新增第三個舞者（或按需求盡量增加！）
          * 讓所有舞者在歌曲的不同時間點執行不同的動作。
      Dance_Party_8_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 兩個舞者需要有 100 以外的尺寸。

          *此層級在 6 個小節後結束。*
        challenges: |-
          **可選挑戰**

          * 變更其他屬性（寬度、高度、旋轉等）以進行實驗
      Dance_Party_9_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 變更至少一個舞者的色調。

          *此層級在 8 個小節後結束。*
      Farmer for Authored Hint testing_authored_hint:
        first_hint: |-
          這是第一個提示。

          它有*某種* **基本的** `標記`
        second_hint: "這是第二個提示，我們用圖來說明。\n\n![](https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)"
        last_hint: 這是第三個提示，也是最後的提示了。它沒有什麼特別的東西。
      Farmer for TTS testing_authored_hint:
        first_hint: |-
          這是第一個提示。

          它有*某種* **基本的** `標記`
        second_hint: |-
          這是第二個提示，我們用圖來說明。

          ![](https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)
        last_hint: 這是第三個提示，也是最後的提示了。它沒有什麼特別的東西。
      Function intro Ryan_authored_hint:
        Function_intro_Ryan_b: 如果您正確地調用了函數, 那麼這就是您要移動的路徑...
        Function_intro_Ryan_a: 您可以在自己的程式中呼叫使用功能多次！請嘗試呼叫兩次以解決此版圖。
      Function intro Ryan_2019_authored_hint:
        Function_intro_Ryan_b: 如果您正確地調用了函數, 那麼這就是您要移動的路徑...
        Function_intro_Ryan_a: 您可以在自己的程式中呼叫使用功能多次！請嘗試呼叫兩次以解決此版圖。
      HOC 2018 Level_10_authored_hint:
        voyage_aquatic_10a: "看到**海燈籠** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png) 了嗎？如何有條件地使用它們以穿越海洋遺址？\n\n"
      HOC 2018 Level_9b_authored_hint:
        voyage_aquatic_9a: 真是美麗的珊瑚礁！藍色珊瑚應該要在**右**，還有紅色珊瑚應該要在**左**！
      HOC Dance 0_draft_authored_hint:
        validation: |-
          **我如何通過此層級？**
          * 確保舞者出現在螢幕上。

          *此層級在 4 個小節後結束。*
        challenges: |-
          **可選挑戰**
          * 選擇不同的歌曲播放。
          * 選擇一個看起來像麋鹿的不同項目！
          * 重新命名您的舞者。
      HOC Dance 1_draft_authored_hint:
        validation: |-
          **我如何通過此層級？**
          * 舞者需要在 4 小節後切換到新的動作。

          *該層級在 8 個小節後結束。*
      HOC Dance 2_draft_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 6 個小節後，您的舞者需要進行與 4 小節之後不同的舞蹈。

          *該層級在 12 個小節後結束。*
      HOC Dance 3_draft_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 您需要在歌曲第七個小節的某個時候變更背景效果。

          *此層級在 10 個小節後結束。*
        challenges: |-
          **可選挑戰**

          在 <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> 事件之下，連接新的程式積木，以在歌曲期間的不同時間點變更背景效果。
      HOC Dance 4_draft_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 您的舞蹈必須在歌曲的前 12 個小節當中執行不同的動作。

          *此層級在 12 個小節後結束。*
      HOC Dance 5_draft_authored_hint:
        challenges: |-
          **可選挑戰**

          * 新增第三個舞者（或按需求盡量增加！）
          * 讓所有舞者在歌曲的不同時間點執行不同的動作。
      HOC Dance 6_draft_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 兩個舞者需要有 100 以外的尺寸。

          *此層級在 6 個小節後結束。*
        challenges: |-
          **可選挑戰**

          * 變更其他屬性（寬度、高度、旋轉等）以進行實驗
      HOC Dance 7_draft_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 變更至少一個舞者的色調。

          *此層級在 8 個小節後結束。*
      HOC Dance 8_draft_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 兩個或更多的舞者屬性必須變更。

          *此層級在 8 個小節後結束。*
      HOC Dance 9_draft_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 發揮創意即可！

          *此層級在 8 個小節後結束。*
      HOC Dance make group_authored_hint:
        validation: |-
          **我如何通過此層級？**

          * 發揮創意即可！

          *此層級在 8 個小節後結束。*
      Harvesting_authored_hint:
        pointer_harvester_test: 哪種積木可以幫助我判斷（檢查還有做決定）？
      Inspirational Artwork_authored_hint:
        brush_width: 在我們開始前，先將筆刷的寬度設為 1，顏色設為藍色。
        double_loop: 試著放置一個`計數迴圈`到`重複`積木裡頭。
        specifics: "畫出 6 個「花瓣」的這個`計數迴圈`，每一次都會從 3 開始執行到 17，而畫出的形狀的邊數都會是奇數。\n\n`設置透明度`的積木中用了計數器，當計數器的值愈高時，顏色會變得愈淡。"
        after: 當你完成每個「花瓣」時，請檢查是否在你轉彎 60 度之前`移動-向前`了 20 像素。
        solution: |-
          **解決方案：**


          ![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      MC Agent Freeplay_authored_hint:
        MC_HOC_2017_13_Cole_a: 請嘗試讓 Agent 建立幾座橋樑，這樣愛莉克斯或史提夫才可走出地圖邊緣。
      MC_HOC_2017_01_Cole_authored_hint:
        MC_HOC_2017_01_Cole_a: 使用您的箭頭按鍵來引導玩家進入房屋。在橙色方塊中結束就獲勝。
      MC_HOC_2017_01_RETRY_authored_hint:
        MC_HOC_2017_01_RETRY_a: 從工具箱中拖曳一個「往前移動」方塊至工作空間，然後將該方塊放在「當按下執行時」方塊下方。
        MC_HOC_2017_01_RETRY_b: 別忘了按一下「執行」以執行 Agent 的代碼。
        MC_HOC_2017_01_RETRY_c: 當 Agent 已執行其所有代碼後，您就可以使用箭頭按鍵移動玩家！
      MC_HOC_2017_01_RETRY_2019_authored_hint:
        MC_HOC_2017_01_RETRY_a: 從工具箱中拖曳一個「往前移動」方塊至工作空間，然後將該方塊放在「當按下執行時」方塊下方。
        MC_HOC_2017_01_RETRY_b: 別忘了按一下「執行」以執行 Agent 的代碼。
        MC_HOC_2017_01_RETRY_c: 當 Agent 已執行其所有代碼後，您就可以使用箭頭按鍵移動玩家！
      MC_HOC_2017_02_Cole_authored_hint:
        MC_HOC_2017_02_Cole_a: 向前移動 Agent 兩步以站在壓板上。這將為玩家開門。
        MC_HOC_2017_02_Cole_b: |-
          按「執行」！ 
          即使代碼不正確，也仍然可以執行。執行並重設您的代碼，直到你找到出錯的原因為止。
        MC_HOC_2017_02_Cole_c: 當 Agent 把門打開之後，使用箭頭按鍵移動玩家至地圖上！
        MC_HOC_2017_02_Cole_d: 確保特工按照地圖上列出的路徑執行！
      MC_HOC_2017_02_Cole_2019_authored_hint:
        MC_HOC_2017_02_Cole_a: 向前移動 Agent 兩步以站在壓板上。這將為玩家開門。
        MC_HOC_2017_02_Cole_b: |-
          按「執行」！ 
          即使代碼不正確，也仍然可以執行。執行並重設您的代碼，直到你找到出錯的原因為止。
        MC_HOC_2017_02_Cole_c: 當 Agent 把門打開之後，使用箭頭按鍵移動玩家至地圖上！
        MC_HOC_2017_02_Cole_d: 確保特工按照地圖上列出的路徑執行！
      MC_HOC_2017_02_Will_authored_hint:
        MC_HOC_2017_02_Cole_a: 向前移動 Agent 兩步以站在壓板上。這將為玩家開門。
        MC_HOC_2017_02_Cole_b: |-
          按「執行 Agent」！ 
          即使代碼不正確，也仍然可以執行。執行並重設您的代碼，直到你找到出錯的原因為止。
        MC_HOC_2017_02_Cole_c: 當 Agent 把門打開之後，使用箭頭按鍵移動玩家至橙色方塊上！
      MC_HOC_2017_03_Cole_authored_hint:
        MC_HOC_2017_03_Cole_a: 當您將 Agent 移至壓板上後，您可以使用箭頭按鍵移動玩家至羅盤上！
        MC_HOC_2017_03_Cole_b: 代碼長度是否有點過長？請嘗試使用「重複」循環，看看是否能找出縮短代碼的方式！
      MC_HOC_2017_03_Cole_2019_authored_hint:
        MC_HOC_2017_03_Cole_a: 當您將 Agent 移至壓板上後，您可以使用箭頭按鍵移動玩家至羅盤上！
        MC_HOC_2017_03_Cole_b: 代碼長度是否有點過長？請嘗試使用「重複」循環，看看是否能找出縮短代碼的方式！
      MC_HOC_2017_04POINT5_Cole_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          交叉這兩塊壓板，將為玩家開啟路徑。 
          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_04POINT5_RYAN_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: '使用「向右轉」方塊以變更 Agent 的方向'
        MC_HOC_2017_04POINT5_RYAN_a: Agent 只需要抵達第一塊壓板，即可引導愛莉克斯或史提夫通過斧頭。
      MC_HOC_2017_04POINT5_RYAN_2019_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: '使用「向右轉」方塊以變更 Agent 的方向'
        MC_HOC_2017_04POINT5_RYAN_a: Agent 只需要抵達第一塊壓板，即可引導愛莉克斯或史提夫通過斧頭。
      MC_HOC_2017_04_Cole_authored_hint:
        MC_HOC_2017_04_Cole_a: Agent 必須「往前移動」7 次。您可以如何使用「重複」循環來完成這個任務？
        MC_HOC_2017_04_Cole_c: |-
          按「執行」！ 
          即使代碼不正確，也仍然可以執行。執行並重設您的代碼，直到你找到出錯的原因為止。
        MC_HOC_2017_04_Cole_b: 當 Agent 抵達壓板後，他將為玩家開門。
      MC_HOC_2017_04_Cole_2019_authored_hint:
        MC_HOC_2017_04_Cole_a: Agent 必須「往前移動」7 次。您可以如何使用「重複」循環來完成這個任務？
        MC_HOC_2017_04_Cole_c: |-
          按「執行」！ 
          即使代碼不正確，也仍然可以執行。執行並重設您的代碼，直到你找到出錯的原因為止。
        MC_HOC_2017_04_Cole_b: 當 Agent 抵達壓板後，他將為玩家開門。
      MC_HOC_2017_05_Cole_authored_hint:
        MC_HOC_2017_05_Cole_a: 您知道嗎？您可以將代碼的多個部分放在循環中。請嘗試放置木板**並**向前移動至「重複」內以完成此版圖。
        MC_HOC_2017_05_Cole_b: 讓特工過河，在你走的時候建一座橋。
      MC_HOC_2017_05_Cole_2019_authored_hint:
        MC_HOC_2017_05_Cole_a: 您知道嗎？您可以將代碼的多個部分放在循環中。請嘗試放置木板**並**向前移動至「重複」內以完成此版圖。
        MC_HOC_2017_05_Cole_b: 讓特工過河，在你走的時候建一座橋。
      MC_HOC_2017_05_Josh_authored_hint:
        MC_HOC_2017_05_Cole_a: 您知道嗎？您可以將代碼的多個部分放在循環中。請嘗試放置木板**並**向前移動至「重複」內以完成此版圖。
      MC_HOC_2017_06_Cole_authored_hint:
        MC_HOC_2017_06_Cole_a: 此循環會執行多少次？循環*應*執行多少次？
        MC_HOC_2017_06_Cole_b: '幫助特工在水面上架起一座橋！ '
      MC_HOC_2017_06_Cole_2019_authored_hint:
        MC_HOC_2017_06_Cole_a: 此循環會執行多少次？循環*應*執行多少次？
        MC_HOC_2017_06_Cole_b: '幫助特工在水面上架起一座橋！ '
      MC_HOC_2017_06_Josh_authored_hint:
        MC_HOC_2017_06_Cole_a: 請嘗試在「重複」循環中放置多個指令！
      MC_HOC_2017_07_Cole_authored_hint:
        MC_HOC_2017_07_Cole_c: 你所需要做的就是讓特工為你掃清通往礦車的道路。
        MC_HOC_2017_07_Cole_a: 若要解決此版圖，請找出「清除路徑」的功能，並使用工具箱中小型綠色「清除路徑」方塊，依照自己的所需次數呼叫。
        MC_HOC_2017_07_Cole_b: 請嘗試混合功能方塊與工具箱中的其他方塊，以協助您解決此版圖。
      MC_HOC_2017_07_Cole_2019_authored_hint:
        MC_HOC_2017_07_Cole_c: 你所需要做的就是讓特工為你掃清通往礦車的道路。
        MC_HOC_2017_07_Cole_a: 若要解決此版圖，請找出「清除路徑」的功能，並使用工具箱中小型綠色「清除路徑」方塊，依照自己的所需次數呼叫。
        MC_HOC_2017_07_Cole_b: 請嘗試混合功能方塊與工具箱中的其他方塊，以協助您解決此版圖。
      MC_HOC_2017_08_RY_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          按「執行 Agent」！ 
          即使代碼不正確，也仍然可以執行。執行並重設您的代碼，直到你找到出錯的原因為止。
        MC_HOC_2017_08_RY_b: 解決此版圖有許多方式。請嘗試採用幾個！
      MC_HOC_2017_08_Will_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          按「執行 Agent」！ 
          即使代碼不正確，也仍然可以執行。執行並重設您的代碼，直到你找到出錯的原因為止。
        MC_HOC_2017_08_RY_b: 解決此版圖有許多方式。請嘗試採用幾個！
      MC_HOC_2017_10_Cole_authored_hint:
        MC_HOC_2017_10_Cole_a: 使用功能以更輕鬆檢決此版圖！
      MC_HOC_2017_10_RETRY_authored_hint:
        MC_HOC_2017_10_Cole_b: 不知道去哪兒？看看你是否能找到虛線！
        MC_HOC_2017_10_Cole_a: 使用功能以更輕鬆檢決此版圖！
      MC_HOC_2017_10_RETRY_2019_authored_hint:
        MC_HOC_2017_10_Cole_b: 不知道去哪兒？看看你是否能找到虛線！
        MC_HOC_2017_10_Cole_a: 使用功能以更輕鬆檢決此版圖！
      MC_HOC_2017_13_Cole_authored_hint:
        MC_HOC_2017_13_Cole_a: 請嘗試讓 Agent 建立幾座橋樑，這樣愛莉克斯或史提夫才可走出地圖邊緣。
      MC_HOC_2017_4.5v2_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          交叉這兩塊壓板，將為玩家開啟路徑。 
          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_Ali_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          按「執行」！ 
          即使代碼不正確，也仍然可以執行。執行並重設您的代碼，直到你找到出錯的原因為止。
        MC_HOC_2017_08_RY_b: 解決此版圖有許多方式。請嘗試採用幾個！
        MC_HOC_2017_08_RY_c: 試著沿著這條虛線，找到一條穿過熔岩的簡單路徑。
      MC_HOC_2017_Ali_2019_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          按「執行」！ 
          即使代碼不正確，也仍然可以執行。執行並重設您的代碼，直到你找到出錯的原因為止。
        MC_HOC_2017_08_RY_b: 解決此版圖有許多方式。請嘗試採用幾個！
        MC_HOC_2017_08_RY_c: 試著沿著這條虛線，找到一條穿過熔岩的簡單路徑。
      MC_HOC_2017_FP20x20_authored_hint:
        MC_HOC_2017_13_Cole_a: 請嘗試讓 Agent 建立幾座橋樑，這樣愛莉克斯或史提夫才可走出地圖邊緣。
      MC_HOC_2017_FP20x20_2019_authored_hint:
        MC_HOC_2017_13_Cole_a: 請嘗試讓 Agent 建立幾座橋樑，這樣愛莉克斯或史提夫才可走出地圖邊緣。
      NEW Course 4 Artist Functions 13_authored_hint:
        NEW_Course_4_Artist_Functions_13_a: 試試修改 `draw a line of squares`（畫出方格邊）函式，這樣一來，你就不必呼叫它兩次。
        NEW_Course_4_Artist_Functions_13_c: 如果你要製作一個有規律線條的星星圖像，要編寫怎樣的程式碼呢？
      NEW Course 4 Artist Functions 4_authored_hint:
        NEW_Course_4_Artist_Functions_4_a: 你必須在畫出每個正方形之後使用 `轉向-右方 120 度`積木。
      NEW Course 4 Artist Functions 9_authored_hint:
        NEW_Course_4_Artist_Functions_9_a: 在你開始添加積木前，運行這個程式看看。是什麼地方讓圖案不大對勁？
        NEW_Course_4_Artist_Functions_9_b: 如果你不能明確的指出錯誤的地方，試著把滑桿往左調，讓程式的運行速度變慢。
      NEW Course 4 Artist Params 11_authored_hint:
        NEW_Course_4_Artist_Params_11_a: 只需要把函式裡頭的數字換成一個變數就可以了。
      NEW Course 4 Artist Params 13_authored_hint:
        NEW_Course_4_Artist_Params_13_a: '用 perimeter 除以 sides（周長除以邊數）的方式，就可以讓每個形狀都能有相同的尺寸。 '
      NEW Course 4 Artist Params inspire_authored_hint:
        brush_width: 在我們開始前，先將筆刷的寬度設為 1，顏色設為藍色。
        double_loop: 試著放置一個`計數迴圈`到`重複`積木裡頭。
        specifics: "畫出 6 個「花瓣」的這個`計數迴圈`，每一次都會從 3 開始執行到 17，而畫出的形狀的邊數都會是奇數。\n\n`設置透明度`的積木中用了計數器，當計數器的值愈高時，顏色會變得愈淡。"
        after: 當你完成每個「花瓣」時，請檢查是否在你轉彎 60 度之前`移動-向前`了 20 像素。
        solution: |-
          **解決方案：**


          ![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      NEW Course 4 Bee For Loops 8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: "如果循環的數字是由小排到大，每次循環就會從計數器變量中加上間隔的值。\n\n如果要依序收集花蜜，間隔數需要設成多少？"
      New Minecraft Hero Project_authored_hint:
        MC_HOC_2017_13_Cole_a: 請嘗試讓 Agent 建立幾座橋樑，這樣愛莉克斯或史提夫才可走出地圖邊緣。
      Overworld Avoid Monsters_authored_hint:
        mc_8_a: 你可以走幾條路。哪條是最短的？
        mc_8_b: 使用“重複”循環來簡化代碼。
        mc_8_c: 你的目標是進入屏幕頂端的房子的門口。
      Overworld Avoid Monsters_2018_authored_hint:
        mc_8_a: 你可以走幾條路。哪條是最短的？
        mc_8_b: 使用“重複”循環來簡化代碼。
        mc_8_c: 你的目標是進入屏幕頂端的房子的門口。
      Overworld Avoid Monsters_2019_authored_hint:
        mc_8_a: 你可以走幾條路。哪條是最短的？
        mc_8_b: 使用“重複”循環來簡化代碼。
        mc_8_c: 你的目標是進入屏幕頂端的房子的門口。
      Overworld Chop Tree_authored_hint:
        mc_2_a: '你需要“前進”兩次才能站在樹前。'
        mc_2_b: '“銷毀程式積木”命令會把你面前的樹砍倒。'
      Overworld Chop Tree_2018_authored_hint:
        mc_2_a: '你需要“前進”兩次才能站在樹前。'
        mc_2_b: '“銷毀程式積木”命令會把你面前的樹砍倒。'
      Overworld Chop Tree_2019_authored_hint:
        mc_2_a: '你需要“前進”兩次才能站在樹前。'
        mc_2_b: '“銷毀程式積木”命令會把你面前的樹砍倒。'
      Overworld Chop Trees_authored_hint:
        mc_4_a: '你可以按任何順序砍伐樹木。哪條路徑佔用最小的程式積木？'
        mc_4_b: '“銷毀程式積木”命令會把你面前的樹砍倒。'
      Overworld Chop Trees_2018_authored_hint:
        mc_4_a: '你可以按任何順序砍伐樹木。哪條路徑佔用最小的程式積木？'
        mc_4_b: '“銷毀程式積木”命令會把你面前的樹砍倒。'
      Overworld Chop Trees_2019_authored_hint:
        mc_4_a: '你可以按任何順序砍伐樹木。哪條路徑佔用最小的程式積木？'
        mc_4_b: '“銷毀程式積木”命令會把你面前的樹砍倒。'
      Overworld House Frame Chosen_authored_hint:
        mc_6_a: 單擊“位置”程式積木的箭頭，選擇要放置的內容。
        mc_6_b: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
        mc_6_c: 您可以在“重複”循環中放入多個程式積木。
      Overworld House Frame Chosen_2018_authored_hint:
        mc_6_a: 單擊“位置”程式積木的箭頭，選擇要放置的內容。
        mc_6_b: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
        mc_6_c: 您可以在“重複”循環中放入多個程式積木。
      Overworld House Frame Chosen_2019_authored_hint:
        mc_6_a: 單擊“位置”程式積木的箭頭，選擇要放置的內容。
        mc_6_b: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
        mc_6_c: 您可以在“重複”循環中放入多個程式積木。
      Overworld Move to Sheep_authored_hint:
        mc_1_a: '“前進”程式積木在工具箱的頂部。'
        mc_1_b: '確保兩個“向前移動”程式積木在“運行”程式積木的時候被捕捉了。'
      Overworld Move to Sheep_2018_authored_hint:
        mc_1_a: '“前進”程式積木在工具箱的頂部。'
        mc_1_b: '確保兩個“向前移動”程式積木在“運行”程式積木的時候被捕捉了。'
      Overworld Move to Sheep_2019_authored_hint:
        mc_1_a: '“前進”程式積木在工具箱的頂部。'
        mc_1_b: '確保兩個“向前移動”程式積木在“運行”程式積木的時候被捕捉了。'
      Overworld Place Wall_authored_hint:
        mc_5_a: 先使用“放置”程式積木，然後使用“移動”程式積木。
        mc_5_b: 確保兩個塊都在“重複”循環的內部，以便多次運行代碼。
        mc_5_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      Overworld Place Wall_2018_authored_hint:
        mc_5_a: 先使用“放置”程式積木，然後使用“移動”程式積木。
        mc_5_b: 確保兩個塊都在“重複”循環的內部，以便多次運行代碼。
        mc_5_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      Overworld Place Wall_2019_authored_hint:
        mc_5_a: 先使用“放置”程式積木，然後使用“移動”程式積木。
        mc_5_b: 確保兩個塊都在“重複”循環的內部，以便多次運行代碼。
        mc_5_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      Overworld Plant Crops_authored_hint:
        mc_7_a: 使用“植物作物”程式積木在你站立的地方種植作物。
        mc_7_b: 兩條帶深棕色的土地都需要種滿莊稼。
        mc_7_c: 您可以在“重複”循環中放入多個程式積木。
      Overworld Plant Crops_2018_authored_hint:
        mc_7_a: 使用“植物作物”程式積木在你站立的地方種植作物。
        mc_7_b: 兩條帶深棕色的土地都需要種滿莊稼。
        mc_7_c: 您可以在“重複”循環中放入多個程式積木。
      Overworld Plant Crops_2019_authored_hint:
        mc_7_a: 使用“植物作物”程式積木在你站立的地方種植作物。
        mc_7_b: 兩條帶深棕色的土地都需要種滿莊稼。
        mc_7_c: 您可以在“重複”循環中放入多個程式積木。
      Overworld Powered Minecart_authored_hint:
        mc_13_a: 在你所站的廣場上使用“放置鐵路”鋪設鐵路。
        mc_13_b: 使用“重複”循環來縮短代碼。
      Overworld Powered Minecart_2018_authored_hint:
        mc_13_a: 在你所站的廣場上使用“放置鐵路”鋪設鐵路。
        mc_13_b: 使用“重複”循環來縮短代碼。
      Overworld Powered Minecart_2019_authored_hint:
        mc_13_a: 在你所站的廣場上使用“放置鐵路”鋪設鐵路。
        mc_13_b: 使用“重複”循環來縮短代碼。
      Overworld Shear Sheep_authored_hint:
        mc_3_a: '“剪切”程式積木把羊放在你的前面。你面對著羊群嗎?'
        mc_3_b: '如果你需要改變你面對的方式，那就用“轉動”程式積木。'
        mc_3_c: '不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。'
      Overworld Shear Sheep_2018_authored_hint:
        mc_3_a: '“剪切”程式積木把羊放在你的前面。你面對著羊群嗎?'
        mc_3_b: '如果你需要改變你面對的方式，那就用“轉動”程式積木。'
        mc_3_c: '不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。'
      Overworld Shear Sheep_2019_authored_hint:
        mc_3_a: '“剪切”程式積木把羊放在你的前面。你面對著羊群嗎?'
        mc_3_b: '如果你需要改變你面對的方式，那就用“轉動”程式積木。'
        mc_3_c: '不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。'
      Pattern Bee 1_authored_hint:
        conditional_pointer: |-
          先思考一下這個：每個步驟之間有什麼不同處？哪種積木可以幫你*判斷*你是在花朵還是在蜂窩上？

          ![](https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: 除了釀造蜂蜜，你看得出來在每個蜂窩上還要做些什麼嗎？
      Planning Farmer_authored_hint:
        conditional_pointer: |-
          先思考一下這個：每個步驟之間有什麼不同處？哪種積木可以幫你*判斷*你是在花朵還是在蜂窩上？

          ![](https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: 除了釀造蜂蜜，你看得出來在每個蜂窩上還要做些什麼嗎？
      Quantum Bee - Ryan_authored_hint:
        test_hint: 這是測試用提示。
      Ryan_Demo_authored_hint:
        validation: |-
          **我如何通過此層級？**
          * 舞者需要在 4 小節後切換到新的動作。

          *該層級在 8 個小節後結束。*
      Underground Avoiding Lava_authored_hint:
        mc_11_a: 所有的代碼都是用來檢查熔岩並處理它的。您所需要做的就是添加一個程式積木來移動。
        mc_11_b: 你的“前進”命令是否應該進入“if”語句或之後再進入？
      Underground Avoiding Lava_2018_authored_hint:
        mc_11_a: 所有的代碼都是用來檢查熔岩並處理它的。您所需要做的就是添加一個程式積木來移動。
        mc_11_b: 你的“前進”命令是否應該進入“if”語句或之後再進入？
      Underground Avoiding Lava_2019_authored_hint:
        mc_11_a: 所有的代碼都是用來檢查熔岩並處理它的。您所需要做的就是添加一個程式積木來移動。
        mc_11_b: 你的“前進”命令是否應該進入“if”語句或之後再進入？
      Underground If Statements_authored_hint:
        mc_12_a: 紅色斑點的空間是你找到紅石的地方。
        mc_12_b: 你能使用“重複”循環來縮短你的代碼嗎?
        mc_12_c: '使用“if”語句檢查熔岩空間，然後放置鵝卵石。 '
      Underground If Statements_2018_authored_hint:
        mc_12_a: 紅色斑點的空間是你找到紅石的地方。
        mc_12_b: 你能使用“重複”循環來縮短你的代碼嗎?
        mc_12_c: '使用“if”語句檢查熔岩空間，然後放置鵝卵石。 '
      Underground If Statements_2019_authored_hint:
        mc_12_a: 紅色斑點的空間是你找到紅石的地方。
        mc_12_b: 你能使用“重複”循環來縮短你的代碼嗎?
        mc_12_c: '使用“if”語句檢查熔岩空間，然後放置鵝卵石。 '
      Underground Iron_authored_hint:
        mc_10_a: 鐵塊是火炬背後的斑點空間！你打算怎麼去那兒？
        mc_10_b: 當你站在熔岩邊緣的時候，用“將鵝卵石放在前面”就能使路線安全。然後，你就可以走過去了。
        mc_10_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      Underground Iron_2018_authored_hint:
        mc_10_a: 鐵塊是火炬背後的斑點空間！你打算怎麼去那兒？
        mc_10_b: 當你站在熔岩邊緣的時候，用“將鵝卵石放在前面”就能使路線安全。然後，你就可以走過去了。
        mc_10_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      Underground Iron_2019_authored_hint:
        mc_10_a: 鐵塊是火炬背後的斑點空間！你打算怎麼去那兒？
        mc_10_b: 當你站在熔岩邊緣的時候，用“將鵝卵石放在前面”就能使路線安全。然後，你就可以走過去了。
        mc_10_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      Underground Mining Coal_authored_hint:
        mc_9_a: 你面對的是正確的方式嗎?“破壞程式積木”把你前面的程式積木埋起來。
        mc_9_b: 牆上的黑點是煤！用“摧毀程式積木”來開採煤炭。
        mc_9_c: 用“放置火炬”把火炬放在你站的地方。
      Underground Mining Coal_2018_authored_hint:
        mc_9_a: 你面對的是正確的方式嗎?“破壞程式積木”把你前面的程式積木埋起來。
        mc_9_b: 牆上的黑點是煤！用“摧毀程式積木”來開採煤炭。
        mc_9_c: 用“放置火炬”把火炬放在你站的地方。
      Underground Mining Coal_2019_authored_hint:
        mc_9_a: 你面對的是正確的方式嗎?“破壞程式積木”把你前面的程式積木埋起來。
        mc_9_b: 牆上的黑點是煤！用“摧毀程式積木”來開採煤炭。
        mc_9_c: 用“放置火炬”把火炬放在你站的地方。
      Valentine_artist2_01_authored_hint:
        Valentine_artist2_01_a: 草的每一面长度为30像素。尝试使用楼梯踏步模式。
        Valentine_artist2_01_b: '你看到重複模式了嗎？你應該在一個循環中使用兩個“向前移動”程式積木和兩個不同的“轉動”程式積木。 '
        Valentine_artist2_01_c: |-
          試一下這個迴圈
          <xml><block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      Valentine_artist_01_authored_hint:
        Valentine_artist_01_a: 藝術家需要朝哪個方向移動？藝術家需要往哪個方向去放置一個新的美洲駝貼紙？
        Valentine_artist_01_b: 這位藝術家需要放置10條駱駝牌的貼紙，並在每次轉彎時旋轉90度。
      Valentine_playlab_01_authored_hint:
        Valentine_playlab_01_a: |-
          捕捉 “演員1拋出紅色的心”程式積木進入 “當演員1點擊” 事件。

          別忘了把 “左”改為“下”！
        Valentine_playlab_01_b: 使用 “移動演員1左”程式積木，點擊它在 “左箭頭點擊”事件下的地方。
      aE2_authored_hint:
        aE2_a: 注意，由於餐巾是 20 像素長，你需要跳躍 20 像素，在你開始你的下一個迴圈之前。
      aE3_authored_hint:
        aE3_a: 在運行你在上個關卡做的**巢狀迴圈**之後，你需要往後跳回起始處。
        aE3_b: "別忘了在你開始畫一列形狀前，先讓小藝術家向下移動！\n\n移動小藝術家，並讓他面對正確的方向：\n- 轉向 90 度（讓他面朝下）\n- 跳躍 20 像素（讓他到新的一列）\n- 轉回 90 度（讓他再次面朝右）"
        aE3_c: 當你都做完了，你的**巢狀迴圈**應該會有三層深。
        aE3_d: 如果你的程式變得太雜亂，你可以點擊「重新開始」恢復成原狀，然後重新再一次！
      aE3alternate_authored_hint:
        aE3alternate_a: 在運行你在上個關卡做的**巢狀迴圈**之後，你需要往後跳回起始處。
        aE3alternate_b: "別忘了在你開始畫一列形狀前，先讓小藝術家向下移動！\n\n移動小藝術家，並讓他面對正確的方向：\n- 轉向 90 度（讓他面朝下）\n- 跳躍 20 像素（讓他到新的一列）\n- 轉回 90 度（讓他再次面朝右）"
        aE3alternate_c: 當你都做完了，你的**巢狀迴圈**應該會有三層深。
        aE3alternate_d: 如果你的程式變得太雜亂，你可以點擊「重新開始」恢復成原狀，然後重新再一次！
      aE3alternateB_authored_hint:
        aE4alternateB_a: 在運行你在上個關卡做的**巢狀迴圈**之後，你需要往後跳回起始處。
        aE4alternateB_b: "別忘了在你開始畫一列形狀前，先讓小藝術家向下移動！\n\n移動小藝術家，並讓他面對正確的方向：\n- 轉向 90 度（讓他面朝下）\n- 跳躍 20 像素（讓他到新的一列）\n- 轉回 90 度（讓他再次面朝右）"
        aE4alternateB_c: 當你都做完了，你的**巢狀迴圈**應該會有三層深。
        aE4alternateB_d: 如果你的程式變得太雜亂，你可以點擊「重新開始」恢復成原狀，然後重新再一次！
      aE4_authored_hint:
        aE4_a: 在運行你在上個關卡做的**巢狀迴圈**之後，你需要往後跳回起始處。
        aE4_b: "別忘了在你開始畫一列形狀前，先讓小藝術家向下移動！\n\n移動小藝術家，並讓他面對正確的方向：\n- 轉向 90 度（讓他面朝下）\n- 跳躍 20 像素（讓他到新的一列）\n- 轉回 90 度（讓他再次面朝右）"
        aE4_c: 當你都做完了，你的**巢狀迴圈**應該會有三層深。
        aE4_d: 如果你的程式變得太雜亂，你可以點擊「重新開始」恢復成原狀，然後重新再一次！
      aE6_authored_hint:
        aE6_a: |-
          如果有個 180 度角的半圓形，每次循環小藝術家會轉 3 度，你需要循環幾次（轉多少次）才能畫出一個半圓？

          **180 ÷ 3 = ?**
      aE7_authored_hint:
        aE7_a: 畫出這個半圓的下半部，然後再畫出上半部，就可以製造出分割的圖形。
        aE7_b: 你需要 4 個來完成這個關卡。
      aE8_authored_hint:
        aE8_a: "要製作出一個正方形，你需要：\n- 畫出線條\n\n- 使用轉向來轉彎\n\n重複這些步驟 4 次。"
      allHallows2017_authored_hint:
        allHallows2017_a: 小心！GT可能會騎他的自行車跟著你，擦去你的線！
        allHallows2017_g: '莎拉：“你冷嗎？來坐在角落裡…這是90度！”'
        allHallows2017_c: 'Jordyn說： “你現在不能停下來！繼續！”'
        allHallows2017_d: 'Josh說：“你需要利用你的編碼技能來解決這個難題！”'
        allHallows2017_e: 'Dani說：“我不擅長雙關語。試著用一個重複的程式積木！”'
        allHallows2017_b: 'Baker說：“芝加哥的蠟筆只在*綠線*上工作。”'
        allHallows2017_f: 'Amy說：“你可以做到！只要跳出固有的思維模式”'
      artistDebugVideo1_authored_hint:
        courseA_artist_loops7_a: 不知道該把這個環放在哪裡？嘗試一步一步地編寫代碼，並尋找模式。
      artistLoopsK2_authored_hint:
        artistLoopsK2_a: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
      artistLoopsK2gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
      artistLoopsK3_authored_hint:
        artistLoopsK3_a: 試著用你學到的重複積木來完成這個關卡！
      artistLoopsK4_authored_hint:
        artistLoopsK4_a: 卡關了嗎？試試運行程式，看看哪個積木不正確。
      artistLoopsK5_authored_hint:
        artistLoopsK5_a: 開始的 4 個積木應該放到重複積木裡頭，這樣就可以完成關卡了。
      artistLoopsK6_authored_hint:
        artistLoopsK6_a: 試著運行它，看看哪裡有 bug。
      artistLoopsK7_authored_hint:
        artistLoopsK7_a: 要完成這個關卡所需要的積木通通都在工作區裡了！
      artistLoopsK8_authored_hint:
        artistLoopsK8_a: 試著運行它，看看哪裡有 bug。
      artistLoopsK9_authored_hint:
        artistLoopsK9_a: 這個挑戰用了 4 個迴圈，一個接著一個！
      artistLoopsKA_authored_hint:
        artistLoopsKA_a: 使用跳躍積木可以向前移動但不會畫線。
      artistLoopsKB_authored_hint:
        artistLoopsKB_a: 要完成關卡的話，你的迴圈裡應該要有 3 個積木。
      comment_intro_maze_2018_authored_hint:
        courseC_maze_programming4_a: 當其他人試圖閱讀你的代碼時，評論也很有用。
        courseC_maze_programming4_b: 當你改變方向時添加一條評論-如果你轉向另一個方向，會發生什麼？
      comment_intro_maze_2018_2019_authored_hint:
        courseC_maze_programming4_a: 當其他人試圖閱讀你的代碼時，評論也很有用。
        courseC_maze_programming4_b: 當你改變方向時添加一條評論-如果你轉向另一個方向，會發生什麼？
      course1_artist_loops_challenge1_authored_hint:
        courseA_artist_loops_challenge1_a: |+
          你可以使用像這樣的迴圈來創建圍牆和屋頂。試試重複不同的積木。

          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          自行設計或是點擊 ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) 以獲得更多靈感！
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2_authored_hint:
        harvey_tictactoe: 你可以利用 `跳躍` 積木移動到其它的空格。
      course1_artist_loops_challenge3_authored_hint:
        courseA_artist_loops_challenge2_a: '像這樣的程式積木：<xml>  <block type="simple_move_up_left"/></xml> 可以讓小藝術家斜著移動！'
        courseA_artist_loops_challenge2_b: 當你完成了一個鳥屋時，`跳躍`到下一個！
        courseA_artist_loops_challenge2_c: 這一關的迴圈裡用到了「很多」的程式積木喔。
      course1_artist_loops_challenge4_authored_hint:
        courseB_artist_loops_challenge1_a: '像這樣的積木：<xml>  <block type="simple_move_up_right"/></xml> 能讓你的角色斜向移動！'
        courseB_artist_loops_challenge1_b: 當你完成了一個骰子時，`跳躍`到下一個！
        courseB_artist_loops_challenge1_c: '你需要在同一行上使用`移動`或`跳躍`兩次。'
      course1_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: 如果出錯了，可以試試修改每個迴圈裡的數值。
        courseA_collector_loops_challenge1_b: 如果你只要執行某段指令一次，就不需要用到迴圈。
        courseA_collector_loops_challenge1_c: 右邊的洞穴有 6 個寶石，而你只需移動並收集 5 次，你知道怎麼做嗎？
      course1_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: "只要一個 ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) 積木就可以解決囉！"
        courseA_collector_loops_challenge2_a: |-
          在往南移動之前，你可以重複移動到相同路徑。

          ![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      course1_collector_loops_challenge3_authored_hint:
        courseB_collector_loops_challenge1_b: |
          只要一個 ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) 積木就可以解決囉！
        courseB_collector_loops_challenge1_a: |
          北方模式與南方模式略有不同。
          <xml>
          <block type="collector_collect"/><next>
          <block type="maze_moveNorth"/></next>next>
          </xml>
        courseB_collector_loops_challenge1_c: "在每個路徑之間向東邊移動兩次。\n<xml>\n  <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next>\n  </xml>\n你可以只用 14 個積木完成這個任務。點擊更多提示可以看到解法。\n"
        courseB_collector_loops_challenge1_d: |-
          試試這個！
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveEast"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveWest"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course1_collector_loops_challenge4_authored_hint:
        courseB_collector_loops_challenge2_a: 如果出錯了，可以試試修改每個迴圈裡的數值。
        courseB_collector_loops_challenge2_b: |-
          如果你錯過了寶藏，你需要移動回西邊一格。
        courseB_collector_loops_challenge2_c: 別忘了使用迴圈來收集最後一堆寶藏！
      course1_maze_debugging_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: 路上可能會碰上 TNT 炸藥。
      course1_maze_debugging_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: 這個關卡不需要添加或是移除任何的積木。
        courseB_maze_seq_challenge2_b: 重新排列積木，走中間那條路。
      course1_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: 試著用你的手指頭點出要移動的空格數（你站的那一格不要算！）
      course1_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: 這次最短的路徑不管用囉！
        courseB_maze_seq_challenge1_b: 試試先向西邊移動。
      course1_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "當你點擊Robin的時候，你就可以看到企鵝的樣子了！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "當你點擊企鵝時做鬼表演！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "當你點擊Boo時，讓Jayden成為“模糊怪物秀”！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "當你點擊怪物時，讓 Spiff 的機器人表演！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "最後，當您單擊Spiff時，讓Wendel成為嚮導！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "你可以讓一隻鳥唱歌。\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">小鳥叫聲</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "你可以讓機器人發出嗶嗶聲.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">得分</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          你可以製造一個憤怒的怪物咆哮。

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">咆哮!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      course2_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: 首先創建一個嵌套循環來創建四個八邊形。轉動45度生成八邊形。跳起來，然後每一個都轉90度。
        courseD_artist_nestedLoops_challenge1_b: 添加代碼，在嵌套循環中繪製一個三角形。用120度的角度來改變你的三角形。
        courseD_artist_nestedLoops_challenge1_c: |-
          使用嵌套循環：
          - 重複8次
          - 繪製一個八邊形
          - 繪製一個三角形
          - 向前跳50個像素
          - 向右轉90度
      course2_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: '這個矩形的寬是 200 像素，高是 100 像素。'
      course2_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: |-
          你能找到這樣一條路，能到達每一朵花和蜂巢，卻不會撞到任何樹木嗎？最好的道路是螺旋。

          **你可以不用左轉就可以解決這個問題。**
      course2_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: 您可以更頻繁地使用“收集”命令來收集額外的寶藏。
      course2_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: 您可以更頻繁地使用“收集”命令來收集額外的寶藏。
      course2_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: 不用迴圈是不可能達成目標的！
        courseC_harvester_loops_challenge1_b: 你可以重複執行`移動-向前`和`收集玉米`到你想要的次數，然後在每次要轉向時使用`轉向-右邊`積木。
        courseC_harvester_loops_challenge1_c: |-
          要收集一開始的四個玉米，最好的方式是在一個`重複`積木裡頭使用另一個`重複`積木。你可以用這個模式來解決後面的關卡！

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      course2_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_b: 你可以重複執行`移動-向前`和`收集生菜`到你想要的次數，然後在每次要轉向時使用轉向積木。
      course2_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_c: |-
          你只需“左轉”然後“向前走”幾次，你就能做到這一點。不要放棄！

          ![](https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png)
      course2_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: "*如果你把我倒過來，要格外小心我的方向是否是正確的！*"
        courseC_maze_programming_challenge2_b: 最短的解決方案只使用5個程式積木，但它使用的是“重複”程式積木！
      course2_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: 試著用你的手指頭點出要移動的空格數（你站的那一格不要算！）
      course2_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: 這次最短的路徑不管用囉！
        courseB_maze_seq_challenge1_b: 試試先向西邊移動。
      course3_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: '這個半六邊形有一個**30 像素的邊**還有需要轉向**60 度**。  '
        courseE_artist_concept_challenge1_b: '這個 2/3 的三角形有一個**80 像素的邊**還有需要轉向**120 度**。 '
      course3_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      course3_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      course3_bee_functions_challenge4_authored_hint:
        courseF_bee_functions_challenge2_b: |-
          **解決方案：**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">向前走</title>
          <next>
          <block type="maze_if">
          <title name="DIR">路徑正確</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">左轉</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">檢查花蜜和蜂蜜</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">花叢中</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">剩餘花蜜</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">可用的蜂蜜</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">移動和檢查</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">右轉</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">向前走</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">右轉</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      course3_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: 左邊還是右邊？你決定就好！
        courseC_maze_debugging_challenge1_b: 鼠奎特走的路徑是個四邊形！所以每次都轉向同要是同一邊！
      course3_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_a: 有個解法，就是在每次轉向時添加更多的移動積木。
        courseC_maze_debugging_challenge2_b: 如果你卡關了，你可以重頭開始，或者移除所有的程式碼後再試試別的方法！
      course4_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: '變數非常有用，因為你每循環一次就可以加一個數值上去。 '
        courseF_artist_variables_challenge2_b: 這個關卡有個畫出多邊形的迴圈，一個用來重複多邊形 `sides` 次，另一個在 `sides` 加上 5 以後再做一次。
        courseF_artist_variables_challenge2_c: 使用變數，`sides` 代表邊數，`length` 代表長度，用它們可以編寫出簡潔的程式，因為我們可以透過迴圈來執行相同的程式多次，這樣一來，模式相同但數字不同的程式就不需要編寫好多次。
        courseF_artist_variables_challenge2_d: |-
          **解決方案：**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseA_artist_loops3_authored_hint:
        courseA_artist_loops3_b: |-
          你會想要用一個像這樣的程式積木來過這個關卡。

          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops3_2018_authored_hint:
        courseA_artist_loops3_b: |-
          你會想要用一個像這樣的程式積木來過這個關卡。

          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops3_2019_authored_hint:
        courseA_artist_loops3_b: |-
          你會想要用一個像這樣的程式積木來過這個關卡。

          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops4_authored_hint:
        courseA_artist_loops4_a: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
        courseA_artist_loops4_b: |-
          因為你只能用一個 <xml><block type="simple_move_right"/></xml>程式積木，所以試試將它放在 <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block>迴圈裡。
      courseA_artist_loops4_2018_authored_hint:
        courseA_artist_loops4_a: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
        courseA_artist_loops4_b: |-
          因為你只能用一個 <xml><block type="simple_move_right"/></xml>程式積木，所以試試將它放在 <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block>迴圈裡。
      courseA_artist_loops4_2019_authored_hint:
        courseA_artist_loops4_a: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
        courseA_artist_loops4_b: |-
          因為你只能用一個 <xml><block type="simple_move_right"/></xml>程式積木，所以試試將它放在 <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block>迴圈裡。
      courseA_artist_loops5_authored_hint:
        courseA_artist_loops5_a: 試著用你學到的重複積木來完成這個關卡！
        courseA_artist_loops5_b: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
        courseA_artist_loops5_c: "因為你只能用一個 <xml><block type=\"simple_move_right\"/></xml>程式積木，所以試試將它放在 \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>迴圈裡。"
      courseA_artist_loops5_2018_authored_hint:
        courseA_artist_loops5_a: 試著用你學到的重複積木來完成這個關卡！
        courseA_artist_loops5_b: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
        courseA_artist_loops5_c: "因為你只能用一個 <xml><block type=\"simple_move_right\"/></xml>程式積木，所以試試將它放在 \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>迴圈裡。"
      courseA_artist_loops5_2019_authored_hint:
        courseA_artist_loops5_a: 試著用你學到的重複積木來完成這個關卡！
        courseA_artist_loops5_b: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
        courseA_artist_loops5_c: "因為你只能用一個 <xml><block type=\"simple_move_right\"/></xml>程式積木，所以試試將它放在 \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>迴圈裡。"
      courseA_artist_loops6_authored_hint:
        courseA_artist_loops6_b: 你將會需要兩個不同方向的程式積木來過這一關。
      courseA_artist_loops6_2018_authored_hint:
        courseA_artist_loops6_b: 你將會需要兩個不同方向的程式積木來過這一關。
      courseA_artist_loops6_2019_authored_hint:
        courseA_artist_loops6_b: 你將會需要兩個不同方向的程式積木來過這一關。
      courseA_artist_loops7_authored_hint:
        courseA_artist_loops7_a: 不知道該把這個環放在哪裡？嘗試一步一步地編寫代碼，並尋找模式。
        courseA_artist_loops7_c: |-
          記得你可以放多於一塊程式積木在 <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>迴圈裡。
      courseA_artist_loops7_2018_authored_hint:
        courseA_artist_loops7_a: 不知道該把這個環放在哪裡？嘗試一步一步地編寫代碼，並尋找模式。
        courseA_artist_loops7_c: |-
          記得你可以放多於一塊程式積木在 <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>迴圈裡。
      courseA_artist_loops7_2019_authored_hint:
        courseA_artist_loops7_a: 不知道該把這個環放在哪裡？嘗試一步一步地編寫代碼，並尋找模式。
        courseA_artist_loops7_c: |-
          記得你可以放多於一塊程式積木在 <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>迴圈裡。
      courseA_artist_loops7_forVideo_authored_hint:
        courseA_artist_loops7_a: 不知道該把這個環放在哪裡？嘗試一步一步地編寫代碼，並尋找模式。
        courseA_artist_loops7_c: |-
          記得你可以放多於一塊程式積木在 <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>迴圈裡。
      courseA_artist_loops9_authored_hint:
        courseA_artist_loops9_b: "你應該把程式積木放在 \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>迴圈裡。"
        courseA_artist_loops9_c: 如果你不知道把迴圈放在哪裡，試試一步一步地寫你的程式碼並留意重複出現的模式。
      courseA_artist_loops9_2018_authored_hint:
        courseA_artist_loops9_b: "你應該把程式積木放在 \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>迴圈裡。"
        courseA_artist_loops9_c: 如果你不知道把迴圈放在哪裡，試試一步一步地寫你的程式碼並留意重複出現的模式。
      courseA_artist_loops9_2019_authored_hint:
        courseA_artist_loops9_b: "你應該把程式積木放在 \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>迴圈裡。"
        courseA_artist_loops9_c: 如果你不知道把迴圈放在哪裡，試試一步一步地寫你的程式碼並留意重複出現的模式。
      courseA_artist_loops_challenge2_authored_hint:
        courseA_artist_loops_challenge2_a: 像這樣的程式積木：<xml>  <block type="simple_move_up_left"/></xml> 可以讓小藝術家斜著移動！
        courseA_artist_loops_challenge2_b: 當你完成了一個鳥屋時，`跳躍`到下一個！
        courseA_artist_loops_challenge2_c: 這一關的迴圈裡用到了「很多」的程式積木喔。
      courseA_artist_loops_challenge2a_authored_hint:
        courseA_artist_loops_challenge2_a: 像這樣的程式積木：<xml>  <block type="simple_move_up_left"/></xml> 可以讓小藝術家斜著移動！
      courseA_artist_loops_challenge2a_2018_authored_hint:
        courseA_artist_loops_challenge2_a: 像這樣的程式積木：<xml>  <block type="simple_move_up_left"/></xml> 可以讓小藝術家斜著移動！
      courseA_artist_loops_challenge2a_2019_authored_hint:
        courseA_artist_loops_challenge2_a: 像這樣的程式積木：<xml>  <block type="simple_move_up_left"/></xml> 可以讓小藝術家斜著移動！
      courseA_artist_loops_challenge3_authored_hint:
        harvey_tictactoe: 你可以利用 `跳躍` 積木移動到其它的空格。
      courseA_collector_loops1_authored_hint:
        courseA_collector_loops1_a: |-
          當你已經到達寶物的地點，記得用「取得寶物」程式積木來取得它。
        courseA_collector_loops1_b: 向東移動兩次來得到寶物會是一個簡單的解決之道。
      courseA_collector_loops1_2018_authored_hint:
        courseA_collector_loops1_a: |-
          當你已經到達寶物的地點，記得用「取得寶物」程式積木來取得它。
        courseA_collector_loops1_b: 向東移動兩次來得到寶物會是一個簡單的解決之道。
      courseA_collector_loops1_2019_authored_hint:
        courseA_collector_loops1_a: |-
          當你已經到達寶物的地點，記得用「取得寶物」程式積木來取得它。
        courseA_collector_loops1_b: 向東移動兩次來得到寶物會是一個簡單的解決之道。
      courseA_collector_loops2_authored_hint:
        courseA_collector_loops2_a: 在你可以搜集寶物之前，你得要移動
        courseA_collector_loops2_b: |-
          當你已經到達寶物的地點，記得用「取得寶物」程式積木來取得它。
      courseA_collector_loops2_2018_authored_hint:
        courseA_collector_loops2_a: 在你可以搜集寶物之前，你得要移動
        courseA_collector_loops2_b: |-
          當你已經到達寶物的地點，記得用「取得寶物」程式積木來取得它。
      courseA_collector_loops2_2019_authored_hint:
        courseA_collector_loops2_a: 在你可以搜集寶物之前，你得要移動
        courseA_collector_loops2_b: |-
          當你已經到達寶物的地點，記得用「取得寶物」程式積木來取得它。
      courseA_collector_loops3_authored_hint:
        courseA_collector_loops3_a: "試試用一個 \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>迴圈來完成！"
        courseA_collector_loops3_b: 記得在一個 <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>迴圈裡你可以用多於一塊程式積木。
      courseA_collector_loops3_2018_authored_hint:
        courseA_collector_loops3_a: "試試用一個 \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>迴圈來完成！"
        courseA_collector_loops3_b: 記得在一個 <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>迴圈裡你可以用多於一塊程式積木。
      courseA_collector_loops3_2019_authored_hint:
        courseA_collector_loops3_a: "試試用一個 \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>迴圈來完成！"
        courseA_collector_loops3_b: 記得在一個 <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>迴圈裡你可以用多於一塊程式積木。
      courseA_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: 如果出錯了，可以試試修改每個迴圈裡的數值。
        courseA_collector_loops_challenge1_b: 如果你只要執行某段指令一次，就不需要用到迴圈。
        courseA_collector_loops_challenge1_c: 右邊的洞穴有 6 個寶石，而你只需移動並收集 5 次，你知道怎麼做嗎？
      courseA_collector_loops_challenge1_2018_authored_hint:
        courseA_collector_loops_challenge1_a: 如果出錯了，可以試試修改每個迴圈裡的數值。
        courseA_collector_loops_challenge1_b: 如果你只要執行某段指令一次，就不需要用到迴圈。
        courseA_collector_loops_challenge1_c: 右邊的洞穴有 6 個寶石，而你只需移動並收集 5 次，你知道怎麼做嗎？
      courseA_collector_loops_challenge1_2019_authored_hint:
        courseA_collector_loops_challenge1_a: 如果出錯了，可以試試修改每個迴圈裡的數值。
        courseA_collector_loops_challenge1_b: 如果你只要執行某段指令一次，就不需要用到迴圈。
        courseA_collector_loops_challenge1_c: 右邊的洞穴有 6 個寶石，而你只需移動並收集 5 次，你知道怎麼做嗎？
      courseA_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: 只要一個 ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) 積木就可以解決囉！
        courseA_collector_loops_challenge2_a: "在往南移動之前，你可以重複移動到相同路徑。\n\n![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)"
      courseA_collector_preLoops7_authored_hint:
        courseA_collector_loops2_b: |-
          當你已經到達寶物的地點，記得用「取得寶物」程式積木來取得它。
      courseA_maze_ramp2_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2_2019_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2a_2018_authored_hint:
        '1': Snap both `East` blocks to the bottom of the `when run` block.
      courseA_maze_ramp3a_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3a_2019_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3b_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3b_2019_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4a_2019_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5a_2019_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_seq5_2018_authored_hint:
        '1': Try writing down the steps on paper to find a solution!
        '2': |-
          You will need to use this block:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5_2019_authored_hint:
        '1': Try writing down the steps on paper to find a solution!
        '2': |-
          You will need to use this block:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5a_2018_authored_hint:
        '1': Say the steps out loud and see if it helps you figure out the answer.
      courseA_maze_seq5a_2019_authored_hint:
        '1': Say the steps out loud and see if it helps you figure out the answer.
      courseA_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: 路上可能會碰上 TNT 炸藥。
      courseA_maze_seq_challenge1_2018_authored_hint:
        courseA_maze_seq_challenge1_a: 路上可能會碰上 TNT 炸藥。
      courseA_maze_seq_challenge1_2019_authored_hint:
        courseA_maze_seq_challenge1_a: 路上可能會碰上 TNT 炸藥。
      courseA_maze_seq_challenge2_authored_hint:
        courseA_maze_seq_challenge2_a: 試著用你的手指頭點出要移動的空格數（你站的那一格不要算！）
      courseA_maze_seq_challenge2_2018_authored_hint:
        courseA_maze_seq_challenge2_a: 試著用你的手指頭點出要移動的空格數（你站的那一格不要算！）
      courseA_maze_seq_challenge2_2019_authored_hint:
        courseA_maze_seq_challenge2_a: 試著用你的手指頭點出要移動的空格數（你站的那一格不要算！）
      courseA_playLab_events5_authored_hint:
        courseA_playLab_events5_b: |-
          你知道嗎？點擊積木，你就可以修改方向鍵囉！

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018_authored_hint:
        courseA_playLab_events5_b: |-
          你知道嗎？點擊積木，你就可以修改方向鍵囉！

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2019_authored_hint:
        courseA_playLab_events5_b: |-
          你知道嗎？點擊積木，你就可以修改方向鍵囉！

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "當你點擊Robin的時候，你就可以看到企鵝的樣子了！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "當你點擊企鵝時做鬼表演！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "當你點擊Boo時，讓Jayden成為“模糊怪物秀”！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "當你點擊怪物時，讓 Spiff 的機器人表演！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2018_authored_hint:
        courseA_playlab_events_challenge1_a: "當你點擊Robin的時候，你就可以看到企鵝的樣子了！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "當你點擊企鵝時做鬼表演！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "當你點擊Boo時，讓Jayden成為“模糊怪物秀”！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "當你點擊怪物時，讓 Spiff 的機器人表演！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2019_authored_hint:
        courseA_playlab_events_challenge1_a: "當你點擊Robin的時候，你就可以看到企鵝的樣子了！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "當你點擊企鵝時做鬼表演！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "當你點擊Boo時，讓Jayden成為“模糊怪物秀”！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "當你點擊怪物時，讓 Spiff 的機器人表演！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1a_authored_hint:
        courseA_playlab_events_challenge1_a: "你可以讓一隻鳥唱歌。\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">小鳥叫聲</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "你可以讓機器人發出嗶嗶聲.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">得分</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge1_c: |-
          你可以製造一個憤怒的怪物咆哮。

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">咆哮!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "你可以讓一隻鳥唱歌。\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">小鳥叫聲</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "你可以讓機器人發出嗶嗶聲.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">得分</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          你可以製造一個憤怒的怪物咆哮。

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">咆哮!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2018_authored_hint:
        courseA_playlab_events_challenge2_a: "你可以讓一隻鳥唱歌。\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">小鳥叫聲</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "你可以讓機器人發出嗶嗶聲.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">得分</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          你可以製造一個憤怒的怪物咆哮。

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">咆哮!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2019_authored_hint:
        courseA_playlab_events_challenge2_a: "你可以讓一隻鳥唱歌。\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">小鳥叫聲</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "你可以讓機器人發出嗶嗶聲.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">得分</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          你可以製造一個憤怒的怪物咆哮。

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">咆哮!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challengeClone_authored_hint:
        courseA_playlab_events_challenge1_a: "當你點擊Robin的時候，你就可以看到企鵝的樣子了！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "當你點擊企鵝時做鬼表演！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "當你點擊Boo時，讓Jayden成為“模糊怪物秀”！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "當你點擊怪物時，讓 Spiff 的機器人表演！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "最後，當您單擊Spiff時，讓Wendel成為嚮導！\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"可見的\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
      courseB_Scrat_ramp1_2018_authored_hint:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have been fully clicked together, then click "Run" again.
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!
      courseB_Scrat_ramp1_2019_authored_hint:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have been fully clicked together, then click "Run" again.
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!
      courseB_Scrat_ramp2_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp2_2019_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2019_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3b_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3b_2019_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2019_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2018_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2019_authored_hint:
        '1': |-
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_artist_loops2_authored_hint:
        courseB_artist_loops2_a: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
      courseB_artist_loops2_2018_authored_hint:
        courseB_artist_loops2_a: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
      courseB_artist_loops2_2019_authored_hint:
        courseB_artist_loops2_a: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
      courseB_artist_loops7_authored_hint:
        courseB_artist_loops7_a: 這個挑戰用了 4 個迴圈，一個接著一個！
      courseB_artist_loops7_2018_authored_hint:
        courseB_artist_loops7_a: 這個挑戰用了 4 個迴圈，一個接著一個！
      courseB_artist_loops7_2019_authored_hint:
        courseB_artist_loops7_a: 這個挑戰用了 4 個迴圈，一個接著一個！
      courseB_artist_loops9_authored_hint:
        courseB_artist_loops9_c: 不知道該把這個環放在哪裡？嘗試一步一步地編寫代碼，並尋找模式。
      courseB_artist_loops9_2018_authored_hint:
        courseB_artist_loops9_c: 不知道該把這個環放在哪裡？嘗試一步一步地編寫代碼，並尋找模式。
      courseB_artist_loops9_2019_authored_hint:
        courseB_artist_loops9_c: 不知道該把這個環放在哪裡？嘗試一步一步地編寫代碼，並尋找模式。
      courseB_artist_loops_challenge1_authored_hint:
        courseB_artist_loops_challenge1_a: '像這樣的積木：<xml>  <block type="simple_move_up_right"/></xml> 能讓你的角色斜向移動！'
        courseB_artist_loops_challenge1_b: 當你完成了一個骰子時，`跳躍`到下一個！
        courseB_artist_loops_challenge1_c: '你需要在同一行上使用`移動`或`跳躍`兩次。'
      courseB_artist_loops_challenge1_2018_authored_hint:
        courseB_artist_loops_challenge1_a: '像這樣的積木：<xml>  <block type="simple_move_up_right"/></xml> 能讓你的角色斜向移動！'
        courseB_artist_loops_challenge1_b: 當你完成了一個骰子時，`跳躍`到下一個！
        courseB_artist_loops_challenge1_c: '你需要在同一行上使用`移動`或`跳躍`兩次。'
      courseB_artist_loops_challenge1_2019_authored_hint:
        courseB_artist_loops_challenge1_a: '像這樣的積木：<xml>  <block type="simple_move_up_right"/></xml> 能讓你的角色斜向移動！'
        courseB_artist_loops_challenge1_b: 當你完成了一個骰子時，`跳躍`到下一個！
        courseB_artist_loops_challenge1_c: '你需要在同一行上使用`移動`或`跳躍`兩次。'
      courseB_artist_loops_challenge2_authored_hint:
        courseB_artist_loops_challenge2_b: 你可以利用 `跳躍` 積木移動到其它的空格。
      courseB_artist_loops_challenge2_2018_authored_hint:
        courseB_artist_loops_challenge2_b: 你可以利用 `跳躍` 積木移動到其它的空格。
      courseB_artist_loops_challenge2_2019_authored_hint:
        courseB_artist_loops_challenge2_b: 你可以利用 `跳躍` 積木移動到其它的空格。
      courseB_collector_loops10_authored_hint:
        courseB_collector_loops10_a: 你需要使用 3 個`重複`迴圈才能完成這個關卡。
      courseB_collector_loops10_2018_authored_hint:
        courseB_collector_loops10_a: 你需要使用 3 個`重複`迴圈才能完成這個關卡。
      courseB_collector_loops10_2019_authored_hint:
        courseB_collector_loops10_a: 你需要使用 3 個`重複`迴圈才能完成這個關卡。
      courseB_collector_loops2_authored_hint:
        courseB_collector_loops2_a: 在你可以搜集寶物之前，你得要移動
        courseB_collector_loops2_b: 當你已經到達寶物的地點，記得用「取得寶物」程式積木來取得它。
      courseB_collector_loops2_2018_authored_hint:
        courseB_collector_loops2_a: 在你可以搜集寶物之前，你得要移動
        courseB_collector_loops2_b: 當你已經到達寶物的地點，記得用「取得寶物」程式積木來取得它。
      courseB_collector_loops2_2019_authored_hint:
        courseB_collector_loops2_a: 在你可以搜集寶物之前，你得要移動
        courseB_collector_loops2_b: 當你已經到達寶物的地點，記得用「取得寶物」程式積木來取得它。
      courseB_collector_loops3_authored_hint:
        courseB_collector_prog3_b: 記得在一個重複迴圈裡你可以用多於一塊程式積木。
      courseB_collector_loops3_2018_authored_hint:
        courseB_collector_prog3_b: 記得在一個重複迴圈裡你可以用多於一塊程式積木。
      courseB_collector_loops3_2019_authored_hint:
        courseB_collector_prog3_b: 記得在一個重複迴圈裡你可以用多於一塊程式積木。
      courseB_collector_loops_challenge1_authored_hint:
        courseB_collector_loops_challenge1_b: |
          只要一個 ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) 積木就可以解決囉！
        courseB_collector_loops_challenge1_c: "只要 8 個積木就可以搞定！你必須把`重複`積木放到另一個`積木`裡。點擊以取得更多提示。\n<xml>\n<block type=\"controls_repeat_simplified\">\n        <title name=\"TIMES\">?</title>\n        <statement name=\"DO\">\n          \n              <block type=\"controls_repeat_simplified\">\n                <title name=\"TIMES\">?</title>\n                <statement name=\"DO\">\n                </statement></block><next><block type=\"controls_repeat_simplified\">\n                <title name=\"TIMES\">?</title>\n                <statement name=\"DO\">\n                </statement></block></next></statement></block></xml>"
        courseB_collector_loops_challenge1_d: |-
          試試這個！
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveEast"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveWest"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2018_authored_hint:
        courseB_collector_loops_challenge1_b: |
          只要一個 ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) 積木就可以解決囉！
        courseB_collector_loops_challenge1_c: "只要 8 個積木就可以搞定！你必須把`重複`積木放到另一個`積木`裡。點擊以取得更多提示。\n<xml>\n<block type=\"controls_repeat_simplified\">\n        <title name=\"TIMES\">?</title>\n        <statement name=\"DO\">\n          \n              <block type=\"controls_repeat_simplified\">\n                <title name=\"TIMES\">?</title>\n                <statement name=\"DO\">\n                </statement></block><next><block type=\"controls_repeat_simplified\">\n                <title name=\"TIMES\">?</title>\n                <statement name=\"DO\">\n                </statement></block></next></statement></block></xml>"
        courseB_collector_loops_challenge1_d: |-
          試試這個！
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveEast"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveWest"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2019_authored_hint:
        courseB_collector_loops_challenge1_b: |
          只要一個 ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) 積木就可以解決囉！
        courseB_collector_loops_challenge1_c: "只要 8 個積木就可以搞定！你必須把`重複`積木放到另一個`積木`裡。點擊以取得更多提示。\n<xml>\n<block type=\"controls_repeat_simplified\">\n        <title name=\"TIMES\">?</title>\n        <statement name=\"DO\">\n          \n              <block type=\"controls_repeat_simplified\">\n                <title name=\"TIMES\">?</title>\n                <statement name=\"DO\">\n                </statement></block><next><block type=\"controls_repeat_simplified\">\n                <title name=\"TIMES\">?</title>\n                <statement name=\"DO\">\n                </statement></block></next></statement></block></xml>"
        courseB_collector_loops_challenge1_d: |-
          試試這個！
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveEast"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveWest"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2_authored_hint:
        courseB_collector_loops_challenge2_a: 如果出錯了，可以試試修改每個迴圈裡的數值。
        courseB_collector_loops_challenge2_b: |-
          如果你錯過了寶藏，你需要移動回西邊一格。
        courseB_collector_loops_challenge2_c: 別忘了使用迴圈來收集最後一堆寶藏！
      courseB_collector_loops_challenge2_2018_authored_hint:
        courseB_collector_loops_challenge2_a: 如果出錯了，可以試試修改每個迴圈裡的數值。
        courseB_collector_loops_challenge2_b: |-
          如果你錯過了寶藏，你需要移動回西邊一格。
        courseB_collector_loops_challenge2_c: 別忘了使用迴圈來收集最後一堆寶藏！
      courseB_collector_loops_challenge`_authored_hint:
        courseA_collector_loops_challenge2_b: "只要一個 ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) 積木就可以解決囉！"
        courseA_collector_loops_challenge2_a: |-
          在往南移動之前，你可以重複移動到相同路徑。

          ![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      courseB_maze_seq1_authored_hint:
        courseB_maze_seq1_a: "拖曳三個往`南`移動的積木，然後把它們連接到`當運行時`積木下，讓憤怒鳥可以抓到這頭豬。\n\n<xml><block type=\"when_run\" deletable=\"false\" movable=\"false\"><next><block type=\"maze_moveSouth\"><next><block type=\"maze_moveSouth\"><next><block type=\"maze_moveSouth\"></block></next></block></next></block></next></block></xml>"
      courseB_maze_seq1_2018_authored_hint:
        courseB_maze_seq1_a: "拖曳三個往`南`移動的積木，然後把它們連接到`當運行時`積木下，讓憤怒鳥可以抓到這頭豬。\n\n<xml><block type=\"when_run\" deletable=\"false\" movable=\"false\"><next><block type=\"maze_moveSouth\"><next><block type=\"maze_moveSouth\"><next><block type=\"maze_moveSouth\"></block></next></block></next></block></next></block></xml>"
      courseB_maze_seq1_2019_authored_hint:
        courseB_maze_seq1_a: "拖曳三個往`南`移動的積木，然後把它們連接到`當運行時`積木下，讓憤怒鳥可以抓到這頭豬。\n\n<xml><block type=\"when_run\" deletable=\"false\" movable=\"false\"><next><block type=\"maze_moveSouth\"><next><block type=\"maze_moveSouth\"><next><block type=\"maze_moveSouth\"></block></next></block></next></block></next></block></xml>"
      courseB_maze_seq4_authored_hint:
        courseB_maze_seq4_b: 你會向東移動來過這一關。
      courseB_maze_seq4_2018_authored_hint:
        courseB_maze_seq4_b: 你會向東移動來過這一關。
      courseB_maze_seq4_2019_authored_hint:
        courseB_maze_seq4_b: 你會向東移動來過這一關。
      courseB_maze_seq8_authored_hint:
        courseB_maze_seq8_b: 有 2 個方法可以完成這個關卡！
      courseB_maze_seq8_2018_authored_hint:
        courseB_maze_seq8_b: 有 2 個方法可以完成這個關卡！
      courseB_maze_seq8_2019_authored_hint:
        courseB_maze_seq8_b: 有 2 個方法可以完成這個關卡！
      courseB_maze_seq_challenge1_authored_hint:
        courseB_maze_seq_challenge1_a: 這次最短的路徑不管用囉！
        courseB_maze_seq_challenge1_b: 試試先向西邊移動。
      courseB_maze_seq_challenge1_2018_authored_hint:
        courseB_maze_seq_challenge1_a: 這次最短的路徑不管用囉！
        courseB_maze_seq_challenge1_b: 試試先向西邊移動。
      courseB_maze_seq_challenge1_2019_authored_hint:
        courseB_maze_seq_challenge1_a: 這次最短的路徑不管用囉！
        courseB_maze_seq_challenge1_b: 試試先向西邊移動。
      courseB_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: 這個關卡不需要添加或是移除任何的積木。
        courseB_maze_seq_challenge2_b: 重新排列積木，走中間那條路。
      courseB_maze_seq_challenge2_2018_authored_hint:
        courseB_maze_seq_challenge2_a: 這個關卡不需要添加或是移除任何的積木。
        courseB_maze_seq_challenge2_b: 重新排列積木，走中間那條路。
      courseB_maze_seq_challenge2_2019_authored_hint:
        courseB_maze_seq_challenge2_a: 這個關卡不需要添加或是移除任何的積木。
        courseB_maze_seq_challenge2_b: 重新排列積木，走中間那條路。
      courseB_playlab_events_challenge1_authored_hint:
        courseB_playlab_events_challenge1_a: "使用`▼`讓其他的動物往下移動\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          利用這個程式積木改變動物的速度
          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          當比賽結束時，大家會說些什麼？讓牠們說些話吧：
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2018_authored_hint:
        courseB_playlab_events_challenge1_a: "使用`▼`讓其他的動物往下移動\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          利用這個程式積木改變動物的速度
          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          當比賽結束時，大家會說些什麼？讓牠們說些話吧：
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2019_authored_hint:
        courseB_playlab_events_challenge1_a: "使用`▼`讓其他的動物往下移動\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          利用這個程式積木改變動物的速度
          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          當比賽結束時，大家會說些什麼？讓牠們說些話吧：
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge2_authored_hint:
        courseB_playlab_events_challenge2_a: 遊戲中的動物在被觸碰後會消失，它們應該要在一或二秒之後再出現！
        courseB_playlab_events_challenge2_b: |-
          使用其他的事件類型積木來讓其他的動物消失！
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          當你點擊動物時，使用其他的指令來播放音樂或紀錄得分！
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          改編一下！

          讓某些動物得到的分數比其他的動物還高。
          使用不同的音效。
          改變動物的表情！
      courseB_playlab_events_challenge2_2018_authored_hint:
        courseB_playlab_events_challenge2_a: 遊戲中的動物在被觸碰後會消失，它們應該要在一或二秒之後再出現！
        courseB_playlab_events_challenge2_b: |-
          使用其他的事件類型積木來讓其他的動物消失！
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          當你點擊動物時，使用其他的指令來播放音樂或紀錄得分！
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          改編一下！

          讓某些動物得到的分數比其他的動物還高。
          使用不同的音效。
          改變動物的表情！
      courseB_playlab_events_challenge2_2019_authored_hint:
        courseB_playlab_events_challenge2_a: 遊戲中的動物在被觸碰後會消失，它們應該要在一或二秒之後再出現！
        courseB_playlab_events_challenge2_b: |-
          使用其他的事件類型積木來讓其他的動物消失！
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          當你點擊動物時，使用其他的指令來播放音樂或紀錄得分！
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          改編一下！

          讓某些動物得到的分數比其他的動物還高。
          使用不同的音效。
          改變動物的表情！
      courseB_playlab_events_challenge2_embed_authored_hint:
        courseB_playlab_events_challenge2_a: 遊戲中的動物在被觸碰後會消失，它們應該要在一或二秒之後再出現！
        courseB_playlab_events_challenge2_b: |-
          使用其他的事件類型積木來讓其他的動物消失！
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          當你點擊動物時，使用其他的指令來播放音樂或紀錄得分！
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          改編一下！

          讓某些動物得到的分數比其他的動物還高。
          使用不同的音效。
          改變動物的表情！
      courseB_playlab_events_challenge2_template_authored_hint:
        courseB_playlab_events_challenge2_a: 遊戲中的動物在被觸碰後會消失，它們應該要在一或二秒之後再出現！
        courseB_playlab_events_challenge2_b: |-
          使用其他的事件類型積木來讓其他的動物消失！
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          當你點擊動物時，使用其他的指令來播放音樂或紀錄得分！
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          改編一下！

          讓某些動物得到的分數比其他的動物還高。
          使用不同的音效。
          改變動物的表情！
      courseB_playlab_events_challenge2_template_2018_authored_hint:
        courseB_playlab_events_challenge2_a: 遊戲中的動物在被觸碰後會消失，它們應該要在一或二秒之後再出現！
        courseB_playlab_events_challenge2_b: |-
          使用其他的事件類型積木來讓其他的動物消失！
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          當你點擊動物時，使用其他的指令來播放音樂或紀錄得分！
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          改編一下！

          讓某些動物得到的分數比其他的動物還高。
          使用不同的音效。
          改變動物的表情！
      courseB_playlab_events_challenge2_template_2019_authored_hint:
        courseB_playlab_events_challenge2_a: 遊戲中的動物在被觸碰後會消失，它們應該要在一或二秒之後再出現！
        courseB_playlab_events_challenge2_b: |-
          使用其他的事件類型積木來讓其他的動物消失！
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          當你點擊動物時，使用其他的指令來播放音樂或紀錄得分！
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          改編一下！

          讓某些動物得到的分數比其他的動物還高。
          使用不同的音效。
          改變動物的表情！
      courseB_starWars_prog8_authored_hint:
        courseB_starWars_prog8_a: 沒關係，走過的路可以再走。
        courseB_starWars_prog8_b: |-
          試試使用`重複`積木，看看在裡頭放些程式，會發生什麼事。

          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2018_authored_hint:
        courseB_starWars_prog8_a: 沒關係，走過的路可以再走。
        courseB_starWars_prog8_b: |-
          試試使用`重複`積木，看看在裡頭放些程式，會發生什麼事。

          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2019_authored_hint:
        courseB_starWars_prog8_a: 沒關係，走過的路可以再走。
        courseB_starWars_prog8_b: |-
          試試使用`重複`積木，看看在裡頭放些程式，會發生什麼事。

          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog9_authored_hint:
        courseB_starWars_prog9_a: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseB_starWars_prog9_2018_authored_hint:
        courseB_starWars_prog9_a: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseB_starWars_prog9_2019_authored_hint:
        courseB_starWars_prog9_a: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseC_PlayLab_events_challenge1_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          試試當它碰到其他的角色時，使用`設置角色 1 到左中方`。這會將遊戲重置，玩家就可以繼續嘗試用其他的方法。
      courseC_PlayLab_events_challenge1_2018_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          試試當它碰到其他的角色時，使用`設置角色 1 到左中方`。這會將遊戲重置，玩家就可以繼續嘗試用其他的方法。
      courseC_PlayLab_events_challenge1_2019_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          試試當它碰到其他的角色時，使用`設置角色 1 到左中方`。這會將遊戲重置，玩家就可以繼續嘗試用其他的方法。
      courseC_PlayLab_events_challenge1_xy_blocks_authored_hint:
        courseC_PlayLab_events_challenge_a: 在積木上的這二個值可以讓你將角色在舞台間移動，你可以輸入 0 到 400 間的數字。
      courseC_artist_loops5_authored_hint:
        courseC_artist_loops5_a: |-
          試試使用`移至`積木，讓小藝術家返回中間位置：

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">100</title>
          <title name="YPOS">100</title>
          </block>
          </xml>
      courseC_artist_loops6_authored_hint:
        courseC_artist_loops6_a: |
          試試這朵三角形樣式的花朵：
          <img src="https://images.code.org/4248a974a7631c4240effba06fdee731-image-1495821015097.49.18.png" width="150px" />

          或是一隻小小小綠蟲：
          <img src="https://images.code.org/b9454d6f1159e19c58d9f5b5b37fd156-image-1495821067980.52.43.png" width="150px" />
      courseC_artist_prog2_authored_hint:
        courseC_artist_prog2_a: '如果你使用`移動-向前 100 像素`這個積木，我就會向前移動並自動畫一條線啦。'
        courseC_artist_prog2_b: 要如何才能轉彎？試試`轉向-右方 90 度`積木。
      courseC_artist_prog2_2018_authored_hint:
        courseC_artist_prog2_a: '如果你使用`移動-向前 100 像素`這個積木，我就會向前移動並自動畫一條線啦。'
        courseC_artist_prog2_b: 要如何才能轉彎？試試`轉向-右方 90 度`積木。
      courseC_artist_prog2_2019_authored_hint:
        courseC_artist_prog2_a: '如果你使用`移動-向前 100 像素`這個積木，我就會向前移動並自動畫一條線啦。'
        courseC_artist_prog2_b: 要如何才能轉彎？試試`轉向-右方 90 度`積木。
      courseC_artist_prog_challenge1-doghouse_authored_hint:
        courseC_artist_prog7_a: 使用 60 度來做出這個屋頂。
      courseC_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: 這個矩形的寬是 200 像素，高是 100 像素。
      courseC_artist_prog_challenge1_2018_authored_hint:
        courseC_artist_prog_challenge1_a: 這個矩形的寬是 200 像素，高是 100 像素。
      courseC_artist_prog_challenge1_2019_authored_hint:
        courseC_artist_prog_challenge1_a: 這個矩形的寬是 200 像素，高是 100 像素。
      courseC_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: 不用迴圈是不可能達成目標的！
        courseC_harvester_loops_challenge1_b: 你可以重複執行`移動-向前`和`收集玉木`到你想要的次數，然後在每次要轉向時使用`轉向-右邊`積木。
        courseC_harvester_loops_challenge1_c: |-
          要收集一開始的四個玉米，最好的方式是在一個`重複`積木裡頭使用另一個`重複`積木。你可以用這個模式來解決後面的關卡！

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge1a_authored_hint:
        courseC_harvester_loops_challenge1_a: 不用迴圈是不可能達成目標的！
        courseC_harvester_loops_challenge1_b: 你可以重複執行`移動-向前`和`收集玉木`到你想要的次數，然後在每次要轉向時使用`轉向-右邊`積木。
        courseC_harvester_loops_challenge1_c: |-
          要收集一開始的四個玉米，最好的方式是在一個`重複`積木裡頭使用另一個`重複`積木。你可以用這個模式來解決後面的關卡！

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge1a_2018_authored_hint:
        courseC_harvester_loops_challenge1_a: 不用迴圈是不可能達成目標的！
        courseC_harvester_loops_challenge1_b: 你可以重複執行`移動-向前`和`收集玉木`到你想要的次數，然後在每次要轉向時使用`轉向-右邊`積木。
        courseC_harvester_loops_challenge1_c: |-
          要收集一開始的四個玉米，最好的方式是在一個`重複`積木裡頭使用另一個`重複`積木。你可以用這個模式來解決後面的關卡！

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge1a_2019_authored_hint:
        courseC_harvester_loops_challenge1_a: 不用迴圈是不可能達成目標的！
        courseC_harvester_loops_challenge1_b: 你可以重複執行`移動-向前`和`收集玉木`到你想要的次數，然後在每次要轉向時使用`轉向-右邊`積木。
        courseC_harvester_loops_challenge1_c: |-
          要收集一開始的四個玉米，最好的方式是在一個`重複`積木裡頭使用另一個`重複`積木。你可以用這個模式來解決後面的關卡！

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_b: 你可以重複執行`移動-向前`和`收集生菜`到你想要的次數，然後在每次要轉向時使用轉向積木。
      courseC_harvester_loops_challenge2_2018_authored_hint:
        courseC_harvester_loops_challenge2_b: 你可以重複執行`移動-向前`和`收集生菜`到你想要的次數，然後在每次要轉向時使用轉向積木。
      courseC_harvester_loops_challenge2_2019_authored_hint:
        courseC_harvester_loops_challenge2_b: 你可以重複執行`移動-向前`和`收集生菜`到你想要的次數，然後在每次要轉向時使用轉向積木。
      courseC_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: 左邊還是右邊？你決定就好！
        courseC_maze_debugging_challenge1_b: 鼠奎特走的路徑是個四邊形！所以每次都轉向同要是同一邊！
      courseC_maze_debugging_challenge1_2018_authored_hint:
        courseC_maze_debugging_challenge1_a: 左邊還是右邊？你決定就好！
        courseC_maze_debugging_challenge1_b: 鼠奎特走的路徑是個四邊形！所以每次都轉向同要是同一邊！
      courseC_maze_debugging_challenge1_2019_authored_hint:
        courseC_maze_debugging_challenge1_a: 左邊還是右邊？你決定就好！
        courseC_maze_debugging_challenge1_b: 鼠奎特走的路徑是個四邊形！所以每次都轉向同要是同一邊！
      courseC_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_b: 如果你卡關了，你可以重頭開始，或者移除所有的程式碼後再試試別的方法！
      courseC_maze_debugging_challenge2_2018_authored_hint:
        courseC_maze_debugging_challenge2_b: 如果你卡關了，你可以重頭開始，或者移除所有的程式碼後再試試別的方法！
      courseC_maze_debugging_challenge2_2019_authored_hint:
        courseC_maze_debugging_challenge2_b: 如果你卡關了，你可以重頭開始，或者移除所有的程式碼後再試試別的方法！
      courseC_maze_loops6_authored_hint:
        courseC_maze_loops6_b: "如果要在`重複`迴圈中放置多個積木，只要拖曳一個迴圈到工作區，然後再把工作區上的積木堆拖曳到裡面。\n\n把它們放到`當運行時`積木就大功告成囉！"
      courseC_maze_loops7_authored_hint:
        courseC_maze_loops7_a: 如果很難去找到匹配的模式，試試先一點一點的把指令全寫出來，然後看看哪些部分是重複的，最後把這些重複的部分放進迴圈裡。
      courseC_maze_programming6_authored_hint:
        courseC_maze_programming6_a: 有 2 個方法可以完成這個關卡！
      courseC_maze_programming6_2018_authored_hint:
        courseC_maze_programming6_a: 有 2 個方法可以完成這個關卡！
      courseC_maze_programming6_2019_authored_hint:
        courseC_maze_programming6_a: 有 2 個方法可以完成這個關卡！
      courseC_starWars_loops1_authored_hint:
        courseC_starWars_loops1_b: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseC_starWars_loops10_authored_hint:
        courseC_starWars_loops10_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseC_starWars_loops10_2018_authored_hint:
        courseC_starWars_loops10_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseC_starWars_loops10_2019_authored_hint:
        courseC_starWars_loops10_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseC_starWars_loops1_2018_authored_hint:
        courseC_starWars_loops1_b: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseC_starWars_loops1_2019_authored_hint:
        courseC_starWars_loops1_b: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseC_starWars_loops7_authored_hint:
        courseC_starWars_loops7_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseC_starWars_loops7_2018_authored_hint:
        courseC_starWars_loops7_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseC_starWars_loops7_2019_authored_hint:
        courseC_starWars_loops7_c: 不要害怕犯錯！運行代碼看看會發生什麼，即使您還沒有解決這個難題。
      courseC_starWars_loops9_authored_hint:
        course_starWars_loops9_b: 記得在一個重複迴圈裡你可以用多於一塊程式積木。
      courseC_starWars_loops9_2018_authored_hint:
        course_starWars_loops9_b: 記得在一個重複迴圈裡你可以用多於一塊程式積木。
      courseC_starWars_loops9_2019_authored_hint:
        course_starWars_loops9_b: 記得在一個重複迴圈裡你可以用多於一塊程式積木。
      courseD_artist_5_2018_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to switch their angles, too!
      courseD_artist_5_2018_2019_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to switch their angles, too!
      courseD_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |-
          你的程式應該要：
          - 使用函式
          - 向前移動 100 + 75 像素
          - 使用函式
      courseD_artist_nestedLoops3_authored_hint:
        courseD_artist_nestedLoops3_a: "試著用`跳躍-向前`積木，讓小藝術家在畫完一個正方形後，跳到下一個要開始的地方。\n\n如果你的正方形是 20 像素高，而且兩個正方形相隔 20 像素遠，你需要跳多遠？"
      courseD_artist_nestedLoops3_2018_authored_hint:
        courseD_artist_nestedLoops3_a: "試著用`跳躍-向前`積木，讓小藝術家在畫完一個正方形後，跳到下一個要開始的地方。\n\n如果你的正方形是 20 像素高，而且兩個正方形相隔 20 像素遠，你需要跳多遠？"
      courseD_artist_nestedLoops3_2019_authored_hint:
        courseD_artist_nestedLoops3_a: "試著用`跳躍-向前`積木，讓小藝術家在畫完一個正方形後，跳到下一個要開始的地方。\n\n如果你的正方形是 20 像素高，而且兩個正方形相隔 20 像素遠，你需要跳多遠？"
      courseD_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: 若要繪製一條邊，請用`移動向前 100 像素`積木，並把 100 改成 200。
        courseD_artist_ramp11b: |-
          若要畫出 4 條邊，可以把`移動-向前 200 像素`積木放到重複迴圈裡，並設定重複次數為 4 次。
      courseD_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: 你也可以先畫出正方形，然後再畫三角形。調換畫的順序也可以！
      courseD_bee_conditionals8_authored_hint:
        courseD_bee_conditionals8_a: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      courseD_bee_conditionals8_2018_authored_hint:
        courseD_bee_conditionals8_a: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      courseD_bee_conditionals8_2019_authored_hint:
        courseD_bee_conditionals8_a: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      courseD_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          替換掉使用四個`移動-向前`積木的方式，改成把`移動-向前`積木放進`重複`迴圈，像這樣：
          <xml><block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          </block></xml>
        courseD_artist_ramp10_b: 別忘了要收集寶藏後，再後在每步之後轉向！
      courseD_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: 有 2 個方法可以完成這個關卡！
      courseD_maze_ramp7_authored_hint:
        courseD_maze_ramp7_a: 使用重複積木來不停的運作同一個或是多個指令。
      courseD_scrat_ramp7_authored_hint:
        courseD_scrat_programming6_a: 有 2 個方法可以完成這個關卡！
      courseD_scrat_ramp7_2018_authored_hint:
        courseD_scrat_programming6_a: 有 2 個方法可以完成這個關卡！
      courseD_scrat_ramp8_authored_hint:
        courseD_maze_ramp7_a: 使用重複積木來不停的運作同一個或是多個指令。
      courseD_scrat_ramp8_2018_authored_hint:
        courseD_maze_ramp7_a: 使用重複積木來不停的運作同一個或是多個指令。
      courseE_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: '這個半六邊形有一個**30 像素的邊**還有需要轉向**60 度**。  '
        courseE_artist_concept_challenge1_b: '這個 2/3 的三角形有一個**80 像素的邊**還有需要轉向**120 度**。 '
      courseE_artist_concept_challenge1_2018_authored_hint:
        courseE_artist_concept_challenge1_a: '這個半六邊形有一個**30 像素的邊**還有需要轉向**60 度**。  '
        courseE_artist_concept_challenge1_b: '這個 2/3 的三角形有一個**80 像素的邊**還有需要轉向**120 度**。 '
      courseE_artist_concept_challenge1_2019_authored_hint:
        courseE_artist_concept_challenge1_a: '這個半六邊形有一個**30 像素的邊**還有需要轉向**60 度**。  '
        courseE_artist_concept_challenge1_b: '這個 2/3 的三角形有一個**80 像素的邊**還有需要轉向**120 度**。 '
      courseE_artist_functions1_authored_hint:
        courseE_artist_functions1_a: 正方形每邊都有 100 像素，這代表你需要向前移動 175 像素之後才能開始畫第二個正方形。
        courseE_artist_functions1_b: 畫出眼鏡時可以讓你的兩條線重疊沒關係。
      courseE_artist_functions1_2018_authored_hint:
        courseE_artist_functions1_a: 正方形每邊都有 100 像素，這代表你需要向前移動 175 像素之後才能開始畫第二個正方形。
        courseE_artist_functions1_b: 畫出眼鏡時可以讓你的兩條線重疊沒關係。
      courseE_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |-
          你的程式應該要：
          - 使用函式
          - 向前移動 100 + 75 像素
          - 使用函式
      courseE_artist_functions2_2018_authored_hint:
        courseD_artist_functions2_a: |-
          你的程式應該要：
          - 使用函式
          - 向前移動 100 + 75 像素
          - 使用函式
      courseE_artist_functions2_2019_authored_hint:
        courseD_artist_functions2_a: |-
          你的程式應該要：
          - 使用函式
          - 向前移動 100 + 75 像素
          - 使用函式
      courseE_artist_ramp10_authored_hint:
        courseD_artist_ramp10_a: 別忘了在每個三角形畫完後轉向 60 度，你要在迴圈裡放置哪些程式積木呢？
      courseE_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: 若要繪製一條邊，請用`移動向前 100 像素`積木，並把 100 改成 200。
        courseD_artist_ramp11b: |-
          若要畫出 4 條邊，可以把`移動-向前 100 像素`積木放到重複迴圈裡，並設定重複次數為 4 次。
      courseE_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: 你也可以先畫出正方形，然後再畫三角形。調換畫的順序也可以！
      courseE_artist_ramp8_authored_hint:
        courseE_artist_ramp8_a: 若要繪製一條邊，請用`移動向前 100 像素`積木，並把 100 改成 200。
        courseE_artist_ramp8_b: |-
          若要畫出 4 條邊，可以把`移動-向前 100 像素`積木放到重複迴圈裡，並設定重複次數為 4 次。
      courseE_artist_ramp8_2_authored_hint:
        courseE_artist_ramp8_a: 若要繪製一條邊，請用`移動向前 100 像素`積木，並把 100 改成 200。
        courseE_artist_ramp8_b: |-
          若要畫出 4 條邊，可以把`移動-向前 100 像素`積木放到重複迴圈裡，並設定重複次數為 4 次。
      courseE_artist_ramp8_2018_authored_hint:
        courseE_artist_ramp8_a: 若要繪製一條邊，請用`移動向前 100 像素`積木，並把 100 改成 200。
        courseE_artist_ramp8_b: |-
          若要畫出 4 條邊，可以把`移動-向前 100 像素`積木放到重複迴圈裡，並設定重複次數為 4 次。
      courseE_artist_ramp8_2_2018_authored_hint:
        courseE_artist_ramp8_a: 若要繪製一條邊，請用`移動向前 100 像素`積木，並把 100 改成 200。
        courseE_artist_ramp8_b: |-
          若要畫出 4 條邊，可以把`移動-向前 100 像素`積木放到重複迴圈裡，並設定重複次數為 4 次。
      courseE_artist_ramp9_authored_hint:
        courseD_artist_ramp12_a: 這和正方形有什麼類似的地方？又有哪些不同呢？
      courseE_artist_ramp9_2_authored_hint:
        courseD_artist_ramp12_a: 這和正方形有什麼類似的地方？又有哪些不同呢？
      courseE_artist_ramp9_2018_authored_hint:
        courseD_artist_ramp12_a: 這和正方形有什麼類似的地方？又有哪些不同呢？
      courseE_artist_ramp9_2_2018_authored_hint:
        courseD_artist_ramp12_a: 這和正方形有什麼類似的地方？又有哪些不同呢？
      courseE_bee_functions6_authored_hint:
        courseE_bee_functions6_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions6_2018_authored_hint:
        courseE_bee_functions6_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions6test_authored_hint:
        courseE_bee_functions6_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions7_authored_hint:
        courseE_bee_functions7_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
        courseE_bee_functions7_b: |-
          記得要在綠色的函式積木裡建置你的程式。

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions7_2018_authored_hint:
        courseE_bee_functions7_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
        courseE_bee_functions7_b: |-
          記得要在綠色的函式積木裡建置你的程式。

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      courseE_bee_functions_challenge1_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      courseE_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      courseE_bee_functions_challenge2_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      courseE_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          替換掉使用四個`移動-向前`積木的方式，改成把`移動-向前`積木放進`重複`迴圈，像這樣：
          <xml><block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          </block></xml>
        courseD_artist_ramp10_b: 別忘了要收集寶藏後，再後在每步之後轉向！
      courseE_farmer_concept4_authored_hint:
        4-5_Artist_Patterns_3_a: 每次你試新的積木時，在工具箱拖曳出來請小心別和當前程式攪和在一起。
        4-5_Artist_Patterns_3_b: 如果你的程式變得太雜亂，你可以點擊「重新開始」恢復成原狀，然後重新再一次！
      courseE_farmer_ramp11_authored_hint:
        courseE_farmer_ramp11_a: 如果你在編寫迴圈程式時有困難，可以試試先把所有的程式寫出來，然後找找裡面有哪些地方是重複執行的，找到模式（Pattern）把它放到迴圈裡。
        courseE_farmer_ramp11_b: 除了用 5 個`收集生菜`積木之外，要怎麼使用`重複`迴圈來收成生菜呢？
        courseE_farmer_ramp11_c: 你不必用 5 個重複迴圈來收集所有的生菜。我們可以把收集生菜的迴圈（連同`移動-向前`積木一起）放到另一個迴圈裡頭。
      courseE_farmer_ramp11a_authored_hint:
        courseE_farmer_ramp12_a: '除了用`重複`迴圈來告訴農夫要收集生菜多少次，現在我們還可以用`當有生菜時`積木來讓關卡順利完成。'
      courseE_farmer_ramp11a_2018_authored_hint:
        courseE_farmer_ramp12_a: '除了用`重複`迴圈來告訴農夫要收集生菜多少次，現在我們還可以用`當有生菜時`積木來讓關卡順利完成。'
      courseE_farmer_ramp11a_2019_authored_hint:
        courseE_farmer_ramp12_a: '除了用`重複`迴圈來告訴農夫要收集生菜多少次，現在我們還可以用`當有生菜時`積木來讓關卡順利完成。'
      courseE_farmer_ramp12_authored_hint:
        courseE_farmer_ramp12_b: 你還是需要用一個`重複`迴圈包在外面，這樣一來農夫才知道要執行向前走並收集生菜的指令多少次。
      courseE_farmer_ramp12_2018_authored_hint:
        courseE_farmer_ramp12_b: 你還是需要用一個`重複`迴圈包在外面，這樣一來農夫才知道要執行向前走並收集生菜的指令多少次。
      courseE_farmer_ramp12_forswap_authored_hint:
        courseE_farmer_ramp12_b: 你還是需要用一個`重複`迴圈包在外面，這樣一來農夫才知道要執行向前走並收集生菜的指令多少次。
      courseE_farmer_ramp12_forswap_2018_authored_hint:
        courseE_farmer_ramp12_b: 你還是需要用一個`重複`迴圈包在外面，這樣一來農夫才知道要執行向前走並收集生菜的指令多少次。
      courseE_farmer_ramp12_forswap_2019_authored_hint:
        courseE_farmer_ramp12_b: 你還是需要用一個`重複`迴圈包在外面，這樣一來農夫才知道要執行向前走並收集生菜的指令多少次。
      courseE_farmer_ramp15_authored_hint:
        courseE_farmer_ramp15_b: 要沿著路徑移動到南瓜那兒，還需要怎麼做？
      courseE_farmer_ramp15_2018_authored_hint:
        courseE_farmer_ramp15_b: 要沿著路徑移動到南瓜那兒，還需要怎麼做？
      courseE_farmer_ramp16_authored_hint:
        courseE_farmer_ramp16_a: 如果我們要沿著路徑走到南瓜那，我們要重複做什麼？什麼時候要停止重複？
      courseE_maze_ramp13_authored_hint:
        courseD_maze_ramp11_a: 使用重複積木來不停的運作同一個或是多個指令。
      courseE_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: 有 2 個方法可以完成這個關卡！
      courseE_maze_ramp6_2018_authored_hint:
        courseC_maze_programming6_a: 有 2 個方法可以完成這個關卡！
      courseE_maze_ramp7_authored_hint:
        courseD_maze_ramp7_a: 使用重複積木來不停的運作同一個或是多個指令。
      courseE_maze_ramp7_2018_authored_hint:
        courseD_maze_ramp7_a: 使用重複積木來不停的運作同一個或是多個指令。
      courseF_artist_for4_authored_hint:
        courseF_artist_for4_a: "**需要的數字至少要是多少？\n最大的數字又是多少？\n每循環一次要增加多少？**\n\n這些問題是你每次在使用`計數`迴圈要思考的。"
      courseF_artist_for4_2018_authored_hint:
        courseF_artist_for4_a: "**需要的數字至少要是多少？\n最大的數字又是多少？\n每循環一次要增加多少？**\n\n這些問題是你每次在使用`計數`迴圈要思考的。"
      courseF_artist_for4_2019_authored_hint:
        courseF_artist_for4_a: "**需要的數字至少要是多少？\n最大的數字又是多少？\n每循環一次要增加多少？**\n\n這些問題是你每次在使用`計數`迴圈要思考的。"
      courseF_artist_for7_authored_hint:
        courseF_artist_for7_c: 這個關卡的`計數迴圈`是從 15 到 300，間隔數為 2。
        courseF_artist_for7_d: 這個圖案是用轉向 89 度做出來的。
      courseF_artist_for7_2018_authored_hint:
        courseF_artist_for7_c: 這個關卡的`計數迴圈`是從 15 到 300，間隔數為 2。
        courseF_artist_for7_d: 這個圖案是用轉向 89 度做出來的。
      courseF_artist_for7_2019_authored_hint:
        courseF_artist_for7_c: 這個關卡的`計數迴圈`是從 15 到 300，間隔數為 2。
        courseF_artist_for7_d: 這個圖案是用轉向 89 度做出來的。
      courseF_artist_for_challenge1_authored_hint:
        courseF_artist_for_challenge1_a: '`pen width`（筆跡寬度）是 1。而第一個正方形的邊長是 50 像素，每個正方形之間的邊長差了 50 像素。'
        courseF_artist_for_challenge1_b: 筆刷的透明度固定都是 `counter`/2。
        courseF_artist_for_challenge1_c: 在你畫出一個正方形後，別忘了跳回去，轉向，再跳一次，再轉回去！
        courseF_artist_for_challenge1_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/7f14ddfa5cdcbfdfacd8b1e45511d583-image-1469726581880.png)
      courseF_artist_for_challenge1_2018_authored_hint:
        courseF_artist_for_challenge1_a: '`pen width`（筆跡寬度）是 1。而第一個正方形的邊長是 50 像素，每個正方形之間的邊長差了 50 像素。'
        courseF_artist_for_challenge1_b: 筆刷的透明度固定都是 `counter`/2。
        courseF_artist_for_challenge1_c: 在你畫出一個正方形後，別忘了跳回去，轉向，再跳一次，再轉回去！
        courseF_artist_for_challenge1_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/7f14ddfa5cdcbfdfacd8b1e45511d583-image-1469726581880.png)
      courseF_artist_for_challenge1_2019_authored_hint:
        courseF_artist_for_challenge1_a: '`pen width`（筆跡寬度）是 1。而第一個正方形的邊長是 50 像素，每個正方形之間的邊長差了 50 像素。'
        courseF_artist_for_challenge1_b: 筆刷的透明度固定都是 `counter`/2。
        courseF_artist_for_challenge1_c: 在你畫出一個正方形後，別忘了跳回去，轉向，再跳一次，再轉回去！
        courseF_artist_for_challenge1_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/7f14ddfa5cdcbfdfacd8b1e45511d583-image-1469726581880.png)
      courseF_artist_for_challenge2_authored_hint:
        courseF_artist_for_challenge2_c: '這個`計數迴圈`是從 5 算到 250，間隔數是 2。 '
        courseF_artist_for_challenge2_a: 使用`設定顏色`積木，可以讓顏色改變，使用的是 Rgb 顏色代碼。R（Red，紅）的值固定為 255、G（Green，綠）的值為 `counter`、B（Blue，藍）的值為 `255 - counter`。
        courseF_artist_for_challenge2_b: 這個程式並沒有你想的這麼複雜，只需要設定好`計數迴圈`裡頭的顏色部分，然後向前移動，最後轉向。
      courseF_artist_for_challenge2_2018_authored_hint:
        courseF_artist_for_challenge2_c: '這個`計數迴圈`是從 5 算到 250，間隔數是 2。 '
        courseF_artist_for_challenge2_a: 使用`設定顏色`積木，可以讓顏色改變，使用的是 Rgb 顏色代碼。R（Red，紅）的值固定為 255、G（Green，綠）的值為 `counter`、B（Blue，藍）的值為 `255 - counter`。
        courseF_artist_for_challenge2_b: 這個程式並沒有你想的這麼複雜，只需要設定好`計數迴圈`裡頭的顏色部分，然後向前移動，最後轉向。
      courseF_artist_for_challenge2_2019_authored_hint:
        courseF_artist_for_challenge2_c: '這個`計數迴圈`是從 5 算到 250，間隔數是 2。 '
        courseF_artist_for_challenge2_a: 使用`設定顏色`積木，可以讓顏色改變，使用的是 Rgb 顏色代碼。R（Red，紅）的值固定為 255、G（Green，綠）的值為 `counter`、B（Blue，藍）的值為 `255 - counter`。
        courseF_artist_for_challenge2_b: 這個程式並沒有你想的這麼複雜，只需要設定好`計數迴圈`裡頭的顏色部分，然後向前移動，最後轉向。
      courseF_artist_fwp9_authored_hint:
        courseF_artist_fwp9_a: |-
          試試底下的這些圖案。
          ![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)
      courseF_artist_fwp9_2018_authored_hint:
        courseF_artist_fwp9_a: |-
          試試底下的這些圖案。
          ![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)
      courseF_artist_fwp_challenge2_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: '這是一系列的八邊形，計數 `counter` 使用了 `sides` ，並當作每個形狀的邊長。 '
        courseF_artist_fwp_challenge1_c: '每個八邊形都是由每次的循環構成，迴圈的計數方式是從 200 算到 2，間隔數是 2。 '
        courseF_artist_fwp_challenge1_d: '別忘了在每個循環之後轉向 22.5 度。 '
        courseF_artist_fwp_challenge1_e: 每個八邊形的顏色還有線條的寬度是利用 `counter` 變數來控制的。
        courseF_artist_fwp_challenge1_f: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_fwp_challenge2_2018_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: '這是一系列的八邊形，計數 `counter` 使用了 `sides` ，並當作每個形狀的邊長。 '
        courseF_artist_fwp_challenge1_c: '每個八邊形都是由每次的循環構成，迴圈的計數方式是從 200 算到 2，間隔數是 2。 '
        courseF_artist_fwp_challenge1_d: '別忘了在每個循環之後轉向 22.5 度。 '
        courseF_artist_fwp_challenge1_e: 每個八邊形的顏色還有線條的寬度是利用 `counter` 變數來控制的。
        courseF_artist_fwp_challenge1_f: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_ramp10_authored_hint:
        courseF_artist_ramp10_a: 別忘了在每個三角形畫完後轉向 60 度，你要在迴圈裡放置哪些程式積木呢？
      courseF_artist_ramp10_2018_authored_hint:
        courseF_artist_ramp10_a: 別忘了在每個三角形畫完後轉向 60 度，你要在迴圈裡放置哪些程式積木呢？
      courseF_artist_ramp8_authored_hint:
        courseF_artist_ramp8_a: 若要繪製一條邊，請用`移動向前 100 像素`積木，並把 100 改成 200。
        courseF_artist_ramp8_b: |-
          若要畫出 4 條邊，可以把`移動-向前 100 像素`積木放到重複迴圈裡，並設定重複次數為 4 次。
      courseF_artist_ramp8_2018_authored_hint:
        courseF_artist_ramp8_a: 若要繪製一條邊，請用`移動向前 100 像素`積木，並把 100 改成 200。
        courseF_artist_ramp8_b: |-
          若要畫出 4 條邊，可以把`移動-向前 100 像素`積木放到重複迴圈裡，並設定重複次數為 4 次。
      courseF_artist_ramp9_authored_hint:
        courseF_artist_ramp9_a: 這和正方形有什麼類似的地方？又有哪些不同呢？
      courseF_artist_ramp9_2018_authored_hint:
        courseF_artist_ramp9_a: 這和正方形有什麼類似的地方？又有哪些不同呢？
      courseF_artist_variablesFP_authored_hint:
        courseF_artist_variablesFP_a: |-
          試試下方的三個圖案。
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variablesFP_2018_authored_hint:
        courseF_artist_variablesFP_a: |-
          試試下方的三個圖案。
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variablesFP_2019_authored_hint:
        courseF_artist_variablesFP_a: |-
          試試下方的三個圖案。
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variables_challenge1a_authored_hint:
        courseF_artist_variables_challenge1_a: '變數非常有用，因為你每循環一次就可以加一個數值上去。 '
        courseF_artist_variables_challenge1_b: 這個關卡有個畫出多邊形的迴圈，一個用來重複多邊形 `sides` 次，另一個在 `sides` 加上 5 以後再做一次。
        courseF_artist_variables_challenge1_c: 使用變數，`sides` 代表邊數，`length` 代表長度，用它們可以編寫出簡潔的程式，因為我們可以透過迴圈來執行相同的程式多次，這樣一來，模式相同但數字不同的程式就不需要編寫好多次。
        courseF_artist_variables_challenge1_d: |-
          **解決方案：**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: 變數非常有用，因為你每循環一次就可以加一個數值上去。 
        courseF_artist_variables_challenge2_c: 使用變數，`sides` 代表邊數，`length` 代表長度，用它們可以編寫出簡潔的程式，因為我們可以透過迴圈來執行相同的程式多次，這樣一來，模式相同但數字不同的程式就不需要編寫好多次。
        courseF_artist_variables_challenge2_d: |-
          **解決方案：**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018_authored_hint:
        courseF_artist_variables_challenge2_a: 變數非常有用，因為你每循環一次就可以加一個數值上去。 
        courseF_artist_variables_challenge2_c: 使用變數，`sides` 代表邊數，`length` 代表長度，用它們可以編寫出簡潔的程式，因為我們可以透過迴圈來執行相同的程式多次，這樣一來，模式相同但數字不同的程式就不需要編寫好多次。
        courseF_artist_variables_challenge2_d: |-
          **解決方案：**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2019_authored_hint:
        courseF_artist_variables_challenge2_a: 變數非常有用，因為你每循環一次就可以加一個數值上去。 
        courseF_artist_variables_challenge2_c: 使用變數，`sides` 代表邊數，`length` 代表長度，用它們可以編寫出簡潔的程式，因為我們可以透過迴圈來執行相同的程式多次，這樣一來，模式相同但數字不同的程式就不需要編寫好多次。
        courseF_artist_variables_challenge2_d: |-
          **解決方案：**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_bee_conditionals8_authored_hint:
        courseF_bee_conditionals8_a: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      courseF_bee_conditionals8_2018_authored_hint:
        courseF_bee_conditionals8_a: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      courseF_bee_for_challenge2_authored_hint:
        courseF_bee_for_challenge2_a: "看看可用的移動方式：\n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: '試著使用 2 個`計數`迴圈：一個用來往上爬然後採集花蜜，另一個則是往下爬然後釀造蜂蜜。'
        courseF_bee_for_challenge2_c: "注意一個`計數`迴圈裡頭需要數個規律的重複積木，以重複 `counter` 次來製作出樓梯的模式。\n\n其它的`計數`迴圈只需要一個普通的重複積木以收集到 `counter` 個蜂蜜。"
        courseF_bee_for_challenge2_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/1a61eae7e12742c8d850f2bf7e939f72-image-1469726415313.png)
      courseF_bee_for_challenge2_2018_authored_hint:
        courseF_bee_for_challenge2_a: "看看可用的移動方式：\n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: '試著使用 2 個`計數`迴圈：一個用來往上爬然後採集花蜜，另一個則是往下爬然後釀造蜂蜜。'
        courseF_bee_for_challenge2_c: "注意一個`計數`迴圈裡頭需要數個規律的重複積木，以重複 `counter` 次來製作出樓梯的模式。\n\n其它的`計數`迴圈只需要一個普通的重複積木以收集到 `counter` 個蜂蜜。"
        courseF_bee_for_challenge2_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/1a61eae7e12742c8d850f2bf7e939f72-image-1469726415313.png)
      courseF_bee_for_challenge2_2019_authored_hint:
        courseF_bee_for_challenge2_a: "看看可用的移動方式：\n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: '試著使用 2 個`計數`迴圈：一個用來往上爬然後採集花蜜，另一個則是往下爬然後釀造蜂蜜。'
        courseF_bee_for_challenge2_c: "注意一個`計數`迴圈裡頭需要數個規律的重複積木，以重複 `counter` 次來製作出樓梯的模式。\n\n其它的`計數`迴圈只需要一個普通的重複積木以收集到 `counter` 個蜂蜜。"
        courseF_bee_for_challenge2_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/1a61eae7e12742c8d850f2bf7e939f72-image-1469726415313.png)
      courseF_bee_for_challenge3_authored_hint:
        courseF_bee_for_challenge2_a: "看看可用的移動方式：\n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: '試著使用 2 個`計數`迴圈：一個用來往上爬然後採集花蜜，另一個則是往下爬然後釀造蜂蜜。'
        courseF_bee_for_challenge2_c: "注意一個`計數`迴圈裡頭需要數個規律的重複積木，以重複 `counter` 次來製作出樓梯的模式。\n\n其它的`計數`迴圈只需要一個普通的重複積木以收集到 `counter` 個蜂蜜。"
        courseF_bee_for_challenge2_d: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/1a61eae7e12742c8d850f2bf7e939f72-image-1469726415313.png)
      courseF_bee_functions6_authored_hint:
        courseF_bee_functions6_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseF_bee_functions6_2018_authored_hint:
        courseF_bee_functions6_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseF_bee_functions8a_authored_hint:
        courseF_bee_functions8a_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      courseF_bee_functions8a_2018_authored_hint:
        courseF_bee_functions8a_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      courseF_bee_functionsPre7_authored_hint:
        courseF_bee_functions7_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      courseF_bee_functionsPre7_2018_authored_hint:
        courseF_bee_functions7_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      courseF_bee_functions_challenge2_recursion_authored_hint:
        courseF_bee_functions8a_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
      courseF_farmer_ramp11_authored_hint:
        courseF_farmer_ramp11_a: 如果你在編寫迴圈程式時有困難，可以試試先把所有的程式寫出來，然後找找裡面有哪些地方是重複執行的，找到模式（Pattern）把它放到迴圈裡。
        courseF_farmer_ramp11_b: 除了用 5 個`收集生菜`積木之外，要怎麼使用`重複`迴圈來收成生菜呢？
        courseF_farmer_ramp11_c: 你不必用 5 個重複迴圈來收集所有的生菜。我們可以把收集生菜的迴圈（連同`移動-向前`積木一起）放到另一個迴圈裡頭。
      courseF_farmer_ramp11_2018_authored_hint:
        courseF_farmer_ramp11_a: 如果你在編寫迴圈程式時有困難，可以試試先把所有的程式寫出來，然後找找裡面有哪些地方是重複執行的，找到模式（Pattern）把它放到迴圈裡。
        courseF_farmer_ramp11_b: 除了用 5 個`收集生菜`積木之外，要怎麼使用`重複`迴圈來收成生菜呢？
        courseF_farmer_ramp11_c: 你不必用 5 個重複迴圈來收集所有的生菜。我們可以把收集生菜的迴圈（連同`移動-向前`積木一起）放到另一個迴圈裡頭。
      courseF_maze_ramp13_authored_hint:
        courseF_maze_ramp13_a: 使用重複積木來不停的運作同一個或是多個指令。
      courseF_maze_ramp15_authored_hint:
        courseF_maze_ramp7_a: 使用重複積木來不停的運作同一個或是多個指令。
      courseF_maze_ramp6_authored_hint:
        courseF_maze_ramp6_a: 有 2 個方法可以完成這個關卡！
      courseF_maze_ramp6_2018_authored_hint:
        courseF_maze_ramp6_a: 有 2 個方法可以完成這個關卡！
      courseF_maze_ramp7_authored_hint:
        courseF_maze_ramp7_a: 使用重複積木來不停的運作同一個或是多個指令。
      courseF_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge2_b: 在每次方向鍵點擊時，你可以將參數改成角色移動的距離。
      courseF_playlab_variables_challenge2_2018_authored_hint:
        courseF_playlab_variables_challenge2_b: 在每次方向鍵點擊時，你可以將參數改成角色移動的距離。
      drawings!_authored_hint:
        triangle_geometry_hint: '請記住：一個正三角形有 3 條等長的邊，每個角是 60 度！'
        repeat_pointer: 你要畫出一條邊，然後轉向，共做 3 次…要執行一連串的指令多次，可以用什麼積木呢？
        repeat_bottom_out: 使用一個`重複 3 次`積木！
      grade1_adventurer_loops10_authored_hint:
        grade1_adventurer_loops10_a: 你需要使用 3 個`重複`迴圈才能完成這個關卡。
      grade1_artist_loops1_authored_hint:
        grade1_artist_loops1_a: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
      grade1_artist_loops6_authored_hint:
        grade1_artist_loops6_a: 這個挑戰用了 4 個迴圈，一個接著一個！
      grade1_artist_loops7a_authored_hint:
        artistLoopsK9_a: 這個挑戰用了 4 個迴圈，一個接著一個！
      grade2_CaringForNewPet_4_authored_hint:
        2-3_Maze_6_a: 有 2 個方法可以完成這個關卡！
      grade2_MakeDogTag_1_authored_hint:
        2-3_Artist_1_new_a: 如果你使用`移動-向前 100 像素`這個積木，我就會向前移動並自動畫一條線啦。
        2-3_Artist_1_new_b: 要如何才能轉彎？試試`轉向-右方 90 度`積木。
      grade2_MakeDogTag_9_authored_hint:
        2-3_Artist_Loops_New_11_b: 你的下一個轉彎動作應該要在迴圈中程式碼的**最後面**。
      grade2_PuppyLoops_10_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          我的形狀重複了幾次？

          形狀 *應該* 要重複幾次？

          怎樣在你的程式裡做出對應的改變？
      grade2_PuppyLoops_6_authored_hint:
        2-3_Maze_16_a: 如果很難去找到匹配的模式，試試先一點一點的把指令全寫出來，然後看看哪些部分是重複的，最後把這些重複的部分放進迴圈裡。
        2-3_Maze_16_b: "如果要在`重複`迴圈中放置多個積木，只要拖曳一個迴圈到工作區，然後再把工作區上的積木堆拖曳到裡面。\n\n把它們放到`當運行時`積木就大功告成囉！"
      grade2_PuppyLoops_7_authored_hint:
        2-3_Maze_Loops_17_a: 如果很難去找到匹配的模式，試試先一點一點的把指令全寫出來，然後看看哪些部分是重複的，最後把這些重複的部分放進迴圈裡。
        2-3_Maze_Loops_17_b: 你把預先建立好的程式給刪除了嗎？點擊`重新開始`按鈕把程式找回來吧！
      grade2_PuppyLoops_8_authored_hint:
        2-3_Artist_Debugging_2_a: '提示：每個鬍鬚長度為 75 像素。'
      grade2_PuppyLoops_9_authored_hint:
        2-3_Artist_Debugging_7_a: 如果你讓藝術家畫完第一條線之後就向後移動或跳躍的話，會發生什麼？
      grade2_puppy_loops6_authored_hint:
        2-3_Maze_16_a: 如果很難去找到匹配的模式，試試先一點一點的把指令全寫出來，然後看看哪些部分是重複的，最後把這些重複的部分放進迴圈裡。
        2-3_Maze_16_b: "如果要在`重複`迴圈中放置多個積木，只要拖曳一個迴圈到工作區，然後再把工作區上的積木堆拖曳到裡面。\n\n把它們放到`當運行時`積木就大功告成囉！"
      grade2_puppy_loops7_authored_hint:
        2-3_Maze_Loops_17_a: 如果很難去找到匹配的模式，試試先一點一點的把指令全寫出來，然後看看哪些部分是重複的，最後把這些重複的部分放進迴圈裡。
      grade3_ConditionalsElse_4_authored_hint:
        remember_quantum: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      grade3_ConditionalsElse_5_authored_hint:
        remember_quantum: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      grade3_ConditionalsElse_TeacherIDo_authored_hint:
        remember_quantum: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      grade3_Conditionals_10 BAD_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: 這就像個長方形，蜜蜂要往前移動、向左轉，總共多少次才能走完這個圖形。
      grade3_Conditionals_11_authored_hint:
        2-3_Bee_Conditionals_14_a: 想不到要如何減少積木的使用量？試著把用在紫花上的程式套用到紅花上。
        2-3_Bee_Conditionals_14_b: 如果紅花變成紫花，想一想，要怎麼另外使用`重複`迴圈來減少代碼的使用？
      grade3_Conditionals_12_authored_hint:
        2-3_Bee_Conditionals_15_a: '請記住：每次你運行程式後，紫花的花蜜數會變成 0 或 1！'
      grade3_Conditionals_2_authored_hint:
        2-3_Bee_Conditionals_3_a: 如果你用迴圈的方式，程式就會精簡許多。一個迴圈用來向前移動，另一個迴圈用來收集花蜜，再一個迴圈來釀造蜂蜜。
      grade3_Conditionals_4_authored_hint:
        2-3_Bee_Conditionals_6_a: '請記住：當你運行程式後，紫花的花蜜數會變成 0 或 1！'
      grade3_Conditionals_TeacherIDo_authored_hint:
        2-3_Bee_Conditionals_6_a: '請記住：當你運行程式後，紫花的花蜜數會變成 0 或 1！'
      grade3_Debugging_1_authored_hint:
        2-3_Bee_Debugging_1_a: 在你找到並修正了不正確的積木的過程中，有發現哪些地方可以用一個`重複`迴圈讓程式變得更簡單嗎？
      grade3_Debugging_TeacherIDo_authored_hint:
        2-3_Bee_Debugging_4_a: 蜜蜂做的事情裡頭好像有些地方不大對勁？當你更改那個積木後會發生什麼事呢？
      grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: 你的迴圈中應該要有 5 個積木。
      grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: 如果你不能馬上的就使用`重複`積木來寫出程式，可以先把一個個的指令寫出來，然後找出指令間共同的模式。
      grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: 如果你沒有辦法很快的分辨出要在`重複`迴圈中放些什麼積木，可以試著先按照順序拖曳出每個積木，並在拖曳過程中找出它們的規律。
        2-3_Bee_Loops_6_b: 你的`重複`迴圈裡應該要有 6 個積木才對。
      grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: 你需要 2 個不同的`重複`迴圈，一個接著一個。
      grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: 第一個動作是轉向，而不是移動。
        2-3_Bee_Loops_7_b: '如果你實在無法從頭想像迴圈的內容，可以先把需要的指令寫成長一點的程式，然後從裡頭找出組合模式。  '
      grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: 第一個動作是轉向，而不是移動。
        2-3_Bee_Loops_4A_b: 在迴圈之外的結尾處再加上一些程式就可以完成了。
        2-3_Bee_Loops_4A_c: 如果你還不能準確的使用迴圈，可以先用長串的指令，然後再找出有什麼地方是可以用`重複`迴圈來替代的。
      grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: 你的迴圈中應該要有 4 個積木。
      grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: 你的迴圈中應該要有 6 個積木。
      grade3_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      grade3_maze_loops2_authored_hint:
        grade3_maze_loops2_b: 如果很難去找到匹配的模式，試試先一點一點的把指令全寫出來，然後看看哪些部分是重複的，最後把這些重複的部分放進迴圈裡。
      grade3_maze_loops5_authored_hint:
        2-3_Maze_Loops_21_a: 如果你一時之間找不到樓梯的組合模式，試試用手蓋住被擋住的路徑。
      grade4_arist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          這個圖案會循環 10 次，在一圈 360 度裡。

          **360 / 10 = ?**
      grade4_arist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          你要重複畫這個圖形 6 次，在一圈 360 度內。

          **360 / 6 = ?**
      grade4_arist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: |-
          別忘了在內部循環中加上轉向。

          在一圈 360 度裡要畫出 6 個三角形。

          **360 / 6 = ?**
      grade4_arist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      grade4_artist_functions1_authored_hint:
        2-3_Artist_Functions_1_a: 正方形每邊都有 100 像素，這代表你需要向前移動 175 像素之後才能開始畫第二個正方形。
        2-3_Artist_Functions_1_b: 畫出眼鏡時可以讓你的兩條線重疊沒關係。
      grade4_artist_functions2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          你的程式應該要：
          - 使用函式
          - 向前移動 100 + 75 像素
          - 使用函式
      grade4_artist_functions_challenge_authored_hint:
        Course_4_SCF_1_a: 每個六邊形的邊長都是 40 像素。
        Course_4_SCF_1_b: 每個六邊形之間的水平距離是 120 像素。
        Course_4_SCF_1_c: "在你畫出第二排的六邊形之前，你需要向右轉 60 度，然後向前跳 40 像素。\n\n在你到了正確的垂直位置後，你必須讓小藝術家再轉過頭來，然後向前跳 320 像素。"
        Course_4_SCF_1_d: "在你畫出第三排的多邊形之前，你需要向右轉 60 度，然後向前跳 40 像素。\n\n在你到了正確的垂直位置後，你必須讓小藝術家再轉過頭來，然後向前跳 440 像素（比你的函式 `shift down/forward` 還要多 120 像素）。 "
        Course_4_SCF_1_e: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      grade4_artist_functions_challenge2_authored_hint:
        Course_4_SCF_1_a: 每個六邊形的邊長都是 40 像素。
        Course_4_SCF_1_b: 每個六邊形之間的水平距離是 120 像素。
        Course_4_SCF_1_c: "在你畫出第二排的六邊形之前，你需要向右轉 60 度，然後向前跳 40 像素。\n\n在你到了正確的垂直位置後，你必須讓小藝術家再轉過頭來，然後向前跳 320 像素。"
        Course_4_SCF_1_d: "在你畫出第三排的多邊形之前，你需要向右轉 60 度，然後向前跳 40 像素。\n\n在你到了正確的垂直位置後，你必須讓小藝術家再轉過頭來，然後向前跳 440 像素（比你的函式 `shift down/forward` 還要多 120 像素）。 "
        Course_4_SCF_1_e: |-
          **解決方案：**

          ![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      grade4_artist_nestedLoops_challenge2_authored_hint:
        Course_4_Artist_11_a: '這個半六邊形有一個**30 像素的邊**還有需要轉向**60 度**。  '
        Course_4_Artist_11_b: '這個 2/3 的三角形有一個**80 像素的邊**還有需要轉向**120 度**。 '
      grade4_artist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          這個圖案會循環 10 次，在一圈 360 度裡。

          **360 / 10 = ?**
      grade4_artist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          你要重複畫這個圖形 6 次，在一圈 360 度內。

          **360 / 6 = ?**
      grade4_artist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      grade4_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      grade4_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "**記住：**這個關卡在每次運行時都會有變化。\n\n你會需要一個條件判斷的積木（`如果`或是`如果…否則`）來完成這個挑戰。"
      grade4_bee_functions7_authored_hint:
        2-3_Bee_Functions_8_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      grade4_bee_functions8_authored_hint:
        2-3_Bee_Functions_8_a: "如果碰到了難度很高的關卡，試著花些時間建構出函式來利用。\n\n添加一些積木到裡頭，然後試試看，接著再添加一些，再試試，最後，你就可以找到答案！"
        2-3_Bee_Functions_8_b: |-
          記得要在綠色的函式積木裡建置你的程式。

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      grade4_review_artist1_authored_hint:
        2-3_Artist_1_new_a: 如果你使用`移動-向前 100 像素`這個積木，我就會向前移動並自動畫一條線啦。
        2-3_Artist_1_new_b: 要如何才能轉彎？試試`轉向-右方 90 度`積木。
      grade4_review_artist2_authored_hint:
        2-3_Artist_6_a: '如果要做出這些小小的角度，我們必須讓每次畫完正方形之後的轉向角度大一些。   '
        2-3_Artist_6_b: 因為我們已經面向右邊，所以最簡單的方式，就是先往前移動，再向左轉，就可以製作出這個三角形。
        2-3_Artist_6_c: 三角形的每個邊長和正方形的邊長一樣，都是 100 像素！
      grade4_review_bee1_authored_hint:
        2-3_Bee_Loops_3B_a: 你需要 2 個不同的`重複`迴圈，一個接著一個。
      grade4_review_bee2_authored_hint:
        2-3_Bee_Loops_3_a: 你的迴圈中應該要有 6 個積木。
      grade4_review_bee3_authored_hint:
        2-3_Bee_Loops_4_a: 你的迴圈中應該要有 5 個積木。
      grade5_artist_binary10_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: 這個程式中使用了 2 個`計數迴圈`，第一個從 1 算到 8，另一個則是從 8 算到 1。
        Course_4_Artist_Binary_Free_Play_2b_b: 每個`計數迴圈`裡有 3 個`重複`積木，第一個畫出左半部、第二個畫出中間、第三個畫出右半部。
        Course_4_Artist_Binary_Free_Play_2b_c: 在每一次的循環裡，你需要為 1s 使用 `counter` 計數，還有為 0s 使用 `16-(2 x counter)` 來計數。
      grade5_artist_for_loops10_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: 最大的多邊形有 19 個邊。
        Course_4_Artist_For_Loops_Challenge_b: 每個多邊形都不完整，其中有一條邊會比原來的短。
      grade5_artist_for_loops4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "**需要的數字至少要是多少？\n最大的數字又是多少？\n每循環一次要增加多少？**\n\n這些問題是你每次在使用`計數`迴圈要思考的。"
      grade5_artist_for_loops8_authored_hint:
        Course_4_Artist_For_Loops_11_a: "每個圖形之後轉向的角度都會改變！\n\\r\n使用運算類別積木，並輸入 360 除以邊數來產生圖形要轉向的角度。 "
      grade5_artist_for_loops9_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 除以多邊形的邊數，就是你要轉向的度數。 '
        Course_4_Artist_For_Loops_11a_b: '每一次你需要向前移動，共 10 次。移動的長度相當於多邊形的邊數。 '
      grade5_artist_for_loopsfreeplay11_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: 這個程式的基礎和上個挑戰關卡很像…有些地方改了就是。
        Course_4_Artist_For_Loops_inspire_b: 試試看這個`計數`迴圈，從 3 算到 10，每次增加 1。
        Course_4_Artist_For_Loops_inspire_c: 在這個`計數`迴圈裡用了二個`重複`積木，不過第二個會轉成相反的方向。
      grade5_artist_functionparameters10_authored_hint:
        brush_width: 在我們開始前，先將筆刷的寬度設為 1，顏色設為藍色。
        double_loop: 試著放置一個`計數迴圈`到`重複`積木裡頭。
        specifics: "畫出 6 個「花瓣」的這個`計數迴圈`，每一次都會從 3 開始執行到 17，而畫出的形狀的邊數都會是奇數。\n\n`設置透明度`的積木中用了計數器，當計數器的值愈高時，顏色會變得愈淡。"
        after: 當你完成每個「花瓣」時，請檢查是否在你轉彎 60 度之前`移動-向前`了 20 像素。
      grade5_artist_variables_freeplay10_authored_hint:
        Course_4_Artist_Vars_8_a: 如果你將起始長邊除以側邊數，當側邊個數越大時，每個的長邊將會變短
      grade5_artist_variables_freeplay15_authored_hint:
        Course_4_Artist_Inspire_a: 在你完成一個正方形後（轉向製作下一個之前）向前跳躍，跳的距離是邊長的一半。
        Course_4_Artist_Inspire_b: 畫出一個正方形然後跳躍，共重複 4 次（每次之間又用了向左轉），就可以做出這個像風車一樣的圖案。
        Course_4_Artist_Inspire_c: 每個風車圖案也重複了 4 次，轉向的角度為 **360/sides**。
      grade5_artist_variables_octagons13_authored_hint:
        Course_4_Artist_Vars_13_a: 你需要 2 個重複迴圈（一個包著一個），兩個都重複 `sides`次。
        Course_4_Artist_Vars_13_b: "裡面的重複迴圈畫出了一個八邊形（轉向左邊）。\n\n之後，你只需要在迴圈外層添加向前移動，然後向右轉的程式。"
        Course_4_Artist_Vars_13_c: 如果要在邊數改變的同時又保持圖形的尺寸，可以使用運算積木，將周長除以邊數。
      grade5_artist_variables_square7_authored_hint:
        Course_4_Artist_Vars_6_a: 若要畫出一個正多邊形，可以在每一次循環轉 **360/邊數** 度。
      grade5_playlab_variables2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: 確定在 `dog_speed`（小狗的速度）上設定的數值要大於 `cat_speed`（小貓的速度）。
      gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: 如果你想要重複程式 4 次以上，你可以修改積木上的數字。
      gradek_artist_loops4_authored_hint:
        artistLoopsK3_a: 試著用你學到的重複積木來完成這個關卡！
      gradek_artist_loops6_authored_hint:
        gradek_artist_loops6_a: 不知道該把這個環放在哪裡？嘗試一步一步地編寫代碼，並尋找模式。
      gradek_artist_loops9_authored_hint:
        artistLoopsKA_a: 使用跳躍積木可以向前移動但不會畫線。
      harvey_tictactoe_authored_hint:
        harvey_tictactoe: 你可以利用 `跳躍` 積木移動到其它的空格。
      level 'grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: 你的迴圈中應該要有 5 個積木。
      level 'grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: 如果你不能馬上的就使用`重複`積木來寫出程式，可以先把一個個的指令寫出來，然後找出指令間共同的模式。
      level 'grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: 如果你沒有辦法很快的分辨出要在`重複`迴圈中放些什麼積木，可以試著先按照順序拖曳出每個積木，並在拖曳過程中找出它們的規律。
        2-3_Bee_Loops_6_b: 你的`重複`迴圈裡應該要有 6 個積木才對。
      level 'grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: 你需要 2 個不同的`重複`迴圈，一個接著一個。
      level 'grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: 第一個動作是轉向，而不是移動。
        2-3_Bee_Loops_7_b: '如果你實在無法從頭想像迴圈的內容，可以先把需要的指令寫成長一點的程式，然後從裡頭找出組合模式。  '
      level 'grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: 第一個動作是轉向，而不是移動。
        2-3_Bee_Loops_4A_b: 在迴圈之外的結尾處再加上一些程式就可以完成了。
        2-3_Bee_Loops_4A_c: 如果你還不能準確的使用迴圈，可以先用長串的指令，然後再找出有什麼地方是可以用`重複`迴圈來替代的。
      level 'grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: 你的迴圈中應該要有 4 個積木。
      level 'grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: 你的迴圈中應該要有 6 個積木。
