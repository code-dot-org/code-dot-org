zh-TW:
  data:
    callouts:
      2-3 Artist Debugging 1_callout:
        2-3_Artist_Debugging_1_a: 小藝術家上沒有「步進」按鈕，但你可以使用左側的滑杆來放慢程式運行的速度以便檢查。
      2-3 Bee Conditionals 5_callout:
        Bee_Cond_5_1a: 紫花上可能有 1 或 0 個花蜜…但在運行程式前你是不會知道到底是多少！
      4-5 Artist Patterns Free Play_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      4-5 Bee Conditionals - FC Test_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      4-5 Bee Conditionals 2_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      CSD U3 Variables Predict Where X_callout:
        CSD_U3_variables: 在此修改數值
      CSD U3 Variables Predict Where X_2018_callout:
        CSD_U3_variables: 在此修改數值
      CSD U3 Variables Predict Where X_2019_callout:
        CSD_U3_variables: 在此修改數值
      CSD U3 abstraction dragonfly (OLD)_callout:
        CSD_U3_L11_S5_C1: 添加你的積木到這兒。
      CSD U3 abstraction dragonfly OLD_callout:
        CSD_U3_L11_S5_C1: 添加你的積木到這兒。
      CSD U3 abstraction horse2_callout:
        CSD_U3_L11_S15_C1: 在此設定你的角色的 velocityY
      CSD U3 abstraction jumper intro_callout:
        CSD_U3_L11_S17_C1: 在此設定角色的初始位置。
      CSD U3 abstraction jumper template_callout:
        CSD_U3_L11_S17_C1: 在此設定角色的初始位置。
      CSD U3 abstraction jumping_callout:
        CSD_U3_L13_S8_C1: 在此設定速度
      CSD U3 abstraction jumping_2018_callout:
        CSD_U3_L13_S8_C1: 在此設定速度
      CSD U3 abstraction jumping_2019_callout:
        CSD_U3_L13_S8_C1: 在此設定速度
      CSD U3 abstraction sidescroll intro_callout:
        CSD_U3_L11_S17_C1: 在此設定角色的初始位置。
      CSD U3 abstraction sidescroll template-2018_callout:
        CSD_U3_L11_S17_C1: 在此設定角色的初始位置。
      CSD U3 abstraction sidescroll template_callout:
        CSD_U3_L11_S17_C1: 在此設定角色的初始位置。
      CSD U3 abstraction sidescroll template_2018_callout:
        CSD_U3_L11_S17_C1: 在此設定角色的初始位置。
      CSD U3 abstraction sidescroll template_2019_callout:
        CSD_U3_L11_S17_C1: 在此設定角色的初始位置。
      CSD U3 abstraction sidescroll_callout:
        CSD_U3_L11_S17_C1: 在此設定角色的初始位置。
      CSD U3 collisions isTouching intro_2019_callout:
        CSD_U3_L12_S2_C1: 添加你的積木到這兒。
      CSD U3 debug_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 debug_2018_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 debug_2019_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 ellipse_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 ellipse_2018_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 ellipse_2019_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 fill_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 fill_2018_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 fill_2019_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 my-rect_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 這個是「運行」按鈕。
      CSD U3 rect_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 這個是「運行」按鈕。
      CSD U3 rect_2018_callout:
        CSD_U3_rect_c1: 這兒是代碼
      CSD U3 rect_2019_callout:
        CSD_U3_rect_c1: 這兒是代碼
      CSD U3 sequence_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 sequence_2018_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      CSD U3 sequence_2019_callout:
        CSD_U3_rect_c1: 這兒是代碼
        CSD_U3_rect_c2: 拖曳這個積木到工作區裡。
      Counting_callout:
        New Play Lab Project_callout1: 點擊工具箱上的各個類別以檢視其中的積木！拖曳積木到工作區，把他們添加到你的程式中。
        New Play Lab Project_callout2: 點擊「運行」以儲存並運行你的程式
        sign_in_to_save_project: 想要在以後繼續使用這個專案嗎？登入以將這個專案保存到你的帳戶！
      Course 4 Artist 4_callout:
        repeat_full_circle: 殭屍需要移動多少次才能完成一個圓？輸入移動的次數。
      Course 4 Artist 7_callout:
        repeat_blocks: 使用「重複」積木，並包住工作區上的所有積木。
      Course 4 Artist For Loops 4_callout:
        place_counter_variable: 拖曳計數器變數到這個積木
      Course 4 Artist Functions 4_callout:
        create_function: 點擊此處開啟函式視窗，接著點擊「建立一個函式」按鈕。
      Course 4 Artist Functions 5 OLD_callout:
        house_hint: 這個圖案看上去還不像個房子，不過沒關係，我們會在下個關卡修正它。
      Course 4 Artist Functions 8_callout:
        edit_function: 點擊此處以編輯你的函式。
      Course 4 Artist Functions challenge_callout:
        Course_4_Artist_Functions_challenge_1: 請注意我們已經排序的所有積木，並把它們依功能分類，讓他們看起來更整潔。 點擊此處可找到所有你需要的積木。
      Course 4 Artist Params 2_callout:
        length_parameter: 你可以更新這個函式，讓它能使用 length（長度）參數嗎？
      Course 4 Artist Params 4_callout:
        create_function: 點擊此處開啟函式視窗，接著點擊「建立一個函式」按鈕。
      Course 4 Artist Vars 1_callout:
        repeat_blocks: 使用「重複」積木，並包住工作區上的所有積木。
      Course 4 Artist Vars 10_callout:
        set_sides: 使用這個積木將 sides（邊數）設置成完成關卡所需的數值。
      Course 4 Artist Vars 12_callout:
        set_length: 使用這個積木將 length（長度）設置成正確數值。
      Course 4 Artist Vars 2_callout:
        set_length: 使用這個積木將 length（長度）設置成正確數值。
      Course 4 Artist Vars 3_callout:
        place_variable: 拖曳你的變數到這個積木中
      Course 4 Artist Vars 6_callout:
        degrees_per_side: 用 360 除以邊數就可以得到每個角的角度。
      Course 4 Artist Vars 8_callout:
        Course_4_Artist_Vars_8_a: 需要更多的空間？拉動這個條桿讓程式區域更寬一些。
      Course 4 Artist Vars 9_callout:
        set_sides: 使用這個積木將 sides（邊數）設置成完成關卡所需的數值。
      Course 4 Bee 1_callout:
        if_bee_nectar: 使用「如果」積木來決定蜜蜂應該要採集花蜜還是釀造蜂蜜。
      Course 4 Bee 3_callout:
        if_else_bee: 使用「如果…否則」積木，那樣一來就可以讓蜜蜂從花朵採集花蜜，如果不是花朵就釀造蜂蜜。
      Course 4 Bee For Loops 1_callout:
        get_nectar: 使用新的「採集花蜜」積木。
      Course 4 Bee For Loops 6_callout:
        actions_category: 工具箱有新的樣貌了！這兒現在有個「動作類別」的積木了。
      Course 4 Bee Params 2_callout:
        edit_get_nectar: 使用這個按鈕來編輯函式，然後改變蜜蜂的轉向，讓牠採集到花蜜。
      Course 4 Bee Params 4 - Two WhenRun_callout:
        Course_4_Bee_Params_4: 設置這些變數成 0 或是 1，並命為 flag，這個 flag 可以發信號給我們的函式，告訴我們蜜蜂該往哪個方向前進。
      Course 4 Maze 1_callout:
        Course 4 Maze 1_callout1: 點擊「運行」按鈕，看看程式的結果
        Course 4 Maze 1_callout2: 拖曳「移動」積木到工作區上，貼到其它的積木下方。
      Course 4 Maze 4_callout:
        repeat: 將程式積木放在迴圈中來重複執行指令
      Course 4 Play Lab Params 2_callout:
        Course_4 _Play_Lab_Params_2_1: 點擊「編輯」以更新這個函式，讓它可以使用 height（高度）參數。
      Course 4 Play Lab Params 3_callout:
        edit_function: 點擊此處以編輯你的函式。
      Course 4 Play Lab Params 6_callout:
        edit_add_parameter: 點一下編輯，在你的函式中添加參數
      Course 4 Play Lab Vars 1_callout:
        arrows_move_actor: 使用這些方向鍵來移動角色
      Course 4 Play Lab Vars 9_callout:
        Course_4_Play_Lab_Vars_9_1: 你的所有積木現在被依功能分成數個類別放置！點擊指令類別文字來看看裡頭有什麼積木。
      Course 4 Play Labs For Loops 5_callout:
        Course_4_Play_Labs_For_Loops_5: 哇哩！我的程式爆炸了！你能放它放回正確的位置以完成這個關卡嗎？
      Course 4 Playlab For Loops 4b_callout:
        Course_4_Playlab_For_Loops_4b_1: 注意 `counter`（計數器）變數在每個角色上是不是用了不同的名稱？這樣子每個計數迴圈才可以控制自己的計數器。
        Course_4_Playlab_For_Loops_4b_2: 這個關卡你只能修改`計數迴圈`中的「增量」。
      Course 4 SCV 6_callout:
        Course_4_SCV_6: 這個積木可以讓你自訂任何顏色！換換不同的數值，看看有什麼改變！
      CourseD_Dance_Party_01_callout:
        dance_callout_01: 將此程式積木新增至您的程式！
      CourseD_Dance_Party_02_callout:
        dance_callout_02: 將此程式積木新增至您的程式！
      CourseD_Dance_Party_04_callout:
        dance_callout_04: 將此程式積木新增至您的程式！
      CourseD_Dance_Party_06_callout:
        dance_callout_06: 在此新增您的新舞者
      CourseD_Dance_Party_11_callout:
        dance_callout_11_a: 新的程式積木！
        dance_callout_11_b: 新的程式積木！
      CourseF_PlayLab_vars1_callout:
        arrows_move_actor: 使用這些方向鍵來移動角色
      CourseF_PlayLab_vars10_callout:
        Course_4_Play_Lab_Vars_9_1: 你的所有積木現在被依功能分成數個類別放置！點擊指令類別文字來看看裡頭有什麼積木。
      Dance_Party_01_callout:
        dance_callout_01: 將此程式積木新增至您的程式！
      Dance_Party_01_low_callout:
        dance_callout_01: 將此程式積木新增至您的程式！
      Dance_Party_02_callout:
        dance_callout_02: 將此程式積木新增至您的程式！
      Dance_Party_04_callout:
        dance_callout_04: 將此程式積木新增至您的程式！
      Dance_Party_06_callout:
        dance_callout_06: 在此新增您的新舞者
      Dance_Party_11_callout:
        dance_callout_11_a: 新的程式積木！
        dance_callout_11_b: 新的程式積木！
      Eval Design Recipe .1_callout:
        edit_function: 點擊此處以編輯你的函式。
      Frozen Project Test Toolbox_callout:
        snowflake_dropdown: 使用下拉清單來創建不同的雪花！
      Frozen Project Toolbox (Old)_callout:
        snowflake_dropdown: 使用下拉清單來創建不同的雪花！
      Function intro Ryan_callout:
        Function_intro_Ryan_1: 此簡單的指令可告訴電腦在工作空間中執行有相同名稱的大量代碼。
      Function intro Ryan_2019_callout:
        Function_intro_Ryan_1: 此簡單的指令可告訴電腦在工作空間中執行有相同名稱的大量代碼。
      Geometric Pattern_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      Geometric Sun_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      Geometric Sun_2018_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      Geometric Sun_2019_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      Infinity_move_collide_callout:
        Infinity_move_collide_callout: 當事件發生時播放一個音效。
      Infinity_move_directions_callout:
        Infinity_move_directions_callout: 當按向上鍵時，哪個積木可以讓杯麵向上移動？
        Infinity_move_directions_callout_arrow: 使用這些方向鍵來進行引導
      Infinity_move_right_callout:
        Infinity_move_right_runbutton: 添加移動積木到這兒
      Infinity_repeat_callout:
        Infinity_repeat_callout: 放置移動積木到這裡面
      MC HOC 2016 Level 2-2_callout:
        craft2_run_button_callout: 當你準備好時，點擊「運行」試試你的程式。
      MC HOC 2016 New Walk_callout:
        MC_HOC_2016_New_Walk_callout2: 點擊「運行」開始移動。
      MC_HOC_2017_01_Cole_callout:
        MC_HOC_2017_01_Cole_2: 使用箭頭按鍵或按一下這裡以開始移動玩家。
      MC_HOC_2017_02_Will_callout:
        MC_HOC_2017_02_Cole_1: 現在您的玩家有同伴了！您可以為 Agent 撰寫代碼以協助通關。
      MC_HOC_2017_03_Cole_callout:
        MC_HOC_2017_03_Cole_1: 這就是「重複」循環！按一下進入工作空間，然後新增您要重複執行的代碼。
      MC_HOC_2017_03_Cole_2019_callout:
        MC_HOC_2017_03_Cole_1: 這就是「重複」循環！按一下進入工作空間，然後新增您要重複執行的代碼。
      MC_HOC_2017_04_Cole_callout:
        MC_HOC_2017_04_Cole_a: Agent 可以在水上漂浮，但玩家不可以！
      MC_HOC_2017_04_Cole_2019_callout:
        MC_HOC_2017_04_Cole_a: Agent 可以在水上漂浮，但玩家不可以！
      MC_HOC_2017_04_Kiki_callout:
        MC_HOC_2017_04_Kiki_1: 按一下進入工作空間，然後新增您要重複執行的代碼！
      MC_HOC_2017_06_Cole_callout:
        MC_HOC_2017_06_Cole_1: 這些方塊無法丟棄，但可以編輯！
      MC_HOC_2017_06_Cole_2019_callout:
        MC_HOC_2017_06_Cole_1: 這些方塊無法丟棄，但可以編輯！
      MC_HOC_2017_08_RY_callout:
        MC_HOC_2017_08_RY_1: 'Agent 可以在熔岩上漂浮，但玩家不可以！ '
      MC_HOC_2017_08_Will_callout:
        MC_HOC_2017_08_RY_1: 'Agent 可以在熔岩上漂浮，但玩家不可以！ '
      MC_HOC_2017_Ali_callout:
        MC_HOC_2017_08_RY_1: 'Agent 可以在熔岩上漂浮，但玩家不可以！  '
      MC_HOC_2017_Ali_2019_callout:
        MC_HOC_2017_08_RY_1: 'Agent 可以在熔岩上漂浮，但玩家不可以！  '
      Mike Playlab Project_callout:
        New Play Lab Project_callout1: 點擊工具箱上的各個類別以檢視其中的積木！拖曳積木到工作區，把他們添加到你的程式中。
        New Play Lab Project_callout2: 點擊「運行」以儲存並運行你的程式
        sign_in_to_save_project: 想要在以後繼續使用這個專案嗎？登入以將這個專案保存到你的帳戶！
      NEW Course 4 Artist Functions 3_callout:
        NEW_Course_4_Artist_Functions_3_1: 點擊此處以編輯新的函式，好讓它能建立一個正方形。
      NEW Course 4 Artist Functions 5_callout:
        edit_function: 點擊此處以編輯你的函式。
        function_editor_draw_square: 這是你的函式定義。每次你使用 draw a square（畫個正方形）積木時，這些程式就會執行一次。
      NEW Course 4 Artist Functions 7_callout:
        edit_function: 點擊此處以編輯你的函式。
      NEW Course 4 Artist Functions 8_callout:
        edit_function: 點擊此處以編輯你的函式。
      NEW Course 4 Artist Params 10_callout:
        create_function: 點擊此處開啟函式視窗，接著點擊「建立一個函式」按鈕。
      NEW Course 4 Artist Params 9_callout:
        edit_add_parameter: 點一下編輯，在你的函式中添加參數
        add_and_drag_parameter: 在這裡寫下參數名稱，點擊添加，然後將它拖曳到您的函式定義中
      NEW Course 4 Artist Vars 6_callout:
        place_length_variable: 拖曳 length（長度）參數到這裡以取代問號
      NEW Course 4 Bee For Loops 4_callout:
        bee_for_loop: 輸入你想要讓蜜蜂收集的花蜜最大數量。
      NEW Course 4 Bee For Loops 5_callout:
        actions_category: 工具箱有新的樣貌了！這兒現在有個「動作類別」的積木了。
      New Artist Project_callout:
        New Artist Project_callout1: 點擊工具箱上的各個類別以檢視其中的積木！拖曳積木到工作區，把他們添加到你的程式中。
        New Artist Project_callout2: 點擊「運行」以儲存並運行你的程式
        sign_in_to_save_project: 想要在以後繼續使用這個專案嗎？登入以將這個專案保存到你的帳戶！
      New Frozen Project_callout:
        snowflake_dropdown: 使用下拉清單來創建不同的雪花！
      New Play Lab Project_callout:
        New Play Lab Project_callout1: 點擊工具箱上的各個類別以檢視其中的積木！拖曳積木到工作區，把他們添加到你的程式中。
        New Play Lab Project_callout2: 點擊「運行」以儲存並運行你的程式
        sign_in_to_save_project: 想要在以後繼續使用這個專案嗎？登入以將這個專案保存到你的帳戶！
      Ninjacat Demo B_callout:
        Ninjacat Demo B: 點擊`運行`來試試這個遊戲
      Ninjacat Demo No Animate_callout:
        Ninjacat Demo B: 點擊`運行`來試試這個遊戲
      Overworld Chop Trees_callout:
        craft_callout_preplaced: 我們預先在這裡放了一些積木，方便您開始
      Overworld Chop Trees_2018_callout:
        craft_callout_preplaced: 我們預先在這裡放了一些積木，方便您開始
      Overworld Chop Trees_2019_callout:
        craft_callout_preplaced: 我們預先在這裡放了一些積木，方便您開始
      Overworld House Frame Chosen_callout:
        craft_callout_preplaced_house: 此代碼會開始建造你的房屋。你能完成嗎？
      Overworld House Frame Chosen_2018_callout:
        craft_callout_preplaced_house: 此代碼會開始建造你的房屋。你能完成嗎？
      Overworld House Frame Chosen_2019_callout:
        craft_callout_preplaced_house: 此代碼會開始建造你的房屋。你能完成嗎？
      Overworld Move to Sheep_callout:
        craft_run_button_callout: 點擊「運行」按鈕，看看程式的結果
        craft_drag_block_callout: 拖曳一個「移動-向前」積木並將色貼合到其它積木下方
      Overworld Move to Sheep_2018_callout:
        craft_run_button_callout: 點擊「運行」按鈕，看看程式的結果
        craft_drag_block_callout: 拖曳一個「移動-向前」積木並將色貼合到其它積木下方
      Overworld Move to Sheep_2019_callout:
        craft_run_button_callout: 點擊「運行」按鈕，看看程式的結果
        craft_drag_block_callout: 拖曳一個「移動-向前」積木並將色貼合到其它積木下方
      Overworld Place Wall_callout:
        craft_inside_repeat: 將積木放在這裡可以重複執行程式
      Overworld Place Wall_2018_callout:
        craft_inside_repeat: 將積木放在這裡可以重複執行程式
      Overworld Place Wall_2019_callout:
        craft_inside_repeat: 將積木放在這裡可以重複執行程式
      PS copy 2-3 Bee Conditionals 5_callout:
        Bee_Cond_5_1a: 紫花上可能有 1 或 0 個花蜜…但在運行程式前你是不會知道到底是多少！
      Pizza on a Plate_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      Play Lab Rocket 2_callout:
        pass_function: 這個開始的積木（函式積木）可以讓你通過你的函式（不是你的函式所返回的一些輸入值）進入動畫庫，你在畫面上所看到的這個動畫實際上是使用你的移動火箭的函式！
        play lab rocket 2: 在這裡定義你的 rocket-height（火箭高度）函式。
      Play Lab Rocket 2B_callout:
        pass_function: 這個黑色的積木可以讓你通過你的函式（不是你的函式所返回的一些輸入值）進入動畫庫，你在畫面上所看到的這個動畫實際上是使用你的移動火箭的函式！
      Play Lab Rocket 3_callout:
        Play Lab Rocket 3 1: 在移到至範例和定義前更新目的陳述式。
      Quantum Bee - Ryan_callout:
        feeling_stuck_callout_test: "感覺卡關了？<br />點擊燈炮圖案可以得到提示！"
      Robot Drawing_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      Robot_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      Rock Paper Scissors_callout:
        New Play Lab Project_callout1: 點擊工具箱上的各個類別以檢視其中的積木！拖曳積木到工作區，把他們添加到你的程式中。
        New Play Lab Project_callout2: 點擊「運行」以儲存並運行你的程式
        sign_in_to_save_project: 想要在以後繼續使用這個專案嗎？登入以將這個專案保存到你的帳戶！
      Rocket Height Course A_callout:
        pass_function: 這個開始的積木（函式積木）可以讓你通過你的函式（不是你的函式所返回的一些輸入值）進入動畫庫，你在畫面上所看到的這個動畫實際上是使用你的移動火箭的函式！
      Ryan - 4-5 Bee Conditionals 2_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      Ryan - Bee Conditionals_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      Ryan_Demo_callout:
        dance_callout_02: 將此程式積木新增至您的程式！
      Sam the Butterfly 3_callout:
        Sam the Butterfly 3 1: 編輯這個函式可以避免讓 Sam 走到右側
      Test Play Lab Project With Walls_callout:
        New Play Lab Project_callout1: 點擊工具箱上的各個類別以檢視其中的積木！拖曳積木到工作區，把他們添加到你的程式中。
        New Play Lab Project_callout2: 點擊「運行」以儲存並運行你的程式
        sign_in_to_save_project: 想要在以後繼續使用這個專案嗎？登入以將這個專案保存到你的帳戶！
      Underground Avoiding Lava_callout:
        craft_callout_moveforward: 此代碼會檢查是否有熔岩，您能添加一個向前移動的指令嗎？
      Underground Avoiding Lava_2018_callout:
        craft_callout_moveforward: 此代碼會檢查是否有熔岩，您能添加一個向前移動的指令嗎？
      Underground Avoiding Lava_2019_callout:
        craft_callout_moveforward: 此代碼會檢查是否有熔岩，您能添加一個向前移動的指令嗎？
      Underground Iron_callout:
        craft_what_is_iron: 開採這塊鐵礦！
      Underground Iron_2018_callout:
        craft_what_is_iron: 開採這塊鐵礦！
      Underground Iron_2019_callout:
        craft_what_is_iron: 開採這塊鐵礦！
      WebLab PS test - 1-12_callout:
        version_history_button: 檢查版本紀錄
      aE1_callout:
        aE1_1: 只能有 2 個這個和 2 個轉向
      aE2_callout:
        aE2_1: 還是只能有 2 個這個和 2 個轉向
      aE3_callout:
        aE3_1: 這些之中只有一些是有用的
      aE3alternate_callout:
        aE3_1: 這些之中只有一些是有用的
      aE3alternateB_callout:
        aE3_1: 這些之中只有一些是有用的
      aE4_callout:
        aE3_1: 這些之中只有一些是有用的
      aE5_callout:
        aE3_1: 這些之中只有一些是有用的
      aE6_callout:
        aE6_1: 只能有 1 個向前移動和 1 個轉向積木
      aEfreeplay_callout:
        aEfreeplay_1: 藝術家一出場就站在中間可能會有些尷尬，我們來想個辦法讓藝術家移動到一個固定的位置。
      artistLoopsK2_callout:
        artistLoopsK2_1: 這個數字是用來告訴你，這個關卡上你可以使用的最大積木數。
      artistLoopsK2gradek_artist_loops3_callout:
        artistLoopsK2_1: 這個數字是用來告訴你，這個關卡上你可以使用的最大積木數。
      behaviors 5_callout:
        behaviors_edit: 添加程式給這個行為。
      course2_bee_conditionals_challenge2_callout:
        courseD_bee_conditionals_challenge2_1: 使用這個迴圈來收集所有的花朵上的花蜜或蜂窩上的蜂蜜。
      course3_bee_debugging_challenge1_callout:
        courseD_bee_debugging_challenge1_callout1: 使用這個指令讓蜜蜂向後移動。
      courseA_artist_loops4_callout:
        courseA_artist_loops4_1: 這個數字是用來告訴你，這個關卡上你可以使用的最大積木數。
      courseA_artist_loops4_2018_callout:
        courseA_artist_loops4_1: 這個數字是用來告訴你，這個關卡上你可以使用的最大積木數。
      courseA_artist_loops4_2019_callout:
        courseA_artist_loops4_1: 這個數字是用來告訴你，這個關卡上你可以使用的最大積木數。
      courseA_artist_loops7_callout:
        courseA_artist_loops7_1: 這個數字指的是解答中只可以使用一個這類型的積木
      courseA_artist_loops7_2018_callout:
        courseA_artist_loops7_1: 這個數字指的是解答中只可以使用一個這類型的積木
      courseA_artist_loops7_2019_callout:
        courseA_artist_loops7_1: 這個數字指的是解答中只可以使用一個這類型的積木
      courseA_artist_loops7_forVideo_callout:
        courseA_artist_loops7_1: 這個數字指的是解答中只可以使用一個這類型的積木
      courseA_collector_loops1_callout:
        courseA_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseA_collector_loops1_2018_callout:
        courseA_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseA_collector_loops1_2019_callout:
        courseA_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseA_collector_loops3_callout:
        gradek_adventurer_loops2_1: 這個數字是用來告訴你，這個關卡上你可以使用的最大積木數。
      courseA_collector_loops3_2018_callout:
        gradek_adventurer_loops2_1: 這個數字是用來告訴你，這個關卡上你可以使用的最大積木數。
      courseA_collector_loops3_2019_callout:
        gradek_adventurer_loops2_1: 這個數字是用來告訴你，這個關卡上你可以使用的最大積木數。
      courseA_collector_preLoops1_callout:
        courseA_collector_preLoops1_1: 點擊此處觀看程式運行！
      courseA_collector_preLoops2_callout:
        courseA_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseA_collector_preLoops3_callout:
        courseA_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseA_collector_preLoops4_callout:
        courseA_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseA_collector_preLoops5_callout:
        courseA_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseA_collector_preLoops6_callout:
        courseA_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseA_maze_seq1_callout:
        courseA_maze_seq1_1: 當您需要提示時，點一下燈泡！
      courseA_maze_seq1_2018_callout:
        courseA_maze_seq1_1: 當您需要提示時，點一下燈泡！
      courseA_maze_seq1_2019_callout:
        courseA_maze_seq1_1: 當您需要提示時，點一下燈泡！
      courseA_maze_seq2_callout:
        courseA_maze_seqA_callout1: 使用步進按鈕可以一步一步的運行程式中的指令，這可以讓你更容易找到出錯的地方！
      courseA_maze_seq2_2018_callout:
        courseA_maze_seqA_callout1: 使用步進按鈕可以一步一步的運行程式中的指令，這可以讓你更容易找到出錯的地方！
      courseA_playLab_events4_callout:
        courseA_playlab_events4_callout1: 這是一個標注
      courseA_playLab_events4_2018_callout:
        courseA_playlab_events4_callout1: 這是一個標注
      courseA_playLab_events4_2019_callout:
        courseA_playlab_events4_callout1: 這是一個標注
      courseA_playLab_events5_callout:
        courseA_playLab_events5_1: 點擊此處變更方向事件的箭頭方向。
      courseA_playLab_events5_2018_callout:
        courseA_playLab_events5_1: 點擊此處變更方向事件的箭頭方向。
      courseA_playLab_events5_2019_callout:
        courseA_playLab_events5_1: 點擊此處變更方向事件的箭頭方向。
      courseB_Scrat_ramp1_2018_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseB_Scrat_ramp1_2019_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseB_artist_loops5_callout:
        courseB_artist_loops5_1: 這個數字指的是工具箱中已經沒有這個積木。
      courseB_collector_loops1_callout:
        courseB_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseB_collector_loops1_2018_callout:
        courseB_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseB_collector_loops1_2019_callout:
        courseB_collector_loops1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseB_maze_seq1_callout:
        courseB_maze_seq1: 當您需要提示時，點一下燈泡！
      courseB_maze_seq1_2018_callout:
        courseB_maze_seq1: 當您需要提示時，點一下燈泡！
      courseB_maze_seq1_2019_callout:
        courseB_maze_seq1: 當您需要提示時，點一下燈泡！
      courseB_maze_seq2_callout:
        courseB_maze_seq2_callout1: 使用步進按鈕可以一步一步的運行程式中的指令，這可以讓你更容易找到出錯的地方！
      courseB_maze_seq2_2018_callout:
        courseB_maze_seq2_callout1: 使用步進按鈕可以一步一步的運行程式中的指令，這可以讓你更容易找到出錯的地方！
      courseB_maze_seq3_callout:
        courseB_maze_seq3_1: 灰色的積木就像石頭一樣，無法被破壞和丟棄。
      courseB_maze_seq3_2018_callout:
        courseB_maze_seq3_1: 灰色的積木就像石頭一樣，無法被破壞和丟棄。
      courseC19_playLab_EOC3_callout:
        courseE_playLab_scaffold3_1: 讓角色移動到這個旗幟以完成這個關卡。
      courseC_collector_prog1_callout:
        courseC_collector_prog1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseC_collector_prog1_2018_callout:
        courseC_collector_prog1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseC_collector_prog1_2019_callout:
        courseC_collector_prog1_1: 發現了嗎？在工具箱有些新的積木囉！別擔心，我們在下個階段會告訴你怎麼使用它們的。
      courseC_harvester_loops1_callout:
        courseC_harvester_loops1_callout1: 在南瓜上的數字 4 意思是有 4 個南瓜可以收集。
      courseC_harvester_loops1_2018_callout:
        courseC_harvester_loops1_callout1: 在南瓜上的數字 4 意思是有 4 個南瓜可以收集。
      courseC_harvester_loops1_2019_callout:
        courseC_harvester_loops1_callout1: 在南瓜上的數字 4 意思是有 4 個南瓜可以收集。
      courseC_maze_programming1_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseC_maze_programming1_2018_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseC_maze_programming1_2019_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseC_maze_programming7_callout:
        courseC_maze_programming7_2: 這些積木就像石頭一樣，不能被破壞。
      courseC_maze_programming7_2018_callout:
        courseC_maze_programming7_2: 這些積木就像石頭一樣，不能被破壞。
      courseC_maze_programming7_2019_callout:
        courseC_maze_programming7_2: 這些積木就像石頭一樣，不能被破壞。
      courseD_artist_nestedLoops1a_callout:
        courseD_artist_nestedLoops1a_1: 你不需要使用使用顏色來完成關卡。如果你想要的話，使用`隨機取色`積木就可以輕鬆完成。
      courseD_artist_nestedLoops1a_2018_callout:
        courseD_artist_nestedLoops1a_1: 你不需要使用使用顏色來完成關卡。如果你想要的話，使用`隨機取色`積木就可以輕鬆完成。
      courseD_artist_nestedLoops1a_2019_callout:
        courseD_artist_nestedLoops1a_1: 你不需要使用使用顏色來完成關卡。如果你想要的話，使用`隨機取色`積木就可以輕鬆完成。
      courseD_artist_ramp11_callout:
        courseD_artist_ramp11_1: 你可以修改這個數字。
        courseD_artist_ramp11_2: 點擊此處輸入程式要重複的次數。
      courseD_bee_conditionals2_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      courseD_bee_conditionals2_2018_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      courseD_bee_conditionals2_2019_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      courseD_bee_conditionals2_test_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      courseD_bee_conditionals_challenge2_callout:
        courseD_bee_conditionals_challenge2_1: 使用這個迴圈來收集所有的花朵上的花蜜或蜂窩上的蜂蜜。
      courseD_bee_conditionals_challenge2_2018_callout:
        courseD_bee_conditionals_challenge2_1: 使用這個迴圈來收集所有的花朵上的花蜜或蜂窩上的蜂蜜。
      courseD_bee_conditionals_challenge2_2019_callout:
        courseD_bee_conditionals_challenge2_1: 使用這個迴圈來收集所有的花朵上的花蜜或蜂窩上的蜂蜜。
      courseD_bee_conditionals_challenge3_callout:
        courseD_bee_conditionals_challenge3_1: 試著使用迴圈來重複向前移動的積木。
      courseD_bee_debugging_challenge1_callout:
        courseD_bee_debugging_challenge1_callout1: 使用這個指令讓蜜蜂向後移動。
      courseD_bee_debugging_challenge1_2018_callout:
        courseD_bee_debugging_challenge1_callout1: 使用這個指令讓蜜蜂向後移動。
      courseD_bee_debugging_challenge1a_callout:
        courseD_bee_debugging_challenge1_callout1: 使用這個指令讓蜜蜂向後移動。
      courseD_bee_debugging_challenge2_callout:
        courseD_bee_debugging_challenge1_callout1: 使用這個指令讓蜜蜂向後移動。
      courseD_collector_ramp8_callout:
        courseD_collector_ramp8_1: '使用這個積木來收集寶藏。'
      courseD_maze_ramp1_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseD_maze_ramp1_2018_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseD_maze_ramp1_2019_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseD_maze_ramp6_callout:
        courseD_maze_ramp6_1: 不管你的程式是什麼，放到迴圈裡以後就會執行你所指定的次數，執行完以後才會繼續以後的程式。
      courseD_maze_ramp6a_callout:
        courseD_maze_ramp6_1: 不管你的程式是什麼，放到迴圈裡以後就會執行你所指定的次數，執行完以後才會繼續以後的程式。
      courseD_scrat_ramp1_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseD_scrat_ramp1_2018_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseD_scrat_ramp6_callout:
        courseD_maze_ramp6_1: 不管你的程式是什麼，放到迴圈裡以後就會執行你所指定的次數，執行完以後才會繼續以後的程式。
      courseD_scrat_ramp6_2018_callout:
        courseD_maze_ramp6_1: 不管你的程式是什麼，放到迴圈裡以後就會執行你所指定的次數，執行完以後才會繼續以後的程式。
      courseD_scrat_ramp7_callout:
        courseD_maze_ramp6_1: 不管你的程式是什麼，放到迴圈裡以後就會執行你所指定的次數，執行完以後才會繼續以後的程式。
      courseD_scrat_ramp7_2018_callout:
        courseD_maze_ramp6_1: 不管你的程式是什麼，放到迴圈裡以後就會執行你所指定的次數，執行完以後才會繼續以後的程式。
      courseE_artist_ramp11_callout:
        courseD_artist_ramp11_1: 你可以修改這個數字。
        courseD_artist_ramp11_2: 點擊此處輸入程式要重複的次數。
      courseE_artist_ramp8_callout:
        courseE_artist_ramp8_1: 你可以修改這個數字。
        courseE_artist_ramp8_2: 點擊此處輸入程式要重複的次數。
      courseE_artist_ramp8_2_callout:
        courseE_artist_ramp8_1: 你可以修改這個數字。
        courseE_artist_ramp8_2: 點擊此處輸入程式要重複的次數。
      courseE_artist_ramp8_2018_callout:
        courseE_artist_ramp8_1: 你可以修改這個數字。
        courseE_artist_ramp8_2: 點擊此處輸入程式要重複的次數。
      courseE_artist_ramp8_2_2018_callout:
        courseE_artist_ramp8_1: 你可以修改這個數字。
        courseE_artist_ramp8_2: 點擊此處輸入程式要重複的次數。
      courseE_collector_ramp8_callout:
        courseD_collector_ramp8_1: '使用這個積木來收集寶藏。'
      courseE_maze_ramp1_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseE_maze_ramp1_2018_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseE_maze_ramp6_callout:
        courseD_maze_ramp6_1: 不管你的程式是什麼，放到迴圈裡以後就會執行你所指定的次數，執行完以後才會繼續以後的程式。
      courseE_maze_ramp6_2018_callout:
        courseD_maze_ramp6_1: 不管你的程式是什麼，放到迴圈裡以後就會執行你所指定的次數，執行完以後才會繼續以後的程式。
      courseE_playLab_scaffold3_callout:
        courseE_playLab_scaffold3_1: 讓角色移動到這個旗幟以完成這個關卡。
      courseE_playLab_scaffold3_2018_callout:
        courseE_playLab_scaffold3_1: 讓角色移動到這個旗幟以完成這個關卡。
      courseF_IceAge_9_callout:
        playlab_add_blocks_1: 添加積木到這兒
      courseF_artist_for1_callout:
        courseF_artist_for1_1: 工具箱的積木現在依用途分類了，這樣可以讓工作區有足夠的空間。`計數`迴圈就在裡面。
      courseF_artist_for1_2018_callout:
        courseF_artist_for1_1: 工具箱的積木現在依用途分類了，這樣可以讓工作區有足夠的空間。`計數`迴圈就在裡面。
      courseF_artist_for1_2019_callout:
        courseF_artist_for1_1: 工具箱的積木現在依用途分類了，這樣可以讓工作區有足夠的空間。`計數`迴圈就在裡面。
      courseF_artist_fwp4_callout:
        courseF_artist_fwp4_1: 要完成你的多邊形，請確保你每次都轉向 360 ÷ `sides`（邊數） 度。
      courseF_artist_fwp4_2018_callout:
        courseF_artist_fwp4_1: 要完成你的多邊形，請確保你每次都轉向 360 ÷ `sides`（邊數） 度。
      courseF_artist_ramp8_callout:
        courseE_artist_ramp8_1: 你可以修改這個數字。
        courseE_artist_ramp8_2: 點擊此處輸入程式要重複的次數。
      courseF_artist_ramp8_2018_callout:
        courseE_artist_ramp8_1: 你可以修改這個數字。
        courseE_artist_ramp8_2: 點擊此處輸入程式要重複的次數。
      courseF_artist_variables3_callout:
        courseF_artist_variables3_a: 使用這個來設置變數 `length`（長度）的值。
      courseF_artist_variables3_2018_callout:
        courseF_artist_variables3_a: 使用這個來設置變數 `length`（長度）的值。
      courseF_artist_variables3_2019_callout:
        courseF_artist_variables3_a: 使用這個來設置變數 `length`（長度）的值。
      courseF_artist_variables_3_callout:
        courseF_artist_variables_3_a: 使用這個來設置變數 `length`（長度）的值。
      courseF_bee_conditionals2_callout:
        courseF_bee_conditionals2_2: 這個工具箱現在是在分類模式，所有你需要的積木都被分類放置！
      courseF_bee_conditionals2_2018_callout:
        courseF_bee_conditionals2_2: 這個工具箱現在是在分類模式，所有你需要的積木都被分類放置！
      courseF_bee_conditionals5_callout:
        courseF_bee_conditionals5_1: 當路徑的長度改變時（像長方形的邊），使用這個積木。
      courseF_bee_conditionals5_2018_callout:
        courseF_bee_conditionals5_1: 當路徑的長度改變時（像長方形的邊），使用這個積木。
      courseF_bee_functions2_callout:
        courseF_bee_functions2_1: 這個積木稱做函式（function）。點擊「編輯」按鈕看看裡面有什麼！
      courseF_bee_functions2_2018_callout:
        courseF_bee_functions2_1: 這個積木稱做函式（function）。點擊「編輯」按鈕看看裡面有什麼！
      courseF_bee_functions6_callout:
        courseF_bee_functions6_1: 別忘了看看這兒，裡頭有更多積木，也許可以幫助你！
      courseF_bee_functions6_2018_callout:
        courseF_bee_functions6_1: 別忘了看看這兒，裡頭有更多積木，也許可以幫助你！
      courseF_maze_ramp1_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseF_maze_ramp1_2018_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      courseF_maze_ramp6_callout:
        courseD_maze_ramp6_1: 不管你的程式是什麼，放到迴圈裡以後就會執行你所指定的次數，執行完以後才會繼續以後的程式。
      courseF_maze_ramp6_2018_callout:
        courseD_maze_ramp6_1: 不管你的程式是什麼，放到迴圈裡以後就會執行你所指定的次數，執行完以後才會繼續以後的程式。
      courseF_playLab_func2_callout:
        New Play Lab Project_callout1: 點擊工具箱上的各個類別以檢視其中的積木！拖曳積木到工作區，把他們添加到你的程式中。
        New Play Lab Project_callout2: 點擊「運行」以儲存並運行你的程式
        sign_in_to_save_project: 想要在以後繼續使用這個專案嗎？登入以將這個專案保存到你的帳戶！
      courseF_playlab_variables2_callout:
        course_playlab_variables2_1: 這就是設置變數值的方法，修改連結到這個積木上的文字以變更你的變數。
      course_playlab_variables2_callout:
        course_playlab_variables2_1: 這就是設置變數值的方法，修改連結到這個積木上的文字以變更你的變數。
      course_playlab_variables3_callout:
        course_playlab_variables3_1: 這是如何為你的變數設定值的方式。
      frozen circle function with parameter_callout:
        frozen_circle_function_with_parameter_circle: 使用「建立一個圓形」積木並修改它的尺寸。
      frozen circle function with parameter_b_callout:
        frozen_circle_function_with_parameter_circle: 使用`建立一個圓形`積木並修改它的尺寸。
      frozen circle function with parameter_test_callout:
        frozen_circle_function_with_parameter_circle: 使用`建立一個圓形`積木並修改它的尺寸。
      frozen cross rotate_callout:
        replace_questions_degree: 使用下拉清單，把「???」換成一個數字。
      frozen cross rotate_b_callout:
        replace_questions_degree: 使用下拉清單，把「???」換成一個數字。
      frozen cross rotate_test_callout:
        replace_questions_degree: 使用下拉清單，把「???」換成一個數字。
      frozen cross_callout:
        repeat_blocks_1: "(1) 使用這個積木，把它放到在工作區上的灰色積木周圍。"
        repeat_blocks_2: (2) 將「重複」積木移到這裡，並將灰色積木放到它裡面。
      frozen diamond snowflake_callout:
        frozen_diamond_repeat: 使用重複積木來創建這個圖形。
      frozen diamond_callout:
        frozen_diamond_repeat: 使用重複積木來創建這個圖形。
      frozen freeplay_callout:
        snowflake_dropdown: 使用下拉清單來創建不同的雪花！
      frozen freeplay_b_callout:
        snowflake_dropdown: 使用下拉清單來創建不同的雪花！
      frozen freeplay_test_callout:
        snowflake_dropdown: 使用下拉清單來創建不同的雪花！
      frozen line_callout:
        run: 點擊「運行」以試試你的程式！
        move_elsa_forward: 拖曳一個「移動-向前」積木，將它貼在「當點擊運行時」積木下方，讓艾莎向前移動。
      frozen line_b_callout:
        run: 點擊「運行」以試試你的程式！
        move_elsa_forward: 拖曳一個「移動-向前」積木，將它貼在「當點擊運行時」積木下方，讓艾莎向前移動。
      frozen line_test_callout:
        run: 點擊「運行」以試試你的程式！
        move_elsa_forward: 拖曳一個「移動-向前」積木，將它貼在「當點擊運行時」積木下方，讓艾莎向前移動。
      frozen perpendicular_callout:
        turn_elsa: 使用「轉向」積木讓艾莎轉彎。下接清單中的數字可以決定艾莎轉向的角度。
      frozen snowflake branch_callout:
        frozen_snowflake_branch: 使用「建立雪花分支」積木
      frozen snowflake branch_b_callout:
        frozen_snowflake_branch: 使用函式 create a snowflake branch（中文意指建立雪花分支）
      frozen snowflake branch_test_callout:
        frozen_snowflake_branch: 使用「建立雪花分支」積木
      frozen square iterative_callout:
        frozen_create_square: 添加更多積木到這兒以建立一個正方形
      frozen square iterative_b_callout:
        frozen_create_square: 添加更多積木到這兒以建立一個正方形
      frozen square iterative_test_callout:
        frozen_create_square: 添加更多積木到這兒以建立一個正方形
      frozen square loop 3x_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      frozen square loop 3x_b_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      frozen square loop 3x_test_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      frozen square loop_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      frozen square loop_b_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      frozen square loop_test_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      frozen square snowflake_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      frozen square snowflake_b_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      frozen square snowflake_test_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      grade1_maze_sequence6_callout:
        grade1_maze_sequence6_1: 這些灰色的積木是用石頭做的！這表示他們不能被打掉。
      grade2_CaringForNewPet_0_callout:
        grade2_CaringForNewPet_0_1: 在連接所有的積木後，點擊「運行」來啟動你的程式。
      grade3_ConditionalsElse_2_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      grade3_Conditionals_3_callout:
        Bee_Cond_5_1a: 紫花上可能有 1 或 0 個花蜜…但在運行程式前你是不會知道到底是多少！
      grade3_bee_conditionals_quantum2_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      grade4_artist_freeplay_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      grade4_artist_functions_freeplay_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      grade4_artist_parameters_squares1_callout:
        edit_add_parameter: 點一下編輯，在你的函式中添加參數
        add_and_drag_parameter: 在這裡寫下參數名稱，點擊添加，然後將它拖曳到您的函式定義中
      grade4_bee_conditionals_quantum2_callout:
        4_5_Bee_Conditionals_2_1: 記住，檢查「每朵雲」裡是否有「花朵」，你不必檢查是否有蜂窩。
      grade4_frozen_freeplay_callout:
        snowflake_dropdown: 使用下拉清單來創建不同的雪花！
      grade4_frozen_functions3_callout:
        frozen_circle_function_with_parameter_circle: 使用「建立一個圓形」積木並修改它的尺寸。
      grade4_frozen_nested_loop_diamonds1_callout:
        frozen_diamond_repeat: 使用重複積木來創建這個圖形。
      grade4_frozen_nested_loop_diamonds3_callout:
        frozen_diamond_repeat: 使用重複積木來創建這個圖形。
      grade4_frozen_nested_loop_rectangle1_callout:
        frozen_diamond_repeat: 使用重複積木來創建這個圖形。
      grade4_frozen_square_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      grade4_frozen_square_loop1_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      grade4_frozen_square_loop2_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      grade4_frozen_square_loop3_callout:
        replace_questions: 使用下拉清單，把「???」換成一個數字。
      grade4_playLab_proj_example1_callout:
        New Play Lab Project_callout1: 點擊工具箱上的各個類別以檢視其中的積木！拖曳積木到工作區，把他們添加到你的程式中。
        New Play Lab Project_callout2: 點擊「運行」以儲存並運行你的程式
      grade4_playLab_proj_example2_callout:
        New Play Lab Project_callout1: 點擊工具箱上的各個類別以檢視其中的積木！拖曳積木到工作區，把他們添加到你的程式中。
        New Play Lab Project_callout2: 點擊「運行」以儲存並運行你的程式
        sign_in_to_save_project: 想要在以後繼續使用這個專案嗎？登入以將這個專案保存到你的帳戶！
      grade5_artist_freeplay_callout:
        4-5_Artist_Patterns_Free_Play_1: 你喜愛的所有積木現在被依功能分成多個類別，點擊這些類別看看它們在哪裡！
      grade5_artist_functionparameters_6_callout:
        grade5_artist_functionparameters_6_1: 要完成你的多邊形，請確保你每次都轉向 360 ÷ `sides`（邊數） 度。
      grade5_artist_parameters_squares1_callout:
        edit_add_parameter: 點一下編輯，在你的函式中添加參數
        add_and_drag_parameter: 在這裡寫下參數名稱，點擊添加，然後將它拖曳到您的函式定義中
      grade5_artist_parameters_triangles1aa_callout:
        edit_add_parameter: 點一下編輯，在你的函式中添加參數
        add_and_drag_parameter: 在這裡寫下參數名稱，點擊添加，然後將它拖曳到您的函式定義中
      grade5_artist_variables_freeplay10_callout:
        Course_4_Artist_Vars_8_a: 需要更多的空間？拉動這個條桿讓程式區域更寬一些。
      grade5_artist_variables_pentagons1_callout:
        place_length_variable: 拖曳 length（長度）參數到這裡以取代問號
      grade5_artist_variables_pentagons12_callout:
        set_length: 使用這個積木將 length（長度）設置成正確數值。
      grade5_artist_variables_square7_callout:
        degrees_per_side: 用 360 除以邊數就可以得到每個角的角度。
      grade5_artist_variables_triangles2_callout:
        set_length: 使用這個積木將 length（長度）設置成正確數值。
      grade5_playlab_variables1_callout:
        arrows_move_actor: 使用這些方向鍵來移動角色
      grade5_playlab_variables11_callout:
        edit_add_parameter: 點一下編輯，在你的函式中添加參數
      grade5_playlab_variables1ask_callout:
        arrows_move_actor: 使用這些方向鍵來移動角色
      grade5_playlab_variables_freeplay_callout:
        Course_4_Play_Lab_Vars_9_1: 你的所有積木現在被依功能分成數個類別放置！點擊指令類別文字來看看裡頭有什麼積木。
      grade5_playlab_variables_jump1_callout:
        Course_4_Play_Lab_Vars_9_1: 你的所有積木現在被依功能分成數個類別放置！點擊指令類別文字來看看裡頭有什麼積木。
      gradek_adventurer_loops2_callout:
        gradek_adventurer_loops2_1: 這個數字是用來告訴你，這個關卡上你可以使用的最大積木數。
      gradek_artist_loops3_callout:
        artistLoopsK2_1: 這個數字是用來告訴你，這個關卡上你可以使用的最大積木數。
      small_actors_playlab_projects_callout:
        New Play Lab Project_callout1: 點擊工具箱上的各個類別以檢視其中的積木！拖曳積木到工作區，把他們添加到你的程式中。
        New Play Lab Project_callout2: 點擊「運行」以儲存並運行你的程式
        sign_in_to_save_project: 想要在以後繼續使用這個專案嗎？登入以將這個專案保存到你的帳戶！
      testing code callout_callout:
        testing_code_callout: 這可以讓角色移動！
