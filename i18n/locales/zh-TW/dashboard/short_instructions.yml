zh-TW:
  data:
    short_instructions:
      2-3 Artist 1 new: 嗨，我是一個藝術家。您可以寫程式來讓我畫出任何東西。現在請您用一些程式積木，讓我沿著圖中的灰色線條畫畫。（每一條線的長度都是 100 像素）
      2-3 Artist 11: "我們來做一個停止的交通標誌吧！畫出一個正八邊形，每邊長 100 像素。\\r\n\\r\n"
      2-3 Artist 12: |-
        建立一個圓形來完成這個眼球！\r
        \r
        如果小藝術家在每次的循環轉向 1 度，要重複這個程式多少次才能畫出一個圓形呢？180？360？500？
      2-3 Artist 2 new: '這房子有個半完成的牆。每一邊都應該是 100，但是半完成的牆是只有 50。請試著完成這個牆吧。 '
      2-3 Artist 2: '這房子有個半完成的牆。每一邊都應該是 100，但是半完成的牆是只有 50。請試著完成這個牆吧。 '
      2-3 Artist 3.4: "跳躍積木只會移動小藝術家而不會繪圖。\n同時使用`跳躍-向前`和`移動-向前`積木來畫出這個虛線。\n每個線條長度為 50 像素。"
      2-3 Artist 3: 這個帽子有 100 像素高。畫出一個高度少於 70 像素的帽子。
      2-3 Artist 3new: "紅色帽子的高是 100 像素，畫完比它矮 70 像素的黑色帽子。\\r\n（注意：每個帽子的寬度都是 50 像素。）"
      2-3 Artist 4: 幫助我完成這隻貓的房子。
      2-3 Artist 5: 用「重複」積木來取代這個程式，讓它可以只用 3 個積木就畫出相同的房子。
      2-3 Artist 6: '這個房子需要一個屋頂！畫出這個三角形。提示：三個邊的長度都相同。'
      2-3 Artist 7: '畫完學校上頭的最後一組窗戶，這樣每個學生就可以看到窗外景色了。正方形窗戶的外框邊長是 25 像素。 '
      2-3 Artist 8: 替每一隻動物完成房間。把這個長方形切成 2 個大小相同的正方形。這個長方形的寬為 200 像素、高為 100 像素。完成這個關卡的方法不只一種，看看你可以想到幾種方法吧！
      2-3 Artist 9 NEW: 完成這個風箏
      2-3 Artist 9 REPLACEMENT: 畫完這些梯子！
      2-3 Artist 9: 完成這個風箏
      2-3 Artist Assessment 1: "評量：把最後一顆牙齒畫完。\n這顆牙寬：25 像素；高：25像素"
      2-3 Artist Debugging 1: 這個帽子的寬度應該只有 50 像素，你能修正它嗎？
      2-3 Artist Debugging 10: "在我的遊戲控制器上的方向鍵太窄了。\\r\n\\r\n你能幫我製作寬度有 10 像素的方向鍵嗎？\\r\n\\r\n先試試這個程式，看看是哪兒出錯了。"
      2-3 Artist Debugging 11: |-
        我的雪花有個缺口！\r
        \r
        你可以找到是哪兒出了錯嗎？
      2-3 Artist Debugging 12: 我打算要添加一個海浪到場景上，你能幫我嗎？
      2-3 Artist Debugging 2: "畫出貓鬍鬚的程式不正確。\\r\n\\r\n修正這個程式來給貓畫上一樣長的鬍鬚。"
      2-3 Artist Debugging 3: "我的船破了個洞！\\r\n\\r\n你需要修正什麼地方才能把線接起來？"
      2-3 Artist Debugging 4: "我們一直要畫的圖象是什麼？\n利用適當的角度和線段來完成連接全部的點"
      2-3 Artist Debugging 5: "畫出腿和腳的程式有錯。\\r\n\\r\n你能修正它嗎？"
      2-3 Artist Debugging 6: |-
        看來我好像坐在缺了個腳的椅子上！\r
        \r
        編輯程式來畫個椅腳。
      2-3 Artist Debugging 7: |-
        看起來Ｃ被畫反了！\r
        \r
        你可以將它改正嗎？
      2-3 Artist Debugging 8: |-
        我的老師告訴我們做事要有始有終！\r
        \r
        幫我完成我的風車，你可以找到錯誤的地方嗎？
      2-3 Artist Debugging 9: |-
        有個部分斷開了！\r
        \r
        畫出莖的程式碼不大正確。想一想，要如何才讓小藝術家畫出正確的莖？
      2-3 Artist Debugging Assessment 1: "評量：為什麼這個正方形用了 75 像素的邊長還是太小？\\r\n\\r\n程式的哪個地方出錯了？"
      2-3 Artist Free Play: 自由發揮！畫出你想要畫的任何東西。
      2-3 Artist Functions 1 a: "「偶…殭屍…畫家，偶愛畫畫！」\\r\n\\r\n幫殭屍畫副方形眼鏡。 \\r\n\\r\n提示： 正方形的寬度是 100 像素，而鏡圈之間的鼻托比它短 25 像素。"
      2-3 Artist Functions 1: "「偶…殭屍…畫家，偶愛畫畫！」\\r\n\\r\n幫殭屍畫副方形眼鏡。 \\r\n\\r\n提示： 正方形的寬度是 100 像素，而鏡圈之間的鼻托比它短 25 像素。"
      2-3 Artist Functions 10: '自由發揮：這裏有 2 個函式：一個是 big gear（大齒輪），另一個是 small gear（小齒輪）。用它們來畫出一台機器的內部。'
      2-3 Artist Functions 11 a: "我們已經將 `draw a square`（畫個正方形）函式重新命名成 `draw a hexagon`（畫個六邊形），但是它還是只能畫出正方形！你可以修改 `draw a hexagon` 函式，讓它能畫出每邊長 50 像素的六邊形嗎？\\r\n\\r\n用新的函式把圖案畫出來吧！"
      2-3 Artist Functions 11.5 a: "這裡是一個相同的 `draw a hexagon`（畫個六邊形）函式。\\r\n\\r\n如果你循環主要的程式 6 次，每次循環都轉 60 度，會發生什麼事呢？"
      2-3 Artist Functions 11.5: "這裡是一個相同的 `draw a hexagon`（畫個六邊形）函式。\\r\n\\r\n如果你循環主要的程式 6 次，每次循環都轉 60 度，會發生什麼事呢？"
      2-3 Artist Functions 11: "我們已經將 `draw a square`（畫個正方形）函式重新命名成 `draw a hexagon`（畫個六邊形），但是它還是只能畫出正方形！你可以修改 `draw a hexagon` 函式，讓它能畫出每邊長 50 像素的六邊形嗎？\\r\n\\r\n用新的函式把圖案畫出來吧！"
      2-3 Artist Functions 12 Mike: "函式（Functions）很適合用來重複繪製複雜圖案。\\r\n\\r\n你可以使用 `draw a flower`（畫個花朵）函式將播種盒上剩餘的圖案填滿嗎？\\r\n植物之間的距離是 100 像素。"
      2-3 Artist Functions 12 a: "函式（Functions）很適合用來重複繪製複雜圖案。\\r\n\\r\n你可以使用 `draw a flower`（畫個花朵）函式將播種盒上剩餘的圖案填滿嗎？\\r\n植物之間的距離是 100 像素。"
      2-3 Artist Functions 12: "函式（Functions）很適合用來重複繪製複雜圖案。\\r\n\\r\n你可以使用 `draw a flower`（畫個花朵）函式將播種盒上剩餘的圖案填滿嗎？\\r\n植物之間的距離是 100 像素。"
      2-3 Artist Functions 13: "我們為你提供了 4 個函式。\n在一個甚至多個迴圈裡隨意的使用它們，以畫出一個圖案讓你分享給朋友。點擊運行來看看範例。"
      2-3 Artist Functions 2: "函式（Functions）能讓你能夠製作一個屬於自己的新積木！\\r\n\\r\n我們已經把繪製一個正方形所需要的所有積木放到一個名叫 `draw a square` 的函式裡。這一次，使用 `draw a square` 函式來製作個眼鏡。\n\\r\n\\r\n鏡片外框之間的距離為 75 像素。"
      2-3 Artist Functions 3: "編輯 draw a square（畫個正方形）函式，用 115 像素的邊長來畫出較大的鏡片。\\r\n\\r\n正方形之間的間隔距離為 45 像素。"
      2-3 Artist Functions 4: 現在，把這個函式放進迴圈來畫出這 3 個正方形。
      2-3 Artist Functions 7: '使用"畫一個房子"函數，輸入兩個不同的參數來畫出兩棟房子。(提示：第一個房子的參數是100像素)'
      2-3 Artist Functions 9: "自由發揮：這裏有個 draw a snowflake（畫個雪花）函式。\n用它來實現一個冬季場景！這是一個自由發揮的關卡，所以沒有要解決的問題，玩得愉快！"
      2-3 Artist Loops 1: "你可以做出邊長 100 像素的六邊形嗎？\n記住，這代表著你只需要轉 60 度。"
      2-3 Artist Loops 10: 如果讓最後一步提早一半，什麼將會發生？
      2-3 Artist Loops 11: 現在我們來放置*另一個*迴圈來包住整個程式！不要忘了在外層迴圈的下面添加轉向角度。
      2-3 Artist Loops 2: 現在用一個重複積木把圖案畫出來。
      2-3 Artist Loops 4: 想想看，當我們用一個迴圈不斷重複畫出那個圖形，會發生什麼事？
      2-3 Artist Loops 5: 現在我們來小小調整迴圈並看看圖片的不同
      2-3 Artist Loops 6: 在迴圈之中加入一個步驟和一個轉身並看看有什麼變化
      2-3 Artist Loops 7: "我們可以利用迴圈完成各式多邊形，\n你能在六邊形之中創造一菱形嗎？"
      2-3 Artist Loops 8: 讓我們把兩個元素放到迴圈內。
      2-3 Artist Loops 9: |-
        我們要開始重覆執行同樣的元素了，
        但現在我們要在他門之間增加一點距離\r
        運用跟之前一樣的程式碼，但在外圍的迴圈前加一個步驟
      2-3 Artist Loops New 1: 讓我們來畫個機器人的頭吧！你能做出一個邊長為 100 像素的正方形嗎？
      2-3 Artist Loops New 10: 現在我們用迴圈來把一堆的 V 連接在一起。
      2-3 Artist Loops New 11: 重建上一關的程式，但這次在迴圈裡添加一個向左轉 30 度的指令。現在把重複 8 次改成 24 次。
      2-3 Artist Loops New 12: '畫一個邊長為 100 畫素的菱形。 '
      2-3 Artist Loops New 13: "我們會從一些程式（灰色）開始來建立一個菱形。\\r\n\\r\n循環這些灰色的程式來建立有趣的圖案！"
      2-3 Artist Loops New 14: 玩玩這個畫菱形的程式，看看你可以畫出什麼圖案。試著修改轉向的角度，還有循環的次數。
      2-3 Artist Loops New 15: 現在，畫你喜歡的任何東西！
      2-3 Artist Loops New 2: |-
        這個關卡和前一關差不多，不過這次，我們只可以用 1 個`移動-向前`積木，還有 1 個`轉向`積木。\r
        \r
        你可以使用`重複`積木來解決這個問題嗎？
      2-3 Artist Loops New 9: 畫出一個簡單的 V（兩邊的長度都是 50 像素）以完成這個箭頭符號。
      2-3 Artist Match Hex Pic: '配對：幫忙完成六邊形。'
      2-3 Artist Match Rho Pic: '配對：完成遺失的程式碼。'
      2-3 Artist Match Sq Pic: '配對：完成缺少的程式碼'
      2-3 Artist Match Tri pic: '配對：填入遺失的積木。'
      2-3 Artist Nested Loops 1: 用一個`重複`積木包在整個程式外圍，以畫出這個圖形。
      2-3 Artist Nested Loops 10: 循環這個程式 12 次來完成這個圖案。
      2-3 Artist Nested Loops 11: 循環這個程式 4 次來完成這個圖案。每繞完一圈就轉向 90 度。
      2-3 Artist Nested Loops 12: 循環這個程式 12 次來完成這個漩渦。
      2-3 Artist Nested Loops 2: "現在循環畫出這個三角形 6 次。\n\\r\n\\r\n每畫出一次，需要轉向 60 度後再畫下一個。"
      2-3 Artist Nested Loops 3: "你需要循環這個三角形 12 次才能畫出個圖案。\\r\n\\r\n用一圈 360 度除以圖形數量 12，就可以知道每個形狀畫完後要轉向的角度是多少了。"
      2-3 Artist Nested Loops 4: "循環這個菱形 12 次以畫出一朵花！\\r\n\\r\n注意：我們在循環菱形 12 次所用的角度，和之前循環三角形 12 次所使用的角度是一樣的。\\r\n你知道在每次畫出圖樣後，要轉多少角度嗎？"
      2-3 Artist Nested Loops 5: "用巢狀迴圈來畫出這棟大樓的窗戶。\\r\n\\r\n這些窗戶邊長為 20 像素，間距為 20 像素。"
      2-3 Artist Nested Loops 6: |-
        這隻恐龍的尾巴上有 8 根尖刺。\r
        每個尖刺有 30 像素長。將三角形循環 8 次，並確保在畫出每個三角形之後向前跳！
      2-3 Artist Nested Loops 7: "循環這個三角形 10 次來畫出這個太陽。\\r\n\\r\n你會需要在每次畫三角形後移動然後轉向。\n\\r\n\\r\n想一想，每次轉向的角度是多少，角度 = 一圈的度數除以三角形的個數。"
      2-3 Artist Nested Loops 8: "現在我們來添加一些草到圖片上。\\r\n\\r\n每簇草的間隔距離為 50 像素。"
      2-3 Artist Nested Loops 9: "再加一朵花我們就完成這幅圖囉。\\r\n\\r\n循環這個菱形 12 次來畫出這朵花。"
      2-3 Artist Nested Loops Free Play: 自由發揮，使用巢狀迴圈畫些有趣的東西。
      2-3 Bee Conditionals 1: 你好！我是一隻蜜蜂，請幫我採集這朵花上的花蜜。
      2-3 Bee Conditionals 10: '紫色的花可能有1或0的花蜜。小心不要去採集沒有花蜜的紫花'
      2-3 Bee Conditionals 11: "我想知道那裡有些什麼！\\r\n\\r\n幫忙讓我在院子裡飛翔，並收集花朵中的花蜜。 "
      2-3 Bee Conditionals 12: 盡可能用最少的積木幫我找到全部的花蜜！
      2-3 Bee Conditionals 13: |-
        這裡也太多活要做了吧！\r
        \r
        使用你所學到的來收集所有花蜜及蜂蜜。
      2-3 Bee Conditionals 14: |-
        我們把所有東西都放在一起吧！\r
        \r
        利用你學過的技能來幫我收集花蜜，用的積木愈少愈好。不要忘了在最後幫它們釀成蜂蜜。
      2-3 Bee Conditionals 15: "不陌生吧，這種樓梯模式的關卡。\\r\n\\r\n你可以只在有花蜜的花朵上採集嗎？用的積木愈少愈好。"
      2-3 Bee Conditionals 2: "我是一隻蜜蜂！\\r\n使用最少的積木幫我採集到花朵中的所有花蜜。"
      2-3 Bee Conditionals 3: "仔細收集花蜜！\\r\n\\r\n幫我收集花蜜及蜂蜜，用的積木愈少愈好。  "
      2-3 Bee Conditionals 4: 幫我收集所有花朵中的花蜜，並全部釀成蜂蜜。
      2-3 Bee Conditionals 5: "小心不要採集到沒有任何花蜜的紫花。\\r\n你必須用`如果花蜜`積木先檢查看看。"
      2-3 Bee Conditionals 6: 用一個「如果」積木來檢查這朵花上面有沒有花蜜。
      2-3 Bee Conditionals 7: 在有花蜜的花朵中採集花蜜。
      2-3 Bee Conditionals 8: "這塊地上有紅色和紫色的花朵。\n紅花上的花蜜數量很明確，但是紫花上的花蜜數量就不知道了。\n收集所有的花蜜吧。"
      2-3 Bee Conditionals 9: 收集每一朵花的花蜜。
      2-3 Bee Conditionals Assessment 1: '評量：收集所有的花蜜。小心，不要採集沒有花蜜的紫花。'
      2-3 Bee Debugging 1: 這些積木真是讓我一陣錯亂！修正錯誤（可能不只一個）來收集到所有的花蜜。
      2-3 Bee Debugging 10: "這個關卡讓我腦袋轉個不停！\\r\n修正錯誤（可能不只一個）來收集所有的花蜜及蜂蜜。"
      2-3 Bee Debugging 2: |-
        你可以找到是哪兒出了問題嗎？\r
        改正
        錯誤（可能不只一個）並收集到全部花蜜。
      2-3 Bee Debugging 3: |-
        真是折騰人！\r
        \r
        修正錯誤（可能不只一個）並收集全部的花蜜。
      2-3 Bee Debugging 4: 這些積木真是讓我一陣錯亂！修正錯誤（可能不只一個）來收集到所有的花蜜及蜂蜜。
      2-3 Bee Debugging 5: "那花看起來真美味！\\r\n\\r\n修正錯誤（可能不只一個）來收集到所有的花蜜。\\r\n現在你可以同時使用運行和步進。"
      2-3 Bee Debugging 6: |-
        真是甜蜜的挑戰啊！\r
        \r
        修正錯誤（可能不只一個）來收集到所有的花蜜。
      2-3 Bee Debugging 7: 修復錯誤（可能不只一個）以收集所有的花蜜與蜂蜜。
      2-3 Bee Debugging 8: |-
        那麼多美麗的花朵！\r
        \r
        修正錯誤（可能不只一個）以收集所有的花蜜。
      2-3 Bee Debugging 9: |-
        有點耐心！\r
        \r
        你需要修復程式裡的一些問題，才能夠收集所有的花蜜和蜂蜜。
      2-3 Bee Debugging Assessment 1: |-
        評量：是時候看看你學得如何了！\r
        \r
        改正錯誤（可能不只一個），收集全部的花蜜及蜂蜜。
      2-3 Bee Functions 1: 函式是一段程式碼，用來執行某個任務。請使用 get 2 nectar（採集 2 個花蜜）函式，從每一朵花中採集花蜜。
      2-3 Bee Functions 10: "紫花的花蜜會在每次程式運行變成 1 或 0 個。\\r\n\\r\n創建一個函式，讓它可以只在有花蜜的紫花中，收集花蜜。"
      2-3 Bee Functions 2: "函式是執行特定任務的一串程式碼。\\r\n\\r\n用 `get 5` 這個函式來一次採集 5 個花蜜。"
      2-3 Bee Functions 3: 收集每一朵花的花蜜。
      2-3 Bee Functions 4: "`Move and get nectar`（移動並採集花蜜）函式讓蜜蜂轉向、收集花蜜，接著再讓蜜蜂轉向回到起始點。\\r\n\\r\n使用這個函式來收集所有的花蜜。"
      2-3 Bee Functions 5: "這兒現在有更多的花蜜在花朵裡。\n編輯提供的函式，讓它可以採集 4 個花蜜，並使用它來收集到花朵裡的所有花蜜。"
      2-3 Bee Functions 6: 現在用相同的函式從 3 朵花中收集到花蜜。
      2-3 Bee Functions 7: 花朵變得有一些遠了。編輯所提供的函式，並用它來收集到所有花朵上的花蜜。
      2-3 Bee Functions 8: 建立你自己的函式來採集 7 個花蜜、向前移動、然後釀造 7 個蜂蜜。使用這個函式來收集所有的花蜜及蜂蜜。
      2-3 Bee Functions 9: 寫一個你自己的函式，順著路走、採集花蜜、釀造蜂蜜、然後讓蜜蜂回到路徑的起點。
      2-3 Bee Functions Assessment 1: '評量：用給定的函式從每朵花上採集花蜜。'
      2-3 Bee Functions Assessment 2: '評量：新建一個函式來轉向、向前移動、釀造 3 個蜂蜜。然後讓蜜蜂返回出發的位置並向後轉。'
      2-3 Bee Loops 1: |-
        那些花看起來真是香甜可口！\r
        \r
        從每個花朵上採集花蜜，用的積木愈少愈好。
      2-3 Bee Loops 10: 你能使用一個「當…」迴圈，裡頭包含 2 個其他的迴圈，以收集到所有的花蜜嗎？
      2-3 Bee Loops 11: 使用當…迴圈來收集花朵上的所有花蜜。
      2-3 Bee Loops 12: 使用當…迴圈來收集花朵上的所有花蜜。
      2-3 Bee Loops 13: '評量：使用最少量的積木來收集所有的花蜜。'
      2-3 Bee Loops 1A: '嗨，我是蜜蜂。你能幫助我從這些花朵中收集花蜜嗎？ '
      2-3 Bee Loops 2: 使用最少的積木來收集所有花蜜及蜂蜜。
      2-3 Bee Loops 2A: 這一回，用一個迴圈來收集所有的花蜜。
      2-3 Bee Loops 3: 使用最少的積木，從每一朵花中採集花蜜，並在每一個蜂窩裡釀造蜂蜜。
      2-3 Bee Loops 3A: 使用一個`重複`迴圈來收集所有的花蜜。
      2-3 Bee Loops 3B: 現在使用`重複`積木來收集所有的花蜜和蜂蜜。
      2-3 Bee Loops 4: |-
        蜜蜂就是那麼忙！\r
        \r
        幫助蜜蜂收集所有的花蜜及蜂蜜，用的積木愈少愈好。
      2-3 Bee Loops 4A: "在這關中，迴圈應該進行多少次？\\r\n\\r\n迴圈是你的朋友！用一些迴圈來減少積木使用數量，並完成這個關卡。"
      2-3 Bee Loops 5: "這個圖形的路徑不同於其他的圖形。\\r\n\\r\n你能收集到花蜜嗎？用的積木愈少愈好。"
      2-3 Bee Loops 6: 你能用最快的方式，讓蜜蜂收集到所有的花蜜及蜂蜜嗎？
      2-3 Bee Loops 7: 多麼美麗的一片花田啊！幫助蜜蜂到每朵花上參觀一下。你能在 7 個積木內完成嗎？
      2-3 Bee Loops 8: "這些紫色的花在每次關卡運行時，就會有不同的花蜜數量。\\r\n\\r\n使用`當花蜜…`迴圈來收集到所有的花蜜。\\r\n\\r\n只要條件判斷後是 true（剩下的花蜜數 > 0），這個迴圈就會不斷循環。"
      2-3 Bee Loops 9: While迴圈等同於在迴圈中加上if的敘述。在這個程式碼中加上一個while迴圈來執行同樣的任務。
      2-3 Bee Loops Assessment 1: '評量：使用一個`當…`迴圈來採集這些花朵上的所有花蜜。'
      2-3 Maze 1: '你可以幫我抓住那頑皮的豬嗎？把幾個`移動-向前`積木放到`當運行時`積木的下面，然後點擊「運行」。 '
      2-3 Maze 10: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      2-3 Maze 11: 我餓了！讓我到花那兒！你需要重複使用一個積木幾次？
      2-3 Maze 12 (copy 1): '你能夠只用兩個程式積木就完成先前的任務嗎？(提示：用"重複次數"的程式積木來建立一個迴圈)'
      2-3 Maze 12 (copy 2): '你能夠只用兩個程式積木就完成先前的任務嗎？(提示：用"重複次數"的程式積木來建立一個迴圈)'
      2-3 Maze 12 (old): 讓我抓到那隻豬！現在再用上重複積木！
      2-3 Maze 12 - One Move Block: 抓到這隻豬！但這次，你只可以使用 1 個`移動-向前`積木。看看其它的程式積木是不是能幫上你的忙？
      2-3 Maze 12: 你能用 1 個`移動-向前`和 1 個`重複`積木來創建出一個迴圈，然後到達小豬那兒嗎？
      2-3 Maze 13 (old): 讓我抓到那隻豬！現在再用上重複直到積木！
      2-3 Maze 13: 讓我抓到那隻豬！這一次，你只能用 1 個向前移動積木。
      2-3 Maze 14 (old): 使用「重複直到」積木讓我到豬那兒！
      2-3 Maze 14: 使用最少的積木讓我吃到向日葵！（我需要的「重複」積木在哪兒呢？）
      2-3 Maze 15 (old): 使用「重複直到」積木讓我到豬那兒！
      2-3 Maze 15: 這個關卡裡，2 個 `重複` 迴圈可以幫你使用最少的積木數來抓到豬！
      2-3 Maze 16 (old): 使用「重複直到」積木讓我到豬那兒！
      2-3 Maze 16 before: 想想看，如何用最快的方式讓我可以抓到豬？
      2-3 Maze 16: 迴圈裡還可以放入更多的積木！你可以循環這個序列，讓殭屍吃到向日葵嗎？
      2-3 Maze 2: 那隻豬惹毛我了，幫助我抓到牠！
      2-3 Maze 3: 順著路徑讓我抓到那隻蠢豬，當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      2-3 Maze 4: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      2-3 Maze 5: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      2-3 Maze 6: 保持冷靜，幫我找到那隻壞豬豬。否則我真的會憤怒！
      2-3 Maze 7: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      2-3 Maze 8: 讓我抓到那隻豬！
      2-3 Maze 9: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      2-3 Maze Loops 1: 你可以只用 5 個相同的積木就讓我抓到豬嗎？
      2-3 Maze Loops 17: 用你學到的，讓我吃到向日葵！
      2-3 Maze Loops 18: "使用最少的積木帶我吃到向日葵！\\r\n\\r\n試試把一個`重複`迴圈放到另一個`重複`迴圈裡頭，這樣可以減少積木的使用次數。"
      2-3 Maze Loops 19: "我們來把它帶到另一個層次！\\r\n使用迴圈，讓我吃到向日葵，用愈少積木愈好！"
      2-3 Maze Loops 20: 使用最少的積木讓我吃到向日葵！
      2-3 Maze Loops 21: 使用最少的積木帶我吃到向日葵！
      2-3 Maze Loops Assessment 1: '評量：只能用 5 個積木，把我帶到向日葵那兒。 '
      2-3 Maze sq10: 拿頭豬來讓我看看吧！ 有哪些方塊重複了呢?
      2-3 Maze sq10v2: 拿頭豬來讓我看看吧！ 有哪些方塊重複了呢?
      2-3 Maze sq2: 順著路徑讓我抓到那隻蠢豬，當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      2-3 Maze sq3: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      2-3 Maze sq4: 保持冷靜，幫我找到那隻壞豬豬。否則我真的會憤怒！
      2-3 Maze sq5: 帶我到那隻豬旁邊！你需要重複幾次程式積木呢？
      2-3 Maze sq6: '你能夠只用兩個程式積木就完成先前的任務嗎？(提示：用"重複次數"的程式積木來建立一個迴圈)'
      2-3 Maze sq7: 試著用 3 個程式積木讓我到綠色入侵者那。
      2-3 Maze sq8: 讓我抓到那隻豬！（我需要的重複積木在哪裡？）
      2-3 Maze sq9: 創造迴圈 以更少的積木抵達豬那裏。
      2-3 maze sq11: 拿頭豬來讓我看看吧！ 有哪些方塊重複了呢?
      2-3 maze sq12: 你能使用"重複次數"的積木來取代先前的答案嗎？
      2-3 maze sq13: "親愛的... 人類, 我... 殭屍。需要... 到... 向日葵。\n用「重複直到」積木來建立一個迴圈。"
      2-3 maze sq14: 你可以只用 4 個積木就到達向日葵那裡嗎？
      2-3 maze sq15: 你可以只用 5 個積木就到達向日葵那裡嗎？
      2-3 maze sq16: 好的，這和上一關很相似，有些不一樣就是。你可以只用 5 個積木解決嗎？
      2-3level1: 往前移動，幫助憤怒鳥抓到頑皮的豬。
      20hr_farmer_stage9_1: 你好！我是農夫。請你幫助我將農地整平，好讓我可以耕作。請將我移到土堆，然後使用｢移除｣積木來移除土堆。
      20hr_farmer_stage9_11: '現在外面還是一片漆黑。讓我沿著田地移動，如果有土堆就將它移除，如果有坑洞就將它填滿。提示：使用「如果」積木上的下拉清單。'
      20hr_farmer_stage9_2: 接下來，將我移到坑洞那裡，使用「填充」積木往洞裡填入 2 鏟土。
      20hr_farmer_stage9_3: 將我移到小土堆上，告訴我該移除多少鏟的泥土，用的積木愈少愈好。
      20hr_farmer_stage9_4: '你能幫我移除 4 個土堆嗎？提示：盡量使用「重複」積木。'
      20hr_farmer_stage9_5: '幫助我填滿這些坑洞，每個坑洞需要填入 5 鏟的泥土。提示：你可以在「當…」積木中，放進「重複」積木來完成這個關卡。'
      20hr_farmer_stage9_6: 盡可能用最少的積木來移除所有土堆。在「當…」積木的下拉清單裡多了幾個選項，可以用來協助你判斷現在是站在土堆上，還是站在坑洞上。
      20hr_farmer_stage9_7: 哇！我發現了一個很深的坑洞，但我不知道要用多少鏟土才可以把它填平。你可以寫個程式讓它自動填土直到填平為止嗎？
      20hr_farmer_stage9_8: 盡可能使用最少的程式積木，幫我將田地最後面的坑洞填平。
      20hr_farmer_stage9_9: '讓我移除所有的小土堆，用的積木愈少愈好。提示：試試「當…」積木。'
      20hr_maze_stage2_10: 好的，接著我們試試這個新的「循環…直到…」積木，它會一直重複執行，直到我抓到這隻惹人厭的豬豬。
      20hr_maze_stage2_11: 好了，這是最後一次的練習 - 你可以使用 4 個積木解決這個問題嗎？
      20hr_maze_stage2_13: 好的，這和上一關很相似，有些不一樣就是。你可以只用 5 個積木解決嗎？
      20hr_maze_stage2_14: '使用新的「如果」積木可以讓我決定何時轉彎。提示：只要再添加一個積木就可以了，但你可以學習其他積木的組合方式，這樣你下次就可以自己編寫了。'
      20hr_maze_stage2_15: 好，這個關卡跟前一關很像，但你需要記住你是如何同時使用「如果」 及「循環」程式積木的。
      20hr_maze_stage2_16: 偶想要吃向日葵！試著使用「如果」積木，讓我使用最少的積木就能吃到向日葵。
      20hr_maze_stage2_17: 好啦，讓我們再練習一次，這次跟之前差不多，但小心別被「食殭花」給吞了 ！
      20hr_maze_stage2_18: '「如果…否則…」積木會依指定的條件執行相應指令，用這個新學習的積木把我送到向日葵那裡吧！'
      20hr_maze_stage2_19: 再練習一次「如果…否則」積木，你可以一次就完成嗎？
      20hr_maze_stage2_2: 這隻豬惹毛我了。帶我去那，我要抓住牠！
      20hr_maze_stage2_20: 能不能添加 3 個積木帶我走出這個複雜的迷宮？如果你成功了，不管怎樣曲折的路我都能克服！
      20hr_maze_stage2_3: 沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！
      20hr_maze_stage2_4: 帶我去找那綠色的小惡魔！（小心 TNT 炸藥）
      20hr_maze_stage2_5: 保持冷靜，趕快幫我找到那隻壞豬。不然我會被牠氣死！
      20hr_maze_stage2_6: 聽說用 2 個積木就能抓到那隻綠色笨豬，你辦得到嗎？
      20hr_maze_stage2_7: 帶我去綠色入侵者那裡，只可以用 3 個積木喔。
      20hr_maze_stage2_8: 幫我想想辦法，在使用最少的積木數量下，趕走這隻壞豬豬。試著使用多個「重複」積木來完成目標吧！
      20hr_maze_stage2_9: '當積木變灰色時，代表你不能刪去它。要解決這個問題，請使用「循環」積木，試著將「移動」、「移動」、「旋轉」三個積木，放入循環積木中，並設定重複 3 次。'
      4-5 Artist 1: '請幫我畫完我的盒子。（每個線段的長度是 300 像素） '
      4-5 Artist 10: 點擊「運行」來試試程式，接著，重複它指定次數來完成這個圖案，每次使用不同的顏色。
      4-5 Artist 11: 完成這些綠色的線。它們的長度是 300 像素，線條與線條之間的距離為 15 像素。
      4-5 Artist 2: 使用`重複`積木來循環這個程式，以完成這個正方形。
      4-5 Artist 3.5: 想一想，當你運行這個程式時會發生什麼事（你也可以直接點擊「運行」來看看）。接著，重複它一定的次數來完成這個圖形！
      4-5 Artist 3: 這個長方形花圃的周長是 600。長邊的長度是 200。畫出這個長方形，用的積木愈少愈好。
      4-5 Artist 4: 一個圓有多少度？藉由迴圈來創造一個彩色的圓。
      4-5 Artist 5: 我們可以把「???」換成什麼，殭屍才可以用提供的迴圈完成這個圖案？
      4-5 Artist 6: 這個正三角形的三個角都是 60 度，三個邊都是 200 像素。完成這個圖形。
      4-5 Artist 7: 這個直角三角形的角度分別是 30、60、90 度。斜邊的長度是 200 像素。完成這個圖形。
      4-5 Artist 8: "足球場的半場線與邊線互相垂直。\\r\n這個長方形的周長是 800 像素，長邊是 240 像素。它的高是多少？\\r\n\\r\n把邊線與半場線畫出來。"
      4-5 Artist 9: 畫出圖形的右半邊，以讓這個設計對稱。這是個正三角形，邊長為 50 像素。
      4-5 Artist Assessment 1: '評量：用迴圈畫出正三角形。每一邊長 300 像素。'
      4-5 Artist For Loops 1: 把數字 1 到 10 放進寬度積木，然後運行程式。
      4-5 Artist For Loops 11: 完成這個計數迴圈積木，這樣就可以從 0, 20, 40, 60, 80... 計數到 200。
      4-5 Artist For Loops 12: '如果你把「從…」和「到…」之間的數字互換，會發生什麼事？完成這個計數迴圈，讓它倒著算出 200、180、160、140、120…0。 '
      4-5 Artist For Loops 13: '這個圖案沒有使用計數迴圈，所以用掉太多積木了！使用一個計數迴圈來完成這個螺旋圖案。提示：最後一個線段長 250 像素。'
      4-5 Artist For Loops 14: '有人在開始寫程式碼之後，發現應該有更快的方式！用一個計數迴圈積木來取代其他積木，然後完成這個三角形螺旋。（提示：最後一條線的長度是 300 像素。）'
      4-5 Artist For Loops 15: '有人在開始寫程式碼之後，發現應該有更快的方式！用一個計數迴圈積木來取代其他積木，然後完成這個六邊形螺旋。（提示：最後一條線的長度是 200 像素。）'
      4-5 Artist For Loops 2: 這是一個計數迴圈，取代輸入 1,2,3... 10，這個計數積木可以重複執行裡頭的程式並為你算出數字。放置數字 10 到計數迴圈的「到…」欄位上。
      4-5 Artist For Loops 3: 我們要用什麼方法從 1 數到 50 呢？編輯這個計數積木。
      4-5 Artist For Loops 4: 完成一個能從 1 數到 10 的計數迴圈積木。
      4-5 Artist For Loops 6: 畫出邊長為 50、60、70、80、90 像素的正方形。你會需要用到 draw a square（畫個正方形）的函式 5 次。
      4-5 Artist For Loops 7: '用一個「以⋯方式計數」模塊改變尺寸畫同樣的正方形。把「計數器」模塊放到「畫一個正方形」函數中。提示：它在變量欄中。'
      4-5 Artist For Loops 8: 你可以完成這個程式嗎？放置積木到「計數循環」積木裡，循環中的計數從 10 算到 200，以 10 為間隔數。你可以在迴圈類指令中找到「計數迴圈」積木。
      4-5 Artist For Loops 9: 這些圓形的大小分別是5、10、15、20、25、30、35。用"for"程式積木來畫圓形。
      4-5 Artist Free Draw 1: 隨便畫吧！把你的靈感變成創作！
      4-5 Artist Functions 1: 用一個重複迴圈來畫出這個三角形。
      4-5 Artist Functions 10a: 把這個代碼放在「繪製一片雪花」函數中，並用參數「大小」來代替50。已經調用的函數是用來畫一個一百像素的雪花的。
      4-5 Artist Functions 10b: '用「畫一片雪花」函數創建不同大小的雪花。 提示: 第一片雪花長度為 25 像素而且每片雪花的長度是前一個的兩倍。'
      4-5 Artist Functions 11: '"畫一個六邊形"函數使用"畫一個三角形"函數。完成這個六角形函數。(提示: 一個六邊形有 6 邊，每邊長 100 像素)'
      4-5 Artist Functions 12: '完成畫波浪線函數。 每個波浪是一個上突波和一個下凹波組成。  提示: 繪製 5 個藍色的波浪。'
      4-5 Artist Functions 13 Free play: "這裡有一些讓你畫出星球、星型、火箭和機器人的工具\n多多利用它們做出你原創的圖片，你還能跟你的好朋友們分享喔！"
      4-5 Artist Functions 14 Free play: 這裡，我要已經為你提供了幾個函式。要在一個還是多個迴圈裡？要用哪些函式？一切隨你，你高興就好。用它們來製作圖案並和你的朋友分享。點擊「運行」來看看範例。
      4-5 Artist Functions 15 Assessment: '評量：用 draw a square（畫個正方形）函式來建立邊長為 50、100 以及 150 像素的正方形。'
      4-5 Artist Functions 2a: 現在把這些程式積木放進名為 draw a small triangle（畫個小三角形）的新函式，接著呼叫它。
      4-5 Artist Functions 2b: 現在用提供的積木建立一個名為 draw a small triangle（畫個小三角形）的函式。
      4-5 Artist Functions 3: '現在請建出新的「畫一個中三角形」和「畫一個小三角形」函式。「畫一個小三角形」函式已經好了。三角形的邊長為 50 (小)、100 (中)、150 (大)。 '
      4-5 Artist Functions 4: 這個新的「畫三角形」函式有一個參數，它可以做到之前的三個功能。用這個函式來畫一些三角形吧。
      4-5 Artist Functions 5: 你能夠將 draw a triangle（畫個三角形）函式修改成 draw a square（畫個正方形）函式嗎？
      4-5 Artist Functions 6: '用畫正方形和三角形的函式來畫一間房子。提示：方形的邊長是 200 像素。'
      4-5 Artist Functions 6b: 用畫正方形和三角形的函式與其它的程式積木，把積木組合成「畫一間房子」函式並呼叫它。
      4-5 Artist Functions 7: 用「畫一間房子」函式來分別畫出 100 及 50 像素的房子。這兩間房子相隔 50 像素。
      4-5 Artist Functions 8: Draw a flower（畫個花朵）函式中有一個參數，它可以讓你設定莖的高度。將它設為 200，看看會發生什麼事。
      4-5 Artist Functions 9: 畫這 3 朵花。第一朵花高 100 像素，然後後面的花要比前一朵高 50 像素。而花朵之間距離是 100 像素。
      4-5 Artist Patterns 1: |-
        使用迴圈來畫出這個正方形。\r
        \r
        每個邊長是 20 像素。
      4-5 Artist Patterns 10: "這個是用來畫出 2 列六邊形的程式 - 循環整個程式 4 次就可以畫出整個蜂窩。\\r\n\\r\n你需要在每次的循環之後向後跳躍 120 像素，以確保小藝術家不會跑出畫面。\\r\n"
      4-5 Artist Patterns 11: '你需要重複迴圈多少次才可以畫出一個半圓？'
      4-5 Artist Patterns 12: "如果要建立另一個像這樣的迴圈，不過把左轉改成右轉，那會發生什麼事呢？\\r\n\\r\n你可以重複那些程式來畫出波浪嗎？"
      4-5 Artist Patterns 13: "現在我們來循環做這件 4 次以建立這個畫框。當心轉角處 - 你不能直接轉向 90 度！\\r\n\\r\n如果循環 3 度 60 次會產生一個半圓，這些程式中的哪些積木可以額外畫出四分之一圓作為畫框圓角呢？"
      4-5 Artist Patterns 2: 如果你放置一個正方形迴圈到其它的迴圈裡，我們稱它為巢狀迴圈（nested loop）。你需要在迴圈最外層添加什麼積木，讓所有 15 個正方形靠在一起且排成一直線？
      4-5 Artist Patterns 3: "現在讓我們加深難度！\n我們已經將整個程式積木嵌套在另一個迴圈內，但你需要讓小藝術家回到初始位置來畫出下一行。要在最外層迴圈下添加哪個積木，才能畫完整個網格？"
      4-5 Artist Patterns 4: 這個菱形的邊長為 50 像素，角度分別是 120 及 60 度。用一個迴圈把它畫出來。
      4-5 Artist Patterns 5.5: 你需要重複這個積木多少次才能畫出網格上的所有菱形？
      4-5 Artist Patterns 5: "重複這個程式來製作一排 6 個的菱形。\n\\r\n\\r\n注意我們已修改菱形的程式，將重複次數從 2 改成 3，你覺得那是為什麼？\\r\n"
      4-5 Artist Patterns 6: 你需要重複這個積木多少次才能畫出網格上的所有菱形？
      4-5 Artist Patterns 7: 讓我們修改上一題的代碼來畫出這個更複雜的圖案。注意現在菱形是如何重疊的，試著把第一個「跳躍-向後」積木上的數值從 100 改成 50（一半的距離）- 現在藝術家應該將第二個「跳躍-向後」上的數值改成多少？
      4-5 Artist Patterns 8: 使用一個迴圈來畫出這個六邊形，它的每個邊長是 40 像素，每個角度是 60 度。
      4-5 Artist Patterns 9.5: 讓我們循環這段程式來畫出兩列六邊形。注意第二列是如何被移動到右邊的。
      4-5 Artist Patterns 9: "現在重複這個程式 3 次來畫出這列圖案。\\r\n\\r\n每個六邊形的對角距離為 80 像素。"
      4-5 Artist Patterns Free Play: 自由發揮 - 試著親手做一個自己的圖案！
      4-5 Bee Conditionals - FC Test: 蜂蜜現在只想要花蜜。不是全部的東西都是花朵，所以檢查每朵雲裡面是否藏著花朵。如果是的話，那就可以採集花蜜。
      4-5 Bee Conditionals 1: 這雲遮住了我的視線！檢查看看雲的下面是不是有花朵，只有在有花朵的時候才採集花蜜。注意，它會變來變去的！
      4-5 Bee Conditionals 2: "雲愈來愈多了！\\r\n\\r\n檢查每個雲，在你採集花蜜前看看是不是有花朵藏在裡頭。\\r\n\\r\n記住：\n雲底下藏的東西不見得一樣！"
      4-5 Bee Conditionals 3: 現在蜜蜂只想要製作蜂蜜。在一些雲裡可能藏著蜂窩，仔細的檢查每個雲！
      4-5 Bee Conditionals 4: 有時雲裡面有花朵，有時雲裡藏著蜂窩！使用「如果…否則」積木，如果是花朵就收集花蜜。否則，就釀造蜂蜜（因為它是蜂窩）。
      4-5 Bee Conditionals 5: |-
        雲下藏的不是花朵就是蜂窩！\r
        \r
        用`如果…否則`積木，如果是花的話就採集花蜜，\r
        否則，就釀造蜂蜜。
      4-5 Bee Conditionals 6: "我不確定這朵花裡有多少花蜜，也許是 1 或 2 或 3 個。\\r\n\\r\n組合這個條件判斷積木（`如果`和`如果…否則`）來取得花朵中實際的花蜜數。\n\\r\n\\r\n記住，花蜜的數量會在你每次運行之後改變！"
      4-5 Bee Conditionals 7: "這些花朵上可能有 3、2 或 1 個花蜜。\\r\n\\r\n完成 `check purple flower`（檢查紫花）這個函式，並使用它來收集花朵上的所有花蜜。"
      4-5 Bee Conditionals 8: "寫個 `check flower make honey`（檢查花朵釀造蜂蜜）的函式。\\r\n\\r\n你的函式應該要檢查紫花裡有多少的花蜜（1-3 不等）並採集起來。\\r\n然後，再向前移動釀造蜂蜜。"
      4-5 Bee Conditionals Assessment 1: "**評量：**雲朵中可能隱藏著帶有花蜜的花朵，或是可裝蜂蜜的蜂窩。\\r\n\\r\n完成這個`get nectar or make honey`的函式，然後調用它來收集花蜜或蜂蜜。（註：get nectar or make honey 是採到花蜜或釀成蜂蜜的意思）\\r\n"
      4-5 Bee Debugging 1: "這些積木真是讓我一陣錯亂！\\r\n\\r\n你可以修正它們嗎？"
      4-5 Bee Debugging 10: 找到錯誤並修正它們。
      4-5 Bee Debugging 11: 這個計數是正確的嗎？
      4-5 Bee Debugging 2: 幫助蜜蜂收集花蜜及製造蜂蜜。
      4-5 Bee Debugging 3: 找到錯誤並修正它們。
      4-5 Bee Debugging 4: 這些程式積木無法正常動作，你能幫我找出模式嗎？
      4-5 Bee Debugging 5: 這兒的程式積木有點不對勁…
      4-5 Bee Debugging 6: "在你每次運行時，紫色的花朵都會有不同數量的花蜜。\\r\n\\r\n修正這個程式以在每次運行時都能採集到花朵上的所有花蜜。"
      4-5 Bee Debugging 7: 這個函式缺少了一些東西…
      4-5 Bee Debugging 8: 函式本身沒問題，但它沒有被正確使用。
      4-5 Bee Debugging 9: 為什麼釀造的蜂蜜永遠都不夠用？
      4-5 Bee Debugging Assessment 1: '評量：修正程式碼。'
      4-5 Bee Nested Loops 1: 使用一個迴圈來收集所有的花蜜。
      4-5 Bee Nested Loops 2: '使用巢狀迴圈從每朵花中收集所有的花蜜。'
      4-5 Bee Nested Loops 3: 將起始程式碼放到巢狀迴圈中來收集的所有花蜜。
      4-5 Bee Nested Loops 4: "收集每一朵花的花蜜，並在每一個蜂窩製造蜂蜜。 \\r\n\\r\n使用巢狀迴圈。 "
      4-5 Bee Nested Loops 5: 建立一個巢狀迴圈來收集所有的花蜜。
      4-5 Bee Nested Loops 6: 收集所有的花蜜。
      4-5 Bee Nested Loops 7: 把這個迴圈放入另一個迴圈來建構一個巢狀迴圈，從花朵上採集到所有花蜜。
      4-5 Bee Nested Loops 8: '收集所有花朵裡的花蜜。透過巢狀迴圈（將裡面的重複積木換成當…積木）來完成。 '
      4-5 Bee Nested Loops 9: 透過巢狀迴圈（在重複迴圈裡放置一個當…迴圈）來收集所有花朵裡的花蜜。
      4-5 Bee Nested Loops Assessment 1: "**評量：**用迴圈收集所有的花蜜及蜂蜜。"
      4-5 Bee Nested Loops Rows: "採集每一排花朵中的花蜜！\n使用巢狀迴圈。"
      4-5 Maze 1 (copy 1): 親愛的... 人類，我... 殭屍。需要... 到... 向日葵。
      4-5 Maze 1: 親愛的... 人類，我... 殭屍。需要... 到... 向日葵。
      4-5 Maze 10: 你可以只用 4 個積木就到達向日葵那裡嗎？
      4-5 Maze 11: 你可以只用 6 個積木就到達向日葵那裡嗎？
      4-5 Maze 12: 好啦，現在有點不一樣了。你能不能只用 6 個積木完成關卡？
      4-5 Maze 13: 讓我抓到那隻豬！
      4-5 Maze 14: 讓我抓到那隻豬！利用「重複直到」積木完成關卡。
      4-5 Maze 2 (copy 1): 讓殭屍吃到向日葵，記得要避開食殭花！
      4-5 Maze 2: 讓殭屍吃到向日葵，記得要避開食殭花！
      4-5 Maze 3 (copy 1): 就速要... 吃到... 向日葵。
      4-5 Maze 3: 就速要... 吃到... 向日葵。
      4-5 Maze 4 (copy 1): 試試看用「重複」積木來減少積木的使用數…
      4-5 Maze 4: 試著使用"重覆"程式積木來減少程式積木的使用量。
      4-5 Maze 5 (copy 1): 你可以用最少的積木來完成這個關卡嗎？
      4-5 Maze 5: 你可以用最少的積木來完成這個關卡嗎？
      4-5 Maze 6 (copy 1): 你可以用最少的積木來完成這個關卡嗎？
      4-5 Maze 6: 使用最少的積木讓我吃到向日葵！
      4-5 Maze 7: 讓殭屍快一點吃到向日葵！你能用 11 個以下的積木來完成這個關卡嗎？
      4-5 Maze 8: "用最少的積木讓殭屍吃到向日葵。\\r\n（記得要避開食殭花！）"
      4-5 Maze 9: "現在我們有個新的積木叫做`重複直到`。\\r\n這可以讓我們持續循環指令，直到殭屍吃到向日葵。\\r\n\\r\n使用新的`重複直到`積木來完成這個關卡，用的積木愈少愈好。"
      4-5 Maze Assessment 1: '評量：用最少的程式積木取得向日葵。'
      4-5 Maze Conditionals 1: 使用`重複 直到`積木讓殭屍吃到向日葵。
      4-5 Maze Conditionals 10: "你可以只用 3 個積木來幫助殭屍解決更複雜的關卡嗎？ \\r\n\\r\n如果你成功了，不管怎樣曲折的路他都能克服！"
      4-5 Maze Conditionals 2: 使用`重複 直到`積木讓殭屍吃到向日葵。
      4-5 Maze Conditionals 3: "使用`如果`積木來幫我決定何時要轉向。\\r\n"
      4-5 Maze Conditionals 4: 好啦，這個關卡的解法和上一關很像，但是請記住你是怎麼應用`如果`、`重複直到`積木的。
      4-5 Maze Conditionals 5: "「偶想... 粗... 向日葵！」\\r\n\\r\n使用`如果`陳述式，讓殭屍用最少的積木到達向日葵那裡。"
      4-5 Maze Conditionals 6: |-
        「偶想... 粗... 向日葵。」\r
        \r
        使用`如果`積木，讓殭屍用最少的積木到達向日葵那裡。
      4-5 Maze Conditionals 7: 這個關卡的解法並不是特別困難，只不過請當心噬殭花！
      4-5 Maze Conditionals 8: "`如果…否則`積木可以檢查一個狀況，接著執行一個操作或另一個。\\r\n\\r\n使用這個新積木，讓我吃到向日葵。"
      4-5 Maze Conditionals 9: |-
        再練習一次如何使用`如果…否則`積木！\r
        \r
        試試先用手指頭追蹤看看，再寫出程式，你能不能一次就成功。
      4-5 Maze Conditionals Assessment 1: "**評量：**用一個`重複直到`和`如果…否則`積木讓我吃到向日葵，使用的積木愈少愈好。"
      4-5 Nested Loops 1: '完成代碼來畫這些三角形。第一個三角形的代碼已經幫你打好了。提示: 3個三角形旋轉了360度'
      4-5 Nested Loops 11: 你可以用巢狀迴圈來畫出在人行道上的 10 個正方形嗎？每個正方形的邊長為 30 像素。
      4-5 Nested Loops 12: 你可以用巢狀迴圈來畫出這 36 個三角形嗎？
      4-5 Nested Loops 2: '現在將這個迴圈嵌套進另一個迴圈內，以畫出 10 個三角形。這就是所謂的「巢狀式迴圈」。  '
      4-5 Nested Loops 3: |-
        把起始程式碼嵌進另一個迴圈中來畫出一個太陽。\r
        \r
        要能夠製作出這樣酷炫的圖案，你必須在轉向之前向前跳一段距離。
      4-5 Nested Loops 5: 重複已給的代碼來畫出一個風車。
      4-5 Nested Loops 6: 你可以藉由重複畫三角形的程式碼來畫出一個六邊形嗎？
      4-5 Nested Loops 7: "循環這個圖樣 10 次。\\r\n\\r\n你知道在每個圖樣畫完後要轉多少角度嗎？"
      4-5 Nested Loops 8: "重複這個圖案6次。\\r\n\\r\n你知道每次重複畫圖案時需要轉多少度？ "
      4-5 Nested Loops 9: 在鱷魚的嘴內畫出牙齒!
      4-5 Nested Loops Assessment 1: '評量：使用巢狀迴圈完成設計。'
      4-5 While Loops 1: 把我移動到洞口，然後使用`填充`積木，鏟 2 鏟土填平它。
      4-5 While Loops 2: 把我移動到土堆，然後使用`移除 1`積木，挖除 5 鏟土。
      4-5 While Loops 3: "盡可能使用最少的積木來完成這個關卡！\\r\n\\r\n讓我移動到土堆以鏟除它，再讓我移動到坑洞以填滿它。"
      4-5 While Loops 4: "哇，瞧瞧這兒！\\r\n\\r\n我不知道要用多少鏟土才可以把它填平。\\r\n你可以寫一個程式，讓它不斷的用`填充`積木填土，直到地面變平坦嗎？  "
      4-5 While Loops 5: 哇，現在這裡有兩個很深的坑洞！你可以寫個程式，填滿它們直到地面變平整嗎？
      4-5 While Loops 6: 哇，現在這裡有一個很大的土堆！你可以寫個程式，挖除它們直到地面變平整嗎？
      4-5 While Loops 7: 哇，現在這裡有三個土堆！你可以寫個程式，挖除它們直到地面變平整嗎？
      4-5 While Loops 8: " 有一個非常深的洞，還有一個非常大的土堆。需要幾鏟土才能把地面變平整呢？提示:：填土和挖土都用了「當…」迴圈。"
      4-5 While Loops Assessment 1: 這兒有許多坑洞和土堆。幫我把它們填滿或鏟除，讓地面變平整。
      Alien Defender: '專案點子：在 Play Lab 裡設計一個獨一無二的遊戲！'
      Alien Defender_2018: '專案點子：在 Play Lab 裡設計一個獨一無二的遊戲！'
      AllTheThings Applab - Turtle move with button: 添加一個按鈕，讓你在點擊它時，烏龜能夠移動。（點擊觀看完整說明）
      App Lab test: 測試
      Artist - Nested Loops 1: '完成代碼來畫這些三角形。第一個三角形的代碼已經幫你打好了。提示: 3個三角形旋轉了360度'
      Artist - Nested Loops 11: 你可以用巢狀迴圈來畫出在人行道上的 10 個正方形嗎？每個正方形的邊長為 30 像素。
      Artist - Nested Loops 12: 你可以用巢狀迴圈來畫出這 36 個三角形嗎？
      Artist - Nested Loops 5: 重複已給的代碼來畫出一個風車。
      Artist - Nested Loops 6: 你可以藉由重複畫三角形的程式碼來畫出一個六邊形嗎？
      Artist - Nested Loops 9: 在鱷魚的嘴內畫出牙齒!
      Artist - Nested Loops Assessment 1: 用一個巢狀迴圈來完成這個圖案。
      Artist Autorun Test: 現在，把這個函式放進迴圈來畫出這 3 個正方形。
      Artist Inspiration: "自由發揮靈感：你已經學會了所有需要創建這個模式的知識了！如果這個圖形引起了你的聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。 \\r\n\\r \n想要知道我們的這些創意圖案是怎麼做出來的嗎？ "
      Bergeron Robot Maze1: '你可以幫我抓住那頑皮的豬嗎？把幾個`移動-向前`積木放到`當運行時`積木的下面，然後點擊「運行」。 '
      Big Game Complete: 在 CS 代數 - Big Game 專案的完成範例
      Big Game Testing: 在 CS 代數 - Big Game 專案的完成範例
      Brad Spooky House Copy: '自由發揮：這是除了你寫的函式，還有更多的函式讓你發揮。畫些令人驚嘆的東西吧！用不同的筆跡寬度來看看你能畫出什麼不一樣的圖形！'
      Brad Spooky House: '自由發揮：這是除了你寫的函式，還有更多的函式讓你發揮。畫些令人驚嘆的東西吧！用不同的筆跡寬度來看看你能畫出什麼不一樣的圖形！'
      Building a Foundation Assessment: "建一個三層的金字塔。\n沒有說明，完成它就對了！"
      Busy Bee 2: 這隻蜜蜂的工作也太多了吧！你注意到有甚麼模式可以用來簡化你的程式嗎？
      Busy Bee: 這隻蜜蜂的工作也太多了吧！你注意到有甚麼模式可以用來簡化你的程式嗎？
      C3-Farmer While Loops 5: 哇，現在這裡有兩個很深的坑洞！你可以寫個程式，填滿它們直到地面變平整嗎？
      C3-Farmer While Loops 6: 哇，現在這裡有一個很大的土堆！你可以寫個程式，挖除它們直到地面變平整嗎？
      C3-Farmer While Loops 7: 哇，現在這裡有三個土堆！你可以寫個程式，挖除它們直到地面變平整嗎？
      C3-Farmer While Loops 8: " 有一個非常深的洞，還有一個非常大的土堆。需要幾鏟土來把地面變平整？提示:：填土和挖土都用了「當…時」迴圈。"
      C3-Farmer While Loops Assessment 1: 這兒有許多坑洞和土堆。幫我把它們填滿或鏟除，讓地面變平整。
      CSD Hackathon Pt 1: "（點擊觀看完整說明）"
      CSD Hackathon Pt 2: "（點擊觀看完整說明）"
      CSD Hackathon Week 1: "（點擊觀看完整說明）"
      CSD Hackathon Week 2: "（點擊觀看完整說明）"
      CSD U3 L5 Freeplay: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 L5 Freeplay_2018: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 L5 Freeplay_2019: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables TEMPLATE square: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables change circle size: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables change circle size_2018: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables change circle size_2019: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables multiple assignments: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables naming rules v2-2018: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables naming rules v2: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables naming rules v2_2018: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables naming rules v2_2018_2019: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables naming rules: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables random assignment: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables random with assignment: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables random with assignment_2018: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U3 Variables random with assignment_2019: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      CSD U4 - Events Template: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      CSD U5 black white images pixelation 2: 畫一個笑臉(點擊這裡瀏覽圖案)
      CSD U5 black white images pixelation 2_2018: 畫一個笑臉(點擊這裡瀏覽圖案)
      CSD U5 black white images pixelation 2_2019: 畫一個笑臉(點擊這裡瀏覽圖案)
      CSD U5 black white images pixelation 3: 修改寬度和高度的滑桿以找到圖像（點擊這裡查看更多）
      CSD U5 black white images pixelation 3_2018: 修改寬度和高度的滑桿以找到圖像（點擊這裡查看更多）
      CSD U5 black white images pixelation 3_2019: 修改寬度和高度的滑桿以找到圖像（點擊這裡查看更多）
      CSD U5 black white images pixelation 5: 畫你喜歡的任何東西
      CSD U5 black white images pixelation 5_2018: 畫你喜歡的任何東西
      CSD U5 black white images pixelation 5_2019: 畫你喜歡的任何東西
      CSD U5 black white images pixelation: 利用 0 和 1 來完成這個 X 圖形。
      CSD U5 black white images pixelation_2018: 利用 0 和 1 來完成這個 X 圖形。
      CSD U5 black white images pixelation_2019: 利用 0 和 1 來完成這個 X 圖形。
      CSDU4 - AppLab - 4: " 使用偵錯指令以列出在第 6 點之前的清單。（點擊查看完整說明）"
      CSDU4 - Design Mode - 1: 添加一個按鈕，讓你在點擊它時，烏龜能夠移動。（點擊觀看完整說明）
      CSDU4 - Design Mode - 24: 添加一個輸入姓名、年齡的文字方塊。（點擊觀看完整說明）
      CSDU4 - Design Mode - 29: 添加一個下拉式清單供選擇，取代 promptNum（點擊觀看完整說明）
      CSDU4 nameAgeTemplate: 添加一個輸入姓名、年齡的文字方塊。（點擊觀看完整說明）
      CSDU6 - Arrays - indexPractice: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSDU6 - for loop - color buttons with for: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSDU6 - for loop - color buttons: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSDU6 - for loop - why for: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSDU6 arrays rainbow: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSDU6 arrays select rainbow: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSDU6 arrays select rainbow_2018: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSDU6 arrays select rainbow_2019: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSP student contact info: 請輸入你的電子信箱。
      CSPU5 First Time Console.log: 添加 3 個控制紀錄訊息，並測試將它們輸出。（點擊觀看完整說明）
      CSPU5 First Time Console.log_2018: 添加 3 個控制紀錄訊息，並測試將它們輸出。（點擊觀看完整說明）
      CSPU5 First Time Console.log_2019: 添加 3 個控制紀錄訊息，並測試將它們輸出。（點擊觀看完整說明）
      CSPU5_U3 - Arrays - indexPractice: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSPU5_U3 - Arrays - indexPractice_2018: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSPU5_U3 - Arrays - indexPractice_2019: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      CSPU5_U3 - Canvas - 200dots: 添加一個迴圈到程式，以在畫布上畫出 200 個黑點。（點擊觀看完整說明）
      CSPU5_U3 - Canvas - 200dots_2018: 添加一個迴圈到程式，以在畫布上畫出 200 個黑點。（點擊觀看完整說明）
      CSPU5_U3 - Canvas - 200dots_2019: 添加一個迴圈到程式，以在畫布上畫出 200 個黑點。（點擊觀看完整說明）
      CSPU5_U3 - Canvas - introCanvas: 添加一個畫布（canvas）到你的 app 上，並將它設定成啟用。接著在你的畫布上新增一個大的圓點。（點擊觀看完整說明）
      CSPU5_U3 - Canvas - introCanvas_2018: 添加一個畫布（canvas）到你的 app 上，並將它設定成啟用。接著在你的畫布上新增一個大的圓點。（點擊觀看完整說明）
      CSPU5_U3 - Canvas - introCanvas_2019: 添加一個畫布（canvas）到你的 app 上，並將它設定成啟用。接著在你的畫布上新增一個大的圓點。（點擊觀看完整說明）
      CSPU5_U3 - Canvas - usingOffsetXY: 添加一個控制紀錄指令到你的事件處理函式裡，使用它來顯示事件參數，同時在上面點擊能觀看事件參數的內容。（點擊觀看完整說明）
      CSPU5_U3 - Canvas - usingOffsetXY_2018: 添加一個控制紀錄指令到你的事件處理函式裡，使用它來顯示事件參數，同時在上面點擊能觀看事件參數的內容。（點擊觀看完整說明）
      CSPU5_U3 - Canvas - usingOffsetXY_2019: 添加一個控制紀錄指令到你的事件處理函式裡，使用它來顯示事件參數，同時在上面點擊能觀看事件參數的內容。（點擊觀看完整說明）
      CSPU5_U3 - Conditional Basics - 6: 添加一個「設定文字」到如果陳述式的「不對，再猜猜。」之後。（點擊觀看完整說明）
      CSPU5_U3 - Design Mode - WTF Console Log: 添加 3 個控制紀錄訊息，並測試將它們輸出。（點擊觀看完整說明）
      CSPU5_U3 - Design Mode 1: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      CSPU5_U3 - Design Mode 1_2018: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      CSPU5_U3 - Design Mode 1_2019: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      CSPU5_U3 - Dice - Dropdown with Strings: 添加一個下拉式選單來選擇難度，並將所選的結果輸出到控制台。（點擊觀看完整說明）
      CSPU5_U3 - High Low - Dropdown: 添加一個下拉式清單供選擇，取代 promptNum（點擊觀看完整說明）
      CSPU5_U3 - Loops - 4: ' 使用偵錯指令以列出在第 6 點之前的清單。（點擊查看完整說明）'
      CSPU5_U3 - Loops - 4_2018: ' 使用偵錯指令以列出在第 6 點之前的清單。（點擊查看完整說明）'
      CSPU5_U3 - Loops - 4_2019: ' 使用偵錯指令以列出在第 6 點之前的清單。（點擊查看完整說明）'
      CSPU5_U3 - Loops - 9: " 修改條件讓它持續轉動，只要每個都小於 3。（點擊觀看完整說明）"
      CSPU5_U3 - Loops - 9_2018: " 修改條件讓它持續轉動，只要每個都小於 3。（點擊觀看完整說明）"
      CSPU5_U3 - Loops - 9_2019: " 修改條件讓它持續轉動，只要每個都小於 3。（點擊觀看完整說明）"
      CSPU5_U3 - Loops And Arrays - Add 5: 將陣列裡的所有數值都加 5（點擊觀看完整說明）
      CSPU5_U3 - Loops And Arrays - Add 5_2018: 將陣列裡的所有數值都加 5（點擊觀看完整說明）
      CSPU5_U3 - Loops And Arrays - Add 5_2019: 將陣列裡的所有數值都加 5（點擊觀看完整說明）
      CSPU5_U3 - Loops And Arrays - General Search Param: 添加第二個參數到搜尋函式，作為要搜尋的值。（點擊觀看完整說明）
      CSPU5_U3 - Loops And Arrays - General Search Param_2018: 添加第二個參數到搜尋函式，作為要搜尋的值。（點擊觀看完整說明）
      CSPU5_U3 - Loops And Arrays - General Search Param_2019: 添加第二個參數到搜尋函式，作為要搜尋的值。（點擊觀看完整說明）
      CSPU5_U3 - Loops And Arrays - Intro For Loop: 添加一個 for 迴圈，裡頭帶有控制紀錄，並試試輸出 3 次。（點擊觀看完整說明）
      CSPU5_U3 - Loops And Arrays - Intro For Loop_2018: 添加一個 for 迴圈，裡頭帶有控制紀錄，並試試輸出 3 次。（點擊觀看完整說明）
      CSPU5_U3 - Loops And Arrays - Intro For Loop_2019: 添加一個 for 迴圈，裡頭帶有控制紀錄，並試試輸出 3 次。（點擊觀看完整說明）
      CSPU5_U3- Variables - Text Mode: 1. 切換到文字模式並輸入說明；2. 拖曳積木到文字模式；3. 實驗程式碼完成
      CSPU5_U3- Variables - Text Mode_2018: 1. 切換到文字模式並輸入說明；2. 拖曳積木到文字模式；3. 實驗程式碼完成
      CSPU5_U3- Variables - Text Mode_2019: 1. 切換到文字模式並輸入說明；2. 拖曳積木到文字模式；3. 實驗程式碼完成
      CSPU5_U3L13 - Turtle move with button: 添加一個按鈕，讓你在點擊它時，烏龜能夠移動。（點擊觀看完整說明）
      CSPU5_U3L15 full clicker app: "完成你的點點點遊戲！\n（點此觀看完整說明）"
      CSPU5_U3L15 full clicker app_2018: "完成你的點點點遊戲！\n（點此觀看完整說明）"
      CSPU5_U3L15 full clicker app_2019: "完成你的點點點遊戲！\n（點此觀看完整說明）"
      CSPU5_U3L16 - textInput getText write: 添加一個輸入姓名、年齡的文字方塊。（點擊觀看完整說明）
      CSPU5_U3L16 - textInput getText write_2018: 添加一個輸入姓名、年齡的文字方塊。（點擊觀看完整說明）
      CSPU5_U3L16 - textInput getText write_2019: 添加一個輸入姓名、年齡的文字方塊。（點擊觀看完整說明）
      Course 2 Bee Loops 1: '嗨，我是蜜蜂。你能幫助我從這些花朵中收集花蜜嗎？ '
      Course 2 Bee Loops 13: '評量：使用重複積木來收集所有的花蜜。'
      Course 2 Maze Loops 1: 你可以只用 5 個積木就讓我抓到豬嗎？
      Course 4 Artist 1: '幫我畫一個盒子。（每個線段的長度是 200 像素） '
      Course 4 Artist 10: |-
        點擊此處再次觀看完整說明！\r\r
        這是有趣圖形的程式碼。當你每次都轉一點方向角度，重複程式碼很多次會發生什麼事呢？注意在此圖案中會轉到 420 度，這表示小藝術家晝完時，它會朝向與開始不同的方向。它會朝著從開始方向右邊 60 度的方向。
      Course 4 Artist 11: 現在來挑戰一下！多試驗、多試錯，不要指望一次就能畫出完全的圖案。想觀看更多提示？點擊這裡！
      Course 4 Artist 12: |-
        想再看個啟發人的設計或者提示嗎？點擊這裡！ \r
        \r
        除此之外，你也可以設計自己的圖形！
      Course 4 Artist 13: 還在玩啊？給你一張空白畫布，你可以在上面設計任何東西，隨你高興！
      Course 4 Artist 2: 你可以用迴圈來繪製最外圍的灰色正方形嗎？（每邊邊長為 300 像素）
      Course 4 Artist 20: 還在玩啊？給你一張空白畫布，你可以在上面設計任何東西，隨你高興！
      Course 4 Artist 3: 想一想，當你運行這個程式時會發生什麼事（你也可以直接點擊「運行」來看看）。接著，重複它一定的次數來完成這個圖形。
      Course 4 Artist 4: 一個圓有多少度？將這個數字填到重複積木中，來創造一個彩色的圓。
      Course 4 Artist 5: '畫出另一半圖形，讓它對稱。這是等邊三角形，每條邊是 50 像素。提示：你可能需要多運行幾次代碼來看看需要加上哪些積木。'
      Course 4 Artist 6: 完成程式碼以畫出這 3 個正三角形。
      Course 4 Artist 7: '現在將這個迴圈嵌套進另一個迴圈內，以畫出 10 個三角形。這就是所謂的「巢狀式迴圈」。 提示：全部 10 個三角形完成了 360 度的旋轉。  '
      Course 4 Artist 8: 用迴圈包住這些程式積木，重複執行數次來畫出這個太陽。
      Course 4 Artist 8a: 記得這個圖形嗎？現在我們要讓你建立它，但這次我們不提供任何初始積木！
      Course 4 Artist 9: "循環這個圖樣 10 次並確定在每個圖樣畫完後轉向。\\r\n"
      Course 4 Artist Binary 1: "這裡有一個函式採用 1與 0 的二進位字串，引導藝術家跟隨它們由左至右，由上到下。 當藝術家看到 1 時會填滿方格，當藝術家看到 0 時則忽略方格。\\r \n\\r\n運行這個程式，看看這位藝術家如何使用二進位繪製這個圖案。"
      Course 4 Artist Binary 1a: "這裡有一個函式採用 1與 0 的二進位字串，引導藝術家跟隨它們由左至右，由上到下。 當藝術家看到 1 時會填滿方格，當藝術家看到 0 時則忽略方格。\\r \n\\r\n運行這個程式，看看這位藝術家如何使用二進位繪製這個圖案。"
      Course 4 Artist Binary 2: 怎樣的二進制字符串可以讓你循環 8 次來畫出這樣的圖像？
      Course 4 Artist Binary 3: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      Course 4 Artist Binary 4: 圖像上每一排都是用二進位制（binary）組合成的字串。你可以重新排列它們，讓圖片上的哭臉變笑臉嗎？
      Course 4 Artist Binary 5: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      Course 4 Artist Binary 6: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      Course 4 Artist Binary 7: 完成這幅畫。
      Course 4 Artist Binary Free Play 2: '自由發揮：這裡有張空白畫布讓你創作，開心的玩吧！'
      Course 4 Artist Binary Free Play 2a: |-
        這是一個有更高解析度的畫布（16 X 16像素）！\r
        \r
        當我們開始使用這些位元創作時，看看會發生甚麼事情？
      Course 4 Artist Binary Free Play 2b: 點擊此處觀看提示。
      Course 4 Artist Binary Free Play: '自由發揮：用二進制畫出任何你喜歡的東西！'
      Course 4 Artist Binary pre1: 使用下方的程式積木讓小藝術家在網格中的第一行以二進位畫出「01010101」。
      Course 4 Artist Binary ryan: "二進制（Binary）是個只用兩種符號來表達訊息的方法。以下我們將會使用「關」（用 0 表示）及「開」（用 1 代表）。\\r\\r\n我們提供了「像素」網格，讓你在網格中移動並切換特定的像素方格以進行設計。你能夠讓小藝術家在網格中的第一行以二進位畫出「01010101」嗎？"
      Course 4 Artist For Loops 1: 使用重複積木來畫出這個邊長 50 像素的三角形。
      Course 4 Artist For Loops 11: "還記得在上一個階段，我們使用一個變數來控制圖形的邊數嗎？\n現在我們要用 counter 這個變數來做相同的事情。\n這個圖案從一個三角形開始，且每次增加 1 個邊直到畫出一個十邊形。每個圖形的邊長為 100 像素。 "
      Course 4 Artist For Loops 11a: |-
        讓我們總結一下吧！用你所知道的計數迴圈與計數器變數，來創造出每個形狀都比前一個多 2 條邊的圖案，確保每條邊長是這個多邊形邊數的 10 倍。\r
        \r
        這裡提供給你一些些參考的程式碼。
      Course 4 Artist For Loops 13: 恩…這些圖形變得愈來愈大了！我們不是已經用變數解決過這種問題了嗎？要怎麼用計數器變數來讓這些邊的長度變小呢？試著把向前移動固定數值改成向前移動（100/計數）像素。
      Course 4 Artist For Loops 14: 如果每次都多轉或少轉一些角度，那麼你可以創作出一個有規律的效果。試著重用上一關的一些代碼，但是轉89度來創造螺旋的正方形。
      Course 4 Artist For Loops 15: '自由發揮：試著用計數迴圈來繪製一些自己的畫作。我們也為你新增了一些有用的變數。'
      Course 4 Artist For Loops 2: '我已經放置了畫三角形的程式到計數迴圈（for loop）裡，計數是從 50 算到 100，每次增加 10。注意：先點擊「運行」前，確定這些程式碼，這樣你才知道如何完成後面的關卡。'
      Course 4 Artist For Loops 3: "參考上個關卡來完成這一關，這個最小的三角形邊長為 20 像素，最大的是 200 像素，每個三角形都比前一個的邊長多 20 像素。\n"
      Course 4 Artist For Loops 4: '要怎麼調整你學過的畫出正方形程式？它們之中最小的邊長是 15 像素，最大的是 300 像素，每個正方形的邊長都比上一個長 15 像素。 '
      Course 4 Artist For Loops 5: '上個關卡表現得很好！讓我們再用一次「計數器」變數積木來畫出這個很酷的圖案。 '
      Course 4 Artist For Loops 6: 自由發揮！試著用一個計數迴圈畫出你自己設計的圖案。
      Course 4 Artist For Loops 6a: 修改 3 個小地方，把上個關卡的程式修改成這樣！
      Course 4 Artist For Loops 8: |-
        只是小小的修改了上個可以繪製出這個圖案的程式，你能找出改變了什麼嗎？\r
        \r
        提示，你需要移除某個東西！
      Course 4 Artist For Loops 8a: 只是小小的修改了上個可以繪製出這個圖案的程式，你能找出改變了什麼嗎？
      Course 4 Artist For Loops 9: 你能做出一個每次向前移動 1 到 75 像素，(每次增加 1 個像素)的螺旋嗎?
      Course 4 Artist For Loops Challenge: "**挑戰：**\n你能想的到要如何建立這個多邊形圖案嗎？這個圖案的邊長是 40 像素，用你所有學過的東西試試看。"
      Course 4 Artist For Loops Challenge_a: |-
        你想得到要怎麼使用你學到的東西來完成這個圖像嗎？\r
        \r
        需要
        提示？點擊這裡。
      Course 4 Artist For Loops inspire: |-
        自由發揮靈感：你已經學會了製作這樣的圖案所需的知識了！如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東。 \r
        \r
        需要提示？點擊這裡。
      Course 4 Artist Functions 1: 你可以利用迴圈來畫出一個邊長 100 像素的正方形嗎？
      Course 4 Artist Functions 10: 你需要加入哪一個方塊來使三角形坐落在正方型上?
      Course 4 Artist Functions 11: 檢查一下這個畫立方體的程式 - 你能將它挪到一個叫做 Draw a Cube（畫個立方體）的函式嗎？
      Course 4 Artist Functions 2: '你可以畫出 3 個正方形嗎？每個正方形的邊長是 100 像素，且之間要相隔 20 像素'
      Course 4 Artist Functions 6: 你需要加入哪一個方塊來使三角形坐落在正方型上?
      Course 4 Artist Functions 8: '你已經掌握函式積木的使用技巧了嗎？讓我們修改一下代碼，來讓正方形的邊長變成 200像素。提示：在「編輯」上點一下，並在 draw a square（畫個正方形）函式編輯器上修改尺寸。記得在離開函式編輯器前點擊「保存並關閉」。 '
      Course 4 Artist Functions Inspiration: 點擊此處再次觀看提示。
      Course 4 Artist Functions challenge: 點擊此處再次觀看提示。
      Course 4 Artist Inspire: |-
        想再看個啟發人的設計或者提示嗎？點擊這裡！ \r
        \r
        除此之外，你也可以設計自己的圖形！
      Course 4 Artist Params 13: '自由發揮：這是除了你寫的函式，還有更多的函式讓你發揮。畫些令人驚嘆的東西吧！'
      Course 4 Artist Params 3: '太棒了，你能用新函式來畫出這兒的三角形嗎？第一個邊長是 25 像素，第二個是 50 像素，第三個是 75 像素。 '
      Course 4 Artist Params 6: '讓我們編輯 draw a polygon（畫個多邊形）這個函式。它已經有 length（長度）參數了，現在讓我們添加一個 sides（邊數）參數到上頭。記住要繪製的圖形要轉向的角度等於 360 除以邊長數。提示：三角形的邊長為 100 像素、六邊形是 25 像素、正方形是 50 像素。 '
      Course 4 Artist Params 8: "你能想出怎樣畫出這個圖形嗎？提示：創建一個能畫 6 條邊的函式，並命名為 hexagon（六邊形）。\n"
      Course 4 Artist Params 9: 還記得當我們用計數迴圈但移除了裡面的一個循環了嗎？讓我們做點有意思的，使用一個 draw a shape（畫個圖形）函式，裡頭帶有 sides（邊數）和 length（長度）參數。你可以重新創建這些形狀嗎？這些正方形計數應該是 5/100/5，三角形的計數應該是 10/100/10，而六邊形是 2/100/2。
      Course 4 Artist Vars 1: "你能幫我畫一個等邊三角形嗎？\\r\n\\r\n它的每條邊都正好一樣是100像素長。"
      Course 4 Artist Vars 11: 這裡是更複雜的程式，不過用的是和上個關卡相同的概念 - 你應該將 sides（邊）變數設成多少，才可以畫出這個用正方形組合出來的圖案呢？
      Course 4 Artist Vars 12: 我們將 sides（邊數）參數設為 5。添加到算式中的邊數越多，圖形就會變得愈大！注意這裡有另外一個參數叫做 length（長度）。我們可以在「移動-向前」的地方用到它。將 length 設成 75 讓每個形狀的邊長變成 75。
      Course 4 Artist Vars 13: "當一個圖形的邊愈多，每個邊的長度就要愈小，這樣你才能讓整個圖案顯示在畫面。\\r\n我們來重建這個演算式來畫出神奇的圖案，取代原來需手動設置的 length（長度）變數，我們改用運算類型的積木和一個 sides（邊數）變數。這可以確保每個圖形都能完整顯示在畫面。每個多邊形的周長都是 300 像素。\\r\n需要一些提示嗎？點擊這裡。"
      Course 4 Artist Vars 14: |-
        自由發揮：讓我們一探究竟！現在你的演算法嵌入了又一個循環中。試著改變這兩個變數的值來畫出很酷的圖形。 \r
        \r
        如果想看到更好的效果，試試使用顏色積木！在循環裡面使用隨機取色，看看效果如何。
      Course 4 Artist Vars 2: 取代向前移動 150 像素，「移動」積木現在用了一個變數叫做 length（長度）。你可以將 length 設為 150 以畫出這個新的三角形嗎？
      Course 4 Artist Vars 3: '這裡有個畫出正方形的迴圈，但是有些部分遺失了。你能修正它，讓它使用變數 lenght（長度），以找出圖案的每邊該用什麼長度嗎？ '
      Course 4 Artist Vars 4: 現在我想要製作一個長方形，它的高是寬的 2 倍。這裡有個叫作 width（寬度）的變數，請把它設為 100。你能用運算類別裡的積木來完成程式嗎？
      Course 4 Artist Vars 5: 使用變數 sides（邊數）來控制迴圈循環的次數。
      Course 4 Artist Vars 6: |-
        這是可以畫出任何規則多邊形的一些程式。有一個新的變數叫做 sides（邊），現在設定為 4。不管邊數是多少，你都能使用 sides 變數（隨著運算積木）來轉向正確的角度嗎？\r
        \r
        點擊此處以返回到提示！
      Course 4 Artist Vars 7: |-
        使用你在上個關卡學到的，用 sides（邊數）變數來建立這個六邊形。\r
        \r
        看看你在只修改 1 個值的情況下能否畫出一個三角形、正方形、五邊形或者八邊形？
      Course 4 Artist Vars 8: '自由發揮：嘗試改變這個圖形的邊數。你能改變算法，不管邊數是多少，都讓這個圖形的大小基本不變嗎？提示：如果你用長度除以邊數，這樣當邊數變多的時候，每條邊長會變短。'
      Course 4 Bee 1: "蜜蜂分不出雲的下面有什麼！\\r\n\\r\n使用「如果」積木來檢查在雲底下的是不是花朵。\\r\n\\r\n取得花蜜，如果是花朵的話。"
      Course 4 Bee 2: 使用「如果…否則」積木來檢查每個物品，看看它們是花朵還是蜂窩。如果是花朵，就收集一個花蜜…不然，就釀造一個蜂蜜。
      Course 4 Bee 3: 裡頭不是花朵就是蜂窩。這回，使用「如果…否則」積木。**如果**它是花朵，就收集一個花蜜；**否則**就收集一個蜂蜜。
      Course 4 Bee 7: 利用所有你學會的方法來收集到花蜜。紫花裡可能會有 1-3 個不等的花蜜。
      Course 4 Bee For Loops 1: 使用一個迴圈來收集每個花朵上的花蜜。
      Course 4 Bee For Loops 10: 如果循環的數字是由大排到小，每次循環就會從計數器變量中減去間隔的值。如果要依序收集 9、6、3 個花蜜，間隔數需要設成多少？
      Course 4 Bee For Loops 11: "這個迴圈是哪裡出錯了？\n看看你是不是能修正它，讓蜜蜂能收集到花蜜。"
      Course 4 Bee For Loops 2: 這是一種新的迴圈，叫做計數迴圈（for loop）。這種特別的迴圈會從 1 數到 5，計數間隔為 1，每數一次就執行迴圈的內容一次。幫助蜜蜂採集到花蜜。
      Course 4 Bee For Loops 5: '啊，計數循環（for loop）讓事情變得簡單多了！使用「計數」變數來運行同樣多次數的「採集花蜜」積木。你需要的程式碼都在這兒，看一看它是如何放在一起的，然後點擊「運行」看看它怎麼工作。 '
      Course 4 Bee For Loops 6: 你也可以使用一個「計數迴圈」來倒數，試著從 5 數到 1，間隔數為 1 的方式來採集這些花蜜。
      Course 4 Bee For Loops 8: 你能用迴圈變數來控制移動且採集花蜜嗎？
      Course 4 Bee For Loops 9: 在你的計數迴圈上的最後一個數字叫做 increment（增量），每次過了一個循環，counter 變數會依照增量的值改變。試試每次增量 2，以收集到這些花朵。
      Course 4 Bee Loops 5 NEW: 這裡有 3 朵花，你能找出你需要重複 3 次去收集花蜜的操作模式，在使用最少數量的積木情況來完成這個關卡嗎？
      Course 4 Bee Loops 5a NEW: 現在，使用迴圈來幫助蜜蜂在往蜂窩的路上採集所有的花蜜，盡可能使用最少的程式積木。當你到達目的地時，別忘了要釀成蜂蜜！
      Course 4 Bee Params 1: 寫一序列的指令以收集所有花蜜。使用 `get 3 nectar`（採集 3 個花蜜）這個函式，其功能為轉向，然後移動到目標並採花蜜，最後回到原本的位置。
      Course 4 Bee Params 2: 修改 get 3 nectar（採集 3 個花蜜）這個函式，讓我右轉找到花朵，而不是向左轉。
      Course 4 Bee Params 3 (copy 1): 現在，兩邊都有花了！也許你可以用一個參數，讓同一個函式對兩邊的花都可以使用。我們已添加了一個叫做 direction（方向）的參數到函式裡。如果這個 direction 參數等於 0，就會向左轉，如果它等於 1，就會向右轉。
      Course 4 Bee Params 3: '現在，兩邊都有花了！這裡有二個變量，分別是 left（左）、right（右）。同時我們已添加了一個叫做 direction（方向）的參數到 get 3 nectar（採集 3 個花蜜）函式裡。編輯函式 get 3 nectar，當變量 left 或者 right 傳遞進函數時，讓蜜蜂往正確的方向轉。  '
      Course 4 Bee Params 4 (copy 1): 試試用你的新函式收集所有的花朵，記住，0 = left 和 1 = right。
      Course 4 Bee Params 4 - Two WhenRun: 嘗試用你的新函式來收集所有的花朵。記得要用 left（左）和 right（右）這兩個變數。
      Course 4 Bee Params 4 backup: 如果我們只用一個函式就能收集到所有花蜜的話，那不是很棒嗎？試著添加一個名為 nectar（花蜜）的新參數到函式，來控制要採集的花蜜數量。你可能也會想為這個函式重新命名！
      Course 4 Bee Params 4: 嘗試用你的新函式來收集所有的花朵。記得要用 left（左）和 right（右）這兩個變數。
      Course 4 Bee Params 5: 讓我們從頭開始 - 你能建立一個含有 direction（方向）參數的 get 5 nectar（拿 5 罐花蜜）的函式嗎？
      Course 4 Bee Params 6 (copy 1): 試著用你的新函式來收集所有的花蜜。
      Course 4 Bee Params 6: 如果我們只用一個函式就能收集到所有花蜜的話，那不是很棒嗎？試著添加一個名為 nectar units（花蜜數）的新參數到函式，來控制要採集的花蜜數量。你可能也會想為這個函式重新命名！
      Course 4 Bee Params 7 (copy 1): 試著用你的新函式來收集所有的花蜜。
      Course 4 Bee Params 7: 試著用你的新函式來收集所有的花蜜。
      Course 4 Bee Params 8: '挑戰：現在還有蜂蜜也需要處理！重寫你的函式以使用相同數量的蜂蜜和花蜜。怎樣用這些數字來決定你應該做什麼？'
      Course 4 Bee Params Ex: 試著用你的新函式來收集所有的花蜜。
      Course 4 Binary 1: 這裡的函式使用了一個由 1 和 0 組成的二進制字串，來指導農夫從左到右，從上到下移動。當數字是 0 時會開啟方格。運行程式來看看農夫是怎樣通過二進制字串來畫圖的。
      Course 4 Binary 3: 你可以靠迴圈，只用 1 個二進制字元來畫出這個圖形嗎？
      Course 4 Binary 5 (copy 1): 怎樣的二進制字串在重複 10 次後可以畫出這個圖形？
      Course 4 Binary 5: 怎樣的二進制字串在重複 10 次後可以畫出這個圖形？
      Course 4 Binary 6 (copy 1): 怎樣的二進制字串在重複 10 次後可以畫出這個圖形？
      Course 4 Binary 6: 怎樣的二進制字串在重複 10 次後可以畫出這個圖形？
      Course 4 Binary 7: 怎樣的二進制字串在重複 10 次後可以畫出這個圖形？
      Course 4 EC 1a: 沒有規則、沒有提示。只有挑戰！
      Course 4 EC 1b: 沒有規則、沒有提示。只有挑戰！
      Course 4 EC 2a: 沒有規則、沒有提示。只有挑戰！
      Course 4 EC 2b: 沒有規則、沒有提示。只有挑戰！
      Course 4 EC 2c: 沒有規則、沒有提示。只有挑戰！
      Course 4 EC 2d: 沒有規則、沒有提示。只有挑戰！
      Course 4 EC 3: '用你在上個關卡學到的來畫出像這樣的圖形。注意：如果你合併了參數，程式碼會變得更精簡。 '
      Course 4 EC 3a: '終極挑戰：沒有規則、沒有提示、只有挑戰！'
      Course 4 Maze 1: 讓憤怒鳥抓到豬！
      Course 4 Maze 2: 小心 TNT 炸藥！
      Course 4 Maze 3: '為憤怒鳥編寫程式，想辦法讓他抓到豬。 '
      Course 4 Maze 4: 當你完成關卡後，試試看用「重複」積木來減少積木的使用數…
      Course 4 Maze 5: 你可以用最少的積木來完成這個關卡嗎？
      Course 4 Maze 6: 你可以用最少的積木來完成這個關卡嗎？
      Course 4 Play Lab For Loops 2: 這次，我們來試著算出從 1 到 100 的奇數。
      Course 4 Play Lab Params 1: 這裡有個函式叫做 `jump`（跳躍），它可以讓你的主要角色向上跳 100 像素。運行這個程式，用方向鍵來控制小狗，並利用 `jump` 函式收集所有的旗幟。
      Course 4 Play Lab Params 10: "我們已經為你添加了上一關的函數。 \\r\n\\r\n用“如果”模塊來編寫你的遊戲，當play_score玩家分數 大於某個值時，調用level_up升級 函數。 \\r\n\\r\n例如：“play_score” > 6\\r\n\\r\n玩遊戲，並且達到第4級來到達下一關。 "
      Course 4 Play Lab Params 2: "現在我們知道有些旗子太高了，跳不上去！讓我們使用「向上」、「向下」方向鍵來讓我們能夠跳躍不同的高度。\\r\n\\r\n我們添加一個 height（高度）參數到 jump（跳躍）函式裡，向上鍵用來讓小狗跳 200 像素高， 向下鍵用來讓小狗跳 100 像素高。\n"
      Course 4 Play Lab Params 3: '我們已經添加另一個參數到 jump（跳躍）函式裡，這樣一來我們就可以在其他角色使用它。每個角色有個數字作代表，從 1 開始算起。編輯這個 jump 函式，讓它使用 actor（角色）參數來讓正確的角色跳起來。 '
      Course 4 Play Lab Params 4: "這裡有個函式叫做 `patrol`（巡邏）。\n\\r\n\\r\n編輯 `patrol` 讓貓能夠向上移動 400 像素，再向下 400 像素。"
      Course 4 Play Lab Params 5: 編輯 patrol（巡邏）函式，加進一個 actor（角色）參數，這樣一來我們就可以為每個在畫面上的角色呼叫它。記住這些角色分別對應數字 1、2、3。
      Course 4 Play Lab Params 6: 添加一個名為 speed（速度）的參數到 patrol（巡邏）函式中。試著在「設定速度」積木中使用新的參數，來幫助企鵝趕在其他動物前得到所有旗幟。
      Course 4 Play Lab Params 7: "我們來點有趣的！仔細看看提供的程式碼，你能不能想像每個積木在做些什麼。 \\r\n當你完成後，使用方向鍵來控制小狗，並收集到所有的旗子。 \\r\n注意：\n你不需要對程式進行任何修改"
      Course 4 Play Lab Params 8: 使用`當角色碰到`積木，在小狗碰到其他角色時，把狗送回左上方的位置。
      Course 4 Play Lab Params 9: "這是一個早先的遊戲，但是大部分程式都隱藏了。這裡有個新函式叫做 score_points（獲得分數）。\\r\n\\r\n編輯這個函式，使得 points（分數）參數能被添加到 player_score （玩家分數）變數上。 \\r\n\\r\n變數 player_score 應該會在每次小狗的派碰到小貓時增加；在每次小貓的三明治碰到小狗時減少。 \\r\n\\r\n注意：當你完成後，點擊「運行」玩玩看，當小狗得到 6 分時，就可以進入下一關。 "
      Course 4 Play Lab Vars 1: 這一次你不需要寫任何程式，只要點擊「運行」來玩這個遊戲！在這個遊戲裡，你扮演一隻狗，要想辦法比貓拿到更多的旗子。使用向下鍵來控制狗，點你玩完了，點擊「完成」。
      Course 4 Play Lab Vars 2: 上一關的比賽一點都不公平！修改 `dog_speed`（小狗的速度）變數，確保你可以收集到比貓還要多的旗子，誰先拿到 10 個旗子就勝利！
      Course 4 Play Lab Vars 3: 使用向左鍵和向右鍵移動、向上鍵是跳，看看你能不能收集到所有的旗子。
      Course 4 Play Lab Vars 4: 現在，我們使用了一個叫作 height（高度）的變數來控制小狗能跳躍的高度。更新 height 變數來讓小狗能夠跳得夠高以碰到所有旗子。
      Course 4 Play Lab Vars 5: '讓我們來創造一個遊戲吧！首先我們需要計分，我們將分數設為 10 分。 '
      Course 4 Play Lab Vars 6: |-
        使用向右鍵扔出派。\r
        \r
        在我們的遊戲中，要怎樣才能獲得分數呢？在每次小狗用派擊中小貓時，加 1 到你的 points 變數上。使用「當角色2碰到任何東西」事件來觸發分數更新。你可以利用「points = points +1」的方式增加變數值，分數到達 10 分（每次加 1 分）就過關。
      Course 4 Play Lab Vars 7: 很好，現在我們來確定這個遊戲不至於太簡單！每當小狗（角色1）被小貓（角色2）的三明治丟到時就扣 1 分。初始分數 10 分似乎不大困難，我們把分數從 10 改成 0 後再試試吧。
      Course 4 Play Lab Vars 9: "自由遊戲時間！這裡我們目前為止玩過的所有變數，還有一些是你可能想要的。\\r\n\\r\n注意現在在工具箱裡有好多好多可以被組合的積木！在這裡，我們已經將它們分類放好。花點時間去嘗試每一個東西，當你一切就緖，就可以用重複、變數、事件類的各種指令製作一個遊戲或是故事。\\r\n\\r\n提示：可以捲動頁面以查看工作區裡的所有指令。"
      Course 4 Play Labs For Loops 1: 我們來讓狗從 1 叫到 100。使用計數迴圈（for loop）還有計數器積木，在每循環一次時就念出計數器變數當前數值。
      Course 4 Play Labs For Loops 2: 這一回，幫助小貓數數，從 1 算到 101，只要奇數。
      Course 4 Play Labs For Loops 3: 如果我們數大一點的數，也能在相同次數內完成它。試著讓小狗從 10 數到 1000，每次增加 10。
      Course 4 Play Labs For Loops 7: 你可以用一個計數迴圈來幫助我數序列出 1, 4, 7, 10, 13, 16, 19, 22, 25 嗎？
      Course 4 Playlab For Loop Freeplay: '自由發揮：使用目前為止你學會的一切製作一個遊戲，包括計數迴圈！'
      Course 4 Playlab For Loops 4b: 你能修改迴圈中的**增量**，讓比賽變得更公平嗎？
      Course 4 Playlab For Loops 5b: 調整這些計數迴圈（for loops）的間隔數，以便這兩個角色最後到達完全相同的位置。
      Course 4 Playlab For Loops 6b: "編輯這個計數迴圈去創造一個你自己覺得好玩的遊戲！\\r\n點擊「運行」然後盡你所能的點擊獨角獸，你能超過我們的最高紀錄 24 分嗎？ "
      Course 4 SCF 1: 使用建議的函式來畫出四列的六角形，注意到我們的偶數列是如何移動到右邊的嗎？
      Course 4 SCF 1a: 想想看，要怎樣用最少的積木收集到所有的花蜜？
      Course 4 SCF 1b: 想想看，要怎樣用最少的積木收集到所有的蜂蜜？
      Course 4 SCF 2: '用你在上個關卡學到的來畫出像這樣的圖形。注意：如果你合併了參數，程式碼會變得更精簡。 '
      Course 4 SCF 3 Fail 1: 你能想出如何......
      Course 4 SCF 3 Fail 2: 你能想出如何......
      Course 4 SCF 3: '用你在上個關卡學到的來畫出像這樣的圖形。注意：如果你合併了參數，程式碼會變得更精簡。 '
      Course 4 SCFL 1: 盡可能使用最少的程式積木來完成這個關卡。
      Course 4 SCFL 1a: 你能用最少的積木讓鼠奎特到達他的橡果園嗎？
      Course 4 SCFL 1b: 你能用最少的積木讓鼠奎特到達他的橡果園嗎？
      Course 4 SCFL 2: 盡可能使用最少的程式積木來完成這個關卡。
      Course 4 SCFL 3: 想想看，如何重複的繪製出這個圖？
      Course 4 SCFL 4: 想想看，如何重複的繪製出這個圖？
      Course 4 SCFL 5: 想想看，如何重複的繪製出這個圖？
      Course 4 SCFL 6: 想想看，如何用單一迴圈重複的繪製出這個圖？
      Course 4 SCFL 7: 小藝術家想要畫出海浪！想一想，要怎麼重建這個圖案？
      Course 4 SCFP 1: 建立一個帶參數的函式，讓小藝術家能往前、往後跳躍 x 像素，還有往上、往下 y 像素（使用正數和負數）。
      Course 4 SCV 1: 點擊此處再次觀看說明。
      Course 4 SCV 2: 點擊此處再次觀看說明。
      Course 4 SCV 3: |-
        現在來玩個捉人遊戲！捉住小貓得 2 分、捉住企鵝得 3 分、得到 10 分就獲勝！ \r
        但是小心，當小貓和企鵝互相碰到時，他們就會把分數要回去。\r
        \r
        添加所需要的積木，讓這個遊戲按照解說那樣運行。怎樣讓小狗能用方向鍵往所有方向移動？怎樣在小狗捉住小貓或者企鵝時加分？怎樣在小貓和企鵝碰到時扣分？
      Course 4 SCV 4: 盡可能使用最少的程式積木來完成這個關卡。
      Course 4 SCV 5: 盡可能使用最少的程式積木來完成這個關卡。
      Course 4 SCV 6: 點擊此處再次觀看說明。
      Course 4 SCVP 1: 建立一個帶參數的函式，讓小藝術家能往前、往後跳躍 x 像素，還有往上、往下 y 像素（使用正數和負數）。
      Course E MC Conditionals1: 在地下可以找到稀有資源，但這兒真的太黑了。請放置至少 2 根火把，並且開採到至少 2 塊煤炭。
      Course1BeePuzzle12: 讓我採3次花蜜來製作2次蜂蜜
      CourseD_Dance_Party_01: 將「製作新內容」程式積木拖曳至工作區中，並在「設定」程式積木內部進行連接。
      CourseD_Dance_Party_02: 讓麋鹿在 4 個小節後開始新的動作！
      CourseD_Dance_Party_03: 現在讓舞者在 6 個小節後開始新的動作！
      CourseD_Dance_Party_04: 將背景效果新增至您的程式。
      CourseD_Dance_Party_05: 使用另一個新的程式積木，讓舞者每 2 個小節改變動作。
      CourseD_Dance_Party_06: 建立一個名為「backup_dancer1」的備用舞者與貓跳舞。
      CourseD_Dance_Party_08: 您是否能讓兩個備用舞者的大小相同？
      CourseD_Dance_Party_09: 使用「設定色調」程式積木來變更舞者的顏色。
      CourseD_Dance_Party_10: 使用「開始跟隨」程式積木，讓另一個舞者也能回應音樂。
      CourseD_Dance_Party_11: '「按下向上鍵時」程式積木允許您在按下向上箭頭時執行程式碼。按下向上鍵時，嘗試讓舞者進行一個快速的動作。'
      CourseD_Dance_Party_11_5: 使用「所有鴨子」程式積木，讓鴨子一起跳舞。
      CourseD_Dance_Party_11b: 按下向右鍵時，會讓機器人「掉落」一次，而按下向上鍵時，會讓機器人跳「牙線舞」一次。盡可能快速地掉落又跳牙線舞！
      CourseD_Dance_Party_12: 隨著音樂律動！建立一支自己的舞蹈，與朋友分享。
      CourseE_HOC 2018 Level_10: 前往這個海洋遺址的入口。
      CourseE_HOC 2018 Level_11: '使用海洋遺址內部的海磷石建造一根導管。'
      CourseE_HOC 2018 Level_7a: 搜尋這些水底廢墟以尋找箱子。
      CourseE_HOC 2018 Level_9b: '使用珊瑚做為航點以找到寶藏。'
      CourseF_PlayLab_vars10: "自由遊戲時間！這裡我們目前為止玩過的所有變數，還有一些是你可能想要的。\\r\n\\r\n注意現在在工具箱裡有好多好多可以被組合的積木！在這裡，我們已經將它們分類放好。花點時間去嘗試每一個東西，當你一切就緖，就可以用重複、變數、事件類的各種指令製作一個遊戲或是故事。\\r\n\\r\n提示：可以捲動頁面以查看工作區裡的所有指令。"
      CourseF_PlayLab_vars2: 上一關的比賽一點都不公平！修改 `dog_speed`（小狗的速度）變數，確保你可以收集到比貓還要多的旗子，誰先拿到 10 個旗子就勝利！
      CourseF_PlayLab_vars3: 使用向左鍵和向右鍵移動、向上鍵是跳，看看你能不能收集到所有的旗子。
      CourseF_PlayLab_vars4: 現在，我們使用了一個叫作 height（高度）的變數來控制小狗能跳躍的高度。更新 height 變數來讓小狗能夠跳得夠高以碰到所有旗子。
      CourseF_PlayLab_vars5: '讓我們來創造一個遊戲吧！首先我們需要計分，我們將分數設為 10 分。 '
      CourseF_PlayLab_vars6: |-
        使用向右鍵扔出派。\r
        \r
        在我們的遊戲中，要怎樣才能獲得分數呢？在每次小狗用派擊中小貓時，加 1 到你的 points 變數上。使用「當角色2碰到任何東西」事件來觸發分數更新。你可以利用「points = points +1」的方式增加變數值，分數到達 10 分（每次加 1 分）就過關。
      CourseF_PlayLab_vars7: |-
        使用向右鍵扔出派。\r
        \r
        在我們的遊戲中，要怎樣才能獲得分數呢？在每次小狗用派擊中小貓時，加 1 到你的 points 變數上。使用「當角色2碰到任何東西」事件來觸發分數更新。你可以利用「points = points +1」的方式增加變數值，分數到達 10 分（每次加 1 分）就過關。
      CourseF_PlayLab_vars8: |-
        使用向右鍵扔出派。\r
        \r
        在我們的遊戲中，要怎樣才能獲得分數呢？在每次小狗用派擊中小貓時，加 1 到你的 points 變數上。使用「當角色2碰到任何東西」事件來觸發分數更新。你可以利用「points = points +1」的方式增加變數值，分數到達 10 分（每次加 1 分）就過關。
      CourseF_PlayLab_vars9: 很好，現在我們來確定這個遊戲不至於太簡單！每當小狗（角色1）被小貓（角色2）的三明治丟到時就扣 1 分。初始分數 10 分似乎不大困難，我們把分數從 10 改成 0 後再試試吧。
      Crack Random Substitution: 說明
      Crack Random Substitution_2018: 說明
      Crack Random Substitution_2019: 說明
      Crack a Caesar Cipher: 說明
      Crack a Caesar Cipher_2018: 說明
      Crack a Caesar Cipher_2019: 說明
      Dance_Party_01: 將「製作新內容」程式積木拖曳至工作區中，並在「設定」程式積木內部進行連接。
      Dance_Party_01_low: 將「製作新內容」程式積木拖曳至工作區中，並在「設定」程式積木內部進行連接。
      Dance_Party_02: 讓麋鹿在 4 個小節後開始新的動作！
      Dance_Party_03: 現在讓舞者在 6 個小節後開始新的動作！
      Dance_Party_04: 將背景效果新增至您的程式。
      Dance_Party_05: 使用另一個新的程式積木，讓舞者每 2 個小節改變動作。
      Dance_Party_06: 建立一個名為「backup_dancer1」的備用舞者與貓跳舞。
      Dance_Party_08: 您是否能讓兩個備用舞者的大小相同？
      Dance_Party_09: 使用「設定色調」程式積木來變更舞者的顏色。
      Dance_Party_10: 使用「開始跟隨」程式積木，讓另一個舞者也能回應音樂。
      Dance_Party_11.5_test: 使用「所有鴨子」程式積木，讓鴨子一起跳舞。
      Dance_Party_11: '「按下向上鍵時」程式積木允許您在按下向上箭頭時執行程式碼。按下向上鍵時，嘗試讓舞者進行一個快速的動作。'
      Dance_Party_11_5: 使用「所有鴨子」程式積木，讓鴨子一起跳舞。
      Dance_Party_11b: 按下向右鍵時，會讓機器人「掉落」一次，而按下向上鍵時，會讓機器人跳「牙線舞」一次。盡可能快速地掉落又跳牙線舞！
      Dance_Party_12: 隨著音樂律動！建立一支自己的舞蹈，與朋友分享。
      Eval Booleans 1: 布林運算子（像是 >、 <、 =）讓我們能夠比較不同的值，並返回 true 或 false。點擊「運行」來看看這個運算式的結果。
      Eval Booleans: 布林值（Booleans）讓我們能夠比較不同的值，如果二者相等則返回 true；如果沒有則返回 false。你覺得這個程式運行後的結果會是什麼呢？
      Find the Wizard: 做你喜歡的任何東西。比方說一個猜數字遊戲！
      Find the Wizard_2018: 做你喜歡的任何東西。比方說一個猜數字遊戲！
      Food Fight!: "我們已經為你添加了上一關的函數。 \\r\n\\r\n用“如果”模塊來編寫你的遊戲，當play_score玩家分數 大於某個值時，調用level_up升級 函數。 \\r\n\\r\n例如：“play_score” > 6\\r\n\\r\n玩遊戲，並且達到第4級來到達下一關。 "
      FoodFight: 這是一個遊戲範例，你也可以在 play lab 裡自己做一個。
      FoodFight_2018: 這是一個遊戲範例，你也可以在 play lab 裡自己做一個。
      Function intro Ryan: 使用「建造橋樑」功能兩次，以開闢路徑前往火把。
      Function intro Ryan_2019: 使用「建造橋樑」功能兩次，以開闢路徑前往火把。
      Get To The Goal: 做你喜歡的任何東西。比方說一個猜數字遊戲！
      Guess The Number 2: 做你喜歡的任何東西。比方說一個猜數字遊戲！
      Guess The Number: 做你喜歡的任何東西。比方說一個猜數字遊戲！
      Guess The Number_2018: 做你喜歡的任何東西。比方說一個猜數字遊戲！
      HOC 2018 Level_1: 打開箱子以取得小船。
      HOC 2018 Level_10: 前往這個海洋遺址的入口。
      HOC 2018 Level_11: '使用海洋遺址內部的海磷石建造一根導管。'
      HOC 2018 Level_12: '設計您自己的水下環境，您自己決定！'
      HOC 2018 Level_2: '走向碼頭盡頭。'
      HOC 2018 Level_3: '穿越開放海域前往鱈魚的所在位置。'
      HOC 2018 Level_4: 使用循環前往海豚的所在位置。
      HOC 2018 Level_5: 探索沉船以找到箱子。
      HOC 2018 Level_6: 在冰塊中尋找以找到鮭魚。
      HOC 2018 Level_7a: 搜尋這些水底廢墟以尋找箱子。
      HOC 2018 Level_9b: '使用珊瑚做為航點以找到寶藏。'
      Infinity_catch: 您能用方向鍵控制艾莎（角色2），讓她追上安娜嗎？
      Infinity_finale: 自由發揮吧！然後把您的成果分享出來！
      Infinity_move_collide: 阿廣是「角色1」，讓他向右走到杯麵那裡，然後在他們碰面時播放一個音效。
      Infinity_move_directions: 杯麵是「角色2」。添加移動積木讓杯麵可以透過方向鍵移動。讓它走向其它兩個角色。
      Infinity_move_right: 阿廣是「角色1」，用「移動」積木來移動阿廣往右走以碰到杯麵。
      Infinity_repeat: 用「重複無限次」積木讓安娜不停的上下移動 400 像素。
      Infinity_say: 用「說出」積木讓安娜說 Hi there.。
      Infinity_shoot: 杯麵是「角色2」。讓杯麵對著阿廣發射火箭吧！
      Infinity_shoot_directions: 阿廣是「角色3」，讓阿廣對著其他四個角色各發射一個東西出去，每一次發射後都等 1 秒再發射下一個。
      Infinity_touch_faster: 觸碰更多的雪花！
      Infinity_touch_four: 上、下、左、右移動安娜去碰四個雪花。
      Infinity_touch_score: 讓安娜去碰雪花，每次碰到就得一分。點擊「運行」後，就用方向鍵去控制安娜讓她得分吧！
      Inspirational Artwork: "自由發揮靈感：你已經學會了所有需要創建這個模式的知識了！如果這個圖形引起了你的聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。 \\r\n\\r \n想要知道我們的這些創意圖案是怎麼做出來的嗎？ "
      InspirationalArtwork: 如果這個圖形給了你靈感，試著自己做一個類似的。或者，你也可以隨意的創作。
      InspirationalArtwork_2018: 如果這個圖形給了你靈感，試著自己做一個類似的。或者，你也可以隨意的創作。
      InspirationalArtwork_2019: 如果這個圖形給了你靈感，試著自己做一個類似的。或者，你也可以隨意的創作。
      K-1 Artist 1 Assessment 1: 繪製一條短線條在上及一條長線條在右！
      K-1 Artist Loops 1: 向東移動 4 次來畫出這條線。
      K-1 Artist Loops 2: 現在，使用一個迴圈畫出相同的線條。
      K-1 Artist Loops 3: 你可以讓這些積木循環執行到畫出 6 條線嗎？
      K-1 Artist Loops 4: 能用一個迴圈幫助我們畫出這座城堡的頂端嗎？
      K-1 Artist Loops 5: 將哪些積木重複 4 次才能畫出這些樓梯？
      K-1 Artist Loops 6: '這裡需要用到 2 個迴圈：一個用來上樓梯，另一個用來下樓梯。'
      K-1 Artist Loops 7: 迴圈可以幫你完成這個圖案。
      K-1 Artist Loops 8: 這個樓梯的踏面比較長。
      K-1 Artist Loops 9: 要畫出這些樓梯，最簡單的方式是什麼？
      K-1 Artist Loops Free Play: 自由發揮，畫些有趣的東西！
      K-1 Artist1 1: 用一條線畫出這個人的腳
      K-1 Artist1 10: 用畫線和跳躍來畫出通往寶藏記號 X 的虛線路徑。
      K-1 Artist1 2: 用 2 條線畫出貓的鬍鬚！
      K-1 Artist1 3: 往東畫 2 條線再往北畫 2 條線來完成這間房子！
      K-1 Artist1 4: 向上下左右方畫線，完成城堡！
      K-1 Artist1 5.5: 使用短線條來完成城堡的第三座塔樓。
      K-1 Artist1 5: 用 2 條線來畫出這朵花的莖！
      K-1 Artist1 6: 用「跳躍」積木來完成這張圖片！
      K-1 Artist1 7: 使用跳躍積木可以向前移動但不會畫線。向前跳之後再畫一條線。
      K-1 Artist1 8: 用「跳躍」和「畫線」積木來畫出虛線。
      K-1 Artist1 9: 利用繪製和跳躍積木來完成虛線。
      K-1 Artist1 Assessment 1: 畫出短線條和長線條！
      K-1 Artist1 Assessment 2: 畫出短的虛線線條！
      K-1 Artist2 1: 在三角形底下畫一個正方形。
      K-1 Artist2 2: 跳躍並在房子旁畫出一個正方形。
      K-1 Artist2 3: 在其他的正方形上方再畫另一個正方形
      K-1 Artist2 4: 畫出一個長方形來完成這座橋。
      K-1 Artist2 5: 畫出一個長方形來完成這座橋的支柱
      K-1 Artist2 6: 藉由畫 2 個正方形來做出一個長方形！
      K-1 Artist2 Assessment1: '評量：在正方形的旁邊再畫另一個正方形。'
      K-1 Artist2 Free Draw: 自由發揮吧！
      K-1 Artist2_7: 畫出一個長方形來完成梳妝台上的抽屜！
      K-1 Bee 1: 讓我移動到花朵那兒，採集花蜜，再到蜂窩那兒，製作蜂蜜。
      K-1 Bee 10: 採集 4 個花蜜，然後釀造 2 個蜂蜜！
      K-1 Bee 11.5: 採集 4 個花蜜，然後釀造 4 個蜂蜜！
      K-1 Bee 11: 採集 3 個花蜜然後釀成 1 個蜂蜜
      K-1 Bee 12: 採集 3 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee 13: 採集 3 個花蜜然後釀成 1 個蜂蜜！
      K-1 Bee 14: 帶我到花朵那兒採集花蜜，再帶我到蜂窩那兒釀造蜂蜜！
      K-1 Bee 15: 採集 2 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee 2: 讓我移動到花朵那兒，採集花蜜，再到蜂窩那兒，製作蜂蜜。
      K-1 Bee 3: 讓我移動到花朵那兒，採集花蜜，再到蜂窩那兒，製作蜂蜜。
      K-1 Bee 4: 採集 2 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee 5: 採集 3 個花蜜然後釀成 3 個蜂蜜
      K-1 Bee 6: 採集 2 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee 7: 採集 3 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee 8: 採集 2 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee 9: 採集 2 個花蜜然後釀成 2 個蜂蜜！
      K-1 Bee Assessment 1: 採集花蜜以釀成蜂蜜！
      K-1 Bee Assessment 2: 採集花蜜以釀成蜂蜜！
      K-1 Bee Loops 1: 採集花蜜並釀成蜂蜜！
      K-1 Bee Loops 10: 收集所有的花蜜及蜂蜜。
      K-1 Bee Loops 11: 收集全部的花蜜和蜂蜜！
      K-1 Bee Loops 12: 收集所有的花蜜以及所有的蜂蜜。
      K-1 Bee Loops 2: 使用一個「重複」迴圈來移動、接著採集花蜜、然後釀造蜂蜜！
      K-1 Bee Loops 3: 使用 3 個「重複」迴圈來採集花蜜和釀造蜂蜜！
      K-1 Bee Loops 4: 使用「重複」積木讓我收集到花蜜和蜂蜜，還有移動！
      K-1 Bee Loops 5: 使用「重複」迴圈讓我收集到花蜜和蜂蜜！
      K-1 Bee Loops 6: 使用一個「重複」迴圈來採集花蜜、釀造蜂蜜、接著移動！
      K-1 Bee Loops 7: 採集花蜜並釀成蜂蜜！
      K-1 Bee Loops 8: 採集花蜜並釀成蜂蜜！
      K-1 Bee Loops 9: 採集所有的花蜜並全部釀成蜂蜜。
      K-1 Bee Loops Assessment 1: 採集花蜜以釀成蜂蜜，並使用迴圈來移動！
      K-1 Bee Loops Assessment 2: 使用迴圈採集花蜜以釀成蜂蜜！
      K-1 Bee Puzzle 12: 讓我採3次花蜜來製作2次蜂蜜
      K-1 Building a Foundation Assessment: "建一個三層的金字塔。\n沒有說明，完成它就對了！"
      K-1 Maze 10: '繞開 TNT 炸藥，讓我抓到豬！ '
      K-1 Maze 11: '沿著路走，讓我抓到那隻蠢豬，當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！沒看到牠嗎？牠在我的南邊。'
      K-1 Maze 2: 讓我往東邊移動，我要抓到這頭豬！
      K-1 Maze 3: 讓我往南邊移動，我要抓到這頭豬！
      K-1 Maze 4: 讓我往北邊移動，我要抓到這頭豬！
      K-1 Maze 5: 讓我往東邊移動，我要抓到這頭豬！
      K-1 Maze 6: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K-1 Maze 7: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K-1 Maze 8: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K-1 Maze 9: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K-1 Maze Assessment 1: 評量：抓住那頭豬！
      K-1 Maze Assessment 12: 評量級別
      K-1 Maze Assessment 13: 評量級別
      K-1 Maze Assessment 2: 評量：抓住那頭豬！
      K-1 Maze Loops 1: 讓我抓到那隻豬！
      K-1 Maze Loops 10: 讓我抓到那隻豬！用「重複」迴圈會讓問題更容易解決。
      K-1 Maze Loops 11: "讓我抓到那隻豬！\\r\n用「重複」迴圈會讓這件事變得更容易。"
      K-1 Maze Loops 12: 讓我抓到那隻豬！用「重複」迴圈會讓問題更容易解決。
      K-1 Maze Loops 2: 使用`重複`積木讓我抓到豬！
      K-1 Maze Loops 3: 讓我抓到那隻豬！一定要用重複迴圈。
      K-1 Maze Loops 4: 讓我抓到那隻豬！
      K-1 Maze Loops 5: 讓我抓到那隻豬！一定要用重複迴圈。
      K-1 Maze Loops 6: 讓我抓到那隻豬！一定要用重複迴圈。
      K-1 Maze Loops 7: 讓我抓到那隻豬！一定要用重複迴圈。
      K-1 Maze Loops 8: 使用「重複」迴圈讓我抓到豬。
      K-1 Maze Loops 9: 讓我抓到那隻豬！
      K-1 Maze Loops Assessment 1: 我們來看看你學得怎麼樣！使用「重複」迴圈來讓我抓到這頭豬！
      K-1 Maze Loops Assessment 2: 使用「重複」迴圈讓我抓到豬！
      K-1 Maze Multi 14: 評量級別
      K-1 Maze Multi 15: 評量級別
      K-1 Maze Sequence Assessment 1: |-
        讓我們看看你學得如何！\r
        先往一個方向移動，再往另一個方向移動，讓我到達豬的位置。
      K-1 Maze Sequence Assessment 2: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K-1 Maze debug Assessment 1: 評量：透過重新排列並增加程式積木來除錯，讓我抓到豬！
      K-1 artist 1 level 10: 用「跳躍」和「畫線」積木來畫出虛線。
      K-1 artist 1 level 9: 用 3 行程式碼畫出這張圖
      K-1 maze debug 1: 修改程式，讓為能到達豬的位置！
      K-1 maze debug 10: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      K-1 maze debug 11: |-
        這是個測驗！\r
        用重新排列、更換積木的方式來除錯，讓我抓到這隻豬。
      K-1 maze debug 2: 找找看遺失了哪些積木，添加積木以到達豬那兒！
      K-1 maze debug 3: 有些地方不大正確，移除這些程式積木，讓我抓到這隻豬！
      K-1 maze debug 4: 運行並檢查這些程式積木，修正他們！我想我或許是走錯方向了。
      K-1 maze debug 5: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      K-1 maze debug 6: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      K-1 maze debug 7: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      K-1 maze debug 8: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      K-1 maze debug 9: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      K2.0 sequence 1: 有個臭蟲（bug，程式中有錯誤的意思）！修正這個程式讓我到豬豬那兒。
      K2.0 sequence 2: 修正這個程式，使我能到達豬的位置！
      K2.0 sequence 5: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      K2.0 sequence 6: 找找看遺失了哪些積木，添加積木以到達豬那兒！
      K2.0 sequence 9: '挑戰：繞開 TNT 炸藥，讓我抓到豬！ '
      KTest2: 沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！
      Kiki_StarWars_Test_3: 文字
      Kiki_StarWars_Test_4: 文字
      Kiki_StarWars_Test_5: 文字
      Kiki_StarWars_Test_5_Example: 文字
      LaurelDebugging4Video1: 移動 Laurel，幫助他找到愈多的寶石愈好！
      MC Agent Freeplay: "**自由遊戲：**是自己探索的時候了！"
      MC HOC 2016 Level 10: 是時候讓你打造自己的 Minecraft 啦！你可以生成生物，讓牠們做你要牠們做的事，好好享受遊戲吧！
      MC HOC 2016 Level 2-2: 讓呆住的雞動起來。在`當生成時`裡放置`移動`和`轉向`積木。
      MC HOC 2016 Level 3: "好極了，雞動起來了！不過現在牠又停住了。\n要讓雞走來走去的方式是，使用`重複無限次`指令。\n\\r\n"
      MC HOC 2016 Level 4: 現在雞都朝同個方向移動，看起來有點怪吧，你可以利用`隨機移動`、`隨機轉向`，讓牠們看起來更真實。
      MC HOC 2016 Level 5: 這些乳牛迷路了！在`重複無限次`中放置`移動一步-向目標`積木，將牠們引領到草地。
      MC HOC 2016 Level 6: 現在請使用`生成`積木製造殭屍。在夜晚降臨時製造 3 個殭屍，並讓它們向你移動。喔，在天亮前，請保住你的小命。
      MC HOC 2016 Level 8: 到綿羊那邊的路被石牆擋住了。幸好這裡有一個苦力怕。苦力怕在你碰觸後就會爆炸。利用苦力怕炸掉牆壁，你才能到達羊旁邊！
      MC HOC 2016 New Drop: 在 Minecraft 中，綿羊身上有羊毛。在 `當使用時`指令裡放置`掉落`積木，然後走過去，讓綿羊掉出物品。
      MC HOC 2016 New Spawn: 在這個世界創造一些新生命吧，「生成」表示添加一些東西到遊戲裡，在`當運行時`下放置`生成`積木，遊戲開始時就會添加指定的東西了。
      MC HOC 2016 New Walk: 我們來探索世界吧！用方向鍵（鍵盤或畫面上的）可移動、按空格鍵（或點擊畫面空白處）可使用物品。現在請「使用」門進入房子裡。
      MC HOC 2016 SCORE LEVEL: 大部分的遊戲會有分數機制吧。與這些鐵魔像玩「人捉鬼」遊戲，再用`增加 1 分`積木，在你捉到他們時給自己加分。達到 5 分就勝利！
      MC HOC 2016 Village Test: 不好了！殭屍把你困住啦！對鐵魔像編寫程式，讓它們追蹤並攻擊殭屍！
      MC_HOC_2017_01_Cole: 您必須在途中收集所有工具。使用**箭頭按鍵**四處移動，在路徑上抵達箱子的位置便可贏得遊戲
      MC_HOC_2017_01_RETRY: '讓 Agent 前往壓板，然後按「執行」並使用箭頭按鍵，移動玩家離開房屋以收集箱子。'
      MC_HOC_2017_01_RETRY_2019: '讓 Agent 前往壓板，然後按「執行」並使用箭頭按鍵，移動玩家離開房屋以收集箱子。'
      MC_HOC_2017_02: 讓 Agent 前往壓板。
      MC_HOC_2017_02_Cole: '移動 Agent 前往壓板，這樣 {currentPlayerName} 才能前往地圖。'
      MC_HOC_2017_02_Cole_2019: '移動 Agent 前往壓板，這樣 {currentPlayerName} 才能前往地圖。'
      MC_HOC_2017_02_Kiki: 讓 Agent 前往壓板，然後讓玩家前往橙色方塊。
      MC_HOC_2017_02_Will: 讓 Agent 前往壓板。
      MC_HOC_2017_03_Cole: '設定 Agent 的代碼以開啟大門。'
      MC_HOC_2017_03_Cole_2019: '設定 Agent 的代碼以開啟大門。'
      MC_HOC_2017_03_Kiki: 讓 Agent 前往壓板。
      MC_HOC_2017_04: 變更上一個版圖的循環，讓 Agent 可以在這條河較寬的部分開闢路徑。
      MC_HOC_2017_04POINT5_Cole: 讓 Agent 前往壓板。
      MC_HOC_2017_04POINT5_RYAN: 讓 Agent 前往壓板。
      MC_HOC_2017_04POINT5_RYAN_2019: 讓 Agent 前往壓板。
      MC_HOC_2017_04_Cole: 讓 Agent 前往壓板。
      MC_HOC_2017_04_Cole_2019: 讓 Agent 前往壓板。
      MC_HOC_2017_04_Kiki: 讓 Agent 前往壓板。
      MC_HOC_2017_05: 使用一種功能，讓 Agent 可前往壓板。
      MC_HOC_2017_05_Cole: 讓玩家前往鏟子的位置。
      MC_HOC_2017_05_Cole_2019: 讓玩家前往鏟子的位置。
      MC_HOC_2017_05_Josh: 讓玩家前往鏟子的位置。
      MC_HOC_2017_05_Kiki: 讓玩家前往橙色方塊。
      MC_HOC_2017_06_Cole: 修正此代碼，讓 Agent 可建造橫跨這條河流的橋樑。
      MC_HOC_2017_06_Cole_2019: 修正此代碼，讓 Agent 可建造橫跨這條河流的橋樑。
      MC_HOC_2017_06_Josh: 修正此代碼，幫助 Agent 建造橫跨這條河流的橋樑。
      MC_HOC_2017_06_Kiki: 修正此代碼，幫助 Agent 建造橫跨這條河流的橋樑。
      MC_HOC_2017_07_Cole: 破壞冰塊，並讓 {currentPlayerName} 前往礦車。
      MC_HOC_2017_07_Cole_2019: 破壞冰塊，並讓 {currentPlayerName} 前往礦車。
      MC_HOC_2017_07_Kiki: 使用一種功能，清除前往橙色方塊的路徑。
      MC_HOC_2017_07a_Kiki: 清除前往橙色方塊的路徑。
      MC_HOC_2017_08_Cole: 變更提供的功能以於此生態域中使用。
      MC_HOC_2017_08_Kiki: 變更功能以於此版圖中使用。
      MC_HOC_2017_08_RY: 使用功能以找到穿過熔岩的路。
      MC_HOC_2017_08_Will: 使用功能以找到穿過熔岩的路。
      MC_HOC_2017_09_Cole: 設定 Agent 的程式以清除玩家的路徑。
      MC_HOC_2017_09_Kiki: 設定 Agent 的程式以清除玩家的路徑，並讓玩家前往壓板。
      MC_HOC_2017_10_Cole: 建立一種功能，幫助您完成此礦車。
      MC_HOC_2017_10_Cole_old: 建立一種功能，幫助您完成此礦車。
      MC_HOC_2017_10_Kiki: 建立一種功能，幫助您完成此礦車。
      MC_HOC_2017_10_RETRY: 建立一種功能，幫助您完成此礦車。
      MC_HOC_2017_10_RETRY_2019: 建立一種功能，幫助您完成此礦車。
      MC_HOC_2017_10_RYAN: 建立一種功能，幫助您完成此礦車。
      MC_HOC_2017_10_RYAN2: 建立一種功能，幫助您完成此礦車。
      MC_HOC_2017_13_Cole: "**自由遊戲：**是自己探索的時候了！"
      MC_HOC_2017_4.5v2: 讓 Agent 前往壓板。
      MC_HOC_2017_Ali: 使用功能以找到穿過熔岩的路。
      MC_HOC_2017_Ali_2019: 使用功能以找到穿過熔岩的路。
      MC_HOC_2017_FP10x10: "**自由遊戲：**您可以挑戰自己，在此關卡中收集到所有鑽石嗎？"
      MC_HOC_2017_FP10x10_RE: "**自由遊戲：**您可以挑戰自己，在此關卡中收集到所有鑽石嗎？"
      MC_HOC_2017_FP20x20: "**自由遊戲：**是自己探索的時候了！"
      MC_HOC_2017_FP20x20_2019: "**自由遊戲：**是自己探索的時候了！"
      MC_HOC_2017_Ryan_03: 現在就使用循環，在水中放置方塊，協助 Agent 建造橫跨河流的橋樑。
      MC_HOC_2017_Ryan_05: 破壞仙人掌，讓玩家可以抵達目的地。
      MC_HOC_Kiki_02: 讓 Agent 前往壓板。
      Middle School Hackathon Pt 1: "（點擊觀看完整說明）"
      Middle School Hackathon Pt 2: "（點擊觀看完整說明）"
      Mike Test Bee Conditionals 1: 這雲遮住了我的視線！檢查看看雲的下面是不是有花朵，只有在有花朵的時候才採集花蜜。注意，它會變來變去的！
      MikeTest3: 建立一些東西
      NEW Course 4 Artist Functions 1: 你能使用一個重複迴圈，畫出一個邊長 100 像素的正方形嗎？
      NEW Course 4 Artist Functions 10.1: 使用上個關卡的函式來畫出這個圖案。
      NEW Course 4 Artist Functions 11: 現在我們想創建一個新函式，名為 draw a line of squares（畫排正方形），用來將六個正方形畫在一橫列上。你可以用我們為你準備好的函式 draw a square 20 來建立出這個新函式嗎？
      NEW Course 4 Artist Functions 12: 使用上一關的 draw a line of squares 函式來畫出這個圖案。
      NEW Course 4 Artist Functions 13: '你可以使用 draw a line of squares（畫出方格邊）函式畫出一個星形嗎？  '
      NEW Course 4 Artist Functions 14: '自由遊戲時間！ '
      NEW Course 4 Artist Functions 2: 你可以畫出 3 個正方形嗎？每個正方形的邊長是 100 像素，且之間要相隔 20 像素
      NEW Course 4 Artist Functions 3: "這裡有個新的積木，稱為函式積木。點擊「編輯」，然後在裡頭添加能畫出一個邊長 100 像素的正方形所需的積木。\\r\n\\r\n當你編輯完這個函式後，點擊「關閉」來返回你的程式。"
      NEW Course 4 Artist Functions 4: 使用 draw a square（畫個正方形）函式來畫出這個圖案。
      NEW Course 4 Artist Functions 7: '你已經掌握函式積木的使用技巧了嗎？讓我們修改一下代碼，來讓正方形的邊長變成 200像素。在「編輯」上點一下以進入 draw a square（畫個正方形）函式。記住點擊「關閉」以離開函式編輯器。 '
      NEW Course 4 Artist Functions 8: 我們已經創建了一個新的函式給你，叫做 draw a triangle（畫個三角形）。你可以編輯這個函式定義以畫出每邊長 100 像素的三角形嗎？
      NEW Course 4 Artist Functions 9: 你可以只用 1 個積木來完成關卡嗎？
      NEW Course 4 Artist Params 1: 讓我們定義 draw a square（畫個正方形）函式以畫出邊長為 50 像素的正方形。點擊「編輯」來開始。
      NEW Course 4 Artist Params 10: '建立一個 draw a hexagon（畫個六邊形）函式積木，裡頭帶有 length（長度）參數。這個六邊形的邊長為 100 像素。 '
      NEW Course 4 Artist Params 11: 你想得到要怎麼畫出這個形狀嗎？編輯函式來使用 sides（邊長）參數。
      NEW Course 4 Artist Params 12: "你可以完成這個畫嗎？\n所有形狀的邊長都是 100 像素。"
      NEW Course 4 Artist Params 12a: 這個圖形和上一個很類似，你能使用一個計數迴圈和你的函式來完成這個圖案嗎？
      NEW Course 4 Artist Params 13: "讓我們編輯 draw a polygon（畫個多邊形）這個函式。它已經有 sides（邊數）參數了，現在讓我們添加一個 length（長度）參數到上頭。\\r\n每個圖形的周長是 200 像素，你知道當周長固定時，正多變形的邊長要怎麼樣計算出來嗎？"
      NEW Course 4 Artist Params 14: 編輯 draw a spiral edge（畫個螺旋圖）以使用 length（長度）和 sides（邊）參數，然後重新創建這些形狀。
      NEW Course 4 Artist Params 15: '自由發揮：這是除了你寫的函式，還有更多的函式讓你發揮。畫些令人驚嘆的東西吧！用不同的筆跡寬度來看看你能畫出什麼不一樣的圖形！'
      NEW Course 4 Artist Params 2: 創建一個「繪製三角形」的函式，製作一個邊長 50 像素的三角形。
      NEW Course 4 Artist Params 3: "現在讓我們使用這個函式在一列上畫出 5 個三角形\\r\n"
      NEW Course 4 Artist Params 4: 你有察覺這個函式積木有什麼不一樣嗎？點擊「運行」來看看發生什麼事。
      NEW Course 4 Artist Params 5: '將 length（長度）參數積木裡的問號（???）換成數字。這個五邊形的邊長是 100 像素。 '
      NEW Course 4 Artist Params 6: 在 length（參數）的問號處填入正確的數字以畫出這些圖形。正方形和三角形的邊長是 100 像素，六邊形的邊長是 75 像素。
      NEW Course 4 Artist Params 7: 你能完成這幅畫嗎？每一次畫的三角形的邊長比前一個多 25 像素。第一個三角形的邊長是 25 像素。
      NEW Course 4 Artist Params 8: 畫出三角形的程式壞掉了。你可以編輯並修正這個函式，以畫出邊長為 25、50、75 的三角形嗎？
      NEW Course 4 Artist Params 9: '點擊「編輯」來完成 draw a square（畫個正方形）函式的定義，並且加一個參數。它應該像三角形一樣有一個 length（長度）參數。這次，畫出 3 個正方形，邊長分別為 25、50、75 像素，每個正方形相隔 100 像素。'
      NEW Course 4 Artist Params inspire: "自由發揮靈感：你已經學會了所有需要創建這個模式的知識了！如果這個圖形引起了你的聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。 \\r\n\\r \n想要知道我們的這些創意圖案是怎麼做出來的嗎？ "
      NEW Course 4 Artist Vars 12: 現在，重新建立最後一關的演算法，並創作一個邊長 150 像素的五邊形。
      NEW Course 4 Artist Vars 2: "拖曳數字積木到「設定長度」積木和「重複」積木裡，以畫出一連串的 50 像素長的三角形。\n"
      NEW Course 4 Artist Vars 4: "讓我們再試一次！\\r\n\\r\n你可以將 length（長度）變數設為 60，以完成這個酷炫的六邊形圖案嗎？"
      NEW Course 4 Artist Vars 6: "設定正確的 length（長度），並將 length 變數拖曳到正確的位置，以畫出邊長為 100 像素的五角形。\\r\n\\r\n看看你是不是能一次就能設定好 length 的值和程式碼？"
      NEW Course 4 Bee For Loops 1: 使用一個迴圈來收集每個花朵上的花蜜。
      NEW Course 4 Bee For Loops 10a: '準備好接受挑戰了嗎？善用所學，試著解決這個問題。記住：在你想出所有步驟前，你可能必須要運行程式好多次。'
      NEW Course 4 Bee For Loops 11: 你能用迴圈變數來控制移動且採集花蜜嗎？
      NEW Course 4 Bee For Loops 2: 添加需要的代碼來讓蜜蜂收集到所有的花蜜。看看你需要用到多少程式碼才能完成關卡！（我們會在下一個關卡學到更簡單的辦法。)
      NEW Course 4 Bee For Loops 3: '啊，計數循環（for loop）讓事情變得簡單多了！你需要的程式碼都在這兒，看一看它是如何放在一起的，然後點擊「運行」看看它怎麼工作。 '
      NEW Course 4 Bee For Loops 4 4: 現在，我們需要向前移動，移動距離為計數器的次數，接著採集花蜜，採集個數也是計數器的次數。你可以使用 2 個「重複」迴圈來完成這個挑戰嗎？
      NEW Course 4 Bee For Loops 4: '把計數迴圈裡的問號（???）換成蜜蜂必須收集的最大花蜜數。 '
      NEW Course 4 Bee For Loops 5 5: 你已經掌握計數循環的使用技巧了嗎？讓我們來幫助蜜蜂取得剩餘的花蜜。
      NEW Course 4 Bee For Loops 5: 你也可以使用一個「計數迴圈」來倒數，試著從 5 數到 1，間隔數為 1 的方式來採集這些花蜜。
      NEW Course 4 Bee For Loops 6: 在你的計數迴圈上的最後一個數字叫做 increment（增量），每次過了一個循環，counter 變數會依照增量的值改變。試試每次增量 2，以收集到這些花朵。
      NEW Course 4 Bee For Loops 7: |-
        現在，我們來組合 counter 變數和一個運算積木！怎樣透過 counter 變數減少積木使用數來遊覽花園呢？這次你要怎麼做才能收集到 3、6、9、12、15個花蜜呢？counter 變數就是秘密武器！\r
        \r
        記住：如果你的循環是遞增計數的，增量就會在每次循環加到 counter 變數裡。
      NEW Course 4 Bee For Loops 8: 你明白了吧！如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      NEW Course 4 Bee For Loops 9: 如果循環的數字是由大排到小，每次循環就會從計數器變量中減去間隔的值。如果要依序收集 15、12、9、6、3 個花蜜，間隔數需要設成多少？
      NEW Course 4 Play Lab Params 11: '自由發揮的時間到了，用工具箱裡的程式積木來做一些好玩的事吧。 '
      NEW Course 4 Play Labs For Loops 8 Free Play: '自由發揮的時間到了，用工具箱裡的程式積木來做一些好玩的事吧。 '
      New Artist Project: 畫些厲害的東西！你的程式碼會被保存成專案，讓你可以隨時回來繼續創作。
      New Basketball Project: 創造你的籃球遊戲，你可以改變所有的遊戲規則。當你做好了，點擊「完成」，讓朋友可以在手機上玩你的遊戲。
      New Bounce Project: 創造你自己的彈跳遊戲。您可以改變所有看的到的東西，也可以改變規則。當你完成時，點擊完成，讓朋友可以在他們的手機上試試你的遊戲。
      New Course 4 Artist Functions Level 4: 使用 draw a square（畫個正方形）積木來完成這個圖案。
      New Gumball Project: 自由發揮吧！然後把您的成果分享出來！
      New Ice Age Project: 自由發揮吧！然後把您的成果分享出來！
      New Infinity Project: 自由發揮吧！然後把您的成果分享出來！
      New Minecraft Hero Project: "**自由遊戲：**是自己探索的時候了！"
      New Sports Project: '創建你自己的遊戲 ！這裡一切由你做主：你可以更改所有規則、混合搭配不同的運動，愈多創意愈好！當你完成後，點擊完成就可以讓你的朋友在手機上試試看你創造的遊戲。'
      Overworld Avoid Monsters: 碰上苦力怕就糟了。小心的從苦力怕身邊通過，安全地抵達你的家裡。
      Overworld Avoid Monsters_2018: 碰上苦力怕就糟了。小心的從苦力怕身邊通過，安全地抵達你的家裡。
      Overworld Avoid Monsters_2019: 碰上苦力怕就糟了。小心的從苦力怕身邊通過，安全地抵達你的家裡。
      Overworld Chop Tree - allthethings: 木材是相當重要的資源，很多東西都要用到它。走到樹木前面，使用「摧毀方塊」指令把它砍下。
      Overworld Chop Tree: 木材是相當重要的資源，很多東西都要用到它。走到樹木前面，使用「摧毀方塊」指令把它砍下。
      Overworld Chop Tree_2018: 木材是相當重要的資源，很多東西都要用到它。走到樹木前面，使用「摧毀方塊」指令把它砍下。
      Overworld Chop Tree_2019: 木材是相當重要的資源，很多東西都要用到它。走到樹木前面，使用「摧毀方塊」指令把它砍下。
      Overworld Chop Trees: 我們必須在太陽下山前蓋好房子，房屋需要用到大量木材。請將 3 棵樹全部砍倒。
      Overworld Chop Trees_2018: 我們必須在太陽下山前蓋好房子，房屋需要用到大量木材。請將 3 棵樹全部砍倒。
      Overworld Chop Trees_2019: 我們必須在太陽下山前蓋好房子，房屋需要用到大量木材。請將 3 棵樹全部砍倒。
      Overworld Free Play 20x20: 恭喜！您已完成所有關卡！現在，運用您學習到的一切，採礦、建造並創造出一些獨特的東西吧。
      Overworld Free Play 20x20_2018: 恭喜！您已完成所有關卡！現在，運用您學習到的一切，採礦、建造並創造出一些獨特的東西吧。
      Overworld Free Play 20x20_2019: 恭喜！您已完成所有關卡！現在，運用您學習到的一切，採礦、建造並創造出一些獨特的東西吧。
      Overworld House Frame Chosen: 使用你喜歡的材料建立房子的其它部份。「重複」指令會派得上用場。
      Overworld House Frame Chosen_2018: 使用你喜歡的材料建立房子的其它部份。「重複」指令會派得上用場。
      Overworld House Frame Chosen_2019: 使用你喜歡的材料建立房子的其它部份。「重複」指令會派得上用場。
      Overworld Move to Sheep: 添加第二個「移動-向前」指令，到達綿羊的位置。
      Overworld Move to Sheep_2018: 添加第二個「移動-向前」指令，到達綿羊的位置。
      Overworld Move to Sheep_2019: 添加第二個「移動-向前」指令，到達綿羊的位置。
      Overworld Place Wall: 每幢房子都是由砌牆開始的。在循環指令裡嵌入「放置」與「移動」積木，建造房子的第一部分。
      Overworld Place Wall_2018: 每幢房子都是由砌牆開始的。在循環指令裡嵌入「放置」與「移動」積木，建造房子的第一部分。
      Overworld Place Wall_2019: 每幢房子都是由砌牆開始的。在循環指令裡嵌入「放置」與「移動」積木，建造房子的第一部分。
      Overworld Plant Crops: 提前規劃是很棒的！在水的兩側種植作物，這樣以後就不會挨餓了。
      Overworld Plant Crops_2018: 提前規劃是很棒的！在水的兩側種植作物，這樣以後就不會挨餓了。
      Overworld Plant Crops_2019: 提前規劃是很棒的！在水的兩側種植作物，這樣以後就不會挨餓了。
      Overworld Powered Minecart: 做得好！您收集到了許多資源，也蓋了一棟體面的房屋。現在請從地圖邊緣鋪設一條軌道，通向你的房屋門口。
      Overworld Powered Minecart_2018: 做得好！您收集到了許多資源，也蓋了一棟體面的房屋。現在請從地圖邊緣鋪設一條軌道，通向你的房屋門口。
      Overworld Powered Minecart_2019: 做得好！您收集到了許多資源，也蓋了一棟體面的房屋。現在請從地圖邊緣鋪設一條軌道，通向你的房屋門口。
      Overworld Shear Sheep: 剪羊毛的時候到了！用「修剪」指令從 2 隻綿羊身上收集羊毛。
      Overworld Shear Sheep_2018: 剪羊毛的時候到了！用「修剪」指令從 2 隻綿羊身上收集羊毛。
      Overworld Shear Sheep_2019: 剪羊毛的時候到了！用「修剪」指令從 2 隻綿羊身上收集羊毛。
      PDK5 Functions 2: 函式（Functions）能讓你能夠製作一個屬於自己的新積木！我們已經把要繪製出一個正方形的所有積木放到一個名為 draw a square 的函式裡。你可以使用 draw a square 函式以建立這幅眼鏡？兩個鏡框之間的距離是 75 像素。
      PS - test - pixelation: 利用 0 和 1 來完成這個 X 圖形。
      PS copy 2-3 Bee Conditionals 5: "小心不要採集到沒有任何花蜜的紫花。\\r\n你必須用`如果花蜜`積木先檢查看看。"
      Pixelation - Lesson 14 - Fix bit offset: 在 Code.org 標誌中，字母 C 的串流（stream）中多了一個不必要的位元（bit），搞亂了在它之後其他的位元，害得這個標誌變得亂七八糟。抓出這個位元，將它移除，讓 Code.org 這個標誌恢復正常。
      Pixelation - Lesson 14 - Fix bit offset_2018: 在 Code.org 標誌中，字母 C 的串流（stream）中多了一個不必要的位元（bit），搞亂了在它之後其他的位元，害得這個標誌變得亂七八糟。抓出這個位元，將它移除，讓 Code.org 這個標誌恢復正常。
      Pixelation - Lesson 14 - Fix bit offset_2019: 在 Code.org 標誌中，字母 C 的串流（stream）中多了一個不必要的位元（bit），搞亂了在它之後其他的位元，害得這個標誌變得亂七八糟。抓出這個位元，將它移除，讓 Code.org 這個標誌恢復正常。
      Play Lab Rocket 1: 火箭升空，以每秒 15 米的速度航行…點擊「運行」以檢查文字在動畫播放時的問題。
      Play Lab Rocket 2B: 火箭升空，以 15 米/秒的速度航行。使用設計程序，寫出一個名為「rocket-height」的函式，以顯示一個以秒為單位的高度指示儀板，並顯示火箭從起飛到目前為止的高度。
      Project - Make Your Own Clicker Game: "完成你的點點點遊戲！\n（點此觀看完整說明）"
      Prompt Test: 做你喜歡的任何東西。比方說一個猜數字遊戲！
      Ryan - 4-5 Bee Conditionals 2: 蜂蜜現在只想要花蜜。不是全部的東西都是花朵，所以檢查每朵雲裡面是否藏著花朵。如果是的話，那就可以採集花蜜。
      Ryan - Bee Conditionals: 蜂蜜現在只想要花蜜。不是全部的東西都是花朵，所以檢查每朵雲裡面是否藏著花朵。如果是的話，那就可以採集花蜜。
      Ryan Test Locked Blocks: 這裡有個函式名叫 patrol（巡邏）。編輯它以讓貓向上移動 400 像素，然後往下 400 像素。
      Ryan_Demo: 讓麋鹿在 4 個小節後開始新的動作！
      SG U3L07 - allSeaGrass: 用迴圈的方式在圖片上添加 50 個海草。（點擊觀看完整說明）
      SG U3L07 - bubbles: 用迴圈的方式在圖片上添加 200 個泡泡。（點擊觀看完整說明）
      SG U3L07 - fish: 用迴圈的方式在圖片上添加 15 隻魚。（點擊觀看完整說明）
      SG U3L07 - seaGrass: 添加一個參數到「畫個海草」裡，以改變海草在繪製時的彎曲數。（點擊觀看完整說明）
      SG U3L07 - seaStar: 用迴圈的方式在圖片上添加 5 個海星。（點擊觀看完整說明）
      SG U3L07 - sunBeams: 用迴圈的方式在圖片上添加 100 道陽光光芒。（點擊觀看完整說明）
      SG U3L08 - fish: 添加一個參數到「畫個魚兒」裡，以改變魚兒在繪製時的尺寸。（點擊觀看完整說明）
      SG U3L08 - paramsToStarfish: 添加一個參數到「畫個海星」裡，以改變海星在繪製時的尺寸。（點擊觀看完整說明）
      SG U3L08 - seaGrass: 添加一個參數到「畫個海草」裡，以改變海草在繪製時的尺寸。（點擊觀看完整說明）
      SpecialFrozenLevel: 您已經變成一個專業的藝術家囉！開始打造一個冬季仙境吧。
      Standalone_Artist_1: "歡迎使用小藝術家！首先，讓我們試試建立一個簡單的正方形，用的是「轉向-右方」積木和「移動-向前」積木。\n每邊長度應該是 100 像素。"
      Standalone_Artist_2: 用 120 度、60度當做角度，並以 150 像素當做邊長，畫出這個菱形吧。
      Standalone_Artist_3: 你能用邊長 100 像素及旋轉 60 度，來畫出這個六邊形嗎？
      Standalone_Artist_4: 現在你有了一個新的積木可以玩囉，這個積木是迴圈（loop），它能將一連串的指令重複執行。如果你循環這些指令 6 次，會發生什麼事呢？
      Standalone_Artist_5.5: '注意我們是如何利用重複積木把畫一個菱形的程式再簡化的。接著，我們要把這個程式放到迴圈裡，並循環整個序列 12 次以畫出這朵花。提示：每畫完一次菱形後，你需要轉向 30 度，這樣子你才不會畫在相同的菱形上。'
      Standalone_Artist_5: 你需要重複畫出菱形多少次，才能用它創造出這朵花？
      Standalone_Artist_6: '循環這個畫六邊形的程式 6 次以創作出這個花樣。你知道每畫完一次六邊形要轉多少角度嗎？提示：把一圈的度數除以循環次數。'
      Standalone_Artist_7: '函式是另一種編程的工具，它可以幫助你避免重複打相同的程式編碼。這個函式會畫出花朵，所以你可以在任何你想要的時候用它來畫花朵。用這個函式和新的「跳躍」積木來繪製這些花朵。提示：花朵之間的間隔距離是 150 像素。'
      Standalone_Artist_8: 這裡有個函式名為 Draw a shape（畫個形狀），我們已經編寫了程式來畫出六角形。運行這個程式看看它會做些什麼，並試著修改函式看會發生什麼事。你可以讓它畫出一個正方形、三角形、八角形嗎？
      Standalone_Artist_9: 現在繼續創作任何你想要的圖案！你得到了一個空的函式，讓你想做啥就做啥！
      Standalone_Artist_v2: "歡迎使用小藝術家！首先，讓我們試試建立一個簡單的正方形，用的是「轉向-右方」積木和「移動-向前」積木。\n每邊長度應該是 100 像素。"
      Test of comment block: 拖曳出你想用的子目標標籤積木。
      Testing Quantum Farmer: "哇，瞧瞧這兒！\\r\n\\r\n我不知道要用多少鏟土才可以把它填平。\\r\n你可以寫一個程式，讓它不斷的用`填充`積木填土，直到地面變平坦嗎？  "
      The Vigenere Cipher Widget: 說明
      The Vigenere Cipher Widget_2018: 說明
      The Vigenere Cipher Widget_2019: 說明
      The Vigenere Cipher: 說明
      Total Artist Clone Me: '自由發揮：這是除了你寫的函式，還有更多的函式讓你發揮。畫些令人驚嘆的東西吧！用不同的筆跡寬度來看看你能畫出什麼不一樣的圖形！'
      U2 frequency caesar: 說明
      U2 frequency random sub: 說明
      U2 vigenere cipher: 說明
      U3 - Arrays - indexPractice: 將陣列的內容依序寫到畫面上。（點擊查看完整說明）
      U3 - Canvas - 200dots: 添加一個迴圈到程式，以在畫布上畫出 200 個黑點。（點擊觀看完整說明）
      U3 - Canvas - introCanvas: 添加一個畫布（canvas）到你的 app 上，並將它設定成啟用。接著在你的畫布上新增一個大的圓點。（點擊觀看完整說明）
      U3 - Canvas - usingOffsetXY: 添加一個控制紀錄指令到你的事件處理函式裡，使用它來顯示事件參數，同時在上面點擊能觀看事件參數的內容。（點擊觀看完整說明）
      U3 - Conditional Basics - 6: 添加一個「設定文字」到如果陳述式的「不對，再猜猜。」之後。（點擊觀看完整說明）
      U3 - Conditionals - intoOr: 添加 2 個用上「或」運算子的如果陳述式。（點擊觀看完整說明）
      U3 - Conditionals - introAND: 添加 2 個用上「或」運算子的如果陳述式。（點擊觀看完整說明）
      U3 - Design Mode - WTF Console Log: 添加 3 個控制紀錄訊息，並測試將它們輸出。（點擊觀看完整說明）
      U3 - Design Mode 1: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      U3 - Dice - Dropdown with Strings: 添加一個下拉式選單來選擇難度，並將所選的結果輸出到控制台。（點擊觀看完整說明）
      U3 - High Low - Dropdown: 添加一個下拉式清單供選擇，取代 promptNum（點擊觀看完整說明）
      U3 - Loops - 4: " 使用偵錯指令以列出在第 6 點之前的清單。（點擊查看完整說明）"
      U3 - Loops - 9: " 修改條件讓它持續轉動，只要每個都小於 3。（點擊觀看完整說明）"
      U3 - Loops - Continue: " 使用偵錯指令以列出在第 6 點之前的清單。（點擊查看完整說明）"
      U3 - Loops And Arrays - Add 5: 將陣列裡的所有數值都加 5（點擊觀看完整說明）
      U3 - Loops And Arrays - General Search Param: 添加第二個參數到搜尋函式，作為要搜尋的值。（點擊觀看完整說明）
      U3 - Loops And Arrays - Intro For Loop: 添加一個 for 迴圈，裡頭帶有控制紀錄，並試試輸出 3 次。（點擊觀看完整說明）
      U3 - Variables - Set to Expression with Other Variables and Turtle: "（點擊觀看完整說明）"
      U3 - Variables - Set to Expression with Turtle: "（點擊觀看全部）"
      U3 Variables flower example: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      U3 Variables gray square: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      U3 Variables randomize your square: 改變花瓣尺寸的值數次，你的圖案會有什麼變化呢？
      U3- Variables - Text Mode: 1. 切換到文字模式並輸入說明；2. 拖曳積木到文字模式；3. 實驗程式碼完成
      U3L07 - allSeaGrass: 用迴圈的方式在圖片上添加 50 個海草。（點擊觀看完整說明）
      U3L07 - allSeaGrass_2018: 用迴圈的方式在圖片上添加 50 個海草。（點擊觀看完整說明）
      U3L07 - allSeaGrass_2019: 用迴圈的方式在圖片上添加 50 個海草。（點擊觀看完整說明）
      U3L07 - bubbles: 用迴圈的方式在圖片上添加 200 個泡泡。（點擊觀看完整說明）
      U3L07 - bubbles_2018: 用迴圈的方式在圖片上添加 200 個泡泡。（點擊觀看完整說明）
      U3L07 - bubbles_2019: 用迴圈的方式在圖片上添加 200 個泡泡。（點擊觀看完整說明）
      U3L07 - fish: 用迴圈的方式在圖片上添加 15 隻魚。（點擊觀看完整說明）
      U3L07 - fish_2018: 用迴圈的方式在圖片上添加 15 隻魚。（點擊觀看完整說明）
      U3L07 - fish_2019: 用迴圈的方式在圖片上添加 15 隻魚。（點擊觀看完整說明）
      U3L07 - seaGrass: 添加一個參數到「畫個海草」裡，以改變海草在繪製時的彎曲數。（點擊觀看完整說明）
      U3L07 - seaGrass_2018: 添加一個參數到「畫個海草」裡，以改變海草在繪製時的彎曲數。（點擊觀看完整說明）
      U3L07 - seaGrass_2019: 添加一個參數到「畫個海草」裡，以改變海草在繪製時的彎曲數。（點擊觀看完整說明）
      U3L07 - seaStar: 用迴圈的方式在圖片上添加 5 個海星。（點擊觀看完整說明）
      U3L07 - seaStar_2018: 用迴圈的方式在圖片上添加 5 個海星。（點擊觀看完整說明）
      U3L07 - seaStar_2019: 用迴圈的方式在圖片上添加 5 個海星。（點擊觀看完整說明）
      U3L07 - sunBeams: 用迴圈的方式在圖片上添加 100 道陽光光芒。（點擊觀看完整說明）
      U3L07 - sunBeams_2018: 用迴圈的方式在圖片上添加 100 道陽光光芒。（點擊觀看完整說明）
      U3L07 - sunBeams_2019: 用迴圈的方式在圖片上添加 100 道陽光光芒。（點擊觀看完整說明）
      U3L08 - fish: 添加一個參數到「畫個魚兒」裡，以改變魚兒在繪製時的尺寸。（點擊觀看完整說明）
      U3L08 - fish_2018: 添加一個參數到「畫個魚兒」裡，以改變魚兒在繪製時的尺寸。（點擊觀看完整說明）
      U3L08 - fish_2019: 添加一個參數到「畫個魚兒」裡，以改變魚兒在繪製時的尺寸。（點擊觀看完整說明）
      U3L08 - paramsToStarfish: 添加一個參數到「畫個海星」裡，以改變海星在繪製時的尺寸。（點擊觀看完整說明）
      U3L08 - paramsToStarfish_2018: 添加一個參數到「畫個海星」裡，以改變海星在繪製時的尺寸。（點擊觀看完整說明）
      U3L08 - paramsToStarfish_2019: 添加一個參數到「畫個海星」裡，以改變海星在繪製時的尺寸。（點擊觀看完整說明）
      U3L08 - seaGrass: 添加一個參數到「畫個海草」裡，以改變海草在繪製時的尺寸。（點擊觀看完整說明）
      U3L08 - seaGrass_2018: 添加一個參數到「畫個海草」裡，以改變海草在繪製時的尺寸。（點擊觀看完整說明）
      U3L08 - seaGrass_2019: 添加一個參數到「畫個海草」裡，以改變海草在繪製時的尺寸。（點擊觀看完整說明）
      U3L13 - Turtle move with button: 添加一個按鈕，讓你在點擊它時，烏龜能夠移動。（點擊觀看完整說明）
      U3L15 full clicker app: "完成你的點點點遊戲！\n（點此觀看完整說明）"
      U3L16 - nameAgeTemplate: 添加一個輸入姓名、年齡的文字方塊。（點擊觀看完整說明）
      U3L16 - nameAgeTemplate_2018: 添加一個輸入姓名、年齡的文字方塊。（點擊觀看完整說明）
      U3L16 - nameAgeTemplate_2019: 添加一個輸入姓名、年齡的文字方塊。（點擊觀看完整說明）
      U3L16 - textInput getText write: 添加一個輸入姓名、年齡的文字方塊。（點擊觀看完整說明）
      U3L24 Chatbot Nested Conditionals: 添加一個條件式到你的個人助理，裡頭至少包含 3 個「否則」陳述式。
      U4 - Add Row By Hand: 添加一筆資料到你在數據檢視器上的資料表。（點擊觀看完整說明）
      U4 - Add Row By Hand_2018: 添加一筆資料到你在數據檢視器上的資料表。（點擊觀看完整說明）
      U4 - Add Row By Hand_2019: 添加一筆資料到你在數據檢視器上的資料表。（點擊觀看完整說明）
      U4 - Charts - drawChartFromRecords Options 1: 添加一個標題到你的圖表，並用「畫個資料圖表」裡可用的參數改變線條的顏色。（點擊觀看完整說明）
      U4 - Charts - drawChartFromRecords Options 1_2018: 添加一個標題到你的圖表，並用「畫個資料圖表」裡可用的參數改變線條的顏色。（點擊觀看完整說明）
      U4 - Charts - drawChartFromRecords Options 1_2019: 添加一個標題到你的圖表，並用「畫個資料圖表」裡可用的參數改變線條的顏色。（點擊觀看完整說明）
      U4 - CreateRecord - 1: 添加一個「創建紀錄」指令，並運行程式。（點擊觀看完整說明）
      U4 - CreateRecord - 1_2018: 添加一個「創建紀錄」指令，並運行程式。（點擊觀看完整說明）
      U4 - CreateRecord - 1_2019: 添加一個「創建紀錄」指令，並運行程式。（點擊觀看完整說明）
      U4 - CreateRecord - 5: 添加一個屬性到 JavaScript 物件，運行後檢視資料表，觀察改變的物件如何影響資料表。（點擊觀看完整說明）
      U4 - CreateRecord - 5_2018: 添加一個屬性到 JavaScript 物件，運行後檢視資料表，觀察改變的物件如何影響資料表。（點擊觀看完整說明）
      U4 - CreateRecord - 5_2019: 添加一個屬性到 JavaScript 物件，運行後檢視資料表，觀察改變的物件如何影響資料表。（點擊觀看完整說明）
      U4 - Objects - accessingPropertiesInArray: 存取陣列中的物件屬性。（點擊查看完整說明）
      U4 - Objects - accessingPropertiesInArray_2018: 存取陣列中的物件屬性。（點擊查看完整說明）
      U4 - Objects - accessingPropertiesInArray_2019: 存取陣列中的物件屬性。（點擊查看完整說明）
      U4 - Read Record - 1.3: "添加一個控制紀錄指令到回呼函式（callback function）裡。（點擊觀看完整說明）\\r\n"
      U4 - Read Record - 1.3_2018: "添加一個控制紀錄指令到回呼函式（callback function）裡。（點擊觀看完整說明）\\r\n"
      U4 - Read Record - 1.3_2019: "添加一個控制紀錄指令到回呼函式（callback function）裡。（點擊觀看完整說明）\\r\n"
      U4 Model App: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      U4 Model App_2018: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      U4 Model App_2019: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      U4 Model Design 1: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      U4 Model Design 1_2018: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      U4 Model Design 1_2019: 添加一個大的紅色按鈕到設計模式畫面上。（點擊觀看完整說明）
      U4 vigenere cipher 2: 說明
      U4L02 - Objects - Template1: 範本
      U4L02 - Objects - Template1_2018: 範本
      U4L02 - Objects - Template1_2019: 範本
      U4L06 Data Storage 4: 添加一個說明文字（label）及下拉清單到你的 app，然後儲存資料到你的 JSON 物件，並添加到你資料表。在確定資料儲存後，重置下拉清單。
      U4L06 Data Storage 5: '添加一對單選按鈕或是多選方塊到你的 app，接著找到方式從它們那兒收集到資料。 '
      U4L06 Data Storage 6: " 使用「取得時間」或是「取得使用者 Id」積木來收集額外的資訊。 "
      U4L06 Data Storage 7: 添加第二個畫面到我們所建立的簡單應用程式裡，用來截取使用者的圖像。在 JSON 物件被儲存到資料表之後返回畫面 1。
      Underground Avoiding Lava: 有些方塊下有熔岩，您必須先覆蓋好才能夠往前移動。這時候「如果」指令就派上用場了。在正確位置添加「移動-向前」指令，開採到這些方塊。
      Underground Avoiding Lava_2018: 有些方塊下有熔岩，您必須先覆蓋好才能夠往前移動。這時候「如果」指令就派上用場了。在正確位置添加「移動-向前」指令，開採到這些方塊。
      Underground Avoiding Lava_2019: 有些方塊下有熔岩，您必須先覆蓋好才能夠往前移動。這時候「如果」指令就派上用場了。在正確位置添加「移動-向前」指令，開採到這些方塊。
      Underground If Statements: 現在情況有些棘手。請開採 3 塊紅石，但可別掉進熔岩。使用「如果」指令，將鵝卵石放在你發現的任何熔岩上。
      Underground If Statements_2018: 現在情況有些棘手。請開採 3 塊紅石，但可別掉進熔岩。使用「如果」指令，將鵝卵石放在你發現的任何熔岩上。
      Underground If Statements_2019: 現在情況有些棘手。請開採 3 塊紅石，但可別掉進熔岩。使用「如果」指令，將鵝卵石放在你發現的任何熔岩上。
      Underground Iron: 走進熔化的岩漿是不智的行為。放置鵝卵石來造出一座橋，接著開採至少 2 個鐵方塊。
      Underground Iron_2018: 走進熔化的岩漿是不智的行為。放置鵝卵石來造出一座橋，接著開採至少 2 個鐵方塊。
      Underground Iron_2019: 走進熔化的岩漿是不智的行為。放置鵝卵石來造出一座橋，接著開採至少 2 個鐵方塊。
      Underground Mining Coal: 在地下可以找到稀有資源，但這兒真的太黑了。請放置至少 2 根火把，並且開採到至少 2 塊煤炭。
      Underground Mining Coal_2018: 在地下可以找到稀有資源，但這兒真的太黑了。請放置至少 2 根火把，並且開採到至少 2 塊煤炭。
      Underground Mining Coal_2019: 在地下可以找到稀有資源，但這兒真的太黑了。請放置至少 2 根火把，並且開採到至少 2 塊煤炭。
      XML Scratchpad: 使用這個測試標準來抓取 xml 以作為單元測試
      aE7: "如果要建立另一個像這樣的迴圈，不過把左轉改成右轉，那會發生什麼事呢？\\r\n\\r\n你可以重複那些程式來畫出波浪嗎？"
      aE8: "現在我們來循環做這件 4 次以建立這個畫框。當心轉角處 - 你不能直接轉向 90 度！\\r\n\\r\n如果循環 3 度 60 次會產生一個半圓，這些程式中的哪些積木可以額外畫出四分之一圓作為畫框圓角呢？"
      artistDebugVideo1: 使用`重複`迴圈為水添加波紋。
      artistFunctionsVideo1: 按照指示來做出你自己的函式。
      artistLoopsK9: "**挑戰：**可愛極了！讓我們在花園裡散個步。"
      beeDebugVideo1: 使用一個`重複`迴圈來收集所有的花蜜。
      birdsDebugVideo1: 順著路徑讓我抓到那隻蠢豬，當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      bounce_1: 添加一個積木到「當按向左鍵時」積木下，並點擊「運行」。讓球拍可以用向左鍵移動到目標。
      bounce_10: 畫面上方有個新的目標區域，把「得分 - 自己」和「得分 - 對手」積木分別附加到「當球命中目標時」和「當球沒有碰到球拍時」積木下以製作一個遊戲。看看在對手得到 2 分前，你能得到幾分。
      bounce_10_2018: 畫面上方有個新的目標區域，把「得分 - 自己」和「得分 - 對手」積木分別附加到「當球命中目標時」和「當球沒有碰到球拍時」積木下以製作一個遊戲。看看在對手得到 2 分前，你能得到幾分。
      bounce_10_basketball: 現在畫面上方有一個目標！將「得分 - 自己」和「得分 - 對手」積木附加在「當球命中目標時」以及「當手沒有碰到球」積木的後方，創建一個遊戲。看看在對手得到 2 分前，你可以獲得多少分。
      bounce_10_sports: 現在，目標在最上方！把「得分-自己」和「得分-對手」積木拖曳到「當球命中目標時」及「當球沒有碰到手」下以製作遊戲。試看看在對手獲得 2 分前，你能得到幾分！
      bounce_11: 現在你可以附加積木到「當運行時」積木下。你必須在超過一個地方附加新的「重新新球」積木。並且試著改變場景、球拍和球的移動速度，看看在對手得 2 分之前，你可以獲得多少分。
      bounce_11_2018: 現在你可以附加積木到「當運行時」積木下。你必須在超過一個地方附加新的「重新新球」積木。並且試著改變場景、球拍和球的移動速度，看看在對手得 2 分之前，你可以獲得多少分。
      bounce_11_basketball: 你現在可以在「當運行時」積木下方添加程式。你必須在多個地方添加「扔出新球」積木。此外，試著改變場景，或是手和球的移動速度。看看在你的對手得 2 分前，你可以得幾分！
      bounce_11_sports: 你現在可以在「當運行時」積木下方添加程式。你必須在多個地方添加「扔出新球」積木。此外，試著改變場景，或是手和球的移動速度。看看在你的對手得 2 分前，你可以得幾分！
      bounce_12: 創造你自己的彈跳遊戲。您可以改變所有看的到的東西，也可以改變規則。當你完成時，點擊完成，讓朋友可以在他們的手機上試試你的遊戲。
      bounce_12_2018: 創造你自己的彈跳遊戲。您可以改變所有看的到的東西，也可以改變規則。當你完成時，點擊完成，讓朋友可以在他們的手機上試試你的遊戲。
      bounce_12_basketball: 創造你的籃球遊戲，你可以改變所有的遊戲規則。當你做好了，點擊「完成」，讓朋友可以在手機上玩你的遊戲。
      bounce_12_sports: '創建你自己的遊戲 ！這裡一切由你做主：你可以更改所有規則、混合搭配不同的運動，愈多創意愈好！當你完成後，點擊完成就可以讓你的朋友在手機上試試看你創造的遊戲。'
      bounce_1_2018: 添加一個積木到「當按向左鍵時」積木下，並點擊「運行」。讓球拍可以用向左鍵移動到目標。
      bounce_1_basketball: 在「當按向左鍵時」積木的下方添加程式並點擊「運行」。用向左鍵來移動手來到達終點目標。
      bounce_1_sports: 移動到旗幟那兒！在「當按向左鍵時」積木下添加程式，點擊「運行」讓球員移動到目標旗幟。
      bounce_2: 添加一個積木到「當按向右鍵時」積木下，並點擊「運行」。讓球拍可以用向右鍵移動到目標。
      bounce_2_2018: 添加一個積木到「當按向右鍵時」積木下，並點擊「運行」。讓球拍可以用向右鍵移動到目標。
      bounce_2_basketball: 分別在「當按向右鍵時」和「當按向左鍵時」的積木添加程式，移動手到達兩邊的目標。
      bounce_2_sports: 現在有 2 個旗幟！在「當按向左鍵時」和「當按向右鍵時」的積木下添加程式，讓你的球員能往兩個方向移動。
      bounce_3: 現在，試試與「當按向上鍵時」積木類似的東西，將球拍移到上方的結束目標處。
      bounce_3_2018: 現在，試試與「當按向上鍵時」積木類似的東西，將球拍移到上方的結束目標處。
      bounce_4: 這一回你需要添加 4 個積木。移動球拍到 4 個目標區域以完成這個關卡。
      bounce_4_2018: 這一回你需要添加 4 個積木。移動球拍到 4 個目標區域以完成這個關卡。
      bounce_5: 我們將發送一顆球到手上。添加一個程式到「當球碰到手」積木下，確保球能到達旗幟的位置。
      bounce_5_2018: 我們將發送一顆球到手上。添加一個程式到「當球碰到手」積木下，確保球能到達旗幟的位置。
      bounce_5_basketball: 我們將發送一顆球到手上。添加一個程式到「當球碰到手」積木下，確保球能到達旗幟的位置。
      bounce_5_sports: 曲棍球即將從上頭掉下來！在「當碰到球員」積木下添加程式，以擊中目標旗幟。
      bounce_6: 現在目標在最上方，你需要附加一些積木到二個「當球碰到…」積木中間以完成這個關卡。
      bounce_6_2018: 現在目標在最上方，你需要附加一些積木到二個「當球碰到…」積木中間以完成這個關卡。
      bounce_6_basketball: 現在要完成的目標在最上方。你需要添加程式到這兩個「當球碰到…」積木中以完成這個關卡。
      bounce_6_sports: 現在要完成的目標在最上方。你需要添加程式到這兩個「當球碰到…」積木中以完成這個關卡。
      bounce_7: 新增一個積木到「當…」積木中。試著讓球反彈，直到球擊中目標區為止。
      bounce_7_2018: 新增一個積木到「當…」積木中。試著讓球反彈，直到球擊中目標區為止。
      bounce_7_basketball: 添加程式到每個「當…」積木的下方。試著將球反彈直到擊中旗幟。
      bounce_7_sports: 添加程式到每個「當…」積木的下方。試著將球反彈直到擊中旗幟。
      collector example: 把這些積木按照一個次序排列，收集所有的黃金以完成這個關卡。
      collectorDebugVideo2: 把這些積木按照一個次序排列，收集所有的黃金以完成這個關卡。
      collectorSkinVideo1: 收集所有的 4 堆以通過這個關卡。
      collectorSkinVideo2: 收集一堆黃金以通過這個關卡。
      conditionals_forvideo_harvester: 收集所有的玉米和生菜，然後收成南瓜。
      course1_artist_loops_challenge2: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      course1_artist_loops_challenge3: '啾啾！你能幫我做兩個鳥屋嗎？'
      course1_collector_loops_challenge2: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      course1_collector_loops_challenge3: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      course1_maze_seq_challenge1: '沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！'
      course1_playlab_events_challenge1: "我的朋友藏在哪兒？\n你能寫個程式把我的朋友找出來嗎？"
      course2_harvester_loops_challenge1: 收集所有的玉米。
      course2_harvester_loops_challenge2: "收集所有的生菜。\n注意避開樹木和田地！"
      course2_maze_seq_challenge1: 沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！
      course2_playlab_stage17_1: 你能讓小狗（角色1）說 Hi 嗎？
      course2_playlab_stage17_10: |-
        添加積木到「當運行時」事件，以改變背景及企鵝的移動速度。\r
        \r
        玩這個遊戲，並使用方向鍵移動企鵝，幫助他達到過關分數。
      course2_playlab_stage17_11: 創造你自己的故事，當你做好後點擊完成，讓你朋友能透過手機玩體驗你的故事。
      course2_playlab_stage17_2: 你能使小狗（角色1）說點甚麼，然後也讓小貓（角色2）說點甚麼嗎？
      course2_playlab_stage17_3: 你可以寫一個程式來讓小狗（角色1）走向小貓嗎？
      course2_playlab_stage17_4: 你可以寫一個程式來讓小狗（角色1）走向小貓，並且在小狗到達時，小貓對牠說 Hello？
      course2_playlab_stage17_5: 你可以寫一個程式讓小貓被點擊時說 Hi 嗎？
      course2_playlab_stage17_6: 現在，寫一個程式來控制企鵝，用向上/下/左/右鍵來到達所有目標！
      course2_playlab_stage17_8: "你可以讓企鵝（角色1）撞到恐龍時說「哎喲！」，然後播放一個「撞擊」的音效？\\r\n\\r\n完成後試試看，用方向鍵移動企鵝，讓這個情況發生。"
      course2_playlab_stage17_9: "添加一個積木，讓企鵝撞上章魚（角色3）時得到一分。\\r\n運行遊戲並用方向鍵移動企鵝，直到你得分為止！"
      course3_playlab_stage16_1: 你能讓這隻狗說出 Hello World 嗎？
      course3_playlab_stage16_2: 你可以先讓小狗說一些話，然後再讓小貓說一些話嗎？
      course3_playlab_stage16_3: 你可以寫個程式讓小狗移動到小貓那裡嗎？
      course3_playlab_stage16_4: 你可以寫一個程式，讓小狗移動到小貓那裡，並且在小狗到達小貓那兒時，讓小貓說 hello？
      course3_playlab_stage16_5: 你能夠添加一個積木讓章魚變得快樂嗎？
      course3_playlab_stage16_6: 創造你自己的故事，當你做好後點擊完成，讓你朋友能透過手機玩體驗你的故事。
      course3_playlab_stage17_1: 你可以寫一個程式讓章魚被點擊時說 hello 嗎？
      course3_playlab_stage17_2: 妳能寫一個程式，用上/下/左/右鍵來控制企鵝移動去碰到所有的目標嗎？
      course3_playlab_stage17_3: '「重複無限次」積木可以讓你不斷執行程式。你能把程式積木附加到裡頭，讓恐龍不停的上下移動嗎？'
      course3_playlab_stage17_4: 你可以讓企鵝撞到恐龍時說「哎喲！」，然後播放一個「撞擊」的音效？用方向鍵移動企鵝，讓這個情況發生。
      course3_playlab_stage17_5: 你能添加一個積木讓企鵝撞上章魚時就加一分嗎？運行遊戲用方向鍵移動企鵝，直到得分為止。
      course3_playlab_stage17_6: 你能添加一些積木來變更背景還有企鵝的速度嗎？用方向鍵移動牠直到得分為止。
      course3_playlab_stage17_7: 創造你自己的故事，當你做好後點擊完成，讓你朋友能透過手機玩體驗你的故事。
      course4_artist_fwp_challenge1: 試著執行這個程式，然後做些改變看看它會發生什麼事情。你能清楚的知道它是怎麼運作的嗎？(或著刪除它，然後用完全不同的程式碼來取代它)
      courseA_artist_loops10: 幫我放些石頭，我不想掉下去！
      courseA_artist_loops10_2018: 幫我放些石頭，我不想掉下去！
      courseA_artist_loops10_2019: 幫我放些石頭，我不想掉下去！
      courseA_artist_loops11: 幫我建置階梯，讓我可以看著船航行到遠方。
      courseA_artist_loops11_2018: 幫我建置階梯，讓我可以看著船航行到遠方。
      courseA_artist_loops11_2019: 幫我建置階梯，讓我可以看著船航行到遠方。
      courseA_artist_loops12: 小藝術家在遠處看到了一些有趣的東西，你覺得他看到了什麼？把它畫出來。
      courseA_artist_loops12_2018: 小藝術家在遠處看到了一些有趣的東西，你覺得他看到了什麼？把它畫出來。
      courseA_artist_loops12_2019: 小藝術家在遠處看到了一些有趣的東西，你覺得他看到了什麼？把它畫出來。
      courseA_artist_loops3: 向前畫一條線，重複 5 次。
      courseA_artist_loops3_2018: 向前畫一條線，重複 5 次。
      courseA_artist_loops3_2019: 向前畫一條線，重複 5 次。
      courseA_artist_loops7: 使用`重複`迴圈為水添加波紋。
      courseA_artist_loops7_2018: 使用`重複`迴圈為水添加波紋。
      courseA_artist_loops7_2019: 使用`重複`迴圈為水添加波紋。
      courseA_artist_loops7_forVideo: 使用`重複`迴圈為水添加波紋。
      courseA_artist_loops9: '挑戰：修復這些階梯。'
      courseA_artist_loops9_2018: '挑戰：修復這些階梯。'
      courseA_artist_loops9_2019: '挑戰：修復這些階梯。'
      courseA_artist_loops_challenge2: '啾啾！你能幫我做兩個鳥屋嗎？'
      courseA_artist_loops_challenge3: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      courseA_collector_loops1: 幫助 Laurel 移動，盡可能讓他找到所有的寶石！
      courseA_collector_loops10: 幫助 Laurel 在幽深的山谷得到所有的寶藏。
      courseA_collector_loops10_2018: 幫助 Laurel 在幽深的山谷得到所有的寶藏。
      courseA_collector_loops10_2019: 幫助 Laurel 在幽深的山谷得到所有的寶藏。
      courseA_collector_loops11: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseA_collector_loops11_2018: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseA_collector_loops11_2019: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseA_collector_loops12: '發現寶藏啦！盡可能的收集到所有的寶藏吧！'
      courseA_collector_loops12_2018: '發現寶藏啦！盡可能的收集到所有的寶藏吧！'
      courseA_collector_loops12_2019: '發現寶藏啦！盡可能的收集到所有的寶藏吧！'
      courseA_collector_loops1_2018: 幫助 Laurel 移動，盡可能讓他找到所有的寶石！
      courseA_collector_loops1_2019: 幫助 Laurel 移動，盡可能讓他找到所有的寶石！
      courseA_collector_loops2: 這裡有 3 堆黃金！把它們全部收集起來。
      courseA_collector_loops2_2018: 這裡有 3 堆黃金！把它們全部收集起來。
      courseA_collector_loops2_2019: 這裡有 3 堆黃金！把它們全部收集起來。
      courseA_collector_loops4: 修正 Laurel 的路徑，讓牠能收集到寶藏。
      courseA_collector_loops4_2018: 修正 Laurel 的路徑，讓牠能收集到寶藏。
      courseA_collector_loops4_2019: 修正 Laurel 的路徑，讓牠能收集到寶藏。
      courseA_collector_loops5: 用你學到的方法來收集到所有的寶藏。
      courseA_collector_loops5_2018: 用你學到的方法來收集到所有的寶藏。
      courseA_collector_loops5_2019: 用你學到的方法來收集到所有的寶藏。
      courseA_collector_loops6: 添加積木到程式中，以收集到所有的寶藏。
      courseA_collector_loops6_2018: 添加積木到程式中，以收集到所有的寶藏。
      courseA_collector_loops6_2019: 添加積木到程式中，以收集到所有的寶藏。
      courseA_collector_loops7: 要添加什麼程式積木才可以收集到所有的寶藏？
      courseA_collector_loops7_2018: 要添加什麼程式積木才可以收集到所有的寶藏？
      courseA_collector_loops7_2019: 要添加什麼程式積木才可以收集到所有的寶藏？
      courseA_collector_loops8: 編寫程式來收集這些寶藏。
      courseA_collector_loops8_2018: 編寫程式來收集這些寶藏。
      courseA_collector_loops8_2019: 編寫程式來收集這些寶藏。
      courseA_collector_loops9: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseA_collector_loops9_2018: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseA_collector_loops9_2019: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseA_collector_loops_challenge2: '試著收集到寶藏吧！ '
      courseA_collector_preLoops7: 這裡有 3 堆黃金！把它們全部收集起來。
      courseA_forVideoTest_artist: 使用`重複`迴圈為水添加波紋。
      courseA_maze_ramp3_2018: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseA_maze_ramp4_2018: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseA_maze_ramp5_2018: 小心 TNT 炸藥。
      courseA_maze_ramp5a_2018: 讓鳥抓到這隻豬！
      courseA_maze_ramp5a_2019: 讓鳥抓到這隻豬！
      courseA_maze_seq1: 讓這隻鳥抓到壞豬豬！
      courseA_maze_seq10: '挑戰：繞開 TNT 炸蘗，讓鳥能夠抓到豬！ '
      courseA_maze_seq11: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到那頭豬。
      courseA_maze_seq11_2018: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到那頭豬。
      courseA_maze_seq11_2019: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到那頭豬。
      courseA_maze_seq12: '抓住那頭豬！ '
      courseA_maze_seq12_2018: '抓住那頭豬！ '
      courseA_maze_seq12_2019: '抓住那頭豬！ '
      courseA_maze_seq13: 抓到這頭豬，不管你用什麼方法！
      courseA_maze_seq13_2018: 抓到這頭豬，不管你用什麼方法！
      courseA_maze_seq13_2019: 抓到這頭豬，不管你用什麼方法！
      courseA_maze_seq1_2018: 讓這隻鳥抓到壞豬豬！
      courseA_maze_seq1_2019: 讓這隻鳥抓到壞豬豬！
      courseA_maze_seq2: 有個臭蟲（bug，程式中有錯誤的意思）！修正這個程式讓我到豬豬那兒。
      courseA_maze_seq2_2018: 有個臭蟲（bug，程式中有錯誤的意思）！修正這個程式讓我到豬豬那兒。
      courseA_maze_seq3: 修正這個程式，讓鳥抓到這頭豬！
      courseA_maze_seq3_2018: 修正這個程式，讓鳥抓到這頭豬！
      courseA_maze_seq4: '「移除」一個積木，讓鳥抓到這頭豬！'
      courseA_maze_seq4_2018: '「移除」一個積木，讓鳥抓到這頭豬！'
      courseA_maze_seq6: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到這頭豬！
      courseA_maze_seq6_2018: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到這頭豬！
      courseA_maze_seq6_2019: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到這頭豬！
      courseA_maze_seq7: 想想看，這裡頭少了什麼積木，添加積木讓鳥可以抓到這頭豬！
      courseA_maze_seq7_2018: 想想看，這裡頭少了什麼積木，添加積木讓鳥可以抓到這頭豬！
      courseA_maze_seq8: 完成這個關卡，讓鳥抓到這頭豬！
      courseA_maze_seq8_2018: 完成這個關卡，讓鳥抓到這頭豬！
      courseA_maze_seq8_2019: 完成這個關卡，讓鳥抓到這頭豬！
      courseA_maze_seq9: 找出這個關卡的錯誤，添加積木以修正程式，讓鳥可以抓到這頭豬！
      courseA_maze_seq9_2018: 找出這個關卡的錯誤，添加積木以修正程式，讓鳥可以抓到這頭豬！
      courseA_maze_seq_challenge1: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      courseA_maze_seq_challenge1_2018: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      courseA_maze_seq_challenge1_2019: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      courseA_maze_seq_challenge2: 沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！
      courseA_maze_seq_challenge2_2018: 沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！
      courseA_maze_seq_challenge2_2019: 沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！
      courseA_playLab_events3: 將「移動-向左」積木連接到工作區裡的「當按向左鍵時」事件積木下。
      courseA_playLab_events3_2018: 將「移動-向左」積木連接到工作區裡的「當按向左鍵時」事件積木下。
      courseA_playLab_events3_2019: 將「移動-向左」積木連接到工作區裡的「當按向左鍵時」事件積木下。
      courseA_playlab_events_challenge1: "我的朋友藏在哪兒？\n你能寫個程式把我的朋友找出來嗎？"
      courseA_playlab_events_challenge1_2018: "我的朋友藏在哪兒？\n你能寫個程式把我的朋友找出來嗎？"
      courseA_playlab_events_challenge1_2019: "我的朋友藏在哪兒？\n你能寫個程式把我的朋友找出來嗎？"
      courseB_artist_loops3: 幫助小藝術家畫一條線，畫 7 次以繪出花園的牆。
      courseB_artist_loops3_2018: 幫助小藝術家畫一條線，畫 7 次以繪出花園的牆。
      courseB_artist_loops3_2019: 幫助小藝術家畫一條線，畫 7 次以繪出花園的牆。
      courseB_artist_loops6: 爬上藤，看看它在哪裡？
      courseB_artist_loops6_2018: 爬上藤，看看它在哪裡？
      courseB_artist_loops6_2019: 爬上藤，看看它在哪裡？
      courseB_artist_loops7: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      courseB_artist_loops7_2018: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      courseB_artist_loops7_2019: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      courseB_artist_loops_challenge2: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      courseB_artist_loops_challenge2_2018: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      courseB_artist_loops_challenge2_2019: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      courseB_collector_loops1: 這位是冒險家 Laurel！你能幫助他移動以取得寶藏嗎？
      courseB_collector_loops10: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseB_collector_loops10_2018: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseB_collector_loops10_2019: 幫助 Laurel 獲得洞穴中的所有寶石。
      courseB_collector_loops11: 發現寶藏啦！盡可能的收集到所有的寶藏吧！
      courseB_collector_loops11_2018: 發現寶藏啦！盡可能的收集到所有的寶藏吧！
      courseB_collector_loops11_2019: 發現寶藏啦！盡可能的收集到所有的寶藏吧！
      courseB_collector_loops1_2018: 這位是冒險家 Laurel！你能幫助他移動以取得寶藏嗎？
      courseB_collector_loops1_2019: 這位是冒險家 Laurel！你能幫助他移動以取得寶藏嗎？
      courseB_collector_loops2: 收集所有的 4 堆以通過這個關卡。
      courseB_collector_loops2_2018: 收集所有的 4 堆以通過這個關卡。
      courseB_collector_loops2_2019: 收集所有的 4 堆以通過這個關卡。
      courseB_collector_loops3: Laurel 要怎麼只使用一個`向東`積木收集所有的 5 堆寶石？
      courseB_collector_loops3_2018: Laurel 要怎麼只使用一個`向東`積木收集所有的 5 堆寶石？
      courseB_collector_loops3_2019: Laurel 要怎麼只使用一個`向東`積木收集所有的 5 堆寶石？
      courseB_collector_loops3_predict1: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      courseB_collector_loops4: 修正 Laurel 的路徑，讓牠能收集到寶藏！
      courseB_collector_loops4_2018: 修正 Laurel 的路徑，讓牠能收集到寶藏！
      courseB_collector_loops4_2019: 修正 Laurel 的路徑，讓牠能收集到寶藏！
      courseB_collector_loops5: '添加類似上一關的程式來收集到寶藏。'
      courseB_collector_loops5_2018: '添加類似上一關的程式來收集到寶藏。'
      courseB_collector_loops5_2019: '添加類似上一關的程式來收集到寶藏。'
      courseB_collector_loops6: 想一想要怎麼編程才能幫助 Laurel 取得這些寶藏！
      courseB_collector_loops6_2018: 想一想要怎麼編程才能幫助 Laurel 取得這些寶藏！
      courseB_collector_loops6_2019: 想一想要怎麼編程才能幫助 Laurel 取得這些寶藏！
      courseB_collector_loops7: 編寫程式來收集這些寶藏。
      courseB_collector_loops7_2018: 編寫程式來收集這些寶藏。
      courseB_collector_loops7_2019: 編寫程式來收集這些寶藏。
      courseB_collector_loops8: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseB_collector_loops8_2018: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseB_collector_loops8_2019: "**挑戰：**階梯上到處都是寶藏！寫個程式幫我得到全部的寶藏。"
      courseB_collector_loops9: '*「幫我拿到深谷裡的所有寶藏。」*'
      courseB_collector_loops9_2018: '*「幫我拿到深谷裡的所有寶藏。」*'
      courseB_collector_loops9_2019: '*「幫我拿到深谷裡的所有寶藏。」*'
      courseB_collector_loops_challenge1: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      courseB_collector_loops_challenge1_2018: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      courseB_collector_loops_challenge1_2019: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      courseB_collector_loops_challenge2a: 幫 Laurel 拿到至少 **5** 塊寶石。
      courseB_collector_loops_challenge2a_2018: 幫 Laurel 拿到至少 **5** 塊寶石。
      courseB_collector_loops_challenge2a_2019: 幫 Laurel 拿到至少 **5** 塊寶石。
      courseB_collector_loops_challenge`: '這次你只可以用一個移動積木，試著收集到寶藏吧！ '
      courseB_collector_prog1: 這位是冒險家 Laurel！你能幫助她移動以取得黃金嗎？
      courseB_collector_prog3: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      courseB_maze_seq12: 現在抓到那頭豬，不管你用什麼方法！
      courseB_maze_seq12_2018: 現在抓到那頭豬，不管你用什麼方法！
      courseB_maze_seq12_2019: 現在抓到那頭豬，不管你用什麼方法！
      courseB_maze_seq2: '*「有個臭蟲（bug，程式中有錯誤的意思）！修正這個程式讓我到豬豬那兒。」*'
      courseB_maze_seq4: 添加 2 個積木讓鳥移動到豬那裡。
      courseB_maze_seq4_2018: 添加 2 個積木讓鳥移動到豬那裡。
      courseB_maze_seq4_2019: 添加 2 個積木讓鳥移動到豬那裡。
      courseB_maze_seq6: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到這頭豬！
      courseB_maze_seq7: 想想看，這裡頭少了什麼積木，添加積木讓鳥可以抓到這頭豬！
      courseB_maze_seq8: 輪到你了！要怎麼樣才能讓鳥抓到這頭豬呢？
      courseB_maze_seq9: '挑戰：繞開 TNT 炸蘗，讓鳥能夠抓到豬！'
      courseB_maze_seq9_challenge1: "*那隻豬現在藏在哪裡？*"
      courseB_maze_seqCold: '挑戰：找出這個關卡的錯誤，添加積木以修正程式，讓鳥可以抓到這頭豬！'
      courseB_maze_seqOld: '繞開 TNT 炸藥，讓鳥抓到這頭豬！ '
      courseB_playLab_events1: 看看你是否能指出每個積木的用途。
      courseB_playLab_events1_2018: 看看你是否能指出每個積木的用途。
      courseB_playLab_events1_2019: 看看你是否能指出每個積木的用途。
      courseB_playlab_events_challenge2_embed: 這兒是你完成的遊戲！
      courseB_starWars_prog1: '幫助 BB-8 拿到所有廢金屬！'
      courseB_starWars_prog10: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog10_2018: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog10_2019: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog11: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog11_2018: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog11_2019: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog1_2018: '幫助 BB-8 拿到所有廢金屬！'
      courseB_starWars_prog1_2019: '幫助 BB-8 拿到所有廢金屬！'
      courseB_starWars_prog2: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog2_2018: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog2_2019: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog3: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog3_2018: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog3_2019: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog4: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog4_2018: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog4_2019: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog5: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog5_2018: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog5_2019: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog6: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog6_2018: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog6_2019: 幫助 BB-8 收集到**所有的**發光廢金屬
      courseB_starWars_prog7: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog7_2018: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog7_2019: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog8: "**挑戰：**幫助 BB-8 收集所有的發光廢金屬"
      courseB_starWars_prog8_2018: "**挑戰：**幫助 BB-8 收集所有的發光廢金屬"
      courseB_starWars_prog8_2019: "**挑戰：**幫助 BB-8 收集所有的發光廢金屬"
      courseB_starWars_prog9: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog9_2018: 幫助 BB-8 收集到所有發光的廢金屬
      courseB_starWars_prog9_2019: 幫助 BB-8 收集到所有發光的廢金屬
      courseC19_playLab_EOC5: 現在花些時間確保遊戲按照你想要的方式運作。包括輸或贏的方式，還有滿足的條件設定。
      courseC_PlayLab_events3: 你可以寫一個程式來讓小狗（角色1）走向小貓嗎？
      courseC_PlayLab_events3_2018: 你可以寫一個程式來讓小狗（角色1）走向小貓嗎？
      courseC_PlayLab_events3_2019: 你可以寫一個程式來讓小狗（角色1）走向小貓嗎？
      courseC_artist_prog5: |-
        這棟房子需要屋頂！請畫出三角形。
        提示：三邊都是同樣的長度。
      courseC_artist_prog5_2018: |-
        這棟房子需要屋頂！請畫出三角形。
        提示：三邊都是同樣的長度。
      courseC_artist_prog5_2019: |-
        這棟房子需要屋頂！請畫出三角形。
        提示：三邊都是同樣的長度。
      courseC_artist_prog7: "**挑戰：**這個標記非常特別！你想的到要怎麼畫出這種輪廓嗎？"
      courseC_artist_prog7_2018: "**挑戰：**這個標記非常特別！你想的到要怎麼畫出這種輪廓嗎？"
      courseC_artist_prog7_2019: "**挑戰：**這個標記非常特別！你想的到要怎麼畫出這種輪廓嗎？"
      courseC_collector_prog1: 利用這些程式積木，幫 Laurel 收集寶石。
      courseC_collector_prog1_2018: 利用這些程式積木，幫 Laurel 收集寶石。
      courseC_collector_prog1_2019: 利用這些程式積木，幫 Laurel 收集寶石。
      courseC_collector_prog2: 幫 Laurel 移動到寶藏的位置，接著使用`收集`積木拿到寶藏。
      courseC_collector_prog2_2018: 幫 Laurel 移動到寶藏的位置，接著使用`收集`積木拿到寶藏。
      courseC_collector_prog2_2019: 幫 Laurel 移動到寶藏的位置，接著使用`收集`積木拿到寶藏。
      courseC_collector_prog8: '*「就是這樣！繼續幫助我收集所有的硬幣。」*'
      courseC_collector_prog8_2018: '*「就是這樣！繼續幫助我收集所有的硬幣。」*'
      courseC_collector_prog8_2019: '*「就是這樣！繼續幫助我收集所有的硬幣。」*'
      courseC_collector_prog9: '*「讓我們獲得所有的硬幣！」*'
      courseC_collector_prog9_2018: '*「讓我們獲得所有的硬幣！」*'
      courseC_collector_prog9_2019: '*「讓我們獲得所有的硬幣！」*'
      courseC_collector_progA: 幫 Laurel 收集到所有寶石。
      courseC_harvester_loops8: "**挑戰：**收集所有的玉米和所有的南瓜。"
      courseC_harvester_loops8_2018: "**挑戰：**收集所有的玉米和所有的南瓜。"
      courseC_harvester_loops8_2019: "**挑戰：**收集所有的玉米和所有的南瓜。"
      courseC_harvester_loops_challenge1: 收集所有的玉米。
      courseC_harvester_loops_challenge1a: 收集所有的玉米。
      courseC_harvester_loops_challenge1a_2018: 收集所有的玉米。
      courseC_harvester_loops_challenge1a_2019: 收集所有的玉米。
      courseC_harvester_loops_challenge2: "收集所有的生菜。\n注意避開樹木和田地！"
      courseC_harvester_loops_challenge2_2018: "收集所有的生菜。\n注意避開樹木和田地！"
      courseC_harvester_loops_challenge2_2019: "收集所有的生菜。\n注意避開樹木和田地！"
      courseC_maze_debugging10: 找出這個關卡的錯誤，重新調整積木的順序，並添加積木，讓使我能移動到豬那兒！
      courseC_maze_debugging7: "**挑戰：**找出關卡裡的錯誤，重新組合、添加、移除程式積木。"
      courseC_maze_debugging7_2018: "**挑戰：**找出關卡裡的錯誤，重新組合、添加、移除程式積木。"
      courseC_maze_debugging7_2019: "**挑戰：**找出關卡裡的錯誤，重新組合、添加、移除程式積木。"
      courseC_maze_loops5: '*「愈快抓到豬愈好！」*'
      courseC_maze_programming1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseC_maze_programming1_2018: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseC_maze_programming1_2019: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseC_maze_programming3: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseC_maze_programming3_2018: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseC_maze_programming3_2019: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseC_maze_programming4: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseC_maze_programming4_2018: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseC_maze_programming4_2019: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseC_maze_programming5: 小心 TNT 炸藥。
      courseC_maze_programming5_2018: 小心 TNT 炸藥。
      courseC_maze_programming5_2019: 小心 TNT 炸藥。
      courseC_maze_programming6: '「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」'
      courseC_maze_programming6_2018: '「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」'
      courseC_maze_programming6_2019: '「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」'
      courseC_maze_programming7: "**挑戰：**這個程式有很多的臭蟲（bugs，錯誤的地方），你必須移除一些，同時添加其它的積木。"
      courseC_maze_programming7_2018: "**挑戰：**這個程式有很多的臭蟲（bugs，錯誤的地方），你必須移除一些，同時添加其它的積木。"
      courseC_maze_programming7_2019: "**挑戰：**這個程式有很多的臭蟲（bugs，錯誤的地方），你必須移除一些，同時添加其它的積木。"
      courseC_maze_programming8: '*「保持冷靜，幫我找到那隻壞豬豬」*'
      courseC_maze_programming8_2018: '*「保持冷靜，幫我找到那隻壞豬豬」*'
      courseC_maze_programming8_2019: '*「保持冷靜，幫我找到那隻壞豬豬」*'
      courseC_maze_programming8_predict1: '*「保持冷靜，幫我找到那隻壞豬豬」*'
      courseC_maze_programming8_predict1_2018: '*「保持冷靜，幫我找到那隻壞豬豬」*'
      courseC_maze_programming8_predict1_2019: '*「保持冷靜，幫我找到那隻壞豬豬」*'
      courseC_maze_programming9: '*「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」*'
      courseC_maze_programming9_2018: '*「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」*'
      courseC_maze_programming9_2019: '*「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」*'
      courseD_artist_binary1: 使用下方的程式積木讓小藝術家在網格中的第一行以二進位畫出「01010101」。
      courseD_artist_binary1_2018: 使用下方的程式積木讓小藝術家在網格中的第一行以二進位畫出「01010101」。
      courseD_artist_binary1_2019: 使用下方的程式積木讓小藝術家在網格中的第一行以二進位畫出「01010101」。
      courseD_artist_binary4: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      courseD_artist_binary4_2018: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      courseD_artist_binary4_2019: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      courseD_artist_binary6: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      courseD_artist_binary6_2018: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      courseD_artist_binary6_2019: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      courseD_artist_binary7: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      courseD_artist_binary7_2018: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      courseD_artist_binary7_2019: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      courseD_artist_binary8: 完成這些程式來畫出圖案。
      courseD_artist_binary8_2018: 完成這些程式來畫出圖案。
      courseD_artist_binary8_2019: 完成這些程式來畫出圖案。
      courseD_artist_binary8_predict1: 完成這些程式來畫出圖案。
      courseD_artist_binary8_predict1_2018: 完成這些程式來畫出圖案。
      courseD_artist_binary8_predict1_2019: 完成這些程式來畫出圖案。
      courseD_artist_nestedLoops9: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops9_2018: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops9_2019: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops9_predict1: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops9_predict1_2018: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_nestedLoops9_predict1_2019: "**挑戰：**想的到要怎麼製作出這樣的圖像嗎？"
      courseD_artist_ramp11: 現在用小藝術家來畫出一個正方形！
      courseD_artist_ramp12: 使用你學到的方法，在正方形裡頭畫出這個三角形。
      courseD_autorun_binary4_2019: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      courseD_autorun_binary6_2019: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      courseD_autorun_binary7_2019: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      courseD_autorun_binary8_2019: 完成這些程式來畫出圖案。
      courseD_autorun_binary8_predict1_2019: 完成這些程式來畫出圖案。
      courseD_bee_conditionals1: 檢查看看雲裡面是不是有花朵，如果有的話，就採集花蜜。
      courseD_bee_conditionals1_predict1: 檢查看看雲裡面是不是有花朵，如果有的話，就採集花蜜。
      courseD_bee_conditionals1_predict1_2018: 檢查看看雲裡面是不是有花朵，如果有的話，就採集花蜜。
      courseD_bee_conditionals1_predict1_2019: 檢查看看雲裡面是不是有花朵，如果有的話，就採集花蜜。
      courseD_bee_conditionals7: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals7_2018: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals7_2019: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals7_predict2: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals7_predict2_2018: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_conditionals7_predict2_2019: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseD_bee_debugging3: 修復錯誤（可能不只一個）以收集所有的花蜜與蜂蜜。
      courseD_bee_nestedLoops2: 這次，幫蜜蜂收集到所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_2018: 這次，幫蜜蜂收集到所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_2019: 這次，幫蜜蜂收集到所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_predict1: 這次，幫蜜蜂收集到所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_predict1_2018: 這次，幫蜜蜂收集到所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_predict1_2019: 這次，幫蜜蜂收集到所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops3: 使用巢狀迴圈從每朵花中收集所有的花蜜。
      courseD_bee_nestedLoops5: '使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。'
      courseD_bee_nestedLoops6_2018: 帶我到那朵向日葵的位置!
      courseD_bee_nestedLoops8: '使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。'
      courseD_bee_nestedLoops8_2018: '使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。'
      courseD_bee_nestedLoops8_2019: '使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。'
      courseD_bounce_events10: 畫面上方有個新的目標區域，把「得分 - 自己」和「得分 - 對手」積木分別附加到「當球命中目標時」和「當球沒有碰到球拍時」積木下以製作一個遊戲。看看在對手得到 2 分前，你能得到幾分。
      courseD_bounce_events11: 現在你可以附加積木到「當運行時」積木下。你必須在超過一個地方附加新的「重新新球」積木。並且試著改變場景、球拍和球的移動速度，看看在對手得 2 分之前，你可以獲得多少分。
      courseD_bounce_events12: 創造你自己的彈跳遊戲。您可以改變所有看的到的東西，也可以改變規則。當你完成時，點擊完成，讓朋友可以在他們的手機上試試你的遊戲。
      courseD_bounce_events2: 添加一個積木到「當按向右鍵時」積木下，並點擊「運行」。讓球拍可以用向右鍵移動到目標。
      courseD_bounce_events3: 現在，試試與「當按向上鍵時」積木類似的東西，將球拍移到上方的結束目標處。
      courseD_bounce_events3s: 現在，試試與「當按向上鍵時」積木類似的東西，將球拍移到上方的結束目標處。
      courseD_bounce_events4: 這一回你需要添加 4 個積木。移動球拍到 4 個目標區域以完成這個關卡。
      courseD_bounce_events4s: 這一回你需要添加 4 個積木。移動球拍到 4 個目標區域以完成這個關卡。
      courseD_bounce_events5: 我們將發送一顆球到手上。添加一個程式到「當球碰到手」積木下，確保球能到達旗幟的位置。
      courseD_bounce_events6: 現在目標在最上方，你需要附加一些積木到二個「當球碰到…」積木中間以完成這個關卡。
      courseD_bounce_events7: 新增一個積木到「當…」積木中。試著讓球反彈，直到球擊中目標區為止。
      courseD_collector_nested_loops_challenge2a: 幫 Laurel 收集到至少 2 塊寶石。
      courseD_collector_ramp10: 幫 Laurel 收集到所有寶石。
      courseD_collector_ramp8: 幫 Laurel 收集到所有寶石。
      courseD_collector_ramp9: 幫 Laurel 收集到所有寶石。
      courseD_debugging_3: 修復錯誤（可能不只一個）以收集所有的花蜜與蜂蜜。
      courseD_farmer_condLoops3: '*「玉米、生菜、南瓜！幫我收成它們。」*'
      courseD_farmer_condLoops3_2018: '*「玉米、生菜、南瓜！幫我收成它們。」*'
      courseD_farmer_condLoops3_2019: '*「玉米、生菜、南瓜！幫我收成它們。」*'
      courseD_farmer_condLoops8: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops8_2018: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops8_2019: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_2018: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_2019: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_predict1: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_predict1_2018: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_predict1_2019: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_conditionals6: 使用「當…」迴圈來輕鬆的填滿所有坑洞。
      courseD_farmer_while6: 使用「當…」迴圈來輕鬆的填滿所有坑洞。
      courseD_farmer_while6_2018: 使用「當…」迴圈來輕鬆的填滿所有坑洞。
      courseD_farmer_while6_2019: 使用「當…」迴圈來輕鬆的填滿所有坑洞。
      courseD_maze_nestedLoops4: '帶我到那朵向日葵的位置!'
      courseD_maze_nestedLoops4_2018: '帶我到那朵向日葵的位置!'
      courseD_maze_nestedLoops4_2019: '帶我到那朵向日葵的位置!'
      courseD_maze_nestedLoops6: 帶我到那朵向日葵的位置!
      courseD_maze_nestedLoops6_2018: 帶我到那朵向日葵的位置!
      courseD_maze_nestedLoops6_2019: 帶我到那朵向日葵的位置!
      courseD_maze_ramp1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_maze_ramp1_2018: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_maze_ramp1_2019: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_maze_ramp2: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成編碼。
      courseD_maze_ramp2_2018: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成編碼。
      courseD_maze_ramp2_2019: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成編碼。
      courseD_maze_ramp3: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseD_maze_ramp3_2018: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseD_maze_ramp3_2019: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseD_maze_ramp4: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseD_maze_ramp4_2018: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseD_maze_ramp4_2019: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseD_maze_ramp5: 小心 TNT 炸藥。
      courseD_maze_ramp5_2018: 小心 TNT 炸藥。
      courseD_maze_ramp5_2019: 小心 TNT 炸藥。
      courseD_maze_ramp6: '「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」'
      courseD_maze_ramp6a: '「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」'
      courseD_maze_ramp7: 讓鳥抓到這隻豬！
      courseD_maze_until10: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_predict2: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_predict2_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_predict2_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until6: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until6_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until6_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until7: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until7_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until7_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until8: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until8_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until9: "**挑戰：**避開食僵花，並幫助僵屍移動到向日葵那兒。"
      courseD_maze_until9_2018: "**挑戰：**避開食僵花，並幫助僵屍移動到向日葵那兒。"
      courseD_maze_until9_2019: "**挑戰：**避開食僵花，並幫助僵屍移動到向日葵那兒。"
      courseD_scrat_ramp1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_scrat_ramp1_2018: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_scrat_ramp2: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成編碼。
      courseD_scrat_ramp2_2018: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成編碼。
      courseE_artist_functions1: "哈囉。我是個僵屍。我是個熱愛繪畫的殭屍！ 幫我畫一副方形眼鏡。 \n提示： 眼鏡框之間的鼻樑比鏡框的長度短 25 像素。"
      courseE_artist_functions1_2018: "哈囉。我是個僵屍。我是個熱愛繪畫的殭屍！ 幫我畫一副方形眼鏡。 \n提示： 眼鏡框之間的鼻樑比鏡框的長度短 25 像素。"
      courseE_artist_ramp10: 現在，把上個畫出三角形的程式放到新的迴圈積木裡，讓它邊轉邊畫，就可以畫出一個雪花囉！
      courseE_artist_ramp11: 現在用小藝術家來畫出一個正方形！
      courseE_artist_ramp12: 使用你學到的方法，在正方形裡頭畫出這個三角形。
      courseE_artist_ramp8: 現在用小藝術家來畫出一個正方形！
      courseE_artist_ramp8_2: 現在用小藝術家來畫出一個正方形！
      courseE_artist_ramp8_2018: 現在用小藝術家來畫出一個正方形！
      courseE_artist_ramp8_2_2018: 現在用小藝術家來畫出一個正方形！
      courseE_artist_ramp9: 使用你學到的方法來畫出這個三角形。
      courseE_artist_ramp9_2: 使用你學到的方法來畫出這個三角形。
      courseE_artist_ramp9_2018: 使用你學到的方法來畫出這個三角形。
      courseE_artist_ramp9_2_2018: 使用你學到的方法來畫出這個三角形。
      courseE_bee_concept1: 使用巢狀迴圈從每朵花中收集所有的花蜜。
      courseE_bee_concept1_2018: 使用巢狀迴圈從每朵花中收集所有的花蜜。
      courseE_bee_concept1_2019: 使用巢狀迴圈從每朵花中收集所有的花蜜。
      courseE_bee_functions1: 收集每一朵花的花蜜。
      courseE_bee_functions1_2018: 收集每一朵花的花蜜。
      courseE_bee_functions3: "函式是執行特定任務的一串程式碼。用「get 5」這個函式來一次拿5個花蜜。\n記得用迴圈來計算理想的積木塊次數。"
      courseE_bee_functions3_2018: "函式是執行特定任務的一串程式碼。用「get 5」這個函式來一次拿5個花蜜。\n記得用迴圈來計算理想的積木塊次數。"
      courseE_bee_functions4: "\"移動，並得到花蜜\"函式能讓蜜蜂轉身，收集花蜜，最後返回到開始的地方。\n使用函式來收集所有的花蜜。"
      courseE_bee_functions4_2018: "\"移動，並得到花蜜\"函式能讓蜜蜂轉身，收集花蜜，最後返回到開始的地方。\n使用函式來收集所有的花蜜。"
      courseE_collector_ramp10: 幫 Laurel 收集到所有寶石。
      courseE_collector_ramp8: 幫 Laurel 收集到所有寶石。
      courseE_collector_ramp9: 幫 Laurel 收集到所有寶石。
      courseE_farmer_concept4: "現在讓我們加深難度！\n我們已經將整個程式積木嵌套在另一個迴圈內，但你需要讓小藝術家回到初始位置來畫出下一行。要在最外層迴圈下添加哪個積木，才能畫完整個網格？"
      courseE_farmer_functions4b: 使用你的新函式以完成這個關卡。
      courseE_farmer_functions4b_2018: 使用你的新函式以完成這個關卡。
      courseE_farmer_functions6: |-
        *「生菜，試點新玩意！」*\r
        \r
        這裡有某個可以收集所有生菜的程式，將它變成函式，這樣一來我們之後可以方便的使用它。
      courseE_farmer_functions8: "**挑戰：**完成這個關卡，使用的積木愈少愈好。"
      courseE_farmer_functions8b: "**挑戰：**讓農夫走到南瓜那兒，並沿著路收集生菜與玉米。 "
      courseE_farmer_functions8b_2018: "**挑戰：**讓農夫走到南瓜那兒，並沿著路收集生菜與玉米。 "
      courseE_farmer_ramp11: 這個關卡用到了巢狀迴圈，想想看，要怎麼完成呢？
      courseE_farmer_ramp12: 現在使用巢狀迴圈（`重複`和`當…`）來完成這個關卡。
      courseE_farmer_ramp12_2018: 現在使用巢狀迴圈（`重複`和`當…`）來完成這個關卡。
      courseE_farmer_ramp12_forswap: 現在使用巢狀迴圈（`重複`和`當…`）來完成這個關卡。
      courseE_farmer_ramp12_forswap_2018: 現在使用巢狀迴圈（`重複`和`當…`）來完成這個關卡。
      courseE_farmer_ramp12_forswap_2019: 現在使用巢狀迴圈（`重複`和`當…`）來完成這個關卡。
      courseE_farmer_ramp13: 如果有玉米就收集玉米；如果有生菜就收集生菜。
      courseE_farmer_ramp13_2018: 如果有玉米就收集玉米；如果有生菜就收集生菜。
      courseE_maze_ramp1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseE_maze_ramp1_2018: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseE_maze_ramp2: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成編碼。
      courseE_maze_ramp2_2018: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成編碼。
      courseE_maze_ramp3: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseE_maze_ramp3_2018: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      courseE_maze_ramp4: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseE_maze_ramp4_2018: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseE_maze_ramp5: 小心 TNT 炸藥。
      courseE_maze_ramp5_2018: 小心 TNT 炸藥。
      courseE_maze_ramp6: '「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」'
      courseE_maze_ramp6_2018: '「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」'
      courseE_maze_ramp7: '**挑戰：** 讓鳥抓到這隻豬！'
      courseE_maze_ramp7_2018: '**挑戰：** 讓鳥抓到這隻豬！'
      courseE_multi_maze_ramp5: 小心 TNT 炸藥。
      courseE_playLab_scaffold5: 現在花些時間確保遊戲按照你想要的方式運作。包括輸或贏的方式，還有滿足的條件設定。
      courseE_playLab_scaffold5_2018: 現在花些時間確保遊戲按照你想要的方式運作。包括輸或贏的方式，還有滿足的條件設定。
      courseF_artist_for7: 修改 3 個小地方，把上個關卡的程式修改成這樣！
      courseF_artist_for7_2018: 修改 3 個小地方，把上個關卡的程式修改成這樣！
      courseF_artist_for7_2019: 修改 3 個小地方，把上個關卡的程式修改成這樣！
      courseF_artist_for_challenge1: 想想看，如何重複的繪製出這個圖？
      courseF_artist_for_challenge1_2018: 想想看，如何重複的繪製出這個圖？
      courseF_artist_for_challenge1_2019: 想想看，如何重複的繪製出這個圖？
      courseF_artist_for_challenge2: 想想看，如何用單一迴圈重複的繪製出這個圖？
      courseF_artist_for_challenge2_2018: 想想看，如何用單一迴圈重複的繪製出這個圖？
      courseF_artist_for_challenge2_2019: 想想看，如何用單一迴圈重複的繪製出這個圖？
      courseF_artist_fwp1: 編輯函式 draw a square（畫個正方形），找出程式裡頭的錯誤。
      courseF_artist_fwp1_2018: 編輯函式 draw a square（畫個正方形），找出程式裡頭的錯誤。
      courseF_artist_fwp2: 編輯這個函式，讓函式裡頭帶有一個稱做 `length`（長度）的參數。
      courseF_artist_fwp2_2018: 編輯這個函式，讓函式裡頭帶有一個稱做 `length`（長度）的參數。
      courseF_artist_fwp2_predict1: 編輯這個函式，讓函式裡頭帶有一個稱做 `length`（長度）的參數。
      courseF_artist_fwp2_predict1_2018: 編輯這個函式，讓函式裡頭帶有一個稱做 `length`（長度）的參數。
      courseF_artist_fwp3: 創建一個函式，名為 draw a square（畫個正方形），並使用參數來畫出這 4 個盒子的外框線。
      courseF_artist_fwp3_2018: 創建一個函式，名為 draw a square（畫個正方形），並使用參數來畫出這 4 個盒子的外框線。
      courseF_artist_fwp4: 編輯這個函式以添加一個參數，參數用來表示多邊形的邊數。
      courseF_artist_fwp4_2018: 編輯這個函式以添加一個參數，參數用來表示多邊形的邊數。
      courseF_artist_fwp5: '使用上個關卡的函式來畫出這些圖形。  '
      courseF_artist_fwp5_2018: '使用上個關卡的函式來畫出這些圖形。  '
      courseF_artist_fwp6: '編輯 draw a spiral edge（畫個螺旋圖）以使用 length（長度）和 sides（邊）參數，然後重新創建這些形狀。'
      courseF_artist_fwp6_2018: '編輯 draw a spiral edge（畫個螺旋圖）以使用 length（長度）和 sides（邊）參數，然後重新創建這些形狀。'
      courseF_artist_fwp7: 完成 draw a spiral edge（畫個螺旋圖）函式，同時詢問螺旋中心所需的最小長度。
      courseF_artist_fwp7_2018: 完成 draw a spiral edge（畫個螺旋圖）函式，同時詢問螺旋中心所需的最小長度。
      courseF_artist_fwp8: 想一想要怎麼使用你剛剛創建的函式來製作出這個圖案？
      courseF_artist_fwp8_2018: 想一想要怎麼使用你剛剛創建的函式來製作出這個圖案？
      courseF_artist_fwp9: '自由發揮：畫些很棒的東西出來吧！變化筆跡寬度，看看你的圖案會變得怎麼樣！'
      courseF_artist_fwp9_2018: '自由發揮：畫些很棒的東西出來吧！變化筆跡寬度，看看你的圖案會變得怎麼樣！'
      courseF_artist_ramp10: 現在，把上個畫出三角形的程式放到新的迴圈積木裡，讓它邊轉邊畫，就可以畫出一個雪花囉！
      courseF_artist_ramp10_2018: 現在，把上個畫出三角形的程式放到新的迴圈積木裡，讓它邊轉邊畫，就可以畫出一個雪花囉！
      courseF_artist_ramp8: 現在用小藝術家來畫出一個正方形！
      courseF_artist_ramp8_2018: 現在用小藝術家來畫出一個正方形！
      courseF_artist_ramp9: 使用你學到的方法來畫出這個三角形。
      courseF_artist_ramp9_2018: 使用你學到的方法來畫出這個三角形。
      courseF_artist_variables_FP: "**自由活動：**用你學過的東西，繪製出自己的作品。\\r\n\\r\n你知道怎麼畫出帶變數正方形、五角形、六角形嗎？"
      courseF_bee_conditionals1_predict1: 檢查看看雲裡面是不是有花朵，如果有的話，就採集花蜜。
      courseF_bee_conditionals1_predict1_2018: 檢查看看雲裡面是不是有花朵，如果有的話，就採集花蜜。
      courseF_bee_conditionals7_predict2: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseF_bee_conditionals7_predict2_2018: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      courseF_bee_for10: "**挑戰：**利用你學過的迴圈來解決這個問題。 "
      courseF_bee_for10_2018: "**挑戰：**利用你學過的迴圈來解決這個問題。 "
      courseF_bee_for10_2019: "**挑戰：**利用你學過的迴圈來解決這個問題。 "
      courseF_bee_for8: 你明白了吧！如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      courseF_bee_for8_2018: 你明白了吧！如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      courseF_bee_for8_2019: 你明白了吧！如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      courseF_bee_for_challenge2: 盡可能使用最少的程式積木來完成這個關卡。
      courseF_bee_for_challenge2_2018: 盡可能使用最少的程式積木來完成這個關卡。
      courseF_bee_for_challenge2_2019: 盡可能使用最少的程式積木來完成這個關卡。
      courseF_bee_for_challenge3: 盡可能使用最少的程式積木來完成這個關卡。
      courseF_bee_functions4: "\"移動，並得到花蜜\"函式能讓蜜蜂轉身，收集花蜜，最後返回到開始的地方。\n使用函式來收集所有的花蜜。"
      courseF_bee_functions4_2018: "\"移動，並得到花蜜\"函式能讓蜜蜂轉身，收集花蜜，最後返回到開始的地方。\n使用函式來收集所有的花蜜。"
      courseF_bee_fwp2: 將這些程式變成一個函式，接著呼叫這個函式來檢查是否有花蜜。
      courseF_bee_fwp2_2018: 將這些程式變成一個函式，接著呼叫這個函式來檢查是否有花蜜。
      courseF_bee_fwp3: 讓我們來看看這個函式是否有辦法很容易的收集到三列的花蜜。
      courseF_bee_fwp3_2018: 讓我們來看看這個函式是否有辦法很容易的收集到三列的花蜜。
      courseF_bee_fwp4: 添加一個 length（長度）參數到函式裡，這樣一來當橫列長度不一樣時，它也一樣有用。
      courseF_bee_fwp4_2018: 添加一個 length（長度）參數到函式裡，這樣一來當橫列長度不一樣時，它也一樣有用。
      courseF_bee_fwp5: 使用這個函式來收集花蜜。
      courseF_bee_fwp5_2018: 使用這個函式來收集花蜜。
      courseF_bee_fwp6: 為這個關卡建立一個簡短有力的解法。
      courseF_bee_fwp6_2018: 為這個關卡建立一個簡短有力的解法。
      courseF_bee_fwp7: "**挑戰：**修改你的函式，讓你的函式也可以釀造蜂蜜。"
      courseF_bee_fwp7_2018: "**挑戰：**修改你的函式，讓你的函式也可以釀造蜂蜜。"
      courseF_bee_fwp8: 使用你的新函式以畫出這個螺旋圖形。
      courseF_bee_fwp8_2018: 使用你的新函式以畫出這個螺旋圖形。
      courseF_bee_fwp9: 使用你的新函式以完成這個關卡。
      courseF_bee_fwp9_predict1: 使用你的新函式以完成這個關卡。
      courseF_bee_fwp9_predict1_2018: 使用你的新函式以完成這個關卡。
      courseF_farmer_ramp11: 這個關卡用到了巢狀迴圈，想想看，要怎麼完成呢？
      courseF_farmer_ramp11_2018: 這個關卡用到了巢狀迴圈，想想看，要怎麼完成呢？
      courseF_maze_ramp15: '**挑戰：** 讓鳥抓到這隻豬！'
      courseF_maze_ramp4: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseF_maze_ramp4_2018: 小心 TNT 炸藥，不然羽毛會被炸飛！
      courseF_maze_ramp5: 小心 TNT 炸藥。
      courseF_maze_ramp5_2018: 小心 TNT 炸藥。
      courseF_maze_ramp6: '「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」'
      courseF_maze_ramp6_2018: '「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」'
      courseF_maze_ramp7: '**挑戰：** 讓鳥抓到這隻豬！'
      coursef_maze_ramp3: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      coursef_maze_ramp3_2018: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      flappy_1: 添加一個積木到「當點擊時」積木下，然後點擊「運行」。點擊或輕觸螢幕，讓像素鳥移動至目標。
      flappy_11: 創造你自己的像素鳥遊戲。你可以改變所有看的到的東西和所有規則，甚至是重力。當你完成時，點擊完成，讓你的朋友可以在他們手機上體驗你做的遊戲。
      flappy_11_2018: 創造你自己的像素鳥遊戲。你可以改變所有看的到的東西和所有規則，甚至是重力。當你完成時，點擊完成，讓你的朋友可以在他們手機上體驗你做的遊戲。
      flappy_1_2018: 添加一個積木到「當點擊時」積木下，然後點擊「運行」。點擊或輕觸螢幕，讓像素鳥移動至目標。
      flappy_2: 現在我們已經添加了一些地面。附加一個積木到「當碰到地面時」積木，當像素鳥撞上時你要程式來將「遊戲結束」。
      flappy_2_2018: 現在我們已經添加了一些地面。附加一個積木到「當碰到地面時」積木，當像素鳥撞上時你要程式來將「遊戲結束」。
      flappy_3: 當你的遊戲開始時，「當運行時」積木能讓你運行程式。試著設定速度等級並飛到目的地。
      flappy_3_2018: 當你的遊戲開始時，「當運行時」積木能讓你運行程式。試著設定速度等級並飛到目的地。
      flappy_4: 像素鳥會穿過障礙物，除非你寫程式讓它停下來。添加一個積木到「當碰到障礙物時」積木裡，你必須在像素鳥在第一次撞到水管時「結束遊戲」。
      flappy_4_2018: 像素鳥會穿過障礙物，除非你寫程式讓它停下來。添加一個積木到「當碰到障礙物時」積木裡，你必須在像素鳥在第一次撞到水管時「結束遊戲」。
      flappy_5: 讓我們添加一個記分板，在像素鳥通過障礙時可以加分。把「得分」積木放到「當通過障礙時」積木下，這樣的話，當像素鳥飛過水管障礙時就可以獲得一分。
      flappy_5_2018: 讓我們添加一個記分板，在像素鳥通過障礙時可以加分。把「得分」積木放到「當通過障礙時」積木下，這樣的話，當像素鳥飛過水管障礙時就可以獲得一分。
      flappy_6: 看看你能不能讓像素鳥在拍動更小或更大的數值時也能獲得分數。
      flappy_6_2018: 看看你能不能讓像素鳥在拍動更小或更大的數值時也能獲得分數。
      flappy_7: 接下來，試著附加另一個積木到「當運行時」積木的下方，讓場景改變。
      flappy_7_2018: 接下來，試著附加另一個積木到「當運行時」積木的下方，讓場景改變。
      flappy_8: 你可以隨時設置視覺效果，不是只有遊戲開始時才可以。試著在其他事件發生時將場景設為隨機，比方說，當通過障礙物時。
      flappy_8_2018: 你可以隨時設置視覺效果，不是只有遊戲開始時才可以。試著在其他事件發生時將場景設為隨機，比方說，當通過障礙物時。
      flappy_9: 要把東西混在一起囉！當撞到一個障礙物時，不要結束遊戲，改成把遊戲分數歸零。
      flappy_9_2018: 要把東西混在一起囉！當撞到一個障礙物時，不要結束遊戲，改成把遊戲分數歸零。
      frozen circle function in circle: 現在我們來建立 20 個互有重疊的圓，在每個圓之後轉向 18 度。
      frozen circle function with parameter: 這裡有一個「建立一個圓形」的程式積木，可以畫出不同大小的圓。您可以用這個來建立一個大小為 5 的小圓，跟一個大小為 10 的較大的圓嗎？
      frozen circle function: 使用新的「建立一個圓形」積木讓我建立 10 個相互重疊的圓形。不要忘了在每次畫一個圓之後向前跳。
      frozen circle: 圓是一個特殊的形狀。你能想出什麼數字以取代問號來畫一個圓嗎？
      frozen cross rotate dense: "現在我們來重複 90 次！\n要重複 90 次的話，每次要幾度才能轉到 360 度呢？提示：這是個非常小的數字。"
      frozen cross rotate: 現在試著重複 10 次吧。你覺得每次畫出線之後，需要轉向幾度呢？
      frozen cross: 將這些指令放入「重複」積木裡來畫出一個加號。注意到了嗎？艾莎可以向後移動了。
      frozen diamond mini snowflake: 你知道每個雪花的形狀都不同嗎？讓我們用另一個「循環」積木創造一個新的雪花，它是由 4 個重複的平行四邊形所組成，每畫完一個平行四邊形就向右轉 90 度。
      frozen diamond snowflake: 現在，讓我們創建新的雪花圖案，通過使用「重複」積木來畫出平行四邊形 10 次，每畫一個之後轉向 36 度。
      frozen diamond: 將這些程式放到「重複」積木裡來畫出平行四邊形，它就像一個長方形，但角度不同。我們要畫的是有 60 度和 120 度角的四邊形，而長方形的所有角度都是 90 度。
      frozen freeplay: 您已經變成一個專業的藝術家囉！開始打造一個冬季仙境吧。
      frozen line: 嗨！我是艾倫戴爾的艾莎女王。請幫幫我畫出一條線。
      frozen perpendicular: 現在看看我們是不是可以畫出互相垂直的二條線（2 條線的夾角 90 度）。你需要用到「轉向」還有「移動」積木。
      frozen snowflake branch: 用用看「建立雪花分支」積木，建立 3 個分支，讓它一開始像個雪花。
      frozen snowflake full: 現在我們來重複它 18 次以製作出美麗的雪花！
      frozen snowflower: 精細複雜的雪花樣式其實可以用非常簡單的形狀來產生。您可以畫重複五個大小為 5 的圓，以及五個大小為 10 個圓嗎？
      frozen square iterative: 看來我們已經畫出了正方形的一半了！來，我們一起把 4 條線組合起來，變成一個正方形吧！
      frozen square loop 3x: 這次我們來建立 3 個正方形吧！每個正方形完成後，記得要轉 120 度，再畫下一個正方形。
      frozen square loop: 嗨，我是艾倫戴爾的安娜公主！讓我們用「重複」積木畫個正方形，這樣一來我們就可以用較少的積木完成。你覺得要「重複」幾次（???）才能畫出一個正方形呢？
      frozen square snowflake: 你可以用「重複」積木來畫 10 次正方形，每次轉 36 度嗎？這樣可以繪製出一個雪花喔！
      grade1_adventurer_loops2: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      grade1_adventurer_loops7_challenge: "**挑戰：**階梯上到處都是黃金！寫個程式幫我得到全部的黃金。"
      grade1_adventurer_loopsPre: 這位是冒險家 Laurel！你能幫助她移動以取得黃金嗎？
      grade1_artist_loops2: 幫助小藝術家畫一條線，畫 7 次以繪出花園的牆。
      grade1_artist_loops5: 灌木叢後面還有美麗的葡萄樹開滿了花。 你可以爬上藤和看到它在哪裡嗎？
      grade1_artist_loops6: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      grade1_artist_loops7a: "**挑戰：**可愛極了！讓我們在花園裡散個步。"
      grade1_maze_sequence1: 有個臭蟲（bug，程式中有錯誤的意思）！修正這個程式讓我到豬豬那兒。
      grade1_maze_sequence2: 修正這個程式，使我能到達豬的位置！
      grade1_maze_sequence3: 添加 2 個積木讓鳥移動到豬那裡。
      grade1_maze_sequence5: 先往一個方向移動，接著再往另一個方向移動，讓我抓到那頭豬。
      grade1_maze_sequence6: 找找看遺失了哪些積木，添加積木以到達豬那兒！
      grade1_maze_sequence7: 輪到你了！要怎麼樣才能讓鳥抓到這頭豬呢？
      grade1_maze_sequence9: '繞開 TNT 炸藥，讓我抓到豬！ '
      grade1_playlab_events4: 添加一個積木，讓羅賓在撞到機器人時消失。
      grade1_playlab_events5: 添加一個積木到「當運行時」事件，讓龍在遊戲開始時就在天空上飛來飛去。
      grade1_playlab_events5a: 關於我的機器人專案！寫下程式，在點擊每隻鳥時分別顯示你的機器人特色。
      grade1_playlab_events6: 添加一個積木到「當角色1被點擊時」事件，讓龍能返回到畫面的中間。
      grade1_playlab_events7: 添加一個積木，讓你在點擊「向左按鈕」時，騎士就朝龍那兒走去。
      grade1_playlab_events8: 添加一個積木，讓騎士與龍碰撞時，播放一個音效。
      grade2_CaringForNewPet_0: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      grade2_CaringForNewPet_10: 讓我抓到那隻豬！
      grade2_CaringForNewPet_11: '「保持冷靜，幫我找到那隻壞豬豬。」'
      grade2_CaringForNewPet_2: |-
        「這隻豬真的把我惹毛了！」\r
        \r
        有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱」。
      grade2_CaringForNewPet_2courseC_maze_programming3: 這裡有個多餘的積木害得鳥撞牆，找到它，然後把它拖回工具箱以消除它。
      grade2_CaringForNewPet_3: '沿著這條路帶我去找那隻笨豬，記得躲開 TNT 炸藥，不然會見到我的羽毛滿天飛！'
      grade2_CaringForNewPet_3D: '「沿著這條路讓我抓到豬！」'
      grade2_CaringForNewPet_4: '「保持冷靜，幫我找到那隻壞豬豬。否則我真的會變成憤怒鳥！」'
      grade2_CaringForNewPet_5: 讓我抓到那隻豬！
      grade2_MakeDogTag_10: 現在，畫你喜歡的任何東西！
      grade2_MakeDogTag_3: |-
        「喔，不好了！Starla 的外星寵物飛走了！
        讓我們幫助她！」\r
        \r
        完成 Starla 的火箭，這樣她就可以追到她的寵物了。
      grade2_MakeDogTag_4: |-
        這棟房子需要屋頂！請畫出三角形。
        提示：三邊都是同樣的長度。
      grade2_MakeDogTag_5: |-
        「現在是貝兒標記！」\r
        \r
        利用長度 200 像素的邊，畫出鑽石來。
      grade2_MakeDogTag_6: '自由玩！畫你喜歡的任何東西'
      grade2_MakeDogTag_8: 現在我們用迴圈來把一堆的 V 連接在一起。
      grade2_MakeDogTag_9: 重建上一關的程式，但這次在迴圈裡添加一個向左轉 30 度的指令。現在把重複 8 次改成 24 次。
      grade2_MakeDogTag_BFP: |-
        「嗨，我是個藝術家。你可以寫個程式，讓我繪製任何東西。」\r
        \r
        好好發揮在工具箱裡的所有程式積木，看看它們能做到什麼！
      grade2_PuppyLoops_1: 你可以只用 5 個相同的積木就讓我抓到豬嗎？
      grade2_PuppyLoops_10: |-
        我的老師告訴我們做事要有始有終！\r
        \r
        幫我完成我的風車，你可以找到錯誤的地方嗎？
      grade2_PuppyLoops_2: 你能用 1 個`移動-向前`和 1 個`重複`積木來創建出一個迴圈，然後到達小豬那兒嗎？
      grade2_PuppyLoops_4: 這個關卡裡，2 個 `重複` 迴圈可以幫你使用最少的積木數來抓到豬！
      grade2_PuppyLoops_5: 想想看，如何用最快的方式讓我可以抓到豬？
      grade2_PuppyLoops_7: 用你學到的，讓我吃到向日葵！
      grade2_PuppyLoops_8: "畫出貓鬍鬚的程式不正確。\\r\n\\r\n修正這個程式來給貓畫上一樣長的鬍鬚。"
      grade2_PuppyLoops_9: |-
        看起來Ｃ被畫反了！\r
        \r
        你可以將它改正嗎？
      grade2_collector_2: 讓 Laurel  移動到寶石處，然後用「採集」積木把它撿起來。
      grade2_collector_3: 把這些積木按照一個次序排列，收集所有的黃金以完成這個關卡。
      grade2_collector_8: '「就是這樣！繼續幫助我收集所有的硬幣。」'
      grade2_collector_9: '*「讓我們獲得所有的硬幣！」*'
      grade2_collector_9a: "**挑戰：**拿到所有的硬幣。"
      grade2_collector_A: 幫 Laurel 收集到所有寶石。
      grade2_collector_A_2018: 幫 Laurel 收集到所有寶石。
      grade2_collector_A_2019: 幫 Laurel 收集到所有寶石。
      grade2_collector_pre1: "「嗨，我是 Laurel。今天我要在狗狗公園尋找寶藏！」\\r\n\\r\n利用這些程式積木，看看你能不能幫助 Laurel 收集到一些黃金。"
      grade2_maze_debuggingFP: '「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」'
      grade2_playlab_project_1: 現在，寫一個程式來控制企鵝，用向上/下/左/右鍵來到達所有目標！
      grade2_playlab_project_3: "你可以讓企鵝（角色1）撞到恐龍時說「哎喲！」，然後播放一個「撞擊」的音效？\\r\n\\r\n完成後試試看，用方向鍵移動企鵝，讓這個情況發生。"
      grade2_playlab_project_4: "添加一個積木，讓企鵝撞上章魚（角色3）時得到一分。\\r\n運行遊戲並用方向鍵移動企鵝，直到你得分為止！"
      grade2_playlab_project_5: |-
        添加積木到「當運行時」事件，以改變背景及企鵝的移動速度。\r
        \r
        玩這個遊戲，並使用方向鍵移動企鵝，幫助他達到過關分數。
      grade2_puppy_loops2: 你能用 1 個`移動-向前`和 1 個`重複`積木來創建出一個迴圈，然後到達小豬那兒嗎？
      grade2_puppy_loops3: |-
        「讓我抓到這隻豬！」\r
        \r
        利用建立迴圈的方式完成這個關卡！
      grade2_puppy_loops4: 這個關卡裡，2 個 `重複` 迴圈可以幫你使用最少的積木數來抓到豬！
      grade2_puppy_loops5: '「愈快抓到豬愈好！」'
      grade2_puppy_loops6: |-
        「這隻豬真的把我惹毛了！」\r
        \r
        迴圈
        事件裡可以執行一個以上的程式積木！你可以調整一下迴圈裡指令的順序嗎？
      grade2_puppy_loops7: |-
        「讓我抓到這隻豬！」\r
        \r
        利用你在其他關卡學到的技巧！
      grade3_AboutMyRobot_5: 關於我的機器人專案！寫下程式，在點擊每隻鳥時分別顯示你的機器人特色。
      grade3_ConditionalsElse_1: 這雲遮住了我的視線！檢查看看雲的下面是不是有花朵，只有在有花朵的時候才採集花蜜。注意，它會變來變去的！
      grade3_ConditionalsElse_2: "雲愈來愈多了！\\r\n\\r\n檢查每個雲，在你採集花蜜前看看是不是有花朵藏在裡頭。\\r\n\\r\n記住：\n雲底下藏的東西不見得一樣！"
      grade3_ConditionalsElse_3: 現在蜜蜂只想要製作蜂蜜。在一些雲裡可能藏著蜂窩，仔細的檢查每個雲！
      grade3_ConditionalsElse_4: 有時雲裡面有花朵，有時雲裡藏著蜂窩！使用「如果…否則」積木，如果是花朵就收集花蜜。否則，就釀造蜂蜜（因為它是蜂窩）。
      grade3_ConditionalsElse_5: |-
        雲下藏的不是花朵就是蜂窩！\r
        \r
        用`如果…否則`積木，如果是花的話就採集花蜜，\r
        否則，就釀造蜂蜜。
      grade3_ConditionalsElse_6: "我不確定這朵花裡有多少花蜜，也許是 1 或 2 或 3 個。\\r\n\\r\n組合這個條件判斷積木（`如果`和`如果…否則`）來取得花朵中實際的花蜜數。\n\\r\n\\r\n記住，花蜜的數量會在你每次運行之後改變！"
      grade3_ConditionalsElse_7: "這些花朵上可能有 3、2 或 1 個花蜜。\\r\n\\r\n完成 `check purple flower`（檢查紫花）這個函式，並使用它來收集花朵上的所有花蜜。"
      grade3_ConditionalsElse_8: "寫個 `check flower make honey`（檢查花朵釀造蜂蜜）的函式。\\r\n\\r\n你的函式應該要檢查紫花裡有多少的花蜜（1-3 不等）並採集起來。\\r\n然後，再向前移動釀造蜂蜜。"
      grade3_ConditionalsElse_9: "**評量：**雲朵中可能隱藏著帶有花蜜的花朵，或是可裝蜂蜜的蜂窩。\\r\n\\r\n完成這個`get nectar or make honey`的函式，然後調用它來收集花蜜或蜂蜜。（註：get nectar or make honey 是採到花蜜或釀成蜂蜜的意思）\\r\n"
      grade3_ConditionalsElse_TeacherIDo: |-
        雲下藏的不是花朵就是蜂窩！\r
        \r
        用`如果…否則`積木，如果是花的話就採集花蜜，\r
        否則，就釀造蜂蜜。
      grade3_Conditionals_1 BAD: 使用一個迴圈來收集所有的花蜜。
      grade3_Conditionals_1: "我是一隻蜜蜂！\\r\n使用最少的積木幫我採集到花朵中的所有花蜜。"
      grade3_Conditionals_10 BAD: "採集每一排花朵中的花蜜！\n使用巢狀迴圈。"
      grade3_Conditionals_10: |-
        這裡也太多活要做了吧！\r
        \r
        使用你所學到的來收集所有花蜜及蜂蜜。
      grade3_Conditionals_11 BAD: '評量：使用一個`當…`迴圈來採集這些花朵上的所有花蜜。'
      grade3_Conditionals_11: |-
        我們把所有東西都放在一起吧！\r
        \r
        利用你學過的技能來幫我收集花蜜，用的積木愈少愈好。不要忘了在最後幫它們釀成蜂蜜。
      grade3_Conditionals_12: "不陌生吧，這種樓梯模式的關卡。\\r\n\\r\n你可以只在有花蜜的花朵上採集嗎？用的積木愈少愈好。"
      grade3_Conditionals_13: '評量：收集所有的花蜜。小心，不要採集沒有花蜜的紫花。'
      grade3_Conditionals_2: "仔細收集花蜜！\\r\n\\r\n幫我收集花蜜及蜂蜜，用的積木愈少愈好。  "
      grade3_Conditionals_3: "小心不要採集到沒有任何花蜜的紫花。\\r\n你必須用`如果花蜜`積木先檢查看看。"
      grade3_Conditionals_4: 用一個「如果」積木來檢查這朵花上面有沒有花蜜。
      grade3_Conditionals_5: 在有花蜜的花朵中採集花蜜。
      grade3_Conditionals_6: "這塊地上有紅色和紫色的花朵。\n紅花上的花蜜數量很明確，但是紫花上的花蜜數量就不知道了。\n收集所有的花蜜吧。"
      grade3_Conditionals_7: 收集每一朵花的花蜜。
      grade3_Conditionals_8: "我想知道那裡有些什麼！\\r\n\\r\n幫忙讓我在院子裡飛翔，並收集花朵中的花蜜。 "
      grade3_Conditionals_9: 盡可能用最少的積木幫我找到全部的花蜜！
      grade3_Conditionals_TeacherIDo: 用一個「如果」積木來檢查這朵花上面有沒有花蜜。
      grade3_Debugging_1: 這些積木真是讓我一陣錯亂！修正錯誤（可能不只一個）來收集到所有的花蜜。
      grade3_Debugging_5: "那花看起來真美味！\\r\n\\r\n修正錯誤（可能不只一個）來收集到所有的花蜜。\\r\n現在你可以同時使用運行和步進。"
      grade3_Debugging_6: |-
        真是甜蜜的挑戰啊！\r
        \r
        修正錯誤（可能不只一個）來收集到所有的花蜜。
      grade3_Debugging_7: 修復錯誤（可能不只一個）以收集所有的花蜜與蜂蜜。
      grade3_Debugging_9: |-
        有點耐心！\r
        \r
        你需要修復程式裡的一些問題，才能夠收集所有的花蜜和蜂蜜。
      grade3_Debugging_TeacherIDo: 這些積木真是讓我一陣錯亂！修正錯誤（可能不只一個）來收集到所有的花蜜及蜂蜜。
      grade3_Loops_10: |-
        蜜蜂就是那麼忙！\r
        \r
        幫助蜜蜂收集所有的花蜜及蜂蜜，用的積木愈少愈好。
      grade3_Loops_11: "這個圖形的路徑不同於其他的圖形。\\r\n\\r\n你能收集到花蜜嗎？用的積木愈少愈好。"
      grade3_Loops_12: 你能用最快的方式，讓蜜蜂收集到所有的花蜜及蜂蜜嗎？
      grade3_Loops_2: 這一回，用一個迴圈來收集所有的花蜜。
      grade3_Loops_3: 使用一個`重複`迴圈來收集所有的花蜜。
      grade3_Loops_4: 現在使用`重複`積木來收集所有的花蜜和蜂蜜。
      grade3_Loops_5: 多麼美麗的一片花田啊！幫助蜜蜂到每朵花上參觀一下。你能在 7 個積木內完成嗎？
      grade3_Loops_6: "在這關中，迴圈應該進行多少次？\\r\n\\r\n迴圈是你的朋友！用一些迴圈來減少積木使用數量，並完成這個關卡。"
      grade3_Loops_7: |-
        那些花看起來真是香甜可口！\r
        \r
        從每個花朵上採集花蜜，用的積木愈少愈好。
      grade3_Loops_8: 使用最少的積木來收集所有花蜜及蜂蜜。
      grade3_Loops_9: 使用最少的積木，從每一朵花中採集花蜜，並在每一個蜂窩裡釀造蜂蜜。
      grade3_Loops_TeacherIDo: |-
        那些花看起來真是香甜可口！\r
        \r
        從每個花朵上採集花蜜，用的積木愈少愈好。
      grade3_RunningFarm_10: 收集所有的玉米和生菜，然後收成南瓜。
      grade3_RunningFarm_11a: 收集所有的玉米和生菜，然後收成南瓜。
      grade3_RunningFarm_3: '*「玉米、生菜、南瓜！幫我收成它們。」*'
      grade3_RunningFarm_7: "**挑戰：**收集所有的玉米和生菜，然後收成南瓜。"
      grade3_bee_conditionals_quantum1: 檢查看看雲裡面是不是有花朵，如果有的話，就採集花蜜。
      grade3_bee_conditionals_quantum2: "蜜蜂現在只想要花蜜。並非所有的物件都是花朵，所以檢查每朵雲的下面是否藏著一朵花。如果有，那麼你就可以採集花蜜。"
      grade3_bee_conditionals_quantum4: 使用`如果/否則`積木來收集花朵上的花蜜，並在蜂窩上釀造蜂蜜。
      grade3_maze_Loop1: '評量：只能用 5 個積木，把我帶到向日葵那兒。 '
      grade3_maze_loops2: '帶我到那朵向日葵的位置!'
      grade3_maze_loops3: 帶我到那朵向日葵的位置!
      grade3_maze_loops4: 帶我到那朵向日葵的位置!
      grade3_maze_loops5: 使用最少的積木帶我吃到向日葵！
      grade3_maze_nestedLoops1: 你可以只用 5 個相同的積木就讓我抓到豬嗎？
      grade3_maze_nestedLoops2: 你能用 1 個`移動-向前`和 1 個`重複`積木來創建出一個迴圈，然後到達小豬那兒嗎？
      grade3_maze_nestedLoops3: 讓我抓到那隻豬！這一次，你只能用 1 個向前移動積木。
      grade3_maze_nestedLoops4: 這個關卡裡，2 個 `重複` 迴圈可以幫你使用最少的積木數來抓到豬！
      grade3_robotFarmer_ConditionalsIntro_1: "*「嗨，我是個農夫。我需要你幫我將農地整平，好讓我可以耕作！」*\\r\n\\r\n移到土堆那兒，使用「移除」積木來把土堆刪掉。"
      grade3_robotFarmer_ConditionalsIntro_11: '現在外面還是一片漆黑。讓我沿著田地移動，如果有土堆就將它移除，如果有坑洞就將它填滿。提示：使用「如果」積木上的下拉清單。'
      grade3_robotFarmer_ConditionalsIntro_3: '*「移動到有污泥的土堆上，並告訴我該移除多少鏟的土，盡可能用最少的積木來完成。」*'
      grade3_robotFarmer_ConditionalsIntro_4: |-
        *「我不知道這堆土裡有多少污泥！」*\r
        \r
        使用`當…時`迴圈，幫助農夫移除全部的土堆。
      grade3_robotFarmer_ConditionalsIntro_6: 盡可能用最少的積木來移除所有土堆。在「當…」積木的下拉清單裡多了幾個選項，可以用來協助你判斷現在是站在土堆上，還是站在坑洞上。
      grade3_robotFarmer_ConditionalsIntro_9: "**挑戰：**填滿所有的洞，使用的積木愈少愈好。 "
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1: '幫助我填滿這些坑洞，每個坑洞需要填入 5 鏟的泥土。提示：你可以在「當…」積木中，放進「重複」積木來完成這個關卡。'
      grade4_arist_nested_loop_circles1: '評量：使用巢狀迴圈完成設計。'
      grade4_arist_nested_loop_flags1: 重複已給的代碼來畫出一個風車。
      grade4_arist_nested_loop_polygons1: "循環這個圖樣 10 次。\\r\n\\r\n你知道在每個圖樣畫完後要轉多少角度嗎？"
      grade4_arist_nested_loop_polygons2: "重複這個圖案6次。\\r\n\\r\n你知道每次重複畫圖案時需要轉多少度？ "
      grade4_arist_nested_loop_squares1: 你可以用巢狀迴圈來畫出在人行道上的 10 個正方形嗎？每個正方形的邊長為 30 像素。
      grade4_arist_nested_loop_triangles2: '現在將這個迴圈嵌套進另一個迴圈內，以畫出 10 個三角形。這就是所謂的「巢狀式迴圈」。  '
      grade4_arist_nested_loop_triangles3: 你可以藉由重複畫三角形的程式碼來畫出一個六邊形嗎？
      grade4_arist_nested_loop_triangles4: 在鱷魚的嘴內畫出牙齒!
      grade4_arist_nested_loop_triangles5: |-
        把起始程式碼嵌進另一個迴圈中來畫出一個太陽。\r
        \r
        要能夠製作出這樣酷炫的圖案，你必須在轉向之前向前跳一段距離。
      grade4_arist_nested_loop_triangles6: 你可以用巢狀迴圈來畫出這 36 個三角形嗎？
      grade4_artist_functions1: "哈囉。我是個僵屍。我是個熱愛繪畫的殭屍！ 幫我畫一副方形眼鏡。 \n提示： 眼鏡框之間的鼻樑比鏡框的長度短 25 像素。"
      grade4_artist_functions2: "函式（Functions）能讓你能夠製作一個屬於自己的新積木！\\r\n\\r\n我們已經把繪製一個正方形所需要的所有積木放到一個名叫 `draw a square` 的函式裡。這一次，使用 `draw a square` 函式來製作個眼鏡。\n\\r\n\\r\n鏡片外框之間的距離為 75 像素。"
      grade4_artist_functionsChallenge0: "**挑戰：**盡可能做出你想要的函式，用函式來繪製邊長為 50 像素的正方形。"
      grade4_artist_functions_challenge: 使用建議的函式來畫出四列的六角形，注意到我們的偶數列是如何移動到右邊的嗎？
      grade4_artist_functions_challenge2: 使用建議的函式來畫出四列的六角形，注意到我們的偶數列是如何移動到右邊的嗎？
      grade4_artist_nestedLoops_challenge: |-
        點擊此處再次觀看完整說明！\r\r
        這是有趣圖形的程式碼。當你每次都轉一點方向角度，重複程式碼很多次會發生什麼事呢？注意在此圖案中會轉到 420 度，這表示小藝術家晝完時，它會朝向與開始不同的方向。它會朝著從開始方向右邊 60 度的方向。
      grade4_artist_nestedLoops_challenge2: 現在來挑戰一下！多試驗、多試錯，不要指望一次就能畫出完全的圖案。想觀看更多提示？點擊這裡！
      grade4_artist_nested_loop_circles1: '評量：使用巢狀迴圈完成設計。'
      grade4_artist_nested_loop_flags1: 重複已給的代碼來畫出一個風車。
      grade4_artist_nested_loop_polygons1: "循環這個圖樣 10 次。\\r\n\\r\n你知道在每個圖樣畫完後要轉多少角度嗎？"
      grade4_artist_nested_loop_squares1: 你可以用巢狀迴圈來畫出在人行道上的 10 個正方形嗎？每個正方形的邊長為 30 像素。
      grade4_artist_nested_loop_triangles1: '完成代碼來畫這些三角形。第一個三角形的代碼已經幫你打好了。提示: 3個三角形旋轉了360度'
      grade4_artist_nested_loop_triangles5: |-
        把起始程式碼嵌進另一個迴圈中來畫出一個太陽。\r
        \r
        要能夠製作出這樣酷炫的圖案，你必須在轉向之前向前跳一段距離。
      grade4_artist_nested_loop_triangles6: 你可以用巢狀迴圈來畫出這 36 個三角形嗎？
      grade4_artist_parameters_squares1: '點擊「編輯」來完成 draw a square（畫個正方形）函式的定義，並且加一個參數。它應該像三角形一樣有一個 length（長度）參數。這次，畫出 3 個正方形，邊長分別為 25、50、75 像素，每個正方形相隔 100 像素。'
      grade4_artist_parameters_triangles2: 你有察覺這個函式積木有什麼不一樣嗎？點擊「運行」來看看發生什麼事。
      grade4_artist_parameters_triangles2b: 你能完成這幅畫嗎？每一次畫的三角形的邊長比前一個多 25 像素。第一個三角形的邊長是 25 像素。
      grade4_artist_parameters_triangles3: 你能完成這幅畫嗎？每一次畫的三角形的邊長比前一個多 25 像素。第一個三角形的邊長是 25 像素。
      grade4_artist_parameters_triangles4: 畫出三角形的程式壞掉了。你可以編輯並修正這個函式，以畫出邊長為 25、50、75 的三角形嗎？
      grade4_artist_parameters_trianglesx: 你能完成這幅畫嗎？每一次畫的三角形的邊長比前一個多 25 像素。第一個三角形的邊長是 25 像素。
      grade4_bee_conditionals_quantum1: 這雲遮住了我的視線！檢查看看雲的下面是不是有花朵，只有在有花朵的時候才採集花蜜。注意，它會變來變去的！
      grade4_bee_conditionals_quantum2: "雲愈來愈多了！\\r\n\\r\n檢查每個雲，在你採集花蜜前看看是不是有花朵藏在裡頭。\\r\n\\r\n記住：\n雲底下藏的東西不見得一樣！"
      grade4_bee_conditionals_quantum4: 有時雲裡面有花朵，有時雲裡藏著蜂窩！使用「如果…否則」積木，如果是花朵就收集花蜜。否則，就釀造蜂蜜（因為它是蜂窩）。
      grade4_bee_conditionals_quantum5: |-
        雲下藏的不是花朵就是蜂窩！\r
        \r
        用`如果…否則`積木，如果是花的話就採集花蜜，\r
        否則，就釀造蜂蜜。
      grade4_bee_functions1: 收集每一朵花的花蜜。
      grade4_bee_functions2: 函式是一段程式碼，用來執行某個任務。請使用 get 2 nectar（採集 2 個花蜜）函式，從每一朵花中採集花蜜。
      grade4_bee_functions3: "函式是執行特定任務的一串程式碼。用「get 5」這個函式來一次拿5個花蜜。\n記得用迴圈來計算理想的積木塊次數。"
      grade4_bee_functions4: "\"移動，並得到花蜜\"函式能讓蜜蜂轉身，收集花蜜，最後返回到開始的地方。\n使用函式來收集所有的花蜜。"
      grade4_bee_nestedLoops0: 使用一個迴圈來收集所有的花蜜。
      grade4_bee_nestedLoops1: 使用巢狀迴圈從每朵花中收集所有的花蜜。
      grade4_bee_nestedLoops2: "**挑戰：**想辦法用這些積木，得到所有的花蜜。"
      grade4_bee_nestedLoops3: 建立一個巢狀迴圈來收集所有的花蜜。
      grade4_bee_nestedLoops4: '使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。'
      grade4_bee_nestedLoops_assess: |-
        **評量：**採集所有的花蜜並且用迴圈來釀成蜂蜜。\r
        \r
        提示：解決方法不只一種喔！
      grade4_farmer_functions1: |-
        *「我們以前見過嗎？我是個農夫！」*\r
        \r
        幫助農夫到南瓜那並收成它們。
      grade4_frozen_freeplay: 您已經變成一個專業的藝術家囉！開始打造一個冬季仙境吧。
      grade4_frozen_functions0: 想一想，問號要換成什麼數字，才可以畫出一個圓形？
      grade4_frozen_functions1a: 使用新的「建立一個圓形」積木讓我建立 10 個相互重疊的圓形。不要忘了在每次畫一個圓之後向前跳。
      grade4_frozen_functions2: 現在我們來建立 20 個互有重疊的圓，在每個圓之後轉向 18 度。
      grade4_frozen_functions3: 這裡有一個「建立一個圓形」的程式積木，可以畫出不同大小的圓。您可以用這個來建立一個大小為 5 的小圓，跟一個大小為 10 的較大的圓嗎？
      grade4_frozen_functions4: 精細複雜的雪花樣式其實可以用非常簡單的形狀來產生。您可以畫重複五個大小為 5 的圓，以及五個大小為 10 個圓嗎？
      grade4_frozen_nested_loop_diamonds2: 你知道每個雪花的形狀都不同嗎？讓我們用另一個「循環」積木創造一個新的雪花，它是由 4 個重複的平行四邊形所組成，每畫完一個平行四邊形就向右轉 90 度。
      grade4_frozen_nested_loop_diamonds3: 現在，讓我們創建新的雪花圖案，通過使用「重複」積木來畫出平行四邊形 10 次，每畫一個之後轉向 36 度。
      grade4_frozen_square: 嗨，我是艾倫戴爾的安娜公主！讓我們用「重複」積木畫個正方形，這樣一來我們就可以用較少的積木完成。你覺得要「重複」幾次（???）才能畫出一個正方形呢？
      grade4_frozen_square_loop1: 嗨，我是艾倫戴爾的安娜公主！讓我們用「重複」積木畫個正方形，這樣一來我們就可以用較少的積木完成。你覺得要「重複」幾次（???）才能畫出一個正方形呢？
      grade4_frozen_square_loop2: 這次我們來建立 3 個正方形吧！每個正方形完成後，記得要轉 120 度，再畫下一個正方形。
      grade4_frozen_square_loop3: 你可以用「重複」積木來畫 10 次正方形，每次轉 36 度嗎？這樣可以繪製出一個雪花喔！
      grade4_playlab_freeplay: '自由發揮的時間到了，用工具箱裡的程式積木來做一些好玩的事吧。 '
      grade4_playlab_test: |-
        使用向右鍵扔出派。\r
        \r
        在我們的遊戲中，要怎樣才能獲得分數呢？在每次小狗用派擊中小貓時，加 1 到你的 points 變數上。使用「當角色2碰到任何東西」事件來觸發分數更新。你可以利用「points = points +1」的方式增加變數值，分數到達 10 分（每次加 1 分）就過關。
      grade4_playlab_test2: 這裡有個函式叫做 `jump`（跳躍），它可以讓你的主要角色向上跳 100 像素。運行這個程式，用方向鍵來控制小狗，並利用 `jump` 函式收集所有的旗幟。
      grade4_review_artist1: 嗨，我是一個藝術家。您可以寫程式來讓我畫出任何東西。現在請您用一些程式積木，讓我沿著圖中的灰色線條畫畫。（每一條線的長度都是 100 像素）
      grade4_review_artist2: '這個房子需要一個屋頂！畫出這個三角形。提示：三個邊的長度都相同。'
      grade4_review_artist3: "跳躍積木只會移動小藝術家而不會繪圖。\n同時使用`跳躍-向前`和`移動-向前`積木來畫出這個虛線。\n每個線條長度為 50 像素。"
      grade4_review_bee1: 現在使用`重複`積木來收集所有的花蜜和蜂蜜。
      grade4_review_bee2: 使用最少的積木，從每一朵花中採集花蜜，並在每一個蜂窩裡釀造蜂蜜。
      grade4_review_bee3: |-
        蜜蜂就是那麼忙！\r
        \r
        幫助蜜蜂收集所有的花蜜及蜂蜜，用的積木愈少愈好。
      grade5_artist_binary1: "二進制（Binary）是個只用兩種符號來表達訊息的方法。以下我們將會使用「關」（用 0 表示）及「開」（用 1 代表）。\\r\\r\n我們提供了「像素」網格，讓你在網格中移動並切換特定的像素方格以進行設計。你能夠讓小藝術家在網格中的第一行以二進位畫出「01010101」嗎？"
      grade5_artist_binary10: 點擊此處觀看提示。
      grade5_artist_binary11: '自由發揮：這裡有張空白畫布讓你創作，開心的玩吧！'
      grade5_artist_binary2: "這裡有一個函式採用 1與 0 的二進位字串，引導藝術家跟隨它們由左至右，由上到下。 當藝術家看到 1 時會填滿方格，當藝術家看到 0 時則忽略方格。\\r \n\\r\n運行這個程式，看看這位藝術家如何使用二進位繪製這個圖案。"
      grade5_artist_binary3: 怎樣的二進制字符串可以讓你循環 8 次來畫出這樣的圖像？
      grade5_artist_binary4: 你可以靠迴圈，只用 3 個二進制（0 或 1）來完成這個圖案嗎？
      grade5_artist_binary5: 圖像上每一排都是用二進位制（binary）組合成的字串。你可以重新排列它們，讓圖片上的哭臉變笑臉嗎？
      grade5_artist_binary6: 用怎樣的六位數的二進制字符串，在重複 11 次後將能畫出這個圖案？
      grade5_artist_binary7: 能讓你重複畫出這個圖案的最短的二進制字符串是什麼？
      grade5_artist_binary8: 完成這幅畫。
      grade5_artist_binary9: |-
        這是一個有更高解析度的畫布（16 X 16像素）！\r
        \r
        當我們開始使用這些位元創作時，看看會發生甚麼事情？
      grade5_artist_for_loops10: |-
        你想得到要怎麼使用你學到的東西來完成這個圖像嗎？\r
        \r
        需要
        提示？點擊這裡。
      grade5_artist_for_loops5: |-
        只是小小的修改了上個可以繪製出這個圖案的程式，你能找出改變了什麼嗎？\r
        \r
        提示，你需要移除某個東西！
      grade5_artist_for_loops6: 如果每次都多轉或少轉一些角度，那麼你可以創作出一個有規律的效果。試著重用上一關的一些代碼，但是轉89度來創造螺旋的正方形。
      grade5_artist_for_loops7: 修改 3 個小地方，把上個關卡的程式修改成這樣！
      grade5_artist_for_loops8: "還記得在上一個階段，我們使用一個變數來控制圖形的邊數嗎？\n現在我們要用 counter 這個變數來做相同的事情。\n這個圖案從一個三角形開始，且每次增加 1 個邊直到畫出一個十邊形。每個圖形的邊長為 100 像素。 "
      grade5_artist_for_loops9: |-
        讓我們總結一下吧！用你所知道的計數迴圈與計數器變數，來創造出每個形狀都比前一個多 2 條邊的圖案，確保每條邊長是這個多邊形邊數的 10 倍。\r
        \r
        這裡提供給你一些些參考的程式碼。
      grade5_artist_for_loopsfreeplay11: |-
        自由發揮靈感：你已經學會了製作這樣的圖案所需的知識了！如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東。 \r
        \r
        需要提示？點擊這裡。
      grade5_artist_functionparameters10: "自由發揮靈感：你已經學會了所有需要創建這個模式的知識了！如果這個圖形引起了你的聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。 \\r\n\\r \n想要知道我們的這些創意圖案是怎麼做出來的嗎？ "
      grade5_artist_functionparameters7: 這個圖形和上一個很類似，你能使用一個計數迴圈和你的函式來完成這個圖案嗎？
      grade5_artist_functionparameters9: '編輯 draw a spiral edge（畫個螺旋圖）以使用 length（長度）和 sides（邊）參數，然後重新創建這些形狀。'
      grade5_artist_functionparameters9a: 完成 draw a spiral edge（畫個螺旋圖）函式，同時詢問螺旋中心所需的最小長度。
      grade5_artist_functionparameters9b: 想一想要怎麼使用你剛剛創建的函式來製作出這個圖案？
      grade5_artist_parameters_squares1: '點擊「編輯」來完成 draw a square（畫個正方形）函式的定義，並且加一個參數。它應該像三角形一樣有一個 length（長度）參數。這次，畫出 3 個正方形，邊長分別為 25、50、75 像素，每個正方形相隔 100 像素。'
      grade5_artist_parameters_squares2a: 編輯這個函式，讓函式裡頭帶有一個稱做 `length`（長度）的參數。
      grade5_artist_parameters_triangles2a: 你有察覺這個函式積木有什麼不一樣嗎？點擊「運行」來看看發生什麼事。
      grade5_artist_parameters_triangles4: 畫出三角形的程式壞掉了。你可以編輯並修正這個函式，以畫出邊長為 25、50、75 的三角形嗎？
      grade5_artist_variables_freeplay10: '自由發揮：嘗試改變這個圖形的邊數。你能改變算法，不管邊數是多少，都讓這個圖形的大小基本不變嗎？提示：如果你用長度除以邊數，這樣當邊數變多的時候，每條邊長會變短。'
      grade5_artist_variables_freeplay14: |-
        自由發揮：讓我們一探究竟！現在你的演算法嵌入了又一個循環中。試著改變這兩個變數的值來畫出很酷的圖形。 \r
        \r
        如果想看到更好的效果，試試使用顏色積木！在循環裡面使用隨機取色，看看效果如何。
      grade5_artist_variables_freeplay15: |-
        想再看個啟發人的設計或者提示嗎？點擊這裡！ \r
        \r
        除此之外，你也可以設計自己的圖形！
      grade5_artist_variables_freeplay16: 還在玩啊？給你一張空白畫布，你可以在上面設計任何東西，隨你高興！
      grade5_artist_variables_hexagons1: "讓我們再試一次！\\r\n\\r\n你可以將 length（長度）變數設為 60，以完成這個酷炫的六邊形圖案嗎？"
      grade5_artist_variables_letterT11: 這裡是更複雜的程式，不過用的是和上個關卡相同的概念 - 你應該將 sides（邊）變數設成多少，才可以畫出這個用正方形組合出來的圖案呢？
      grade5_artist_variables_octagons13: "當一個圖形的邊愈多，每個邊的長度就要愈小，這樣你才能讓整個圖案顯示在畫面。\\r\n我們來重建這個演算式來畫出神奇的圖案，取代原來需手動設置的 length（長度）變數，我們改用運算類型的積木和一個 sides（邊數）變數。這可以確保每個圖形都能完整顯示在畫面。每個多邊形的周長都是 300 像素。\\r\n需要一些提示嗎？點擊這裡。"
      grade5_artist_variables_pentagon8: |-
        使用你在上個關卡學到的，用 sides（邊數）變數來建立這個六邊形。\r
        \r
        看看你在只修改 1 個值的情況下能否畫出一個三角形、正方形、五邊形或者八邊形？
      grade5_artist_variables_pentagon9: 現在，重新建立最後一關的演算法，並創作一個邊長 150 像素的五邊形。
      grade5_artist_variables_pentagons1: "設定正確的 length（長度），並將 length 變數拖曳到正確的位置，以畫出邊長為 100 像素的五角形。\\r\n\\r\n看看你是不是能一次就能設定好 length 的值和程式碼？"
      grade5_artist_variables_pentagons12: 我們將 sides（邊數）參數設為 5。添加到算式中的邊數越多，圖形就會變得愈大！注意這裡有另外一個參數叫做 length（長度）。我們可以在「移動-向前」的地方用到它。將 length 設成 75 讓每個形狀的邊長變成 75。
      grade5_artist_variables_rectangle6: 現在我想要製作一個長方形，它的高是寬的 2 倍。這裡有個叫作 width（寬度）的變數，請把它設為 100。你能用運算類別裡的積木來完成程式嗎？
      grade5_artist_variables_square7: |-
        這是可以畫出任何規則多邊形的一些程式。有一個新的變數叫做 sides（邊），現在設定為 4。不管邊數是多少，你都能使用 sides 變數（隨著運算積木）來轉向正確的角度嗎？\r
        \r
        點擊此處以返回到提示！
      grade5_artist_variables_triangles2: 取代向前移動 150 像素，「移動」積木現在用了一個變數叫做 length（長度）。你可以將 length 設為 150 以畫出這個新的三角形嗎？
      grade5_artist_variables_triangles3: "拖曳數字積木到「設定長度」積木和「重複」積木裡，以畫出一連串的 50 像素長的三角形。\n"
      grade5_bee_for_loops1: 使用一個迴圈來收集每個花朵上的花蜜。
      grade5_bee_for_loops11: "**挑戰：**利用你學過的迴圈來解決這個問題。 "
      grade5_bee_for_loops2: 添加需要的代碼來讓蜜蜂收集到所有的花蜜。看看你需要用到多少程式碼才能完成關卡！（我們會在下一個關卡學到更簡單的辦法。)
      grade5_bee_for_loops6: 你也可以使用一個「計數迴圈」來倒數，試著從 5 數到 1，間隔數為 1 的方式來採集這些花蜜。
      grade5_bee_for_loops8: 你明白了吧！如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      grade5_playlab_freeplay: '自由發揮的時間到了，用工具箱裡的程式積木來做一些好玩的事吧。 '
      grade5_playlab_variables1: 這一次你不需要寫任何程式，只要點擊「運行」來玩這個遊戲！在這個遊戲裡，你扮演一隻狗，要想辦法比貓拿到更多的旗子。使用向下鍵來控制狗，點你玩完了，點擊「完成」。
      grade5_playlab_variables10: 編輯 patrol（巡邏）函式，加進一個 actor（角色）參數，這樣一來我們就可以為每個在畫面上的角色呼叫它。記住這些角色分別對應數字 1、2、3。
      grade5_playlab_variables11: 添加一個名為 speed（速度）的參數到 patrol（巡邏）函式中。試著在「設定速度」積木中使用新的參數，來幫助企鵝趕在其他動物前得到所有旗幟。
      grade5_playlab_variables12: "我們來點有趣的！仔細看看提供的程式碼，你能不能想像每個積木在做些什麼。 \\r\n當你完成後，使用方向鍵來控制小狗，並收集到所有的旗子。 \\r\n注意：\n你不需要對程式進行任何修改"
      grade5_playlab_variables13: 使用`當角色碰到`積木，在小狗碰到其他角色時，把狗送回左上方的位置。
      grade5_playlab_variables14: '自由發揮的時間到了，用工具箱裡的程式積木來做一些好玩的事吧。 '
      grade5_playlab_variables2: 上一關的比賽一點都不公平！修改 `dog_speed`（小狗的速度）變數，確保你可以收集到比貓還要多的旗子，誰先拿到 10 個旗子就勝利！
      grade5_playlab_variables3: 使用向左鍵和向右鍵移動、向上鍵是跳，看看你能不能收集到所有的旗子。
      grade5_playlab_variables4: 現在，我們使用了一個叫作 height（高度）的變數來控制小狗能跳躍的高度。更新 height 變數來讓小狗能夠跳得夠高以碰到所有旗子。
      grade5_playlab_variables6: |-
        使用向右鍵扔出派。\r
        \r
        在我們的遊戲中，要怎樣才能獲得分數呢？在每次小狗用派擊中小貓時，加 1 到你的 points 變數上。使用「當角色2碰到任何東西」事件來觸發分數更新。你可以利用「points = points +1」的方式增加變數值，分數到達 10 分（每次加 1 分）就過關。
      grade5_playlab_variables7: 很好，現在我們來確定這個遊戲不至於太簡單！每當小狗（角色1）被小貓（角色2）的三明治丟到時就扣 1 分。初始分數 10 分似乎不大困難，我們把分數從 10 改成 0 後再試試吧。
      grade5_playlab_variables71: "這是一個早先的遊戲，但是大部分程式都隱藏了。這裡有個新函式叫做 score_points（獲得分數）。\\r\n\\r\n編輯這個函式，使得 points（分數）參數能被添加到 player_score （玩家分數）變數上。 \\r\n\\r\n變數 player_score 應該會在每次小狗的派碰到小貓時增加；在每次小貓的三明治碰到小狗時減少。 \\r\n\\r\n注意：當你完成後，點擊「運行」玩玩看，當小狗得到 6 分時，就可以進入下一關。 "
      grade5_playlab_variables81: "我們已經為你添加了上一關的函數。 \\r\n\\r\n用“如果”模塊來編寫你的遊戲，當play_score玩家分數 大於某個值時，調用level_up升級 函數。 \\r\n\\r\n例如：“play_score” > 6\\r\n\\r\n玩遊戲，並且達到第4級來到達下一關。 "
      grade5_playlab_variables9: "這裡有個函式叫做 `patrol`（巡邏）。\n\\r\n\\r\n編輯 `patrol` 讓貓能夠向上移動 400 像素，再向下 400 像素。"
      grade5_playlab_variables_freeplay: "自由遊戲時間！這裡我們目前為止玩過的所有變數，還有一些是你可能想要的。\\r\n\\r\n注意現在在工具箱裡有好多好多可以被組合的積木！在這裡，我們已經將它們分類放好。花點時間去嘗試每一個東西，當你一切就緖，就可以用重複、變數、事件類的各種指令製作一個遊戲或是故事。\\r\n\\r\n提示：可以捲動頁面以查看工作區裡的所有指令。"
      gradek_adventurer_loops7_challenge: "**挑戰：**階梯上到處都是黃金！寫個程式幫我得到全部的黃金。"
      gradek_artist_loops6: 使用`重複`迴圈為水添加波紋。
      gradek_artist_loopsA: 幫我建置階梯，讓我可以看著船航行到遠方。
      gradek_artist_loopsFP: 小藝術家在遠處看到了一些有趣的東西，你覺得他看到了什麼？把它畫出來。
      gradek_playlab_events1a: 添加一個積木，讓你在點擊「向上按鈕」時，貓也向上移動。
      gradek_playlab_events2a: 添加一個積木，讓你在點擊「向下按鈕」時，貓也向下移動。
      gradek_playlab_events3b: 添加一個按鈕，讓你在點擊它時，貓能向右移動。
      gradek_playlab_events4a: 添加一個積木，讓你在點擊「向左按鈕」時，貓也向左移動。
      gradek_playlab_events5: 關於我的機器人專案！寫下程式，在點擊每隻鳥時分別顯示你的機器人特色。
      gradek_playlab_events5a: 關於我的機器人專案！寫下程式，在點擊每隻鳥時分別顯示你的機器人特色。
      harvey_tictactoe: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      k-1 maze 1: 你可以讓我往西邊移動到達豬的位置嗎？
      k1stickerfreeplay: 小藝術家在遠處看到了一些有趣的東西，你覺得他看到了什麼？把它畫出來。
      level 'grade3_Loops_10: |-
        蜜蜂就是那麼忙！\r
        \r
        幫助蜜蜂收集所有的花蜜及蜂蜜，用的積木愈少愈好。
      level 'grade3_Loops_11: "這個圖形的路徑不同於其他的圖形。\\r\n\\r\n你能收集到花蜜嗎？用的積木愈少愈好。"
      level 'grade3_Loops_12: 你能用最快的方式，讓蜜蜂收集到所有的花蜜及蜂蜜嗎？
      level 'grade3_Loops_2: 這一回，用一個迴圈來收集所有的花蜜。
      level 'grade3_Loops_3: 使用一個`重複`迴圈來收集所有的花蜜。
      level 'grade3_Loops_4: 現在使用`重複`積木來收集所有的花蜜和蜂蜜。
      level 'grade3_Loops_5: 多麼美麗的一片花田啊！幫助蜜蜂到每朵花上參觀一下。你能在 7 個積木內完成嗎？
      level 'grade3_Loops_6: "在這關中，迴圈應該進行多少次？\\r\n\\r\n迴圈是你的朋友！用一些迴圈來減少積木使用數量，並完成這個關卡。"
      level 'grade3_Loops_7: |-
        那些花看起來真是香甜可口！\r
        \r
        從每個花朵上採集花蜜，用的積木愈少愈好。
      level 'grade3_Loops_8: 使用最少的積木來收集所有花蜜及蜂蜜。
      level 'grade3_Loops_9: 使用最少的積木，從每一朵花中採集花蜜，並在每一個蜂窩裡釀造蜂蜜。
      level grade3_Loops_2: 這一回，用一個迴圈來收集所有的花蜜。
      loops_forvideo_collector_cf: 用迴圈的方式讓 Laurel 收集到寶石！
      mike3bitmario: "粗心的二進位編碼器（binary coder）在圖像數據裡頭多輸入了一個 0 還是 1。這個額外的位元（bit）害得瑪利歐故障了！\\r\n\\r\n刪除這個額外的位元，讓瑪利歐恢復原狀！"
      scrat 16 (copy 1): 橡樹！果實！橡樹果實！用「如果」積木帶我到達那裡，使用的積木數愈少愈好。
      scrat 16: 橡樹！果實！橡樹果實！用「如果」積木帶我到達那裡，使用的積木數愈少愈好。
      scrat 17 (copy 1): 好的，讓我們再練習一次，不會太難的，只是請注意 <insert obstacle name for Scrat>！
      scrat 17: 好的，讓我們再練習一遍。不會很難的，但是要小心，別撞到牆！
      scrat 18 (copy 1): '「如果…否則」積木會先檢查條件是否成立，然後才決定執行什麼操作。如果想讓我得到橡樹果實，就用用這個新的積木。'
      scrat 18: '「如果…否則」積木會先檢查條件是否成立，然後才決定執行什麼操作。如果想讓我得到橡樹果實，就用用這個新的積木。'
      scrat 19 (copy 1): 再練習一次「如果…否則」積木，你可以一次就完成嗎？
      scrat 19: 再練習一次「如果…否則」積木，你可以一次就完成嗎？
      scrat 20: 你可以只靠 3 個積木，來幫我完成一個更複雜的關卡嗎？只要你成功了，不管是多長的曲徑，我都能自己通過囉！快點！冰快融化啦！
      skratDebugVideo1: 幫鼠奎特拿到橡樹果實。
      template test: 怎麼了
      weird_playLab: 關於我的機器人專案！寫下程式，在點擊每隻鳥時分別顯示你的機器人特色。
