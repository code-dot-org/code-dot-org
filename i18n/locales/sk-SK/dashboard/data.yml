sk:
  data:
    game:
      name:
        'Unplug1': Úvod do vedy o počítačoch (informatiky)
        'Maze': Bludisko
        'Multi': Viacnásobný výber
        Unplug2: Aritmetické myslenie
        Unplug3: Programovanie na milimetrovom papieri
        'Artist': Umelec
        Unplug4: Algoritmy
        'Artist2': Umelec 2
        Unplug5: Funkcie
        'Farmer': Farmár
        Unplug6: Podmienky
        'Artist3': Umelec 3
        'Unplug7': Napísanie piesne
        'Farmer2': Farmár 2
        Unplug8: Abstrakcia
        'Artist4': Umelec 4
        'Unplug9': Štafetové programovanie
        'Farmer3': Farmár 3
        'Unplug10': Internet
        'Artist5': Umelec 5
        Unplug11: Zhrnutie
        'MazeEC': Bludisko
        'Bounce': Odraziť
        'Flappy': Flappy Bird
        'Jigsaw': Skladačka
        'MazeStep': Krokový režim bludiska
        'Wordsearch': Osemsmerovka
        'Webapp': Laboratórium aplikácií
        'ArtistEC': Umelec
        'TextMatch': Priraďovačka textu
        'StudioEC': Play Lab
        'Applab': Laboratórium aplikácií
        'NetSim': Simulátor Internetu
        'Custom': Artist
        'CustomStudio': Play Lab
    trophy:
      name:
        'Bronze': Bronzová
        'Silver': Strieborná
        'Gold': Zlatá
    concept:
      description:
        'sequence': Postupnosť
        'if': 'Časť - If'
        'if_else': Časť if-else
        'loop_times': 'Časť - repeat'
        'loop_until': 'Časť - repeat until'
        'loop_while': 'Časť - while'
        'loop_for': 'Časť - counter'
        'function': Funkcie
        'parameters': Funkcie s parametrami
    level:
      instructions:
        'maze_2_2': 'Pomôžete mi chytiť neposlušné prasa? Dajte dohromady niekoľko blokov "posunúť vpred" a stlačte "Spustiť", aby som sa tam dostal. '
        'maze_2_1': To prasa mi pije krv. Pomôž mi ho nájsť!
        'maze_2_2_5': Nájdi cestu a veď ma k tomu hlúpemu prasaťu. Vyhni se TNT, lebo bude lietať perie!
        'maze_2_3': Naviguj ma k zelenému zlu! (Pozor na TNT)
        'maze_2_4': Zachovaj pokoj a pomôž mi nájsť to zlé prasiatko. Ináč sa rozhnevám!
        'maze_2_5': K zelenému prasiatku sa možno dostať použitím len 2 blokov. Prídeš na to?
        'maze_2_6': Dostaň ma k zelenému votrelcovi použitím troch blokov.
        'maze_2_7': 'Pomôž sa mi zbaviť toho zlého prasiatka pomocou čo najmenšieho počtu blokov. Skus použiť viac ako jeden blok "opakovať n-krát".'
        'maze_2_8': 'Šedý blok nemôžeš zmazať. Vyrieš túto hádanku použitím bloku "opakuj", ktorý sa zopakuje 3 krát. Vlož do neho 3 bloky: posunúť vpred, posunúť vpred a otoč a nastav blok "opakuj", aby to zopakoval trikrát.'
        'maze_2_9': 'V poriadku, skús nový "opakuj dovtedy" blok - bude akciu opakovať až kým neprídem k tomu otravnému prasaťu.'
        'maze_2_10': 'Ok, posledný krát - vyriešiš toto použitím iba 4 blokov?'
        'maze_2_11': Drahá osoba. Ja zombie. Ja hladný. Musieť... dostať... k slnečnica... Dostaneš ma tam pomocou 5 blokov?
        'maze_2_12': Ok, toto je podobné, ale mierne rozdielne. Spravíš to použitím len 5 blokov?
        'maze_2_13': 'Použi nový "pokiaľ!" blok aby si mňa nechal rozhodnúť kedy sa otočiť. Tip: potrebuješ už len jeden blok, ale nauč sa ako sme ho nastavili aby si to zvládol nabudúce sám.'
        'maze_2_14': 'V poriadku, toto je naozaj posledná hádanka, ale musíš si zapamätať ako si použil bloky "pokiaľ" a "opakovať" spolu.'
        'maze_2_15': 'Chcem slnečnicu! Použi blok "pokiaľ" aby som sa tam dostal čo s najmenším počtom použitých blokov.'
        'maze_2_16': 'Dobre, precvičme si to ešte raz - nie je to veľmi odlišné, ale dávaj pozor na mäsožravky!'
        'maze_2_17': 'Blok "ak-inak" overuje podmienku a potom vykoná jednu ALEBO druhú vec. Skús využiť tento nový blok, aby si ma dostal k slnečnici.'
        'maze_2_18': 'Ďalšie precvičenie bloku "ak-inak". Zvládneš to na prvý pokus?'
        'maze_2_19': Dokážeš pridať len 3 bloky a vyriešiť zložitejšie bludisko? Ak to urobíš správne, môžem prejsť všetky krivé cesty bez ohľadu na ich dĺžku.
        'turtle_1_1': Ahoj, som umelec. Možeš napísať kód aby som nakreslil skoro čokoľvek. Použi pár blokov aby som nakreslil nad šedé čiary v obrázku.
        'turtle_1_2': 'Teraz nakresli štvorec. Poznámka: použi svoju obľúbenú farbu výberom z nového bloku "nastavenie farby".'
        'turtle_1_3': Urobte štvorec s použitím iba 3 častí.
        'turtle_1_4': 'Nakresli trojuholník, ktorého každá strana je inou farbou, použitím nastavenia "náhodná farba", ktoré vždy vyberie inú farbu. Poznámka: budeš musieť zistiť ako ďaleko otočiť kliknutím na číslo v bloku otoč.'
        'turtle_1_5': Teraz na skúšku, nakresli trojuholník a štvorec na nakreslenie obálky.
        'turtle_1_6': 'Dokážeš zistiť ako nakresliť tento trojuholník a štvorec? Poznámka: Najprv vytvor trojuholník, potom zisti o koľko ho treba otočiť než začneš kresliť štvorec.'
        'turtle_1_7': 'Okej, poďme si to trocha sťažiť - skús či dokážeš nakresliť tieto zelené okuliare. Štvorce majú 100 pixelov na každej strane a sú 50 pixelov od seba. Nezabudni kresliť na zeleno!'
        'turtle_1_8': 'Okej, skús zistiť čo sa stane ak spustíš tento kód (alebo stlač "Spustiť" aby si to skúsil). Potom to opakuj toľko krát aby si dokončil kreslenie. Farby budú vždy iné.'
        'turtle_1_9': Dokážeš zistiť aké číslo doplniť miesto otáznikov aby si nakreslil kruh?
        'turtle_1_10': 'Dokázal si to! Teraz nakresli čokoľvek chceš. Nejaké zábavné nápady: panáčik, snehová vločka alebo špirálu. Taktiež skús nový blok "nastav šírku". Zabav sa!'
        'turtle_4_1': 'Dokážeš nakresliť trojuholník (s hranami 100 pixelov) len pomocou 3 blokov? Poznámka: použi blok "opakuj".'
        'turtle_4_2': 'Pridaj blok "otoč vpravo o 90 stupňov" niekde do stredu programu ale von z pracovného prostredia aby si nakreslil tieto trojuholníky.'
        'turtle_4_3': 'Okej, to je kód, ktorý si napísal aby si nakreslil jeden trojuholník. Dokážeš pridať bloky "opakuj" a "otoč" aby si spravil peknú kvetinu?'
        'turtle_4_4': 'Tu je rovnaký kód z predchádzajúceho rébusu, ale po nakreslení trojuholníku otáča len o 36 stupňov. Koľko krát sa to potrebuje zopakovať? (Poznámka: po otočení kresby o 360 stupňov sa vytvorí kruh)'
        'turtle_4_5': 'Tu je ten istý kód z predchádzajúceho rébusu, ale opakuje otočenia 36 krát. O koľko stupňov bude jedno otočenie? (Poznámka: po otočení kresby o 360 stupňov sa vytvorí kruh)'
        'turtle_4_6': Dokážeš nakresliť štvorec s hranami 20 pixelov s použitím len 3 blokov?
        'turtle_4_7': 'Toto je kód na nakreslenie štvorca z posledného rébusu. Dokážeš to opakovať aby si nakreslil 10 priľahlých štvorcov na vytvorenie rebríka? Poznámka: potrebuješ navyše len 2 bloky.'
        'turtle_4_8': Tu je riešenie predchádzajúceho rébusu. Dokážeš pridať len 2 bloky naviac aby si dokončil kresbu?
        'turtle_4_9': Tu je riešenie na predchádzajúce puzzle. O koľko stupňov sa musíte obrátiť na dokončenie výkresu? (Pravdepodobne musíte háadať niekoľko krát)
        'turtle_4_10': Tu je riešenie predchádzajúceho rébusu. Koľko krát by si to mal opakovať aby si dokončil kresbu?
        'turtle_4_11': 'Skús zmeniť čísla v "otoč" a "zopakuj" blokoch aby si spravil iné vzory, alebo experimentuj zmenením zvyšku kódu aby si nakreslil čo chceš.'
        'maze_karel_1_1': 'Ahoj, ja som farmár. Potrebujem vašu pomoc zploštit pole na mojej farme, tak aby bolo pripravené pre výsadbu. Presuňte ma na hromadu hliny a použite blok "odstrániť" na jeho odstránenie.'
        'maze_karel_1_2': 'Ďalej ma posuň do diery a vyplň ju dvoma plnými lopatami hliny, použitím bloku "vyplň".'
        'maze_karel_1_3': Posuň ma na hromadu hliny a povedz mi koľko plných lopát treba odstrániť s použitím tak málo blokov ako sa len dá.
        'maze_karel_1_4': 'Dokázal by si mi pomôcť odstrániť všetky štyri hromady hliny? Poznámka: použi blok opakuj ak môžeš.'
        'maze_karel_1_5': 'Pomôž mi vyplniť všetky tieto diery 5 plnými lopatami hliny. Poznámka: môžeš vložiť blok "opakuj" do bloku "pokiaľ".'
        'maze_karel_1_6': 'Odstráň všetky hromady hliny pomocou tak málo blokov ako sa len dá. Nové možnosti v rozbaľovacej ponuke v bloku "pokiaľ" mi hovoria či stojím na hromade alebo diere.'
        'maze_karel_1_7': Wow, našiel som vážne hlbokú dieru! Neviem koľko plných lopát hliny je treba. Dokážeš napísať program, ktorý ju vypĺňa dokiaľ je pod zemou?
        'maze_karel_1_8': Pomôž mi vyplniť dieru na konci poľa použitím toľko blokov ako je len možné.
        'maze_karel_1_9': 'Nechaj ma odstrániť všetky hromady hliny. Skús použiť tak málo blokov ako je len možné. Poznámka: skús použiť blok "pokiaľ".'
        'maze_karel_1_10': Keďže už pracujem neskoro, je tma a nedokážem povedať aké sú veľké hromady. Teraz nemám všetky možnosti, ktoré som mával v bloku pokiaľ. Posúvaj ma po poli a ak sú tam hromady, tak ich odstráň.
        'maze_karel_1_11': 'Ešte stále je vonku tma. Posúvaj ma po poli. Ak tu je hromada, odstráň ju a ak tam je diera, vyplň ju. Poznámka: použi možnosti z rozbaľovacieho menu v bloku "if".'
        'turtle_2_1': 'Ahoj. Ja som zombie, ktorý je zároveň aj umelec. Milujem kreslenie! Pomôž mi nakresliť štvorec v špeciálnej farbe. Dôležitá poznámka: máš všetky rovnaké bloky, ale teraz boli usporiadané do kategórií.'
        'turtle_2_2': 'Vitaj v používaní funkcií, ktoré ti dovolia definovať nové bloky! Vyskúšaj nový blok "kresli štvorec", nájdeš ho v kategórii "Funkcie" a nakresli malý zelený štvorec 50x50.'
        'turtle_2_3': 'Použi blok "opakuj" (je v kategórii "Slučky") aby si nakreslil 3 štvorce o veľkosti 100, každý je 120 stupňov od seba. A sprav to v 3 rôznych, náhodných farbách.'
        'turtle_2_4': 'Teraz sa ideme zabaviť. Zmeň kód tak, aby si nakreslil 36 štvorcov, ktoré sú 100 pixelov široké a sú od seba 10 stupňov. Poznámka: možno budeš chcieť použiť posuvník, aby si šiel rýchlejšie.'
        'turtle_2_5': 'Nakresli štvorce so stranami 50, 60, 70, 80 a 90 pixelov. Budeš potrebovať päť krát funkciu "kresli štvorec".'
        'turtle_2_6': 'Okej, tento program bude používať počítadlo na nakreslenie rovnakých štvorcov ako naposledy. Chceš, aby štvorec bol rovnakej veľkosti ako počítadlo, tak použi blok "počítadlo". Poznámka: je to v kategórii Premenné.'
        'turtle_2_7': 'Toto je program na kreslenie špirály, ale keď bloky sú schované, tak nebudú fungovať. Vytvor nový program pomocou bloku "počítaj s" (v kategórii slučky) a blok "počítadlo" (v kategórii Premenné), aby si nakreslil rovnakú špirálu.'
        'turtle_2_7_5': 'Je tu nová funkcia "nakresli snehuliaka" (v kategórii Funkcie). Nakresli dvoch snehuliakov s výškou 250 a 100.'
        'turtle_2_8': 'Tu je to trocha zložitejšie. Použi funkciu "nakresli snehuliaka" a nový blok "skoč vpred" (v kategórii Akcie). Nakresli 3 snehuliakov rôznych farbách a 100 pixelov od seba.'
        'turtle_2_9': 'Použi slučku "počítaj s" pre nakreslenie celej rodiny snehuliakov s výškami 110, 100, 90, 80 a 70. Snehuliaci by mali byť 60 pixelov od seba.'
        'turtle_2_10': Tu je kód na experimentovanie s rôznymi špirálami. Čo sa stane ak zmeníš hodnotu otoč? Alebo ak nastavíš náhodnú farbu v slučke? Nakresli čokoľvek chceš.
        'maze_karel_2_1': 'Skús použiť bloky na odstránenie hromád a vyplň všetky diery v zemi. Skús použiť slučky miesto použitia množstva blokov. Poznámka: môžeš použiť slučku vo vnútri inej slučky.'
        'maze_karel_2_2': 'Definovali sme si náš vlastný blok nazvaný "vyplň 5", ktorý teraz je v kategórii Funkcie. Použi to, aby si mi pomohol vyplniť tieto diery.'
        'maze_karel_2_3': 'Použi nový blok funkcie "vyplň 5", aby si mi pomohol vyplniť všetky diery. Budeš musieť potiahnuť blok "vyplň 5" z kategórie Funkcie.'
        'maze_karel_2_4': Definuj novú funkciu, ktorá odstraňuje 7 plných lopát. Potom to použi na napísanie programu, ktorý mi pomôže odstrániť všetky hromady.
        'maze_karel_2_5': Vytvor novú funkciu, ktorá odstraňuje 6 plných lopát z hromady a použi ju, aby si mi pomohol zarovnať všetky hromady.
        'maze_karel_2_6': 'Použi 2 nové funkcie "vyplň 8" a "odstráň 8", aby si mi pomohol zarovnať hromadu a vyplniť dieru.'
        'maze_karel_2_7': Je tu krava na mojom poli! Napíš novú funkciu, ktorá mi pomôže sa vyhnúť krave a odstrániť hromadu. Vlož všetky svoje bloky do novej funkcie.
        'maze_karel_2_8': 'Použi túto novú funkciu "vyhni sa krave a odstráň 1", aby si mi pomohol odstrániť všetky hromady.'
        'maze_karel_2_9': "Ok, here's a function that removes 4 different piles of dirt in a vertical column. Try putting this function inside a loop, so that you remove all the piles of dirt using only a few new blocks."
        'maze_karel_2_10': Move me across the field, and use these two functions to help me remove all the piles and fill all the holes.
        'turtle_3_1': |-
          This puzzle shows you how the "draw a square" and "draw a circle" functions are defined.  Defining a function doesn't run its blocks.  You have to pull out the "draw a square" block to actually draw a square.
        'turtle_3_2': 'Using the "draw a square" function as an example, create a "draw a triangle" function and use it.'
        'turtle_3_3': 'Draw triangular fences around the cats and a square fence around the cow.  Tip: test the program as you go along.'
        'turtle_3_4': 'See if you can figure out how to use "draw a square" and "draw a triangle" (and some other blocks) to draw a house around the lion.'
        'turtle_3_5': 'Now create a new "draw a house" function and use it to house two cats. Hint: create a new function using the "do something" block, and type your own text to name the block.'
        'turtle_3_6': 'Using "draw a square" as an example, add an input named "length" to "draw a triangle". Then, draw triangles in different sizes. (Hint: click the star to add an input to a function)'
        'turtle_3_7': 'Add an input named "length" to "draw a house" and build a big house for the elephant (with edges 150 pixels long)'
        'turtle_3_8': 'Modify "draw a house" so I end up at the bottom right corner after drawing a new house. Use this modified function to draw three houses.'
        'turtle_3_9': 'Can you re-create the "draw a house" function without help? Try it, and then draw a row of houses.'
        'turtle_3_10': "You've learned a lot! Now use it to draw whatever you want. Try to draw a star, or a spiral, or a fancy snowflake."
        'maze_karel_debug_seq_1': "Welcome to debugging! My code doesn't work right. Can you spot the problem and fix it so that I can get my field flat and ready for planting?"
        'maze_karel_debug_seq_2': "What's wrong with this program? How should you fix it so I can remove that pile?"
        'maze_karel_debug_repeat': De-bug this program for me so my field will be nice and flat.
        'maze_karel_debug_while': How should you change this program to help me fill the hole?
        'maze_karel_debug_if': Help! Fix the program so my field will be completely flat.
        'maze_karel_debug_if_else': De-bug this program so I can fill in the holes and remove all the piles.
        'maze_karel_debug_function_1': What should you change about this program to help me remove all the piles?
        'maze_karel_debug_function_2': Can you de-bug this program for me so I can make my field flat?
        'maze_karel_debug_function_3': "Edit this program so I'll remove all the piles on my field. "
        'turtle_5_1': Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)
        'turtle_5_2': Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)
        'turtle_5_3': Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)
        'turtle_5_4': Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)
        'turtle_5_5': Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)
        'turtle_5_6': Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)
        'maze_3_1': I need to get to that pig! Type in a couple of calls to move(); so I can get my eggs back.
        'maze_3_2': Write me a program, so I can make it all the way to the pig.
        'maze_3_3': "How should I get to the pig? Make sure I don't run into the box of TNT!"
        'maze_3_4': Argh! Write me a program that gets me around the TNT and to the pig.
        'bounce_1': 'Attach a block to the "when left arrow" block and press "Run". Move the paddle using the left arrow to reach the finish target.'
        'bounce_2': 'Attach a block to the "when right arrow" and "when left arrow" blocks. Move the paddle to reach both finish targets.'
        'bounce_3': 'Now try something similar with the "when up arrow" block. Move the paddle to the finish target at the top.'
        'bounce_4': This time you need to add four blocks. Move the paddle to all four finish targets to complete this puzzle.
        'bounce_5': |-
          We're going to send a ball flying down towards the paddle. Attach a block to the "when ball hits paddle" block to ensure the ball reaches the finish target.
        'bounce_6': 'Now the finish target is on the top. You need to attach blocks to both of the "when ball hits" blocks to solve this puzzle.'
        'bounce_7': 'Attach blocks to each of the "when" blocks. Bounce the ball until it hits the finish target.'
        'bounce_10': 'There is now a goal at the top. Attach the "score point" and "score opponent point" blocks to the "when ball in goal" and "when ball misses paddle" blocks to make a game. See how many points you can score before your opponent scores twice.'
        'bounce_11': 'You can now attach blocks to the "when run" block. You have to attach the new "launch new ball" block in more than one place. Also, try changing the scene or the speed of the paddle and the ball and see how many points you can score before your opponent scores twice.'
        'bounce_12': "Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones."
        'Custom_builder': 'Drag blocks from the toolbox to the workspace to draw the level you wish to create. Press "Run" when you are ready.'
        'flappy_1': 'Attach a block to the "when click" block, then press "Run". Click or tap the screen to move Flappy to the target.'
        'flappy_2': |-
          Now we've added some ground.  Attach a block to the "when hit the ground" block.  Your code needs to 'END GAME' when Flappy crashes.
        'flappy_3': 'The "when run" block allows you to run code when your game starts.  Try setting the level speed and flapping to the target.'
        'flappy_4': |-
          Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the "when hit an obstacle" block. Your code needs to 'END GAME' when Flappy crashes into the first set of pipes.
        'flappy_5': |-
          Let's add a scoreboard, and count points when Flappy makes it past obstacles. Add to the "when pass an obstacle" block, and then score a point by flying Flappy through the first set of pipes.
        'flappy_6': See if you can still score a point after making Flappy flap either a smaller or larger amount.
        'flappy_7': 'Next, try changing the scene by attaching another block to the "when run" block.'
        'flappy_8': You can set visuals anytime, not just when the game starts. Try setting a RANDOM scene when other events happen, for example, when passing an obstacle.
        'flappy_9': To mix things up, when hitting an obstacle, instead of ending the game try setting the score back to 0.
        'flappy_11': "Create your own Flappy game. You can change all the visuals and all the rules, even the gravity. When you're done, click Finish to let friends try your game on their phones."
        'flappy_k1_1': Play Flappy
        'flappy_k1_2': 'Attach a block to the "when click" block, then press "Run". Click or tap the screen to move Flappy to the target.'
        'flappy_k1_3': |-
          Now we've added some ground.  Attach a block to the "when hit the ground" block.  Your code needs to 'END GAME' when Flappy crashes.
        'flappy_k1_4': 'The "when run" block allows you to run code when your game starts.  Try setting the level speed and flapping to the target.'
        'flappy_k1_5': |-
          Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the "when hit an obstacle" block. Your code needs to 'END GAME' when Flappy crashes into the first set of pipes.
        'flappy_k1_6': |-
          Let's add a scoreboard, and count points when Flappy makes it past obstacles. Add to the "when pass an obstacle" block, and then score a point by flying Flappy through the first set of pipes.
        'flappy_k1_7': See if you can score multiple points for making it past an obstacle
        'flappy_k1_8': 'Next, try changing the scene by attaching another block to the "when run" block.'
        'flappy_k1_9': 'Try changing the player by attaching a "set player" block to the "when run" block.'
        'jigsaw_1': Click the block
        'jigsaw_2': Drag the block to the target
        'jigsaw_3': Arrange the blocks to form the image
        'jigsaw_4': Arrange the blocks to form the image
        'jigsaw_5': Arrange the blocks to form the image
        'jigsaw_6': Arrange the blocks to form the image
        'jigsaw_7': Arrange the blocks to form the image
        'jigsaw_8': Arrange the blocks to form the image
        'jigsaw_9': Arrange the blocks to form the image
        'jigsaw_10': Arrange the blocks to form the image
        'jigsaw_11': Arrange the blocks to form the image
        'jigsaw_12': Arrange the blocks to form the image
        'jigsaw_13': Fix the puzzle!
        'mazestep_1': Maze step description here
        'mazestep_2': Maze step description here
        'mazestep_3': Maze step description here
        'mazestep_4': Maze step description here
        'mazestep_5': Maze step description here
        'studio_c2_1': 'Can you make this dog say "hello world"?'
        'studio_c2_2': Can you make the dog say something and then have the cat say something afterwards?
        'studio_c2_3': Can you write a program to make this dog move to the cat?
        'studio_c2_4': 'Can you write a program that makes the dog move to the cat, and have the cat say "hello" when the dog reaches him?'
        'studio_c2_5': 'Can you write a program to make the octopus say "hello" when it is clicked?'
        'studio_c2_6': Can you write a program to make Waddles move around using the up / down / left /right keys to hit all of the targets?
        'studio_c2_7': 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?'
        'studio_c2_8': 'Can you have Waddles say "Ouch!" and play a "hit" sound if he runs into the dinosaur, and then move him with the arrows to make that happen?'
        'studio_c2_9': Can you add a block to score a point when Waddles runs into the octopus, and then move him with the arrows until you score?
        'studio_c2_10': Can you add blocks to change the background and the speed of Waddles, and then move him with the arrows until you score?
        'studio_c2_11': "Create your own story. When you're done, click Finish to let friends try your story on their phones."
        'studio_c3_story_1': 'Can you make this dog say "hello world"?'
        'studio_c3_story_2': Can you make the dog say something and then have the cat say something afterwards?
        'studio_c3_story_3': Can you write a program to make this dog move to the cat?
        'studio_c3_story_4': 'Can you write a program that makes the dog move to the cat, and have the cat say "hello" when the dog reaches him?'
        'studio_c3_story_5': Can you add a block to make the octopus happy?
        'studio_c3_story_6': "Create your own story. When you're done, click Finish to let friends try your story on their phones."
        'studio_c3_game_1': 'Can you write a program to make the octopus say "hello" when it is clicked?'
        'studio_c3_game_2': Can you write a program to make Waddles move around using the up / down / left /right keys to hit all of the targets?
        'studio_c3_game_3': 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?'
        'studio_c3_game_4': 'Can you have Waddles say "Ouch!" and play a "hit" sound if he runs into the dinosaur, and then move him with the arrows to make that happen?'
        'studio_c3_game_5': Can you add a block to score a point when Waddles runs into the octopus, and then move him with the arrows until you score?
        'studio_c3_game_6': Can you add blocks to change the background and the speed of Waddles, and then move him with the arrows until you score?
        'studio_c3_game_7': "Create your own game. When you're done, click Finish to let friends try your game on their phones."
        'studio_playlab_1': 'Waddles wants to say "hello" - can you help him?'
        'studio_playlab_2': 'Cave Boy (actor 1) and Jasmine (actor 2) would like to say "hello" to each other. Can you help them by using the "say" block twice?'
        'studio_playlab_3': Can you help Tennis Girl get to the flag?
        'studio_playlab_4': Can you help Tennis Boy (actor 1) get to Tennis Girl (actor 2) and play a sound when he gets there?
        'studio_playlab_5': 'Can you help the Spacebot say "greetings earthlings" when it is clicked? Don’t forget to click it after you click Run'
        'studio_playlab_6': Can you help the Witch move around using the up/down/right/left arrow keys to get to all the magical fireballs?
        'studio_playlab_7': 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to it to help the wizard move right and left repeatedly?'
        'studio_playlab_8': Can you add a block to score a point and a block to play a sound when the unicorn runs into the wizard, and then move him with the arrows until you score?
        'studio_playlab_9': Set the background for this alien invasion and help the Spacebot get to the alien faster by changing its speed. Then move him with the arrow keys to get to the Spacebot and alert everyone else
        'studio_playlab_10': "Create your own game. When you're done, click Finish to let friends try your game on their phones."
        'studio_iceage_hello1': 'Sid wants to gather everyone for a new adventure. Can you help him say "hello" by dragging the "say" block out into the work area and typing the word "hello" inside?'
        'studio_iceage_hello2': 'Manny (actor 1) found Sid (actor 2) and wants to invite him on the adventure. Help them greet each other by using the the "actor say" block twice.'
        'studio_iceage_move_to_flag': 'Scrat is looking for his acorn!  Help him go the last 200 pixels using the "move" block.'
        'studio_iceage_move_to_actor': 'Diego (actor 1) is searching for Manny (actor 2). Help Diego move 200 pixels down to Manny using the "move actor" block. Next, connect a block to the "when actor touches" event to play a sound when they find each other.'
        'studio_iceage_repeat': 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to it to help Granny get some exercise by moving left and right repeatedly?'
        'studio_iceage_click_hello': Can you help Sid do a final call for friends when clicked? Don’t forget to click on him after you hit Run.
        'studio_iceage_move_events': 'Scrat is still looking for acorns! Help him scamper around by attaching the "move" block to each of the events and changing the direction to work for each arrow key. When you’re done, click Run and try to collect all of the acorns.'
        'studio_iceage_sound_and_points': 'We’ve provided most of the code that keeps Granny moving left and right, as well as the code to move Sid around the screen. Can you finish the code and add blocks to the "when actor touches" event to make it so that you both play a sound and score a point when Sid and Granny collide? Press Run to play the game.'
        'studio_iceage_warn_ice_age': Everyone needs to move faster because an ice age is coming! Change the background to an icy background and set Sid’s speed to fast, then press Run and move him to Diego to warn him.
        'studio_iceage_throw_hearts': |-
          Sid wants to let his grandmother, Granny, know that he loves her. Use the "actor throw" command to have Sid (actor 1) throw hearts at Granny (actor 2)! Set Granny's mood to happy when she gets hit with the hearts.
        'studio_iceage_free_play': "Time to create your own game or story! When you're done, click Finish to let friends try your game on their phones, tablets, or computers!"
        'studio_gumball_hello1': 'Anais wants to make some new friends. Can you help her say "hello" by dragging the "say" block out into the work area and typing the word "hello" inside?'
        'studio_gumball_hello2': 'Darwin (actor 1) and his brother Gumball (actor 2) are heading to school.  Help them greet each other by using the "actor say" block twice.'
        'studio_gumball_move_to_flag': 'Banana Joe is about to win a field day race!  Help him go the last 200 pixels using the "move" block.'
        'studio_gumball_move_to_actor': 'Gumball (actor 1) and Darwin (actor 2) are late for the field day! Help Gumball move 200 pixels down to Darwin using the "move actor" block.  Next, connect a block to the "when actor touches" event to play a sound when they find each other.'
        'studio_gumball_repeat': 'The "repeat forever" block allows you to run code continuously.  Can you attach blocks to it to help Gumball warm up for his race by moving left and right repeatedly?'
        'studio_gumball_click_hello': 'Can you help Anton announce the start of a race by saying "Ready, set, go!"? To test your program, don’t forget to click Anton after you click Run!'
        'studio_gumball_move_events': 'Darwin is in the flag gathering contest! Help him run around by attaching the "move" block to each of the events. When you’re done, click Run and try to collect all of the flags.'
        'studio_gumball_sound_and_points': 'We’ve provided most of the code that keeps Anton (actor 2) moving left and right, as well as the code to move Banana Joe (actor 1) around the screen.  Can you finish the code and add blocks to the "when actor touches" event to make it so that you both play a sound and score a point when Banana Joe and Anton collide?  Press Run to play the game.'
        'studio_gumball_warn_food_fight': 'Darwin just escaped a food fight! Change the background to "characters" and set Darwin’s speed to fast, then press Run and move him to Penny to warn her.'
        'studio_gumball_join_food_fight': 'Join the food fight! Use the "actor throw item right" command to have Banana Joe (actor 1) throw food at Anton (actor 2)! Set Anton’s mood to angry when he gets hit.'
        'studio_gumball_free_play': "Create your own game or story. When you're done, click Finish to let friends try your game on their phones, tablets, or computers!"
        'studio_full_sandbox': "Create your own game. When you're done, click Finish to let friends try your game on their phones."
        'studio_k1_1': 'Can you make this dog say "hello world"?'
        'studio_k1_2': Can you make the dog say something and then have the cat say something afterwards?
        'studio_k1_3': Can you write a program to make this dog move to the cat?
        'studio_k1_4': 'Make the dog move to the cat and the cat say "hello" when he gets there.'
        'studio_k1_5': Can you add a block to make the octopus happy?
        'studio_k1_6': Create your own story! Move around the cat and dog, and make them say things.
        'maze_wordsearch_k_1': Move me to spell the word EAST
        'maze_wordsearch_k_2': Move me to spell the word SOUTH
        'maze_wordsearch_k_3': Move me to spell the word WEST
        'maze_wordsearch_k_4': Move me to spell the word NORTH
        'maze_wordsearch_k_6': Move me East and then South to spell the word JUMP
        'maze_wordsearch_k_9': Move me one way, then another to spell the word CODE
        'maze_wordsearch_k_13': Move me one way, then another to spell the word DEBUG
        'maze_wordsearch_k_15': Move me one way, then another to spell the word ABOVE
        'maze_wordsearch_k_16': Move me one way, then another to spell the word BELOW
        'maze_wordsearch_k_20': This is a test! Move me one way, then another to spell the word STORY
        'applab_ec_simple': Create your app by using the blocks in the toolbox.
        'turtle_ec_1_2': 'Now, draw a square. NOTE: use your favorite color by picking it in the new "penColor" block.'
        'turtle_ec_1_10': 'You made it! Now, draw anything you want. Some fun ideas: a stick figure, snowflake, or spiral. Also try the new "penWidth" block. Have fun!'
        'studio_ec_sandbox': "Create your own game. When you're done, click Finish to let friends try your game on their phones."
    video:
      name:
        'maze_intro': Maze Intro
        'artist_intro': Artist Intro
        'farmer_intro': Farmer Intro
        'flappy_intro': Flappy Intro
        'loop_times': Repeat Times Block
        'loop_until': Repeat Until Block
        'if': If Block
        'if_else': If/else Block
        'if_else_scrat': If/else Block
        'function': Funkcie
        'loop_while': While Block
        'loop_for': Counter Block
        'parameters': Functions with Parameters
        'hoc_wrapup': Hour of Code Wrapup
        'Unplug1': What is CS?
        'Unplug2': Aritmetické myslenie
        'Unplug3': Programovanie na milimetrovom papieri
        'Unplug4': Algoritmy
        'Unplug5': Funkcie
        'Unplug6': Podmienky
        'Unplug7': Songwriting
        'Unplug8': Abstrakcia
        'Unplug9': Relay programming
        'Unplug10': Internet
        'Unplug11': Zhrnutie
        'C1_happy_maps_unplugged': Happy Maps
        'C1_moveitmoveit_unplugged': Move It, Move It
        'C1_bigevent_unplugged': Veľká udalosť
        'C1_getting_loopy': Getting Loopy
        'C1_pair_programming': Pair Programming
        'C1_maze_intro_sequencing': Maze Sequencing Intro
        'C1_maze_debugging': Maze Debugging
        'C1_bee_level_intro': 'Bee Level - Intro'
        'C1_artist_intro': Artist Intro
        'C1_spelling_bee_intro': Spelling Bee Intro
        'C1_zuck_repeat_loop': Maze Loops
        'C1_bee_loops': Bee Loops
        'C1_maze_loops': Maze Loops
        'C1_playlab_storytelling': 'Play Lab - Create a Story'
        'C1_planting_seed': Planting a Seed
        'C1_building_foundation': Stavanie základov
        'C1_going_places_safely': Bezpečné premiestňovanie
        'C2_maze_intro': Maze Intro
        'C2_artist_intro': Artist Intro
        'C2_zuck_repeat_loop': Maze Loops
        'C2_artist_loops': Artist Loops
        'C2_artist_debugging': Artist Debugging
        'C2_bee_loops': Bee Loops
        'C2_bee_debugging': Bee Debugging
        'C2_bee_conditionals': Bee Conditionals
        'C2_playlab_createstory': 'Play Lab - Create a Story'
        'C2_graph_paper': Programovanie na milimetrovom papieri
        'C2_conditionals_with_cards': Podmienky
        'C2_binary_bracelets': Binary Bracelets
        'C2_relay_programming': Štafetové programovanie
        'C2_paper_airplanes': Paper Airplanes
        'C2_digital_footprint': Your Digital Footprint
        'C2_digital_footprint_v2': Your Digital Footprint
        'C3_maze_level_4': Maze Loops
        'C3_artist_intro': Artist Intro
        'C3_artist_functions': Artist Functions
        'C3_bee_functions': Bee Functions
        'C3_bee_conditionals': Bee Conditionals
        'C3_maze_conditionals': Maze Conditionals
        'C3_artist_nested_loops': Nested Loops
        'C3_farmer_while': While Loops
        'C3_bee_nested_loops': Nested Loops
        'C3_bee_debugging': Bee Debugging
        'C3_bounce': Odraziť
        'C3_playlab_create_game': 'Play Lab - Create a Game'
        'C3_computational_thinking': Aritmetické myslenie
        'C3_dice_race': Dice Race
        'C3_internet': Internet
        'C3_crowdsourcing': Crowdsourcing
        'C3_functional_suncatchers': Functional Suncatchers
        'C3_songwriting_with_parameters': Songwriting With Parameters
        'C4_intro': Introduction
        'C4_loops_zombie': Cykly
        'C4_bee_conditional': Bee Conditionals
        'C4_variables_artist': 'Variables - Artist'
        'C4_variables_playlab': 'Variables - Play Lab'
        'C4_for_loops': For Loops
        'C4_for_loops_bee': For Loops
        'C4_for_loops_no_bee': For Loops
        'C4_math_artist': Programming the Artist with Math
        'C4_function_edit': Editing Functions
        'C4_function_create': Creating Functions
        'C4_function_parameters': Functions with Parameters
        'C4_conditionals': Podmienky
        'C4_unplugged_algorithms': Algorithms with Tangrams
        'C4_unplugged_madlibs': Mad Libs
        'C4_unplugged_variables': Variables in Envelopes
        'C4_unplugged_forloops': For Loops
        'C4_unplugged_parameters': Songwriting with Parameters
        'C4_unplugged_binary': Binary
        'frozen_intro': Úvod do Hodiny kódu
        'frozen_loops': Úvod do cyklov
        'frozen_functions': Úvod do funkcií
        'playlab_intro': Úvod do Play Lab
        'playlab_events': Play Lab Udalosti
        'playlab_repeat_forever': Play Lab Doživotné opakovanie
        'tutorial_puzzle_challenge': 'Tutoriál - Puzzle výzva'
        'infinity_playlab_intro': 'Play Lab - Úvod'
        'infinity_playlab_events': 'Play Lab - Udalosti'
        'infinity_playlab_repeat_forever': 'Play Lab - Doživotné opakovanie'
        'csp_applab_objects': Introduction to Objects
        'csp_applab_databases_1': 'Introduction to Databases - Part 1'
        'csp_applab_databases_2': 'Introduction to Databases - Part 2'
        'csp_applab_processing_lists': Processing Lists with Loops
        'csp_applab_lists_1': 'Introduction to Lists - Part 1'
        'csp_applab_lists_2': 'Introduction to Lists - Part 2'
        'csp_applab_lists_3': 'Introduction to Lists - Part 3'
        'csp_applab_lists_4': 'Introduction to Lists - Part 4'
        'csp_applab_conditionals_1': 'Introduction to Conditionals - Part 1'
        'csp_applab_conditionals_2': 'Introduction to Conditionals - Part 2'
        'csp_applab_conditionals_3': 'Introduction to Conditionals - Part 3'
        'csp_applab_design': Introduction to Design Mode
        'csp_applab_variables_1': 'Introduction to Variables - Part 1'
        'csp_applab_variables_2': 'Introduction to Variables - Part 2'
        'csp_applab_functions': Úvod do funkcií
        'csp_applab_functions_parameters': Functions with Parameters
        'csp_applab_loops': Cykly
        'csp_applab_turtle': Turtle Programming
        'csp_concept_bigdata_medicine': 'Data & Medicine'
        'csp_concept_cybercrime': 'The Internet: Cybersecurity & Crime'
        'csp_concept_encryption': 'The Internet: Encryption & Public Keys'
        'csp_concept_http_html': 'The Internet: HTTP & HTML'
        'csp_concept_what_is_internet': What is the Internet?
        'csp_concept_internet_ip_dns': 'The Internet: IP Addresses & DNS'
        'csp_concept_internet_packets_reliability': 'The Internet: Packets, Routing & Reliability'
        'csp_concept_internet_wires_cables_wifi': 'The Internet: Wires, Cables & Wifi'
        'csp_concept_rgb': A Little Bit About Pixels
        'csp_cs_is_changing_everything': Computer Science is Changing Everything
        'csp_pixelation_color_1': 'Color pixelation widget - Part 1'
        'csp_pixelation_color_2': 'Color pixelation widget - Part 2'
        'csp_pixelation_color_3': 'Color pixelation widget - Part 3'
        'csp_pixelation_bw': Black and white pixelation widget
        'csp_U1L14_tipstricks': 'Unit 1 Lesson 14 Teacher Tips & Tricks'
        'csp_textcompression': Text compression widget
        'csp_textcompression_new': Text compression widget
        'csp_internetsimulator_1': 'Internet Simulator - Part 1'
        'csp_internetsimulator_2': 'Internet Simulator - Part 2'
        'csp_internetsimulator_3': 'Internet Simulator - Part 3'
        'alg_1_intro': 'CS in Algebra - Introduction'
        'alg_2_eval_block': 'CS in Algebra - Evaluation Blocks'
        'alg_3_pemdas': 'CS in Algebra - Order of Operations'
        'alg_4_data_types': 'CS in Algebra - Data Types'
        'alg_5_contracts': 'CS in Algebra - Contracts'
        'alg_6_variables': 'CS in Algebra - Variables'
        'alg_7_function': 'CS in Algebra - Functions'
        'alg_8_design_recipe': 'CS in Algebra - Design Recipe'
        'alg_9_booleans': 'CS in Algebra - Booleans'
        'alg_10_conditionals': 'CS in Algebra - Conditionals'
        'alg_11_coordinate_plane': 'CS in Algebra - Coordinate Plane'
        'alg_12_biggame_variables': 'CS in Algebra - Big Game Variables'
        'alg_13_biggame_animation': 'CS in Algebra - Big Game Animation'
        'alg_14_biggame_booleans': 'CS in Algebra - Big Game Booleans'
        'alg_15_biggame_update_player': 'CS in Algebra - Big Game Update Player'
        'alg_16_biggame_collision_detection': 'CS in Algebra - Big Game Collision Detection'
        'alg_17_sambat_compound_booleans': 'CS in Algebra - Compound Booleans'
        'hoc2015_preview_blocks': Make your own game blocks
        'hoc2015_preview_typing': Make your own game typing
        'hoc2015_preview_conclusion': Make your own game conclusion
        'starwars_intro': 'Star Wars: Budovanie Galaxie s kódom - Úvod'
        'starwars_typing': 'Star Wars: Budovanie Galaxie s kódom - JavaScript'
        'starwars_events': 'Star Wars: Budovanie Galaxie s kódom - Udalosti'
        'starwars_congrats': 'Star Wars: Budovanie Galaxie s kódom - Gratulujeme'
        'starwars_blocks_intro': 'Star Wars: Budovanie Galaxie s kódom - Úvod'
        'starwars_blocks_events': 'Star Wars: Budovanie Galaxie s kódom - Udalosti'
        'starwars_blocks_congrats': 'Star Wars: Budovanie Galaxie s kódom - Gratulujeme'
        'mc_intro': 'Minecraft - Úvod'
        'mc_repeat': 'Minecraft - Opakovanie'
        'mc_if_statements': 'Minecraft - Príkazy Ak'
        'mc_congrats_share': 'Minecraft - Gratulujeme'
        'mc_congrats_no_share': 'Minecraft - Gratulujeme'
        'gumball_intro': 'Gumball Hour of Code - Introduction'
        'gumball_events': 'Gumball Hour of Code - Events'
        'gumball_repeat': 'Gumball Hour of Code - Repeat statements'
        'iceage_intro': 'Ice Age Hour of Code - Introduction'
        'iceage_events': 'Ice Age Hour of Code - Events'
        'iceage_repeat': 'Ice Age Hour of Code - Repeat statements'
    callout:
      text:
        drag_blocks: 'Drag a "move" block and snap it below the other block'
        run: 'Hit "Run" to try your program'
        watch_again: Click here to watch the video again
        gray_block_explanation: "Blocks that are grey can't be deleted. Can you solve the puzzle anyway?"
        show_code_explanation: "Click here to see the code for the program you're making"
        instructions_repeat_explanation: The instructions for each puzzle are repeated here
        category_explanation: "You have all the same blocks but they've now been arranged in categories"
        set_sprite_image: 'Attach a "set actor to image" block to the "when story starts" block to enable an actor for this story'
        studio_say_text: Type what you want your actor to say within these quotes
        jigsaw_click: Click this block!
        move_elsa_forward: 'Drag a "Move Forward" block and snap it below the "When Run" block to make Elsa move forward'
        turn_elsa: 'Use the "Turn" block to make Elsa turn. The number in the drop-down determines how much Elsa turns'
        replace_questions: 'Use the drop-down to replace "???" with a number'
        replace_questions_degree: 'Use the drop-down to replace "???" with the correct degree to turn'
        repeat_blocks: 'Use the "Repeat" block and wrap it around the blocks in the workspace'
        repeat_blocks_1: (1) Use this block and put it around the grey blocks in the workspace
        repeat_blocks_2: '(2) Move the "Repeat" block here, and place the gray blocks inside'
        snowflake_dropdown: Use this drop-down to create different snowflakes!
        degrees_per_side: Divide 360 by the number of sides to get the size of each angle in degrees.
        set_sides: 'Use this block to set "sides" to the number needed to complete the puzzle.'
        set_length: 'Use this block to set "length" to the correct value.'
        which_equation: Which equation makes each side shorter for shapes with more sides?
        get_nectar: 'Use the new "get nectar" block.'
        actions_category: 'The tool box got a new look! The "Actions" blocks are in here now.'
        draw_square_hint: 'Hint: Use the square loop you just made in the last puzzle.'
        edit_function: Click here to edit your function.
        create_function: 'Click here to open the "Functions" flyout, then click the "Create a Function" button.'
        house_hint: "It's ok if the picture doesn't look like a house yet. We will fix it in the next puzzle."
        edit_draw_square: Use this button to edit the function and add the loop.
        edit_get_nectar: Use this button to edit the function and change the direction the Bee will turn to get the nectar.
        logic_category: 'Open the "Logic" flyout to find the "if/else" block.'
        length_parameter: 'Can you update this function so it uses the "length" parameter?'
        frozen_diamond_repeat: Use the repeat block to create this shape.
        frozen_circle_function_in_circle_turn: "Don't forget to turn after creating each circle."
        frozen_circle_function_with_parameter_circle: 'Use the "create a circle" block and change the size.'
        frozen_snowflake_branch: 'Use the "create a snowflake branch" block'
        frozen_create_square: Attach more blocks here to create a square
        playlab_drag_say: 'Drag the "say" block here and type "hello"'
        playlab_use_twice: Use this block twice and remember to change the actor number
        playlab_move_girl: 'Use the "move right" block to move Tennis Girl'
        playlab_play_sound: 'Add "play sound" block here'
        playlab_arrow_keys: Remember to use these to move the witch after clicking on Run
        playlab_add_move: 'Add "move" blocks inside this repeat block'
        playlab_add_score: Add score blocks here
        playlab_add_blocks: Add your blocks here
        set_variable: Drag a number block here to set your variable
        place_variable: Drag your variable inside this block
        bee_for_loop: Drag the largest number of nectar you want the bee to collect here
        place_counter_variable: Drag your counter variable inside this block
        function_editor_draw_square: 'This is your function definition. These blocks run everytime you use the "draw a square" block'
        change_here: Make your change here
        write_draw_square_function: Drag blocks from the toolbox into here that draw a square
        write_draw_triangle_function: Drag blocks from the toolbox into here that draw a triangle
        edit_add_parameter: Click edit to add a parameter in your function
        add_and_drag_parameter: Write in the name of your parameter here, click add, and then drag it into your function definition
        fill_in_actor: Fill in the ??? with numbers that correspond to each actor (1, 2, and 3)
        repeat: Put blocks inside the loop to repeat commands
        if_bee_nectar: 'Use the "if" block to decide if the bee should get nectar'
        if_else_bee: |-
          Use the "if/else" block so that the Bee gets nectar from a flower, and makes honey if it's not a flower
        repeat_full_circle: Enter in the number of times the zombie has to move to make a full circle
        place_length_variable: Drag the length variable here to replace the question marks
        arrows_move_actor: Use the arrows to move the actor
        right_arrow_fireball: Use the right arrow to shoot fireballs
        name_function: Write the name of your function here
        Infinity_move_right_runbutton: Add move block here
        Infinity_move_directions_callout: Which block will make Baymax move up when the up arrow is pressed?
        Infinity_move_directions_callout_arrow: Use these arrows to steer
        Infinity_move_collide_callout: Play a sound when this event occurs.
        Infinity_repeat_callout: Place Move blocks inside here
        craft_run_button_callout: 'Stlačte "Spustiť" pre vyskúšanie programu'
        craft_drag_block_callout: 'Potiahni "Posunúť vpred()" blok a zasuň ho pod iný blok'
        craft_callout_preplaced: Umiestnili sem nejaké bloky aby si mohol začať
        craft_inside_repeat: Opakuj akcie umiestnením blokov tu
        craft_callout_preplaced_house: Tento kód začne stavať tvoj dom. Dokážeš to dokončiť?
        craft_what_is_iron: Vyťaž toto železo!
        craft_callout_moveforward: Tento kód bude kontrolovať lávu, môžeš zadať príkaz pre pohyb dopredu?
