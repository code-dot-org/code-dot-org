sq:
  data:
    instructions:
      2-3 Artist 1 new_instruction: |
        Përshëndetje, unë jam një artist. Ti mund të shkruash kod për të më bërë
        mua të vizatoj pothuajse çdo gjë. Përdor pak blloqe për të më bërë mua të vizatoj mbi vizat gri
        në figurë. (Çdo vizë është 100 pikselë e gjatë)
        
      2-3 Artist 11_instruction: |
        Jepi shenjës së ndalesës një kontur duke bërë një tetëkëndor
        me 8 brinjë, secila 100 piksela e gjatë. Sa gradë duhet të kthehesh? (Ndihmë:
        Sa është 360 pjesëtuar me 8?) 
      2-3 Artist 12_instruction: |
        Vendos bllokun "repeat times" në mënyrë që të krijojë
        një "rreth" për të përfunduar kokërdhokun e syrit. Nëse çdo lëvizje kthehet djathtas me një gradë,
        sa herë të duhet ta përsërisësh që të përfundosh rrethin? 180? 360? 500?
      2-3 Artist 2 new_instruction: |
        Kjo shtëpi ka një mur gjysëm të përfunduar. Çdo brinjë
        është 100, por gjysma e papërfunduar është vetëm 50. Përfundo murin. 
      2-3 Artist 2_instruction: |
        Kjo shtëpi ka një mur gjysëm të përfunduar. Çdo brinjë
        është 100, por gjysma e papërfunduar është vetëm 50. Përfundo murin. 
      2-3 Artist 3.4_instruction: |
        Blloku kërcimit lëviz artistin pa vizatuar.
        Vizato vizën bosh duke përdorur të dyja blloqet e kërcimit dhe vizatimit.
      2-3 Artist 3_instruction: |
        Kjo kapele është 100 piksela e lartë. Vizato një kapele që është
        70 piksela më pak.
      2-3 Artist 3new_instruction: |
        Kapelja e kuqe është e gjatë 100 piksela. Përfundo duke vizatuar
        një kapele të zezë 70 piksela më të shkurtër. Gjatësia e kapeles së zezë është 30 piksela.
      2-3 Artist 4_instruction: Më ndihmo të përfundoj shtëpinë për këtë macen.
      2-3 Artist 5_instruction: |
        Zëvendëso këtë kod me një bllok "repeat times"
        për të vizatuar të njëjtën shtëpi duke përdorur vetëm 3 blloqe.
      2-3 Artist 6_instruction: |
        Kjo shtëpi ka nevojë për një çati! Vizato trekëndëshin. Ndihmë:
        të treja brinjët janë të së njëjtës gjatësi.
      2-3 Artist 7_instruction: |
        Përfundo duke vizatuar gjysmën e djathtë të dritares së fundit.
        Çdo katror i dritares është 25 piksela. 
      2-3 Artist 8_instruction: |
        Përfundo dhomat për çdo kafshë duke ndarë
        drejtkëndëshin në 2 katrorë të barabartë. Drejtkëndëshi është 200 piksela i gjerë
        dhe 100 piksela i gjatë.
      2-3 Artist 9 NEW_instruction: Përfundo këtë balonë
      2-3 Artist 9 REPLACEMENT_instruction: Përfundoni duke vizatuar këto shkallë!
      2-3 Artist 9_instruction: Përfundo këtë balonë
      2-3 Artist Assessment 1_instruction: |
        Vlerësimi: Përfundo duke vizatuar dhëmbin e fundit,
        25 piksela të gjërë dhe 25 piksela të gjatë.
      2-3 Artist Debugging 1_instruction: |
        A mund ta bësh këtë kapele me një gjatësi 
        100?
      2-3 Artist Debugging 10_instruction: 'Vatra e drejtimit në kontrolluesin e lojës sonë është shumë e ngushtë. Ndihmë: Zgjeroje me 10 piksel'
      2-3 Artist Debugging 11_instruction: |
        Më ndihmo të përfundoj flokun e dëborës.
        Sa herë më duhet të "përsëris" për ta përfunduar atë?
      2-3 Artist Debugging 12_instruction: |
        Supozohet që unë të shtoj një dallgë oqeani në
        këtë skenë. A mund të më ndihmosh?
      2-3 Artist Debugging 2_instruction: |
        Kodi për tre mustaqet që
        shikon është gabim. Ndihmë: çdo mustaqe është 75 piksela e gjatë. Rregullo këtë kod për të vizatuar 
        mustaqet.
      2-3 Artist Debugging 3_instruction: |
        Varka ime ka një vrimë! A mund ta rregullosh atë
        duke ndryshuar këndin e vijës? Ndihmë: këndi i fundit është jashtë me 15 gradë.
      2-3 Artist Debugging 4_instruction: |
        Cili është imazhi që ne po përpiqemi të
        vizatojmë? Përfundo duke lidhur pikat duke përdorur vizat dhe këndet e duhur.
      2-3 Artist Debugging 5_instruction: |
        Kodi për këmbën dhe shputën që ti
        shikon është i gabuar. Ndihmë: Këmba është shumë e gjatë, ne mund të fshijmë një hap (synohet lojë fjalësh)
      2-3 Artist Debugging 6_instruction: |
        Duket sikur jam ulur në një karrike që
        i mungon një këmbë. modifiko blloqet për të vizatuar këmbën.
      2-3 Artist Debugging 7_instruction: |
        Duket sikur C në kod është vizatuar mbrapsht.
        A mund ta bësh të duket si C?
      2-3 Artist Debugging 8_instruction: "Helika ime e letrës e ngulur në shkop nuk ka përfunduar ende. Sa herë duhet t'a përsëris që të përfundojë?"
      2-3 Artist Debugging 9_instruction: |
        Kodi për këtë trung është i pasaktë. Ndihmë:
        Këndi është jashtë 60 gradë
      2-3 Artist Debugging Assessment 1_instruction: |
        Kjo formë është shumë e vogël. Mund 
        ta bësh më të madhe? Ndihmë: duhet të jetë 75 piksela e gjatë çdo brinjë.
      2-3 Artist Free Play_instruction: Lojë-falas! Vizato çfarëdo që dëshiron.
      2-3 Artist Functions 1_instruction: |
        Përshëndetje. Unë artisti zombi. Më pëlqen të vizatoj!
        Më ndihmo të vizatoj xhamat katrorë. Ndihmë: ura midis xhamave është 
        25 piksela më e shkurtër sesa gjatësia e katrorit.
      2-3 Artist Functions 10_instruction: |
        këtu janë dy funksionet, një për të vizatuar një
        marsh të madh dhe një për të vizatuar një marsh të vogël. Përdori ato për të vizatuar pjesën e brendshme të një makine!
      2-3 Artist Functions 11.5_instruction: |
        këtu kemi të njëjtin funksion "Vizato një gjashtëkëndësh".
        Çfarë ndodh nëse ti kthehesh vetëm me 60 gradë çdo herë që e bën ciklin?
      2-3 Artist Functions 11_instruction: |
        Ne e kemi riemëruar funksionin "vizato një katror"
        për të "vizatuar një gjashtëkëndësh," por akoma vizaton vetëm katrorë! A mund ta modifikosh
        funksionin "vizato një gjashtëkëndësh" për të vizatuar një gjashtëkëndësh me brinjë 50 piksela, dhe vizaton figurën duke përdorur funksionin?
      2-3 Artist Functions 12 Mike_instruction: |
        Funskionet janë vërtet të mrekulleshme për të vizatuar
        gjëra komplekse disa herë. A mund ta përdorësh funksionin "vizato një lule"
        për të mbushur pjesën e mbetur të kutisë së ujitjes? (Ndihmë: Lulet janë të gjitha të ndara me nga
        100 piksela gjatësi)  
      2-3 Artist Functions 12_instruction: |
        Funskionet janë vërtet të mrekulleshme për të vizatuar
        gjëra komplekse disa herë. A mund ta përdorësh funksionin "vizato një lule"
        për të mbushur pjesën e mbetur të kutisë së ujitjes? (Ndihmë: Lulet janë të gjitha të ndara me nga
        100 piksela gjatësi)  
      2-3 Artist Functions 13_instruction: |
        Ne ju kemi siguruar ju katër funksione.
        Përdori ato në çdo mënyrë që të pëlqen brenda një ose më shumë cikleve për të bërë figurat që
        ti mund të ndash me shokët. Shtyp lësho për të parë një shembull.
      2-3 Artist Functions 2_instruction: |
        Funksionet të lejojnë ty të përcaktosh blloqe të reja! Ne kemi
        lëvizur blloqet për të vizatuar një katror brenda një funksioni të quajtur "vizato një katror".
        A mund ta përdorësh funksionin "vizato një katror" për të krijuar xhamat? Katrorët
        janë 75 piksela të veçuar.
      2-3 Artist Functions 3_instruction: |
        Modifiko funksionin për të vizatuar një katror me
        gjatësi brinje 115 dhe vizato xhama më të mëdhenj. Katrorët janë tani 45 piksela 
        të veçuar.
      2-3 Artist Functions 4_instruction: |
        Përdor bllokun "repeat" për të vizatuar këto
        3 katrorë.
      2-3 Artist Functions 7_instruction: |
        Përdor funksionin "vizato një shtëpi" për të vizatuar 
        dy shtëpi duke përdorur dy parametra të ndryshëm. (Ndihmë: shtëpia e parë është 100 piksela).
      2-3 Artist Functions 9_instruction: |
        Këtu kemi një funksion flok dëbore. Eksperimento
        me të për të krijuar një skenë dimri! Ky është një loje e lirë, pra nuk ke asnjë
        puzzle për të zgjidhur. Argëtohu!
      2-3 Artist Loops 1_instruction: |
        A mund të bësh një gjashtëkëndësh me brinjë që janë
        100 piksela të gjatë për të përfunduar qelinë? Kujto, që ti do të duhet të kthehesh
        vetëm 60 gradë!
      2-3 Artist Loops 10_instruction: |
        Çfarë i ndodh dizenjimit kur ne bëjmë 
        hapin tonë përfundimtar përpara sa gjysma e gjatësisë?
      2-3 Artist Loops 11_instruction: |
        Tani le të vendosim *tjetër* cikël rreth e rrotull
        gjithë krijimit tonë! Mos harro të shtosh një kënd në fund të ciklit të jashtëm.
      2-3 Artist Loops 2_instruction: |
        Tani përdor një bllok përsëritës për të bërë elementin
        guaskë.
      2-3 Artist Loops 4_instruction: |
        Dëshiron të shohësh çfarë ndodh kur ne përsërisim atë
        formë herë pas here duke përdorur një cikël?
      2-3 Artist Loops 5_instruction: Tani le të bëjmë një ndryshim të vogël tek cikli dhe shohim sa ndryshe do bëhet figura jonë.
      2-3 Artist Loops 6_instruction: Shto një lëvizje më tepër dhe një tjetër kthehu brenda ciklit dhe shiko si ndryshon dizenjimi jot.
      2-3 Artist Loops 7_instruction: Ne mund të përdorim cikle për të bërë gjithë llojet e poligonëve. A mund të krijosh një romb brenda këtij gjashtëkëndëshi?
      2-3 Artist Loops 8_instruction: Le të vendosim të dy elementet brenda një cikli.
      2-3 Artist Loops 9_instruction: "Ne do të ciklojmë elementet e njëjtë, por\n tani ne do të shtojmë distancë midis tyre.\r\nPërdor të njëjtin kod si më përpara, por shto një hap përpara në fund të ciklit të jashtëm.\n"
      2-3 Artist Loops New 1_instruction: Le të vizatojmë kokën e robotit! A mund të bësh një katror me brinjë që janë 100 piksela?
      2-3 Artist Loops New 10_instruction: |
        Tani le të bashkojmë një grup me V së bashku,
        duke i vizatuar ato në një cikël.
      2-3 Artist Loops New 11_instruction: |
        Këtë herë le të vizatojmë atë 24 herë. Shto
        një kthehu majtas me 30 gradë tek ky kod dhe vendose atë të gjithin në një bllok përsëritës.
      2-3 Artist Loops New 12_instruction: |
        Vizato një diamant me brinjë 100 piksela.
        
      2-3 Artist Loops New 13_instruction: Tani vizato diamantin 3 herë në një cikël.
      2-3 Artist Loops New 14_instruction: |
        Tani le të vizatojmë diamantin 10 herë
        por rrotullohu 90 gradë midis çdo diamanti.
      2-3 Artist Loops New 15_instruction: Vizato diçka argëtuese.
      2-3 Artist Loops New 2_instruction: |
        Këtu është një pjesë kodi që ti përdore për të vizatuar
        atë katror. Çfarë ndodh nëse ti përdor bllokun repeat për të ekzekutuar këtë kod 4 herë?
      2-3 Artist Loops New 9_instruction: |
        Vizato një V të thjeshtë ku të dyja brinjët janë 50 
        piksela për të përfunduar shigjetën.
      2-3 Artist Match Hex Pic_instruction: 'Përshtatje: Ndihmo në përfundimin e Hexagonit.'
      2-3 Artist Match Rho Pic_instruction: 'Përshtatje: Përfundo kodin e munguar.'
      2-3 Artist Match Sq Pic_instruction: 'Pershtatje: Përfundo kodin e munguar'
      2-3 Artist Match Tri pic_instruction: 'Përshtarje: Mbush kodin e munguar.'
      2-3 Artist Nested Loops 1_instruction: "Ti ke përdorur ciklet për të vizatuar format më përpara,\npor a e dije që ti mund të vendosje një cikël brenda një cikli tjetër?\r\nCiklo gjithë këtë\nbllok kodi 3 herë për të vizatuar modelin."
      2-3 Artist Nested Loops 10_instruction: |
        Ciklo këtë kod 12 herë për të përfunduar
        modelin.
      2-3 Artist Nested Loops 11_instruction: |
        Ciklo këtë kod 4 herë për të përfunduar 
        modelin, kthehu 90 gradë pas çdo rrethi.
      2-3 Artist Nested Loops 12_instruction: |
        Ciklo këtë kod 12 herë për të përfunduar
        dredhjet.
      2-3 Artist Nested Loops 2_instruction: |
        Tani ciklo këtë trekëndësh 6 herë. Pas 
        çdo trekëndëshi, ti do të kesh nevojë të kthehesh 60 gradë përpara se të vizatosh tjetrin.
      2-3 Artist Nested Loops 3_instruction: |
        Ti do të kesh nevojë të ciklosh trekëndëshin 12
        herë për të vizatuar këtë model. Pjesto numrin e gradëve në një rreth (360)
        me numrin e formave që je duke vizatuar (12) për të zbuluar se sa duhet të kthehesh
        pas çdo forme.
      2-3 Artist Nested Loops 4_instruction: |
        Ciklo këtë diamant 12 herë për të vizatuar
        një lule. Ndihmë: 12 diamantët janë si 12 trekëndëshat që bëre - sa do të duhet
        të kthehesh pas çdo forme?
      2-3 Artist Nested Loops 5_instruction: |
        Mbush këtë dritare ndërtese me
        një cikël të mbivendosur. Dritaret janë 20 piksela të gjatë dhe 20 piksela të veçuar.
      2-3 Artist Nested Loops 6_instruction: |
        Dinosauri ka 8 thumba mbi
        bishtin e tij; çdo thumb është 30 piksela e gjatë. Ciklo trekëndorin 8 herë, por 
        sigurohu të ecësh përpara pas secilit.
      2-3 Artist Nested Loops 7_instruction: |
        Ciklo këtë trekëndësh 10 herë për të vizatuar
        diellin. Ti do të kesh nevojë të lëvizësh dhe të kthehesh pas çdo trekëndëshi. Ti mund të 
        zbulosh sa duhet të kthehesh duke pjestuar numrin e gradëve në një rreth 
        me numrin e formave që ti krijon.
      2-3 Artist Nested Loops 8_instruction: |
        Tani le të shtojmë pak bar tek figura jonë.
        Çdo tufë bari është 50 piksela veç e veç.
      2-3 Artist Nested Loops 9_instruction: |
        Ne do ta mbarojmë këtë figurë duke shtuar
        një lule. Ciklo diamantin 12 herë për të vizatuar lulen tënde.
      2-3 Artist Nested Loops Free Play_instruction: |
        Lojë e lirë, vizato diçka të hatashme
        me ciklet e mbivendosura.
      2-3 Bee Conditionals 1_instruction: |
        Përshëndetje! Unë jam një bletë. Më ndihmo të marr nektar nga
        lulja.
      2-3 Bee Conditionals 10_instruction: "Lulet lejla mund të kenë ose 1 ose 0\nnektar. Kujdes mos mbledhësh nektar nga lulja lejla nëse nuk ka\nnektar.\r"
      2-3 Bee Conditionals 11_instruction: Mblidh nektar tek lulet që kanë nektar.
      2-3 Bee Conditionals 12_instruction: |
        Përdor një cikël për të kontrolluar dhe mbledhur nektarin
        nga të gjitha lulet.
      2-3 Bee Conditionals 13_instruction: |
        Mblidh nektar dhe bëj mjaltë. Ndihmë:
        çfarë ndodh nëse ti përdor kushtin "if nectar" në një lule të kuqe? Mund
        ta përfundosh këtë me një cikël?
      2-3 Bee Conditionals 14_instruction: |
        Mblidh nektar dhe bëj mjaltë. Kujdes
        mos mbledhësh nektar nga një lule lejla nëse nuk ka nektar.
      2-3 Bee Conditionals 15_instruction: Mblidh nektar nga të katërta lulet.
      2-3 Bee Conditionals 2_instruction: |
        Përshëndetje, unë jam një bletë! Më ndihmo të mbledh gjithë
        nektarin nga luet. Përdor një cikël.
      2-3 Bee Conditionals 3_instruction: |
        Më ndihmo të mbledh gjithë nektarin
        nga lulet dhe bëj mjaltë. Përdor një cikël.
      2-3 Bee Conditionals 4_instruction: |
        Më ndihmo të mbledh gjithë nektarin nga
        lulet dhe të bëj gjithë mjaltin.
      2-3 Bee Conditionals 5_instruction: |
        Lulet lejla mund të kenë ose 1 ose 0
        nektar, por ti nuk di se cila nga ato! Kujdes mos mbledhësh
        nektar nga një lule lejla nëse nuk ka. Kontrollo nëse nektari është i barabartë me 1 
        duke përdorur bllokun if.
      2-3 Bee Conditionals 6_instruction: |
        Kontrolloje këtë lule me një bllok "if"
        për të parë nëse ka nektar.
      2-3 Bee Conditionals 7_instruction: Mblidh nektar nga çdo lule nëse ka.
      2-3 Bee Conditionals 8_instruction: |
        Kjo fushë ka lule të kuqe dhe lejla.
        Lulet e kuqe kanë një sasi të ditur nektari, por nektari i luleve lejla është i panjohur.
        Mblidh gjithë nektarin.
      2-3 Bee Conditionals 9_instruction: Mblidh gjithë nektarin nga çdo lule.
      2-3 Bee Conditionals Assessment 1_instruction: |
        Vlerësim: Mblidh gjithë 
        nektarin, Kujdes mos mbledhësh nektar nga një lule lejla nëse nuk ka.
      2-3 Bee Debugging 1_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 10_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 2_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 3_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 4_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 5_instruction: |
        Kkëto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin. Tani ti mund
        të përdorësh lësho dhe ec.
      2-3 Bee Debugging 6_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin. 
      2-3 Bee Debugging 7_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 8_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 9_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging Assessment 1_instruction: |
        Vlerësim: Këto blloqet janë
        duke më bezdisur vërtet. Rregullo gabimin (et) për të mbledhur gjithë nektarin dhe bëj 
        gjithë mjaltin.
      2-3 Bee Functions 1_instruction: |
        Funksionet janë blloqe kodi që kryejnë
        një detyrë. Përdor funksionin "merr 2 nektar" për të mbledhur nektarin nga secila
        lule.
      2-3 Bee Functions 10_instruction: |
        Lulet lejla mund të kenë secila ose 1 ose 0 nektar. Krijo 
        një funksion që mbledh nektar vetëm nga lulet lejla që kanë nektar.
      2-3 Bee Functions 2_instruction: |
        Funksionet janë blloqe kodi që performojnë
        një detyrë. Përdor funksionin "merr 5" për të marrë 5 nektarë në një kohë. Sigurohu të
        përdorësh një cikël për të arritur një numërim blloku ideal, gjithashtu.
      2-3 Bee Functions 3_instruction: Mblidh gjithë nektarin nga çdo lule.
      2-3 Bee Functions 4_instruction: |
        Funksioni "lëviz dhe merr nektar" kthen
        bletën, mbledh nektarin, dhe rikthen bletën ku filloi. Përdor
        funksionin për të mbledhur gjithë nektarin.
      2-3 Bee Functions 5_instruction: |
        Tani ka më shumë nektar tek lulet.
        Modifiko funksionin e dhënë në mënyrë që të mbledhë 4 nektarët dhe ti përdori ato për të mbledhur
        gjithë nektarin nga lulet.
      2-3 Bee Functions 6_instruction: |
        Tani përdor të njëjtin funksionin për të mbledhur nektarin
        nga të treja lulet.
      2-3 Bee Functions 7_instruction: |
        Luket janë tani larg. Modifiko 
        funksionin e dhënë dhe përdore atë për të mbledhur gjithë nektarin nga lulet.
      2-3 Bee Functions 8_instruction: |
        Krijo funksionin tënd që merr 7 nektar,
        ecën përpara, dhe bën 7 mjalte. Përdor funksionin për të mbledhur nektar te çdo 
        lule dhe bëj mjaltë tek çdo koshere.
      2-3 Bee Functions 9_instruction: |
        Krijo funksionin tënd që shkon poshtë një
        rruge, merr nektar, bën mjaltë, dhe më pas rikthen bletën në majë të
        rrugës.
        
      2-3 Bee Functions Assessment 1_instruction: |
        Vlerësim: Përdor funksionin e dhënë
        për të mbledhur nektar nga çdo lule.
      2-3 Bee Functions Assessment 2_instruction: |
        Vlerësim: Krijo një funksion
        për të bërë 3 mjaltë në një kohë.
      2-3 Bee Loops 1_instruction: |
        Çdo lule mban një njësi nektari. Mblidh
        nektar nga çdo lule. 
      2-3 Bee Loops 10_instruction: |
        A mund të përdorësh një cikël while brenda dy ciklesh të tjerë
        për të mbledhur gjithë nektarin?
      2-3 Bee Loops 11_instruction: |
        Përdor ciklet while për të mbledhur gjithë nektarin
        nga lulet në këtë fushë.
      2-3 Bee Loops 12_instruction: |
        Përdor ciklet while për të mbledhur gjithë nektarin
        nga lulet në këtë fushë.
      2-3 Bee Loops 13_instruction: |
        Vlerësim: Përdor bllokun repeat për të mbledhur
        gjithë nektarin.
      2-3 Bee Loops 1A_instruction: Ckemi, unë jam një bletë. Mund të më ndihmosh të mbledh nektarin nga këto lule?
      2-3 Bee Loops 2_instruction: Përdor një cikël për të mbledhur nektarin dhe përgatitur mjaltin.
      2-3 Bee Loops 2A_instruction: "Mund t'a kryesh detyrën tënde më me lehtësi me një cikël?"
      2-3 Bee Loops 3_instruction: |
        Mblidh nektarin nga çdo lule dhe bëj mjaltë
        tek çdo koshere.
      2-3 Bee Loops 3A_instruction: |
        A mund të përdorësh një cikël për të mbledhur gjithë
        nektarin?
      2-3 Bee Loops 3B_instruction: Tani përdor bllokun e ri të përsëritjes për të mbledhur të gjithë nektarin dhe për të përgatitur të gjithë mjaltin.
      2-3 Bee Loops 4_instruction: |
        Përdor një cikël të njëjtë si puzzle i fundit, por bëj
        një kthesë brënda tij.
      2-3 Bee Loops 4A_instruction: Cfare ndodh nëse e lidhni këtë pjesë 3 herë? Mos harroni të përgatisni në fund mjaltin!
      2-3 Bee Loops 5_instruction: |
        Përdor një cikël për të shkuar poshtë shkallëve dhe mblidh
        nektarin.
      2-3 Bee Loops 6_instruction: |
        Përdor një cikël për të mbledhur nektarin nga çdo lule
        dhe bëj mjaltë te çdo koshere.
      2-3 Bee Loops 7_instruction: |
        Vendos këto blloqe brënda një cikli për të mbledhur nektar
        nga çdo lule.
      2-3 Bee Loops 8_instruction: |
        Këto lulet lejla kanë një sasi të panjohur
        nektari. Përdor ciklin "while nectar" për të mbledhur gjithë nektarin. Ky cikël 
        do të veprojë për aq kohë sa kushti është i vërtetë, në këtë rast Nectar > 0.
      2-3 Bee Loops 9_instruction: |
        Cikli while mund të performojë të njëjtin veprim si 
        një fjali if në një cikël. Shto ciklin while tek ky kod për të performuar të njëjtën
        detyrë.
      2-3 Bee Loops Assessment 1_instruction: |
        Vlerësim - Përdor një cikël while për të mbledhur 
        gjithë nektarin nga kjo lule.
      2-3 Maze 1_instruction: |
        A mund të më ndihmosh mua të kap derrkucin e inatosur? Grumbullo 
        disa blloqe "move forward" së bashku dhe shtyp "Lësho". 
      2-3 Maze 10_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze 11_instruction: |
        Më ço tek lulja jam i uritur! Sa herë
        duhet të përsërisësh një bllok?
      2-3 Maze 12 (copy 1)_instruction: |
        A mund ta rivendosësh përgjigjen vetëm
        me dy blloqe? (Ndihmë: Krijo një cikël duke përdorur bllokun "repeat times".)
      2-3 Maze 12 (copy 2)_instruction: |
        A mund ta rivendosësh përgjigjen vetëm
        me dy blloqe? (Ndihmë: Krijo një cikël duke përdorur bllokun "repeat times".)
      2-3 Maze 12 (old)_instruction: |
        Më ço tek derrkuci, tani me bllokun 
        Përsërit herët!
      2-3 Maze 12 - One Move Block_instruction: |
        Get to the pig! But this time, you
        can only use one `move forward` block. Do you see any other blocks that could
        help you?
      2-3 Maze 12_instruction: |
        A mund të rivendosësh këto pesë blloqe vetëm me dy blloqe?
        (Ndihmë: Krijo një cikël duke përdorur një bllok "repeat times".)
      2-3 Maze 13 (old)_instruction: |
        Më ço tek derrkuci, tani me bllokun
        Përsërit derisa!
      2-3 Maze 13_instruction: Më ço tek derrkuci duke përdorur vetëm dy blloqe.
      2-3 Maze 14 (old)_instruction: Më ço tek derrkuci me bllokun Përsërit derisa!
      2-3 Maze 14_instruction: |
        Më ço tek luledielli! (Ku është blloku "përsërit herët"
        kur unë kam nevojë?)
      2-3 Maze 15 (old)_instruction: Më ço tek derrkuci me bllokun Përsërit derisa!
      2-3 Maze 15_instruction: Përdor dy ciklet për të arritur tek derrkuci duke përdorur më pak blloqe.
      2-3 Maze 16 (old)_instruction: Më ço tek derrkuci me bllokun Përsërit derisa!
      2-3 Maze 16 before_instruction: Më ço tek derrkuci.
      2-3 Maze 16_instruction: Më ço tek luledielli. Ciklo sekuencën!
      2-3 Maze 2_instruction: Ky derrkuci po më bezdis pendët. Më ndihmo ta arrij atë!
      2-3 Maze 3_instruction: Ndiq gjurmët dhe më drejto për tek derrkuci budalla. Shmang TNT-në ose përndryshe do të ikin puplat!
      2-3 Maze 4_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze 5_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze 6_instruction: |
        Qetësohu dhe më ndihmo të gjej derrkucin e keq. Përndryshe
        unë mund të nevrikosem!
      2-3 Maze 7_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze 8_instruction: Më ço tek derrkuci!
      2-3 Maze 9_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze Loops 1_instruction: A mund të më çosh tek derrkuci duke përdorur 5 blloqe?
      2-3 Maze Loops 17_instruction: Më ço tek luledielli!
      2-3 Maze Loops 18_instruction: Më ço tek luledielli!
      2-3 Maze Loops 19_instruction: Më ço tek luledielli!
      2-3 Maze Loops 20_instruction: Më ço tek luledielli!
      2-3 Maze Loops 21_instruction: Më ço tek luledielli!
      2-3 Maze Loops Assessment 1_instruction: |
        Vlerësim: Më ço tek luledielli
        duke përdorur vetëm 5 blloqe! 
      2-3 Maze sq1_instruction: |
        This pig is ruffling my feathers.  Help me find
        him!
      2-3 Maze sq10_instruction: Më ço tek derrkuci! Çfarë blloqesh u përsëritën?
      2-3 Maze sq10v2_instruction: Më ço tek derrkuci! Çfarë blloqesh u përsëritën?
      2-3 maze sq11_instruction: Më ço tek derrkuci! Çfarë blloqesh u përsëritën?
      2-3 maze sq12_instruction: |
        A mund të zëvëndësosh përgjigjen e kaluar me një cikël
        duke përdorur një bllok "repeat times"?
      2-3 maze sq13_instruction: |
        I dashur person. Unë zombi. Duhet... të arrij... te luledielli.
        Krijo cikël me bllokun "repeat until".
      2-3 maze sq14_instruction: A mund të arrish tek luledielli duke përdorur vetëm katër blloqe?
      2-3 maze sq15_instruction: A mund të arrish te luledielli duke përodorur vetëm pesë blloqe?
      2-3 maze sq16_instruction: Në rregull, kjo është e njëjtë, por me pak ndryshime. A mund ta bësh vetë me 5 blloqe?
      2-3 Maze sq2_instruction: Ndiq gjurmët dhe më drejto për tek derrkuci budalla. Shmang TNT-në ose përndryshe do të ikin puplat!
      2-3 Maze sq3_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze sq4_instruction: |
        Qetësohu dhe më ndihmo të gjej derrkucin e keq. Përndryshe
        unë mund të nevrikosem!
      2-3 Maze sq5_instruction: |
        Më ço tek derrkuci! Sa herë duhet të përsërisësh
        një bllok?
      2-3 Maze sq6_instruction: |
        A mund ta rivendosësh përgjigjen vetëm
        me dy blloqe? (Ndihmë: Krijo një cikël duke përdorur bllokun "repeat times".)
      2-3 Maze sq7_instruction: Më ço tek hajduti i gjelbër duke përdorur vetëm 3 blloqe.
      2-3 Maze sq8_instruction: |
        Më ço tek derrkuci! (Ku është blloku "repeat times"
        kur unë kam nevojë?)
      2-3 Maze sq9_instruction: Krijo cikle për të arritur tek derrkuci duke përdorur sa më pak blloqe.
      2-3_instruction: |
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: Ndihmoje zogun të kapë derrkucin e pabindur duke e lëvizur atë përpara
      20hr_farmer_stage9_1_instruction: |
        Hi, I'm a farmer. I need your help to flatten
        the field on my farm so it's ready for planting. Move me to the pile of dirt
        and use the "remove" block to remove it.
      20hr_farmer_stage9_10_instruction: |
        I'm working late, so it's dark out, and
        I can't tell how large the piles are. Now I don't have all the options I
        used to have on the while block. Move me along the field, and if there is
        a pile, remove it
      20hr_farmer_stage9_11_instruction: |
        It's still dark outside. Move me along
        the field. If there is a pile, remove it, and if there is a hole, fill it
        in. Hint: use the dropdown menu of options on the "if" block.
      20hr_farmer_stage9_2_instruction: |
        Next, move me to the hole and fill it with
        TWO shovelfuls of dirt, using the "fill" block.
      20hr_farmer_stage9_3_instruction: |
        Move me to the pile of dirt and tell me
        how many shovelfuls to remove using as few blocks as possible.
      20hr_farmer_stage9_4_instruction: |
        Can you help me remove all four piles of
        dirt? Hint: use a repeat block if you can.
      20hr_farmer_stage9_5_instruction: |
        Help me fill in all these holes with 5 shovelfuls
        of dirt. Hint: you can put a "repeat" block inside the "while" block.
      20hr_farmer_stage9_6_instruction: |
        Remove all the piles of dirt, using as few
        blocks as possible. The new options in the dropdown menu on the "while"
        block tell me if I'm standing on a pile or a hole.
      20hr_farmer_stage9_7_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs. Can you write a program that fills
        it until the ground is even?
      20hr_farmer_stage9_8_instruction: |
        Help me fill in the hole at the end of the
        field, using as few blocks as possible.
      20hr_farmer_stage9_9_instruction: |
        Make me remove all these piles of dirt.
        Try to use as few blocks as possible. Hint: try using a "while" block.
      20hr_maze_stage2_1_instruction: |
        Can you help me to catch the naughty pig?
        Stack a couple of "move forward" blocks together and press "Run" to help
        me get there.
      20hr_maze_stage2_10_instruction: |
        Ok, try the new "repeat until" block -
        it will repeat until I reach the annoying pig.
      20hr_maze_stage2_11_instruction: |
        Ok, one last time for practice - can you
        solve this one using only 4 blocks?
      20hr_maze_stage2_12_instruction: |
        Dear person. Me zombie. Me hungry. Must...
        get... to sunflower... Can you get me there with only 5 blocks?
      20hr_maze_stage2_13_instruction: |
        Ok, this is similar, but slightly different.
        Can you do it in only 5 blocks?
      20hr_maze_stage2_14_instruction: |
        Use the new "if" block to let me decide
        when to turn. Hint: you only need one more block, but learn how we set it
        up so you can do it on your own next time.
      20hr_maze_stage2_15_instruction: |
        Ok, this is just like the last puzzle, but
        you need to remember how you used the "if" block and the "repeat" block
        together.
      20hr_maze_stage2_16_instruction: |
        Me want sunflower! Use an "if" block to
        get me there with the fewest number of blocks.
      20hr_maze_stage2_17_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the chompers!
      20hr_maze_stage2_18_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the sunflower try to use
        this new block.
      20hr_maze_stage2_19_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      20hr_maze_stage2_2_instruction: |
        This pig is ruffling my feathers. Help me
        to find him!
      20hr_maze_stage2_20_instruction: |
        Can you add just 3 blocks to help me solve
        a more complex maze? If you do it right, I can walk any curvy path no matter
        the length.
      20hr_maze_stage2_3_instruction: |
        Trace the path and lead me to the silly pig.
        Avoid TNT or the feathers will fly!
      20hr_maze_stage2_4_instruction: |
        Guide me to the green evilness! (Watch out
        for TNT)
      20hr_maze_stage2_5_instruction: |
        Keep calm and help me to find the bad pig.
        Otherwise I might get angry!
      20hr_maze_stage2_6_instruction: |
        There's a way I can get to the silly pig
        using only 2 blocks. Can you figure it out?
      20hr_maze_stage2_7_instruction: |
        Try to get me to the green intruder using
        only three blocks.
      20hr_maze_stage2_8_instruction: |
        Help me banish this bad piggy using the fewest
        number of blocks. Try using more than one "repeat times" block.
      20hr_maze_stage2_9_instruction: |
        When a block is grey, that means you can't
        delete it. Solve this puzzle using the "repeat" block that repeats 3 times.
        Try putting these 3 blocks inside the grey "repeat" block: move, move, turn.
      4-5 Artist 1_instruction: |
        Më ndihmo të përfundoj vizatimin e kutisë sime. (Secila vijë
        është 300 piksela e gjatë) 
      4-5 Artist 10_instruction: |
        Shtyp "Lësho" për të provuar kodin. Më pas, përsërite atë
        aq herë sa duhet për të përfunduar vizatimin. Ngjyrat do jenë ndryshe çdo herë.
      4-5 Artist 11_instruction: |
        Përfundo vijat e gjelbra. Vijat janë 300 piksela
        të gjata dhe 15 piksela të veçuara.
      4-5 Artist 2_instruction: |
        A mund ta ciklosh këtë kod për të përfunduar
        katrorin?
      4-5 Artist 3.5_instruction: |
        Ok, përpiqu të zbulosh çfarë ndodh nëse
        ti ekzekuton këtë kod (ose shtyp "Lësho" për ta provuar atë). Më pas përsërite atë aq herë sa duhet për të përfunduar vizatimin. Ngjyrat do të jenë ndryshe çdo herë.
      4-5 Artist 3_instruction: |
        Ky krevati drejtkëndësh i lules ka një perimetër 600.
        Brinja e gjatë është 200. Vizato drejtkëndëshin.
      4-5 Artist 4_instruction: |
        Sa gradë është një rreth? Ciklo
        blloqet për të krijuar një rreth ngjyrash.
      4-5 Artist 5_instruction: Çfarë këndi përdor ti?
      4-5 Artist 6_instruction: |
        Trekëndëshi barabrinjës ka kënde 60, 60,
        dhe 60 gradë. Çdo brinjë është 200 piksela. Përfundo vizatimin.
      4-5 Artist 7_instruction: |
        Trekëndëndëshi i drejtë i ka këndet 30, 60, 90
        gradë. Gjatësia e diagonales është dyfishi i gjatësisë së 100 pikselave. Përfundo
        vizatimin.
      4-5 Artist 8_instruction: |
        Vija në gjysmën e fushës së futbollit është pingul
        me anët e fushës. Kjo fushë ka një perimetër prej 800 pikselash dhe është 240 piksela
        i gjatë. Sa i gjerë është? Vizato kufijtë dhe vijën e mesit.
      4-5 Artist 9_instruction: |
        Vizato gjysmën tjetër që dizenjimi të jetë simetrik.
        Trekëndëshat janë barabrinjës dhe janë 50 piksela të gjatë.
      4-5 Artist Assessment 1_instruction: |
        Vlerësim: Përdor një cikël për të vizatuar trekëndëshin
        barabrinjës. Secila brinjë është 300 piksela.
      4-5 Artist For Loops 1_instruction: |
        Vendos numrat 1 deri tek 10 brenda në
        blloqet e gjerësisë dhe vizato kodin.
      4-5 Artist For Loops 11_instruction: |
        Përfundo bllokun "for" në mënyrë që
        të numërojë 0, 20, 40, 60, 80... 200.
      4-5 Artist For Loops 12_instruction: 'Çfarë ndodh nëse ti kthen mbrapsht numrat "from" dhe "to"? Përfundo bllokun "for" që të numërojë 200, 180, 160, 140, 120...0. '
      4-5 Artist For Loops 13_instruction: |
        Ky dizajn filloi pa një cikël "for"
        dhe është duke punuar me shumë blloqe! Përdor një bllok "for" për të përfunduar spiralen. Ndihmë:
        gjatësia e vijës së fundit është 250 piksela.
      4-5 Artist For Loops 14_instruction: |
        Dikush filloi kodin, por më pas kuptoi
        që duhet të ketë një mënyrë më të shpejtë! Përdor një bllok "for" për të zëvëndësuar blloqet dhe
        përfundo spiralen trekëndore. (Ndihmë: gjatësia e vijës së fundit është 300 piksela.
      4-5 Artist For Loops 15_instruction: |
        Dikush filloi kodin, por më pas kuptoi
        që duhet të ketë një mënyrë më të shpejtë! Përdor një bllok "for" për të zëvëndësuar blloqet dhe
        përfundo spiralen gjashtëkëndore. (Ndihmë: gjatësia e vijës së fundit është 200 piksela.
      4-5 Artist For Loops 2_instruction: |
        This is a "for" block. Instead of typing
        1,2,3... 10, the "for" block can repeat the blocks inside it and count the
        numbers for you. Place the number 10 into the "to" section of the "for"
        block.
      4-5 Artist For Loops 3_instruction: |
        Si mund të numërojmë nga 1 deri në 50? Modifiko
        bllokun "for".
      4-5 Artist For Loops 4_instruction: |
        Përfundo bllokun "for" që të numërojë
        nga 1 tek 10 me nga 1.
      4-5 Artist For Loops 6_instruction: |
        Vizato katrorë me brinjë 50, 60, 70,
        80, dhe 90 piksela. Ty do të duhet të përdorësh funksionin "draw a square" pesë
        herë.
      4-5 Artist For Loops 7_instruction: |
        Vizato të njëjtët katrorë por përdor një bllok "count
        with" për të ndryshuar madhësitë. Vendos bllokun "counter" në funksionin
        "draw a square". Ndihmë: Është në kategorinë e Variablave.
      4-5 Artist For Loops 8_instruction: |
        A mund të përfundosh programin duke vendosur
        blloqet brenda një blloku "for" që numëron nga 10 deri tek 200 me 10? Ti mund
        të gjesh bllokun "for" në kategorinë Ciklet.
      4-5 Artist For Loops 9_instruction: |
        Këta rrathë janë të madhësisë 5, 10, 15, 20,
        25, 30, dhe 35. Vizato rrathët duke përdorur një bllok "for".
      4-5 Artist Free Draw 1_instruction: |
        Vizatim çfarë të duash! Vizato çfarëdo që ti je inspiruar
        për të krijuar.
      4-5 Artist Functions 1_instruction: Përdor një cikël repeat për të vizatuar këtë trekëndësh.
      4-5 Artist Functions 10a_instruction: |
        Vendos këtë kod brenda funksionit 'vizato një flok dëbore'
        dhe zëvëndësoje 50-ën me parametrin 'madhësia'. Funksioni bën tashmë
        një flok dëbore që  është 100 piksela.
      4-5 Artist Functions 10b_instruction: |
        Përdor funksionin 'vizato një flok dëbore'
        për të krijuar madhësi të ndryshme flokësh. Ndihmë: floku i parë i dëborës është 25 në gjatësi
        dhe çdo flok dëbore është dy herë më i madh se madhësia e të parit.
      4-5 Artist Functions 11_instruction: |
        Ky funksion "vizato një gjashtëkëndësh" përdor 
        funksionin "vizato një trekëndësh". Përfundo funksionin gjashtëkëndësh. (Ndihmë: Një 
        gjashtëkëndësh ka 6 brinjë, secila 100 piksela e gjatë)
      4-5 Artist Functions 12_instruction: |
        Përfundo funksionin 'vizato dallgë'. Çdo
        dallgë krijohet nga një dallgë e lartë dhe nga një e ulët. Ndihmë: Vizato 5 dallgë blu.
      4-5 Artist Functions 13 Free play_instruction: |
        Këtu janë disa funksione për të
        vizatuar planete, yje, raketa dhe robotë. Përdori ata në çdo mënyrë që do për të bërë
        figura që ti mund ti ndash me shokët e tu.
      4-5 Artist Functions 14 Free play_instruction: |
        Këtu, ju kemi dhënë 
        funksione të ndryshme. Përodri ata si të duash brenda një ose më shumë ciklesh
        për të bërë figura që ti mund ti ndash me shokët e tu. Kliko 'Lësho' për të parë
        një shembull.
      4-5 Artist Functions 15 Assessment_instruction: |
        Vlerësim: Përdor funksionin "vizato një katror"
        për të krijuar katrorët. Katrorë janë 50, 100, dhe 150
        piksela.
      4-5 Artist Functions 2a_instruction: |
        Tani vendosi këto blloqe në një funksion të ri
        të quajtur "vizato një trekëndor të vogël" dhe thirre atë.
      4-5 Artist Functions 2b_instruction: |
        Tani krijo një funksion të quajtur
        "vizato një trekëndësh të vogël" duke përdorur blloqet e dhënë.
      4-5 Artist Functions 3_instruction: |
        Tani krijo funksionet "vizato një trekëndor mesatar"
        dhe "vizato një trekëndor të madh". Funksioni "vizato një trekëndor të vogël"
        është bërë për ty. Trekëndorët kanë gjatësi brinjësh 50 (i vogli), 100 (mesatari),
        dhe 150 (i madhi). 
      4-5 Artist Functions 4_instruction: |
        Ky funksioni i ri "vizato një trekëndësh"
        ka një parametër dhe mund të bëjë punën e të tre funksioneve të mëparshëm. Vizato 
        të njëjtët trekëndorë duke përdorur këtë funksionin e ri.
      4-5 Artist Functions 5_instruction: |
        A mund ta modifikosh funksionin "vizato një trekëndësh"
        në një funksion "vizato një katror" për të ndryshuar vizatimin?
      4-5 Artist Functions 6_instruction: |
        Përdor funksionet "vizato një katror" dhe "vizato një
        trekëndësh" për të vizatuar një shtëpi. (Ndihmë: Brinjët e katrorit janë 200 piksela)
      4-5 Artist Functions 6b_instruction: |
        Përdor funksionet vizato një katror dhe trekëndësh
        bashkë me blloqet e tjerë për të krijuar një shtëpi duke ju shtuar atyre funksionin
        "vizato një shtëpi" dhe duke e thirrur atë.
      4-5 Artist Functions 7_instruction: |
        Përdor funksionin "vizato një shtëpi" për të vizatuar
        shtëpitë që janë 100 piksela dhe 50 piksela. Të dya shtëpitë janë të ndara me nga
        50 piksela.
      4-5 Artist Functions 8_instruction: |
        Funksioni "vizato një lule" ka një parametër
        që të lejon ty të vendosësh gjatësinë e bishtit. Vendose atë tek 200 dhe shiko çfarë ndodh.
      4-5 Artist Functions 9_instruction: |
        Vizato këto 3 lulet. Gjatësia e të parës
        është 100 dhe lulj atjetër është gjithmonë 50 piksela më shumë se gjatësia e
        të parës. Lulet janë 100 piksela veç e veç.
      4-5 Artist Patterns 1_instruction: |
        A mund ta vizatosh këtë katror duke përdorur një cikël?
        Secila brinjë është 20 piksela e gjatë.
      4-5 Artist Patterns 10_instruction: |
        Ky kod vizaton dy rreshta të gjashtëkëndëshit -
        ciklo të gjithën 4 herë për të vizatuar të gjithë kosheren. Ndihmë: Ty do të duhet
        të kërcesh mbrapsht 120 piksela në pozicionin tënd të ciklit për tu siguruar që artisti nuk
        mbyll ekranin.
        
      4-5 Artist Patterns 11_instruction: |
        Sa herë do të duhet të ciklosh këtë
        për të vizatuar një gjysëm rrethi? Ndihmë: Nëse kemi 360 gradë në një rreth dhe secili
        cikël lëviz 3 gradë, sa herë do të nevojitet të ciklosh  për të vizatuar një rreth të plotë?
      4-5 Artist Patterns 12_instruction: |
        Nëse ti e kopjon këtë cikël dhe kthen majtas në vënd 
        ta kthesh djathtas, çfarë ndodh? A mund ta përsërisësh atë për të vizatuar këtë dallgë?
      4-5 Artist Patterns 13_instruction: |
        Tani le të ciklojmë të gjithën katër
        herë për të krijuar këtë kornizë figure. Kujdes me cepat - ti nuk mund 
        të kthehesh 90 gradë! Nëse të ciklosh një kthesë 3 gradë 60 herë bën një gjysëm rreth, 
        cili nga këto blloqe kodi do të bëjë një çerek rrethi për cepat?
      4-5 Artist Patterns 2_instruction: |
        Nëse ti vendos ciklin e katrorit tënd brenda një cikli tjetër,
        ne e thërrasim një cikël të mbivendosur. Çfarë të duhet për të shtuar tek cikli jot i jashtëm
        për tu siguruar se të 15 katrorët rreshtohen pas njëri tjetrit?
      4-5 Artist Patterns 3_instruction: |
        Tani le të shkojmë një nivel më thellë! Ne kemi
        mbivendosur gjithë bllokun e kodit në një cikël tjetër, por ti ke nevojë të arrish 
        artistin mbrapsht për të vizatuar rreshtin tjetër. Cilin nga këto blloqe kodi mund 
        të vendosësh në fund të pozicionit për të vizatuar gjithë rrejtën?
      4-5 Artist Patterns 4_instruction: |
        Ky diamant ka brinjë 50 piksela dhe kënde
        120 dhe 060 gradë. Përdor një cikël për ta vizatuar.
      4-5 Artist Patterns 5.5_instruction: |
        Sa herë duhet të përsërisësh
        këtë bllok për të vizatuar gjithë rrjetën me diamantë?
      4-5 Artist Patterns 5_instruction: |
        Le të përsërisim për të bërë një rresht me 6 diamantë.
        Vërej që ne kemi ndryshuar kodin e diamantit tonë për tu përsëritur 3 herë në vend të 2 herë - si mendon pse është bërë kjo?
      4-5 Artist Patterns 6_instruction: |
        Sa herë do të duhet të përsërisësh këtë
        bllok për të vizatuar të gjithë rrjetën e diamantëve?
      4-5 Artist Patterns 7_instruction: |
        Le të modifikojmë kodin nga puzzle i fundit
        për të bërë këtë model më kompleks. Shiko se si diamantet mbivendosen tani, përpiqu
        të ndryshosh  "kërcimet mbrapsht" të parat nga 100 në 50 (gjysma aq larg) - tani sa larg
        duhet të shkojë artisti në "kërcimet mbrapsht" të dyta?
      4-5 Artist Patterns 8_instruction: |
        Përodrni një cikël për të vizatuar këtë gjashtëkëndësh me 40 
        piksela brinjët dhe 60 gradë këndet.
      4-5 Artist Patterns 9.5_instruction: |
        Le të ciklojmë këtë kod për të vizatuar dy rreshta
        gjashtëkëndëshash. Vërej se si rreshti jonë i dytë është zhvendosur djathtas.
      4-5 Artist Patterns 9_instruction: Tani përsërisni atë kod 3 herë për të vizatuar rreshtin. Shënjestro, secili gjashtëkëndësh është 80 piksel i gjerë nga e majta në të djathtë, i matur nga pikat më të largëta.
      4-5 Artist Patterns Free Play_instruction: |
        Lojë e lirë - provo dorën tënde për të bërë 
        modelin tuaj!
      4-5 Bee Conditionals - FC Test_instruction: |
        The bee only wants nectar right
        now. Not all objects are flowers, so check underneath EVERY CLOUD to see if
        it is hiding a flower. If it is, then you can gather nectar.
      4-5 Bee Conditionals 1 (copy 1)_instruction: |
        Bleta nuk mund të thotë nëse kjo është
        një lule apo një koshere. Grumbullo nektar vetëm nga lulet, por së pari kontrollo
        nëse është një lule apo koshere.
      4-5 Bee Conditionals 1_instruction: |
        Bleta nuk mund të thotë nëse kjo është
        një lule apo një koshere. Grumbullo nektar vetëm nga lulet, por së pari kontrollo
        nëse është një lule apo koshere.
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        Bleta dëshiron vetëm nektar 
        tani. Kujto, jo të gjithë objektet janë lule, kështu që kontrollo për të mblehdur nektar vetëm
        tek lulet.
      4-5 Bee Conditionals 2_instruction: |
        Bleta dëshiron vetëm nektar 
        tani. Kujto, jo të gjithë objektet janë lule, kështu që kontrollo për të mblehdur nektar vetëm
        tek lulet.
      4-5 Bee Conditionals 3_instruction: |
        Tani bleta dëshiron të bëjë mjaltë.
        Kontrollo të bëjë mjaltë vetëm tek kosheret.
      4-5 Bee Conditionals 4 (copy 1)_instruction: |
        Objekti i panjohur është ose
        një lule ose një koshere. Përdor bllokun if/else për të mbledhur nektar nëse është
        lule, përndryshe për të bërë mjaltë (sepse është koshere).
      4-5 Bee Conditionals 4_instruction: |
        Objekti i panjohur është ose
        një lule ose një koshere. Përdor bllokun if/else për të mbledhur nektar nëse është
        lule, përndryshe për të bërë mjaltë (sepse është koshere).
      4-5 Bee Conditionals 5_instruction: |
        Mund të jetë një lule ose një koshere
        nën ato re. Përdor bllokun if/else për të mbledhur nektar nëse ka
        lule, përndryshe të bëjë mjaltë (sepse është një koshere).
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        Kjo lule lejla mund të ketë secila
        3, 2 ose 1 nektar. Këtu një bllok if-else kombinohet me një tjetër bllok
        if-else për të krijuar një bllok if, else-if, else. Përfundo zgjidhjen për të mbledhur
        sasinë e panjohur të nektarit.
      4-5 Bee Conditionals 6_instruction: |
        Kjo lule lejla mund të ketë secila
        3, 2 ose 1 nektar. Këtu një bllok if-else kombinohet me një tjetër bllok
        if-else për të krijuar një bllok if, else-if, else. Përfundo zgjidhjen për të mbledhur
        sasinë e panjohur të nektarit.
      4-5 Bee Conditionals 7_instruction: |
        Kjo lule lejla mund të ketë secila
        3, 2 ose 1 nektar. Përfundo funksionin "kontrollo lulen lejla" dhe përdore
        atë të mbledhësh gjithë nektarin te lulet.
      4-5 Bee Conditionals 8_instruction: |
        Shkruaj një funksion brenda bllokut të quajtur
        "kontrollo lulen bëj mjaltë." Funksioni jot duhet të kontrollojë sa nektar 
        ka lulja lejla dhe mblidhe atë, ec përpara. dhe më pas bëj mjaltë.
      4-5 Bee Conditionals Assessment 1_instruction: |
        Vlerësim: Ky kod është i gabuar.
        Përfundo funksionin "merr nektarin ose bejë mjaltin", më pas thirre atë për të mbedhur
        gjithë nektarin dhe mjaltin. Kujto që lulet lejla mund të kenë 3, 2, ose 1 nektarë.
      4-5 Bee Debugging 1_instruction: |
        Këto blloqet po më bezdisin vërtet. A mund ti
        rregullosh ato?
      4-5 Bee Debugging 10_instruction: Gjeji gabimet dhe rregulloji ato.
      4-5 Bee Debugging 11_instruction: A numërohet kjo në mënyrë korrekte?
      4-5 Bee Debugging 2_instruction: Ndihmo bletën të gjejë nektarin dhe të bëjë mjaltë.
      4-5 Bee Debugging 3_instruction: Gjeji gabimet dhe rregulloji ato.
      4-5 Bee Debugging 4_instruction: Këto blloqe nuk funksionojnë. Cili është modeli?
      4-5 Bee Debugging 5_instruction: Diçka nuk është në rregull këtu...
      4-5 Bee Debugging 6_instruction: |
        Lulj lejla ka një sasi të panjohur
        nektari. Rregullo blloqet për të gjetur gjithë nektarin nga lulja.
      4-5 Bee Debugging 7_instruction: Funksionit i mungon diçka...
      4-5 Bee Debugging 8_instruction: |
        Ky funksion është në rregull, por nuk është përdorur
        si duhet.
      4-5 Bee Debugging 9_instruction: Pse nuk po bën bleta mjaftueshëm mjaltë?
      4-5 Bee Debugging Assessment 1_instruction: 'Vlerësim: Rregullo kodin.'
      4-5 Bee Nested Loops 1_instruction: Përdor një cikël për të mbledhur gjithë nektarin.
      4-5 Bee Nested Loops 2_instruction: |
        Mblidh gjithë nektarin nga secila lule.
        Përdor një cikël të mbivendosur. 
      4-5 Bee Nested Loops 3_instruction: |
        Mblidh gjithë nektarin duke vendosur
        kodin e fillimit në një cikël të mbivendosur.
      4-5 Bee Nested Loops 4_instruction: |
        Mblidh gjithë nektarin nga secila lule
        dhe bëj mjaltë tek çdo koshere. Përdor një cikël të mbivendosur. 
      4-5 Bee Nested Loops 5_instruction: |
        Mblidh gjithë nektarin duke krijuar
        një cikël të mbivendosur.
      4-5 Bee Nested Loops 6_instruction: Mblidh gjithë nektarin.
      4-5 Bee Nested Loops 7_instruction: |
        Vendos këtë cikël brenda një cikli tjetri për të krijuar
        një cikël të mbivendosur dhe mblidh gjithë nektarin nga lulet.
      4-5 Bee Nested Loops 8_instruction: |
        Mblidh gjithë nektarin nga këto lulet
        duke mbivendosur një cikël while. Zëvendëso bllokun e brendshëm repeat times me një
        bllok while. 
      4-5 Bee Nested Loops 9_instruction: |
        Mblidh gjithë nektarin nga këto lule
        duke mbivendosur një cikël while brenda një repeat.
      4-5 Bee Nested Loops Assessment 1_instruction: |
        Vlerësim - Mblidh gjithë
        nektarin dhe bëj gjithë mjaltin duke përdorur ciklet.
      4-5 Bee Nested Loops Rows_instruction: |
        Mblidh nektar nga rreshtat e luleve!
        Përdor një cikël të mbivendosur.
      4-5 Maze 1 (copy 1)_instruction: |
        I dashur person. Unë zombi. Duhet... arrij... te
        luledielli.
      4-5 Maze 1_instruction: |
        I dashur person. Unë zombi. Duhet... arrij... te
        luledielli.
      4-5 Maze 10_instruction: A mund të arrish tek luledielli duke përdorur vetëm katër blloqe?
      4-5 Maze 11_instruction: A mund të arrish tek luledielli duke përdorur vetëm gjashtë blloqe?
      4-5 Maze 12_instruction: |
        Ok, kjo është pak ndryshe. A mund ta bësh në
        vetëm gjashtë blloqe?
      4-5 Maze 13_instruction: Më ço tek derrkuci!
      4-5 Maze 14_instruction: Me ço tek derrkuci! Përdor bllokun Repeat until.
      4-5 Maze 2 (copy 1)_instruction: |
        Çoje zombin tek luledielli, por shmang
        përtypjen!
      4-5 Maze 2_instruction: Çoje zombin tek luledielli, por shmang përtypjen!
      4-5 Maze 3 (copy 1)_instruction: Duhet... të arrij... tek luledielli.
      4-5 Maze 3_instruction: Duhet... të arrij... tek luledielli.
      4-5 Maze 4 (copy 1)_instruction: 'Provo bllokun "repeat" për të përdorur më pak blloqe...'
      4-5 Maze 4_instruction: 'Provo bllokun "përsërit" për të përdorur më pak blloqe...'
      4-5 Maze 5 (copy 1)_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      4-5 Maze 5_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      4-5 Maze 6 (copy 1)_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      4-5 Maze 6_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      4-5 Maze 7_instruction: |
        I dashur person. Unë zombi. Duhet... arrij... te
        luledielli.
      4-5 Maze 8_instruction: |
        Përdor bllokun "repeat" për të çuar zombien tek
        luledielli. (Shmang përtypjet!)
      4-5 Maze 9_instruction: 'Krijo një cikël me bllokun "repeat until".'
      4-5 Maze Assessment 1_instruction: 'Vlerësimi: Më ço tek luledielli.'
      4-5 Maze Conditionals 1_instruction: |
        Përdor bllokun repeat until për të
        çuar zombien tek luledielli.
      4-5 Maze Conditionals 10_instruction: "Can you add just 3 blocks to help the\nzombie solve a more complex maze? \r\n\r\nIf you do it right, he can walk\nany curvy path no matter the length!"
      4-5 Maze Conditionals 2_instruction: |
        Përdor bllokun repeat until për të
        çuar zombien tek luledielli.
      4-5 Maze Conditionals 3_instruction: |
        Përdor bllokun "if" për të më lejuar mua të vendos
        kur të kthehem. Ndihmë: ty të duhet vetëm një bllok më shumë, por mëso si do ta ndërtojmë ne
        atë  që ti ta bësh vetë herës tjetër.
      4-5 Maze Conditionals 4_instruction: |
        Ok, kjo është si puzzle i fundit,
        por ti duhet të kujtosh se si përdore bllokun "if" dhe "repeat"
        bashkë.
      4-5 Maze Conditionals 5_instruction: |
        Unë dua një luledielli! Përdor një bllok "if"
        për të më çuar mua atje me numrin më të pakët të blloqeve.
      4-5 Maze Conditionals 6_instruction: |
        Unë dua një luledielli! Përdor një bllok "if"
        për të më çuar mua atje me numrin më të pakët të blloqeve.
      4-5 Maze Conditionals 7_instruction: |
        Ok, le ta bëjmë përsëri për tu praktikuar
        - kjo nuk është shumë ndryshe, por kujdes për përtypësit!
      4-5 Maze Conditionals 8_instruction: |
        Blloqet "if-alese" kërkojnë një kush,
        dhe më pas bëjnë një gjë OSE një tjetër. Për të më çuar tek luledielli përpiqu të përdorësh
        këtë bllokun e ri.
      4-5 Maze Conditionals 9_instruction: |
        Një praktikë më shumë për bllokun
        "if-else", a mund ta bësh si duhet me përpjekjen e parë?
      4-5 Maze Conditionals Assessment 1_instruction: |
        Përdor një bllok "repeat until" dhe
        një "if-else" për të më çuar tek luledielli në sa më pak blloqe që ka mundësi.
      4-5 Nested Loops 1_instruction: |
        Plotëso kodin për të vizatuar këta
        trekëndësh. I pari është bërë për ty. Ndihmë: 3 trekëndëshi në një rrotullim
        360 gradë.
      4-5 Nested Loops 10_instruction: Vizato rreshtin e fundit te ketij flamuri duke lidhur blloqet e dhëna. Yjet janë 50 piksel larg, por mos harro që vet yjet janë 30 piksel të gjerë.
      4-5 Nested Loops 11_instruction: Mund të vizatosh këto 10 rretha në trotuar duke përdorur një cikël të mbivendosur? Secili rreth është 30 piksel.
      4-5 Nested Loops 12_instruction: Mund të vizatosh 36 trekëndësha duke përdorur një cikël të mbivendosur?
      4-5 Nested Loops 2_instruction: 'Lidhe këtë cikël me një tjetër për të vizatuar 10 trekëndësha. Ky quhet cikël i mbivendosur. Kujdes: Të gjithë 10 trekëndëshat plotësojnë një rrotullim prej 360 gradësh.  '
      4-5 Nested Loops 3_instruction: "Formo një diell duke mbivendosur kodin e fillimit me një tjeter cikël. Ky quhet cikël i mbivendosur.\r\n"
      4-5 Nested Loops 5_instruction: Ciklo kodin e dhënë për të krijuar një mulli ere.
      4-5 Nested Loops 6_instruction: Mund te vizatosh një gjashtëkëndesh duke cikluar kodin e trekëndëshit?
      4-5 Nested Loops 7_instruction: 'Ciklo këtë dizenjo 10 herë. Sa herë duhet të kthehesh për çdo herë që ciklon? (Kujdes: Sa është 360 e ndarë në 10-she?)'
      4-5 Nested Loops 8_instruction: 'Ciklo këtë dizenjo 6 herë. Sa herë duhet të kthehesh për çdo herë që ciklon? (Kujdes: Sa është 360 e ndarë në 6-she?)'
      4-5 Nested Loops 9_instruction: Vizato dhëmbët në gojën e krokodilit!
      4-5 Nested Loops Assessment 1_instruction: |
        Përdor një cikël të mbivendosur për të përfunduar
        dizenjimin.
      4-5 While Loops 1_instruction: |
        Më lëviz për të gropa dhe mbushe atë me
        dy lopata me dhe, duke përdorur bllokun "fill".
      4-5 While Loops 2_instruction: |
        Më lëviz mua për te grumbulli me dhe dhe hiqe
        atë me 5 lopata të mëdha, duke përdorur bllokun 'remove'.
      4-5 While Loops 3_instruction: |
        Më lëviz mua për te grumbulli dhe hiqe
        të gjithën, më pas lëvize te gropa dhe mbushe atë komplet. Ndihmë: Përdor sa më pak blloqe
        të jetë e mundur.
      4-5 While Loops 4_instruction: 'Wow, gjeta nje grope shume te thelle! Nuk e di sa lopata balte nevojiten. Mund te shkruash nje program qe e mbush derisa toka te jete e sheshte? Shenim: Provo te perdoresh nje litar tek kesaj here.'
      4-5 While Loops 5_instruction: |
        Uou, tani janë dy gropa të thella! Mund
        të shkruash një program që mbush të dyja derisa toka të jetë e sheshtë?
      4-5 While Loops 6_instruction: |
        Uou, tani është një grumbull i madh me dhe!
        A mund të shkruash një program që heq të gjithin që toka të jetë e sheshtë?
      4-5 While Loops 7_instruction: |
        Uou, tani janë tre grumbuj me dhe!
        A mund të shkruash një program që heq secilin nga ata derisa toka të jetë e sheshtë?
      4-5 While Loops 8_instruction: |2
         Është një gropë vërtetë e thellë dhe një
        grumbull vërtet i madh me dhe. Sa lopata me dhe nevojiten për tu hequr rreth
        tokës që të bëhet e sheshtë? Ndihmë: Përdor ciklin while për të dyja.
      4-5 While Loops Assessment 1_instruction: |
        Ka shumë gropa dhe
        grumbuj. Më ndihmo të mbush gropat e të heq grumbujt që të bëj tokën e sheshtë.
      aE1_instruction: "You chose to make a square napkin! \r\n\r\nTo finish, draw\na square with 20 pixel sides. "
      aE2_instruction: |
        If you place your square loop inside another loop, we call
        that a nested loop. What do you need to add as an outer loop to make sure
        all 14 napkins line up next to each other?
      aE3_instruction: "We've got to have a tablecloth!  \r\n\r\nTake your row of\n14 napkins and sew 14 of those together with another **outer loop** to make\na cover for our table."
      aE3alternate_instruction: Alternate
      aE3alternateB_instruction: Alternate
      aE4_instruction: Alternate
      aE5_instruction: Example of puzzle using highest difficulty level shape.
      aE6_instruction: |
        How many times do you need to loop this to draw half  of
        a circle? 
      aE7_instruction: "If you create another loop like this one, but turn left instead\nof right, what happens? \r\n\r\nCan you repeat all of that to draw this wave?"
      aE8_instruction: "Now let's loop that whole thing four times to create this\npicture frame. Watch out for the corners - you can't just turn 90 degrees!\n\r\n\r\nIf looping a 3 degree turn 60 times makes a half circle, which of\nthese blocks of code will make an additional quarter circle for the corners?"
      aEfreeplay_instruction: Free Play!
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      AllTheThings Applab - Turtle move with button_instruction: |
        Add a button that
        moves the turtle when clicked.  (Click to see full instructions)
      allthethings data blocks test_instruction: |
        Please sign in to test applab levels
        (By design, applab levels only work if signed in. Normally, we make people
        sign in, but this is only enforceable for a whole script and would be annoying
        to do for the allthethings script).
      allthethings design mode elements_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      allthethings_moviebot_instruction: |
        This level cloned from "U3 Digital Assistant
        Target"
      allthethings_template_backed1_instruction: |
        Backed by a template #1. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script). 
      allthethings_template_backed2_instruction: |
        Backed by a template #2. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script).
      allthethings_U3 - Simple Drawing - Rectangle Width and Height_instruction: |
        Do
        This
      App Lab test_instruction: test
      Applab allthethings onRecordEvent_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      Applab test_instruction: This level is submittable. For testing only!
      AppLab_test02_instruction: |
        One sentence summary of the activity. Click to
        view full instructions.
      Artist - Nested Loops 1_instruction: |
        Plotëso kodin për të vizatuar këta
        trekëndorë. I pari është bërë për ty. Ndihmë: 3 trekëndorë në një rrotullim
        360 gradë.
      Artist - Nested Loops 10_instruction: |
        Vizato rreshtin e fundit të yjeve në këtë flamur
        duke cikluar blloqet e dhënë. Yjet janë 50 piksela larg, por kujto
        që yjet vetë janë 30 piksela të gjerë.
      Artist - Nested Loops 11_instruction: |
        A mund të vizatosh 10 katrorë të kësaj
        rruge duke përdorur një cikël të mbivendosur? Çdo katror është 30 piksela.
      Artist - Nested Loops 12_instruction: |
        A mund ti vizatosh këto 36 trekëndorë duke përdorur
        një cikël të mbivendosur?
      Artist - Nested Loops 2_instruction: |
        Tani mbivendos këtë cikël brenda një tjetri
        cikël për të vizatuar 10 trekëndorë. Ky quher një cikël i mbivendosur. Ndihmë: Të 10-të trekëndorët
        bëjnë një rrotullim prej 360 gradësh.  
      Artist - Nested Loops 3_instruction: "Krijo një diell duke mbivendosurkodin e fillimit\nnë një cikël tjetër. Ky është quajtur një cikël i mbivendosur.\r\n"
      Artist - Nested Loops 5_instruction: Ciklo kodin e dhënë për të krijuar një mulli ere.
      Artist - Nested Loops 6_instruction: |
        A mund të vizatosh një gjashtëkëndësh duke cikluar
        kodin e trekëndorit?
      Artist - Nested Loops 7_instruction: |
        Ciklo këtë dizenjim 10 herë. Sa
        duhet të kthehesh çdo herë që ti ciklon? (Ndihmë: Sa është 360 pjestuar me 10?)
      Artist - Nested Loops 8_instruction: |
        Ciklo këtë dizenjim 6 herë. Sa
        duhet të kthehesh çdo herë që ti ciklon? (Ndihmë: Sa është 360 pjestuar me 6?)
      Artist - Nested Loops 9_instruction: Vizato dhëmbët në gojën e krokodilit!
      Artist - Nested Loops Assessment 1_instruction: |
        Përdor një cikël të mbivendosur për të përfunduar
        dizenjimin.
      Artist Inspiration_instruction: "Free Play Inspiration: You've now learned\neverything you need to know to make a pattern like this! If this picture inspires\nyou, try to make something similar. Otherwise, create something all your own.\r\n\n\r\nWant to know how our inspiration pattern was made? "
      artistLoopsK1_instruction: |
        This is a new type of puzzle called "Artist".
        Play with the level and draw something fun.
      artistLoopsK2_instruction: |
        Now, use a `repeat` loop to draw this line five
        times!
      artistLoopsK2gradek_artist_loops3_instruction: |
        Now, use a `repeat` loop to
        draw this line five times!
      artistLoopsK3_instruction: |
        Draw a line eight steps long. This will become
        the land for our kingdom!
      artistLoopsK4_instruction: |
        Now we need a castle with a draw bridge.  Fix the
        code so that the bridge lays straight instead of falling down.
      artistLoopsK5_instruction: |
        Now we need to fix the top of the castle. Can you
        loop the code three times?
      artistLoopsK6_instruction: |
        Someone is stuck in the tower!  Fix the stairs
        to set them free. 
      artistLoopsK7_instruction: |
        This tower is lovely, what is downstairs? Build
        another staircase to find out! 
      artistLoopsK8_instruction: |
        Wow! There's a garden over there!  Help fix these
        stairs so I can get to it.
      artistLoopsK9_instruction: |
        **Challenge:**  Lovely! Let's take a walk around
        the garden.
      artistLoopsKA_instruction: |
        These stones are in the wrong place.  Help me move
        them so I don't fall in!
      artistLoopsKB_instruction: |
        Look!  It's a theater.  Help me set up the chairs
        so we can all see the stage. 
      artistLoopsKFP_instruction: |
        Picture time!  Use what you have learned to draw
        a picture of what you think the Artist saw on stage.
      Auto Open Function Editor_instruction: 'Mund te therrasesh komanda nga brenda komandave te tjera! Duke perdorur "formen" tende si baze komande, krijo siluetat e 3 shtepive secila 20 piksel me e madhe se e fundit duke filluar me 50 piksel gjatesi. Perdorimi i nje litar te kundert mund te te vije mjaft ne ndihme. '
      Bee Recommended Blocks test_instruction: |
        Purple flowers may have either 1
        or 0 nectar, but you don't know which one! Be careful not to collect nectar
        from a purple flower if it doesn't have any. Check if the nectar is equal
        to 1 by using the if block.
      Bergeron Robot Maze1_instruction: |
        Can you help me catch the naughty pig? Stack
        a couple of `move forward` blocks below the `when run` block and press "Run".
        
      Big Game Animation 1 (copy 1)_instruction: |
        Tani që ti kë mësuar të shkruash
        funksione të thjeshtë linearë, le të punojmë për ti përdorur ato  që të shtojmë disa lëivzje tek
        loja jonë. Kliko luaj për të parë çfarë mund të bëjë për momentin loja jote (jo shumë!), përditëso
        çdo variabël që dëshiron, dhe më pas kliko përfundo për të vazhduar më tej.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click "Run" to see what your game can currently do (not much!), update any
        variables you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        Funksioni 'update-target'
        merr vlerën x të targetit, dhe rikthen një vlerë të ndryshuar.
        Përfundo funksionin 'update-target' që të shtojë një vlerë x çdo herë 
        që thërritet. Sa më shumë ti shton tek x, më shpejt do shkojë targeti.
      Big Game Animation 2_instruction: |
        The update-target function takes the target's
        current x value, and returns an updated value. Complete the update-target
        function so that it adds to the x value each time it is called. The more you
        add to x, the faster the target will go.
      Big Game Animation 3_instruction: |
        Funksioni 'update-danger' duhet të punojë
        si 'update-target', përveç se rreziku duhet të lëvizë nga e djathta
        sipër në të majtë. Përfundo funksionin 'update-danger' për të bërë
        rrezikun të fluturojë mes ekranit.
      Big Game Animation 4_instruction: |
        At this point in your game, your danger
        should run across the screen from right to left, and your target should run
        across from left to right. They don't ever come back on screen once they've
        left, but we'll take care of that later. Take a minute to make sure your
        game is working like you want it to, and then click "Finish" to move on.
      Big Game Booleans 1_instruction: |
        Kur ti punove për herë të fundit me lojën tënde
        ne pamë targetin tonë dhe zanën e rrezikut që fluturonin në ekran, por ato kurrë
        nuk u kthyen. Kliko run për të parë se si loja jote është duke punuar për momentin, dhe më pas kliko
        mbyll dhe ne do punojmë që ti bëjmë ato zana të rishfaqen në ekran pasi kanë ikur.
      Big Game Booleans 2_instruction: |
        Go to the Functions section of the toolbox
        and complete the safe-left? function so that it returns true if the sprite's
        x coordinate is greater than -50. If you're successful you should see the
        Danger go off the left side and then return on the right side.
      Big Game Booleans 3_instruction: |
        Now that you've got safe-left?, let's fill
        in safe-right? - it should take in a sprite's x coordinate and return true
        if that coordinate is less than 450. Once your safe-right? is complete you
        should see the Target go off the right side of the screen and return on the
        left.
      Big Game Booleans 4_instruction: |
        Complete the onscreen? function so that it
        checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: |
        At this point your Danger should run across
        the screen from right to left, your Target should run across from left to
        right, and they should both return to the opposite side, repeatedly. Take
        a minute to make sure your game is working like you want it to, and then click
        "Finish" to move on.
      Big Game Collision 1 (copy 1)_instruction: |
        Kur ti punove për herë të fundit me lojën tënde
        ne pamë targetin tonë dhe zanën e rrezikut që fluturonin në ekran, por ato kurrë
        nuk u kthyen. Kliko run për të parë se si loja jote është duke punuar për momentin, dhe më pas kliko
        mbyll dhe ne do punojmë që ti bëjmë ato zana të rishfaqen në ekran pasi kanë ikur.
      Big Game Collision 1_instruction: |
        At this point you've programmed a video
        game with a moving Target and Danger, both of which return to the screen once
        they've left, and a Player that responds to keyboard input. Click "Run"
        to see how your game is currently working, and then we'll dig into the final
        missing piece - collision detection!
      Big Game Collision 2_instruction: |
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so that if moves the player
        up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: |
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete_instruction: |
        Një demonstrim i CS së përfunduar në Algjebër Projekt i
        Lojës së Madhe
      Big Game Final_instruction: |
        Ti ja dole! Në këtë pikë loja jote duhet të jetë e plotë
        nga ana funksionale, kushtoji pak kohë për të shijuar lojën tënde të re dhe bëj një shkëputje
        finale nga ajo. Kur të jesh i lumtur me produktin final, kliko Finish
        dhe do të kesh mundësinë për të shpërndarë një link te loja jote. Punë të mbarë!
      Big Game Player 1_instruction: |
        We're getting really close to a finished game!
        Last time you worked on your game, you used booleans to make your Target and
        Danger return to the screen once they've left. Click Run to see how your
        game looks right now, and then we'll get to making your Player move up and
        down.
      Big Game Player 2_instruction: |
        Edit the update-player function so the player
        moves up when the up arrow (keycode 38) is pressed, and moves down (keycode
        40) when the down arrow is pressed.
      Big Game Testing_instruction: |
        Një demonstrim i CS së përfunduar në Algjebër Projekt i
        Lojës së Madhe
      Big Game Vars 1 (copy 1)_instruction: |
        Le të fillojmë me Lojën tënde të Madhe!
        Këtu do të shohësh një tufë me kod placeholder që ti përfundimisht
        do ta zëvendësosh me tënden, por tani për tani ne do të shqetëohemi për
        përcaktimin e variablave. Kliko "Run" për të parë se si duket loja me vlerat
        default.
      Big Game Vars 1_instruction: |
        Le të fillojmë me Lojën tënde të Madhe!
        Këtu do të shohësh një tufë me kod placeholder që ti përfundimisht
        do ta zëvendësosh me tënden, por tani për tani ne do të shqetëohemi për
        përcaktimin e variablave. Kliko "Run" për të parë se si duket loja me vlerat
        default.
      Big Game Vars 2 (copy 1)_instruction: |
        Hapi i parë për të bërë lojën
        tënden është ti japësh një Titull të mirë. Kliko redakto tek variablat
        'titulli' dhe 'nëntitulli' dhe ndryshoji ato me diçka të re.
      Big Game Vars 2_instruction: |
        Hapi i parë për të bërë lojën
        tënden është ti japësh një Titull të mirë. Kliko redakto tek variablat
        'titulli' dhe 'nëntitulli' dhe ndryshoji ato me diçka të re.
      Big Game Vars 3 (copy 1)_instruction: |
        Tani le të vendosim sfondin për
        lojën tënde të re. Redakto varialin 'bg' dhe zgjidh një Imazh sfondi të ri nga
        dropdown menu.
      Big Game Vars 3_instruction: |
        Tani le të vendosim sfondin për lojën tënde të re.
        Redakto varialin 'bg' dhe zgjidh një Imazh sfondi të ri nga dropdown menu.
      Big Game Vars 4 (copy 1)_instruction: |
        Bukur, tani ti mund të përditësosh variablat
        për Lojtarin tënd, Objektivin, dhe Rrezikun. Ndihu i lirë të luash me të gjithë variablat
        në këtë pikë për të bërë lojën tënde të duket siç dëshiron ti. Kliko 'përfundo'
        kur të kesh përfunduar.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Brad Spooky House Copy_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      Brad Spooky House_instruction: |
        Freeplay: Here are the functions you've written,
        and some more for you to play with. Draw something awesome! Play with the
        pen width to see how different your drawings look!
      Building a Foundation Assessment_instruction: |
        Ndërto një piramidë tre nivelesh,
        nuk ka drejtime të tjera, kështu që vetëm luaj me këto pjesë derisa ta bësh
        atë!
      Busy Bee 2_instruction: |
        This bee has a lot of work to do! Do you notice any
        patterns that you can use to simplify your code?
      Busy Bee_instruction: |
        This bee has a lot of work to do! Do you notice any
        patterns that you can use to simplify your code?
      C3-Farmer While Loops 1_instruction: |
        Më lëviz për të gropa dhe mbushe atë me
        dy lopata me dhe, duke përdorur bllokun "fill".
      C3-Farmer While Loops 2_instruction: |
        Më lëviz mua për te grumbulli me dhe dhe hiqe
        atë me 5 lopata të mëdha, duke përdorur bllokun 'remove'.
      C3-Farmer While Loops 3_instruction: |
        Më lëviz mua për te grumbulli dhe hiqe
        të gjithën, më pas lëvize te gropa dhe mbushe atë komplet. Ndihmë: Përdor sa më pak blloqe
        të jetë e mundur.
      C3-Farmer While Loops 4_instruction: |
        Wow, unë gjeta një gropë vërtet të thellë! Unë nuk
        e di sa lopata me dhe nevojiten. A mund të shkruash një program që mbush
        atë derisa toka të jetë e sheshtë? Ndihmë: Përpiqu të përdorësh ciklin while këtë herë.
      C3-Farmer While Loops 5_instruction: |
        Wow, tani janë dy gropa të thella! Mund
        të shkruash një program që mbush të dyja derisa toka të jetë e sheshtë?
      C3-Farmer While Loops 6_instruction: |
        Wow, tani është një grumbull i madh me dhe!
        A mund të shkruash një program që heq të gjithin që toka të jetë e sheshtë?
      C3-Farmer While Loops 7_instruction: |
        Wow, tani janë tre grumbuj me dhe!
        A mund të shkruash një program që heq secilin nga ata derisa toka të jetë e sheshtë?
      C3-Farmer While Loops 8_instruction: |2
         Është një gropë vërtetë e thellë dhe një
        grumbull vërtet i madh me dhe. Sa lopata me dhe nevojiten për tu hequr rreth
        tokës që të bëhet e sheshtë? Ndihmë: Përdor ciklin while për të dyja.
      C3-Farmer While Loops Assessment 1_instruction: |
        Ka shumë gropa dhe
        grumbuj. Më ndihmo të mbush gropat e të heq grumbujt që të bëj tokën e sheshtë.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |
        Ky Bllok Vlerësimi është një funksion
        shumëzimi i cili merr 2 numra dhe kthen prodhimin e atyre numrave.
        Redakto kët bllok që të shumëzojë 2*5
      Calc Circles of Eval .3_instruction: |
        Here's a function for addition which
        takes two numbers and returns their sum. Use this Addition Block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |
        Këtu kemi mbivendosur një Bllok Mbledhjeje
        brenda një Blloku Shumëzimi. Përfundo këtë kod që të shumëzojë 3 me (4 +
        1)
      Calc Circles of Eval 1 (copy 1)_instruction: |
        Ndrysho këtë formulim në <some_shape>
        vlerësimi.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |
        Ndrysho këtë formulim në <some_shape>
        vlerësimi.
      Calc Circles of Eval 2_instruction: |
        Use a Multiplication Block to complete
        this code.
      Calc Circles of Eval 3_instruction: |
        Përfundo Blloqet e Vlerësimit për ta lidhur
        me këtë formulim.
      Calc Circles of Eval 4_instruction: |
        Këtij blloku i mungojnë një grup Blloqesh
        Vlerësimi - sigurohu të vendosësh gjithçka në rendin e duhur.
      Calc Circles of Eval 5_instruction: |
        Përfundo Blloqet e Vlerësimit për ta lidhur
        me këtë formulim.
      Calc Circles of Eval 6_instruction: |
        Përfundo Blloqet e Vlerësimit për të lidhur
        këtë formulim.
      Calc Circles of Eval 7_instruction: |
        Përfundo Blloqet e Vlerësimit për ta lidhur
        me këtë formulim.
      Calc Circles of Eval 8_instruction: |
        Përfundo Blloqet e Vlerësimit për të lidhur
        këtë formulim.
      Calc Circles of Eval 9_instruction: |
        Përfundo Blloqet e Vlerësimit për ta lidhur
        me këtë formulim.
      Calc Circles of Eval Free Play_instruction: |
        Lojë Falas: Përpiqu të përdorësh Blloqet
        e Vlerësimit për të shkruar disa ekuacione nga vetja jote. Si ndikon mbivendosja blloqeve në
        mënyra të ndryshme në vlerësimin e tyre?
      Calc Define Funcs 1 (copy 1)_instruction: |
        Le të shohim disa funksione
        më algjebrike tani. Këtu kemi një funksion të përkthyer nga funksioni algjebrik i thjeshtë
        f(x) = x + 1. Çfarë do të prisnit si output i këtij funksioni nëse i jepet një input 15?
        
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |
        Shkruaj një funksion "f" që merr një parametër
        "x" dhe kthen x - 10. Testo funksionin tënd duke përdorur f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function f every
        time; create a function called times-ten that should take a parameter x and
        return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called cube - this function should take in a Number and return that
        number to the power of 3. Make sure to write two example cases! When you're
        done, use your new function to calculate cube(7).
      Calc Design Recipe 2_instruction: "Your school is holding a bake sale, and\nyou need to track the cost of making each cookie, the money paid, and the\ntotal profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r\n\r\nWrite\nthe function cost, which takes in the number of cookies you intend to sell,\nand returns the cost of making those cookies.\r\n\r\nTest your function by\ncalculating the cost of 42 cookies"
      Calc Design Recipe 3_instruction: "Write the function sales which takes in\nthe number of cookies sold, and produces the amount of money customers spent\nto buy those cookies (each cookie is sold at $1.50).\r\n\r\nTest your function\nby calculating the sales for 135 cookies"
      Calc Design Recipe 4_instruction: "Using the two functions we just wrote, write\nthe function profit, which takes in the number of cookies you sold, and gives\nyou back the total profit you make from selling your cookies, accounting for\nthe cost of baking them.\r\n\r\nTest your function by calculating the total\nprofit for 15 cookies."
      Calc Free Play_instruction: |
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: "In the last puzzle you wrote a contract\nfor the function \"rocket-height\" that states it has a range of Number, domain\nof Number, and should return the height of the rocket traveling at 15 m/s\nafter a given number of seconds. Let's write an example case now for the\nheight of the rocket at 3 seconds.\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 1_instruction: |
        In the last puzzle you wrote a contract for the
        function rocket-height that states it has a range of Number, domain of Number,
        and should return the height of the rocket traveling at 15 m/s after a given
        number of seconds. Let's write an example case now for the height of the
        rocket at 3 seconds.
      Calc Rocket 2_instruction: |
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |
        Here's a new variable called age-in-months. Use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: |
        Can you write an expression that calculates age in
        months?
      Calc Vars 3 (copy 1)_instruction: |
        A mund të shtosh tek ky kod që të llogarisë
        se sa orë ka në vitet e "moshës"?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |
        Ne gjithashtu mund të vendosim variable duke përdorur variabla të tjerë.
        Le të themi se ke një vëlla që është dy vite më i vogël se ju - a mund të
        vendosësh ti një variabël të ri "mosha-vëllait" duke përdorur variablin e "moshës" tënde?
      Code Studio Puzzle Challenge 1 - Artist_instruction: |
        Vizato vijën. Është
        200 piksela e gjatë. 
      Code Studio Puzzle Challenge 1 Artist1_instruction: |
        Vizato vijën. Është 200
        piksela e gjatë. 
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Lëvize Bletën tek lulja
        dhe merr gjithë nektarin.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Vizato një katror duke përdorur
        variablin e dhënë gjatësia.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |
        Kodi i dhënë vizaton
        një trekëndësh. Shto tek kodi të vizatojë trekëndësha një model gjashtëkëndëshi.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |
        Kodi i dhënë vizaton
        një trekëndësh. Shto tek kodi të vizatojë trekëndësha një model gjashtëkëndëshi.
      Code Studio Puzzle Challenge 13 - Artist_instruction: |
        This is just like a
        "for" loop. Complete the code to draw six lines that grow from 50, 60, 70,
        80, 90, to 100 pixels long. 
      Code Studio Puzzle Challenge 14 - Artist_instruction: |
        This is just like a
        "for" loop. Complete the loop to draw 4 squares that grow from 80, 100,
        120, to 140 pixels. 
      Code Studio Puzzle Challenge 2 - Artist_instruction: |
        Tani shto një kthim dhe një vijë
        tjetër. Vijat janë 200 piksela të gjata.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Vizato katrorin. Secila
        brinjë është 100 piksela e gjatë.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |
        Vizato tetëkëndëshin. Secila
        brinjë është 100 piksela e gjatë.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |
        Lëvize Bletën tek
        lulja dhe merr nektarin.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |
        Lulet përmbajnë një sasi
        të caktuar nektari. Lëvize Bletën tek lulja dhe mblidh nektarin me bllokun
        get nectar.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |
        Kosheret mund të mbajnë një sasi
        të caktuar mjalti. Merr nektarin nga lulja dhe bëj mjaltë.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Lëvize Bletën tek lulja
        dhe merr nektarin.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        Reja mund të jetë duke fshehur
        një lule ose një koshere. Vetëm merr nektar nga lulet. Vetëm bëj
        mjaltë tek kosheret.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        Reja mund të jetë duke fshehur
        një lule ose një koshere. Vetëm merr nektar nga lulet. Vetëm bëj
        mjaltë tek kosheret.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: |
        Draw
        the line. Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: |
        Complete the
        code to draw the line. Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Artist Screencast_instruction: |
        Vizato vijën.
        Secili segment është 100 piksela i gjatë. 
      Code Studio Puzzle Challenge Bee Screencast_instruction: |
        Lëvize Bletën tek
        lulet dhe merr gjithë nektarin.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      Collector Demo_instruction: |
        Look at all this loot! Help me get as many coins
        as I can so I can improve my farm. I can only use 9 blocks though!
      Course 2 Bee Loops 1_instruction: |
        Përshëndetje, unë jam një bletë. A mund të më ndihmosh të mbledh
        nektarin nga këto lulet? 
      Course 2 Bee Loops 13_instruction: |
        Vlerësim: Përdor bllokun repeat për të mbledhur
        gjithë nektarin.
      Course 2 Bee Loops 2_instruction: |
        A mund të bësh të njëjtën detyrë më lehtë me
        një cikël?
      Course 2 Bee Loops 3_instruction: |
        Tani përdor bllokun e ri repeat për të mbledhur
        gjithë nektarin dhe bëj mjaltin.
      Course 2 Bee Loops 3__instruction: |
        A mund të përdorësh një cikël për të mbledhur gjithë
        nektarin?
      Course 2 Bee Loops 4_instruction: |
        Çfarë ndodh nëse ti ciklon këtë sekuencë 3
        herë? Mos harro të bësh mjaltë në fund!
      Course 2 Maze Loops 1_instruction: A mund të më çosh tek derrkuci duke përdorur 5 blloqe?
      Course 4 2_instruction: |
        Bleta dëshiron vetëm nektar 
        tani. Kujto, jo të gjithë objektet janë lule, kështu që kontrollo për të mblehdur nektar vetëm
        tek lulet.
      Course 4 Artist 1_instruction: 'Më ndihmo te vizatoj një kuti. (Secili rresht është 200 pixel i gjatë) '
      Course 4 Artist 10_instruction: "Kliko këtu për të parë udhëzimet përsëri!\r\n\r\nKëtu\nështë një kod për një form interesante. Çfarë do të ndodh kur ti e përsërit atë? Vërej\nse kthesat e ksaj forme rriten me 420 gradë, që do të thotë që kur\nartisti juaj përfundon së vizatuari, ai do të ketë përpara një drejtim ndryshe nga \nai i fillimit. Drejtimi i ri është 60 gradë në të djathtë të posicionit që kishte në fillim."
      Course 4 Artist 11_instruction: "Tani nje sfidë! Ketu është një model i cili përdor vetëm blloqet me të cilat ti je njohur tanimë. Arrin dot t'a rindertosh pa ndonjë te dhenë shtesë? Shenim: Mund të provosh veten dhe te gabosh. Nuk pritet t'a bësh perfekte që herën e parë!"
      Course 4 Artist 12_instruction: "Dëshiron një shikim tjetër të dizajni inspirues ose te udhezimet? Kliko këtu\r\n\r\nNdryshe, bëje dizajnin vetë!"
      Course 4 Artist 13_instruction: Ende po luani? Ja një pikturë bosh ku mund të dizenjoni çdo gjë që dëshironi!
      Course 4 Artist 2_instruction: "Mund t'a përmbledhesh këtë kod për të nxjerrë atë në ngjyrë gri jashtë katrorit?"
      Course 4 Artist 20_instruction: Ende po luani? Ja një pikturë bosh ku mund të krijoni çdo gjë që dëshironi!
      Course 4 Artist 3_instruction: |-
        Përpiqu të kuptosh se çfarë ndodh nëse lëshon këtë kod (apo shtyp "Lësho" per t'a provuar). Pastaj, përsërite aq herë sa do të nevojiten për të plotësuar vizatimin.
      Course 4 Artist 4_instruction: Sa gradë janë në një rreth? Ploteso bllokun përsëritës me atë numër për të krijuar një rreth ngjyrash.
      Course 4 Artist 5_instruction: "Vizato pjesën tjetër të kësaj dizenjoje që të jetë simetrike. Trekëndëshat janë barabrinjës dhe janë 50 piksel te gjatë. Udhëzim: Mund të të duhet të drejtosh disa herë kodin që te gjesh të gjtha blloqet që të nevojiten t'i shtosh."
      Course 4 Artist 6_instruction: |
        Ploteso kodin për të vizatuar këta trekëndesha.
        Udhëzim: Në një rrotullim prej 360 gradësh janë 3 trekëndesha... Po për 3 herë në 360 gradë sa do jetë?
      Course 4 Artist 7_instruction: 'Lidhe këtë cikël me një tjetër për të vizatuar 10 trekëndësha. Ky quhet cikël i mbivendosur. Udhëzim: Të gjithë trekëndëshat plotësojnë një rrotullim prej 360 gradësh.  '
      Course 4 Artist 8_instruction: Vizato këtë diell duke cikluar gjithë këto grupe kodesh disa herë.
      Course 4 Artist 8a_instruction: "E mban mend këtë formë? Tani ne do të lëmë ty t'a ndërtosh pa të të dhënë asnjë bllok\r\nUdhëzim: Aty janë\n3 trekëndësha brenda një rrotudhimi 360 gradë...sa herë 3-shi hynë në 360?"
      Course 4 Artist 9_instruction: 'Ciklo këtë dizanj 10 herë dhe sigurohu të kthehesh mes secilës forme së vizatuar. Ketu keni një udhëzim sesi do të duhet të kthesh: Sa është 360-ta e ndarë në 10 pjesë?'
      Course 4 Artist Binary 1_instruction: "Këtu është një funksion që ka vargun\nbinar të njishave dhe të zerove dhe drejton artistin që ti ndjeki ato nga e majta në \ntë djathtë, nga lartë poshtë. Artisti do mbushi katrorin kur të shikoj \n1 dhe injoroj katrorin kur te shikoj 0. \r\nLësho kodin për të parë se si artisti \npërdor binarët për të vizatuar modelin."
      Course 4 Artist Binary 1a_instruction: "Këtu është një funksion që ka vargun\nbinar të njishave dhe të zerove dhe drejton artistin që ti ndjeki ato nga e majta në \ntë djathtë, nga lartë poshtë. Artisti do mbushi katrorin kur të shikoj \n1 dhe injoroj katrorin kur te shikoj 0. \r\nLësho kodin për të parë se si artisti \npërdor binarët për të vizatuar modelin."
      Course 4 Artist Binary 2_instruction: Cilin nga këto vargjet binare do të cikloje 8 herë për tëvizatuar ketë figurë?
      Course 4 Artist Binary 3_instruction: "Mund t'a bësh këtë model duke e lidhur një varg 3 shifror binar?"
      Course 4 Artist Binary 4_instruction: "Secili varg binar përfaqëson një rresht të këtij vizatimi. Mund t'i ribësh në mënyrë që të vizatoje një fytyrë të buzëqeshur në vend të një fytyre te vërenjtur?"
      Course 4 Artist Binary 5_instruction: "Cili varg 6 shifror binar i përsëritur 11 herë do t'a vizatojë këtë figurë?"
      Course 4 Artist Binary 6_instruction: Cili është vargu më i shkurtër binar që ti mund të përsërisësh për të vizatuar këtë figurë?
      Course 4 Artist Binary 7_instruction: Perfundo këtë vizatim.
      Course 4 Artist Binary Free Play 2_instruction: 'Lojë e Lirë: Këtu duhet nxjerrë një pikturë me rezolucion të lartë - 16 bit me 16 bit!'
      Course 4 Artist Binary Free Play 2a_instruction: "Here's a higher resolution\ncanvas to draw on - 16 pixels by 16 pixels!\r\n\r\nSee what happens when we\nstart to get creative with the bits?"
      Course 4 Artist Binary Free Play 2b_instruction: Click here to see hints.
      Course 4 Artist Binary Free Play_instruction: "Lojë e Lirë: Vizato ç'të duash me binarin!"
      Course 4 Artist Binary pre1_instruction: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \r\n\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      Course 4 Artist Binary ryan_instruction: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \r\n\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      Course 4 Artist For  Functions 10_instruction: |-
        T'a bejme pak me te veshtire: Arrin dot te vizatosh nje forme Ylli duke perdorur komanden "Vijëzo nje rreth"? Suksese!
      Course 4 Artist For  Functions 11_instruction: |-
        T'a bejme pak me te veshtire: Arrin dot te vizatosh nje forme Ylli duke perdorur komanden "Vijëzo nje rreth"? Suksese!
      Course 4 Artist For Loops 1_instruction: Vizato këtë trekëndësh që është në masë 50 piksel.
      Course 4 Artist For Loops 10_instruction: Koha e Lojës së Lirë! Kënaqu duke vizatuar çfarë të duash me format që ke mësuar
      Course 4 Artist For Loops 11_instruction: 'E mban mend kur përdorem një variabël për të pasur nën kontroll numrin e anëve në një formë? Ky model fillon me një trekendësh dhe shton pjesët një nga një deri sa vizaton një dhjetëkëndesh (10 faqe). Secila faqe duhet te jete 100 piksela e gjatë. Udhëzim: 360-ta e ndarë në bazë te pjesëve që ka një faqe përbën edhe numrin e gradës që do të të duhet të rrotullisesh.'
      Course 4 Artist For Loops 11a_instruction: "Le t'i vendosim të gjitha sëbashku! Duke vendosur në punë njohuritë tuaja rreth \"litarëve\" dhe \"të kundërtave\", krijoni një vizatim të tillë ku secila formë ka dy faqe më shumë sesa e fundit. Sigurohu që secila faqe është 10-fish nga secila faqe e shumëkëndëshit.\r\n\r\nShumë pak\nnga kodimi është e gatshme për ju."
      Course 4 Artist For Loops 12_instruction: "Dukej goxha mirë por tani do të doja te vizatoja secilën formë pas te fundit. Këtë radhe secila anë është 20 piksel. Përdor një bllok hedhjeje per t'u hedhur perpara 40 piksel pas seciles forme. "
      Course 4 Artist For Loops 13_instruction: "Hmmm, format po rriten perherë e më shumë! A nuk e zgjidhëm këtë problem me variablet? Si mund t'a perdorim variablën e numërimit për të zvogeluar faqet kur ka me shumë të tilla? Ne vend qe te ecësh përpara me një shumë të caktuar, përpiqu të ecësh (100/ numërues) piksel."
      Course 4 Artist For Loops 14_instruction: Nëse kthehesh pak më shumë apo pak më pak se zakonisht, krijon një efekt. Provo të kthehesh 89 gradë për të formuar këtë spirale katrore te shtrembëruar.
      Course 4 Artist For Loops 15_instruction: "Lojë e lirë: Përpiqu të bësh disa vizatime\nduke përdorur ciklin for. Ne ju kemi shtuar edhe disa variabla për ti përdorur.\r\n\r\nJanë shumë blloqe në kutin e veglave kshu që ne duhet ti organizojmë në kategori. Kliko përreth\nqë të zbulosh blloqet që mund të përdorësh në këtë nivel."
      Course 4 Artist For Loops 2_instruction: 'Kam vendosur kodin për të vizatuar një trekëndësh brenda një "cikli for" i cila numëron nga 50 deri në 100 me 10. Shiko se si e kam ndërtuar dhe pastaj "Leshoje".'
      Course 4 Artist For Loops 3_instruction: |
        Përdor puzzle e fundit si referencë për të kompletuar këtë.
        Trekëndëshi më i vogël i ka faqet 20 piksel, më i madhi i ka 200 piksel, dhe secili trekëndesh është 20 piksel më i madh se i fundit.
        
      Course 4 Artist For Loops 4_instruction: 'Përdor një "për litar" për të vizatuar rrethat. Fillojnë me një gjatësi prej 50 piksel, më i madhi fillon me 300 piksel, dhe secili katror është 25 piksel më i madh sesa i fundit. Të kam dhënë thuajse të gjithë kodet që të nevojiten, të mungon një pjesë, cila është?'
      Course 4 Artist For Loops 5_instruction: 'Punë e mirë ne puzzel e fundit! Le të përdorim bllokun variabël "numërues" për të vizatuar këtë figurë. '
      Course 4 Artist For Loops 6_instruction: 'Lojë e Lirë! Provo të përdorësh një "cikël for" për të vizatuar një model me formë në zmadhim për dezajnin tënd.'
      Course 4 Artist For Loops 6a_instruction: |
        Make three small changes to the
        code from the last level to get this!
      Course 4 Artist For Loops 7_instruction: 'Çfarë ndodh nëse e fshin "Persërit 3" nga algoritmi, duke mbajtur blloqet "lëviz" dhe "kthe" në "për lopatën"? Në këtë trekëndësh spiral, secila anë është 20 piksel më e madhe se e fundit.'
      Course 4 Artist For Loops 8_instruction: "Vetëm një ndryshim i vogël në kod nga figura e fundit mund të ndryshoj këtë vizatim. Mund ta zbulosh se çfarë është \nai ndryshim? \r\n \r\nUdhëzim: Duhet të heqësh diçka!"
      Course 4 Artist For Loops 8a_instruction: |
        Vetëm një ndryshim i vogël në kod nga figura e fundit mund të ndryshoj këtë vizatim. Mund ta zbulosh se çfarë është 
        ai ndryshim?
      Course 4 Artist For Loops 9_instruction: Arrin dot të bësh një spirale? Lëviz përpara nga 1 ne 75 piksel, duke e rritur me 1 piksel secilën herë.
      Course 4 Artist For Loops Challenge_instruction: "Mund ta zbulosh se si të përdorësh të gjitha gjërat që ke mësuar për të krijuar këtë figurë?\r\n\r\nTë nevojitet një udhezim? Kliko këtu."
      Course 4 Artist For Loops inspire_instruction: "Frymëzim i Lojës së Lirë: Tashmë keni mësuar gjithçka ju nevojitet për të përgatitur një dizenjo të tillë! Në rast se kjo pikturë ju frymëzon të  krijoni diçka të ngjashme. Në të kundërt, krijoni diçka tuajën.\r\n\r\nDëshironi të dini si është krijuar modeli ynë i frymëzimit? Vizitoni https://studio.code.org/c/106387604 për një zgjidhje."
      Course 4 Artist Functions 1_instruction: A mund të vizatoni një katror që është 100 piksel i gjatë, duke përdorur një cikël?
      Course 4 Artist Functions 10_instruction: |
        Cilin bllok duhet të shtosh 
        që trekëndëshi të vendoset sipër rrethit?
      Course 4 Artist Functions 11_instruction: |-
        Shiko këtë kod që vizaton një kub- mund t'a levizësh brenda një funksioni që quhet "Vizato një Kub"
      Course 4 Artist Functions 12.1_instruction: |
        Let's create a function called
        "draw an octagon 20" that draws an octagon where each side is 20 pixels
        long.
      Course 4 Artist Functions 12_instruction: Ciklo funksionin katror për të vizatuar një vijë
      Course 4 Artist Functions 13.1_instruction: "Now, let's make a function called\n\"jump to upper right\" that moves the artist to the upper-right of the octagon\nthat you just drew so we can finish this pattern.\r\n\r\nHint:  To get yourself\nto the upper-right corner, try jumping in a pattern that makes just 3/8 of\nthe octagon."
      Course 4 Artist Functions 13_instruction: 'Shikoje, kemi një funksion të ri të quajtur "vizato një rresht katrorash". Mund të shikosh pjesët e komandave për të parë si e kemi ndërtuar. Kliko në "Lesho" kur te jesh gati për lojën e ardhshme.'
      Course 4 Artist Functions 14.1_instruction: |
        Now, let's make a function called
        "jump to upper right" that moves the artist to the top-right of the octagon
        that you just drew so we can finish this pattern.
      Course 4 Artist Functions 14_instruction: 'Bravo! Le të përdorim komandën tënde të re "Vizato nje rresht katrorësh" për të vizatuar formën e nje Katrori. Mos harro që secili rreth është 40 piksel i gjatë.'
      Course 4 Artist Functions 15_instruction: |-
        Le t'a veshtiresojmë pak, mund t'a vizatosh formën e një ylli duke përdorur komandën "vizato një rresht katrorësh"? Suksese! Udhëzim: mund të të duhet te kthehesh 144 gradë
      Course 4 Artist Functions 2_instruction: |
        A mund të vizatosh 3 katrorë 20 piksela veç nga
        njëri tjetri? Ndihmë: çdo katror është 100 piksela i madh
      Course 4 Artist Functions 3_instruction: "Duke përdorur bllokun e funksionit \"vizato një katror\", a mundesh të vizatosh këtë figurë? Ndihmës: secili katror është 20 piksela i veçuar.\r\n"
      Course 4 Artist Functions 4_instruction: |
        A je gati për të krijuar "Function
        Block"-un tënd? Kliko në bllokun "Functions" në kutin e punës, emëroje atë
        "vizato një trekëndësh", më pas krijo një trekëndësh siç ke bërë më përpara me blloqet Action
        dhe Loops. Më pas kliko Ruaj dhe Mbyll në cepin lart djathtas.
        Ndihmë: Krijo një trekëndësh që është 100 piksela i gjatë!
      Course 4 Artist Functions 5 OLD_instruction: "Le te perpiqemi te perdorim dy komanda per te vizatuar nje shtepi- cfare duhet te ndreqim ne kete kod ne menyre qe t'a vizatojme shtepine sic duhet?"
      Course 4 Artist Functions 5_instruction: "Duke përdorur bllokun e funksionit \"vizato një katror\", a mundesh të vizatosh këtë figurë? Ndihmës: secili katror është 20 piksela i veçuar.\r\n"
      Course 4 Artist Functions 6_instruction: |
        Cilin bllok duhet të shtosh 
        që trekëndëshi të vendoset sipër rrethit?
      Course 4 Artist Functions 7_instruction: Mund te vizatosh nje rresht me rrathe duke perdorur komanden e Rrumbullaket? Secili rreth ne gjatesi 40 piksel.
      Course 4 Artist Functions 8_instruction: |-
        Po e kupton si funksionojne blloqet e komandave? Le t'a modifikojme kete rreth qe te jete ne madhesine 200 piksel. Shenim: kliko ne "modifiko" per te ndryshuar madhesine e komandes se  redaktimit "vizato nje rreth". Mos harro te klikosh ne "ruaj dhe mbyll" per te dale nga komanda e redaktimit.
      Course 4 Artist Functions 9_instruction: "Te kemi dhene shumicen e kodit per te krijuar komanden. Gjithsesi mesa duket dicka mungon. Mund t'a plotesosh kete bllok komande?"
      Course 4 Artist Functions challenge_instruction: |
        Click here to see the hints
        again.
      Course 4 Artist Functions Inspiration_instruction: |
        Click here to see the hints
        again.
      Course 4 Artist Functions inspire_instruction: Kliko këtu për të parë figurën inspiruese përsëri.
      Course 4 Artist Inspire_instruction: "Dëshiron një shikim tjetër të dizajni inspirues ose te udhezimet? Kliko këtu\r\n\r\nNdryshe, bëje dizajnin vetë!"
      Course 4 Artist Params 1_instruction: Le të modifikojmë një komandë që vizaton një rreth me faqe 50 piksel
      Course 4 Artist Params 10_instruction: 'Mund te therrasesh komanda nga brenda komandave te tjera! Duke perdorur "formen" tende si baze komande, krijo siluetat e 3 shtepive secila 20 piksel me e madhe se e fundit duke filluar me 50 piksel gjatesi. Perdorimi i nje litar te kundert mund te te vije mjaft ne ndihme. '
      Course 4 Artist Params 11_instruction: |
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: 'Perdor komanden tende te " helikes rrotulluese" per te vizatuar secilen nga keto silueta. Gjatesia e faqes per secilin imazh duhet te jete 50.'
      Course 4 Artist Params 13_instruction: |
        Lojë e lirë: Këtu janë funksionet që ti ke shkruar,
        dhe disa të tjerë për ju që të luani. Vizato diçka të hatashme!
      Course 4 Artist Params 2_instruction: |
        That triangle function would be a whole
        lot more useful if it could draw triangles of different sizes. I've added
        a parameter for line length, but it doesn't do anything yet. Can you update
        the function so it uses the "length" parameter when it draws each side?
        The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: 'Shkelqyeshem, mund te vizatosh secilin nga keta trekendesha me kete komande te re?  I pari eshte 25 piksel i gjate, i dyti 50 dhe i treti eshte 75.'
      Course 4 Artist Params 4_instruction: Mund te shtosh nje funksion te ri te quajtur rreth? Edhe ky duhet te kete nje parameter gjatesi, ashtu si trekendeshi. Kete radhe vizato 3 rrathe, 25, 50 dhe 75 piksel ne gjatesi dhe 100 piksel large.
      Course 4 Artist Params 5_instruction: |
        Perdor te dyja komandat e reja per te bere kete vizatim. 
        Per t'a lehtesuar perdor nje litar me nje parameter "te kundert".
      Course 4 Artist Params 6_instruction: |
        Le të ndryshojmë këtë funksion "vizato nje formë". 
        I cili ka një parametër "gjatësi". Tani, le të ndryshojmë funksionin 
        për të shtuar një parametër "faqet". Mos harro që këndi i kthimit për një formë të dhënë 
        eshte 360 i ndarë në bazë të anëve qe ka. Shënim: Këto janë gjatësitë 
        për secilën formë: trekendëshi është 100 piksela, gjashtëkendëshi eshte 25 piksela, dhe
        katrori eshte 50 piksela. 
      Course 4 Artist Params 7_instruction: |-
        Mund t'i vizatosh keto silueta duke plotesuar "???"  Rrethi dhe trekendeshi jane 100 piksel ne madhesi dhe gjashtekendeshi eshte 75 piksel ne mase.
      Course 4 Artist Params 8_instruction: "Arrin dot te gjesh si mund t'a vizatosh kete siluete? Ja nje shenim: formo nje komande te re me 6 faqe te quajtur 6-kendesh."
      Course 4 Artist Params 9_instruction: |-
        E mban mend kur perdorem litarin e kundert por e hoqem litarin brenda? Le te argetohemi dhe te perdorim komanden "vizato nje siluete" me parametrat e "faqeve" dhe "gjatesise". Arrin dot t'i krijosh keto silueta? Pjesa e prapme e katrorit duhet tejete 5/100/5, pjesa e prapme e trekendeshit duhet te jete 10/100/10 dhe gjashtekendeshi eshte 2/100/2
      Course 4 Artist Var 9_instruction: |
        Këtu kemi algoritmin për të vizatuar një trekëndësh,
        modifikje atë që të përdorë variablat "brinjë". Rivendos numrin 3
        me variablën "brinjët". Ndihmë: kujto të përdorësh bllokun "vendos brinjët tek".
      Course 4 Artist Vars 1_instruction: Me ndihmon dot te vizatoj nje trekendesh? Eshte 100 piksel i gjate nga te gjitha anet.
      Course 4 Artist Vars 10_instruction: |-
        Ketu eshte nje algoritem qe vizaton nje trekendesh nga disa trekendesha. Arrin dot t'a modifikosh qe te perdori "faqe" te ndryshme per te vizatuar secilin trekendesh? Shiko permes kodit, dhe cdo here qe shikon numrin 3, zevendesoje me "faqet" e ndryshueshme. Mos harro te perdoresh bllokun "vendos faqet".
      Course 4 Artist Vars 11_instruction: |-
        Ketu eshte i njejti algoritem qe perdorem per lojen e fundit, me cfare duhet "t'i ndryshosh" faqet ne menyre qe t'a vizatosh kete pikture jashte katroreve?
      Course 4 Artist Vars 12_instruction: |-
        Le te shikojme "faqet" e ndryshueshme deri ne 5. Sa me shume faqe i shtojme ketij algoritmi, aq me i madh del i gjithe ky model! Vere qe eshte nje variabel e re e quajtur "gjatesi". Tani mund t'a perdorim ate sa here qe kemi "nje levizje perpara". Vendos "gjatesine" e ndryshueshme deri ne 75 per kete forme.
      Course 4 Artist Vars 13_instruction: "When a shape has lots of sides, each\nside needs to be shorter if you want the whole pattern to fit on the screen.\n\r\nLet's recreate the algorithm for this amazing pattern, but instead of\nmanually setting the `length` variable, let's use a math block with the `sides`\nvariable inside to make sure that each shape fits correctly. The perimeter\nof each polygon is 300 pixels.\r\nNeed some hints?  Click here."
      Course 4 Artist Vars 14_instruction: 'Loje e Lire: Shiko, algoritmi yt eshte bashkuar me nje litar tjeter. Eksperimento duke ndryshuar vlerat e variablave te tua per te formuar modele te shkelqyera.'
      Course 4 Artist Vars 2_instruction: |
        Në vend që "të ecësh përpara me 100",
        blloku "i lëvizjes' po i referohet tani variablës së "gjatësisë". Mund t'a vendosësh "gjatësinë" deri në 150 për të vizatuar këtë trekëndësh?
      Course 4 Artist Vars 3_instruction: |-
        Ja litari qe viazaton nje katror, por dicka mungon. Arrin dot t'a ndreqesh ne menyre qe te perdori "gjatesine" e ndryshueshme per t'a ditur sa e gjate duhet te jete?
      Course 4 Artist Vars 4_instruction: 'Tani dëshiroj të vizatoj një drejtkëndësh që e ka gjatësinë sa dyfishi i gjerësisë. Kemi një variabël që quhet "gjerësi" që është 100. Mund të përdorësh blloqet e matematikës për të plotësuar kodin?'
      Course 4 Artist Vars 5_instruction: 'Perdor "faqet" e ndryshueshme per te kontrolluar sa here perdoret ky litar.'
      Course 4 Artist Vars 6_instruction: "I ndryshova faqet e ndryshueshme ne 4 nga kodi ne lojen e fundit, mund te perdoresh faqet e ndryshueshme (bashke me bllokun e matematikes) per t'u siguruar qe e bej rrotullimin ne masen e duhur? Per te vizatuar nje shumekendesh te thjeshte duhet te rrotullohem 360 grade secilen here."
      Course 4 Artist Vars 7_instruction: 'I modifikon dot "faqet" e ndryshueshme qe te me ndihmosh te vizatoj kete gjashtekendesh?'
      Course 4 Artist Vars 8_instruction: |-
        Loje e Lire: Eksperimento me numrin e aneve te kesaj siluete. Arrin dot t'a ndryshosh algoritmin ne menyre qe masa e pergjithshme te mos ndryshoje, pavaresisht aneva qe ka? Shenim: Mund te te duhet te perdoresh blloqet e tua te matematikes (360 e ndare me "pjese" ne dy ane kete radhe)
      Course 4 Artist Vars 9_instruction: |-
        Modifiko kete algoritem ne menyre qe t'i perdori "pjeset" e ndryshueshme ne vend te nje numri fiks per te vizatuar nje trekendesh. Perdor "vendos anet" ne bllok.
      Course 4 Bee 1_instruction: 'Bleta nuk tregon dot se çfarë ka poshtë resë! Së pari, shiko nësë është një lule apo nje krimb. Me pas mbidh vetem nektarin nëse është një lule. '
      Course 4 Bee 2_instruction: |-
        Kontrollo secilin objekt duke përdorur bllokun "if/else" për të parë nëse është nje lule. Nëse është e tille, merrja nektarin... në të kundert, mund t'a injorosh!
      Course 4 Bee 3_instruction: |
        Objekti i panjohur është ose një lule ose një krimb.
        Përdor bllokun if/else për të mbledhur nektarin në rast se është një lule, për te prodhuar mjaltë ( sepse në të kundert do te ishte një krimb).
      Course 4 Bee 4_instruction: Kjo lule lejla mund te kete 3, 2, ose 1 nektar. Ketu nje bllok nese-tjeter kombinohet me nje bllok tjeter nese-tjeter per te krijuar nje bllok tjeter nese dhe tjeter. Jep zgjidhjen per te mbledhur sasine e panjohur te nektarit.
      Course 4 Bee 5_instruction: Kjo lule në fotografi mund të ketë 3, 2 ose 1 nektar. Shtoni një bllok if/else për të krijuar një bllok if, else-if, else. Jepni një zgjidhje për të mbledhur shumën e panjohur të nektarit.
      Course 4 Bee 6_instruction: Kjo lule manushaqe mund të ketë 3, 2 ose 1 nektarë. Krijoni një bllok if, else-if, else për të mbledhur sasinë e panjohur të nektarit.
      Course 4 Bee 7_instruction: Përdorni gjithçka keni mësuar deri më tani për të mbledhur të gjithë nektarin. Lule manushaqja mund të ketë 3, 2 ose 1 nektarë.
      Course 4 Bee For Loops 1_instruction: Perdorni nje cikël per te mbledhur nektarin nga çdo lule.
      Course 4 Bee For Loops 10_instruction: Nese cikli yt po dobësohet, rritja bie nga variabla jote e kundert për secilin cikël. Sa duhet te jetë rritja jote për të mbledhur 9, pastaj 6 dhe me pas 3 nektar?
      Course 4 Bee For Loops 11_instruction: "Çfarë ka që nuk shkon me ciklin? Shikoni nëse mund t'a rregulloni dhe të bëni bletën të mbledhi të gjithë nektarin."
      Course 4 Bee For Loops 2_instruction: 'Ja një tjetër lloj cikli, i quajtur cikli "for". Ky "cikël for" i veçantë do të numerojë nga 1 deri në 5 me nga 1, dhe do të ekzekutoj përmbajtjen e ciklit pas çdo numërimi. Ndihmoje bletën të marri nektarin.'
      Course 4 Bee For Loops 3_instruction: "Mund t'a zgjidhësh këtë puzzle duke përdorur një cikël for për te numëruar nga 1 deri në 3 me nga 1. Tani le të shkojmë të marrim ca nektar!"
      Course 4 Bee For Loops 4_instruction: "Mblidh te gjithe nektarin nga keto lule. Pyes veten nese ka ndonje menyre me te thjeshte per t'a bere kete..."
      Course 4 Bee For Loops 5_instruction: |
        Ah, "si litar" e ben kete me te lehte!
        Duke perdorur variablen e "ndryshme" nga "si litar" ne "te litari"  "marrja e nektarit" bllokon po aq here sa litari. Whew! Ka shume litare. Te gjitha kodet qe te duhen, gjenden aty, shiko si jane vendosur bashke me pas kliko ne Hape dhe shiko si funksionon. 
      Course 4 Bee For Loops 6_instruction: Mund te perdoresh edhe nje si litar per numeruar mbrapsht. Perpiqu te mbledhesh kete nektar duke filluar numerimin mbrapsht nga 5 ne 1 me nga 1.
      Course 4 Bee For Loops 7_instruction: Perdor nje litar variabel te kundert per te pare sa larg mund te levizesh horizontalisht.
      Course 4 Bee For Loops 8_instruction: A mund të përdorësh variablën e ciklit për të kontrolluar lëvizjet dhe mbledhjen e nektarit?
      Course 4 Bee For Loops 9_instruction: 'Numri i fundit ne per litarin tend quhet "rritje", dhe sa here qe litari levizen variabla e ndryshueshme peson ndryshime me rritje. Provo te mbledhesh keto lule duke perdorur nje rritje prej 2.'
      Course 4 Bee Loops 5 NEW_instruction: "Këtu janë tre lule. Mund ta zbulosh modelin e udhëzimeve që të nevojitet për t'a përsëritur tre herë që të mbledhësh nektarin me më pak blloqe?"
      Course 4 Bee Loops 5a NEW_instruction: Tani, përdor ciklet për të ndihmuar bletën të mbledhi të gjithë nektarin në rrugën e saj për te kosherja me sa më pak blloqe. Kur të shkosh atje, mos harro të bësh mjaltin!
      Course 4 Bee Params 1_instruction: 'Perdor komanden "merr 3 nektare" e cila kthehet, levizen per te mbledhur nektarin dhe me pas kthehet ne destinacionin fillestar. Bej nje radhe per te mbledhur te gjithe nektarin duke perdorur "merr 3 nektar".'
      Course 4 Bee Params 2_instruction: 'Modifiko komanden "merr 3 nektar" ne menyre qe te me beje qe ne vend se majtas te kthehem djathtas nga lulet.'
      Course 4 Bee Params 3 (copy 1)_instruction: 'Tani ka lule nga te dyja anet! Mbase mund te perdoresh nje parameter ne menyre te atille qe e njejta komande te funksionoje per lulet nga te dyja anet. I kam shtuar komandes nje parameter te quajtur "drejtim". Nese parametri "drejtim" eshte i barabarte me 0 duhet te kthehem majtas, nese eshte 1 djathtas.'
      Course 4 Bee Params 3_instruction: 'Tani ka lule ne te dyja anet! I kam shtuar kokmandes nje parameter te quajtur "drejtim" . Perdor variablen "e majte" dhe "te djathte" per te kontrolluar drejtimin. Ploteso pjesen e ngelur te kuptimit    te parametrit dhe me pas kliko "Ruaj dhe Mbyll".'
      Course 4 Bee Params 4 (copy 1)_instruction: Provo te perdoresh komanden tende te re per te mbledhur te gjitha lulet. Kujtese, 0= majtas dhe 1=djathtas.
      Course 4 Bee Params 4 - Two WhenRun_instruction: |
        Try using your new function
        to collect all of the flowers. Remember to use the left and right variables.
      Course 4 Bee Params 4 backup_instruction: |-
        A nuk do te ishte super sikur te mund te mblidhnim gjithe kete nektar me nje komande te vetme? Perpiqu te shtosh nje parameter te ri ne komanden tende te quajtur "nektaret" per te kontrolluar sasine e nektarit per t'u mbledhur. Mbase do te duash t'ia ndryshosh emerimin edhe komandes!
      Course 4 Bee Params 4_instruction: Perpiqu te perdoresh komanden e re per te mbledhur te gjitha lulet. Mos harro te perdoresh variablen e majte dhe te djathte.
      Course 4 Bee Params 5_instruction: 'Le te fillojme nga fillimi-mund te krijosh nje komande te re "merr 5 nektar" me parameter te nje drejtimi?'
      Course 4 Bee Params 6 (copy 1)_instruction: Provo te perdoresh komanden tende te re per te mbledhur gjithe kete nektar.
      Course 4 Bee Params 6_instruction: |-
        A nuk do te ishte super sikur te mund te mblidhnim gjithe kete nektar me nje komande te vetme? Perpiqu te shtosh nje parameter te ri ne komanden tende te quajtur "nektaret" per te kontrolluar sasine e nektarit per t'u mbledhur. Mbase do te duash t'ia ndryshosh emerimin edhe komandes!
      Course 4 Bee Params 7 (copy 1)_instruction: Provo te perdoresh komanden tende te re per te mbledhur gjithe kete nektar.
      Course 4 Bee Params 7_instruction: Perpiqu te perdoresh komanden e re per te mbledhur gjithe kete nektar.
      Course 4 Bee Params 8 Clone 2_instruction: |
        Oooh, now there's honey to deal
        with too! How could you update your function to either get nectar or make
        honey.
      Course 4 Bee Params 8 clone 3_instruction: |
        Oooh, now there's honey to deal
        with too! How could you update your function to either get nectar or make
        honey.
      Course 4 Bee Params 8 Clone_instruction: |
        Oooh, now there's honey to deal
        with too! How could you update your function to either get nectar or make
        honey.
      Course 4 Bee Params 8 new_instruction: |
        Oooh, now there's honey to deal with
        too! How could you update your function to either get nectar or make honey.
      Course 4 Bee Params 8_instruction: |
        Oooh, tani kemi edhe mjalte!
        Si munde te rifreskosh komanden tende si per te mbledhur nektarin apo per te bere mjalte.
      Course 4 Bee Params Ex_instruction: Perpiqu te perdoresh komanden e re per te mbledhur gjithe kete nektar.
      Course 4 Binary 1_instruction: Ja nje komande qe ka nje lidhje binare nga 1 ne 0 dhe meson fermerin te lancoje nisjen nga e majta ne te djathte, nga fillimi ne mes, duke ndezur katroret ku numri ka nje zero. Provo kodin e dhene per te pare sesi fermeri perdor dypolesine per te vizatuar nje pamje.
      Course 4 Binary 2_instruction: |-
        C'lloj fije dyjore do të lidhnit 8 herë për të vizatuar këtë imazh? Ndihmë: Numri "1" mbush një gropë.
      Course 4 Binary 3_instruction: "Mund t'a vizatoni këtë model duke lidhur vetëm një fije dyjore?"
      Course 4 Binary 5 (copy 1)_instruction: Cila fije dyjore, e përsëritur 10 herë, do të vizatojë këtë imazh?
      Course 4 Binary 5_instruction: Cila fije dyjore, e përsëritur 10 herë, do të vizatojë këtë imazh?
      Course 4 Binary 6 (copy 1)_instruction: Cila fije dyjore, e përsëritur 10 herë, do të vizatojë këtë imazh?
      Course 4 Binary 6_instruction: Cila fije dyjore, e përsëritur 10 herë, do të vizatojë këtë imazh?
      Course 4 Binary 7_instruction: Cila fije dyjore, e përsëritur 10 herë, do të vizatojë këtë imazh?
      Course 4 Binary 8_instruction: 'Mund të plotësosh pjesën më të madhe të këtij imazhi duke futur në një cikël një numër binar 5 bit - me pas do të nevojitet një numër tjetër 4 bit për të gjetur këndin e djathtë poshtë.'
      Course 4 EC 1a_instruction: No rules. No clues. Just the challenge!
      Course 4 EC 1b_instruction: No rules. No clues. Just the challenge!
      Course 4 EC 2a_instruction: No rules. No clues. Just the challenge!
      Course 4 EC 2b_instruction: No rules. No clues. Just the challenge!
      Course 4 EC 2c_instruction: No rules. No clues. Just the challenge!
      Course 4 EC 2d_instruction: No rules. No clues. Just the challenge!
      Course 4 EC 3_instruction: |
        Use what you learned in the previous level to draw
        an image like this. Note: The code becomes more simple if you incorporate
        parameters. 
      Course 4 EC 3a_instruction: |
        Extreme Challenge: No rules. No clues. Just the
        challenge!
      Course 4 Maze 1_instruction: Dërgo zogun nevrik te derrkuci!
      Course 4 Maze 2_instruction: Shmang TNT-në!
      Course 4 Maze 3_instruction: 'Programo zogun nevrik që të arrij te derrkuci. '
      Course 4 Maze 4_instruction: 'Provo bllokun "përsërit" për të përdorur më pak blloqe...'
      Course 4 Maze 5_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      Course 4 Maze 6_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      Course 4 Play Lab For Loops 2_instruction: Kësaj here, le të përpiqemi të numërojm numrat tek nga 1 në 100.
      Course 4 Play Lab Params 1_instruction: |
        Kemi një funksion me emrin "kercim"
        që bën që karakteri kryesor të kërcej sipër 100 piksela. Përdor funksionin e kërcimit për të mbledhur të gjithë flamurat.
      Course 4 Play Lab Params 10_instruction: "Kemi shtuar dhe një funksion të fundit që të përdorësh. \r\n\r\nProgramo lojën tënde që të thërrasi funksionin \"level_up\" në qoftë se\n\"player_points\" > 10. \r\n\r\nLuaj lojën dhe kalo nivelin e 4-tërt për të kaluar në formuesen tjetër. "
      Course 4 Play Lab Params 2_instruction: "Tani kemi flamurë që janë shumë lart për kërcimin e deklaruar! Le të përdorim shigjetën \"sipër\" dhe \"poshtë\" njëkohësisht në mënyrë që të arrijmë kërcime me lartësi të shumëfishta. \r\n\r\nDuhet të shtojmë një parametër\nfunksionit të kërcimit tonë të quajtur \"lartësia\". Shigjeta sipër duhet të bëjë që qeni të kërcej 200 piksela dhe me shigjetën poshtë të kërcej vetem 100 piksela.\n\r\n\r\nNdihmes: Duhet të klikosh \"modifiko\" te funksioni i kërcimit dhe azhornoje në mënyrë që të përdori parametrin \"lartësia\"."
      Course 4 Play Lab Params 3_instruction: 'Le të shtojmë një parametër tjetër në funksionin e kërcimit në mënyrë që ta përdorim me aktorë të tjerë. Çdo aktor do të përfaqësohet nga një numër, duke filluar nga numri një. Modifiko funksionin e "kërcimit" në mënyrë që perkufizimi të përfshijë parametrin "aktori". '
      Course 4 Play Lab Params 4_instruction: |
        Këtu është një funksion që quhet "patrol".
        Ndryshoje atë që të lëvizësh macen 400 piksela lart dhe 400 piksela posht.
      Course 4 Play Lab Params 5_instruction: 'Plotëso në inputin e parametrit "aktori" në mënyrë që të thërrasim funksionin "patrulla" për secilin nga aktorët. Mos harro, aktorët korespondojnë me numrat 1, 2 dhe 3.'
      Course 4 Play Lab Params 6_instruction: |
        Add another parameter called "speed"
        to the "patrol" function. Try using a "set speed" block with the new "speed"
        parameter to help Penguin get both flags before the other sprites even get
        one.
      Course 4 Play Lab Params 7_instruction: "Shiko në kodin që të është dhënë për të parë nëse \nmund të zbulosh çfarë bënë secili bllok. \r\n\r\nKur të mbarosh, përdor\nshigjetat për të kontrolluar Qenin dhe për të mledhur të gjithë flamujt."
      Course 4 Play Lab Params 8_instruction: 'Përdor një bllok "kur preket" për të dërguar Qenin pas në pjesën e sipërme-majtas VETËM NËSE Qeni prek ndonjë nga aktorët.'
      Course 4 Play Lab Params 9_instruction: "Here's our game from an earlier stage,\nbut most of the code is hidden. There’s a new function `score_points.`\r\n\r\nEdit\nthe function so that a new parameter called `points` can be added to `player_score`.\n\r\n\r\nThe variable `player_score` should increase each time Dog tags Cat\nwith pie, and decrease each time that Cat tags Dog with a sandwich.\r\n\r\nNote:\nWhen you're done, click \"Run\" to play.  When Dog scores 6 points, you will\nmove on to the next puzzle. "
      Course 4 Play Lab Vars 1_instruction: |
        Kësaj here nuk ke pse të shkruash ndonjë
        kod, thjesht shtyp "Lesho" për të luajtur lojën! Në këtë lojë, ti je Qeni i cili 
        përpiqet të mbledhi më shumë flamuj se sa Macja. Përdor shigjetën poshtë për të kontrolluar
        Qenin. Shtyp "Mbaro" kur të kesh mbaruar së luajturi.
      Course 4 Play Lab Vars 2_instruction: |
        Gara ne formuesen e fundit nuk ishte 
        shumë e drejtë! Ndrysho variablin "shpejtesia_e_qenit" që të sigurohesh që mund të mbledhesh
        më shumë flamuj se sa Macja. I pari qe mbledh 10 flamuj fiton!
      Course 4 Play Lab Vars 3_instruction: |
        Këtu kemi një lojë të re. Përdor 
        shigjetat majtas dhe djathtas për të levizur, dhe shigjetën lart për të kërcyer. Shiko nëse mund ti mbledhësh
        të gjithë flamujt.
      Course 4 Play Lab Vars 4_instruction: 'Tani ne po perdorim nje ndryshore te quajtur "lartesi" per te kontrolluar se sa lart mund te hidhet nje qen. Rifreskoni ndryshoren "lartesi" keshtu ju mund te shikoni qe qeni do hidhet aq larte sa te arrije te gjithe flamujt. Aluzion: flamujt e rinj jane 200 pixel lart.'
      Course 4 Play Lab Vars 5_instruction: |
        Le të ndertojmë një lojë! Si fillim na nevojitet
        një rezultat. Përdor bllokun "vendos pikët te" për të vendosur rezultatin 10. 
      Course 4 Play Lab Vars 6 (copy 1)_instruction: |-
        Bukur, tani kemi variablën tonë të pikëve, por si do t'i vëmë në punë? Po sikur të rrisim variablën e pikëve sa herë që qëllon një armik me topin e zjarrit? Përdor eventin "kur aktori 2 prek cfaredo" për të nxitur azhornimin e pikëve kur topi i zjarrit godet macen. Mund të rritësh pikët duke vendosur pikët = pikët + 1. Çojini pikët në 10 (duke i rritur një nga një) për të kaluar nivelin.
      Course 4 Play Lab Vars 6_instruction: "Përdor shigjetën e djathtë për të gjuajtur zemra.\r\n\r\nNë lojën tonë, si duhet të shënojmë pikë? Shto 1 në variablën \"pikët\" sa herë Qeni gjuan Macen me një zemër. Përdor eventin \"kur aktori 2 prek çfarëdo\" për të nxitur azhornimin e pikëve. Mund të rritësh variablën \"pikët = pikët + 1.\" Çojini pikët në 10 (duke i rritur një nga një) për të kaluar nivelin."
      Course 4 Play Lab Vars 7_instruction: 'Bukur, tani le të sigurohemi që kjo lojë të mos jetë shumë e thjeshtë - kur Qeni (aktori 1) goditet nga një top zjarri, duhet të humbësh një pikë. Filo me 10 pikë që të mos jetë shumë e vështirë. Zbriti pikët nga 10 në 0 për të kaluar nivelin.'
      Course 4 Play Lab Vars 8 (copy 1)_instruction: 'Mirë pra, edhe një gjë të fundit për këtë lojë - le të krijojmë që lojtari të fitojë (ose të humbas). Përdor një cikël të përjetshëm për të kontrolluar vlerën e pikëve - në qoftë se pikët është më e madhe se 20, bëj që armiku të zhduket. Në qoftë se pikët është më e vogel se 0, bëj që lojtari të zhduket. Kliko "Mbaro" kur loja të funksionojë ashtu siç do ti.'
      Course 4 Play Lab Vars 8_instruction: 'Le të krijojmë në lojë që Qeni të ketë mundësinë që të fitojë (ose humbas). Përdor një cikël të përjetshëm për të kontrolluar vlerën e variablës pikët - në qoftë se pikët është më e madhe se 20, bëj që armiku (Macja) të zhduket. Në qoftë se pikët është më e vogël se 0, bëj që lojtari (Qeni) të zhduket. Kliko "Mbaro" kur loja të punoj siç dëshiron ti.'
      Course 4 Play Lab Vars 9_instruction: "Koha për lojën e lirë! Këtu kemi të gjitha variablat që kemi luajtur deri në këtë fazë, si dhe disa të tjera\nnëse ju nevojiten. \r\n\r\nShiko që tani ka shumë blloqe në kutin e veglave që duhen të organizohen! Këtu, ne kemi vendosur secilën pjesë në \nnjë kategori të caktuar. Kushtoj pak kohë eksplorimit të çdo gjëje që është në dispozicion.\nKur të kesh mbaruar duke shfletuar, bëj një lojë ose histori duke përdorur përsëritsit, variablat,\ndhe eventet. \r\n\r\nUdhëzim: shko posht për të parë të gjitha komandat në hapësirën e punës."
      Course 4 Play Lab Vars_instruction: 'Mirë pra, edhe një gjë të fundit për këtë lojë - le të krijojmë që lojtari të fitojë (ose të humbas). Përdor një cikël të përjetshëm për të kontrolluar vlerën e pikëve - në qoftë se pikët është më e madhe se 20, bëj që armiku të zhduket. Në qoftë se pikët është më e vogel se 0, bëj që lojtari të zhduket.'
      Course 4 Play Labs For Loops 1_instruction: Le të bëjmë që qeni të flasi çdo numër nga 1 deri te 100. Përdor një cikël for dhe një bllok numërues që të flasi variablën e numëruesit sa herë cikli është procesuar.
      Course 4 Play Labs For Loops 2_instruction: Kësaj here, le të përpiqemi të numërojm numrat tek nga 1 në 100.
      Course 4 Play Labs For Loops 3_instruction: Nëse numërojmë me numra më të mëdhenj, numërojmë edhe më shumë në të njëjtën kohë. Mundohu të bësh qenin të numërojë nga 10 deri në 1000, duke i kaluar me nga 10.
      Course 4 Play Labs For Loops 4_instruction: Të ndryshosh rritësin mund të jetë një ndihmë e madhe, por akoma po numërojmë në mënyrë lineare (çdo numër me të njëjtën distancë nga i fundit) Po sikur të numëroja në mënyrë eksponentiale? Pa ndryshuar ndonjëgjë në këtë cikël, mund të numërosh 1, 4, 9 , 16, 25... (numëruesi në katror)?
      Course 4 Play Labs For Loops 4a_instruction: "Tani, të përziejmë variablat nga Shkalla e 7-të sëbashku më \"numëruesin\" e variblave tua për të krijuar pak magji.\r\r\nNë këtë puzzle, Qeni do të numërojë nga 0 në 1000 nga \"rritja\". Vendos \"rritjen\" me variabël deri në 10 në fillim të kodimit tënd për të parë ç'ndodh.\n"
      Course 4 Play Labs For Loops 5_instruction: 'Në fazën e kaluar numëruam çdo numër në katror. Po sikur të ndryshojmë nga "numëruesi^2" në "numëruesi^3" për të llogaritur çdo numër në kub (1, 8, 27, 64, 216, 343...)'
      Course 4 Play Labs For Loops 5a_instruction: "Në këtë puzzle, Qeni do të jetë \nkujdestari yt.\r\n\r\nQeni do të numërojë nga 0 në 30 në plan \"rritje\". Variabla në \"rritje\" do të fillojë me një vlerë prej 1.\r\n\r\nMund t'a bëni që\n sa herë të klikoni Qen, rritja të jetë me 2? Klikoni \nshigjetën e vahdimit për të drejtuar litarin.\r\n\r\nDrejto litarin disa herë, duke klikuar Qenin \npara secilës herë."
      Course 4 Play Labs For Loops 6_instruction: 'Nëse mbani mend, një numër prim është një numër i plotë i cili është i plotëpjestueshëm vetëm me veten dhe 1. Përdor funksionin "eshte_prim" për të nxjerrë të gjithë numrat prim nga 1 deri 100.'
      Course 4 Play Labs For Loops 6a_instruction: "Qeni do të vazhdojë të mbajë kohën duke numëruar\n\"për litarin\" tonë në \"rritje\", por këtë herë, do të fusim Magjistarin \nnë këtë miks. E ndryshon dot kodin në mënyrë të atillë që\n\"rritja\" të shtohet me 2 për secilën herë klikoni Magjistarin?\r\n\r\nHapni sytë! Magjistari lëviz shpejt!\n"
      Course 4 Play Labs For Loops 7_instruction: Mund të përdorësh një cikël for për të më ndihmuar për të thënë sekuencën 1, 4, 7, 10, 13, 16, 19, 22, 25?
      Course 4 Play Labs For Loops 7a_instruction: "Tani diçka po bëhet! Po\nsikur të fillojmë të numërojmë sa herë mund të klikojmë\nMagjistarin përpara se qeni të arrijë në 30?\r\n\r\nMbaro së shtuari blloqe tek Magjistari në mënyrë që\nsa herë të klikojë variablën \" e klikuar\" ajo rritet me një. Mund të\nanashkalosh \"rritjen\" për momentin.\r\n\r\nQeni do të fillojë të numërojë kur të shtypësh \"Nisu\".\n"
      Course 4 Play Labs For Loops 8_instruction: Cili cikël for-i do më bëj të them 19, 27, 35, 43, 51?
      Course 4 Play Labs For Loops 8a_instruction: "Për të përfunduar lojën tonë, n'a nevojitet të\nkthejmë sërisht variablën e \"rritjes\"!  Le ta bashkangjisim me nivelin e lojës.\r\n\r\n1) Mbaj shënim numrin e herëve të klikuara të Magjistarit.\r\n2)\nNëse Magjistari klikohet të paktën 10 herë para se Qeni të numërojë deri në 30, ngrej \"rritjen\" me 1 dhe fillo sërisht.\r\n3) Nëse Magjistari nuk klikohet të paktën 10 herë, loja ka mbaruar."
      Course 4 Playlab For Loop Freeplay_instruction: |
        Freeplay: Use everything you've
        learned so far to make a game that includes a `for` loop!
      Course 4 Playlab For Loops 4b_instruction: "Now, these two characters are going\nto race!  \r\n\r\nEach of them will move `counter` steps at a time, but their\ncounters will have different values because of the `for` loops.  \r\n\r\nCan\nyou change the increment in one of the loops so that the race is a tie?"
      Course 4 Playlab For Loops 5b_instruction: |
        Adjust the interval on these `for`
        loops so that the two characters end in the exact same place.
      Course 4 Playlab For Loops 6b_instruction: "Edit this `for` loop to create\na game that's fun for you to play!\r\n\r\nPress \"Run\" and click Madame\nUnicorn four times to win. "
      Course 4 SCF 1_instruction: |
        Use the suggested functions to draw four rows
        of hexagons. Notice how our even numbered rows are shifted to the right?
      Course 4 SCF 1a_instruction: |
        Can you figure out how to collect all of this
        nectar with the fewest blocks possible?
      Course 4 SCF 1b_instruction: |
        Can you figure out how to collect all of this
        honey with the fewest blocks possible?
      Course 4 SCF 2_instruction: |
        Use what you learned in the previous level to
        draw an image like this. Note: The code becomes more simple if you incorporate
        parameters. 
      Course 4 SCF 3 Fail 1_instruction: Can you figure out how to...
      Course 4 SCF 3 Fail 2_instruction: Can you figure out how to...
      Course 4 SCF 3_instruction: |
        Use what you learned in the previous level to
        draw an image like this. Note: The code becomes more simple if you incorporate
        parameters. 
      Course 4 SCFL 1_instruction: |
        Solve this puzzle using the fewest number of
        blocks possible.
      Course 4 SCFL 1a_instruction: |
        Can you get Skrat to his acorn using as few
        blocks as possible?
      Course 4 SCFL 1b_instruction: |
        Can you get Skrat to his acorn using as few
        blocks as possible?
      Course 4 SCFL 2_instruction: |
        Solve this puzzle using the fewest number of
        blocks possible.
      Course 4 SCFL 3_instruction: Can you figure out how to re-create this drawing?
      Course 4 SCFL 4_instruction: Can you figure out how to re-create this drawing?
      Course 4 SCFL 5_instruction: Can you figure out how to re-create this drawing?
      Course 4 SCFL 6_instruction: |
        Can you figure out how to re-create this drawing
        with a single loop?
      Course 4 SCFL 7_instruction: |
        The artist wants to catch some waves! Can you
        figure out how to re-create this drawing?
      Course 4 SCFP 1_instruction: |
        Create a function with parameters that allows
        the artist to jump backward and forward by x pixels, and also up and down
        by y pixels (using positive and negative numbers).
      Course 4 SCV 1_instruction: Click here to view the instructions again.
      Course 4 SCV 2_instruction: Click here to view the instructions again.
      Course 4 SCV 3_instruction: "Now for a game of tag!  Tag Cat to get 2 points.\nTag Penguin to get 3 points.  Get exactly 10 points to win!\r\nBut be careful,\nwhen Cat and Penguin tag each other, they take points away.\r\n\r\nAdd the\nblocks necessary to make this game work the way it's been explained.  How\nwill you get Dog to move in all directions using the arrow keys?  How will\nyou add points when Dog tags Cat or Penguin?  How will you subtract points\nwhen Cat and Penguin touch?"
      Course 4 SCV 4_instruction: |
        Solve this puzzle with the fewest number of blocks
        possible.
      Course 4 SCV 5_instruction: |
        Solve this puzzle with the fewest number of blocks
        possible.
      Course 4 SCV 6_instruction: Click here to view the instructions again.
      Course 4 SCVP 1_instruction: |
        Create a function with parameters that allows
        the artist to jump backward and forward by x pixels, and also up and down
        by y pixels (using positive and negative numbers).
      Course 4 Variables Assessment_instruction: Mund të krijosh këtë imazh duke përdorur një variabël për brinjët? Çdo vizë duhet të jetë 50 piksela i gjatë.
      Course1BeePuzzle12_instruction: Get three nectars and then make two honey
      Course1MazeAssessment1_instruction: "This is a test!\r\nMove one way, then\nanother to get me to the pig"
      Course1MazeAssessment2_instruction: "This is a test!\r\nMove one way, then\nanother to get me to the pig."
      course2_playlab_stage17_1_instruction: |
        Can you make Jorge the Dog (actor 1)
        say "Hi"?
      course2_playlab_stage17_10_instruction: "Add blocks to the `when run` event\nto change the background and the speed of Waddles.\r\n\r\nPlay the game and\nmove Waddles with the arrows until you score."
      course2_playlab_stage17_11_instruction: |
        Create your own story. When you're
        done, click Finish to let friends try your story on their phones.
      course2_playlab_stage17_2_instruction: |
        Can you make Jorge (actor 1) say something,
        then have Olive the Cat (actor 2) say something?
      course2_playlab_stage17_3_instruction: |
        Can you write a program to make Jorge
        (actor 1) move toward Olive the Cat?
      course2_playlab_stage17_4_instruction: |
        Can you write a program that makes
        Jorge (actor 1) move to Olive the Cat, and have Olive say "Hello" when Jorge
        reaches her?
      course2_playlab_stage17_5_instruction: |
        Can you write a program to make Octavia
        say "Hi" when she is clicked?
      course2_playlab_stage17_6_instruction: |
        Now, write a program to make Waddles
        move around using the up / down / left /right keys to hit all of the targets!
      course2_playlab_stage17_7_instruction: |
        The `repeat forever` block allows you
        to run code over and over forever. Can you attach blocks to move Chomp the
        Dino (actor 2) up and down forever?
      course2_playlab_stage17_8_instruction: "Can you have Waddles (actor 1) say\n\"Ouch!\" and play a \"hit\" sound if he runs into Chomp? \r\n\r\nWhen you're\ndone, play the game to make that happen."
      course2_playlab_stage17_9_instruction: "Can you add a block to score a point\nwhen Waddles runs into Octavia (actor 3)? \r\nPlay the game and move Waddles\nwith the arrows until you score!"
      course3_playlab_stage16_1_instruction: 'A mund ta bësh këtë qen të thotë "hello world"?'
      course3_playlab_stage16_2_instruction: |
        Can you make the dog say something
        and then have the cat say something afterwards?
      course3_playlab_stage16_3_instruction: |
        Can you write a program to make this
        dog move to the cat?
      course3_playlab_stage16_4_instruction: |
        Can you write a program that makes
        the dog move to the cat, and have the cat say "hello" when the dog reaches
        him?
      course3_playlab_stage16_5_instruction: |
        Can you add a block to make the octopus
        happy?
      course3_playlab_stage16_6_instruction: |
        Create your own story. When you're
        done, click Finish to let friends try your story on their phones.
      course3_playlab_stage17_1_instruction: |
        Can you write a program to make the
        octopus say "hello" when it is clicked?
      course3_playlab_stage17_2_instruction: |
        Can you write a program to make Waddles
        move around using the up / down / left /right keys to hit all of the targets?
      course3_playlab_stage17_3_instruction: |
        The "repeat forever" block allows
        you to run code continuously. Can you attach blocks to move this dinosaur
        up and down repeatedly?
      course3_playlab_stage17_4_instruction: |
        Can you have Waddles say "Ouch!"
        and play a "hit" sound if he runs into the dinosaur, and then move him with
        the arrows to make that happen?
      course3_playlab_stage17_5_instruction: |
        Can you add a block to score a point
        when Waddles runs into the octopus, and then move him with the arrows until
        you score?
      course3_playlab_stage17_6_instruction: |
        Can you add blocks to change the background
        and the speed of Waddles, and then move him with the arrows until you score?
      course3_playlab_stage17_7_instruction: |
        Create your own story. When you're
        done, click Finish to let friends try your story on their phones.
      courseA_maze_seq1_instruction: |
        Play with these blocks to see if you can get
        me to the pig!
      courseA_maze_seq2_instruction: Ndrysho kodin për të më çuar te derrkuci!
      courseB_playlab_events2_instruction: |
        Have Daisy the Dragon say something when
        you click "Run".
      courseB_playlab_events3_instruction: |
        Use an event to make Daisy the Dragon
        switch to a random mood when you click on her.
      courseB_playlab_events4_instruction: |
        Knight time!  Add an event so that the
        knight moves toward the dragon when the left arrow is clicked.
      courseB_playlab_events5_instruction: |
        Now add an event so that the knight runs
        away from the dragon when you press the right arrow.
      courseB_playlab_events6_instruction: "Help your knight get all of the flags!\r\n\r\nTo\ndo this, you'll need to add events to help the knight move up and down."
      courseB_playlab_events7_instruction: |
        Make this game fun by setting the knight
        to vanish when he runs into the dragon!  Play a sound when they collide to
        make it feel more real.
      courseB_playlab_events8_instruction: |
        Use your imagination. What can you do
        to make this game more fun?
      courseB_playlab_eventsFP_instruction: |
        Use your imagination. What can you do
        to make this game more fun?
      courseB_playlab_eventsToolbox_instruction: |
        Finish by playing a sound and making
        the knight vanish when he runs into the dragon!
      courseC_puppy_loops10_instruction: You are doing great! Keep it up!
      courseC_puppy_loops11_instruction: |
        You are almost there! This time, choose
        any path you like!
      courseC_puppy_loops8_instruction: |
        Challenge puzzle! Combine ideas from the
        last few puzzles to complete this.
      courseC_puppy_loops9_instruction: You are doing great! Keep it up!
      Crack a Caesar Cipher_instruction: Udhëzimet
      Crack Random Substitution_instruction: Udhëzimet
      CSD Hackathon Pt 1_instruction: (Click to see full instructions)
      CSD Hackathon Pt 2_instruction: (Click to see full instructions)
      CSD Hackathon Week 1_instruction: (Click to see full instructions)
      CSD Hackathon Week 2_instruction: (Click to see full instructions)
      CSD U3 Background Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Background Experiment_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Boolean Modify_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Boolean Predict_instruction: |
        What do you think this code will do when
        it is run? Predict what each console.log() command will print, then run the
        program to check your predictions.
      CSD U3 Draw Loop Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Draw Loop Experiment_instruction: |
        Try using some of the other shape
        functions you've learned in the draw loop. What happens when you use randomNumber()
        to generate some of the inputs?You'll want to stop and discuss with the class
        before moving on.
      CSD U3 Expressions calculator_instruction: |
        Add the numbers 1 through 10. Multiply
        the numbers 1 through 10. Check your answers with a neighbor.
      CSD U3 Frame Rate_instruction: "Slow down Gamelab Gary's animation with frameRate()"
      CSD U3 Keypress Boolean_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Random Animation_instruction: |
        Use randomNumber() to animate Gary's
        mouth.
      CSD U3 Random Choice_instruction: |
        Use the randomNumber() block to generate
        either 0 or 1
      CSD U3 Random Color_instruction: |
        Could you use randomNumber() to pick random
        colors as well? Try setting one or more of the channels in the rgb block with
        a random number. What should the maximum value be?
      CSD U3 Random Intro_instruction: |
        What do you think this code will do when
        it is run? Make a prediction, then run this code 5 - 10 times, recording the
        output each time. Share your results with your neighbor.
      CSD U3 Random Min Max_instruction: |
        Using console.log() write a program that
        randomly returns a number in a range you define.
      CSD U3 Random Width Height_instruction: |
        Pick a shape block and use calls to
        randomNumber() in place of one or more of the parameters. Maker sure you run
        it a few times so you can see the effect of randomization.
      CSD U3 Simple Drawing - Animation 2_instruction: |
        Use randomNumber() on the
        x position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Animation_instruction: |
        Use randomNumber() on the x
        position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Background_instruction: |
        Put all of your code into
        a draw() loop and then add set the background to blue with the background()
        block.
      CSD U3 Simple Drawing - Personal Animation_instruction: DO This
      CSD U3 Sprites intro sprites_instruction: Do This
      CSD U3 Variable Arithmetic pt2_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variable Arithmetic_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variable Incrementation pt2_instruction: |
        Predict: What two numbers
        will be displayed in the console?
      CSD U3 Variable Incrementation_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variables CHALLENGE gamelab gary_instruction: |
        Use variables to animate
        Game Lab Gary
      CSD U3 Variables create and assign_instruction: |
        Create and assign size in
        a single line of code.
      CSD U3 Variables draw loop newVars_instruction: |
        Extend this project to create
        your own random art visualization with variables.
      CSD U3 Variables draw loop rgb_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables draw loop xy_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables eyeBrows_instruction: |
        Predict what will happen when you move
        the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables Initialize_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables Intro_instruction: 'Create your own variable '
      CSD U3 Variables make a big square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      CSD U3 Variables make a square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      CSD U3 Variables multiple assignments_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables naming rules_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random assignment_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables random draw loop_instruction: |
        Predict what will happen when
        you move the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables random drawing exemplar_instruction: |
        Check out this example
        randomized drawing.
      CSD U3 Variables Random_instruction: |
        Predict: What will get displayed in the
        console?
      CSD U3 Variables Reassign pt2_instruction: |
        Create and assign a new variable
        in a single line.
      CSD U3 Variables Reassign_instruction: |
        Predict: What will get displayed in
        the console?
      CSD U3 Variables Square Random Loop_instruction: |
        Test your predictions from
        the last level.
      CSD U3 Variables Square Random_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables Square_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables TEMPLATE square_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables use value rect_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables write_instruction: |
        Use the write block to display the value
        of size
      CSD U3 Variables2 expressions in commands_instruction: |
        Use expressions inside
        a drawing command
      CSD U3 Variables2 expressions in variables_instruction: |
        Assign the value of
        each expression to a variable and console.log that variable.
      CSD U3 Variables2 expressions_instruction: |
        Use console.log to display the
        results of each expression. Then create your own.
      CSD U4 - Events Template_instruction: |
        Add a large red button to your screen
        using Design Mode. (Click for full instructions.)
      CSDU4 - AppLab - 1_instruction: |
        Read the documentation for penColor() and
        penWidth() before using them to draw the blue square.
      CSDU4 - AppLab - 2_instruction: |
        Write a program that acts as a simple calculator.
        (click to see full instructions)
      CSDU4 - AppLab - 3_instruction: |
        Use console to check the ending value of num.
        (Click to see full instructions)
      CSDU4 - AppLab - 4_instruction: |2
         Use the Debug Commands to make a list of
        all the values rolled before a 6. (Click to see full instructions)
      CSDU4 - Design Mode - 1_instruction: |
        Add a button that moves the turtle when
        clicked.  (Click to see full instructions)
      CSDU4 - Design Mode - 10_instruction: |
        Introducing the setPosition command!
        Replace the moveTo in the button-click event handler to use setPosition to
        move the button itself to a random location when it's clicked.
      CSDU4 - Design Mode - 11_instruction: |
        Experiment with different event types
        and select the one that you think is best. (Click to see full instructions)
      CSDU4 - Design Mode - 12_instruction: |
        Use the textLabel command to replace
        the button in your program with a text label. (Click to see full instructions)
      CSDU4 - Design Mode - 16_instruction: |
        Add an event handler for the button
        using the "Insert and show" link in the Design Mode Events tab. (Click to
        see full instructions).
      CSDU4 - Design Mode - 17_instruction: |
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      CSDU4 - Design Mode - 18_instruction: |
        Fix the layout of the bullseye game.
        (Click to see full instructions)
      CSDU4 - Design Mode - 2_instruction: |
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      CSDU4 - Design Mode - 24_instruction: |
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      CSDU4 - Design Mode - 25_instruction: |
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      CSDU4 - Design Mode - 26_instruction: |
        Save the age and name of the user in
        variables (Click to see full instructions)
      CSDU4 - Design Mode - 27_instruction: |
        Output a message to the 'textArea'
        (Click to see full instructions)
      CSDU4 - Design Mode - 28_instruction: |
        Write a greeting to the user when they
        hit 'enter' in the text input, using the 'change' event. (Click to see
        full instructions)
      CSDU4 - Design Mode - 29_instruction: |
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      CSDU4 - Design Mode - 30_instruction: |
        Show different die images for the random
        number generated. (Click to see full instructions)
      CSDU4 - Design Mode - 31_instruction: |
        Set up an event handler to respond to
        keypress events, and display event.key in the console. Hit keys on the keyboard
        to see what happens. (Click to see full instructions)
      CSDU4 - Design Mode - 32_instruction: |
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      CSDU4 - Design Mode - 33_instruction: |
        Change the code so the sound will only
        play when the up arrow is pressed. (Click to see full instructions)
      CSDU4 - Design Mode - 4_instruction: |
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      CSDU4 - Design Mode - 5_instruction: |
        Debug the program by verifying your IDs
        are being referenced properly. (Click to see full instructions)
      CSDU4 - Design Mode - 6_instruction: |
        Debug the program by properly ordering
        your button commands and event handlers. (Click to see full instructions)
      CSDU4 - Design Mode - 7_instruction: |
        Debug the program by fixing the logical
        error within the program. (Click to see full instructions)
      CSDU4 - Design Mode - 8_instruction: |
        Move the button to the middle of the
        screen. (Click to see full instructions)
      CSP Data Unit - Counting Multiple Things_instruction: "If you can count one\nthing you can count multiple things\r\n\r\nFind out how many people like something\nother than dogs and cats\r\n\r\nCount dogs\r\nCount cats\r\nCount total\r\nDo\nthe math\r\n\r\nblank/ blank toal\r\n\r\nCan also use this to find percents\nfrom this\r\n\r\nx% are dog lovers"
      CSP Data Unit -Counting Records - Easy Way_instruction: "ReadRecords with specific\ncriteria \r\nfind the length of an array\r\n"
      CSP Data Unit -Counting Records - Hard Way_instruction: "\r\n1. ReadRecords\nfor all records\r\n2. Way to loop through and count\r\n"
      CSP U4 - JSON Object Intro - Bad Way_instruction: |
        Trigger both the keyboard
        and mouse event and examine the event objects displayed in the console. Why
        might an object be the best way to store this information? (Click to see full
        instructions)
      CSP U4 - JSON Object Intro - Good Way_instruction: |
        Create an object with at
        least 5 values including at least one string and one number. (Click to see
        full instructions) 
      CSP U4 - Objects - createObject_instruction: |
        Create an object with at least
        5 values including at least one string and one number. (Click to see full
        instructions) 
      drawings!_instruction: |
        Draw the equilateral triangle - all the sides are the
        same!
      ECSPD Binary Odometer_instruction: |
        This is another resource you could use
        with your students.
      Eval Booleans 1_instruction: |
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either true or false. Click "Run" to
        see how this expression evaluates.
      Eval Booleans 2_instruction: |
        Can you set the values so that this expression
        evaluates as true?
      Eval Booleans 3_instruction: |
        The string-length function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        true.
      Eval Booleans 4_instruction: |
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: |
        Here's a similar function red shape with an additional
        variable for size. Complete the conditionals so the correct solid red image
        of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: "Write a function called food-critic, which takes\nin the name of a food and produces a String that says how you feel about that\nfood. For example, (food-critic “pizza”) might evaluate to “delicious”, but\n(food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two\nfoods to review, but you can you write more if you like!  Don’t forget to\nadd an “else” clause!\r\nOne example - and part of the definition -  has already\nbeen done for you!"
      Eval Cond 7_instruction: "Free Play: Write a function called green-shape, which\ntakes in the name of a shape and produces a solid green shape. Your function\nshould work with at least “circle”, “star” and “rectangle”, but you can add\nother shapes if you like. You can choose the size of each shape. Don’t forget\nto add an “else” clause!\r\nOne example - and part of the definition -  has\nalready been done for you!\r\n"
      Eval Cond 8_instruction: "Free Play: Suppose you want to own a car at 21, or\nhave your own business by 30. Write a function called life-goals, which takes\nin an age and produces a string that describes your life goals by then. Don’t\nforget to add an “else” clause!\r\n"
      Eval Contracts 1_instruction: |
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: |
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: |
        Check out the rotate function - can you use
        it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: |
        Can you complete this image using the "shrink"
        function block? The radius is 20. 
      Eval Define Funcs 1_instruction: |
        Here's a new function called green-triangle
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: |
        Let's look inside that green-triangle function
        to see how it works. Can you modify it so that the green-triangle function
        always draws outlined green triangles?
      Eval Define Funcs 3_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: |
        Create a new function called aqua-star that
        has a Domain of a single Number for radius and returns an aqua star of the
        given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |
        Let's use that aqua-star function to make
        a row of different sized stars. From left to right, the stars should have
        radii of 25, 50, and 75.
      Eval Define Funcs Test_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |
        The Design Recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition? The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        starburst. When given a number of points and an outer radius, starburst returns
        a yellow radial star with given points, and an inner radius that is half the
        outer radius.
      Eval Design Recipe 5_instruction: |
        Using the Design Recipe, write a function
        striped-flag that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |
        Write a function large-polygon that should
        output a solid polygon of given sides and color that takes up most of the
        window, regardless of the number of sides. To make sure that the polygon doesn't
        get too large as you increase the number of sides, side length should be inversely
        proportional to side number, with a length of (800/sides).
      Eval Design Recipe Free Play_instruction: |
        Free Play: Use the Design Recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |
        The string-append function takes two Strings
        and returns a single combined String. Add a String "Universe" to the second
        argument of string-append.
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the rectangle block to draw this
        solid, red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |
        Try using this new Evaluation Block called
        overlay to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: |
        Use the overlay block to place a 75 pixel
        radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      eventsIntro_instruction: Need a better playlab/events combo
      Farmer for Authored Hint testing_instruction: |
        Wow, I found a really deep hole!
        I don't know how many shovelfuls of dirt it needs.  Can you write a program
        that fills it until the ground is even?  Hint:  Try using the while loop this
        time.
      Food Fight!_instruction: "We've added one last function for you. \r\n\r\nUse\nan \"if\" statement to program your game to call the \"level_up\" function\nonly when \"player_score\" becomes greater than a certain number.\r\n\r\nFor\nexample: \"player_score\" > 6\r\n\r\nPlay the game, and make it to level 3\nto move to the next puzzle. "
      Food Fight_instruction: "We've added one last function for you. \r\n\r\nUse\nan \"if\" statement to program your game to call the \"level_up\" function\nonly when \"player_score\" becomes greater than a certain number.\r\n\r\nFor\nexample: \"player_score\" > 6\r\n\r\nPlay the game, and make it to level 3\nto move to the next puzzle. "
      Frequency Analysis_instruction: Test
      frozen circle function in circle_instruction: Tani le të krijojmë 20 rrathë të mbivendosur, duke kthyer 18 gradë ndërmjet çdo rrethi.
      frozen circle function with parameter_instruction: |
        Këtu kemi një bllok "Krijo një rreth" 
        që bën rrathët me madhësi të ndryshme. A mund ta përdorësh këtë për të krijuar 
        një rreth të vogël me masë 5 dhe një rreth më të madh me masën 10?
      frozen circle function_instruction: 'Përdor bllokun e ri "Create a circle" për të krijuar 10 rrathë të mbivendosur. Mos harro të hidhesh përpara ndërmjet rrathëve.'
      frozen circle_instruction: |
        Një rreth është një formë e veçantë. A mund të gjesh 
        se me çfarë numri të zëvendësosh pikëpyetjet për të vizatuar një rreth?
      frozen cross rotate dense_instruction: 'Le ta përsërisim atë 90 herë! Sa herë hyn 90 tek 360? Ndihmë: Është një numër vërtet i vogël.'
      frozen cross rotate_instruction: Tani përpiqu të përsërisësh atë 10 herë. Sa gradë duhet të kthehesh midis çdo vije?
      frozen cross_instruction: 'Përdor bllokun "Repeat" për të krijuar një shenjë plusi. A e vure re që Elsa mund të lëvizë para dhe mbrapa?'
      frozen diamond mini snowflake_instruction: 'A e dije që çdo flok dëbore ka formë të ndryshme nga njëra-tjetra? Le të krijojmë një flok dëbore të ri duke përdorur bllokun "Repeat" për të përsëritur një paralelogram 4 herë, duke u kthyer djathtas me 90 gradë ndërmjet çdo paralelogrami.'
      frozen diamond snowflake_instruction: Tani le të krijojmë një flok dëbore të ri duke përodrur bllokun repeat për të përsëritur një paralelogram 10 herë, duke u kthyer djathtas me 36 gradë ndërmjet secilit.
      frozen diamond_instruction: |
        Use a repeat around these blocks to create a parallelogram.
        It's just like a rectangle but has different angles. This one has 60 degree
        and 120 degree angles instead of all 90 degree angles.
      frozen freeplay_instruction: Zyrtarisht je një mjeshtër artesh! Krijo një botë imagjinare dimërore.
      frozen line_instruction: Përshëndetje! Unë jam Elsa e Arendelle. Më ndihmo të krijoj një rresht të vetëm.
      frozen perpendicular_instruction: 'Tani le të shohim nëse ne mund të krijojmë dy rreshta që janë në një kënd 90 gradë nga njëri tjetri. Ti duhet të përdorësh bllokun "Kthehu" ashtu si edhe bllokun "Leviz".'
      frozen snowflake branch_instruction: 'Provo të përdorësh bllokun "Create a snowflake branch" për të krijuar tre degë, të cilat fillojnë të duken si një flok dëbore.'
      frozen snowflake full_instruction: Tani le të përsërisim atë 8 herë për të bërë një flok dëbore të mrekullueshëm!
      frozen snowflower_instruction: Modelet e ndërlikuara të flokëve të dëborës mund të krijohen me forma shumë të thjeshta. A mund të bësh një model duke përsëritur 5 rrathë të masës 5 dhe 5 rrathë të masës 10?
      frozen square iterative_instruction: Duket sikur jemi në gjysëm të rrugës për të bërë një katror. Le të vendosim 4 vija bashkë për të krijuar një katror.
      frozen square loop 3x_instruction: Le të krijojmë tre katrorë, që kthehen pas çdo katrori. Sigurohu të kthehesh me 120 gradë përpara çdo katrori të ri.
      frozen square loop_instruction: 'Përshendetje, quhem Ana nga Arendelle! Le të bëjmë një katror me bllokun "Perserit", që përdor pak blloqe. Sa herë (???) duhet të përseritet cikli i bllokut "Përserit" për të bërë një katror?'
      frozen square snowflake_instruction: |-
        Mund të krijosh një flokë dëbore duke përdorur bllokun "Përserit" duke bërë një katror 10 herë, dhe bllokun "Kthehu" për t'u kthyer 36 gradë midis çdo katrori?
      Geometric Pattern_instruction: |
        Project Idea: Create a pattern using geometric
        ideas like shapes. This requires persistence and planning!
      "Grade 4 Example PlayLab Project #1_instruction": |
        Take a look at this project.  Do
        you see how it was made?
      "Grade 4 Example PlayLab Project #2_instruction": |
        Take a look at this project.  Do
        you see how it was made?
      grade1_adventurer_loops1_instruction: 'Four piles of gold!  Collect all four.'
      grade1_adventurer_loops10_instruction: |
        Help me get all of the gold from this
        cave.
      grade1_adventurer_loops2_instruction: |
        How can Laurel collect all five piles
        of gold using only one `move forward` block?
      grade1_adventurer_loops3_instruction: |
        Can you fix Laurel's path to get all
        of this gold?
      grade1_adventurer_loops4_instruction: |
        Add to the code from the last puzzle
        to get all of the gold. 
      grade1_adventurer_loops5_instruction: |
        What should you add to this code to
        get all of the gold?
      grade1_adventurer_loops6_instruction: Write the code to get all of this gold.
      grade1_adventurer_loops7_challenge_instruction: |
        Challenge: The gold goes all
        the way down these stairs!  Write the code to help me get it all.
      grade1_adventurer_loops8_challenge_instruction: |
        Challenge: Try this staircase
        now! It has an extra spike at the end you'll have to climb.
      grade1_adventurer_loops9_instruction: |
        Help me get the gold from this deep
        valley.
      grade1_adventurer_loopsFP_instruction: |
        Eureka!  Collect as much gold as you
        can!
      grade1_adventurer_loopsPre_instruction: |
        This is Laurel the Adventurer!  Can
        you move her around and get gold?
      grade1_artist_loops1_instruction: |
        The Artist is trying to draw a line six
        times, but can't get it right.  Can you help?
      grade1_artist_loops2_instruction: |
        Help the artist draw a line 7 times to make
        a garden wall.
      grade1_artist_loops3_instruction: |
        Now we need to get the soil ready to plant.
        Find the bug and help the artist prepare the ground. 
      grade1_artist_loops4_instruction: |
        Time to fix the stairs!  Repeat this pattern
        five times so the artist can reach the top of the bushes.
      grade1_artist_loops5_instruction: |
        Behind the bushes there is a beautiful vine
        full of flowers.  Can you climb the vine and see where it goes?
      grade1_artist_loops6_instruction: |
        **Challenge:**  It's a hidden garden! Let's
        walk around.
      grade1_artist_loops7_instruction: |
        The flowers down here are so pretty.  Let's
        take a closer look.
      grade1_artist_loops7a_instruction: |
        **Challenge:**  Lovely! Let's take a walk
        around the garden.
      grade1_artist_loops7b_instruction: |
        Time to head home. Can you fix this ladder
        to help the artist get down?
      grade1_artist_loops8_instruction: |
        Let's take the short way over the pond.
        Can you help the artist stay on the stones?
      grade1_artist_loops9_instruction: I still need a story for this puzzle
      grade1_artist_loopsFP_instruction: |
        Use what you have learned to draw a picture
        of what you think the artist saw when he got home.
      grade1_maze_sequence1_instruction: Ndrysho kodin për të më çuar te derrkuci!
      grade1_maze_sequence10_instruction: Move me around the TNT to get to the pig.
      grade1_maze_sequence2_instruction: Ndrysho kodin për të më çuar te derrkuci!
      grade1_maze_sequence3_instruction: |
        Can you add 2 blocks to get the bird to
        the pig.
      grade1_maze_sequence4_instruction: Now try this puzzle from the start!
      grade1_maze_sequence5_instruction: |
        Move one way, then another to get me to
        the pig!
      grade1_maze_sequence6_instruction: |
        Figure out what is missing and then add
        blocks to get me to the pig!
      grade1_maze_sequence7_instruction: |
        Your turn!  What do you need to do to get
        the bird to the pig?
      grade1_maze_sequence8_instruction: |
        Debug this level by adding blocks to get
        me to the pig!
      grade1_maze_sequence9_instruction: |
        Go around the TNT to get me to the pig!
        
      grade1_maze_sequenceA_instruction: |
        Challenge: Move me around the TNT to get
        to the pig.
      grade1_maze_sequenceB_instruction: Fix the bugs to get the bird to the pig.
      grade1_maze_sequenceC_instruction: "It's all you!  Get the bird to the pig."
      grade1_maze_sequenceD_instruction: Now head any which way to get that pig!
      grade1_playlab_events1_instruction: |
        This game is called "Play Lab".  See
        if you can figure out what each block does.
      grade1_playlab_events1a_instruction: |
        Make your robot say "Hello!" when the
        button is clicked.
      grade1_playlab_events2_instruction: |
        This program makes Robin fly.  Can you
        get her to vanish when you click her?
      grade1_playlab_events2a_instruction: |
        Edit the code so that when the second
        bird is clicked, your program plays a sound!
      grade1_playlab_events3_instruction: "This program makes Robin fly.  Can you\nmake the robot jump when you press the up button?\r\n"
      grade1_playlab_events3a_instruction: |
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      grade1_playlab_events4_instruction: |
        Add a block to make Robin vanish when
        she collides with the robot.
      grade1_playlab_events4a_instruction: |
        Add code to make something happen when
        the fourth bird is clicked. Be creative!
      grade1_playlab_events5_instruction: |
        Add a block to the 'when run' event
        that starts the dragon flying.
      grade1_playlab_events5a_instruction: |
        About My Robot Project! Write code so
        that clicking on each bird shows a new fact about your robot.
      grade1_playlab_events6_instruction: |
        Add a block to the 'when actor 1 clicked'
        event that makes the dragon return to the middle of the screen.
      grade1_playlab_events7_instruction: |
        Add a block so that when you push the
        left arrow button, the knight surges toward the dragon.
      grade1_playlab_events8_instruction: |
        Add a block so that when the knight collides
        with the dragon, it plays a sound.
      grade1_playlab_events9 RYAN COPY_instruction: |
        Now, have Robin wait a second,
        then come back after she vanishes.
      grade1_playlab_events9_instruction: |
        Now, add a block to keep score each time
        the knight hits the dragon.
      grade1_playlab_eventsFP_instruction: |
        Use your imagination. What can you do
        to make this game more fun?
      grade1_sequence_pre_instruction: |
        Play with these blocks to see what they make
        the bird do!
      grade1_video_frustrationRainbow_instruction: |
        This video describes the rainbow
        of frustration and introduces persistence.
      grade2_CaringForNewPet_0_instruction: |
        Can you help me catch the naughty pig?
        Add a move forward block to this code, then press "Run".
      grade2_CaringForNewPet_1_instruction: |
        Can you help me catch the naughty pig?
        Stack a couple of `move forward` blocks below the `when run` block and press
        "Run". 
      grade2_CaringForNewPet_10_instruction: Më ço tek derrkuci!
      grade2_CaringForNewPet_11_instruction: |
        Keep calm and help me find the bad
        pig. Otherwise I might get angry!
      grade2_CaringForNewPet_2_instruction: |
        This pig is ruffling my feathers. Help
        me get to him!
      grade2_CaringForNewPet_3_instruction: |
        Trace the path and lead me to the silly
        pig. Avoid TNT or feathers will fly!
      grade2_CaringForNewPet_3D_instruction: Fix this code to get me to the pig!
      grade2_CaringForNewPet_4_instruction: |
        Keep calm and help me find the bad pig.
        Otherwise I might get angry!
      grade2_CaringForNewPet_5_instruction: Më ço tek derrkuci!
      grade2_CaringForNewPet_6_instruction: |
        Challenge: Guide me to the green evilness!
        (Watch out for TNT)
      grade2_CaringForNewPet_7D_instruction: |
        This code has a lot of bugs, you'll
        need to both remove and add blocks to get me to the pig.
      grade2_collector_10_instruction: |
        You're almost done! Collect all of the coins
        to finish the stage!
      grade2_collector_2_instruction: |
        I love to chase the ball, but what should
        I do when I get to it?
      grade2_collector_3_instruction: |
        Sequence matters! The blocks you need are
        already in the workspace, but not connected.  Order these blocks to solve
        the puzzle.
      grade2_collector_4_instruction: |
        Sequence matters! The blocks you need are
        already in the workspace, but not connected.  Order these blocks to solve
        the puzzle.
      grade2_collector_5_instruction: |
        These blocks are in the wrong order! Help
        me collect each coin by putting the commands in the right order.
      grade2_collector_6_instruction: |
        These blocks are in the wrong order! Help
        me collect each coin by putting the commands in the right order.
      grade2_collector_7_instruction: |
        Challenge puzzle! What is going on here? Even
        if we put these in the right order, there will still be some missing.
      grade2_collector_8_instruction: |
        Keep up the good work! Help me collect all
        of the coins.
      grade2_collector_9_instruction: "Let's get the coins!"
      grade2_collector_pre1_instruction: |
        Ruff! Can you help me collect some tennis
        balls?
      grade2_MakeDogTag_1_instruction: |
        Drag blocks onto the screen to have the artist
        draw over the grey lines in the picture. (Each line is 100 pixels long)
      grade2_MakeDogTag_10_instruction: Vizato diçka argëtuese.
      grade2_MakeDogTag_2_instruction: "This spaceship needs a window!\r\n\r\nEach\nside is 100 pixels and all of the angles are 90 degrees."
      grade2_MakeDogTag_3_instruction: Më ndihmo të përfundoj shtëpinë për këtë macen.
      grade2_MakeDogTag_4_instruction: |
        Kjo shtëpi ka nevojë për një çati! Vizato trekëndëshin. Ndihmë:
        të treja brinjët janë të së njëjtës gjatësi.
      grade2_MakeDogTag_5_instruction: "\"Now a tag for Belle!\"\r\n\r\nDraw this\ndiamond with 200 pixel sides."
      grade2_MakeDogTag_6_instruction: Lojë-falas! Vizato çfarëdo që dëshiron.
      grade2_MakeDogTag_7_instruction: "One more tag.  This is a triangle for Pi.\r\n(Each\nside is 150 pixels)"
      grade2_MakeDogTag_8_instruction: |
        Tani le të bashkojmë një grup me V së bashku,
        duke i vizatuar ato në një cikël.
      grade2_MakeDogTag_9_instruction: |
        Rebuild the code from the last puzzle, but
        this time, add a left turn of 30 degrees inside the loop. Now, repeat it 24
        times instead of 8.
      grade2_MakeDogTag_BFP_instruction: "\"Hi, I'm an artist. You can write code\nto make me draw almost anything.\"\r\n\r\nPlay with the blocks in the toolbox\nto see what they do!"
      grade2_MakeDogTag_FP_instruction: |
        Freeplay: What shape will you make the tag
        for your pet?
      grade2_maze_debuggingFP_instruction: |
        Now, help me sneak up on the pig any
        way you want to!
      grade2_maze_debuggingPre_instruction: |
        Play with these blocks to see what they
        make the bird do!
      grade2_maze_intro10_instruction: Solve this puzzle.
      grade2_maze_intro2_instruction: |
        Welcome to Code Studio! Here you will learn
        to use blocks to build programs. Press `Run` to run a program now!
      grade2_maze_intro3_instruction: |
        The `workspace` is where you will create all
        of your programs. Can you guess what this program does? Press the “Run” button
        to find out.
      grade2_maze_intro4_instruction: |
        Drag a block from the toolbox into the workspace.
        Connect it to the other blocks.
      grade2_maze_intro6_instruction: |
        That’s it!  Now we’re ready to try to solve
        a few puzzles. 
      grade2_maze_intro7_instruction: This time, try something a bit more challenging.
      grade2_maze_intro8_instruction: |
        This is a challenge puzzle.  It is meant to
        be hard and will probably take you a couple of tries to solve.  If you don’t
        solve it after several tries, don’t worry!  It will be in the Play Zone at
        the end of the stage and you can try it again when you’ve had more practice.
      grade2_maze_intro9_instruction: Solve this puzzle.
      grade2_playlab_project_1_instruction: |
        Now, write a program to make Waddles
        move around using the up / down / left /right keys to hit all of the targets!
      grade2_playlab_project_2_instruction: |
        The `repeat forever` block allows you
        to run code over and over forever. Can you attach blocks to move Chomp the
        Dino (actor 2) up and down forever?
      grade2_playlab_project_3_instruction: "Can you have Waddles (actor 1) say \"Ouch!\"\nand play a \"hit\" sound if he runs into Chomp? \r\n\r\nWhen you're done,\nplay the game to make that happen."
      grade2_playlab_project_4_instruction: "Can you add a block to score a point\nwhen Waddles runs into Octavia (actor 3)? \r\nPlay the game and move Waddles\nwith the arrows until you score!"
      grade2_playlab_project_5_instruction: "Add blocks to the `when run` event to\nchange the background and the speed of Waddles.\r\n\r\nPlay the game and move\nWaddles with the arrows until you score."
      grade2_playlab_project_6_instruction: |
        Create your own story. When you're
        done, click Finish to let friends try your story on their phones.
      grade2_puppy_loops2_instruction: |
        Can you get to the pig by creating a loop
        that uses only one `move forward` block inside of a `repeat`?
      grade2_puppy_loops3_instruction: |
        Get me to the pig! Solve this puzzle by creating
        a loop!
      grade2_puppy_loops4_instruction: |
        In this puzzle, two `repeat` loops will help
        you get to the pig with the fewest number of blocks!
      grade2_puppy_loops5_instruction: Më ço tek derrkuci.
      grade2_puppy_loops6_instruction: |
        Loops even work with more than one block
        inside!  Can you loop this sequence to get me to the pig?
      grade2_puppy_loops7_instruction: Use what you learned to get me to the pig!
      grade2_PuppyLoops_1_instruction: |
        Can you get me to the pig using 5 of the
        same kind of blocks?
      grade2_PuppyLoops_10_instruction: "Helika ime e letrës e ngulur në shkop nuk ka përfunduar ende. Sa herë duhet t'a përsëris që të përfundojë?"
      grade2_PuppyLoops_2_instruction: |
        Can you get to the pig by creating a loop
        that uses only one `move forward` block inside of a `repeat`?
      grade2_PuppyLoops_3_instruction: |
        Get me to the pig! Solve this puzzle by creating
        a loop!
      grade2_PuppyLoops_4_instruction: |
        In this puzzle, two `repeat` loops will help
        you get to the pig with the fewest number of blocks!
      grade2_PuppyLoops_5_instruction: Më ço tek derrkuci.
      grade2_PuppyLoops_6_instruction: |
        Loops even work with more than one block
        inside!  Can you loop this sequence to get me to the pig?
      grade2_PuppyLoops_7_instruction: Më ço tek luledielli!
      grade2_PuppyLoops_8_instruction: |
        Kodi për tre mustaqet që
        shikon është gabim. Ndihmë: çdo mustaqe është 75 piksela e gjatë. Rregullo këtë kod për të vizatuar 
        mustaqet.
      grade2_PuppyLoops_9_instruction: |
        Duket sikur C në kod është vizatuar mbrapsht.
        A mund ta bësh të duket si C?
      grade3_AboutMyRobot_1_instruction: |
        Make your robot say "Hello!" when the
        button is clicked.
      grade3_AboutMyRobot_2_instruction: |
        Edit the code so that when the second bird
        is clicked, your program plays a sound!
      grade3_AboutMyRobot_3_instruction: |
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      grade3_AboutMyRobot_4_instruction: |
        Add code to make something happen when
        the fourth bird is clicked. Be creative!
      grade3_AboutMyRobot_5_instruction: |
        About My Robot Project! Write code so that
        clicking on each bird shows a new fact about your robot.
      grade3_AboutMyRobot_TeacherIDo_instruction: |
        Run this puzzle and click on the
        robot to see what happens!
      grade3_bee_conditionals_new1a_instruction: |
        Help the bee collect all of the
        nectar. You can only collect nectar from flowers, but you can check any space
        to see if there is a flower.
      grade3_bee_conditionals_new1b_instruction: |
        Help the bee collect all of the
        nectar. You can only collect nectar from flowers, but you can check any space
        to see if there is a flower.
      grade3_bee_conditionals_new2_instruction: |
        Can you help the bee collect the
        nectar from the flowers? You can only collect nectar from flowers, but you
        can check any space to see if there is a flower.
      grade3_bee_conditionals_new2a_instruction: |
        Now we know that every flower has
        exactly one nectar. Use the blocks provided to check each space and only get
        nectar when there's a flower. 
      grade3_bee_conditionals_new2b_instruction: |
        Collect all of the nectar. You
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower.
      grade3_bee_conditionals_new3a_instruction: |
        Collect all of the nectar or make
        all the honey. You can only collect nectar from flowers and make honey from
        honeycombs. Check any space to see if there is a flower or honeycomb.
      grade3_bee_conditionals_new3b_instruction: |
        Uh oh! The bee is not sure if he
        should collect nectar or make honey. Can you help him out?
      grade3_bee_conditionals_new3c_instruction: |
        Help the bee collect all of the
        nectar and make all of the honey! Hint: Try using one loop inside of another
        loop.
      grade3_bee_Conditionals_new4_instruction: |
        Now try checking all of these flowers
        with "if" blocks to see if there is any nectar available.
      grade3_bee_conditionals_quantum1_instruction: |
        This cloud is blocking my view!
        Check to see if there's a flower under the cloud, and only get nectar if
        there's a flower. Be careful, it can change!
      grade3_bee_conditionals_quantum2_instruction: |
        Bleta dëshiron vetëm nektar 
        tani. Kujto, jo të gjithë objektet janë lule, kështu që kontrollo për të mblehdur nektar vetëm
        tek lulet.
      grade3_bee_conditionals_quantum3_instruction: |
        Now I just want to make honey.
        Some of these clouds might have honeycombs under them. The way we've been
        going about things won't work here. Be sure to check if a honeycomb is hiding
        behind each cloud!
      grade3_bee_conditionals_quantum4_instruction: |
        Sometimes this cloud covers
        a flower, and sometimes it covers a honeycomb! Use the if/else block to collect
        nectar if it is a flower, else to make honey (because it is a honeycomb).
      grade3_bee_conditionals_quantum5_instruction: "There will be either a flower\nor a honeycomb under each of those clouds!\r\n\r\nUse the `if/else` block\nto collect nectar if there is a flower.\r\nOtherwise, make honey (because\nthere is a honeycomb)."
      grade3_Conditionals_1 BAD_instruction: Përdor një cikël për të mbledhur gjithë nektarin.
      grade3_Conditionals_1_instruction: |
        Përshëndetje, unë jam një bletë! Më ndihmo të mbledh gjithë
        nektarin nga luet. Përdor një cikël.
      grade3_Conditionals_10 BAD_instruction: |
        Mblidh nektar nga rreshtat e luleve!
        Përdor një cikël të mbivendosur.
      grade3_Conditionals_10_instruction: |
        Mblidh nektar dhe bëj mjaltë. Ndihmë:
        çfarë ndodh nëse ti përdor kushtin "if nectar" në një lule të kuqe? Mund
        ta përfundosh këtë me një cikël?
      grade3_Conditionals_11 BAD_instruction: |
        Vlerësim - Përdor një cikël while për të mbledhur 
        gjithë nektarin nga kjo lule.
      grade3_Conditionals_11_instruction: |
        Mblidh nektar dhe bëj mjaltë. Kujdes
        mos mbledhësh nektar nga një lule lejla nëse nuk ka nektar.
      grade3_Conditionals_12_instruction: Mblidh nektar nga të katërta lulet.
      grade3_Conditionals_13_instruction: |
        Assessment: Collect all of the nectar.
        Be careful not to try to collect nectar from a purple flower if it doesn't
        have any.
      grade3_Conditionals_2_instruction: |
        Më ndihmo të mbledh gjithë nektarin
        nga lulet dhe bëj mjaltë. Përdor një cikël.
      grade3_Conditionals_3_instruction: "Be careful not to collect nectar from a\npurple flower if it doesn't have any. \r\nYou must first check if the nectar\nis equal to 1 using the `if nectar` block."
      grade3_Conditionals_4_instruction: |
        Kontrolloje këtë lule me një bllok "if"
        për të parë nëse ka nektar.
      grade3_Conditionals_5_instruction: Mblidh nektar nga çdo lule nëse ka.
      grade3_Conditionals_6_instruction: |
        Kjo fushë ka lule të kuqe dhe lejla.
        Lulet e kuqe kanë një sasi të ditur nektari, por nektari i luleve lejla është i panjohur.
        Mblidh gjithë nektarin.
      grade3_Conditionals_7_instruction: Mblidh gjithë nektarin nga çdo lule.
      grade3_Conditionals_8_instruction: Mblidh nektar tek lulet që kanë nektar.
      grade3_Conditionals_9_instruction: |
        Help me find all of the nectar using as
        few blocks as possible!
      grade3_Conditionals_TeacherIDo_instruction: |
        Check this flower with an "if"
        block to see if there is any nectar available.
      grade3_ConditionalsElse_1_instruction: |
        Bleta nuk mund të thotë nëse kjo është
        një lule apo një koshere. Grumbullo nektar vetëm nga lulet, por së pari kontrollo
        nëse është një lule apo koshere.
      grade3_ConditionalsElse_2_instruction: |
        Bleta dëshiron vetëm nektar 
        tani. Kujto, jo të gjithë objektet janë lule, kështu që kontrollo për të mblehdur nektar vetëm
        tek lulet.
      grade3_ConditionalsElse_3_instruction: |
        Now I just want to make honey. Some
        of these clouds might have honeycombs under them. Be sure to check each cloud!
      grade3_ConditionalsElse_4_instruction: |
        Objekti i panjohur është ose
        një lule ose një koshere. Përdor bllokun if/else për të mbledhur nektar nëse është
        lule, përndryshe për të bërë mjaltë (sepse është koshere).
      grade3_ConditionalsElse_5_instruction: "There will be either a flower or a\nhoneycomb under each of those clouds!\r\n\r\nUse the `if/else` block to collect\nnectar if there is a flower.\r\nOtherwise, make honey (because there is a\nhoneycomb)."
      grade3_ConditionalsElse_6_instruction: "I am not sure how much nectar this\nflower has, but I know it has either 1, 2, or 3 nectar. \r\n\r\nCombine the\nconditional blocks (`if` and/or `if/else`) to only get as much nectar as the\nflower has. \r\n\r\nRemember, the amount of nectar can change each time you\nrun the puzzle!"
      grade3_ConditionalsElse_7_instruction: |
        Kjo lule lejla mund të ketë secila
        3, 2 ose 1 nektar. Përfundo funksionin "kontrollo lulen lejla" dhe përdore
        atë të mbledhësh gjithë nektarin te lulet.
      grade3_ConditionalsElse_8_instruction: "Write the function for `check flower\nmake honey`. \r\n\r\nYour function should check if the purple flower has 3,\n2, or 1 nectar and get all of the nectar. \r\nThen, move forward and make\nhoney."
      grade3_ConditionalsElse_9_instruction: "**Assessment:** This cloud is either\nhiding a flower with one nectar or a honeycomb that needs one honey.  \r\n\r\nComplete\nthe `get nectar or make honey` function, then call it to collect the nectar\nor honey. \r\n"
      grade3_ConditionalsElse_TeacherIDo_instruction: "There will be either a flower\nor a honeycomb under each of those clouds!\r\n\r\nUse the `if/else` block\nto collect nectar if there is a flower.\r\nOtherwise, make honey (because\nthere is a honeycomb)."
      grade3_Debugging_1_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      grade3_Debugging_10_instruction: "This puzzle is making me loopy! \r\nFix the\nerror(s) to collect all of the nectar and make all of the honey."
      grade3_Debugging_11_instruction: "Assessment:  Now it's time to show what\nyou know!\r\n\r\nFix the error(s) to collect all of the nectar and make all\nof the honey."
      grade3_Debugging_2_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      grade3_Debugging_3_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      grade3_Debugging_4_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      grade3_Debugging_5_instruction: "That flower looks tasty! \r\n\r\nFix the error(s)\nto collect all of the nectar.  You can now use both run and step."
      grade3_Debugging_6_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin. 
      grade3_Debugging_7_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      grade3_Debugging_8_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      grade3_Debugging_9_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      grade3_Debugging_TeacherIDo_instruction: |
        These blocks are really bugging me.
        Fix the error(s) to collect all of the nectar and make all of the honey.
      grade3_Loops_1_instruction: |
        Can you help me collect the nectar from these
        flowers? 
      grade3_Loops_10_instruction: |
        Përdor një cikël të njëjtë si puzzle i fundit, por bëj
        një kthesë brënda tij.
      grade3_Loops_11_instruction: |
        Përdor një cikël për të shkuar poshtë shkallëve dhe mblidh
        nektarin.
      grade3_Loops_12_instruction: |
        Përdor një cikël për të mbledhur nektarin nga çdo lule
        dhe bëj mjaltë te çdo koshere.
      grade3_Loops_2_instruction: "Mund t'a kryesh detyrën tënde më me lehtësi me një cikël?"
      grade3_Loops_3_instruction: |
        A mund të përdorësh një cikël për të mbledhur gjithë
        nektarin?
      grade3_Loops_4_instruction: |
        Now use the `repeat` block to collect all of the
        nectar and make all of the honey.
      grade3_Loops_5_instruction: |
        Vendos këto blloqe brënda një cikli për të mbledhur nektar
        nga çdo lule.
      grade3_Loops_6_instruction: Cfare ndodh nëse e lidhni këtë pjesë 3 herë? Mos harroni të përgatisni në fund mjaltin!
      grade3_Loops_7_instruction: |
        Çdo lule mban një njësi nektari. Mblidh
        nektar nga çdo lule. 
      grade3_Loops_8_instruction: Përdor një cikël për të mbledhur nektarin dhe përgatitur mjaltin.
      grade3_Loops_9_instruction: |
        Mblidh nektarin nga çdo lule dhe bëj mjaltë
        tek çdo koshere.
      grade3_Loops_TeacherIDo_instruction: "Those flowers look tasty!\r\n\r\nCollect\nnectar from each of the flowers using the fewest blocks possible."
      grade3_maze_Loop1_instruction: |
        Assessment:  Get me to the sunflower using
        only 5 blocks! 
      grade3_maze_loops1_instruction: |
        Assessment:  Get me to the sunflower using
        only 5 blocks! 
      grade3_maze_loops2_instruction: Më ço tek luledielli!
      grade3_maze_loops3_instruction: Më ço tek luledielli!
      grade3_maze_loops4_instruction: Më ço tek luledielli!
      grade3_maze_loops5_instruction: Më ço tek luledielli!
      grade3_maze_nestedLoops1_instruction: |
        Can you get me to the pig using 5 of
        the same kind of blocks?
      grade3_maze_nestedLoops2_instruction: |
        Can you get to the pig by creating a
        loop that uses only one `move forward` block inside of a `repeat`?
      grade3_maze_nestedLoops3_instruction: |
        Get me to the pig! You can only use
        one move forward block this time
      grade3_maze_nestedLoops4_instruction: |
        In this puzzle, two `repeat` loops will
        help you get to the pig with the fewest number of blocks!
      grade3_playLab_buildGame_1_instruction: |
        There is a new block in this lesson,
        the `random integer` block. It is used to choose a random number. Write a
        program where the robot says a random number between 1 and 100!
      grade3_playLab_buildGame_2_instruction: |
        We have already created a random integer,
        "j", which is either 1 or 0. Now, we need to use it to decide whether our
        card is red or black. Add a second if statement to the code under `when run`
        to complete this code.
      grade3_playLab_buildGame_3_instruction: |
        There are 13 different card values
        in a deck of cards, so we'll need to have 13 options. Under the empty `when
        run` block, add a line that sets the placeholder "i" to a random integer
        between 1 and 13.
      grade3_playLab_buildGame_4_instruction: |
        In a deck of cards, a card with value
        1 isn't actually called a "1", there's a special name. Write an if statement
        that checks if the random number is a 1, then tell the computer that the value
        of that card is "Ace".
      grade3_playLab_buildGame_5_instruction: |
        We can just call the cards from 2
        to 10 by their numbers, so add an if statement that checks whether the number
        generated is within those numbers, then sets the card value to the number
        generated.
      grade3_playLab_buildGame_6_instruction: |
        There are three more cards with special
        names in the deck. Add to your code so that a card number 11 is called a "Jack",
        a 12 is a "Queen" and a 13 is a "King"
      grade3_playLab_buildGame_7_instruction: |
        You already know what color your card
        is, but what suit is it? Add code to the conditional statement "if card is
        Red" to choose hearts or diamonds.
      grade3_playLab_buildGame_8_instruction: |
        Add the second part of the code to
        choose a suit, copying what you made for a Red card.
      grade3_playLab_buildGame_final_instruction: |
        Final stage for playlab conditionals
        level (could hide entire function so that students just work with point scoring)
      grade3_playLab_buildGame_final2_instruction: |
        Here's all of your code to choose
        a card - try adding some other fun features!
      grade3_robotFarmer_ConditionalsIntro_1_instruction: |
        Hi, I'm a farmer. I need
        your help to flatten the field on my farm so it's ready for planting. Move
        me to the pile of dirt and use the "remove" block to remove it.
      grade3_robotFarmer_ConditionalsIntro_10_instruction: |
        I'm working late, so
        it's dark out, and I can't tell how large the piles are. Now I don't have
        all the options I used to have on the while block. Move me along the field,
        and if there is a pile, remove it
      grade3_robotFarmer_ConditionalsIntro_11_instruction: |
        It's still dark outside.
        Move me along the field. If there is a pile, remove it, and if there is a
        hole, fill it in. Hint: use the dropdown menu of options on the "if" block.
      grade3_robotFarmer_ConditionalsIntro_2_instruction: |
        Next, move me to the hole
        and fill it with TWO shovelfuls of dirt, using the "fill" block.
      grade3_robotFarmer_ConditionalsIntro_3_instruction: |
        Move me to the pile of
        dirt and tell me how many shovelfuls to remove using as few blocks as possible.
      grade3_robotFarmer_ConditionalsIntro_4_instruction: |
        Can you help me remove
        all four piles of dirt? Hint: use a repeat block if you can.
      grade3_robotFarmer_ConditionalsIntro_5_instruction: |
        Help me fill in all these
        holes with 5 shovelfuls of dirt. Hint: you can put a "repeat" block inside
        the "while" block.
      grade3_robotFarmer_ConditionalsIntro_6_instruction: |
        Remove all the piles of
        dirt, using as few blocks as possible. The new options in the dropdown menu
        on the "while" block tell me if I'm standing on a pile or a hole.
      grade3_robotFarmer_ConditionalsIntro_7_instruction: |
        Wow, I found a really
        deep hole! I don't know how many shovelfuls of dirt it needs. Can you write
        a program that fills it until the ground is even?
      grade3_robotFarmer_ConditionalsIntro_8_instruction: |
        Help me fill in the hole
        at the end of the field, using as few blocks as possible.
      grade3_robotFarmer_ConditionalsIntro_9_instruction: |
        Make me remove all these
        piles of dirt. Try to use as few blocks as possible. Hint: try using a "while"
        block.
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1_instruction: |
        Help me fill
        in all these holes with 5 shovelfuls of dirt. Hint: you can put a "repeat"
        block inside the "while" block.
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo2_instruction: |
        I'm working
        late, so it's dark out, and I can't tell how large the piles are. Now I
        don't have all the options I used to have on the while block. Move me along
        the field, and if there is a pile, remove it
      grade3_RunningFarm_1_instruction: "(Notes for Review) Since the last stage\ntaught the 'repeat until' block, the purpose of this is most likely to teach\nthe 'repeat while' block. In the context of the levels already created,\nI think using the 'repeat' and 'if' blocks could be possible,  (ex. if\nthe crops weren't spread as evenly on the field so the farmer would have\nto test for wheat present before collecting it). A Repeat While block would\nbe more applicable if there were multiple wheat/potatoes in each square, which\nmight be a possible change.\r\n\r\nGrant Notes: for the coins, 1=0 and 2=1\n(I couldn't get the coins to show up with a value of 0). The wheat should\ngrow at random intervals. For the graphic, think about the Minecraft way of\ngrowing wheat (green, has multiple heights showing growth, then yellow for\nripe)."
      grade3_RunningFarm_10_instruction: |
        This is another debugging to make sure
        the students understand the difference between the IF block and While loop.
        Start off all crops as ripe with at least 1 item, with growth after Run.
      grade3_RunningFarm_2_instruction: "NOTES: have wheat and potatoes interspersed\nthroughout the row. Potatoes should be fully grown, with some randomly showing\nmore than 1 potato per spot. This is different from the previous puzzle because\nstudents will have to use the drop down menu on the IF block to select potatoes\ninstead of harvesting wheat.\r\n\r\n"
      grade3_RunningFarm_3_instruction: |
        This will look essentially the same as the
        previous puzzle. There should be two crops randomly planted in the row. Each
        plant should start at a random growth stage and grow when the user runs their
        algorithm. Students are using the while loop and hopefully understand that
        it's better at picking all the crops of one type.
      grade3_RunningFarm_4_instruction: |
        Since students started this course using
        events, we wanted to include them into this culminating stage. We will only
        use them in a few stages then move on. This puzzle should randomly populate
        the entire column with wheat and potatoes. The puzzle should also start with
        the following event blocks: up arrow, down arrow, and space bar. Attached
        to the space bar should be a collect block.
      grade3_RunningFarm_5_instruction: |
        This puzzle should randomly populate the
        entire row with wheat and potatoes. The puzzle should also start with the
        following event blocks: up arrow, down arrow, and space bar. Can we check
        to make sure students are using while loop?
      grade3_RunningFarm_6_instruction: |
        This puzzle should randomly populate the
        entire field with wheat and potatoes. The puzzle should also start with the
        following event blocks: up arrow, down arrow, left arrow, right arrow, and
        space bar. Can we check to make sure students are using while loop?
      grade3_RunningFarm_7_instruction: |
        Have wheat and potatoes planted randomly
        at various growth stages. I just wanted a quick debugging puzzles in here
        to transition away from events
      grade3_RunningFarm_8_instruction: |
        Have wheat and potatoes planted randomly
        at various growth stages. Now we introduce multiple while loops (stacked)
        nested inside a loop. The two while loops in the solution represent different
        while loops (while there is potato and while there is wheat)
      grade3_RunningFarm_9_instruction: |
        Add Weeds element. Weeds start out in random
        spots in the field and spread more and more rapidly as time goes on.. This
        puzzle is the culminating game-like puzzle. Students should have the event
        blocks (up, down, left, right, spacebar) available in the toolbox to use if
        they want. The entire field should be planted randomly with mostly wheat,
        potatoes, and a few weeds.
      grade3_RunningFarm_TeacherIDo_instruction: |
        Teacher I Do: Show students how
        they can use loops and conditionals to plant and harvest 2 rows of crops.
      grade3_RunningFarm_TeacherIDo2_instruction: |
        Teacher I Do: Show students how
        to use loops to harvest many crops.
      grade4_arist_functions_star0_instruction: |
        Have you drawn something like this
        star before? Practice making it one more time by adding a turn and a repeat
        block.
      grade4_arist_nested_loop_circles1_instruction: |
        Assessment: Use a nested loop
        to complete the design.
      grade4_arist_nested_loop_flags1_instruction: |
        Loop the given code to create
        a windmill.
      grade4_arist_nested_loop_polygons1_instruction: "Loop this design 10 times.\n\r\n\r\nHow much do you have to turn each time you loop?"
      grade4_arist_nested_loop_polygons2_instruction: "Loop this shape 6 times. \r\n\r\nHow\nmuch do you have to turn each time you loop? "
      grade4_arist_nested_loop_squares1_instruction: |
        Can you draw these 10 squares
        of this sidewalk using a nested loop? Each square is 30 pixels.
      grade4_arist_nested_loop_triangles2_instruction: |
        Now nest this loop inside
        another loop to draw 10 triangles.  This is called a "nested" loop.  
      grade4_arist_nested_loop_triangles3_instruction: |
        Can you draw a hexagon by
        looping the triangle code?
      grade4_arist_nested_loop_triangles4_instruction: |
        Draw the teeth in the alligator's
        mouth!
      grade4_arist_nested_loop_triangles5_instruction: "Create a sun by nesting the\nstarter code in another loop.\r\n\r\nTo get this cool design with a hollow\ncenter, you'll need to jump forward by the length of the triangle before\nturning."
      grade4_arist_nested_loop_triangles6_instruction: |
        Can you draw these 36 triangles
        using a nested loop?
      grade4_artist_freeplay_instruction: |
        You are on your own now! Try out any of
        the functions you used in this stage or try this new function that will automatically
        give your image a beautiful background color! This creation will be saved
        to your Projects dashboard so that you can easily edit it any time!
      grade4_artist_functions1_instruction: |
        Përshëndetje. Unë artisti zombi. Më pëlqen të vizatoj!
        Më ndihmo të vizatoj xhamat katrorë. Ndihmë: ura midis xhamave është 
        25 piksela më e shkurtër sesa gjatësia e katrorit.
      grade4_artist_functions2_instruction: "Functions let you define new blocks!\n\r\n\r\nWe've moved the blocks needed for drawing a square into a function\ncalled `draw a square`. This time, use the `draw a square` function to create\nthe glasses. \r\n\r\nThe squares are 75 pixels apart."
      grade4_artist_functions_challenge_instruction: |
        Use the suggested functions
        to draw four rows of hexagons. Notice how our even numbered rows are shifted
        to the right?
      grade4_artist_functions_challenge2_instruction: |
        Use the suggested functions
        to draw four rows of hexagons. Notice how our even numbered rows are shifted
        to the right?
      grade4_artist_functions_freeplay_instruction: |
        You are on your own now! Try
        out any of the functions you used in this stage or try this new function that
        will automatically give your image a beautiful background color! This creation
        will be saved to your Projects dashboard so that you can easily edit it any
        time!
      grade4_artist_functions_stars0_instruction: |
        We will come back to functions
        shortly. Let's take a break to practice making this star. You can make this
        drawing by adding a turn and a repeat block.
      grade4_artist_functions_stars1_instruction: |
        Now that you can draw a star,
        try drawing four stars!
      grade4_artist_functions_stars2_instruction: |
        When is drawing three stars harder
        than drawing four? When you also have to jump over the moon!
      grade4_artist_functions_stars3_instruction: |
        That last one is tough if you
        only use loops. Let's try drawing the same picture using this new 'function'
        that will help to **draw a star**.
      grade4_artist_functions_windows0_instruction: |
        You are doing great! Do you
        remember when you used nested loops to draw a pinwheel shape out of triangles?
        Let's try using that same algorithm to make a window!
      grade4_artist_functions_windows1_instruction: |
        If you can draw one window,
        you can draw three! Try using your choice of a nested loop or a function here.
        Don't forget the jump block!
      grade4_artist_functions_windows2_instruction: |
        Can you figure out how to add
        these windows? Watch out for the door!
      grade4_artist_nested_loop_circles1_instruction: |
        Assessment: Use a nested loop
        to complete the design.
      grade4_artist_nested_loop_flags1_instruction: |
        Loop the given code to create
        a windmill.
      grade4_artist_nested_loop_polygons1_instruction: "Loop this design 10 times.\n\r\n\r\nHow much do you have to turn each time you loop?"
      grade4_artist_nested_loop_polygons2_instruction: "Hi, I'm the Artist! Let's\ncreate some drawings together! For starters, try repeating this shape 6 times.\n\r\n\r\nHow much do you have to turn each time you loop? "
      grade4_artist_nested_loop_squares1_instruction: |
        Can you draw these 10 squares
        of this sidewalk using a nested loop? Each square is 30 pixels.
      grade4_artist_nested_loop_triangles1_instruction: |
        Complete the code to draw
        these triangles.  The first one is done for you.  Hint:  3 triangles in a
        360 degree rotation.
      grade4_artist_nested_loop_triangles2_instruction: "Let's make a quick adjustment\nto get completely different image!  \r\nHint: ? × 10 = 360"
      grade4_artist_nested_loop_triangles3_instruction: "Can you draw a hexagon by\nlooping the triangle code?\r\nHint: 6 × ? = 360"
      grade4_artist_nested_loop_triangles4_instruction: |
        Hi! I'm the Artist. Let's
        try some different types of drawings together. Can you help me draw the bottom
        teeth in the alligator's mouth?
      grade4_artist_nested_loop_triangles5_instruction: "Create a sun by nesting\nthe starter code in another loop.\r\n\r\nTo get this cool design with a hollow\ncenter, you'll need to jump forward by the length of the triangle before\nturning."
      grade4_artist_nested_loop_triangles6_instruction: |
        Can you draw these 36 triangles
        using a nested loop?
      grade4_artist_nestedLoops_challenge_instruction: "Click here to see the full\ninstructions again!\r\n\r\nHere is the code for an interesting shape.  What\nhappens when you repeat it multiple times, turning between each iteration?   Notice\nthat the turns in this shape add up to 420 degrees, which means that when\nyour artist is done drawing, it will be facing a different direction than\nwhen you started.  That new direction is exactly 60 degrees to the right of\nwhere you began."
      grade4_artist_nestedLoops_challenge2_instruction: |
        Now for a challenge!  Feel
        free to use trial and error. You are not expected to get the image perfect
        the first time.   Want to see more hints?  Click here!
      grade4_artist_parameters_squares1_instruction: |
        Click "edit" to fill in the
        function definition of "draw a square" and add a parameter. It should take
        a length parameter, just like the triangle. This time, draw 3 squares: 25,
        50 and 75 pixels in length, each 100 pixels apart.
      grade4_artist_parameters_triangles1_instruction: |
        Today, we're going to try
        out a different, more powerful function editor. See if you can figure out
        how to edit the function 'draw a triangle' to find the bugs.
      grade4_artist_parameters_triangles2_instruction: 'A vure re diçka ndryshe te keto blloqe funksionesh? Kliko "Lësho" për të parë se çfarë ndodh.'
      grade4_artist_parameters_triangles2b_instruction: |
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_artist_parameters_triangles3_instruction: |
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_artist_parameters_triangles4_instruction: |
        The code for this triangle
        function is broken. Can you edit the function to fix it, and then make triangles
        of length 25, 50, and 75?
      grade4_artist_parameters_trianglesx_instruction: |
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_bee_conditionals_nested_loops_instruction: |
        Collect all of the nectar.
        You can only collect nectar from flowers, but you can check any space to see
        if there is a flower.
      grade4_bee_conditionals_new1_instruction: |
        Collect all of the nectar. You can
        only collect nectar from flowers, but you can check any space to see if there
        is a flower.
      grade4_bee_conditionals_new1a_instruction: |
        Help the bee make all of the honey.
        You can only make honey at a honey comb, but you can check any space to see
        if there is a honey comb.
      grade4_bee_conditionals_new2_instruction: |
        Can you help the bee collect the
        nectar from the flowers? You can only collect nectar from flowers, but you
        can check any space to see if there is a flower.
      grade4_bee_conditionals_new2a_instruction: |
        Make all of the honey. It's actually
        more efficient to check each space for a honey comb, even when you know some
        are empty.
      grade4_bee_conditionals_new3a_instruction: |
        Collect all of the nectar or make
        all the honey. You can only collect nectar from flowers and make honey from
        honeycombs. Check any space to see if there is a flower or honeycomb.
      grade4_bee_conditionals_new3b_instruction: |
        Uh oh! The bee is not sure if he
        should collect nectar or make honey. Can you help him out?
      grade4_bee_conditionals_new3c_instruction: |
        Help the bee collect all of the
        nectar and make all of the honey! Hint: Try using one loop inside of another
        loop.
      grade4_bee_conditionals_quantum1_instruction: |
        This cloud is blocking my view!
        Check to see if there's a flower under the cloud, and only get nectar if
        there's a flower. Be careful, it can change!
      grade4_bee_conditionals_quantum2_instruction: |
        Bleta dëshiron vetëm nektar 
        tani. Kujto, jo të gjithë objektet janë lule, kështu që kontrollo për të mblehdur nektar vetëm
        tek lulet.
      grade4_bee_conditionals_quantum3_instruction: |
        Now I just want to make honey.
        Some of these clouds might have honeycombs under them. The way we've been
        going about things won't work here. Be sure to check if a honeycomb is hiding
        behind each cloud!
      grade4_bee_conditionals_quantum4_instruction: |
        Sometimes this cloud covers
        a flower, and sometimes it covers a honeycomb! Use the if/else block to collect
        nectar if it is a flower, else to make honey (because it is a honeycomb).
      grade4_bee_conditionals_quantum5_instruction: "There will be either a flower\nor a honeycomb under each of those clouds!\r\n\r\nUse the `if/else` block\nto collect nectar if there is a flower.\r\nOtherwise, make honey (because\nthere is a honeycomb)."
      grade4_bee_functions_instruction: |
        Have we met before? I'm the farmer! Please
        help me remove this pile of dirt and fill this hole.
      grade4_bee_functions1_instruction: Mblidh gjithë nektarin nga çdo lule.
      grade4_bee_functions10_instruction: |
        Assessment: Use the given function to
        collect nectar from each flower.
      grade4_bee_functions11_instruction: |
        Assessment: Create a function to turn,
        move forward and make 3 honey, then return the bee to where it started and
        turn back.
      grade4_bee_functions2_instruction: |
        Funksionet janë blloqe kodi që kryejnë
        një detyrë. Përdor funksionin "merr 2 nektar" për të mbledhur nektarin nga secila
        lule.
      grade4_bee_functions3_instruction: |
        Funksionet janë blloqe kodi që performojnë
        një detyrë. Përdor funksionin "merr 5" për të marrë 5 nektarë në një kohë. Sigurohu të
        përdorësh një cikël për të arritur një numërim blloku ideal, gjithashtu.
      grade4_bee_functions4_instruction: |
        Funksioni "lëviz dhe merr nektar" kthen
        bletën, mbledh nektarin, dhe rikthen bletën ku filloi. Përdor
        funksionin për të mbledhur gjithë nektarin.
      grade4_bee_functions5_instruction: This puzzle will be deleted!
      grade4_bee_functions6_instruction: |
        Now write the function to collect nectar
        from the three flowers.
      grade4_bee_functions7_instruction: |
        Create a function and call it to collect
        nectar at each flower and make honey at each honeycomb.
      grade4_bee_functions8_instruction: |
        Create your own function that goes down
        a path, gets nectar, makes honey, and then returns the bee to the top of the
        path. Then collect all the nectar and make all the honey!
      grade4_bee_functions9_instruction: "Red flowers can have an unknown amount\nof nectar each time you run the puzzle.   \r\n\r\nCreate a function that collects\nall of the nectar from each flower."
      grade4_bee_nestedLoops0_instruction: Përdor një cikël për të mbledhur gjithë nektarin.
      grade4_bee_nestedLoops1_instruction: |
        Mblidh gjithë nektarin nga secila lule.
        Përdor një cikël të mbivendosur. 
      grade4_bee_nestedLoops2_instruction: Can you determine the missing blocks?
      grade4_bee_nestedLoops2a_instruction: |
        Can you create a nested loop to collect
        all of the nectar?
      grade4_bee_nestedLoops3_instruction: |
        Mblidh gjithë nektarin duke krijuar
        një cikël të mbivendosur.
      grade4_bee_nestedLoops4_instruction: |
        Mblidh gjithë nektarin nga secila lule
        dhe bëj mjaltë tek çdo koshere. Përdor një cikël të mbivendosur. 
      grade4_bee_nestedLoops5_instruction: "Challenge time!\r\n\r\nCollect all of\nthe nectar from each flower and make honey at each honeycomb. \r\n\r\nHint:\nYou will need 4 repeat blocks!"
      grade4_bee_nestedLoops_assess_instruction: "**Assessment:** Collect all of\nthe nectar and make all of the honey using loops.\r\n\r\nHint: There are several\npossible solutions!"
      grade4_designProcess_vid_instruction: |
        Prepare to build a project within some
        given parameters.
      grade4_farmer_functions1_instruction: |
        Have we met before? I'm the farmer!
        Please help me remove this pile and fill this hole.
      grade4_farmer_functions2_instruction: |
        Take the code you just wrote it and
        use it to define a new function. Call the function twice to complete the puzzle.
      grade4_farmer_functions3_instruction: |
        Try using a couple of repeat blocks
        within your function definition.
      grade4_farmer_functions4_instruction: |
        Swap out your repeat loops for more
        versatile while loops.
      grade4_farmer_functions5_instruction: |
        Things are going to start getting trickier,
        but don't give up! You can use the same while loops to check both spaces
        in each pass.
      grade4_farmer_functions6_instruction: |
        The paths are a different length. You
        can use a different type of while loop to keep the pattern going as long as
        you need to.
      grade4_frozen_freeplay_instruction: Ti zyrtarisht je bërë një mjeshtër! Krijo një dimër në një botë çudirash.
      grade4_frozen_functions0_instruction: |
        Can you figure out what number to replace
        the question marks with to draw a circle?
      grade4_frozen_functions1_instruction: |
        Use the new “draw a circle” function
        to create 10 overlapping circles. Don't forget to jump forward between circles.
      grade4_frozen_functions1a_instruction: |
        Use the new “Create a circle” block
        to create 10 overlapping circles. Don't forget to jump forward between circles.
      grade4_frozen_functions2_instruction: |
        Now let's create 20 overlapping circles,
        turning 18 degrees between each circle.
      grade4_frozen_functions3_instruction: |
        Here's a ”Create circle” block that
        can make circles of different sizes. Can you use this to create a small circle
        of size 5 and a larger circle of size 10?
      grade4_frozen_functions4_instruction: |
        Intricate snow patterns can be created
        with very simple shapes. Can you make a pattern by repeating 5 circles of
        size 5 and 5 circles of size 10?
      grade4_frozen_nested_loop_diamonds1_instruction: |
        Let’s use a repeat block
        to create a rhombus. Like a square, all sides are equal length, but the angles
        are different. This one has 60 degree and 120 degree angles instead of all
        90 degree angles.
      grade4_frozen_nested_loop_diamonds2_instruction: |
        Did you know every snowflake
        is a different shape? Let's create a new snowflake by using another “Repeat"
        block to repeat a parallelogram 4 times, turning right by 90 degrees between
        each parallelogram.
      grade4_frozen_nested_loop_diamonds3_instruction: |
        Now, let's create a new
        snowflake by using the repeat block to repeat a parallelogram 10 times, turning
        right by 36 degrees between each one.
      grade4_frozen_nested_loop_rectangle1_instruction: |
        Hi, I’m Anna of Arendelle!
        Let’s use a repeat block to create a rectangle. This one is  200 pixels long
        and 100 pixels tall. All of the corners are 90 degree angles.
      grade4_frozen_square_instruction: |
        Hi, I’m Anna of Arendelle! Let’s make a
        square with the “Repeat” block, which uses fewer blocks. How many times (???)
        should the “Repeat” block loop the blocks inside it to make a square?
      grade4_frozen_square_loop1_instruction: |
        Hi, I’m Anna of Arendelle! Let’s make
        a square with the “Repeat” block, which uses fewer blocks. How many times
        (???) should the “Repeat” block loop the blocks inside it to make a square?
      grade4_frozen_square_loop2_instruction: |
        Let's create three squares, turning
        after each square. Be sure to turn by 120 degrees before each new square.
      grade4_frozen_square_loop3_instruction: |-
        Mund të krijosh një flokë dëbore duke përdorur bllokun "Përserit" duke bërë një katror 10 herë, dhe bllokun "Kthehu" për t'u kthyer 36 gradë midis çdo katrori?
      grade4_playlab_freeplay_instruction: |
        It's free play time! Have fun with all
        the blocks in your tool box. 
      grade4_playLab_proj_example1_instruction: instructions
      grade4_playLab_proj_example1a_instruction: |
        Take a look at this project.  Do
        you see how it was made?
      grade4_playLab_proj_example2a_instruction: |
        Take a look at this project.  Do
        you see how it was made?
      grade4_playlab_test_instruction: "Përdor shigjetën e djathtë për të gjuajtur zemra.\r\n\r\nNë lojën tonë, si duhet të shënojmë pikë? Shto 1 në variablën \"pikët\" sa herë Qeni gjuan Macen me një zemër. Përdor eventin \"kur aktori 2 prek çfarëdo\" për të nxitur azhornimin e pikëve. Mund të rritësh variablën \"pikët = pikët + 1.\" Çojini pikët në 10 (duke i rritur një nga një) për të kaluar nivelin."
      grade4_playlab_test2_instruction: |
        Here's a function called `jump` that causes
        your main character to jump up 100 pixels. Run the program and use the jump
        function to collect all of the flags by moving the dog with the arrow keys.
      grade4_prompt_test_instruction: This is a test play lab level.
      grade4_review_artist1_instruction: |
        Hi, I'm an artist. You can write code
        to make me draw almost anything. Use a few blocks to make me draw over the
        grey lines in the picture. (Each line is 100 pixels long)
      grade4_review_artist2_instruction: |
        Kjo shtëpi ka nevojë për një çati! Vizato trekëndëshin. Ndihmë:
        të treja brinjët janë të së njëjtës gjatësi.
      grade4_review_artist3_instruction: |
        The jump block moves the artist without
        drawing. Draw the dashed line using both the `jump forward` and `move forward`
        blocks. Each line is 50 pixels long.
      grade4_review_bee1_instruction: |
        Now use the `repeat` block to collect all
        of the nectar and make all of the honey.
      grade4_review_bee2_instruction: |
        Mblidh nektarin nga çdo lule dhe bëj mjaltë
        tek çdo koshere.
      grade4_review_bee3_instruction: |
        Përdor një cikël të njëjtë si puzzle i fundit, por bëj
        një kthesë brënda tij.
      grade4_scaffolded_project1_instruction: |
        It is amazing how much you have learned!
        Let's put them together to make a game, step by step.
      grade4_scaffolded_project2_instruction: "Now let's get things moving! Use\nthese event handlers and actions to make your hero move.\r\n\r\nWe've added\nthese blocks to your tool box to help you.\r\n"
      grade4_scaffolded_project3_instruction: "Now that your game has a hero, it's\ntime to start adding other actors and assigning them behaviors. \r\n\r\nAdd\ntwo or more additional actors to your game and make them move. Do you want\nto have an actor patrol back and forth? Try using a these new blocks to bring\nthese other components of your game to life!"
      grade4_scaffolded_project4_instruction: |
        Just getting the actors moving is
        a great step, but we need to program some interactions to make this really
        feel like a game. A simple way to do this is to add or remove points when
        actors collide with projectiles or each other. Find some interesting ways
        to change the score in your game.
      grade4_scaffolded_project4a_instruction: |
        Just getting the actors moving is
        a great step, but we need to program some interactions to make this really
        feel like a game. A simple way to do this is to add or remove points when
        actors collide with projectiles or each other. Find some interesting ways
        to change the score in your game.
      grade4_scaffolded_project5_instruction: |
        Now spend some time making sure the
        game works the way you want. Try including a way to win or lose your game.
      grade4_scaffolded_project6_instruction: |
        You've finished! Now you can play
        your game or share it with your friends and classmates!
      grade5_artist_binary1_instruction: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \r\n\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      grade5_artist_binary10_instruction: Click here to see hints.
      grade5_artist_binary11_instruction: |
        Free Play: Here's a blank canvas for
        you to draw on.  Have fun!
      grade5_artist_binary2_instruction: "Këtu është një funksion që ka vargun\nbinar të njishave dhe të zerove dhe drejton artistin që ti ndjeki ato nga e majta në \ntë djathtë, nga lartë poshtë. Artisti do mbushi katrorin kur të shikoj \n1 dhe injoroj katrorin kur te shikoj 0. \r\nLësho kodin për të parë se si artisti \npërdor binarët për të vizatuar modelin."
      grade5_artist_binary3_instruction: |
        Which of these binary strings could you
        loop 8 times to draw this image?
      grade5_artist_binary4_instruction: |
        Can you draw this pattern by looping just
        three binary digits (0s and 1s)?
      grade5_artist_binary5_instruction: |
        Each binary string represents one row of
        this picture. Can you rearrange them so it draws a smiley face instead of
        a frowny face?
      grade5_artist_binary6_instruction: |
        Which 6 digit binary string, repeated 11
        times, will draw this image?
      grade5_artist_binary7_instruction: Cili është vargu më i shkurtër binar që ti mund të përsërisësh për të vizatuar këtë figurë?
      grade5_artist_binary8_instruction: Perfundo këtë vizatim.
      grade5_artist_binary9_instruction: "Here's a higher resolution canvas to draw\non - 16 pixels by 16 pixels!\r\n\r\nSee what happens when we start to get\ncreative with the bits?"
      grade5_artist_for_loops1_instruction: Vizato këtë trekëndësh që është në masë 50 piksel.
      grade5_artist_for_loops10_instruction: "Can you figure out how to use all of\nthe things you've learned to create this image?\r\n\r\nNeed a hint? Click\nhere."
      grade5_artist_for_loops1a_instruction: |
        Try using a `for loop`to create this
        triangular design. Don't worry that the numbers are different than the last
        puzzle. As long as you turn by the right number of degrees, the artist will
        make the correct shape!
      grade5_artist_for_loops1b_instruction: |
        Experiment with the `for` loop and
        play with the `counter` variable.
      grade5_artist_for_loops2_instruction: |
        Use a `repeat` inside of a `for` loop
        to create this stack of triangles that goes from 50 pixels to 100 pixels.
      grade5_artist_for_loops3_instruction: |
        These triangles go from 20 pixel sides
        to 200 pixel sides, and each triangle is 20 pixels larger than the last. 
      grade5_artist_for_loops4_instruction: |
        These squares start at 15 pixels long,
        the largest is 300 pixels long, and each square is 15 pixels larger than the
        last. 
      grade5_artist_for_loops5_instruction: "Just one little change to the code from\nthe last image can create this drawing. Can you figure out what that change\nis?\r\n\r\nHint:  You need to remove something!"
      grade5_artist_for_loops6_instruction: |
        If you turn a little bit more or less
        than you normally would for a shape, it creates a neat effect. Try using some
        of the code from the last level, but turning 89 degrees to create this twisted
        square spiral.
      grade5_artist_for_loops7_instruction: |
        Make three small changes to the code
        from the last level to get this!
      grade5_artist_for_loops7a_instruction: |
        Take the angle down to 72 degrees to
        get a spiraled pentagon.
      grade5_artist_for_loops7b_instruction: "Use the counter inside the `set alpha`\nblock to get this faded center.\r\n(This hexagon pattern was made using a\n60 degree turn.)"
      grade5_artist_for_loops8_instruction: |
        Remember back in a previous stage when
        we used a variable to control the number of sides in a shape? We are going
        to do the same thing with the `counter` variable now. This pattern starts
        with a triangle and adds one side at a time until it draws a decagon (10 sides).
        Each side should be 100 pixels long. 
      grade5_artist_for_loops9_instruction: "Let's put it all together!  Using your\nknowledge of `for` loops and the `counter` variable, create this drawing where\neach shape has two more sides than the last.  Make sure that each side is\n10 times as long as the number of sides in the polygon.\r\n\r\nVery little\nof the code has been provided for you."
      grade5_artist_for_loopsfreeplay11_instruction: "Frymëzim i Lojës së Lirë: Tashmë keni mësuar gjithçka ju nevojitet për të përgatitur një dizenjo të tillë! Në rast se kjo pikturë ju frymëzon të  krijoni diçka të ngjashme. Në të kundërt, krijoni diçka tuajën.\r\n\r\nDëshironi të dini si është krijuar modeli ynë i frymëzimit? Vizitoni https://studio.code.org/c/106387604 për një zgjidhje."
      grade5_artist_for_loopsfreeplay12_instruction: |
        Free Play: Try using the `counter`
        variable with other drawing elements to make magical images like this one.
      grade5_artist_freeplay_instruction: |
        Create your own project! This creation
        will be saved to your Projects dashboard so that you can easily edit it any
        time!
      grade5_artist_functionparameters10_instruction: "Frymëzimi i Lojës së Lirë: Tani ke mësuar gjithçka që ke nevojë për të bërë një model si ky! Nëse kjo figurë të inspiron, mundohu të bësh diçka të ngjashme. Në të kundërt, krijo diçka sipas dëshirës.\r\n\r\nDo të dish se si modeli ynë është bërë? "
      grade5_artist_functionparameters11_instruction: 'Lojë e lirë: Këtu janë funksionet që ke shkruar dhe disa më shumë për ty që të luash. Vizato diçka të paparë! Luaj me gjërësinë e lapsit dhe shiko se sa ndryshe do të duket pamja e vizatimit tuaj.'
      grade5_artist_functionparameters7_instruction: |
        This image is similar to the
        last. Can you use a `for` loop with your function to make this design?
      grade5_artist_functionparameters8_instruction: |
        Le të ndryshojmë këtë funksion "vizato nje formë". 
        I cili ka një parametër "gjatësi". Tani, le të ndryshojmë funksionin 
        për të shtuar një parametër "faqet". Mos harro që këndi i kthimit për një formë të dhënë 
        eshte 360 i ndarë në bazë të anëve qe ka. Shënim: Këto janë gjatësitë 
        për secilën formë: trekendëshi është 100 piksela, gjashtëkendëshi eshte 25 piksela, dhe
        katrori eshte 50 piksela.
      grade5_artist_functionparameters9_instruction: |
        Edit "draw a spiral edge"
        to use "length" and "sides" parameters, then recreate these shapes.
      grade5_artist_functionparameters_6_instruction: A mund të përfundosh këtë vizatim? Brinjët e të gjitha formave janë të gjata 100 piksela.
      grade5_artist_parameters_squares1_instruction: |
        Click "edit" to fill in the
        function definition of "draw a square" and add a parameter. It should take
        a length parameter, just like the triangle. This time, draw 3 squares: 25,
        50 and 75 pixels in length, each 100 pixels apart.
      grade5_artist_parameters_squares2_instruction: |
        Now try creating the function
        from scratch! Create a function called 'draw a square' and use it to outline
        these four boxes. Make sure to add a parameter for 'length'!
      grade5_artist_parameters_stars1_instruction: |
        That last one is tough if you
        only use loops. Let's try drawing the same picture using this new 'function'
        that will help to **draw a star**.
      grade5_artist_parameters_triangles1_instruction: |
        This program looks okay from
        here, but something isn't working right. See if you can figure out how to
        edit the function 'draw a triangle' to find the bug.
      grade5_artist_parameters_triangles1a_instruction: |
        Today, we're going to try
        out a different, more powerful function editor. See if you can figure out
        how to edit the function 'draw a triangle' to find the bugs.
      grade5_artist_parameters_triangles2_instruction: |
        This drawing can be easily
        created using a new type of function that includes a parameter. The sides
        of each triangle are 25 pixels larger than the last.  The first triangle has
        25 pixel sides. Replace the '???' with the correct values to draw the picture.
      grade5_artist_parameters_triangles2a_instruction: 'A vure re diçka ndryshe te keto blloqe funksionesh? Kliko "Lësho" për të parë se çfarë ndodh.'
      grade5_artist_parameters_triangles3_instruction: "The code for this triangle\nfunction is broken.\r\n\r\nCan you edit the function to fix it, and then make\ntriangles of length 150, 75, 25?"
      grade5_artist_parameters_triangles4_instruction: |
        The code for this triangle
        function is broken. Can you edit the function to fix it, and then make triangles
        of length 25, 50, and 75?
      grade5_artist_parameters_trianglesy_instruction: "The code for this triangle\nfunction is broken.\r\n\r\nCan you edit the function to fix it, and then make\ntriangles of length 150, 75, 25?"
      grade5_artist_variables_freeplay10_instruction: |
        Free Play: Experiment with
        the number of sides this shape has. Can you change the algorithm so that the
        overall size of the shape stays the same, no matter how many sides it has?
        Hint: If you divide your starting length by the number of sides, the length
        of each side will get shorter as the number of sides gets higher.
      grade5_artist_variables_freeplay14_instruction: "Free Play: Check it out! Now\nyour algorithm is nested within one more loop. Experiment with changing the\nvalues of your two variables to draw cool patterns.\r\n\r\nFor even more effect,\ntry playing with color!  Use random colors inside loops to see how it changes\nyour design."
      grade5_artist_variables_freeplay15_instruction: "Want a second peek at the\ninspiration design or the hints?  Click here!\r\n\r\nOtherwise, make a design\nall your own!"
      grade5_artist_variables_freeplay16_instruction: |
        Still playing?  Here is a
        blank canvas where you can create whatever you want!
      grade5_artist_variables_hexagons1_instruction: "Let's try it again! \r\n\r\nCan\nyou set the `length` variable to 60 to make this cool design with hexagons?"
      grade5_artist_variables_letterT11_instruction: |
        Here’s more complicated code
        using the same concepts from the last puzzle - what should you set the "sides"
        variable to in order to draw this picture made of squares?
      grade5_artist_variables_new1_instruction: |
        Here is a program that will create
        an image. There are a few things that are wrong with it.
      grade5_artist_variables_octagons13_instruction: "When a shape has lots of sides,\neach side needs to be shorter if you want the whole pattern to fit on the\nscreen. \r\nLet's recreate the algorithm for this amazing pattern, but instead\nof manually setting the `length` variable, let's use a math block with the\n`sides` variable inside to make sure that each shape fits correctly. The perimeter\nof each polygon is 300 pixels.\r\nNeed some hints?  Click here."
      grade5_artist_variables_pentagon8_instruction: "Use what you learned in the\nlast puzzle to create this hexagon using the \"sides\" variable.\r\n\r\nSee\nhow you could change just one value to draw a triangle,  square, pentagon,\nor octagon?"
      grade5_artist_variables_pentagon9_instruction: |
        Now, recreate the algorithm
        from the last level and create a pentagon with sides of length 150.
      grade5_artist_variables_pentagons1_instruction: "Draw this pattern of pentagons\nwith 100 pixel sides by setting the right value for `length` and dropping\nthe `length` variable into all of the the correct places. \r\n\r\nSee how\nyou only have to set the value for `length` once, and the code uses the right\nvalue everywhere?"
      grade5_artist_variables_pentagons12_instruction: |
        Let's set the "sides"
        variable to 5. The more sides we add to this algorithm, the bigger this whole
        pattern gets! Notice that there is another variable called "length". We
        can now use that wherever we have a "move forward." Set the "length" variable
        to 75 for this shape.
      grade5_artist_variables_rectangle6_instruction: |
        Now I want to make a rectangle
        that is twice as tall as it is wide. We've got a variable called "width"
        that needs to be set to 100. Can you use the math blocks to complete the code?
      grade5_artist_variables_square7_instruction: "Here’s some code that can draw\nany regular polygon. There’s a new variable called sides that is set to 4.\nCan you use the sides variable (along with the math block) to turn the right\namount regardless of how many sides there are in the polygon?\r\n\r\nClick\nhere to go back to the hint!"
      grade5_artist_variables_triangles1_instruction: "Let's draw an equilateral\ntriangle. \r\n\r\nIt has to be exactly 100 pixels long on each side."
      grade5_artist_variables_triangles2_instruction: |
        Instead of using "move forward
        by 150," the "move" block is now referencing a variable called "length."
        Can you set "length" to 150 to draw this new triangle?
      grade5_artist_variables_triangles3_instruction: |
        Drag a number block to both
        the `set length` block and the `repeat _ times` block to draw a set of 50
        pixel triangles. 
      grade5_bee_for_loops1_instruction: |
        Use a loop to collect the nectar from each
        flower.
      grade5_bee_for_loops10_instruction: |
        If your loop is counting down, the increment
        is subtracted from your counter variable each loop. What should your increment
        be to collect 15, then 12, then 9, 6, 3 nectar?
      grade5_bee_for_loops11_instruction: |
        Ready for a challenge?  Take what you've
        learned about loops and try to solve this problem. Remember: You may have
        to run through solutions multiple times before you figure out all of the steps.
      grade5_bee_for_loops2_instruction: |
        Add the code necessary to make sure the
        bee collects all the nectar. Look at how much code you need for this puzzle!
        (We'll learn a simpler way in the next puzzle.)
      grade5_bee_for_loops3_instruction: |
        Ah, the "for loop" makes this much easier!
        All the code you need is here, take a look at how it is put together then
        click "Run" to see how it works. 
      grade5_bee_for_loops4_instruction: |
        Replace the ??? in the "for loop" with
        the largest amount of nectar the bee has to collect. 
      grade5_bee_for_loops5_instruction: 'A mund të ndihmosh Bletën të mbledhi pjesën tjetër të mjaltit duke përdorur këtë cikël for? '
      grade5_bee_for_loops6_instruction: |
        You can also use a "for loop" to count
        down. Try gathering this nectar by counting down from 5 to 1 by 1.
      grade5_bee_for_loops7_instruction: |
        The last number in your for loop is called
        the "increment". Each time the loop is run, the counter variable changes
        by the value of the increment. Try collecting these flowers using an increment
        of 2.
      grade5_bee_for_loops8_instruction: |
        You've got this! What should your increment
        be to collect 3, 6, 9, 12, 15 nectar?
      grade5_bee_for_loops9_instruction: "Now, let's combine the \"counter\" variable\nwith a math block! How can you use the \"counter\" variable to navigate this\ngarden with the fewest number of blocks possible? What do you need to do to\ncollect 3, 6, 9, 12, 15 nectar this time? The secret is in the \"counter\"\nvariable!\r\n\r\nRemember: If your loop is counting up, the increment is added\nto your \"counter\" variable each time through."
      grade5_bee_parameters_new1_instruction: |
        Help the bee collect all of the nectar.
        You can only collect nectar from flowers, but you can check any space to see
        if there is a flower.
      grade5_bee_parameters_new2_instruction: |
        Let's take that last program you
        wrote and turn it into a function. Then, call the function to collect the
        nectar when needed. This may seem like a strange step now, but it will be
        really helpful soon!
      grade5_bee_parameters_new3_instruction: |
        Time to put the function to the test!
        Let's see if it makes it any easier to collect these three rows of nectar.
      grade5_bee_parameters_new4_instruction: |
        How is your function holding up? We
        may need to make some adjustments here. Can you add a 'length' parameter
        to the function so that it will still work if the row is a different length?
      grade5_bee_parameters_new5_instruction: |
        Challenge Level! You are doing great
        so far! Let's use this parametric function to collect a lot of nectar.
      grade5_bee_parameters_new6_instruction: |
        You can make your program much shorter
        and more efficient when you notice new patterns. Try using some other blocks
        to make a short and simple solution!
      grade5_bee_parameters_new7_instruction: |
        Something looks a little different.
        Can you modify your function to account for all this honey that needs to be
        made?
      grade5_bee_parameters_new8_instruction: |
        That's a great function you've created!
        You are officially on your own now. Collect all the nectar. Make all the honey.
      grade5_bee_parameters_new9_instruction: |
        Bonus Challenge! If you are feeling
        ambitious, try this puzzle. It is possible to collect all of the nectar and
        make all of the honey using only a For loop, a Repeat loop, a function call,
        and a turn. Try it all on your own, or view the hints to build it step-by-step.
        Great job with this stage!
      grade5_pixelation_instruction: |
        Encode an image of anything you like using
        binary. Remember that the binary language will be represented with '0' and
        '1' only.
      grade5_playlab_freeplay_instruction: |
        It's free play time! Have fun with all
        the blocks in your tool box. 
      grade5_playlab_parameters_points1_instruction: "Here's the same game but most\nof the code is hidden. We've added a new function called `score_points.`\r\n\r\nAdd\na new parameter called `points` to the `player_score` function. \r\n\r\nThe\n`score_points` function should be able to both add and remove points from\n`player_score` depending on which actor is hit.\r\nChanging the score by 1\nwill add a point, while changing the score by -1 will subtract a point.\r\n\r\nWhen\nyou're done, click \"Run\" to play.  When Dog scores 6 points, you will move\non to the next puzzle. "
      grade5_playlab_variables1_instruction: |
        This time you don't have to write
        any code, just hit "Run" to play the game! In this game, you're the dog
        who is trying to collect more flags than the cat. Use the down arrow to control
        the dog. Press "Finish" when you're done playing.
      grade5_playlab_variables10_instruction: 'Plotëso në inputin e parametrit "aktori" në mënyrë që të thërrasim funksionin "patrulla" për secilin nga aktorët. Mos harro, aktorët korespondojnë me numrat 1, 2 dhe 3.'
      grade5_playlab_variables11_instruction: |
        Add another parameter called "speed"
        to the "patrol" function. Try using a "set speed" block with the new "speed"
        parameter to help Penguin get both flags before the other sprites even get
        one.
      grade5_playlab_variables12_instruction: "Shiko në kodin që të është dhënë për të parë nëse \nmund të zbulosh çfarë bënë secili bllok. \r\n\r\nKur të mbarosh, përdor\nshigjetat për të kontrolluar Qenin dhe për të mledhur të gjithë flamujt."
      grade5_playlab_variables13_instruction: 'Përdor një bllok "kur preket" për të dërguar Qenin pas në pjesën e sipërme-majtas VETËM NËSE Qeni prek ndonjë nga aktorët.'
      grade5_playlab_variables14_instruction: |
        It's free play time! Have fun with
        all the blocks in your tool box. 
      grade5_playlab_variables1ask_instruction: "This time, when you press 'run',\nyou will see a 'prompt' asking you for a number. This number will be stored\nin a variable used to set the dog's speed.\r\n\r\n\r\nPay attention to how\nthis program is written!"
      grade5_playlab_variables2_instruction: |
        Gara ne formuesen e fundit nuk ishte 
        shumë e drejtë! Ndrysho variablin "shpejtesia_e_qenit" që të sigurohesh që mund të mbledhesh
        më shumë flamuj se sa Macja. I pari qe mbledh 10 flamuj fiton!
      grade5_playlab_variables3_instruction: |
        Këtu kemi një lojë të re. Përdor 
        shigjetat majtas dhe djathtas për të levizur, dhe shigjetën lart për të kërcyer. Shiko nëse mund ti mbledhësh
        të gjithë flamujt.
      grade5_playlab_variables4_instruction: |
        Now we're using a variable called
        "height" to control how high the dog can jump. Update the "height" variable
        so that the dog can jump high enough to reach all the flags.
      grade5_playlab_variables5_instruction: "You've seen now how a variable can\nbe used to set the height of an actor's jump. How else could  you use a variable?\r\n\r\nLet's\nbuild a game! First we'll need a score. Try setting the 'points' variable\nto give yourself 10 free points!"
      grade5_playlab_variables6_instruction: "Përdor shigjetën e djathtë për të gjuajtur zemra.\r\n\r\nNë lojën tonë, si duhet të shënojmë pikë? Shto 1 në variablën \"pikët\" sa herë Qeni gjuan Macen me një zemër. Përdor eventin \"kur aktori 2 prek çfarëdo\" për të nxitur azhornimin e pikëve. Mund të rritësh variablën \"pikët = pikët + 1.\" Çojini pikët në 10 (duke i rritur një nga një) për të kaluar nivelin."
      grade5_playlab_variables6ask_instruction: "This time, you need 100 points to\nwin!  Don't worry though, you can choose how many points you earn each time\nyou score a hit!\r\nTry adding the `ask` block and changing the number 1 out\nfor the variable `value`."
      grade5_playlab_variables7_instruction: 'Bukur, tani le të sigurohemi që kjo lojë të mos jetë shumë e thjeshtë - kur Qeni (aktori 1) goditet nga një top zjarri, duhet të humbësh një pikë. Filo me 10 pikë që të mos jetë shumë e vështirë. Zbriti pikët nga 10 në 0 për të kaluar nivelin.'
      grade5_playlab_variables71_instruction: "Here's our game from an earlier stage,\nbut most of the code is hidden. There’s a new function `score_points.`\r\n\r\nEdit\nthe function so that a new parameter called `points` can be added to `player_score`.\n\r\n\r\nThe variable `player_score` should increase each time Dog tags Cat\nwith pie, and decrease each time that Cat tags Dog with a sandwich.\r\n\r\nNote:\nWhen you're done, click \"Run\" to play.  When Dog scores 6 points, you will\nmove on to the next puzzle. "
      grade5_playlab_variables81_instruction: "Kemi shtuar dhe një funksion të fundit që të përdorësh. \r\n\r\nProgramo lojën tënde që të thërrasi funksionin \"level_up\" në qoftë se\n\"player_points\" > 10. \r\n\r\nLuaj lojën dhe kalo nivelin e 4-tërt për të kaluar në formuesen tjetër. "
      grade5_playlab_variables9_instruction: |
        Këtu është një funksion që quhet "patrol".
        Ndryshoje atë që të lëvizësh macen 400 piksela lart dhe 400 piksela posht.
      grade5_playlab_variables_freeplay_instruction: "Free Play time! Here are all\nof the variables we've played with so far in this stage, as well as a few\nmore in case you want them. \r\n\r\nNotice that there are now so many blocks\nin our toolbox that they need to be organized!  Here, we've put each piece\ninto an appropriate category.  Take some time to explore everything that is\navailable. When you're done browsing, make a game or story using repeats,\nvariables, and events.  \r\n\r\nHint: scroll down to see all the commands\nin the workspace."
      grade5_playlab_variables_jump1_instruction: |
        This puzzle uses a hidden function
        that makes the dog jump when the 'up' arrow is pressed. The height of the
        jumps can be set at the start of the game using the 'jumpPower' variable.
        Try to touch all of the flags!
      grade5_prompt_test_instruction: |
        Variables aren't always numbers. What if
        you wanted to store a word or text? Experiment with the new `ask` block.
      gradek_adventurer_loops1_instruction: 'Three piles of gold!  Collect all three.'
      gradek_adventurer_loops10_instruction: |
        Help me get all of the gold from this
        cave.
      gradek_adventurer_loops2_instruction: |
        How can Laurel collect all five piles
        of gold using only one --> block?
      gradek_adventurer_loops3_instruction: |
        Can you fix Laurel's path to get all
        of this gold?
      gradek_adventurer_loops4_instruction: |
        Use what you learned to get all of the
        coins.
      gradek_adventurer_loops4a_instruction: |
        Add to this code to collect all of
        the coins.
      gradek_adventurer_loops5_instruction: |
        What should you add to this code to
        get all of the gold?
      gradek_adventurer_loops6_instruction: Write the code to get all of this gold.
      gradek_adventurer_loops7_instruction: Write the code to get all of this gold.
      gradek_adventurer_loops7_challenge_instruction: |
        Challenge: The gold goes all
        the way up these stairs!  Write the code to help me get it all.
      gradek_adventurer_loops8_instruction: |
        Help me get the gold from this deep
        valley.
      gradek_adventurer_loops9_instruction: |
        Help me get all of the gold from this
        cave.
      gradek_adventurer_loopsFP_instruction: |
        Eureka!  Collect as much gold as you
        can!
      gradek_adventurer_loopsPre_instruction: |
        This is Laurel the Adventurer!  Can
        you move her around and get gold?
      gradek_artist_loops1_instruction: |
        Help the artist draw this line two times
        forward.
      gradek_artist_loops2_instruction: |
        Our artist is trying to draw a line five
        times, but can't get it right.  Can you help?
      gradek_artist_loops3_instruction: |
        Now, use a `repeat` loop to draw this line
        five times!
      gradek_artist_loops4_instruction: |
        Draw a line eight steps long. This will
        become our horizon.
      gradek_artist_loops5_instruction: "Let's put a nice hill in the back."
      gradek_artist_loops6_instruction: |
        Use the `repeat` loop to add waves to the
        water.
      gradek_artist_loops7_instruction: We need a ladder up to the boat.
      gradek_artist_loops8_instruction: |
        Challenge: The stairs are broken.  Help
        me fix them.
      gradek_artist_loops9_instruction: |
        Time to head back to land. Help me put down
        stones so I don't fall in!
      gradek_artist_loopsA_instruction: |
        Help me build steps to watch the ship sail
        away.
      gradek_artist_loopsFP_instruction: |
        The artist saw something funny in the distance.  Draw
        what you think he saw.
      gradek_artist_loopsPre_instruction: |
        This is a new type of puzzle called "Artist".
        Play with the level and draw something fun.
      gradek_playlab_events1_instruction: |
        Make your robot say "Hello!" when the
        button is clicked.
      gradek_playlab_events1a_instruction: |
        Add a block so that when you click the
        "up" button, Olive the Cat walks up.
      gradek_playlab_events2_instruction: |
        Edit the code so that when the second
        bird is clicked, your program plays a sound!
      gradek_playlab_events2a_instruction: |
        Add a block so that when you click "down"
        Olive the Cat walks down.
      gradek_playlab_events3_instruction: |
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      gradek_playlab_events3a_instruction: |
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      gradek_playlab_events3b_instruction: |
        Add a button so that Olive the Cat moves
        right when you click the "right" button.
      gradek_playlab_events4_instruction: |
        Add code to make something happen when
        the fourth bird is clicked. Be creative!
      gradek_playlab_events4a_instruction: |
        Add a block so that Olive the Cat moves
        left when you click the "left" button.
      gradek_playlab_events5_instruction: |
        About My Robot Project! Write code so
        that clicking on each bird shows a new fact about your robot.
      gradek_playlab_events5a_instruction: |
        About My Robot Project! Write code so
        that clicking on each bird shows a new fact about your robot.
      gradek_playlab_eventsA_instruction: |
        Now, have the actor change to a random
        size AND have it play a random sound when you click the center button.
      gradek_playlab_eventsFP_instruction: |
        Add anything you want to this game.  Can
        you make Olive the Cat disappear when you click on her?
      gradek_playlab_eventsPre_instruction: |
        This is a Play Lab level.  Move blocks
        to the workspace and see what happens!
      gradeK_sequence_4_instruction: Try this one yourself from the beginning.
      Guess The Number_instruction: |
        Build whatever you want. This is an example
        of a number-guessing game!
      Harvesting_instruction: |
        Uh oh, I lost my map and can't remember what I planted.
        Every sprout could grow up to be corn, beans, or pumpkins. Can you write some
        code to pick all the crops, no matter what they are?
      Infinity_catch_instruction: 'Mund të bësh që Elsa ("aktori 2") të arrij Anën duke përdorur shigjetat në tastierë?'
      Infinity_finale_instruction: Krijo çfarë të dëshirosh dhe shpërndaje!
      Infinity_move_collide_instruction: 'Hiro është "aktori 1". Lëvize në të djathtë te Baymax, dhe bëj një tingull kur të preken.'
      Infinity_move_directions_instruction: 'Baymax është "aktori 2". Shto blloqet Lëviz dhe më pas lëviz Baymax me shigjetat në tastierë. Bëje që të prekë dy karakterët e tjerë.'
      Infinity_move_right_instruction: 'Hiro është "aktori 1". Lëvize në të djathtë te Baymax, dhe bëj një tingull kur të preken.'
      Infinity_repeat_instruction: 'Përdor bllokun "përsërit përgjithmonë" që Ana të lëvizi sipër dhe poshtë 400 piksela.'
      Infinity_say_instruction: 'Bëj që Ana të thotë "Çkemi" duke përdorur bllokun Thuaj.'
      Infinity_shoot_instruction: 'Baymax është "aktori 2". Bëj që Baymax të lëshojë një raketë Hiro-s.'
      Infinity_shoot_directions_instruction: 'Hiro është "aktori 3". Bëj që Hiro të hedhi një raketë secilit nga 4 personazhet e tjerë. Prit një sekondë midis çdo hedhjeje.'
      Infinity_test_instruction: This is a test Infinity level.
      Infinity_touch_faster_instruction: Prek edhe më shumë flokë bore!
      Infinity_touch_four_instruction: Lëviz Anën sipër, poshtë majtas, dhe djathtas për të prekur të katërt flokët e borës.
      Infinity_touch_score_instruction: 'Bëj që Ana të shënojë një pikë kur prek një flokë bore. Më pas kliko "Lësho" dhe lëvize atë që të prekë çdo flokë bore të paktën një herë.'
      Inspirational Artwork_instruction: "Free Play Inspiration: You've now learned\neverything you need to know to make a pattern like this! If this picture inspires\nyou, try to make something similar. Otherwise, create something all your own.\r\n\n\r\nWant to know how our inspiration pattern was made? "
      "Internet Simulator: Broadcast Mode_instruction": "Now use the Internet Simulator\nto send the battleship moves. For setup, join a Room with your group, and\nadd ships to your paper board for each opponent. When playing, all communication\nmust be done through the tool, so no talking, but have fun!\r\n"
      "Internet Simulator: Broadcast_instruction": "Now use the Internet Simulator\nto send the battleship moves. For setup, join a Room with your group, and\nadd ships to your paper board for each opponent. When playing, all communication\nmust be done through the tool, so no talking, but have fun!\r\n"
      "Internet Simulator: DNS Mode_instruction": |
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      "Internet Simulator: DNS_instruction": |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      "Internet Simulator: Packets_instruction": "Develop a Protocol for Reliably\nSending a Message.\r\n\r\nConstraints:\r\n- Packets may contain only 8 characters\r\n-\nPackets may drop with small probability\r\n- Packets may not arrive in order"
      "Internet Simulator: Routers_instruction": |
        Send messages with your classmates
        (Click to see full instructions)
      "Internet Simulator: Sending Binary Messages 1_instruction": |
        Develop, document,
        and test a protocol that allows you to use Internet Simulator to relay a message.
        See the worksheet for more detailed instructions.  
      "Internet Simulator: Sending Binary Messages_instruction": |
        Develop, document,
        and test a protocol that allows you to use Internet Simulator to relay a message.
        See the worksheet for more detailed instructions.  
      "Internet Simulator: Sending Numbers_instruction": |
        With your partner, develop
        a protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      "Internet Simulator: Sending Text_instruction": |
        Work with a partner or in
        a small team to develop a protocol that allows you to send formatted text.
        See the worksheet handed out by your teacher for more detailed instructions!
      jessie-test_instruction: Lots of instructions
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: Vizato një vizë të shkurtërr sipër dhe një të gjatë në të djathtë!
      K-1 artist 1 level 10_instruction: |
        Vizato vijën e ndërprerë duke përdorur të dy
        blloqet kërce dhe vizato
      K-1 artist 1 level 9_instruction: Vizato këtë duke përdorur tre vija
      K-1 Artist Loops 1_instruction: Vizato këtë vijë duke u zhvendosur 4 herë në lindje.
      K-1 Artist Loops 2_instruction: "A mund t'a vizatosh të njëjtën vijë duke përdorur një cikël?"
      K-1 Artist Loops 3_instruction: A mund të përsëritësh këto blloqe për të vizatuar 6 viza?
      K-1 Artist Loops 4_instruction: A mundet një cikël të na ndihmojë të vizatojmë tavanin e kësaj kështjelle?
      K-1 Artist Loops 5_instruction: Çfarë mund të futësh në cikël 4 herë që të vizatosh këto shkallë?
      K-1 Artist Loops 6_instruction: Kjo do dy cikle; një që të ngjisësh shkallët dhe një që të zbresësh.
      K-1 Artist Loops 7_instruction: "A mund t'a përfundosh këtë model me dy cikle?"
      K-1 Artist Loops 8_instruction: Këto shkallë kanë më shumë hapa.
      K-1 Artist Loops 9_instruction: 'Vlerësim: Përdor një cikël për të vizatuar shkallët'
      K-1 Artist Loops Free Play_instruction: Lojë falas, vizato diçka zbavitëse!
      K-1 Artist1 1_instruction: Vizato këmbën e burrit me një vijë
      K-1 Artist1 10_instruction: |
        Vizato dhe kërce për të bërë rrugën e ndërprerë për te thesari
        X
      K-1 Artist1 2_instruction: Vizato mustaqen mbi macen me këto dy vija!
      K-1 Artist1 3_instruction: Vizato dy vija në lindje dhe dy vija ne veri për të përfunduar shtëpinë!
      K-1 Artist1 4_instruction: Vizato vizat sipër, mbi dhe poshtë për të plotësuar kështjellën!
      K-1 Artist1 5.5_instruction: Vizato kullën e tretë të kështjellës duke përdorur vija të shkurtëra
      K-1 Artist1 5_instruction: Vizato kërcellin e kësaj luleje me këto dy vija!
      K-1 Artist1 6_instruction: Përfundo figurën duke përdorur nje bllok kërce!
      K-1 Artist1 7_instruction: Përdor bllokun e kërcimit për të lëvizur pa vizatuar. Kërce sipër për të vizatuar një vijë.
      K-1 Artist1 8_instruction: |
        Vizato vijën e ndërprerë duke përdorur të dy
        blloqet kërce dhe vizato
      K-1 Artist1 9_instruction: Vizato dhe Kërce për të vizatura vijën e ndërprerë
      K-1 Artist1 Assessment 1_instruction: Vizato vizat e shkurtra dhe të gjata!
      K-1 Artist1 Assessment 2_instruction: Vizato një vijë të shkurtër të ndërprerë!
      K-1 Artist2 1_instruction: Vizato një katror poshtë trekëndëshit.
      K-1 Artist2 2_instruction: Kërce dhe vizato një katror pranë shtëpisë.
      K-1 Artist2 3_instruction: Vizato një katror sipër një katrori tjetër
      K-1 Artist2 4_instruction: Vizato një drejtkëndësh për të kompletuar urën.
      K-1 Artist2 5_instruction: Vizato një drejtkëndësh për të kompletuar mbështetjen e urës
      K-1 Artist2 6_instruction: Vizato dy katrora për të bërë një drejtkëndësh!
      K-1 Artist2 Assessment1_instruction: 'Vlerësim: Vizato një katror ngjitur me katrorin tjetër.'
      K-1 Artist2 Free Draw_instruction: Vizato çfarë të duash!
      K-1 Artist2_7_instruction: "Vizato një drejtkëndësh për t'i dhënë veshësit një sirtar!"
      K-1 Bee 1_instruction: Më lëviz te lulja, merr nektarin, më pas më lëviz te kosherja dhe bëj mjaltë
      K-1 Bee 10_instruction: Merr katër nektar dhe bëj dy mjaltë!
      K-1 Bee 11.5_instruction: Merr katër nektar për të bërë katër mjaltë!
      K-1 Bee 11_instruction: Merr tre nektar dhe më pas bëj një mjaltë
      K-1 Bee 12_instruction: Merr tre nektar dhe më pas bëj dy mjaltë!
      K-1 Bee 13_instruction: Merr tre nektar dhe më pas bëj një mjaltë!
      K-1 Bee 14_instruction: Më dërgo te nektari, merre, më dërgo te kosherja, dhe bëj mjaltë
      K-1 Bee 15_instruction: Merr dy nektar dhe bëj dy mjaltë!
      K-1 Bee 2_instruction: Më lëviz te lulja, merr nektarin, më pas më lëviz te kosherja dhe bëj mjaltë
      K-1 Bee 3_instruction: Më lëviz te lulja, merr nektarin, më pas më lëviz te kosherja dhe bëj mjaltë
      K-1 Bee 4_instruction: Merr dy nektar dhe më pas bëj dy mjaltë!
      K-1 Bee 5_instruction: Merr tre nektar dhe më pas bëj tre mjaltë!
      K-1 Bee 6_instruction: Merr dy nektar dhe më pas bëj dy mjaltë!
      K-1 Bee 7_instruction: Merr tre nektar dhe më pas bëj dy mjaltë!
      K-1 Bee 8_instruction: Merr dy nektar dhe më pas bëj dy mjaltë!
      K-1 Bee 9_instruction: Merr dy nektar dhe më pas bëj dy mjaltë!
      K-1 Bee Assessment 1_instruction: Merr nektar për të bërë mjaltë!
      K-1 Bee Assessment 2_instruction: Merr nektar për të bërë mjaltë!
      K-1 Bee Loops 1_instruction: Merr nektarin për të bërë mjaltë!
      K-1 Bee Loops 10_instruction: Përdor ciklet për të marr nektar, mjaltë dhe për të lëvizur!
      K-1 Bee Loops 11_instruction: 'Vlerësim: Përdor ciklet dhe merr nektar dhe mjaltë!'
      K-1 Bee Loops 12_instruction: 'Vlerësim: Përdor ciklet për të marr nektar, mjaltë dhe për të lëvizur!'
      K-1 Bee Loops 2_instruction: Përdor një cikël për të lëvizur dhe pastaj merr nektarin dhe bëj mjaltin!
      K-1 Bee Loops 3_instruction: Përdor ciklet për të marr nektar dhe për të bërë mjaltë!
      K-1 Bee Loops 4_instruction: Përdor ciklet për të marr nektarin, bërë mjaltë dhe për të lëvizur!
      K-1 Bee Loops 5_instruction: Përdor ciklet për të marr nektarin dhe mjaltin!
      K-1 Bee Loops 6_instruction: Përdor ciklet për të marr nektar, mjaltë dhe për të lëvizur!
      K-1 Bee Loops 7_instruction: Përdor ciklet për të marr nektar dhe për të bërë mjaltë!
      K-1 Bee Loops 8_instruction: Përdor ciklet për të marr nektar dhe për të bërë mjaltë!
      K-1 Bee Loops 9_instruction: Përdor ciklet për të marr nektar, mjaltë dhe për të lëvizur!
      K-1 Bee Loops Assessment 1_instruction: Merr nektar për të bërë mjaltë dhe përdor ciklet për të lëvizur!
      K-1 Bee Loops Assessment 2_instruction: Merr nektar për të bërë mjaltë duke përdorur ciklet!
      K-1 Bee Puzzle 12_instruction: Get three nectars and then make two honey
      K-1 Building a Foundation Assessment_instruction: |
        Ndërto një piramidë tre nivelesh,
        nuk ka drejtime të tjera, kështu që vetëm luaj me këto pjesë derisa ta bësh
        atë!
      k-1 maze 1_instruction: A mund të më bësh që të leviz në perëndim dhe të marr derrkucin?
      K-1 Maze 10_instruction: 'Shko rrotull TNT për të më çuar te derrkuci! '
      K-1 Maze 11_instruction: 'Ndiq rrugën dhe më drejto për te derrkuci qesharak. Shmang TNT ose pendët do të fluturojnë! Ndihmes: Ai është Jugu im.'
      K-1 Maze 2_instruction: Më leviz drejt lindjes për të me çuar te derrkuci!
      K-1 Maze 3_instruction: Më leviz drejt jugut për të me çuar te derrkuci!
      K-1 Maze 4_instruction: Më leviz drejt veriut për të me çuar te derrkuci!
      K-1 Maze 5_instruction: Më leviz drejt lindjes për të me çuar te derrkuci!
      K-1 Maze 6_instruction: Më lëviz në një drejtim, pastaj në një tjetër për të më çuar te derrkuci!
      K-1 Maze 7_instruction: Më lëviz në një drejtim, pastaj në një tjetër për të më çuar te derrkuci!
      K-1 Maze 8_instruction: Më lëviz në një drejtim, pastaj në një tjetër për të më çuar te derrkuci!
      K-1 Maze 9_instruction: Më lëviz në një drejtim, pastaj në një tjetër për të më çuar te derrkuci!
      K-1 Maze Assessment 1_instruction: 'Vlerësim -- Më dërgo te derrkuci!'
      K-1 Maze Assessment 12_instruction: Niveli i Vlerësimit
      K-1 Maze Assessment 13_instruction: Niveli i Vlerësimit
      K-1 Maze Assessment 2_instruction: 'Vlerësim -- Më dërgo te derrkuci!'
      K-1 maze debug 1_instruction: Ndrysho kodin për të më çuar te derrkuci!
      K-1 maze debug 10_instruction: Korigjo këtë nivel duke rregulluar dhe shtuar blloqet për të më çuar te derrkuci!
      K-1 maze debug 11_instruction: "Ky është një test!\r\nKorigjo këtë nivel duke rregulluar dhe shtuar blloqet për të më çuar te derrkuci"
      K-1 maze debug 2_instruction: Zbulo çfarë mungon dhe pastaj shto blloqë për të më çuar te derrkuci!
      K-1 maze debug 3_instruction: Zbulo çfarë mungon dhe pastaj largo blloqë për të më çuar te derrkuci!
      K-1 maze debug 4_instruction: Shikoji këto blloqe dhe korigjoji! Mendoj se po shkoj në drejtimin e gabuar.
      K-1 maze debug 5_instruction: Korigjo këtë nivel duke rregulluar dhe shtuar blloqe për të më çuar te derrkuci!
      K-1 maze debug 6_instruction: Korigjo këtë nivel duke rregulluar dhe shtuar blloqet për të më çuar te derrkuci!
      K-1 maze debug 7_instruction: Korigjo këtë nivel duke rregulluar dhe shtuar blloqet për të më çuar te derrkuci!
      K-1 maze debug 8_instruction: Korigjo këtë nivel duke rregulluar dhe shtuar blloqe për të më çuar te derrkuci!
      K-1 maze debug 9_instruction: Korigjo këtë nivel duke rregulluar dhe shtuar blloqet për të më çuar te derrkuci!
      K-1 Maze debug Assessment 1_instruction: 'Vlerësim -- Korigjo këtë nivel duke rregulluar dhe shtuar blloqe që të më çosh te derrkuci!'
      K-1 Maze Loops 1_instruction: Më ço tek derrkuci!
      K-1 Maze Loops 10_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 11_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 12_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 2_instruction: Përdor bllokun Përsërit për të më çuar tek derrkuci!
      K-1 Maze Loops 3_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 4_instruction: Më ço tek derrkuci!
      K-1 Maze Loops 5_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 6_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 7_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 8_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 9_instruction: Më ço tek derrkuci!
      K-1 Maze Loops Assessment 1_instruction: 'Vleresimi -- Përdorni cikle të më çoni tek derri!'
      K-1 Maze Loops Assessment 2_instruction: 'Vleresimi -- Përdorni cikle të më çoni tek derri!'
      K-1 Maze Multi 14_instruction: Niveli i Vlerësimit
      K-1 Maze Multi 15_instruction: Niveli i Vlerësimit
      K-1 Maze Sequence Assessment 1_instruction: "Ky eshte nje test!\r\nLevizni ne nje menyre ,pastaj ne nje tjeter per te me cuar mua tek derri"
      K-1 Maze Sequence Assessment 2_instruction: "Ky eshte nje test!\r\nLevizni ne nje menyre ,pastaj ne nje tjeter per te me cuar mua tek derri."
      K2.0 sequence 1_instruction: Ndrysho kodin për të më çuar te derrkuci!
      K2.0 sequence 10_instruction: |
        Challenge: Move me around the TNT to get to
        the pig.
      K2.0 sequence 12_instruction: "Let's get that pig! "
      K2.0 sequence 2_instruction: Ndrysho kodin për të më çuar te derrkuci!
      K2.0 sequence 3_instruction: |
        Something is not quite right. REMOVE a block
        to get me to the pig!
      K2.0 sequence 4_instruction: |
        Time for a shorter puzzle!  Move one way, then
        another to get me to the pig.
      K2.0 sequence 4a_instruction: Try this puzzle again from the start!
      K2.0 sequence 5_instruction: Më lëviz në një drejtim, pastaj në një tjetër për të më çuar te derrkuci!
      K2.0 sequence 6_instruction: Zbulo çfarë mungon dhe pastaj shto blloqë për të më çuar te derrkuci!
      K2.0 sequence 7_instruction: Solve this level and get me to the pig!
      K2.0 sequence 8_instruction: |
        Debug this level by adding blocks to get me to
        the pig!
      K2.0 sequence 9_instruction: 'Shko rrotull TNT për të më çuar te derrkuci! '
      K2.0 sequence FP_instruction: |
        Now figure out how to get the pig any way you
        can!
      K2.0 sequence pre_instruction: |
        Play with these blocks to see if you can get
        me to the pig!
      kikiTesta_instruction: "Our adventurer wants to collect coins.  But she can\nonly use 4 blocks to get them.\r\n\r\nCan you help her grab as many as she\ncan using just 4 blocks?"
      kikiTesting_instruction: Click here to open the lesson plan for this level!
      KTest1_instruction: Can you make me move South once more to get to the pig?
      KTest2_instruction: |
        Trace the path and lead me to the silly pig. Avoid TNT
        or the feathers will fly!
      level 'grade3_Loops_10_instruction: "Such a busy bee!\r\n\r\nHelp bee collect\nall of the nectar and make all of the honey with the fewest blocks possible."
      level 'grade3_Loops_11_instruction: "The shape of this path is different than\nthe others. \r\n\r\nCan you collect all of the nectar using as few blocks\nas possible?"
      level 'grade3_Loops_12_instruction: |
        Can you find the quickest way for the
        bee to collect all of the nectar and make all of the honey?
      level 'grade3_Loops_2_instruction: |
        This time, use a loop to gather all of
        the nectar.
      level 'grade3_Loops_3_instruction: |
        Use a `repeat` loop to collect all of the
        nectar.
      level 'grade3_Loops_4_instruction: |
        Now use the `repeat` block to collect all
        of the nectar and make all of the honey.
      level 'grade3_Loops_5_instruction: |
        What a beautiful field of flowers!   Help
        the bee visit each one.  Can you find a way to do it with fewer than 7 blocks?
      level 'grade3_Loops_6_instruction: "How many times can loops help you in this\npuzzle?  \r\n\r\nLoops are your friend! Use a few of them to complete this\npuzzle with the fewest blocks possible."
      level 'grade3_Loops_7_instruction: "Those flowers look tasty!\r\n\r\nCollect\nnectar from each of the flowers using the fewest blocks possible."
      level 'grade3_Loops_8_instruction: |
        Collect all the nectar and make all of
        the honey using the fewest blocks possible.
      level 'grade3_Loops_9_instruction: |
        Collect nectar from each flower and make
        honey at each honeycomb using the fewest blocks possible.
      level grade3_Loops_2_instruction: |
        This time, use a loop to gather all of the
        nectar.
      Limited Quantity of Blocks Test_instruction: |
        Get me to the pig by adding only
        one block
      love_spring_1_instruction: |
        Let's celebrate Spring!  We have put some seeds
        in the ground to prepare for the season's flowers.  Can you cover them up
        so that the birds don't eat them?
      love_spring_2_instruction: |
        Our flowers are in full bloom!  Now we need the
        bee to grab nectar from each one so he can make plenty of honey back at his
        hive!
      love_spring_3_instruction: "Figure out how to change this code so that Robin\nchooses a number between 1 and 20.  \r\n\r\nWhen you're ready, press \"Run\"\nand play until you guess Robin's number!"
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      Middle School Hackathon Pt 1_instruction: (Click to see full instructions)
      Middle School Hackathon Pt 2_instruction: (Click to see full instructions)
      Mike Pair Programming_instruction: Here are the instructions
      Mike Test Bee Conditionals 1_instruction: |
        This cloud is blocking my view!
        Check to see if there's a flower under the cloud, and only get nectar if
        there's a flower. Be careful, it can change!
      Mike Test Bee Conditionals 2_instruction: |
        Collect all of the nectar. You can
        only collect nectar from flowers, but you can check any space to see if there
        is a flower.
      MikeAssessment1_instruction: Now do it right!
      MikeStar_instruction: Draw this.
      MikeStarHard_instruction: Draw this.
      MikeStarNested_instruction: Draw this.
      MikeTest1_instruction: Who knows what you should do?!?!
      MikeTest2_instruction: Draw something!
      MikeTest3_instruction: Build Something
      MSM Big Game Empty_instruction: |
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim Standalone Automatic DNS_instruction: |
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast_instruction: "In this version of the Internet Simulator,\nyou can connect to up to 5 other people in a room. When you send messages\nin the room, everyone receives them. What are some of the challenges of this\nsystem, and how might you solve them?\r\n"
      NetSim Standalone Classroom Routers_instruction: |
        In this version of the Internet
        Simulator, everyone connects to a router and has a specific address. To send
        messages, you have to address your message to the specific address of the
        recipient, and the router will take care of delivering it to the right computer.
        If there are other routers created in your class, ask for the address of one
        of your classmates and send them a message! View the Log Router to see the
        path the messages have taken through the network.
      NetSim Standalone Freeplay_instruction: |
        In this configuration, most of the
        options are turned on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS_instruction: |
        In this version of the simulator
        you can't see the other students' addresses.  Instead, one of you must act
        as a name service, to help share addresses with each other.
      NetSim Standalone Packets TCP_instruction: |
        Messages on the Internet can take
        many paths to get to their destination, and sometimes along the way the message
        gets dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters.
        
      NetSim Standalone Routers Addresses_instruction: "For this activity, connect\nto a router with the others in your group. Important note: The router will\nonly properly route messages where the first 4 bits are the To: address and\nthe second 4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      NetSim Standalone SendAB_instruction: |
        You and your partner share a single
        wire that can only be in state A or state B. You can set the wire to either
        state at any time, and you can read the state of the wire at any time. Can
        you figure out a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers Ascii_instruction: |
        Now that you've transmitted
        information represented as decimal numbers, you can map those numbers to text
        characters to send text-based information back and forth. With a text-based
        protocol, you can easily represent and communicate all kinds of information.
        
      NetSim Standalone Sending Numbers_instruction: |
        You and your partner can now
        reliably send messages back and forth without extra coordination! While you're
        always sending bits back and forth, you can also represent those bits as decimal
        numbers. What kinds of information can you represent with this system? 
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: Vizatoni dicka te mrekullueshme! Kodi juaj eshte ruajtur si nje projekt qe mund ti kthehesh ne cdo kohe.
      NEW Course 4 Artist Functions 1_instruction: A mund te vizatoni nje katror qe eshte 100 pixel i gjate,duke perdorur nje litar?
      NEW Course 4 Artist Functions 10.1_instruction: |
        Use the functions from the
        previous puzzles to draw this pattern.
      NEW Course 4 Artist Functions 10_instruction: 'Kliko "rregullo" për të mbushur bllokun në përkufizimin e funksionit që të bëjë një katror 40 piksel.'
      NEW Course 4 Artist Functions 11_instruction: |-
        Kemi një funksion të ri të quajtur "vizato nje vize e katrorësh". Je i lirë t'i hedhësh një sy bllokut të funksionit që të shikosh si e kemi ndërtuar. Kliko "Lësho" kur të jesh gati për formuesen tjetër.
      NEW Course 4 Artist Functions 12_instruction: 'Përdor funksionin "vizato vizat e katrorëve" nga formuesja e kaluar për të vizatuar këtë model."'
      NEW Course 4 Artist Functions 13_instruction: 'Mund të vizatosh një formë ylli duke përdorur funksionin "vizato vizat e katrorëve"? Ndihmes: Në çdo përsërtitje do të duhet të lëvizësh përpara një numër të caktuar pikselash dhe të kthehesh 144 gradë.'
      NEW Course 4 Artist Functions 14_instruction: 'Koha për Lojë të Lirë! '
      NEW Course 4 Artist Functions 2_instruction: |
        A mund të vizatosh 3 katrorë 20 piksela veç nga
        njëri tjetri? Ndihmë: çdo katror është 100 piksela i madh
      NEW Course 4 Artist Functions 3_instruction: |
        Këtu kemi një lloj të ri Blloku. Quhet
        "Function block. Kliko "edit" dhe më pas mbushe atë me kod për të vizatuar një katror me 100 piksel në anë" Kliko "Lësho" për të parë çfarë mund të bëjë. 
      NEW Course 4 Artist Functions 4_instruction: 'Përdor funksionin "vizato katrorin" për të vizatuar modelin. Ndihmes: Do të duhet të përdorësh bllokun "kthehu djathtas me 120 gradë" pas çdo katrori.'
      NEW Course 4 Artist Functions 5_instruction: 'Si e dinte blloku "vizato nje katror" se cilat komanda duhet të përdorte? Kliko "modifiko" në bllokun e funksionit "vizato nje katror" Blloqet në këtë modifikues funksioni janë përkufizimet që bëjnë "vizato një katror". Pasi të keni parë rrotull, kliko "Ruaj dhe Mbyll" dhe më pas "Lësho."'
      NEW Course 4 Artist Functions 6_instruction: "Duke përdorur bllokun e funksionit \"vizato një katror\", a mundesh të vizatosh këtë figurë? Ndihmës: secili katror është 20 piksela i veçuar.\r\n"
      NEW Course 4 Artist Functions 7_instruction: 'A po ia merr dorën se si të përdoren blloqet e funksionit? Le të modifikojmë këtë katror në mënyrë që të jetë 200 piksela në madhësi. Ndihmes: kliko "modifiko" për të ndryshuar madhësinë e modifikuesit të funksionit "vizato një katror". Mos harro të klikosh "ruaj dhe mbylle" për të dal nga modifikuesi i funksionit. '
      NEW Course 4 Artist Functions 8_instruction: 'Ne kemi krujuar nje funksion per ty te quajtur "vizato nje trekendesh". A mundesh te modifikosh definiconin e funksionit ne menyre qe te vizantosh nje trekendesh me 100 piksel ne ane ?'
      NEW Course 4 Artist Functions 9_instruction: A mund ta zgjidhesh kete duke shtuar vetem nje bllok ?
      NEW Course 4 Artist Functions inspire_instruction: Kliko këtu për të parë figurën inspiruese përsëri.
      New Course 4 Artist Functions Level 4_instruction: 'Përdor funksionin "vizato një katror" për të vizatuar modelin.'
      NEW Course 4 Artist Params 1_instruction: 'Le të përkufizojmë këtë funksion për të vizatuar një katror me brinjë 50 piksela. Kliko "modifiko" për të filluar.'
      NEW Course 4 Artist Params 10_instruction: 'Krijo një bllok funksioni "vizato një hekzagon" me parametrin e gjatësisë. Ndihmes: ky hekzagon ëhstë me madhësi 100 piksela. '
      NEW Course 4 Artist Params 11_instruction: 'Mund të zbulosh si mund të vizatohet kjo formë? Modifiko funksionin për të përdorur parametrin "brinjët".'
      NEW Course 4 Artist Params 12_instruction: A mund të përfundosh këtë vizatim? Brinjët e të gjitha formave janë të gjata 100 piksela.
      NEW Course 4 Artist Params 12a_instruction: 'Ky imazh është i ngjashëm me të fundit. A mund të përdorësh një "cikël for" me funksionin për të bërë këtë dizajn?'
      NEW Course 4 Artist Params 13_instruction: |
        Le të ndryshojmë këtë funksion "vizato nje formë". 
        I cili ka një parametër "gjatësi". Tani, le të ndryshojmë funksionin 
        për të shtuar një parametër "faqet". Mos harro që këndi i kthimit për një formë të dhënë 
        eshte 360 i ndarë në bazë të anëve qe ka. Shënim: Këto janë gjatësitë 
        për secilën formë: trekendëshi është 100 piksela, gjashtëkendëshi eshte 25 piksela, dhe
        katrori eshte 50 piksela.
      NEW Course 4 Artist Params 14_instruction: 'Modifiko "vizato nje skaj ne forme spirale" qe te perdore parametra dhe te ri-krijoje forma. '
      NEW Course 4 Artist Params 15_instruction: 'Lojë e lirë: Këtu janë funksionet që ke shkruar dhe disa më shumë për ty që të luash. Vizato diçka të paparë! Luaj me gjërësinë e lapsit dhe shiko se sa ndryshe do të duket pamja e vizatimit tuaj.'
      NEW Course 4 Artist Params 2_instruction: 'Krijo një funksion "vizato një trekëndësh" nga fillimi me çdo brinjë 50 piksela'
      NEW Course 4 Artist Params 3_instruction: "Tani le të përdorim funksionin për të vizatuar 5 trekëndësha rradhazi. Udhëzues: secili trekëndësh është 30 piksela i ndarë.\r\n"
      NEW Course 4 Artist Params 4_instruction: 'A vure re diçka ndryshe te keto blloqe funksionesh? Kliko "Lësho" për të parë se çfarë ndodh.'
      NEW Course 4 Artist Params 5_instruction: 'Plotëso ??? me parametrin e gjatësisë në bllokun e inputit. Ndihmes: Pentagoni është 100 piksela në madhësi. '
      NEW Course 4 Artist Params 6_instruction: 'Plotëso parametrin e "gjatësisë" për të vizatuar këto forma duke zëvendësuar "???" me numrat e duhur. Katrori dhe trekëndëshi janë 100 piksela në madhësi ndërsa hekzagoni është 75 piksela në madhësi.'
      NEW Course 4 Artist Params 7_instruction: |
        A mund ta mbarosh këtë vizatim? Shënim:
        secili trekëndësh është 25 piksela më i madh se i fundit. Trekëndëshi i parë është me madhësi 25
        piksela.
      NEW Course 4 Artist Params 8_instruction: Kodi për këtë trekëndësh është dëmtuar. A mund të ndryshosh funksionin për ta rregulluar atë, dhe pastaj të bësh trekëndësha me gjatësi 25, 50 dhe 75?
      NEW Course 4 Artist Params 9_instruction: 'Kliko "modifiko" për të plotësuar në përkufizimin e funksionit "vizato një katror" dhe shto një parametër. Duhet të marri një parametër për gjatësinë, ashtu si trekëndëshi. Këtë rradhë, vizato 3 katrorë: me gjatësi 25, 50 dhe 70 piksela, secili 100 piksela larg tjetrit.'
      NEW Course 4 Artist Params inspire_instruction: "Frymëzimi i Lojës së Lirë: Tani ke mësuar gjithçka që ke nevojë për të bërë një model si ky! Nëse kjo figurë të inspiron, mundohu të bësh diçka të ngjashme. Në të kundërt, krijo diçka sipas dëshirës.\r\n\r\nDo të dish se si modeli ynë është bërë? "
      NEW Course 4 Artist Vars 1.5_instruction: 'Hidhni nje sy tek kodi, a mund te shikoni si  blloku "vendosni gjatesine" dhe blloku "gjatesia" punojne sebashku? Klikoni tek "Run"  per ta pare ate ne veprim.'
      NEW Course 4 Artist Vars 12_instruction: Tani, modifiko kodin nga niveli i fundit për të krijuar një pentagon me brinjët nga 100.
      NEW Course 4 Artist Vars 2.5_instruction: 'Hidhni nje sy tek kodi, a mund te shikoni si  blloku "vendosni gjatesine" dhe blloku "gjatesia" punojne sebashku? Klikoni tek "Run"  per ta pare ate ne veprim.'
      NEW Course 4 Artist Vars 2_instruction: 'Hidh nje numer blloqesh tek blloku " vendosni gjatesine" per te vizatuar nje set prej 50 pixel trekendeshash .'
      NEW Course 4 Artist Vars 4 5_instruction: |
        Punë e shkëlqyer në puzzle e fundit, le ta provojmë përsëri
        këtë herë le të bëjmë këtë dizajn cool me me 60 piksela gjashtkëndëshi.
      NEW Course 4 Artist Vars 4_instruction: 'Le ta provojme serish. A mundeni të vendosni një gjatësi variabël për ta bërë këtë dizanj të mrekullueshëm me gjashtëkëndësha? Udhëzim: Eshte shumëfishi i 10-tës.'
      NEW Course 4 Artist Vars 6_instruction: "Vizato këtë model duke zhvendosur variablin e gjatësisë në vendin e duhur dhe pastaj vendos vlerën e sakt për gjatësinë. (Udhëzim: Është shumfish i 10). \r\n\r\nE patë se si e vendosët vlerën për gjatësinë dhe kodi përdori vlerën e duhur kudo?\r\n\r\n\r\n"
      NEW Course 4 Bee For Loops 1_instruction: Perdorni nje cikël per te koleksionuar nektarin nga cdo lule.
      NEW Course 4 Bee For Loops 10_instruction: Perdor nje litar variabel te kundert per te pare sa larg mund te levizesh horizontalisht.
      NEW Course 4 Bee For Loops 10a_instruction: 'Gati për një sfidë? Kujto çfarë ke mësuar rreth cikleve dhe përpiqu të zgjidhësh këtë problem. Mbaj mend: Ti mund ta lëshosh zgjidhjen tënde disa herë përpara se ta zgjidhesh përfundimisht problemin.'
      NEW Course 4 Bee For Loops 11_instruction: A mund të përdorësh variablën e ciklit për të kontrolluar lëvizjet dhe mbledhjen e nektarit?
      NEW Course 4 Bee For Loops 2_instruction: "Shto kodin e nevojshëm për t'u siguruar që bleta të mbledh të gjithë nektarin. Shiko se sa kod të nevojitet për këtë formuese! (Do të mësojmë një mënyrë më të thjeshtë në formuesen tjetër.)"
      NEW Course 4 Bee For Loops 3_instruction: 'Ah, "cikli for" e bën këtë kaq të thjeshtë! I gjithë kodi që ju duhet është këtu, shiko se si vihen të gjitha bashkë më pas kliko "Lësho" për të parë se si funksionon. '
      NEW Course 4 Bee For Loops 4 4_instruction: 'A mund të ndihmosh Bletën të mbledhi pjesën tjetër të mjaltit duke përdorur këtë cikël for? '
      NEW Course 4 Bee For Loops 4_instruction: 'Zevendesoni ??? ne ciklin me shumen me te madhe te nektarit qe bleta ka mledhur. '
      NEW Course 4 Bee For Loops 5 5_instruction: 'A po ia merr dorën "ciklit for"? Le të ndihmojmë bletën për të marrë pjesën tjetër të nektarit.'
      NEW Course 4 Bee For Loops 5_instruction: Mund të përdorësh edhe një cikël for për numëruar mbrapsht. Perpiqu te mbledhesh këtë nektar duke filluar numërimin mbrapsht nga 5 në 1 me nga 1.
      NEW Course 4 Bee For Loops 6_instruction: 'Numri i fundit në ciklin tënd for quhet "rritësi". Sa herë cikli fillon, një variabël numërues ndryshon nga vlera e rritësit. Mundohu të mbledhësh këto lule duke përdorur një rritës 2.'
      NEW Course 4 Bee For Loops 7_instruction: |
        A po ia merr dorën "ciklit for"? Kjo është e ngjashme me formuesen e fundit, por duhet të marrësh 2,4,6,8,10 nektar.
        
      NEW Course 4 Bee For Loops 8_instruction: "Çfarë do të bëje nëse do të hiqnim disa blloqe? A mund t'i shtosh përsëri për të ndihmuar bletën të mbledhi nektar?\r\nMos harro:\nNëse cikli numëron për sipër, rritësi i shtohet variablës së numëruesit sa herë i shkon. Sa duhet të jetë rritësi për të mbledhur 3, 6, 9 nektar? \r\n"
      NEW Course 4 Bee For Loops 9_instruction: Nëse cikli yt po dobësohet, rritja bie nga variabla jote e kundërt për secilin cikël. Sa duhet te jetë rritja jote për të mbledhur 9, pastaj 6 dhe me pas 3 nektar?
      NEW Course 4 Bee For Loops 95_instruction: 'Hidhi një sy çdo pjese të "ciklit for"  që ti sapo ke krijuar. Mund ta gjesh se cilin numër duhet të dyfishosh për të zgjidhur këtë puzzle? Pse punon?'
      NEW Course 4 Play Lab Params 11_instruction: 'Eshte koha e Lojës së Lirë! Beni qejf me te gjitha blloqet ne kutine tuaj te mjetit. '
      NEW Course 4 Play Lab Params 5 5_instruction: Le ta provojmë përsëri, por me më pak ndihmë. Çfarë do të ndryshoni kësaj here për të bërë patrullen e aktorëve?
      NEW Course 4 Play Lab Vars 4 5_instruction: '"Çfarë mendoni që ky kod mund te bëjë? Kliko "Run" dhe shikoni çfarë ndodh."'
      NEW Course 4 Play Labs For Loops 7a_instruction: Duke përdorur çfarë keni mësuar deri tani, a mund ta bësh që Dinosauri të lëvizi një hap para sa herë që Pinguini numëron?
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: 'Eshte koha e Lojës së Lirë! Beni qejf me te gjitha blloqet ne kutine tuaj te mjetit. '
      NEW Course 4 Play Labs For Loops 8a_instruction: 'Sfidë: Si do ta përdorje "ciklin for" për të bërë që të gjithë aktorët të vijnë rrotull dhe të thonë numrin e tyre të aktorit, dhe më pas të zhduken nga ekrani? '
      Ninjacat Demo B (copy 1)_instruction: "\r\nLet’s begin by exploring a simple\nvideogame, and then figuring out how it works. You can use the arrow keys\nto move the ninja left, right and jump - try to catch the unicorn and avoid\nthe dragon!\r\n\r\n\r\n\r\n  \r\n\r\n"
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      October15 bat_instruction: "Freeplay: Here are some functions to play with.  Can\nyou draw a bat?\r\n"
      October15 ghost 1_instruction: |
        Give the ghost eyes, using the "draw a circle"
        function.
      October15 JoL 1_instruction: |
        Program the artist to design a face for your
        jack-o-lantern!
      October15 pumpkin 1_instruction: |
        Finish this jack-o-lantern by drawing the
        eyes and nose in any style you would like.
      October15 stars 1_instruction: |
        Use loops and the "random integer" block
        to fill the night sky with stars of different shapes and sizes.
      Overworld Avoid Monsters_instruction: |
        Running into a Creeper is a bad idea.
        Carefully move past the Creepers and reach the safety of your home.
      Overworld Chop Tree - allthethings_instruction: |
        Wood is a very important resource.
        Many things are made from it. Walk to the tree and use the “destroy block”
        command to chop it down.
      Overworld Chop Tree_instruction: |
        Wood is a very important resource. Many things
        are made from it. Walk to the tree and use the “destroy block” command to
        chop it down.
      Overworld Chop Trees_instruction: |
        We need to build a house before the sun
        goes down. Houses require a lot of wood. Cut down all 3 trees.
      Overworld Free Play 20x20_instruction: |
        Congratulations! You've completed
        all our puzzles! Now mine, build, and create something unique by using everything
        you've learned so far.
      Overworld Free Play_instruction: |
        This landscape is yours to play with. You
        choose what to build.
      Overworld House Frame - A_instruction: |
        Let's make our own house! This spot
        looks good. Build a frame on the dirt blocks.
      Overworld House Frame - C_instruction: |
        Let's make our own house! This spot
        looks good. Build a frame on the dirt blocks.
      Overworld House Frame B_instruction: |
        One wall is finished, let’s build the
        rest of the house by following your floor plan! You’ll have to repeat yourself
        quite a lot here.
      Overworld House Frame B2_instruction: |
        One wall is finished, let’s build the
        rest of the house by following your floor plan! You’ll have to repeat yourself
        quite a lot here.
      Overworld House Frame C_instruction: |
        One wall is finished, let’s build the
        rest of the house by following your floor plan! You’ll have to repeat yourself
        quite a lot here.
      Overworld House Frame Chosen_instruction: |
        Build the rest of your house from
        any material you'd like. The "repeat" command will come in handy.
      Overworld House Frame_instruction: |
        Let's make our own house! This spot looks
        good. Build a frame on the dirt blocks.
      Overworld Minecart Track_instruction: |
        You’re back on the surface with lots
        of underground resources. Now, we're going to build a track along the dirt
        path from your house. The first step is clearing the path. Follow the path
        and clear the trees.
      Overworld Move to Sheep_instruction: |
        Add a second “move forward” command to
        reach the sheep.
      Overworld Place Wall_instruction: |
        Every house starts with a wall. Build the
        first part of your house by putting the "place" and "move forward" commands
        inside the repeat loop.
      Overworld Plant Crops_instruction: |
        It’s good to plan ahead. Plant crops on
        both sides of the water so you don’t get hungry later on.
      Overworld Powered Minecart_instruction: |
        Great job! You’ve gathered lots of
        resources and built a modest home. Now lay rail from the edge of the map to
        the door of your house.
      Overworld Shear Sheep_instruction: |
        Sheep-shearing time! Use the “shear” command
        to gather wool from both sheep.
      Pattern Bee 1_instruction: |
        What a strange field of goodies! I wonder if there's
        a pattern here...
      PDAlg 13-16 Sam Extension Puzzle_instruction: |
        Add a second parameter to "onscreen?"
        for Sam's y coordinate and update the function so it keeps him safe on all
        four sides.
      PDAlg 17-20 Luigi Extension Puzzle_instruction: |
        Without modifying your existing
        "cost" function, create a new "coupon" function that takes a pizza topping
        and coupon code and returns the cost of a pizza with that topping. If the
        coupon code is correct (you get to decide what it is), apply a 30% discount
        to the pizza.
      PDAlg 8-12 ex dr 1_instruction: |
        The definition in this Design Recipe doesn't
        match both examples. Test each example to see which is failing, and then fix
        the definition to match.
      PDAlg 8-12 ex dr 2_instruction: |
        This student has created two examples for
        the function "apples" but something's not quite right. How would you direct
        this student to correct their mistake?
      PDAlg 8-12 Rocket Height Puzzle_instruction: |
        Let's write a "rocket-height"
        function with simple acceleration. Write a function that ensures the rocket
        is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and
        165 at 4 seconds.
      PDAlg Big Game History_instruction: |
        Now that you've played through a Big
        Game level you should see a new entry in your history. Click the Version History
        button and you should see at least one version. Each time you go back to a
        Big Game level you'll get a new record in your version history that you can
        revert back to.
      PDAlg Big Game Remix_instruction: "Here's your Big Game as you last left it.\nTry clicking the Remix button to spin off a new remix of your project.\r\n\r\nAny\nchanges you make after you click Remix will be saved on your new remix and\nnot on your main Big Game."
      PDAlg Design Recipe Delete_instruction: |
        Click the delete button to get rid
        of this function, then try creating and deleting a few of your own.
      PDAlg Design Recipe Examples_instruction: |
        The definition in this Design Recipe
        doesn't match both examples. Test each example to see which is failing, and
        then fix the definition to match.
      PDAlg Design Recipe Required_instruction: |
        Complete the Design Recipe for the
        "eggs" function, making sure to create and test your examples.
      PDAlg Updates Cond_instruction: |
        When you went to PD in the summer, the Conditional
        block that you were introduced to was black and allowed any data type to be
        used. This proved to be confusing, given that every other function we've
        seen always produces the same type of data. To help make conditionals clearer
        and more consistent we've replaced the single black block with a separate
        block for each data type.
      PDAlg Updates Errors_instruction: |
        Run the provided program and use the error
        messages to try and track down the bugs.
      PDAlg Updates Space_instruction: |
        Making use of limited programming space (especially
        on small screens) is challenging with a block based language. To help with
        this we've added a few features. Experiment with this provided code to see
        how the space can be manipulated to deal with larger programs.
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: |
        Try this puzzle that uses conditionals and
        loops together. Use the "if" block to decide when to turn. Hint: you only
        need one more block to complete this puzzle. 
      PDK5 Events 1_instruction: |
        So far all of the programs we've written are executed
        in order from top to bottom. In this puzzle, we'll use "Events" to respond
        to an action on demand. Make the octopus say "Hello" only when you click
        on the Octopus. 
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: |
        Funksionet të lejojnë ty të përcaktosh blloqe të reja! Ne kemi
        lëvizur blloqet për të vizatuar një katror brenda një funksioni të quajtur "vizato një katror".
        A mund ta përdorësh funksionin "vizato një katror" për të krijuar xhamat? Katrorët
        janë 75 piksela të veçuar.
      PDK5 Loops 1_instruction: |
        Instead of using 5 "move forward" blocks, use
        the "repeat" block with a "move forward" block inside of it. In computer
        science, this is called a "loop." 
      PDK5 Loops 3_instruction: |
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |
        Something happened
        to the bits in this image! Find the error and fix it! Hint: a few extra bits
        were added. You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix bit offset_instruction: |
        A single extra bit was
        inserted into the stream of bits that make up the C of the Code.org logo.
        That extra bit bumps all of the other bits down the line which makes the logo
        look messed up. Hunt down the extra bit and remove it to fix the Code.org
        logo.
      Pixelation - Lesson 14 - Fix the error_instruction: |
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |
        Make a 3x5 letter
        'A'. The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want. Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation - Lesson 15 - Color Free Play_instruction: |
        Requirements: The icon
        must be 16x16 pixels. You must use the Pixelation Widget to encode the bits
        of color information. The image must be encoded with at least 12 bits per
        pixel.
      Pixelation - Lesson 15 - Color Shades 4x4_instruction: |
        We start you out with
        the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid
        with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill
        with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4
        - shades of gray.
      Pixelation - Lesson 15 - Color Shades_instruction: |
        We start you out with the
        row of shades of red that Maddie created in the video. Experiment with 6-bit
        color by filling in the bottom row of the image with shades of a different
        color. Here is an example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Complete 3-bit color_instruction: |
        We start you with
        the 4x2 image Maddie was creating, but we've left out the last two squares.
        Finish off the image by figuring out which two colors are missing and encode
        them.
      Pixelation 2_instruction: |
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Pixelation Bee_instruction: |
        This larger image of a bee encodes color with
        12 bits per pixel, but viewing in hex makes it easier to see the color of
        each pixel. If you switch to binary mode - hold on to your hat - it's a lot
        of bits. Here's another mind-blowing thing to try: slide the bits per pixel
        up to 24 bits per pixel. What happens? Can you explain this behavior?
      Pixelation Flappy_instruction: |
        Here is a bigger image at 9 bits per pixel.
        With 9 bits per pixel you can express 512 different colors. Click through
        to see the next image which is even more sophisticated, but easier to understand.
      Pizza on a Plate_instruction: |
        Project Idea: Create a picture of something
        familiar from the real world. This requires persistence and planning!
      Planning Farmer_instruction: |
        What a strange field of goodies! I wonder if
        there's a pattern here...
      Play Lab Rocket 1_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2_instruction: |
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3_instruction: |
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      playEventsK1_instruction: |
        This game is called "Play Lab".  See if you can
        figure out what each block does.
      playEventsK2_instruction: "Jorge wants to say \"Hi there.\"\r\n\r\nCan you\nhelp?"
      playEventsK3_instruction: |
        Jorge wants to be scratched behind the ears!  Can
        you make it so that when you click Jorge he is happy?
      playEventsK4_instruction: |
        Can you make it so that Jorge the dog chases Robin
        the bird when you click the up arrow?
      playEventsK5_instruction: |
        Now add code so that Robin flies away when you click
        the forward arrow.
      playEventsK6_instruction: |
        Have Robin talk back to Jorge when you click on
        her.
      playEventsK7_instruction: What else can you do in this fun scene?
      Poorva copy U3L2 Using Simple Commands_instruction: |
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      Poorva-test_instruction: |
        Here are regular instructions for a level. There
        is nothing fancy going on here.
      Prompt Test_instruction: |
        Build whatever you want. This is an example of a
        number-guessing game!
      PS copy 2-3 Bee Conditionals 5_instruction: "Be careful not to collect nectar\nfrom a purple flower if it doesn't have any. \r\nYou must first check if\nthe nectar is equal to 1 using the `if nectar` block."
      PS FR test 7-25_instruction: 'Here are your instructions for this free response.  '
      PS Log test - Define and use turnAround_instruction: |
        Define a function called
        turnAround. Call the function and then move the turtle forward. (Click to
        see full instructions)
      PS predictive Applab level test_instruction: 'Here are some instructions. '
      Quantum Bee - Ryan_instruction: |
        These clouds are bugging me! Some of the clouds
        have flowers inside, and some don't. I should check each cloud, and only
        get nectar from the flowers.
      Quantum Bee_instruction: |
        Purple flowers may have either 1 or 0 nectar, but
        you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      Rocket Height Course A_instruction: |
        Follow the Design Recipe to create a function
        rocket-height.
      Ryan - 4-5 Bee Conditionals 2_instruction: |
        The bee only wants nectar right
        now. Not all objects are flowers, so check underneath EVERY CLOUD to see if
        it is hiding a flower. If it is, then you can gather nectar.
      Ryan - Bee Conditionals_instruction: |
        The bee only wants nectar right now.
        Not all objects are flowers, so check underneath EVERY CLOUD to see if it
        is hiding a flower. If it is, then you can gather nectar.
      Ryan Doily Step 1_instruction: |
        Now we're going to draw a doily step by step.
        First, draw a square.
      Ryan Doily Step 2_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Doily Step 3_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Test Locked Blocks_instruction: |
        Këtu është një funksion që quhet "patrol".
        Ndryshoje atë që të lëvizësh macen 400 piksela lart dhe 400 piksela posht.
      Ryan's clone of C4S15P10_instruction: "We've added one last function for you.\n\r\n\r\nUse an \"if\" statement to program your game to call the \"level_up\"\nfunction only when \"player_score\" becomes greater than a certain number.\r\n\r\nFor\nexample: \"player_score\" > 6\r\n\r\nPlay the game, and make it past level\n4 to move to the next puzzle. "
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Click "Run" and then use the
        arrow keys to move Sam around his yard, making note of Sam's coordinates
        at different locations. Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        safe from leaving both directions? Try using the and block to program the
        function on-screen? to check if Sam is safe-left? and safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      sample1_instruction: "Our adventurer wants to collect coins.  But she can only\nuse 4 blocks to get them.\r\n\r\nCan you help her grab as many as she can\nusing just 4 blocks?"
      sample10_instruction: Now you can use loops to draw whatever you like!
      sample10a_instruction: "You have helped the adventurer and her bee!  As a reward,\nplease stay and play around in my magical village. \r\n\r\nYou should have\neverything you need to create a game of your own."
      sample2_instruction: |
        Use what you've learned to help bee gather all of this
        honey using only the blocks that you have here.
      sample2a_instruction: |
        Use what you've learned to help bee gather all of this
        honey using only 4 blocks.
      sample3_instruction: |
        Now you can help bee make all of the honey using just
        the blocks in the toolbox.
      sample3assessment_instruction: |
        Can you figure out how to gather all of this
        nectar in just one try?
      sample4_instruction: "Our adventurer has found a stash of coins in this cave.\r\n\r\nCan\nyou help her grab as many as she can using just 7 blocks?"
      sample5_instruction: Help bee make all of the honey.
      sample6_instruction: 'Challenge: Help bee get all of the nectar.'
      sample7assessment_instruction: |
        Can you help bee make all of the honey in just
        one try?
      sample8_instruction: |
        Look at this trove of coins! How many can you get the
        adventurer to grab?
      sample9_instruction: |
        Use loops to help the artist connect all of the dots.
        
      sample9a_instruction: |
        The wizard has found his potions!  Use everything you
        have learned to help him collect them.
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: 'Lajthi! Lajthi! Lajthi! Përdor bllokun "if" për të më çuar mua atje me numrin më të vogël të blloqeve.'
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: 'Në rregull, le ta bëjmë përsëri për tu praktikuar - kjo nuk është shumë e ndryshme, por kujdes nga muri!'
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: |
        Blloqet "if-else" kontrollojnë një kusht dhe më pas 
        bëjnë një gjë ose diçka tjetër. Për të më çuar tek lisi provo të përdorësh këtë bllok të ri.
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: |
        Një praktikë më shumë për bllokun
        "if-else", a mund ta bësh si duhet me përpjekjen e parë?
      scrat 20_instruction: A mund të shtosh vetëm 3 blloqe për të më ndihmuar mua të zgjidh një maze të ndërlikuar? Nëse e bën si duhet, unë mund të ec n çdo rrugë me kthesa pavarësisht gjatësisë. Nxito! Akulli po shkrin!
      SpecialFrozenLevel_instruction: Ti zyrtarisht je bërë një mjeshtër! Krijo një dimër në një botë çudirash.
      Standalone_Artist_1_instruction: |
        Mirë se vini në Artist! Së pari, le të përpiqemi
        për të bërë një katror të thjeshtë duke përdorur bllokun të kthehet drejtë dhe bllokun të lëvizë përpara.
        Secila anë duhet të jetë 100 pixels e gjatë.
      Standalone_Artist_2_instruction: Vizato këtë diamant me kënde 120 dhe 60 gradë dhe me brinje 150 piksel të gjatë.
      Standalone_Artist_3_instruction: |2
        A mund të ndërtosh këtë gjashtëkëndësh me anë 100 piksel
         dhe me 60 gradë kthesë?
      Standalone_Artist_4_instruction: Tani ti ke një bllok të ri për të luajtur, ciklin. Ky do të përsërisë një grup komandash. Çfarë do ndodhë nëse i ciklon këto komanda 6 herë?
      Standalone_Artist_5.5_instruction: 'Vini re se si e thjeshtuam kodin e diamantit duke e kthyer atë në një cikël. Ti mund të ciklosh të gjithë sekuencën 12 herë për të vizatuar një lule. Ndihmë: Ty do të duhet të kthehesh 30 gradë pas ciklit të diamantit tënd, kështu që nuk do vazhdosh të vizatosh të njëjtin diamant.'
      Standalone_Artist_5_instruction: |
        Sa herë keni nevojë për ta cikluar këtë diamant
        që të vizatojë lulen?
      Standalone_Artist_6_instruction: |
        Përsërit kodin e gjashtëkëndësh-it 6 herë për të krijuar dizajnin. Sa gradë do të ju duhet të kthehet çdo herë? Ndihmë: ndaj
        numrin e  titujve në një rreth me numrin e herë ju jeni duke përsëritur.
      Standalone_Artist_7_instruction: 'Një funksion është një tjetër mjet programimi që të ndihmon ty të mos përsërisësh vetveten. Ky funksion vizaton një lule, kështu që ti mund ta përdorësh në çdo kohë, sa herë që dëshiron të vizatosh një lule. Përdor këtë dhe bllokun e ri "jump" për të vizatuar këto lule. Ndihmë: Lulet janë 150 piksela veç e veç'
      Standalone_Artist_8_instruction: 'Këtu kemi një funksion që quhet "Draw a shape" që ne e kemi programuar për të vizatuar gjashtëkëndësha. Ekzekuto kodin për të parë se çfarë bën dhe më pas eksperimento me funksionin për të parë se çfarë ndodh. A mund ta bësh të vizatojë një model katrorësh, trekëndorësh ose tetëkëndorësh?'
      Standalone_Artist_9_instruction: 'Tani shkoni përpara dhe të bëni çdo  figurë që ju pëlqen! Ju keni marrë edhe një funksion të zbrazët që ju mund të bëni çdo gjë që doni!'
      Standalone_Artist_v2_instruction: |
        Mirë se vini në Artist! Së pari, le të përpiqemi
        për të bërë një katror të thjeshtë duke përdorur bllokun të kthehet drejtë dhe bllokun të lëvizë përpara.
        Secila anë duhet të jetë 100 pixels e gjatë.
      StepIntro_instruction: |-
        Here's how to use the "Step" button.
      template test_instruction: "what's up"
      Test Play Lab_instruction: This is a test play lab level.
      test_sarah_instruction: hi hi
      testArtistForTestK_instruction: |
        The Artist is trying to draw a line five times,
        but can't get it right.  Can you help?
      Testing Quantum Farmer_instruction: "Wow, look at that! \r\n\r\nI don't know\nhow many shovelfuls of dirt this hole needs.  \r\nCan you write a program\nthat keeps using the `fill` block until the ground is even?  "
      Text Compression 1_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      The Vigenere Cipher Widget_instruction: Udhëzimet
      The Vigenere Cipher_instruction: Udhëzimet
      Total Artist Clone Me_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      U1L10 NetSim numbers with decimal_instruction: |
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L13 Text Compression_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      U1L4 NetSim SendAB_instruction: |
        Develop, document, and test a protocol that
        allows you to use Internet Simulator to relay a message. See the worksheet
        for more detailed instructions.  
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2 frequency caesar_instruction: Udhëzimet
      U2 frequency random sub_instruction: Udhëzimet
      U2 vigenere cipher_instruction: Udhëzimet
      U2 Vigenere_instruction: Test
      U2L04 - NetSim Routers with Addresses_instruction: |
        Send messages with your
        classmates (Click to see full instructions)
      U2L05 - NetSim - Packets and Building TCP_instruction: "Develop a Protocol\nfor Reliably Sending a Message.\r\n\r\nConstraints:\r\n- Packets may contain\nonly 6 characters\r\n- Packets may drop with small probability\r\n- Packets\nmay not arrive in order"
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L14 frequency random_instruction: Test
      U2L2 NetSim Hub Mode_instruction: "Now use the Internet Simulator to send the\nbattleship moves. For setup, join a Room with your group, and add ships to\nyour paper board for each opponent. When playing, all communication must be\ndone through the tool, so no talking, but have fun!\r\n"
      U2L3 NetSim Hub Mode_instruction: |
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: "For this activity, connect to a\nrouter with the others in your group. Important note: The router will only\nproperly route messages where the first 4 bits are the To: address and the\nsecond 4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      U2L5 NetSim Classroom Internet_instruction: "For this activity, connect to\na router with the others in your group. The Internet Simulator now provides\na place for you to put the To and From addresses, so you don't have to type\nout the bits manually.\r\n\r\n"
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U3 - Arrays - appendItem_instruction: |
        Create an array of odd numbers 1-11
        by using appendItem. (Click to see full instructions)
      U3 - Arrays - assignment_instruction: |
        Use indexes to change the values in
        this array from 1 to 0. (Click to see full instructions)
      U3 - Arrays - assignment2_instruction: |
        Calculate the sum of three values stored
        in an array. (Click to see full instructions)
      U3 - Arrays - assignment3_instruction: |
        Increase the value of each value in
        the randomly generated array by 1. (Click to see full instructions)
      U3 - Arrays - createFirstArray_instruction: |
        Create an array of the even numbers
        from 0 to 10 and display its contents with console.log. (Click to see full
        instructions)
      U3 - Arrays - Demo App_instruction: |
        Use the "My Favorite Things" app. How
        might this app be making use of an array? (Click to see full instructions)
      U3 - Arrays - expressionsAsIndexes_instruction: |
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      U3 - Arrays - favThings addItem_instruction: |
        Write code that allows a user
        to add their own favorite things to the list. (Click to see full instructions)
      U3 - Arrays - favThings bounds_instruction: |
        Add if statements to your event
        handlers that prevent the global index from going out of bounds. (Click to
        see full instructions)
      U3 - Arrays - favThings Counting Variable_instruction: |
        Create a global variable
        for the current index and use it to display the first item in the array. (Click
        to see full instructions)
      U3 - Arrays - favThings createArray_instruction: |
        Create an array of words
        describing your favorite things. (Click to see full instructions)
      U3 - Arrays - favThings firstOutput_instruction: |
        Use setText to display the
        first item in the array. (Click to see full instructions)
      U3 - Arrays - favThings giveIDs_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - favThings keepPlaying_instruction: |
        Make any other improvements
        you want! (Click to see full instructions)
      U3 - Arrays - favThings Next_instruction: |
        Write code that allows the user
        to move forward through your list by clicking the "Next" button. (Click
        to see full instructions)
      U3 - Arrays - favThings Prev_instruction: |
        Write code that allows the user
        to move backward through your list by clicking the "Last" button. (Click
        to see full instructions)
      U3 - Arrays - favThings template_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - globalVariableIndex_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - indexPractice_instruction: |
        Write the contents of the array to
        the screen in numerical order. (Click to see full instructions)
      U3 - Arrays - insertingItems_instruction: |
        Insert items into an array to form
        a complete sentence. (Click to see full instructions)
      U3 - Arrays - insertionErrors_instruction: |
        Run each command that references
        indexes that are out of bounds and observe the results. (Click to see full
        instructions)
      U3 - Arrays - introIndex_instruction: |
        Display the first and last element in
        the array. Display the number 5 from the array. (Click to see full instructions)
      U3 - Arrays - length_instruction: |
        Use list.length to determine the length
        of each array. (Click to see full instructions)
      U3 - Arrays - lengthMinus1_instruction: |
        Use list.length - 1 to log the last
        item in the array to the console. (Click to see full instructions)
      U3 - Arrays - remove_instruction: |
        Remove items from an array to form a complete
        sentence. (Click to see full instructions)
      U3 - Arrays - stringsInArrays_instruction: |
        Write a sentence word by word by
        adding strings to an array. (Click to see full instructions)
      U3 - Canvas - 200dots_instruction: |
        Add a loop to your program that draws 200
        dots on your canvas. (Click to see full instructions)
      U3 - Canvas - appendToArray_instruction: |
        Create an array to store each event
        parameter. Append each event parameter to this array within your event handler.
        (Click to see full instructions)
      U3 - Canvas - changeToMouseMove_instruction: |
        Change your program so that dots
        are drawn at the location of the mouse as the user moves the mouse on the
        canvas. (Click to see full instructions)
      U3 - Canvas - clickToAdd_instruction: |
        Change your program so that dots are
        added to the canvas when the user clicks on it. (Click to see full instructions)
      U3 - Canvas - delete_instruction: |
        Create a button that deletes the drawing
        by clearing the canvas and removing all stored values. (Click to see full
        instructions)
      U3 - Canvas - draw at click point_instruction: |
        Change your program so that
        dots are drawn at the location of the mouse click. (Click to see full instructions)
      U3 - Canvas - freePlay_instruction: |
        Extend the functionality of one of the
        effects, or create an entirely new one of your own. (Click to see full instructions)
      U3 - Canvas - introCanvas_instruction: |
        Add a canvas to your app and set it
        to be the active canvas. Then add a large dot to your canvas. (Click to see
        full instructions)
      U3 - Canvas - movementFunction fix Orig_instruction: |
        Modify the "Original"
        button event handler so that it takes the movement of the mouse into account.
        (Click to see full instructions)
      U3 - Canvas - movementFunction_instruction: |
        Write a function that takes the
        movement of the mouse as input and generates a line width as output. (Click
        to see full instructions)
      U3 - Canvas - One Dot sprayPaint_instruction: |
        Write code that redraws your
        image using a dot whose x and y locations use offsetX and offsetY with a small
        random value added. (Click to see full instructions)
      U3 - Canvas - redrawOriginal_instruction: |
        Write a function that processes
        your array, redrawing the dots as they originally appeared. (Click to see
        full instructions)
      U3 - Canvas - redrawRandom_instruction: |
        Set up a button and event handler
        for the random function. (Click to see full instructions)
      U3 - Canvas - redrawRandom2_instruction: |
        Write a function that processes your
        array, redrawing every dot with a random size. (Click to see full instructions)
      U3 - Canvas - shiftKey_instruction: |
        Add an if statement to your event handler
        so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      U3 - Canvas - sketch_instruction: |
        Write code that redraws your image using
        a sketch effect. (Click to see full instructions)
      U3 - Canvas - sprayPaint_instruction: |
        Update the spray paint code so that
        it redraws your image using multiple random dots instead of using a nested
        for loop. (Click to see full instructions)
      U3 - Canvas - transparentDots_instruction: |
        Change the colors of your dots
        so they have a fully transparent stroke and partially transparent fill. (Click
        to see full instructions)
      U3 - Canvas - usingOffsetXY_instruction: |
        Add a console.log command inside
        the function of your event handler. Use it to display the event parameter.
        Click on the screen to see the contents of the event parameter (Click to see
        full instructions)
      U3 - Conditional Basics - 6_instruction: |
        Add a setText after the if statement
        to "Nope. Guess again." (Click to see full instructions)
      U3 - Conditionals - Combine AND and OR_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instrucitons.
      U3 - Conditionals - Combine AND OR and NOT_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instructions.)
      U3 - Conditionals - Combine AND OR Simple_instruction: |
        Write an if statement
        that uses AND and OR to display "Sleep in!" if it's the weekend and the
        user is a teenager. (Click to see full instructions.
      U3 - Conditionals - intoOr_instruction: |
        Add 2 if statements that use the OR
        operator. (Click to see full instructions)
      U3 - Conditionals - introAND_instruction: |
        Add 2 if statements that use the
        OR operator. (Click to see full instructions)
      U3 - Conditionals - Simple AND_instruction: |
        Write an if statement that uses
        AND to display "You are a teenager." if the user enters an age between 13
        and 19. (Click to see full instructions)
      U3 - Conditionals - Simple OR_instruction: |
        Write an if statement that uses
        OR to display "It's the weekend!" if the user enters a weekend day at the
        prompt. (Click to see full instructions)
      U3 - Design Mode - Console Log_instruction: |
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      U3 - Design Mode - Layers and Delete_instruction: |
        Fix the layout of the bullseye
        game. (Click to see full instructions)
      U3 - Design Mode - Multi Screens 2_instruction: |
        Make a 2 screen app which
        can switch back and forth between a black screen and a white screen using
        buttons. (Click to see detailed instructions.)
      U3 - Design Mode - Multi Screens_instruction: |
        Make a 2 screen app with a black
        screen and a white screen. (Click to see detailed instructions)
      U3 - Design Mode - Other Events_instruction: |
        Delete the button and make the
        image move to a random location when you click on it. (click to see detailed
        instructions)
      U3 - Design Mode - WTF Console Log_instruction: |
        Add a 3 console.log messages
        and test them out. (Click to see full instructions.)
      U3 - Design Mode -Recreate Beyond Buttons_instruction: |
        Recreate the game from
        the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to
        see full instructions.)
      U3 - Design Mode 1_instruction: |
        Add a large red button to your screen using
        Design Mode. (Click for full instructions.)
      U3 - Dice - Dropdown and Score_instruction: |
        Add guess and score to the Dice
        Game (Click to see full instructions)
      U3 - Dice - Dropdown with Strings_instruction: |
        Add a dropdown for difficulty
        level that prints the difficulty level in the console. (Click to see full
        instructions)
      U3 - Dice - If_instruction: |
        Show different die images for the random number
        generated. (Click to see full instructions)
      U3 - Dice - Nested_instruction: |
        Use nested if statements to make the scoring
        different for the different game levels. (Click to see full instructions)
      U3 - High Low - Debug_instruction: |
        Debug the order of the conditionals so
        that it will actually tell the user when their guess is close. (Click to see
        full instructions)
      U3 - High Low - Dropdown_instruction: |
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      U3 - High Low - Else if_instruction: |
        Add an else-if statement in order to
        tell the user if their guess is high or low instead of just wrong. (Click
        to see full instructions)
      U3 - High Low - Else_instruction: "Add an else statement so that the program\nwill tell the user when they are right and when they are wrong. (Click to\nsee full instructions)\r\n"
      U3 - High Low - If_instruction: |
        Add code to the if statement that indicates
        the user guessed the secret number. (Click to see full instructions)
      U3 - images - bee free play_instruction: Do this
      U3 - Keys - Add Image URLs_instruction: |
        Add image URLs to your array. Replace
        the text area with an image and setText with setImageURL. Then test your app!
        (Click to see full instructions)
      U3 - Keys - Buttons and Keys_instruction: |
        Have the program respond the same
        way for both clicking images on the screen and hitting the up and down keys
        on the keyboard. (Click to see full instructions)
      U3 - Keys - Demo App_instruction: |
        Play with the image scroller. Press the
        left and right arrows to progress through the images.
      U3 - Keys - Final Image Scroller_instruction: |
        Update the image scroller to
        respond to buttons and key presses. (Click to see full instructions)
      U3 - Keys - Functions_instruction: |
        Write doUpArrow and doDownArrow functions
        and call the functions instead of duplicating the code. (Click to see full
        instructions)
      U3 - Keys - Key Up and Down_instruction: |
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      U3 - Keys - Multiple Keys_instruction: |
        Play a different sound when the down
        arrow is pressed. (Click to see full instructions)
      U3 - Keys - Practice Adding Images with URL_instruction: |
        Add image URLs to
        your image array. Test out the add button. Style your image scroller. (Click
        to see full instructions)
      U3 - Keys - Words to Images_instruction: |
        Add image URLs to your image array.
        Test out the add button. Style your image scroller. (Click to see full instructions)
      U3 - Loops -  9 Part 2_instruction: |
        Change the boolean expression for the
        while loop so that it will roll until both dice are greater than 3. (Click
        to see full instructions)
      U3 - Loops -  Complex Condition_instruction: |
        Change the boolean expression
        for the while loop so that it will stop when both dice are greater than or
        equal to 5. (Click to see full instructions)
      U3 - Loops - 1_instruction: |
        Change the condition for the while loop to check
        if the variable num is less than 90. (Click to see full instructions)
      U3 - Loops - 10_instruction: |
        Write a program that simulates the rolling of
        two dice. Roll the dice repeatedly until the sum of the dice is either 7 or
        11.
      U3 - Loops - 11_instruction: |
        Fix the condition so that it keeps rolling the
        die as long as the value is not a 2 or a 3 instead of rolling infinitely.
        (Click to see full instructions)
      U3 - Loops - 12_instruction: |
        Change the code so that it prints the string
        "Hi" 5 times. (Click to see full instructions)
      U3 - Loops - 13_instruction: |
        Update the code to count up by 3 instead of 1.
        (Click to see full instructions)
      U3 - Loops - 14_instruction: |
        Change the loop condition to prevent the infinite
        loop and stop counting once the count is past 30. (Click to see full instructions)
      U3 - Loops - 15_instruction: |
        Count the number of times the sum of the dice
        is 12. (Click to see full instructions)
      U3 - Loops - 16_instruction: |
        Find out how many times you have to roll to get
        the sum of 7 100 times (Click to see full instructions)
      U3 - Loops - 2_instruction: |
        Try creating an infinite loop using !=, > and
        <. (Click to see full instructions)
      U3 - Loops - 3_instruction: |
        Change the if statement to a while loop so the
        program will run until it rolls a 6. (Click to see full instructions)
      U3 - Loops - 4_instruction: |2
         Use the Debug Commands to make a list of all
        the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - 5_instruction: |
        Add code inside the while loop which will update
        the variable num so that the condition will eventually become false. (Click
        to see full instructions)
      U3 - Loops - 6_instruction: |
        Fix the problem so the loop will run at least
        once. Change the initial value of num to a dummy value such as -1. (Click
        to see full instructions)
      U3 - Loops - 7_instruction: |
        Without adding any lines of code, reorder the
        code so that it prints all the values of num. (Click to see full instructions)
      U3 - Loops - 8_instruction: |
        Debug which number is not getting printed and
        add a write statement to display that value. (Click to see full instructions)
      U3 - Loops - 9_instruction: |2
         Modify the condition so that it keeps rolling
        as long as both are less than 3. (Click to see full instructions)
      U3 - Loops - Continue_instruction: |2
         Use the Debug Commands to to make a list
        of all the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - minus = operator_instruction: |
        Update the code to use the -= operator
        to count from 30 down to 0 by 3's. (Click to see full instructions)
      U3 - Loops - Minus Minus_instruction: |
        Change the code to count down from 10
        to 1. (Click to see full instructions)
      U3 - Loops - plus and minus = operator_instruction: |
        Update the code to use
        the += operator. (Click to see full instructions)
      U3 - Loops - Plus Plus_instruction: |
        Change the code to use count++ instead
        of count = count + 1.  (Click to see full instructions)
      U3 - Loops - Typing in Console_instruction: |
        Use console to check the ending
        value of num. (Click to see full instructions)
      U3 - Loops And Arrays - Add 5_instruction: |
        Add 5 to all the values in an array
        (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 1_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 2_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Counting Times_instruction: |
        Count the number of times
        5 appears in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Divid by 2_instruction: |
        Divide every value in the
        array by 2. (Click to see full instructions)
      U3 - Loops And Arrays - Find Max_instruction: |
        Design a function that displays
        the smallest number in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Find Min_instruction: |
        Complete the findMinVal function
        to find and display the smallest value in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Functions that Return Value_instruction: |
        Call findMin
        within the console.log statement to calculate the minimum of two values.  (Click
        to see full instructions)
      U3 - Loops And Arrays - General Search Param_instruction: |
        Add a second parameter
        to the search function for the value to search for.  (Click to see full instructions)
      U3 - Loops And Arrays - Intro For Loop_instruction: |
        Add a for loop with a
        console.log inside and test out the 3 pieces of the for loop. (Click to see
        full instructions)
      U3 - Loops And Arrays - Linear Search_instruction: |
        Visit every element in
        the array and display "true" if the value is a 5, and "false" otherwise.
        (Click to see full instructions)
      U3 - Loops And Arrays - Loop Array If_instruction: |
        Use an if statement to
        only display the values in the array that are greater than 5. (Click to see
        full instructions)
      U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: |
        Create
        a function that takes a list parameter and prints if the list contains a 5.
        (Click to see full instructions)
      U3 - Loops And Arrays - Make it a Function_instruction: |
        Move the code that
        searches the list for a 5 into a function called "search". (Click to see
        full instructions)
      U3 - Loops And Arrays - Multiple Returns_instruction: |
        Test out the return
        values of the findMax function.  (Click to see full instructions)
      U3 - Loops And Arrays - Print Array_instruction: |
        Use a for loop to print out
        all the values in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Printing Single True_instruction: |
        Process the array
        and display a single "true" if the array contains a 5 or a single "false"
        if it does not.  (Click to see full instructions)
      U3 - Loops And Arrays - Return Index_instruction: |
        Make the search function
        return the index of the search value in the array. (Click to see full instructions)
      U3 - Loops And Arrays - Return Value_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Loops And Arrays - Search and Remove_instruction: |
        Search for 5 in the
        array and remove it from the array. (Click to see full instructions)
      U3 - Loops And Arrays - Search with Boolean Var_instruction: |
        Make a boolean
        variable to use as a flag to keep track of whether there is a 5 in the array.
        (Click to see full instructions)
      U3 - Loops And Arrays - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Movie Bot - Multiple If Sequences_instruction: |
        Add another set of if,
        else if, and else statements inside the question if statement to check for
        keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      U3 - Movie Bot - Nested Motivation_instruction: |
        Add a separate set of if statements
        to check for a "?" in the input. (Click to see full instructions)
      U3 - Movie Bot - toLowerCase_instruction: |
        Use the toLowerCase command to change
        all user input into lowercase letters after they enter it. (Click to see full
        instructions)
      U3 - Movie Bot - When Multiple If Statements_instruction: |
        Add an if and else-if
        statement that checks for please and thank you. (Click to see full instructions)
      U3 - Practice Create Performance Task_instruction: |
        Design and implement your
        practice Create Performance Task. (Click to see full instructions)
      U3 - Read Record - 1.2_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 1.5_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 1.6_instruction: "Console.log the records returned by a\ncall to readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 1_instruction: "Console.log the records returned by a call\nto readRecords. (Click to see full instructions)\r\n"
      U3 - Read Record - 2_instruction: "Change the table name so that the records\nare read from the new table.(Click to see full instructions)\r\n"
      U3 - Read Record - 3_instruction: "Change the name of the table in a readRecords\ncommand to read from a table that does not exist. (Click to see full instructions)\r\n"
      U3 - Read Record - 4.1_instruction: "Print out each record return from the\nreadRecords call individually. (Click to see full instructions)\r\n"
      U3 - Read Record - 4_instruction: "Print out each record return from the readRecords\ncall individually. (Click to see full instructions)\r\n"
      U3 - Read Record - 5 and half_instruction: "Print out the name of each movie\nin the records return from the readRecords call. (Click to see full instructions)\r\n"
      U3 - Read Record - 5_instruction: "Print out the name of each movie in the\nrecords return from the readRecords call. (Click to see full instructions)\r\n"
      U3 - Return Values - constrainTurtle_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Return Values - debuggingConstrain_instruction: |
        Correct the error in
        constrain so that it returns the appropriate value.  (Click to see full instructions)
      U3 - Return Values - debuggingMaxVal_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - debuggingReturns_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - increase1_instruction: |
        Call the increase function within
        moveForward, write, and console.log.  (Click to see full instructions)
      U3 - Return Values - increase2_instruction: |
        Change the increase function to
        return 3 times the input value. (Click to see full instructions)
      U3 - Return Values - min1_instruction: |
        Test out the return values of the findMax
        function.  (Click to see full instructions)
      U3 - Return Values - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - useMinVal_instruction: |
        Call minVal within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - wrapTurtle_instruction: |
        Write wrap in this simple app
        to let the turtle "wrap" to the other side of the screen when it goes off.  (Click
        to see full instructions)
      U3 - Return Values - writeMaxVal_instruction: |
        Write the function maxVal and
        then use it within the console.log statement to calculate the maximum of two
        values.  (Click to see full instructions)
      U3 - Search Terms - 1_instruction: "Create an array of all the movies made\nin 2008 and print it out. (Click to see full instructions)\r\n"
      U3 - Search Terms - 2_instruction: "Print out all the movies with year 2008\nusing the readRecords search terms. (Click to see full instructions)\r\n"
      U3 - Search Terms - 3_instruction: "Print whether or not there are movies matching\nthe search criteria (Click to see full instructions)\r\n"
      U3 - Search Terms - 4_instruction: "Print whether or not there are movies matching\nthe search criteria (Click to see full instructions)\r\n"
      U3 - Search Terms - 5_instruction: "Print out the cities that are in California\nor have a population of 2,000,000. (Click to see full instructions)\r\n"
      U3 - Search Terms - 6_instruction: "Print out the cities that are in California\nor have a population of 2,000,000. (Click to see full instructions)\r\n"
      U3 - Simple Drawing - Comments_instruction: Do this
      U3 - Simple Drawing - Ellipse and No Fill_instruction: Do this
      U3 - Simple Drawing - Fill_instruction: Do This
      U3 - Simple Drawing - No Fill_instruction: Do this
      U3 - Simple Drawing - Order of Blocks_instruction: Do this
      U3 - Simple Drawing - Oval_instruction: Do This
      U3 - Simple Drawing - Personal Drawing_instruction: DO This
      U3 - Simple Drawing - Rectangle Width and Height_instruction: Do This
      U3 - Simple Drawing - Rectangle_instruction: Do This
      U3 - Simple Drawing - regular polygon_instruction: Do this
      U3 - Simple Drawing - Road Ellipse_instruction: Do This
      U3 - Simple Drawing - Road Rects and Color_instruction: Do This
      U3 - Simple Drawing - Simple Shape Drawing_instruction: Do This
      U3 - Simple Drawing - Stroke and Stroke Weight_instruction: Do this
      U3 - Simple Drawing - text_instruction: Do This
      U3 - Simple Drawing - X and Y values_instruction: Do This
      U3 - Simulation - 1_instruction: |
        Use a while loop to "flip a coin 10 times"
        and write the values to the screen. (Click to see full instructions)
      U3 - Simulation - 2.1_instruction: |
        Change your looping condition so the simulation
        runs until there are 5 heads flipped. (Click to see full instructions)
      U3 - Simulation - 2.5_instruction: |
        Run your simulation to get the full 10,000
        heads! How long did it take? (Click to see full instructions)
      U3 - Simulation - 2_instruction: |
        Keep track of how many heads (1's) your
        program generates and print the results to the screen. (Click to see full
        instructions)
      U3 - Simulation - 3_instruction: "Add functionality that counts how many heads\nin a row are flipped. (Click to see full instructions)\r\n"
      U3 - Simulation - 4_instruction: |
        Update your while loop's condition so the
        the coin flips until there are three heads in a row. (Click to see full instructions)
      U3 - Simulation - 5_instruction: |
        Change your while loop to run until you get
        a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      U3 - Simulation - 6_instruction: |
        Keep adding to your simulation. What do you
        want to explore next? (Click to see full instructions)
      U3 - Simulation - App_instruction: |
        Change your code to run the full simulation
        with 10,000 coins. What was your longest streak of heads? (Click to see full
        instructions)
      U3 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3 - Sprites - Intro Sprites_instruction: Do This
      U3 - Sprites and Mod - Create  and Draw Sprite_instruction: Do This
      U3 - Sprites and Mod - Mouse Width and Height_instruction: Do this
      U3 - Sprites and Mod - Mouse X and Y_instruction: Do this
      U3 - Sprites and Mod - Rand Around Mouse_instruction: Do this
      U3 - Sprites and Mod - Rand Shape Color_instruction: Do This
      U3 - Sprites and Mod - Shape Color_instruction: Do This
      U3 - Sprites and Mod - two sprites_instruction: Do This
      U3 - Sprites and Mod - Wrap Many Squares_instruction: Do This
      U3 - Sprites and Mod - X and Y Prop_instruction: Do This
      U3 - User Input - Save getText To Variable_instruction: |
        Save the age and name
        of the user in variables (Click to see full instructions)
      U3 - User Input - Saving After Input_instruction: |
        Save the age of the user
        in a variable using getText() (Click to see full instructions)
      U3 - User Input and String -  Concat_instruction: |
        Output a message about age
        in a Text Area (Click to see full instructions)
      U3 - Variables - Clicker Game_instruction: |
        Create your improved Chaser-Game
        here. (Click to see full instructions)
      U3 - Variables - Debug Scope_instruction: |
        Why isn't the value of foo changing
        correctly? Make a guess. (Click to see full instructions)
      U3 - Variables - Debugging with Turtle_instruction: |
        Use your new debugging
        techniques to get the code to run correctly (Click to see full instructions)
      U3 - Variables - Decrement_instruction: |
        Decrement the value of the variable.
        (Click to see full instructions)
      U3 - Variables - Identify Variables_instruction: |
        Identify the values printing
        in the terminal with console.log statements. (Click to see full instructions)
      U3 - Variables - Increment_instruction: |
        Use the console.log debugging technique
        to see what is happening in this example. Add another variable and increment
        its value. (Click to see full instructions)
      U3 - Variables - Incrementing Variables_instruction: |
        Create a repeat loop
        for the repeated code and use increment to recreate the original program with
        less lines of code! (Click to see full instructions)
      U3 - Variables - Read Using Turtle_instruction: |
        Create a second set of variables
        for x and y position. Move turtle to that new location. (Click to see full
        instructions)
      U3 - Variables - Reassigning Variables with Console.log_instruction: |
        Add another
        reassignment statement at the end of the code to change the value of the variable
        at second time. (Click to see full instructions)
      U3 - Variables - Set to Expression with Other Variables and Turtle_instruction: |
        (click
        to see full instructions)
      U3 - Variables - Set to Expression with Other Variables_instruction: |
        Write
        an expression that calculates the player's total score and stores it in the
        totalScore variable. The calculation is: the player's points times lives
        divided by the total time. (click to see full instructions)
      U3 - Variables - Set to Expression with Turtle_instruction: |
        (click to see
        full)
      U3 - Variables - Set to Expression_instruction: |
        Test out the new expressions.
        (Click to see full instructions)
      U3 Digital Assistant Design_instruction: |
        Pick a topic for your Digital Assistant
        and create the basic layout with a text input and text area. (Click to show
        full instructions)
      U3 Digital Assistant Set Text_instruction: |
        Have your digital assistant repeat
        back what the user types and include a canned response. (Click to see full
        instructions)
      U3 Digital Assistant Target - Mehal_instruction: |
        Try out a demo of the Digital
        Assistant!
      U3 Digital Assistant Target_instruction: Try out a demo of the Digital Assistant!
      U3 Digital Assistant Template_instruction: This is a project template!
      U3 Digital_instruction: |
        Choose a specialization topic for your digital assistant.
        Create a basic digital assistant that takes the user's input and displays
        back a default response.
      U3 full clicker demo_instruction: 'Clicker game - Try it out!'
      U3 mehal's clone_instruction: Try out a demo of the Digital Assistant!
      U3 Variables consolelog_instruction: |
        Use the write block to display the value
        of size
      U3 Variables flower example_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables gray square_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables make a square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      U3 Variables misconceptions try it_instruction: |
        Test out your predictions
        from the previous level.
      U3 Variables randomize your square_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      U3 Variables write_instruction: |
        Use the write block to display the value of
        size
      U3- Variables - Assign Random For Turtle Draw_instruction: |
        Try writing the
        same code in text mode.
      U3- Variables - Changing the Value_instruction: |
        Update the value of 'turnAmount'
        before each moveForward so the turtle turns a different amount each time.
        (Click to see full instructions)
      U3- Variables - Create And Assign_instruction: |
        On one line add a variable
        called "lives" and assign it the value 3. Print it to the console. (Click
        to see full instructions)
      U3- Variables - Text Mode_instruction: |
        1. Switch to text mode and type instructions;
        2. drag blocks out into text mode; 3. experiment with code completion
      U3-Design Mode-ID and Event Handler_instruction: |
        Add an event handler for
        the button using the "Insert and show" link in the Design Mode Events tab.
        (Click to see full instructions).
      U3-Design Mode-ID_instruction: |
        Using the Design Mode Events change the button
        ID and update the code to match. (Click to see detail instructions).
      U3-Design Mode-Image_instruction: |
        Recreate the "Chaser Game" from the last
        lesson using Design Mode. (Click to see full instructions.)
      U313 drag Two Buttons_instruction: |
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 eventsDetails_instruction: |
        Run a program with two buttons that have the
        same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 Two Buttons with Ids_instruction: |
        Predict what will happen. Once you've
        made a prediction, run the code to see what happens. (Click to see full instructions)
      U3L03 - draw rect function_instruction: "Write a function called drawRectangle().\r\n(Click\nto see full instructions)"
      U3L03 - draw step_instruction: |
        Write the drawStep function. (Click to see
        full instructions)
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Define a function called turnAround.
        Call the function and then move the turtle forward. (Click to see full instructions)
      U3L03 define turnRight and draw a rectangle_instruction: |
        Define a function
        called right() that turns the turtle to the right. Then use this function
        to draw a rectangle, as shown below. (Click to see full instructions)
      U3L03 Draw a T using turnAround_instruction: |
        Draw a plus sign using the provided
        version of turnAround().  (Click to see full instructions)
      U3L03 draw diamond_instruction: |
        Create a function called drawDiamond() that
        makes use of your previous work to draw the complete diamond. (Click to see
        full instructions)
      U3L03 Three Steps_instruction: |
        Define a function called drawSide() which draws
        three steps and moves the turtle to prepare for the next side (Click to see
        full instructions)
      U3L04 - 3 by 3 with functions_instruction: |
        Make the 3x3 square as efficiently
        as you can. (Click to see full instructions)
      U3L04 - snowflake_instruction: |
        Create the design by breaking it down into
        layers of functions. (Click to see full instructions)
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 - moveForwardwithParams_instruction: |
        Use a single command to move the
        turtle to the edge of the screen. (Click to see full instructions)
      U3L06 Challenge 1 triangle_instruction: |
        Use the parameterized versions of
        the turtle commands to create a triangle with sides 100 pixels long. (Click
        to see full instructions)
      U3L06 Challenge 2 purple square_instruction: |
        Read the documentation for penColor()
        and penWidth() before using them to draw the blue square.
      U3L06 Challenge 3 fill pink_instruction: |
        Fill in the background of the screen
        with your favorite color. (Click to see full instructions)
      U3L06 Challenge 4 bullseye_instruction: |
        Create the bullseye using hexadecimal
        colors and dot(). (Click to see full instructions)
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: |
        Read the documentation for the "arcLeft"
        and "arcRight" commands and then draw the squiggles as shown. 
      U3L06 Challenge 7 smiley face_instruction: |
        Use turnTo() and moveTo() to help
        draw a smiley face. (Click to see full instructions)
      U3L06 Challenge 8 make your own_instruction: |
        Create a drawing of your own.
        (Click to see full instructions)
      U3L07 - allSeaGrass_instruction: |
        Add 50 pieces of seagrass to the image by
        writing drawAllSeagrass with a loop. (Click to see full instructions)
      U3L07 - bubbles_instruction: |
        Add 200 bubbles to the image by writing drawAllBubbles
        with a loop. (Click to see full instructions)
      U3L07 - callingFunctionsInLoops_instruction: |
        Call the function within the
        loop to complete the figure. (Click to see full instructions)
      U3L07 - createTriangleParam_instruction: |
        Define a function that accepts a
        parameter to match the function calls and complete the image. (Click to see
        full instructions)
      U3L07 - fish_instruction: |
        Add 15 fish to the image by writing drawAllFish
        with a loop. (Click to see full instructions)
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play! Use what you learned
        from loops and random to make your own little scene. Have fun.
      U3L07 - introSquare_instruction: |
        Use a loop to draw a square. Then add another
        loop to draw many squares each one rotated some amount. (Click to see full
        instructions)
      U3L07 - loopsWithRandom_instruction: |
        Increase the number of iterations to
        fill the screen with white. (Click to see full instructions)
      U3L07 - randomDots1_instruction: |
        Increase the number of iterations to fully
        fill the screen with random dots. (Click to see full instructions)
      U3L07 - randomSquare_instruction: |
        Draw the figure using a loop. (Click to
        see full instructions)
      U3L07 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that controls
        the number of waves in the grass. (Click to see full instructions)
      U3L07 - seaStar_instruction: |
        Add 5 sea stars to the image by writing drawAllSeaStars
        with a loop. (Click to see full instructions)
      U3L07 - Starry Night Starter Code_instruction: |
        You are going to use loops
        and random numbers to generate an image of starry night sky similar to one
        shown here.  We have given you some starter code to generate the ground and
        sky (just two giant dots), you will add code to this project to make the stars,
        grass, and moon.  All of the effects are clever applications of turtle dots,
        lines, and colors.  To get started, follow the series of steps suggested in
        the accompanying worksheet. 
      U3L07 - sunBeams_instruction: |
        Add 100 sunbeams to the image by writing drawAllSunbeams
        with a loop. (Click to see full instructions)
      U3L07 - topDownDesign_instruction: |
        Get comfortable with the structure of this
        program, then move on to the next exercise. (Click to see full instructions)
      U3L08 - createTwoParamTriangle_instruction: |
        Define a function called drawTriangle()
        that accepts two parameters to set the size and width of the triangle. (Click
        to see full instructions)
      U3L08 - digitalScene_instruction: |
        Create the functions you were assigned as
        part of your digital scene. (Click to see full instructions)
      U3L08 - drawSquaresWithParams_instruction: |
        Write drawSmallSquare() to draw
        a 25px square. (Click to see full instructions)
      U3L08 - drawSquareWithParam - for video_instruction: |
        Use drawSquare() to recreate
        the image of both squares, this time using parameters. (Click to see full
        instructions)
      U3L08 - drawSquareWithParam_instruction: |
        Use drawSquare() to recreate the
        image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L08 - fish_instruction: |
        Add a parameter to drawFish that changes the size
        of the fish drawn. (Click to see full instructions)
      U3L08 - freePlay_instruction: |
        Keep adding to your image by making more calls
        to your new functions with parameters. (Click to see full instructions)
      U3L08 - individualCode_instruction: |
        Create the functions you were assigned
        as part of your digital scene. (Click to see full instructions)
      U3L08 - introUnderTheSea_instruction: |
        Add an extra fish, starfish, and piece
        of sea grass to the image. Look at, but don't change, the functions that
        create them. (Click to see full instructions)
      U3L08 - multiParamFish_instruction: |
        Add three parameters to your drawFish
        function to accept red, green and blue values to make your fish different
        colors. (Click to see full instructions)
      U3L08 - multipleLayersofParams_instruction: |
        Call drawPlusSign() to complete
        the image. (Click to see full instructions)
      U3L08 - paramsToStarfish_instruction: |
        Add a parameter to drawStarfish that
        changes the size of the starfish drawn. (Click to see full instructions)
      U3L08 - randomInput_instruction: |
        Use the randomNumber() blocks to test the
        functions you designed with random input. (Click to see full instructions)
      U3L08 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that changes
        the size of the piece of seagrass drawn. (Click to see full instructions)
      U3L08 - squareTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L08 - starFish_instruction: |
        Add an extra fish, starfish, and piece of sea
        grass to the image. Look at, but don't change, the functions that create
        them. (Click to see full instructions)
      U3L08 - triangleTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L1 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3L12 Chaser Template_instruction: This is a project template!
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: "The last problem was an example\nof syntax error.  App Lab did not understand which object it should be listening\nto for a \"click\" event so it showed an error message in the console to let\nyou know.  Another kind of error is a logical error - the program is valid,\nbut it's not doing what you want it to do.\r\n\r\nThis program has 2 errors.\nA (tricky) syntax error and logical error.  Find them, fix them, and make\nthe program work as expected."
      U3L13 - Debug Id Problem_instruction: |
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      U3L13 - Debugging 1_instruction: |
        Debug the program by verifying your IDs are
        being referenced properly. (Click to see full instructions)
      U3L13 - Debugging 2_instruction: |
        Debug the program by properly ordering your
        button commands and event handlers. (Click to see full instructions)
      U3L13 - Debugging 3_instruction: |
        Debug the program by fixing the logical error
        within the program. (Click to see full instructions)
      U3L13 - Project_instruction: |
        Create your multi-screen app. (Click to see full
        instructions.)
      U3L13 - Turtle Driver Project_instruction: |
        Create a "turtle driver" that
        includes buttons to move the turtle forward and turn it left and right. (Click
        to see full instructions)
      U3L13 - Turtle move with button_instruction: |
        Add a button that moves the turtle
        when clicked.  (Click to see full instructions)
      U3L13 eventsDetails_instruction: |
        Add an event handler to the button to move
        the turtle forward. (Click to see full instructions)
      U3L14 - Assigning Random Value_instruction: |
        Write a program that simulates
        the rolling of two dice and reports their individual values as well as the
        sum. (click to see full instructions)
      U3L14 - concatenate simple_instruction: |
        Modify the write statement on line
        3 to combine text and variables together to make the app display a single
        line of text that shows the player's lives and score. (click to see full
        instructions)
      U3L14 - Mini Calculator embed_instruction: |
        You will be prompted for two numbers,
        one right after the other.  See what happens.  Enter different numbers until
        you get the idea.
      U3L14 - moving memory challenge1_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge2_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge3_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge4_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge5_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge6_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L14 - User Input Division calculator_instruction: |
        Write a program that acts
        as a simple calculator. (click to see full instructions)
      U3L14 - Variable ReAssignment pt2_instruction: |
        Trace the code and predict
        what you think will be printed to the console. Then add a console.log statement
        at the end of the program to see the last value of someNum to see if your
        full prediction is correct. (click to see full Instructions)
      U3L15 - add code to make count down work_instruction: |
        Write code to make the
        down arrow work as expected. (Click to see full instructions)
      U3L15 - Add reset button to UpDown app_instruction: |
        Add code so that clicking
        the start over button will reset the game and send you back to the main screen.
        (Click to see full instructions)
      U3L15 - clicker update score_instruction: |
        Add code to update the score when
        the apple is clicked. (Click to see full instructions)
      U3L15 - count upDown bug forget to set text_instruction: |
        Find the bug in the
        program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug logic error wrong update_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug var not created globally_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - Debug forget to update var on reset in UpDown app_instruction: |
        Run
        the app, and click the up or down button until you get to the gameOverScreen.
        Click 'Start Over' and try the app again. Find and fix the issue in the
        code. (Click to see full instructions)
      U3L15 - Debug if never triggers in UpDown app_instruction: |
        Run the app and
        use the up and down arrows to try to hit the gameOverScreen. You can't! Find
        and fix the issue in the code. (Click to see full instructions)
      U3L15 - Debugging Simple If-statements =v==_instruction: |
        Run the app, and
        click the up button. Then restart and run it again, and click the down button.
        Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L15 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L15 - mini clicker update score_instruction: |
        Add code to update the score
        when the apple is clicked. (Click to see full instructions)
      U3L15 - practice with setText_instruction: |
        Use setText to complete the click
        event handler for the down arrow. (Click to see full instructions)
      U3L15 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L15 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer working. (Click to see full instructions)
      U3L15 click add lives_instruction: |
        Add lives to the clicker game that decrement
        by 1 when the background image is clicked (Click to see full instructions)
      U3L15 full clicker app_instruction: |
        Complete your clicker game! (Click to
        see full instructions)
      U3L16 - challenge say hi app_instruction: |
        Write a greeting to the user when
        they hit 'enter' in the text input, using the 'change' event. (Click to
        see full instructions)
      U3L16 - chaserApp_instruction: |
        Create your own "Chaser Game." (Click to
        see full instructions)
      U3L16 - chooseImages_instruction: |
        Replace the image in your application with
        one of your own. (Click to see full instructions)
      U3L16 - doubleQuotes_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: |
        Introducing objects other than
        buttons! - textLabels and images.  First try replacing your button with a
        textLabel.  Will the text respond to events just like the button?  Try connecting
        an event handler to it.  We've started you out with code similar to the result
        of the last level, you can copy your code from that level into here if you
        prefer. 
      U3L16 - images_instruction: |
        Introducing Images.  Try replacing the textLabel
        with an image..  Will the image respond to events just like the button?  Try
        connecting an event handler to it.  We've started you out with code similar
        to the result of the last level, you can copy your code from that level into
        here if you prefer. 
      U3L16 - intro getText_instruction: |
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      U3L16 - introSetPosition_instruction: |
        Move the buttons to the bottom of the
        screen. (Click to see full instructions)
      U3L16 - introStrings_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - nameAgeTemplate_instruction: |
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      U3L16 - newEventTypes_instruction: |
        Experiment with different event types and
        select the one that you think is best. (Click to see full instructions)
      U3L16 - outputWithTextArea_instruction: |
        Output a message to the 'textArea'
        (Click to see full instructions)
      U3L16 - projectTemplate_instruction: |
        Create your own "Chaser App". (Click
        to see full instructions)
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: |
        Modify the code so that the turtle
        moves to a random screen location when the button is clicked. (Click to see
        full instructions)
      U3L16 - singleSetPosition_instruction: |
        Move the button to the middle of the
        screen. (Click to see full instructions)
      U3L16 - stringsVsNumbers_instruction: |
        Run the program to see how strings and
        numbers behave with different arithmetic operators. (Click to see full instructions)
      U3L16 - text labels_instruction: |
        Use the textLabel command to replace the
        button in your program with a text label. (Click to see full instructions)
      U3L16 - textInput getText write_instruction: |
        Add an Text Input box for the
        name and age. (Click to see full instructions)
      U3L16 - toUpper_instruction: |
        Make the name of the user appear in uppercase
        (Click to see full instructions)
      U3L16 - use images_instruction: |
        Use the image command to replace the text
        label in your program with an image. (Click to see full instructions)
      U3L16 Mad Lib Clear Input_instruction: |
        Clear the user's previous text when
        the Play Again button is clicked (Click to see full instructions) 
      U3L16 Mad Lib Demo_instruction: 'Mad Libs Demo - Try it out!'
      U3L16 Mad Lib getText_instruction: |
        Before setting the text area with your
        Mad Libs outline, get the user's text and incorporate their responses. (Click
        to see full instructions) 
      U3L16 Mad Lib setText_instruction: |
        When the Next button is clicked, set the
        text area to have the main outline of your How-to Mad Libs (without the user's
        input). (Click to see full instructions) 
      U3L16 Mad Lib Student Setup_instruction: |
        Back to Mad Libs: To get started,
        set up the two screens for your Mad Libs app (Click to show full instructions)
      U3L16 Mad Lib toUpper_instruction: |
        Apply the toUpperCase and toLowerCase string
        functions to the user's text. (Click to see full instructions) 
      U3L17 - getAndSetKeyValue_instruction: |
        Create an image like app. (Click to
        see full instructions)
      U3L17 - getKeyValue_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introCallbacks_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - readKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - setKeyValue_instruction: |
        Create and update your key value pairs using
        setKeyValue. (Click to see full instructions)
      U3L17 - twoSetKeyValue_instruction: |
        Run the program several times to observe
        how often setKeyValue commands arrive out of order. (Click to see full instructions)
      U3L18 comparison operators_instruction: |
        Use console.log to print out the different
        boolean expressions below to see what information they return. (Click to see
        full instructions)
      U3L18 comparison operators_for_video_instruction: |
        Use `console.log` to print
        out the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      U3L19 - Clicker Game Freeplay Area_instruction: |
        Use this App Lab area to improve
        your clicker game.  You should start by copy/pasting the code from your old
        game here.  We're showing a more full set of blocks in the toolbox - some
        of the things you might not have used yet.  Feel free to explore then and
        experiment if you want to.  Everything else you need should be shown.  Have
        fun!
      U3L19 - Debugging with consoleLog_instruction: |
        Add console.log() statements
        to find out the value of a and b after the first reassignment statement a
        = b; (Click to see full instructions)
      U3L19 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L19 - do concatenate string with var_instruction: "We've given you a piece\nof code from the previous screen.  Try changing the value assigned to foo\nto see the string change. \r\nDo this: \r\n1. Try changing the value assigned\nto foo to see the string change. \r\n2. By only modifying the lines of code\nthat were given to you, try to get the output to say: “The value of foo is:\n9.  And isn’t that fine.” \r\n"
      U3L19 - fix the var name syntax error v2_instruction: |
        Fix the error and get
        it to print the value of both variables (Click to see full instructions)
      U3L19 - fix the var name syntax error_instruction: |
        Fix the error and get it
        to print the value of both variables (Click to see full instructions)
      U3L19 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L19 - practice with setText_instruction: |
        Add another button that changes
        the text to the value of a new variable. (Click to see full instructions)
      U3L19 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L19 - Target Clicker App_instruction: |
        Investigate the new elements of the
        'chaser-game'
      U3L19 - test reassignment of two vars_instruction: |
        Predict the value of a
        and b. Add console.log statements to find out the actual value of a and b.
        (Click for full instructions)
      U3L19 - three basic ops of variables_instruction: |
        Add another variable called
        "lives" and set the value to 3. Print the value of the variable to the console.
        (Click to see full instructions)
      U3L19 - try out console log_instruction: "Try out console.log.  Do this: replace\nthe statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).  Run\nthe program and you should see the output show up in the console area below\nthe workspace.  Then try adding a few more console.log statements.  Display\nsome text.  Make another variable and display that.  \r\nThe app screen will\nbe blank -- that's the point.  With console.log you can test output behind\nthe scenes in a way the user cannot see.  \r\n\r\n\r\nGIF: U3L19-useconsolelog.gif"
      U3L19 - up down count practice app_instruction: |
        Set up the down button to
        decrease the value of count by 1 each time it is clicked. (Click to see full
        instructions)
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        Make a prediction
        about the ending values of a, b, and c. Then use console.log to check your
        understanding (Click to see full instructions)
      U3L19 - variable reassignment part 1_instruction: |
        Predict the value of a and
        b. Add console.log statements to find out the actual value of a and b. (Click
        for full instructions)
      U3L19 - variable scope problem 2_instruction: |
        What is happening with foo?
        Play with the level to try to figure it out. (Click to see full instructions)
      U3L19 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer work. (Click to see full instructions)
      U3L19 - write var and string with same name v2_instruction: |
        Fix the code so
        that the values of both variables print to the console. (Click to see full
        instructions)
      U3L19 - write var and string with same name_instruction: |
        Fix the code so that
        the value of both variables prints to the console. (Click to see full instructions)
      U3L2 Using Simple Commands (no tooltips)_instruction: |
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      U3L2 Using Simple Commands_instruction: |
        Draw a 1x1 square above and to the
        left of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: |
        Add if, else if, and else statements
        to detect the movie genres Comedy, Romance, Action, and Horror. (Click to
        see full instructions)
      U3L23 Chatbot Intro 1a_instruction: |
        Store the user's input inside a variable
        and log it to the console.
      U3L23 Chatbot Intro 2_instruction: |
        Use string concatenation to store the user's
        input and assistant's answer into the conversation variable using the format
        "User: <input><bot name>: <default response>" . Log the conversation to
        the console.
      U3L23 Chatbot Intro 2a_instruction: |
        Display the conversation onto the "text_area"
        element. Optional: clear the user's input after every "change" event.
      U3L23 Chatbot Intro 3_instruction: |
        Add newline characters "\
        " to separate
        the user's input and the computer's response.
      U3L23 Chatbot Intro 4_instruction: |
        Use this level to make your chatbot look
        and work better!
      U3L23 Chatbot Intro_instruction: |
        Choose a specialization topic for your digital
        assistant. Create a basic digital assistant that takes the user's input and
        displays back a default response.
      U3L23 Digital Assistant 1_instruction: |
        Set the text_area element to display
        the user's input from the text_input element.
      U3L23 Digital Assistant 2_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 3_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 4_instruction: |
        Display the user's input and the digital
        assistant's response on different lines.
      U3L23 Digital Assistant 5_instruction: |
        Start the user's command with the
        phrase "User:" and the digital assistant's response with the phrase "Bot:"
      U3L23 Digital Assistant 6_instruction: |
        When the user hits Run, display the
        text "I'm a generic digital assistant. Ask me anything!"
      U3L24 Basic String Parsing 1_instruction: |
        Use the function "userInput.indexOf(<food>)"
        to check if the strings "pizza" or "soup" are anywhere in the user's
        response.
      U3L24 Chatbot Basic Conditionals_instruction: |
        Check out the project description
        for instructions. (Click to see full instructions.)
      U3L24 Chatbot Conditionals 2_instruction: |
        Adjust the "if" block to make
        the bot respond "I don't know that color." if the user types anything besides
        "blue"
      U3L24 Chatbot Conditionals 3_instruction: |
        Adjust the "if/else" block to
        make the bot respond to the colors blue, red, and green, and to two additional
        colors.
      U3L24 Chatbot Keyword Record_instruction: |
        Use the next level to record your
        digital assistant's keywords/phrases.
      U3L24 Chatbot Nested Conditionals_instruction: |
        Add a chained conditional with
        at least 3 "else if" statements to your personal assistant.
      U3L24 introIncludes_instruction: |
        Practice using the includes command. (Click
        to see full instructions)
      U3L24 Nested Conditionals 1_instruction: |
        Change all of the boolean expressions
        to use includes instead of ==. (Click to see full instructions)
      U3L24 Nested Conditionals 2_instruction: |
        Nest your movie genre if statements
        inside the if statements to check for a ? in the input. 
      U3L24 Nested Conditionals Bugs 2_instruction: |
        Fix the problem with the code
        so that all the conditions can be reached. (Click to see full instructions)
      U3L24 Nested Conditionals Bugs 3_instruction: |
        Fix the bugs that still exist
        in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs_instruction: |
        Expose the bugs in this problem
        by typing inputs into the user-input box. Track which inputs cause unexpected
        outputs.
      U3L25 - drag out key event_instruction: |
        Set up an event handler to respond
        to keypress events, and display event.key in the console. Hit keys on the
        keyboard to see what happens. (Click to see full instructions)
      U3L25 - play sound when up key_instruction: |
        Change the code so the sound will
        only play when the up arrow is pressed. (Click to see full instructions)
      U3L25 Chatbot Strings_instruction: |
        1. Adjust your digital assistant to evaluate
        inputs the same way whether the inputs are capitalized or lowercase. 2. If
        a user asks "What is <phrase>?", where <phrase> is an input your digital
        assistant does not recognize, make your digital assistant respond "I don't
        know what <phrase> is."
      U3L25 String Parsing 1_instruction: |
        Given the string "Wisdom begins with
        wonder." what is the index of the following characters W, t, w, ., d, and
        k? Confirm your expectation using the string.indexOf() function.
      U3L25 String Parsing 2_instruction: |
        Use str.length to find the length of the
        strings “Hello World”, “Computer science rocks!", and “I promise to do my
        homework every day.”
      U3L25 String Parsing 3_instruction: |
        Write a password length checker that writes
        “yes” to the console if a string has a length greater than 10, or “no” if
        it is less than or equal to 10.  Test your function using two strings, one
        that will satisfy each conditional option.
      U3L25 String Parsing 4_instruction: |
        You are given the string "Wisdom begins
        with wonder." Use the string.substring(begin, end) function to print "begin"
        and "nder" to the console.
      U3L25 String Parsing 5_instruction: "Fill in the function, findBeginNder()\nto get the strings \"begin\" and \"nder\" from a sentence no matter where\nin the sentence they exist.\r\nPrint the strings and their index to the console.\n"
      U3L25 String Parsing 6_instruction: |
        Write a function that takes a name (first
        last) and reorders it (last, first).
      U3L25 String Parsing 7_instruction: |
        You are given the string “The earth has
        music for those who listen.” Manipulate it using the functions str.toUpperCase()
        and str.toLowerCase().
      U3L26 AND operator_instruction: |
        Update the genre and rating if statements
        to give only one movie suggestion at a time. (Click to see full instructions)
      U3L26 Chatbot Compound Conditionals_instruction: |
        Update your digital assistant
        to include at least one each of AND, OR, and NOT
      U3L26 Chatbot Final_instruction: |
        Update your digital assistant to include
        at least one each of AND, OR, and NOT
      U3L26 Compound Logic_instruction: |
        Write a conditional statement that detects
        if a command contains all the phrases "2000" "animated" and "G-rated."
        If all these phrases are detected, make Movie Bot respond "The top grossing
        animated and G-rated film in the 2000 decade was Finding Nemo."
      U3L26 NOT operator_instruction: |
        Write a conditional statement that detects
        if a command does not contain the phrase "bad." If "bad" is not detected,
        make Movie Bot respond normally. Otherwise, make Movie Bot respond "Sorry,
        I don't know about bad movies." 
      U3L26 OR operator_instruction: |
        Update the if statement to use an OR to check
        for a "?" as well as who, what, where, when, why, how in the user input.
        (Click to see full instructions)
      U3L27 Chatbot Final_instruction: |
        Make your digital assistant awesome and when
        you are finished, ask one of your classmates to test it for you using the
        activity guide. As you add features to your digital assistant, track them
        on the next level.
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: |
        Draw a square to the front and to the
        right of the starting location. (Click to show full instructions)
      U4 - add createRecord to contacts App_instruction: |
        Add code to your contacts
        app so that newly-added contacts are saved in a table. (Click to see full
        instructions)
      U4 - Add Row By Hand_instruction: |
        Add a new record to your table in the Data
        Viewer. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords 1_instruction: |
        Use the drawChartFromRecords
        block to create a scatter plot from the table in the database. (Click to see
        full instructions)
      U4 - Charts - drawChartFromRecords Options 1_instruction: |
        Add a title to your
        chart and change the colors of your lines using the options parameter of drawChartFromRecords.
        (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 2_instruction: |
        Look through the
        drawChartFromRecords API and choose some more options to customize. (Click
        to see full instructions)
      U4 - Charts - drawChartsFromRecords 1_instruction: |
        Add screen element, pull
        out drawCharts block, run the program!
      U4 - Charts - Export Data_instruction: |
        Export the data from the “ages” table
        as a CSV file, then remix this app and import the CSV file. (Click to see
        full instructions)
      U4 - Charts - Import Data 1_instruction: |
        Download the CSV file we’ve provided,
        and then use the data viewer to import the data from the file into the “mytable”
        table. (Click to see full instructions)
      U4 - Charts - Import Data 2_instruction: |
        Call readRecords on “mytable” and
        print each record to the console. (Click to see full instructions)
      U4 - Charts - Line Chart 1_instruction: |
        Create a line chart showing the change
        in popularity of “#tbt” over time. (Click to see full instructions)
      U4 - Charts - Line Chart 2_instruction: |
        Add a second line to your chart to
        show the change in popularity of both “#tbt” and “#nofilter” at the same time.
        (Click to see full instructions)
      U4 - Charts - Line Chart Template_instruction: This is a template.
      U4 - Charts - Remixing Apps with Data_instruction: |
        Run this app and see what
        it prints to the console. Then remix the app and run the remixed version to
        see what happened to the data. (Click to see full instructions)
      U4 - Charts - Scatter Chart_instruction: |
        Create a scatter plot of the “rottenTomatoes”
        table, using the new table and column names. (Click to see full instructions)
      U4 - CreateRecord - 1_instruction: |
        Add a createRecord command and run the
        program. (Click to see full instructions)
      U4 - CreateRecord - 2.5_instruction: |
        Change the table name in createRecord
        then check the Data Viewer to see the new table. (Click to see  full instructions)
      U4 - CreateRecord - 2_instruction: |
        Change the name from "Alice" to something
        else in the createRecord command.  Run the program and use the Data Viewer
        to see the changes to your table. (Click to see full instructions)
      U4 - CreateRecord - 3_instruction: |
        Use createRecord to add the song object
        as a record to a table. (Click to see full instructions)
      U4 - CreateRecord - 4_instruction: |
        Run the program. Verify the song object
        was added to the database. Note the callback function now displays the copy
        of the record sent back back by the database. (Click to see full instructions)
      U4 - CreateRecord - 5_instruction: |
        Add a property to the JavaScript object,
        then run the program.  View the data table and see how changing the object
        affects the data table. (Click to see full instructions)
      U4 - debug column names are case sensitive_instruction: |
        Change song.title
        to song.Title (capital T).  And run the program.  Check the data table  (Click
        to see full instructions)
      U4 - deleteRecords 0_instruction: |
        Use the deleteRecord command with default
        values. Verify the record was deleted. (Click for full instructions).
      U4 - deleteRecords 1_instruction: |
        Find the id of "Little Bunny Foo Foo"
        in the data table "mySongs".  Use the deleteRecord command to delete it.  See
        what happens when you try to delete an ID a second time. (Click for full Instructions).
      U4 - deleteRecords 2 delete object_instruction: |
        Use the song object to delete
        multiple objects in the database by changing only the "id" property. (Click
        for full Instructions).
      U4 - deleteRecords 2_instruction: |
        Using the data viewer, find the id of a
        a record you want to delete. Use the deleteRecord command to delete it. (Click
        for full instructions).
      U4 - Edit Data Table by Hand_instruction: |
        View the data table and click edit
        next to each row.  Add the artists names for each song by hand. (Click to
        see full instructions)
      U4 - Exploring Data Tools - Template_instruction: |
        Use createRecord to add
        the song object as a record to a table. (Click to see full instructions)
      U4 - fix contacts by hand in data table_instruction: |
        Use the data viewer to
        add rows to the data table.  Add the original hard-coded contacts from your
        app to the database. (Click to see full instructions)
      U4 - last stage test adding contcts_instruction: |
        Confirm that new contacts
        you add are saved to the database.  Verify that after restarting your app,
        the contacts you added no longer show in the app, but still exist in the database.
        (Click to see full instructions)
      U4 - Objects - accessingPropertiesInArray_instruction: |
        Access the properties
        of the objects stored in an array. (Click to see full instructions)
      U4 - Objects - arraysOfObjects_instruction: |
        Create an array called "students"
        and add all 5 student objects to the array. (Click to see full instructions)
      U4 - Objects - createContactObject_instruction: |
        Construct a new object from
        the user inputs, and append it to your array. (Click to see full instructions)
      U4 - Objects - createContactsData_instruction: |
        Add values to the three contact
        objects provided in the starter code. (Click to see full instructions)
      U4 - Objects - createDotNotation_instruction: |
        Create a student Object yourself.
        Add properties to your object one at a time using dot notation. (Click to
        see full instructions)
      U4 - Objects - createObject_instruction: |
        Create an object with at least 3
        properties and display it in the Debug Console. (Click to see full instructions)
        
      U4 - Objects - dotNotation_instruction: |
        Use dot notation to display individual
        properties of the object. (Click to see full instructions)
      U4 - Objects - eventHandlersToSwitchScreen_instruction: |
        Attach event handlers
        to the "Add Contact" and "Go Back" buttons that allow the user to switch
        screens. (Click to see full instructions)
      U4 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and mouse
        event and examine the event objects displayed in the console. Why might an
        object be the best way to store this information? (Click to see full instructions)
      U4 - Objects - exemplarContactsApp_instruction: |
        Use the Contacts app and then
        add a contact of your own. (Click to see full instructions)
      U4 - Objects - loopingArray_instruction: |
        Loop over your array of students
        and print the name of every students. (Click to see full instructions)
      U4 - Objects - loopingArray2_instruction: |
        Loop over your array of students
        and print the name and grade of every student. (Click to see full instructions)
      U4 - Objects - loopingCompoundConditions_instruction: |
        Loop over the array
        of students and display the information of students who are present and in
        the 11th grade. (Click to see full instructions)
      U4 - Objects - loopingConditions_instruction: |
        Loop over your array of student
        objects and display the names of every student who is present in class. (Click
        to see full instructions)
      U4 - Objects - pullValues_instruction: |
        Create an event handler for the "Save
        Contact" button that displays the contents of the 4 text input fields in
        the console. (Click to see full instructions)
      U4 - Objects - readStarterCode_instruction: |
        Familiarize yourself with the
        starter code and UI elements provided. (Click to see full instructions)
      U4 - Objects - resetIndexAndShow_instruction: |
        Add code to your event handler
        for the "Save Contact" button so that when a new contact is added, the inputs
        are cleared, the screen is switched, and the correct contact is shown. (Click
        to see full instructions)
      U4 - Objects - showContact1_instruction: |
        Add code to the showCurrentContact
        function to show the name of the contact stored at the currentIndex of your
        array. (Click to see full instructions)
      U4 - Objects - showContact2_instruction: |
        Add the phone number and birthday
        text to your text area. (Click to see full instructions)
      U4 - Objects - showContact3_instruction: |
        Display the image information for
        each contact. (Click to see full instructions)
      U4 - Objects - showSampleImage_instruction: |
        Attach an event handler to the
        image URL text input so that the user can confirm their image will work as
        expected. (Click to see full instructions)
      U4 - Objects - writeWrap_instruction: |
        Use the wrap function to prevent currentIndex
        from leaving the bounds of your array. (Click to see full instructions)
      U4 - Read Record - 1.2_instruction: "Place a console.log command below the\nreadRecords command. (Click to see full instructions)\r\n"
      U4 - Read Record - 1.3_instruction: "Add a console.log command inside the callback\nfunction. (Click to see full instructions)\r\n"
      U4 - Read Record - 1_instruction: "Use console.log to display the records returned\nby a call to readRecords. (Click to see full instructions)\r\n"
      U4 - Read Record - 2_instruction: "Change the table name so that the records\nare read from the new table. (Click to see full instructions)\r\n"
      U4 - Read Record - 3_instruction: "Change the name of the table in a readRecords\ncommand to read from a table that does not exist. (Click to see full instructions)\r\n"
      U4 - Read Record - 4.1_instruction: "Use indexes and dot notation to reference\nvalues in the response from the database. (Click to see full instructions)\r\n"
      U4 - Read Record - 4_instruction: "Print out each record return from the readRecords\ncall individually. (Click to see full instructions)\r\n"
      U4 - Read Record - 5_instruction: "Using a for loop, display the title of each\nmovie in your database. (Click to see full instructions)\r\n"
      U4 - Read Record - part 1 - template_instruction: "Use console.log to display\nthe records returned by a call to readRecords. (Click to see full instructions)\r\n"
      U4 - ReadRecords - Contacts App 1_instruction: |
        Use readRecords to copy the
        data in your database into your "contacts" global variable and call showCurrentContact.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 2_instruction: |
        Create a function called refreshLocalData.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 3_instruction: |
        Add a call to "refreshLocalData"
        to the callback function of the createRecord you use to add a new contact
        to your database. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 4_instruction: |
        Create a "Delete" button.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 5 make delete work_instruction: |
        Create an
        event handler for the "Delete" button you created. (Click to see full instructions)
      U4 vigenere cipher 2_instruction: Udhëzimet
      U4L02 - Objects - createObject_instruction: |
        Create an object with at least
        5 values including at least one string and one number. (Click to see full
        instructions) 
      U4L02 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and
        mouse event and examine the event objects displayed in the console. Why might
        an object be the best way to store this information? (Click to see full instructions)
      U4L02 - Objects - Template1_instruction: Template
      U4L06 Data Storage 1_instruction: "Fill in your name instead of \"Enter Your\nName\", run the app and click the button. Run it multiple times with different\nnames! Watch the console and use the ‘View Data” button to see how the table\nis updated. As you play around make sure you can explain the purpose of each\nof the circled parts of the diagram.\r\n\r\n"
      U4L06 Data Storage 2_instruction: "The app is a continuation of the previous\none we started. Add a text label to collect the users name and use that as\nthe data input for the record.\r\n\r\nRun the app and click the button multiple\ntimes and see what happens. Is there a problem you notice? "
      U4L06 Data Storage 3_instruction: |
        We want to improve the user experience.
        Once they have submitted their data for storage, it would be nice to clear
        the textbox.  Update your app to clear the textbox after the data is stored.
      U4L06 Data Storage 4_instruction: |
        Add a label and drop down box, to your app
        and save the data to your JSON object and add it to your table. Make sure
        to reset the dropdown after the data is stored.
      U4L06 Data Storage 5_instruction: |
        Add a couple radio buttons or checkboxes
        to our app. Then find a way to collect the data from those. 
      U4L06 Data Storage 6_instruction: |2
         Use one of the getTime() and getUserId()
        blocks to collect additional data. 
      U4L06 Data Storage 7_instruction: |
        Add a second screen to the sample app we
        have been building to capture an image from a user. Return to screen 1 after
        the JSON object has been stored in the table.
      U4L15 Read Data 1_instruction: |
        Run the level and see what happens. Then edit
        the code to make it print a different column of information.
      U4L15 Read Data 2_instruction: "Student should create a sentence which puts\ntogether all the pieces from a record.\r\n\r\n<<Name>> is <<Age>> years old\nand like <<Food>>"
      U4L15 Read Data 3_instruction: "Print the sentence using the first JSON object\nin the array\r\n\r\n"
      U4L15 Read Data 4_instruction: "\r\nUse a random record from the list of records\nto display your sentence."
      U6 - Final Project - Project Level_instruction: |
        Build your final project here.
        (Click to see full instructions)
      U6 - updateRecord - Callback Success Parameter_instruction: |
        Add an if-else
        block inside the callback function for updateRecord. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit event handler_instruction: |
        Write event
        handlers for the Edit Contacts UI elements. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit UI_instruction: |
        Set up the UI elements
        needed to edit contacts. (Click to see full instructions)
      U6 - updateRecord - Contacts - Save edited contact_instruction: |
        Use updateRecord
        to store the user's edits in the database. (Click to see full instructions)
      U6 - updateRecord - Default Block_instruction: |
        Use updateRecord to change
        the record for "Eye of the Tiger." (Click to see full instructions)
      U6 - updateRecord - Update Nonexistent Record_instruction: |
        Force updateRecord
        to fail by changing the ID of songToUpdate. (Click to see full instructions)
      Underground Avoiding Lava_instruction: |
        Lava is hiding beneath some of these
        blocks, which you'll need to cover up before moving forward. An "if" command
        will come in handy here. Add a "move forward" command in the correct place
        to mine these blocks.
      Underground If Statements_instruction: |
        Now things are getting tricky. Mine
        3 redstone, but don’t fall in the lava. Use an "If" command to place cobblestone
        over any lava you uncover.
      Underground Iron_instruction: |
        Walking into molten lava is a bad idea. Place
        cobblestone to create a bridge, then mine at least two of the iron blocks.
      Underground Mine in a Circle_instruction: "Find a way to get 5 diamond and\n7 redstone! Try using a repeat command inside a repeat command to walk in\na square.\r\n"
      Underground Mining Coal_instruction: |
        You’ll find the most valuable resources
        underground, but it can get dark. Place at least 2 torches and mine at least
        2 coal.
      Underground Test Level_instruction: Collect all of the minerals!
      Unicorn Tag_instruction: |
        Take a look at this project.  Do you see how it was
        made?
      Vigenere_instruction: Test
      weird_playLab_instruction: |
        About My Robot Project! Write code so that clicking
        on each bird shows a new fact about your robot.
      WhileAdventure_instruction: |
        Our adventurer wants to collect coins. Can you
        help her grab as many as she can using only one remove 1 block?
      "Widget: Black and White Pixelation_instruction": |
        Now make your own image!
        We've started you off with a 10x10 canvas but you can make it whatever size
        you want. Happy pixeling!
      "Widget: Color Pixelation_instruction": |
        Requirements: The icon must be 16x16
        pixels. You must use the Pixelation Widget to encode the bits of color information.
        The image must be encoded with at least 12 bits per pixel.
      "Widget: Text Compression_instruction": |
        Look for patterns (repeated words
        or phrases) in the text. Enter the patterns you see into the dictionary on
        the right. As you type entries into the dictionary, the symbol for the entry
        is inserted into the text in place of the pattern.
      XML Scratchpad_instruction: Using this test level to grab xml for unit tests
