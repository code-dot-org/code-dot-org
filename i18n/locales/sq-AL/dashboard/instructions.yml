sq:
  data:
    instructions:
      2-3 Artist 1 new_instruction: |
        Përshëndetje, unë jam një artist. Ti mund të shkruash kod për të më bërë
        mua të vizatoj pothuajse çdo gjë. Përdor pak blloqe për të më bërë mua të vizatoj mbi vizat gri
        në figurë. (Çdo vizë është 100 pikselë e gjatë)
        
      2-3 Artist 11_instruction: |
        Jepi shenjës së ndalesës një kontur duke bërë një tetëkëndor
        me 8 brinjë, secila 100 piksela e gjatë. Sa gradë duhet të kthehesh? (Ndihmë:
        Sa është 360 pjesëtuar me 8?) 
      2-3 Artist 12_instruction: |
        Vendos bllokun "repeat times" në mënyrë që të krijojë
        një "rreth" për të përfunduar kokërdhokun e syrit. Nëse çdo lëvizje kthehet djathtas me një gradë,
        sa herë të duhet ta përsërisësh që të përfundosh rrethin? 180? 360? 500?
      2-3 Artist 2 new_instruction: |
        Kjo shtëpi ka një mur gjysëm të përfunduar. Çdo brinjë
        është 100, por gjysma e papërfunduar është vetëm 50. Përfundo murin. 
      2-3 Artist 2_instruction: |
        Kjo shtëpi ka një mur gjysëm të përfunduar. Çdo brinjë
        është 100, por gjysma e papërfunduar është vetëm 50. Përfundo murin. 
      2-3 Artist 3.4_instruction: |
        Blloku kërcimit lëviz artistin pa vizatuar.
        Vizato vizën bosh duke përdorur të dyja blloqet e kërcimit dhe vizatimit.
      2-3 Artist 3_instruction: |
        Kjo kapele është 100 piksela e lartë. Vizato një kapele që është
        70 piksela më pak.
      2-3 Artist 3new_instruction: |
        Kapelë të kuqe është 100 pixels i gjatë . vizatim Finish
        një kapelë e zezë që është 70 pixels më e shkurtër. Gjerësia e kapele të zezë është 50 pixels .
      2-3 Artist 4_instruction: Më ndihmo të përfundoj shtëpinë për këtë macen.
      2-3 Artist 5_instruction: |
        Zëvendëso këtë kod me një bllok "repeat times"
        për të vizatuar të njëjtën shtëpi duke përdorur vetëm 3 blloqe.
      2-3 Artist 6_instruction: |
        Kjo shtëpi ka nevojë për një çati! Vizato trekëndëshin. Ndihmë:
        të treja brinjët janë të së njëjtës gjatësi.
      2-3 Artist 7_instruction: |
        Përfundo duke vizatuar gjysmën e djathtë të dritares së fundit.
        Çdo katror i dritares është 25 piksela. 
      2-3 Artist 8_instruction: |
        Përfundo dhomat për çdo kafshë duke ndarë
        drejtkëndëshin në 2 katrorë të barabartë. Drejtkëndëshi është 200 piksela i gjerë
        dhe 100 piksela i gjatë.
      2-3 Artist 9_instruction: Përfundo këtë balonë
      2-3 Artist Assessment 1_instruction: |
        Vlerësimi: Përfundo duke vizatuar dhëmbin e fundit,
        25 piksela të gjërë dhe 25 piksela të gjatë.
      2-3 Artist Debugging 1_instruction: |
        A mund ta bësh këtë kapele me një gjatësi 
        100?
      2-3 Artist Debugging 10_instruction: |
        Pad drejtim në kontrollues tim lojë
        është tepër i ngushtë . Hint: Bëni të gjerë nga 10 pixels
      2-3 Artist Debugging 11_instruction: |
        Më ndihmo mua të përfundoj flokun e bukur të dëborës.
        Sa herë më duhet të "përsëris" për ta përfunduar ate?
      2-3 Artist Debugging 12_instruction: |
        Supozohet që të shtoj një dallgë oqeani në
        këtë skenë. A mund të më ndihmosh?
      2-3 Artist Debugging 2_instruction: |
        Kodi për tre mustaqet që
        shikon është gabim. Ndihmë: çdo mustaqe është 75 piksela e gjatë. Rregullo këtë kod për të vizatuar 
        mustaqet.
      2-3 Artist Debugging 3_instruction: |
        Varka ime ka një vrimë! A mund ta rregullosh atë
        duke ndryshuar këndin e vijës? Ndihmë: këndi i fundit është jashtë 15 gradësh.
      2-3 Artist Debugging 4_instruction: |
        Cili është imazhi që ne po përpiqemi të
        vizatojmë? Përfundo duke lidhur pikat duke përdorur vizat dhe këndet e duhur.
      2-3 Artist Debugging 5_instruction: |
        Kodi për këmbën dhe shputën që ti
        shikon është i gabuar. Ndihmë: Këmba është shumë e gjatë, ne mund të fshijmë një hap (synohet lojë fjalësh)
      2-3 Artist Debugging 6_instruction: |
        Duket sikur jam ulur në një karrike që
        i mungon një këmbë. Redakto blloqet për të vizatuar këmbën.
      2-3 Artist Debugging 7_instruction: |
        Duket sikur C në kod është vizatuar mbrapsht.
        A mund ta bësh të duket si C?
      2-3 Artist Debugging 8_instruction: |
        Helika ime e letrës e ngulur në shkop nuk ka përfunduar ende. Sa herë duhet t'a përsëris që duhet t'a përfundosh?
        
        
      2-3 Artist Debugging 9_instruction: |
        Kodi për këtë trung është i pasaktë. Ndihmë:
        Këndi është jashtë 60 gradë
      2-3 Artist Debugging Assessment 1_instruction: |
        Kjo formë është shumë e vogël. Mund 
        ta bësh më të madhe? Ndihmë: duhet të jetë 75 piksela e gjatë çdo brinjë.
      2-3 Artist Free Play_instruction: Lojë-falas! Vizato çfarëdo që dëshiron.
      2-3 Artist Functions 1_instruction: |
        Përshëndetje. Unë artist zombie. Më pëlqen të vizatoj!
        Më ndihmo të vizatoj xhamat katrorë. Ndihmë: ura midis xhamave është 
        25 piksela më e shkurtër sesa gjatësia e katrorit.
      2-3 Artist Functions 10_instruction: |
        këtu janë dy funksionet, një për të vizatuar një
        marsh të madh dhe një për të vizatuar një marsh të vogël. Përdori ato për të vizatuar pjesën e brendshme të një makine!
      2-3 Artist Functions 11.5_instruction: |
        këtu kemi të njëjtin funksion "Vizato një gjashtëkëndësh".
        Çfarë ndodh nëse ti kthehesh vetëm me 60 gradë çdo herë që e bën ciklin?
      2-3 Artist Functions 11_instruction: |
        Ne e kemi riemëruar funksionin "vizato një katror"
        për të "vizatuar një gjashtëkëndësh," por akoma vizaton vetëm katrorë! A mund ta modifikosh
        funksionin "vizato një gjashtëkëndësh" për të vizatuar një gjashtëkëndësh me brinjë 50 piksela, dhe vizaton imazhin duke përdorur funksionin?
      2-3 Artist Functions 12_instruction: |
        Funskionet janë vërtet të mrekulleshme për të vizatuar
        gjëra komplekse disa herë. A mund ta përdorësh funksionin "vizato një lule"
        për të mbushur pjesën e mbetur të kutisë së ujitjes? (Ndihmë: Lulet janë të gjitha të ndara me nga
        100 piksela gjatësi)  
      2-3 Artist Functions 13_instruction: |
        Ne ju kemi siguruar ju katër funksione.
        Përdori ato në çdo mënyrë që të pëlqen brenda një ose më shumë cikleve për të bërë figurat që
        ti mund të ndash me shokët. Shtyp vrapo për të parë një shembull.
      2-3 Artist Functions 2_instruction: |
        Funksionet të lejojnë ty të përcaktosh blloqe të reja! Ne kemi
        lëvizur blloqet për të vizatuar një katror brenda një funksioni të quajtur "vizato një katror".
        A mund ta përdorësh funksionin "vizato një katror" për të krijuar xhamat? Katrorët
        janë 75 piksela të veçuar.
      2-3 Artist Functions 3_instruction: |
        Redakto funksionin për të vizatuar një katror me
        gjatësi brinje 115 dhe vizato xhama më të mëdhenj. Katrorët janë tani 45 piksela 
        të veçuar.
      2-3 Artist Functions 4_instruction: |
        Përdor bllokun "repeat" për të vizatuar këto
        3 katrorë.
      2-3 Artist Functions 7_instruction: |
        Përdor funksionin "vizato një shtëpi" për të vizatuar 
        dy shtëpi duke përdorur dy parametra të ndryshëm. (Ndihmë: shtëpia e parë është 100 piksela).
      2-3 Artist Functions 9_instruction: |
        Këtu kemi një funksion flok dëbore. Eksperimento
        me të për të krijuar një skenë dimri! Ky është një nivel loje falas, pra nuk ke asnjë
        puzzle për të zgjidhur. Argëtohu!
      2-3 Artist Loops 1_instruction: |
        A mund të bësh një gjashtëkëndësh me brinjë që janë
        100 piksela të gjatë për të përfunduar qelinë? Kujto, që ti do të duhet të kthehesh
        vetëm 60 gradë!
      2-3 Artist Loops 10_instruction: |
        Çfarë i ndodh dizenjimit kur ne bëjmë 
        hapin tonë përfundimtar përpara sa gjysma e gjatësisë?
      2-3 Artist Loops 11_instruction: |
        Tani le të vendosim *tjetër* cikël rreth e rrotull
        gjithë krijimit tonë! Mos harro të shtosh një kënd në fund të ciklit të jashtëm.
      2-3 Artist Loops 2_instruction: |
        Tani përdor një bllok përsëritës për të bërë elementin
        guaskë.
      2-3 Artist Loops 4_instruction: |
        Dëshiron të shohësh çfarë ndodh kur ne përsërisim atë
        formë herë pas here duke përdorur një cikël?
      2-3 Artist Loops 5_instruction: Tani le të bëjmë një ndryshim të vogël tek cikli dhe shohim sa ndryshe do bëhet figura jonë.
      2-3 Artist Loops 6_instruction: Shto një lëvizje më tepër dhe një tjetër kthehu brenda ciklit dhe shiko si ndryshon dizenjimi jot.
      2-3 Artist Loops 7_instruction: Ne mund të përdorim cikle për të bërë gjithë llojet e poligonëve. A mund të krijosh një romb brenda këtij gjashtë këndëshi?
      2-3 Artist Loops 8_instruction: Le të vendosim të dy elementet brenda një cikli.
      2-3 Artist Loops 9_instruction: "Ne do të ciklojmë elementet e njëjtë, por\n tani ne do të shtojmë distancë midis tyre.\r\nPërdor të njëjtin kod si më përpara, por shto një hap përpara në fund të ciklit të jashtëm.\n"
      2-3 Artist Loops New 1_instruction: Le të vizatojmë këtë kokën e robotit! A mund të bësh një katror me anë që janë 100 piksela?
      2-3 Artist Loops New 10_instruction: |
        Tani le të bashkojmë një grup me V së bashku,
        duke vizatuar ato në një cikël.
      2-3 Artist Loops New 11_instruction: |
        Këtë herë le të vizatojmë atë 24 herë. Shto
        një kthehu majtas me 30 gradë tek ky kod dhe vendose atë të gjithin në një bllok përsëritës.
      2-3 Artist Loops New 12_instruction: |
        Vizato një diamant me brinjë 100 piksela.
        
      2-3 Artist Loops New 13_instruction: Tani vizato diamantin 3 herë në një cikël.
      2-3 Artist Loops New 14_instruction: |
        Tani le të vizatojmë diamantin 10 herë
        por rrotullohu 90 gradë midis çdo diamanti.
      2-3 Artist Loops New 15_instruction: Vizato diçka argëtuese.
      2-3 Artist Loops New 2_instruction: |
        Këtu është një pjesë kodi që ti përdore për të vizatuar
        atë katror. Çfarë ndodh nëse ti përdor bllokun repeat për të ekzekutuar këtë kod 4 herë?
      2-3 Artist Loops New 9_instruction: |
        Vizato një V të thjeshtë ku të dyja brinjët janë 50 
        piksela për të përfunduar shigjetën.
      2-3 Artist Match Hex Pic_instruction: 'Përshtatje: Ndihmo në përfundimin e Hexagonit.'
      2-3 Artist Match Rho Pic_instruction: 'Përshtatje: Përfundo kodin e munguar.'
      2-3 Artist Match Sq Pic_instruction: 'Pershtat: Përfundo kodin e munguar'
      2-3 Artist Match Tri pic_instruction: 'Duke përshtatur: Mbush kodin e munguar.'
      2-3 Artist Nested Loops 1_instruction: "Ti ke përdorur ciklet për të vizatuar format përpara,\npor a e dije që ti mund të vendosje një cikël brenda një cikli tjetër?\r\nCiklo gjithë këtë\nbllok kodi 3 herë për të vizatuar modelin."
      2-3 Artist Nested Loops 10_instruction: |
        Ciklo këtë kod 12 herë për të përfunduar
        modelin.
      2-3 Artist Nested Loops 11_instruction: |
        Ciklo këtë kod 4 herë për të përfunduar 
        modelin, kthehu 90 gradë pas çdo rrethi.
      2-3 Artist Nested Loops 12_instruction: |
        Ciklo këtë kod 12 herë për të përfunduar
        dredhjet.
      2-3 Artist Nested Loops 2_instruction: |
        Tani ciklo këtë trekëndor 6 herë. Pas 
        çdo trekëndori, ti do të kesh nevojë të kthehesh 60 gradë përpara se të vizatosh tjetrin.
      2-3 Artist Nested Loops 3_instruction: |
        Ti do të kesh nevojë të ciklosh trekëndorin 12
        herë për të vizatuar këtë model. Pjesto numrin e gradëve në një rreth (360)
        me numrin e formave që je duke vizatuar (12) për të zbuluar se sa duhet të kthehesh
        pas çdo forme.
      2-3 Artist Nested Loops 4_instruction: |
        Ciklo këtë diamant 12 herë për të vizatuar
        një lule. Ndihmë: 12 diamantët janë si 12 trekëndorët që bëre - sa do të duhet
        të kthehesh pas çdo forme?
      2-3 Artist Nested Loops 5_instruction: |
        Mbush këtë dritare ndërtese me
        një cikël rrejtë. Dritaret janë 20 piksela të gjatë dhe 20 piksela të veçuar.
      2-3 Artist Nested Loops 6_instruction: |
        Dinosauri ka 8 thumba mbi
        bishtin e tij; çdo thumb është 30 piksela e gjatë. Ciklo trekëndorin 8 herë, por 
        sigurohu të ecësh përpara pas secilit.
      2-3 Artist Nested Loops 7_instruction: |
        Ciklo këtë trekëndor 10 herë për të vizatuar
        diellin. Ti do të kesh nevojë të lëvizësh dhe të kthehesh pas çdo trekëndori. Ti mund të 
        zbulosh sa duhet të kthehesh duke pjestuar numrin e gradëve në një rreth 
        me numrin e formave që ti krijon.
      2-3 Artist Nested Loops 8_instruction: |
        Tani le të shtojmë bar tek figura jonë.
        Çdo tufë bari është 50 piksela veç e veç.
      2-3 Artist Nested Loops 9_instruction: |
        Ne do ta mbarojmë këtë figurë duke shtuar
        një lule. Ciklo diamantin 12 herë për të vizatuar lulen tënde.
      2-3 Artist Nested Loops Free Play_instruction: |
        Lojë falas, vizato diçka të hatashme
        me ciklet rrjetë.
      2-3 Bee Conditionals 1_instruction: |
        Përshëndetje! Unë jam një bletë. Më ndihmo të marr nektar nga
        lulja.
      2-3 Bee Conditionals 10_instruction: "Lulet lejla mund të kenë ose 1 ose 0\nnektar. Kujdes mos mbledhësh nektar nga lulja lejla nëse nuk ka\nnektar.\r"
      2-3 Bee Conditionals 11_instruction: Mblidh nektar tek lulet që kanë nektar.
      2-3 Bee Conditionals 12_instruction: |
        Përdor një cikël për të kontrolluar dhe mbledhur nektarin
        nga të gjitha lulet.
      2-3 Bee Conditionals 13_instruction: |
        Mblidh nektar dhe bëj mjaltë. Ndihmë:
        çfarë ndodh nëse ti përdor kushtin "if nectar" në një lule të kuqe? Mund
        ta përfundosh këtë me një cikël?
      2-3 Bee Conditionals 14_instruction: |
        Mblidh nektar dhe bëj mjaltë. Kujdes
        mos mbledhësh nektar nga një lule lejla nëse nuk ka nektar.
      2-3 Bee Conditionals 15_instruction: Mblidh nektar nga të katërta lulet.
      2-3 Bee Conditionals 2_instruction: |
        Përshëndetje, unë jam një bletë! Më ndihmo të mbledh gjithë
        nektarin nga luet. Përdor një cikël.
      2-3 Bee Conditionals 3_instruction: |
        Më ndihmo të mbledh gjithë nektarin
        nga lulet dhe bëj mjaltë. Përdor një cikël.
      2-3 Bee Conditionals 4_instruction: |
        Më ndihmo të mbledh gjithë nektarin nga
        lulet dhe bëj gjithë mjaltin.
      2-3 Bee Conditionals 5_instruction: |
        Lulet lejla mund të kenë ose 1 ose 0
        nektar, por ti nuk di se cila nga ato! Kujdes mos mbledhësh
        nektar nga një lule lejla nëse nuk ka. Kontrollo nëse nektari është i barabartë me 1 
        duke përdorur bllokun if.
      2-3 Bee Conditionals 6_instruction: |
        Kontrolloje këtë lule me një bllok "if"
        për të parë nëse ka nektar.
      2-3 Bee Conditionals 7_instruction: Mblidh nektar nga çdo lule nëse ka.
      2-3 Bee Conditionals 8_instruction: |
        Kjo fushë ka lule të kuqe dhe lejla.
        Lulet e kuqe kanë një sasi të ditur nektari, por nektari i luleve lejla është i panjohur.
        Mblidh gjithë nektarin.
      2-3 Bee Conditionals 9_instruction: Mblidh gjithë nektarin nga çdo lule.
      2-3 Bee Conditionals Assessment 1_instruction: |
        Vlerësim: Mblidh gjithë 
        nektarin, Kujdes mos mbledhësh nektar nga një lule lejla nëse nuk ka.
      2-3 Bee Debugging 1_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 10_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 2_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 3_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 4_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 5_instruction: |
        KKëto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin. Tani ti mund
        të përdorësh vrapo dhe ec.
      2-3 Bee Debugging 6_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin. 
      2-3 Bee Debugging 7_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 8_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging 9_instruction: |
        Këto blloqet janë duke më bezdisur vërtet. Rregullo
        gabimin (et) për të mbledhur gjithë nektarin dhe bëj gjithë mjaltin.
      2-3 Bee Debugging Assessment 1_instruction: |
        Vlerësim: Këto blloqet janë
        duke më bezdisur vërtet. Rregullo gabimin (et) për të mbledhur gjithë nektarin dhe bëj 
        gjithë mjaltin.
      2-3 Bee Functions 1_instruction: |
        Funksionet janë blloqe kodi që kryejnë
        një detyrë. Përdor funksionin "get 2 nectar" për të mbledhur nektarin nga secila
        lule.
      2-3 Bee Functions 10_instruction: |
        Lulet lejla mund të kenë secila ose 1 ose 0 nektar. Krijo 
        një funksion që mbledh nektar vetëm nga lulet lejla që kanë nektar.
      2-3 Bee Functions 2_instruction: |
        Funksionet janë blloqe kodi që performojnë
        një detyrë. Përdor funksionin "merr 5" për të marrë 5 nektarë në një kohë. Sigurohu të
        përdorësh një cikël për të arritur një numërim blloku ideal, gjithashtu.
      2-3 Bee Functions 3_instruction: Mblidh gjithë nektarin nga çdo lule.
      2-3 Bee Functions 4_instruction: |
        Funksioni "lëviz dhe merr nektar" kthen
        bletën, mbledh nektarin, dhe rikthen bletën ku filloi. Përdor
        funksionin për të mbledhur gjithë nektarin.
      2-3 Bee Functions 5_instruction: |
        Tani ka më shumë nektar tek lulet.
        Redakto funksionin e dhënë në mënyrë që të mbledhë 4 nektarët dhe ti përdori ato për të mbledhur
        gjithë nektarin nga lulet.
      2-3 Bee Functions 6_instruction: |
        Tani përdor të njëjtin funksionin për të mbledhur nektarin
        nga të treja lulet.
      2-3 Bee Functions 7_instruction: |
        Luket janë tani larg. Redakto 
        funksionin e dhënë dhe përdore atë për të mbledhur gjithë nektarin nga lulet.
      2-3 Bee Functions 8_instruction: |
        Krijo funksionin tënd që merr 7 nektar,
        ecën përpara, dhe bën 7 mjalte. Përdor funksionin për të mbledhur nektar te çdo 
        lule dhe bëj mjaltë tek çdo koshere.
      2-3 Bee Functions 9_instruction: |
        Krijo funksionin tënd që shkon poshtë një
        rruge, merr nektar, bën mjaltë, dhe më pas rikthen bletën në majë të
        rrugës.
        
      2-3 Bee Functions Assessment 1_instruction: |
        Vlerësim: Përdor funksionin e dhënë
        për të mbledhur nektar nga çdo lule.
      2-3 Bee Functions Assessment 2_instruction: |
        Vlerësim: Krijo një funksion
        për të bërë 3 mjaltë në një kohë.
      2-3 Bee Loops 1_instruction: |
        Çdo lule mban një njësi nektari. Mblidh
        nektar nga çdo lule. 
      2-3 Bee Loops 10_instruction: |
        A mund të përdorësh një cikël while brenda dy ciklesh të tjerë
        për të mbledhur gjithë nektarin?
      2-3 Bee Loops 11_instruction: |
        Përdor ciklet while për të mbledhur gjithë nektarin
        nga lulet në këtë fushë.
      2-3 Bee Loops 12_instruction: |
        Përdor ciklet while për të mbledhur gjithë nektarin
        nga lulet në këtë fushë.
      2-3 Bee Loops 13_instruction: |
        Vlerësim: Përdor bllokun repeat për të mbledhur
        gjithë nektarin.
      2-3 Bee Loops 1A_instruction: Ckemi, unë jam një bletë. Mund të më ndihmosh të mbledh nektarin nga këto lule?
      2-3 Bee Loops 2_instruction: Përdor një litar për të mbledhur nektarin dhe përgatitur mjaltin.
      2-3 Bee Loops 2A_instruction: "Mund t'a kryesh detyrën tënde më me lehtësi me një litar?"
      2-3 Bee Loops 3_instruction: |
        Mblidh nektarin nga çdo lule dhe bëj mjaltë
        tek çdo koshere.
      2-3 Bee Loops 3A_instruction: Mjafton një litar për të gjithë nektarin?
      2-3 Bee Loops 3B_instruction: Tani përdor bllokun e ri të përsëritjes për të mbledhur të gjithë nektarin dhe për të përgatitur të gjithë mjaltin.
      2-3 Bee Loops 4_instruction: |
        Përdor një cikël të njëjtë si puzzle i fundit, por bëj
        një kthesë brënda tij.
      2-3 Bee Loops 4A_instruction: Cfare ndodh nëse e lidhni këtë pjesë 3 herë? Mos harroni të përgatisni në fund mjaltin!
      2-3 Bee Loops 5_instruction: |
        Përdor një cikël për të shkuar poshtë shkallëve dhe mblidh
        nektarin.
      2-3 Bee Loops 6_instruction: |
        Përdor një cikël për të mbledhur nektarin nga çdo lule
        dhe bëj mjaltë te çdo koshere.
      2-3 Bee Loops 7_instruction: |
        Vendos këto blloqe brënda një cikli për të mbledhur nektar
        nga çdo lule.
      2-3 Bee Loops 8_instruction: |
        Këto lulet lejla kanë një sasi të panjohur
        nektari. Përdor ciklin "while nectar" për të mbledhur gjithë nektarin. Ky cikël 
        do të veprojë për aq kohë sa kushti është i vërtetë, në këtë rast Nectar > 0.
      2-3 Bee Loops 9_instruction: |
        Cikli while mund të performojë të njëjtin veprim si 
        një pVrcaktim if në një cikël. Shto ciklin while tek ky kod për të performuar të njëjtën
        detyrë.
      2-3 Bee Loops Assessment 1_instruction: |
        Vlerësim - Përdor një cikël while për të mbledhur 
        gjithë nektarin nga kjo lule.
      2-3 Maze 1_instruction: |
        A mund të më ndihmosh mua të kap derrkucin e inatosur? Grumbullo 
        disa blloqe "move forward" së bashku dhe shtyp "Run". 
        
      2-3 Maze 10_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze 11_instruction: |
        Më ço tek lulja jam i uritur! Sa herë
        duhet të përsërisësh një bllok?
      2-3 Maze 12 (copy 1)_instruction: |
        A mund ta rivendosësh përgjigjen vetëm
        me dy blloqe? (Ndihmë: Krijo një cikël duke përdorur bllokun "repeat times".)
      2-3 Maze 12 (copy 2)_instruction: |
        A mund ta rivendosësh përgjigjen vetëm
        me dy blloqe? (Ndihmë: Krijo një cikël duke përdorur bllokun "repeat times".)
      2-3 Maze 12 (old)_instruction: |
        Më ço tek derrkuci, tani me bllokun 
        Përsërit herët!
      2-3 Maze 12_instruction: |
        A mund të rivendosësh këto pesë blloqe vetëm me dy blloqe?
        (Ndihmë: Krijo një cikël duke përdorur një bllok "repeat times".)
      2-3 Maze 13 (old)_instruction: |
        Më ço tek derrkuci, tani me bllokun
        Përsërit derisa!
      2-3 Maze 13_instruction: Më ço tek derrkuci duke përdorur vetëm dy blloqe.
      2-3 Maze 14 (old)_instruction: Më ço tek derrkuci me bllokun Përsërit derisa!
      2-3 Maze 14_instruction: |
        Më ço tek luledielli! (Ku është blloku "përsërit herët"
        kur unë kam nevojë?)
      2-3 Maze 15 (old)_instruction: Më ço tek derrkuci me bllokun Përsërit derisa!
      2-3 Maze 15_instruction: Përdor dy ciklet për të arritur tek derrkuci duke përdorur më pak blloqe.
      2-3 Maze 16 (old)_instruction: Më ço tek derrkuci me bllokun Përsërit derisa!
      2-3 Maze 16 before_instruction: Më ço tek derrkuci.
      2-3 Maze 16_instruction: Më ço tek luledielli. Ciklo sekuencën!
      2-3 Maze 2_instruction: Ky derrkuci po më bezdis pendët. Më ndihmo ta arrij atë!
      2-3 Maze 3_instruction: |
        Gjurmo rrugën dhe më udhëhiq tek derrkuci budalla. Shmang
        TNT ose pendët do të fluturojnë!
      2-3 Maze 4_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze 5_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze 6_instruction: |
        Qetësohu dhe më ndihmo të gjej derrkucin e keq. Përndryshe
        unë mund të nevrikosem!
      2-3 Maze 7_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze 8_instruction: Më ço tek derrkuci!
      2-3 Maze 9_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze Loops 1_instruction: A mund të më çosh tek derrkuci duke përdorur 5 blloqe?
      2-3 Maze Loops 17_instruction: Më ço tek luledielli!
      2-3 Maze Loops 18_instruction: Më ço tek luledielli!
      2-3 Maze Loops 19_instruction: Më ço tek luledielli!
      2-3 Maze Loops 20_instruction: Më ço tek luledielli!
      2-3 Maze Loops 21_instruction: Më ço tek luledielli!
      2-3 Maze Loops Assessment 1_instruction: |
        Vlerësim: Më ço tek luledielli
        duke përdorur vetëm 5 blloqe! 
      2-3 Maze sq1_instruction: |
        This pig is ruffling my feathers.  Help me find
        him!
      2-3 Maze sq10_instruction: Më ço tek derrkuci! Çfarë blloqesh u përsëritën?
      2-3 Maze sq10v2_instruction: Më ço tek derrkuci! Çfarë blloqesh u përsëritën?
      2-3 maze sq11_instruction: Më ço tek derrkuci! Çfarë blloqesh u përsëritën?
      2-3 maze sq12_instruction: |
        A mund të zëvëndësosh përgjigjen e kaluar me një cikël
        duke përdorur një bllok "repeat times"?
      2-3 maze sq13_instruction: |
        I dashur person. Unë zombie. Duhet...të arrij...te luledielli.
        Krijo cikël me bllokun "repeat until".
      2-3 maze sq14_instruction: A mund të arrish tek luledielli duke përdorur vetëm katër blloqe?
      2-3 maze sq15_instruction: A mund të arrish te luledielli duke përodorur vetëm pesë blloqe?
      2-3 maze sq16_instruction: |
        Ok, kjo është njësoj, por vetëm me pak ndryshime. A mund
        ta bësh vetëm me pesë blloqe?
      2-3 Maze sq2_instruction: |
        Gjurmo rrugën dhe më drejto tek derrkuci budalla. Shmang
        TNT ose puplat do fluturojnë!
      2-3 Maze sq3_instruction: Me udhëhiq për tek green evilness! (Kujdes nga TNT)
      2-3 Maze sq4_instruction: |
        Qetësohu dhe më ndihmo të gjej derrkucin e keq. Përndryshe
        unë mund të nevrikosem!
      2-3 Maze sq5_instruction: |
        Më ço tek derrkuci! Sa herë duhet të përsërisësh
        një bllok?
      2-3 Maze sq6_instruction: |
        A mund ta rivendosësh përgjigjen e mëparshme me vetëm dy
        blloqe? (Ndihmë: Krijo një cikël duke përdorur një bllok "repeat times".)
      2-3 Maze sq7_instruction: Më ço tek hajduti i gjelbër duke përdorur vetëm 3 blloqe.
      2-3 Maze sq8_instruction: |
        Më ço tek derrkuci! (Ku është blloku "repeat times"
        kur unë kam nevojë?)
      2-3 Maze sq9_instruction: Krijo cikle për të arritur tek derrkuci duke përdorur sa më pak blloqe.
      2-3_instruction: |
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: Ndihmoje zogun të kapë derrkucin e pabindur duke e lëvizur atë përpara
      4-5 Artist 1_instruction: |
        Më ndihmo të përfundoj vizatimin e kutisë sime. (Secila vijë
        është 300 piksela e gjatë) 
      4-5 Artist 10_instruction: |
        Shtyp "Run" për të provuar kodin. Më pas, përsërite atë
        aq herë sa duhet për të përfunduar vizatimin. Ngjyrat do jenë ndryshe çdo herë.
      4-5 Artist 11_instruction: |
        Përfundo vijat e gjelbra. Vijat janë 300 piksela
        të gjata dhe 15 piksela të veçuara.
      4-5 Artist 2_instruction: |
        A mund ta ciklosh këtë kod për të përfunduar
        katrorin?
      4-5 Artist 3.5_instruction: |
        Ok, përpiqu të zbulosh çfarë ndodh nëse
        ti ekzekuton këtë  kod (ose shtyp "Run" për ta provuar atë). Më pas përsërite atë aq herë sa duhet për të përffunduar vizatimin. Ngjyrat (preferueshëm) do të jenë ndryshe çdo herë.
      4-5 Artist 3_instruction: |
        Ky krevati drejtkëndor i lules ka një perimetër 600.
        Brinja e gjatë është 200. Vizato drejtkëndëshin.
      4-5 Artist 4_instruction: |
        Sa gradë është një rreth? Ciklo
        blloqet për të krijuar një rreth ngjyrash.
      4-5 Artist 5_instruction: Çfarë këndi përdor ti?
      4-5 Artist 6_instruction: |
        Trekëndori barabrinjës ka kënde 60, 60,
        dhe 60 gradë. Çdo brinjëështë 200 piksela. Përfundo vizatimin.
      4-5 Artist 7_instruction: |
        Trekëndori i drejtë i ka këndet 30, 60, 90
        gradë. Gjatësia e diagonales është dyfishi i gjatësisë së 100 pikselave. Përfundo
        vizatimin.
      4-5 Artist 8_instruction: |
        Vija në gjysmën e fushës së futbollit është pingul
        me anët e fushës. Kjo fushë ka një perimetër prej 800 pikselash dhe është 240 piksela
        i gjatë. Sa i gjerë është? Vizato kufijtë dhe vijën e mesit.
      4-5 Artist 9_instruction: |
        Vizato gjysmën tjetër që dizenjimi të jetë simetrik.
        Trekëndorët janë barabrinjës dhe janë 50 piksela të gjatë.
      4-5 Artist Assessment 1_instruction: |
        Vlerësim: Përdor një cikël për të vizatuar trekëndor
        barabrinjës. Secila brinjë është 300 piksela.
      4-5 Artist For Loops 1_instruction: |
        Vendos numrat 1 deri tek 10 brenda në
        blloqet e gjerësisë dhe vizato kodin.
      4-5 Artist For Loops 11_instruction: |
        Përfundo bllokun "for" në mënyrë që
        të numërojë 0, 20, 40, 60, 80... 200.
      4-5 Artist For Loops 12_instruction: 'Çfarë ndodh nëse ti kthen mbrapsht numrat "from" dhe "to"? Përfundo bllokun "for" që të numërojë 200, 180, 160, 140, 120...0. '
      4-5 Artist For Loops 13_instruction: |
        Ky dizajn filloi pa një cikël "for"
        dhe është duke punuar me shumë blloqe! Përdor një bllok "for" për të përfunduar spiralen. Ndihmë:
        gjatësia e vijës së fundit është 250 piksela.
      4-5 Artist For Loops 14_instruction: |
        Dikush filloi kodin, por më pas kuptoi
        që duhet të ketë një mënyrë më të shpejtë! Përdor një bllok "for" për të zëvëndësuar blloqet dhe
        përfundo spiralen trekëndore. (Ndihmë: gjatësia e vijës së fundit është 300 piksela.
      4-5 Artist For Loops 15_instruction: |
        Dikush filloi kodin, por më pas kuptoi
        që duhet të ketë një mënyrë më të shpejtë! Përdor një bllok "for" për të zëvëndësuar blloqet dhe
        përfundo spiralen gjashtëkëndore. (Ndihmë: gjatësia e vijës së fundit është 200 piksela.
      4-5 Artist For Loops 2_instruction: |
        Ky është një bllok "for". Në vend të shtypësh
        1,2,3... 10, blloku "for" mund të përsëritë blloqet brenda tij dhe
        numëron numrat për ty. Vendos numrin 10  në seksionin "to" të bllokut
        "for".
      4-5 Artist For Loops 3_instruction: |
        Si mund të numërojmë nga 1 deri në 50? Redakto
        bllokun "for".
      4-5 Artist For Loops 4_instruction: |
        Përfundo bllokun "for" që të numërojë
        nga 1 tek 10 me nga 1.
      4-5 Artist For Loops 6_instruction: |
        Vizato katrorë me brinjë 50, 60, 70,
        80, dhe 90 piksela. Ty do të duhet të përdorësh funksionin "draw a square" pesë
        herë.
      4-5 Artist For Loops 7_instruction: |
        Vizato të njëjtët katrorë por përdor një bllok "count
        with" për të ndryshuar madhësitë. Vendos bllokun "counter" në funksionin
        "draw a square". Ndihmë: Është në kategorinë e Variablave.
      4-5 Artist For Loops 8_instruction: |
        A mund të përfundosh programin duke vendosur
        blloqet brenda një blloku "for" që numëron nga 10 deri tek 200 me 10? Ti mund
        të gjesh bllokun "for" në kategorinë Ciklet.
      4-5 Artist For Loops 9_instruction: |
        Këta rrathë janë të madhësisë 5, 10, 15, 20,
        25, 30, dhe 35. Vizato rrathët duke përdorur një bllok "for".
      4-5 Artist Free Draw 1_instruction: |
        Vizatim Falas! Vizato çfarëdo që ti je inspiruar
        për të krijuar.
      4-5 Artist Functions 1_instruction: Përdor një cikël repeat për të vizatuar këtë trekëndor.
      4-5 Artist Functions 10a_instruction: |
        Vendos këtë kod brenda funksionit 'vizato një flok dëbore'
        dhe zëvëndësoje 50-ën me parametrin 'madhësia'. Funksioni bën tashmë
        një flok dëbore që  është 100 piksela.
      4-5 Artist Functions 10b_instruction: |
        Përdor funksionin 'vizato një flok dëbore'
        për të krijuar madhësi të ndryshme flokësh. Ndihmë: floku i parë i dëborës është 25 në gjatësi
        dhe çdo flok dëbore është dy herë më i madh se madhësia e të parit.
      4-5 Artist Functions 11_instruction: |
        Ky funksion "vizato një gjashtëkëndësh" përdor 
        funksionin "vizato një trekëndor". Përfundo funksionin gjashtëkëndësh. (Ndihmë: NJë 
        gjashtëkëndësh ka 6 brinjë, secila 100 piksela e gjatë)
      4-5 Artist Functions 12_instruction: |
        Përfundo funksionin 'vizato dallgë'. Çdo
        dallgë krijohet nga një dallgë e lartë dhe nga një e ulët. Ndihmë: Vizato 5 dallgë blu.
      4-5 Artist Functions 13 Free play_instruction: |
        Këtu janë disa funksione për të
        vizatuar planete, yje, raketa dhe robotë. Përdori ata në çdo mënyrë që do për të bërë
        figura që ti mund ti ndash me shokët e tu.
      4-5 Artist Functions 14 Free play_instruction: |
        Këtu, ju kemi dhënë 
        funksione të ndryshme. Përodri ata si të duash brenda një ose më shumë ciklesh
        për të bërë figura që ti mund ti ndash me shokët e tu. Kliko 'Run' për të parë
        një shembull.
      4-5 Artist Functions 15 Assessment_instruction: |
        Vlerësim: Përdor funksionin "vizato një katror"
        për të krijuar katrorët. Katrorë janë 50, 100, dhe 150
        piksela.
      4-5 Artist Functions 2a_instruction: |
        Tani vendosi këto blloqe në një funksion të ri
        të quajtur "vizato një trekëndor të vogël" dhe thirre atë.
      4-5 Artist Functions 2b_instruction: |
        Tani krijo një funksion të quajtur
        "vizato një trekëndor të vogël" duke përdorur blloqet e dhënë.
      4-5 Artist Functions 3_instruction: |
        Tani krijo funksionet "vizato një trekëndor mesatar"
        dhe "vizato një trekëndor të madh". Funksioni "vizato një trekëndor të vogël"
        është bërë për ty. Trekëndorët kanë gjatësi brinjësh 50 (i vogli), 100 (mesatari),
        dhe 150 (i madhi). 
      4-5 Artist Functions 4_instruction: |
        Ky funksioni i ri "vizato një trekëndor"
        ka një parametër dhe mund të bëjë punën e të tre funksioneve të mëparshëm. Vizato 
        të njëjtët trekëndorë duke përdorur këtë funksionin e ri.
      4-5 Artist Functions 5_instruction: |
        A mund ta modifikosh funksionin "vizato një trekëndor"
        në një funksion "vizato një katror" për të ndryshuar vizatimin?
      4-5 Artist Functions 6_instruction: |
        Përdor funksionet "vizato një katror" dhe "vizato një
        trekëndor" për të vizatuar një shtëpi. (Ndihmë: Brinjët e katrorit janë 200 piksela)
      4-5 Artist Functions 6b_instruction: |
        Përdor funksionet vizato një katror dhe trekëndor
        bashkë me blloqet e tjerë për të krijuar një shtëpi duke ju shtuar atyre funksionin
        "vizato një shtëpi" dhe duke e thirrur atë.
      4-5 Artist Functions 7_instruction: |
        Përdor funksionin "vizato një shtëpi" për të vizatuar
        shtëpitë që janë 100 piksela dhe 50 piksela. Të dya shtëpitë janë të ndara me nga
        50 piksela.
      4-5 Artist Functions 8_instruction: |
        Funksioni "vizato një lule" ka një parametër
        që të lejon ty të vendosësh gjatësinë e bishtit. Vendose atë tek 200 dhe shiko çfarë ndodh.
      4-5 Artist Functions 9_instruction: |
        Vizato këto 3 lulet. Gjatësia e të parës
        është 100 dhe lulj atjetër është gjithmonë 50 piksela më shumë se gjatësia e
        të parës. Lulet janë 100 piksela veç e veç.
      4-5 Artist Patterns 1_instruction: |
        A mund ta vizatosh këtë katror duke përdorur një cikël?
        Secila brinjë është 20 piksela e gjatë.
      4-5 Artist Patterns 10_instruction: |
        Ky kod vizaton dy rreshta të gjashtëkëndëshit -
        ciklo të gjithën 4 herë për të vizatuar të gjithë kosheren. Ndihmë: Ty do të duhet
        të kërcesh mbrapsht 120 piksela në pozicionin tënd të ciklit për tu siguruar që artisti nuk
        mbyll ekranin.
        
      4-5 Artist Patterns 11_instruction: |
        Sa herë do të duhet të ciklosh këtë
        për të vizatuar një gjysëm rrethi? Ndihmë: Nëse kemi 360 gradë në një rreth dhe secili
        cikël lëviz 3 gradë, sa herë do të nevojitet të ciklosh  për të vizatuar një rreth të plotë?
      4-5 Artist Patterns 12_instruction: |
        Nëse ti e kopjon këtë cikël dhe kthen majtas në vënd 
        ta kthesh djathtas, çfarë ndodh? A mund ta përsërisësh atë për të vizatuar këtë dallgë?
      4-5 Artist Patterns 13_instruction: |
        Tani le të ciklojmë të gjithënkatër
        herë për të krijuar këtë kornizë figure. Kujdes me cepat - ti nuk mund 
        të kthehesh 9- gradë! Nëse të ciklosh një kthesë 3 gradë 60 herë bën një gjysëm rreth, 
        cili nga këto blloqe kodi do të bëjë një çerek rrethi për cepat?
      4-5 Artist Patterns 2_instruction: |
        Nëse ti vendos ciklin e katrorit tënd brenda një cikli tjetër,
        ne e thërrasim një cikël të mbivendosur. Çfarë të duhet për të shtuar tek cikli jot i jashtëm
        për tu siguruar se të 15 katrorët rreshtohen pas njëri tjetrit?
      4-5 Artist Patterns 3_instruction: |
        Tani le të shkojmë një nivel më thellë! Ne kemi
        mbivendosur gjithë bllokun e kodit në një cikël tjetër, por ti ke nevojë të arrish 
        artistin mbrapsht për të vizatuar rreshtin tjetër. Cilin nga këto blloqe kodi mund 
        të vendosësh në fund të pozicionit për të vizatuar gjithë rrejtën?
      4-5 Artist Patterns 4_instruction: |
        Ky diamant ka brinjë 50 piksela dhe kënde
        120 dhe 060 gradë. Përdor një cikël për ta vizatuar.
      4-5 Artist Patterns 5.5_instruction: |
        Sa herë duhet të përsërisësh
        këtë bllok për të vizatuar gjithë rrjetën me diamantë?
      4-5 Artist Patterns 5_instruction: |
        Le të përsërisim për të bërë një rresht me 6 diamantë.
        Vër re që ne kemi ndryshuar kodin e diamantit tonë për tu përsëritur 3 herë në vend të 2 herë - si mendon pse është bërë kjo?
      4-5 Artist Patterns 6_instruction: |
        Sa herë do të duhet të përsërisësh këtë
        bllok për të vizatuar të gjithë rrjetën e diamantëve?
      4-5 Artist Patterns 7_instruction: |
        Le të modifikojmë kodin nga puzzle i fundit
        për të bërë këtë model më kompleks. Shiko se si diamantet mbivendosen tani, përpiqu
        të ndryshosh  "kërcimet mbrapsht" të parat nga 100 në 50 (gjysma aq larg) - tani sa larg
        duhet të shkojë artisti në "kërcimet mbrapsht" të dyta?
      4-5 Artist Patterns 8_instruction: |
        Përodr një cikël për të vizatuar këtë gjashtëkëndësh me 40 
        piksela brinjët dhe 60 gradë këndet.
      4-5 Artist Patterns 9.5_instruction: |
        Le të ciklojmë këtë kod për të vizatuar dy rreshta
        gjashtëkëndëshash. Vër re se si rreshti jonë i dytë është zhvendosur djathtas.
      4-5 Artist Patterns 9_instruction: Tani përsërisni atë kod 3 herë për të vizatuar rreshtin. Shënjestro, secili gjashtëkëndësh është 80 piksel i gjerë nga e majta në të djathtë, i matur nga pikat më të largëta.
      4-5 Artist Patterns Free Play_instruction: |
        Lojë alas - provo dorën tënde në të bërin e 
        një modeli tëndin!
      4-5 Bee Conditionals 1 (copy 1)_instruction: |
        Bleta nuk mund të thotë nëse kjo është
        një lule apo një koshere. Grumbullo nektar vetëm nga lulet, por së pari kontrollo
        nëse është një lule apo koshere.
      4-5 Bee Conditionals 1_instruction: |
        Bleta nuk mund të thotë nëse kjo është
        një lule apo një koshere. Grumbullo nektar vetëm nga lulet, por së pari kontrollo
        nëse është një lule apo koshere.
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        Bleta dëshiron vetëm nektar 
        tani. Kujto, jo të gjithë objektet janë lule, kështu që kontrollo për të mblehdur nektar vetëm
        tek lulet.
      4-5 Bee Conditionals 2_instruction: |
        Bleta dëshiron vetëm nektar 
        tani. Kujto, jo të gjithë objektet janë lule, kështu që kontrollo për të mblehdur nektar vetëm
        tek lulet.
      4-5 Bee Conditionals 3_instruction: |
        Tani bleta dëshiron të bëjë mjaltë.
        Kontrollo të bëjë mjaltë vetëm tek kosheret.
      4-5 Bee Conditionals 4 (copy 1)_instruction: |
        Objekti i panjohur është ose
        një lule ose një koshere. Përdor bllokun if/else për të mbledhur nektar nëse është
        lule, përndryshe për të bërë mjaltë (sepse është koshere).
      4-5 Bee Conditionals 4_instruction: |
        Objekti i panjohur është ose
        një lule ose një koshere. Përdor bllokun if/else për të mbledhur nektar nëse është
        lule, përndryshe për të bërë mjaltë (sepse është koshere).
      4-5 Bee Conditionals 5_instruction: |
        Mund të jetë një lule ose një koshere
        nën ato re. Përdor bllokun if/else për të mbledhur nektar nëse ka
        lule, përndryshe të bëjë mjaltë (sepse është një koshere).
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        Kjo lule lejla mund të ketë secila
        3, 2 ose 1 nektar. Këtu një bllok if-else kombinohet me një tjetër bllok
        if-else për të krijuar një bllok if, else-if, else. Përfundo zgjidhjen për të mbledhur
        sasinë e panjohur të nektarit.
      4-5 Bee Conditionals 6_instruction: |
        Kjo lule lejla mund të ketë secila
        3, 2 ose 1 nektar. Këtu një bllok if-else kombinohet me një tjetër bllok
        if-else për të krijuar një bllok if, else-if, else. Përfundo zgjidhjen për të mbledhur
        sasinë e panjohur të nektarit.
      4-5 Bee Conditionals 7_instruction: |
        Kjo lule lejla mund të ketë secila
        3, 2 ose 1 nektar. Përfundo funksionin "kontrollo lulen lejla" dhe përdore
        atë të mbledhësh gjithë nektarin te lulet.
      4-5 Bee Conditionals 8_instruction: |
        Shkruaj një funksion brenda bllokut të quajtur
        "kontrollo lulen bëj mjaltë." Funksioni jot duhet të kontrollojë sa nektar 
        ka lulja lejla dhe mblidhe atë, ec përpara. dhe më pas bëj mjaltë.
      4-5 Bee Conditionals Assessment 1_instruction: |
        Vlerësim: Ky kod është i gabuar.
        Përfundo funksionin "get nectar or make honey", më pas thirre atë për të mbedhur
        gjithë nektarin dhe mjaltin. Kujto që lulet lejla mund të kenë 3, 2, ose 1 nektarë.
      4-5 Bee Debugging 1_instruction: |
        Këto blloqet po më bezdisin vërtet. A mund ti
        rregullosh ato?
      4-5 Bee Debugging 10_instruction: Gjeji gabimet dhe rregulloji ato.
      4-5 Bee Debugging 11_instruction: A numërohet kjo në mënyrë korrekte?
      4-5 Bee Debugging 2_instruction: Ndihmo bletën të gjejë nektarin dhe të bëjë mjaltë.
      4-5 Bee Debugging 3_instruction: Gjeji gabimet dhe rregulloji ato.
      4-5 Bee Debugging 4_instruction: Këto blloqe nuk funksionojnë. Cili është modeli?
      4-5 Bee Debugging 5_instruction: Diçka nuk është në rregull këtu...
      4-5 Bee Debugging 6_instruction: |
        Lulj alejla ka një sasi të panjohur
        nektari. Rregullo blloqet për të gjetur gjithë nektarin nga lulja.
      4-5 Bee Debugging 7_instruction: Funksionit i mungon diçka...
      4-5 Bee Debugging 8_instruction: |
        Ky funksion është në rregull, por nuk është përdorur
        si duhet.
      4-5 Bee Debugging 9_instruction: Pse nuk po bën bleta mjaftueshëm mjaltë?
      4-5 Bee Debugging Assessment 1_instruction: 'Vlerësim: Rregullo kodin.'
      4-5 Bee Nested Loops 1_instruction: Përdor një cikël për të mbledhur gjithë nektarin.
      4-5 Bee Nested Loops 2_instruction: |
        Mblidh gjithë nektarin nga secila lule.
        Përdor një cikël të mbivendosur. 
      4-5 Bee Nested Loops 3_instruction: |
        Mblidh gjithë nektarin duke vendosur
        kodin e fillimit në një cikël të mbivendosur.
      4-5 Bee Nested Loops 4_instruction: |
        Mblidh gjithë nektarinnga secila lule
        dhe bëj mjaltë tek çdo koshere. Përdor një cikël të mbivendosur. 
      4-5 Bee Nested Loops 5_instruction: |
        Mblidh gjithë nektarin duke krijuar
        një cikël të mbivendosur.
      4-5 Bee Nested Loops 6_instruction: Mbidh gjithë nektarin.
      4-5 Bee Nested Loops 7_instruction: |
        Vendos këtë cikël brenda një cikli tjetri për të krijuar
        një cikël të mbivendosur dhe mblidh gjithë nektarin nga lulet.
      4-5 Bee Nested Loops 8_instruction: |
        Mblidh gjithë nektarin nga këto lulet
        duke mbivendosur një cikël while. Zëvendëso bllokun e brendshëm repeat times me një
        bllok while. 
      4-5 Bee Nested Loops 9_instruction: |
        Mblidh gjithë nektarin nga këto lule
        duke mbivendosur një cikël while brenda një repeat.
      4-5 Bee Nested Loops Assessment 1_instruction: |
        Vlerësim - Mblidh gjithë
        nektarin dhe bëj gjithë mjaltin duke përdorur ciklet.
      4-5 Bee Nested Loops Rows_instruction: |
        Mblidh nektar nga rreshtat e luleve!
        Përdor një cikël të mbivendosur.
      4-5 Maze 1 (copy 1)_instruction: |
        I dashur person. Unë zombie. Duhet... arrij...te
        luledielli.
      4-5 Maze 1_instruction: |
        I dashur person. Unë zombie. Duhet... arrij...te
        luledielli.
      4-5 Maze 10_instruction: A mund të arrish tek luledielli duke përdorur vetëm katër blloqe?
      4-5 Maze 11_instruction: A mund të arrish tek luledielli duke përdorur vetëm gjashtë blloqe?
      4-5 Maze 12_instruction: |
        Ok, kjo është pak ndryshe. A mund ta bësh në
        vetëm gjashtë blloqe?
      4-5 Maze 13_instruction: Më ço tek derrkuci!
      4-5 Maze 14_instruction: Me ço tek derrkuci! Përdor bllokun Repeat until.
      4-5 Maze 2 (copy 1)_instruction: |
        Çoje zombien tek luledielli, por shmang
        përtypjen!
      4-5 Maze 2_instruction: Çoje zombien tek luledielli, por shmang përtypjen!
      4-5 Maze 3 (copy 1)_instruction: Duhet... të arrij... tek luledielli.
      4-5 Maze 3_instruction: Duhet... të arrij... tek luledielli.
      4-5 Maze 4 (copy 1)_instruction: 'Provo bllokun "përsërit" për të përdorur më pak blloqe...'
      4-5 Maze 4_instruction: 'Provo bllokun "përsërit" për të përdorur më pak blloqe...'
      4-5 Maze 5 (copy 1)_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      4-5 Maze 5_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      4-5 Maze 6 (copy 1)_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      4-5 Maze 6_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      4-5 Maze 7_instruction: |
        I dashur person. Unë zombie. Duhet... arrij...te
        luledielli.
      4-5 Maze 8_instruction: |
        Përdor bllokun "repeat" për të çuar zombien tek
        luledielli. (Shmang përtypjet!)
      4-5 Maze 9_instruction: 'Krijo një cikël me bllokun "repeat until".'
      4-5 Maze Assessment 1_instruction: 'Vlerësimi: Më ço tek luledielli.'
      4-5 Maze Conditionals 1_instruction: |
        Përdor bllokun repeat until për të
        çuar zombien tek luledielli.
      4-5 Maze Conditionals 10_instruction: |
        A mund të shtosh vetëm 3 blloqe  për të më ndihmuar mua
        të zgjidh një tunel më kompleks? Nëse e bbën si duhet, unë mund të eci në çdo rrugicë të gjarpëruar
        pavarësisht gjatësisë.
      4-5 Maze Conditionals 2_instruction: |
        Përdor bllokun repeat until për të
        çuar zombien tek luledielli.
      4-5 Maze Conditionals 3_instruction: |
        Përdor bllokun "if" për të më lejuar mua të vendos
        kur të kthehem. Ndihmë: ty të duhet vetëm një bllok më shumë, por mëso si do ta ndërtojmë ne
        atë  që ti ta bësh vetë herës tjetër.
      4-5 Maze Conditionals 4_instruction: |
        Ok, kjo është si puzzle i fundit,
        por ti duhet të kujtosh se si përdore bllokun "if" dhe "repeat"
        bashkë.
      4-5 Maze Conditionals 5_instruction: |
        Unë dua një luledielli! Përdor një bllok "if"
        për të më çuar mua atje me numrin më të pakët të blloqeve.
      4-5 Maze Conditionals 6_instruction: |
        Unë dua një luledielli! Përdor një bllok "if"
        për të më çuar mua atje me numrin më të pakët të blloqeve.
      4-5 Maze Conditionals 7_instruction: |
        Ok, le ta bëjmë përsëri për tu praktikuar
        - kjo nuk është shumë ndryshe, por kujdes për përtypësit!
      4-5 Maze Conditionals 8_instruction: |
        Blloqet "if-alese" kërkojnë një kush,
        dhe më pas bëjnë një gjë OSE një tjetër. Për të më çuar tek luledielli përpiqu të përdorësh
        këtë bllokun e ri.
      4-5 Maze Conditionals 9_instruction: |
        Një praktikë më shumë për bllokun
        "if-else", a mund ta bësh si duhet me përpjekjen e parë?
      4-5 Maze Conditionals Assessment 1_instruction: |
        Përdor një bllok "repeat until" dhe
        një "if-else" për të më çuar tek luledielli në sa më pak blloqe që ka mundësi.
      4-5 Nested Loops 1_instruction: |
        Plotëso kodin për të vizatuar këta
        trekëndorë. I pari është bërë për ty. Ndihmë: 3 trekëndorë në një rrotullim
        360 gradë.
      4-5 Nested Loops 10_instruction: Vizato rreshtin e fundit te ketij flamuri duke lidhur blloqet e dhëna. Yjet janë 50 piksel larg, por mos harro që vet yjet janë 30 piksel të gjerë.
      4-5 Nested Loops 11_instruction: 'Mund të vizatosh këto 10 rretha në trotuar duke përdorur një litar të  nyjëzuar? Secili rreth është 30 piksel.'
      4-5 Nested Loops 12_instruction: Mund të vizatosh 36 trekëndësha duke përdorur një litar të nyjëzuar?
      4-5 Nested Loops 2_instruction: 'Lidhe këtë litar me një tjetër për të vizatuar 10 trekëndësha. Ky quhet litar i nyjëzuar. Kujdes: Të gjithë 10 trekëndëshat duke plotësuar një rrotullim prej 360 gradësh.'
      4-5 Nested Loops 3_instruction: "Formo një diell duke lidhur kodin e fillimit me një tjeter litar. Ky quhet litar i nyjezuar.\r"
      4-5 Nested Loops 5_instruction: Ciklo kodin e dhënë për të krijuar një mulli ere.
      4-5 Nested Loops 6_instruction: Mund te vizatosh nje gjashtekendesh duke lidhur kodin e trekendeshit?
      4-5 Nested Loops 7_instruction: 'Lidh kete dizenjo 10 here. Sa here duhet te kthehesh per cdo here qe e nyjezon litarin? (Kujdes: Sa eshte 360 e ndare ne 10-she?)'
      4-5 Nested Loops 8_instruction: "Nyjezo kete dizenjo 6 here.  Sa here te duhet t'i kthehesh per t'i nyjezuar? (Shenim: Sa i bie te jete 360 e ndare ne 6 pjese?)"
      4-5 Nested Loops 9_instruction: Vizato dhëmbët në gojën e krokodilit!
      4-5 Nested Loops Assessment 1_instruction: Perdor nje litar te nyjezuar per te plotesuar dizenjon.
      4-5 While Loops 1_instruction: 'Me transporto te gropa dhe mbushe me dy lopata te mbushura me balte, duke perdorur bllokun "ploteso".'
      4-5 While Loops 2_instruction: 'Me dergo tek grumbulli i baltes dhe pastroje me dy grumbuj lopate duke perdorur bllokun "fshij".'
      4-5 While Loops 3_instruction: "Me dergo te grumbulli qe t'a pastroj te gjithin, pastaj zhvendosu te gropa dhe mbushe te teren. Shenim: Perdor sa me shume blloqe te jete e mundur."
      4-5 While Loops 4_instruction: 'Wow, gjeta nje grope shume te thelle! Nuk e di sa lopata balte nevojiten. Mund te shkruash nje program qe e mbush derisa toka te jete e sheshte? Shenim: Provo te perdoresh nje litar tek kesaj here.'
      4-5 While Loops 5_instruction: Wow, tani u bene dy gropa te thella! Arrin dot te gjesh nje program qe i mbush derisa te sheshohet toka?
      4-5 While Loops 6_instruction: Wow, tani eshte nje grumbull i stermadh balte! Arrin dot te shkruash nje program qe e pastron te gjithen derisa te sheshohet toka?
      4-5 While Loops 7_instruction: Wow, tani jane tre grumbuj balte! Arrin dot te shkruash nje program i cili fshin secilin prej tyre derisa toka eshte e sheshte?
      4-5 While Loops 8_instruction: 'U be nje grope shume e thelle dhe nje grumbull i madh balte. Sa lopata balte duhet te vendosen anash ne menyre qe te sheshohet toka? Shenim: Perdor nje litar te vetem per te dyja.'
      4-5 While Loops Assessment 1_instruction: "Ka shume gropa dhe grumbuj. Me ndihmo t'i mbush dhe fshij qe te sheshoj token."
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      AppLab_test02_instruction: |
        One sentence summary of the activity. Click to
        view full instructions.
      Artist - Nested Loops 1_instruction: |
        Plotëso kodin për të vizatuar këta
        trekëndorë. I pari është bërë për ty. Ndihmë: 3 trekëndorë në një rrotullim
        360 gradë.
      Artist - Nested Loops 10_instruction: |
        Vizato rreshtin e fundit të yjeve në këtë flamur
        duke cikluar blloqet e dhënë. Yjet janë 50 piksela larg, por kujto
        që yjet vetë janë 30 piksela të gjerë.
      Artist - Nested Loops 11_instruction: |
        A mund të vizatosh 10 katrorë të kësaj
        rruge duke përdorur një cikël të mbivendosur? Çdo katror është 30 piksela.
      Artist - Nested Loops 12_instruction: |
        A mund ti vizatosh këto 36 trekëndorë duke përdorur
        një cikël të mbivendosur?
      Artist - Nested Loops 2_instruction: |
        Tani mbivendos këtë cikël brenda një tjetri
        cikël për të vizatuar 10 trekëndorë. Ky quher një cikël i mbivendosur. Ndihmë: Të 10-të trekëndorët
        bëjnë një rrotullim prej 360 gradësh.  
      Artist - Nested Loops 3_instruction: "Krijo një diell duke mbivendosurkodin e fillimit\nnë një cikël tjetër. Ky është quajtur një cikël i mbivendosur.\r\n"
      Artist - Nested Loops 5_instruction: Ciklo kodin e dhënë për të krijuar një mulli ere.
      Artist - Nested Loops 6_instruction: |
        A mund të vizatosh një gjashtëkëndësh duke cikluar
        kodin e trekëndorit?
      Artist - Nested Loops 7_instruction: |
        Ciklo këtë dizenjim 10 herë. Sa
        duhet të kthehesh çdo herë që ti ciklon? (Ndihmë: Sa është 360 pjestuar me 10?)
      Artist - Nested Loops 8_instruction: |
        Ciklo këtë dizenjim 6 herë. Sa
        duhet të kthehesh çdo herë që ti ciklon? (Ndihmë: Sa është 360 pjestuar me 6?)
      Artist - Nested Loops 9_instruction: Vizato dhëmbët në gojën e krokodilit!
      Artist - Nested Loops Assessment 1_instruction: |
        Përdor një cikël të mbivendosur për të përfunduar
        dizenjimin.
      Big Game Animation 1 (copy 1)_instruction: |
        Tani që ti kë mësuar të shkruash
        funksione të thjeshtë linearë, le të punojmë për ti përdorur ato  që të shtojmë disa lëivzje tek
        loja jonë. Kliko luaj për të parë çfarë mund të bëjë për momentin loja jote (jo shumë!), përditëso
        çdo variabël që dëshiron, dhe më pas kliko përfundo për të vazhduar më tej.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click run to see what your game can currently do (not much!), update any variables
        you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        Funksioni 'update-target'
        merr vlerën x të targetit, dhe rikthen një vlerë të ndryshuar.
        Përfundo funksionin 'update-target' që të shtojë një vlerë x çdo herë 
        që thërritet. Sa më shumë ti shton tek x, më shpejt do shkojë targeti.
      Big Game Animation 2_instruction: |
        The update-target function takes the target's
        current x value, and returns an updated value. Complete the update-target
        function so that it adds to the x value each time it is called. The more you
        add to x, the faster the target will go.
      Big Game Animation 3_instruction: |
        Funksioni 'update-danger' duhet të punojë
        si 'update-target', përveç se rreziku duhet të lëvizë nga e djathta
        sipër në të majtë. Përfundo funksionin 'update-danger' për të bërë
        rrezikun të fluturojë mes ekranit.
      Big Game Animation 4_instruction: |
        At this point your game your danger should
        run across the screen from right to left, and your target should run across
        from left to right. They don't ever come back on screen once they've left,
        but we'll take care of that later. Take a minute to make sure your game is
        working like you want it to, and then click finish to move on.
      Big Game Booleans 1_instruction: |
        Kur ti punove për herë të fundit me lojën tënde
        ne pamë targetin tonë dhe zanën e rrezikut që fluturonin në ekran, por ato kurrë
        nuk u kthyen. Kliko run për të parë se si loja jote është duke punuar për momentin, dhe më pas kliko
        mbyll dhe ne do punojmë që ti bëjmë ato zana të rishfaqen në ekran pasi kanë ikur.
      Big Game Booleans 2_instruction: |
        Go to the Functions section of the toolbox
        and complete the safe-left? function so that it returns true if the sprite's
        x coordinate is greater than -50. If you're successful you should see the
        Danger go off the left side and then return on right side.
      Big Game Booleans 3_instruction: |
        Now that you've got safe-left?, let's fill
        in safe-right? - it should take in a sprite's x coordinate and return true
        if that coordinate is less than 450. Once your safe-right? is complete you
        should see the Target go off the right side of the screen and return on the
        left.
      Big Game Booleans 4_instruction: |
        Complete the onscreen? function so that it
        checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: |
        At this point your danger should run across
        the screen from right to left, your target should run across from left to
        right, and they should both return to the opposite side, repeatedly. Take
        a minute to make sure your game is working like you want it to, and then click
        Finish to move on.
      Big Game Collision 1 (copy 1)_instruction: |
        Kur ti punove për herë të fundit me lojën tënde
        ne pamë targetin tonë dhe zanën e rrezikut që fluturonin në ekran, por ato kurrë
        nuk u kthyen. Kliko run për të parë se si loja jote është duke punuar për momentin, dhe më pas kliko
        mbyll dhe ne do punojmë që ti bëjmë ato zana të rishfaqen në ekran pasi kanë ikur.
      Big Game Collision 1_instruction: |
        At this point you've programmed a video
        game with a moving target and danger, both of which return to the screen once
        they've left, and a player that responds to keyboard input. Click run to
        see how your game is currently working, and then we'll dig into the final
        missing piece - collision detection!
      Big Game Collision 2_instruction: |
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so that if moves the player
        up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: |
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete (copy 1)_instruction: |
        Një demonstrim i CS së përfunduar në Algjebër
        Projekt i Lojës së Madhe
      Big Game Complete_instruction: |
        Një demonstrim i CS së përfunduar në Algjebër Projekt i
        Lojës së Madhe
      Big Game Final_instruction: |
        Ti ja dole! Në këtë pikë loja jote duhet të jetë e plotë
        nga ana funksionale, kushtoji pak kohë për të shijuar lojën tënde të re dhe bëj një shkëputje
        finale nga ajo. Kur të jesh i lumtur me produktin final, kliko Finish
        dhe do të kesh mundësinë për të shpërndarë një link te loja jote. Punë të mbarë!
      Big Game Player 1_instruction: |
        We're getting really close to a finished game!Last
        time you worked on your game, you used booleans to make your Target and Danger
        return to the screen once they've left. Click Run to see how your game looks
        right now, and then we'll get to making your Player move up and down.
      Big Game Player 2_instruction: |
        Edit the update-player function so the player
        moves up when the up arrow (keycode 38) is pressed, and moves down (keycode
        40) when the down arrow is pressed.
      Big Game Testing_instruction: |
        Një demonstrim i CS së përfunduar në Algjebër Projekt i
        Lojës së Madhe
      Big Game Vars 1 (copy 1)_instruction: |
        Le të fillojmë me Lojën tënde të Madhe!
        Këtu do të shohësh një tufë me kod placeholder që ti përfundimisht
        do ta zëvendësosh me tënden, por tani për tani ne do të shqetëohemi për
        përcaktimin e variablave. Kliko "Run" për të parë se si duket loja me vlerat
        default.
      Big Game Vars 1_instruction: |
        Le të fillojmë me Lojën tënde të Madhe!
        Këtu do të shohësh një tufë me kod placeholder që ti përfundimisht
        do ta zëvendësosh me tënden, por tani për tani ne do të shqetëohemi për
        përcaktimin e variablave. Kliko "Run" për të parë se si duket loja me vlerat
        default.
      Big Game Vars 2 (copy 1)_instruction: |
        Hapi i parë për të bërë lojën
        tënden është ti japësh një Titull të mirë. Kliko redakto tek variablat
        'titulli' dhe 'nëntitulli' dhe ndryshoji ato me diçka të re.
      Big Game Vars 2_instruction: |
        Hapi i parë për të bërë lojën
        tënden është ti japësh një Titull të mirë. Kliko redakto tek variablat
        'titulli' dhe 'nëntitulli' dhe ndryshoji ato me diçka të re.
      Big Game Vars 3 (copy 1)_instruction: |
        Tani le të vendosim sfondin për
        lojën tënde të re. Redakto varialin 'bg' dhe zgjidh një Imazh sfondi të ri nga
        dropdown menu.
      Big Game Vars 3_instruction: |
        Tani le të vendosim sfondin për lojën tënde të re.
        Redakto varialin 'bg' dhe zgjidh një Imazh sfondi të ri nga dropdown menu.
      Big Game Vars 4 (copy 1)_instruction: |
        Bukur, tani ti mund të përditësosh variablat
        për Lojtarin tënd, Objektivin, dhe Rrezikun. Ndihu i lirë të luash me të gjithë variablat
        në këtë pikë për të bërë lojën tënde të duket siç dëshiron ti. Kliko 'përfundo'
        kur të kesh përfunduar.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Building a Foundation Assessment_instruction: |
        Ndërto një piramidë tre nivelesh,
        nuk ka drejtime të tjera, kështu që vetëm luaj me këto pjesë derisa ta bësh
        atë!
      C3-Farmer While Loops 1_instruction: |
        Më lëviz për të gropa dhe mbushe atë me
        dy lopata me dhe, duke përdorur bllokun "fill".
      C3-Farmer While Loops 2_instruction: |
        Më lëviz mua për te grumbulli me dhe dhe hiqe
        atë me 5 lopata të mëdha, duke përdorur bllokun 'remove'.
      C3-Farmer While Loops 3_instruction: |
        Më lëviz mua për te grumbulli dhe hiqe
        të gjithën, më pas lëvize te gropa dhe mbushe atë komplet. Ndihmë: Përdor sa më pak blloqe
        të jetë e mundur.
      C3-Farmer While Loops 4_instruction: |
        Wow, unë gjeta një gropë vërtet të thellë! Unë nuk
        e di sa lopata me dhe nevojiten. A mund të shkruash një program që mbush
        atë derisa toka të jetë e sheshtë? Ndihmë: Përpiqu të përdorësh ciklin while këtë herë.
      C3-Farmer While Loops 5_instruction: |
        Wow, tani janë dy gropa të thella! Mund
        të shkruash një program që mbush të dyja derisa toka të jetë e sheshtë?
      C3-Farmer While Loops 6_instruction: |
        Wow, tani është një grumbull i madh me dhe!
        A mund të shkruash një program që heq të gjithin që toka të jetë e sheshtë?
      C3-Farmer While Loops 7_instruction: |
        Wow, tani janë tre grumbuj me dhe!
        A mund të shkruash një program që heq secilin nga ata derisa toka të jetë e sheshtë?
      C3-Farmer While Loops 8_instruction: |2
         Është një gropë vërtetë e thellë dhe një
        grumbull vërtet i madh me dhe. Sa lopata me dhe nevojiten për tu hequr rreth
        tokës që të bëhet e sheshtë? Ndihmë: Përdor ciklin while për të dyja.
      C3-Farmer While Loops Assessment 1_instruction: |
        Ka shumë gropa dhe
        grumbuj. Më ndihmo të mbush gropat e të heq grumbujt që të bëj tokën e sheshtë.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |
        Ky Bllok Vlerësimi është një funksion
        shumëzimi i cili merr 2 numra dhe kthen prodhimin e atyre numrave.
        Redakto kët bllok që të shumëzojë 2*5
      Calc Circles of Eval .3_instruction: |
        Here's a function for Addition which
        takes two numbers and returns their sum. Use this Addition block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |
        Këtu kemi mbivendosur një Bllok Mbledhjeje
        brenda një Blloku Shumëzimi. Përfundo këtë kod që të shumëzojë 3 me (4 +
        1)
      Calc Circles of Eval 1 (copy 1)_instruction: |
        Ndrysho këtë formulim në <some_shape>
        vlerësimi.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |
        Ndrysho këtë formulim në <some_shape>
        vlerësimi.
      Calc Circles of Eval 2_instruction: |
        Use a multiplication block to complete
        this code.
      Calc Circles of Eval 3_instruction: |
        Përfundo Blloqet e Vlerësimit për ta lidhur
        me këtë formulim.
      Calc Circles of Eval 4_instruction: |
        Këtij blloku i mungojnë një grup Blloqesh
        Vlerësimi - sigurohu të vendosësh gjithçka në rendin e duhur.
      Calc Circles of Eval 5_instruction: |
        Përfundo Blloqet e Vlerësimit për ta lidhur
        me këtë formulim.
      Calc Circles of Eval 6_instruction: |
        Përfundo Blloqet e Vlerësimit për të lidhur
        këtë formulim.
      Calc Circles of Eval 7_instruction: |
        Përfundo Blloqet e Vlerësimit për ta lidhur
        me këtë formulim.
      Calc Circles of Eval 8_instruction: |
        Përfundo Blloqet e Vlerësimit për të lidhur
        këtë formulim.
      Calc Circles of Eval 9_instruction: |
        Përfundo Blloqet e Vlerësimit për ta lidhur
        me këtë formulim.
      Calc Circles of Eval Free Play_instruction: |
        Lojë Falas: Përpiqu të përdorësh Blloqet
        e Vlerësimit për të shkruar disa ekuacione nga vetja jote. Si ndikon mbivendosja blloqeve në
        mënyra të ndryshme në vlerësimin e tyre?
      Calc Define Funcs 1 (copy 1)_instruction: |
        Le të shohim disa funksione
        më algjebrike tani. Këtu kemi një funksion të përkthyer nga funksioni algjebrik i thjeshtë
        f(x) = x + 1. Çfarë do të prisnit si output i këtij funksioni nëse i jepet një input 15?
        
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |
        Shkruaj një funksion "f" që merr një parametër
        "x" dhe kthen x - 10. Testo funksionin tënd duke përdorur f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function 'f'
        every time; create a function called 'times-ten' that should take a parameter
        'x' and return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called cube - this function should have a domain of Number, range
        of Number, and return the given number to the power of 3. Make sure to write
        two example cases! When you're done, use your new function to calculate 7
        cubed.
      Calc Design Recipe 2_instruction: "Your school is holding a bake sale, and\nyou need to track the cost of making each cookie, the money paid, and the\ntotal profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r\nWrite\nthe function cost, which takes in the number of cookies you intend to sell,\nand returns the cost of making those cookies."
      Calc Design Recipe 3_instruction: |
        Write the function sales which takes in
        the number of cookies sold, and produces the amount of money customers spent
        to buy those cookies (each cookie is sold at $1.50).
      Calc Design Recipe 4_instruction: |
        Using the two functions we just wrote, write
        the function profit, which takes in the number of cookies you sold, and gives
        you back the total profit you make from selling your cookies, accounting for
        the cost of baking them.
      Calc Free Play_instruction: |
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: "In the last puzzle you wrote a contract\nfor the function \"rocket-height\" that states it has a range of Number, domain\nof Number, and should return the height of the rocket traveling at 15 m/s\nafter a given number of seconds. Let's write an example case now for the\nheight of the rocket at 3 seconds.\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 1_instruction: "In the last puzzle you wrote a contract for the\nfunction rocket-height that states it has a range of Number, domain of Number,\nand should return the height of the rocket traveling at 15 m/s after a given\nnumber of seconds. Let's write an example case now for the height of the\nrocket at 3 seconds.\r\n\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 2_instruction: |
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |
        Here's a new variable called age-in-months - use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: |
        Can you write an expression that calculates age in
        months?
      Calc Vars 3 (copy 1)_instruction: |
        A mund të shtosh tek ky kod që të llogarisë
        se sa orë ka në vitet e "moshës"?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |
        Ne gjithashtu mund të vendosim variable duke përdorur variabla të tjerë.
        Le të themi se ke një vëlla që është dy vite më i vogël se ju - a mund të
        vendosësh ti një variabël të ri "mosha-vëllait" duke përdorur variablin e "moshës" tënde?
      Code Studio Puzzle Challenge 1 - Artist_instruction: |
        Vizato vijën. Është
        200 piksela e gjatë. 
      Code Studio Puzzle Challenge 1 Artist1_instruction: |
        Vizato vijën. Është 200
        piksela e gjatë. 
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Lëvize Bletën tek lulja
        dhe merr gjithë nektarin.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Vizato një katror duke përdorur
        variablin e dhënë gjatësia.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |
        Kodi i dhënë vizaton
        një trekëndësh. Shto tek kodi të vizatojë trekëndësha një model gjashtëkëndëshi.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |
        Kodi i dhënë vizaton
        një trekëndësh. Shto tek kodi të vizatojë trekëndësha një model gjashtëkëndëshi.
      Code Studio Puzzle Challenge 13 - Artist_instruction: |
        This is just like a
        "for" loop. Complete the code to draw six lines that grow from 50, 60, 70,
        80, 90, to 100 pixels long. 
      Code Studio Puzzle Challenge 14 - Artist_instruction: |
        This is just like a
        "for" loop. Complete the loop to draw 4 squares that grow from 80, 100,
        120, to 140 pixels. 
      Code Studio Puzzle Challenge 2 - Artist_instruction: |
        Tani shto një kthim dhe një vijë
        tjetër. Vijat janë 200 piksela të gjata.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Vizato katrorin. Secila
        brinjë është 100 piksela e gjatë.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |
        Vizato tetëkëndëshin. Secila
        brinjë është 100 piksela e gjatë.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |
        Lëvize Bletën tek
        lulja dhe merr nektarin.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |
        Lulet përmbajnë një sasi
        të caktuar nektari. Lëvize Bletën tek lulja dhe mblidh nektarin me bllokun
        get nectar.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |
        Kosheret mund të mbajnë një sasi
        të caktuar mjalti. Merr nektarin nga lulja dhe bëj mjaltë.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Lëvize Bletën tek lulja
        dhe merr nektarin.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        Reja mund të jetë duke fshehur
        një lule ose një koshere. Vetëm merr nektar nga lulet. Vetëm bëj
        mjaltë tek kosheret.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        Reja mund të jetë duke fshehur
        një lule ose një koshere. Vetëm merr nektar nga lulet. Vetëm bëj
        mjaltë tek kosheret.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: |
        Draw
        the line. Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: |
        Complete the
        code to draw the line. Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Artist Screencast_instruction: |
        Vizato vijën.
        Secili segment është 100 piksela i gjatë. 
      Code Studio Puzzle Challenge Bee Screencast_instruction: |
        Lëvize Bletën tek
        lulet dhe merr gjithë nektarin.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      Course 2 Bee Loops 1_instruction: |
        Përshëndetje, unë jam një bletë. A mund të më ndihmosh të mbledh
        nektarin nga këto lulet? 
      Course 2 Bee Loops 13_instruction: |
        Vlerësim: Përdor bllokun repeat për të mbledhur
        gjithë nektarin.
      Course 2 Bee Loops 2_instruction: |
        A mund të bësh të njëjtën detyrë më lehtë me
        një cikël?
      Course 2 Bee Loops 3_instruction: |
        Tani përdor bllokun e ri repeat për të mbledhur
        gjithë nektarin dhe bëj mjaltin.
      Course 2 Bee Loops 3__instruction: |
        A mund të përdorësh një cikël për të mbledhur gjithë
        nektarin?
      Course 2 Bee Loops 4_instruction: |
        Çfarë ndodh nëse ti ciklon këtë sekuencë 3
        herë? Mos harro të bësh mjaltë në fund!
      Course 2 Maze Loops 1_instruction: A mund të më çosh tek derrkuci duke përdorur 5 blloqe?
      Course 4 2_instruction: Bleta tani do vetem nektare. Mos harro qe, jo te gjitha objektet jane lule prandaj shiko te mbledhesh nektarin vetem neper lule.
      Course 4 Artist 1_instruction: Me ndihmo te vizatoj nje kuti. (Secili rresht eshte 200 pixel i gjate)
      Course 4 Artist 10_instruction: Eshte koha e Lojes se Lire! Ja kodi per nje forme interesante. Cfare ndodh kur e perserit? Bej qejf dhe vizato cdo gje qe te pelqen.
      Course 4 Artist 11_instruction: "Tani nje sfide! Ketu eshte nje model i cili perdor vetem blloqet me te cilat ti je njohur tanime. Arrin dot t'a rindertosh pa ndonje te dhene shtese? Shenim: Mund te provosh veten dhe te gabosh. Nuk pritet t'a besh perfektesisht mire qe heren e pare."
      Course 4 Artist 12_instruction: "Loje e Lire Frymezuese: Tani ke mesuar gjithcka te nevojitet per te pergatitur nje dizenjo te tille! Nese kjo pamje te frymezon perpiqu te besh dicka te ngjashme. ne te kundert, krijo dicka tenden. \r\n\n\r\nDeshiron te dish si eshte pergatitur dizenjoja jote? Kliko ne butonin blu ne te djathte dhe me pas kliko butonin \"shiko zgjidhjen\"."
      Course 4 Artist 13_instruction: |
        Still playing?  Here is a blank canvas where
        you can design anything you want!
      Course 4 Artist 2_instruction: "Mund t'a permbledhesh kete kod per te nxjerre ate ne ngjyre grih jashte katrorit?"
      Course 4 Artist 20_instruction: |
        Still playing?  Here is a blank canvas where
        you can create whatever you want!
      Course 4 Artist 3_instruction: |-
        Perpiqu te kuptosh se cfare ndodh nese aplikon kete kod (apo shtyp "Jepi" per t'a provuar). Pastaj, perserite aq here sa do te nevojiten per te ploesuar vizatimin.
      Course 4 Artist 4_instruction: Sa grade jane ne nje rreth? Ploteso bllokun perserites me ate numer per te krijuar nje rreth ngjyrash.
      Course 4 Artist 5_instruction: "Vizato pjesen tjeter te kesaj dizenjoje qe te jete simetrike. Trekendeshat jane barabrinjes dhe jane 50 piksel te gjate. Shenim: Mund te te duhet te drejtosh disa here kodin qe te gjesh te gjtha blloqet qe te nevojiten t'i shtosh"
      Course 4 Artist 6_instruction: |
        Ploteso kodin per te vizatuar keta trekendesha.
        Shenim: Ne nje rrotullim prej 360 gradesh jane 3 trekendesha... Po per 3 here ne 360 grade sa do jete?
      Course 4 Artist 7_instruction: 'Tani fute kete litar brenda nje litari tjeter per te vizatuar 10 trekendesha. Ky quhet nje litar i lidhur. Shenim: Te 10-te kryejne nje rrotullim prej 360 gradesh.'
      Course 4 Artist 8_instruction: Vizato kete diell duke i nyjezuar gjithe keto grupe kodesh disa here.
      Course 4 Artist 9_instruction: 'Nyjezo kete dizenjo 10 here dhe sigurohu te kthehesh ne mes te seciles forme se vizatuar. Ketu keni nje shenim sesa do te duhet te kthesh: Sa eshte 360-ta e ndare ne 10 pjese?'
      Course 4 Artist Binary 1_instruction: Ja nje komande qe kerkon lidhje te dyfishte te pares dhe te dytes dhe e meson artistin te ndryshoje nisjen nga e majta ne te djathte, nga fillimi ne mes, duke plotesuar sheshet kur veren 1-shin dhe duke e anashkaluar kur veren 0-on. Shyp kete kod per te pare sesi artisti perdor lidhje te dyfishte per te bere modelin.
      Course 4 Artist Binary 2_instruction: Cilin nga keta tela binare do te lidhje 8 here per te vizatuar kete imazh?
      Course 4 Artist Binary 3_instruction: "Mund t'a besh kete model duke e lidhur nje tel 3 shifror binar?"
      Course 4 Artist Binary 4_instruction: "Secili tel binar perfaqeson nje rresht te ketij vizatimi. Mund t'i ribesh ne menyre qe te vizatoje nje fytyre te buzeqeshur ne vend te nje fytyre te verenjtur?"
      Course 4 Artist Binary 5_instruction: "Cili tel 6 shifror binar i perseritur 11 here do t'a vizatoje kete imazh?"
      Course 4 Artist Binary 6_instruction: Cili eshte teli me i shkurter binar qe ti mund te perserisesh per te vizatuar kete imazh?
      Course 4 Artist Binary 7_instruction: Perfundo kete vizatim.
      Course 4 Artist Binary Free Play 2_instruction: 'Loje e Lire: Ketu duhet nxjerre nje rezolute me e larte pikture - 16 pjese me 16 pjese!'
      Course 4 Artist Binary Free Play_instruction: "Loje e Lire: Vizato c'te duash me binarin!"
      Course 4 Artist For  Functions 10_instruction: |-
        T'a bejme pak me te veshtire: Arrin dot te vizatosh nje forme Ylli duke perdorur komanden "Vijezo nje rreth"? Suksese!
      Course 4 Artist For  Functions 11_instruction: |-
        T'a bejme pak me te veshtire: Arrin dot te vizatosh nje forme Ylli duke perdorur komanden "Vijezo nje rreth"? Suksese!
      Course 4 Artist For Loops 1_instruction: Vizato kete trekendesh qe eshte ne mase 50 piksel.
      Course 4 Artist For Loops 10_instruction: Koha e Lojes se Lire! Kenaqu duke vizatuar cfare te duash me format qe ke mesuar
      Course 4 Artist For Loops 11_instruction: 'E mban mend kur perdorem nje variabel per te pasur nen kontroll numrin e aneve ne nje forme? Ky model fillon me nje trekendesh dhe shton pjeset nje nga nje deri sa vizaton nje dhjetekendesh (10 faqe). Secila faqe duhet te jete 100 pixel e gjate. Shenim: 360-ta e ndare ne baze te pjeseve qe ka nje faqe perben edhe numrin e grades qe do te te duhet te rrotullisesh.'
      Course 4 Artist For Loops 11a_instruction: "Let's put it all together!  Using\nyour knowledge of \"for loops\" and the \"counter\", create this drawing where\neach shape has two more sides than the last.  Make sure that each side is\n10 times as long as the number of sides in the polygon.\r\n\r\nVery little\nof the code has been provided for you."
      Course 4 Artist For Loops 12_instruction: "Dukej goxha mire por tani do te doja te vizatoja secilen forme pas te fundit. Kete radhe secila ane eshte 20 pixel. Perdor nje pjese hedhjeje per t'u hedhur perpara 40 pixel pas seciles forme."
      Course 4 Artist For Loops 13_instruction: "Hmmm, format po rriten perhere e me shume! A nuk e zgjidhem kete problem me variablet? Si mund t'a perdorim variablen e kundert per te zvogeluar faqet kur ka me shume te tilla? Ne vend qe te ecesh perpara me nje shume te caktuar , perpiqu te ecesh (100/ ne ane te kundert) piksel."
      Course 4 Artist For Loops 14_instruction: Nese kthehesh pak me shume apo pak me pak se zakonisht , krijon nje efekt. Provo te kthehesh 89 grade per te formuar kete spirale katrore te shtremberuar.
      Course 4 Artist For Loops 15_instruction: 'Loja e Lire: Pepriqu te besh disa vizatime te tuat duke perdorur Per Litaret. Kemi shtuar disa variabla te pergjithshme qe mund te perdoresh.'
      Course 4 Artist For Loops 2_instruction: |-
        Kam vendosur kodin per te vizatuar nje trekendesh brenda nje "per litar" e cila numeron nga 50 deri ne 100 nga 10. Shiko se si e kam ndertuar pastaj "Jepi" kur te jesh gati t'a shikosh ne veprim.
      Course 4 Artist For Loops 3_instruction: 'Trekendeshi me i vogel i ka faqet 20 piksel, me i madhi i ka 200 piksel, dhe secili trekendesh eshte 20 piksel me i madh se i fundit. Perditeso "per litar"-in per te vizatuar trekendshat.'
      Course 4 Artist For Loops 4_instruction: 'Perdor nje "per litar" per te vizatuar rrethat. Fillojne me nje gjatesi 50 piksel, me i madhi fillon me 300 piksel gjatesi, dhe secili katror eshte 25 piksel me i madh se i fundit. Te kam dhene thuajse te gjithe kodet qe te nevojiten, te mungon nje pjese, cila eshte?'
      Course 4 Artist For Loops 5_instruction: 'Pune te mbare me pjesen e fundit! te perdorim serisht bllokun e ndryshem "te kundert" per te vizatuar kete pikture te bukur.'
      Course 4 Artist For Loops 6_instruction: 'Loje e Lire! Provo te perdoresh nje "per litar" per te vizatuar nje model me forme ne zmadhim per modelin tend.'
      Course 4 Artist For Loops 7_instruction: 'Cfare ndodh nese e fshin "Perserit 3" nga algoritmi, duke mbajtur blloqet "leviz" dhe "kthe" ne "per lopaten"? Ne kete kete trekendesh spiral, secila ane eshte 20 piksel me e madhe se e fundit.'
      Course 4 Artist For Loops 8_instruction: "Vija me e vogel e ketij rrethi spiral eshte 10, me e madhja 200, dhe secila vije eshte 10 piksel me e gjate se e fundit. Mund t'i plotesosh blloqet qe mungojne per te plotesuar kete pikture te shkelqyer?"
      Course 4 Artist For Loops 9_instruction: Arrin dot te besh nje spirale? Leviz perpara nga 1 ne 75 piksel, duke e rritur me 1 piksel secilen here.
      Course 4 Artist For Loops inspire_instruction: "Free Play Inspiration: You've\nnow learned everything you need to know to make a pattern like this! If this\npicture inspires you, try to make something similar. Otherwise, create something\nall your own.\r\n\r\nWant to know how our inspiration pattern was made? Visit\nhttps://studio.code.org/c/106387604 for the solution."
      Course 4 Artist Functions 1_instruction: Mund te vizatosh nje rreth qe eshte 100 piksel i gjate, duke perdorur nje litar?
      Course 4 Artist Functions 10_instruction: Cilen pjese duhet te shtosh qe trekendeshi te vendoset siper rrethit?
      Course 4 Artist Functions 11_instruction: |-
        Shiko kete kod qe vizaton nje kub- mund t'a levizesh brenda nje komande qe quhet "Vizato nje Kub"
      Course 4 Artist Functions 12_instruction: Ciklo funksionin katror për të vizatuar një vijë
      Course 4 Artist Functions 13_instruction: 'Shikoje, kemi nje komande te re te quajtur "vizato nje rresht rrethash". Mund te shikosh pjeset e komandave per te pare si e kemi ndertuar. Kliko ne "jepi" kur te jesh gati per lojen e ardhshme.'
      Course 4 Artist Functions 14_instruction: 'Bravo! Le te perdorim komanden tende te re " Vizato nje rresht rrethash" per te vizatuar formen e nje Rrethi. Mos harro qe secili rreth eshte 40 piksel i gjate.'
      Course 4 Artist Functions 15_instruction: |-
        Le t'a veshtiresojme pak,  mund t'a vizatosh formen e nje ylli duke perdorur komanden "vizato nje rresht rrethash"? Suksese! Shenim: mund te te duhet te kthehesh 144 grade 
      Course 4 Artist Functions 2_instruction: 'Mund te vizatosh 3 rrethe, 20 piksel larg njera-tjetrit? Shenim: secili rreth eshte 100 piksel ne madhesi'
      Course 4 Artist Functions 3_instruction: "Duke përdorur bllokun e funksionit \"draw a square\",\na mund të vizatosh këtë figurë? Ndihmë: secili katror është 120 piksela larg njëri tjetrit.\r\n"
      Course 4 Artist Functions 4_instruction: 'A je gati te krijosh "Banken tende Funksionale"? Kliko ne bllokun " Komanda" ne kutine e veglave, emeroje "vizato nje trekendesh" , me pas krijo nje trekendesh sic bere me pare me blloqet Veprim dhe Litare. Pastaj kliko ne Ruaj dhe dhe Mbyll ne cepin e djathte. Shenim: Vizato nje trekendesh me gjatesi 100 piksel. Suksese!'
      Course 4 Artist Functions 5 OLD_instruction: "Le te perpiqemi te perdorim dy komanda per te vizatuar nje shtepi- cfare duhet te ndreqim ne kete kod ne menyre qe t'a vizatojme shtepine sic duhet?"
      Course 4 Artist Functions 5_instruction: "Duke përdorur bllokun e funksionit \"draw a square\",\na mund të vizatosh këtë figurë? Ndihmë: secili katror është 120 piksela larg njëri tjetrit.\r\n"
      Course 4 Artist Functions 6_instruction: Cilen pjese duhet te shtosh qe trekendeshi te vendoset siper rrethit?
      Course 4 Artist Functions 7_instruction: Mund te vizatosh nje rresht me rrathe duke perdorur komanden e Rrumbullaket? Secili rreth ne gjatesi 40 piksel.
      Course 4 Artist Functions 8_instruction: |-
        Po e kupton si funksionojne blloqet e komandave? Le t'a modifikojme kete rreth qe te jete ne madhesine 200 piksel. Shenim: kliko ne "modifiko" per te ndryshuar madhesine e komandes se  redaktimit "vizato nje rreth". Mos harro te klikosh ne "ruaj dhe mbyll" per te dale nga komanda e redaktimit.
      Course 4 Artist Functions 9_instruction: "Te kemi dhene shumicen e kodit per te krijuar komanden. Gjithsesi mesa duket dicka mungon. Mund t'a plotesosh kete bllok komande?"
      Course 4 Artist Inspire_instruction: "Frymezim nga Loja e Lire: Tani ke mesuar gjithcka te nevojitet per te krijuar nje model te tille! Nese kjo foto te frymezon perpiqu te besh dicka te ngjashme. Ose, krijo dicka tenden. \r\n\n\r\nDeshiron te dish si eshte bere modeli yt frymezues? Kliko ne butonin blu ne te djathte dhe me pas kliko ne butonin: \"shiko zgjidhjen\"."
      Course 4 Artist Params 1_instruction: Le te redaktojme nje komande qe vizaton nje rreth me faqe 50 piksel
      Course 4 Artist Params 10_instruction: 'Mund te therrasesh komanda nga brenda komandave te tjera! Duke perdorur "formen" tende si baze komande, krijo siluetat e 3 shtepive secila 20 piksel me e madhe se e fundit duke filluar me 50 piksel gjatesi. Perdorimi i nje litar te kundert mund te te vije mjaft ne ndihme. '
      Course 4 Artist Params 11_instruction: |
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: 'Perdor komanden tende te " helikes rrotulluese" per te vizatuar secilen nga keto silueta. Gjatesia e faqes per secilin imazh duhet te jete 50.'
      Course 4 Artist Params 13_instruction: 'Loje e Lire: Ketu jane komandat e shkruara nga ti, dhe disa te tjera me te cilat mund te argetohesh. Vizato dicka te bukur!'
      Course 4 Artist Params 2_instruction: |
        That triangle function would be a whole
        lot more useful if it could draw triangles of different sizes. I've added
        a parameter for line length, but it doesn't do anything yet. Can you update
        the function so it uses the "length" parameter when it draws each side?
        The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: 'Shkelqyeshem, mund te vizatosh secilin nga keta trekendesha me kete komande te re?  I pari eshte 25 piksel i gjate, i dyti 50 dhe i treti eshte 75.'
      Course 4 Artist Params 4_instruction: Mund te shtosh nje funksion te ri te quajtur rreth? Edhe ky duhet te kete nje parameter gjatesi, ashtu si trekendeshi. Kete radhe vizato 3 rrathe, 25, 50 dhe 75 piksel ne gjatesi dhe 100 piksel large.
      Course 4 Artist Params 5_instruction: |
        Perdor te dyja komandat e reja per te bere kete vizatim. 
        Per t'a lehtesuar perdor nje litar me nje parameter "te kundert".
      Course 4 Artist Params 6_instruction: |
        Le t'a redaktojme kete komande "vizato nje forme". 
        Ajo e ka nje parameter "gjatesi" tanime. Tani, le t'a redaktojme komanden per te shtuar nje parameter "faqet". Mos harro qe kendi i kthimit per nje forme te dhene eshte 360 i ndare ne baze te aneve qe ka. Shenim: per cdo trekendesh gjatesia e seciles siluete eshte 100 piksel, gjashtekendeshi eshte 25 piksel dhe rrethi 50 piksel.
      Course 4 Artist Params 7_instruction: |-
        Mund t'i vizatosh keto silueta duke plotesuar "???"  Rrethi dhe trekendeshi jane 100 piksel ne madhesi dhe gjashtekendeshi eshte 75 piksel ne mase.
      Course 4 Artist Params 8_instruction: "Arrin dot te gjesh si mund t'a vizatosh kete siluete? Ja nje shenim: formo nje komande te re me 6 faqe te quajtur 6-kendesh."
      Course 4 Artist Params 9_instruction: |-
        E mban mend kur perdorem litarin e kundert por e hoqem litarin brenda? Le te argetohemi dhe te perdorim komanden "vizato nje siluete" me parametrat e "faqeve" dhe "gjatesise". Arrin dot t'i krijosh keto silueta? Pjesa e prapme e katrorit duhet tejete 5/100/5, pjesa e prapme e trekendeshit duhet te jete 10/100/10 dhe gjashtekendeshi eshte 2/100/2
      Course 4 Artist Var 9_instruction: |
        Këtu kemi algoritmin për të vizatuar një trekëndësh,
        modifikje atë që të përdorë variablat "brinjë". Rivendos numrin 3
        me variablën "brinjët". Ndihmë: kujto të përdorësh bllokun "vendos brinjët tek".
      Course 4 Artist Vars 1_instruction: Me ndihmon dot te vizatoj nje trekendesh? Eshte 100 piksel i gjate nga te gjitha anet.
      Course 4 Artist Vars 10_instruction: |-
        Ketu eshte nje algoritem qe vizaton nje trekendesh nga disa trekendesha. Arrin dot t'a modifikosh qe te perdori "faqe" te ndryshme per te vizatuar secilin trekendesh? Shiko permes kodit, dhe cdo here qe shikon numrin 3, zevendesoje me "faqet" e ndryshueshme. Mos harro te perdoresh bllokun "vendos faqet".
      Course 4 Artist Vars 11_instruction: |-
        Ketu eshte i njejti algoritem qe perdorem per lojen e fundit, me cfare duhet "t'i ndryshosh" faqet ne menyre qe t'a vizatosh kete pikture jashte katroreve?
      Course 4 Artist Vars 12_instruction: |-
        Le te shikojme "faqet" e ndryshueshme deri ne 5. Sa me shume faqe i shtojme ketij algoritmi, aq me i madh del i gjithe ky model! Vere qe eshte nje variabel e re e quajtur "gjatesi". Tani mund t'a perdorim ate sa here qe kemi "nje levizje perpara". Vendos "gjatesine" e ndryshueshme deri ne 75 per kete forme.
      Course 4 Artist Vars 13_instruction: 'Sa me shume faqe ka nje forme aq me e shkurter duhet te jete secila faqe ne menyre qe i gjithe modeli te perputhet ne ekran. Ne vend qe te vendosni manualisht "gjatesine" e ndryshueshme, le te perdorim "faqet" e ndryshueshme dhe llogarit blloqet per te vendosur "gjatesine". Zgjidh llogaritjen e duhur nga toolbox per te vendosur "gjatesine" e ndryshueshme dhe per te perditesuar  "faqet" e ndryshueshme.'
      Course 4 Artist Vars 14_instruction: 'Loje e Lire: Shiko, algoritmi yt eshte bashkuar me nje litar tjeter. Eksperimento duke ndryshuar vlerat e variablave te tua per te formuar modele te shkelqyera.'
      Course 4 Artist Vars 2_instruction: |
        Ne vend qe "te ecesh perpara me 100",
        blloku "i levizjes' po i referohet tani variables se "gjatesise". Mund t'a vendosesh "gjatesine" deri ne 150 per te vizatuar kete trekendesh?
      Course 4 Artist Vars 3_instruction: |-
        Ja litari qe viazaton nje katror, por dicka mungon. Arrin dot t'a ndreqesh ne menyre qe te perdori "gjatesine" e ndryshueshme per t'a ditur sa e gjate duhet te jete?
      Course 4 Artist Vars 4_instruction: 'Tani deshiroj te vizatoj nje drejtkendesh qe e ka gjatesine sa dyfishi i gjeresise. Kemi nje variabel qe quhet "gjeresi" qe eshte 100. Mund te perdoresh blloqet e matematikes per te plotesuar kodin?'
      Course 4 Artist Vars 5_instruction: 'Perdor "faqet" e ndryshueshme per te kontrolluar sa here perdoret ky litar.'
      Course 4 Artist Vars 6_instruction: "I ndryshova faqet e ndryshueshme ne 4 nga kodi ne lojen e fundit, mund te perdoresh faqet e ndryshueshme (bashke me bllokun e matematikes) per t'u siguruar qe e bej rrotullimin ne masen e duhur? Per te vizatuar nje shumekendesh te thjeshte duhet te rrotullohem 360 grade secilen here."
      Course 4 Artist Vars 7_instruction: 'I modifikon dot "faqet" e ndryshueshme qe te me ndihmosh te vizatoj kete gjashtekendesh?'
      Course 4 Artist Vars 8_instruction: |-
        Loje e Lire: Eksperimento me numrin e aneve te kesaj siluete. Arrin dot t'a ndryshosh algoritmin ne menyre qe masa e pergjithshme te mos ndryshoje, pavaresisht aneva qe ka? Shenim: Mund te te duhet te perdoresh blloqet e tua te matematikes (360 e ndare me "pjese" ne dy ane kete radhe)
      Course 4 Artist Vars 9_instruction: |-
        Modifiko kete algoritem ne menyre qe t'i perdori "pjeset" e ndryshueshme ne vend te nje numri fiks per te vizatuar nje trekendesh. Perdor "vendos anet" ne bllok.
      Course 4 Bee 1_instruction: Bleta nuk tregon dot se cfare ka poshte rese! Se pari, shiko nese eshte nje lule apo nje krimb. Me pas mbidh vetem nektarin nese eshte nje lule.
      Course 4 Bee 2_instruction: "Kontrollo secilin objekt per te pare nese eshte nje lule. Nese eshte e tille, merrja nektarin... ne te kundert, mund t'a injorosh!"
      Course 4 Bee 3_instruction: |
        Objekti i panjohur eshte ose nje lule ose nje krimb.
        Perdor blloqet nese/tjeter per te mbledhur nektarin ne rast se eshte nje lule, per te prodhuar mjalte ( sepse ne te kundert do te ishte nje krimb).
      Course 4 Bee 4_instruction: Kjo lule lejla mund te kete 3, 2, ose 1 nektar. Ketu nje bllok nese-tjeter kombinohet me nje bllok tjeter nese-tjeter per te krijuar nje bllok tjeter nese dhe tjeter. Jep zgjidhjen per te mbledhur sasine e panjohur te nektarit.
      Course 4 Bee 5_instruction: |
        This purple flower may have either 3, 2, or 1
        nectar. Add an if-else block to create an if, else-if, else block. Complete
        the solution to collect the unknown amount of nectar.
      Course 4 Bee 6_instruction: |
        This purple flower may have either 3, 2, or 1
        nectar. Create an if, else-if, else block to collect the unknown amount of
        nectar.
      Course 4 Bee 7_instruction: |
        Use everything you have learned so far to collect
        all the nectar. The purple flower may have either 3, 2, or 1 nectar.
      Course 4 Bee For Loops 1_instruction: Perdor nje litar per te mbledhur nektarin nga secila lule.
      Course 4 Bee For Loops 10_instruction: Nese litari yt po dobesohet, rritja bie nga variabla jote e kundert per secilin litar. Sa duhet te jete rritja jote per te mbledhur 9, pastaj 6 dhe me pas 3 nektar?
      Course 4 Bee For Loops 11_instruction: |
        What's wrong with this loop? See if
        you can fix it and make the bee collect all the nectar.
      Course 4 Bee For Loops 2_instruction: 'Ja nje tjeter lloj litari, i quajtur "per" litar. Ky "per litar" i vecante do te numeroje nga 1 deri ne 5 me nga 1, dhe do hapi permbajtjen e litarit pas cdo numerimi.Ndihmoje bleten te marri nektarin.'
      Course 4 Bee For Loops 3_instruction: |-
        Mund t'a zgjidhesh kete loje duke perdorur "si litar" per te numeruar nga 1 deri ne 3 me nga 1. Tani le te shkojme te marrim ca nektar!
      Course 4 Bee For Loops 4_instruction: "Mblidh te gjithe nektarin nga keto lule. Pyes veten nese ka ndonje menyre me te thjeshte per t'a bere kete..."
      Course 4 Bee For Loops 5_instruction: |
        Ah, "si litar" e ben kete me te lehte!
        Duke perdorur variablen e "ndryshme" nga "si litar" ne "te litari"  "marrja e nektarit" bllokon po aq here sa litari. Whew! Ka shume litare. Te gjitha kodet qe te duhen, gjenden aty, shiko si jane vendosur bashke me pas kliko ne Hape dhe shiko si funksionon. 
      Course 4 Bee For Loops 6_instruction: Mund te perdoresh edhe nje si litar per numeruar mbrapsht. Perpiqu te mbledhesh kete nektar duke filluar numerimin mbrapsht nga 5 ne 1 me nga 1.
      Course 4 Bee For Loops 7_instruction: Perdor nje litar variabel te kundert per te pare sa larg mund te levizesh horizontalisht.
      Course 4 Bee For Loops 8_instruction: "Mund t'a perdoresh variablen e ndryshueshme litar per te pasur nen kontroll levizjen dhe mbledhjen e nektarit?"
      Course 4 Bee For Loops 9_instruction: 'Numri i fundit ne per litarin tend quhet "rritje", dhe sa here qe litari levizen variabla e ndryshueshme peson ndryshime me rritje. Provo te mbledhesh keto lule duke perdorur nje rritje prej 2.'
      Course 4 Bee Params 1_instruction: 'Perdor komanden "merr 3 nektare" e cila kthehet, levizen per te mbledhur nektarin dhe me pas kthehet ne destinacionin fillestar. Bej nje radhe per te mbledhur te gjithe nektarin duke perdorur "merr 3 nektar".'
      Course 4 Bee Params 2_instruction: 'Modifiko komanden "merr 3 nektar" ne menyre qe te me beje qe ne vend se majtas te kthehem djathtas nga lulet.'
      Course 4 Bee Params 3 (copy 1)_instruction: 'Tani ka lule nga te dyja anet! Mbase mund te perdoresh nje parameter ne menyre te atille qe e njejta komande te funksionoje per lulet nga te dyja anet. I kam shtuar komandes nje parameter te quajtur "drejtim". Nese parametri "drejtim" eshte i barabarte me 0 duhet te kthehem majtas, nese eshte 1 djathtas.'
      Course 4 Bee Params 3_instruction: 'Tani ka lule ne te dyja anet! I kam shtuar kokmandes nje parameter te quajtur "drejtim" . Perdor variablen "e majte" dhe "te djathte" per te kontrolluar drejtimin. Ploteso pjesen e ngelur te kuptimit    te parametrit dhe me pas kliko "Ruaj dhe Mbyll".'
      Course 4 Bee Params 4 (copy 1)_instruction: Provo te perdoresh komanden tende te re per te mbledhur te gjitha lulet. Kujtese, 0= majtas dhe 1=djathtas.
      Course 4 Bee Params 4 backup_instruction: |-
        A nuk do te ishte super sikur te mund te mblidhnim gjithe kete nektar me nje komande te vetme? Perpiqu te shtosh nje parameter te ri ne komanden tende te quajtur "nektaret" per te kontrolluar sasine e nektarit per t'u mbledhur. Mbase do te duash t'ia ndryshosh emerimin edhe komandes!
      Course 4 Bee Params 4_instruction: Perpiqu te perdoresh komanden e re per te mbledhur te gjitha lulet. Mos harro te perdoresh variablen e majte dhe te djathte.
      Course 4 Bee Params 5_instruction: 'Le te fillojme nga fillimi-mund te krijosh nje komande te re "merr 5 nektar" me parameter te nje drejtimi?'
      Course 4 Bee Params 6 (copy 1)_instruction: Provo te perdoresh komanden tende te re per te mbledhur gjithe kete nektar.
      Course 4 Bee Params 6_instruction: |-
        A nuk do te ishte super sikur te mund te mblidhnim gjithe kete nektar me nje komande te vetme? Perpiqu te shtosh nje parameter te ri ne komanden tende te quajtur "nektaret" per te kontrolluar sasine e nektarit per t'u mbledhur. Mbase do te duash t'ia ndryshosh emerimin edhe komandes!
      Course 4 Bee Params 7 (copy 1)_instruction: Provo te perdoresh komanden tende te re per te mbledhur gjithe kete nektar.
      Course 4 Bee Params 7_instruction: Perpiqu te perdoresh komanden e re per te mbledhur gjithe kete nektar.
      Course 4 Bee Params 8_instruction: |
        Oooh, tani kemi edhe mjalte!
        Si munde te rifreskosh komanden tende si per te mbledhur nektarin apo per te bere mjalte.
      Course 4 Binary 1_instruction: Ja nje komande qe ka nje lidhje binare nga 1 ne 0 dhe meson fermerin te lancoje nisjen nga e majta ne te djathte, nga fillimi ne mes, duke ndezur katroret ku numri ka nje zero. Provo kodin e dhene per te pare sesi fermeri perdor dypolesine per te vizatuar nje pamje.
      Course 4 Binary 2_instruction: |
        What binary string could you loop 8 times to
        draw this image? Hint: the number "1" fills a hole.
      Course 4 Binary 3_instruction: |
        Can you draw this pattern by looping a single
        binary string?
      Course 4 Binary 5 (copy 1)_instruction: |
        Which binary string, repeated 10 times,
        will draw this image?
      Course 4 Binary 5_instruction: |
        Which binary string, repeated 10 times, will
        draw this image?
      Course 4 Binary 6 (copy 1)_instruction: |
        Which binary string, repeated 10 times,
        will draw this image?
      Course 4 Binary 6_instruction: |
        Which binary string, repeated 10 times, will
        draw this image?
      Course 4 Binary 7_instruction: |
        Which binary string, repeated 10 times, will
        draw this image?
      Course 4 Binary 8_instruction: |
        You can complete the most of this image by
        looping a 5 bit binary number - then you'll need one more 4 bit number to
        get the bottom right-hand corner.
      Course 4 Maze 1_instruction: Get the angry bird to the pig!
      Course 4 Maze 2_instruction: Avoid the TNT!
      Course 4 Maze 3_instruction: 'Program the angry bird to get to the pig. '
      Course 4 Maze 4_instruction: 'Provo bllokun "përsërit" për të përdorur më pak blloqe...'
      Course 4 Maze 5_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      Course 4 Maze 6_instruction: |
        A mund ta zgjidhësh këtë puzzle duke përdorur numrin
        më të pakët të mundshëm të blloqeve?
      Course 4 Play Lab For Loops 2_instruction: |
        This time, let's try counting
        the odd numbers from 1 to 100.
      Course 4 Play Lab Params 1_instruction: |
        Here's a function called "jump"
        that causes your main character to jump up 100 pixels. Use the jump function
        to collect all of the flags.
      Course 4 Play Lab Params 10_instruction: "We've added one last function for\nyou to use. \r\n\r\nProgram your game to call the \"level_up\" function if\n\"player_points\" > 10.  \r\n\r\nPlay the game, and make it past level 4 to\nmove to the next puzzle. "
      Course 4 Play Lab Params 2_instruction: "Now we've got flags that are too\nhigh for our current jump! Let's use both the \"up\" and \"down\" arrows\nso that we can have multiple jump heights.  \r\n\r\nWe need to add a parameter\nto our jump function called \"height\".  The up arrow should cause the dog\nto jump 200 pixels and the down arrow should make it jump only 100 pixels.\n\r\n\r\nHint: You will need to click \"edit\" on the jump function and update\nit so that it uses the \"height\" parameter."
      Course 4 Play Lab Params 3_instruction: |
        Let's add another parameter to the
        jump function so that we can use it with other actors. Each actor is represented
        by a number, starting from one. Edit the "jump" function so that the definition
        includes the "actor" parameter. 
      Course 4 Play Lab Params 4_instruction: |
        Here's a function called "patrol."
        Edit it to move the Cat up 400 pixels and then down 400 pixels.
      Course 4 Play Lab Params 5_instruction: |
        Fill in the "actor" parameter input
        so that we can call the "patrol" function for each of the actors. Remember,
        the actors correspond to numbers 1, 2, and 3.
      Course 4 Play Lab Params 6_instruction: |
        Add another parameter called "speed"
        to the "patrol" function. Use a "set speed" block with the new "speed"
        parameter.
      Course 4 Play Lab Params 7_instruction: "Look at the code provided to see if\nyou can figure out what each block does.  \r\n\r\nWhen you're done, use the\narrow keys to control the Dog and collect all of the flags."
      Course 4 Play Lab Params 8_instruction: |
        Use a "when touching" block to send
        Dog back to the top-left ONLY if Dog touches any of the other actors.
      Course 4 Play Lab Params 9_instruction: "You may recognize this game from an\nearlier level. \r\n\r\nWe've added a function called \"score_points\" that\ntakes the parameter \"points\". \r\n\r\nEdit the function so that the \"points\"\nparameter is added to the \"player_points\" variable. \r\n\r\nWhen you're\ndone, click \"Run\" to play.  When Dog scores 10 points, you will move on\nto the next puzzle. "
      Course 4 Play Lab Vars 1_instruction: |
        This time you don't have to write any
        code, just hit "Run" to play the game! In this game, you're the Dog who
        is trying to collect more flags than the Cat. Use the down arrow to control
        the Dog. Press "Finish" when you're done playing.
      Course 4 Play Lab Vars 2_instruction: |
        The race in that last puzzle wasn't
        very fair! Change the "dog_speed" variable to make sure you can collect
        more flags than the Cat. The first to collect 10 flags wins!
      Course 4 Play Lab Vars 3_instruction: |
        Here's a new kind of game! Use the
        left and right arrows to move, and the up arrow to jump. See if you can collect
        all of the flags.
      Course 4 Play Lab Vars 4_instruction: 'Tani ne po perdorim nje ndryshore te quajtur "lartesi" per te kontrolluar se sa lart mund te hidhet nje qen. Rifreskoni ndryshoren "lartesi" keshtu ju mund te shikoni qe qeni do hidhet aq larte sa te arrije te gjithe flamujt. Aluzion: flamujt e rinj jane 200 pixel lart.'
      Course 4 Play Lab Vars 5_instruction: |
        Let's build a game! First we'll need
        a score. Use the "set points to" block to set the score to 10. 
      Course 4 Play Lab Vars 6 (copy 1)_instruction: |
        Cool, now we've got our score
        variable, but how are we going to make it useful? How about adding to your
        score variable each time you hit the enemy with a fireball? Use the "when
        actor 2 touches anything" event to trigger an update to your score when your
        fireballs hit the cat. You can increment the score by setting score = score
        + 1. Get your score up to 10 (going one at a time!) to pass the level.
      Course 4 Play Lab Vars 6_instruction: |
        In our game, how should we score points?
        Add 1 to your "points" variable each time the Dog hits the Cat with a heart.
        Use the "when actor 2 touches anything" event to trigger an update to your
        score. You can increment your variable by setting "points = points + 1."
        Get your score up to 10 (going one at a time!) to pass the level.
      Course 4 Play Lab Vars 7_instruction: |
        Nice, now let's make sure this game
        isn't too easy - any time the Dog (actor 1) gets hit by a fireball, you should
        lose a point. Start with 10 points so it's not too hard. Let your score drop
        down from 10 to 0 to pass the level.
      Course 4 Play Lab Vars 8 (copy 1)_instruction: |
        Alright, one last thing for
        this game - let's set it up so the player can win (or lose). Use a forever
        loop to check the value of score - if score is ever greater that 20, make
        the enemy vanish. If the score is every less than 0, make the player vanish.
        Click "Finish" when the game works like you'd like it to.
      Course 4 Play Lab Vars 8_instruction: |
        Let's set up this game so the Dog can
        win (or lose). Use a forever loop to check the value of score - if score is
        ever greater that 20, make the enemy (the Cat) vanish. If the score is ever
        less than 0, make the player (the Dog) vanish. Click "Finish" when the game
        works like you'd like it to.
      Course 4 Play Lab Vars 9_instruction: |
        Free Play time! Here are all of the
        variables we've played with so far in this stage, as well as a few more in
        case you want them. Make a game or story using any of these variables. Hint:
        scroll down to see all the commands in the work space.
      Course 4 Play Lab Vars_instruction: |
        Alright, one last thing for this game
        - let's set it up so the player can win (or lose). Use a forever loop to
        check the value of score - if score is ever greater that 20, make the emeny
        vanish. If the score is every less than 0, make the player vanish.
      Course 4 Play Labs For Loops 1_instruction: |
        Let's make the dog speak every
        number from 1 to 100. Use a for loop and the counter block to speak the counter
        variable each time the loop is run.
      Course 4 Play Labs For Loops 2_instruction: |
        This time, let's try counting
        the odd numbers from 1 to 100.
      Course 4 Play Labs For Loops 3_instruction: |
        If we count by larger numbers,
        we count even higher in the same amount of time. Try making the dog count
        from 10 up to 1000, by 10 at a time.
      Course 4 Play Labs For Loops 4_instruction: |
        Changing the increment can be
        helpful, but we're still counting linearly (each number is the same distance
        from the last) What if I wanted to count exponentially? Without changing the
        settings in this for loop, can you count 1, 4, 9 , 16, 25... (counter squared)?
      Course 4 Play Labs For Loops 5_instruction: |
        In the last stage we counted the
        square of each number. Try changing "counter ^ 2" to "counter ^ 3" to
        count the cube of each number (1, 8, 27, 64, 125, 216, 343…)
      Course 4 Play Labs For Loops 6_instruction: |
        You may recall that a prime number
        is any whole number that is only divisible by itself and 1. Use the "is_prime"
        function to speak out only the prime numbers from 1 to 100.
      Course 4 Play Labs For Loops 7_instruction: |
        Could you use a for loop to help
        me speak the sequence 1, 4, 7, 10, 13, 16, 19, 22, 25?
      Course 4 Play Labs For Loops 8_instruction: |
        What for loop would make me speak
        19, 27, 35, 43, 51?
      Course 4 Variables Assessment_instruction: |
        Can you create this image using
        a variable for sides? Each line should be 50 pixels long.
      Course1BeePuzzle12_instruction: Get three nectars and then make two honey
      Course1MazeAssessment1_instruction: "This is a test!\r\nMove one way, then\nanother to get me to the pig"
      Course1MazeAssessment2_instruction: "This is a test!\r\nMove one way, then\nanother to get me to the pig."
      Eval Booleans 1_instruction: |
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either true or false. Click "Run" to
        see how this expression evaluates.
      Eval Booleans 2_instruction: |
        Can you set the values so that this expression
        evaluates as true?
      Eval Booleans 3_instruction: |
        The string-length function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        true.
      Eval Booleans 4_instruction: |
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: |
        Here's a similar function red shape with an additional
        variable for size. Complete the conditionals so the correct solid red image
        of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: "Write a function called food-critic, which takes\nin the name of a food and produces a String that says how you feel about that\nfood. For example, (food-critic “pizza”) might evaluate to “delicious”, but\n(food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two\nfoods to review, but you can you write more if you like!  Don’t forget to\nadd an “else” clause!\r\nOne example - and part of the definition -  has already\nbeen done for you!"
      Eval Cond 7_instruction: "Free Play: Write a function called green-shape, which\ntakes in the name of a shape and produces a solid green shape. Your function\nshould work with at least “circle”, “star” and “rectangle”, but you can add\nother shapes if you like. You can choose the size of each shape. Don’t forget\nto add an “else” clause!\r\nOne example - and part of the definition -  has\nalready been done for you!\r\n"
      Eval Cond 8_instruction: "Free Play: Suppose you want to own a car at 21, or\nhave your own business by 30. Write a function called life-goals, which takes\nin an age and produces a string that describes your life goals by then. Don’t\nforget to add an “else” clause!\r\n"
      Eval Contracts 1_instruction: |
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: |
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: |
        Check out the rotate function - can you use
        it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: |
        Can you complete this image using the "shrink"
        function block? The radius is 20. 
      Eval Define Funcs 1_instruction: |
        Here's a new function called green-triangle
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: |
        Let's look inside that green-triangle function
        to see how it works. Can you modify it so that the green-triangle function
        always draws outlined green triangles?
      Eval Define Funcs 3_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: |
        Create a new function called aqua-star that
        has a Domain of a single Number for radius and returns an aqua star of the
        given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |
        Let's use that aqua-star function to make
        a row of different sized stars. From left to right, the stars should have
        radiuses of 25, 50, and 75.
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |
        The design recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition. The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        starburst that has two domains. 1) a number of points and 2) a radius. starburst
        returns a yellow radial star with given points, and an inner radius that is
        half the outer radius.
      Eval Design Recipe 5_instruction: |
        Using the Design Recipe, write a function
        striped-flag that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |
        Using the Design Recipe, write a function
        large-polygon that should output a solid polygon of given sides and color
        that takes up most of the window, regardless of the number of sides. To make
        sure that the polygon doesn't get too large as you increase the number of
        sides, side length should be inversely proportional to side number, with a
        length of (800/sides).
      Eval Design Recipe Free Play_instruction: |
        Free Play: Use the design recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |
        The string-append function takes two Strings
        and returns a single combined String. Add a String "Universe" to the second
        argument of string-append.
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the rectangle block to draw this
        solid red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |
        Try using this new Evaluation Block called
        _overlay_ to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: |
        Use the overlay function to place a 75
        pixel radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      frozen circle function in circle_instruction: |
        Now let's create 20 overlapping
        circles, turning 18 degrees between each circle.
      frozen circle function with parameter_instruction: |
        Here's a ”Create circle”
        block that can make circles of different sizes. Can you use this to create
        a small circle of size 5 and a larger circle of size 10?
      frozen circle function_instruction: |
        Use the new “Create a circle” block to
        create 10 overlapping circles. Don't forget to jump forward between circles.
      frozen circle_instruction: |
        A circle is a special shape. Can you figure out
        what number to replace the question marks with to draw a circle?
      frozen cross rotate dense_instruction: |
        Let's repeat it 90 times! How many
        times does 90 go into 360? Hint: It's a really small number.
      frozen cross rotate_instruction: |
        Now try repeating it 10 times. How many degrees
        do you need to turn between each line?
      frozen cross_instruction: |
        Use the “Repeat” block to create a plus sign. Did
        you notice Elsa can move forward and backward?
      frozen diamond mini snowflake_instruction: |
        Did you know every snowflake is
        a different shape? Let's create a new snowflake by using the “Repeat" block
        to repeat a parallelogram 4 times, turning right by 90 degrees between each
        parallelogram.
      frozen diamond snowflake_instruction: |
        Now, let's create a new snowflake by
        using the repeat block to repeat a parallelogram 10 times, turning right by
        36 degrees between each one.
      frozen diamond_instruction: |
        Let's create a parallelogram. It's just like
        a square but has different angles: 60 and 120 degree angles instead of 90
        degree angles.
      frozen freeplay_instruction: |
        You've officially become a master artist! Create
        a winter wonderland.
      frozen line_instruction: |
        Hi! I'm Elsa of Arendelle. Help me create a single
        line.
      frozen perpendicular_instruction: |
        Now let's see if we can create two lines
        that are at a 90 degree angle to each other. You will need to use the “Turn”
        block as well as the “Move” block.
      frozen snowflake branch_instruction: |
        Try using the ”Create a snowflake branch”
        block to create three branches, which starts to look like a snowflake.
      frozen snowflake full_instruction: |
        Now let's repeat it 8 times to make a
        beautiful snowflake!
      frozen snowflower_instruction: |
        Intricate snow patterns can be created with
        very simple shapes. Can you make a pattern by repeating 5 circles of size
        5 and 5 circles of size 10?
      frozen square iterative_instruction: |
        It seems like we're halfway to making
        a square. Let's put 4 lines together to create a square.
      frozen square loop 3x_instruction: |
        Let's create three squares, turning after
        each square. Be sure to turn by 120 degrees before each new square.
      frozen square loop_instruction: |
        Hi, I’m Anna of Arendelle! Let’s make a square
        with the “Repeat” block, which uses fewer blocks. How many times (???) should
        the “Repeat” block loop the blocks inside it to make a square?
      frozen square snowflake_instruction: |
        Can you create a snowflake using the
        “Repeat” block to make a square 10 times, and the “Turn” block to turn 36
        degrees between each square?
      hoc2015_intro_instruction: |
        Hiro is "actor 1".  Use the Move block to move
        Hiro right to touch Baymax.
      hoc2015_sandbox_instruction: |
        Hiro is "actor 1".  Use the Move block to move
        Hiro right to touch Baymax.
      Infinity_catch_instruction: |
        Can you make Elsa ("actor 2") catch up with
        Anna by using the arrow keys?
      Infinity_finale_instruction: Create anything you like and share it!
      Infinity_move_collide_instruction: |
        Hiro is "actor 1".  Move him right to
        Baymax, and play a sound when they touch.
      Infinity_move_directions_instruction: |
        Baymax is "actor 2".  Add Move blocks
        and then move Baymax using the arrows.  Make him touch the two other characters.
      Infinity_move_right_instruction: |
        Hiro is "actor 1".  Use the Move block
        to move Hiro right to touch Baymax.
      Infinity_repeat_instruction: |
        Use a "repeat forever" block to make Anna move
        up and down 400 pixels.
      Infinity_say_instruction: 'Make Anna say "Hi there." by using the Say block.'
      Infinity_shoot_instruction: |
        Baymax is "actor 2".  Make Baymax throw a rocket
        at Hiro.
      Infinity_shoot_directions_instruction: |
        Hiro is "actor 3".  Make Hiro throw
        a projectile to each of the four characters.  Wait one second between each
        throw.
      Infinity_test_instruction: This is a test Infinity level.
      Infinity_touch_faster_instruction: Touch even more snowflakes!
      Infinity_touch_four_instruction: |
        Move Anna up, down left, and right to touch
        each of the four snowflakes.
      Infinity_touch_score_instruction: |
        Make Anna score a point when she touches
        a snowflake.  Then click "Run" and steer her to touch each snowflake once.
      jessie-test_instruction: Lots of instructions
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: |
        Draw a short line up and a long one
        to the right!
      K-1 artist 1 level 10_instruction: |
        Draw the dashed line by using both the
        jump and draw blocks
      K-1 artist 1 level 9_instruction: Vizato këtë duke përdorur tre vija
      K-1 Artist Loops 1_instruction: Draw this line by moving East 4 times.
      K-1 Artist Loops 2_instruction: Can you draw the same line using a loop?
      K-1 Artist Loops 3_instruction: Can you loop these blocks to draw 6 lines?
      K-1 Artist Loops 4_instruction: |
        Could a loop help us draw the top of this
        castle?
      K-1 Artist Loops 5_instruction: What can you loop 4 times to draw these stairs?
      K-1 Artist Loops 6_instruction: |
        This one needs two loops: one to go up the
        stairs and one to go down.
      K-1 Artist Loops 7_instruction: Can you finish this pattern with two loops?
      K-1 Artist Loops 8_instruction: This staircase has longer steps.
      K-1 Artist Loops 9_instruction: 'Assessment: Use a loop to draw the stairs'
      K-1 Artist Loops Free Play_instruction: Free play, draw something fun!
      K-1 Artist1 1_instruction: Draw the foot of the man with one line
      K-1 Artist1 10_instruction: |
        Draw and Jump to make the dashed path to the treasure
        X
      K-1 Artist1 2_instruction: Draw the whisker on the cat with two lines!
      K-1 Artist1 3_instruction: |
        Draw two lines east and two lines north to finish
        the house!
      K-1 Artist1 4_instruction: Draw lines up, over, and down to complete the castle!
      K-1 Artist1 5.5_instruction: |
        Complete the third tower of the castle using
        short lines
      K-1 Artist1 5_instruction: Draw the stem of this flower with two lines!
      K-1 Artist1 6_instruction: Finish the picture by using a jump block!
      K-1 Artist1 7_instruction: |
        Use the jump block to move without drawing. Jump
        up and draw a line.
      K-1 Artist1 8_instruction: |
        Draw the dashed line by using both the jump and
        draw blocks
      K-1 Artist1 9_instruction: Draw and Jump to make the dashed line
      K-1 Artist1 Assessment 1_instruction: Draw the short and long lines!
      K-1 Artist1 Assessment 2_instruction: Draw the short dashed lines!
      K-1 Artist2 1_instruction: Draw a square below the triangle.
      K-1 Artist2 2_instruction: Jump and draw a square next to the house.
      K-1 Artist2 3_instruction: Draw a square above the other square
      K-1 Artist2 4_instruction: Draw a rectangle to complete the bridge.
      K-1 Artist2 5_instruction: Draw a rectangle to complete the bridge supports
      K-1 Artist2 6_instruction: Draw two squares to make a rectangle!
      K-1 Artist2 Assessment1_instruction: |
        Assessment: Draw a square next to the
        other square.
      K-1 Artist2 Free Draw_instruction: Draw anything!
      K-1 Artist2_7_instruction: Draw a rectangle to give the dresser a top drawer!
      K-1 Bee 1_instruction: |
        Move me to the flower, get the nectar, then move me
        to the honeycomb, and make honey
      K-1 Bee 10_instruction: Get four nectar and then make two honey!
      K-1 Bee 11.5_instruction: Get four nectar to make four honey!
      K-1 Bee 11_instruction: Get three nectar and then make one honey
      K-1 Bee 12_instruction: Get three nectar and then make two honey!
      K-1 Bee 13_instruction: Get three nectar and then make one honey!
      K-1 Bee 14_instruction: |
        Get me to the nectar, pick it up, get me to the honey,
        and make honey
      K-1 Bee 15_instruction: Get two nectar to make two honey!
      K-1 Bee 2_instruction: |
        Move me to the flower, get the nectar, then move me
        to the honeycomb, and make honey
      K-1 Bee 3_instruction: |
        Move me to the flower, get the nectar, then move me
        to the honeycomb, and make honey
      K-1 Bee 4_instruction: Get two nectar and then make two honey!
      K-1 Bee 5_instruction: Get three nectar and then make three honey!
      K-1 Bee 6_instruction: Get two nectar and then make two honey!
      K-1 Bee 7_instruction: Get three nectar and then make two honey!
      K-1 Bee 8_instruction: Get two nectar and then make two honey!
      K-1 Bee 9_instruction: Get two nectar and then make two honey!
      K-1 Bee Assessment 1_instruction: Get nectar to make honey!
      K-1 Bee Assessment 2_instruction: Get nectar to make honey!
      K-1 Bee Loops 1_instruction: Get the nectar to make honey!
      K-1 Bee Loops 10_instruction: Use loops to get the nectar, honey, and to move!
      K-1 Bee Loops 11_instruction: |
        Assessment: Use loops and get the nectar and
        honey!
      K-1 Bee Loops 12_instruction: |
        Assessment: Use loops to get the nectar, honey,
        and to move!
      K-1 Bee Loops 2_instruction: |
        Use a loop to move and then get the nectar and
        make honey!
      K-1 Bee Loops 3_instruction: Use loops to get the nectar and make honey!
      K-1 Bee Loops 4_instruction: |
        Use loops to get the nectar, make honey, and
        to move!
      K-1 Bee Loops 5_instruction: Use loops to get the nectar and honey!
      K-1 Bee Loops 6_instruction: Use loops to get the nectar, honey, and to move!
      K-1 Bee Loops 7_instruction: Use loops to get the nectar and make honey!
      K-1 Bee Loops 8_instruction: Use loops to get the nectar and honey!
      K-1 Bee Loops 9_instruction: Use loops to get the nectar, honey, and to move!
      K-1 Bee Loops Assessment 1_instruction: |
        Get nectar to make honey and use loops
        to move!
      K-1 Bee Loops Assessment 2_instruction: Get nectar to make honey using loops!
      K-1 Bee Puzzle 12_instruction: Get three nectars and then make two honey
      K-1 Building a Foundation Assessment_instruction: |
        Ndërto një piramidë tre nivelesh,
        nuk ka drejtime të tjera, kështu që vetëm luaj me këto pjesë derisa ta bësh
        atë!
      k-1 maze 1_instruction: Can you make me move West to get to the pig?
      K-1 Maze 10_instruction: 'Go around the TNT to get me to the pig! '
      K-1 Maze 11_instruction: |
        Trace the path and lead me to the silly pig. Avoid
        TNT or the feathers will fly! Hint: He's South of me.
      K-1 Maze 2_instruction: Move me East to get me to the pig!
      K-1 Maze 3_instruction: Move me South to get me to the pig!
      K-1 Maze 4_instruction: Move me North to get me to the pig!
      K-1 Maze 5_instruction: Move me East to get me to the pig!
      K-1 Maze 6_instruction: Move one way, then another to get me to the pig!
      K-1 Maze 7_instruction: Move one way, then another to get me to the pig!
      K-1 Maze 8_instruction: Move one way, then another to get me to the pig!
      K-1 Maze 9_instruction: Move one way, then another to get me to the pig!
      K-1 Maze Assessment 1_instruction: 'Assessment -- Get me to the pig!'
      K-1 Maze Assessment 12_instruction: Assessment Level
      K-1 Maze Assessment 13_instruction: Assessment Level
      K-1 Maze Assessment 2_instruction: 'Assessment -- Get me to the pig!'
      K-1 maze debug 1_instruction: Change the code to get me to the pig!
      K-1 maze debug 10_instruction: |
        Debug this level by rearranging and adding
        blocks to get me to the pig!
      K-1 maze debug 11_instruction: "This is a test!\r\nDebug this level by rearranging\nand adding blocks to get me to the pig"
      K-1 maze debug 2_instruction: |
        Figure out what is missing and then add blocks
        to get me to the pig!
      K-1 maze debug 3_instruction: |
        Figure out what is missing and then REMOVE blocks
        to get me to the pig!
      K-1 maze debug 4_instruction: |
        Run through these blocks and fix them! I think
        I might be going in the wrong direction.
      K-1 maze debug 5_instruction: |
        Debug this level by rearranging and adding blocks
        to get me to the pig!
      K-1 maze debug 6_instruction: |
        Debug this level by rearranging and adding blocks
        to get me to the pig!
      K-1 maze debug 7_instruction: |
        Debug this level by rearranging and adding blocks
        to get me to the pig!
      K-1 maze debug 8_instruction: |
        Debug this level by rearranging and adding blocks
        to get me to the pig!
      K-1 maze debug 9_instruction: |
        Debug this level by rearranging and adding blocks
        to get me to the pig!
      K-1 Maze debug Assessment 1_instruction: |
        Assessment -- Debug this level by
        rearranging and adding blocks to get me to the pig!
      K-1 Maze Loops 1_instruction: Më ço tek derrkuci!
      K-1 Maze Loops 10_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 11_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 12_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 2_instruction: Përdor bllokun Përsërit për të më çuar tek derrkuci!
      K-1 Maze Loops 3_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 4_instruction: Më ço tek derrkuci!
      K-1 Maze Loops 5_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 6_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 7_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 8_instruction: Më co tek derrkuci! Përdor bllokun përsërit.
      K-1 Maze Loops 9_instruction: Më ço tek derrkuci!
      K-1 Maze Loops Assessment 1_instruction: 'Vleresimi -- Perdorni litarin te me coni tek derri!'
      K-1 Maze Loops Assessment 2_instruction: 'Vleresimi -- Perdorni litarin te me coni tek derri!'
      K-1 Maze Multi 14_instruction: Assessment Level
      K-1 Maze Multi 15_instruction: Assessment Level
      K-1 Maze Sequence Assessment 1_instruction: "Ky eshte nje test!\r\nLevizni ne nje menyre ,pastaj ne nje tjeter per te me cuar mua tek derri"
      K-1 Maze Sequence Assessment 2_instruction: "Ky eshte nje test!\r\nLevizni ne nje menyre ,pastaj ne nje tjeter per te me cuar mua tek derri."
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      MSM Big Game Empty_instruction: |
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: Vizatoni dicka te mrekullueshme! Kodi juaj eshte ruajtur si nje projekt qe mund ti kthehesh ne cdo kohe.
      NEW Course 4 Artist Functions 1_instruction: A mund te vizatoni nje katror qe eshte 100 pixel i gjate,duke perdorur nje litar?
      NEW Course 4 Artist Functions 10_instruction: |
        Click "edit" to fill out the
        blocks in the function definition to make a 40 pixel square.
      NEW Course 4 Artist Functions 11_instruction: |
        We have a new function called
        "draw a line of squares." Feel free to take a look inside the function block
        to see how we built it. Click on "Run" when your are ready for the next
        puzzle.
      NEW Course 4 Artist Functions 12_instruction: |
        Use the "draw a line of squares"
        function from the last puzzle to draw this pattern."
      NEW Course 4 Artist Functions 13_instruction: |
        Can you draw a star shape using
        the "draw a line of squares" function? Hint: Each iteration, you'll have
        to move forward a certain number of pixels and turn 144 degrees.
      NEW Course 4 Artist Functions 14_instruction: Koha per Free Play!
      NEW Course 4 Artist Functions 2_instruction: 'Mund te vizatosh 3 rrethe, 20 piksel larg njera-tjetrit? Shenim: secili rreth eshte 100 piksel ne madhesi'
      NEW Course 4 Artist Functions 3_instruction: |
        Ketu eshte nje tip i ri blloku.
        Eshte quajtur "blloku funksionues " Klikoni "Run" per te pare se cfare mund te beje.
      NEW Course 4 Artist Functions 4_instruction: |
        Use the "draw a square" function
        to draw this pattern. Hint: You will have to use a "turn right by 120 degrees"
        block after each square.
      NEW Course 4 Artist Functions 5_instruction: |
        How did the "draw a square"
        block know what commands to run? Click on "edit" in the "draw a square"
        function block. The blocks in the function editor are the definition that
        make up "draw a square." When you're done looking around, click "Save
        and Close" and then "Run."
      NEW Course 4 Artist Functions 6_instruction: "Using the \"draw a square\" function\nblock, can you draw this picture? Hint: each square is 20 pixels apart.\r\n"
      NEW Course 4 Artist Functions 7_instruction: |
        Are you getting the hang of how
        to use function blocks? Let's modify this square so that it is 200 pixels
        in size. Hint: click on "edit" to change the size of the "draw a square"
        function editor. Remember to click on "save and close" to get out of the
        function editor. 
      NEW Course 4 Artist Functions 8_instruction: |
        We have given you most of the
        code to create a function, but there seems to be something missing. Can you
        edit the function definition to draw the triangle?
      NEW Course 4 Artist Functions 9_instruction: |
        Which block do you need to add
        to get the triangle to sit on top of the square?
      NEW Course 4 Artist Functions inspire_instruction: "Free Play Inspiration:\nYou've now learned everything you need to know to make a pattern like this!\nIf this picture inspires you, try to make something similar. Otherwise, create\nsomething all your own.\r\n \r\nWant to know how our inspiration pattern was\nmade? Visit for the solution."
      New Course 4 Artist Functions Level 4_instruction: |
        Use the "draw a square"
        function to draw this pattern.
      NEW Course 4 Artist Params 1_instruction: |
        Let's define this function to draw
        a square with 50 pixel sides. Click "edit" to get started.
      NEW Course 4 Artist Params 10_instruction: |
        Create a "draw a hexagon" function
        block with a length parameter. Hint: this hexagon is 100 pixels in size. 
      NEW Course 4 Artist Params 11_instruction: |
        Can you figure out how to draw
        this shape? Edit the function to use the "sides" parameter.
      NEW Course 4 Artist Params 12_instruction: |
        Can you complete this drawing?
        The sides of all the shapes are 100 pixels long.
      NEW Course 4 Artist Params 12a_instruction: |
        This image is similar to the last.
        Can you use a "for loop" with your function to make this design?
      NEW Course 4 Artist Params 13_instruction: |
        Let's edit this "draw a shape"
        function. It already has a "length" parameter. Now, let's edit the function
        to add a "sides" parameter. Remember the angle to turn for a given shape
        is 360 divided by the number of sides it has. Hint: These are the lengths
        for each shape: the triangle is 100 pixels, the hexagon is 25 pixels, and
        the square is 50 pixels.
      NEW Course 4 Artist Params 14_instruction: |
        Can you recreate these shapes?
        Drag the "length" parameter into the function definition. 
      NEW Course 4 Artist Params 15_instruction: |
        Freeplay: Here are the functions
        you've written, and some more for you to play with. Draw something awesome!
      NEW Course 4 Artist Params 2_instruction: |
        Create a “draw a triangle" function
        with 50 pixels sides from scratch
      NEW Course 4 Artist Params 3_instruction: "Now let's use the function to draw\n3 triangles from the last puzzle in a row. Hint: each triangle is 50 pixel\napart.\r\n"
      NEW Course 4 Artist Params 4_instruction: |
        Do you notice anything different
        about these function blocks? Click “Run” to see what happens.
      NEW Course 4 Artist Params 5_instruction: |
        Fill in the ??? in the length parameter
        input block. Hint: The pentagon is 100 pixels in size. 
      NEW Course 4 Artist Params 6_instruction: |
        Fill in the "length" parameter
        to draw these shapes by replacing the "???" with the right numbers. The
        square and triangle are 100 pixels in size while the hexagon is 75 pixels
        in size.
      NEW Course 4 Artist Params 7_instruction: |
        Can you complete this drawing? Hint:
        each triangle is 25 pixels larger than the last.  The first triangle is 25
        pixels in size.
      NEW Course 4 Artist Params 8_instruction: |
        The code for this triangle function
        is broken. Can you edit the function to fix it, and then make triangles of
        length 25, 50, and 75?
      NEW Course 4 Artist Params 9_instruction: |
        Click "edit" to fill in the function
        definition of "draw a square" and add a parameter. It should take a length
        parameter, just like the triangle. This time, draw 3 squares: 25, 50 and 75
        pixels in length, each 100 pixels apart.
      NEW Course 4 Artist Params inspire_instruction: "Free Play Inspiration: You've\nnow learned everything you need to know to make a pattern like this! If this\npicture inspires you, try to make something similar. Otherwise, create something\nall your own.\r\n \r\nWant to know how our inspiration pattern was made? Visit\nhttps://studio.code.org/c/106387530 for the solution."
      NEW Course 4 Artist Vars 1.5_instruction: 'Hidhni nje sy tek kodi, a mund te shikoni si  blloku "vendosni gjatesine" dhe blloku "gjatesia" punojne sebashku? Klikoni tek "Run"  per ta pare ate ne veprim.'
      NEW Course 4 Artist Vars 12_instruction: |
        Now, modify the code from the last
        level to create a pentagon with sides of 100.
      NEW Course 4 Artist Vars 2.5_instruction: 'Hidhni nje sy tek kodi, a mund te shikoni si  blloku "vendosni gjatesine" dhe blloku "gjatesia" punojne sebashku? Klikoni tek "Run"  per ta pare ate ne veprim.'
      NEW Course 4 Artist Vars 2_instruction: 'Hidh nje numer blloqesh tek blloku " vendosni gjatesine" per te vizatuar nje set prej 50 pixel trekendeshash .'
      NEW Course 4 Artist Vars 4 5_instruction: Ishte pune shume e mire ajo ne pazellin e fundit, provojeni serish kete here ,le ta bejme kete dizanj te mrekullueshem me gjashtekendesh 60 pixel.
      NEW Course 4 Artist Vars 4_instruction: 'Le ta provojme serish. A mundeni te vendosni nje gjatesi variabel  per ta bere kete dizanj te mrekullueshem me gjashtekendesha? Aluzion: Eshte shumefishi i 10 - tes.'
      NEW Course 4 Artist Vars 6_instruction: A mund te me ndihmoni me kete model te mrekullueshem ,duke vendosur gjatesine e bllokut variabel ne vendet korrekte?
      NEW Course 4 Bee For Loops 1_instruction: Perdorni nje lak per te koleksionuar nektarin nga cdo lule.
      NEW Course 4 Bee For Loops 10_instruction: Perdor nje litar variabel te kundert per te pare sa larg mund te levizesh horizontalisht.
      NEW Course 4 Bee For Loops 11_instruction: |
        Can you use the loop variable to
        control movement and nectar collection?
      NEW Course 4 Bee For Loops 2_instruction: |
        Add the code necessary to make sure
        the bee collects all the nectar. Look at how much code you need for this puzzle!
        (We'll learn a simpler way in the next puzzle.)
      NEW Course 4 Bee For Loops 3_instruction: |
        Ah, the "for loop" makes this
        much easier! All the code you need is here, take a look at how it is put together
        then click "Run" to see how it works. 
      NEW Course 4 Bee For Loops 4 4_instruction: |
        Can you help the Bee collect the
        rest of the honey using this for loop? 
      NEW Course 4 Bee For Loops 4_instruction: Zevendesoni ??? ne litar me shumen me te madhe te nektarit qe bleta ka mledhur.
      NEW Course 4 Bee For Loops 5 5_instruction: |
        Are you getting the hang of using
        the "for loop"? Let's help the bee get the rest of the nectar.
      NEW Course 4 Bee For Loops 5_instruction: Mund te perdoresh edhe nje si litar per numeruar mbrapsht. Perpiqu te mbledhesh kete nektar duke filluar numerimin mbrapsht nga 5 ne 1 me nga 1.
      NEW Course 4 Bee For Loops 6_instruction: |
        The last number in your for loop
        is called the "increment". Each time the loop is run, the counter variable
        changes by the value of the increment. Try collecting these flowers using
        an increment of 2.
      NEW Course 4 Bee For Loops 7_instruction: |
        Are you getting the hang of "for
        loops"? This is similar to last puzzle, but you have to get 2,4,6,8,10 nectar.
        
      NEW Course 4 Bee For Loops 8_instruction: "What will you do if we take away\nsome blocks? Can you add them back to help the bee collect the nectar?\r\nRemember:\nIf your loop is counting up, the increment is added to your counter variable\neach time through. What should your increment be to collect 3, 6, 9 nectar?\r\n"
      NEW Course 4 Bee For Loops 9_instruction: Nese litari yt po dobesohet, rritja bie nga variabla jote e kundert per secilin litar. Sa duhet te jete rritja jote per te mbledhur 9, pastaj 6 dhe me pas 3 nektar?
      NEW Course 4 Bee For Loops 95_instruction: |
        Take a look at each piece of the
        "for loop" that you have just created.  Can you figure out which numbers
        you need to double to solve this puzzle? Why does it work?
      NEW Course 4 Play Lab Params 11_instruction: 'Eshte koha  e Free Play ! Beni qejf  me te gjitha blloqet ne kutine tuaj te mjetit.'
      NEW Course 4 Play Lab Params 5 5_instruction: "Plotesoni parametrat e inputeve te aktoreve me numrat (1,2 dhe 3) per t'ju bere ketyre aktoreve patrulle."
      NEW Course 4 Play Lab Vars 4 5_instruction: '"Cfare mendoni qe ky kod mund te beje? Kliko "Run" dhe shikoni cfare ndodh."'
      NEW Course 4 Play Labs For Loops 7a_instruction: |
        Using what you learned so
        far, can you have Dinosaur take a step forward every time Penguin counts?
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: 'Eshte koha  e Free Play ,beni qejf  me te gjitha blloqet ne kutine tuaj te mjetit.'
      NEW Course 4 Play Labs For Loops 8a_instruction: |
        Challenge: How would you
        use the "for loop" to get every actor to go around and say their actor number,
        then vanish from the screen? 
      New Play Lab Project_instruction: 'Krijoni historine ose lojen tende personale. Kodi juaj eshte i ruajtur  si nje projekt qe mund ti rikthehesh ne cdo kohe.'
      Ninjacat Demo B (copy 1)_instruction: "\r\nLet’s begin by exploring a simple\nvideogame, and then figuring out how it works. You can use the arrow keys\nto move the ninja left, right and jump - try to catch the unicorn and avoid\nthe dragon!\r\n\r\n\r\n\r\n  \r\n\r\n"
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: |
        Try this puzzle that uses conditionals and
        loops together. Use the "if" block to decide when to turn. Hint: you only
        need one more block to complete this puzzle. 
      PDK5 Events 1_instruction: |
        So far all of the programs we've written are executed
        in order from top to bottom. In this puzzle, we'll use "Events" to respond
        to an action on demand. Make the octopus say "Hello" only when you click
        on the Octopus. 
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: |
        Funksionet të lejojnë ty të përcaktosh blloqe të reja! Ne kemi
        lëvizur blloqet për të vizatuar një katror brenda një funksioni të quajtur "vizato një katror".
        A mund ta përdorësh funksionin "vizato një katror" për të krijuar xhamat? Katrorët
        janë 75 piksela të veçuar.
      PDK5 Loops 1_instruction: |
        Instead of using 5 "move forward" blocks, use
        the "repeat" block with a "move forward" block inside of it. In computer
        science, this is called a "loop." 
      PDK5 Loops 3_instruction: |
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |
        Something happened
        to the bits in this image!  Find error and fix it!  Hint: a few extra bits
        were added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix the error_instruction: |
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |
        Make a 3x5 letter
        'A'.  The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101.  Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want.  Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation 2_instruction: |
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Play Lab Rocket 1_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2 (copy 1)_instruction: |
        We've added your contract and two
        examples into the Design Recipe for rocket-height. Now write the function
        for rocket-height.
      Play Lab Rocket 2 (copy 2)_instruction: |
        We've started the Design Recipe for
        rocket-height using the contract and examples you just wrote. Complete the
        function definition for rocket-height and run your animation.
      Play Lab Rocket 2_instruction: |
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B (copy 1)_instruction: |
        We've started the Design Recipe
        for rocket-height using the contract and examples you just wrote. Complete
        the function definition for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3 (copy 1)_instruction: |
        Awesome, now can you update that function
        so that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 3_instruction: |
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Use the arrow keys to move Sam
        around his yard, making note of Sam's coordinates at different locations.
        Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        from going either direction? Try using the AND block to program the function
        on-screen? to check if Sam is safe-left? AND safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: 'Lis! Lis! Lis!  Perdorni nje "nese" bllok per te me cuar mua atje me sa me pak blloqe.'
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: 'Ne rregull,le ta praktikojme serish - kjo nuk eshte shume ndryshe, por kujdes nga muri!'
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: |
        The "If-else" blocks checks a condition, and then
        does one thing OR another. To get me to the acorn try to use this new block.
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: |
        One more practice of the "if-else" block, can you
        get it right on your first try?
      scrat 20_instruction: |
        A mund te shtoni vetem tre blloqe qe mund te me ndihmojne te zgjidh nje labirint kompleks? Ne qofte se e beni si duhet ,une mund te ec ne cdo drejtim te lakuar pa cka gjatesise.
        Shpejto.Akulli po shkrihet!
      SpecialFrozenLevel_instruction: |
        Ju zyrtarisht jeni nje mjeshter artist!
        Krijoni nje dimer ne nje bote cudirash.
      Standalone_Artist_1_instruction: |
        Mirë se vini në Artist! Së pari, le të përpiqemi
        për të bërë një katror të thjeshtë duke përdorur bllokun të kthehet drejtë dhebllokun të lëvizë përpara.
        Secila anë duhet të jetë 100 pixels e gjatë.
      Standalone_Artist_2_instruction: Vizato këtë diamant me kënde 120 dhe 60 gradë dhe me brinje 150 piksel të gjatë.
      Standalone_Artist_3_instruction: |2
        A mund të ndërtosh këtë gjashtëkëndësh me anë 100 pixel
         dhe 60 shkallë  kthesa ?
      Standalone_Artist_4_instruction: |2
        Tani ju keni marrë një bllok të ri për të luajtur me të. Kjo do të përsëris një grup të komandave. Çfarë ndodh nëse ju i komandoni
         6 herë këto komanda?
      Standalone_Artist_5.5_instruction: 'Vini re se si e thjeshtuam kodin e diamantit duke e kthyer atë në një cikël. Ti mund të ciklosh të gjithë sekuencën 12 herë për të vizatuar një lule. Ndihmë: Ty do të duhet të kthehesh 30 gradë pas ciklit të diamantit tënd, kështu që nuk do vazhdosh të vizatosh të njëjtin diamant.'
      Standalone_Artist_5_instruction: |
        Sa herë keni nevojë për ta kthyer këtë diamant
        për të vizatuar lule?
      Standalone_Artist_6_instruction: |
        Përsërit kodin e gjashtëkëndësh-it 6 herë për të krijuar dizajnin. Sa gradë do të ju duhet të kthehet çdo herë? Ndihmë: ndaj
        numrin e  titujve në një rreth me numrin e herë ju jeni duke përsëritur.
      Standalone_Artist_7_instruction: 'Një funksion është një tjetër mjet programimi që të ndihmon ty të mos përsërisësh vetveten. Ky funksion vizaton një lule, kështu që ti mund ta përdorësh në çdo kohë, sa herë që dëshiron të vizatosh një lule. Përdor këtë dhe bllokun e ri "jump" për të vizatuar këto lule. Ndihmë: Lulet janë 150 piksela veç e veç'
      Standalone_Artist_8_instruction: 'Këtu kemi një funksion që quhet "Draw a shape" që ne e kemi programuar për të vizatuar gjashtëkëndësha. Ekzekuto kodin për të parë se çfarë bën dhe më pas eksperimento me funksionin për të parë se çfarë ndodh. A mund ta bësh të vizatojë një model katrorësh, trekëndorësh ose tetëkëndorësh?'
      Standalone_Artist_9_instruction: 'Tani shkoni përpara dhe të bëni çdo  figurë që ju pëlqen! Ju keni marrë edhe një funksion të zbrazët që ju mund të bëni çdo gjë që doni!'
      Standalone_Artist_v2_instruction: |
        Mirë se vini në Artist! Së pari, le të përpiqemi
        për të bërë një katror të thjeshtë duke përdorur bllokun të kthehet drejtë dhebllokun të lëvizë përpara.
        Secila anë duhet të jetë 100 pixels e gjatë.
      Test Play Lab_instruction: This is a test play lab level.
      Text Compression Peter Piper_instruction: Kjo poezi eshte shkurtuar duke zevendesuar dy shprehje te ngjashme bazuar ne fjalor. A mundeni te indentifikoni ndonje model tjeter te perbashket per ta shkurtuar edhe me shume poezine?
      U1L10 NetSim numbers with decimal_instruction: |
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L4 NetSim SendAB_instruction: |
        Develop, document, and test a protocol that
        allows you to use Internet Simulator to relay a message. See the worksheet
        for more detailed instructions.  
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2L05 - NetSim - Packets and Building TCP_instruction: "Develop a Protocol\nfor Reliably Sending a Message.\r\n\r\nConstraints:\r\n- Packets may contain\nonly 6 characters\r\n- Packets may drop with small probability\r\n- Packets\nmay not arrive in order"
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L2 NetSim Hub Mode_instruction: "Now use the Internet Simulator to send the\nbattleship moves. For setup, join a Room with your group, and add ships to\nyour paper board for each opponent. When playing, all communication must be\ndone through the tool, so no talking, but have fun!\r\n"
      U2L3 NetSim Hub Mode_instruction: |
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: "For this activity, connect to a\nrouter with the others in your group. Important note: The router will only\nproperly route messages where the first 4 bits are the To: address and the\nsecond 4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      U2L5 NetSim Classroom Internet_instruction: "For this activity, connect to\na router with the others in your group. The Internet Simulator now provides\na place for you to put the To and From addresses, so you don't have to type\nout the bits manually.\r\n\r\n"
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U313 Two Buttons with Ids_instruction: |
        Now you try it! We've given you some
        starting code with two buttons and two event handlers on the screen, but we've
        just left the default Ids of "id".  You need to change the ids to connect
        the right event handler to the right button. (Interestingly, the incorrect
        program does work, but exhibits some bizarre behavior.  We'll discuss this
        more in the next lesson.  Make the buttons work correctly for now).
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Write the turnAround() function
        and use it to make the turtle move as depicted.
      U3L03 define turnRight and draw a rectangle_instruction: |
        Create a turnRight()
        function and draw a rectangle twice as tall as it is wide by having the turtle
        navigate clockwise to draw the rectangle. 
      U3L03 Draw a T using turnAround_instruction: |
        The turnAround function is now
        provided for you in the code.  Use the turnAround() function to draw a T as
        depicted.
      U3L03 draw diamond_instruction: "Use any and all of the functions you wrote\npreviously to make a 'diamond' shape as shown in the image.\r\n\r\nNOTE:\nthis is another tricky one.  The 4 sides of the diamond are made by drawing\nthree steps with other movement made between calls.  HINT: you might want\nto make another function that handles drawing one side of the diamond. "
      U3L03 Three Steps_instruction: |
        Draw 3 "steps" moving up and to the right.  Notice
        the pattern in the movement. You should define a function called drawStep()
        which draws one of the steps, and then call it 3 times to achieve the effect.
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 Challenge 1 triangle_instruction: |
        Check out the extended Turtle palette
        now made available to you. These new commands accept parameters, allowing
        you to specify precisely how the function operates rather than only being
        able to move or turn a predetermined amount. Make use of these functions to
        draw the triangle as shown.
      U3L06 Challenge 2 purple square_instruction: |
        This time we're going to learn
        a little bit about changing the turtle's pen. Read through the documentation
        for penWidth() and penColor(), and then draw the purple square as shown.
      U3L06 Challenge 3 fill pink_instruction: |
        Now let's try to fill in the entire
        background of the screen. To make it a little easier for you, we can tell
        you the color we chose is one of the 140 named colors.  If you don't know
        what the named colors are, take a closer look at the documentation for penColor()
        again. Hint: you need to use dot().
      U3L06 Challenge 4 bullseye_instruction: |
        Let's try this out one more time.
        This time the colors are NOT named colors - you need to use the hex-color
        number to set the color.  So that you're not randomly guessing, we'll give
        you a hint -- each of the colors shown in the target image is one of these
        one of the five in the following list:  #00ABDC, #CC4400, #1188CC, #006699,
        #11CC00  You might be able to guess correctly if you apply what you know about
        RGB colors.
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: |
        Next we're going to be adding some
        curves to our drawing. Read the documentation for the "arc" commands and
        then draw the squiggles as shown. To make things easier here's a hint: all
        the parameters are multiples of 10, and the colors are from the following
        list of named colors: PowderBlue, lightBlue, Indigo, Purple, Magenta.
      U3L06 Challenge 7 smiley face_instruction: |
        To make this smiley face you'll
        need to look at the documentation for the move() command and then use it with
        the others you've learned.  You can make reasonable guesses about the colors.
      U3L06 Challenge 8 make your own_instruction: |
        Use the tools you've learned
        today to create a drawing of your own creation. If you have time, challenge
        your friends to see if they can duplicate your image.  We'll show you the
        drawing we made for ourselves.  You can try to duplicate that if you want
        to, otherwise, have fun making your own!
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play!  Use what you learned
        from loops and random to make your own little scene.  Have fun.
      U3L07 - Starry Night Starter Code_instruction: |
        You are going to use loops
        and random numbers to generate an image of starry night sky similar to one
        shown here.  We have given you some starter code to generate the ground and
        sky (just two giant dots), you will add code to this project to make the stars,
        grass, and moon.  All of the effects are clever applications of turtle dots,
        lines, and colors.  To get started, follow the series of steps suggested in
        the accompanying worksheet. 
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: "The last problem was an example\nof syntax error.  App Lab did not understand which object it should be listening\nto for a \"click\" event so it showed an error message in the console to let\nyou know.  Another kind of error is a logical error - the program is valid,\nbut it's not doing what you want it to do.\r\n\r\nThis program has 2 errors.\nA (tricky) syntax error and logical error.  Find them, fix them, and make\nthe program work as expected."
      U3L13 - Debug Id Problem_instruction: |
        This program has problem!  Can you figure
        it out?  Run the program and see if you can figure out from the error messages
        in the console what the issue is.  There is not much code, so you might be
        able to figure it out just by reading carefully.  Make a change that will
        make the program work as expected.
      U3L13 - Turtle Driver Project_instruction: |
        Challenge: Create a “turtle driver”
        with at least three buttons on the screen to move the turtle forward, and
        turn the turtle right and left. You can copy/paste code from a previous level
        if you like but it will help build your coding muscles if you create this
        small program from scratch.  If you have time, try adding additional buttons!  You
        can also have fun changing the parameters on the turtle functions, using colors,
        etc.
      U3L13 - Turtle move with button_instruction: |
        Drag a button out onto the screen
        and set its text to "Go forth!".  Add an event handler for the button, that
        makes the turtle move forward.  Run the program to make sure it works. 
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L16 - challenge say hi app_instruction: "In this challenge we give you starter\ncode that lays all the elements out on the screen.  Here’s what you need to\ndo:\r\nAdd event handler to textInput with the event type ‘input’ that shows\nthe “Say hi” button when that event occurs.\r\nAdd event handler to button\nso that on click, it writes a hello message to the screen and hides the textInput\nand button."
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: |
        Introducing objects other than
        buttons! - textLabels and images.  First try replacing your button with a
        textLabel.  Will the text respond to events just like the button?  Try connecting
        an event handler to it.  We've started you out with code similar to the result
        of the last level, you can copy your code from that level into here if you
        prefer. 
      U3L16 - images_instruction: |
        Introducing Images.  Try replacing the textLabel
        with an image..  Will the image respond to events just like the button?  Try
        connecting an event handler to it.  We've started you out with code similar
        to the result of the last level, you can copy your code from that level into
        here if you prefer. 
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command!  Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: |
        We'll be building upon some simple
        starting code throughout this lesson.  Your first task: use moveTo and randomNumber
        to get the turtle to move to a random location with each button click.  We've
        given you starting code for our common setup: a button that moves the turtle
        when clicked.  You should modify this code.  
      U3L16 - text labels_instruction: |
        Introducing textLabels.  First try replacing
        your button with a textLabel.  Will the text respond to events just like the
        button?  Try connecting an event handler to it.  We've started you out with
        code similar to the result of the last level, you can copy your code from
        that level into here if you prefer. 
      U3L16 - textInput getText write_instruction: |
        Introducing textInput, getText
        and write.  First run the starter code several times.  Try to change what's
        written to the screen when the button is clicked. Then use getText to write
        to the screen what the user entered in the text box.
      U3L16 - use images_instruction: |
        Introducing Images.  Try replacing the textLabel
        with an image..  Will the image respond to events just like the button?  Try
        connecting an event handler to it.  We've started you out with code similar
        to the result of the last level, you can copy your code from that level into
        here if you prefer.
      U3L19 - Clicker Game Freeplay Area_instruction: |
        Use this App Lab area to improve
        your clicker game.  You should start by copy/pasting the code from your old
        game here.  We're showing a more full set of blocks in the toolbox - some
        of the things you might not have used yet.  Feel free to explore then and
        experiment if you want to.  Everything else you need should be shown.  Have
        fun!
      U3L19 - Debugging with consoleLog_instruction: |
        This example shows how you
        might insert console.log statements in your code to verify for yourself how
        the values in the variables change during the running of the code.  This is
        an important debugging technique to use when each line in your program doesn't
        have a visual effect on the app that you can see to verify things are working
        right.  Run the code to see the output in the console.
      U3L19 - DEMO up down count practice app_instruction: |
        This is a demonstration
        of a simple App that uses variables, arithmetic and setText.  Play with it
        a little bit here to see what it does.  You can also come back to experiment
        if you want.  You are going to try to create this app yourself on the next
        screen.  Don't worry, we'll start you out with some of the code and leave
        the rest for you to complete.
      U3L19 - do concatenate string with var_instruction: "We've given you a piece\nof code from the previous screen.  Try changing the value assigned to foo\nto see the string change. \r\nDo this: \r\n1. Try changing the value assigned\nto foo to see the string change. \r\n2. By only modifying the lines of code\nthat were given to you, try to get the output to say: “The value of foo is:\n9.  And isn’t that fine.” \r\n"
      U3L19 - fix the var name syntax error_instruction: "We've given you some code\nwith an error.  It doesn’t recognize the variable.  Can you figure out why?  Fix\nthe error and get the program to run.  Also note the error message since it\nmight come up at some point later in your life.\r\n\r\n"
      U3L19 - practice with setText_instruction: |
        We've started you out with the
        code shown on the previous screen.  First experiment with the app.  Identify
        where setText is being used.  CHALLENGE: modify the code to also use setText
        to change the text on the button itself when it's clicked.  GIF: U3L19 -
        setTextOfButton.gif
      U3L19 - Target Clicker App_instruction: "# A motivating example\r\n\r\nHere\nis an example of the kind of app we want to make.  Study this for the elements\ncontained in the app rather than what it is or does.  Things to investigate:\n\r\n\r\n1. what happens when you click on the Code.org logo? \r\n2. What happens\nwhen you click somewhere else? \r\n3. Try the reset button.   \r\n\r\nThe\nelements contained in this app appear to be simple, and they are in some ways.\nHowever, the computing principles involved - controlling and keeping track\nof things in memory while the program is running - get into some deeper issues\nof programming and computer science in general.  There are some devilish details\nand paths that can lead to misunderstanding if you're not careful.\r\n\r\nSo,\nkeep this app in mind as you go through the different levels in this lesson.  It\nmight seem like you need to learn a lot in order to get this simple thing\nworking.  But it's worth taking the time to understand at a deeper level\nwhat is going on.  Because this one topic: controlling memory leads to many\npossible misunderstandings about coding, and how computers work.  We want\nto make sure you get it right from the outset.  \r\n\r\nSo take your time.  Work\nthrough the issues.  Read the explanations.  You'll come out on the other\nside a better programmer with much deeper knowledge and understanding of how\nthings work.  \r\n\r\nAre you ready?  Click 'finish' to move to the next\npage and start the lesson."
      U3L19 - test reassignment of two vars_instruction: |
        Why is this happening?
        The code given here is the same as the example from the previous page where
        we asked you to make a prediction about what will happen.  Run this code to
        find out if you were right.  If you weren't, that's okay.  You might experiment  a
        little if you want to, but bon't spend too much time here. We'll explain
        more on the next page.
      U3L19 - three basic ops of variables_instruction: "Do this:\r\nWe've given\nyou the three lines of code shown in the previous page.  Add three lines of\ncode just below the ones shown here to make your own variable, assign it a\nvalue and write it to the screen.  NOTE: change the variable name from the\ndefault x to something else.\r\n"
      U3L19 - try out console log_instruction: "Try out console.log.  Do this: replace\nthe statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).  Run\nthe program and you should see the output show up in the console area below\nthe workspace.  Then try adding a few more console.log statements.  Display\nsome text.  Make another variable and display that.  \r\nThe app screen will\nbe blank -- that's the point.  With console.log you can test output behind\nthe scenes in a way the user cannot see.  \r\n\r\n\r\nGIF: U3L19-useconsolelog.gif"
      U3L19 - up down count practice app_instruction: |
        This app is only SLIGHTLY
        different from the previous one, but much more dynamic.  See if you can figure
        out how and why the count is going up.  Once you've figured it out then you
        should be able to DO THIS: add a button to the app that when clicked makes
        the count go down, and updates the label.  When you're done the app should
        work as shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        We've given you
        the code from the previous page.  Right now, because the code only sets the
        values of variables, the app doesn't display anything. DO THIS: insert write
        or console.log statements into the code to figure out what the values of a,
        b, and c are after the code has executed.  You should have first made a prediction
        to see if your mental model of how the computer works is correct.  We'll
        ask for the answer on the next page.
      U3L19 - variable scope problem 2_instruction: |
        First run the program to see
        the problem.  You don't need to write code to solve any problem here.  But
        you do need to investigate the code and come up with an explanation for WHY
        what's happening is happening.  Why aren't 3 things being written to the
        screen?  Why does the variable foo seem to exist once but not the other times?  If
        you switch to code mode you'll see some warning messages next to two lines
        of code -- why do you get those messages?  Once you think you have a good
        answer, continue to the next page.
      U3L19 - variable scoping problem debugging_instruction: |
        Here is the code from
        previous page that has a subtle problem with it.  FIRST: run the app and try
        it to see the problem. NOTE: NaN stands for "Not a Number".   DO THIS: figure
        out what's happening, where, and fix the problem.  We'll explain the issue
        on the next page. 
      U3L19 - write var and string with same name_instruction: |
        Now look at this
        example. We’ve added another write statement.  Before you run the code, see
        if you can predict what the output will be.  Seriously, write it down. THEN
        run the code, mess with it if you like, and continue to the next page for
        an explanation.
      U3L2 Using Simple Commands_instruction: |
        Draw a square above and to the left
        of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: |
        Ask the user the question "What
        is your favorite color?" using the "prompt" block. Using the "if" block,
        check if the user's response matches yours. Add a "write" block to the
        body of the "if" statement to add the response "<favorite_color> is my
        favorite color too!" to the screen.
      U3L23 Chatbot Conditionals 2_instruction: |
        Replace the "if" block with an
        "if/else" block to make your chatbot respond in all circumstances.
      U3L23 Chatbot Conditionals 3_instruction: |
        In text mode, add several "else
        if" statements to your program.
      U3L23 Chatbot Intro 2_instruction: |
        Create a click event for your button. Create
        a conversation variable and store the user's input in it. You may need the
        "getText," "setText," and "+" blocks in your code.
      U3L23 Chatbot Intro 3_instruction: |
        Add the response "uh huh" by using the
        "+" operator. Add newline characters (\
        ) where appropriate.
      U3L23 Chatbot Intro 4_instruction: |
        Use this level to make your chatbot look
        and work better!
      U3L23 Chatbot Intro_instruction: |
        Add a Lable, Text Input, Button, and Text
        Area object to your project
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: |
        Draw a square ABOVE and to the RIGHT
        of the starting location. (Click to show full instructions)
      XML Scratchpad_instruction: Using this test level to grab xml for unit tests
