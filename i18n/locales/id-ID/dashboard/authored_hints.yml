id:
  data:
    authored_hints:
      2-3 Artist 1 new_authored_hint:
        2-3_Artist_1_new_a: Jika Anda menggunakan blok agar saya 'bergerak maju dengan 100 pixel', saya akan menarik garis secara otomatis.
        2-3_Artist_1_new_b: Kesulitan mengubah sudut? Gunakan blok 'belok kanan 90 derajat'.
      2-3 Artist 11_authored_hint:
        2-3_Artist_11_a: 'Kesulitan dengan sudut? Anda dapat mencapai 360 derajat dalam 8 belokan.  Apa itu 360/8? '
      2-3 Artist 12_authored_hint:
        2-3_Artist_12_a: Ada 360 derajat dalam sebuah lingkaran, jadi jika artis berbelok 1 derajat setiap kali melalui perulangan (loop), dia akan perlu melaluinya 360 kali.
      2-3 Artist 2 new_authored_hint:
        2-3_Artist_2_new_a: Artis tampaknya tidak menunjuk ke arah yang benar. Bisakah anda membuat mereka berbalik terlebih dahulu sebelum menggambar garis?
      2-3 Artist 3new_authored_hint:
        2-3_Artist_3new_a: Berapa 100-70? Berdasarkan cerita, itulah tinggi yang dibutuhkan dari topi tersebut!
        2-3_Artist_3new_b: Artis tampaknya tidak menunjuk ke arah yang benar. Bisakah anda membuat mereka berbalik terlebih dahulu sebelum menggambar garis?
      2-3 Artist 4_authored_hint:
        2-3_Artist_4_a: Untuk menyelesaikan rumah, semua yang perlu kita lakukan adalah menggambar persegi!
      2-3 Artist 6_authored_hint:
        2-3_Artist_6_a: 'Untuk membuat sudut kecil tersebut, Anda harus memutar *lebih jauh* dari yang kamu buat sebelumnya dengan bujur sangkar.   '
        2-3_Artist_6_b: Karena aku sudah menghadap ke kanan, akan lebih mudah memulai dengan berjalan maju, lalu putar ke arah kiri untuk membuat segitiga.
        2-3_Artist_6_c: Tiap sisi dari segitiga sama panjang dengan setiap sisi dari bujur sangkar...100 piksel!
      2-3 Artist 7_authored_hint:
        2-3_Artist_7_a: Cara termudah untuk menyelesaikan teka-teki ini adalah dengan menggambar bujur sangkar pertama dan pelukis mengarah ke bawah di akhir gambar sebelum membuat bujur sangkar kedua.
      2-3 Artist 8_authored_hint:
        2-3_Artist_8_a: Jika kamu memotong 200 menjadi setengah, berapa lebar piksel untuk setiap bujur sangkar?
      2-3 Artist 9 NEW_authored_hint:
        2-3_Artist_9_a: Berlian ini benar-benar nyata terdapat persegi pada sisinya
      2-3 Artist 9 REPLACEMENT_authored_hint:
        step_size: Setiap langkah adalah lebar 100 piksel dan tinggi 100 piksel.
      2-3 Artist 9_authored_hint:
        2-3_Artist_9_a: Berlian ini benar-benar nyata hanya terdapat persegi bersudut 45 derajat.
        2-3_Artist_9_b: |-
          Jangan lupa untuk berputar si pelukis ke kiri sebanyak 45 derajat sebelum kamu mulai menggambar bujur sangkarmu!
      2-3 Artist Debugging 10_authored_hint:
        2-3_Artist_Debugging_10_a: Ingat, kamu harus mengganti kontrop panel 10 piksel *lebih lebar*...jadi pastikan untuk **menambah** 10 dari angka apapun yang kamu ganti.
        2-3_Artist_Debugging_10_b: "**Coba dan gagal diterima di sini!**\nMulai dengan mengganti satu angka satu persatu.\nangka mana yang berpengaruh terhadap apa?\njika kamu masih bingung, tekan tombol \"Start Over\" dan programmu akan di ulang kembali."
      2-3 Artist Debugging 2_authored_hint:
        2-3_Artist_Debugging_2_a: 'Petunjuk: setiap janggut panjangnya 75 piksel.'
      2-3 Artist Debugging 3_authored_hint:
        2-3_Artist_Debugging_3_a: Belokan sebesar 15 derajat terlalu kecil.
        2-3_Artist_Debugging_3_b: Jika program bekerja terlalu cepat untuk melihat apa yang terjadi, cobalah untuk memperlambatnya dengan mengeser pengatur kecepatan.
      2-3 Artist Debugging 7_authored_hint:
        2-3_Artist_Debugging_7_a: Apa yang terjadi jika si pelukis berjalan atau melompat ke belakang setelah dia menggambar garis pertama?
      2-3 Artist Debugging 8_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          Berapa kali gambar figur saya digambar ulang?
          Berapa kali gambar tersebut "sebaiknya" digambar ulang?
          Pada bagian program mana yang harus kamu rubah?
      2-3 Artist Debugging 9_authored_hint:
        2-3_Artist_Debugging_9_a: Si pelukis harus berbelok 60 derajat ke kiri sebelum mulai menggambar!
        2-3_Artist_Debugging_9_b: Kamu tidak perlu menambah blok program lagi untuk satu putaran penuh, hanya tambah 60 derajat ke 'kiri' dari blok yang sudah tersedia!
      2-3 Artist Functions 1 a_authored_hint:
        2-3_Artist_Functions_1_a: Setiap persegi memiliki 100 piksel sisi, yang berarti anda harus bergerak maju ke depan 175 piksel sebelum menggambar persegi kedua anda.
        2-3_Artist_Functions_1_b: Tidak apa-apa menggambar garis tumpang tindih untuk membuat gelas anda.
      2-3 Artist Functions 1_authored_hint:
        2-3_Artist_Functions_1_a: Setiap persegi memiliki 100 piksel sisi, yang berarti anda harus bergerak maju ke depan 175 piksel sebelum menggambar persegi kedua anda.
        2-3_Artist_Functions_1_b: Tidak apa-apa menggambar garis tumpang tindih untuk membuat gelas anda.
      2-3 Artist Functions 11 a_authored_hint:
        2-3_Artist_Functions_11_a: Anda akan peelu untuk mengubah tidak hanya jumlah dan panjang sisi dalam fungsi, Tapi juga sudut artis bergantian di antara masing-masing sisi.
      2-3 Artist Functions 11_authored_hint:
        2-3_Artist_Functions_11_a: Anda akan peelu untuk mengubah tidak hanya jumlah dan panjang sisi dalam fungsi, Tapi juga sudut artis bergantian di antara masing-masing sisi.
      2-3 Artist Functions 12 a_authored_hint:
        2-3_Artist_Functions_12_a: Mencoba menjalankan kode pertama untuk melihat apa yang anda butuhkan untuk menambahkan.
      2-3 Artist Functions 12_authored_hint:
        2-3_Artist_Functions_12_a: Mencoba menjalankan kode pertama untuk melihat apa yang anda butuhkan untuk menambahkan.
      2-3 Artist Functions 2 a_authored_hint:
        2-3_Artist_Functions_2_a: |-
          Program anda harus:
          - Menggunakan fungsi
          - Bergerak maju 100 + 75 piksel
          - Menggunakan fungsi
      2-3 Artist Functions 2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          Program anda harus:
          - Menggunakan fungsi
          - Bergerak maju 100 + 75 piksel
          - Menggunakan fungsi
      2-3 Artist Functions 3 a_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 3_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4 a_authored_hint:
        2-3_Artist_Functions_4_a: Seniman membutuhkan 120 derajat antara setiap persegi untuk menyelesaikan desain ini.
      2-3 Artist Functions 4_authored_hint:
        2-3_Artist_Functions_4_a: Seniman membutuhkan 120 derajat antara setiap persegi untuk menyelesaikan desain ini.
      2-3 Artist Loops New 11_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          Mengingat kode tersebut dari teka-teki terakhir :
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_colour" inline="true">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next><block type="draw_turn_by_constant_dropdown">
          <title name="DIR">putarkekanan</title>
          <title name="VALUE" config="45,60,90,120,180">45</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">bergerakmaju</title>
          <title name="VALUE">50</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">putarkekiri</title>
          <title name="VALUE" config="45,60,90,120,180">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">bergerakmaju</title>
          <title name="VALUE">50</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
          
        2-3_Artist_Loops_New_11_b: Giliran baru anda harus berada di **akhir** pada kode dalam lingkaran.
      2-3 Artist Loops New 12_authored_hint:
        2-3_Artist Loops_New_12_a: Sebelum memulai berlian, seniman perlu belok ke kiri 60 derajat untuk mendapatkan garis yang benar.
        2-3_Artist Loops_New_12_b: Setelah seniman berjalan maju 100 piksel, dia akan perlu untuk belok ke kanan 120 derajat untuk membuat sudut tajam.
        2-3_Artist Loops_New_12_c: Seniman akan perlu untuk belok ke kanan hanya 60 derajat untuk membuat sebuah sudut lebar.
      2-3 Artist Loops New 13_authored_hint:
        2-3_Artist_Loops_New_13_a: "Pada akhir setiap berlian, seniman sudah menghadap ke arah yang benar untuk memulai yang berikutnya.  Karena ini, kami tidak ingin menambahkan sebuah tambahan 'belok ke kiri oleh' blok sebelum memulai kembali."
        2-3_Artist_Loops_New_13_b: "Untuk membuat setiap berlian, seniman membutuhkan:   - bergerak- belok ke kanan 120 derajat- bergerak- belok ke kanan 60 derajat  Kemudian mengerjakan semua nya kembali!"
      2-3 Artist Loops New 9_authored_hint:
        2-3_Artist_Loops_New_9_a: Seniman butuh untuk belok 45 derajat ke kanan sebelum memulai menggambar.
        2-3_Artist_Loops_New_9_b: V ini benar-benar nyata hanya setengah dari persegi. Apa yang akan kode lakukan untuk menggambar setengah persegi?
      2-3 Artist Nested Loops 1_authored_hint:
        2-3_Artist_Nested_Loops_1_a: Ingatlah untuk memasukkan semua blok abu-abu dalam lingkaran anda.
      2-3 Artist Nested Loops 3_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "Perlu bantuan denagn sudut?  **360/20 = 30**"
        2-3_Artist_Nested_Loops_3_b: Ingatlah untuk menempatkan semua kode abu-abu dan belok blok anda ke dalam lingkaran.
      2-3 Artist Nested Loops 4_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "Perlu bantuan denagn sudut?  **360/20 = 30**"
      2-3 Artist Nested Loops 5_authored_hint:
        2-3_Artist_Nested_Loops_5_a: "Mencoba menggunakan blok 'jump forwad' untuk mendapatkan dari atas satu persegi ke tempat di mana anda akan memulai berikutnya. Jika kotak anda setinggi 20 piksel dan jaraknya 20 piksel, seberapa jauh anda harus melompat?"
      2-3 Artist Nested Loops 7_authored_hint:
        2-3_Artist_Nested_Loops_7_a: "Seberapa jauh anda harus mengubah dalam setiap lingkaran?  Apakah 360/10?"
      2-3 Artist Nested Loops 9_authored_hint:
        2-3_Artist_Nested_Loops_9_a: |-
          Perlu bantuan menemukan sudut yang benar? ** 360 / 12 = 30 **
      2-3 Bee Conditionals 14_authored_hint:
        2-3_Bee_Conditionals_14_a: Mengalami kesulitan mencari tahu bagaiman untuk memblok ke bawah? Mencoba memperlakukan bunga merah sama seperti bunga ungu!
        2-3_Bee_Conditionals_14_b: Jika bunga merah itu ungu, bisakah Anda mencari tahu bagaimana menggunakan loop `ulangi` tambahan untuk mengurangi kode?
        2-3_Bee_Conditionals_14_c: "Mencoba memecahkan ini menjadi dua bagian terpisah:  ![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)\n1) Mengumpulkan nektar 3 kali  - Bergerak maju 5 kali  - Periksa untuk melihat jika nektar, menjadi: mendapatkannya  - Putar kiri  2) Membuat madu   - Bergerak maju satu kali  - Membuat dua madu"
      2-3 Bee Conditionals 15_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Ingat: Bunga ungu hanya memiliki sekitar 0 atau 1 nektar dan mereka dapat mengubah setiap kali anda menjalankan program.'
      2-3 Bee Conditionals 3_authored_hint:
        2-3_Bee_Conditionals_3_a: Kode bisa menjadi singkat jika anda menggunakan loop setiap kali anda berpindah tepat, loop lain untuk mengumpulkan nektar, dan orang lain membuat madu.
      2-3 Bee Conditionals 6_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Ingat: Bunga ungu mengubah antara 0 dan 1 nektar ketika anda menjalankan program anda!'
      2-3 Bee Debugging 1_authored_hint:
        2-3_Bee_Debugging_1_a: Setelah anda menemukan dan memperbaiki blok yang salah, apakah anda melihat setiap pola yang dapat dibuat lebih sederhana menggunakan loop 'ulang'?
      2-3 Bee Debugging 2_authored_hint:
        2-3_Bee_Debugging_2_a: Setelah anda menemukan dan memperbaiki blok yang salah, apakah anda melihat setiap pola yang dapat dibuat lebih sederhana menggunakan loop 'ulang'?
      2-3 Bee Debugging 4_authored_hint:
        2-3_Bee_Debugging_4_a: Ada beberapa tempat di mana lebah melakukan sesuatu yang tidak masuk akal? Apa yang terjadi jika anda mengubah blok?
      2-3 Bee Functions 4_authored_hint:
        2-3_Bee_Functions_4_a: Anda tidak harus menggunakan loop dengan fungsi, mencoba bergerak, kemudian bergerak dan menggunakan fungsi lagi.
      2-3 Bee Functions 6_authored_hint:
        2-3_Bee_Functions_6_a: Anda tidak harus menggunakan loop dengan fungsi, mencoba bergerak, kemudian bergerak dan menggunakan fungsi lagi.
      2-3 Bee Functions 8_authored_hint:
        2-3_Bee_Functions_8_a: "Jika teka-teki tampak menantang, cobalah bangun judul fungsi anda suatu waktu.  tambahkan beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai disana!![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9_authored_hint:
        2-3_Bee_Functions_8_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        2-3_Bee_Functions_8_b: |-
          Ingat untuk membangun kode dalam blok fungsi hijau.![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2_authored_hint:
        2-3_Bee_Loops_2_a: Anda harus mengakhirinya dengan empat blok dalam loop anda.
      2-3 Bee Loops 3_authored_hint:
        2-3_Bee_Loops_3_a: Anda harus memiliki 6 blok dalam loop anda.
      2-3 Bee Loops 3B_authored_hint:
        2-3_Bee_Loops_3B_a: Anda akan membutuhkan dua loop 'fungsi' yang berbeda, satu demi satu.
      2-3 Bee Loops 4_authored_hint:
        2-3_Bee_Loops_4_a: Anda harus mengakhirinya dengan lima blok dalam loop anda.
      2-3 Bee Loops 4A_authored_hint:
        2-3_Bee_Loops_4A_a: Tindakan pertama akan berubah, daripada bergerak.
        2-3_Bee_Loops_4A_b: Bagian terakhir program dapat diselesaikan dengan menulis kode pada akhir program anda di luar loop anda.
        2-3_Bee_Loops_4A_c: Jika Anda tidak dapat melihat loop belum, cobalah pengkodean keluar panjang jalan pertama, kemudian melihat apa yang Anda dapat menggabungkan menjadi loop 'ulangi' pada akhir.
      2-3 Bee Loops 5_authored_hint:
        2-3_Bee_Loops_5_a: Jika anda tidak melihat blok untuk dimasukkan ke dalam 'ulang', mulai dengan pengkodean seiap bergerak dan mencari pola.
      2-3 Bee Loops 6_authored_hint:
        2-3_Bee_Loops_6_a: Juka anda tidak dapat mengatakan apa yang harus pergi ke loop 'ulang', cobalah menyeret keluar satu persatu dan lihat jika anda dapat menemukan pola.
        2-3_Bee_Loops_6_b: Disana harus ada 6 blok di dalam loop 'ulang' anda ketika anda sudah selesai.
      2-3 Bee Loops 7_authored_hint:
        2-3_Bee_Loops_7_a: Tindakan pertama akan berubah, daripada bergerak.
        2-3_Bee_Loops_7_b: 'Jika anda tidak cukup gambar loop dari awal, cobalah pengkodean dengan cara lama, kemudian mencari pola.  '
      2-3 Maze 1_authored_hint:
        2-3_Maze_1_a: Untuk menggunakan blok 'bergerak', tarik dari daerah toolbar keluar ke ruang kerja dan hubungkan itu dengan blok 'kapan menjalankan'.
      2-3 Maze 16_authored_hint:
        2-3_Maze_16_a: Jika pola sulit untuk dilihat, cobalah semua pengkodean pertama dan lihat apakah ulang lagi dan lagi sebelum anda memasukkan loop.
        2-3_Maze_16_b: "Untuk menempatkan banyak blok ke dalam loop 'ulang', hanya tarik loop keluar menuju ruang kerja, kemudian tarik semua blok dari program awal itu.  Menghubungkan kembali semua ke blok 'ketika menjalankan' dan anda aman untuk pergi!"
      2-3 Maze 6_authored_hint:
        2-3_Maze_6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
      2-3 Maze Loops 17_authored_hint:
        2-3_Maze_Loops_17_a: Jika pola sulit untuk dilihat, cobalah semua pengkodean pertama dan lihat apakah ulang lagi dan lagi sebelum anda memasukkan loop.
        2-3_Maze_Loops_17_b: Apakah kode awal akan dihapus? klik ' mulai lagi ' intuk mendapatkannya kembali!
      2-3 Maze Loops 18_authored_hint:
        2-3_Maze_Loops_18_a: Jika pola sulit untuk dilihat, cobalah semua pengkodean pertama dan lihat apakah ulang lagi dan lagi sebelum anda memasukkan loop.
      2-3 Maze Loops 19_authored_hint:
        2-3_Maze_Loops_19_a: Jika kamu kehabisan ide, cobalah menulis ulang kodemu tanpa menggunakan "loops" terlebih dahulu guna menemukan polanya.
        2-3_Maze_Loops_19_b: Menggabungkan satu "loop"pada program dapat mengurangi jumlah penggunaan blok.
      2-3 Maze Loops 20_authored_hint:
        2-3_Maze_Loops_20_a: Mencari pola langkah tangga dalam labirin ini untuk menemukan loop yang bisa anda gunakan.
      2-3 Maze Loops 21_authored_hint:
        2-3_Maze_Loops_21_a: Jika anda mengalami kesulitan untuk menemukan pola langkah tangga, cobalah menutuo jalan yang diblokir dengan jari anda.
      4-5 Artist 1_authored_hint:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11_authored_hint:
        4-5_Artist_11_a: Dalam loop anda, pastikan artis melompat ke atas dan mundur setelah gambar setiap baris.
      4-5 Artist 3_authored_hint:
        4-5_Artist_3_a: |2
          Jika tempat tidur bunga adalah 600 piksel di sekitar dan dua sisi 200 piksel lama, berikut adalah cara untuk mencari tahu apa sisi pendek menambahkan hingga:
          
           ** 600-200 - 200 = 200 **
          
           yang berarti kedua sisi pendek menambahkan hingga 200 piksel.
          
          ** Apa adalah 200 / 2? **
        4-5_Artist_3_b: Jika anda tidak dapat melihat dimana loop 'ulangi' pergi segerah, cobalah pengkodean solusi keseluruhan dan mencari pola.
      4-5 Artist 4_authored_hint:
        4-5_Artist_4_a: "Satu lingkaran penuh adalah 360 derajat!\nItulah jumlah berapa banyak pengulangan pada kode ini sebelum satu lingkaran diselesaikan (begeser tiap 1 derajat sekali)!"
      4-5 Artist 5_authored_hint:
        4-5_Artist_5_a: |-
          "Trial dan Error" adalah metode yang baik, namun kamu bisa menyelesaikan program dengan membagi 90 derajat sepertiga.
          **90 / 3 = _____**
      4-5 Artist 7_authored_hint:
        4-5_Artist_7_a: 'Sudut mana yang paling kecil? pada sudut berapa si pelukis bediri? '
      4-5 Artist 8_authored_hint:
        4-5_Artist_8_a: "Panjang dari tiap sisi adalah 240 piksel. Artinya, panjang dari dua garis pendek tersebut adalah:\n**800 - 240 - 240 = 320**\nBerapa hasil dari **320/2** ? "
        4-5_Artist_8_b: "Soal pada gambar ini dapat dipecahkan dengan 2 cara!\n- Gambarlah dua persegi panjang yang panjangnya **120** dan tingginya **160** dengan sisi yang tumpang tindih.\n- Gambar satu persegi panjang dengan panjang **240** dan tinggi **160**, lalu tambahkan sebuah garis di tengah-tengahnya."
      4-5 Artist 9_authored_hint:
        4-5_Artist_9_a: "Ketika sebuah segitiga sama sisi, semua sisi dan semua sudut nya sama.  \n"
        4-5_Artist_9_b: Anda akan perlu untuk menggambar tiga segitiga pada ukuran yang sama. Jangan lupa untuk lompat ke posisi yang baru anda setelah masing-masing.
      4-5 Artist Assessment 1_authored_hint:
        4-5_Artist_Assessment_1_a: Anda hanya perlu untuk menggambar luar segitiga unntuk menyelesaikan teka-teki ini.
      4-5 Artist Patterns 11_authored_hint:
        4-5_Artist_Patterns_11_a: Jika ada 360 derejat dalam lingkaran dan loop berubah setiap 3 derejat, berapa kali anda perlu menggambar loop sehingga menjadai lingkaran sempurna?
      4-5 Artist Patterns 2_authored_hint:
        4-5_Artist_Patterns_2_a: Perhatikan bahwa karena kotak adalah 20 pixel panjang, Anda harus melompat 20 piksel sebelum Anda mulai persegi Anda berikutnya.
      4-5 Artist Patterns 3_authored_hint:
        4-5_Artist_Patterns_3_a: Berhati-hati untuk mengeluarkan blok penuh"kode dari toolbar setiap kali anda mencoba yang baru.
        4-5_Artist_Patterns_3_b: Jika kode anda menjadi membingungkan, anda slalu dapat klik "mulai lagi" dan mencoba lagi!
      4-5 Artist Patterns 5_authored_hint:
        4-5_Artist_Patterns_5_a: "Sekarang, ketika artis menyelesaikan setiap berlian, ia menghadap arah yang berlawanan yang dibutuhkannya untuk memulai yang berikutnya.  berapa derejat dia perlu mengubah untuk mengatur dirinya ke arah yang benar?"
      4-5 Bee Conditionals 4_authored_hint:
        remember_quantum: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
      4-5 Bee Conditionals 5_authored_hint:
        remember_quantum: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
      4-5 Bee Conditionals 6_authored_hint:
        4-5 Bee Conditionals 6_a: Anda dapat memecahkan teka-teki ini hanya menggunakan blok pada ruang kerja. Urutan apa yang harus mereka lakukan?
        4-5 Bee Conditionals 6_b: Pastikan anda memerikasa untuk melihat apakah bunga memiliki lebih dari **0**nektar setidaknya **3**kali untuk memecahkan teka-teki ini.
      4-5 Bee Debugging 1_authored_hint:
        4-5_Bee_Debugging_1_a: Jika anda mengalami kesulitan mencari tahu apa yang tidak benar, cobalah menjalankannya untuk melihat dimana hal-hal yang salah.
      4-5 Bee Nested Loops Rows_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Mencoba memperlakukan teka-teki ini seperti persegi panjang yang panjang di mana lebah perlu bergerak maju, lalu belok kiri beberapa kali untuk menyelesaikan jalan.
      4-5 Maze 10_authored_hint:
        4-5_Maze_10_a: |-
          Jika anda tidak dapat melihat bagaimana menggunakan loop untuk memecahkan teka-teki segera, cobalah memecahkannya dengan cara pertama, kemudian mencari pola. Apakah harus anda meletakkan 'ulang' di sekitar untuk membuat kata lebih pendek?
      4-5 Maze 4_authored_hint:
        4-5_Maze_4_a: Jika anda kesulitan untuk mencari tahu di mana untuk mendapatkan ulang, cobalah semua pengkodean dan mencari pola.
      4-5 Maze 5_authored_hint:
        4-5_Maze_5_a: Mencoba menggunakan loop 'ulang' setiap kali anda perlu 'bergerak maju' lebih dari dua langkah.
        4-5_Maze_5_b: Anda dapat menggunakan lebih dari satu 'ulangi' loop di teka-teki.
      4-5 Maze 6_authored_hint:
        4-5_Maze_6_a: "Coba melacak keluar jalan dengan jari Anda. Itu jalan terpendek yang dapat Anda temukan?"
      4-5 Maze 7_authored_hint:
        4-5_Maze_7_a: "** Ingin mendapatkan kode kecil seperti itu bisa? **\n\nmencari pola di blok. Apakah Anda melihat sesuatu yang berulang? Mencoba menempatkan loop di sekitarnya sebagai gantinya!"
      4-5 Nested Loops 12_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 2_authored_hint: [ ]
      4-5 Nested Loops 6_authored_hint:
        4-5_Nested_Loops_6_a: |-
          Jangan lupa untuk membuat berbelok setelah lingkaran batin Anda. 
          
          Anda akan perulangan 6 segitiga lebih dari 360 derajat
      4-5 Nested Loops 7_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Desain ini akan berputar 10 kali lebih dari 360 derajat. ** 360/10 =? **
      4-5 Nested Loops 8_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Anda akan melingkar bentuk ini 6 kali lebih dari 360 derajat. ** 360/6 =? **
      4-5 While Loops 8_authored_hint:
        4-5_While_Loops_8_a: Setiap item akan perlu loop sendiri 'sementara'.
      AppLab Intro 3 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 4 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 5 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 6 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 7 - Change Screen Color_authored_hint: [ ]
      Artist Inspiration_authored_hint:
        brush_width: Setiap item akan perlu loop sendiri 'sementara'. Kami menetapkan sikat lebar 1, kemudian warna biru sebelum kita melakukan apa pun.
        double_loop: Mencoba menempatkan 'untuk loop' dalam 'ulangi' loop.
        specifics: "'Untuk loop' berjalan dari tiga sampai tujuh belas untuk masing-masing dari enam \"kelopak\" sebelum pindah ke membuat berikutnya, menggambar bentuk dengan hanya angka ganjil dari sisi. \n     \nBlok 'diatur alpha' menggunakan Divisi memudar warna seperti counter semakin tinggi."
        after: Ketika Anda selesai dengan "petal", pastikan untuk 'bergerak maju' 20 piksel sebelum Anda membuat 60 derajat rotasi.
        solution: |-
          **Larutan**
          
          
          ![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      Bergeron Robot Maze1_authored_hint:
        2-3_Maze_1_a: Untuk menggunakan blok 'bergerak', tarik dari daerah toolbar keluar ke ruang kerja dan hubungkan itu dengan blok 'kapan menjalankan'.
      Course 4 Artist 11_authored_hint:
        Course_4_Artist_11_a: 'Setengah segi enam memiliki **panjang 30** dan belok kanan **60 derajat**.  '
        Course_4_Artist_11_b: 'Segitiga 2/3 memiliki **panjang 80** dan belok kanan **120 derajat**. '
      Course 4 Artist 12_authored_hint:
        Course_4_Artist_12_a: 'Setiap bentuk berulang adalah kombinasi dari ** setengah dari hexagon **, diikuti oleh ** 2/3 dari segitiga **. '
        Course_4_Artist_12_b: 'Bentuk unitnya hampir sama seperti pada teka-teki terakhir, kecuali setengah segi sedikit lebih besar. '
        Course_4_Artist_12_c: "1) Tiga baris pertama panjangnya 60 piksel dan Anda perlu memutar 60 derajat. 2) Dua baris berikutnya panjangnya 80 piksel dan Anda perlu memutar 120 derajat "
        Course_4_Artist_12_d: |-
          **Solusi**
          
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">6</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">3</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">60</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">60</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">80</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">120</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist 6_authored_hint:
        Course_4_Artist_6_a: Ada 3 segitiga dalam 360 derajat rotasi... berapa kali tidak 3 pergi ke 360?
      Course 4 Artist 7_authored_hint: [ ]
      Course 4 Artist 8a_authored_hint:
        Course_4_Artist_8a: |-
          Butuh bantuan mencari tahu bagaimana jauh untuk mengubah?
          
          Ada 3 segitiga dalam 360 derajat rotasi.
          
          Berapa kali 3 pergi ke 360?
      Course 4 Artist 9_authored_hint:
        Course_4_Artist_9_a: "Perlu tahu berapa banyak untuk mengubah?\n\nApakah 360 dibagi 10?"
      Course 4 Artist Binary Free Play 2b_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Kode ini menggunakan dua 'untuk loop'. Seseorang menghitung dari 1 untuk 8, hitungan lain dari 8-1.
        Course_4_Artist_Binary_Free_Play_2b_b: Masing-masing 'untuk loop' memiliki tiga mengulangi. Pertama menarik set paling kiri dari 1s, kedua menarik 0s di tengah-tengah dan ketiga menarik 1s di sebelah kanan.
        Course_4_Artist_Binary_Free_Play_2b_c: Dalam mengulangi setiap Anda perlu 'counter' 1s dan '16-(2 x counter)' untuk 0s.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Solusi:**
          
          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 11_authored_hint:
        Course_4_Artist_For_Loops_11_a: "Sudut gilirannya akan berubah dengan setiap bentuk! \n\nGunakan blok matematika untuk memasukkan 360 dibagi dengan jumlah sisi bentuk harus mendapatkan sudut kanan. "
      Course 4 Artist For Loops 11a_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 dibagi dengan jumlah sisi bentuk telah adalah jumlah derajat yang Anda akan perlu untuk mengubah. '
        Course_4_Artist_For_Loops_11a_b: 'Setiap kali, Anda akan perlu untuk bergerak maju dengan 10 kali panjang dari jumlah sisi. '
      Course 4 Artist For Loops 3_authored_hint:
        Course_4_Artist_For_Loops_3_a: Untuk memiliki 'untuk' loop mendorong gerakan Anda, pastikan bahwa Anda menggunakan 'counter' sebagai jarak.
      Course 4 Artist For Loops 4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "** Apakah nomor terkecil yang Anda perlukan? \nBerapakah jumlah terbesar? \nSeberapa besar adalah peningkatan setiap kali? ** \n\nmereka adalah pertanyaan-pertanyaan Anda perlu tanyakan untuk mengisi kekosongan loop 'untuk'."
      Course 4 Artist For Loops Challenge_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: Bentuk terbesar memiliki sisi 19. Terkecil memiliki hanya dua.
        Course_4_Artist_For_Loops_Challenge_b: Loop 'untuk' menghitung dua setiap kali melalui.
      Course 4 Artist For Loops Challenge_a_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: Poligon terbesar memiliki sisi 19.
        Course_4_Artist_For_Loops_Challenge_b: Setiap poligon tidak lengkap, dengan satu sisi kurang dari itu seharusnya.
      Course 4 Artist For Loops inspire_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: Dasar dari kode ini adalah sama dengan solusi yang sebelumnya tantangan teka-teki... dengan beberapa perubahan.
        Course_4_Artist_For_Loops_inspire_b: Coba 'untuk' loop yang berlangsung dari 3-10 dengan kenaikan dari 1.
        Course_4_Artist_For_Loops_inspire_c: Ada dua iterasi dari lingkaran ulangi yang sama di dalam loop 'untuk', tetapi ulangi kedua berubah arah yang berlawanan.
        Course_4_Artist_For_Loops_inspire_d: "**solusi:** \n\n <xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\" inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n            <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_arithmetic\" inline=\"true\">\n                <title name=\"OP\">kurang</title>\n                <value name=\"A\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">melawan</title>\n                  </block>\n                </value>\n                <value name=\"B\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">maju kedepan</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">40</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">belok kekanan</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">membagi</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">360</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">melawan</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">kurang</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">melawan</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">1</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">maju kedepan</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">40</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">belok kekiri</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">membagi</title>\n                            <value name=\"A\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">360</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">melawan</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration_authored_hint:
        Course_4_Artist_Functions_Inspiration_a: Mulailah dengan kode dari teka-teki terakhir dan menambahkan tambahan 'belok kanan' tiga derajat di dalam loop ulangi.
        Course_4_Artist_Functions_Inspiration_b: Mencoba mengubah dengan lebih dari 90 derajat di luar 'ulangi loop', tetapi masih di dalam 'untuk loop'.
        Course_4_Artist_Functions_Inspiration_c: |-
          **solusi:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">14</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">membalas</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a square 20"></mutation>
          <next>
          <block type="jump_by_constant">
          <title name="DIR">melompat maju</title>
          <title name="VALUE">20</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">belok kekana</title>
          <title name="VALUE">3</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">belok kekiri</title>
          <title name="VALUE">100</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Functions challenge_authored_hint:
        Course_4_Artist_Functions_challenge_a: Bagian dari memahami bagaimana menggunakan fungsi adalah mencari tahu mana yang Anda butuhkan, dan mana yang tidak.
        Course_4_Artist_Functions_challenge_b: Gunakan 'untuk loop', kemudian menggunakan variabel counter yang dalam loop 'ulangi' bersarang.
        Course_4_Artist_Functions_challenge_c: Setiap iterasi, Anda harus menggambar persegi kemudian melompat maju.
        Course_4_Artist_Functions_challenge_d: Anda akan perlu untuk berbelok ke kiri 90 derejat di luar 'ulang', tetapi masih didalam 'untuk loop'.
      Course 4 Artist Inspire_authored_hint:
        Course_4_Artist_Inspire_a: Setelah anda menyelesaikan satu persegi, cobalah melompat baju setengah panjangnya sebelum berbalik dan membuat lain.
        Course_4_Artist_Inspire_b: Setiap persegi dan lompatan diulang (menggunakan peralihan belok kiri) untuk membuat sebuah unit penuh seperti pinwheel.
        Course_4_Artist_Inspire_c: Setiap pinwheel juga diulang empat kali, dengan belok kekanan dari **360/sisi**.
        Course_4_Artist_Inspire_d: |-
          **solusi:**<xml><block type="when_run" deletable="false" movable="false"><next><block type="draw_colour" inline="true" id="draw-color"><value name="COLOUR"><block type="colour_picker"><title name="COLOUR">#843179</title></block></value><next><block type="variables_set" inline="false"><title name="VAR">sisi</title><value name="VALUE"><block type="math_number"><title name="NUM"></block></value><next><block type="variables_set" inline="false"><title name="VAR">panjang</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">PEMBAGI</title><value name="A"><block type="math_number"><title name="NUM">200</title></block></value><value name="B"><block type="variables_get"><title name="VAR">sisi</title></block></value></block></value><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">sisi</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">sisi</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">sisi</title></block></value><statement name="DO"><block type="draw_move" inline="true"><title name="DIR">bergerakMaju</title><value name="VALUE"><block type="variables_get"><title name="VAR">panjang</title></block></value><next><block type="draw_turn" inline="true"><title name="DIR">belokKanan</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">PEMBAGI</title><value name="A"><block type="math_number"><title name="NUM">360</title></block></value><value name="B"><block type="variables_get"><title name="VAR">sisi</title></block></value></block></value></block></next></block></statement><next><block type="jump" inline="true"><title name="DIR">lompatkedepan</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">PEMBAGI</title><value name="A"><block type="variables_get"><title name="VAR">panjang</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value><next><block type="draw_turn" inline="true"><title name="DIR">belokKIri</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">PEMBAGI</title><value name="A"><block type="math_number"><title name="NUM">360</title></block></value><value name="B"><block type="variables_get"><title name="VAR">sisi</title></block></value></block></value></block></next></block></next></block></statement><next><block type="jump" inline="true"><title name="DIR">lompatMaju</title><value name="VALUE"><block type="variables_get"><title name="VAR">panjang</title></block></value><next><block type="draw_turn" inline="true"><title name="DIR">blokKanan</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">PEMBAGI</title><value name="A"><block type="math_number"><title name="NUM">360</title></block></value><value name="B"><block type="variables_get"><title name="VAR">sisi</title></block></value></block></value></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></xml>
      Course 4 Artist Vars 13_authored_hint:
        Course_4_Artist_Vars_13_a: Anda memerlukan dua ulangi loop (satu di dalam yang lain) 'sisi' kedua berulang kali.
        Course_4_Artist_Vars_13_b: "Ulangi loop dalam menarik sebuah segi delapan (memutar ke kiri). \n\nSetelah itu, Anda perlu untuk bergerak maju dan belok kanan hanya dalam lingkaran luar."
        Course_4_Artist_Vars_13_c: Untuk menyesuaikan bentuk untuk menginap dengan ukuran yang sama dengan jumlah sisi mengubah, gunakan blok matematika untuk Bagilah panjang dalam pixel dengan jumlah sisi.
      Course 4 Artist Vars 6_authored_hint:
        Course_4_Artist_Vars_6_a: Menggambar sebuah poligon beraturan, mengubah ** 360 / sisi ** setiap waktu.
      Course 4 Artist Vars 8_authored_hint:
        Course_4_Artist_Vars_8_a: Jika Anda membagi panjang awal dengan jumlah sisi, panjang masing-masing sisi akan menjadi lebih pendek karena jumlah sisi semakin tinggi.
      Course 4 Bee Params 7_authored_hint:
        notice_pattern: 'Apakah anda melihat pola berapa jumlahnya dari perubahan nektar? '
        count_with_for: Perhatikan bahwa nektar naik secara bertahap. Blok apa yang dapat anda gunakan untuk melakukan hal yang sama berulang-ulang saat melakukan perhitungan?
      Course 4 Bee Params 8_authored_hint:
        Course_4_Bee_Params_8_a: Ok untuk meminta nomor madu dan nomor nektar setiap saat. Jika tidak ada sesuatu, nomornya bisa 0.
      Course 4 Play Lab Params 2_authored_hint:
        Course_4_Play_Lab_Params_2_a: Anda perlu klik "edit" pada fungsi lompat dan perbarui saja itu menggunakan `tinggi` parameter.
      Course 4 Play Lab Vars 2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Pastikan untuk mengatur nomer untuk `dog_speed`untuk sesuatu yang besar dari `cat_speed`.
      Course 4 Play Labs For Loops 2_authored_hint:
        Course_4_Play_Labs_For_Loops_2_a: Apa yang akan anda tambahkan ke loop `untuk` setiap kali untuk melewati angka genab?
      Course 4 Playlab For Loop Freeplay_authored_hint: [ ]
      Course 4 Playlab For Loops 4b_authored_hint:
        Course_4_Playlab_For_Loops_4b_a: Bendera berukuran sekitar 330 piksel dari karakter.
        Course_4_Playlab_For_Loops_4b_b: Bagaimana anda dapat membuat setiap karakter mencapai 330 piksel dalam jumlah gerakan yang sama dengan perbedaan jumlah permulaan dan perhentian?
        Course_4_Playlab_For_Loops_4b_c: Ingat, tidak masalah berapa banyak karakter melewati bendera pada langkah terakhirnya, asalkan setiap karakter melakukan jumlah langkah yang sama untuk sampai ke bendera.
      Course 4 Playlab For Loops 5b_authored_hint:
        Course_4_Playlab_For_Loops_5b_a: Karakternya sekitar 175 piksel dari pusat.
        Course_4_Playlab_For_Loops_5b_b: Ingat, karakter langkah berikutnya akan lebih besar daripada terakhir mereka, karena pusat terus bertambah besar.
      Course 4 Playlab For Loops 6b_authored_hint: [ ]
      Course 4 SCF 1_authored_hint:
        Course_4_SCF_1_a: Setiap segi enam memiliki 40 sisi piksel.
        Course_4_SCF_1_b: Terdapat lompatan 120 piksel diantara setiap segi enam dalam setiap garis horisontal.
        Course_4_SCF_1_c: "Sebelum anda menggambar baris kedua oktagon, anda harus memutar ke kanan 60 derajat dan melompat maju 96 pixels. \n\nSetelah anda berada di di lokasi vertikal yang benar, anda harus memutar artis anda kembali lagi dan melompat 320 piksel kebelakang."
        Course_4_SCF_1_d: "Sebelum anda menggambar baris ketiga oktagon, anda harus memutar ke kanan 60 derajat dan melompat maju 40 piksel. \n\nSetelah anda berada di lokasi vertikal yang benar, anda harus memutar artis anda kembali dan melompat 440 piksel kebelakang (120 piksel lebih jauh dari `geser bawah/depan` fungsi. "
        Course_4_SCF_1_e: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a line of hexagons"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down/forward"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="draw a line of hexagons"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down/backward"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">draw a hexagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">shift down/backward</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">440</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">draw a line of hexagons</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a hexagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">120</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">shift down/forward</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">320</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 1a_authored_hint:
        Course_4_SCF_1a_a: Ingat fungsi anda dari tahap 16.
        Course_4_SCF_1a_b: "Lihatlah jalan ini sebagai rute utama Anda: \n\n\n![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)"
        Course_4_SCF_1a_c: Anda harus mempertimbangkan penggunaan `untuk loop`. tidak untuk langkah, tapi untuk fungsi parameter.
        Course_4_SCF_1a_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false" uservisible="false" y="14">
          <next>
          <block type="variables_set" inline="false" uservisible="false">
          <title name="VAR">left</title>
          <value name="VALUE">
          <block type="math_number" uservisible="false">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false" uservisible="false">
          <title name="VAR">right</title>
          <value name="VALUE">
          <block type="math_number" uservisible="false">
          <title name="NUM">0</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">21</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathLeft</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="get nectar">
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="get nectar">
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">right</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <title name="NAME">get nectar</title>
          <statement name="STACK">
          <block type="controls_if" inline="false">
          <mutation else="1"></mutation>
          <value name="IF0">
          <block type="logic_compare" inline="true" movable="false">
          <title name="OP">EQ</title>
          <value name="A">
          <block type="parameters_get">
          <title name="VAR">dir</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO0">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"></block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="controls_if" inline="false">
          <mutation else="1"></mutation>
          <value name="IF0">
          <block type="logic_compare" inline="true" movable="false">
          <title name="OP">EQ</title>
          <value name="A">
          <block type="parameters_get">
          <title name="VAR">dir</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO0">
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 1b_authored_hint:
        Course_4_SCF_1b_a: "Perhatikan bentuk dari semua poin madu yang serupa. \n\nTempatan yang bagus untuk fungsi!"
        Course_4_SCF_1b_b: "Lihatlah ide ini  untuk bagaimana lebah mungkin berpergian:\n\n! [] (https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_c: Anda harus mempertimbangkan penggunaan dari `untuk loop` untuk jarak tempuh lebah.
        Course_4_SCF_1b_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="make honey up and over"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">make honey up and over</title>
          <statement name="STACK">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 2_authored_hint:
        Course_4_SCF_2_a: Setiap segi delapan memiliki 40 sisi piksel.
        Course_4_SCF_2_b: Ada 136 lompatan piksel antara oktagon di setiap garis horizontal.
        Course_4_SCF_2_c: "Sebelum anda menggambar baris kedua oktagon, anda harus memutar ke kanan 45 derajat dan melompat maju 96 pixels. "
        Course_4_SCF_2_d: "Perhatikan itu karena jumlahnya oktagonnya sedikit  di  baris genab, anda tidak perlu melompat lebih jauh lagi untuk mendapatkan  tempat awal di baris ganjil. \n\nIni berarti anda bisa menggunakan fungsi yang sama untuk semua baris."
        Course_4_SCF_2_e: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="numOctagons"></arg>
          </mutation>
          <title name="NAME">draw octagons</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">numOctagons</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw an octagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">136</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">shift down</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">96</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">408</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 3_authored_hint:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_b: 'Ini adalah seri dari segi delapan dengan sisi `konter` piksel panjang. '
        Course_4_SCF_3_c: 'Setiap oktagon dipanggil dari dalam ''untuk'' loop yang berlangsung dari 200 ke 2 sampai 2. '
        Course_4_SCF_3_d: 'Jangan lupa memutar 22.5 derajat pada setiap akhir iterasi. '
        Course_4_SCF_3_e: Kedua warna masing - masing oktagon dan lebar pena dikontrol oleh variabel 'balasan'.
        Course_4_SCF_3_f: |-
          **Solution:**
          
          <xml>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="length"></arg>
          </mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw an octagon">
          <arg name="length"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">22.5</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1_authored_hint:
        Course_4_SCFL_1_a: "Lihatlah suatu pilihan ini untuk gerakan: \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        Course_4_SCFL_1_b: 'Coba gunakan dua loop ''untuk'': Satu untuk memanjat dan meraih nektar, dan yang lainnya memanjat turun dan membuat madu.'
        Course_4_SCFL_1_c: "Perhatikan bahwa satu loop untuk membutuhkan beberapa loop reguler di dalam waktu balasan ulang untuk membuat pola tangga meningkat.\n\nYang lain loop hanya membutuhkan satu lingkaran biasa untuk menghasilkan jumlah madu."
        Course_4_SCFL_1_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1a_authored_hint:
        Course_4_SCFL_1a_a: Anda mungkin harus menempuh lebih jauh secara keseluruhan untuk menggunakan jumlah blok terkecil.
        Course_4_SCFL_1a_b: "Lihatlah satu pilihan ini untuk gerakan: \n\n![](https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)"
        Course_4_SCFL_1a_c: Sebuah `loop untuk` membantu Anda mengeksekusi pola yang sama, namun dengan jumlah langkah yang berubah. Perhatikan bahwa jumlah langkah yang dibutuhkan menurun dari 7 menjadi 5 oleh 1.
        Course_4_SCFL_1a_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">7</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1b_authored_hint:
        Course_4_SCFL_1b_a: Coba gunakan 'untuk loop'.
        Course_4_SCFL_1b_b: "Lihatlah salah satu pilihan berikut ini: \n\n![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)"
        Course_4_SCFL_1b_c: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 2_authored_hint:
        Course_4_SCFL_2_a: "Lihatlah salah satu pilihan berikut ini: \n\n![](https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)"
        Course_4_SCFL_2_b: Perhatikan bahwa ada tiga poin selama setiap iterasi loop 'untuk' mana Anda berhenti untuk berinteraksi dengan benda-benda.
        Course_4_SCFL_2_c: Selama setiap iterasi loop 'untuk', nomor untuk setiap objek berkaitan dengan variabel 'counter' dalam beberapa cara.
        Course_4_SCFL_2_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">POWER</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 3_authored_hint:
        Course_4_SCFL_3_a: '''Lebar pena'' adalah 1. Alun-alun pertama memiliki 50 pixel sisi, dan setiap persegi adalah 50 piksel lebih luas daripada yang terakhir.'
        Course_4_SCFL_3_b: Opacity pada sikat selalu 'counter' / 2.
        Course_4_SCFL_3_c: Setelah Anda membuat setiap persegi, jangan lupa untuk melompat ke belakang, mengubah, melompat lagi, kemudian menghidupkan kembali!
        Course_4_SCFL_3_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 4_authored_hint:
        Course_4_SCFL_4_a: Perubahan warna terjadi menggunakan 'diatur warna merah, hijau, biru' blok. Merah selalu nilai 'counter', hijau adalah selalu 'counter 255 -', dan biru tetap konstan di 255 persis.
        Course_4_SCFL_4_b: Setiap bentuk adalah persegi dengan sisi yang lama, dimulai dengan 5px, dan meningkatkan 5px all the way sampai 200px 'counter' piksel.
        Course_4_SCFL_4_c: Artis ternyata 15 derajat antara setiap persegi.
        Course_4_SCFL_4_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 6_authored_hint:
        Course_4_SCFL_6_a: Perubahan warna terjadi menggunakan 'diatur warna merah, hijau, biru' blok. Merah diatur konstan di 255, hijau adalah selalu nilai 'counter', dan biru selalu ' 255 - counter'.
        Course_4_SCFL_6_b: Kode untuk ini jauh lebih sederhana daripada yang Anda pikirkan. Hanya mengatur warna dalam 'untuk loop', bergerak maju, kemudian belok.
        Course_4_SCFL_6_c: '''Untuk loop'' pergi dari 5 sampai 250 oleh 2. '
        Course_4_SCFL_6_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 7_authored_hint:
        Course_4_SCFL_7_a: Perubahan warna ia terjadi menggunakan 'diatur warna merah, hijau, biru' blok. Merah diatur ke 'melawan'. Hijau adalah '255 - counter', dan biru diatur konstan di 255.
        Course_4_SCFL_7_b: 'Gambar ini dibuat dengan menggunakan dua serupa ''untuk loop''. Pergi dari 5 ke 200 oleh 2, yang lain pergi dari 200 sampai 5 oleh 2. '
        Course_4_SCFL_7_c: Di dalam masing-masing 'untuk loop' Anda bergerak maju 5 piksel sebelum berbelok oleh '360 / counter'. Jangan lupa untuk mengatur sikat Anda ke lebar 'counter' sebelum Anda melakukannya!
        Course_4_SCFL_7_d: Anda harus belok kiri 225 derajat antara dua 'untuk loop'.
        Course_4_SCFL_7_e: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_number_dropdown">
          <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">225</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 1_authored_hint:
        Course_4_SCV_1_a: 'Variabel sangat membantu Anda karena dapat menambahkan setiap kali melalui satu lingkaran. '
        Course_4_SCV_1_b: Teka-teki ini memiliki satu lingkaran yang menciptakan poligon, satu lingkaran yang mengulangi 'sisi' poligon, lalu lingkaran lain yang melakukan semuanya lagi setelah menambahkan 5 ke 'sisi'.
        Course_4_SCV_1_c: Menggunakan sebuah variabel untuk sisi dan untuk panjang membuat kode lebih bersih karena Anda dapat mengulang kode yang sama beberapa kali, sebagai gantinya membuat salinan baru untuk setiap rangkaian angka.
        Course_4_SCV_1_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 2_authored_hint:
        Course_4_SCV_2_a: "Lengkapilah gambar dari 10 bunga ini: \n![](https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png)        \nyang terdiri dari 10 dekagons ini: \n![](https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png)"
        Course_4_SCV_2_b: 'Desain ini menggunakan loop bersarang (tiga deep). Semua loop menjalankan ` sisi ` kali. '
        Course_4_SCV_2_c: Seniman berubah ke kiri saat membuat setiap decagon, tapi ternyata ke kanan di kedua loop lainnya.
        Course_4_SCV_2_d: Untuk mencegah semua Anda 10 kelopak "bunga" dari mendapatkan ditarik di tempat yang sama, membuat yakin untuk melompat ke depan dengan `panjang` /` sisi `sebelum Anda menghidupkan 360 /` sisi `derajat sebagai bagian dari terluar Anda lingkaran.
        Course_4_SCV_2_e: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">400</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 3_authored_hint:
        Course_4_SCV_3_a: 'Menggunakan blok matematika kamu untuk menambah dan mengurangi poin untuk variabel `poin` ketika sprite bertabrakan. '
        Course_4_SCV_3_b: Anda dapat mengubah parameter seberapa jauh sprite anda bergerak salah satu tombol panah ditekan setiap kali.
        Course_4_SCV_3_c: |-
          **Solution:**
          
          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">points</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">points</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 4_authored_hint:
        Course_4_SCV_4_a: Tiga variabel yang akan membantu anda di sini. Satu untuk unit pusat, satu unit dari madu, dan satu untuk seberapa jauh lebah harus bergerak setiap iterasi.
        Course_4_SCV_4_b: 'Itu akan sangat membantu untuk menggunakan tiga loop dalam loop utama. Satu untuk bergerak maju, satu untuk mengumpulkan nektar dan satu untuk membuat madu. '
        Course_4_SCV_4_c: "Lihatlah pilihan gerakan ini:  ![](https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)"
        Course_4_SCV_4_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 5_authored_hint:
        Course_4_SCV_5_a: |-
          Lihatlah pilihan gerakan ini:![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: Melalui loop Setiap waktu, bunga-bunga memiliki dua kurang nektar dan lebah perlu untuk membuat satu lagi madu.
        Course_4_SCV_5_c: Perhatikan bahwa pada awal loop diluar, lebah bergerak beberapa kali yang ada nektar di bunga berikutnya.
        Course_4_SCV_5_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 6_authored_hint:
        Course_4_SCV_6_a: |-
          Lihatlah seperti apa bentuk tunggal yang lengkap![](https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_b: 'Anda akan mendapatkan keuntungan dari menciptakan 8 variabel: merah1, hijau1, biru1, merah2, hijau2, biru2, panjang, dan sisi.'
        Course_4_SCV_6_c: Masing-masing bentuk 5 sisi ini rusak menjadi potongan panjang ``/`sisi` dimana zig adalah teal (rgb = 0,175,200) dan zag adalah ungu (rgb = 100, 50, 150).
        Course_4_SCV_6_d: 'Zig, belok kiri oleh `360` /` sisi `. Untuk zag, belok kanan oleh `360` /` sisi `. '
        Course_4_SCV_6_e: 'Sisa dari program ini adalah sangat standar untuk membuat penuh rotasi 360 derajat dari bentuk, kecuali bahwa kita adalah tumpang tindih bentuk setengah, jadi kita harus belok ke kanan dengan`180`/`sisi`, yang berarti bahwa kita perlu dua kali lebih banyak seperti biasanya dari mereka (`sisi`*`2` pengulangan). '
        Course_4_SCV_6_f: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">100</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">150</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">70</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red1</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green1</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red2</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green2</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">180</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      CourseF_PlayLab_vars2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Pastikan untuk mengatur nomer untuk `dog_speed`untuk sesuatu yang besar dari `cat_speed`.
      D_Frozen_nested3_authored_hint:
        courseD_artist_project3_a: Gunakan menu drop down pada blok `ubah` untuk memilih sudut yang Anda butuhkan!
        courseD_artist_project3_b: "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n- Try 72 degrees if you are repeating the outer loop 5 times\n- Try 60 degrees if you are repeating the outer loop 6 times"
      D_Frozen_nested4_authored_hint:
        courseD_artist_project4_a: |
          Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:
          
          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />
          
          
          Here's a set of hexagons with squares:
          
          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Untuk mencoba ini, tariklah kepingan salju pertama anda, belilah, kemudian tariklah kepingan salju kedua.
      D_Frozen_nested5_authored_hint:
        courseD_artist_project4_a: |
          Lines of 2 hexagons and 4 triangles:
          
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      D_Frozen_nested6_authored_hint:
        courseD_artist_project1a_a: |
          This stair step uses a 76 degree turn and repeats 4 times.
          
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Pola-pola ini banyak seperti anak tangga dari teka-teki lain, tetapi menggunakan sebuah sudut yang berbeda.
      D_Frozen_nested7_authored_hint:
        courseD_artist_project2a_a: |
          This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.
          
          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      D_Frozen_nested8_authored_hint:
        courseD_artist_project3a_a: Anda dapat memilih jumlah yang berbeda untuk memutar bentuk Anda! Bagaimana 18 kali dengan sebuah turn 20 derajat di antara?
      D_Frozen_nested9_authored_hint:
        courseD_artist_project4a_a: |
          Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)
          
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      Farmer for Authored Hint testing_authored_hint:
        first_hint: |-
          Ini adalah petunjuk pertama. Ini memiliki beberapa markup `** dasar **`
        second_hint: |-
          This is the second hint. It has an image.
          
          ![](https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)
        last_hint: Ini adalah petunjuk ketiga dan terakhir. Tidak ada yang spesial.
      Farmer for TTS testing_authored_hint:
        first_hint: |-
          Ini adalah petunjuk pertama. Ini memiliki beberapa markup `** dasar **`
        second_hint: |-
          This is the second hint. It has an image.
          
          ![](https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)
        last_hint: Ini adalah petunjuk ketiga dan terakhir. Tidak ada yang spesial.
      Function intro Ryan_authored_hint:
        Function_intro_Ryan_b: Jika anda menyebut fungsi dengan benar, ini adalah jalan yang akan anda tempuh...
        Function_intro_Ryan_a: Kamu bisa memanggil fungsi berulang kali di dalam program!  Coba panggil dua kali untuk memecahkan teka-teki ini.
      Harvesting_authored_hint:
        pointer_harvester_test: Blok apa yang dapat saya gunakan untuk memeriksa sesuatu dan membuat keputusan?
      Inspirational Artwork_authored_hint:
        brush_width: Setiap item akan perlu loop sendiri 'sementara'. Kami menetapkan sikat lebar 1, kemudian warna biru sebelum kita melakukan apa pun.
        double_loop: Mencoba menempatkan 'untuk loop' dalam 'ulangi' loop.
        specifics: "'Untuk loop' berjalan dari tiga sampai tujuh belas untuk masing-masing dari enam \"kelopak\" sebelum pindah ke membuat berikutnya, menggambar bentuk dengan hanya angka ganjil dari sisi. \n     \nBlok 'diatur alpha' menggunakan Divisi memudar warna seperti counter semakin tinggi."
        after: Ketika Anda selesai dengan "petal", pastikan untuk 'bergerak maju' 20 piksel sebelum Anda membuat 60 derajat rotasi.
        solution: |-
          **Larutan**
          
          
          ![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      InspirationalArtwork_authored_hint: [ ]
      InspirationalArtwork_2018_authored_hint: [ ]
      K2.0 sequence 1_authored_hint:
        K2.0_sequence_1_a: Program ini hilang satu blok. Bisakah kamu mencari tahu yang mana?
      K2.0 sequence 10_authored_hint:
        K2.0_sequence_10_a: Jika anda mengalami masalah, coba tuliskan langkah-langkah di selembar kertas terlebih dahulu.
        K2.0_sequence_10_b: You will need three different kinds of arrows to solve this puzzle.
      K2.0 sequence 12_authored_hint:
        K2.0_sequence_12_a: If the pig isn't moving far enough, try adding another block.
      K2.0 sequence 2_authored_hint:
        K2.0_sequence_2_a: Salah satu blok memindahkan burung ke arah yang salah. Dapatkah anda mencari tahu yang mana dan menggantinya dengan blok yang benar?
      K2.0 sequence 3_authored_hint:
        K2.0_sequence_3_a: Jika anda mengalami masalah, coba cari tahu jalan yang benar dan lepaskan blok yang tidak sesuai.
      K2.0 sequence 4_authored_hint:
        K2.0_sequence_4_a: Use 2 different arrow blocks to solve this puzzle!
      K2.0 sequence 5_authored_hint:
        K2.0_sequence_5: Kode akhir anda harus memiliki tiga blok gerakan.
      K2.0 sequence 6_authored_hint:
        K2.0_sequence_6_a: Ada 1 blok yang perlu ditambahkan untuk memindahkan burung ke babi.
        K2.0_sequence_6_b: Jika anda tidak tahu apa yang harus dilakukan, cobalah menggambar teka-teki di atas kertas dan gunakan jari anda untuk mencari tahu kearah mana bergerak.
      K2.0 sequence 7_authored_hint:
        K2.0_sequence_7_a: Jika anda terjebak, coba gambar di atas kertas untuk melihat bagaimana burung harus bergerak.
      K2.0 sequence 8_authored_hint:
        K2.0_sequence_8_a: Terjebak? Cobalah menelusuri jalan burung dengan jari anda.
      K2.0 sequence 9_authored_hint:
        K2.0_sequence_9_a: Jika anda mengalami masalah, coba tuliskan langkah-langkah di selembar kertas terlebih dahulu.
        K2.0_sequence_9_b: You will need to go three different directions to solve this puzzle.
      K2.0 sequence FP_authored_hint:
        K2.0_sequence_FP_a: Jika jalur yang anda butuhkan tidak jelas, gunakan jari anda untuk melacak jalan anda dari burung ke babi.
      K2.0 sequence pre_authored_hint:
        K2.0_sequence_pre_a: If you are having trouble getting the bird to move, make sure blocks are connected under `when run`.
      MC Agent Freeplay_authored_hint:
        MC_HOC_2017_13_Cole_a: Coba buat Agent membangun beberapa jembatan sehingga Alex atau Steve bisa berjalan-jalan di sekitar tepi peta.
      MC_HOC_2017_01_Cole_authored_hint:
        MC_HOC_2017_01_Cole_a: Gunakan tombol panah untuk mengarahkan pemain ke dalam rumah. Masuk ke kotak oranye untuk menang.
      MC_HOC_2017_01_RETRY_authored_hint:
        MC_HOC_2017_01_RETRY_a: Tarik satu blok `pindah maju` dari kotak alat ke ruang kerja dan posisikan di bawah blok `ketika dijalankan`.
        MC_HOC_2017_01_RETRY_b: Jangan lupa klik "Jalankan" untuk menjalankan kode untuk Agent.
        MC_HOC_2017_01_RETRY_c: Setelah Agent menjalankan semua kodenya, kamu bisa memindahkan pemain dengan tombol panah!
      MC_HOC_2017_02_Cole_authored_hint:
        MC_HOC_2017_02_Cole_a: Pindahkan Agent maju dua ruang untuk berdiri di atas pelat tekanan.  Hal ini akan membuka pintu bagi pemainmu.
        MC_HOC_2017_02_Cole_b: |-
          Tekan "Jalankan"! 
          Kamu bisa menjalankan kodemu meskipun tidak benar.  Jalankan dan atur ulang kodemu berulang kali hingga kamu mengetahui apa yang salah.
        MC_HOC_2017_02_Cole_c: Setelah Agent membuka pintu, gunakan tombol panah untuk memindahkan pemain ke peta!
        MC_HOC_2017_02_Cole_d: Pastikan Agen mengikuti jalan yang telah digariskan pada peta!
      MC_HOC_2017_02_Will_authored_hint:
        MC_HOC_2017_02_Cole_a: Pindahkan Agent maju dua ruang untuk berdiri di atas pelat tekanan.  Hal ini akan membuka pintu bagi pemainmu.
        MC_HOC_2017_02_Cole_b: |-
          Tekan "Jalankan Agent"! 
          Kamu bisa menjalankan kodemu meskipun tidak benar.  Jalankan dan atur ulang kodemu berulang kali hingga kamu mengetahui apa yang salah.
        MC_HOC_2017_02_Cole_c: Setelah Agent membuka pintu, gunakan tombol panah untuk memindahkan pemain ke kotak oranye.
      MC_HOC_2017_03_Cole_authored_hint:
        MC_HOC_2017_03_Cole_a: Setelah kamu membawa Agent ke pelat tekanan, kamu bisa menggunakan tombol panah untuk membuat pemain berjalan ke kompas!
        MC_HOC_2017_03_Cole_b: Apakah kodenya terlihat agak panjang?  Coba gunakan loop `ulangi` dan lihat apakah kamu bisa mengetahui cara membuatnya lebih pendek!
      MC_HOC_2017_04POINT5_Cole_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          Melintasi kedua pelat tekanan ini akan membuka jalur bagi pemain. 
          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_04POINT5_RYAN_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: 'Gunakan blok `belok kanan` untuk mengubah arah Agent'
        MC_HOC_2017_04POINT5_RYAN_a: Agent hanya perlu mencapai pelat tekanan pertama untuk memungkinkan Alex atau Steve lewat menuju kapak.
      MC_HOC_2017_04_Cole_authored_hint:
        MC_HOC_2017_04_Cole_a: Agent perlu `pindah maju` 7 kali.  Bagaimana kamu bisa menggunakan loop `ulangi` untuk mewujudkannya?
        MC_HOC_2017_04_Cole_c: |-
          Tekan "Jalankan"! 
          Kamu bisa menjalankan kodemu meskipun tidak benar.  Jalankan dan atur ulang kodemu berulang kali hingga kamu mengetahui apa yang salah.
        MC_HOC_2017_04_Cole_b: Setelah Agent mencapai pelat tekanan, ia akan membuka pintu untuk pemain.
      MC_HOC_2017_05_Cole_authored_hint:
        MC_HOC_2017_05_Cole_a: Tahukah kamu bahwa kamu bisa memasukkan lebih dari satu bagian kode ke dalam loop?  Coba tempatkan papan **dan** maju ke dalam `ulangi` untuk menyelesaikan teka-teki ini.
        MC_HOC_2017_05_Cole_b: Dapatkanlah agen di seberang sungai, sedang membangun jembatan untuk Anda pergi.
      MC_HOC_2017_05_Josh_authored_hint:
        MC_HOC_2017_05_Cole_a: Tahukah kamu bahwa kamu bisa memasukkan lebih dari satu bagian kode ke dalam loop?  Coba tempatkan papan **dan** maju ke dalam `ulangi` untuk menyelesaikan teka-teki ini.
      MC_HOC_2017_06_Cole_authored_hint:
        MC_HOC_2017_06_Cole_a: Berapa kali loop ini berjalan?  Berapa kali hal ini *harus* dijalankan?
        MC_HOC_2017_06_Cole_b: 'Bantu agen membangun jembatan sepanjang jalan melintasi air! '
      MC_HOC_2017_06_Josh_authored_hint:
        MC_HOC_2017_06_Cole_a: Coba masukkan lebih dari satu instruksi ke dalam loop `ulangi`!
      MC_HOC_2017_07_Cole_authored_hint:
        MC_HOC_2017_07_Cole_c: Semua kamu perlu memiliki agen adalah jalan pasti menuju Minecart.
        MC_HOC_2017_07_Cole_a: Untuk memecahkan teka-teki ini, cari tahu apa kegunaan fungsi `bersihkan jalur` dan panggil sebanyak yang kamu butuhkan menggunakan blok `bersihkan jalur` kecil berwarna hijau dari kotak alat.
        MC_HOC_2017_07_Cole_b: Coba campurkan blok fungsi dengan blok lain dari kotak alat untuk membantu kamu mengatasi teka-teki ini.
      MC_HOC_2017_08_RY_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          Tekan "Jalankan Agent"! 
          Kamu bisa menjalankan kodemu meskipun tidak benar.  Jalankan dan atur ulang kodemu berulang kali hingga kamu mengetahui apa yang salah.
        MC_HOC_2017_08_RY_b: Ada BANYAK cara untuk memecahkan teka-teki ini.  Cobalah beberapa!
      MC_HOC_2017_08_Will_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          Tekan "Jalankan Agent"! 
          Kamu bisa menjalankan kodemu meskipun tidak benar.  Jalankan dan atur ulang kodemu berulang kali hingga kamu mengetahui apa yang salah.
        MC_HOC_2017_08_RY_b: Ada BANYAK cara untuk memecahkan teka-teki ini.  Cobalah beberapa!
      MC_HOC_2017_10_Cole_authored_hint:
        MC_HOC_2017_10_Cole_a: Gunakan fungsi untuk mempermudah pemecahan teka-teki ini!
      MC_HOC_2017_10_RETRY_authored_hint:
        MC_HOC_2017_10_Cole_b: Tidak tahu pergi ke mana? Lihat apakah anda dapat menemukan garis putus-putus!
        MC_HOC_2017_10_Cole_a: Gunakan fungsi untuk mempermudah pemecahan teka-teki ini!
      MC_HOC_2017_13_Cole_authored_hint:
        MC_HOC_2017_13_Cole_a: Coba buat Agent membangun beberapa jembatan sehingga Alex atau Steve bisa berjalan-jalan di sekitar tepi peta.
      MC_HOC_2017_4.5v2_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          Melintasi kedua pelat tekanan ini akan membuka jalur bagi pemain. 
          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_Ali_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          Tekan "Jalankan"! 
          Kamu bisa menjalankan kodemu meskipun tidak benar.  Jalankan dan atur ulang kodemu berulang kali hingga kamu mengetahui apa yang salah.
        MC_HOC_2017_08_RY_b: Ada BANYAK cara untuk memecahkan teka-teki ini.  Cobalah beberapa!
        MC_HOC_2017_08_RY_c: Cobalah mengikuti garis putus-putus untuk jalan mudah melewati lahar.
      MC_HOC_2017_FP10x10_authored_hint: [ ]
      MC_HOC_2017_FP10x10_RE_authored_hint: [ ]
      MC_HOC_2017_FP20x20_authored_hint:
        MC_HOC_2017_13_Cole_a: Coba buat Agent membangun beberapa jembatan sehingga Alex atau Steve bisa berjalan-jalan di sekitar tepi peta.
      MikeStar_authored_hint:
        hint1: Don't give up!
      MikeStarHard_authored_hint:
        hint1: Don't give up!
      MikeStarNested_authored_hint:
        hint1: Don't give up!
      NEW Course 4 Artist Functions 13_authored_hint:
        NEW_Course_4_Artist_Functions_13_a: Mencoba mengedit `gambar sebuah garis dari kotak` sehingga fungsi anda tidak perlu menyebutnya dua kali.
        NEW_Course_4_Artist_Functions_13_c: Kode apa yang anda butuhkan jika anda ingin mencoba untuk membuat sebuah bintang menggunakan garis biasa selain kotak?
      NEW Course 4 Artist Functions 4_authored_hint:
        NEW_Course_4_Artist_Functions_4_a: Kamu diharuskan untuk 'belok kanan 120 derajat' setelah setiap blok.
      NEW Course 4 Artist Functions 9_authored_hint:
        NEW_Course_4_Artist_Functions_9_a: Coba jalankan kode sebelum anda menambahkan setiap blok. Apa yang membuat gambar terlihat sedikit mati?
        NEW_Course_4_Artist_Functions_9_b: Jika kamu tidak bisa meletakkan jari Anda pada jalan yang salah, cobalah memperlambat artis dengan menggeser slide ke kiri.
      NEW Course 4 Artist Params 11_authored_hint:
        NEW_Course_4_Artist_Params_11_a: Terdapat lebih dari satu nomor yang perlu diganti dengan variabel di dalam fungsi.
      NEW Course 4 Artist Params 13_authored_hint:
        NEW_Course_4_Artist_Params_13_a: 'Anda akan perlu untuk membagi *sekeliling* dengan jumlah sisi dalam rangka untuk menjaga bentuk ukuran yang sama secara keseluruhan. '
      NEW Course 4 Artist Params 14_authored_hint:
        NEW_Course_4_Artist_Params_14_a: It's okay to run the program a few times to figure out how the function works with different parameters.
      NEW Course 4 Artist Params inspire_authored_hint:
        brush_width: Setiap item akan perlu loop sendiri 'sementara'. Kami menetapkan sikat lebar 1, kemudian warna biru sebelum kita melakukan apa pun.
        double_loop: Mencoba menempatkan 'untuk loop' dalam 'ulangi' loop.
        specifics: "'Untuk loop' berjalan dari tiga sampai tujuh belas untuk masing-masing dari enam \"kelopak\" sebelum pindah ke membuat berikutnya, menggambar bentuk dengan hanya angka ganjil dari sisi. \n     \nBlok 'diatur alpha' menggunakan Divisi memudar warna seperti counter semakin tinggi."
        after: Ketika Anda selesai dengan "petal", pastikan untuk 'bergerak maju' 20 piksel sebelum Anda membuat 60 derajat rotasi.
        solution: |-
          **Solution**
          
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">17</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw a polygon">
          <arg name="length"></arg>
          <arg name="sides"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">30</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">20</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      NEW Course 4 Bee For Loops 10a_authored_hint:
        NEW_Course_4_Bee_For_Loops_10a_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        NEW_Course_4_Bee_For_Loops_10a_b: You'll need to have 2 repeats, one will use a math block.
      NEW Course 4 Bee For Loops 7_authored_hint:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
      NEW Course 4 Bee For Loops 8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: "Jika loop anda sedang menghitung, penambahan tersebut akan ditambahkan ke variabel counter setiap saat. \nApa yang perlu anda tambahkan ke setiap nomor untuk mendapatkan nomor setelah itu?"
      New Minecraft Hero Project_authored_hint:
        MC_HOC_2017_13_Cole_a: Coba buat Agent membangun beberapa jembatan sehingga Alex atau Steve bisa berjalan-jalan di sekitar tepi peta.
      Overworld Avoid Monsters_authored_hint:
        mc_8_a: Terdapat beberapa jalan yang dapat anda ambil. Yang mana yang paling pendek?
        mc_8_b: Gunakan 'repeat' pengulangan untuk menyederhanakan kode Anda.
        mc_8_c: Tujuan anda adalah untuk sampai ke pintu rumah di bagian atas layar.
      Overworld Avoid Monsters_2018_authored_hint:
        mc_8_a: Terdapat beberapa jalan yang dapat anda ambil. Yang mana yang paling pendek?
        mc_8_b: Gunakan 'repeat' pengulangan untuk menyederhanakan kode Anda.
        mc_8_c: Tujuan anda adalah untuk sampai ke pintu rumah di bagian atas layar.
      Overworld Chop Tree_authored_hint:
        mc_2_a: 'Anda butuh `gerak maju` dua kali untuk berdiri di depan pohon.'
        mc_2_b: Perintah 'destroy block' penebangan pohon di depan Anda.
      Overworld Chop Tree_2018_authored_hint:
        mc_2_a: 'Anda butuh `gerak maju` dua kali untuk berdiri di depan pohon.'
        mc_2_b: Perintah 'destroy block' penebangan pohon di depan Anda.
      Overworld Chop Trees_authored_hint:
        mc_4_a: 'Anda dapat menebang pohon dalam urutan apapun. Apakah mengambil jumlah terkecil dari blok?'
        mc_4_b: Perintah 'destroy block' penebangan pohon di depan Anda.
      Overworld Chop Trees_2018_authored_hint:
        mc_4_a: 'Anda dapat menebang pohon dalam urutan apapun. Apakah mengambil jumlah terkecil dari blok?'
        mc_4_b: Perintah 'destroy block' penebangan pohon di depan Anda.
      Overworld House Frame Chosen_authored_hint:
        mc_6_a: Klik panah di blok 'tempat' untuk memilih tempat mana yang kamu inginkan.
        mc_6_b: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        mc_6_c: Anda dapat memasukkan lebih dari satu blok kedalam 'repeat' pengulangan.
      Overworld House Frame Chosen_2018_authored_hint:
        mc_6_a: Klik panah di blok 'tempat' untuk memilih tempat mana yang kamu inginkan.
        mc_6_b: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        mc_6_c: Anda dapat memasukkan lebih dari satu blok kedalam 'repeat' pengulangan.
      Overworld Move to Sheep_authored_hint:
        mc_1_a: 'Blok ''move forward'' ada di bagian atas toolbox.'
        mc_1_b: 'Pastikan kedua ''bergerak maju'' blok akan membentak ''ketika menjalankan'' blok.'
      Overworld Move to Sheep_2018_authored_hint:
        mc_1_a: 'Blok ''move forward'' ada di bagian atas toolbox.'
        mc_1_b: 'Pastikan kedua ''bergerak maju'' blok akan membentak ''ketika menjalankan'' blok.'
      Overworld Place Wall_authored_hint:
        mc_5_a: Gunakan 'tempat' blok pertama, dan kemudian blok 'bergerak'.
        mc_5_b: Pastikan kedua blok dalam lingkaran 'repeat' untuk menjalankan kode lebih dari sekali.
        mc_5_c: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      Overworld Place Wall_2018_authored_hint:
        mc_5_a: Gunakan 'tempat' blok pertama, dan kemudian blok 'bergerak'.
        mc_5_b: Pastikan kedua blok dalam lingkaran 'repeat' untuk menjalankan kode lebih dari sekali.
        mc_5_c: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      Overworld Plant Crops_authored_hint:
        mc_7_a: Gunakan blok 'tanaman tanaman' untuk menanam tanaman di tempat anda berada.
        mc_7_b: Kedua garis gelap tanah warna coklat oleh air perlu diisi dengan tanaman.
        mc_7_c: Anda dapat memasukkan lebih dari satu blok kedalam 'repeat' pengulangan.
      Overworld Plant Crops_2018_authored_hint:
        mc_7_a: Gunakan blok 'tanaman tanaman' untuk menanam tanaman di tempat anda berada.
        mc_7_b: Kedua garis gelap tanah warna coklat oleh air perlu diisi dengan tanaman.
        mc_7_c: Anda dapat memasukkan lebih dari satu blok kedalam 'repeat' pengulangan.
      Overworld Powered Minecart_authored_hint:
        mc_13_a: Gunakan 'tempat rel' untuk memasang rel di alun-alun tempat kamu berdiri.
        mc_13_b: Gunakan 'repeat' pengulangan untuk membuat kode Anda lebih pendek.
      Overworld Powered Minecart_2018_authored_hint:
        mc_13_a: Gunakan 'tempat rel' untuk memasang rel di alun-alun tempat kamu berdiri.
        mc_13_b: Gunakan 'repeat' pengulangan untuk membuat kode Anda lebih pendek.
      Overworld Shear Sheep_authored_hint:
        mc_3_a: 'Blok ''geser'' mendapatkan domba di depan kamu. Apakah kamu bertemu domba?'
        mc_3_b: 'Jika Anda perlu mengubah cara Anda menghadapinya, gunakan blok `turn`.'
        mc_3_c: 'Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.'
      Overworld Shear Sheep_2018_authored_hint:
        mc_3_a: 'Blok ''geser'' mendapatkan domba di depan kamu. Apakah kamu bertemu domba?'
        mc_3_b: 'Jika Anda perlu mengubah cara Anda menghadapinya, gunakan blok `turn`.'
        mc_3_c: 'Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.'
      Pattern Bee 1_authored_hint:
        conditional_pointer: |-
          Mulailah dengan memikirkan bagian ini: apa yang berbeda di setiap langkahnya? Blok apa yang bisa Anda gunakan untuk membuat *keputusan* tentang apakah Anda sedang berbunga atau sarang lebah?
          
          ![](https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: Selain menghasilkan madu, apakah Anda melihat sesuatu yang berbeda yang harus Anda lakukan di setiap sarang lebah?
      Planning Farmer_authored_hint:
        conditional_pointer: |-
          Mulailah dengan memikirkan bagian ini: apa yang berbeda di setiap langkahnya? Blok apa yang bisa Anda gunakan untuk membuat *keputusan* tentang apakah Anda sedang berbunga atau sarang lebah?
          
          ![](https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: Selain menghasilkan madu, apakah Anda melihat sesuatu yang berbeda yang harus Anda lakukan di setiap sarang lebah?
      Quantum Bee - Ryan_authored_hint:
        test_hint: Ini adalah sebuah petunjuk test.
      Test embedded K1 Blockly in instructions_authored_hint: [ ]
      Underground Avoiding Lava_authored_hint:
        mc_11_a: Semua kode ini di tempat untuk memeriksa lava dan berurusan dengan itu. Semua yang perlu anda lakukan adalah menambahkan sebuah blok untuk bergerak.
        mc_11_b: Apakah kamu ingin perintah `move forward` Anda masuk ke dalam pernyataan` if` atau setelahnya?
      Underground Avoiding Lava_2018_authored_hint:
        mc_11_a: Semua kode ini di tempat untuk memeriksa lava dan berurusan dengan itu. Semua yang perlu anda lakukan adalah menambahkan sebuah blok untuk bergerak.
        mc_11_b: Apakah kamu ingin perintah `move forward` Anda masuk ke dalam pernyataan` if` atau setelahnya?
      Underground If Statements_authored_hint:
        mc_12_a: Ruang dengan bintik-bintik merah adalah di mana anda akan menemukan batu merah.
        mc_12_b: Dapatkah Anda menggunakan sebuah ` mengulang ` lingkaran untuk membuat kode Anda lebih pendek?
        mc_12_c: 'Menggunakan `jika` pernyataan untuk memeriksa ruang untuk lava, kemudian menempatkan batu-batuan. '
      Underground If Statements_2018_authored_hint:
        mc_12_a: Ruang dengan bintik-bintik merah adalah di mana anda akan menemukan batu merah.
        mc_12_b: Dapatkah Anda menggunakan sebuah ` mengulang ` lingkaran untuk membuat kode Anda lebih pendek?
        mc_12_c: 'Menggunakan `jika` pernyataan untuk memeriksa ruang untuk lava, kemudian menempatkan batu-batuan. '
      Underground Iron_authored_hint:
        mc_10_a: Blok besi adalah ruang yang berbintik-bintik di belakang obor! Bagaimana anda akan sampai di sana?
        mc_10_b: Saat anda berdiri di pinggir lahar, gunakan `tempatkan batu bulat di depan` untuk membuat jalan aman. Lalu, anda dapat berjalan di atasnya!
        mc_10_c: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      Underground Iron_2018_authored_hint:
        mc_10_a: Blok besi adalah ruang yang berbintik-bintik di belakang obor! Bagaimana anda akan sampai di sana?
        mc_10_b: Saat anda berdiri di pinggir lahar, gunakan `tempatkan batu bulat di depan` untuk membuat jalan aman. Lalu, anda dapat berjalan di atasnya!
        mc_10_c: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      Underground Mining Coal_authored_hint:
        mc_9_a: Apakah Anda menghadapi jalan yang benar? Blok ` menghancurkan blok` blok di depan Anda.
        mc_9_b: Bintik hitam di dinding adalah batubara! Gunakan `hancurkan blok` untuk menambang batubara.
        mc_9_c: Gunakan `letakkan obor` untuk menempatkan obor di tempat anda berdiri.
      Underground Mining Coal_2018_authored_hint:
        mc_9_a: Apakah Anda menghadapi jalan yang benar? Blok ` menghancurkan blok` blok di depan Anda.
        mc_9_b: Bintik hitam di dinding adalah batubara! Gunakan `hancurkan blok` untuk menambang batubara.
        mc_9_c: Gunakan `letakkan obor` untuk menempatkan obor di tempat anda berdiri.
      Valentine_artist2_01_authored_hint:
        Valentine_artist2_01_a: Setiap sisi rumput berukuran 30 piksel. Coba gunakan pola langkah tangga.
        Valentine_artist2_01_b: 'Apakah anda melihat ada pola yang berulang? anda harus menggunakan dua blok ''move forward` dan dua blok `turn` yang berbeda dalam satu lingkaran. '
        Valentine_artist2_01_c: |-
          Try this loop
          <xml><block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      Valentine_artist_01_authored_hint:
        Valentine_artist_01_a: Ke arah mana yang harus dihadapi artis untuk bergerak? Ke arah mana yang harus dihadapi seniman untuk menempatkan stiker llama baru?
        Valentine_artist_01_b: Seniman perlu menempatkan 10 stiker llama dan memutar 90 derajat di setiap belokan.
      Valentine_playlab_01_authored_hint:
        Valentine_playlab_01_a: |-
          Snap the `actor 1 throw red hearts down` ke dalam acara `when actor 1 clicked`.
          Jangan lupa ganti `left` ke` down`!
        Valentine_playlab_01_b: Gunakan blok `move actor 1 left` dengan mengekliknya pada tempatnya di bawah acara` when left arrow clicked`.
      aE1_authored_hint: [ ]
      aE2_authored_hint:
        aE2_a: Perhatikan bahwa karena serbet berukuran 20 piksel, Anda harus melompat 20 piksel sebelum memulai loop berikutnya.
      aE3_authored_hint:
        aE3_a: Setelah Anda menjalankan ** nested loop ** dari tahap terakhir, Anda perlu melompat kembali ke awal baris.
        aE3_b: "Jangan lupa untuk memindahkan artis ke bawah sebelum anda mulaikan membentuk baris baru! \nUntuk memindahkan artis turun dan membawanya menghadap ke kanan lagi, pastikan untuk:\n- Putar 90 derajat (untuk menghadap ke bawahpiksel)\n- Melompat 20 piksel (untuk sampai ke baris baru)\n- Berbalik 90 derajat (untuk menghadap ke kanan lagi)"
        aE3_c: Setelah semuanya selesai, loop Anda yang terdefinisi ** harus tiga kali terulang jauh.
        aE3_d: Jika kode anda menjadi membingungkan, anda slalu dapat klik "mulai lagi" dan mencoba lagi!
      aE3alternate_authored_hint:
        aE3alternate_a: Setelah Anda menjalankan ** nested loop ** dari tahap terakhir, Anda perlu melompat kembali ke awal baris.
        aE3alternate_b: "Jangan lupa untuk memindahkan artis ke bawah sebelum anda mulaikan membentuk baris baru! \nUntuk memindahkan artis turun dan membawanya menghadap ke kanan lagi, pastikan untuk:\n- Putar 90 derajat (untuk menghadap ke bawahpiksel)\n- Melompat 20 piksel (untuk sampai ke baris baru)\n- Berbalik 90 derajat (untuk menghadap ke kanan lagi)"
        aE3alternate_c: Setelah semuanya selesai, loop Anda yang terdefinisi ** harus tiga kali terulang jauh.
        aE3alternate_d: Jika kode anda menjadi membingungkan, anda slalu dapat klik "mulai lagi" dan mencoba lagi!
      aE3alternateB_authored_hint:
        aE4alternateB_a: Setelah Anda menjalankan ** nested loop ** dari tahap terakhir, Anda perlu melompat kembali ke awal baris.
        aE4alternateB_b: "Jangan lupa untuk memindahkan artis ke bawah sebelum anda mulaikan membentuk baris baru! \nUntuk memindahkan artis turun dan membawanya menghadap ke kanan lagi, pastikan untuk:\n- Putar 90 derajat (untuk menghadap ke bawahpiksel)\n- Melompat 20 piksel (untuk sampai ke baris baru)\n- Berbalik 90 derajat (untuk menghadap ke kanan lagi)"
        aE4alternateB_c: Setelah semuanya selesai, loop Anda yang terdefinisi ** harus tiga kali terulang jauh.
        aE4alternateB_d: Jika kode anda menjadi membingungkan, anda slalu dapat klik "mulai lagi" dan mencoba lagi!
      aE4_authored_hint:
        aE4_a: Setelah Anda menjalankan ** nested loop ** dari tahap terakhir, Anda perlu melompat kembali ke awal baris.
        aE4_b: "Jangan lupa untuk memindahkan artis ke bawah sebelum anda mulaikan membentuk baris baru! \nUntuk memindahkan artis turun dan membawanya menghadap ke kanan lagi, pastikan untuk:\n- Putar 90 derajat (untuk menghadap ke bawahpiksel)\n- Melompat 20 piksel (untuk sampai ke baris baru)\n- Berbalik 90 derajat (untuk menghadap ke kanan lagi)"
        aE4_c: Setelah semuanya selesai, loop Anda yang terdefinisi ** harus tiga kali terulang jauh.
        aE4_d: Jika kode anda menjadi membingungkan, anda slalu dapat klik "mulai lagi" dan mencoba lagi!
      aE5_authored_hint: [ ]
      aE6_authored_hint:
        aE6_a: |-
          Jika ada 180 derajat dalam sebuah setengah lingkaran dan masing-masing lingkaran artis membuat ternyata 3 derajat, berapa kali Anda akan perlu untuk lingkaran untuk menarik setengah dari sebuah lingkaran penuh?
          
          **180 ÷ 3 = ?**
      aE7_authored_hint:
        aE7_a: Gambar separuh bagian bawah sebuah lingkaran kemudian separuh bagian atas sebuah lingkaran untuk membuat satu bagian.
        aE7_b: Anda akan memerlukan 4 bagian untuk menyelesaikan teka-teki ini.
      aE8_authored_hint:
        aE8_a: "Untuk membuat persegi dari garis anda, anda perlu:\n- gambar garis\n- gunakan sudut melengkung\n\nUlangi langkah tersebut sebanyak 4 kali."
      allHallows2017_authored_hint:
        allHallows2017_a: Cermat! GT mungkin mengikuti di belakang Anda di sepedanya dan menghapus jalur Anda!
        allHallows2017_g: 'Sarah berkata: "Apakah anda kedinginan? Mari duduk di sudut... Ini 90 derajat!"'
        allHallows2017_c: 'Jordyn mengatakan: "Anda tidak bisa berhenti sekarang! Teruslah!"'
        allHallows2017_d: 'Josh berkata, "Anda perlu memanfaatkan keterampilan coding Anda untuk menyelesaikan teka-teki ini!"'
        allHallows2017_e: 'Dani mengatakan: "Saya tidak pandai bermain- main, coba gunakan repeat block!"'
        allHallows2017_b: 'Baker berkata: "Krayon Chicago hanya bekerja pada *garis hijau*."'
        allHallows2017_f: 'Amy berkata: "Anda bisa melakukannya! Pikirkan di luar kotak"'
      artistDebugVideo1_authored_hint:
        courseA_artist_loops7_a: Tidak tahu di mana harus meletakkan lingkaran? Coba tulis kode step-by-step dan cari sebuah pola.
      artistFunctionsVideo1_authored_hint: [ ]
      artistLoopsK2_authored_hint:
        artistLoopsK2_a: Jika Anda ingin lingkaran untuk mengulang lebih dari 4 kali, Anda dapat mengubah angka di atas blok.
      artistLoopsK2gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: Jika Anda ingin lingkaran untuk mengulang lebih dari 4 kali, Anda dapat mengubah angka di atas blok.
      artistLoopsK3_authored_hint:
        artistLoopsK3_a: Coba gunakan apa yang telah Anda pelajari tentang blok berulang untuk menyelesaikan teka-teki ini!
      artistLoopsK4_authored_hint:
        artistLoopsK4_a: Terjebak? Coba jalankan kode untuk melihat blok mana yang tidak benar.
      artistLoopsK5_authored_hint:
        artistLoopsK5_a: Semua 4 dari blok awal harus masuk ke dalam blok pengulangan Anda untuk memecahkan teka-teki ini.
      artistLoopsK6_authored_hint:
        artistLoopsK6_a: Coba jalankan kode untuk melihat di mana ada sebuah bug.
      artistLoopsK7_authored_hint:
        artistLoopsK7_a: Semua blok yang anda butuhkan untuk teka-teki ini sudah berada di ruang kerja anda!
      artistLoopsK8_authored_hint:
        artistLoopsK8_a: Coba jalankan kode untuk melihat di mana ada sebuah bug.
      artistLoopsK9_authored_hint:
        artistLoopsK9_a: Tantangan ini menggunakan EMPAT loop, satu demi satu!
      artistLoopsKA_authored_hint:
        artistLoopsKA_a: Gunakan blok loncatan untuk maju ke depan tanpa menggambar sebuah garis.
      artistLoopsKB_authored_hint:
        artistLoopsKB_a: Harus ada 3 blok di dalam lingkaran Anda untuk memecahkan teka-teki ini.
      artistLoopsKFP_authored_hint: [ ]
      comment_intro_maze_2018_authored_hint:
        courseC_maze_programming4_a: Comments are also helpful when other people try to read your code.
        courseC_maze_programming4_b: Add a comment when you change directions- what would have happened if you turned the other way?
      conditionals_forvideo_harvester_authored_hint: [ ]
      course1_artist_loops_challenge1_authored_hint:
        courseA_artist_loops_challenge1_a: |+
          You can use loops like this to create the walls and the roof. Try repeating different blocks.
          
          
          
          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)
          
          Design your own or click the ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) for some ideas!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2_authored_hint:
        harvey_tictactoe: Anda bisa menggunakan blok `melompat` untuk pindah ke ruangan lain.
      course1_artist_loops_challenge3_authored_hint:
        courseA_artist_loops_challenge2_a: 'Blocks like this: <xml>  <block type="simple_move_up_left"/></xml> will let your artist move at a slant!'
        courseA_artist_loops_challenge2_b: Ketika kamu menyelesaikan satu rumah burung, `lompatlah` ke berikutnya!
        courseA_artist_loops_challenge2_c: Kamu akan memerlukan BANYAK blok di dalam lingkaran untuk tantangan ini.
      course1_artist_loops_challenge4_authored_hint:
        courseB_artist_loops_challenge1_a: 'Blocks like this: <xml>  <block type="simple_move_up_right"/></xml> will let your artist move at a slant!'
        courseB_artist_loops_challenge1_b: Bila Anda menyelesaikan salah satu dadu, `melompat` ke berikutnya!
        courseB_artist_loops_challenge1_c: 'Anda akan perlu untuk ` langkah ` atau `jump` lebih beberapa garis yang sama dua kali. '
      course1_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Coba ubah angka di setiap pengulangan jika terjadi kesalahan.
        courseA_collector_loops_challenge1_b: Anda tidak perlu menggunakan sebuah lingkaran jika Anda hanya melakukan sesuatu satu waktu.
        courseA_collector_loops_challenge1_c: Terdapat 6 permata di sisi kanan gua, tetapi anda hanya butuh untuk bergerak dan mengumpulkan 5 kali. Anda tahu kenapa?
      course1_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: "You only need to use one ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) block to solve this.\n\n"
        courseA_collector_loops_challenge2_a: |-
          You can move back over the path a second time before moving south.
          
          ![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      course1_collector_loops_challenge3_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Mulailah dengan mengulang perintahnya `pindah ke selatan` dan` lihat hasilnya '.
          <xml>
          <block type="maze_moveSouth"/><next>
          <block type="collector_collect"/></next>
          </xml>
        courseB_collector_loops_challenge1_a: |
          Model utara sedikit berbeda dengan model selatan.
          <xml>
          <block type="collector_collect"/><next>
          <block type="maze_moveNorth"/></next>next>
          </xml>
        courseB_collector_loops_challenge1_c: "Pindahkan dua kali ke Timur di antara setiap jalur.\n<xml>\n  <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next>\n  </xml>\nKamu dapat melakukan dengan 14 blok saja. Klik satu petunjuk lagi untuk melihat solusinya."
        courseB_collector_loops_challenge1_d: |-
          Try this!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_collector_loops_challenge4_authored_hint:
        courseB_collector_loops_challenge2_a: Jika terjadi sesuatu kesalahan, jangan takut untuk memulai kembali. Jangan menyerah!
        courseB_collector_loops_challenge2_b: |-
          If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!
          
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: Coba gunakan sebuah ` berulang ` blok untuk mengumpulkan final tumpukan harta!
        courseB_collector_loops_challenge2_d: |-
          Try this solution:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_maze_debugging_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Sebagian jalur akan mengarah ke TNT, jika kamu bergerak terlalu jauh.
      course1_maze_debugging_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: Anda tidak perlu menambah atau menghapus blok untuk memecahkan teka-teki ini.
        courseB_maze_seq_challenge2_b: Susun kembali bloknya dan ambil jalan tengahnya.
      course1_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Cobalah menghitung spasi dengan jari Anda. Ingatlah untuk tidak menghitung ruang di mana Anda memulai!
      course1_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: Jalan terpendek mungkin tidak bekerja saat ini.
        courseB_maze_seq_challenge1_b: Coba bergerak ke barat untuk memulai.
      course1_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you click Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when you click Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click the monster!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show when you click on Spiff!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.
          
          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      course2_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Mulailah dengan membuat sebuah nested loop untuk membuat empat oktagon. putar 45 derajat untuk membuat oktagon. lompat, lalu putar 90 derajat setelah semuanya.
        courseD_artist_nestedLoops_challenge1_b: Tambahkan kode untuk menggambar sebuah segitiga di dalam nested loop kamu. Gunakan 120 derajat belokan untuk segitiga Anda.
        courseD_artist_nestedLoops_challenge1_c: |-
          Gunakan sebuah bersarang lingkaran: - Ulangi 8 kali - menggambar sebuah segi delapan - menggambar segitiga 
          - melompat ke depan 50 piksel 
          - belok kanan 90 derajat
      course2_artist_nestedLoops_challenge2_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Untuk menggambar sebuah segi delapan biasa, artis perlu untuk mengubah 45 derajat 8 kali.
        courseD_artist_nestedLoops_challenge2_b: Untuk menggambar persegi, sang seniman perlu memutar 90 derajat 4 kali.
      course2_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: 'Panjang persegi itu adalah lebar 200 piksel dan tinggi 100 piksel. '
      course2_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: "You can put commands inside `repeat` block to loop them over and over. Try it!\n<xml>\n  \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n                <title name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n                </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: |-
          Dapatkah anda menemukan jalan yang mencapai setiap bunga dan sarang lebah tanpa menabrak pohon apa pun? Jalan terbaik adalah sebuah spiral.
          
          **Anda dapat mengatasi ini tanpa pernah berbelok ke kiri.**
        courseD_bee_conditionals_challenge1_b: Dalam hal teka-teki ini, setiap ruang bisa memiliki sebuah bunga, sebuah sisir madu, atau tidak. Itu berarti Anda bisa mengulangi kata kunci `if / else` Anda di setiap kotak.
      course2_bee_conditionals_challenge2_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The main differences is that the code inside will run repetitively until there is no nectar left.  Try this pattern:
          
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      course2_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_a: Kode asli akan berhasil - jika hanya ada satu harta karun di setiap tumpukan!
        courseC_maze_loops_challenge2_b: Gunakan loop sehingga Anda tidak kehabisan `mengumpulkan` blok!
      course2_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: Anda bisa menggunakan perintah `collect` lebih sering untuk mengumpulkan harta tambahan.
      course2_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: Anda bisa menggunakan perintah `collect` lebih sering untuk mengumpulkan harta tambahan.
      course2_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: Jangan pernah berpikir mencoba hal ini tanpa pengulangan!
        courseC_harvester_loops_challenge1_b: Kamu dapat mengulang `move forward` dan` pick corn` sebanyak yang kamu butuhkan, lalu `belok kanan` di setiap sudut.
        courseC_harvester_loops_challenge1_c: |-
          The best way to collect the first four corn uses a `repeat` block inside of another `repeat` block. You can use this pattern for the rest of the puzzle too!
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      course2_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_a: Satu cara untuk memecahkan ini terlihat seperti sebuah zig-zag. Cara lain terlihat seperti sebuah spiral! Terdapat banyak solusi berbeda untuk teka-teki seperti ini. Gigih lah!
        courseC_harvester_loops_challenge2_b: Anda bisa mengulang ` bergerak maju` dan` memilih lettuce` sebanyak yang Anda butuhkan, lalu belok di setiap sudut.
        courseC_harvester_loops_challenge2_c: |
          This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!
          
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          This spiral pattern can be coded with just 18 blocks!
          
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      course2_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_a: Pikirkan jalan ini sebagai tiga bagian yang berbeda. Masing-masing mempunyai pola yang dapat anda ulangi.
        courseC_maze_loops_challenge1_b: Di antara setiap blok `repeat`, anda akan perlu` belok kiri` atau `belok kanan` untuk mencari Scrat untuk pola selanjutnya.
        courseC_maze_loops_challenge1_c: |-
          Jika kamu membuatnya jauh, Anda hanya perlu `belok kiri` lalu` maju sedikit` beberapa kali. Jangan menyerah!
          
          ![](https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png)
      course2_maze_programming_challenge1_authored_hint: [ ]
      course2_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: "* Jika kamu menyuruh saya mundur, berhati-hatilah agar saya membuat cara yang benar! *"
        courseC_maze_programming_challenge2_b: Solusi terpendek hanya menggunakan 5 blok, tapi menggunakan blok `repeat`!
      course2_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Cobalah menghitung spasi dengan jari Anda. Ingatlah untuk tidak menghitung ruang di mana Anda memulai!
      course2_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: Jalan terpendek mungkin tidak bekerja saat ini.
        courseB_maze_seq_challenge1_b: Coba bergerak ke barat untuk memulai.
      course3_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'Setengah segi enam memiliki **panjang 30** dan belok kanan **60 derajat**.  '
        courseE_artist_concept_challenge1_b: 'Segitiga 2/3 memiliki **panjang 80** dan belok kanan **120 derajat**. '
      course3_artist_functions_challenge1_authored_hint:
        courseE_artist_functions_challenge1_a: If you call the function one more time, you can create the same design in the final corner. You can also `jump to` other positions or change the whole thing around however you want!
      course3_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n  \nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is *before* the command is run!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      course3_bee_debugging_challenge1_authored_hint:
        courseD_bee_debugging_challenge1_a: Mengapa tidak yang pertama setengah dari program ini bekerja? Pikirkan mengapa lebah perlu bergerak mundur. Berapa banyak nektar yang lebah mengumpulkan setiap kali bergerak lebih sebuah bunga?
        courseD_bee_debugging_challenge1_b: Dalam perjalanan pulang, mintalah lebah mengikuti pola yang sama. Berapa banyak madu yang lebah perlu membuat setiap kali bergerak lebih sebuah sisir madu?
        courseD_bee_debugging_challenge1_c: |-
          Setelah lebah berhasil sampai ke baris bawah, mintalah mengulang perintah ini: * Ulangi 2 kali: * Maju ke depan * Buat 3 madu * Pindah ke belakang
      course3_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseE_bee_functions_challenge1_b: Remember to build your code inside of the green function block.
      course3_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseE_bee_functions_challenge1_b: Remember to build your code inside of the green function block.
      course3_bee_functions_challenge3_authored_hint:
        courseF_bee_functions_challenge1_a: You can use the functions in the tool box to help you. You can call a function inside of another function's definition!
      course3_bee_functions_challenge4_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          If there is a path to the right, you should do the following:
          * Get any nectar or make any honey.
          * Turn right towards the side path.
          * Move to the end of the side path.
          * Turn right.
          
          If you repeat the above actions twice, you will be ready to move back down the main path.
          
          **Only click for another hint if you want to see the full solution!**
        courseF_bee_functions_challenge2_b: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      course3_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "Start by focusing on collect TWO gems from each of the first two piles.\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Next, collect the remaining gems in this row.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png)\nAdd these blocks to your program.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finally, collect the remaining treasure. Add these blocks to your program.\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Here is the complete solution for this puzzle.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course3_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: Tombol `STEP` akan sangat membantu dalam tantangan ini.
        courseD_farmer_condLoops_challenge1_b: Biasanya anda hanya akan `pick pumpkin` jika anda berada di labu. Apa lagi yang perlu anda lakukan jika anda menggunakan labu?
      course3_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: Jumlah masing-masing sayuran di setiap ruang bervariasi. Gunakan loop`while` untuk ini.
      course3_farmer_until_challenge2_authored_hint: [ ]
      course3_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: Kiri atau kanan? Terserah kamu!
        courseC_maze_debugging_challenge1_b: Scrat jalan adalah bentuk sebuah persegi panjang! Dia perlu mengubah cara yang sama setiap waktu!
        courseC_maze_debugging_challenge1_c: Jika Anda terjebak, Anda dapat selalu memulai dari awal, atau menghapus semua kode dan menemukan caranya sendiri!
      course3_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_a: Salah satu cara untuk mengatasi ini adalah dengan menambahkan lebih banyak langkah maju di antara belokan.
        courseC_maze_debugging_challenge2_b: Jika Anda terjebak, Anda dapat selalu memulai dari awal atau menghapus semua kode dan menemukan caramu sendiri!
        courseC_maze_debugging_challenge2_c: |-
          Ada dua bagian berbeda yang bisa Anda ikuti hanya dengan menggunakan `move forward`, dan hanya empat belokan. Jika Anda menemukan cara untuk menggunakan blok `repeat`, mungkin disana ada lebih banyak!
          
          ![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      course3_maze_until_challenge1_authored_hint: [ ]
      course3_playLab_challenge1_authored_hint:
        courseE_playLab_challenge1_a: |-
          Here are some things you could do when the player wins the game:
          
          * Make the dinosaur vanish.
          * Stop the squirrels.
          * Make the squirrels and knight happy.
          * Set a new background.
          * Make the knight thank the player for helping.
          * Make all of the actors vanish and show a "You Win!" message.
        courseE_playLab_challenge1_b: |-
          Here are some things you could do when the player loses the game:
          
          * Make the knight vanish.
          * Make the squirrels sad.
          * Make the dinosaur say something.
          * Set a new background.
          * Make all of the actors vanish and show a "Game Over" message.
      course3_playlab_challenge2_authored_hint:
        courseE_playlab_challenge2_a: |-
          The actor knows what to say based on its mood. Try playing with the things the witch might say.
          
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block></xml>
        courseE_playlab_challenge2_b: "It will feel like the game starts all over if you call the `ask a question` function again below the list of conditionals.\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n               \n<block type=\"procedures_callnoreturn\">\n<mutation name=\"Ask a question\"></mutation>\n        </block></block></xml>"
        courseE_playlab_challenge2_c: "You will need to add more conditional statements to give the actors more things to say.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n              </statement></block></xml>\n              \nDon't forget to change which moods the actor will show inside of the `repeat forever` loop. You can also set the moods randomly!"
        courseE_playlab_challenge2_d: |-
          Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.
          
          Don't forget to change the instructions inside the `show title screen` block so they still make sense!
        courseE_playlab_challenge2_e: |-
          When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?
          
          Have a friend try your app when it is finished!
      course4_artist_binary_challenge2_authored_hint:
        courseD_artist_binary_challenge2_a: |-
          Hanya ada beberapa baris yang salah dalam program aslinya. Jika salah satu pendekatan gagal, kembali dan coba lagi. Ada solusinya!
      course4_artist_concept_challenge2_authored_hint:
        courseE_artist_concept_challenge2_a: Once you define a function, you can call it over and over again - whenever and wherever you want!
        courseE_artist_concept_challenge2_b: |-
          You can jump to different positions on the canvas using this command:
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      course4_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n  \nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is *before* the command is run!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      course4_artist_fwp_challenge1_authored_hint: [ ]
      course4_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_a: Each vertical line has a length of `10`. Each horizontal line should have a length of `length`.
        courseF_artist_variables_challenge1_b: You will want to increase the value of `length` by 10 **twice** inside the loop.
        courseF_artist_variables_challenge1_c: To complete the pattern you will need to turn left twice, turn right twice, and move forward a total of four times.
        courseF_artist_variables_challenge1_d: |-
          This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.
          
          ![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)
          
          If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: 'Variabel sangat membantu Anda karena dapat menambahkan setiap kali melalui satu lingkaran. '
        courseF_artist_variables_challenge2_b: Teka-teki ini memiliki satu lingkaran yang menciptakan poligon, satu lingkaran yang mengulangi 'sisi' poligon, lalu lingkaran lain yang melakukan semuanya lagi setelah menambahkan 5 ke 'sisi'.
        courseF_artist_variables_challenge2_c: Menggunakan sebuah variabel untuk sisi dan untuk panjang membuat kode lebih bersih karena Anda dapat mengulang kode yang sama beberapa kali, sebagai gantinya membuat salinan baru untuk setiap rangkaian angka.
        courseF_artist_variables_challenge2_d: |-
          **Solution:**
          
          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      course4_bee_for_challenge1_authored_hint: [ ]
      course4_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          The main program should look something like this:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: |-
          Lihatlah berapa banyak jagung tersedia untuk dipanen di setiap tempat. Apakah kamu melihat pola counter? Parameter `length` harus digunakan untuk mengatur nilai maksimum pada` for loop`.
          
          Jangan lupa agar petani kembali menanam setelah panen!
        courseF_bee_fwp_challenge1_c: |-
          Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.
          Inside this loop, you should move forward and pick all of the corn.
          
          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: |-
          Di dalam `for loop` kamu ingin` maju kedepan 'lalu `get nektar` ** waktu tunda **.
          Setelah `for loop` Anda bisa` mundur kebelakang` ** waktu lama **.
          
          Kamu mungkin perlu membaca petunjuk ini beberapa kali untuk memahaminya. Dalam bagian ** bold ** adalah petunjuk tentang bagaimana menggunakan dua loop `repeat` yang kamu perlukan.
        courseF_bee_fwp_challenge1_e: |
          **Here is the solution:**
          
          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      course4_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Start by making sure you understand how this function is *supposed* to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?
          
          Add conditional statements to the function to check for corn, pumpkins, and lettuce.
        courseF_bee_fwp_challenge2_b: "Apakah Anda kehabisan blok 'move forward`?\nCoba gunakan * detik * `for loop` di program utama anda. ** Catatan: ** Berhati-hatilah untuk tidak membingungkan `counter` dengan` counter2` dalam kode anda."
        courseF_bee_fwp_challenge2_c: |-
          **Here is what your function should look like:**
          
          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **Here is what your main program should look like:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      course4_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!
        courseD_bee_nested_loops_challenge2_b: To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the *entire* cave!
        courseD_bee_nested_loops_challenge2_c: The shortest program that reaches all the treasure uses only one `collect` block and two turns.
        courseD_bee_nested_loops_challenge2_d: |-
          **Solution:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_harvester_nested_loops_challenge1_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: Anda mungkin telah menggunakan sebuah loop untuk membuat pola zig-zag. Jika anda ingat algoritma itu, anda bisa membuat beberapa tambahan di sini.
      course4_playlab_variables_challenge1_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          You will need additional blocks from the tool box to get the actors to talk.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      course4_playlab_variables_challenge3_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          The actor knows what to say because it checks the current value of the `fortune` variable.
          
          <xml><block type="variables_set" inline="false">
          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          It will feel like the game starts all over if you call the `ask a question` function again after the actor says the fortune.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">fortune</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "You will need to add more conditional statements to give the actors more things to say.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n              \nDon't forget to change which moods the actor will show inside of the `repeat forever` loop. You can also set the moods randomly!"
        courseF_playlab_variables_challenge3_d: |-
          Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.
          
          Don't forget to change the instructions inside the `Ask a question` function so they still make sense!
        courseF_playlab_variables_challenge3_e: |-
          When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?
          
          Have a friend try your app when it is finished!
      courseA_artist_loops10_authored_hint: [ ]
      courseA_artist_loops10_2018_authored_hint: [ ]
      courseA_artist_loops11_authored_hint: [ ]
      courseA_artist_loops11_2018_authored_hint: [ ]
      courseA_artist_loops11_predict2_authored_hint: [ ]
      courseA_artist_loops12_authored_hint: [ ]
      courseA_artist_loops12_2018_authored_hint: [ ]
      courseA_artist_loops2_authored_hint:
        courseA_artist_loops2_a: Tidak tahu cara menggambar garis? Mulai melampirkan blok ke blok <block type="when_run"/></xml> untuk melihat apa yang terjadi.
        courseA_artist_loops2_b: Use this block <xml><block type="simple_move_right"/></xml> to solve this puzzle.
      courseA_artist_loops2_2018_authored_hint:
        courseA_artist_loops2_a: Tidak tahu cara menggambar garis? Mulai melampirkan blok ke blok <block type="when_run"/></xml> untuk melihat apa yang terjadi.
        courseA_artist_loops2_b: Use this block <xml><block type="simple_move_right"/></xml> to solve this puzzle.
      courseA_artist_loops3_authored_hint:
        courseA_artist_loops3_a: Jejak perlahan-lahan melalui program dengan jari anda untuk melihat di mana ia salah pergi.
        courseA_artist_loops3_b: |-
          Kamu sangat dianjurkan menggunakan blok seperti ini untuk memecahkan teka-teki ini.
          
          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops3_2018_authored_hint:
        courseA_artist_loops3_a: Jejak perlahan-lahan melalui program dengan jari anda untuk melihat di mana ia salah pergi.
        courseA_artist_loops3_b: |-
          Kamu sangat dianjurkan menggunakan blok seperti ini untuk memecahkan teka-teki ini.
          
          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops4_authored_hint:
        courseA_artist_loops4_a: Jika Anda ingin lingkaran untuk mengulang lebih dari 4 kali, Anda dapat mengubah angka di atas blok.
        courseA_artist_loops4_b: |-
          Kamu hanya bisa menggunakan satu blok <xml> <block type = "simple_move_right" /> </ xml>
          coba letakkan di dalam lingkaran <block type = "controls_repeat_simplified_dropdown"> <title name = "TIMES" config = "2-6"> 5 </ title> </ block> loop.
      courseA_artist_loops4_2018_authored_hint:
        courseA_artist_loops4_a: Jika Anda ingin lingkaran untuk mengulang lebih dari 4 kali, Anda dapat mengubah angka di atas blok.
        courseA_artist_loops4_b: |-
          Kamu hanya bisa menggunakan satu blok <xml> <block type = "simple_move_right" /> </ xml>
          coba letakkan di dalam lingkaran <block type = "controls_repeat_simplified_dropdown"> <title name = "TIMES" config = "2-6"> 5 </ title> </ block> loop.
      courseA_artist_loops5_authored_hint:
        courseA_artist_loops5_a: Try using what you've learned about <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> blocks to complete this puzzle!
        courseA_artist_loops5_b: Jika Anda ingin lingkaran untuk mengulang lebih dari 4 kali, Anda dapat mengubah angka di atas blok.
        courseA_artist_loops5_c: "Since you can only use one <xml><block type=\"simple_move_right\"/></xml> block, try putting it inside of the \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>\nloop."
      courseA_artist_loops5_2018_authored_hint:
        courseA_artist_loops5_a: Try using what you've learned about <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> blocks to complete this puzzle!
        courseA_artist_loops5_b: Jika Anda ingin lingkaran untuk mengulang lebih dari 4 kali, Anda dapat mengubah angka di atas blok.
        courseA_artist_loops5_c: "Since you can only use one <xml><block type=\"simple_move_right\"/></xml> block, try putting it inside of the \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>\nloop."
      courseA_artist_loops6_authored_hint:
        courseA_artist_loops6_a: Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.
        courseA_artist_loops6_b: Anda akan perlu 2 blok dalam 2 arah untuk memecahkan teka-teki ini.
      courseA_artist_loops6_2018_authored_hint:
        courseA_artist_loops6_a: Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.
        courseA_artist_loops6_b: Anda akan perlu 2 blok dalam 2 arah untuk memecahkan teka-teki ini.
      courseA_artist_loops7_authored_hint:
        courseA_artist_loops7_a: Tidak tahu di mana harus meletakkan loop? Coba tulis kode langkah demi langkah dan cari sebuah pola.
        courseA_artist_loops7_b: Tuliskan kode untuk satu gelombang terlebih dahulu, lalu ulangi untuk menggambar dua yang lain.
        courseA_artist_loops7_c: |-
          Remember you can put more than one block in a <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml> loop.
      courseA_artist_loops7_2018_authored_hint:
        courseA_artist_loops7_a: Tidak tahu di mana harus meletakkan loop? Coba tulis kode langkah demi langkah dan cari sebuah pola.
        courseA_artist_loops7_b: Tuliskan kode untuk satu gelombang terlebih dahulu, lalu ulangi untuk menggambar dua yang lain.
        courseA_artist_loops7_c: |-
          Remember you can put more than one block in a <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml> loop.
      courseA_artist_loops7_forVideo_authored_hint:
        courseA_artist_loops7_a: Tidak tahu di mana harus meletakkan loop? Coba tulis kode langkah demi langkah dan cari sebuah pola.
        courseA_artist_loops7_b: Tuliskan kode untuk satu gelombang terlebih dahulu, lalu ulangi untuk menggambar dua yang lain.
        courseA_artist_loops7_c: |-
          Remember you can put more than one block in a <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml> loop.
      courseA_artist_loops8_authored_hint:
        courseA_artist_loops8_a: Cobalah menjalankan kode untuk melihat apa yang telah ditulis untuk anda.
        courseA_artist_loops8_b: Bagaimana anda akan mengulang kode loop yang telah diberikan kepada anda?
        courseA_artist_loops8_c: "What does the code do?  \nWhat is it supposed to do?  \nWhat does that tell you?"
      courseA_artist_loops8_2018_authored_hint:
        courseA_artist_loops8_a: Cobalah menjalankan kode untuk melihat apa yang telah ditulis untuk anda.
        courseA_artist_loops8_b: Bagaimana anda akan mengulang kode loop yang telah diberikan kepada anda?
        courseA_artist_loops8_c: "What does the code do?  \nWhat is it supposed to do?  \nWhat does that tell you?"
      courseA_artist_loops9_authored_hint:
        courseA_artist_loops9_a: Tambahkan blok lain pada kode yang anda berikan untuk menarik sisa tangga.
        courseA_artist_loops9_b: "Blok yang Anda tambahkan harus masuk ke dalam loop <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>"
        courseA_artist_loops9_c: Jika kamu tidak tahu di mana meletakkan loop, coba tulis kode kamu pelan-pelan dan lihatlah polanya.
      courseA_artist_loops9_2018_authored_hint:
        courseA_artist_loops9_a: Tambahkan blok lain pada kode yang anda berikan untuk menarik sisa tangga.
        courseA_artist_loops9_b: "Blok yang Anda tambahkan harus masuk ke dalam loop <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>"
        courseA_artist_loops9_c: Jika kamu tidak tahu di mana meletakkan loop, coba tulis kode kamu pelan-pelan dan lihatlah polanya.
      courseA_artist_loops_challenge1_authored_hint: [ ]
      courseA_artist_loops_challenge1_2018_authored_hint: [ ]
      courseA_artist_loops_challenge2_authored_hint:
        courseA_artist_loops_challenge2_a: Blocks like this <xml>  <block type="simple_move_up_left"/></xml> will let your artist move at a slant!
        courseA_artist_loops_challenge2_b: Ketika kamu menyelesaikan satu rumah burung, `lompatlah` ke berikutnya!
        courseA_artist_loops_challenge2_c: Kamu akan memerlukan BANYAK blok di dalam lingkaran untuk tantangan ini.
      courseA_artist_loops_challenge2a_authored_hint:
        courseA_artist_loops_challenge2_a: Blocks like this <xml>  <block type="simple_move_up_left"/></xml> will let your artist move at a slant!
        courseA_artist_loops_challenge2_b: Saat Anda menyelesaikan satu tenda, `melompat` dua kali untuk sampai ke berikutnya!
        courseA_artist_loops_challenge2_c: Semua Anda blok akan perlu dalam sebuah lingkaran untuk menyelesaikan ini teka-teki.
      courseA_artist_loops_challenge2a_2018_authored_hint:
        courseA_artist_loops_challenge2_a: Blocks like this <xml>  <block type="simple_move_up_left"/></xml> will let your artist move at a slant!
        courseA_artist_loops_challenge2_b: Saat Anda menyelesaikan satu tenda, `melompat` dua kali untuk sampai ke berikutnya!
        courseA_artist_loops_challenge2_c: Semua Anda blok akan perlu dalam sebuah lingkaran untuk menyelesaikan ini teka-teki.
      courseA_artist_loops_challenge3_authored_hint:
        harvey_tictactoe: Anda bisa menggunakan blok `melompat` untuk pindah ke ruangan lain.
      courseA_bee_seq1_authored_hint:
        courseA_bee_seq1_a: |-
          Use this block to get nectar once the bee finds a flower.
          
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq10_authored_hint: [ ]
      courseA_bee_seq11_authored_hint: [ ]
      courseA_bee_seq12_authored_hint:
        courseA_bee_seq1_a: |-
          Use this block to get nectar once the bee finds a flower.
          
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq13_authored_hint: [ ]
      courseA_bee_seq14_authored_hint: [ ]
      courseA_bee_seq2_authored_hint: [ ]
      courseA_bee_seq3_authored_hint: [ ]
      courseA_bee_seq4_authored_hint: [ ]
      courseA_bee_seq5_authored_hint: [ ]
      courseA_bee_seq6_authored_hint: [ ]
      courseA_bee_seq7_authored_hint: [ ]
      courseA_bee_seq8_authored_hint: [ ]
      courseA_bee_seq9_authored_hint: [ ]
      courseA_collector_loops1_authored_hint:
        courseA_collector_loops1_a: |-
          After you have moved to a square with treasure, use this block to pick it up.
          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Solusi mudah adalah bergerak ke Timur 2 kali, lalu dapatkan harta karun.
      courseA_collector_loops10_authored_hint: [ ]
      courseA_collector_loops10_2018_authored_hint: [ ]
      courseA_collector_loops11_authored_hint: [ ]
      courseA_collector_loops11_2018_authored_hint: [ ]
      courseA_collector_loops11_predict2_authored_hint: [ ]
      courseA_collector_loops1_2018_authored_hint:
        courseA_collector_loops1_a: |-
          After you have moved to a square with treasure, use this block to pick it up.
          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Solusi mudah adalah bergerak ke Timur 2 kali, lalu dapatkan harta karun.
      courseA_collector_loops2_authored_hint:
        courseA_collector_loops2_a: Anda harus bergerak sebelum bisa mengumpulkan harta karun.
        courseA_collector_loops2_b: |-
          After you have moved to a square with treasure, use this block to pick it up.
          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018_authored_hint:
        courseA_collector_loops2_a: Anda harus bergerak sebelum bisa mengumpulkan harta karun.
        courseA_collector_loops2_b: |-
          After you have moved to a square with treasure, use this block to pick it up.
          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3_authored_hint:
        courseA_collector_loops3_a: "Try using a \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop!"
        courseA_collector_loops3_b: Remember, you can put more than 1 block inside a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loop.
      courseA_collector_loops3_2018_authored_hint:
        courseA_collector_loops3_a: "Try using a \n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop!"
        courseA_collector_loops3_b: Remember, you can put more than 1 block inside a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loop.
      courseA_collector_loops3_predict1_authored_hint: [ ]
      courseA_collector_loops4_authored_hint:
        courseA_collector_loops4_a: Untuk mengubah seberapa jauh Laurel pergi, ubah berapa kali putarannya berjalan.
        courseA_collector_loops4_b: Don't forget that Laurel needs to walk down and collect the treasure after she finishes the <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loop!
      courseA_collector_loops4_2018_authored_hint:
        courseA_collector_loops4_a: Untuk mengubah seberapa jauh Laurel pergi, ubah berapa kali putarannya berjalan.
        courseA_collector_loops4_b: Don't forget that Laurel needs to walk down and collect the treasure after she finishes the <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loop!
      courseA_collector_loops5_authored_hint:
        courseA_collector_loops5_a: Jika anda tidak mengetahui jawabannya segera, coba gunakan selembar kertas untuk mengetahui panah apa yang akan anda butuhkan dan cari sebuah pola.
        courseA_collector_loops5_b: Cobalah membelah masalah ke dalam 2 bagian, bergerak menyamping dan turun ke bawah.
        courseA_collector_loops5_c: You'll want to start with a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loop that moves Laurel west and collects treasure.
      courseA_collector_loops5_2018_authored_hint:
        courseA_collector_loops5_a: Jika anda tidak mengetahui jawabannya segera, coba gunakan selembar kertas untuk mengetahui panah apa yang akan anda butuhkan dan cari sebuah pola.
        courseA_collector_loops5_b: Cobalah membelah masalah ke dalam 2 bagian, bergerak menyamping dan turun ke bawah.
        courseA_collector_loops5_c: You'll want to start with a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loop that moves Laurel west and collects treasure.
      courseA_collector_loops6_authored_hint:
        courseA_collector_loops6_a: Tidak tahu apa yang salah? Coba jalankan kode beberapa kali untuk melihat apa yang terjadi.
        courseA_collector_loops6_b: The shortest solution has 2 <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loops, one after the other.
      courseA_collector_loops6_2018_authored_hint:
        courseA_collector_loops6_a: Tidak tahu apa yang salah? Coba jalankan kode beberapa kali untuk melihat apa yang terjadi.
        courseA_collector_loops6_b: The shortest solution has 2 <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loops, one after the other.
      courseA_collector_loops7_authored_hint:
        courseA_collector_loops7_a: Jika Anda tidak tahu apa yang akan terjadi selanjutnya, cobalah menjalankan kode untuk melihat di mana Laurel berakhir.
      courseA_collector_loops7_2018_authored_hint:
        courseA_collector_loops7_a: Jika Anda tidak tahu apa yang akan terjadi selanjutnya, cobalah menjalankan kode untuk melihat di mana Laurel berakhir.
      courseA_collector_loops8_authored_hint:
        courseA_collector_loops8_a: Jika anda mempunyai masalah untuk memecahkan teka-teki ini, cobalah menulis langkah di selembar kertas dan mencari sebuah pola.
        courseA_collector_loops8_b: Cobalah memecahkan teka - teki ini menjadi 3 masalah terpisah, dan tuliskan loop untuk masing-masing.
        courseA_collector_loops8_c: Ingat Anda dapat menulis satu bagian dari kode pada satu waktu, kemudian tekan "Run" untuk mencari tahu dari mana Anda harus pergi dari sana.
      courseA_collector_loops8_2018_authored_hint:
        courseA_collector_loops8_a: Jika anda mempunyai masalah untuk memecahkan teka-teki ini, cobalah menulis langkah di selembar kertas dan mencari sebuah pola.
        courseA_collector_loops8_b: Cobalah memecahkan teka - teki ini menjadi 3 masalah terpisah, dan tuliskan loop untuk masing-masing.
        courseA_collector_loops8_c: Ingat Anda dapat menulis satu bagian dari kode pada satu waktu, kemudian tekan "Run" untuk mencari tahu dari mana Anda harus pergi dari sana.
      courseA_collector_loops9_authored_hint:
        courseA_collector_loops9_a: 'Jika anda tidak dapat menemukan tempat terbaik untuk menggunakan loop, cobalah mengkodekannya langkah demi langkah dan mencari sebuah pola. '
        courseA_collector_loops9_b: Try putting 2 of your <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loops inside of another loop to make your code shorter!
      courseA_collector_loops9_2018_authored_hint:
        courseA_collector_loops9_a: 'Jika anda tidak dapat menemukan tempat terbaik untuk menggunakan loop, cobalah mengkodekannya langkah demi langkah dan mencari sebuah pola. '
        courseA_collector_loops9_b: Try putting 2 of your <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loops inside of another loop to make your code shorter!
      courseA_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Coba ubah angka di setiap loop jika ada yang salah.
        courseA_collector_loops_challenge1_b: Anda tidak perlu menggunakan sebuah lingkaran jika Anda hanya melakukan sesuatu satu waktu.
        courseA_collector_loops_challenge1_c: Terdapat 6 permata di sisi kanan gua saat anda memulai, tetapi anda hanya perlu bergerak untuk mendapatkan harta karun 5 kali ke Selatan. Anda tahu kenapa?
        courseA_collector_loops_challenge1_d: |-
          The starting program doesn't collect the last 2 gems. Try adding this code at the very end:
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2018_authored_hint:
        courseA_collector_loops_challenge1_a: Coba ubah angka di setiap loop jika ada yang salah.
        courseA_collector_loops_challenge1_b: Anda tidak perlu menggunakan sebuah lingkaran jika Anda hanya melakukan sesuatu satu waktu.
        courseA_collector_loops_challenge1_c: Terdapat 6 permata di sisi kanan gua saat anda memulai, tetapi anda hanya perlu bergerak untuk mendapatkan harta karun 5 kali ke Selatan. Anda tahu kenapa?
        courseA_collector_loops_challenge1_d: |-
          The starting program doesn't collect the last 2 gems. Try adding this code at the very end:
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: Anda hanya perlu menggunakan 1 blok untuk memecahkan ini.
        courseA_collector_loops_challenge2_a: Anda dapat memindahkan kembali atas jalan yang kedua kalinya sebelum bergerak ke selatan.
      courseA_collector_loops_challenge2kp_authored_hint:
        courseA_collector_loops_challenge2kp_b: Cobalah jalan ini untuk membuat anda mendapatkan sebuah solusi.
        courseA_collector_loops_challenge2kp_a: Bisakah Anda menggunakan loop untuk memecahkan teka-teki ini?
      courseA_collector_loops_challenge2kp_2018_authored_hint:
        courseA_collector_loops_challenge2kp_b: Cobalah jalan ini untuk membuat anda mendapatkan sebuah solusi.
        courseA_collector_loops_challenge2kp_a: Bisakah Anda menggunakan loop untuk memecahkan teka-teki ini?
      courseA_collector_preLoops1_authored_hint: [ ]
      courseA_collector_preLoops2_authored_hint: [ ]
      courseA_collector_preLoops3_authored_hint: [ ]
      courseA_collector_preLoops4_authored_hint:
        courseA_collector_preLoops4_a: "To grab the treasure, snap two ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png) blocks and one ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) block to the bottom of the program and click \"Run\"!\n\n"
      courseA_collector_preLoops5_authored_hint:
        courseA_collector_preLoops5_a: Anda harus pergi dua arah yang berbeda untuk mendapatkan satu permata!
      courseA_collector_preLoops6_authored_hint:
        courseA_collector_preLoops6_a: You will need to use two ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) blocks to solve this puzzle.
      courseA_collector_preLoops7_authored_hint:
        courseA_collector_loops2_b: |-
          After you have moved to a square with treasure, use this block to pick it up.
          <xml>  <block type="collector_collect"/></xml>
      courseA_forVideoTest_artist_authored_hint: [ ]
      courseA_harvester_forVideo_authored_hint:
        courseA_harvester_loops3_a: |-
          Use a `repeat` block like this to help you!
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">3</title>
          </block></xml>
      courseA_harvester_loops1_authored_hint:
        courseA_harvester_loops1_a: |-
          Once you move to some corn, use this block to pick it!
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops10_authored_hint: [ ]
      courseA_harvester_loops11_authored_hint: [ ]
      courseA_harvester_loops2_authored_hint:
        courseA_harvester_loops2_a: 'Your code will have **four** `move West` blocks and **four** `pick corn` blocks. '
      courseA_harvester_loops3_authored_hint:
        courseA_harvester_loops3_a: |-
          Use a `repeat` block like this to help you!
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">4</title>
          </block></xml>
        courseA_harvester_loops3_b: Untuk mengulang kode, seret sebuah loop `repeat`, kemudian letakkan blok yang anda inginkan di dalamnya.
      courseA_harvester_loops4_authored_hint:
        courseA_harvester_loops4_a: Don't be afraid to press `Run` to see what happens!
        courseA_harvester_loops4_b: How many pieces of corn are there? How many times does your code repeat?
      courseA_harvester_loops5_authored_hint:
        courseA_harvester_loops5_a: Jika Anda terjebak, cobalah memecahkan teka - teki dalam 2 bagian, satu bagian di depan sudut dan satu bagian setelah di tikungan.
        courseA_harvester_loops5_b: Your final code will have **one** `repeat` loop, **one** `move South` block, and **one** `move East` block.
        courseA_harvester_loops5_c: Use this path to pick all the corn!
      courseA_harvester_loops5a_authored_hint:
        courseA_harvester_loops5a_a: Anda akan membutuhkan satu ` ulangi ` lingkaran demi satu.
        courseA_harvester_loops5a_b: One loop will repeat `move South`, and the other will repeat `move East`.
        courseA_harvester_loops5a_c: Use this path to move one way, and then the other.
      courseA_harvester_loops5b_authored_hint:
        courseA_harvester_loops5b_a: Press `Run` and see what happens!
        courseA_harvester_loops5b_b: Are your loops repeating the right number of times?
        courseA_harvester_loops5b_c: Move one way, then the other with this path.
      courseA_harvester_loops6_authored_hint:
        courseA_harvester_loops6_a: Jika Anda terjebak, cobalah menulis langkah di atas kertas dan mencari pola berulang.
        courseA_harvester_loops6_b: This is the path you should take to pick all the corn.
      courseA_harvester_loops7_authored_hint:
        courseA_harvester_loops7_a: You will need two `repeat` loops after each other!
        courseA_harvester_loops7_b: Use two loops to follow this path.
      courseA_harvester_loops8_authored_hint: [ ]
      courseA_harvester_loops9_authored_hint:
        courseA_harvester_loops9_a: Break this puzzle up into three different parts. One part to the first corner, one part to the second corner, and one part to the end.
        courseA_harvester_loops9_b: Don't be afraid to run your code after every part to see what happens!
        courseA_harvester_loops9_c: Follow this path to pick all the corn.
      courseA_harvester_seq1_authored_hint:
        courseA_harvester_seq1_a: |-
          Use this block to pick the corn when the harvester finds it!
          
          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          The harvester will need to move East three times to get to the corn. Use this block:
          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10_authored_hint:
        courseA_harvester_seq10_a: Are you stuck? Try writing down the steps on a piece of paper first.
        courseA_harvester_seq10_b: You need to `Move East`, then `Move North`. Do this two times. Don't forget to get all the corn too!
        courseA_harvester_seq10_c: Try using this path to pick all the corn.
      courseA_harvester_seq11_authored_hint: [ ]
      courseA_harvester_seq12_authored_hint: [ ]
      courseA_harvester_seq13_authored_hint:
        courseA_bee_seq1_a: |-
          Use this block to pick corn once the harvester gets to it.
          
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_harvester_seq2_authored_hint:
        courseA_harvester_seq2_a: Don't forget to use <xml><block type="harvester_corn"/></xml> to pick the corn!
        courseA_harvester_seq2_b: Cobalah menuliskan langkah-langkah di atas kertas untuk menemukan solusinya!
      courseA_harvester_seq3_authored_hint:
        courseA_harvester_seq3_a: |-
          Did you remember to use this block?
          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Say the steps out loud and see if it helps you figure out the answer.
      courseA_harvester_seq4_authored_hint:
        courseA_harvester_seq4_a: How many spaces are between the Harvester and the corn? How many blocks are already in your workspace?
        courseA_harvester_seq4_b: |-
          You will need five `Move East` blocks and one `Pick Corn` block:
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5_authored_hint:
        courseA_harvester_seq5_a: Which block moves the harvester the wrong way?
        courseA_harvester_seq5_b: You need to remove one block.
        courseA_harvester_seq5_c: |-
          Throw this block in the trash!
          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6_authored_hint:
        courseA_harvester_seq6_a: If you're stuck, try saying the steps out loud. It could help you figure out the right path.
      courseA_harvester_seq7_authored_hint:
        courseA_harvester_seq7_a: Try solving the puzzle in 2 parts, one part before the corner and one part after the corner.
        courseA_harvester_seq7_b: Having trouble? This is the path the harvester should take.
      courseA_harvester_seq8_authored_hint: [ ]
      courseA_harvester_seq9_authored_hint:
        courseA_harvester_seq9_a: Run the code a few times to see what happens. Where does the harvester stop?
        courseA_harvester_seq9_b: Don't forget to pick all the corn! You will need **3** pick corn blocks.
        courseA_harvester_seq9_c: You should take this path to pick all the corn.
      courseA_maze_ramp2_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2a_2018_authored_hint:
        '1': Snap both `East` blocks to the bottom of the `when run` block.
      courseA_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
      courseA_maze_ramp3a_2018_authored_hint:
        '1': |
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
      courseA_maze_ramp4a_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: Ingat bahwa ternyata dari sudut pandang burung.
        courseC_maze_programming5_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseA_maze_ramp5a_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_seq1_authored_hint:
        courseA_maze_seq1_a: |-
          If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          The bird will need to move West 3 times to get to the pig. Use this block:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10_authored_hint:
        courseA_maze_seq10_a: Jika anda mengalami masalah, coba tuliskan langkah-langkah di selembar kertas terlebih dahulu.
        courseA_maze_seq10_b: Anda perlu pergi 3 arah untuk memecahkan teka-teki ini.
      courseA_maze_seq10_2018_authored_hint:
        courseA_maze_seq10_a: Jika anda mengalami masalah, coba tuliskan langkah-langkah di selembar kertas terlebih dahulu.
        courseA_maze_seq10_b: Anda perlu pergi 3 arah untuk memecahkan teka-teki ini.
      courseA_maze_seq11_authored_hint: [ ]
      courseA_maze_seq11_2018_authored_hint: [ ]
      courseA_maze_seq12_authored_hint: [ ]
      courseA_maze_seq12_2018_authored_hint: [ ]
      courseA_maze_seq12_predict2_authored_hint: [ ]
      courseA_maze_seq13_authored_hint:
        courseA_maze_seq13_a: Jika jalur yang anda butuhkan tidak jelas, gunakan jari anda untuk melacak jalan anda dari burung ke babi.
        courseA_maze_seq13_b: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan jalankan kode untuk melihat apa yang terjadi.
        courseA_maze_seq13_c: |-
          These <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml> blocks will help you move closer to the pig.
      courseA_maze_seq13_2018_authored_hint:
        courseA_maze_seq13_a: Jika jalur yang anda butuhkan tidak jelas, gunakan jari anda untuk melacak jalan anda dari burung ke babi.
        courseA_maze_seq13_b: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan jalankan kode untuk melihat apa yang terjadi.
        courseA_maze_seq13_c: |-
          These <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml> blocks will help you move closer to the pig.
      courseA_maze_seq1_2018_authored_hint:
        courseA_maze_seq1_a: |-
          If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          The bird will need to move West 3 times to get to the pig. Use this block:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2_authored_hint:
        courseA_maze_seq2_a: Program ini hilang 1 blok. Bisakah anda mencari tahu yang mana?
        courseA_maze_seq2_b: Coba jalankan kode terlebih dulu untuk melihat di mana burung itu berakhir. Mana yang Anda butuhkan untuk pergi dari sana?
      courseA_maze_seq2_2018_authored_hint:
        courseA_maze_seq2_a: Program ini hilang 1 blok. Bisakah anda mencari tahu yang mana?
        courseA_maze_seq2_b: Coba jalankan kode terlebih dulu untuk melihat di mana burung itu berakhir. Mana yang Anda butuhkan untuk pergi dari sana?
      courseA_maze_seq2_predict1_authored_hint: [ ]
      courseA_maze_seq3_authored_hint:
        courseA_maze_seq3_a: 1 dari blok memindahkan burung ke arah yang salah. Dapatkah anda mencari tahu yang mana dan menggantinya dengan blok yang benar?
        courseA_maze_seq3_b: Cobalah menggunakan tombol langkah untuk menemukan program mana yang berjalan salah. Apakah langkah yang pertama? Kedua?
        courseA_maze_seq3_c: This <xml><block type="maze_moveNorth"/></xml> block doesn't seem to be moving the bird in the right direction. Can you replace it with a different block?
      courseA_maze_seq3_2018_authored_hint:
        courseA_maze_seq3_a: 1 dari blok memindahkan burung ke arah yang salah. Dapatkah anda mencari tahu yang mana dan menggantinya dengan blok yang benar?
        courseA_maze_seq3_b: Cobalah menggunakan tombol langkah untuk menemukan program mana yang berjalan salah. Apakah langkah yang pertama? Kedua?
        courseA_maze_seq3_c: This <xml><block type="maze_moveNorth"/></xml> block doesn't seem to be moving the bird in the right direction. Can you replace it with a different block?
      courseA_maze_seq4_authored_hint:
        courseA_maze_seq4_a: Jika anda mengalami masalah, coba cari tahu jalan yang benar dan lepaskan blok yang tidak sesuai.
        courseA_maze_seq4_b: Cobalah jalankan kode seperti apa adanya. Apakah terjadi suatu kesalahan? Blok mana yang dapat anda hapus? Bagaimana anda dapat memperbaikinya?
      courseA_maze_seq4_2018_authored_hint:
        courseA_maze_seq4_a: Jika anda mengalami masalah, coba cari tahu jalan yang benar dan lepaskan blok yang tidak sesuai.
        courseA_maze_seq4_b: Cobalah jalankan kode seperti apa adanya. Apakah terjadi suatu kesalahan? Blok mana yang dapat anda hapus? Bagaimana anda dapat memperbaikinya?
      courseA_maze_seq4a_authored_hint:
        courseA_maze_seq4_a: Jika Anda mengalami masalah, coba gunakan jari Anda untuk mengetahui jalur yang benar dengan menunjukkannya di peta. Apa yang bergerak tidak jari Anda membuat?
      courseA_maze_seq5_authored_hint:
        courseA_maze_seq5_a: Cobalah menuliskan langkah-langkah di atas kertas untuk menemukan solusinya!
        courseA_maze_seq5_b: Anda memerlukan 2 blok, menunjuk 2 arah.
      courseA_maze_seq5_2018_authored_hint:
        '1': Cobalah menuliskan langkah-langkah di atas kertas untuk menemukan solusinya!
        '2': |-
          You will need to use this block:
          
          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5a_2018_authored_hint:
        '1': Say the steps out loud and see if it helps you figure out the answer.
      courseA_maze_seq6_authored_hint:
        courseA_maze_seq6_a: Kode terakhir anda harus memiliki 3 blok gerakan.
        courseA_maze_seq6_b: Jika Anda terjebak, cobalah memecahkan teka - teki dalam 2 bagian, satu bagian di depan sudut dan satu bagian setelah di tikungan.
      courseA_maze_seq6_2018_authored_hint:
        courseA_maze_seq6_a: Kode terakhir anda harus memiliki 3 blok gerakan.
        courseA_maze_seq6_b: Jika Anda terjebak, cobalah memecahkan teka - teki dalam 2 bagian, satu bagian di depan sudut dan satu bagian setelah di tikungan.
      courseA_maze_seq7_authored_hint:
        courseA_maze_seq7_a: Ada 1 blok yang perlu ditambahkan untuk memindahkan burung ke babi.
        courseA_maze_seq7_b: Jika anda tidak tahu apa yang harus dilakukan, cobalah menggambar teka-teki di atas kertas dan gunakan jari anda untuk mencari tahu kearah mana bergerak.
      courseA_maze_seq7_2018_authored_hint:
        courseA_maze_seq7_a: Ada 1 blok yang perlu ditambahkan untuk memindahkan burung ke babi.
        courseA_maze_seq7_b: Jika anda tidak tahu apa yang harus dilakukan, cobalah menggambar teka-teki di atas kertas dan gunakan jari anda untuk mencari tahu kearah mana bergerak.
      courseA_maze_seq8_authored_hint:
        courseA_maze_seq8_a: Jika anda terjebak, coba gambar di atas kertas untuk melihat bagaimana burung harus bergerak.
      courseA_maze_seq8_2018_authored_hint:
        courseA_maze_seq8_a: Jika anda terjebak, coba gambar di atas kertas untuk melihat bagaimana burung harus bergerak.
      courseA_maze_seq9_authored_hint:
        courseA_maze_seq9_a: Terjebak? Cobalah menelusuri jalan burung dengan jari anda.
        courseA_maze_seq9_b: Jika Anda tidak yakin apa yang harus dilakukan, coba tekan "Start over" dan jalankan kode untuk melihat apa yang salah.
        courseA_maze_seq9_c: Anda akan perlu bergerak dalam 3 arah untuk memecahkan teka-teki ini.
      courseA_maze_seq9_2018_authored_hint:
        courseA_maze_seq9_a: Terjebak? Cobalah menelusuri jalan burung dengan jari anda.
        courseA_maze_seq9_b: Jika Anda tidak yakin apa yang harus dilakukan, coba tekan "Start over" dan jalankan kode untuk melihat apa yang salah.
        courseA_maze_seq9_c: Anda akan perlu bergerak dalam 3 arah untuk memecahkan teka-teki ini.
      courseA_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Terdapat dua solusi untuk teka-teki ini.
      courseA_maze_seq_challenge1_2018_authored_hint:
        courseA_maze_seq_challenge1_a: Terdapat dua solusi untuk teka-teki ini.
      courseA_maze_seq_challenge2_authored_hint:
        courseA_maze_seq_challenge2_a: Cobalah menghitung spasi dengan jari Anda. Ingatlah untuk tidak menghitung ruang di mana Anda memulai!
      courseA_maze_seq_challenge2_2018_authored_hint:
        courseA_maze_seq_challenge2_a: Cobalah menghitung spasi dengan jari Anda. Ingatlah untuk tidak menghitung ruang di mana Anda memulai!
      courseA_playLab_events2_authored_hint:
        courseA_playLab_events2_a: Carilah blok yang membuat anjing mengatakan sesuatu.
        courseA_playLab_events2_b: |-
          This is the code you need to complete this puzzle:
          
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018_authored_hint:
        courseA_playLab_events2_a: Carilah blok yang membuat anjing mengatakan sesuatu.
        courseA_playLab_events2_b: |-
          This is the code you need to complete this puzzle:
          
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3_authored_hint:
        courseA_playLab_events3_a: |-
          Drag this block  <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Ingatlah untuk menggunakan tombol panah kiri untuk memindahkan Jorge ke bendera setelah Anda menulis program Anda. Saat bendera berubah menjadi hijau, Anda sudah selesai!
      courseA_playLab_events3_2018_authored_hint:
        courseA_playLab_events3_a: |-
          Drag this block  <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Ingatlah untuk menggunakan tombol panah kiri untuk memindahkan Jorge ke bendera setelah Anda menulis program Anda. Saat bendera berubah menjadi hijau, Anda sudah selesai!
      courseA_playLab_events4_authored_hint:
        courseA_playLab_events4_a: |-
          Here is the event block that you will need to get Jorge to move right:
          
          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          This is the code you will need to complete this puzzle:
          
          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2018_authored_hint:
        courseA_playLab_events4_a: |-
          Here is the event block that you will need to get Jorge to move right:
          
          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          This is the code you will need to complete this puzzle:
          
          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events5_authored_hint:
        courseA_playLab_events5_a: "Here are the event blocks that you will need to use to move Jorge up and down:\n\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n  </block></xml>\nand \n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          Did you know that you can change the key for  the event arrow by clicking on the picture in the block and choosing a new key?
          
          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018_authored_hint:
        courseA_playLab_events5_a: "Here are the event blocks that you will need to use to move Jorge up and down:\n\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n  </block></xml>\nand \n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          Did you know that you can change the key for  the event arrow by clicking on the picture in the block and choosing a new key?
          
          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6_authored_hint:
        courseA_playLab_events6_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:
          
          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Here is the block you would use to change the background:
          
          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Here is the block you would use to play a random sound:
          
          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events6_2018_authored_hint:
        courseA_playLab_events6_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:
          
          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Here is the block you would use to change the background:
          
          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Here is the block you would use to play a random sound:
          
          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events7_authored_hint:
        courseA_playLab_events7_a: |-
          Use this block to control what happens when the actors collide.
          
          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playLab_events7_2018_authored_hint:
        courseA_playLab_events7_a: |-
          Use this block to control what happens when the actors collide.
          
          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playlab_challengeTemplate_authored_hint: [ ]
      courseA_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you click Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when you click Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click the monster!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show when you click Spiff!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2018_authored_hint:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you click Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when you click Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click the monster!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show when you click Spiff!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1a_authored_hint:
        courseA_playlab_events_challenge1_a: "You can make a bird sing.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "You can make a robot beep.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge1_c: |-
          You can make an angry monster growl.
          
          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.
          
          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2018_authored_hint:
        courseA_playlab_events_challenge2_a: "You can make a bird sing.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "You can make a robot beep.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          You can make an angry monster growl.
          
          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challengeClone_authored_hint:
        courseA_playlab_events_challenge1_a: "Make Waddles the Penguin show when you click Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Make Boo the Ghost show when you click Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Make Jayden the Fuzzy Monster show when you click Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Make Spiff the Robot show when you click the monster!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finally, make Wendel the Wizard show when you click on Spiff!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
      courseA_toMakeLoopsVideo_Collector_authored_hint: [ ]
      courseB_Scrat_ramp1_2018_authored_hint:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have been fully clicked together, then click "Run" again.
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!
      courseB_Scrat_ramp2_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2018_authored_hint:
        '1': |
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2018_authored_hint:
        '1': |-
          Your code should look like this:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_artist_loops10_authored_hint: [ ]
      courseB_artist_loops10_2018_authored_hint: [ ]
      courseB_artist_loops2_authored_hint:
        courseB_artist_loops2_a: Jika Anda ingin lingkaran untuk mengulang lebih dari 4 kali, Anda dapat mengubah angka di atas blok.
        courseB_artist_loops2_b: Coba jalankan kode terlebih dahulu untuk melihat di mana artis berakhir.
      courseB_artist_loops2_2018_authored_hint:
        courseB_artist_loops2_a: Jika Anda ingin lingkaran untuk mengulang lebih dari 4 kali, Anda dapat mengubah angka di atas blok.
        courseB_artist_loops2_b: Coba jalankan kode terlebih dahulu untuk melihat di mana artis berakhir.
      courseB_artist_loops3_authored_hint:
        courseB_artist_loops3_a: Ingatlah untuk menggunakan loop `repeat` untuk kode yang lebih baik!
        courseB_artist_loops3_b: Artis itu ingin pindah ke Selatan untuk menggambar garis ini.
      courseB_artist_loops3_2018_authored_hint:
        courseB_artist_loops3_a: Ingatlah untuk menggunakan loop `repeat` untuk kode yang lebih baik!
        courseB_artist_loops3_b: Artis itu ingin pindah ke Selatan untuk menggambar garis ini.
      courseB_artist_loops4_authored_hint:
        courseB_artist_loops4_a: Lonjakan blok memungkinkan Anda bergerak maju tanpa menggambar sebuah garis.
        courseB_artist_loops4_b: Anda akan perlu menambahkan sebuah blok bagian dalam ulangi lingkaran untuk memecahkan ini teka-teki.
        courseB_artist_loops4_c: Jangan lupa untuk mengubah berapa kali pengulangan loop.
      courseB_artist_loops4_2018_authored_hint:
        courseB_artist_loops4_a: Lonjakan blok memungkinkan Anda bergerak maju tanpa menggambar sebuah garis.
        courseB_artist_loops4_b: Anda akan perlu menambahkan sebuah blok bagian dalam ulangi lingkaran untuk memecahkan ini teka-teki.
        courseB_artist_loops4_c: Jangan lupa untuk mengubah berapa kali pengulangan loop.
      courseB_artist_loops5_authored_hint:
        courseB_artist_loops5_a: Seret loop `repeat`, lalu letakkan blok lain di dalamnya. Berapa kali anda perlu mengulanginya?
      courseB_artist_loops5_2018_authored_hint:
        courseB_artist_loops5_a: Seret loop `repeat`, lalu letakkan blok lain di dalamnya. Berapa kali anda perlu mengulanginya?
      courseB_artist_loops6_authored_hint:
        courseB_artist_loops6_b: Cobalah menulis bergerak di atas sebuah kertas dan mencari sebuah pola.
      courseB_artist_loops6_2018_authored_hint:
        courseB_artist_loops6_b: Cobalah menulis bergerak di atas sebuah kertas dan mencari sebuah pola.
      courseB_artist_loops7_authored_hint:
        courseB_artist_loops7_a: Tantangan ini menggunakan loop** 4 **, satu demi satu!
        courseB_artist_loops7_b: |-
          Notice that every loop makes a stair pattern that goes a different direction.
          
          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
      courseB_artist_loops7_2018_authored_hint:
        courseB_artist_loops7_a: Tantangan ini menggunakan loop** 4 **, satu demi satu!
        courseB_artist_loops7_b: |-
          Notice that every loop makes a stair pattern that goes a different direction.
          
          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
      courseB_artist_loops8_authored_hint:
        courseB_artist_loops8_a: Berapa kali anda harus mengulangi pola untuk membuat tangga?
        courseB_artist_loops8_b: Cobalah menjalankan kode yang Anda berikan untuk melihat apa yang dilakukannya.
      courseB_artist_loops8_2018_authored_hint:
        courseB_artist_loops8_a: Berapa kali anda harus mengulangi pola untuk membuat tangga?
        courseB_artist_loops8_b: Cobalah menjalankan kode yang Anda berikan untuk melihat apa yang dilakukannya.
      courseB_artist_loops8_predict1_authored_hint: [ ]
      courseB_artist_loops9_authored_hint:
        courseB_artist_loops9_a: Ingat bahwa melompat blok dapat digunakan untuk memindahkan tanpa menggambar sebuah garis.
        courseB_artist_loops9_b: Anda akan ingin menggunakan blok W untuk memecahkan teka-teki ini.
        courseB_artist_loops9_c: Tidak tahu di mana harus meletakkan loop? Coba tulis kode langkah demi langkah dan cari sebuah pola.
      courseB_artist_loops9_2018_authored_hint:
        courseB_artist_loops9_a: Ingat bahwa melompat blok dapat digunakan untuk memindahkan tanpa menggambar sebuah garis.
        courseB_artist_loops9_b: Anda akan ingin menggunakan blok W untuk memecahkan teka-teki ini.
        courseB_artist_loops9_c: Tidak tahu di mana harus meletakkan loop? Coba tulis kode langkah demi langkah dan cari sebuah pola.
      courseB_artist_loops_challenge1_authored_hint:
        courseB_artist_loops_challenge1_a: 'Blocks like this: <xml>  <block type="simple_move_up_right"/></xml> will let your artist move at a slant!'
        courseB_artist_loops_challenge1_b: Bila Anda menyelesaikan salah satu dadu, `melompat` ke berikutnya!
        courseB_artist_loops_challenge1_c: 'Anda akan perlu untuk ` langkah ` atau `jump` lebih beberapa garis yang sama dua kali. '
      courseB_artist_loops_challenge1_2018_authored_hint:
        courseB_artist_loops_challenge1_a: 'Blocks like this: <xml>  <block type="simple_move_up_right"/></xml> will let your artist move at a slant!'
        courseB_artist_loops_challenge1_b: Bila Anda menyelesaikan salah satu dadu, `melompat` ke berikutnya!
        courseB_artist_loops_challenge1_c: 'Anda akan perlu untuk ` langkah ` atau `jump` lebih beberapa garis yang sama dua kali. '
      courseB_artist_loops_challenge2_authored_hint:
        courseB_artist_loops_challenge2_a: Kode untuk menarik sebuah X sudah diberikan kepada Anda. Yang perlu Anda lakukan adalah mengulangi X dan melompat ke tempat berikutnya.
        courseB_artist_loops_challenge2_b: Anda bisa menggunakan blok `melompat` untuk pindah ke ruangan lain.
      courseB_artist_loops_challenge2_2018_authored_hint:
        courseB_artist_loops_challenge2_a: Kode untuk menarik sebuah X sudah diberikan kepada Anda. Yang perlu Anda lakukan adalah mengulangi X dan melompat ke tempat berikutnya.
        courseB_artist_loops_challenge2_b: Anda bisa menggunakan blok `melompat` untuk pindah ke ruangan lain.
      courseB_collector_loops1_authored_hint:
        courseB_collector_loops1_a: The <xml><block type="collector_collect_simplified"/></xml> block can be used to pick up treasure when you are standing on top of it.
      courseB_collector_loops10_authored_hint:
        courseB_collector_loops10_a: Jika anda tidak tahu di mana meletakkan loop `repeat`, tuliskan kode langkah demi langkah dan cari sebuah pola.
        courseB_collector_loops10_b: Cobalah menulis langkah di selembar kertas dan mencari sebuah pola.
      courseB_collector_loops10_2018_authored_hint:
        courseB_collector_loops10_a: Jika anda tidak tahu di mana meletakkan loop `repeat`, tuliskan kode langkah demi langkah dan cari sebuah pola.
        courseB_collector_loops10_b: Cobalah menulis langkah di selembar kertas dan mencari sebuah pola.
      courseB_collector_loops1_2018_authored_hint:
        courseB_collector_loops1_a: The <xml><block type="collector_collect_simplified"/></xml> block can be used to pick up treasure when you are standing on top of it.
      courseB_collector_loops2_authored_hint:
        courseB_collector_loops2_a: Anda harus bergerak sebelum bisa mengumpulkan harta karun.
        courseB_collector_loops2_b: When you have reached a spot with treasure, use the <xml><block type="collector_collect"/></xml> block to pick it up.
      courseB_collector_loops2_2018_authored_hint:
        courseB_collector_loops2_a: Anda harus bergerak sebelum bisa mengumpulkan harta karun.
        courseB_collector_loops2_b: When you have reached a spot with treasure, use the <xml><block type="collector_collect"/></xml> block to pick it up.
      courseB_collector_loops3_authored_hint:
        courseB_collector_prog3_a: Try using a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block></xml> block to collect your treasure.
        courseB_collector_prog3_b: Ingat Anda dapat menempatkan lebih dari satu blok di dalam sebuah berulang lingkaran.
      courseB_collector_loops3_2018_authored_hint:
        courseB_collector_prog3_a: Try using a <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block></xml> block to collect your treasure.
        courseB_collector_prog3_b: Ingat Anda dapat menempatkan lebih dari satu blok di dalam sebuah berulang lingkaran.
      courseB_collector_loops3_predict1_authored_hint:
        courseB_collector_prog3_a: Coba gunakan blok `repeat` untuk mengumpulkan emas anda.
      courseB_collector_loops4_authored_hint:
        courseB_collector_loops4_a: Coba gunakan tombol langkah untuk mencari tahu di mana yang salah.
        courseB_collector_loops4_b: Untuk mengubah seberapa jauh Laurel pergi, ubah berapa kali putarannya berjalan.
        courseB_collector_loops4_c: Laurel perlu berjalan dan mengumpulkan harta setelah ia selesai dengan ` ulangi ` lingkaran!
      courseB_collector_loops4_2018_authored_hint:
        courseB_collector_loops4_a: Coba gunakan tombol langkah untuk mencari tahu di mana yang salah.
        courseB_collector_loops4_b: Untuk mengubah seberapa jauh Laurel pergi, ubah berapa kali putarannya berjalan.
        courseB_collector_loops4_c: Laurel perlu berjalan dan mengumpulkan harta setelah ia selesai dengan ` ulangi ` lingkaran!
      courseB_collector_loops5_authored_hint:
        courseB_collector_loops5_a: Gunakan lebih dari satu loop untuk menyelesaikan pekerjaan.
        courseB_collector_loops5_b: Coba jalankan kode beberapa kali untuk melihat apa yang terjadi.
      courseB_collector_loops5_2018_authored_hint:
        courseB_collector_loops5_a: Gunakan lebih dari satu loop untuk menyelesaikan pekerjaan.
        courseB_collector_loops5_b: Coba jalankan kode beberapa kali untuk melihat apa yang terjadi.
      courseB_collector_loops6_authored_hint:
        courseB_collector_loops6_a: Tidak tahu di mana hal-hal yang salah? Gunakan tombol "step" untuk menjalankan program anda satu blok setiap kalinya.
        courseB_collector_loops6_b: Anda dapat mengubah jumlah kali pengulangan lingkaran berjalan dengan mengklik pada "3" dan memilih sebuah nomor yang berbeda.
        courseB_collector_loops6_c: Anda akan ingin menggunakan 3 ` ulangi ` lopp untuk memecahkan ini teka-teki.
        courseB_collector_loops6_d: Jika Anda bingung, cobalah memecahkan teka - teki ini menjadi 3 bagian.
      courseB_collector_loops6_2018_authored_hint:
        courseB_collector_loops6_a: Tidak tahu di mana hal-hal yang salah? Gunakan tombol "step" untuk menjalankan program anda satu blok setiap kalinya.
        courseB_collector_loops6_b: Anda dapat mengubah jumlah kali pengulangan lingkaran berjalan dengan mengklik pada "3" dan memilih sebuah nomor yang berbeda.
        courseB_collector_loops6_c: Anda akan ingin menggunakan 3 ` ulangi ` lopp untuk memecahkan ini teka-teki.
        courseB_collector_loops6_d: Jika Anda bingung, cobalah memecahkan teka - teki ini menjadi 3 bagian.
      courseB_collector_loops7_authored_hint:
        courseB_collector_loops7_a: Jika anda mengalami kesulitan dengan teka-teki ini, cobalah menggambar di atas kertas untuk membantu anda mengetahuinya.
        courseB_collector_loops7_b: Anda akan membutuhkan 3 loop berulang untuk memecahkan teka-teki ini, dan jangan lupa harta tambahan di akhir!
      courseB_collector_loops7_2018_authored_hint:
        courseB_collector_loops7_a: Jika anda mengalami kesulitan dengan teka-teki ini, cobalah menggambar di atas kertas untuk membantu anda mengetahuinya.
        courseB_collector_loops7_b: Anda akan membutuhkan 3 loop berulang untuk memecahkan teka-teki ini, dan jangan lupa harta tambahan di akhir!
      courseB_collector_loops8_authored_hint:
        courseB_collector_loops8_challenge_a: Jika anda tidak tahu di mana harus meletakkan loop pengulangan, tuliskan kode langkah demi langkah dan cari sebuah pola.
      courseB_collector_loops8_2018_authored_hint:
        courseB_collector_loops8_challenge_a: Jika anda tidak tahu di mana harus meletakkan loop pengulangan, tuliskan kode langkah demi langkah dan cari sebuah pola.
      courseB_collector_loops9_authored_hint:
        courseB_collector_loops9_a: 'Apakah ini terasa terlalu sulit? Pecahkanlah menjadi 3 masalah kecil agar terasa lebih mudah.'
        courseB_collector_loops9_b: Anda akan membutuhkan 3 loop berulang, satu demi satu, untuk solusi ini.
      courseB_collector_loops9_2018_authored_hint:
        courseB_collector_loops9_a: 'Apakah ini terasa terlalu sulit? Pecahkanlah menjadi 3 masalah kecil agar terasa lebih mudah.'
        courseB_collector_loops9_b: Anda akan membutuhkan 3 loop berulang, satu demi satu, untuk solusi ini.
      courseB_collector_loops_challenge1_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Start by looping the following commands:
          
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Move East twice between each path.\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n  </xml>\nYou can do this with only 14 blocks. Click for one more hint to see a solution. \n"
        courseB_collector_loops_challenge1_d: |-
          Try this!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2018_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Start by looping the following commands:
          
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Move East twice between each path.\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n  </xml>\nYou can do this with only 14 blocks. Click for one more hint to see a solution. \n"
        courseB_collector_loops_challenge1_d: |-
          Try this!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2_authored_hint:
        courseB_collector_loops_challenge2_a: Jika terjadi sesuatu kesalahan, jangan takut untuk memulai kembali. Jangan menyerah!
        courseB_collector_loops_challenge2_b: |-
          If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!
          
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: Coba gunakan sebuah ` berulang ` blok untuk mengumpulkan final tumpukan harta!
        courseB_collector_loops_challenge2_d: |-
          Try this solution:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2a_authored_hint:
        courseB_collector_loops_challenge2a_a: Jika sesuatu yang tidak beres, cobalah debug itu. Jangan menyerah!
        courseB_collector_loops_challenge2a_b: "Lihatlah pilihan ini untuk melewati labirin.\nApakah Anda melihat sebuah pola yang dapat Anda mengulangi?"
        courseB_collector_loops_challenge2a_c: To collect all of the treasure, you will either need to add two  <xml> <block type="collector_collect"/></xml> blocks inside your loop, or put the block inside of its own `repeat` block.
      courseB_collector_loops_challenge2a_2018_authored_hint:
        courseB_collector_loops_challenge2a_a: Jika sesuatu yang tidak beres, cobalah debug itu. Jangan menyerah!
        courseB_collector_loops_challenge2a_b: "Lihatlah pilihan ini untuk melewati labirin.\nApakah Anda melihat sebuah pola yang dapat Anda mengulangi?"
        courseB_collector_loops_challenge2a_c: To collect all of the treasure, you will either need to add two  <xml> <block type="collector_collect"/></xml> blocks inside your loop, or put the block inside of its own `repeat` block.
      courseB_collector_loops_challenge`_authored_hint:
        courseA_collector_loops_challenge2_b: "You only need to use one ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) block to solve this.\n\n"
        courseA_collector_loops_challenge2_a: |-
          You can move back over the path a second time before moving south.
          
          ![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      courseB_collector_prog3_authored_hint:
        courseB_collector_prog3_a: Coba gunakan blok `repeat` untuk mengumpulkan emas anda.
      courseB_iceage_loops1_authored_hint:
        courseB_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseB_iceage_loops1_b: |-
          You will have to use this block:
          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseB_iceage_loops2_authored_hint:
        courseB_iceage_loops2_a: Break this puzzle into two pieces, one before the corner, and one after the corner.
        courseB_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseB_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseB_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          Use this new block!
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: Untuk mengulang kode, seret sebuah loop `repeat`, kemudian letakkan blok yang anda inginkan di dalamnya.
      courseB_iceage_loops4_authored_hint:
        courseB_iceage_loops4_a: Try writing down the steps Scrat would take to get to the acorn. Do you see a pattern?
        courseB_iceage_loops4_b: Don't be afraid to run your code and see what happens!
        courseB_iceage_loops4_c: This is the path Scrat should take.
      courseB_iceage_loops6_authored_hint:
        courseB_iceage_loops6_a: Your final code will have **three** movement blocks.
        courseB_iceage_loops6_b: You only need to add **one** more loop!
        courseB_iceage_loops6_c: Your final path should look like this.
      courseB_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the acorn.
      courseB_iceage_loops8_authored_hint:
        courseB_iceage_loops8_a: Are the movement blocks right? What else can you change?
        courseB_iceage_loops8_b: The first loop should repeat **3** times, the second should repeat **5** times, the third loop should repeat **4** times, and the last loop should repeat **4** times.
        courseB_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseB_iceage_loops9_authored_hint:
        courseB_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller pieces. Don't be afraid to run your puzzle as you code!
        courseB_iceage_loops9_b: Your final code should have **4** loops.
        courseB_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseB_maze_seq1_authored_hint:
        courseB_maze_seq1_a: Connect blocks to the <xml><block type="when_run"/></xml> block to make the bird move!
        courseB_maze_seq1_b: Drag three of these <xml><block type="maze_moveSouth"/></xml> arrows out and connect them to the <xml><block type="when_run"/></xml> block to get your bird to the pig.
      courseB_maze_seq10_authored_hint:
        courseB_maze_seq10_a: Cobalah menuliskan langkah-langkah di selembar kertas terlebih dahulu.
        courseB_maze_seq10_b: Anda perlu bergerak dalam dua arah yang berbeda untuk mencapai babi.
      courseB_maze_seq10_2018_authored_hint: [ ]
      courseB_maze_seq10_predict1_authored_hint: [ ]
      courseB_maze_seq10_predict1_2018_authored_hint: [ ]
      courseB_maze_seq11_authored_hint:
        courseB_maze_seq11_a: Cobalah menuliskan langkah-langkah di selembar kertas terlebih dahulu.
        courseB_maze_seq11_b: 'Selesaikan teka-teki dalam dua bagian: satu di depan sudut dan satu demi satu.'
      courseB_maze_seq11_2018_authored_hint: [ ]
      courseB_maze_seq1_2018_authored_hint:
        courseB_maze_seq1_a: Connect blocks to the <xml><block type="when_run"/></xml> block to make Scrat move!
        courseB_maze_seq1_b: Drag three of these <xml><block type="maze_moveSouth"/></xml> arrows out and connect them to the <xml><block type="when_run"/></xml> block to get Scrat to the acorn.
      courseB_maze_seq1_predict1_authored_hint: [ ]
      courseB_maze_seq1_predict1_2018_authored_hint: [ ]
      courseB_maze_seq2_authored_hint:
        courseB_maze_seq2_a: Program ini hilang satu blok. Bisakah kamu mencari tahu yang mana?
        courseB_maze_seq2_b: Cobalah menjalankan kode yang Anda berikan untuk melihat apa yang perlu dilakukan burung selanjutnya.
      courseB_maze_seq2_2018_authored_hint:
        courseB_maze_seq2_a: Program ini hilang satu blok. Bisakah kamu mencari tahu yang mana?
        courseB_maze_seq2_b: Cobalah menjalankan kode yang Anda berikan untuk melihat apa yang perlu dilakukan burung selanjutnya.
      courseB_maze_seq3_authored_hint:
        courseB_maze_seq3_a: Salah satu blok memindahkan burung ke arah yang salah. Dapatkah anda mencari tahu yang mana dan menggantinya dengan blok yang benar?
        courseB_maze_seq3_b: Coba gunakan tombol langkah untuk menemukan di mana program berjalan salah. Apakah ini langkah pertama? Kedua?
        courseB_maze_seq3_c: The <xml><block type="maze_moveWest"/></xml> block doesn't seem to be moving the bird in the right direction.
      courseB_maze_seq3_2018_authored_hint:
        courseB_maze_seq3_a: Salah satu blok memindahkan burung ke arah yang salah. Dapatkah anda mencari tahu yang mana dan menggantinya dengan blok yang benar?
        courseB_maze_seq3_b: Coba gunakan tombol langkah untuk menemukan di mana program berjalan salah. Apakah ini langkah pertama? Kedua?
        courseB_maze_seq3_c: The <xml><block type="maze_moveWest"/></xml> block doesn't seem to be moving the bird in the right direction.
      courseB_maze_seq4_authored_hint:
        courseB_maze_seq4_a: Cobalah menambahkan satu instruksi pada satu waktu sampai anda tiba di babi.
        courseB_maze_seq4_b: You will want to use the <xml><block type="maze_moveEast"/></xml> block to solve this puzzle.
      courseB_maze_seq4_2018_authored_hint:
        courseB_maze_seq4_a: Cobalah menambahkan satu instruksi pada satu waktu sampai anda tiba di babi.
        courseB_maze_seq4_b: You will want to use the <xml><block type="maze_moveEast"/></xml> block to solve this puzzle.
      courseB_maze_seq5_authored_hint:
        courseB_maze_seq5_a: Jika Anda terjebak, cobalah menarik keluar jalur di atas kertas.
        courseB_maze_seq5_b: Terdapat 2 cara untuk memecahkan teka-teki ini!
        courseB_maze_seq5_c: Tidak yakin bagaimana cara menuju ke babi? Coba ini jalan.
      courseB_maze_seq5_2018_authored_hint:
        courseB_maze_seq5_a: Jika Anda terjebak, cobalah menarik keluar jalur di atas kertas.
        courseB_maze_seq5_b: Terdapat 2 cara untuk memecahkan teka-teki ini!
        courseB_maze_seq5_c: Tidak yakin bagaimana cara menuju ke babi? Coba ini jalan.
      courseB_maze_seq6_authored_hint:
        courseB_maze_seq6_a: Kode akhir anda harus memiliki tiga blok gerakan.
        courseB_maze_seq6_b: Jika Anda terjebak, cobalah memecahkan teka-teki dalam dua bagian, satu menyamping dan satu ke atas dan ke bawah.
        courseB_maze_seq5_c: Ada dua cara untuk memecahkan teka-teki ini.
        courseB_maze_seq5_d: Tidak yakin bagaimana cara menuju ke babi? Coba jalan ini!
      courseB_maze_seq6_2018_authored_hint:
        courseB_maze_seq6_a: Kode akhir anda harus memiliki tiga blok gerakan.
        courseB_maze_seq6_b: Jika Anda terjebak, cobalah memecahkan teka-teki dalam dua bagian, satu menyamping dan satu ke atas dan ke bawah.
        courseB_maze_seq5_c: Ada dua cara untuk memecahkan teka-teki ini.
        courseB_maze_seq5_d: Tidak yakin bagaimana cara menuju ke babi? Coba jalan ini!
      courseB_maze_seq7_authored_hint:
        courseB_maze_seq7_a: Tambahkan 1 blok untuk memindahkan burung ke babi.
        courseB_maze_seq7_b: Coba jalankan kode yang diberikan kepada Anda dan lihat di mana Anda berakhir.
        courseB_maze_seq7_c: Tidak bisa sampai ke babi? Coba jalan ini!
      courseB_maze_seq7_2018_authored_hint:
        courseB_maze_seq7_a: Tambahkan 1 blok untuk memindahkan burung ke babi.
        courseB_maze_seq7_b: Coba jalankan kode yang diberikan kepada Anda dan lihat di mana Anda berakhir.
        courseB_maze_seq7_c: Tidak bisa sampai ke babi? Coba jalan ini!
      courseB_maze_seq8_authored_hint:
        courseB_maze_seq8_a: Cobalah menambahkan satu blok pada satu waktu sampai anda memecahkan teka-teki.
        courseB_maze_seq8_b: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseB_maze_seq8_c: Tidak tahu pergi ke jalan yang mana? Coba jalan ini!
      courseB_maze_seq8_2018_authored_hint:
        courseB_maze_seq8_a: Cobalah menambahkan satu blok pada satu waktu sampai anda memecahkan teka-teki.
        courseB_maze_seq8_b: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseB_maze_seq8_c: Tidak tahu pergi ke jalan yang mana? Coba jalan ini!
      courseB_maze_seq9_authored_hint:
        courseB_maze_seq9_a: Coba tulis semua langkah di selembar kertas terlebih dahulu.
        courseB_maze_seq9_b: Bangun program Anda satu blok pada satu waktu dan tes saat Anda membangunnya.
        courseB_maze_seq9_c: Ada dua cara untuk memecahkan teka-teki ini.
        courseB_maze_seq9_d: Terjebak? Coba jalan ini!
      courseB_maze_seq9_2018_authored_hint:
        courseB_maze_seq9_a: Coba tulis semua langkah di selembar kertas terlebih dahulu.
        courseB_maze_seq9_b: Bangun program Anda satu blok pada satu waktu dan tes saat Anda membangunnya.
        courseB_maze_seq9_c: Ada dua cara untuk memecahkan teka-teki ini.
        courseB_maze_seq9_d: Terjebak? Coba jalan ini!
      courseB_maze_seq9_challenge1_authored_hint: [ ]
      courseB_maze_seqCold_authored_hint:
        courseB_maze_seqCold_a: Terjebak? Cobalah menelusuri jalan burung dengan jari anda.
        courseB_maze_seqCold_b: The extra blocks need to be added before the last ![](https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51 PM.png )
      courseB_maze_seqOld_authored_hint:
        courseB_maze_seqOld_a: Jika anda mengalami masalah, coba tuliskan langkah-langkah di selembar kertas terlebih dahulu.
      courseB_maze_seq_challenge1_authored_hint:
        courseB_maze_seq_challenge1_a: Jalan terpendek mungkin tidak bekerja saat ini.
        courseB_maze_seq_challenge1_b: Try using the <xml><block type="maze_moveWest"/></xml> block to start.
      courseB_maze_seq_challenge1_2018_authored_hint:
        courseB_maze_seq_challenge1_a: Jalan terpendek mungkin tidak bekerja saat ini.
        courseB_maze_seq_challenge1_b: Try using the <xml><block type="maze_moveWest"/></xml> block to start.
      courseB_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: Anda tidak perlu menambah atau menghapus blok untuk memecahkan teka-teki ini.
        courseB_maze_seq_challenge2_b: Susun ulang balok dan ambil jalan pola tangga.
      courseB_maze_seq_challenge2_2018_authored_hint:
        courseB_maze_seq_challenge2_a: Anda tidak perlu menambah atau menghapus blok untuk memecahkan teka-teki ini.
        courseB_maze_seq_challenge2_b: Susun ulang balok dan ambil jalan pola tangga.
      courseB_playlab_challenge1_Template_authored_hint: [ ]
      courseB_playlab_challenge1_Template_2018_authored_hint: [ ]
      courseB_playlab_events2_authored_hint:
        courseB_playlab_events2_a: |-
          This is the block to have Daisy say something:
          
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events2_2018_authored_hint:
        courseB_playlab_events2_a: |-
          This is the block to have Daisy say something:
          
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events3_authored_hint:
        courseB_playlab_events3_a: |-
          This is the block you should use to add the event:
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          This is the block you need to switch Daisy's mood:
          
          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events3_2018_authored_hint:
        courseB_playlab_events3_a: |-
          This is the block you should use to add the event:
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          This is the block you need to switch Daisy's mood:
          
          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events4_authored_hint:
        courseB_playlab_events4_a: |-
          This is the event that controls the left arrow:
          
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          This is the block that makes the knight move left.
          
          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2018_authored_hint:
        courseB_playlab_events4_a: |-
          This is the event that controls the left arrow:
          
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          This is the block that makes the knight move left.
          
          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events5_authored_hint:
        courseB_playlab_events5_a: "This is the event block that controls the right arrow: \n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n  </block>\n  </xml>"
        courseB_playlab_events5_b: "This is the block that makes the knight run away. \n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events5_2018_authored_hint:
        courseB_playlab_events5_a: "This is the event block that controls the right arrow: \n\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n  </block>\n  </xml>"
        courseB_playlab_events5_b: "This is the block that makes the knight run away. \n\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events6_authored_hint:
        courseB_playlab_events6_a: |-
          You will need these event blocks:
          
          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Use the drop down arrows on the green `when ___ arrow pressed` event blocks to choose different directions.
          
          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Sampai ke semua bendera yang lewat!
      courseB_playlab_events6_2018_authored_hint:
        courseB_playlab_events6_a: |-
          You will need these event blocks:
          
          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Use the drop down arrows on the green `when ___ arrow pressed` event blocks to choose different directions.
          
          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Sampai ke semua bendera yang lewat!
      courseB_playlab_events7_authored_hint:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:
          
          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.
          
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:
          
          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2018_authored_hint:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:
          
          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.
          
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:
          
          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_eventsTemplate_authored_hint: [ ]
      courseB_playlab_eventsTemplate_2018_authored_hint: [ ]
      courseB_playlab_eventsToolbox_authored_hint:
        courseB_playlab_events7_a: |-
          This is the event block that you will need:
          
          ![](https://images.code.org/2ed42b3a3108c6affdfc866de57f2eec-image-1475624565390.42.18.png)
        courseB_playlab_events7_b: |-
          This is the block you need to play a sound.
          
          ![](https://images.code.org/58e9b9a146a4ca3a8eee25845110b805-image-1475624550269.42.00.png)
        courseB_playlab_events7_c: |-
          This is the block you need to make the knight vanish:
          
          ![](https://images.code.org/f468611cbe51e1cb35531334f625395a-image-1475624478204.41.02.png)
      courseB_playlab_events_challenge1_authored_hint:
        courseB_playlab_events_challenge1_a: "Make the other animals move down when you press `▼`. \n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          Change the speed of the animals by using this block:
          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          What will the everyone say when the race is over? Make them talk with this event:
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2018_authored_hint:
        courseB_playlab_events_challenge1_a: "Make the other animals move down when you press `▼`. \n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          Change the speed of the animals by using this block:
          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          What will the everyone say when the race is over? Make them talk with this event:
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge2_authored_hint:
        courseB_playlab_events_challenge2_a: Setiap hewan dalam permainan harus lenyap saat disadap. Itu juga harus kembali setelah satu atau dua detik!
        courseB_playlab_events_challenge2_b: |-
          Use other event blocks to make the other animals disappear!
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Use extra commands to play sounds or score points when you click the animals!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Campurkan itu!
          
          Buat beberapa hewan memberi lebih banyak poin daripada yang lain. Gunakan suara yang berbeda.
          Mengubah suasana hati binatang!
      courseB_playlab_events_challenge2_2018_authored_hint:
        courseB_playlab_events_challenge2_a: Setiap hewan dalam permainan harus lenyap saat disadap. Itu juga harus kembali setelah satu atau dua detik!
        courseB_playlab_events_challenge2_b: |-
          Use other event blocks to make the other animals disappear!
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Use extra commands to play sounds or score points when you click the animals!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Campurkan itu!
          
          Buat beberapa hewan memberi lebih banyak poin daripada yang lain. Gunakan suara yang berbeda.
          Mengubah suasana hati binatang!
      courseB_playlab_events_challenge2_embed_authored_hint:
        courseB_playlab_events_challenge2_a: Setiap hewan dalam permainan harus lenyap saat disadap. Itu juga harus kembali setelah satu atau dua detik!
        courseB_playlab_events_challenge2_b: |-
          Use other event blocks to make the other animals disappear!
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Use extra commands to play sounds or score points when you click the animals!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Campurkan itu!
          
          Buat beberapa hewan memberi lebih banyak poin daripada yang lain. Gunakan suara yang berbeda.
          Mengubah suasana hati binatang!
      courseB_playlab_events_challenge2_template_authored_hint:
        courseB_playlab_events_challenge2_a: Setiap hewan dalam permainan harus lenyap saat disadap. Itu juga harus kembali setelah satu atau dua detik!
        courseB_playlab_events_challenge2_b: |-
          Use other event blocks to make the other animals disappear!
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Use extra commands to play sounds or score points when you click the animals!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Campurkan itu!
          
          Buat beberapa hewan memberi lebih banyak poin daripada yang lain. Gunakan suara yang berbeda.
          Mengubah suasana hati binatang!
      courseB_playlab_events_challenge2_template_2018_authored_hint:
        courseB_playlab_events_challenge2_a: Setiap hewan dalam permainan harus lenyap saat disadap. Itu juga harus kembali setelah satu atau dua detik!
        courseB_playlab_events_challenge2_b: |-
          Use other event blocks to make the other animals disappear!
          
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Use extra commands to play sounds or score points when you click the animals!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Campurkan itu!
          
          Buat beberapa hewan memberi lebih banyak poin daripada yang lain. Gunakan suara yang berbeda.
          Mengubah suasana hati binatang!
      courseB_scrat_forVideo_authored_hint: [ ]
      courseB_starWars_prog1_authored_hint:
        courseB_starWars_prog1_a: Coba tambahkan blok satu per satu, lalu klik "Run" untuk melihat apa yang terjadi.
        courseB_starWars_prog1_b: |
          You will want to move East to solve this puzzle. How far do you need to move?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog10_authored_hint: [ ]
      courseB_starWars_prog10_2018_authored_hint: [ ]
      courseB_starWars_prog11_authored_hint: [ ]
      courseB_starWars_prog11_2018_authored_hint: [ ]
      courseB_starWars_prog1_2018_authored_hint:
        courseB_starWars_prog1_a: Coba tambahkan blok satu per satu, lalu klik "Run" untuk melihat apa yang terjadi.
        courseB_starWars_prog1_b: |
          You will want to move East to solve this puzzle. How far do you need to move?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog2_authored_hint:
        courseB_starWars_prog2_a: Pisahkan masalah ini menjadi dua bagian. Ambil satu tumpukan logam bekas, lalu cari tahu cara menuju yang lain.
      courseB_starWars_prog2_2018_authored_hint:
        courseB_starWars_prog2_a: Pisahkan masalah ini menjadi dua bagian. Ambil satu tumpukan logam bekas, lalu cari tahu cara menuju yang lain.
      courseB_starWars_prog3_authored_hint:
        courseB_starWars_prog3_a: Anda perlu memindahkan 3 cara untuk memecahkan teka-teki ini.
        courseB_starWars_prog3_b: Membangun salah satu bagian dari kode pada suatu waktu. Jalankan untuk mencari tahu ke mana harus pergi dari sana.
      courseB_starWars_prog3_2018_authored_hint:
        courseB_starWars_prog3_a: Anda perlu memindahkan 3 cara untuk memecahkan teka-teki ini.
        courseB_starWars_prog3_b: Membangun salah satu bagian dari kode pada suatu waktu. Jalankan untuk mencari tahu ke mana harus pergi dari sana.
      courseB_starWars_prog4_authored_hint:
        courseB_starWars_prog4_a: Membangun salah satu bagian dari kode pada suatu waktu. Jalankan untuk mencari tahu ke mana harus pergi dari sana.
        courseB_starWars_prog4_b: |-
          Try using the `repeat` block for shorter code.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog4_2018_authored_hint:
        courseB_starWars_prog4_a: Membangun salah satu bagian dari kode pada suatu waktu. Jalankan untuk mencari tahu ke mana harus pergi dari sana.
        courseB_starWars_prog4_b: |-
          Try using the `repeat` block for shorter code.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog5_authored_hint:
        courseB_starWars_prog5_a: Tidakkah pola ini terlihat sedikit sama seperti teka-teki terakhir?
        courseB_starWars_prog5_b: BB-8 akan mengambil besi tua saat ia menggulungnya.
        courseB_starWars_prog5_c: Trace pola ini dengan jari Anda. Hitung potongan logam saat Anda bergerak.
        courseB_starWars_prog5_da: |-
          Look what happens if you use the same solution as the stair-step puzzle:
          
          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018_authored_hint:
        courseB_starWars_prog5_a: Tidakkah pola ini terlihat sedikit sama seperti teka-teki terakhir?
        courseB_starWars_prog5_b: BB-8 akan mengambil besi tua saat ia menggulungnya.
        courseB_starWars_prog5_c: Trace pola ini dengan jari Anda. Hitung potongan logam saat Anda bergerak.
        courseB_starWars_prog5_da: |-
          Look what happens if you use the same solution as the stair-step puzzle:
          
          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog6_authored_hint:
        courseB_starWars_prog6_a: Pola ini hanya sebuah langkah tangga dengan dua langkah per arah!
        courseB_starWars_prog6_b: |-
          Try using the `repeat` block for shorter code.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog6_2018_authored_hint:
        courseB_starWars_prog6_a: Pola ini hanya sebuah langkah tangga dengan dua langkah per arah!
        courseB_starWars_prog6_b: |-
          Try using the `repeat` block for shorter code.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog7_authored_hint:
        courseB_starWars_prog7_a: Tidakkah pola ini terlihat sedikit sama seperti teka-teki terakhir?
        courseB_starWars_prog7_b: BB-8 akan mengambil besi tua saat ia menggulungnya.
        courseB_starWars_prog7_c: Cobalah menggambar pola langkah tangga besar di atas teka-teki ini. Apakah itu mencakup semua logam bekas?
      courseB_starWars_prog7_2018_authored_hint:
        courseB_starWars_prog7_a: Tidakkah pola ini terlihat sedikit sama seperti teka-teki terakhir?
        courseB_starWars_prog7_b: BB-8 akan mengambil besi tua saat ia menggulungnya.
        courseB_starWars_prog7_c: Cobalah menggambar pola langkah tangga besar di atas teka-teki ini. Apakah itu mencakup semua logam bekas?
      courseB_starWars_prog8_authored_hint:
        courseB_starWars_prog8_a: Tidak apa-apa untuk kembali ke satu set ruang di mana Anda telah melakukan perjalanan.
        courseB_starWars_prog8_b: |-
          Try using the `repeat` block to see what happens to the code that you put inside.
          
          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2018_authored_hint:
        courseB_starWars_prog8_a: Tidak apa-apa untuk kembali ke satu set ruang di mana Anda telah melakukan perjalanan.
        courseB_starWars_prog8_b: |-
          Try using the `repeat` block to see what happens to the code that you put inside.
          
          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog9_authored_hint:
        courseB_starWars_prog9_a: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseB_starWars_prog9_b: Terdapat banyak cara untuk memecahkan teka-teki ini.
        courseB_starWars_prog9_c: Bisakah sebuah loop ` ulangi` membantu di sini?
      courseB_starWars_prog9_2018_authored_hint:
        courseB_starWars_prog9_a: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseB_starWars_prog9_b: Terdapat banyak cara untuk memecahkan teka-teki ini.
        courseB_starWars_prog9_c: Bisakah sebuah loop ` ulangi` membantu di sini?
      courseC_PlayLab_embed_events9_authored_hint: [ ]
      courseC_PlayLab_events1_authored_hint:
        courseC_PlayLab_events1_a: |-
          Attach this block to the `when run` block:
          
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2018_authored_hint:
        courseC_PlayLab_events1_a: |-
          Attach this block to the `when run` block:
          
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events2_authored_hint:
        courseC_PlayLab_events2_a: |-
          Attach two of these blocks to the `when run` block:
          
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Gunakan menu dropdown pada blok `actor __ say 'kedua untuk mengubah aktor mana yang berbicara.
      courseC_PlayLab_events2_2018_authored_hint:
        courseC_PlayLab_events2_a: |-
          Attach two of these blocks to the `when run` block:
          
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Gunakan menu dropdown pada blok `actor __ say 'kedua untuk mengubah aktor mana yang berbicara.
      courseC_PlayLab_events3_authored_hint:
        courseC_PlayLab_events3_a: Anda hanya perlu memindahkan Jorge ke kanan sekitar 25 piksel untuk memecahkan teka-teki ini.
        courseC_PlayLab_events3_b: Apakah ada sebuah blok di toolbox yang terlihat seperti itu akan memindahkan sebuah aktor?
        courseC_PlayLab_events3_c: |-
          Attach this block to the `when run` block:
          
          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2018_authored_hint:
        courseC_PlayLab_events3_a: Anda hanya perlu memindahkan Jorge ke kanan sekitar 25 piksel untuk memecahkan teka-teki ini.
        courseC_PlayLab_events3_b: Apakah ada sebuah blok di toolbox yang terlihat seperti itu akan memindahkan sebuah aktor?
        courseC_PlayLab_events3_c: |-
          Attach this block to the `when run` block:
          
          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events4_authored_hint:
        courseC_PlayLab_events4_b: Saat tombol "Run" diklik, Jorge perlu bergerak ke kanan ** 100 ** piksel untuk mencapai Olive the Cat.
        courseC_PlayLab_events4_a: Anda perlu melampirkan blok `actor __ say` ke acara` when actor touches` untuk memecahkan teka-teki ini.
      courseC_PlayLab_events4_2018_authored_hint:
        courseC_PlayLab_events4_b: Saat tombol "Run" diklik, Jorge perlu bergerak ke kanan ** 100 ** piksel untuk mencapai Olive the Cat.
        courseC_PlayLab_events4_a: Anda perlu melampirkan blok `actor __ say` ke acara` when actor touches` untuk memecahkan teka-teki ini.
      courseC_PlayLab_events5_authored_hint:
        courseC_PlayLab_events5_a: Anda perlu mengeklik menu dropdown di blok `aktor say` untuk menemukan teks" What's new? "
        courseC_PlayLab_events5_b: Klik pada Octavia saat anda menjalankan program anda untuk memeriksa apakah ia bekerja!
      courseC_PlayLab_events5_2018_authored_hint:
        courseC_PlayLab_events5_a: Anda perlu mengeklik menu dropdown di blok `aktor say` untuk menemukan teks" What's new? "
        courseC_PlayLab_events5_b: Klik pada Octavia saat anda menjalankan program anda untuk memeriksa apakah ia bekerja!
      courseC_PlayLab_events6_authored_hint:
        courseC_PlayLab_events6_a: Setiap blok hijau `when arrow` harus memiliki satu tindakan di bawahnya.
        courseC_PlayLab_events6_b: Gunakan menu drop down pada blok ` pindah aktor 1` untuk mengubah arah Waddles bergerak.
        courseC_PlayLab_events6_c: Setelah selesai, Anda harus bisa memindahkan Waddles dengan menggunakan tombol panah di komputer Anda!
      courseC_PlayLab_events6_2018_authored_hint:
        courseC_PlayLab_events6_a: Setiap blok hijau `when arrow` harus memiliki satu tindakan di bawahnya.
        courseC_PlayLab_events6_b: Gunakan menu drop down pada blok ` pindah aktor 1` untuk mengubah arah Waddles bergerak.
        courseC_PlayLab_events6_c: Setelah selesai, Anda harus bisa memindahkan Waddles dengan menggunakan tombol panah di komputer Anda!
      courseC_PlayLab_events7_authored_hint:
        courseC_PlayLab_events7_a: 'Gunakan blok `move actor 2 up 400 pixels` dan blok` move actor 2 down 400 pixels` di dalam loop `repeat forever` untuk memecahkan teka-teki ini. '
        courseC_PlayLab_events7_b: Loop `repeat forever` tidak perlu dihubungkan ke blok acara lainnya; itu akan berjalan sendiri.
      courseC_PlayLab_events7_2018_authored_hint:
        courseC_PlayLab_events7_a: 'Gunakan blok `move actor 2 up 400 pixels` dan blok` move actor 2 down 400 pixels` di dalam loop `repeat forever` untuk memecahkan teka-teki ini. '
        courseC_PlayLab_events7_b: Loop `repeat forever` tidak perlu dihubungkan ke blok acara lainnya; itu akan berjalan sendiri.
      courseC_PlayLab_events8_authored_hint:
        courseC_PlayLab_events8_a: Anda perlu menghubungkan blok ke blok `when actor touches` untuk mewujudkannya dengan benar.
        courseC_PlayLab_events8_b: Blok `actor say` dan` play sound` di toolbox akan membantu anda keluar!
      courseC_PlayLab_events8_2018_authored_hint:
        courseC_PlayLab_events8_a: Anda perlu menghubungkan blok ke blok `when actor touches` untuk mewujudkannya dengan benar.
        courseC_PlayLab_events8_b: Blok `actor say` dan` play sound` di toolbox akan membantu anda keluar!
      courseC_PlayLab_events9_authored_hint:
        courseC_PlayLab_events9_a: Blok `score point` akan membantu anda memecahkan teka-teki ini.
        courseC_PlayLab_events9_b: Pastikan bahwa blok `when actor touches` anda yang baru mengatakan aktor ** 1 ** dan actor ** 3 **.
        courseC_PlayLab_events9_c: Anda dapat memiliki lebih dari satu `ketika aktor sentuh` acara di ruang kerja Anda pada saat yang sama, sehingga Anda tidak perlu menghapus yang pertama!
      courseC_PlayLab_events9_2018_authored_hint:
        courseC_PlayLab_events9_a: Blok `score point` akan membantu anda memecahkan teka-teki ini.
        courseC_PlayLab_events9_b: Pastikan bahwa blok `when actor touches` anda yang baru mengatakan aktor ** 1 ** dan actor ** 3 **.
        courseC_PlayLab_events9_c: Anda dapat memiliki lebih dari satu `ketika aktor sentuh` acara di ruang kerja Anda pada saat yang sama, sehingga Anda tidak perlu menghapus yang pertama!
      courseC_PlayLab_eventsA_authored_hint:
        courseC_PlayLab_eventsA_a: Use the `set background` block and the `set actor to a ____ speed` block to solve this puzzle.
        courseC_PlayLab_eventsA_b: Anda akan perlu untuk secara khusus menyeret sebuah `ketika run` acara blok ke ruang kerja untuk memecahkan ini teka-teki.
      courseC_PlayLab_eventsA_2018_authored_hint:
        courseC_PlayLab_eventsA_a: Use the `set background` block and the `set actor to a ____ speed` block to solve this puzzle.
        courseC_PlayLab_eventsA_b: Anda akan perlu untuk secara khusus menyeret sebuah `ketika run` acara blok ke ruang kerja untuk memecahkan ini teka-teki.
      courseC_PlayLab_eventsFP_authored_hint:
        idea1: |-
          *Need an idea?*
          
          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.
          
          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Need an idea?*
          
          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.
          
          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Need an idea?*
          
          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      courseC_PlayLab_eventsFP_2018_authored_hint:
        idea1: |-
          *Need an idea?*
          
          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.
          
          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Need an idea?*
          
          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.
          
          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Need an idea?*
          
          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      courseC_PlayLab_events_challenge1_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          You can use this block to move actors to different places on the game space.
          <xml> <block type="studio_setSpritePosition">
          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Coba gunakan ` set aktor 1 ke posisi kiri tengah` saat menyentuh salah satu aktor lainnya. Ini akan mengatur ulang permainan sehingga pemain bisa terus mencoba!
        courseC_PlayLab_events_challenge_c: |-
          You might also want to try changing the speed of the different actors to make the game easier or more challenging!
          <xml>  <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2018_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          You can use this block to move actors to different places on the game space.
          <xml> <block type="studio_setSpritePosition">
          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Coba gunakan ` set aktor 1 ke posisi kiri tengah` saat menyentuh salah satu aktor lainnya. Ini akan mengatur ulang permainan sehingga pemain bisa terus mencoba!
        courseC_PlayLab_events_challenge_c: |-
          You might also want to try changing the speed of the different actors to make the game easier or more challenging!
          <xml>  <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_xy_blocks_authored_hint:
        courseC_PlayLab_events_challenge_a: Dua nilai pada ini blok memungkinkan Anda untuk memindahkan sebuah aktor untuk setiap pixel dalam area permainan. Anda bisa memilih nomor apapun dari 0-400.
        courseC_PlayLab_events_challenge_b: |-
          You can decide which numbers to use, by thinking about how far over from the top left corner you'd like to move. The first number is the number of pixels from the left. The second number is the number of pixels from the top.
          <xml><block type="studio_setSpriteXY" inline="true">
          <value name="SPRITE">
          <block type="math_number" movable="false">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="XPOS">
          <block type="math_number" movable="false">
          <title name="NUM">37</title>
          </block>
          </value>
          <value name="YPOS">
          <block type="math_number" movable="false">
          <title name="NUM">187</title>
          </block>
          </value>
          </block></xml>
          ![](https://images.code.org/b1559bf476ceb59f880c43271c5e10b2-image-1494111787192.59.49 PM.png)
      courseC_artist_loop1_authored_hint:
        courseC_artist_loop1_a: Anda tidak perlu membuat setiap perubahan pada lingkaran, hanya menempatkan satu blok di atasnya.
        courseC_artist_loop1_b: |-
          This is the block you will need to set a pattern:
          
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
          
          Choose any pattern you like!
      courseC_artist_loop1_2018_authored_hint:
        courseC_artist_loop1_a: Anda tidak perlu membuat setiap perubahan pada lingkaran, hanya menempatkan satu blok di atasnya.
        courseC_artist_loop1_b: |-
          This is the block you will need to set a pattern:
          
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
          
          Choose any pattern you like!
      courseC_artist_loops1a_authored_hint:
        courseC_artist_loops1a_a: |-
          This is the first block you will need:
          
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Use this block to draw the sticker!
          
          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2018_authored_hint:
        courseC_artist_loops1a_a: |-
          This is the first block you will need:
          
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Use this block to draw the sticker!
          
          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops2a_authored_hint:
        courseC_artist_loops2a_a: Di dalam lingkaran Anda, Anda akan ingin melompat ke 200 lebih dari 200 turun, kemudian menarik para burung stiker, kemudian putar 30 derajat.
        courseC_artist_loops2a_b: Klik pada nomor di bagian atas ` ulangi ` lingkaran untuk mengubah berapa kali itu mengulangi.
      courseC_artist_loops2a_2018_authored_hint:
        courseC_artist_loops2a_a: Di dalam lingkaran Anda, Anda akan ingin melompat ke 200 lebih dari 200 turun, kemudian menarik para burung stiker, kemudian putar 30 derajat.
        courseC_artist_loops2a_b: Klik pada nomor di bagian atas ` ulangi ` lingkaran untuk mengubah berapa kali itu mengulangi.
      courseC_artist_loops3a_authored_hint:
        courseC_artist_loops3a_a: Anda ingin menambahkan hanya satu blok di dalam lingkaran Anda, setelah burung stiker.
        courseC_artist_loops3a_b: Gunakan menu drop down pada blok ` draw sticker` untuk menemukan stiker kelelawar.
      courseC_artist_loops3a_2018_authored_hint:
        courseC_artist_loops3a_a: Anda ingin menambahkan hanya satu blok di dalam lingkaran Anda, setelah burung stiker.
        courseC_artist_loops3a_b: Gunakan menu drop down pada blok ` draw sticker` untuk menemukan stiker kelelawar.
      courseC_artist_loops4a_authored_hint:
        courseC_artist_loops4a_a: |-
          Use this block to jump forward:
          
          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>
          
          Don't forget to change how far!
      courseC_artist_loops4a_2018_authored_hint:
        courseC_artist_loops4a_a: |-
          Use this block to jump forward:
          
          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>
          
          Don't forget to change how far!
      courseC_artist_loops5_authored_hint:
        courseC_artist_loops5_a: |-
          Try using the `jump to` block to get your artist back toward the center:
          
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">100</title>
          <title name="YPOS">100</title>
          </block>
          </xml>
      courseC_artist_loops5a_authored_hint:
        courseC_artist_loops5a_a: Gunakan menu drop-down pada blok `gambar stiker` untuk mengubah gambar mereka.
      courseC_artist_loops5a_2018_authored_hint:
        courseC_artist_loops5a_a: Gunakan menu drop-down pada blok `gambar stiker` untuk mengubah gambar mereka.
      courseC_artist_loops5b_authored_hint:
        courseC_artist_loops5b_a: |-
          Use this block to set the pattern of your lines:
          
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Untuk membuat sebuah desain seperti di atas, Anda akan bergerak mundur jumlah yang sama yang Anda bergerak maju.
      courseC_artist_loops5b_2018_authored_hint:
        courseC_artist_loops5b_a: |-
          Use this block to set the pattern of your lines:
          
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Untuk membuat sebuah desain seperti di atas, Anda akan bergerak mundur jumlah yang sama yang Anda bergerak maju.
      courseC_artist_loops6_authored_hint:
        courseC_artist_loops6_a: |
          Try a triangle flower:
          <img src="https://images.code.org/4248a974a7631c4240effba06fdee731-image-1495821015097.49.18.png" width="150px" />
          
          Or a little green bug:
          <img src="https://images.code.org/b9454d6f1159e19c58d9f5b5b37fd156-image-1495821067980.52.43.png" width="150px" />
      courseC_artist_loops6a_authored_hint:
        courseC_artist_loops6a_a: Untuk membuat desain seperti yang ada di atas, lompat ke depan kurang dari 75 piksel di antara masing-masing stiker.
      courseC_artist_loops6a_2018_authored_hint:
        courseC_artist_loops6a_a: Untuk membuat desain seperti yang ada di atas, lompat ke depan kurang dari 75 piksel di antara masing-masing stiker.
      courseC_artist_loops7a_authored_hint:
        courseC_artist_loops7a_a: |-
          Sebuah lingkaran memiliki 360 derajat. Kalikan derajat di belokan Anda berapa kali Anda ulangi. Apakah sama dengan 360? Periksa rotasi yang disarankan untuk melihat bahwa ini berhasil!
      courseC_artist_loops7a_2018_authored_hint:
        courseC_artist_loops7a_a: |-
          Sebuah lingkaran memiliki 360 derajat. Kalikan derajat di belokan Anda berapa kali Anda ulangi. Apakah sama dengan 360? Periksa rotasi yang disarankan untuk melihat bahwa ini berhasil!
      courseC_artist_loopsPre1a_authored_hint:
        courseC_artist_loopsPre1a_a: Ingatlah untuk menempatkan blok `mengubah`di dalan lingkaran.
        courseC_artist_loopsPre1a_b: 'Anda ` mengulang ` lingkaran harus memiliki 3 blok di dalamnya: `melompat ke 200 lebih dari 200 down`,` bergerak maju dengan 50 piksel `, dan` belok kanan oleh 60 degrees`.'
      courseC_artist_loopsPre1a_2018_authored_hint:
        courseC_artist_loopsPre1a_a: Ingatlah untuk menempatkan blok `mengubah`di dalan lingkaran.
        courseC_artist_loopsPre1a_b: 'Anda ` mengulang ` lingkaran harus memiliki 3 blok di dalamnya: `melompat ke 200 lebih dari 200 down`,` bergerak maju dengan 50 piksel `, dan` belok kanan oleh 60 degrees`.'
      courseC_artist_loopsPrePre1a_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          The first block you will need is:
          
          ![](https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png)
        courseC_artist_loopsPrePre1a_b: |-
          To move forward 50 pixels, use this block:
          
          ![](https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png)
      courseC_artist_loopsPrePre1a_2018_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          The first block you will need is:
          
          ![](https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png)
        courseC_artist_loopsPrePre1a_b: |-
          To move forward 50 pixels, use this block:
          
          ![](https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png)
      courseC_artist_prog1_authored_hint: [ ]
      courseC_artist_prog1_2018_authored_hint: [ ]
      courseC_artist_prog2_authored_hint:
        courseC_artist_prog2_a: 'Jika Anda menggunakan blok agar saya ''bergerak maju dengan 100 pixel'', saya akan menarik garis secara otomatis.'
        courseC_artist_prog2_b: Kesulitan mengubah sudut? Gunakan blok 'belok kanan 90 derajat'.
      courseC_artist_prog2_2018_authored_hint:
        courseC_artist_prog2_a: 'Jika Anda menggunakan blok agar saya ''bergerak maju dengan 100 pixel'', saya akan menarik garis secara otomatis.'
        courseC_artist_prog2_b: Kesulitan mengubah sudut? Gunakan blok 'belok kanan 90 derajat'.
      courseC_artist_prog3_authored_hint:
        courseC_artist_prog3_a: |-
          To create this window, just draw a square with 100 pixel sides.
          - move forward
          - turn
          - move forward
          - turn
          - move forward
          - turn
          - move forward
        courseC_artist_prog3_b: Ingin membuat kode lebih pendek? Coba gunakan satu lingkaran dalam teka-teki ini.
      courseC_artist_prog3_2018_authored_hint:
        courseC_artist_prog3_a: |-
          To create this window, just draw a square with 100 pixel sides.
          - move forward
          - turn
          - move forward
          - turn
          - move forward
          - turn
          - move forward
        courseC_artist_prog3_b: Ingin membuat kode lebih pendek? Coba gunakan satu lingkaran dalam teka-teki ini.
      courseC_artist_prog4_authored_hint:
        courseC_artist_prog4_a: Untuk menyelesaikan roketnya, cukup menggambar segitiga di atas!
        courseC_artist_prog4_b: Anda bisa menggunakan menu drop dwon pada blok `ubah` untuk melihat sudut mana yang Anda butuhkan!
        courseC_artist_prog4_c: |-
          Untuk menggambar segitiga, Anda ingin: - bergerak maju - belok ke kiri 120 derajat - bergerak maju - belok ke kiri 120 derajat - maju terus
      courseC_artist_prog4_2018_authored_hint:
        courseC_artist_prog4_a: Untuk menyelesaikan roketnya, cukup menggambar segitiga di atas!
        courseC_artist_prog4_b: Anda bisa menggunakan menu drop dwon pada blok `ubah` untuk melihat sudut mana yang Anda butuhkan!
        courseC_artist_prog4_c: |-
          Untuk menggambar segitiga, Anda ingin: - bergerak maju - belok ke kiri 120 derajat - bergerak maju - belok ke kiri 120 derajat - maju terus
      courseC_artist_prog5_authored_hint:
        courseC_artist_prog5_a: Slow the slider down all the way until you can run your code line-by-line to see where things go wrong.
        courseC_artist_prog5_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
        courseC_artist_prog5_c: Anda bisa menggunakan menu drop dwon pada blok `ubah` untuk melihat sudut mana yang Anda butuhkan!
        courseC_artist_prog5_d: Setiap putaran harus 90 derajat ke kanan.
      courseC_artist_prog5_2018_authored_hint:
        courseC_artist_prog5_a: Slow the slider down all the way until you can run your code line-by-line to see where things go wrong.
        courseC_artist_prog5_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
        courseC_artist_prog5_c: Anda bisa menggunakan menu drop dwon pada blok `ubah` untuk melihat sudut mana yang Anda butuhkan!
        courseC_artist_prog5_d: Setiap putaran harus 90 derajat ke kanan.
      courseC_artist_prog6_authored_hint:
        courseC_artist_prog6_a: Seniman sudah menghadapi cara yang benar untuk menggambar garis pertamanya.
        courseC_artist_prog6_b: Berlian ini nyata terdapat persegi yang berdiri di sudutnya.
        courseC_artist_prog6_c: Karena berlian ini juga persegi, pastikan untuk memutar 90 derajat di sudut.
      courseC_artist_prog6_2018_authored_hint:
        courseC_artist_prog6_a: Seniman sudah menghadapi cara yang benar untuk menggambar garis pertamanya.
        courseC_artist_prog6_b: Berlian ini nyata terdapat persegi yang berdiri di sudutnya.
        courseC_artist_prog6_c: Karena berlian ini juga persegi, pastikan untuk memutar 90 derajat di sudut.
      courseC_artist_prog6_predict1_authored_hint: [ ]
      courseC_artist_prog6_predict1_2018_authored_hint: [ ]
      courseC_artist_prog7_authored_hint:
        courseC_artist_prog7_a: Setiap sudut adalah 45 atau 90 derajat.
        courseC_artist_prog7_b: "Does it work at the first step?  \nHow about the second?  \nWhere does it go wrong?"
        courseC_artist_prog7_c: Anda bisa menggunakan menu dropdown pada blok putar untuk melihat sudut mana yang Anda butuhkan!
        courseC_artist_prog7_d: |-
          Anda akan ingin:
          - bergerak maju kedepan
          - berbelok ke kanan 45 derajat
          - bergerak maju kedepan
          - berbelok ke kanan 90 derajat
          - bergerak maju kedepan
          - berbelok ke kanan 45 derajat
          
          Ulang pola ini sebanyak 2 kali!
        courseC_artist_prog7_e: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseC_artist_prog7_2018_authored_hint:
        courseC_artist_prog7_a: Setiap sudut adalah 45 atau 90 derajat.
        courseC_artist_prog7_b: "Does it work at the first step?  \nHow about the second?  \nWhere does it go wrong?"
        courseC_artist_prog7_c: Anda bisa menggunakan menu dropdown pada blok putar untuk melihat sudut mana yang Anda butuhkan!
        courseC_artist_prog7_d: |-
          Anda akan ingin:
          - bergerak maju kedepan
          - berbelok ke kanan 45 derajat
          - bergerak maju kedepan
          - berbelok ke kanan 90 derajat
          - bergerak maju kedepan
          - berbelok ke kanan 45 derajat
          
          Ulang pola ini sebanyak 2 kali!
        courseC_artist_prog7_e: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseC_artist_prog8_authored_hint: [ ]
      courseC_artist_prog8_2018_authored_hint: [ ]
      courseC_artist_prog_challenge1-doghouse_authored_hint:
        courseC_artist_prog7_a: Gunakan sudut 60 derajat untuk membuat atap.
      courseC_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: Anda dapat menggambar ini sebagai persegi panjang dengan sebuah garis di tengah atau dua persegi yang berbeda!
      courseC_artist_prog_challenge1_2018_authored_hint:
        courseC_artist_prog_challenge1_a: Anda dapat menggambar ini sebagai persegi panjang dengan sebuah garis di tengah atau dua persegi yang berbeda!
      courseC_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: "You can put commands inside `repeat` block to loop them over and over. Try it!\n<xml>\n  \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n                <title name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n                </next>\n              </block>\n              </statement></block></xml>"
      courseC_artist_prog_challenge2a_authored_hint:
        courseC_artist_prog_challenge2_a: Setelah menggambar garis pertama, coba berbelok ke kiri sebelum anda menggambar garis kedua anda.
        courseC_artist_prog_challenge2_b: Setelah anda menggambar garis kedua, coba berbelok ke kanan sebelum anda menggambar garis ketiga anda.
      courseC_artist_prog_challenge2a_2018_authored_hint:
        courseC_artist_prog_challenge2_a: Setelah menggambar garis pertama, coba berbelok ke kiri sebelum anda menggambar garis kedua anda.
        courseC_artist_prog_challenge2_b: Setelah anda menggambar garis kedua, coba berbelok ke kanan sebelum anda menggambar garis ketiga anda.
      courseC_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_b: Gunakan loop sehingga Anda tidak kehabisan `mengumpulkan` blok!
      courseC_collector_loops_challenge2_2018_authored_hint:
        courseC_maze_loops_challenge2_b: Gunakan loop sehingga Anda tidak kehabisan `mengumpulkan` blok!
      courseC_collector_prog1_authored_hint:
        courseC_collector_prog1_a: When you are standing on a space with treasure, use the <xml><block type="collector_collect"/></xml> block to pick it up.
        courseC_collector_prog1_b: Solusi paling sederhana adalah bergerak maju sekali, lalu mengumpulkan harta karun.
      courseC_collector_prog1_2018_authored_hint:
        courseC_collector_prog1_a: When you are standing on a space with treasure, use the <xml><block type="collector_collect"/></xml> block to pick it up.
        courseC_collector_prog1_b: Solusi paling sederhana adalah bergerak maju sekali, lalu mengumpulkan harta karun.
      courseC_collector_prog2_authored_hint:
        courseC_collector_prog2_a: You can use four <xml><block type="maze_move"><title name="DIR">moveForward</title></block></xml> blocks or use the <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> block to make your program shorter.
        courseC_collector_prog2_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseC_collector_prog2_2018_authored_hint:
        courseC_collector_prog2_a: You can use four <xml><block type="maze_move"><title name="DIR">moveForward</title></block></xml> blocks or use the <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> block to make your program shorter.
        courseC_collector_prog2_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseC_collector_prog3_authored_hint:
        courseC_collector_prog3_a: The program will only run the blocks that are connected to the <xml><block type="when_run"/></xml> block.
        courseC_collector_prog3_b: Coba gunakan tombol "step" untuk menjalankan kode satu baris sekaligus. Apakah anda melihat di mana kode yang salah?
        courseC_collector_prog3_c: Jika anda mempunyai masalah untuk memecahkan teka-teki ini, cobalah menulis langkah di selembar kertas.
      courseC_collector_prog3_2018_authored_hint:
        courseC_collector_prog3_a: The program will only run the blocks that are connected to the <xml><block type="when_run"/></xml> block.
        courseC_collector_prog3_b: Coba gunakan tombol "step" untuk menjalankan kode satu baris sekaligus. Apakah anda melihat di mana kode yang salah?
        courseC_collector_prog3_c: Jika anda mempunyai masalah untuk memecahkan teka-teki ini, cobalah menulis langkah di selembar kertas.
      courseC_collector_prog4_authored_hint:
        courseC_collector_prog4_a: Jika Anda terjebak, mencoba menulis langkah-langkah pada suatu selembar kertas.
        courseC_collector_prog4_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda berpikir bahwa anda belum menyelesaikan teka-teki itu.
        courseC_collector_prog4_c: Mencoba opsi ini untuk sebuah jalan.
      courseC_collector_prog4_2018_authored_hint:
        courseC_collector_prog4_a: Jika Anda terjebak, mencoba menulis langkah-langkah pada suatu selembar kertas.
        courseC_collector_prog4_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
        courseC_collector_prog4_c: Mencoba opsi ini untuk sebuah jalan.
      courseC_collector_prog5_authored_hint:
        courseC_collector_prog5_a: "\"Does it work at the first step?\nDoes it work at the second step? \nWhere do things go wrong?\""
        courseC_collector_prog5_b: Jika anda memperbaiki satu bug dan program tetap tidak bekerja, gunakan langkah-langkah di atas untuk menemukan lebih banyak bug.
        courseC_collector_prog5_c: Jika Anda terjebak, mencoba menulis langkah-langkah pada suatu selembar kertas.
        courseC_collector_prog5_d: Ikuti jalan untuk mengumpulkan harta karun.
      courseC_collector_prog5_2018_authored_hint:
        courseC_collector_prog5_a: "\"Does it work at the first step?\nDoes it work at the second step? \nWhere do things go wrong?\""
        courseC_collector_prog5_b: Jika anda memperbaiki satu bug dan program tetap tidak bekerja, gunakan langkah-langkah di atas untuk menemukan lebih banyak bug.
        courseC_collector_prog5_c: Jika Anda terjebak, mencoba menulis langkah-langkah pada suatu selembar kertas.
        courseC_collector_prog5_d: Ikuti jalan untuk mengumpulkan harta karun.
      courseC_collector_prog6_authored_hint:
        courseC_collector_prog6_a: "Can you figure out what is going wrong?  \n\nTry using the \"Step\" button to find errors by running your code line by line."
        courseC_collector_prog6_b: Terjebak? Coba jalan ini untuk mengumpulkan harta karun.
      courseC_collector_prog6_2018_authored_hint:
        courseC_collector_prog6_a: "Can you figure out what is going wrong?  \n\nTry using the \"Step\" button to find errors by running your code line by line."
        courseC_collector_prog6_b: Terjebak? Coba jalan ini untuk mengumpulkan harta karun.
      courseC_collector_prog7_authored_hint:
        courseC_collector_prog7_a: 'Sudah ada banyak kode bagus di workspace. Anda tidak perlu menghapusnya untuk memecahkan teka-teki ini.  '
        courseC_collector_prog7_b: Tidak melihat blok yang anda butuhkan agar petualang bergerak ke arah yang benar? Tarik satu dari toolbox.
        courseC_collector_prog7_c: Memilki kesulitan melihat rute untuk mengumpulkan semua harta karun? Coba jalan ini!
      courseC_collector_prog7_2018_authored_hint:
        courseC_collector_prog7_a: 'Sudah ada banyak kode bagus di workspace. Anda tidak perlu menghapusnya untuk memecahkan teka-teki ini.  '
        courseC_collector_prog7_b: Tidak melihat blok yang anda butuhkan agar petualang bergerak ke arah yang benar? Tarik satu dari toolbox.
        courseC_collector_prog7_c: Memilki kesulitan melihat rute untuk mengumpulkan semua harta karun? Coba jalan ini!
      courseC_collector_prog8_authored_hint: [ ]
      courseC_collector_prog8_2018_authored_hint: [ ]
      courseC_collector_prog9_authored_hint: [ ]
      courseC_collector_prog9_2018_authored_hint: [ ]
      courseC_collector_progA_authored_hint:
        courseC_collector_progA_a: Coba gunakan tombol "step" untuk melewati kode baris demi baris.
      courseC_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: Anda bisa menggunakan perintah `collect` lebih sering untuk mengumpulkan harta tambahan.
      courseC_collector_prog_challenge1_2018_authored_hint:
        courseC_collector_prog_challenge1_a: Anda bisa menggunakan perintah `collect` lebih sering untuk mengumpulkan harta tambahan.
      courseC_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: Anda bisa menggunakan lebih dari satu blok `collect` untuk mengumpulkan lebih dari satu kali pada setiap potongan harta.
        courseC_collector_prog_challenge1_b: Kehilangan jalan anda? Coba jalan ini untuk memecahkan teka-teki!
      courseC_collector_prog_challenge2_2018_authored_hint:
        courseC_collector_prog_challenge1_a: Anda bisa menggunakan lebih dari satu blok `collect` untuk mengumpulkan lebih dari satu kali pada setiap potongan harta.
        courseC_collector_prog_challenge1_b: Kehilangan jalan anda? Coba jalan ini untuk memecahkan teka-teki!
      courseC_external_events_authored_hint: [ ]
      courseC_flappy_events1_authored_hint:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2018_authored_hint:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events2_authored_hint:
        courseC_flappy_events2_a: 'The blok Anda perlu menambahkan disebut ` diatur speed`. '
        courseC_flappy_events2_b: Hubungkan blok `set speed` ke blok` when run` untuk memecahkan teka-teki ini.
      courseC_flappy_events2_2018_authored_hint:
        courseC_flappy_events2_a: 'The blok Anda perlu menambahkan disebut ` diatur speed`. '
        courseC_flappy_events2_b: Hubungkan blok `set speed` ke blok` when run` untuk memecahkan teka-teki ini.
      courseC_flappy_events3_authored_hint:
        courseC_flappy_events3_a: Jika sesuatu tidak bekerja dengan benar, membuat yakin Anda blok terhubung ke yang benar peristiwa di ruang kerja.
      courseC_flappy_events3_2018_authored_hint:
        courseC_flappy_events3_a: Jika sesuatu tidak bekerja dengan benar, membuat yakin Anda blok terhubung ke yang benar peristiwa di ruang kerja.
      courseC_flappy_events4_authored_hint:
        courseC_flappy_events4_a: Hubungkan `akhir game` blok untuk` ketika memukul sebuah obstacle` untuk memecahkan ini teka-teki.
      courseC_flappy_events4_2018_authored_hint:
        courseC_flappy_events4_a: Hubungkan `akhir game` blok untuk` ketika memukul sebuah obstacle` untuk memecahkan ini teka-teki.
      courseC_flappy_events5_authored_hint:
        courseC_flappy_events5_a: Anda perlu menggunakan blok `score a point` untuk melewati level ini.
      courseC_flappy_events5_2018_authored_hint:
        courseC_flappy_events5_a: Anda perlu menggunakan blok `score a point` untuk melewati level ini.
      courseC_flappy_events6_authored_hint:
        courseC_flappy_events6_a: Coba menghubungkan ` mengepakkan sebuah amount` ____ blok ke`ketik klik ` acara.
      courseC_flappy_events6_2018_authored_hint:
        courseC_flappy_events6_a: Coba menghubungkan ` mengepakkan sebuah amount` ____ blok ke`ketik klik ` acara.
      courseC_flappy_events7_authored_hint:
        courseC_flappy_events7_a: 'Anda dapat mengubah latar belakang menggunakan blok ` set adegan`. '
      courseC_flappy_events7_2018_authored_hint:
        courseC_flappy_events7_a: 'Anda dapat mengubah latar belakang menggunakan blok ` set adegan`. '
      courseC_flappy_events8_authored_hint:
        courseC_flappy_events8_a: Mencoba menghubungkan sebuah `kedua set scene` blok di bawah` ketika lulus obstacle` acara untuk lulus tingkat ini.
      courseC_flappy_events8_2018_authored_hint:
        courseC_flappy_events8_a: Mencoba menghubungkan sebuah `kedua set scene` blok di bawah` ketika lulus obstacle` acara untuk lulus tingkat ini.
      courseC_flappy_events9_authored_hint:
        courseC_flappy_events9_a: Hubungkan ` mengatur skor 0` blok ke` bila terkena suatu obstacle` acara untuk lulus tingkat ini.
      courseC_flappy_events9_2018_authored_hint:
        courseC_flappy_events9_a: Hubungkan ` mengatur skor 0` blok ke` bila terkena suatu obstacle` acara untuk lulus tingkat ini.
      courseC_flappy_events_template_authored_hint: [ ]
      courseC_flappy_events_template_2018_authored_hint: [ ]
      courseC_harvester_loops1_authored_hint:
        courseC_harvester_loops1_a: Once you have moved to a pumpkin, use <xml><block type="harvester_pumpkin"/></xml> to collect it.
        courseC_harvester_loops1_b: You can use a loop with the <xml><block type="harvester_pumpkin"/></xml> block to pick more than one pumpkin from a square.
      courseC_harvester_loops10_authored_hint: [ ]
      courseC_harvester_loops10_2018_authored_hint: [ ]
      courseC_harvester_loops11_authored_hint: [ ]
      courseC_harvester_loops11_2018_authored_hint: [ ]
      courseC_harvester_loops1_2018_authored_hint:
        courseC_harvester_loops1_a: Once you have moved to a pumpkin, use <xml><block type="harvester_pumpkin"/></xml> to collect it.
        courseC_harvester_loops1_b: You can use a loop with the <xml><block type="harvester_pumpkin"/></xml> block to pick more than one pumpkin from a square.
      courseC_harvester_loops2_authored_hint:
        courseC_harvester_loops2_a: Jika Anda terjebak, cobalah menulis langkah di atas kertas dan mencari pola berulang.
        courseC_harvester_loops2_b: Anda akan membutuhkan satu ` ulangi ` lingkaran demi satu.
        courseC_harvester_loops2_c: Satu loop akan mengulangi perintah ` move forward`, dan yang lainnya akan mengulangi perintah` pick pumpkin`.
      courseC_harvester_loops2_2018_authored_hint:
        courseC_harvester_loops2_a: Jika Anda terjebak, cobalah menulis langkah di atas kertas dan mencari pola berulang.
        courseC_harvester_loops2_b: Anda akan membutuhkan satu ` ulangi ` lingkaran demi satu.
        courseC_harvester_loops2_c: Satu loop akan mengulangi perintah ` move forward`, dan yang lainnya akan mengulangi perintah` pick pumpkin`.
      courseC_harvester_loops3_authored_hint:
        courseC_harvester_loops3_a: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseC_harvester_loops3_b: Untuk labu pertama, anda bisa menggunakan kode yang sangat mirip dengan teka-teki terakhir. Cara mana yang harus anda lakukan setelah itu?
        courseC_harvester_loops3_c: Jika Anda ingin menyederhanakan kode Anda, Anda sebenarnya bisa memasukkan satu lingkaran ke dalam lingkaran yang lain! Ini disebut sebuah bersarang ** lingkaran **.
      courseC_harvester_loops3_2018_authored_hint:
        courseC_harvester_loops3_a: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseC_harvester_loops3_b: Untuk labu pertama, anda bisa menggunakan kode yang sangat mirip dengan teka-teki terakhir. Cara mana yang harus anda lakukan setelah itu?
        courseC_harvester_loops3_c: Jika Anda ingin menyederhanakan kode Anda, Anda sebenarnya bisa memasukkan satu lingkaran ke dalam lingkaran yang lain! Ini disebut sebuah bersarang ** lingkaran **.
      courseC_harvester_loops4_authored_hint:
        courseC_harvester_loops4_a: Gunakan blok `ambil jagung` baru untuk mengumpulkan jagung.
        courseC_harvester_loops4_b: Anda dapat menggunakan beberapa loop berulang dalam kode Anda, beberapa untuk memilih jagung dan beberapa untuk memilih labu.
        courseC_harvester_loops4_c: Jika Anda ingin menyederhanakan kode Anda, Anda sebenarnya bisa memasukkan satu lingkaran ke dalam lingkaran yang lain! Ini disebut sebuah bersarang ** lingkaran **.
      courseC_harvester_loops4_2018_authored_hint:
        courseC_harvester_loops4_a: Gunakan blok `ambil jagung` baru untuk mengumpulkan jagung.
        courseC_harvester_loops4_b: Anda dapat menggunakan beberapa loop berulang dalam kode Anda, beberapa untuk memilih jagung dan beberapa untuk memilih labu.
        courseC_harvester_loops4_c: Jika Anda ingin menyederhanakan kode Anda, Anda sebenarnya bisa memasukkan satu lingkaran ke dalam lingkaran yang lain! Ini disebut sebuah bersarang ** lingkaran **.
      courseC_harvester_loops5_authored_hint:
        courseC_harvester_loops5_a: Jika Anda terjebak, cobalah menggambar keseluruhan program dan kemudian mencari pola pengulangan.
        courseC_harvester_loops5_b: Apakah langkah tangga ini terlihat familier dari teka-teki lain? Gerakannya harus serupa, ingatlah untuk mengumpulkan hasil panen di sepanjang jalan.
      courseC_harvester_loops5_2018_authored_hint:
        courseC_harvester_loops5_a: Jika Anda terjebak, cobalah menggambar keseluruhan program dan kemudian mencari pola pengulangan.
        courseC_harvester_loops5_b: Apakah langkah tangga ini terlihat familier dari teka-teki lain? Gerakannya harus serupa, ingatlah untuk mengumpulkan hasil panen di sepanjang jalan.
      courseC_harvester_loops6_authored_hint:
        courseC_harvester_loops6_a: Ingat Anda dapat menempatkan beberapa blok dalam satu lingkaran berulang.
        courseC_harvester_loops6_b: Jangan lupa berbelok di ujung deret jagung.
      courseC_harvester_loops6_2018_authored_hint:
        courseC_harvester_loops6_a: Ingat Anda dapat menempatkan beberapa blok dalam satu lingkaran berulang.
        courseC_harvester_loops6_b: Jangan lupa berbelok di ujung deret jagung.
      courseC_harvester_loops7_authored_hint:
        courseC_harvester_loops7_a: Anda dapat memecahkan teka-teki ini dengan dua cara, antara mendapatkan jagung atau labu terlebih dahulu.
        courseC_harvester_loops7_b: Anda akan perlu beberapa ' ulangi ' loop untuk memecahkan ini teka-teki.
      courseC_harvester_loops7_2018_authored_hint:
        courseC_harvester_loops7_a: Anda dapat memecahkan teka-teki ini dengan dua cara, antara mendapatkan jagung atau labu terlebih dahulu.
        courseC_harvester_loops7_b: Anda akan perlu beberapa ' ulangi ' loop untuk memecahkan ini teka-teki.
      courseC_harvester_loops8_authored_hint:
        courseC_harvester_loops8_a: Apakah langkah tangga ini terlihat familiar dari teka-teki sebelumnya? Gerakannya harus serupa, ingatlah untuk mengumpulkan hasil panen di sepanjang jalan.
        courseC_harvester_loops8_b: Jika Anda ingin menyederhanakan kode Anda lebih banyak, Anda benar-benar bisa memasukkan satu lingkaran `ulangi` di dalam yang lain! Ini disebut sebuah bersarang ** lingkaran **.
      courseC_harvester_loops8_2018_authored_hint:
        courseC_harvester_loops8_a: Apakah langkah tangga ini terlihat familiar dari teka-teki sebelumnya? Gerakannya harus serupa, ingatlah untuk mengumpulkan hasil panen di sepanjang jalan.
        courseC_harvester_loops8_b: Jika Anda ingin menyederhanakan kode Anda lebih banyak, Anda benar-benar bisa memasukkan satu lingkaran `ulangi` di dalam yang lain! Ini disebut sebuah bersarang ** lingkaran **.
      courseC_harvester_loops9_authored_hint: [ ]
      courseC_harvester_loops9_2018_authored_hint: [ ]
      courseC_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: Ini terlalu keras tanpa loop!
        courseC_harvester_loops_challenge1_b: Anda bisa mengulang ` bergerak maju` dan`memilih sudut ` sebanyak yang Anda butuhkan, lalu belok kanan di setiap sudut.
        courseC_harvester_loops_challenge1_c: |-
          The best way to collect the first four corn uses a `repeat` block inside of another `repeat` block. You can use this pattern for the rest of the puzzle too!
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge1a_authored_hint:
        courseC_harvester_loops_challenge1_a: Ini terlalu keras tanpa loop!
        courseC_harvester_loops_challenge1_b: Anda bisa mengulang ` bergerak maju` dan`memilih sudut ` sebanyak yang Anda butuhkan, lalu belok kanan di setiap sudut.
        courseC_harvester_loops_challenge1_c: |-
          The best way to collect the corn in the middle uses a `repeat` block inside of another `repeat` block.
          
          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseC_harvester_loops_challenge1a_2018_authored_hint:
        courseC_harvester_loops_challenge1_a: Ini terlalu keras tanpa loop!
        courseC_harvester_loops_challenge1_b: Anda bisa mengulang ` bergerak maju` dan`memilih sudut ` sebanyak yang Anda butuhkan, lalu belok kanan di setiap sudut.
        courseC_harvester_loops_challenge1_c: |-
          The best way to collect the corn in the middle uses a `repeat` block inside of another `repeat` block.
          
          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseC_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_a: Satu cara untuk memecahkan ini terlihat seperti sebuah zig-zag. Cara lain terlihat seperti sebuah spiral! Terdapat banyak solusi berbeda untuk teka-teki seperti ini. Gigih lah!
        courseC_harvester_loops_challenge2_b: Anda bisa mengulang ` bergerak maju` dan` memilih lettuce` sebanyak yang Anda butuhkan, lalu belok di setiap sudut.
        courseC_harvester_loops_challenge2_c: |
          This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!
          
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          This spiral pattern can be coded with just 18 blocks!
          
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      courseC_harvester_loops_challenge2_2018_authored_hint:
        courseC_harvester_loops_challenge2_a: Satu cara untuk memecahkan ini terlihat seperti sebuah zig-zag. Cara lain terlihat seperti sebuah spiral! Terdapat banyak solusi berbeda untuk teka-teki seperti ini. Gigih lah!
        courseC_harvester_loops_challenge2_b: Anda bisa mengulang ` bergerak maju` dan` memilih lettuce` sebanyak yang Anda butuhkan, lalu belok di setiap sudut.
        courseC_harvester_loops_challenge2_c: |
          This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!
          
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          This spiral pattern can be coded with just 18 blocks!
          
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      courseC_harvester_loops_forVid_authored_hint: [ ]
      courseC_maze_debugging1_authored_hint:
        courseC_maze_debugging1_a: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging1_b: Ada 1 blok yang perlu ditambahkan untuk melengkapi teka-teki ini.
      courseC_maze_debugging1_2018_authored_hint:
        courseC_maze_debugging1_a: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging1_b: Ada 1 blok yang perlu ditambahkan untuk melengkapi teka-teki ini.
      courseC_maze_debugging2_authored_hint:
        courseC_maze_debugging2_a: Ada banyak kode berharga di ruang kerja. Jangan hanya menghapus semuanya dan memulai lagi dari awal!
        courseC_maze_debugging2_b: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging2_c: Tidak tahu apa yang salah? Coba jalankan kode beberapa kali untuk melihat apa yang terjadi.
      courseC_maze_debugging2_2018_authored_hint:
        courseC_maze_debugging2_a: Ada banyak kode berharga di ruang kerja. Jangan hanya menghapus semuanya dan memulai lagi dari awal!
        courseC_maze_debugging2_b: |-
          - Does everything work after the first step?
          - Does it still work after the second?
          - Where does it go wrong?
        courseC_maze_debugging2_c: Tidak tahu apa yang salah? Coba jalankan kode beberapa kali untuk melihat apa yang terjadi.
      courseC_maze_debugging3_authored_hint:
        courseC_maze_debugging3_a: |-
          To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.
          
          Drag the block you want to delete back to the toolbox.
          
          Finally, put your other blocks back where they belong.
          
          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Tidak tahu apa yang salah? Coba jalankan kode beberapa kali untuk melihat apa yang terjadi.
      courseC_maze_debugging3_2018_authored_hint:
        courseC_maze_debugging3_a: |-
          To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.
          
          Drag the block you want to delete back to the toolbox.
          
          Finally, put your other blocks back where they belong.
          
          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: Tidak tahu apa yang salah? Coba jalankan kode beberapa kali untuk melihat apa yang terjadi.
      courseC_maze_debugging4_authored_hint:
        courseC_maze_debugging4_a: Gunakan tombol "step" untuk menjalankan instruksi satu per satu. Apakah itu membantu anda menemukan garis di mana ada yang salah?
        courseC_maze_debugging4_b: Salah satu belokannya membuat Scrat masuk ke arah yang salah. Bisakah kamu mencari tahu yang mana?
      courseC_maze_debugging4_2018_authored_hint:
        courseC_maze_debugging4_a: Gunakan tombol "step" untuk menjalankan instruksi satu per satu. Apakah itu membantu anda menemukan garis di mana ada yang salah?
        courseC_maze_debugging4_b: Salah satu belokannya membuat Scrat masuk ke arah yang salah. Bisakah kamu mencari tahu yang mana?
      courseC_maze_debugging5_authored_hint:
        courseC_maze_debugging5_a: "There are lots of helpful blocks in the workspace already.  Don't delete them all! \n\nUse the \"Step\" button to go through and figure out where the code goes wrong."
        courseC_maze_debugging5_b: Coba katakan apa yang harus dilakukan Scrat dengan suara keras. Apakah sama seperti kode di workspace? Apa yang salah?
      courseC_maze_debugging5_2018_authored_hint:
        courseC_maze_debugging5_a: "There are lots of helpful blocks in the workspace already.  Don't delete them all! \n\nUse the \"Step\" button to go through and figure out where the code goes wrong."
        courseC_maze_debugging5_b: Coba katakan apa yang harus dilakukan Scrat dengan suara keras. Apakah sama seperti kode di workspace? Apa yang salah?
      courseC_maze_debugging6_authored_hint:
        courseC_maze_debugging6_a: |-
          - What is Scrat supposed to do?
          - What does Scrat do?
          - What does that tell you?
        courseC_maze_debugging6_b: |-
          Setelah Anda menemukan dan tetap yang pertama bug, melalui proses debugging lagi untuk menemukan yang kedua. Ulangi proses sampai program bekerja!
      courseC_maze_debugging6_2018_authored_hint:
        courseC_maze_debugging6_a: |-
          - What is Scrat supposed to do?
          - What does Scrat do?
          - What does that tell you?
        courseC_maze_debugging6_b: |-
          Setelah Anda menemukan dan tetap yang pertama bug, melalui proses debugging lagi untuk menemukan yang kedua. Ulangi proses sampai program bekerja!
      courseC_maze_debugging7_authored_hint:
        courseC_maze_debugging7_a: |-
          - Does everything work at the first step?
          - How about the second step?
          - Where does it go wrong?
        courseC_maze_debugging7_b: Jangan lupa gunakan tombol "Step" untuk menjalankan program baris demi baris!
        courseC_maze_debugging7_c: |-
          Setelah menemukan dan memperbaiki bug pertama, pastikan untuk menggunakan proses debug lagi untuk menemukan yang berikutnya.
          Ulangi proses debug sampai program bekerja!
      courseC_maze_debugging7_2018_authored_hint:
        courseC_maze_debugging7_a: |-
          - Does everything work at the first step?
          - How about the second step?
          - Where does it go wrong?
        courseC_maze_debugging7_b: Jangan lupa gunakan tombol "Step" untuk menjalankan program baris demi baris!
        courseC_maze_debugging7_c: |-
          Setelah menemukan dan memperbaiki bug pertama, pastikan untuk menggunakan proses debug lagi untuk menemukan yang berikutnya.
          Ulangi proses debug sampai program bekerja!
      courseC_maze_debugging8_authored_hint:
        courseC_maze_debugging8_a: |-
          - What is Scrat supposed to do?
          - What does Scrat do?
          - What does that tell you?
      courseC_maze_debugging8_predict1_authored_hint: [ ]
      courseC_maze_debugging8_predict1_2018_authored_hint: [ ]
      courseC_maze_debugging9_authored_hint: [ ]
      courseC_maze_debugging9_2018_authored_hint: [ ]
      courseC_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: Kiri atau kanan? Terserah kamu!
        courseC_maze_debugging_challenge1_b: Scrat jalan adalah bentuk sebuah persegi panjang! Dia perlu mengubah cara yang sama setiap waktu!
        courseC_maze_debugging_challenge1_c: Jika Anda terjebak, Anda dapat selalu memulai dari awal, atau menghapus semua kode dan menemukan caranya sendiri!
      courseC_maze_debugging_challenge1_2018_authored_hint:
        courseC_maze_debugging_challenge1_a: Kiri atau kanan? Terserah kamu!
        courseC_maze_debugging_challenge1_b: Scrat jalan adalah bentuk sebuah persegi panjang! Dia perlu mengubah cara yang sama setiap waktu!
        courseC_maze_debugging_challenge1_c: Jika Anda terjebak, Anda dapat selalu memulai dari awal, atau menghapus semua kode dan menemukan caranya sendiri!
      courseC_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_b: Jika Anda terjebak, coba debug kode. Di mana tidak itu salah?
        courseC_maze_debugging_challenge2_c: |-
          There are two different paths you can follow by just moving forward and turning four times. If you find one way to use a loop, there may be even more!
          
          ![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      courseC_maze_debugging_challenge2_2018_authored_hint:
        courseC_maze_debugging_challenge2_b: Jika Anda terjebak, coba debug kode. Di mana tidak itu salah?
        courseC_maze_debugging_challenge2_c: |-
          There are two different paths you can follow by just moving forward and turning four times. If you find one way to use a loop, there may be even more!
          
          ![](https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      courseC_maze_loops10_authored_hint: [ ]
      courseC_maze_loops10_predict2_authored_hint: [ ]
      courseC_maze_loops11_authored_hint: [ ]
      courseC_maze_loops2_authored_hint:
        courseC_maze_loops2_a: Anda bisa memecahkan teka-teki ini hanya dengan tiga blok, termasuk `when run`.
        courseC_maze_loops2_b: Coba masukkan blok `move forward` ke dalam blok` repeat` untuk membuat satu loop.
        courseC_maze_loops2_c: Anda perlu mengulangi perintah `move forward` 5 kali untuk memecahkan teka-teki ini.
      courseC_maze_loops2_predict1_authored_hint:
        courseC_maze_loops2_a: Anda bisa memecahkan teka-teki ini hanya dengan tiga blok, termasuk `when run`.
        courseC_maze_loops2_b: Coba masukkan blok `move forward` ke dalam blok` repeat` untuk membuat satu loop.
        courseC_maze_loops2_c: Anda perlu mengulangi perintah `move forward` 5 kali untuk memecahkan teka-teki ini.
      courseC_maze_loops3_authored_hint:
        courseC_maze_loops3_a: Teka-teki ini sangat mirip dengan yang terakhir.
        courseC_maze_loops3_b: Gunakan blok `repeat 5 times` untuk membuat loop.
      courseC_maze_loops4_authored_hint:
        courseC_maze_loops4_a: Tidak semua blok perintah harus diulang.
        courseC_maze_loops4_b: Gunakan dua blok `repeat` yang disetel ke nomor yang berbeda.
        courseC_maze_loops4_c: "`Belok kanan` sekali di antara dua loop."
      courseC_maze_loops5_authored_hint:
        courseC_maze_loops5_a: Solusi terbaik menggunakan dua perintah `move forward` dan satu loop.
      courseC_maze_loops6_authored_hint:
        courseC_maze_loops6_a: Jika pola itu sulit dilihat, cobalah mengkodekan semuanya terlebih dahulu dan lihat berulang-ulang sebelum anda memasukkan loop.
        courseC_maze_loops6_b: "Untuk menempatkan banyak blok ke dalam loop 'ulang', hanya tarik loop keluar menuju ruang kerja, kemudian tarik semua blok dari program awal itu.  Menghubungkan kembali semua ke blok 'ketika menjalankan' dan anda aman untuk pergi!"
      courseC_maze_loops7_authored_hint:
        courseC_maze_loops7_a: Jika pola sulit untuk dilihat, cobalah semua pengkodean pertama dan lihat apakah ulang lagi dan lagi sebelum anda memasukkan loop.
      courseC_maze_loops8_authored_hint:
        courseC_puppy_loops8courseC_maze_loops8_a: Coba pikirkan tentang masalah ini di bagian kecil. Gunakan waktumu. Anda tidak perlu menyelesaikannya pada percobaan pertama!
        courseC_puppy_loops8courseC_maze_loops8_b: Paruh pertama jalan ini mirip dengan tangga dari teka-teki terakhir, tapi ia menuju ke arah yang berbeda.
        courseC_puppy_loops8courseC_maze_loops8_c: "Ada berbagai cara untuk mengatasinya. \nAnda akan ingin menggunakan setidaknya dua loop, dan mengulang satu set tindakan di langkah pertama, kemudian satu `move forward` di sisi lain."
      courseC_maze_loops9_authored_hint:
        courseC_maze_loops9_1: 'Jika anda mengalami masalah saat menemukan di mana kode harus diulang, cobalah menuliskannya di selembar kertas dan mencari sebuah pola. '
      courseC_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_a: Pikirkan jalan ini sebagai tiga bagian yang berbeda. Masing-masing mempunyai pola yang dapat anda ulangi.
        courseC_maze_loops_challenge1_b: Di antara setiap blok `repeat`, anda akan perlu` belok kiri` atau `belok kanan` untuk mencari Scrat untuk pola selanjutnya.
      courseC_maze_loops_challenge1a_authored_hint:
        courseC_maze_loops_challenge1_a: Pikirkan jalan ini sebagai dua bagian yang berbeda. Masing-masing mempunyai pola yang dapat anda ulangi.
        courseC_maze_loops_challenge1_b: Dapatkah Anda ingat bagaimana menggunakan loop untuk mengulang suatu pola tangga?
      courseC_maze_loops_challenge1a_2018_authored_hint:
        courseC_maze_loops_challenge1_a: Pikirkan jalan ini sebagai dua bagian yang berbeda. Masing-masing mempunyai pola yang dapat anda ulangi.
        courseC_maze_loops_challenge1_b: Dapatkah Anda ingat bagaimana menggunakan loop untuk mengulang suatu pola tangga?
      courseC_maze_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_a: Kode asli akan berhasil - jika hanya ada satu harta karun di setiap tumpukan!
        courseC_maze_loops_challenge2_b: Gunakan loop sehingga Anda tidak kehabisan `mengumpulkan` blok!
      courseC_maze_programming1_authored_hint:
        courseC_maze_programming1_0: Pastikan semua blok telah sepenuhnya bentak bersama, lalu klik "Run" lagi.
      courseC_maze_programming1_2018_authored_hint:
        courseC_maze_programming1_0: Pastikan semua blok telah sepenuhnya bentak bersama, lalu klik "Run" lagi.
      courseC_maze_programming2_authored_hint:
        courseC_maze_programming2_a: To use a <xml><block type="maze_moveForward"/></xml> block, drag it out of the toolbox and snap it to the <xml><block type="when_run"/></xml> block.
        courseC_maze_programming2_b: Pastikan semua blok telah sepenuhnya bentak bersama, lalu klik "Run" lagi.
      courseC_maze_programming2_2018_authored_hint:
        courseC_maze_programming2_a: To use a <xml><block type="maze_moveForward"/></xml> block, drag it out of the toolbox and snap it to the <xml><block type="when_run"/></xml> block.
        courseC_maze_programming2_b: Pastikan semua blok telah sepenuhnya bentak bersama, lalu klik "Run" lagi.
      courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: Coba jalankan kode terlebih dahulu untuk melihat dimana yang salah.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          
          To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.
          
          Drag the block you want to delete back to the toolbox.
          
          Finally, put your other blocks back where they belong.
      courseC_maze_programming3_2018_authored_hint:
        courseC_maze_programming3_a: Coba jalankan kode terlebih dahulu untuk melihat dimana yang salah.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          
          To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.
          
          Drag the block you want to delete back to the toolbox.
          
          Finally, put your other blocks back where they belong.
      courseC_maze_programming4_authored_hint:
        courseC_maze_programming4_a: Ingatlah bahwa ketika anda berbalik, anda beralih dari sudut pandang *birt's*. Jika anda berbelok ke kanan, burung akan menunjuk ke bawah.
        courseC_maze_programming4_b: |-
          To follow the path:
          - move forward
          - turn one way
          - move forward
          - turn back the other way
          - move forward
      courseC_maze_programming4_2018_authored_hint:
        courseC_maze_programming4_a: Ingatlah bahwa ketika anda berbalik, anda beralih dari sudut pandang *birt's*. Jika anda berbelok ke kanan, burung akan menunjuk ke bawah.
        courseC_maze_programming4_b: |-
          To follow the path:
          - move forward
          - turn one way
          - move forward
          - turn back the other way
          - move forward
      courseC_maze_programming5_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: Burung itu perlu membuat satu putaran untuk menyelesaikan teka-teki ini. Bisakah anda mencari tahu ke arah mana?
        courseC_maze_programming5_c: Solusinya akan memiliki dua blok 'move forward`, belokan, dan dua blok' move forward` lagi.
      courseC_maze_programming5_2018_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: Burung itu perlu membuat satu putaran untuk menyelesaikan teka-teki ini. Bisakah anda mencari tahu ke arah mana?
        courseC_maze_programming5_c: Solusinya akan memiliki dua blok 'move forward`, belokan, dan dua blok' move forward` lagi.
      courseC_maze_programming6_authored_hint:
        courseC_maze_programming6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseC_maze_programming6_b: Ikuti jari anda dari burung ke babi, langkah mana yang anda ambil?
        courseC_maze_programming6_c: Ingat pertama Anda harus mengubah, sejak burung mulai menghadapi sebuah dinding.
        courseC_maze_programming6_d: Merasa terjebak? Lihatlah jalan ini!
      courseC_maze_programming6_2018_authored_hint:
        courseC_maze_programming6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseC_maze_programming6_b: Ikuti jari anda dari burung ke babi, langkah mana yang anda ambil?
        courseC_maze_programming6_c: Ingat pertama Anda harus mengubah, sejak burung mulai menghadapi sebuah dinding.
        courseC_maze_programming6_d: Merasa terjebak? Lihatlah jalan ini!
      courseC_maze_programming7_authored_hint:
        courseC_maze_programming7_a: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseC_maze_programming7_b: Jika anda mempunyai masalah untuk memecahkan teka-teki ini, cobalah menulis langkah di selembar kertas.
      courseC_maze_programming7_2018_authored_hint:
        courseC_maze_programming7_a: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseC_maze_programming7_b: Jika anda mempunyai masalah untuk memecahkan teka-teki ini, cobalah menulis langkah di selembar kertas.
      courseC_maze_programming8_authored_hint:
        courseC_maze_programming8_a: Ingat Anda bisa menggunakan tombol "Langkah" untuk melihat-lihat kode Anda secara garis demi garis jika Anda terjebak.
        courseC_maze_programming8_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseC_maze_programming8_2018_authored_hint:
        courseC_maze_programming8_a: Ingat Anda bisa menggunakan tombol "Langkah" untuk melihat-lihat kode Anda secara garis demi garis jika Anda terjebak.
        courseC_maze_programming8_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseC_maze_programming8_predict1_authored_hint: [ ]
      courseC_maze_programming8_predict1_2018_authored_hint: [ ]
      courseC_maze_programming9_authored_hint: [ ]
      courseC_maze_programming9_2018_authored_hint: [ ]
      courseC_maze_programming_challenge1_authored_hint:
        courseC_maze_programming_challenge1_a: "Ada banyak cara untuk sampai ke babi. \nGunakan jari Anda untuk menemukan sebuah jalan program itu!"
      courseC_maze_programming_challenge1_2018_authored_hint:
        courseC_maze_programming_challenge1_a: "Ada banyak cara untuk sampai ke babi. \nGunakan jari Anda untuk menemukan sebuah jalan program itu!"
      courseC_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: '* " Jika Anda mengirim saya mundur, berhati-hatilah agar saya mengubah jalan yang benar!" *'
        courseC_maze_programming_challenge2_b: |-
          The shortest solution uses only 5 blocks, but it uses this block:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018_authored_hint:
        courseC_maze_programming_challenge2_a: '* " Jika Anda mengirim saya mundur, berhati-hatilah agar saya mengubah jalan yang benar!" *'
        courseC_maze_programming_challenge2_b: |-
          The shortest solution uses only 5 blocks, but it uses this block:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_playLab_embedded_authored_hint: [ ]
      courseC_puppy_loops10_authored_hint:
        courseC_puppy_loops9_1: Saya perlu memindahkan dua atau tiga kali di antara setiap belokan.
      courseC_puppy_loops11_authored_hint: [ ]
      courseC_puppy_loops8_authored_hint:
        2-3_Maze_Loops_17_a: Coba pikirkan tentang masalah ini di bagian kecil. Gunakan waktumu. Anda tidak perlu menyelesaikannya pada percobaan pertama!
        2-3_Maze_Loops_17_b: Paruh pertama jalan ini mirip dengan tangga langkah dari teka-teki terakhir, tapi ia pergi ke arah yang berbeda.
        courseC_puppy_loops8_c: Ada berbagai cara untuk mengatasinya. Anda akan ingin menggunakan setidaknya dua loop, dan mengulangi satu set tindakan atau satu gerakan.
      courseC_puppy_loops8courseC_maze_loops8_authored_hint:
        courseC_puppy_loops8courseC_maze_loops8_a: Coba pikirkan tentang masalah ini di bagian kecil. Gunakan waktumu. Anda tidak perlu menyelesaikannya pada percobaan pertama!
        courseC_puppy_loops8courseC_maze_loops8_b: Paruh pertama jalan ini mirip dengan tangga dari teka-teki terakhir, tetapi ia menuju ke arah yang berbeda.
        courseC_puppy_loops8courseC_maze_loops8_c: "Ada berbagai cara untuk mengatasinya. \nAnda akan ingin menggunakan setidaknya dua loop, dan mengulang satu set tindakan di langkah pertama, kemudian satu `move forward` di sisi lain."
      courseC_puppy_loops9_authored_hint:
        courseC_puppy_loops9_1: Jika anda mengulangi beberapa tindakan pertama, anda bisa membawa saya ke babi hanya dengan empat blok lagi!
      courseC_starWars_loops1_authored_hint:
        courseC_starWars_loops1_a: Saat BB-8 berguling besi bekas dia mengambilnya secara otomatis.
        courseC_starWars_loops1_b: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseC_starWars_loops1_c: Anda akan ' bergerak maju' lima kali untuk memecahkan teka-teki ini.
      courseC_starWars_loops10_authored_hint:
        courseC_starWars_loops10_a: Tidak pola ini terlihat seperti sebuah raksasa set dari anak tangga? Lihat apakah Anda bisa menggunakan apa yang Anda pelajari dari puzzle sebelumnya untuk mendapatkan semua belokan.
        courseC_starWars_loops10_b: "Jika Anda ingin menggunakan kode kurang, Anda dapat menempatkan satu ` ulangi ` lingkaran dalam yang lain!    \nIni disebut sebuah bersarang ** lingkaran **."
        courseC_starWars_loops10_c: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseC_starWars_loops10_2018_authored_hint:
        courseC_starWars_loops10_a: Tidak pola ini terlihat seperti sebuah raksasa set dari anak tangga? Lihat apakah Anda bisa menggunakan apa yang Anda pelajari dari puzzle sebelumnya untuk mendapatkan semua belokan.
        courseC_starWars_loops10_b: "Jika Anda ingin menggunakan kode kurang, Anda dapat menempatkan satu ` ulangi ` lingkaran dalam yang lain!    \nIni disebut sebuah bersarang ** lingkaran **."
        courseC_starWars_loops10_c: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseC_starWars_loops10_predict2_authored_hint: [ ]
      courseC_starWars_loops10_predict2_2018_authored_hint: [ ]
      courseC_starWars_loops11_authored_hint: [ ]
      courseC_starWars_loops11_2018_authored_hint: [ ]
      courseC_starWars_loops1_2018_authored_hint:
        courseC_starWars_loops1_a: Saat BB-8 berguling besi bekas dia mengambilnya secara otomatis.
        courseC_starWars_loops1_b: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseC_starWars_loops1_c: Anda akan ' bergerak maju' lima kali untuk memecahkan teka-teki ini.
      courseC_starWars_loops2_authored_hint:
        courseC_starWars_loops2_a: Untuk mengulang kode, seret sebuah loop `repeat`, kemudian letakkan blok yang anda inginkan di dalamnya.
      courseC_starWars_loops2_2018_authored_hint:
        courseC_starWars_loops2_a: Untuk mengulang kode, seret sebuah loop `repeat`, kemudian letakkan blok yang anda inginkan di dalamnya.
      courseC_starWars_loops4_authored_hint:
        courseC_starWars_loops4_c: Mengklik panah kecil di samping "kiri" di blok putar akan membiarkan Anda mengubahnya menjadi "benar".
        courseC_starWars_loops4_a: Gunakan dua ` ulangi ` blok.
        courseC_starWars_loops4_b: 'Setiap ` mengulangi ` lingkaran akan memilih satu perintah di dalamnya: ` bergerak meneruskan `.'
      courseC_starWars_loops4_2018_authored_hint:
        courseC_starWars_loops4_c: Mengklik panah kecil di samping "kiri" di blok putar akan membiarkan Anda mengubahnya menjadi "benar".
        courseC_starWars_loops4_a: Gunakan dua ` ulangi ` blok.
        courseC_starWars_loops4_b: 'Setiap ` mengulangi ` lingkaran akan memilih satu perintah di dalamnya: ` bergerak meneruskan `.'
      courseC_starWars_loops5_authored_hint:
        courseC_starWars_loops5_b: Untuk bergerak ke bawah, Anda harus berbalik dan kemudian bergerak maju.
        courseC_starWars_loops5_a: Solusi terbaik menggunakan sebuah gilirannya, kemudian satu tunggal ` langkah meneruskan `, giliran lain, makan satu lingkaran.
      courseC_starWars_loops5_2018_authored_hint:
        courseC_starWars_loops5_b: Untuk bergerak ke bawah, Anda harus berbalik dan kemudian bergerak maju.
        courseC_starWars_loops5_a: Solusi terbaik menggunakan sebuah gilirannya, kemudian satu tunggal ` langkah meneruskan `, giliran lain, makan satu lingkaran.
      courseC_starWars_loops6_authored_hint:
        courseC_starWars_loops6_a: Mencoba menulis semua bergerak di atas sebuah kertas dan mencari sebuah pola.
        courseC_starWars_loops6_b: "Jika Anda ingin menggunakan kode kurang, Anda dapat menempatkan satu ` ulangi ` lingkaran dalam yang lain!    \nIni disebut sebuah bersarang ** lingkaran **."
      courseC_starWars_loops6_2018_authored_hint:
        courseC_starWars_loops6_a: Mencoba menulis semua bergerak di atas sebuah kertas dan mencari sebuah pola.
        courseC_starWars_loops6_b: "Jika Anda ingin menggunakan kode kurang, Anda dapat menempatkan satu ` ulangi ` lingkaran dalam yang lain!    \nIni disebut sebuah bersarang ** lingkaran **."
      courseC_starWars_loops7_authored_hint:
        courseC_starWars_loops7_a: Pola ini terlihat lebih keras dari itu! Mulailah dengan sebuah langkah tangga sederhana. Apakah itu mencakup semua logam bekas?
        courseC_starWars_loops7_b: Jika anda mempunyai masalah dengan teka-teki ini, cobalah menulis semua langkah di selembar kertas dan mencari sebuah pola.
        courseC_starWars_loops7_c: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseC_starWars_loops7_2018_authored_hint:
        courseC_starWars_loops7_a: Pola ini terlihat lebih keras dari itu! Mulailah dengan sebuah langkah tangga sederhana. Apakah itu mencakup semua logam bekas?
        courseC_starWars_loops7_b: Jika anda mempunyai masalah dengan teka-teki ini, cobalah menulis semua langkah di selembar kertas dan mencari sebuah pola.
        courseC_starWars_loops7_c: Jangan takut untuk membuat kesalahan! Jalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseC_starWars_loops8_authored_hint:
        course_starWars_loops8_a: Coba pikirkan tentang masalah ini di bagian kecil. Gunakan waktumu. Anda tidak perlu menyelesaikannya pada percobaan pertama!
        course_starWars_loops8_b: Pikirkan bagian pertama dari masalah ini sebagai masalah langkah tangga. Bagaimana anda mengatasinya sebelumnya?
        course_starWars_loops8_c: |-
          Take a look at this path.
          
          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018_authored_hint:
        course_starWars_loops8_a: Coba pikirkan tentang masalah ini di bagian kecil. Gunakan waktumu. Anda tidak perlu menyelesaikannya pada percobaan pertama!
        course_starWars_loops8_b: Pikirkan bagian pertama dari masalah ini sebagai masalah langkah tangga. Bagaimana anda mengatasinya sebelumnya?
        course_starWars_loops8_c: |-
          Take a look at this path.
          
          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9_authored_hint:
        course_starWars_loops9_b: Anda bisa memasukkan lebih dari satu blok ke dalam loop `repeat`.
        course_starWars_loops9_c: |-
          You do not need to turn left to solve this puzzle. All of your turns can be to the right.
          
          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018_authored_hint:
        course_starWars_loops9_b: Anda bisa memasukkan lebih dari satu blok ke dalam loop `repeat`.
        course_starWars_loops9_c: |-
          You do not need to turn left to solve this puzzle. All of your turns can be to the right.
          
          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_Frozen_nested1_authored_hint:
        courseD_artist_project1_a: Gunakan menu drop down pada blok `ubah` untuk memilih sudut yang Anda butuhkan!
        courseD_artist_project1_b: Ingat bahwa `move forward` menarik garis, sementara`jump forward` tidak.
      courseD_Frozen_nested2_authored_hint:
        courseD_artist_project2_a: Ingat bahwa `move forward` menarik garis, sementara`jump forward` tidak.
        courseD_artist_project2_b: Setelah Anda menarik dan bergerak yang pertama kalinya, Anda dapat mengulangi kode dengan menambahkan sebuah lingkaran di sekitar luar.
      courseD_Frozen_nested3_authored_hint:
        courseD_artist_project3_a: Gunakan menu drop down pada blok `ubah` untuk memilih sudut yang Anda butuhkan!
        courseD_artist_project3_b: "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n- Try 72 degrees if you are repeating the outer loop 5 times\n- Try 60 degrees if you are repeating the outer loop 6 times"
      courseD_Frozen_nested4_authored_hint:
        courseD_artist_project4_a: |
          Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:
          
          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />
          
          
          Here's a set of hexagons with squares:
          
          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Untuk mencoba ini, tariklah kepingan salju pertama anda, belilah, kemudian tariklah kepingan salju kedua.
      courseD_Frozen_nested5_authored_hint:
        courseD_artist_project4_a: |
          Lines of 2 hexagons and 4 triangles:
          
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_Frozen_nested6_authored_hint:
        courseD_artist_project1a_a: |
          This stair step uses a 76 degree turn and repeats 4 times.
          
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Pola-pola ini banyak seperti anak tangga dari teka-teki lain, tetapi menggunakan sebuah sudut yang berbeda.
      courseD_Frozen_nested7_authored_hint:
        courseD_artist_project2a_a: |
          This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.
          
          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_Frozen_nested8_authored_hint:
        courseD_artist_project3a_a: Anda dapat memilih jumlah yang berbeda untuk memutar bentuk Anda! Bagaimana 18 kali dengan sebuah turn 20 derajat di antara?
      courseD_Frozen_nested9_authored_hint:
        courseD_artist_project4a_a: |
          Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)
          
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_1_2018_authored_hint:
        courseD_artist_project1_a: Gunakan menu drop down pada blok `ubah` untuk memilih sudut yang Anda butuhkan!
        courseD_artist_project1_b: Ingat bahwa `move forward` menarik garis, sementara`jump forward` tidak.
      courseD_artist_2_2018_authored_hint:
        courseD_artist_project1_b: Remember that `move` draws a line, while `jump` does not.
        courseD_artist_project1_a: Gunakan menu drop down pada blok `ubah` untuk memilih sudut yang Anda butuhkan!
      courseD_artist_3_2018_authored_hint: [ ]
      courseD_artist_4_2018_authored_hint: [ ]
      courseD_artist_5_2018_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to switch their angles, too!
      courseD_artist_6_2018_authored_hint: [ ]
      courseD_artist_7_2018_authored_hint:
        courseD_artist_project2a_a: |
          This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.
          
          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_8_2018_authored_hint:
        courseD_artist_project3a_a: Anda dapat memilih jumlah yang berbeda untuk memutar bentuk Anda! Bagaimana 18 kali dengan sebuah turn 20 derajat di antara?
      courseD_artist_9_2018_authored_hint:
        courseD_artist_project4a_a: |
          Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)
          
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_Template_2018_authored_hint: [ ]
      courseD_artist_binary1_authored_hint:
        courseD_artist_binary1_a: Ganti "???" di blok teks dengan gambar biner yang anda inginkan, dalam nol dan satu.
        courseD_artist_binary1_b: Seniman akan menarik sebuah ruang putih untuk setiap 1 dan sebuha ruang hitam untuk setiap 0.
        courseD_artist_binary1_c: |-
          This is how you can input your binary code:
          
          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2018_authored_hint:
        courseD_artist_binary1_a: Ganti "???" di blok teks dengan gambar biner yang anda inginkan, dalam nol dan satu.
        courseD_artist_binary1_b: Seniman akan menarik sebuah ruang putih untuk setiap 1 dan sebuha ruang hitam untuk setiap 0.
        courseD_artist_binary1_c: |-
          This is how you can input your binary code:
          
          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary2_authored_hint:
        courseD_artist_binary2_a: Cukup klik `Run` untuk melihat program ini berjalan!
      courseD_artist_binary2_2018_authored_hint:
        courseD_artist_binary2_a: Cukup klik `Run` untuk melihat program ini berjalan!
      courseD_artist_binary3_authored_hint:
        courseD_artist_binary3_a: Salah satu dari empat pola biner di kotak peralatan akan memecahkan teka-teki ini!
        courseD_artist_binary3_b: Jangan takut membuat kesalahan! Cobalah menulis biner dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseD_artist_binary3_2018_authored_hint:
        courseD_artist_binary3_a: Salah satu dari empat pola biner di kotak peralatan akan memecahkan teka-teki ini!
        courseD_artist_binary3_b: Jangan takut membuat kesalahan! Cobalah menulis biner dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseD_artist_binary4_authored_hint:
        courseD_artist_binary4_a: Lihatlah tiga kotak pertama di baris paling atas. Bisakah Anda mengulangi ketiganya untuk mendapatkan keseluruhan pola?
        courseD_artist_binary4_b: Jangan takut membuat kesalahan! Cobalah menulis biner dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda tidak berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_artist_binary4_2018_authored_hint:
        courseD_artist_binary4_a: Lihatlah tiga kotak pertama di baris paling atas. Bisakah Anda mengulangi ketiganya untuk mendapatkan keseluruhan pola?
        courseD_artist_binary4_b: Jangan takut membuat kesalahan! Cobalah menulis biner dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda tidak berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_artist_binary5_authored_hint:
        courseD_artist_binary5_a: Cobalah menjalankan kode terlebih dahulu untuk melihat apa yang harus Anda kerjakan.
        courseD_artist_binary5_b: Anda hanya perlu mengganti dua baris untuk membuat senyuman.
        courseD_artist_binary5_c: Jika anda mengalami kesulitan memecahkan teka-teki ini, coba tuliskan baris biner di selembar kertas dan cari sebuah pola.
      courseD_artist_binary5_2018_authored_hint:
        courseD_artist_binary5_a: Cobalah menjalankan kode terlebih dahulu untuk melihat apa yang harus Anda kerjakan.
        courseD_artist_binary5_b: Anda hanya perlu mengganti dua baris untuk membuat senyuman.
        courseD_artist_binary5_c: Jika anda mengalami kesulitan memecahkan teka-teki ini, coba tuliskan baris biner di selembar kertas dan cari sebuah pola.
      courseD_artist_binary6_authored_hint:
        courseD_artist_binary6_a: Mulai dari kiri atas. Seberapa jauh anda harus membaca sebelum pola mulai terulang?
        courseD_artist_binary6_b: Anda dapat membangun string biner anda sedikit demi sedikit, dan terus menguji!
      courseD_artist_binary6_2018_authored_hint:
        courseD_artist_binary6_a: Mulai dari kiri atas. Seberapa jauh anda harus membaca sebelum pola mulai terulang?
        courseD_artist_binary6_b: Anda dapat membangun string biner anda sedikit demi sedikit, dan terus menguji!
      courseD_artist_binary7_authored_hint:
        courseD_artist_binary7_a: Mulai dari kiri atas. Seberapa jauh anda harus membaca sebelum pola mulai terulang?
        courseD_artist_binary7_b: Jangan takut membuat kesalahan! Cobalah menulis biner dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda tidak berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_artist_binary7_2018_authored_hint:
        courseD_artist_binary7_a: Mulai dari kiri atas. Seberapa jauh anda harus membaca sebelum pola mulai terulang?
        courseD_artist_binary7_b: Jangan takut membuat kesalahan! Cobalah menulis biner dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda tidak berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_artist_binary8_authored_hint:
        courseD_artist_binary8_a: Spiral terkadang membingungkan. Isolasikan setiap garis horizontal di pikiran anda saat anda membuat desain ini.
        courseD_artist_binary8_b: Cobalah menjalankan kode terlebih dahulu untuk melihat apa yang harus Anda kerjakan.
        courseD_artist_binary8_c: Jangan takut membuat kesalahan! Cobalah menulis biner dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseD_artist_binary8_2018_authored_hint:
        courseD_artist_binary8_a: Spiral terkadang membingungkan. Isolasikan setiap garis horizontal di pikiran anda saat anda membuat desain ini.
        courseD_artist_binary8_b: Cobalah menjalankan kode terlebih dahulu untuk melihat apa yang harus Anda kerjakan.
        courseD_artist_binary8_c: Jangan takut membuat kesalahan! Cobalah menulis biner dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseD_artist_binaryFP_authored_hint: [ ]
      courseD_artist_binaryFP8_authored_hint: [ ]
      courseD_artist_binaryFP_2018_authored_hint: [ ]
      courseD_artist_binary_challenge2_authored_hint:
        courseD_artist_binary_challenge2_a: Hanya ada beberapa baris yang salah dalam program aslinya.
      courseD_artist_binary_challenge2_2018_authored_hint:
        courseD_artist_binary_challenge2_a: Hanya ada beberapa baris yang salah dalam program aslinya.
      courseD_artist_binary_challenge3_authored_hint:
        courseD_artist_binary_challenge3_a: |-
          Hanya ada beberapa baris yang salah dalam program aslinya. Jika salah satu pendekatan gagal, kembali dan coba lagi. Ada solusinya!
      courseD_artist_embed_frozen_authored_hint: [ ]
      courseD_artist_embed_frozen2_authored_hint: [ ]
      courseD_artist_embedded_project1a_authored_hint: [ ]
      courseD_artist_functions10_authored_hint:
        courseD_artist_functions10_b: Gambar ini sangat mirip dengan yang terakhir, kecuali fungsi menggambar garis yang berbeda.
        courseD_artist_functions10_a: Untuk berkeliling menggunakan beberapa blok 'move forward`, buat fungsi `draw hexagon` dan panggil beberapa kali.
      courseD_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |-
          Program anda harus:
          - Menggunakan fungsi
          - Bergerak maju 100 + 75 piksel
          - Menggunakan fungsi
      courseD_artist_functions3_authored_hint:
        courseD_artist_functions3_a: |-
          Untuk mengatasi teka-teki ini, anda hanya perlu menambahkan satu loop yang mengulangi kode starter 8 kali.
          Jika anda tidak ingat kode starternya, klik "start over" di sudut kanan atas ruang kerja.
      courseD_artist_functions4_authored_hint:
        courseD_artist_functions4_a: Mencoba mengunakan fungsi!
      courseD_artist_functions5_authored_hint:
        courseD_artist_functions5_a: Jangan menyerah! Ingat apa yang telah anda pelajari.
        courseD_artist_functions5_b: Fungsi memudahkan untuk memanggil kode yang tersimpan kapan saja, tidak hanya dari dalam satu loop!
      courseD_artist_functions6_authored_hint:
        grade4_artist_functions_windows0_a: Fokus hanya pada membuat satu jendela untuk sekarang. Kita akan membuat fungsi untuk itu di teka-teki berikutnya.
        grade4_artist_functions_windows0_b: Coba gunakan loop bersarang, di mana loop dalam membuat persegi dan loop luar berputar persegi empat kali.
      courseD_artist_functions7_authored_hint:
        courseD_artist_functions7_a: Coba buat fungsi anda terlebih dahulu lalu tambahkan di jendela satu per satu.
        courseD_artist_functions7_b: Anda tidak perlu menambahkan loop pengulangan ekstra. hanya lompat seni 100 piksel ke depan untuk setiap jendela atas, dan 150 piksel turun untuk mendapatkan jendela bawah.
      courseD_artist_functions8_authored_hint:
        courseD_artist_functions8_a: |-
          Mulailah dengan membuat fungsi untuk persegi, lalu coba buat fungsi untuk garis bujur sangkar.
          Bagaimana anda menggunakan fungsi `draw a line of squares` untuk membuat gambar ini?
        courseD_artist_functions8_b: Setelah baris pertama anda kotak, anda perlu memindahkan artis ke bawah dan kembali sebelum anda memulai baris kedua kotak anda.
        courseD_artist_functions8_c: Anda harus memindahkan artis kembali dengan jumlah piksel yang berbeda bahkan untuk garis genap daripada yang ganjil.
      courseD_artist_functions9_authored_hint:
        courseD_artist_functions9_a: Untuk menyiasati kebutuhan untuk memiliki beberapa blok `move forward`, buat fungsi` draw triangle` dan panggil beberapa kali.
        courseD_artist_functions9_b: Gambar ini dibuat dengan membuat garis segitiga dan berputar 60 atau 120 derajat setiap kali anda menggambar garis segitiga.
      courseD_artist_nestedLoops1_authored_hint:
        courseD_artist_nestedLoops1_a: Cara termudah untuk menggambar ini adalah bergerak maju dan menggunakan belokan kanan.
        courseD_artist_nestedLoops1_b: Anda bisa menggambar segitiga ini dengan loop `repeat` dengan dua blok di dalamnya. Blok mana yang anda butuhkan?
        courseD_artist_nestedLoops1_c: Coba tuliskan langkah di atas kertas dan cari pola yang bisa disederhanakan dengan loop.
      courseD_artist_nestedLoops10_authored_hint: [ ]
      courseD_artist_nestedLoops10_2018_authored_hint: [ ]
      courseD_artist_nestedLoops1_2018_authored_hint:
        courseD_artist_nestedLoops1_a: Cara termudah untuk menggambar ini adalah bergerak maju dan menggunakan belokan kanan.
        courseD_artist_nestedLoops1_b: Anda bisa menggambar segitiga ini dengan loop `repeat` dengan dua blok di dalamnya. Blok mana yang anda butuhkan?
        courseD_artist_nestedLoops1_c: Coba tuliskan langkah di atas kertas dan cari pola yang bisa disederhanakan dengan loop.
      courseD_artist_nestedLoops1a_authored_hint:
        courseD_artist_nestedLoops1a_a: |-
          You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.
          
          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: Jika anda membuat segitiga anda dengan sebuah lingkaran, seniman harus menghadap dengan cara yang sama seperti saat mereka memulai. Ini akan membuat 60 derajat jauh lebih mudah.
        courseD_artist_nestedLoops1a_c: Jika anda menginginkan warna, gunakan blok `set color` dalam kode anda. Anda tidak harus mencocokkan warna pada gambar template.
      courseD_artist_nestedLoops1a_2018_authored_hint:
        courseD_artist_nestedLoops1a_a: |-
          You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.
          
          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: Jika anda membuat segitiga anda dengan sebuah lingkaran, seniman harus menghadap dengan cara yang sama seperti saat mereka memulai. Ini akan membuat 60 derajat jauh lebih mudah.
        courseD_artist_nestedLoops1a_c: Jika anda menginginkan warna, gunakan blok `set color` dalam kode anda. Anda tidak harus mencocokkan warna pada gambar template.
      courseD_artist_nestedLoops2_authored_hint:
        courseD_artist_nestedLoops2_a: Siapkan loop anda dengan mengelompokkan kode segitiga anda dengan loop `repeat` lainnya.
        courseD_artist_nestedLoops2_b: Ingatlah untuk menempatkan blok `turn` di dalam loop sehingga seniman mengubah setiap segitiga.
      courseD_artist_nestedLoops2_2018_authored_hint:
        courseD_artist_nestedLoops2_a: Siapkan loop anda dengan mengelompokkan kode segitiga anda dengan loop `repeat` lainnya.
        courseD_artist_nestedLoops2_b: Ingatlah untuk menempatkan blok `turn` di dalam loop sehingga seniman mengubah setiap segitiga.
      courseD_artist_nestedLoops3_authored_hint:
        courseD_artist_nestedLoops3_a: "Mencoba menggunakan blok 'jump forwad' untuk mendapatkan dari atas satu persegi ke tempat di mana anda akan memulai berikutnya. Jika kotak anda setinggi 20 piksel dan jaraknya 20 piksel, seberapa jauh anda harus melompat?"
        courseD_artist_nestedLoops3_b: 'Jangan lupa gunakan loop bersarang untuk memecahkan teka-teki ini dengan cepat. '
        courseD_artist_nestedLoops3_c: 'Mulailah dengan menggunakan loop `repeat` untuk membuat satu persegi. Selanjutnya, ulangi kuadrat sebanyak 8 kali, lompat 40 piksel di antaranya. '
      courseD_artist_nestedLoops3_2018_authored_hint:
        courseD_artist_nestedLoops3_a: "Mencoba menggunakan blok 'jump forwad' untuk mendapatkan dari atas satu persegi ke tempat di mana anda akan memulai berikutnya. Jika kotak anda setinggi 20 piksel dan jaraknya 20 piksel, seberapa jauh anda harus melompat?"
        courseD_artist_nestedLoops3_b: 'Jangan lupa gunakan loop bersarang untuk memecahkan teka-teki ini dengan cepat. '
        courseD_artist_nestedLoops3_c: 'Mulailah dengan menggunakan loop `repeat` untuk membuat satu persegi. Selanjutnya, ulangi kuadrat sebanyak 8 kali, lompat 40 piksel di antaranya. '
      courseD_artist_nestedLoops4_authored_hint:
        courseD_artist_nestedLoops4_d: Untuk mengatasi ini dengan benar, anda harus pindah ** sebelum ** anda berpaling, atau lingkaran anda akan dinyalakan dengan jumlah terkecil!
        courseD_artist_nestedLoops4_a: |-
          To make a circle:
          - Repeat 360 times
          - Move forward 1 pixel
          - Turn left 1 degree
        courseD_artist_nestedLoops4_b: Jangan lupa untuk melompat maju sebesar 50 pixel di antara lingkaran.
        courseD_artist_nestedLoops4_c: Gunakan loop bersarang untuk menarik lingkaran anda sebanyak 4 kali.
      courseD_artist_nestedLoops4_2018_authored_hint:
        courseD_artist_nestedLoops4_d: Untuk mengatasi ini dengan benar, anda harus pindah ** sebelum ** anda berpaling, atau lingkaran anda akan dinyalakan dengan jumlah terkecil!
        courseD_artist_nestedLoops4_a: |-
          To make a circle:
          - Repeat 360 times
          - Move forward 1 pixel
          - Turn left 1 degree
        courseD_artist_nestedLoops4_b: Jangan lupa untuk melompat maju sebesar 50 pixel di antara lingkaran.
        courseD_artist_nestedLoops4_c: Gunakan loop bersarang untuk menarik lingkaran anda sebanyak 4 kali.
      courseD_artist_nestedLoops5_authored_hint:
        courseD_artist_nestedLoops5_a: |-
          To do this easily:
          
          - repeat 4 times
          - make a circle
          - jump forward 50 pixels
          - turn right 90 degrees
        courseD_artist_nestedLoops5_b: Untuk membuat lingkaran anda harus menetapkan loop pengulangan untuk mengulang 360 kali. Di dalam loop, bergerak maju 1 pixel dan belok 1 derajat.
      courseD_artist_nestedLoops5_2018_authored_hint:
        courseD_artist_nestedLoops5_a: |-
          To do this easily:
          
          - repeat 4 times
          - make a circle
          - jump forward 50 pixels
          - turn right 90 degrees
        courseD_artist_nestedLoops5_b: Untuk membuat lingkaran anda harus menetapkan loop pengulangan untuk mengulang 360 kali. Di dalam loop, bergerak maju 1 pixel dan belok 1 derajat.
      courseD_artist_nestedLoops6_authored_hint:
        courseD_artist_nestedLoops6_a: Anda harus mengulang loop terluar anda 6 kali sekarang, bukan hanya 4.
        courseD_artist_nestedLoops6_b: 'Sekarang setelah kan 360 derajat menjadi enam bagian bukan hanya empat, anda hanya perlu berputar 60 derajat di antara lingkaran. '
      courseD_artist_nestedLoops7_authored_hint:
        courseD_artist_nestedLoops7_a: Anda harus menggunakan loop bersarang di sini. Pertama, gunakan satu loop untuk menggambar persegi. Apa yang akan dilakukan loop luar jika loop dalam menggambar persegi?
        courseD_artist_nestedLoops7_b: |-
          Use a nested loop, where the inner loop is the code for a square.
          
          - repeat 6 times
          - make square
          - jump forward by **50 pixels**
          - turn **60 degrees**
      courseD_artist_nestedLoops7_2018_authored_hint:
        courseD_artist_nestedLoops7_a: Anda harus menggunakan loop bersarang di sini. Pertama, gunakan satu loop untuk menggambar persegi. Apa yang akan dilakukan loop luar jika loop dalam menggambar persegi?
        courseD_artist_nestedLoops7_b: |-
          Use a nested loop, where the inner loop is the code for a square.
          
          - repeat 6 times
          - make square
          - jump forward by **50 pixels**
          - turn **60 degrees**
      courseD_artist_nestedLoops8_authored_hint:
        courseD_artist_nestedLoops8_a: Untuk memiliki 8 segi enam dalam gambar anda, anda perlu memutar **45 derajat ** di antara masing-masing gambar. Mengapa? Karena 360 derajat (putaran penuh sekitar) dibagi 8 (jumlah segi enam) adalah 45 derajat.
        courseD_artist_nestedLoops8_b: Jika anda terjebak, mulailah dengan melihat teka-teki terakhir, kemudian ubah hal-hal yang berbeda.
        courseD_artist_nestedLoops8_c: |-
          Use a nested loop:
          
          - Repeat 8 times
          - draw a hexagon
          - jump forward 50 pixels
          - turn right 45 degrees
      courseD_artist_nestedLoops8_2018_authored_hint:
        courseD_artist_nestedLoops8_a: Untuk memiliki 8 segi enam dalam gambar anda, anda perlu memutar **45 derajat ** di antara masing-masing gambar. Mengapa? Karena 360 derajat (putaran penuh sekitar) dibagi 8 (jumlah segi enam) adalah 45 derajat.
        courseD_artist_nestedLoops8_b: Jika anda terjebak, mulailah dengan melihat teka-teki terakhir, kemudian ubah hal-hal yang berbeda.
        courseD_artist_nestedLoops8_c: |-
          Use a nested loop:
          
          - Repeat 8 times
          - draw a hexagon
          - jump forward 50 pixels
          - turn right 45 degrees
      courseD_artist_nestedLoops9_authored_hint:
        courseD_artist_nestedLoops9_a: Mulailah dengan menggunakan loop bersarang seperti sebelumnya, tapi kali ini, buatlah dengan kotak.
        courseD_artist_nestedLoops9_b: Tambahkan set kedua loop bersarang sampai akhir set pertama, tapi kali ini gunakan segitiga.
        courseD_artist_nestedLoops9_c: |-
          Use two nested loops:
          - Repeat 8 times
          - draw a square
          - jump forward 50 pixels
          - turn right by 45 degrees
          - Repeat 8 times
          - draw a triangle
          - jump forward 50 pixels
          - turn right by 45 degrees
      courseD_artist_nestedLoops9_2018_authored_hint:
        courseD_artist_nestedLoops9_a: Mulailah dengan menggunakan loop bersarang seperti sebelumnya, tapi kali ini, buatlah dengan kotak.
        courseD_artist_nestedLoops9_b: Tambahkan set kedua loop bersarang sampai akhir set pertama, tapi kali ini gunakan segitiga.
        courseD_artist_nestedLoops9_c: |-
          Use two nested loops:
          - Repeat 8 times
          - draw a square
          - jump forward 50 pixels
          - turn right by 45 degrees
          - Repeat 8 times
          - draw a triangle
          - jump forward 50 pixels
          - turn right by 45 degrees
      courseD_artist_nestedLoops9_predict1_authored_hint: [ ]
      courseD_artist_nestedLoops9_predict1_2018_authored_hint: [ ]
      courseD_artist_nestedLoopsFP_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>
          
          This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>
          
          This image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>
          
          This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.
      courseD_artist_nestedLoopsFP_2018_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>
          
          This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.
        courseD_artist_nestedLoopsFP_b: |-
          <img src="https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width="200px"/>
          
          This image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).
        courseD_artist_nestedLoopsFP_c: |-
          <img src="https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width="200px"/>
          
          This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.
      courseD_artist_nestedLoopsPre1_authored_hint: [ ]
      courseD_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Mulai dengan mengubah warna menjadi biru, lalu buat sebuah segi delapan dengan sisi 50 piksel dan 45 derajat ke kiri.
        courseD_artist_nestedLoops_challenge1_b: Menambahkan kode untuk mengubah warna menjadi hijau, dan membuat sebuah segitiga dengan 50 pixel sisi dan 120 derajat kiri bergantian.
        courseD_artist_nestedLoops_challenge1_c: Setelah Anda menggambar kedua bentuk, Anda harus melompat ke depan dengan 50 piksel sebelum Anda berbelok ke kanan dengan 90 derajat.
        courseD_artist_nestedLoops_challenge1_d: Masukkan semua kode Anda di dalam sebuah `berulang 4 times` lingkaran untuk menyelesaikannya.
      courseD_artist_nestedLoops_challenge1_2018_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Mulai dengan mengubah warna menjadi biru, lalu buat sebuah segi delapan dengan sisi 50 piksel dan 45 derajat ke kiri.
        courseD_artist_nestedLoops_challenge1_b: Menambahkan kode untuk mengubah warna menjadi hijau, dan membuat sebuah segitiga dengan 50 pixel sisi dan 120 derajat kiri bergantian.
        courseD_artist_nestedLoops_challenge1_c: Setelah Anda menggambar kedua bentuk, Anda harus melompat ke depan dengan 50 piksel sebelum Anda berbelok ke kanan dengan 90 derajat.
        courseD_artist_nestedLoops_challenge1_d: Masukkan semua kode Anda di dalam sebuah `berulang 4 times` lingkaran untuk menyelesaikannya.
      courseD_artist_nestedLoops_challenge2_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Untuk menggambar sebuah segi delapan biasa, artis perlu untuk mengubah 45 derajat 8 kali.
        courseD_artist_nestedLoops_challenge2_b: Untuk menggambar persegi, sang seniman perlu memutar 90 derajat 4 kali.
      courseD_artist_nestedLoops_challenge2_2018_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Untuk menggambar sebuah segi delapan biasa, artis perlu untuk mengubah 45 derajat 8 kali.
        courseD_artist_nestedLoops_challenge2_b: Untuk menggambar persegi, sang seniman perlu memutar 90 derajat 4 kali.
      courseD_artist_project1_authored_hint:
        courseD_artist_project1_a: Gunakan menu drop down pada blok `ubah` untuk memilih sudut yang Anda butuhkan!
        courseD_artist_project1_b: Ingat bahwa `move forward` menarik garis, sementara`jump forward` tidak.
      courseD_artist_project1_2018_authored_hint:
        courseD_artist_project1_a: Gunakan menu drop down pada blok `ubah` untuk memilih sudut yang Anda butuhkan!
        courseD_artist_project1_b: Ingat bahwa `move forward` menarik garis, sementara`jump forward` tidak.
      courseD_artist_project1a_authored_hint:
        courseD_artist_project1a_a: |
          This stair step uses a 76 degree turn and repeats 4 times.
          
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Pola-pola ini banyak seperti anak tangga dari teka-teki lain, tetapi menggunakan sebuah sudut yang berbeda.
      courseD_artist_project1a_2018_authored_hint:
        courseD_artist_project1a_a: |
          This stair step uses a 76 degree turn and repeats 4 times.
          
          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: Pola-pola ini banyak seperti anak tangga dari teka-teki lain, tetapi menggunakan sebuah sudut yang berbeda.
      courseD_artist_project2_authored_hint:
        courseD_artist_project2_a: Ingat bahwa `move forward` menarik garis, sementara`jump forward` tidak.
        courseD_artist_project2_b: Setelah Anda menarik dan bergerak yang pertama kalinya, Anda dapat mengulangi kode dengan menambahkan sebuah lingkaran di sekitar luar.
      courseD_artist_project2Template_authored_hint: [ ]
      courseD_artist_project2Template_2018_authored_hint: [ ]
      courseD_artist_project2_2018_authored_hint:
        courseD_artist_project2_a: Ingat bahwa `move forward` menarik garis, sementara`jump forward` tidak.
        courseD_artist_project2_b: Setelah Anda menarik dan bergerak yang pertama kalinya, Anda dapat mengulangi kode dengan menambahkan sebuah lingkaran di sekitar luar.
      courseD_artist_project2a_authored_hint:
        courseD_artist_project2a_a: |
          This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.
          
          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2018_authored_hint:
        courseD_artist_project2a_a: |
          This drawing was made by nesting a loop of 4 stairs and a `turn right 180 degrees` block inside of a `repeat 2 times` block.
          
          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project3_authored_hint:
        courseD_artist_project3_a: Gunakan menu drop down pada blok `ubah` untuk memilih sudut yang Anda butuhkan!
        courseD_artist_project3_b: "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n- Try 72 degrees if you are repeating the outer loop 5 times\n- Try 60 degrees if you are repeating the outer loop 6 times"
      courseD_artist_project3_2018_authored_hint:
        courseD_artist_project3_a: Gunakan menu drop down pada blok `ubah` untuk memilih sudut yang Anda butuhkan!
        courseD_artist_project3_b: "Try nested loops!\n\nUse the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  \n\n- Try 72 degrees if you are repeating the outer loop 5 times\n- Try 60 degrees if you are repeating the outer loop 6 times"
      courseD_artist_project3a_authored_hint:
        courseD_artist_project3a_a: Anda dapat memilih jumlah yang berbeda untuk memutar bentuk Anda! Bagaimana 18 kali dengan sebuah turn 20 derajat di antara?
      courseD_artist_project3a_2018_authored_hint:
        courseD_artist_project3a_a: Anda dapat memilih jumlah yang berbeda untuk memutar bentuk Anda! Bagaimana 18 kali dengan sebuah turn 20 derajat di antara?
      courseD_artist_project4_authored_hint:
        courseD_artist_project4_a: |
          Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:
          
          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />
          
          
          Here's a set of hexagons with squares:
          
          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Untuk mencoba ini, tariklah kepingan salju pertama anda, belilah, kemudian tariklah kepingan salju kedua.
      courseD_artist_project4_2018_authored_hint:
        courseD_artist_project4_a: |
          Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:
          
          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />
          
          
          Here's a set of hexagons with squares:
          
          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: Untuk mencoba ini, tariklah kepingan salju pertama anda, belilah, kemudian tariklah kepingan salju kedua.
      courseD_artist_project4a_authored_hint:
        courseD_artist_project4a_a: |
          Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)
          
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2018_authored_hint:
        courseD_artist_project4a_a: |
          Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)
          
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project5_authored_hint:
        courseD_artist_project4_a: |
          Lines of 2 hexagons and 4 triangles:
          
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2018_authored_hint:
        courseD_artist_project4_a: |
          Lines of 2 hexagons and 4 triangles:
          
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_projectTemplate_authored_hint: [ ]
      courseD_artist_projectTemplate_2018_authored_hint: [ ]
      courseD_artist_project_embedded_authored_hint: [ ]
      courseD_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: Untuk menggambar sebuah sisi, gunakan ` bergerak maju dengan 100 piksel ` blok, dan mengubah 100 untuk sebuah 200.
        courseD_artist_ramp11b: |-
          Untuk menggambar 4 sisi, menempatkan sebuah ` bergerak maju dengan 200 piksel ` blok dalam sebuah ulangi lingkaran dan membuat yakin lingkaran yang diatur untuk menarik 4 kali. Jangan lupa untuk mengubah sesudahnya!
        courseD_artist_ramp11_c: Ingatlah untuk menempatkan blok `ubah` di dalam lingkaran Anda!
      courseD_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: Anda bisa menggambar persegi terlebih dahulu, lalu segitiga, atau melakukannya sebaliknya!
        courseD_artist_ramp12_b: Cobalah membelah masalah menjadi 2 bagian, dan gunakan 2 loop.
        courseD_artist_ramp12_c: Anda bisa menggunakan menu drop dwon pada blok `ubah` untuk melihat sudut mana yang Anda butuhkan!
      courseD_bee_conditionals1_authored_hint:
        courseD_bee_conditionals1_a: Anda perlu menggunakan blok `if` untuk memeriksa apakah ada bunga dibawah awan sebelum anda mencoba untuk mendapatkan nektar.
      courseD_bee_conditionals10_authored_hint: [ ]
      courseD_bee_conditionals10_2018_authored_hint: [ ]
      courseD_bee_conditionals1_predict1_authored_hint:
        courseD_bee_conditionals1_a: Anda perlu menggunakan blok `if` untuk memeriksa apakah ada bunga dibawah awan sebelum anda mencoba untuk mendapatkan nektar.
      courseD_bee_conditionals1_predict1_2018_authored_hint:
        courseD_bee_conditionals1_a: Anda perlu menggunakan blok `if` untuk memeriksa apakah ada bunga dibawah awan sebelum anda mencoba untuk mendapatkan nektar.
      courseD_bee_conditionals2_authored_hint:
        courseD_bee_conditionals2_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals2_a: Terkadang akan ada bunga di sana, terkadang tidak. Jika anda ingin kode anda berjalan dalam kedua kasus, pastikan untuk menggunakan pernyataan `if`.
        courseD_bee_conditionals2_b: Anda dapat menggunakan sebuah `ulangi` lingkaran atau suatu ` sementara jalan di depan` untuk bergerak melalui labirin ini.
        courseD_bee_conditionals2_c: Anda tidak perlu memeriksa sarang lebah, hanya ada bunga atau ruang kosong di bawah awan.
        courseD_bee_conditionals2_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals2_2018_authored_hint:
        courseD_bee_conditionals2_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals2_a: Terkadang akan ada bunga di sana, terkadang tidak. Jika anda ingin kode anda berjalan dalam kedua kasus, pastikan untuk menggunakan pernyataan `if`.
        courseD_bee_conditionals2_b: Anda dapat menggunakan sebuah `ulangi` lingkaran atau suatu ` sementara jalan di depan` untuk bergerak melalui labirin ini.
        courseD_bee_conditionals2_c: Anda tidak perlu memeriksa sarang lebah, hanya ada bunga atau ruang kosong di bawah awan.
        courseD_bee_conditionals2_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals2_test_authored_hint:
        courseD_bee_conditionals2_aa: Butuh bantuan untuk memulai? Berikut adalah sebuah sedikit petunjuk video.
        courseD_bee_conditionals2_a: Terkadang akan ada bunga di sana, terkadang tidak. Jika anda ingin kode anda berjalan dalam kedua kasus, pastikan untuk menggunakan pernyataan `if`.
        courseD_bee_conditionals2_b: Anda dapat menggunakan sebuah `ulangi` lingkaran atau suatu ` sementara jalan di depan` untuk bergerak melalui labirin ini.
        courseD_bee_conditionals2_c: Anda tidak perlu memeriksa sarang lebah, hanya ada bunga atau ruang kosong di bawah awan.
        courseD_bee_conditionals2_d: Butuh bantuan untuk menyelesaikan semuanya? Tonton video petunjuk ini.
      courseD_bee_conditionals3_authored_hint:
        courseD_bee_conditionals3_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals3_a: Pastikan untuk menggunakan pernyataan `if` untuk memeriksa setiap ruang untuk melihat apakah itu berisi bunga atau tidak sama sekali.
        courseD_bee_conditionals3_b: Anda dapat menggunakan sebuah `ulangi` lingkaran atau suatu ` sementara ` lingkaran untuk menjaga lebah bergerak maju. Gunakan yang mana saja yang kamu suka!
        courseD_bee_conditionals3_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseD_bee_conditionals3_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals3_2018_authored_hint:
        courseD_bee_conditionals3_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals3_a: Pastikan untuk menggunakan pernyataan `if` untuk memeriksa setiap ruang untuk melihat apakah itu berisi bunga atau tidak sama sekali.
        courseD_bee_conditionals3_b: Anda dapat menggunakan sebuah `ulangi` lingkaran atau suatu ` sementara ` lingkaran untuk menjaga lebah bergerak maju. Gunakan yang mana saja yang kamu suka!
        courseD_bee_conditionals3_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseD_bee_conditionals3_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals4_authored_hint:
        courseD_bee_conditionals4_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals4_a: Anda masih bisa memperlakukan setiap ruangan seolah ada awan di atasnya, walaupun anda bisa melihat keseluruhan jalan.
        courseD_bee_conditionals4_b: 'Gunakan pernyataan `if` di dalam loop anda untuk memeriksa setiap ruang untuk nektar. '
        courseD_bee_conditionals4_c: Using <xml><block type="maze_untilBlocked"/></xml> block, you should move forward and check for a flower. If there is a flower, what should the bee do?
        courseD_bee_conditionals4_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals4_2018_authored_hint:
        courseD_bee_conditionals4_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals4_a: Anda masih bisa memperlakukan setiap ruangan seolah ada awan di atasnya, walaupun anda bisa melihat keseluruhan jalan.
        courseD_bee_conditionals4_b: 'Gunakan pernyataan `if` di dalam loop anda untuk memeriksa setiap ruang untuk nektar. '
        courseD_bee_conditionals4_c: Using <xml><block type="maze_untilBlocked"/></xml> block, you should move forward and check for a flower. If there is a flower, what should the bee do?
        courseD_bee_conditionals4_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals5_authored_hint:
        courseD_bee_conditionals5_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals5_a: Pikirkan setiap sisi jalan segi empat sebagai jalan dengan sendirinya. Atur loop bersarang dengan blok `repeat` di bagian luar dan sebuah loop` while there is a path ahead ` di bagian dalam. Berapa banyak jalan yang dibutuhkan lebah untuk mereda jika lebah perlu menggulingkan setiap sisi dengan bunga?
        courseD_bee_conditionals5_c: Ada 3 sisi dari persegi panjang dengan bunga, sehingga kode perlu `mengulang 3 waktu`. Dalam setiap ulangi, lebah akan perlu untuk terus sepanjang jalan, ` sementara ada sebuah jalan di depan`. Untuk terus menyusuri jalan setapak, lebah perlu ` bergerak maju`. Sementara di jalan, lebah perlu memeriksa sebuah bunga. ` Jika ada sebuah bunga`, lebah harus` mendapatkan nektar`.
        courseD_bee_conditionals5_b: Di dalam ` sementara ada sebuah jalan di depan` blok Anda akan perlu untuk bergerak maju dan memeriksa sebuah bunga. Bagaimana cara Anda memeriksa jika ada sebuah bunga? Apa yang Anda lakukan jika ada sebuah bunga?
        courseD_bee_conditionals5_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals5_2018_authored_hint:
        courseD_bee_conditionals5_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals5_a: Pikirkan setiap sisi jalan segi empat sebagai jalan dengan sendirinya. Atur loop bersarang dengan blok `repeat` di bagian luar dan sebuah loop` while there is a path ahead ` di bagian dalam. Berapa banyak jalan yang dibutuhkan lebah untuk mereda jika lebah perlu menggulingkan setiap sisi dengan bunga?
        courseD_bee_conditionals5_c: Ada 3 sisi dari persegi panjang dengan bunga, sehingga kode perlu `mengulang 3 waktu`. Dalam setiap ulangi, lebah akan perlu untuk terus sepanjang jalan, ` sementara ada sebuah jalan di depan`. Untuk terus menyusuri jalan setapak, lebah perlu ` bergerak maju`. Sementara di jalan, lebah perlu memeriksa sebuah bunga. ` Jika ada sebuah bunga`, lebah harus` mendapatkan nektar`.
        courseD_bee_conditionals5_b: Di dalam ` sementara ada sebuah jalan di depan` blok Anda akan perlu untuk bergerak maju dan memeriksa sebuah bunga. Bagaimana cara Anda memeriksa jika ada sebuah bunga? Apa yang Anda lakukan jika ada sebuah bunga?
        courseD_bee_conditionals5_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals6_authored_hint:
        courseD_bee_conditionals6_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals6_a: Pastikan untuk menggunakan pernyataan `if` untuk memeriksa sarang lebah di bawah setiap awan.
        courseD_bee_conditionals6_b: Dalam hal ini, Anda tidak perlu untuk memeriksa bunga di bawah awan.
        courseD_bee_conditionals6_c: Apakah ada sebuah lingkaran dapat Anda gunakan untuk membuat kode Anda lebih sederhana?
        courseD_bee_conditionals6_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals6_2018_authored_hint:
        courseD_bee_conditionals6_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals6_a: Pastikan untuk menggunakan pernyataan `if` untuk memeriksa sarang lebah di bawah setiap awan.
        courseD_bee_conditionals6_b: Dalam hal ini, Anda tidak perlu untuk memeriksa bunga di bawah awan.
        courseD_bee_conditionals6_c: Apakah ada sebuah lingkaran dapat Anda gunakan untuk membuat kode Anda lebih sederhana?
        courseD_bee_conditionals6_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals7_authored_hint:
        courseD_bee_conditionals7_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
        courseD_bee_conditionals7_b: Jika tidak ada satu bunga di bawah awan, harus ada sebuah sarang lebah, sehingga Anda tidak perlu berpikir tentang kasus sebuah ruang kosong.
        courseD_bee_conditionals7_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals7_2018_authored_hint:
        courseD_bee_conditionals7_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
        courseD_bee_conditionals7_b: Jika tidak ada satu bunga di bawah awan, harus ada sebuah sarang lebah, sehingga Anda tidak perlu berpikir tentang kasus sebuah ruang kosong.
        courseD_bee_conditionals7_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals7_predict2_authored_hint:
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
      courseD_bee_conditionals7_predict2_2018_authored_hint:
        courseD_bee_conditionals7_a: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
      courseD_bee_conditionals8_authored_hint:
        courseD_bee_conditionals8_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals8_a: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
        courseD_bee_conditionals8_b: |-
          Teka-teki ini rumit, karena Anda tidak bisa mengecek kotak kosong, nektar, * dan * madu hanya dengan satu syarat tunggal.
          Hanya periksa nektar dan madu di ujung jalanmu.
        courseD_bee_conditionals8_c: Bagaimana Anda bisa memastikan untuk melakukan perjalanan ke akhir setiap jalan, tidak peduli berapa lama jalannya?
        courseD_bee_conditionals8_d: |-
          Even though there is a cloud right in front of you, you don't have to visit it first. Try starting with the cloud in the bottom right of the square.
          
          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals8_2018_authored_hint:
        courseD_bee_conditionals8_hintVid1: Butuh bantuan untuk memulai? Tonton video itu!
        courseD_bee_conditionals8_a: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
        courseD_bee_conditionals8_b: |-
          Teka-teki ini rumit, karena Anda tidak bisa mengecek kotak kosong, nektar, * dan * madu hanya dengan satu syarat tunggal.
          Hanya periksa nektar dan madu di ujung jalanmu.
        courseD_bee_conditionals8_c: Bagaimana Anda bisa memastikan untuk melakukan perjalanan ke akhir setiap jalan, tidak peduli berapa lama jalannya?
        courseD_bee_conditionals8_d: |-
          Even though there is a cloud right in front of you, you don't have to visit it first. Try starting with the cloud in the bottom right of the square.
          
          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: Tonton video ini untuk membantu memecahkan teka-teki ini.
      courseD_bee_conditionals9_authored_hint: [ ]
      courseD_bee_conditionals9_2018_authored_hint: [ ]
      courseD_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: Dapatkah Anda menemukan sebuah jalan yang mencapai setiap bunga dan sarang lebah tanpa memukul setiap pohon? Yang terbaik jalan adalah sebuah spiral.
        courseD_bee_conditionals_challenge1_b: Dalam hal teka-teki ini, setiap ruang bisa memiliki sebuah bunga, sebuah sisir madu, atau tidak. Itu berarti Anda bisa mengulangi kata kunci `if / else` Anda di setiap kotak.
      courseD_bee_conditionals_challenge1_2018_authored_hint:
        courseD_bee_conditionals_challenge1_a: Dapatkah Anda menemukan sebuah jalan yang mencapai setiap bunga dan sarang lebah tanpa memukul setiap pohon? Yang terbaik jalan adalah sebuah spiral.
        courseD_bee_conditionals_challenge1_b: Dalam hal teka-teki ini, setiap ruang bisa memiliki sebuah bunga, sebuah sisir madu, atau tidak. Itu berarti Anda bisa mengulangi kata kunci `if / else` Anda di setiap kotak.
      courseD_bee_conditionals_challenge2_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:
          
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge2_2018_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:
          
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge3_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Just like the `if at flower` blocks, the code inside a `while nectar > 0` will only run if the bee is at a flower. The main differences is that the code inside will run repetitively until there is no nectar left.  Try this pattern:
          
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_debugging1_authored_hint:
        courseD_bee_debugging1_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_bee_debugging1_b: Apakah anda melihat pola yang bisa dibuat lebih sederhana menggunakan loop `repeat`?
      courseD_bee_debugging2_authored_hint:
        courseD_bee_debugging2_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_bee_debugging2_b: "Do you see a pattern?   \nTry using nested loops to solve this puzzle.\n\n![](https://images.code.org/72fbb8a06937479599b12804f990a0f3-image-1501012383369.50.27.png)"
      courseD_bee_debugging3_authored_hint:
        courseD_bee_debugging3_a: Adakah tempat dimana lebah melakukan sesuatu yang tidak masuk akal? Apa yang terjadi bila anda mengubah blok tersebut?
        courseD_bee_debugging3_b: Cobalah menyederhanakan kode menggunakan loop bersarang.
      courseD_bee_debugging4_authored_hint:
        courseD_bee_debugging4_a: "Coba gunakan proses debug beberapa kali berturut-turut. \nApa yang menyebabkan masalah pertama?\nSetelah masalah itu diperbaiki, apa yang salah?"
        courseD_bee_debugging4_b: "Jika anda mengalami kesulitan memikirkan cara membuat pola langkah tangga, cobalah menelusuri dengan jari anda dan ucapkan perintah dengan suara keras. \nJangan lupa tunjukkan arah belokan!"
      courseD_bee_debugging5_authored_hint:
        courseD_bee_debugging5_a: |-
          Start by looking at just the first loop.
          
          What does it do?
          
          What is it supposed to do?
          
          What does that tell you?
        courseD_bee_debugging5_b: Setelah anda memiliki loop pertama seperti yang anda inginkan, apa yang tersisa dalam kode anda?
        courseD_bee_debugging5_c: |-
          Cobalah membungkus sisa-sisa kode anda. Apakah pekerjaan sekarang?
          Jika tidak, apa yang masih salah?
      courseD_bee_debugging6_authored_hint:
        courseD_bee_debugging6_a: |-
          Coba jalankan melalui kode menggunakan tombol "step". Apakah semuanya baik pada langkah pertama?
          Bagaimana dengan yang kedua?
          Di mana ada yang salah?
        courseD_bee_debugging6_b: Sepertinya semua langkah yang benar ada di sini, anda hanya butuh lebih banyak dari mereka. Bagaimana anda bisa mengulangi `mendapatkan nektar` dan tindakan`membuat madu ' berkali-kali?
      courseD_bee_debugging7_authored_hint:
        courseD_bee_debugging7_a: "Coba gunakan tombol \"step\". Apakah semuanya benar pada langkah pertama?  \nBagaimana dengan yang kedua?  \nDi mana yang salahnya?  "
        courseD_bee_debugging7_b: Jika ada sesuatu yang perlu terjadi beberapa kali, coba tambahkan loop `repeat`.
      courseD_bee_debugging8_authored_hint:
        courseD_bee_debugging8_a: Apakah anda melihat pola yang bisa anda simpulkan dengan sebuah loop?
        courseD_bee_debugging8_b: Coba gunakan loop bersarang untuk membuat kode ini lebih pendek.
      courseD_bee_debugging9_authored_hint:
        courseD_bee_debugging9_a: Ada beberapa cara untuk mengatasi masalah ini... tapi mereka semuanya melibatkan belokan!
        courseD_bee_debugging9_b: Cari tahu bagaimana anda bisa memecahkan teka-teki itu, kemudian pindahkan langkah demi langkah untuk mencoba membuat kode sesuai dengan apa yang ada di kepala anda.
        courseD_bee_debugging9_c: "Envision one of these stair steps to the flowers.   \n\n![](https://images.code.org/d3dfd710961b9ff8571816a97d76ae46-image-1501012931437.59.18.png)\n\nCan you build either of these with what's in the workspace and toolbox?\n\n"
      courseD_bee_debugging9_predict1_authored_hint: [ ]
      courseD_bee_debugging_challenge1_authored_hint:
        courseD_bee_debugging_challenge1_a: Mengapa tidak yang pertama setengah dari program ini bekerja? Pikirkan mengapa lebah perlu bergerak mundur. Berapa banyak nektar yang lebah mengumpulkan setiap kali bergerak lebih sebuah bunga?
        courseD_bee_debugging_challenge1_b: Dalam perjalanan pulang, mintalah lebah mengikuti pola yang sama. Berapa banyak madu yang lebah perlu membuat setiap kali bergerak lebih sebuah sisir madu?
        courseD_bee_debugging_challenge1_c: |-
          Setelah lebah berhasil sampai ke baris bawah, mintalah mengulang perintah ini: * Ulangi 2 kali: * Maju ke depan * Buat 3 madu * Pindah ke belakang
      courseD_bee_debugging_challenge1_2018_authored_hint:
        courseD_bee_debugging_challenge1_a: Mengapa tidak yang pertama setengah dari program ini bekerja? Pikirkan mengapa lebah perlu bergerak mundur. Berapa banyak nektar yang lebah mengumpulkan setiap kali bergerak lebih sebuah bunga?
        courseD_bee_debugging_challenge1_b: Dalam perjalanan pulang, mintalah lebah mengikuti pola yang sama. Berapa banyak madu yang lebah perlu membuat setiap kali bergerak lebih sebuah sisir madu?
        courseD_bee_debugging_challenge1_c: |-
          Setelah lebah berhasil sampai ke baris bawah, mintalah mengulang perintah ini: * Ulangi 2 kali: * Maju ke depan * Buat 3 madu * Pindah ke belakang
      courseD_bee_debugging_challenge1a_authored_hint:
        courseD_bee_debugging_challenge1_a: Mengapa tidak yang pertama setengah dari program ini bekerja? Pikirkan mengapa lebah perlu bergerak mundur. Berapa banyak nektar yang lebah mengumpulkan setiap kali bergerak lebih sebuah bunga?
        courseD_bee_debugging_challenge1_b: Untuk mengatasi teka-teki ini, mintalah lebah mengikuti pola yang sama untuk membuat madu yang dia lakukan saat mengumpulkan nektar. 
        courseD_bee_debugging_challenge1_c: |-
          After the bee makes it to the bottom row, have it repeat these commands:
          
          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_honey"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block></xml>
      courseD_bee_debugging_challenge2_authored_hint:
        courseD_bee_debugging_challenge1_a: Mengapa paruh pertama program ini bekerja? Pikirkan mengapa lebah perlu bergerak mundur. Berapa banyak nektar yang dikonsumsi lebah setiap kali bergerak di atas bunga?
        courseD_bee_debugging_challenge1_b: Dalam perjalanan pulang, mintalah lebah mengikuti pola yang sama. Berapa banyak madu yang lebah perlu membuat setiap kali bergerak lebih sebuah sisir madu?
        courseD_bee_debugging_challenge1_c: |-
          Setelah lebah berhasil sampai ke baris bawah, mintalah mengulang perintah ini: * Ulangi 2 kali: * Maju ke depan * Buat 3 madu * Pindah ke belakang
      courseD_bee_nestedLoops1_authored_hint:
        courseD_bee_nestedLoops1_a: Tidak bekerja Coba gunakan tombol "step" untuk melihat apa yang terjadi baris demi baris.
        courseD_bee_nestedLoops1_b: Cobalah menulis kode untuk satu sisi dari kotak pertama. Bisakah Anda mengulangi ini untuk mendapatkan semua nektar?
        courseD_bee_nestedLoops1_c: Ingatlah untuk menggunakan blok `get nectar` begitu anda berada di lapangan dengan bunga.
      courseD_bee_nestedLoops1_2018_authored_hint:
        courseD_bee_nestedLoops1_a: Tidak bekerja Coba gunakan tombol "step" untuk melihat apa yang terjadi baris demi baris.
        courseD_bee_nestedLoops1_b: Cobalah menulis kode untuk satu sisi dari kotak pertama. Bisakah Anda mengulangi ini untuk mendapatkan semua nektar?
        courseD_bee_nestedLoops1_c: Ingatlah untuk menggunakan blok `get nectar` begitu anda berada di lapangan dengan bunga.
      courseD_bee_nestedLoops1a_authored_hint:
        courseD_bee_nestedLoops1_a: Tidak bekerja Coba gunakan tombol "step" untuk melihat apa yang terjadi baris demi baris.
        courseD_bee_nestedLoops1_c: Ingatlah untuk menggunakan blok `get nectar` begitu anda berada di lapangan dengan bunga.
      courseD_bee_nestedLoops1a_2018_authored_hint:
        courseD_bee_nestedLoops1_a: Tidak bekerja Coba gunakan tombol "step" untuk melihat apa yang terjadi baris demi baris.
        courseD_bee_nestedLoops1_c: Ingatlah untuk menggunakan blok `get nectar` begitu anda berada di lapangan dengan bunga.
      courseD_bee_nestedLoops2_authored_hint:
        courseD_bee_nestedLoops2_a: Untuk mengatasi teka-teki ini, anda perlu menyarangkan satu loop `repeat 'di bagian yang lain.
        courseD_bee_nestedLoops2_b: Tidak tahu di mana harus meletakkan loop? Cobalah tuliskan kode di atas kertas langkah demi langkah dan cari sebuah pola.
        courseD_bee_nestedLoops2_c: Ingat anda bisa memasukkan lebih dari satu blok ke dalam satu loop.
      courseD_bee_nestedLoops2_2018_authored_hint:
        courseD_bee_nestedLoops2_a: Untuk mengatasi teka-teki ini, anda perlu menyarangkan satu loop `repeat 'di bagian yang lain.
        courseD_bee_nestedLoops2_b: Tidak tahu di mana harus meletakkan loop? Cobalah tuliskan kode di atas kertas langkah demi langkah dan cari sebuah pola.
        courseD_bee_nestedLoops2_c: Ingat anda bisa memasukkan lebih dari satu blok ke dalam satu loop.
      courseD_bee_nestedLoops2_predict1_authored_hint: [ ]
      courseD_bee_nestedLoops2_predict1_2018_authored_hint: [ ]
      courseD_bee_nestedLoops3_authored_hint:
        grade4_bee_nestedLoops1_a: Jika anda tidak mengerti bagaimana menggunakan loop bersarang di sini, cobalah menulis instruksi langkah demi langkah di selembar kertas. Lingkari pola yang anda lihat.
      courseD_bee_nestedLoops5_authored_hint:
        grade4_bee_nestedLoops4_a: Cobalah buat kode baris demi baris dan lihat apakah anda bisa melihat tempat di mana pengulangan akan membuat kode menjadi lebih pendek!
        grade4_bee_nestedLoops4_b: |-
          You will need a nested loop to move forward and get nectar, but only a single loop to collect honey at the end.
          
          Altogether, you should be using 3 loops.
      courseD_bee_nestedLoops6_authored_hint: [ ]
      courseD_bee_nestedLoops6_2018_authored_hint:
        courseD_maze_nestedLoops6_a: Jika anda terjebak, coba tuliskan kode di atas kertas tanpa loop terlebih dulu dan temukan pola.
        courseD_maze_nestedLoops6_b: Loop bersarang `repeat` dapat membantu mengurangi jumlah blok yang digunakan.
        courseD_maze_nestedLoops6_c: Ini akan mengambil dua set loop bertasarang `repeat` untuk menyelesaikan teka-teki ini.
      courseD_bee_nestedLoops7_authored_hint:
        courseD_bee_nestedLoops7_a: You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.
        courseD_bee_nestedLoops7_b: You will need to use all three of the available `repeat` blocks to solve this puzzle.
        courseD_bee_nestedLoops7_c: |
          Nest your blocks three deep, like this:
          
          - repeat 4
          - repeat 3
          - repeat 12
          - get nectar
          - move forward
          - turn right
      courseD_bee_nestedLoops7_2018_authored_hint:
        courseD_bee_nestedLoops7_a: You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.
        courseD_bee_nestedLoops7_b: You will need to use all three of the available `repeat` blocks to solve this puzzle.
        courseD_bee_nestedLoops7_c: |
          Nest your blocks three deep, like this:
          
          - repeat 4
          - repeat 3
          - repeat 12
          - get nectar
          - move forward
          - turn right
      courseD_bee_nestedLoops8_authored_hint: [ ]
      courseD_bee_nestedLoops8_2018_authored_hint: [ ]
      courseD_bee_nestedLoops9_authored_hint: [ ]
      courseD_bee_nestedLoops9_2018_authored_hint: [ ]
      courseD_bee_nestedLoops9_predict2_authored_hint: [ ]
      courseD_bee_nestedLoops9_predict2_2018_authored_hint: [ ]
      courseD_bee_nested_loops_challenge1_authored_hint:
        courseD_bee_nested_loops_challenge2_a: Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!
        courseD_bee_nested_loops_challenge2_b: To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the *entire* cave!
        courseD_bee_nested_loops_challenge2_c: The shortest program that reaches all the treasure uses only one `collect` block and two turns.
      courseD_bee_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!
        courseD_bee_nested_loops_challenge2_b: To get all 4 gems, first use a loop to move away from the center. Then turn left or right and use a nested loop to move from the first pile of treasure to the second.
        courseD_bee_nested_loops_challenge2_c: If you repeat the nested loop enough times, the collector will move around the *entire* cave!
        courseD_bee_nested_loops_challenge2_d: The shortest program that reaches all the treasure uses only one `collect` block and two turns.
      courseD_bounce_events10s_authored_hint:
        courseD_bounce_events10s_a: |-
          You should have both of these events in your code:
          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">swish</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">whistle</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block</xml>
      courseD_bounce_events10s_2018_authored_hint:
        courseD_bounce_events10s_a: |-
          You should have both of these events in your code:
          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">swish</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">whistle</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block</xml>
      courseD_bounce_events11s_authored_hint:
        courseD_bounce_events11s_a: You will need to throw a ball when the game starts, when you hit the basket, and when the hand misses the ball.
      courseD_bounce_events11s_2018_authored_hint:
        courseD_bounce_events11s_a: You will need to throw a ball when the game starts, when you hit the basket, and when the hand misses the ball.
      courseD_bounce_events12s_authored_hint:
        courseD_bounce_events12s_a: You can speed up the basketball or the hand by attaching those blocks to the `when run` event.
        courseD_bounce_events12s_b: Try making each shot worth 2 points and changing the team logo to the one from your home town!
      courseD_bounce_events12s_2018_authored_hint:
        courseD_bounce_events12s_a: You can speed up the basketball or the hand by attaching those blocks to the `when run` event.
        courseD_bounce_events12s_b: Try making each shot worth 2 points and changing the team logo to the one from your home town!
      courseD_bounce_events1s_authored_hint:
        courseD_bounce_events1s_a: "You need to add the `move left` block to the `when left arrow` event to make this game work:\n\n <xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n   \n   </xml>"
        courseD_bounce_events1s_b: Don't forget to press "Run" and get the hand to the basket in order to solve this puzzle.
      courseD_bounce_events1s_2018_authored_hint:
        courseD_bounce_events1s_a: "You need to add the `move left` block to the `when left arrow` event to make this game work:\n\n <xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n   \n   </xml>"
        courseD_bounce_events1s_b: Don't forget to press "Run" and get the hand to the basket in order to solve this puzzle.
      courseD_bounce_events2s_authored_hint:
        courseD_bounce_events2s_a: |-
          You will need to have two sets of `move` events coded for this to work:
          
          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events2s_2018_authored_hint:
        courseD_bounce_events2s_a: |-
          You will need to have two sets of `move` events coded for this to work:
          
          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events5s_authored_hint:
        courseD_bounce_events5s_a: You do not need to move the hand to solve this puzzle.
        courseD_bounce_events5s_b: |-
          Make sure you have added this code to your workspace:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2018_authored_hint:
        courseD_bounce_events5s_a: You do not need to move the hand to solve this puzzle.
        courseD_bounce_events5s_b: |-
          Make sure you have added this code to your workspace:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events6s_authored_hint:
        courseD_bounce_events6s_a: |-
          Do you have an event that looks like this?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: If you've written the code correctly, you don't have to move the hand to win.
      courseD_bounce_events6s_2018_authored_hint:
        courseD_bounce_events6s_a: |-
          Do you have an event that looks like this?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: If you've written the code correctly, you don't have to move the hand to win.
      courseD_bounce_events7s_authored_hint:
        courseD_bounce_events7s_a: You can add sounds in more places if you feel like it!
      courseD_bounce_events7s_2018_authored_hint:
        courseD_bounce_events7s_a: You can add sounds in more places if you feel like it!
      courseD_bounce_events_template_authored_hint: [ ]
      courseD_bounce_events_template_2018_authored_hint: [ ]
      courseD_collector_debugging1_authored_hint:
        courseD_collector_debugging1_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_collector_debugging1_b: Apakah anda melihat pola yang bisa dibuat lebih sederhana menggunakan loop `repeat`?
        courseD_collector_debugging1_c: 'Remember to use the `collect` block to pick up treasure once you have moved to it.  '
      courseD_collector_debugging10_predict1_authored_hint:
        courseD_collector_debugging9_a: Ada beberapa cara untuk mengatasi masalah ini... tapi mereka semuanya melibatkan belokan!
        courseD_collector_debugging9_b: Cari tahu bagaimana anda bisa memecahkan teka-teki itu, kemudian pindahkan langkah demi langkah untuk mencoba membuat kode sesuai dengan apa yang ada di kepala anda.
      courseD_collector_debugging10_predict1_2018_authored_hint:
        courseD_collector_debugging9_a: Ada beberapa cara untuk mengatasi masalah ini... tapi mereka semuanya melibatkan belokan!
        courseD_collector_debugging9_b: Cari tahu bagaimana anda bisa memecahkan teka-teki itu, kemudian pindahkan langkah demi langkah untuk mencoba membuat kode sesuai dengan apa yang ada di kepala anda.
      courseD_collector_debugging1_2018_authored_hint:
        courseD_collector_debugging1_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_collector_debugging1_b: Apakah anda melihat pola yang bisa dibuat lebih sederhana menggunakan loop `repeat`?
        courseD_collector_debugging1_c: 'Remember to use the `collect` block to pick up treasure once you have moved to it.  '
      courseD_collector_debugging1a_authored_hint:
        courseD_collector_debugging1_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_collector_debugging1_c: 'Remember to use the `collect` block to pick up treasure once you have moved to it.  '
      courseD_collector_debugging1a_2018_authored_hint:
        courseD_collector_debugging1_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_collector_debugging1_c: 'Remember to use the `collect` block to pick up treasure once you have moved to it.  '
      courseD_collector_debugging2_authored_hint:
        courseD_collector_debugging2_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_collector_debugging2_b: Apakah anda melihat pola yang bisa dibuat lebih sederhana menggunakan loop `repeat`?
        courseD_collector_debugging2_c: Try collecting treasure for one side of this pattern. Can you repeat this to collect treasure on the other two sides?
      courseD_collector_debugging2_2018_authored_hint:
        courseD_collector_debugging2_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_collector_debugging2_b: Apakah anda melihat pola yang bisa dibuat lebih sederhana menggunakan loop `repeat`?
        courseD_collector_debugging2_c: Try collecting treasure for one side of this pattern. Can you repeat this to collect treasure on the other two sides?
      courseD_collector_debugging2a_authored_hint:
        courseD_collector_debugging2a_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_collector_debugging2a_c: |-
          What happens?
          
          What is supposed to happen?
          
          What does that tell you?
      courseD_collector_debugging2a_2018_authored_hint:
        courseD_collector_debugging2a_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_collector_debugging2a_c: |-
          What happens?
          
          What is supposed to happen?
          
          What does that tell you?
      courseD_collector_debugging3_authored_hint:
        courseD_collector_debugging3_a: Adakah tempat dimana Laurel melakukan suatu hal yang tidak masuk akal? apa yang terjadi ketika kamu mengganti blok tersebut?
        courseD_collector_debugging3_b: Cobalah menyederhanakan kode menggunakan loop bersarang.
      courseD_collector_debugging3_2018_authored_hint:
        courseD_collector_debugging3_a: Adakah tempat dimana Laurel melakukan suatu hal yang tidak masuk akal? apa yang terjadi ketika kamu mengganti blok tersebut?
        courseD_collector_debugging3_b: Cobalah menyederhanakan kode menggunakan loop bersarang.
      courseD_collector_debugging3a_authored_hint:
        courseD_collector_debugging3_a: Adakah tempat dimana Laurel melakukan suatu hal yang tidak masuk akal? apa yang terjadi ketika kamu mengganti blok tersebut?
      courseD_collector_debugging3a_2018_authored_hint:
        courseD_collector_debugging3_a: Adakah tempat dimana Laurel melakukan suatu hal yang tidak masuk akal? apa yang terjadi ketika kamu mengganti blok tersebut?
      courseD_collector_debugging4_authored_hint:
        courseD_collector_debugging4_a: "Coba gunakan proses debug beberapa kali berturut-turut. \nApa yang menyebabkan masalah pertama?\nSetelah masalah itu diperbaiki, apa yang salah?"
        courseD_collector_debugging4_b: "Jika anda mengalami kesulitan memikirkan cara membuat pola langkah tangga, cobalah menelusuri dengan jari anda dan ucapkan perintah dengan suara keras. \nJangan lupa tunjukkan arah belokan!"
        courseD_collector_debugging4_c: Loop ini hanya kehilangan satu blok. Bisakah kamu temukan?
      courseD_collector_debugging4_2018_authored_hint:
        courseD_collector_debugging4_a: "Coba gunakan proses debug beberapa kali berturut-turut. \nApa yang menyebabkan masalah pertama?\nSetelah masalah itu diperbaiki, apa yang salah?"
        courseD_collector_debugging4_b: "Jika anda mengalami kesulitan memikirkan cara membuat pola langkah tangga, cobalah menelusuri dengan jari anda dan ucapkan perintah dengan suara keras. \nJangan lupa tunjukkan arah belokan!"
        courseD_collector_debugging4_c: Loop ini hanya kehilangan satu blok. Bisakah kamu temukan?
      courseD_collector_debugging4a_authored_hint:
        courseD_collector_debugging4_a: "Coba gunakan proses debug beberapa kali berturut-turut. \nApa yang menyebabkan masalah pertama?\nSetelah masalah itu diperbaiki, apa yang salah?"
        courseD_collector_debugging4_b: "Jika anda mengalami kesulitan memikirkan cara membuat pola langkah tangga, cobalah menelusuri dengan jari anda dan ucapkan perintah dengan suara keras. \nJangan lupa tunjukkan arah belokan!"
      courseD_collector_debugging4a_2018_authored_hint:
        courseD_collector_debugging4_a: "Coba gunakan proses debug beberapa kali berturut-turut. \nApa yang menyebabkan masalah pertama?\nSetelah masalah itu diperbaiki, apa yang salah?"
        courseD_collector_debugging4_b: "Jika anda mengalami kesulitan memikirkan cara membuat pola langkah tangga, cobalah menelusuri dengan jari anda dan ucapkan perintah dengan suara keras. \nJangan lupa tunjukkan arah belokan!"
      courseD_collector_debugging5_authored_hint:
        courseD_collector_debugging5_a: |-
          Start by looking at just the first loop.
          
          What does it do?
          
          What is it supposed to do?
          
          What does that tell you?
        courseD_collector_debugging5_b: Setelah anda memiliki loop pertama seperti yang anda inginkan, apa yang tersisa dalam kode anda?
      courseD_collector_debugging5_2018_authored_hint:
        courseD_collector_debugging5_a: |-
          Start by looking at just the first loop.
          
          What does it do?
          
          What is it supposed to do?
          
          What does that tell you?
        courseD_collector_debugging5_b: Setelah anda memiliki loop pertama seperti yang anda inginkan, apa yang tersisa dalam kode anda?
      courseD_collector_debugging5a_authored_hint:
        courseD_collector_debugging5a_a: |-
          Apa yang dilakukannya?
          
          Apa yang harus dilakukan?
          
          Apa yang bisa kamu pahami?
        courseD_collector_debugging5a_b: Setelah harta karun terkumpul. Apa yang tertinggal dalam kode anda?
      courseD_collector_debugging5a_2018_authored_hint:
        courseD_collector_debugging5a_a: |-
          Apa yang dilakukannya?
          
          Apa yang harus dilakukan?
          
          Apa yang bisa kamu pahami?
        courseD_collector_debugging5a_b: Setelah harta karun terkumpul. Apa yang tertinggal dalam kode anda?
      courseD_collector_debugging6_authored_hint:
        courseD_collector_debugging6_a: |-
          Coba jalankan melalui kode menggunakan tombol "step". Apakah semuanya baik pada langkah pertama?
          Bagaimana dengan yang kedua?
          Di mana ada yang salah?
        courseD_collector_debugging6_b: Tampaknya semua langkah sudah benar, kamu hanya butuh sedikit lagi. Bagaimana kamu bisa mengulang aksi 'collect' berulang kali?
      courseD_collector_debugging6_2018_authored_hint:
        courseD_collector_debugging6_a: |-
          Coba jalankan melalui kode menggunakan tombol "step". Apakah semuanya baik pada langkah pertama?
          Bagaimana dengan yang kedua?
          Di mana ada yang salah?
        courseD_collector_debugging6_b: Tampaknya semua langkah sudah benar, kamu hanya butuh sedikit lagi. Bagaimana kamu bisa mengulang aksi 'collect' berulang kali?
      courseD_collector_debugging6a_authored_hint:
        courseD_collector_debugging6_a: |-
          Coba jalankan melalui kode menggunakan tombol "step". Apakah semuanya baik pada langkah pertama?
          Bagaimana dengan yang kedua?
          Di mana ada yang salah?
        courseD_collector_debugging6_b: It looks like all of the blocks you need are in the workspace. Try clicking "start over" if things get too confusing.
      courseD_collector_debugging6a_2018_authored_hint:
        courseD_collector_debugging6_a: |-
          Coba jalankan melalui kode menggunakan tombol "step". Apakah semuanya baik pada langkah pertama?
          Bagaimana dengan yang kedua?
          Di mana ada yang salah?
        courseD_collector_debugging6_b: It looks like all of the blocks you need are in the workspace. Try clicking "start over" if things get too confusing.
      courseD_collector_debugging7_authored_hint:
        courseD_collector_debugging7_a: |-
          Coba jalankan melalui kode menggunakan tombol "step". Apakah semuanya baik pada langkah pertama?
          Bagaimana dengan yang kedua?
          Di mana ada yang salah?
        courseD_collector_debugging7_b: Jika ada sesuatu yang perlu terjadi beberapa kali, coba tambahkan loop `repeat`.
        courseD_collector_debugging7_c: If you're having trouble, try writing the steps on a piece of paper and then putting the blocks into that order.
      courseD_collector_debugging8_authored_hint:
        courseD_collector_debugging8_a: Apakah anda melihat pola yang bisa anda simpulkan dengan sebuah loop?
        courseD_collector_debugging8_b: Coba gunakan loop bersarang untuk membuat kode ini lebih pendek.
      courseD_collector_debugging8_2018_authored_hint:
        courseD_collector_debugging8_a: Apakah anda melihat pola yang bisa anda simpulkan dengan sebuah loop?
        courseD_collector_debugging8_b: Coba gunakan loop bersarang untuk membuat kode ini lebih pendek.
      courseD_collector_debugging8a_authored_hint: [ ]
      courseD_collector_debugging8a_2018_authored_hint: [ ]
      courseD_collector_debugging9_authored_hint:
        courseD_collector_debugging9_a: Ada beberapa cara untuk mengatasi masalah ini... tapi mereka semuanya melibatkan belokan!
        courseD_collector_debugging9_b: Cari tahu bagaimana anda bisa memecahkan teka-teki itu, kemudian pindahkan langkah demi langkah untuk mencoba membuat kode sesuai dengan apa yang ada di kepala anda.
      courseD_collector_debugging9_2018_authored_hint:
        courseD_collector_debugging9_a: Ada beberapa cara untuk mengatasi masalah ini... tapi mereka semuanya melibatkan belokan!
        courseD_collector_debugging9_b: Cari tahu bagaimana anda bisa memecahkan teka-teki itu, kemudian pindahkan langkah demi langkah untuk mencoba membuat kode sesuai dengan apa yang ada di kepala anda.
      courseD_collector_debugging9a_authored_hint: [ ]
      courseD_collector_debugging9a_2018_authored_hint: [ ]
      courseD_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "Start by collecting just **two** gems from each of the first **two** piles.\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Next, collect the remaining gems in this row.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png)\nAdd these blocks to your program.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finally, collect the remaining treasure. Add these blocks to your program.\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Here is the complete solution for this puzzle.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_debugging_challenge2_2018_authored_hint:
        courseD_collector_debugging_challenge2_a: "Start by collecting just **two** gems from each of the first **two** piles.\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Next, collect the remaining gems in this row.\n\n![](https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png)\nAdd these blocks to your program.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finally, collect the remaining treasure. Add these blocks to your program.\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Here is the complete solution for this puzzle.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!
        courseD_bee_nested_loops_challenge2_b: To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the *entire* cave!
        courseD_bee_nested_loops_challenge2_c: The shortest program that reaches all the treasure uses only one `collect` block and two turns.
        courseD_bee_nested_loops_challenge2_d: |-
          **Solution:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018_authored_hint:
        courseD_bee_nested_loops_challenge2_a: Don't forget that you can `repeat` a single command or a longer pattern. You can even `repeat` a `repeat` block!
        courseD_bee_nested_loops_challenge2_b: To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the *entire* cave!
        courseD_bee_nested_loops_challenge2_c: The shortest program that reaches all the treasure uses only one `collect` block and two turns.
        courseD_bee_nested_loops_challenge2_d: |-
          **Solution:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2a_authored_hint:
        courseD_collector_nested_loops_challenge2a_a: Jangan lupa bahwa anda bisa `repeat` satu perintah atau pola yang lebih panjang. anda bahkan bisa `repeat` blok `repeat`!
        courseD_collector_nested_loops_challenge2a_b: Bisakah anda mencari cara untuk mendapatkan keempat permata tanpa menggunakan blok lagi dari pada yang dibutuhkan untuk mendapatkan dua?
      courseD_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          Instead of using four `move forward` blocks for each side, try putting one `move forward` block inside of a `repeat` loop, like this:
          <xml><block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          </block></xml>
        courseD_artist_ramp10_b: Jangan lupa mengumpulkan satu harta karun, lalu belok untuk memulai di sisi baru dari alun-alun!
        courseD_artist_ramp10_c: Jika anda ingin menyederhanakan kode anda, anda bisa memasukkan satu loop ke dalam loop yang lain! Ini disebut ** nested loop **.
      courseD_collector_ramp8_authored_hint:
        courseD_collector_ramp8_a: Saat Anda masuk ke sebuah persegi dengan harta, menggunakan `collect` untuk mengambilnya. Untuk teka-teki ini, Anda harus mengumpulkan harta lebih dari satu kali!
        courseD_collector_ramp8_b: Jika Anda ingin menyederhanakan kode Anda lebih banyak, Anda benar-benar bisa memasukkan satu lingkaran `ulangi` di dalam yang lain! Ini disebut sebuah bersarang ** lingkaran **.
      courseD_collector_ramp9_authored_hint:
        courseD_collector_ramp9_a: Mulailah dengan memindahkan Laurel ke harta pertama, lalu mengumpulkannya. Bisakah Anda mengulangi urutan ini untuk mendapatkan tumpukan kedua?
        courseD_collector_ramp9_b: Jika Anda ingin menyederhanakan kode Anda, Anda bisa memasukkan satu lingkaran pengulangan di bagian lain! Ini disebut sebuah bersarang ** lingkaran **.
      courseD_collector_until_challenge1_authored_hint: [ ]
      courseD_debugging_1_authored_hint:
        courseD_debugging_1_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_debugging_1_b: Apakah anda melihat pola yang bisa dibuat lebih sederhana menggunakan loop `repeat`?
      courseD_debugging_2_authored_hint:
        courseD_debugging_2_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        courseD_debugging_2_b: Apakah anda melihat pola? Coba gunakan loop bersarang untuk memecahkan teka-teki ini.
      courseD_debugging_3_authored_hint:
        courseD_debugging_3_a: Adakah tempat dimana lebah melakukan sesuatu yang tidak masuk akal? apa yang terjadi bila anda mengubah blok tersebut?
        courseD_debugging_3_b: Cobalah menyederhanakan kode menggunakan loop bersarang.
      courseD_debugging_4_authored_hint:
        courseD_debugging_4_a: "Coba gunakan proses debug beberapa kali berturut-turut. \nApa yang menyebabkan masalah pertama?\nSetelah masalah itu diperbaiki, apa yang salah?"
        courseD_debugging_4_b: "Jika anda mengalami kesulitan untuk mencari tahu bagaimana membuat pola langkah tangga, cobalah menelusuri dengan jari anda dan ucapkan perintah dengan suara keras. Jangan lupa tunjukkan arah belokan!"
      courseD_debugging_5_authored_hint:
        courseD_debugging_5_a: |-
          Start by looking at just the first loop.
          
          What does it do?
          
          What is it supposed to do?
          
          What does that tell you?
        courseD_debugging_5_b: Setelah anda memiliki loop pertama seperti yang anda inginkan, apa yang tersisa dalam kode anda?
        courseD_debugging_5_c: |-
          Cobalah membungkus sisa-sisa kode anda. Apakah pekerjaan sekarang?
          Jika tidak, apa yang masih salah?
      courseD_debugging_6_authored_hint:
        courseD_debugging_6_a: |-
          Coba jalankan melalui kode menggunakan tombol "step". Apakah semuanya baik pada langkah pertama?
          Bagaimana dengan yang kedua?
          Di mana ada yang salah?
        courseD_debugging_6_b: Sepertinya semua langkah yang benar ada di sini, anda hanya butuh lebih banyak dari mereka. Bagaimana anda bisa mengulangi `get nektar` dan`make honey'  tindakan beberapa kali?
      courseD_external_cond_authored_hint: [ ]
      courseD_farmer_condLoops1_authored_hint:
        courseD_farmer_condLoops1_a: Anda perlu mencari jagung 5 kali, menggunakan pengulangan loop.
        courseD_farmer_condLoops1_b: Pastikan menggunakan blok `if at corn` atau anda mungkin mencoba untuk memilih sesuatu yang tidak ada di sana!
      courseD_farmer_condLoops1_2018_authored_hint:
        courseD_farmer_condLoops1_a: Anda perlu mencari jagung 5 kali, menggunakan pengulangan loop.
        courseD_farmer_condLoops1_b: Pastikan menggunakan blok `if at corn` atau anda mungkin mencoba untuk memilih sesuatu yang tidak ada di sana!
      courseD_farmer_condLoops2_authored_hint:
        courseD_farmer_condLoops2_a: 'Cara terbaik untuk melakukan ini adalah dengan menyarangkan `if` pernyataan dengan menempatkan satu di bagian yang lain.  '
        courseD_farmer_condLoops2_b: Untuk teka-teki ini, anda harus memiliki satu pernyataan `if / else` dan satu pernyataan" if "biasa.
        courseD_farmer_condLoops2_c: "Your `if` statement could look a lot like this:\n\n- if at corn\n - pick corn\n- else\n - if at lettuce\n  \\t- pick lettuce\n\nIf there is nothing there, you won't pick anything!"
      courseD_farmer_condLoops2_2018_authored_hint:
        courseD_farmer_condLoops2_a: 'Cara terbaik untuk melakukan ini adalah dengan menyarangkan `if` pernyataan dengan menempatkan satu di bagian yang lain.  '
        courseD_farmer_condLoops2_b: Untuk teka-teki ini, anda harus memiliki satu pernyataan `if / else` dan satu pernyataan" if "biasa.
        courseD_farmer_condLoops2_c: "Your `if` statement could look a lot like this:\n\n- if at corn\n - pick corn\n- else\n - if at lettuce\n  \\t- pick lettuce\n\nIf there is nothing there, you won't pick anything!"
      courseD_farmer_condLoops3_authored_hint:
        courseD_farmer_condLoops3_a: |-
          To get all of the items, try nesting `if` statements three deep.
          
          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        courseD_farmer_condLoops3_b: Untuk teka-teki ini, anda harus memiliki dua pernyataan `if / else` dan satu pernyataan" if "biasa.
      courseD_farmer_condLoops3_2018_authored_hint:
        courseD_farmer_condLoops3_a: |-
          To get all of the items, try nesting `if` statements three deep.
          
          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        courseD_farmer_condLoops3_b: Untuk teka-teki ini, anda harus memiliki dua pernyataan `if / else` dan satu pernyataan" if "biasa.
      courseD_farmer_condLoops4_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Tidak ada yang tahu berapa kepala selada akan tumbuh dari setiap tunas.
          Gunakan loop ' while there is lettuce ' untuk terus dipetik sampai masing-masing potongan telah dikumpulkan.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: Loop `while` akan menangani ruang kosong juga! Karena tidak ada selada, tidak ada yang memilih dan membiarkan kode terus berlanjut.
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: Anda bisa menggunakan loop `while path ahead` atau loop 'repeat` untuk melewati semua hasil panen.
      courseD_farmer_condLoops4_2018_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Tidak ada yang tahu berapa kepala selada akan tumbuh dari setiap tunas.
          Gunakan loop ' while there is lettuce ' untuk terus dipetik sampai masing-masing potongan telah dikumpulkan.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: Loop `while` akan menangani ruang kosong juga! Karena tidak ada selada, tidak ada yang memilih dan membiarkan kode terus berlanjut.
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: Anda bisa menggunakan loop `while path ahead` atau loop 'repeat` untuk melewati semua hasil panen.
      courseD_farmer_condLoops4a_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Tidak ada yang tahu berapa kepala selada akan tumbuh dari setiap tunas.
          Gunakan loop ' while there is lettuce ' untuk terus dipetik sampai masing-masing potongan telah dikumpulkan.
      courseD_farmer_condLoops5_authored_hint:
        courseD_farmer_condLoops5_a: 'Ada loop baru: `repeat until at pumpkin`. Dapatkah anda melihat bagaimana menggunakannya dalam teka-teki ini?'
        courseD_farmer_condLoops5_b: Mungkin ada lebih dari satu tanaman jagung atau selada di setiap tempat. Gunakan loop `while` untuk mengumpulkan semuanya!
      courseD_farmer_condLoops5_2018_authored_hint:
        courseD_farmer_condLoops5_a: 'Ada loop baru: `repeat until at pumpkin`. Dapatkah anda melihat bagaimana menggunakannya dalam teka-teki ini?'
        courseD_farmer_condLoops5_b: Mungkin ada lebih dari satu tanaman jagung atau selada di setiap tempat. Gunakan loop `while` untuk mengumpulkan semuanya!
      courseD_farmer_condLoops6_authored_hint:
        courseD_farmer_condLoops6_a: Gunakan loop `while path ahead` untuk memindahkan peternak ke bawah setiap bagian dari spiral.
        courseD_farmer_condLoops6_b: Anda hanya perlu memeriksa jagung selama sebagian besar panen. Pilih satu labu di akhir program anda.
      courseD_farmer_condLoops6_2018_authored_hint:
        courseD_farmer_condLoops6_a: Gunakan loop `while path ahead` untuk memindahkan peternak ke bawah setiap bagian dari spiral.
        courseD_farmer_condLoops6_b: Anda hanya perlu memeriksa jagung selama sebagian besar panen. Pilih satu labu di akhir program anda.
      courseD_farmer_condLoops7_authored_hint:
        courseD_farmer_condLoops7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.
          
          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Coba gunakan `when path ahead` untuk menjaga agar peternak memindahkan jumlah langkah yang benar.
      courseD_farmer_condLoops7_2018_authored_hint:
        courseD_farmer_condLoops7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.
          
          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Coba gunakan `when path ahead` untuk menjaga agar peternak memindahkan jumlah langkah yang benar.
      courseD_farmer_condLoops8_authored_hint: [ ]
      courseD_farmer_condLoops8_2018_authored_hint: [ ]
      courseD_farmer_condLoops9_authored_hint: [ ]
      courseD_farmer_condLoops9_2018_authored_hint: [ ]
      courseD_farmer_condLoops9_predict1_authored_hint: [ ]
      courseD_farmer_condLoops9_predict1_2018_authored_hint: [ ]
      courseD_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: Tombol "Langkah" bisa sangat membantu dalam tantangan ini.
        courseD_farmer_condLoops_challenge1_b: Biasanya anda hanya akan `pick pumpkin` jika anda berada di labu. Apa lagi yang perlu anda lakukan jika anda menggunakan labu?
      courseD_farmer_condLoops_challenge1_2018_authored_hint:
        courseD_farmer_condLoops_challenge1_a: Tombol "Langkah" bisa sangat membantu dalam tantangan ini.
        courseD_farmer_condLoops_challenge1_b: Biasanya anda hanya akan `pick pumpkin` jika anda berada di labu. Apa lagi yang perlu anda lakukan jika anda menggunakan labu?
      courseD_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: Jumlah masing-masing sayuran di setiap ruang bisa berubah. Sebuah loop `while` bisa membantu!
      courseD_farmer_condLoops_challenge2_2018_authored_hint:
        courseD_farmer_condLoops_challenge2_a: Jumlah masing-masing sayuran di setiap ruang bisa berubah. Sebuah loop `while` bisa membantu!
      courseD_farmer_condLoops_challenge2_clone_authored_hint: [ ]
      courseD_farmer_conditionals10_authored_hint: [ ]
      courseD_farmer_conditionals4_authored_hint:
        courseD_farmer_conditionals4_a: Daripada menggunakan loop `repeat`, gunakan loop` while` untuk terus menggali sampai tumpukan hilang.
      courseD_farmer_conditionals5_authored_hint:
        courseD_farmer_conditionals5a: Cobalah menyarangkan loop `while` di dalam loop` repeat`.
      courseD_farmer_conditionals6_authored_hint:
        courseD_farmer_conditionals6_a: Pastikan anda menggunakan loop `while` untuk mengetahui berapa kali mengisi setiap lubang.
        courseD_farmer_conditionals6_b: Perhatikan bahwa petani perlu bergerak maju dan turun beberapa kali dalam pola tangga.
      courseD_farmer_conditionals7_authored_hint:
        courseD_farmer_conditionals8_a: Blok `while path ahead` memungkinkan anda terus berjalan, bahkan jika anda tidak tahu berapa banyak kotak berada di jalan.
      courseD_farmer_conditionals8_authored_hint:
        courseD_farmer_conditionals8_a: Anda harus menggunakan lebih dari satu loop`while`.
        courseD_farmer_conditionals8_b: Setiap lubang ada di ujung jalan, jadi gunakan `while path ahead` sebelum menggunakan` while there's a hole`.
        courseD_farmer_conditionals8_c: Perhatikan bahwa anda perlu mengulangi kode`while path ahead`,` while there is a hole' enam kali.
      courseD_farmer_conditionals9_authored_hint: [ ]
      courseD_farmer_until_challenge2_authored_hint: [ ]
      courseD_farmer_until_challenge2_2018_authored_hint: [ ]
      courseD_farmer_while1_authored_hint:
        courseD_farmer_while1_a: Anda akan perlu maju empat kali untuk sampai ke tumpukan. Dapatkah anda menggunakan sebuah loop `repeat` untuk ini?
        courseD_farmer_while1_b: Gunakan blok `remove 1` ketika anda berdiri di atas tumpukan kotoran untuk menghapusnya.
      courseD_farmer_while10_authored_hint: [ ]
      courseD_farmer_while10_2018_authored_hint: [ ]
      courseD_farmer_while10_predict2_authored_hint: [ ]
      courseD_farmer_while10_predict2_2018_authored_hint: [ ]
      courseD_farmer_while1_2018_authored_hint:
        courseD_farmer_while1_a: Anda akan perlu maju empat kali untuk sampai ke tumpukan. Dapatkah anda menggunakan sebuah loop `repeat` untuk ini?
        courseD_farmer_while1_b: Gunakan blok `remove 1` ketika anda berdiri di atas tumpukan kotoran untuk menghapusnya.
      courseD_farmer_while2_authored_hint:
        courseD_farmer_while2_a: Anda hanya perlu bergerak sekali untuk sampai ke lubang.
        courseD_farmer_while2_b: Anda akan membutuhkan blok `fill 1` enam kali. Dapatkah anda menggunakan sebuah loop untuk membuat ini lebih sederhana?
      courseD_farmer_while2_2018_authored_hint:
        courseD_farmer_while2_a: Anda hanya perlu bergerak sekali untuk sampai ke lubang.
        courseD_farmer_while2_b: Anda akan membutuhkan blok `fill 1` enam kali. Dapatkah anda menggunakan sebuah loop untuk membuat ini lebih sederhana?
      courseD_farmer_while3_authored_hint:
        courseD_farmer_while3_a: Sebuah loop bisa membantu anda menyederhanakan kode anda di sini.
        courseD_farmer_while3_b: Anda seharusnya tidak memerlukan banyak blok `turn` untuk sampai ke tumpukan.
      courseD_farmer_while3_2018_authored_hint:
        courseD_farmer_while3_a: Sebuah loop bisa membantu anda menyederhanakan kode anda di sini.
        courseD_farmer_while3_b: Anda seharusnya tidak memerlukan banyak blok `turn` untuk sampai ke tumpukan.
      courseD_farmer_while4_authored_hint:
        courseD_farmer_conditionals4_a: Daripada menggunakan loop `repeat`, gunakan loop` while` untuk terus menggali sampai tumpukan hilang.
        courseD_farmer_conditionals4_b: Ini terlihat sangat mirip dengan teka-teki sebelumnya, satu-satunya perbedaan adalah loop yang anda butuhkan.
      courseD_farmer_while4_2018_authored_hint:
        courseD_farmer_conditionals4_a: Daripada menggunakan loop `repeat`, gunakan loop` while` untuk terus menggali sampai tumpukan hilang.
        courseD_farmer_conditionals4_b: Ini terlihat sangat mirip dengan teka-teki sebelumnya, satu-satunya perbedaan adalah loop yang anda butuhkan.
      courseD_farmer_while4_predict1_authored_hint: [ ]
      courseD_farmer_while4_predict1_2018_authored_hint: [ ]
      courseD_farmer_while5_authored_hint:
        courseD_farmer_conditionals5a_a: Cobalah menyarangkan loop `while` di dalam loop` repeat`.
        courseD_farmer_conditionals5a_b: Petani perlu bergerak maju sebanyak lima kali untuk sampai ke akhir baris. Apa lagi yang perlu dilakukan petani?
        courseD_farmer_conditionals5a_c: Bergerak maju 5 kali. Setiap kali anda bergerak maju, hapus tumpukan kotoran dengan menggunakan blok`while there a pile`.
      courseD_farmer_while5_2018_authored_hint:
        courseD_farmer_conditionals5a_a: Cobalah menyarangkan loop `while` di dalam loop` repeat`.
        courseD_farmer_conditionals5a_b: Petani perlu bergerak maju sebanyak lima kali untuk sampai ke akhir baris. Apa lagi yang perlu dilakukan petani?
        courseD_farmer_conditionals5a_c: Bergerak maju 5 kali. Setiap kali anda bergerak maju, hapus tumpukan kotoran dengan menggunakan blok`while there a pile`.
      courseD_farmer_while6_authored_hint:
        courseD_farmer_conditionals6_a: Pastikan anda menggunakan loop `while` untuk mengetahui berapa kali mengisi setiap lubang.
        courseD_farmer_conditionals6_b: Perhatikan bahwa petani perlu bergerak maju dan turun beberapa kali dalam pola tangga.
        courseD_farmer_conditionals6_c: |-
          The stair step pattern uses the following blocks
          - move forward
          - fill hole
          - turn right
          - move forward
          - fill hole
          - turn left
          
          How many times do you need to use this stair step pattern?
          
          Make sure you are using the `while there is a hole` to fill the hole.
      courseD_farmer_while6_2018_authored_hint:
        courseD_farmer_conditionals6_a: Pastikan anda menggunakan loop `while` untuk mengetahui berapa kali mengisi setiap lubang.
        courseD_farmer_conditionals6_b: Perhatikan bahwa petani perlu bergerak maju dan turun beberapa kali dalam pola tangga.
        courseD_farmer_conditionals6_c: |-
          The stair step pattern uses the following blocks
          - move forward
          - fill hole
          - turn right
          - move forward
          - fill hole
          - turn left
          
          How many times do you need to use this stair step pattern?
          
          Make sure you are using the `while there is a hole` to fill the hole.
      courseD_farmer_while7_authored_hint:
        courseD_farmer_conditionals8_a: Blok `while path ahead` memungkinkan anda terus berjalan, bahkan jika anda tidak tahu berapa banyak kotak berada di jalan.
        courseD_farmer_conditionals8_b: Menempatkan loop `while path ahead` di dalam loop berulang bisa membantu anda dalam teka-teki ini.
        courseD_farmer_conditionals8_c: Apa yang perlu anda lakukan di akhir masing-masing jalan?
      courseD_farmer_while7_2018_authored_hint:
        courseD_farmer_conditionals8_a: Blok `while path ahead` memungkinkan anda terus berjalan, bahkan jika anda tidak tahu berapa banyak kotak berada di jalan.
        courseD_farmer_conditionals8_b: Menempatkan loop `while path ahead` di dalam loop berulang bisa membantu anda dalam teka-teki ini.
        courseD_farmer_conditionals8_c: Apa yang perlu anda lakukan di akhir masing-masing jalan?
      courseD_farmer_while8_authored_hint:
        courseD_farmer_conditionals8_a: Anda harus menggunakan lebih dari satu loop`while`.
        courseD_farmer_conditionals8_b: Setiap lubang ada di ujung jalan, jadi gunakan `while path ahead` sebelum menggunakan` while there's a hole`.
        courseD_farmer_conditionals8_c: Perhatikan bahwa anda perlu mengulangi kode`while path ahead`,` while there is a hole' enam kali.
      courseD_farmer_while8_2018_authored_hint:
        courseD_farmer_conditionals8_a: Anda harus menggunakan lebih dari satu loop`while`.
        courseD_farmer_conditionals8_b: Setiap lubang ada di ujung jalan, jadi gunakan `while path ahead` sebelum menggunakan` while there's a hole`.
        courseD_farmer_conditionals8_c: Perhatikan bahwa anda perlu mengulangi kode`while path ahead`,` while there is a hole' enam kali.
      courseD_farmer_while9_authored_hint: [ ]
      courseD_farmer_while9_2018_authored_hint: [ ]
      courseD_farmer_while_challenge1_authored_hint:
        courseD_farmer_while_challenge1_a: Setiap lubang atau tumpukan terletak satu spasi ** terbelakang ** dari ujung jalan.
        courseD_farmer_while_challenge1_b: Jika anda menggunakan sebuah loop `while`, anda dapat memberitahu petani untuk membuang tumpukan atau mengisi lubang, bahkan jika tidak ada satu pun di sana. Itu berarti Anda bisa memprogramnya untuk menghilangkan kotoran atau mengisi lubang apapun, tidak peduli di mana dia berada.
        courseD_farmer_conditionals8_c: Hal ini memungkinkan untuk menyelesaikan ini tanpa menggunakan loop `repeat`. Untuk melakukan ini, anda akan perlu untuk menggunakan empat loop `while`.
      courseD_farmer_while_challenge1_2018_authored_hint:
        courseD_farmer_while_challenge1_a: Setiap lubang atau tumpukan terletak satu spasi ** terbelakang ** dari ujung jalan.
        courseD_farmer_while_challenge1_b: Jika anda menggunakan sebuah loop `while`, anda dapat memberitahu petani untuk membuang tumpukan atau mengisi lubang, bahkan jika tidak ada satu pun di sana. Itu berarti Anda bisa memprogramnya untuk menghilangkan kotoran atau mengisi lubang apapun, tidak peduli di mana dia berada.
        courseD_farmer_conditionals8_c: Hal ini memungkinkan untuk menyelesaikan ini tanpa menggunakan loop `repeat`. Untuk melakukan ini, anda akan perlu untuk menggunakan empat loop `while`.
      courseD_farmer_while_challenge2_authored_hint:
        courseD_farmer_while_challenge1_a: Setiap lubang atau tumpukan terletak satu spasi ** terbelakang ** dari ujung jalan.
        courseD_farmer_while_challenge1_b: Jika anda menggunakan sebuah loop `while`, anda dapat memberitahu petani untuk membuang tumpukan atau mengisi lubang, bahkan jika tidak ada satu pun di sana. Itu berarti anda bisa memprogramnya untuk menghapus kotoran dan mengisi lubang apapun, sambil berdiri di tempat yang sama.
        courseD_farmer_conditionals8_c: Hal ini memungkinkan untuk menyelesaikan ini tanpa menggunakan loop `repeat`. Untuk melakukan ini, anda akan perlu untuk menggunakan empat loop `while`.
      courseD_farmer_while_challenge2_2018_authored_hint:
        courseD_farmer_while_challenge1_a: Setiap lubang atau tumpukan terletak satu spasi ** terbelakang ** dari ujung jalan.
        courseD_farmer_while_challenge1_b: Jika anda menggunakan sebuah loop `while`, anda dapat memberitahu petani untuk membuang tumpukan atau mengisi lubang, bahkan jika tidak ada satu pun di sana. Itu berarti anda bisa memprogramnya untuk menghapus kotoran dan mengisi lubang apapun, sambil berdiri di tempat yang sama.
        courseD_farmer_conditionals8_c: Hal ini memungkinkan untuk menyelesaikan ini tanpa menggunakan loop `repeat`. Untuk melakukan ini, anda akan perlu untuk menggunakan empat loop `while`.
      courseD_harvester_nested_loops_challenge1-broken_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: Anda mungkin telah menggunakan sebuah loop untuk membuat pola zig-zag. Jika anda ingat algoritma itu, anda bisa membuat beberapa tambahan di sini.
      courseD_harvester_nested_loops_challenge1_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: 'Cobalah mengikuti jalan ini untuk menjangkau semua jagung! '
        courseD_harvester_nested_loops_challenge1_b: Untuk mengumpulkan lebih dari satu potong jagung, anda perlu menggunakan `pick corn` lebih dari satu kali.
        courseD_harvester_nested_loops_challenge1_c: Anda akan perlu meletakkan loop kecil di dalam loop utama anda untuk menyelesaikan teka-teki ini!
      courseD_harvester_nested_loops_challenge1_2018_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: 'Cobalah mengikuti jalan ini untuk menjangkau semua jagung! '
        courseD_harvester_nested_loops_challenge1_b: Untuk mengumpulkan lebih dari satu potong jagung, anda perlu menggunakan `pick corn` lebih dari satu kali.
        courseD_harvester_nested_loops_challenge1_c: Anda akan perlu meletakkan loop kecil di dalam loop utama anda untuk menyelesaikan teka-teki ini!
      courseD_iceage_loops1_authored_hint:
        courseD_iceage_loops1_a: Watch out for broken ice! Scrat will fall right through!
        courseD_iceage_loops1_b: |-
          You will have to use this block:
          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Watch out for broken ice! Scrat will fall into the water!
        courseB_iceage_loops10_b: Try saying the steps out loud or writing them down on a piece of paper. Do you see any patterns?
        courseB_iceage_loops10_c: This is a long puzzle! Follow this path.
      courseD_iceage_loops2_authored_hint:
        courseD_iceage_loops2_a: Break this puzzle into two pieces, one before the corner, and one after the corner.
        courseD_iceage_loops2_b: If you get stuck, try saying the steps out loud.
        courseD_iceage_loops2_c: Follow this path to get Scrat to the acorn.
      courseD_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          Use this new block!
          <xml><block type="controls_repeat_dropdown">
          <title name="TIMES" config="2-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: To repeat code, drag out a `repeat` loop, then put the block you want repeated inside.
      courseD_iceage_loops4_authored_hint:
        courseD_iceage_loops4_a: Don't be afraid to run your code and see what happens!
        courseD_iceage_loops4_b: Try writing down the steps Scrat would take to get to the acorn.  Do you see a pattern?
        courseD_iceage_loops4_c: This is the path Scrat should take.
      courseD_iceage_loops6_authored_hint:
        courseD_iceage_loops6_a: Your final code will have **three** `move forward` blocks.
        courseD_iceage_loops6_b: You only need to add **one** more loop!
        courseD_iceage_loops6_c: Your final path should look like this.
      courseD_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: If you get stuck, try writing steps down on a piece of paper. Do you see a pattern?
        courseB_iceage_loops7_b: This is the path Scrat should take to get to the acorn.
      courseD_iceage_loops8_authored_hint:
        courseD_iceage_loops8_a: Are the `turn` blocks right? What else can you change?
        courseD_iceage_loops8_b: The first loop should repeat **3** times, the second should repeat **5** times, the third loop should repeat **4** times, and the last loop should repeat **4** times.
        courseD_iceage_loops8_c: Use loops to help Scrat follow this path.
      courseD_iceage_loops9_authored_hint:
        courseD_iceage_loops9_a: Having trouble? Try breaking this puzzle into smaller pieces. Don't be afraid to run your puzzle as you code!
        courseD_iceage_loops9_b: Your final code should have **4** loops.
        courseD_iceage_loops9_c: Scrat should follow this path to get the acorn.
      courseD_maze_loops_challenge1_authored_hint:
        courseD_bee_nested_loops_challenge1_a: Jangan lupa bahwa anda bisa `repeat` satu perintah atau pola yang lebih panjang. anda bahkan bisa `repeat` sebuah blok `repeat'!
        courseD_bee_nested_loops_challenge1_b: Untuk mendapatkan semua 4 permata, pertama gunakan sebuah loop untuk menjauh dari pusat. Belok kiri atau kanan, kemudian gunakan sebuah loop bersarang untuk berpindah dari tumpukan harta pertama ke yang kedua. Jika anda mengulangi loop bersarang cukup waktu, kolektor akan bergerak mengelilingi gua * keseluruhan *!
        courseD_bee_nested_loops_challenge1_c: Program terpendek yang mencapai semua harta hanya menggunakan satu blok `collect` dan dua putaran.
      courseD_maze_nestedLoops3_authored_hint:
        courseD_maze_nestedLoops3_a: Untuk memecahkan teka-teki ini, anda akan perlu "nest" satu loop `repeat` di dalam loop` repeat` lain.
        courseD_maze_nestedLoops3_b: Tidak tahu di mana harus dimana meletakkan loop? Coba tulis kode langkah demi langkah dan cari sebuah pola.
        courseD_maze_nestedLoops3_c: Cobalah menulis kode untuk satu lintasan lurus dan belokan. Dapatkah anda mengulangi ini untuk mendapatkan bunga matahari?
      courseD_maze_nestedLoops3_2018_authored_hint:
        courseD_maze_nestedLoops3_a: Untuk memecahkan teka-teki ini, anda akan perlu "nest" satu loop `repeat` di dalam loop` repeat` lain.
        courseD_maze_nestedLoops3_b: Tidak tahu di mana harus dimana meletakkan loop? Coba tulis kode langkah demi langkah dan cari sebuah pola.
        courseD_maze_nestedLoops3_c: Cobalah menulis kode untuk satu lintasan lurus dan belokan. Dapatkah anda mengulangi ini untuk mendapatkan bunga matahari?
      courseD_maze_nestedLoops4_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Try using this path through the maze.
          
          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Jika pola loop sulit untuk dilihat, cobalah mengkodekan semuanya terlebih dulu dan lihat kode apa yang berulang-ulang lagi dan lagi sebelum anda memasukkan loop.
        courseD_maze_nestedLoops4_c: Coba gunakan satu loop`repeat`di dalam yang lain untuk mengurangi jumlah kode yang anda butuhkan.
      courseD_maze_nestedLoops4_2018_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Try using this path through the maze.
          
          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Jika pola loop sulit untuk dilihat, cobalah mengkodekan semuanya terlebih dulu dan lihat kode apa yang berulang-ulang lagi dan lagi sebelum anda memasukkan loop.
        courseD_maze_nestedLoops4_c: Coba gunakan satu loop`repeat`di dalam yang lain untuk mengurangi jumlah kode yang anda butuhkan.
      courseD_maze_nestedLoops5_authored_hint:
        courseD_maze_nestedLoops5_a: Carilah pola langkah tangga di labirin ini untuk menemukan di mana loop bersarang bisa digunakan.
        courseD_maze_nestedLoops5_b: Tidak tahu di mana harus dimana meletakkan loop? Coba tulis kode langkah demi langkah dan cari sebuah pola.
      courseD_maze_nestedLoops5_2018_authored_hint:
        courseD_maze_nestedLoops5_a: Carilah pola langkah tangga di labirin ini untuk menemukan di mana loop bersarang bisa digunakan.
        courseD_maze_nestedLoops5_b: Tidak tahu di mana harus dimana meletakkan loop? Coba tulis kode langkah demi langkah dan cari sebuah pola.
      courseD_maze_nestedLoops6_authored_hint:
        courseD_maze_nestedLoops6_a: Jika anda terjebak, coba tuliskan kode di atas kertas tanpa loop terlebih dulu dan temukan pola.
        courseD_maze_nestedLoops6_b: Loop bersarang `repeat` dapat membantu mengurangi jumlah blok yang digunakan.
        courseD_maze_nestedLoops6_c: Ini akan mengambil dua set loop bertasarang `repeat` untuk menyelesaikan teka-teki ini.
      courseD_maze_nestedLoops6_2018_authored_hint:
        courseD_maze_nestedLoops6_a: Jika anda terjebak, coba tuliskan kode di atas kertas tanpa loop terlebih dulu dan temukan pola.
        courseD_maze_nestedLoops6_b: Loop bersarang `repeat` dapat membantu mengurangi jumlah blok yang digunakan.
        courseD_maze_nestedLoops6_c: Ini akan mengambil dua set loop bertasarang `repeat` untuk menyelesaikan teka-teki ini.
      courseD_maze_ramp1_authored_hint:
        courseC_maze_programming1_a: Jika burung tersebut tidak sampai ke babi, pastikan ketiga blok telah diklik sepenuhnya bersama-sama, lalu klik "Run" lagi.
        courseC_maze_programming1_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_maze_ramp2_authored_hint:
        courseC_maze_programming2_a: Untuk menggunakan sebuah blok `move forward`, seret dari toolbox ke dalam workspace dan hubungkan ke blok` when run`.
        courseC_maze_programming2_b: Pastikan semua 3 blok diklik bersama dan dilekatkan pada blok `when run`.
      courseD_maze_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Pastikan semua 3 blok diklik bersama dan dilekatkan pada blok `when run`.
      courseD_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
      courseD_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
      courseD_maze_ramp4_authored_hint:
        courseC_maze_programming4_a: Anda bisa belok kanan atau kiri dari sudut pandang burung. Jika anda menghadap ke kanan, belok ke kanan akan membuat anda menunjuk ke bawah.
        courseC_maze_programming4_b: Untuk mengikuti jalan, bergerak maju dan berbelok ke satu arah, kemudian bergerak lagi dan berbelok sebaliknya. Maju terus satu kali lagi untuk menjangkau babi.
      courseD_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
      courseD_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: Ingat bahwa ternyata dari sudut pandang burung.
        courseC_maze_programming5_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: Ingat bahwa ternyata dari sudut pandang burung.
        courseC_maze_programming5_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_maze_ramp5a_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: Ingat bahwa ternyata dari sudut pandang burung.
        courseC_maze_programming5_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_maze_ramp5a_2018_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: Ingat bahwa ternyata dari sudut pandang burung.
        courseC_maze_programming5_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_maze_ramp5b_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: Ingat bahwa ternyata dari sudut pandang burung.
        courseC_maze_programming5_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_maze_ramp5b_2018_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: Ingat bahwa ternyata dari sudut pandang burung.
        courseC_maze_programming5_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_maze_ramp5c_authored_hint: [ ]
      courseD_maze_ramp5c_2018_authored_hint: [ ]
      courseD_maze_ramp5d_authored_hint: [ ]
      courseD_maze_ramp5d_2018_authored_hint: [ ]
      courseD_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseC_maze_programming6_b: The bird starts facing a wall, so remember to turn before you move.
        courseC_maze_programming6_c: Remember you can write one piece of the code at a time, then run it to figure out where you need to go from there.
      courseD_maze_ramp6a_authored_hint:
        courseC_maze_programming6a_a: Use a `repeat` loop to get this bird moving!
      courseD_maze_ramp7_authored_hint:
        courseD_maze_ramp7_b: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseD_maze_ramp7_a: Use repeat blocks to run either a single block or a chunk of code over and over.
        courseD_maze_ramp7_c: Jika Anda ingin menyederhanakan kode Anda, Anda bisa memasukkan satu lingkaran pengulangan di bagian lain! Ini disebut sebuah bersarang ** lingkaran **.
      courseD_maze_until1_authored_hint:
        courseD_maze_until1_a: Are there any sequences you can loop to make your code shorter?
        courseD_maze_until1_b: Try using a nested loop to solve this puzzle.
      courseD_maze_until10_authored_hint: [ ]
      courseD_maze_until10_2018_authored_hint: [ ]
      courseD_maze_until10_predict2_authored_hint: [ ]
      courseD_maze_until10_predict2_2018_authored_hint: [ ]
      courseD_maze_until1_2018_authored_hint:
        courseD_maze_until1_a: Are there any sequences you can loop to make your code shorter?
        courseD_maze_until1_b: Try using a nested loop to solve this puzzle.
      courseD_maze_until2_authored_hint:
        courseD_maze_until2_a: An `until pig` loop will help you keep going until you succeed!
      courseD_maze_until2_predict1_authored_hint: [ ]
      courseD_maze_until2_predict1_2018_authored_hint: [ ]
      courseD_maze_until3_authored_hint:
        courseD_maze_until3_a: |-
          - What does your code do?
          - What is it supposed to do?
          - What does that tell you?
        courseD_maze_until3_b: If you are getting stuck, try writing out the steps on a piece of paper and looking for places where they repeat.
        courseD_maze_until3_c: Is there a stair step pattern you can follow for this puzzle?
        courseD_maze_until3_d: Don't forget to use the `repeat until` block to make your code shorter.
      courseD_maze_until3_2018_authored_hint:
        courseD_maze_until3_a: |-
          - What does your code do?
          - What is it supposed to do?
          - What does that tell you?
        courseD_maze_until3_b: If you are getting stuck, try writing out the steps on a piece of paper and looking for places where they repeat.
        courseD_maze_until3_c: Is there a stair step pattern you can follow for this puzzle?
        courseD_maze_until3_d: Don't forget to use the `repeat until` block to make your code shorter.
      courseD_maze_until4_authored_hint:
        courseD_maze_until4_a: |-
          Use the "Step" button to go through your code line by line.
          
          - Does everything work at the first step?
          - Does everything work at the second step?
          - Where does it go wrong?
        courseD_maze_until4_b: Is there a stair step pattern you can follow for this puzzle?
        courseD_maze_until4_c: Don't forget to use the `repeat until` block to make your code shorter.
      courseD_maze_until4_2018_authored_hint:
        courseD_maze_until4_a: |-
          Use the "Step" button to go through your code line by line.
          
          - Does everything work at the first step?
          - Does everything work at the second step?
          - Where does it go wrong?
        courseD_maze_until4_b: Is there a stair step pattern you can follow for this puzzle?
        courseD_maze_until4_c: Don't forget to use the `repeat until` block to make your code shorter.
      courseD_maze_until5_authored_hint:
        courseD_maze_until5_a: Don't forget to use `if path to the left` to keep the zombie checking for a place to turn.
        courseD_maze_until5_b: To use only one `move forward`, put it inside the `repeat until sunflower` block.
        courseD_maze_until5_c: After each step, the zombie should check whether there is a path to the left. What should he do if he finds one?
      courseD_maze_until5_2018_authored_hint:
        courseD_maze_until5_b: To use only one `move forward`, put it inside the `repeat until sunflower` block.
      courseD_maze_until6_authored_hint:
        courseD_maze_until6_a: This time, try the `if path to the right` to keep the zombie on track.
        courseD_maze_until6_b: To use only one `move forward`, put it inside the `repeat until sunflower` block.
        courseD_maze_until6_c: Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!
      courseD_maze_until6_2018_authored_hint:
        courseD_maze_until6_b: To use only one `move forward`, put it inside the `repeat until sunflower` block.
      courseD_maze_until7_authored_hint:
        courseD_maze_until7_a: You don't need your code to be any longer than last time, just because the maze is!
        courseD_maze_until7_b: Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!
        courseD_maze_until7_c: Remember to check for paths to the left, because turning right will take you down the wrong path!
      courseD_maze_until7_2018_authored_hint:
        courseD_maze_until7_a: You don't need your code to be any longer than last time, just because the maze is!
        courseD_maze_until7_b: Although there are more turns here than the last puzzle, your code can be almost identical because of the `repeat until` block!
      courseD_maze_until8_authored_hint:
        courseD_maze_until8_a: Make sure you're using an `if/else` block to keep the zombie headed the right direction.
        courseD_maze_until8_b: 'With your `if/else` block: if there is a path ahead, what should you do?'
        courseD_maze_until8_c: 'With your `if/else` block: if there is not a path ahead, which way should you turn?'
      courseD_maze_until8_2018_authored_hint:
        courseD_maze_until8_a: Make sure you're using an `if/else` block to keep the zombie headed the right direction.
        courseD_maze_until8_b: 'With your `if/else` block: if there is a path ahead, what should you do?'
        courseD_maze_until8_c: 'With your `if/else` block: if there is not a path ahead, which way should you turn?'
      courseD_maze_until9_authored_hint:
        courseD_maze_until8_a: Using `if path ahead` will keep you going forward whenever possible, helping you miss the paths with chompers.
        courseD_maze_until8_b: Which direction should you turn if there is no path forward?
        courseD_maze_until8_c: Remember to use the `repeat until` block to get you to the sunflower!
      courseD_maze_until9_2018_authored_hint:
        courseD_maze_until8_c: Remember to use the `repeat until` block to get you to the sunflower!
      courseD_maze_until_challenge_authored_hint: [ ]
      courseD_maze_until_challenge1-delete-this-copy_authored_hint: [ ]
      courseD_maze_until_challenge1_authored_hint: [ ]
      courseD_maze_until_challenge1_2018_authored_hint: [ ]
      courseD_maze_until_challenge2_authored_hint: [ ]
      courseD_playLab_cond1_authored_hint:
        courseD_playLab_cond1_a: To solve this challenge, attach the `move actor 1 up` block to the `when up arrow` event, then do the same for every other direction.
        courseD_playLab_cond1_b: Use the drop down menus on the `when arrow` and `move actor` blocks to change which direction they go.
        courseD_playLab_cond1_c: Remember to move Pegleg to both of the flags once you click "Run"!
      courseD_playLab_cond1_2018_authored_hint:
        courseD_playLab_cond1_a: To solve this challenge, attach the `move actor 1 up` block to the `when up arrow` event, then do the same for every other direction.
        courseD_playLab_cond1_b: Use the drop down menus on the `when arrow` and `move actor` blocks to change which direction they go.
        courseD_playLab_cond1_c: Remember to move Pegleg to both of the flags once you click "Run"!
      courseD_playLab_cond2_authored_hint:
        courseD_playLab_cond2_a: To succeed with this puzzle, use the `score point` block beneath the `when actor 1 touches actor 2` event.
      courseD_playLab_cond2_2018_authored_hint:
        courseD_playLab_cond2_a: To succeed with this puzzle, use the `score point` block beneath the `when actor 1 touches actor 2` event.
      courseD_playLab_cond3_authored_hint:
        courseD_playLab_cond3_a: You will need to add two blocks to your `repeat forever` loop.  One will choose a random emotion for the dragon (actor 2) and the other will wait 1 second before going through the loop again.
      courseD_playLab_cond3_2018_authored_hint:
        courseD_playLab_cond3_a: You will need to add two blocks to your `repeat forever` loop.  One will choose a random emotion for the dragon (actor 2) and the other will wait 1 second before going through the loop again.
      courseD_playLab_cond3a_authored_hint:
        courseD_playLab_cond3_c: "- `If` the dragon is happy \n   - `score point`\n   - `score point`  \n   \n   \n \n- `Else` `score point`"
      courseD_playLab_cond3a_2018_authored_hint:
        courseD_playLab_cond3_c: "- `If` the dragon is happy \n   - `score point`\n   - `score point`  \n   \n   \n \n- `Else` `score point`"
      courseD_playLab_cond3b_authored_hint:
        courseD_playLab_cond3b_a: You will need to add blocks to your `repeat forever` loop to make the dragon continue to move up and down
      courseD_playLab_cond4_authored_hint:
        courseD_playLab_cond4_a: You will want to use the `when run` event to get the ninja to chase the pirate.
        courseD_playLab_cond4_b: There is a special block called `set every masked ninja to chase actor` that will keep the ninja hot on the pirate's trail!
        courseD_playLab_cond4_c: Put the `end game as a loss` block underneath the `when actor 1 touches actor 3` event.
      courseD_playLab_cond4_2018_authored_hint:
        courseD_playLab_cond4_a: You will want to use the `when run` event to get the ninja to chase the pirate.
        courseD_playLab_cond4_b: There is a special block called `set every masked ninja to chase actor` that will keep the ninja hot on the pirate's trail!
        courseD_playLab_cond4_c: Put the `end game as a loss` block underneath the `when actor 1 touches actor 3` event.
      courseD_playLab_cond5_authored_hint:
        courseD_playLab_cond5_a: Use an `if` statement that compares whether `score` is `>` 5 to solve this challenge.
        courseD_playLab_cond5_b: You can have more than one `repeat forever` loop in the workspace.
      courseD_playLab_cond5_2018_authored_hint:
        courseD_playLab_cond5_a: Use an `if` statement that compares whether `score` is `>` 5 to solve this challenge.
        courseD_playLab_cond5_b: You can have more than one `repeat forever` loop in the workspace.
      courseD_playLab_cond6_authored_hint:
        courseD_playLab_cond6_a: Add the `set masked ninja speed` block to the beginning of the program to help slow the ninja down.
        courseD_playLab_cond6_b: Anda akan perlu menggunakan sebuah blok `if actor 1 y position > 255` di dalam sebuah blok 'repeat forever' untuk selalu memeriksa apakah bajak laut berada di bawah gurita.
      courseD_playLab_cond6_2018_authored_hint:
        courseD_playLab_cond6_a: Add the `set masked ninja speed` block to the beginning of the program to help slow the ninja down.
        courseD_playLab_cond6_b: Anda akan perlu menggunakan sebuah blok `if actor 1 y position > 255` di dalam sebuah blok 'repeat forever' untuk selalu memeriksa apakah bajak laut berada di bawah gurita.
      courseD_playLab_cond6a_authored_hint:
        courseD_playLab_cond6_c: Tambahkan sebuah blok `wait 1 second` ke bagian atas loop 'repeat forever' yang memeriksa posisi bajak laut (tapi tidak di dalam pernyataan` if`) untuk mtnjaga poin agar tidak dihapus terlalu cepat.
      courseD_playLab_cond6a_2018_authored_hint:
        courseD_playLab_cond6_c: Tambahkan sebuah blok `wait 1 second` ke bagian atas loop 'repeat forever' yang memeriksa posisi bajak laut (tapi tidak di dalam pernyataan` if`) untuk menjaga poin agar tidak dihapus terlalu cepat.
      courseD_playLab_cond6cloneForTest_authored_hint:
        courseD_playLab_cond6_a: Tambahkan blok `set masked ninja speed` ke awal program untuk membantu memperlambat ninja.
        courseD_playLab_cond6_b: Anda akan perlu menggunakan sebuah blok `if actor 1 y position > 255` di dalam sebuah blok 'repeat forever' untuk selalu memeriksa apakah bajak laut berada di bawah gurita.
        courseD_playLab_cond6_c: Tambahkan sebuah blok `wait 1 second` ke bagian atas loop 'repeat forever' yang memeriksa posisi bajak laut (tapi tidak di dalam pernyataan` if`) untuk menjaga poin agar tidak dihapus terlalu cepat.
      courseD_playLab_embed_cond6a_authored_hint: [ ]
      courseD_playLab_embedded_authored_hint: [ ]
      courseD_scrat_predict1_authored_hint: [ ]
      courseD_scrat_predict1_2018_authored_hint: [ ]
      courseD_scrat_ramp1_authored_hint:
        courseC_maze_programming1_a: Jika Scrat tidak sampai ke acorn, pastikan ketiga blok itu telah sepenuhnya bentak bersamaan, lalu klik "Run" lagi.
        courseC_maze_programming1_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_scrat_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: Jika Scrat tidak sampai ke acorn, pastikan ketiga blok itu telah sepenuhnya bentak bersamaan, lalu klik "Run" lagi.
        courseC_maze_programming1_b: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_scrat_ramp2_authored_hint:
        courseC_maze_programming2_a: Untuk menggunakan sebuah blok `move forward`, seret dari toolbox ke dalam ruang kerja dan hubungkan ke blok`when run`.
        courseC_maze_programming2_b: Pastikan ketiga blok 'move forward` terpasang pada blok `when run`.
      courseD_scrat_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Make sure all three `move forward` blocks are attached to the `when run` block.
      courseD_scrat_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: Ingat bahwa belok ke kanan dan kiri berasal dari sudut pandang Scrat.
      courseD_scrat_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: Ingat bahwa belok ke kanan dan kiri berasal dari sudut pandang Scrat.
      courseD_scrat_ramp4_authored_hint:
        courseC_maze_programming4_a: Anda dapat belok kanan atau kiri dari sudut pandang Scrat. Jika anda menghadap ke kanan, belok ke kanan akan membuat anda menunjuk ke bawah.
        courseC_maze_programming4_b: Untuk mengikuti jalan, bergerak maju dan berbelok ke satu arah, kemudian bergerak lagi dan berbelok sebaliknya. Maju terus satu kali lagi untuk menjangkau acorn.
        courseC_maze_programming4_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_scrat_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: Anda dapat belok kanan atau kiri dari sudut pandang Scrat. Jika anda menghadap ke kanan, belok ke kanan akan membuat anda menunjuk ke bawah.
        courseC_maze_programming4_b: Untuk mengikuti jalan, bergerak maju dan berbelok ke satu arah, kemudian bergerak lagi dan berbelok sebaliknya. Maju terus satu kali lagi untuk menjangkau acorn.
        courseC_maze_programming4_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_scrat_ramp5_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: How far do you need to move to get to the corner?
        courseC_maze_programming5_c: You will need to turn left at the corner to get to the acorn.
      courseD_scrat_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: How far do you need to move to get to the corner?
        courseC_maze_programming5_c: You will need to turn left at the corner to get to the acorn.
      courseD_scrat_ramp6_authored_hint:
        courseC_maze_programming6a_a: Use a `repeat` loop to get Scrat moving!
      courseD_scrat_ramp6_2018_authored_hint:
        courseC_maze_programming6a_a: Use a `repeat` loop to get Scrat moving!
      courseD_scrat_ramp7_authored_hint:
        courseD_scrat_programming6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseD_scrat_programming6_b: Remember to turn first before moving, since Scrat is facing the wrong direction.
        courseD_scrat_programming6_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_scrat_ramp7_2018_authored_hint:
        courseD_scrat_programming6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseD_scrat_programming6_b: Remember to turn first before moving, since Scrat is facing the wrong direction.
        courseD_scrat_programming6_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_scrat_ramp8_authored_hint:
        courseD_maze_ramp7_b: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseD_maze_ramp7_a: Use repeat blocks to run either a single block or a chunk of code over and over.
        courseD_maze_ramp7_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseD_scrat_ramp8_2018_authored_hint:
        courseD_maze_ramp7_b: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseD_maze_ramp7_a: Use repeat blocks to run either a single block or a chunk of code over and over.
        courseD_maze_ramp7_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseE_artist_concept1_authored_hint:
        courseE_artist_concept1_a: The hexagons have 50 pixel sides and 60 degree turns to the right.
        courseE_artist_concept1_b: Try using a function here so you don't have to write the code for a hexagon over and over again.
        courseE_artist_concept1_c: Use the `set width` block before each function call to change the pen width.
      courseE_artist_concept1_2018_authored_hint:
        courseE_artist_concept1_a: The hexagons have 50 pixel sides and 60 degree turns to the right.
        courseE_artist_concept1_b: Try using a function here so you don't have to write the code for a hexagon over and over again.
        courseE_artist_concept1_c: Use the `set width` block before each function call to change the pen width.
      courseE_artist_concept4_authored_hint:
        courseE_artist_concept4_a: There are several ways to solve this puzzle. Can you make a plan?
        courseE_artist_concept4_b: Try creating one square. Then make a line of squares.  What comes next?
        courseE_artist_concept4_c: After drawing a line of squares, you can either turn around and draw another line of squares going left, or you can jump back to the left side of the figure to draw another line of squares going right. Which do you prefer?
      courseE_artist_concept4_2018_authored_hint:
        courseE_artist_concept4_a: There are several ways to solve this puzzle. Can you make a plan?
        courseE_artist_concept4_b: Try creating one square. Then make a line of squares.  What comes next?
        courseE_artist_concept4_c: After drawing a line of squares, you can either turn around and draw another line of squares going left, or you can jump back to the left side of the figure to draw another line of squares going right. Which do you prefer?
      courseE_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'Setengah segi enam memiliki **panjang 30** dan belok kanan **60 derajat**.  '
        courseE_artist_concept_challenge1_b: 'Segitiga 2/3 memiliki **panjang 80** dan belok kanan **120 derajat**. '
        courseE_artist_concept_challenge1_c: |-
          This is the design you want to repeat to make the full shape:
          
          ![](https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png)
      courseE_artist_concept_challenge1_2018_authored_hint:
        courseE_artist_concept_challenge1_a: 'Setengah segi enam memiliki **panjang 30** dan belok kanan **60 derajat**.  '
        courseE_artist_concept_challenge1_b: 'Segitiga 2/3 memiliki **panjang 80** dan belok kanan **120 derajat**. '
        courseE_artist_concept_challenge1_c: |-
          This is the design you want to repeat to make the full shape:
          
          ![](https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png)
      courseE_artist_concept_challenge2_authored_hint:
        courseE_artist_concept_challenge2_a: Once you define a function, you can call it over and over again - whenever and wherever you want!
        courseE_artist_concept_challenge2_b: |-
          You can jump to different positions on the canvas using this command:
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_concept_challenge2_2018_authored_hint:
        courseE_artist_concept_challenge2_a: Once you define a function, you can call it over and over again - whenever and wherever you want!
        courseE_artist_concept_challenge2_b: |-
          You can jump to different positions on the canvas using this command:
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_embed_functions8_authored_hint: [ ]
      courseE_artist_functions1_authored_hint:
        courseE_artist_functions1_a: Setiap persegi memiliki 100 piksel sisi, yang berarti anda harus bergerak maju ke depan 175 piksel sebelum menggambar persegi kedua anda.
        courseE_artist_functions1_b: Tidak apa-apa menggambar garis tumpang tindih untuk membuat gelas anda.
        courseE_artist_functions1_c: For shorter code, try using a `repeat` loop to draw the square frames of the glasses.
      courseE_artist_functions10_authored_hint:
        courseD_artist_functions10_b: This drawing is a lot like the last one, but the `draw line` function is now drawing a different shape.
        courseD_artist_functions10_a: To avoid using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.
        courseD_artist_functions10_c: |-
          Do you see where this drawing could use a function called `line of hexagons`?
          
          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2018_authored_hint:
        courseD_artist_functions10_b: This drawing is a lot like the last one, but the `draw line` function is now drawing a different shape.
        courseD_artist_functions10_a: To avoid using multiple `move forward` blocks, create a `draw hexagon` function and call that multiple times.
        courseD_artist_functions10_c: |-
          Do you see where this drawing could use a function called `line of hexagons`?
          
          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions1_2018_authored_hint:
        courseE_artist_functions1_a: Setiap persegi memiliki 100 piksel sisi, yang berarti anda harus bergerak maju ke depan 175 piksel sebelum menggambar persegi kedua anda.
        courseE_artist_functions1_b: Tidak apa-apa menggambar garis tumpang tindih untuk membuat gelas anda.
        courseE_artist_functions1_c: For shorter code, try using a `repeat` loop to draw the square frames of the glasses.
      courseE_artist_functions2_authored_hint:
        courseD_artist_functions2_b: The function you write should not contain your whole program, just the part that draws a square with 100 pixel sides.
        courseD_artist_functions2_c: |-
          Use the green `draw a square` block to "call" your function under the `when run` block. Otherwise, the code in your function will not run.
          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Program anda harus:
          - Menggunakan fungsi
          - Bergerak maju 100 + 75 piksel
          - Menggunakan fungsi
      courseE_artist_functions2_2018_authored_hint:
        courseD_artist_functions2_b: The function you write should not contain your whole program, just the part that draws a square with 100 pixel sides.
        courseD_artist_functions2_c: |-
          Use the green `draw a square` block to "call" your function under the `when run` block. Otherwise, the code in your function will not run.
          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Program anda harus:
          - Menggunakan fungsi
          - Bergerak maju 100 + 75 piksel
          - Menggunakan fungsi
      courseE_artist_functions3_authored_hint:
        courseD_artist_functions3_a: |-
          Untuk mengatasi teka-teki ini, anda hanya perlu menambahkan satu loop yang mengulangi kode starter 8 kali.
          Jika anda tidak ingat kode starternya, klik "start over" di sudut kanan atas ruang kerja.
        courseD_artist_functions3_b: Your loop should have all 3 starter code blocks inside of it.
      courseE_artist_functions3_2018_authored_hint:
        courseD_artist_functions3_a: |-
          Untuk mengatasi teka-teki ini, anda hanya perlu menambahkan satu loop yang mengulangi kode starter 8 kali.
          Jika anda tidak ingat kode starternya, klik "start over" di sudut kanan atas ruang kerja.
        courseD_artist_functions3_b: Your loop should have all 3 starter code blocks inside of it.
      courseE_artist_functions4_authored_hint:
        courseD_artist_functions4_a: Mencoba mengunakan fungsi!
        courseD_artist_functions4_b: Drag the `draw a star` function block out of the toolbox to begin building your function. It should have the same code as the previous puzzle, since you are drawing the same star pattern.
        courseD_artist_functions4_c: Use the green `draw a star` block to call this function in your main program. Don't forget to jump forward between each star!
      courseE_artist_functions4_2018_authored_hint:
        courseD_artist_functions4_a: Mencoba mengunakan fungsi!
        courseD_artist_functions4_b: Drag the `draw a star` function block out of the toolbox to begin building your function. It should have the same code as the previous puzzle, since you are drawing the same star pattern.
        courseD_artist_functions4_c: Use the green `draw a star` block to call this function in your main program. Don't forget to jump forward between each star!
      courseE_artist_functions5_authored_hint:
        courseD_artist_functions5_a: Jangan menyerah! Ingat apa yang telah anda pelajari.
        courseD_artist_functions5_b: Fungsi memudahkan untuk memanggil kode yang tersimpan kapan saja, tidak hanya dari dalam satu loop!
        courseD_artist_functions5_c: Start by dragging the code for a star shape into the `draw a star` function, then use this function to draw the three stars!
      courseE_artist_functions5_2018_authored_hint:
        courseD_artist_functions5_a: Jangan menyerah! Ingat apa yang telah anda pelajari.
        courseD_artist_functions5_b: Fungsi memudahkan untuk memanggil kode yang tersimpan kapan saja, tidak hanya dari dalam satu loop!
        courseD_artist_functions5_c: Start by dragging the code for a star shape into the `draw a star` function, then use this function to draw the three stars!
      courseE_artist_functions6_authored_hint:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll create a function in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops. The inner loop will make the square and the outer loop will rotate the square four times.
        grade4_artist_functions_windows0_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseE_artist_functions6_2018_authored_hint:
        grade4_artist_functions_windows0_a: Focus only on making one window for now.  We'll create a function in the next puzzle.
        grade4_artist_functions_windows0_b: Try using nested loops. The inner loop will make the square and the outer loop will rotate the square four times.
        grade4_artist_functions_windows0_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseE_artist_functions7_authored_hint:
        courseD_artist_functions7_a: Try creating your function first then add windows one at a time.
        courseD_artist_functions7_b: You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels between each top window, then down 150 pixels to get to the bottom windows.
      courseE_artist_functions7_2018_authored_hint:
        courseD_artist_functions7_a: Try creating your function first then add windows one at a time.
        courseD_artist_functions7_b: You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels between each top window, then down 150 pixels to get to the bottom windows.
      courseE_artist_functions8_authored_hint:
        courseD_artist_functions8_f: You only need one `move forward` block, but you will need quite a few `jump forward` and/or `jump backward` blocks!
        courseD_artist_functions8_a: |-
          Mulailah dengan membuat fungsi untuk persegi, lalu coba buat fungsi untuk garis bujur sangkar.
          Bagaimana anda menggunakan fungsi `draw a line of squares` untuk membuat gambar ini?
        courseD_artist_functions8_d: |-
          To make a line of squares,
          - repeat 3 times
          - draw a square with a side length of **50 pixels**
          - jump forward **100 pixels**
        courseD_artist_functions8_b: |-
          Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?
          
          ![](https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png)
        courseD_artist_functions8_c: At the end of each line of squares, the artist will need to jump down and backward before he draws the next line of squares.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2018_authored_hint:
        courseD_artist_functions8_f: You only need one `move forward` block, but you will need quite a few `jump forward` and/or `jump backward` blocks!
        courseD_artist_functions8_a: |-
          Mulailah dengan membuat fungsi untuk persegi, lalu coba buat fungsi untuk garis bujur sangkar.
          Bagaimana anda menggunakan fungsi `draw a line of squares` untuk membuat gambar ini?
        courseD_artist_functions8_d: |-
          To make a line of squares,
          - repeat 3 times
          - draw a square with a side length of **50 pixels**
          - jump forward **100 pixels**
        courseD_artist_functions8_b: |-
          Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?
          
          ![](https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png)
        courseD_artist_functions8_c: At the end of each line of squares, the artist will need to jump down and backward before he draws the next line of squares.
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions9_authored_hint:
        courseD_artist_functions9_e: |-
          Can you spot all four places that the `line of triangles` can be used in this drawing?
          
          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          This puzzle can be broken into three parts:
          - make the `draw a triangle` function
          - make the `draw a line of triangles` function
          - use your `draw a line of triangles` function four times to complete the drawing
        courseD_artist_functions9_b: This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line.
        courseD_artist_functions9_c: |-
          To draw a line of triangles:
          - repeat 4 times
          - draw a triangle
          - jump forward 50 pixels
        courseD_artist_functions9_d: |-
          To draw the diamond:
          - repeat 2 times
          - draw a line of triangles
          - turn 60 degrees
          - draw a line of triangles
          - turn 120 degrees
      courseE_artist_functions9_2018_authored_hint:
        courseD_artist_functions9_e: |-
          Can you spot all four places that the `line of triangles` can be used in this drawing?
          
          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          This puzzle can be broken into three parts:
          - make the `draw a triangle` function
          - make the `draw a line of triangles` function
          - use your `draw a line of triangles` function four times to complete the drawing
        courseD_artist_functions9_b: This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line.
        courseD_artist_functions9_c: |-
          To draw a line of triangles:
          - repeat 4 times
          - draw a triangle
          - jump forward 50 pixels
        courseD_artist_functions9_d: |-
          To draw the diamond:
          - repeat 2 times
          - draw a line of triangles
          - turn 60 degrees
          - draw a line of triangles
          - turn 120 degrees
      courseE_artist_functions_challenge_authored_hint:
        courseE_artist_functions_challenge_a: If you call the function one more time, you can create the same design in the final corner. You can also `jump to` other positions or change the whole thing around however you want!
      courseE_artist_functions_challenge1_authored_hint:
        courseE_artist_functions_challenge1_a: If you call the function one more time, you can create the same design in the final corner.
        courseE_artist_functions_challenge1_b: You can also `jump to` other positions or change the whole design however you want!
      courseE_artist_functions_challenge1_2018_authored_hint:
        courseE_artist_functions_challenge1_a: If you call the function one more time, you can create the same design in the final corner.
        courseE_artist_functions_challenge1_b: You can also `jump to` other positions or change the whole design however you want!
      courseE_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n  \nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is *before* the command is run!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_functions_challenge2_2018_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n  \nThis `jump to` block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is *before* the command is run!\n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_functions_predict1_authored_hint: [ ]
      courseE_artist_functions_predict1_2018_authored_hint: [ ]
      courseE_artist_functions_predict2_authored_hint: [ ]
      courseE_artist_functions_predict2_2018_authored_hint: [ ]
      courseE_artist_predict1_authored_hint: [ ]
      courseE_artist_predict1_2018_authored_hint: [ ]
      courseE_artist_ramp10_authored_hint:
        courseD_artist_ramp10_a: Don't forget to turn by 60 degrees after each triangle.  Which loop do you need to put that instruction inside?
        courseD_artist_ramp10_b: Anda bisa menggunakan menu drop dwon pada blok `ubah` untuk melihat sudut mana yang Anda butuhkan!
        courseD_artist_ramp10_c: |-
          The artist will draw six triangles in total:
          
          ![](https://images.code.org/752d82f3afdca0a7d7c01d6fa2abb583-image-1499889821499.2_solution2.gif)
      courseE_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: Untuk menggambar sebuah sisi, gunakan ` bergerak maju dengan 100 piksel ` blok, dan mengubah 100 untuk sebuah 200.
        courseD_artist_ramp11b: |-
          To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.
          
          Don't forget to turn afterward!
      courseE_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: Anda bisa menggambar persegi terlebih dahulu, lalu segitiga, atau melakukannya sebaliknya!
      courseE_artist_ramp8_authored_hint:
        courseE_artist_ramp8_a: Untuk menggambar sebuah sisi, gunakan ` bergerak maju dengan 100 piksel ` blok, dan mengubah 100 untuk sebuah 200.
        courseE_artist_ramp8_b: |-
          To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.
          
          Don't forget to turn afterward!
        courseE_artist_ramp8_c: 'Your loop should have two blocks inside of it: `move forward` and `turn right by 90 degrees`.'
      courseE_artist_ramp8_2_authored_hint:
        courseE_artist_ramp8_a: Untuk menggambar sebuah sisi, gunakan ` bergerak maju dengan 100 piksel ` blok, dan mengubah 100 untuk sebuah 200.
        courseE_artist_ramp8_b: |-
          To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.
          
          Don't forget to turn afterward!
        courseE_artist_ramp8_c: 'Your loop should have two blocks inside of it: `move forward` and `turn right by 90 degrees`.'
      courseE_artist_ramp8_2018_authored_hint:
        courseE_artist_ramp8_a: Untuk menggambar sebuah sisi, gunakan ` bergerak maju dengan 100 piksel ` blok, dan mengubah 100 untuk sebuah 200.
        courseE_artist_ramp8_b: |-
          To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.
          
          Don't forget to turn afterward!
        courseE_artist_ramp8_c: 'Your loop should have two blocks inside of it: `move forward` and `turn right by 90 degrees`.'
      courseE_artist_ramp8_2_2018_authored_hint:
        courseE_artist_ramp8_a: Untuk menggambar sebuah sisi, gunakan ` bergerak maju dengan 100 piksel ` blok, dan mengubah 100 untuk sebuah 200.
        courseE_artist_ramp8_b: |-
          To draw 4 sides, put the `move forward by 100 pixels` block inside of a repeat loop and make sure the loop is set to draw 4 times.
          
          Don't forget to turn afterward!
        courseE_artist_ramp8_c: 'Your loop should have two blocks inside of it: `move forward` and `turn right by 90 degrees`.'
      courseE_artist_ramp9_authored_hint:
        courseD_artist_ramp12_a: How is this similar to a square?  How is it different?
        courseD_artist_ramp12_b: Anda bisa menggunakan menu drop dwon pada blok `ubah` untuk melihat sudut mana yang Anda butuhkan!
        courseD_artist_ramp12_c: To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?
      courseE_artist_ramp9_2_authored_hint:
        courseD_artist_ramp12_a: How is this similar to a square?  How is it different?
        courseD_artist_ramp12_b: Anda bisa menggunakan menu drop dwon pada blok `ubah` untuk melihat sudut mana yang Anda butuhkan!
        courseD_artist_ramp12_c: To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?
      courseE_artist_ramp9_2018_authored_hint:
        courseD_artist_ramp12_a: How is this similar to a square?  How is it different?
        courseD_artist_ramp12_b: Anda bisa menggunakan menu drop dwon pada blok `ubah` untuk melihat sudut mana yang Anda butuhkan!
        courseD_artist_ramp12_c: To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?
      courseE_artist_ramp9_2_2018_authored_hint:
        courseD_artist_ramp12_a: How is this similar to a square?  How is it different?
        courseD_artist_ramp12_b: Anda bisa menggunakan menu drop dwon pada blok `ubah` untuk melihat sudut mana yang Anda butuhkan!
        courseD_artist_ramp12_c: To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?
      courseE_bee_concept1_authored_hint:
        courseE_bee_concept1_b: Are there any patterns that *repeat* here?
        courseE_bee_concept1_a: Jika anda tidak mengerti bagaimana menggunakan loop bersarang di sini, cobalah menulis instruksi langkah demi langkah di selembar kertas. Lingkari pola yang anda lihat.
      courseE_bee_concept1_2018_authored_hint:
        courseE_bee_concept1_b: Are there any patterns that *repeat* here?
        courseE_bee_concept1_a: Jika anda tidak mengerti bagaimana menggunakan loop bersarang di sini, cobalah menulis instruksi langkah demi langkah di selembar kertas. Lingkari pola yang anda lihat.
      courseE_bee_concept2_authored_hint:
        courseE_bee_concept2_a: Would a `while` loop help here?
        courseE_bee_concept2_d: You can even check empty spaces to see if honey is > 0.
        courseE_bee_concept2_b: You can use `while` loops to move to the end of each path, and to collect all of the honey from each space.
        courseE_bee_concept2_c: Which way should the bee turn after each path?
      courseE_bee_concept2_2018_authored_hint:
        courseE_bee_concept2_a: Would a `while` loop help here?
        courseE_bee_concept2_d: You can even check empty spaces to see if honey is > 0.
        courseE_bee_concept2_b: You can use `while` loops to move to the end of each path, and to collect all of the honey from each space.
        courseE_bee_concept2_c: Which way should the bee turn after each path?
      courseE_bee_concept3_authored_hint:
        courseE_bee_concept3a_a: Try using nested `repeat` loops to solve this puzzle.
        courseE_bee_concept3a_b: If you can't figure out where to put the loops, try writing your code step-by-step and looking for patterns.
        courseE_bee_concept3a_c: There are three groups of flowers, so your outer `repeat` loop should repeat three times.
      courseE_bee_concept3_2018_authored_hint:
        courseE_bee_concept3a_a: Try using nested `repeat` loops to solve this puzzle.
        courseE_bee_concept3a_b: If you can't figure out where to put the loops, try writing your code step-by-step and looking for patterns.
        courseE_bee_concept3a_c: There are three groups of flowers, so your outer `repeat` loop should repeat three times.
      courseE_bee_concept4_authored_hint:
        courseE_bee_concept4_a: An `if/else` statement could really help you out here.
        courseE_bee_concept4_b: The stair step pattern can help you get through all of the flowers and honeycombs.
        courseE_bee_concept4_c: If you are at a flower, how many times do you have to get nectar? Is this the same number for all flowers?
      courseE_bee_concept4_2018_authored_hint:
        courseE_bee_concept4_a: An `if/else` statement could really help you out here.
        courseE_bee_concept4_b: The stair step pattern can help you get through all of the flowers and honeycombs.
        courseE_bee_concept4_c: If you are at a flower, how many times do you have to get nectar? Is this the same number for all flowers?
      courseE_bee_concept5_authored_hint:
        courseE_bee_concept5_a: The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side.
        courseE_bee_concept5_c: |-
          Here's a picture of a rectangular path the bee could take.
          
          ![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)
        courseE_bee_concept5_b: You can check every square for a flower using the `if` block, even if you already know there's not one there.
      courseE_bee_concept5_2018_authored_hint:
        courseE_bee_concept5_a: The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side.
        courseE_bee_concept5_c: |-
          Here's a picture of a rectangular path the bee could take.
          
          ![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)
        courseE_bee_concept5_b: You can check every square for a flower using the `if` block, even if you already know there's not one there.
      courseE_bee_functions1_authored_hint:
        courseE_bee_functions1_a: Remember that left and right turns are from the point of view of the bee.
        courseE_bee_functions1_b: Use a `repeat` loop when collecting nectar to make your code shorter.
        courseE_bee_functions1_c: Remember that left and right turns are from the perspective of the bee.
      courseE_bee_functions10_authored_hint:
        courseE_bee_functions10_a: You will need a `while` loop to collect all of the honey, since it varies between honeycombs.
        courseE_bee_functions10_b: Include the turns and movement in your function, so you can call it when the bee is on the main path.
        courseE_bee_functions10_c: Remember to call your function in the main program!
      courseE_bee_functions10_2018_authored_hint:
        courseE_bee_functions10_a: You will need a `while` loop to collect all of the honey, since it varies between honeycombs.
        courseE_bee_functions10_b: Include the turns and movement in your function, so you can call it when the bee is on the main path.
        courseE_bee_functions10_c: Remember to call your function in the main program!
      courseE_bee_functions1_2018_authored_hint:
        courseE_bee_functions1_a: Remember that left and right turns are from the point of view of the bee.
        courseE_bee_functions1_b: Use a `repeat` loop when collecting nectar to make your code shorter.
        courseE_bee_functions1_c: Remember that left and right turns are from the perspective of the bee.
      courseE_bee_functions2_authored_hint:
        courseE_bee_functions2_a: The function has been written for you, but you will need to call it at each flower.
        courseE_bee_functions2_b: This <xml><block type="procedures_callnoreturn"><mutation name="get 2 nectar"/></block></xml> block calls the function given to you.
        courseE_bee_functions2_c: You will want to move forward and get 2 nectar twice to solve this puzzle.
      courseE_bee_functions2_2018_authored_hint:
        courseE_bee_functions2_a: The function has been written for you, but you will need to call it at each flower.
        courseE_bee_functions2_b: This <xml><block type="procedures_callnoreturn"><mutation name="get 2 nectar"/></block></xml> block calls the function given to you.
        courseE_bee_functions2_c: You will want to move forward and get 2 nectar twice to solve this puzzle.
      courseE_bee_functions3_authored_hint:
        courseE_bee_functions3_a: 'Your function for this puzzle only needs to collect nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseE_bee_functions3_b: Call your `get 5` function under the `when run` block.
        courseE_bee_functions3_c: Your main program will control all of the movement, the function is just for what happens when the bee reaches a flower.
        courseE_bee_functions3_d: Try using this path through.
      courseE_bee_functions3_2018_authored_hint:
        courseE_bee_functions3_a: 'Your function for this puzzle only needs to collect nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseE_bee_functions3_b: Call your `get 5` function under the `when run` block.
        courseE_bee_functions3_c: Your main program will control all of the movement, the function is just for what happens when the bee reaches a flower.
        courseE_bee_functions3_d: Try using this path through.
      courseE_bee_functions4_authored_hint:
        courseE_bee_functions4_a: Your function will already travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.
        courseE_bee_functions4_b: Use the green `move and get nectar` block to call this function.
        courseE_bee_functions4_c: You don't need to change the function, just use it in your program.
      courseE_bee_functions4_2018_authored_hint:
        courseE_bee_functions4_a: Your function will already travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.
        courseE_bee_functions4_b: Use the green `move and get nectar` block to call this function.
        courseE_bee_functions4_c: You don't need to change the function, just use it in your program.
      courseE_bee_functions5_authored_hint:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without having to change the main program.
        courseE_bee_functions5_c: The `move forward` block can be changed into a `move backward` block. Use this instead of turning all the way around at the end of the paths!
        courseE_bee_functions5_b: "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- move backward\n- turn back to the direction that the bee started from"
      courseE_bee_functions5_2018_authored_hint:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without having to change the main program.
        courseE_bee_functions5_c: The `move forward` block can be changed into a `move backward` block. Use this instead of turning all the way around at the end of the paths!
        courseE_bee_functions5_b: "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- move backward\n- turn back to the direction that the bee started from"
      courseE_bee_functions6_authored_hint:
        courseE_bee_functions6_a: "Jika teka-teki tampak menantang, cobalah bangun judul fungsi anda suatu waktu.  tambahkan beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai disana!![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: It might help in this case to move inside of the function, but not all of your `move` blocks need to be there.
      courseE_bee_functions6_2018_authored_hint:
        courseE_bee_functions6_a: "Jika teka-teki tampak menantang, cobalah bangun judul fungsi anda suatu waktu.  tambahkan beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai disana!![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: It might help in this case to move inside of the function, but not all of your `move` blocks need to be there.
      courseE_bee_functions6test_authored_hint:
        courseE_bee_functions6_a: "Jika teka-teki tampak menantang, cobalah bangun judul fungsi anda suatu waktu.  tambahkan beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai disana!![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: It might help in this case to move inside of the function, but not all of your `move` blocks need to be there.
      courseE_bee_functions7_authored_hint:
        courseE_bee_functions7_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseE_bee_functions7_b: |-
          Ingat untuk membangun kode dalam blok fungsi hijau.![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back.
      courseE_bee_functions7_2018_authored_hint:
        courseE_bee_functions7_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseE_bee_functions7_b: |-
          Ingat untuk membangun kode dalam blok fungsi hijau.![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back.
      courseE_bee_functions8_authored_hint:
        courseE_bee_functions8_a: Your function will only need to collect nectar. Try using a while loop instead of a repeat loop.
        courseE_bee_functions8_b: Use `while nectar > 0` to make sure you get all of the nectar.
        courseE_bee_functions8_c: Your main program will need a stair step movement pattern. Remember, the main program is the code under the `when run` block.
      courseE_bee_functions8_2018_authored_hint:
        courseE_bee_functions8_a: Your function will only need to collect nectar. Try using a while loop instead of a repeat loop.
        courseE_bee_functions8_b: Use `while nectar > 0` to make sure you get all of the nectar.
        courseE_bee_functions8_c: Your main program will need a stair step movement pattern. Remember, the main program is the code under the `when run` block.
      courseE_bee_functions9_authored_hint:
        courseE_bee_functions9_a: You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.
        courseE_bee_functions9_b: Even though you know how much nectar some of the flowers have, a `while` loop can make one function work for all of them.
      courseE_bee_functions9_2018_authored_hint:
        courseE_bee_functions9_a: You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.
        courseE_bee_functions9_b: Even though you know how much nectar some of the flowers have, a `while` loop can make one function work for all of them.
      courseE_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseE_bee_functions_challenge1_b: Remember to build your code inside of the green function block.
      courseE_bee_functions_challenge1_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseE_bee_functions_challenge1_b: Remember to build your code inside of the green function block.
      courseE_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseE_bee_functions_challenge1_b: Remember to build your code inside of the green function block.
      courseE_bee_functions_challenge2_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseE_bee_functions_challenge1_b: Remember to build your code inside of the green function block.
      courseE_bee_ramp14_authored_hint:
        courseE_bee_ramp14_a: The bee works just like the farmer in the previous puzzle. Buzz along the path and collect nectar while there is nectar (while nectar > 0) and make all of the honey.
        courseE_bee_ramp14_b: There can be more than one flower or honeycomb at each space, so make sure to use `while` loops to get them all!
        courseE_bee_ramp14_c: This puzzle is nearly identical to the previous one, just with honey and nectar instead of vegetables.
      courseE_bee_ramp14_2018_authored_hint:
        courseE_bee_ramp14_a: The bee works just like the farmer in the previous puzzle. Buzz along the path and collect nectar while there is nectar (while nectar > 0) and make all of the honey.
        courseE_bee_ramp14_b: There can be more than one flower or honeycomb at each space, so make sure to use `while` loops to get them all!
        courseE_bee_ramp14_c: This puzzle is nearly identical to the previous one, just with honey and nectar instead of vegetables.
      courseE_bee_ramp17_authored_hint:
        courseE_bee_ramp17_a: Since we don't have a repeat block to do something a certain number of times, what block should we use to move along the path?
        courseE_bee_ramp17: If you were to solve this puzzle without an until block, where would you see repeated code? How can you use this repeated code to shape how you must use an until block to solve the problem?
        courseE_bee_ramp17_b: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseE_bee_ramp17_c: You will want to move in a stair-step pattern. Try coding that first, then adding the `if/else` statement and `while` loops to check for flowers and honeycombs.
      courseE_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          Instead of using four `move forward` blocks for each side, try putting one `move forward` block inside of a `repeat` loop, like this:
          <xml><block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          </block></xml>
        courseD_artist_ramp10_b: Don't forget to collect one piece of treasure, then turn after each set of steps!
      courseE_farmer_concept1_authored_hint:
        courseE_farmer_concept1_a: A `while there is a hole` block will help you fill any hole until it's flat.
        courseE_farmer_concept1_b: You can use a stair step pattern to get to the holes.
      courseE_farmer_concept1_2018_authored_hint:
        courseE_farmer_concept1_a: A `while there is a hole` block will help you fill any hole until it's flat.
        courseE_farmer_concept1_b: You can use a stair step pattern to get to the holes.
      courseE_farmer_concept2_authored_hint:
        courseE_farmer_concept2_a: The paths are all the same length, but they are a different number of squares apart.  A loop isn't ideal here. Try a function.
        courseE_farmer_concept2_b: A function which turns, goes down the path, gathers pumpkins, and returns to the main horizontal path could be helpful here.
        courseE_farmer_concept2_c: Your main program can call this function with the green `do something` block.
      courseE_farmer_concept2_2018_authored_hint:
        courseE_farmer_concept2_a: The paths are all the same length, but they are a different number of squares apart.  A loop isn't ideal here. Try a function.
        courseE_farmer_concept2_b: A function which turns, goes down the path, gathers pumpkins, and returns to the main horizontal path could be helpful here.
        courseE_farmer_concept2_c: Your main program can call this function with the green `do something` block.
      courseE_farmer_concept3_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: Blok `while path ahead` memungkinkan anda terus berjalan, bahkan jika anda tidak tahu berapa banyak kotak berada di jalan.
        grade3_robotFarmer_ConditionalsIntro_8_b: What should you do once you've reached the end of a path?
        grade3_robotFarmer_ConditionalsIntro_8_c: Use a `repeat` loop to run your code multiple times for each straight path.
      courseE_farmer_concept3_2018_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: Blok `while path ahead` memungkinkan anda terus berjalan, bahkan jika anda tidak tahu berapa banyak kotak berada di jalan.
        grade3_robotFarmer_ConditionalsIntro_8_b: What should you do once you've reached the end of a path?
        grade3_robotFarmer_ConditionalsIntro_8_c: Use a `repeat` loop to run your code multiple times for each straight path.
      courseE_farmer_concept4_authored_hint:
        4-5_Artist_Patterns_3_a: Berhati-hati untuk mengeluarkan blok penuh"kode dari toolbar setiap kali anda mencoba yang baru.
        4-5_Artist_Patterns_3_b: Jika kode anda menjadi membingungkan, anda slalu dapat klik "mulai lagi" dan mencoba lagi!
      courseE_farmer_functions1_authored_hint:
        courseE_farmer_functions1_a: The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have.
        courseE_farmer_functions1_b: You only need to pick one pumpkin, but could you use a loop to get to it?
      courseE_farmer_functions10_authored_hint: [ ]
      courseE_farmer_functions10b_authored_hint:
        courseE_farmer_functions10b_a: You will have to re-create your function first.
        courseE_farmer_functions10b_b: Which way do you need to turn after the first pumpkin?
        courseE_farmer_functions10b_c: Look back at the last puzzle if you need help making the function.
      courseE_farmer_functions10b_2018_authored_hint:
        courseE_farmer_functions10b_a: You will have to re-create your function first.
        courseE_farmer_functions10b_b: Which way do you need to turn after the first pumpkin?
        courseE_farmer_functions10b_c: Look back at the last puzzle if you need help making the function.
      courseE_farmer_functions11_predict_authored_hint: [ ]
      courseE_farmer_functions11_predict_2018_authored_hint: [ ]
      courseE_farmer_functions1_2018_authored_hint:
        courseE_farmer_functions1_a: The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have.
        courseE_farmer_functions1_b: You only need to pick one pumpkin, but could you use a loop to get to it?
      courseE_farmer_functions1a_authored_hint:
        courseE_farmer_functions1a_a: Think through the `if/else` statements step by step. What should you do if you are standing at a corn plant?
        courseE_farmer_functions1a_b: Use a `repeat until` block to get to the pumpkin!
      courseE_farmer_functions1a_2018_authored_hint:
        courseE_farmer_functions1a_a: Think through the `if/else` statements step by step. What should you do if you are standing at a corn plant?
        courseE_farmer_functions1a_b: Use a `repeat until` block to get to the pumpkin!
      courseE_farmer_functions2a_authored_hint: [ ]
      courseE_farmer_functions2aALT_authored_hint: [ ]
      courseE_farmer_functions2b_authored_hint:
        courseE_farmer_functions2b_a: You can use a `repeat until pumpkin` to get to the ends of the two paths.
        courseE_farmer_functions2b_b: There is no corn on the connecting path, so you can just move along it and turn.
        courseE_farmer_functions2b_c: You will need two separate `repeat until` blocks to get all of the crops.
      courseE_farmer_functions2b_2018_authored_hint:
        courseE_farmer_functions2b_a: You can use a `repeat until pumpkin` to get to the ends of the two paths.
        courseE_farmer_functions2b_b: There is no corn on the connecting path, so you can just move along it and turn.
        courseE_farmer_functions2b_c: You will need two separate `repeat until` blocks to get all of the crops.
      courseE_farmer_functions2ba_authored_hint:
        courseE_farmer_functions2ba_a: Use the green `corn and pumpkin` block to call this function.
        courseE_farmer_functions2ba_b: Drag all of the blocks in the workspace together under `when run` to see how this function works.
      courseE_farmer_functions2ba_2018_authored_hint:
        courseE_farmer_functions2ba_a: Use the green `corn and pumpkin` block to call this function.
        courseE_farmer_functions2ba_b: Drag all of the blocks in the workspace together under `when run` to see how this function works.
      courseE_farmer_functions3_authored_hint:
        courseE_farmer_functions3_a: Try using a `while path ahead` loop to get you where you need to be.
      courseE_farmer_functions3b_authored_hint:
        courseE_farmer_functions1a_a: Nested `if` and `if/else` statements will really help you out here.
      courseE_farmer_functions3c_authored_hint:
        courseE_farmer_functions3c_a: What sequence is repeated often in this program? Can you drag these blocks into the function?
        courseE_farmer_functions3c_b: Don't forget to call your function in the main program wherever you removed blocks.
      courseE_farmer_functions3c_2018_authored_hint:
        courseE_farmer_functions3c_a: What sequence is repeated often in this program? Can you drag these blocks into the function?
        courseE_farmer_functions3c_b: Don't forget to call your function in the main program wherever you removed blocks.
      courseE_farmer_functions4_authored_hint:
        courseE_farmer_functions4_a: Drag all of the code out of your `repeat` loop and into the `go get pumpkins` function.
        courseE_farmer_functions4_b: Don't forget to put the block that calls the `go get pumpkins` functions inside your loop before you run your code.
      courseE_farmer_functions4b_authored_hint:
        courseE_farmer_functions4b_a: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseE_farmer_functions4b_b: Remember to turn after each path.
        courseE_farmer_functions4b_c: The green `corn and pumpkin` blocks are in the Functions tab of the toolbox.
      courseE_farmer_functions4b_2018_authored_hint:
        courseE_farmer_functions4b_a: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseE_farmer_functions4b_b: Remember to turn after each path.
        courseE_farmer_functions4b_c: The green `corn and pumpkin` blocks are in the Functions tab of the toolbox.
      courseE_farmer_functions5_authored_hint: [ ]
      courseE_farmer_functions5a_authored_hint: [ ]
      courseE_farmer_functions5b_authored_hint:
        courseE_farmer_functions5b_a: You will need to use a `while corn` loop, a `while lettuce` and a `while pumpkin` to make sure you get everything.
      courseE_farmer_functions5c_authored_hint:
        courseE_farmer_functions5c_a: Are there any other patterns you can loop in this puzzle?
        courseE_farmer_functions5c_b: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseE_farmer_functions5c_2018_authored_hint:
        courseE_farmer_functions5c_a: Are there any other patterns you can loop in this puzzle?
        courseE_farmer_functions5c_b: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseE_farmer_functions6_authored_hint: [ ]
      courseE_farmer_functions6b_authored_hint: [ ]
      courseE_farmer_functions6c_authored_hint:
        courseE_farmer_functions6c_a: Edit your function to check for the lettuce as well.
        courseE_farmer_functions6c_b: Would an `if/else` block help to check if there is lettuce in a space?
        courseE_farmer_functions6c_c: Don't forget to keep checking for corn!
      courseE_farmer_functions6c_2018_authored_hint:
        courseE_farmer_functions6c_a: Edit your function to check for the lettuce as well.
        courseE_farmer_functions6c_b: Would an `if/else` block help to check if there is lettuce in a space?
        courseE_farmer_functions6c_c: Don't forget to keep checking for corn!
      courseE_farmer_functions7_authored_hint: [ ]
      courseE_farmer_functions7b_authored_hint:
        courseE_farmer_functions7b_a: You don't need a function here, but you can make one if it is helpful to you!
        courseE_farmer_functions7b_b: Use an `if/else` statement to check for crops, then turn based on which crop you find.
        courseE_farmer_functions7b_c: A `repeat until pumpkin` loop can help you get all the way through the maze.
      courseE_farmer_functions7b_2018_authored_hint:
        courseE_farmer_functions7b_a: You don't need a function here, but you can make one if it is helpful to you!
        courseE_farmer_functions7b_b: Use an `if/else` statement to check for crops, then turn based on which crop you find.
        courseE_farmer_functions7b_c: A `repeat until pumpkin` loop can help you get all the way through the maze.
      courseE_farmer_functions8_authored_hint:
        courseE_farmer_functions8_a: Create a function that takes the farmer to the corn, gets all of the corn, then turns around and comes back.
      courseE_farmer_functions8b_authored_hint:
        courseE_farmer_functions8b_a: Try running the code given to see what it does. What do you need after this?
        courseE_farmer_functions8b_b: Drag all of the starter blocks into a function so that you can use them more than once.
        courseE_farmer_functions8b_c: How many times do you need to call the function?
      courseE_farmer_functions8b_2018_authored_hint:
        courseE_farmer_functions8b_a: Try running the code given to see what it does. What do you need after this?
        courseE_farmer_functions8b_b: Drag all of the starter blocks into a function so that you can use them more than once.
        courseE_farmer_functions8b_c: How many times do you need to call the function?
      courseE_farmer_functions9_authored_hint:
        courseE_farmer_functions8_a: Create a function that takes the farmer to the corn, gets all of the corn, then turns around and comes back.
      courseE_farmer_functions9b_authored_hint:
        courseE_farmer_functions9b_a: Can you use nested `if` and `if/else` statements to move along the path?
        courseE_farmer_functions9b_b: Use `repeat until pumpkin` to move through all of the paths.
        courseE_farmer_functions9b_c: You will want to move through the paths as if they are squares getting larger after each loop.
      courseE_farmer_functions9b_2018_authored_hint:
        courseE_farmer_functions9b_a: Can you use nested `if` and `if/else` statements to move along the path?
        courseE_farmer_functions9b_b: Use `repeat until pumpkin` to move through all of the paths.
        courseE_farmer_functions9b_c: You will want to move through the paths as if they are squares getting larger after each loop.
      courseE_farmer_functions9b_clone_authored_hint: [ ]
      courseE_farmer_predict1_authored_hint:
        courseE_farmer_ramp12a: Feel free to go back to the last puzzle if you need a reminder of how to pick produce only **while** there is produce to pick.
      courseE_farmer_predict1_2018_authored_hint:
        courseE_farmer_ramp12a: Feel free to go back to the last puzzle if you need a reminder of how to pick produce only **while** there is produce to pick.
      courseE_farmer_predict2_authored_hint: [ ]
      courseE_farmer_predict2_2018_authored_hint: [ ]
      courseE_farmer_ramp11_authored_hint:
        courseE_farmer_ramp11_a: If you're having a hard time seeing where the loops should go, try coding it all out then looking for a pattern.
        courseE_farmer_ramp11_b: How can you use a `repeat` loop to pick lettuce instead of dragging out 5 `pick lettuce` blocks?
        courseE_farmer_ramp11_c: You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a `move forward` block, and you'll have it!)
      courseE_farmer_ramp11a_authored_hint:
        courseE_farmer_ramp12_a: 'Instead of using a `repeat` loop to tell the farmer how many times to shovel dirt, now you can use a `while there is a pile` block.  '
        courseE_farmer_ramp12_b: You only need to move forward once to get to the dirt.
      courseE_farmer_ramp11a_2018_authored_hint:
        courseE_farmer_ramp12_a: 'Instead of using a `repeat` loop to tell the farmer how many times to shovel dirt, now you can use a `while there is a pile` block.  '
        courseE_farmer_ramp12_b: You only need to move forward once to get to the dirt.
      courseE_farmer_ramp11b_authored_hint:
        courseE_farmer_ramp11b_a: You can nest your `while` loop inside of a `repeat` loop to make your code shorter.
      courseE_farmer_ramp11b_2018_authored_hint:
        courseE_farmer_ramp11b_a: You can nest your `while` loop inside of a `repeat` loop to make your code shorter.
      courseE_farmer_ramp12_authored_hint:
        courseE_farmer_ramp12_b: You will still need to use a `repeat` loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce.
      courseE_farmer_ramp12_2018_authored_hint:
        courseE_farmer_ramp12_b: You will still need to use a `repeat` loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce.
      courseE_farmer_ramp12_forswap_authored_hint:
        courseE_farmer_ramp12_b: You will still need to use a `repeat` loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce.
      courseE_farmer_ramp12_forswap_2018_authored_hint:
        courseE_farmer_ramp12_b: You will still need to use a `repeat` loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce.
      courseE_farmer_ramp12a_authored_hint:
        courseE_farmer_ramp12b: You will need to check your `if` statement 21 times to solve this puzzle.
        courseE_farmer_ramp12c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseE_farmer_ramp12d: There will only be lettuce, so you don't need to worry about empty spaces, corn, or pumpkins.
      courseE_farmer_ramp12a_2018_authored_hint:
        courseE_farmer_ramp12b: You will need to check your `if` statement 21 times to solve this puzzle.
        courseE_farmer_ramp12c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseE_farmer_ramp12d: There will only be lettuce, so you don't need to worry about empty spaces, corn, or pumpkins.
      courseE_farmer_ramp12b_authored_hint: [ ]
      courseE_farmer_ramp12b_2018_authored_hint: [ ]
      courseE_farmer_ramp12c_authored_hint:
        courseE_farmer_ramp12b_b: You will still need to use an `until` loop first, then use a `while` loop once you get to the lettuce.
      courseE_farmer_ramp12c_2018_authored_hint:
        courseE_farmer_ramp12b_b: You will still need to use an `until` loop first, then use a `while` loop once you get to the lettuce.
      courseE_farmer_ramp12d_authored_hint:
        courseE_farmer_ramp12d_b: You will still need to put your `until` and `while` loops inside of a `repeat` loop to solve this puzzle!
      courseE_farmer_ramp12d_2018_authored_hint:
        courseE_farmer_ramp12d_b: You will still need to put your `until` and `while` loops inside of a `repeat` loop to solve this puzzle!
      courseE_farmer_ramp12e_authored_hint:
        courseE_farmer_ramp12e_b: The solution to this puzzle will look a lot like the solution to the last puzzle, but turning in the other direction.
      courseE_farmer_ramp12e_2018_authored_hint:
        courseE_farmer_ramp12e_b: The solution to this puzzle will look a lot like the solution to the last puzzle, but turning in the other direction.
      courseE_farmer_ramp12f_authored_hint:
        courseE_farmer_ramp12f_b: Use an `if/else` block to help the farmer decide if she needs to turn right or left.
      courseE_farmer_ramp12f_2018_authored_hint:
        courseE_farmer_ramp12f_b: Use an `if/else` block to help the farmer decide if she needs to turn right or left.
      courseE_farmer_ramp12g_authored_hint:
        courseE_farmer_ramp12G_b: Use an `if/else` block to help the farmer decide if she needs to turn right or left.
      courseE_farmer_ramp12g_2018_authored_hint:
        courseE_farmer_ramp12G_b: Use an `if/else` block to help the farmer decide if she needs to turn right or left.
      courseE_farmer_ramp13_authored_hint:
        courseE_farmer_ramp13_a: There can be more than one of either crop in a space, so make sure to use `while` loops to pick them all!
        courseE_farmer_ramp13_b: Use a `repeat` loop so that you don't have to write a separate if statement for each square.
        courseE_farmer_ramp13_c: If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.
      courseE_farmer_ramp13_2018_authored_hint:
        courseE_farmer_ramp13_a: There can be more than one of either crop in a space, so make sure to use `while` loops to pick them all!
        courseE_farmer_ramp13_b: Use a `repeat` loop so that you don't have to write a separate if statement for each square.
        courseE_farmer_ramp13_c: If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.
      courseE_farmer_ramp15_authored_hint:
        courseE_farmer_ramp15_a: Use the `repeat until at pumpkin` block to make it to the end of the path.
        courseE_farmer_ramp15_b: What else needs to be done while moving along the path to the pumpkin?
        courseE_farmer_ramp15_c: The sprouts hide various amounts of either corn or lettuce to harvest on your way to the pumpkin.
      courseE_farmer_ramp15_2018_authored_hint:
        courseE_farmer_ramp15_a: Use the `repeat until at pumpkin` block to make it to the end of the path.
        courseE_farmer_ramp15_b: What else needs to be done while moving along the path to the pumpkin?
        courseE_farmer_ramp15_c: The sprouts hide various amounts of either corn or lettuce to harvest on your way to the pumpkin.
      courseE_farmer_ramp16_authored_hint:
        courseE_farmer_ramp16_a: If we are moving along the path to the pumpkin, what do we have to do over and over? When do we stop repeating?
        courseE_farmer_ramp16_b: Checking for corn or lettuce at every space will help simplify your code. What should you do if there is a crop? What if there is nothing?
        courseE_farmer_ramp16_c: Use an `if/else` block to keep moving forward. Which way do you need to turn when the forward path is blocked?
      courseE_maze_predict1_authored_hint: [ ]
      courseE_maze_predict1_2018_authored_hint: [ ]
      courseE_maze_ramp1_authored_hint:
        courseC_maze_programming1_0: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: You don't need any extra blocks from the toolbox for this puzzle!
      courseE_maze_ramp13_authored_hint:
        courseD_maze_ramp11_b: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseD_maze_ramp11_a: Use repeat blocks to run either a single block or a chunk of code over and over.
      courseE_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_0: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: You don't need any extra blocks from the toolbox for this puzzle!
      courseE_maze_ramp2_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Make sure all three `move forward` blocks are attached to the `when run` block.
      courseE_maze_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Make sure all three `move forward` blocks are attached to the `when run` block.
      courseE_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: Remember that turns to the right and left are from the bird's perspective.
      courseE_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseC_maze_programming3_b: Remember that turns to the right and left are from the bird's perspective.
      courseE_maze_ramp4_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
        courseC_maze_programming4_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseE_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
        courseC_maze_programming4_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseE_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: How far do you need to move to get to the corner?
        courseC_maze_programming5_c: You will need to turn left at the corner to get to the pig.
      courseE_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseC_maze_programming5_b: How far do you need to move to get to the corner?
        courseC_maze_programming5_c: You will need to turn left at the corner to get to the pig.
      courseE_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseC_maze_programming6_b: Remember to turn first before moving, since the bird starts facing a wall.
        courseC_maze_programming6_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseE_maze_ramp6_2018_authored_hint:
        courseC_maze_programming6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseC_maze_programming6_b: Remember to turn first before moving, since the bird starts facing a wall.
        courseC_maze_programming6_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseE_maze_ramp7_authored_hint:
        courseD_maze_ramp7_b: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseD_maze_ramp7_a: Use repeat blocks to run either a single block or a chunk of code over and over.
        courseD_maze_ramp7_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseE_maze_ramp7_2018_authored_hint:
        courseD_maze_ramp7_b: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseD_maze_ramp7_a: Use repeat blocks to run either a single block or a chunk of code over and over.
        courseD_maze_ramp7_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseE_maze_ramp_predict1_authored_hint: [ ]
      courseE_multi_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
      courseE_playLab_challenge1_authored_hint:
        courseE_playLab_challenge1_a: |-
          Here are some things you could do when the player wins the game:
          
          * Make the dinosaur vanish.
          * Stop the squirrels.
          * Make the squirrels and knight happy.
          * Set a new background.
          * Make the knight thank the player for helping.
          * Make all of the actors vanish and show a "You Win!" message.
        courseE_playLab_challenge1_b: |-
          Here are some things you could do when the player loses the game:
          
          * Make the knight vanish.
          * Make the squirrels sad.
          * Make the dinosaur say something.
          * Set a new background.
          * Make all of the actors vanish and show a "Game Over" message.
      courseE_playLab_challenge1_2018_authored_hint:
        courseE_playLab_challenge1_a: |-
          Here are some things you could do when the player wins the game:
          
          * Make the dinosaur vanish.
          * Stop the squirrels.
          * Make the squirrels and knight happy.
          * Set a new background.
          * Make the knight thank the player for helping.
          * Make all of the actors vanish and show a "You Win!" message.
        courseE_playLab_challenge1_b: |-
          Here are some things you could do when the player loses the game:
          
          * Make the knight vanish.
          * Make the squirrels sad.
          * Make the dinosaur say something.
          * Set a new background.
          * Make all of the actors vanish and show a "Game Over" message.
      courseE_playLab_embed_scaffold5_authored_hint: [ ]
      courseE_playLab_scaffold1_authored_hint:
        courseE_playLab_scaffold1_a: The `set actor 1 to ??? image` block can be used to add an actor to the stage.
        courseE_playLab_scaffold1_b: Put the `set actor` block under `when run` to make your actor appear at the beginning of the program.
        courseE_playLab_scaffold1_c: Use `set ??? background` to choose a background for your scene.
      courseE_playLab_scaffold1_2018_authored_hint:
        courseE_playLab_scaffold1_a: The `set actor 1 to ??? image` block can be used to add an actor to the stage.
        courseE_playLab_scaffold1_b: Put the `set actor` block under `when run` to make your actor appear at the beginning of the program.
        courseE_playLab_scaffold1_c: Use `set ??? background` to choose a background for your scene.
      courseE_playLab_scaffold2_authored_hint:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow` event to change the direction the block controls.
        courseE_playLab_scaffold1_b: You should have four `when arrow` event blocks, with a direction to move underneath each.
        courseE_playLab_scaffold1_c: When you are done, you should be able to move your hero with the arrow keys!
      courseE_playLab_scaffold2_2018_authored_hint:
        courseE_playLab_scaffold1_a: Pull on the dropdown menu of the `when ____ arrow` event to change the direction the block controls.
        courseE_playLab_scaffold1_b: You should have four `when arrow` event blocks, with a direction to move underneath each.
        courseE_playLab_scaffold1_c: When you are done, you should be able to move your hero with the arrow keys!
      courseE_playLab_scaffold3_authored_hint: [ ]
      courseE_playLab_scaffold3_2018_authored_hint: [ ]
      courseE_playLab_scaffold4_authored_hint:
        courseE_playLab_scaffold4_a: Use `score point` to add a point, and `remove point` to subtract one.
      courseE_playLab_scaffold4_2018_authored_hint:
        courseE_playLab_scaffold4_a: Use `score point` to add a point, and `remove point` to subtract one.
      courseE_playLab_scaffold5_authored_hint:
        courseE_playLab_scaffold5_a: To finish this level, you need to win or lose. Use a `end game as win` or `end game as loss` block to finish.
      courseE_playLab_scaffold5_2018_authored_hint:
        courseE_playLab_scaffold5_a: To finish this level, you need to win or lose. Use a `end game as win` or `end game as loss` block to finish.
      courseE_playlab_challenge2_authored_hint:
        courseE_playlab_challenge2_a: |-
          The actor knows what to say based on its mood. Try playing with the things the witch might say.
          
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block></xml>
        courseE_playlab_challenge2_b: "It will feel like the game starts all over if you call the `ask a question` function again below the list of conditionals.\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n               \n<block type=\"procedures_callnoreturn\">\n<mutation name=\"Ask a question\"></mutation>\n        </block></block></xml>"
        courseE_playlab_challenge2_c: "You will need to add more conditional statements to give the actors more things to say.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n              </statement></block></xml>\n              \nDon't forget to change which moods the actor will show inside of the `repeat forever` loop. You can also set the moods randomly!"
        courseE_playlab_challenge2_d: |-
          Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.
          
          Don't forget to change the instructions inside the `show title screen` block so they still make sense!
        courseE_playlab_challenge2_e: |-
          When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?
          
          Have a friend try your app when it is finished!
      courseE_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          The actor knows what to say because it checks the current value of the `fortune` variable.
          
          <xml><block type="variables_set" inline="false">
          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          It will feel like the game starts all over if you call the `ask a question` function again after the actor says the fortune.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">fortune</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "You will need to add more conditional statements to give the actors more things to say.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n              \nDon't forget to change which moods the actor will show inside of the `repeat forever` loop. You can also set the moods randomly!"
        courseF_playlab_variables_challenge3_d: |-
          Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.
          
          Don't forget to change the instructions inside the `Ask a question` function so they still make sense!
        courseF_playlab_variables_challenge3_e: |-
          When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?
          
          Have a friend try your app when it is finished!
      courseF_IceAge_1_authored_hint:
        iceage_hello1_a: You only need to add one block to solve this puzzle.  Drag the `actor 1 say` block out from the toolbar and connect it to the `when run` event block that is already in the workspace. Next, type "Hello!" inside.
      courseF_IceAge_10_authored_hint:
        iceage_throw_hearts_a: When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!
        iceage_throw_hearts_b: To get granny to be happy when she receives a heart, you will need to connect the `set actor 2 mood to happy` block beneath the `when actor 2 touches projectile` event.
      courseF_IceAge_11_authored_hint:
        iceage_free_play_a: 'Can you make Sid and Manny have an Ice Crystal fight?  '
        iceage_free_play_b: Make Granny chase Diego.  End the game as a win if she catches him.
        iceage_free_play_c: Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.
      courseF_IceAge_2_authored_hint:
        iceage_hello2_a: 'To solve this puzzle, you will need to have Sid say something using the `actor 1 say` block.  You will also need to have Manny say something with the `actor 2 say` block. '
      courseF_IceAge_3_authored_hint:
        iceage_hello3_a: Use the `move actor 1 right by 200 pixels` block to solve this puzzle.
      courseF_IceAge_4_authored_hint:
        iceage_move_to_actor_a: For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.
        iceage_move_to_actor_b: Connect the `play ___ sound` block to the `when actor 1 touches actor 2` event to finish this challenge.
      courseF_IceAge_5_authored_hint:
        iceage_repeat_a: Use both the `move actor 1 left` and `move actor 1 right` blocks to solve this puzzle.
      courseF_IceAge_6_authored_hint:
        iceage_click_hello_a: Add one or more `actor 1 say` blocks to the `when clicked` event to complete this puzzle.
      courseF_IceAge_7_authored_hint:
        iceage_move_events_a: 'Each of the `when ___ arrow` events will need to have a different `move actor 1` command connected to it to solve this puzzle. '
      courseF_IceAge_8_authored_hint:
        iceage_sound_and_points_a: You will need to add two blocks beneath the `when actor 1 touches actor 2` event.
        iceage_sound_and_points_b: You will need both the `score a point` block and the 'play ____ sound` block to pass this level.
      courseF_IceAge_9_authored_hint:
        iceage_warn_ice_age_a: 'You should only have to add two blocks to get this puzzle where it needs to be. '
        iceage_warn_ice_age_b: Add both new blocks beneath the `when run` event to have them happen immediately after the program starts.
      courseF_IceAge_template_authored_hint: [ ]
      courseF_artist_embed_for7_authored_hint: [ ]
      courseF_artist_for1_authored_hint:
        courseF_artist_for1_a: |-
          Can you draw something like this:
          
          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for10_authored_hint:
        courseF_artist_for10_a: The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.
        courseF_artist_for10_b: The image in the drawing uses a turn of 61 degrees.
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for10_2018_authored_hint:
        courseF_artist_for10_a: The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.
        courseF_artist_for10_b: The image in the drawing uses a turn of 61 degrees.
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for10_predict1_authored_hint: [ ]
      courseF_artist_for10_predict1_2018_authored_hint: [ ]
      courseF_artist_for1_2018_authored_hint:
        courseF_artist_for1_a: |-
          Can you draw something like this:
          
          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for2_authored_hint:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.
          
          <xml><block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: Remember to count by 10 within your for loop.
        courseF_artist_for2_c: |-
          This is the pattern that the Artist will follow:
          
          ![](https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif)
      courseF_artist_for2_2018_authored_hint:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.
          
          <xml><block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: Remember to count by 10 within your for loop.
        courseF_artist_for2_c: |-
          This is the pattern that the Artist will follow:
          
          ![](https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif)
      courseF_artist_for3_authored_hint:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.
          
          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseF_artist_for3_2018_authored_hint:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.
          
          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseF_artist_for4_authored_hint:
        courseF_artist_for4_a: "** Apakah nomor terkecil yang Anda perlukan? \nBerapakah jumlah terbesar? \nSeberapa besar adalah peningkatan setiap kali? ** \n\nmereka adalah pertanyaan-pertanyaan Anda perlu tanyakan untuk mengisi kekosongan loop 'untuk'."
        courseF_artist_for4_b: Your code will be very similar to what you wrote in the last puzzle, but remember to draw a square this time!
        courseF_artist_for4_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseF_artist_for4_2018_authored_hint:
        courseF_artist_for4_a: "** Apakah nomor terkecil yang Anda perlukan? \nBerapakah jumlah terbesar? \nSeberapa besar adalah peningkatan setiap kali? ** \n\nmereka adalah pertanyaan-pertanyaan Anda perlu tanyakan untuk mengisi kekosongan loop 'untuk'."
        courseF_artist_for4_b: Your code will be very similar to what you wrote in the last puzzle, but remember to draw a square this time!
        courseF_artist_for4_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseF_artist_for5_authored_hint:
        courseF_artist_for5_a: You don't need the `repeat` loop inside when making this spiral!
        courseF_artist_for5_b: Your `for` loop, move, and turn blocks can stay exactly the same.
      courseF_artist_for5_2018_authored_hint:
        courseF_artist_for5_a: You don't need the `repeat` loop inside when making this spiral!
        courseF_artist_for5_b: Your `for` loop, move, and turn blocks can stay exactly the same.
      courseF_artist_for6_authored_hint:
        courseF_artist_for6_a: Your `for` loop will count from 15 to 300 by 15.
        courseF_artist_for6_b: Put a `move forward` and a `turn` block within this `for` loop.
        courseF_artist_for6_c: All you have to change is the number of degrees in the `turn` block.
      courseF_artist_for6_2018_authored_hint:
        courseF_artist_for6_a: Your `for` loop will count from 15 to 300 by 15.
        courseF_artist_for6_b: Put a `move forward` and a `turn` block within this `for` loop.
        courseF_artist_for6_c: All you have to change is the number of degrees in the `turn` block.
      courseF_artist_for7_authored_hint:
        courseF_artist_for7_a: The pen is thinner in this puzzle. You will need to set it to `1` before you start.
        courseF_artist_for7_b: Notice that this spiral turns right instead of left!
        courseF_artist_for7_c: The `for` loop in this puzzle goes from 15 to 300 by 2.
        courseF_artist_for7_d: This image is made by turning just 89 degrees.
      courseF_artist_for7_2018_authored_hint:
        courseF_artist_for7_a: The pen is thinner in this puzzle. You will need to set it to `1` before you start.
        courseF_artist_for7_b: Notice that this spiral turns right instead of left!
        courseF_artist_for7_c: The `for` loop in this puzzle goes from 15 to 300 by 2.
        courseF_artist_for7_d: This image is made by turning just 89 degrees.
      courseF_artist_for8_authored_hint:
        courseF_artist_for8_a: Keep everything else the same in your code, only the turn angle needs to change.
        courseF_artist_for8_b: If you want, you can choose a different color for your spiral!
      courseF_artist_for8_2018_authored_hint:
        courseF_artist_for8_a: Keep everything else the same in your code, only the turn angle needs to change.
        courseF_artist_for8_b: If you want, you can choose a different color for your spiral!
      courseF_artist_for9_authored_hint:
        courseF_artist_for9_a: If you put the `set alpha` block inside of your `for` loop, and use the `counter` variable to change it, you can create a design like this.
        courseF_artist_for9_b: The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is.
      courseF_artist_for9_2018_authored_hint:
        courseF_artist_for9_a: If you put the `set alpha` block inside of your `for` loop, and use the `counter` variable to change it, you can create a design like this.
        courseF_artist_for9_b: The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is.
      courseF_artist_for_challenge1_authored_hint:
        courseF_artist_for_challenge1_a: '''Lebar pena'' adalah 1. Alun-alun pertama memiliki 50 pixel sisi, dan setiap persegi adalah 50 piksel lebih luas daripada yang terakhir.'
        courseF_artist_for_challenge1_b: Opacity pada sikat selalu 'counter' / 2.
        courseF_artist_for_challenge1_c: Setelah Anda membuat setiap persegi, jangan lupa untuk melompat ke belakang, mengubah, melompat lagi, kemudian menghidupkan kembali!
        courseF_artist_for_challenge1_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018_authored_hint:
        courseF_artist_for_challenge1_a: '''Lebar pena'' adalah 1. Alun-alun pertama memiliki 50 pixel sisi, dan setiap persegi adalah 50 piksel lebih luas daripada yang terakhir.'
        courseF_artist_for_challenge1_b: Opacity pada sikat selalu 'counter' / 2.
        courseF_artist_for_challenge1_c: Setelah Anda membuat setiap persegi, jangan lupa untuk melompat ke belakang, mengubah, melompat lagi, kemudian menghidupkan kembali!
        courseF_artist_for_challenge1_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2_authored_hint:
        courseF_artist_for_challenge2_c: '''Untuk loop'' pergi dari 5 sampai 250 oleh 2. '
        courseF_artist_for_challenge2_a: Perubahan warna terjadi menggunakan 'diatur warna merah, hijau, biru' blok. Merah diatur konstan di 255, hijau adalah selalu nilai 'counter', dan biru selalu ' 255 - counter'.
        courseF_artist_for_challenge2_b: The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.
        courseF_artist_for_challenge2_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
          
          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_for_challenge2_2018_authored_hint:
        courseF_artist_for_challenge2_c: '''Untuk loop'' pergi dari 5 sampai 250 oleh 2. '
        courseF_artist_for_challenge2_a: Perubahan warna terjadi menggunakan 'diatur warna merah, hijau, biru' blok. Merah diatur konstan di 255, hijau adalah selalu nilai 'counter', dan biru selalu ' 255 - counter'.
        courseF_artist_for_challenge2_b: The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.
        courseF_artist_for_challenge2_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
          
          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_fwp1_authored_hint:
        courseF_artist_fwp1_c: Put all of the code for drawing a square inside the function editor.
        courseF_artist_fwp1_a: Remember, you need to turn 90 degrees to draw a square.
        courseF_artist_fwp1_b: You only need to repeat as many times as the number of sides in a square.
      courseF_artist_fwp1_2018_authored_hint:
        courseF_artist_fwp1_c: Put all of the code for drawing a square inside the function editor.
        courseF_artist_fwp1_a: Remember, you need to turn 90 degrees to draw a square.
        courseF_artist_fwp1_b: You only need to repeat as many times as the number of sides in a square.
      courseF_artist_fwp2_authored_hint:
        courseF_artist_fwp2_a: You need to click the "edit" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!
        courseF_artist_fwp2_b: When calling your function, use a `for loop` for the best possible code!
      courseF_artist_fwp2_2018_authored_hint:
        courseF_artist_fwp2_a: You need to click the "edit" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!
        courseF_artist_fwp2_b: When calling your function, use a `for loop` for the best possible code!
      courseF_artist_fwp2_predict1_authored_hint: [ ]
      courseF_artist_fwp2_predict1_2018_authored_hint: [ ]
      courseF_artist_fwp3_authored_hint:
        courseF_artist_fwp3_a: This gets easier if you put it all in a `for` loop.
        courseF_artist_fwp3_b: |-
          Be sure to turn 90 degrees between each square!
          
          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp3_2018_authored_hint:
        courseF_artist_fwp3_a: This gets easier if you put it all in a `for` loop.
        courseF_artist_fwp3_b: |-
          Be sure to turn 90 degrees between each square!
          
          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp4_authored_hint:
        courseF_artist_fwp4_b: Remember to **add** a parameter.  Don't remove the one that is already there!
        courseF_artist_fwp4_c: You will need to call your function three times to draw the shapes.
      courseF_artist_fwp4_2018_authored_hint:
        courseF_artist_fwp4_b: Remember to **add** a parameter.  Don't remove the one that is already there!
        courseF_artist_fwp4_c: You will need to call your function three times to draw the shapes.
      courseF_artist_fwp5_authored_hint:
        courseF_artist_fwp5_d: A `for` loop would really help you out here!
        courseF_artist_fwp5_c: You will need to edit the function a little bit, since your previous function turned the artist to the right after each side, and this image needs a turn to the left.
        courseF_artist_fwp5_a: The length of sides for each shape is 7 times the number of sides it has.
        courseF_artist_fwp5_b: Don't forget to jump 100 pixels between shapes.
      courseF_artist_fwp5_2018_authored_hint:
        courseF_artist_fwp5_d: A `for` loop would really help you out here!
        courseF_artist_fwp5_c: You will need to edit the function a little bit, since your previous function turned the artist to the right after each side, and this image needs a turn to the left.
        courseF_artist_fwp5_a: The length of sides for each shape is 7 times the number of sides it has.
        courseF_artist_fwp5_b: Don't forget to jump 100 pixels between shapes.
      courseF_artist_fwp6_authored_hint:
        courseF_artist_fwp6_a: It's okay to run the program a few times to figure out how the function works with different parameters.
        courseF_artist_fwp6_b: You don't need to add any `move` or `turn` blocks to finish this code.
      courseF_artist_fwp6_2018_authored_hint:
        courseF_artist_fwp6_a: It's okay to run the program a few times to figure out how the function works with different parameters.
        courseF_artist_fwp6_b: You don't need to add any `move` or `turn` blocks to finish this code.
      courseF_artist_fwp7_authored_hint:
        courseF_artist_fwp7_a: Feeling lost after trying a couple of ideas? Try clicking the "Start over" button in the upper right-hand corner.
        courseF_artist_fwp7_b: Your new `min` variable should go in the first slot in your `for` loop, inside the function.
      courseF_artist_fwp7_2018_authored_hint:
        courseF_artist_fwp7_a: Feeling lost after trying a couple of ideas? Try clicking the "Start over" button in the upper right-hand corner.
        courseF_artist_fwp7_b: Your new `min` variable should go in the first slot in your `for` loop, inside the function.
      courseF_artist_fwp8_authored_hint:
        courseF_artist_fwp8_a: If your function is correct, you shouldn't need to change it for this puzzle.
        courseF_artist_fwp8_b: The only thing you should need to do between function calls is change the color of the line.
      courseF_artist_fwp8_2018_authored_hint:
        courseF_artist_fwp8_a: If your function is correct, you shouldn't need to change it for this puzzle.
        courseF_artist_fwp8_b: The only thing you should need to do between function calls is change the color of the line.
      courseF_artist_fwp9_authored_hint:
        courseF_artist_fwp9_a: |-
          Try one of these drawings.
          ![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)
      courseF_artist_fwp9_2018_authored_hint:
        courseF_artist_fwp9_a: |-
          Try one of these drawings.
          ![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)
      courseF_artist_fwp_challenge1_authored_hint:
        courseF_artist_fwp_challenge1_b: This is a series of polygons with sides that are counter pixels long.
        courseF_artist_fwp_challenge1_c: Each polygon is called from inside a for loop that goes from 3 down to 6 by an increment of 1. What shapes is it making?
      courseF_artist_fwp_challenge1_2018_authored_hint:
        courseF_artist_fwp_challenge1_b: This is a series of polygons with sides that are counter pixels long.
        courseF_artist_fwp_challenge1_c: Each polygon is called from inside a for loop that goes from 3 down to 6 by an increment of 1. What shapes is it making?
      courseF_artist_fwp_challenge2_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'Ini adalah seri dari segi delapan dengan sisi `konter` piksel panjang. '
        courseF_artist_fwp_challenge1_c: 'Setiap oktagon dipanggil dari dalam ''untuk'' loop yang berlangsung dari 200 ke 2 sampai 2. '
        courseF_artist_fwp_challenge1_d: 'Jangan lupa memutar 22.5 derajat pada setiap akhir iterasi. '
        courseF_artist_fwp_challenge1_e: Kedua warna masing - masing oktagon dan lebar pena dikontrol oleh variabel 'balasan'.
        courseF_artist_fwp_challenge1_f: |-
          **Solution:**
          
          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_fwp_challenge2_2018_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'Ini adalah seri dari segi delapan dengan sisi `konter` piksel panjang. '
        courseF_artist_fwp_challenge1_c: 'Setiap oktagon dipanggil dari dalam ''untuk'' loop yang berlangsung dari 200 ke 2 sampai 2. '
        courseF_artist_fwp_challenge1_d: 'Jangan lupa memutar 22.5 derajat pada setiap akhir iterasi. '
        courseF_artist_fwp_challenge1_e: Kedua warna masing - masing oktagon dan lebar pena dikontrol oleh variabel 'balasan'.
        courseF_artist_fwp_challenge1_f: |-
          **Solution:**
          
          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_predict1_authored_hint: [ ]
      courseF_artist_predict1_2018_authored_hint: [ ]
      courseF_artist_ramp10_authored_hint:
        courseF_artist_ramp10_a: Don't forget to turn by 60 degrees after each triangle.  Which loop do you need to put that instruction inside?
        courseF_artist_ramp10_b: If your code for a triangle is in a <xml><block type="controls_repeat"><title name="TIMES">6</title></block></xml> loop, this task will be a lot simpler.
        courseF_artist_ramp10_c: |-
          You will draw six triangles in total for this design:
          
          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseF_artist_ramp10_2018_authored_hint:
        courseF_artist_ramp10_a: Don't forget to turn by 60 degrees after each triangle.  Which loop do you need to put that instruction inside?
        courseF_artist_ramp10_b: If your code for a triangle is in a <xml><block type="controls_repeat"><title name="TIMES">6</title></block></xml> loop, this task will be a lot simpler.
        courseF_artist_ramp10_c: |-
          You will draw six triangles in total for this design:
          
          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseF_artist_ramp8_authored_hint:
        courseF_artist_ramp8_a: To draw a side, use the <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">100</title></block></xml> block, and change the 100 to a 200.
        courseF_artist_ramp8_b: |-
          To draw 4 sides, put the <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">200</title></block></xml> block inside of a repeat loop and make sure the loop is set to draw 4 times.
          
          Don't forget to turn afterward!
        courseF_artist_ramp8_c: Your turn will also go inside of the <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop.
      courseF_artist_ramp8_2018_authored_hint:
        courseF_artist_ramp8_a: To draw a side, use the <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">100</title></block></xml> block, and change the 100 to a 200.
        courseF_artist_ramp8_b: |-
          To draw 4 sides, put the <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">200</title></block></xml> block inside of a repeat loop and make sure the loop is set to draw 4 times.
          
          Don't forget to turn afterward!
        courseF_artist_ramp8_c: Your turn will also go inside of the <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop.
      courseF_artist_ramp9_authored_hint:
        courseF_artist_ramp9_a: How is this similar to a square?  How is it different?
        courseF_artist_ramp9_b: You can use the drop down menu on the turn blocks to see which angle you need!
        courseF_artist_ramp9_c: You will want to move forward 100 pixels, then turn right 120 degrees for each side. Can you use a <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop to make your code shorter?
      courseF_artist_ramp9_2018_authored_hint:
        courseF_artist_ramp9_a: How is this similar to a square?  How is it different?
        courseF_artist_ramp9_b: You can use the drop down menu on the turn blocks to see which angle you need!
        courseF_artist_ramp9_c: You will want to move forward 100 pixels, then turn right 120 degrees for each side. Can you use a <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop to make your code shorter?
      courseF_artist_variables10_authored_hint:
        courseF_artist_variables10_a: Have fun with this level! See what little changes can do to your code.
        courseF_artist_variables10_b: You can try multiple things, and run your code multiple times.
      courseF_artist_variables10_2018_authored_hint:
        courseF_artist_variables10_a: Have fun with this level! See what little changes can do to your code.
        courseF_artist_variables10_b: You can try multiple things, and run your code multiple times.
      courseF_artist_variables2_authored_hint:
        courseF_artist_variables2_a: Remember to move forward after drawing each triangle.
        courseF_artist_variables2_b: Your new loop will contain the loop for your triangle, then a `move forward` command.
      courseF_artist_variables2_2018_authored_hint:
        courseF_artist_variables2_a: Remember to move forward after drawing each triangle.
        courseF_artist_variables2_b: Your new loop will contain the loop for your triangle, then a `move forward` command.
      courseF_artist_variables3_authored_hint:
        courseF_artist_variables3_a: 'The variable `length` will be used in two places in your code: In the side length of your triangle, and in the amount you move forward between triangles.'
        courseF_artist_variables3_b: 'A number block with value 50 should only be in one place: after the `set variable length` block.'
      courseF_artist_variables3_2018_authored_hint:
        courseF_artist_variables3_a: 'The variable `length` will be used in two places in your code: In the side length of your triangle, and in the amount you move forward between triangles.'
        courseF_artist_variables3_b: 'A number block with value 50 should only be in one place: after the `set variable length` block.'
      courseF_artist_variables4_authored_hint:
        courseF_artist_variables4_a: Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.
        courseF_artist_variables4_c: |-
          This is the pattern your artist will be following:
          
          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables4_2018_authored_hint:
        courseF_artist_variables4_a: Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.
        courseF_artist_variables4_c: |-
          This is the pattern your artist will be following:
          
          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables5_authored_hint:
        courseF_artist_variables5_a: The second half of your code should look almost the same as the first half, except you will be turning *left*, jumping, then turning *right*.
        courseF_artist_variables5_b: The first half of your code will draw three triangles, and the second half will draw the other three.
        courseF_artist_variables5_c: Start by duplicating the code in the first half of your program, then alter it to make the design shown.
        courseF_artist_variables5_d: |-
          This is the pattern your artist will follow:
          
          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2018_authored_hint:
        courseF_artist_variables5_a: The second half of your code should look almost the same as the first half, except you will be turning *left*, jumping, then turning *right*.
        courseF_artist_variables5_b: The first half of your code will draw three triangles, and the second half will draw the other three.
        courseF_artist_variables5_c: Start by duplicating the code in the first half of your program, then alter it to make the design shown.
        courseF_artist_variables5_d: |-
          This is the pattern your artist will follow:
          
          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables6_authored_hint:
        courseF_artist_variables6_a: Thanks to variables, you only need to change one number at the top to make this work.
        courseF_artist_variables6_b: You will need to edit the number block with value 50, but nothing else in the code needs to be altered.
      courseF_artist_variables6_2018_authored_hint:
        courseF_artist_variables6_a: Thanks to variables, you only need to change one number at the top to make this work.
        courseF_artist_variables6_b: You will need to edit the number block with value 50, but nothing else in the code needs to be altered.
      courseF_artist_variables6a_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: This code will be very similar to your triangle code, just with a different shape!
        courseF_artist_variables6a_c: Write the code for one square first, then add the code to move between squares. Finally, add a loop around everything!
        courseF_artist_variables6a_d: |-
          This is the pattern you'll follow!
          
          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2018_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: This code will be very similar to your triangle code, just with a different shape!
        courseF_artist_variables6a_c: Write the code for one square first, then add the code to move between squares. Finally, add a loop around everything!
        courseF_artist_variables6a_d: |-
          This is the pattern you'll follow!
          
          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables7_authored_hint:
        courseF_artist_variables7_a: Start your code by using the `set length` block. Set the length variable to 150.
        courseF_artist_variables7_b: You can use a `repeat` loop to make your code for the triangle simpler.
        courseF_artist_variables7_c: You will want to turn left 120 degrees to make the corners of the triangle.
      courseF_artist_variables7_2018_authored_hint:
        courseF_artist_variables7_a: Start your code by using the `set length` block. Set the length variable to 150.
        courseF_artist_variables7_b: You can use a `repeat` loop to make your code for the triangle simpler.
        courseF_artist_variables7_c: You will want to turn left 120 degrees to make the corners of the triangle.
      courseF_artist_variables8_authored_hint:
        courseF_artist_variables8_b: Remember to start your code for the triangle with the `set length` block, and start it at 150 pixels.
        courseF_artist_variables8_c: Make sure to use the `repeat` loop to draw your triangle.
        courseF_artist_variables8_a: "Try putting the set of \n\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks inside your loop at the end.\n"
      courseF_artist_variables8_2018_authored_hint:
        courseF_artist_variables8_b: Remember to start your code for the triangle with the `set length` block, and start it at 150 pixels.
        courseF_artist_variables8_c: Make sure to use the `repeat` loop to draw your triangle.
        courseF_artist_variables8_a: "Try putting the set of \n\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks inside your loop at the end.\n"
      courseF_artist_variables9_authored_hint:
        courseF_artist_variables9_a: For this puzzle, all you need to do is change how many times the loop repeats.
        courseF_artist_variables9_b: Make sure the blocks that increment `length` are within your loop so the lines keep getting longer.
      courseF_artist_variables9_2018_authored_hint:
        courseF_artist_variables9_a: For this puzzle, all you need to do is change how many times the loop repeats.
        courseF_artist_variables9_b: Make sure the blocks that increment `length` are within your loop so the lines keep getting longer.
      courseF_artist_variablesFP_authored_hint:
        courseF_artist_variablesFP_a: |-
          Try one of these three drawings.
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variablesFP_2018_authored_hint:
        courseF_artist_variablesFP_a: |-
          Try one of these three drawings.
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variables_4_authored_hint:
        courseF_artist_variables_4_a: Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to move down, then turn him back to get ready to move forward again.
        courseF_artist_variables_4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables_6_authored_hint:
        courseF_artist_variables_6_a: Thanks to variables, you only need to change one number at the top to make this work.
      courseF_artist_variables_6a_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead of an actual number to solve this puzzle.
      courseF_artist_variables_8_authored_hint:
        courseF_artist_variables_8_a: 'Try putting the set of ![](https://images.code.org/6525bebee31ee15b84a48761b2866f53-image-1477531948829.31.37.png) blocks inside your loop at the end.  '
      courseF_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_a: Each vertical line has a length of `10`. Each horizontal line should have a length of `length`.
        courseF_artist_variables_challenge1_b: You will want to increase the value of `length` by 10 **twice** inside the loop.
        courseF_artist_variables_challenge1_c: To complete the pattern you will need to turn left twice, turn right twice, and move forward a total of four times.
        courseF_artist_variables_challenge1_d: |-
          This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.
          
          ![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)
          
          If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1_2018_authored_hint:
        courseF_artist_variables_challenge1_a: Each vertical line has a length of `10`. Each horizontal line should have a length of `length`.
        courseF_artist_variables_challenge1_b: You will want to increase the value of `length` by 10 **twice** inside the loop.
        courseF_artist_variables_challenge1_c: To complete the pattern you will need to turn left twice, turn right twice, and move forward a total of four times.
        courseF_artist_variables_challenge1_d: |-
          This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.
          
          ![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)
          
          If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1a_authored_hint:
        courseF_artist_variables_challenge1_a: 'Variabel sangat membantu Anda karena dapat menambahkan setiap kali melalui satu lingkaran. '
        courseF_artist_variables_challenge1_b: Teka-teki ini memiliki satu lingkaran yang menciptakan poligon, satu lingkaran yang mengulangi 'sisi' poligon, lalu lingkaran lain yang melakukan semuanya lagi setelah menambahkan 5 ke 'sisi'.
        courseF_artist_variables_challenge1_c: Menggunakan sebuah variabel untuk sisi dan untuk panjang membuat kode lebih bersih karena Anda dapat mengulang kode yang sama beberapa kali, sebagai gantinya membuat salinan baru untuk setiap rangkaian angka.
        courseF_artist_variables_challenge1_d: |-
          **Solution:**
          
          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: Variabel sangat membantu Anda karena dapat menambahkan setiap kali melalui satu lingkaran. 
        courseF_artist_variables_challenge2_c: Menggunakan sebuah variabel untuk sisi dan untuk panjang membuat kode lebih bersih karena Anda dapat mengulang kode yang sama beberapa kali, sebagai gantinya membuat salinan baru untuk setiap rangkaian angka.
        courseF_artist_variables_challenge2_d: |-
          **Solution:**
          
          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018_authored_hint:
        courseF_artist_variables_challenge2_a: Variabel sangat membantu Anda karena dapat menambahkan setiap kali melalui satu lingkaran. 
        courseF_artist_variables_challenge2_c: Menggunakan sebuah variabel untuk sisi dan untuk panjang membuat kode lebih bersih karena Anda dapat mengulang kode yang sama beberapa kali, sebagai gantinya membuat salinan baru untuk setiap rangkaian angka.
        courseF_artist_variables_challenge2_d: |-
          **Solution:**
          
          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_bee_conditionals10_authored_hint:
        courseF_bee_conditionals10_a: Imagine there is a cloud in every spot. Does this help simplify your code?
        courseF_bee_conditionals10_b: Use an `if/else` block to check every space for nectar or honey.
        courseF_bee_conditionals10_c: Could a `while` loop help get to the end of this path?
      courseF_bee_conditionals10_2018_authored_hint:
        courseF_bee_conditionals10_a: Imagine there is a cloud in every spot. Does this help simplify your code?
        courseF_bee_conditionals10_b: Use an `if/else` block to check every space for nectar or honey.
        courseF_bee_conditionals10_c: Could a `while` loop help get to the end of this path?
      courseF_bee_conditionals1_predict1_authored_hint: [ ]
      courseF_bee_conditionals1_predict1_2018_authored_hint: [ ]
      courseF_bee_conditionals2_authored_hint:
        courseF_bee_conditionals2_a: Terkadang akan ada bunga di sana, terkadang tidak. Jika anda ingin kode anda berjalan dalam kedua kasus, pastikan untuk menggunakan pernyataan `if`.
        courseF_bee_conditionals2_b: Try writing the sequence to get you to all of the spaces, then add the `if` statement.
      courseF_bee_conditionals2_2018_authored_hint:
        courseF_bee_conditionals2_a: Terkadang akan ada bunga di sana, terkadang tidak. Jika anda ingin kode anda berjalan dalam kedua kasus, pastikan untuk menggunakan pernyataan `if`.
        courseF_bee_conditionals2_b: Try writing the sequence to get you to all of the spaces, then add the `if` statement.
      courseF_bee_conditionals3_authored_hint:
        courseF_bee_conditionals3_a: Pastikan untuk menggunakan pernyataan `if` untuk memeriksa setiap ruang untuk melihat apakah itu berisi bunga atau tidak sama sekali.
        courseF_bee_conditionals3_b: A `repeat` loop will be useful so you only have to use one `if` block.
        courseF_bee_conditionals3_c: Try writing code to check the first cloud. Can you loop this to check all of them?
      courseF_bee_conditionals3_2018_authored_hint:
        courseF_bee_conditionals3_a: Pastikan untuk menggunakan pernyataan `if` untuk memeriksa setiap ruang untuk melihat apakah itu berisi bunga atau tidak sama sekali.
        courseF_bee_conditionals3_b: A `repeat` loop will be useful so you only have to use one `if` block.
        courseF_bee_conditionals3_c: Try writing code to check the first cloud. Can you loop this to check all of them?
      courseF_bee_conditionals4_authored_hint:
        courseD_bee_conditionals4_a: Anda masih bisa memperlakukan setiap ruangan seolah ada awan di atasnya, walaupun anda bisa melihat keseluruhan jalan.
        courseF_bee_conditionals4_b: 'Gunakan pernyataan `if` di dalam loop anda untuk memeriksa setiap ruang untuk nektar. '
        courseF_bee_conditionals4_c: Using the block `while there is a path ahead`, you should `move forward` and check for a flower. `if there is a flower` what should the bee do?
      courseF_bee_conditionals4_2018_authored_hint:
        courseD_bee_conditionals4_a: Anda masih bisa memperlakukan setiap ruangan seolah ada awan di atasnya, walaupun anda bisa melihat keseluruhan jalan.
        courseF_bee_conditionals4_b: 'Gunakan pernyataan `if` di dalam loop anda untuk memeriksa setiap ruang untuk nektar. '
        courseF_bee_conditionals4_c: Using the block `while there is a path ahead`, you should `move forward` and check for a flower. `if there is a flower` what should the bee do?
      courseF_bee_conditionals5_authored_hint:
        courseF_bee_conditionals5_a: Think of every side of the rectangular path as a path by itself. Set up a nested loop with a `repeat` block on the outside and a `while there is a path ahead` on the inside. How many paths does the bee need to buzz down if the bee needs to buzz every side with a flower?
        courseF_bee_conditionals5_b: Inside the `while there is a path ahead` block, you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?
        courseF_bee_conditionals5_c: 'There are 3 sides of the rectangle with flowers, so the code needs to `repeat 3 times`. In every repeat, the bee will need to continue along the path, `while there is a path ahead`. '
        courseF_bee_conditionals5_d: To continue down the path, the bee will need to `move forward`. While on the path, the bee needs to check for a flower. What should the bee do if there is a flower?
      courseF_bee_conditionals5_2018_authored_hint:
        courseF_bee_conditionals5_a: Think of every side of the rectangular path as a path by itself. Set up a nested loop with a `repeat` block on the outside and a `while there is a path ahead` on the inside. How many paths does the bee need to buzz down if the bee needs to buzz every side with a flower?
        courseF_bee_conditionals5_b: Inside the `while there is a path ahead` block, you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?
        courseF_bee_conditionals5_c: 'There are 3 sides of the rectangle with flowers, so the code needs to `repeat 3 times`. In every repeat, the bee will need to continue along the path, `while there is a path ahead`. '
        courseF_bee_conditionals5_d: To continue down the path, the bee will need to `move forward`. While on the path, the bee needs to check for a flower. What should the bee do if there is a flower?
      courseF_bee_conditionals7_predict2_authored_hint: [ ]
      courseF_bee_conditionals7_predict2_2018_authored_hint: [ ]
      courseF_bee_conditionals8_authored_hint:
        courseF_bee_conditionals8_a: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
        courseF_bee_conditionals8_b: |-
          Teka-teki ini rumit, karena Anda tidak bisa mengecek kotak kosong, nektar, * dan * madu hanya dengan satu syarat tunggal.
          Hanya periksa nektar dan madu di ujung jalanmu.
        courseF_bee_conditionals8_c: What happens if you skip the first flower, then use the `while path ahead` block?
      courseF_bee_conditionals8_2018_authored_hint:
        courseF_bee_conditionals8_a: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
        courseF_bee_conditionals8_b: |-
          Teka-teki ini rumit, karena Anda tidak bisa mengecek kotak kosong, nektar, * dan * madu hanya dengan satu syarat tunggal.
          Hanya periksa nektar dan madu di ujung jalanmu.
        courseF_bee_conditionals8_c: What happens if you skip the first flower, then use the `while path ahead` block?
      courseF_bee_for1_authored_hint:
        courseF_bee_for1_a: Drag a purple number block into the blank space on the `repeat` loop to tell it how many times to repeat.
        courseF_bee_for1_b: You will need two blocks in your ‘repeat’ loop to collect all of the nectar.
      courseF_bee_for10_authored_hint:
        courseF_bee_for10_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        courseF_bee_for10_b: The first set of flowers has a total of **14 flowers**. To get to this first set, the bee must buzz down **7 squares** (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?
        courseF_bee_for10_c: "In the puzzle, the first set of flowers has **14** flowers, the second set has **10** flowers, third set has **6** flowers, and the fourth set has **2** flowers.\n\nIn this drawing, notice there are **7** red squares, **5** orange squares, **3** green squares, and **1** blue block. \n\n![](https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png)\n\nHow do the numbers relate?"
        courseF_bee_for10_d: You'll need to have 2 repeats, one will use a math block.
      courseF_bee_for10_2018_authored_hint:
        courseF_bee_for10_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        courseF_bee_for10_b: The first set of flowers has a total of **14 flowers**. To get to this first set, the bee must buzz down **7 squares** (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?
        courseF_bee_for10_c: "In the puzzle, the first set of flowers has **14** flowers, the second set has **10** flowers, third set has **6** flowers, and the fourth set has **2** flowers.\n\nIn this drawing, notice there are **7** red squares, **5** orange squares, **3** green squares, and **1** blue block. \n\n![](https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png)\n\nHow do the numbers relate?"
        courseF_bee_for10_d: You'll need to have 2 repeats, one will use a math block.
      courseF_bee_for11_authored_hint:
        courseF_bee_for11_a: "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
      courseF_bee_for11_2018_authored_hint:
        courseF_bee_for11_a: "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
      courseF_bee_for1_2018_authored_hint:
        courseF_bee_for1_a: Drag a purple number block into the blank space on the `repeat` loop to tell it how many times to repeat.
        courseF_bee_for1_b: You will need two blocks in your ‘repeat’ loop to collect all of the nectar.
      courseF_bee_for2_authored_hint:
        courseF_bee_for2_a: If you’re confused, work one flower at a time, and test often.
        courseF_bee_for2_b: Remember to move forward between each loop, so you reach each flower.
      courseF_bee_for2_2018_authored_hint:
        courseF_bee_for2_a: If you’re confused, work one flower at a time, and test often.
        courseF_bee_for2_b: Remember to move forward between each loop, so you reach each flower.
      courseF_bee_for3_authored_hint:
        courseF_bee_for3_a: 'Use the `counter` variable inside the `repeat` loop where nectar is gathered to solve this puzzle. '
        courseF_bee_for3_b: Your `for` loop will need to count from 1 to 5 with an increment of 1.
      courseF_bee_for3_predict1_authored_hint: [ ]
      courseF_bee_for3_predict1_2018_authored_hint: [ ]
      courseF_bee_for4_authored_hint:
        courseF_bee_for4_a: Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.
        courseF_bee_for4_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for4_c: Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!
      courseF_bee_for4_2018_authored_hint:
        courseF_bee_for4_a: Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.
        courseF_bee_for4_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for4_c: Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!
      courseF_bee_for5_authored_hint:
        courseF_bee_for5_a: This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops, both inside the same `for` loop.
        courseF_bee_for5_b: Use the `counter` variable in each loop so the bee moves different distances between each flower.
        courseF_bee_for5_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseF_bee_for5_2018_authored_hint:
        courseF_bee_for5_a: This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops, both inside the same `for` loop.
        courseF_bee_for5_b: Use the `counter` variable in each loop so the bee moves different distances between each flower.
        courseF_bee_for5_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseF_bee_for6_authored_hint:
        courseF_bee_for6_a: Don't forget to use a `counter` variable inside your `repeat` loop.
        courseF_bee_for6_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for6_c: Your loop should count **from 5 to 1**.
      courseF_bee_for6_2018_authored_hint:
        courseF_bee_for6_a: Don't forget to use a `counter` variable inside your `repeat` loop.
        courseF_bee_for6_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for6_c: Your loop should count **from 5 to 1**.
      courseF_bee_for7_authored_hint:
        courseF_bee_for7_a: Your `for` loop will need to count from 1 to 7 by 2.
        courseF_bee_for7_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for7_c: Remember to use the `counter` variable in your `repeat` loop.
      courseF_bee_for7_2018_authored_hint:
        courseF_bee_for7_a: Your `for` loop will need to count from 1 to 7 by 2.
        courseF_bee_for7_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for7_c: Remember to use the `counter` variable in your `repeat` loop.
      courseF_bee_for8_authored_hint:
        courseF_bee_for8_a: "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?"
        courseF_bee_for8_b: In this puzzle, you will need to move in a stair step pattern to get to the flowers.
        courseF_bee_for8_c: Your loop will count *from 3 to 15* with some increment. What is it?
      courseF_bee_for8_2018_authored_hint:
        courseF_bee_for8_a: "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?"
        courseF_bee_for8_b: In this puzzle, you will need to move in a stair step pattern to get to the flowers.
        courseF_bee_for8_c: Your loop will count *from 3 to 15* with some increment. What is it?
      courseF_bee_for9_authored_hint:
        courseF_bee_for9_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        courseF_bee_for9_c: It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.
        courseF_bee_for9_b: "**Remember:** If your loop is counting up, the increment is added to your `counter` variable each time through."
      courseF_bee_for9_2018_authored_hint:
        courseF_bee_for9_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        courseF_bee_for9_c: It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.
        courseF_bee_for9_b: "**Remember:** If your loop is counting up, the increment is added to your `counter` variable each time through."
      courseF_bee_for_challenge1_authored_hint: [ ]
      courseF_bee_for_challenge1_2018_authored_hint: [ ]
      courseF_bee_for_challenge2_authored_hint:
        courseF_bee_for_challenge2_a: "Lihatlah suatu pilihan ini untuk gerakan: \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Coba gunakan dua loop ''untuk'': Satu untuk memanjat dan meraih nektar, dan yang lainnya memanjat turun dan membuat madu.'
        courseF_bee_for_challenge2_c: "Perhatikan bahwa satu loop untuk membutuhkan beberapa loop reguler di dalam waktu balasan ulang untuk membuat pola tangga meningkat.\n\nYang lain loop hanya membutuhkan satu lingkaran biasa untuk menghasilkan jumlah madu."
        courseF_bee_for_challenge2_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018_authored_hint:
        courseF_bee_for_challenge2_a: "Lihatlah suatu pilihan ini untuk gerakan: \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Coba gunakan dua loop ''untuk'': Satu untuk memanjat dan meraih nektar, dan yang lainnya memanjat turun dan membuat madu.'
        courseF_bee_for_challenge2_c: "Perhatikan bahwa satu loop untuk membutuhkan beberapa loop reguler di dalam waktu balasan ulang untuk membuat pola tangga meningkat.\n\nYang lain loop hanya membutuhkan satu lingkaran biasa untuk menghasilkan jumlah madu."
        courseF_bee_for_challenge2_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge3_authored_hint:
        courseF_bee_for_challenge2_a: "Lihatlah suatu pilihan ini untuk gerakan: \n\n![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Coba gunakan dua loop ''untuk'': Satu untuk memanjat dan meraih nektar, dan yang lainnya memanjat turun dan membuat madu.'
        courseF_bee_for_challenge2_c: "Perhatikan bahwa satu loop untuk membutuhkan beberapa loop reguler di dalam waktu balasan ulang untuk membuat pola tangga meningkat.\n\nYang lain loop hanya membutuhkan satu lingkaran biasa untuk menghasilkan jumlah madu."
        courseF_bee_for_challenge2_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_functions2_authored_hint:
        courseF_bee_functions2_a: The function has been written for you, but you will need to call it at each flower.
        courseF_bee_functions2_b: Click on the blue edit button on the `get only nectar` function to see what it does.
      courseF_bee_functions2_2018_authored_hint:
        courseF_bee_functions2_a: The function has been written for you, but you will need to call it at each flower.
        courseF_bee_functions2_b: Click on the blue edit button on the `get only nectar` function to see what it does.
      courseF_bee_functions3_authored_hint:
        courseF_bee_functions3_a: 'Your function for this puzzle only needs to make honey, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseF_bee_functions3_b: Remember that your function should only get honey *if* there is a honeycomb.
        courseF_bee_functions3_c: Use the green `only make honey` block to call your function.
        courseF_bee_functions3_d: Check out this path.
      courseF_bee_functions3_2018_authored_hint:
        courseF_bee_functions3_a: 'Your function for this puzzle only needs to make honey, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseF_bee_functions3_b: Remember that your function should only get honey *if* there is a honeycomb.
        courseF_bee_functions3_c: Use the green `only make honey` block to call your function.
        courseF_bee_functions3_d: Check out this path.
      courseF_bee_functions3a_authored_hint:
        courseF_bee_functions3a_a: 'Your function for this puzzle only needs to get nectar or make honey, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseF_bee_functions3a_b: Use a stairstep pattern to check the first four clouds.
      courseF_bee_functions3a_2018_authored_hint:
        courseF_bee_functions3a_a: 'Your function for this puzzle only needs to get nectar or make honey, it shouldn''t have any `move forward` or `turn` blocks in it. '
        courseF_bee_functions3a_b: Use a stairstep pattern to check the first four clouds.
      courseF_bee_functions4_authored_hint:
        courseF_bee_functions4_a: Your function should travel down the side paths and return the bee back to the main road.  You don't need to add that part to your main program.
        courseF_bee_functions4_b: Try building the program and using the function blocks as you expect the function to behave, then create the function.
      courseF_bee_functions4_2018_authored_hint:
        courseF_bee_functions4_a: Your function should travel down the side paths and return the bee back to the main road.  You don't need to add that part to your main program.
        courseF_bee_functions4_b: Try building the program and using the function blocks as you expect the function to behave, then create the function.
      courseF_bee_functions5_authored_hint:
        courseE_bee_functions5_a: Edit the function so that it solves the puzzle without having to change the main program.
        courseE_bee_functions5_b: "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- turn around\n- move back to the main path\n- turn back to the direction that the bee started from"
      courseF_bee_functions5a_authored_hint:
        courseF_bee_functions5a_a: "Your function should check if there's a path to the right, and if there is, travel down the side paths and return the bee back to the main road.  \n\nYou don't need to add that part to your main program."
        courseF_bee_functions5a_b: Use a `while` loop to travel down all of the main paths, since they are different lengths.
        courseF_bee_functions5a_c: Within your `while` loop, make sure to move forward, then use your function to check for a path.
      courseF_bee_functions5a_2018_authored_hint:
        courseF_bee_functions5a_a: "Your function should check if there's a path to the right, and if there is, travel down the side paths and return the bee back to the main road.  \n\nYou don't need to add that part to your main program."
        courseF_bee_functions5a_b: Use a `while` loop to travel down all of the main paths, since they are different lengths.
        courseF_bee_functions5a_c: Within your `while` loop, make sure to move forward, then use your function to check for a path.
      courseF_bee_functions6_authored_hint:
        courseF_bee_functions6_a: "Jika teka-teki tampak menantang, cobalah bangun judul fungsi anda suatu waktu.  tambahkan beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai disana!![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseF_bee_functions6_b: Your function should check if there is a flower or honeycomb, get nectar or make honey, then turn.
        courseF_bee_functions6_c: Since you are turning within your function, you only need one `while` loop to get you through this maze.
      courseF_bee_functions6_2018_authored_hint:
        courseF_bee_functions6_a: "Jika teka-teki tampak menantang, cobalah bangun judul fungsi anda suatu waktu.  tambahkan beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai disana!![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseF_bee_functions6_b: Your function should check if there is a flower or honeycomb, get nectar or make honey, then turn.
        courseF_bee_functions6_c: Since you are turning within your function, you only need one `while` loop to get you through this maze.
      courseF_bee_functions7_authored_hint:
        courseF_bee_functions7_a: You can look back at the last puzzle to see your function.
        courseF_bee_functions7_b: Try drawing a path through this maze with your finger. Where will the bee have to make a decision?
      courseF_bee_functions7_2018_authored_hint:
        courseF_bee_functions7_a: You can look back at the last puzzle to see your function.
        courseF_bee_functions7_b: Try drawing a path through this maze with your finger. Where will the bee have to make a decision?
      courseF_bee_functions8a_authored_hint:
        courseF_bee_functions8a_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseF_bee_functions8a_b: "Remember to build code inside of the function editor.\n\n"
      courseF_bee_functions8a_2018_authored_hint:
        courseF_bee_functions8a_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseF_bee_functions8a_b: "Remember to build code inside of the function editor.\n\n"
      courseF_bee_functionsPre7_authored_hint:
        courseF_bee_functions7_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseF_bee_functions7_b: |-
          Remember to build code inside of the green function block.
          
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseF_bee_functions7_c: Which way should you turn if there is a honeycomb? What about a flower? What if there is nothing?
      courseF_bee_functionsPre7_2018_authored_hint:
        courseF_bee_functions7_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseF_bee_functions7_b: |-
          Remember to build code inside of the green function block.
          
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseF_bee_functions7_c: Which way should you turn if there is a honeycomb? What about a flower? What if there is nothing?
      courseF_bee_functions_challenge1_authored_hint:
        courseF_bee_functions_challenge1_a: You can use the functions in the tool box to help you. You can call a function inside of another function's definition!
      courseF_bee_functions_challenge1_2018_authored_hint:
        courseF_bee_functions_challenge1_a: You can use the functions in the tool box to help you. You can call a function inside of another function's definition!
      courseF_bee_functions_challenge2_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          If there is a path to the right, you should do the following:
          * Get any nectar or make any honey.
          * Turn right towards the side path.
          * Move to the end of the side path.
          * Turn right.
          
          If you repeat the above actions twice, you will be ready to move back down the main path.
          
          **Only click for another hint if you want to see the full solution!**
        courseF_bee_functions_challenge2_b: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_2018_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          If there is a path to the right, you should do the following:
          * Get any nectar or make any honey.
          * Turn right towards the side path.
          * Move to the end of the side path.
          * Turn right.
          
          If you repeat the above actions twice, you will be ready to move back down the main path.
          
          **Only click for another hint if you want to see the full solution!**
        courseF_bee_functions_challenge2_b: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_recursion_authored_hint:
        courseF_bee_functions8a_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        courseF_bee_functions8a_b: "Remember to build code inside of the function editor.\n\n"
      courseF_bee_fwp1_authored_hint:
        courseF_bee_fwp1_a: Use `if` statements to make sure you're only getting nectar from a flower.
        courseF_bee_fwp1_b: Continue along the path using a `repeat` block. Make sure you are using a `move forward` block and checking if there is a flower using a `if` statement.
      courseF_bee_fwp1_2018_authored_hint:
        courseF_bee_fwp1_a: Use `if` statements to make sure you're only getting nectar from a flower.
        courseF_bee_fwp1_b: Continue along the path using a `repeat` block. Make sure you are using a `move forward` block and checking if there is a flower using a `if` statement.
      courseF_bee_fwp2_authored_hint:
        courseF_bee_fwp2_a: "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        courseF_bee_fwp2_b: Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built.
      courseF_bee_fwp2_2018_authored_hint:
        courseF_bee_fwp2_a: "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        courseF_bee_fwp2_b: Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built.
      courseF_bee_fwp3_authored_hint:
        courseF_bee_fwp3_a: Your function will run no matter which direction you're facing.
        courseF_bee_fwp3_b: There are 3 rows of nectar, what kind of turns and movements do you need to make between each row?
        courseF_bee_fwp3_c: To solve this puzzle, you'll need to call your function 3 times. In between each call, you need to `turn right`, `move forward` 2 times, then `turn right` again. OR, you need to `turn left`, `move forward` 2 times, then `turn left` again.
      courseF_bee_fwp3_2018_authored_hint:
        courseF_bee_fwp3_a: Your function will run no matter which direction you're facing.
        courseF_bee_fwp3_b: There are 3 rows of nectar, what kind of turns and movements do you need to make between each row?
        courseF_bee_fwp3_c: To solve this puzzle, you'll need to call your function 3 times. In between each call, you need to `turn right`, `move forward` 2 times, then `turn right` again. OR, you need to `turn left`, `move forward` 2 times, then `turn left` again.
      courseF_bee_fwp4_authored_hint:
        courseF_bee_fwp4_a: You will need to add a parameter and use the resulting variable in your loop.
        courseF_bee_fwp4_b: The parameter you create for your function will be used to in the repeat loop to determine how many times the bee will move forward and check for nectar.
      courseF_bee_fwp4_2018_authored_hint:
        courseF_bee_fwp4_a: You will need to add a parameter and use the resulting variable in your loop.
        courseF_bee_fwp4_b: The parameter you create for your function will be used to in the repeat loop to determine how many times the bee will move forward and check for nectar.
      courseF_bee_fwp5_authored_hint:
        courseF_bee_fwp5_a: Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.
        courseF_bee_fwp5_a_b: Remember to turn between each function call.
      courseF_bee_fwp5_2018_authored_hint:
        courseF_bee_fwp5_a: Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.
        courseF_bee_fwp5_a_b: Remember to turn between each function call.
      courseF_bee_fwp6_authored_hint:
        courseF_bee_fwp6_a: Which block automatically increments a variable that you could use as a parameter?
        courseF_bee_fwp6_b: Try using a `for` loop to solve this puzzle.
      courseF_bee_fwp6_2018_authored_hint:
        courseF_bee_fwp6_a: Which block automatically increments a variable that you could use as a parameter?
        courseF_bee_fwp6_b: Try using a `for` loop to solve this puzzle.
      courseF_bee_fwp7_authored_hint:
        courseF_bee_fwp7_a: You don't need a second parameter for this function, only a second `if` statement.
        courseF_bee_fwp7_b: Add an `if` statement in your function so the bee checks for both honeycombs and flowers.
      courseF_bee_fwp7_2018_authored_hint:
        courseF_bee_fwp7_a: You don't need a second parameter for this function, only a second `if` statement.
        courseF_bee_fwp7_b: Add an `if` statement in your function so the bee checks for both honeycombs and flowers.
      courseF_bee_fwp8_authored_hint:
        courseF_bee_fwp8_a: How could a `for` loop help in this puzzle?
        courseF_bee_fwp8_b: Since the spiral gets smaller as you go in, your `for` loop should count down.
      courseF_bee_fwp8_2018_authored_hint:
        courseF_bee_fwp8_a: How could a `for` loop help in this puzzle?
        courseF_bee_fwp8_b: Since the spiral gets smaller as you go in, your `for` loop should count down.
      courseF_bee_fwp9_authored_hint: [ ]
      courseF_bee_fwp9_predict1_authored_hint: [ ]
      courseF_bee_fwp9_predict1_2018_authored_hint: [ ]
      courseF_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          The main program should look something like this:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: 'Look at how much corn is available to harvest in each space. Do you see the counter pattern? '
        courseF_bee_fwp_challenge1_b1: |-
          The `length` parameter should be used to set the maximum value in the `for loop`.
          
          Don't forget to have the farmer move back to the main path after harvesting!
        courseF_bee_fwp_challenge1_c: |-
          Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.
          Inside this loop, you should move forward and pick all of the corn.
          
          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: Inside the `for loop` you will want to `move forward` then `pick corn` **counter times**.
        courseF_bee_fwp_challenge1_d2: After the `for loop` you can just `move backward` **length times**.
        courseF_bee_fwp_challenge1_e: |
          **Here is the solution:**
          
          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge1_2018_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          The main program should look something like this:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: 'Look at how much corn is available to harvest in each space. Do you see the counter pattern? '
        courseF_bee_fwp_challenge1_b1: |-
          The `length` parameter should be used to set the maximum value in the `for loop`.
          
          Don't forget to have the farmer move back to the main path after harvesting!
        courseF_bee_fwp_challenge1_c: |-
          Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.
          Inside this loop, you should move forward and pick all of the corn.
          
          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: Inside the `for loop` you will want to `move forward` then `pick corn` **counter times**.
        courseF_bee_fwp_challenge1_d2: After the `for loop` you can just `move backward` **length times**.
        courseF_bee_fwp_challenge1_e: |
          **Here is the solution:**
          
          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Start by making sure you understand how this function is *supposed* to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?
          
          Add conditional statements to the function to check for corn, pumpkins, and lettuce.
        courseF_bee_fwp_challenge2_b: |-
          Are you running out of `move forward` blocks?
          Try using a *second* `for loop` in your main program.
        courseF_bee_fwp_challenge2_c: |-
          **Here is what your function should look like:**
          
          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **Here is what your main program should look like:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_bee_fwp_challenge2_2018_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Start by making sure you understand how this function is *supposed* to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?
          
          Add conditional statements to the function to check for corn, pumpkins, and lettuce.
        courseF_bee_fwp_challenge2_b: |-
          Are you running out of `move forward` blocks?
          Try using a *second* `for loop` in your main program.
        courseF_bee_fwp_challenge2_c: |-
          **Here is what your function should look like:**
          
          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **Here is what your main program should look like:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_farmer_ramp11_authored_hint:
        courseF_farmer_ramp11_a: If you're having a hard time seeing where the loops should go, try coding it all out then looking for a pattern.
        courseF_farmer_ramp11_b: How can you use a <xml><block type="controls_repeat"><title name="TIMES">???</title></block></xml> loop to pick lettuce, instead of dragging out 5 <xml><block type="harvester_lettuce"/></xml> blocks?
        courseF_farmer_ramp11_c: You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a <xml><block type="maze_moveForward"/></xml> block, and you'll have it!)
      courseF_farmer_ramp11_2018_authored_hint:
        courseF_farmer_ramp11_a: If you're having a hard time seeing where the loops should go, try coding it all out then looking for a pattern.
        courseF_farmer_ramp11_b: How can you use a <xml><block type="controls_repeat"><title name="TIMES">???</title></block></xml> loop to pick lettuce, instead of dragging out 5 <xml><block type="harvester_lettuce"/></xml> blocks?
        courseF_farmer_ramp11_c: You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a <xml><block type="maze_moveForward"/></xml> block, and you'll have it!)
      courseF_maze_predict1_authored_hint: [ ]
      courseF_maze_ramp1_authored_hint:
        courseF_maze_ramp1_a: If the bird isn't getting to the pig, make sure all of the blocks have been fully snapped together, then click "Run" again.
        courseF_maze_ramp1_b: You don't need any extra blocks from the toolbox here!
      courseF_maze_ramp13_authored_hint:
        courseF_maze_ramp13_b: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseF_maze_ramp13_a: Use repeat blocks to run either a single block or a chunk of code over and over.
        courseF_maze_ramp13_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
        courseF_maze_ramp13_d: Once your loop is done, what do you have to do to move the final few squares? Attach these blocks after the loop.
      courseF_maze_ramp15_authored_hint:
        courseF_maze_ramp7_b: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseF_maze_ramp7_a: Use repeat blocks to run either a single block or a chunk of code over and over.
      courseF_maze_ramp1_2018_authored_hint:
        courseF_maze_ramp1_a: If the bird isn't getting to the pig, make sure all of the blocks have been fully snapped together, then click "Run" again.
        courseF_maze_ramp1_b: You don't need any extra blocks from the toolbox here!
      courseF_maze_ramp2_authored_hint:
        courseF_maze_ramp2_a: To use a new block, drag it from the toolbox out into the workspace and connect it to the program that is attached to the <xml><block type="when_run"/></xml> block.
        courseF_maze_ramp2_b: Make sure the <xml><block type="maze_moveForward"/></xml> block is inside of the loop, so that it is repeated.
      courseF_maze_ramp2_2018_authored_hint:
        courseF_maze_ramp2_a: To use a new block, drag it from the toolbox out into the workspace and connect it to the program that is attached to the <xml><block type="when_run"/></xml> block.
        courseF_maze_ramp2_b: Make sure the <xml><block type="maze_moveForward"/></xml> block is inside of the loop, so that it is repeated.
      courseF_maze_ramp4_authored_hint:
        courseF_maze_ramp4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseF_maze_ramp4_b: Untuk mengikuti jalannya, bergerak maju dan berbelok ke satu arah, kemudian bergerak tiga kali sebelum berbalik ke arah berlawanan. Bergerak maju satu kali lagi untuk menjangkau babi.
        courseF_maze_ramp4_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseF_maze_ramp4_2018_authored_hint:
        courseF_maze_ramp4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseF_maze_ramp4_b: Untuk mengikuti jalannya, bergerak maju dan berbelok ke satu arah, kemudian bergerak tiga kali sebelum berbalik ke arah berlawanan. Bergerak maju satu kali lagi untuk menjangkau babi.
        courseF_maze_ramp4_c: Jangan takut untuk membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang terjadi, bahkan jika anda belum memecahkan teka-teki itu.
      courseF_maze_ramp5_authored_hint:
        courseF_maze_ramp5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseF_maze_ramp5_b: There is more than one way to get to the pig.
        courseF_maze_ramp5_c: Try using a <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop for shorter code!
      courseF_maze_ramp5_2018_authored_hint:
        courseF_maze_ramp5_a: Coba gunakan tombol "step" untuk menjalankan kode baris demi baris. Bisakah anda mencari tahu apa yang perlu anda lakukan selanjutnya?
        courseF_maze_ramp5_b: There is more than one way to get to the pig.
        courseF_maze_ramp5_c: Try using a <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop for shorter code!
      courseF_maze_ramp6_authored_hint:
        courseF_maze_ramp6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseF_maze_ramp6_b: The bird starts facing a wall, so remember to turn before moving!
        courseF_maze_ramp6_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseF_maze_ramp6_2018_authored_hint:
        courseF_maze_ramp6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
        courseF_maze_ramp6_b: The bird starts facing a wall, so remember to turn before moving!
        courseF_maze_ramp6_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
      courseF_maze_ramp7_authored_hint:
        courseF_maze_ramp7_b: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
        courseF_maze_ramp7_a: Use repeat blocks to run either a single block or a chunk of code over and over.
        courseF_maze_ramp7_c: Jangan takut membuat kesalahan! Cobalah menambahkan blok dan menjalankan kode untuk melihat apa yang akan terjadi, bahkan jika anda belum berpikir bahwa anda belum menyelesaikan teka-teki itu.
        courseF_maze_ramp7_d: There is more than one way to get to the pig. Which requires the least code?
        courseF_maze_ramp7_aa: |-
          Look at this path...
          
          ![](https://images.code.org/e1d29901495eea9504c194b09efaa88e-image-1503437474226.29.32.png)
      courseF_playlab_variables1a_authored_hint:
        courseF_playlab_variables1a_a: You will want to replace the words “What should I shout?” in the green block with “Goal!”
      courseF_playlab_variables1a_2018_authored_hint:
        courseF_playlab_variables1a_a: You will want to replace the words “What should I shout?” in the green block with “Goal!”
      courseF_playlab_variables2b_authored_hint:
        courseF_playlab_variables2b_a: What do you think Kiki will say when you hit `Run`?
      courseF_playlab_variables2b_2018_authored_hint:
        courseF_playlab_variables2b_a: What do you think Kiki will say when you hit `Run`?
      courseF_playlab_variables3b_authored_hint:
        courseF_playlab_variables3b_a: The variable blocks are already in the workspace.  All you have to do is put them where they belong!
      courseF_playlab_variables3bEdit_authored_hint:
        courseF_playlab_variables3b_a: The variable blocks are already in the workspace.  All you have to do is put them where they belong!
      courseF_playlab_variables3b_josh_authored_hint:
        courseF_playlab_variables3b_a: 'There are two blocks with empty spaces: an `actor say` block, and a `join` block. Add the variable blocks there!'
      courseF_playlab_variables3b_josh_2018_authored_hint:
        courseF_playlab_variables3b_a: 'There are two blocks with empty spaces: an `actor say` block, and a `join` block. Add the variable blocks there!'
      courseF_playlab_variables4b_authored_hint:
        courseF_playlab_variables4b_a: You don’t need any more blocks from the toolbox here.
        courseF_playlab_variables4b_b: Put the two `age` variables and one `name` variable where they make the most sense in the conversation.
      courseF_playlab_variables4b_2018_authored_hint:
        courseF_playlab_variables4b_a: You don’t need any more blocks from the toolbox here.
        courseF_playlab_variables4b_b: Put the two `age` variables and one `name` variable where they make the most sense in the conversation.
      courseF_playlab_variables5c_authored_hint:
        courseF_playlab_variables5c_a: Find an `answer` variable block in the toolbox, under “Variables”.
        courseF_playlab_variables5c_b: Test your code! Try entering “red”, and also other colors, to see what happens.
      courseF_playlab_variables5c_2018_authored_hint:
        courseF_playlab_variables5c_a: Find an `answer` variable block in the toolbox, under “Variables”.
        courseF_playlab_variables5c_b: Test your code! Try entering “red”, and also other colors, to see what happens.
      courseF_playlab_variables6c_authored_hint:
        courseF_playlab_variables6c_a: Under the “Input” section, use the `ask` block to get input from users.
      courseF_playlab_variables6c_2018_authored_hint:
        courseF_playlab_variables6c_a: Under the “Input” section, use the `ask` block to get input from users.
      courseF_playlab_variables7b_authored_hint:
        courseF_playlab_variables7b_a: Have a cat and a dog talk about their favorite foods. Use the ask block to find out the favorite food, then display the text to the screen!
        courseF_playlab_variables7b_b: Have your favorite character ask if you want to hear a joke. If the answer is yes, display a joke to the screen.
      courseF_playlab_variables7b_2018_authored_hint:
        courseF_playlab_variables7b_a: Have a cat and a dog talk about their favorite foods. Use the ask block to find out the favorite food, then display the text to the screen!
        courseF_playlab_variables7b_b: Have your favorite character ask if you want to hear a joke. If the answer is yes, display a joke to the screen.
      courseF_playlab_variables7c_authored_hint:
        courseF_playlab_variables7c_a: Put the new `ask` block before your `if/else` statement so you can use it there in other stages.
      courseF_playlab_variables7c_2018_authored_hint:
        courseF_playlab_variables7c_a: Put the new `ask` block before your `if/else` statement so you can use it there in other stages.
      courseF_playlab_variables8c_authored_hint:
        courseF_playlab_variables8c_a: The `join` block goes into an `actor say` block, and lets you use your variables in larger sentences.
      courseF_playlab_variables8c_2018_authored_hint:
        courseF_playlab_variables8c_a: The `join` block goes into an `actor say` block, and lets you use your variables in larger sentences.
      courseF_playlab_variables_challenge1_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          You will need additional blocks from the tool box to get the actors to talk.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge1_2018_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          You will need additional blocks from the tool box to get the actors to talk.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge2_a: Add and subtract points to the `score` variable when sprites collide.
        courseF_playlab_variables_challenge2_b: Anda dapat mengubah parameter seberapa jauh sprite anda bergerak salah satu tombol panah ditekan setiap kali.
        courseF_playlab_variables_challenge2_c: |-
          **Solution:**
          
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge2_2018_authored_hint:
        courseF_playlab_variables_challenge2_a: Add and subtract points to the `score` variable when sprites collide.
        courseF_playlab_variables_challenge2_b: Anda dapat mengubah parameter seberapa jauh sprite anda bergerak salah satu tombol panah ditekan setiap kali.
        courseF_playlab_variables_challenge2_c: |-
          **Solution:**
          
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge3_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          The actor knows what to say because it checks the current value of the `fortune` variable.
          
          <xml><block type="variables_set" inline="false">
          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          It will feel like the game starts all over if you call the `ask a question` function again after the actor says the fortune.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">fortune</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "You will need to add more conditional statements to give the actors more things to say.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n              \nDon't forget to change which moods the actor will show inside of the `repeat forever` loop. You can also set the moods randomly!"
        courseF_playlab_variables_challenge3_d: |-
          Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.
          
          Don't forget to change the instructions inside the `Ask a question` function so they still make sense!
        courseF_playlab_variables_challenge3_e: |-
          When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?
          
          Have a friend try your app when it is finished!
      coursea_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure both of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!
      coursef_maze_ramp3_authored_hint:
        courseF_maze_ramp3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseF_maze_ramp3_b: Use the step button to go through the program line-by-line. Where does something go wrong?
      coursef_maze_ramp3_2018_authored_hint:
        courseF_maze_ramp3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
        courseF_maze_ramp3_b: Use the step button to go through the program line-by-line. Where does something go wrong?
      drawings!_authored_hint:
        triangle_geometry_hint: 'Remember: an equilateral triangle has three sides, with a 60 degree turn between each!'
        repeat_pointer: You have to draw a side and turn 3 times...what block can you use to run the same instructions many times?
        repeat_bottom_out: Use a `repeat 3 times` block!
      grade1_adventurer_loops10_authored_hint:
        grade1_adventurer_loops10_a: You'll need three `repeat` loops to solve this puzzle.
      grade1_adventurer_loops2_authored_hint:
        grade1_adventurer_loops2_a: Coba gunakan blok `repeat` untuk mengumpulkan emas anda.
      grade1_adventurer_loops3_authored_hint:
        grade1_adventurer_loops3_a: Is something not right? Try using the step button to figure out where things go wrong.
      grade1_adventurer_loops4_authored_hint:
        grade1_adventurer_loops4_a: Try using more than one loop to get the job done.
      grade1_adventurer_loops5_authored_hint:
        grade1_adventurer_loops5_a: Tidak tahu di mana hal-hal yang salah? Gunakan tombol "step" untuk menjalankan program anda satu blok setiap kalinya.
      grade1_adventurer_loops6_authored_hint:
        grade1_adventurer_loops6_a: Jika anda mengalami kesulitan dengan teka-teki ini, cobalah menggambar di atas kertas untuk membantu anda mengetahuinya.
      grade1_adventurer_loops7_challenge_authored_hint:
        grade1_adventurer_loops7_challenge_a: 'If you can''t figure out where to put the repeat loops, program it out step-by-step and look for a pattern. '
        grade1_adventurer_loops7_challenge_b: Does the code feel a little long?  You can make it much shorter by moving two of your `repeat` loops inside of another loop.
      grade1_adventurer_loops8_challenge_authored_hint:
        grade1_adventurer_loops8_challenge_a: Can you find a pattern in the steps?  Where can you use a repeat?
      grade1_adventurer_loops9_authored_hint:
        grade1_adventurer_loops9_a: 'Does this seem too hard?  Break it up into 4 little problems to make it feel easier.  '
      grade1_artist_loops1_authored_hint:
        grade1_artist_loops1_a: Jika Anda ingin lingkaran untuk mengulang lebih dari 4 kali, Anda dapat mengubah angka di atas blok.
      grade1_artist_loops2_authored_hint:
        grade1_artist_loops2_a: Ingatlah untuk menggunakan loop `repeat` untuk kode yang lebih baik!
      grade1_artist_loops3_authored_hint: [ ]
      grade1_artist_loops4_authored_hint:
        grade1_artist_loops4_a: Seret loop `repeat`, lalu letakkan blok lain di dalamnya. Berapa kali anda perlu mengulanginya?
      grade1_artist_loops5_authored_hint: [ ]
      grade1_artist_loops6_authored_hint:
        grade1_artist_loops6_a: Tantangan ini menggunakan EMPAT loop, satu demi satu!
        grade1_artist_loops6_b: |-
          Notice that every loop makes a stair pattern that travels in a different direction.
          
          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        grade1_artist_loops6_c: "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
      grade1_artist_loops7_authored_hint: [ ]
      grade1_artist_loops7a_authored_hint:
        artistLoopsK9_a: Tantangan ini menggunakan EMPAT loop, satu demi satu!
        artistLoopsK9_b: |-
          Notice that every loop makes a stair pattern that travels in a different direction.
          
          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        artistLoopsK9_c: "The loops should do this:\n- Loop 1\n  - Right\n  - Down\n  \n- Loop 2\n  - Right\n  - Up\n\n- Loop 3\n  - Left\n  - Up\n\n- Loop 4\n  - Left\n  - Down"
      grade1_artist_loops7b_authored_hint:
        grade1_artist_loops7b_a: Berapa kali anda harus mengulangi pola untuk membuat tangga?
      grade1_artist_loops8_authored_hint: [ ]
      grade1_artist_loops9_authored_hint: [ ]
      grade1_artist_loopsFP_authored_hint: [ ]
      grade1_maze_sequence1_authored_hint:
        grade1_maze_sequence1_a: Program ini hilang satu blok. Bisakah kamu mencari tahu yang mana?
      grade1_maze_sequence10_authored_hint:
        grade1_maze_sequence10_a: Jika anda mengalami masalah, coba tuliskan langkah-langkah di selembar kertas terlebih dahulu.
      grade1_maze_sequence2_authored_hint:
        grade1_maze_sequence2_a: Salah satu blok memindahkan burung ke arah yang salah. Dapatkah anda mencari tahu yang mana dan menggantinya dengan blok yang benar?
      grade1_maze_sequence3_authored_hint:
        grade1_maze_sequence3_a: Cobalah menambahkan satu instruksi pada satu waktu sampai anda tiba di babi.
      grade1_maze_sequence5_authored_hint:
        K2.0_sequence_5: Kode akhir anda harus memiliki tiga blok gerakan.
      grade1_maze_sequence6_authored_hint:
        K2.0_sequence_6_a: Ada 1 blok yang perlu ditambahkan untuk memindahkan burung ke babi.
      grade1_maze_sequence7_authored_hint:
        grade1_maze_sequence7a: If you're stuck, try adding one block at a time until you solve the puzzle.
      grade1_maze_sequence8_authored_hint:
        grade1_maze_sequence8_a: Terjebak? Cobalah menelusuri jalan burung dengan jari anda.
        grade1_maze_sequence8_b: The extra blocks need to be added before the last ![](https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51 PM.png )
      grade1_maze_sequence9_authored_hint:
        grade1_maze_sequence9_a: Jika anda mengalami masalah, coba tuliskan langkah-langkah di selembar kertas terlebih dahulu.
      grade1_maze_sequenceA_authored_hint:
        grade1_maze_sequence10_a: Jika anda mengalami masalah, coba tuliskan langkah-langkah di selembar kertas terlebih dahulu.
      grade1_maze_sequenceB_authored_hint:
        grade1_maze_sequenceB_a: Jika anda mengalami masalah, coba tuliskan langkah-langkah di selembar kertas terlebih dahulu.
      grade1_maze_sequenceC_authored_hint:
        grade1_maze_sequenceC_a: Jika anda mengalami masalah, coba tuliskan langkah-langkah di selembar kertas terlebih dahulu.
      grade2_CaringForNewPet_0_authored_hint:
        grade2_CaringForNewPet_0: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
      grade2_CaringForNewPet_1_authored_hint:
        2-3_Maze_1_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
      grade2_CaringForNewPet_11_authored_hint: [ ]
      grade2_CaringForNewPet_2courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nTo delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  \n\nClick on the block you want to delete, and drag it back to the toolbox.\n\nFinally, put your other blocks back in place where they belong.\n"
      grade2_CaringForNewPet_3_authored_hint:
        hint1: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        hint2: This path is a zig-zag. You need to move forward 3 times and turn 2 times.
        hint3: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
      grade2_CaringForNewPet_3D_authored_hint: [ ]
      grade2_CaringForNewPet_4_authored_hint:
        2-3_Maze_6_a: Ada dua alternatif untuk menyelesaikan teka-teki ini!
      grade2_CaringForNewPet_5_authored_hint:
        grade2_CaringForNewPet_5_a: If you can't quite see what you need to do, try saying the steps that your bird will take out loud one-by-one and see if they match the blocks in the workspace.
      grade2_CaringForNewPet_6_authored_hint:
        grade2_CaringForNewPet_6_a: You don't have to code the whole solution at once!  Try running the code as you go to make sure it works at each step.
      grade2_CaringForNewPet_7D_authored_hint:
        grade2_CaringForNewPet_7D_a: Jangan lupa gunakan tombol "Step" untuk melewati blok demi blok dan mencari kesalahan.
      grade2_MakeDogTag_1_authored_hint:
        2-3_Artist_1_new_a: Jika Anda menggunakan blok agar saya 'bergerak maju dengan 100 pixel', saya akan menarik garis secara otomatis.
        2-3_Artist_1_new_b: Kesulitan mengubah sudut? Gunakan blok 'belok kanan 90 derajat'.
      grade2_MakeDogTag_2_authored_hint:
        2-3_Artist_2_new_a: To create this window, just draw a square with 100 pixel sides.
      grade2_MakeDogTag_3_authored_hint:
        2-3_Artist_4_a: Untuk menyelesaikan roketnya, cukup menggambar segitiga di atas!
      grade2_MakeDogTag_4_authored_hint: [ ]
      grade2_MakeDogTag_5_authored_hint:
        grade2_MakeDogTag_5a: Seniman sudah menghadapi cara yang benar untuk menggambar garis pertamanya.
        grade2_MakeDogTag_5b: Berlian ini nyata terdapat persegi yang berdiri di sudutnya.
        grade2_MakeDogTag_5c: Karena berlian ini juga persegi, pastikan untuk memutar 90 derajat di sudut.
      grade2_MakeDogTag_6_authored_hint:
        grade2_MakeDogTag_6a: Setiap sudut adalah 45 atau 90 derajat.
        grade2_MakeDogTag_6b: "Does it work at the first step?  \nHow about the second?  \nWhere does it go wrong?"
      grade2_MakeDogTag_7_authored_hint:
        2-3_Artist_11_a: The exterior angles on this triangle are 120 degrees each.
      grade2_MakeDogTag_9_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          Remember that the code from the last puzzle was:
          
          ![](https://images.code.org/e5c7492f509dd41efe2888c7e7895c28-image-1461177002636.29.02.png)
        2-3_Artist_Loops_New_11_b: Giliran baru anda harus berada di **akhir** pada kode dalam lingkaran.
      grade2_MakeDogTag_BFP_authored_hint: [ ]
      grade2_PuppyLoops_10_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          Berapa kali gambar figur saya digambar ulang?
          Berapa kali gambar tersebut "sebaiknya" digambar ulang?
          Pada bagian program mana yang harus kamu rubah?
      grade2_PuppyLoops_3_authored_hint:
        hint1: Teka-teki ini sangat mirip dengan yang terakhir.
        hint2: Gunakan blok `repeat 5 times` untuk membuat loop.
        hint3: Place a `move forward` block inside the `repeat block`.
      grade2_PuppyLoops_5_authored_hint:
        hint1: Solusi terbaik menggunakan dua perintah `move forward` dan satu loop.
      grade2_PuppyLoops_6_authored_hint:
        2-3_Maze_16_a: Jika pola sulit untuk dilihat, cobalah semua pengkodean pertama dan lihat apakah ulang lagi dan lagi sebelum anda memasukkan loop.
        2-3_Maze_16_b: "Untuk menempatkan banyak blok ke dalam loop 'ulang', hanya tarik loop keluar menuju ruang kerja, kemudian tarik semua blok dari program awal itu.  Menghubungkan kembali semua ke blok 'ketika menjalankan' dan anda aman untuk pergi!"
      grade2_PuppyLoops_7_authored_hint:
        2-3_Maze_Loops_17_a: Jika pola sulit untuk dilihat, cobalah semua pengkodean pertama dan lihat apakah ulang lagi dan lagi sebelum anda memasukkan loop.
        2-3_Maze_Loops_17_b: Apakah kode awal akan dihapus? klik ' mulai lagi ' intuk mendapatkannya kembali!
      grade2_PuppyLoops_8_authored_hint:
        2-3_Artist_Debugging_2_a: 'Petunjuk: setiap janggut panjangnya 75 piksel.'
      grade2_PuppyLoops_9_authored_hint:
        2-3_Artist_Debugging_7_a: Apa yang terjadi jika si pelukis berjalan atau melompat ke belakang setelah dia menggambar garis pertama?
      grade2_collector_2_authored_hint:
        hint1: You can use four `move forward` blocks or use the `repeat 4 times` block to make your program shorter.
      grade2_collector_A_authored_hint: [ ]
      grade2_collector_A_2018_authored_hint: [ ]
      grade2_maze_debuggingFP_authored_hint: [ ]
      grade2_maze_intro4_authored_hint:
        hint_1: Connect a "move forward" block to the bottom of the program.
      grade2_playlab_project_6_authored_hint:
        idea1: |-
          *Need an idea?*
          
          **Who's there?** Make characters appear with random images, so no one knows who's showing up next.
          
          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Need an idea?*
          
          **Going on an Adventure** - Change the background, then have the characters talk about where they are now.
          
          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Need an idea?*
          
          **Pinball** - Make one character move using the arrow keys (use `when up arrow`, `when down arrow` blocks), then play random sounds when it collides with other characters on the screen.
      grade2_puppy_loops2_authored_hint:
        hint1: Anda bisa memecahkan teka-teki ini hanya dengan tiga blok, termasuk `when run`.
        hint2: Coba masukkan blok `move forward` ke dalam blok` repeat` untuk membuat satu loop.
        hint3: Anda perlu mengulangi perintah `move forward` 5 kali untuk memecahkan teka-teki ini.
      grade2_puppy_loops3_authored_hint:
        hint1: Teka-teki ini sangat mirip dengan yang terakhir.
        hint2: Gunakan blok `repeat 5 times` untuk membuat loop.
        hint3: Place a `move forward` block inside the `repeat block`.
      grade2_puppy_loops4_authored_hint:
        hint1: Tidak semua blok perintah harus diulang.
        hint2: Gunakan dua blok `repeat` yang disetel ke nomor yang berbeda.
        hint3: "`Belok kanan` sekali di antara dua loop."
      grade2_puppy_loops5_authored_hint:
        hint1: Solusi terbaik menggunakan dua perintah `move forward` dan satu loop.
      grade2_puppy_loops6_authored_hint:
        2-3_Maze_16_a: Jika pola sulit untuk dilihat, cobalah semua pengkodean pertama dan lihat apakah ulang lagi dan lagi sebelum anda memasukkan loop.
        2-3_Maze_16_b: "Untuk menempatkan banyak blok ke dalam loop 'ulang', hanya tarik loop keluar menuju ruang kerja, kemudian tarik semua blok dari program awal itu.  Menghubungkan kembali semua ke blok 'ketika menjalankan' dan anda aman untuk pergi!"
      grade2_puppy_loops7_authored_hint:
        2-3_Maze_Loops_17_a: Jika pola sulit untuk dilihat, cobalah semua pengkodean pertama dan lihat apakah ulang lagi dan lagi sebelum anda memasukkan loop.
      grade3_ConditionalsElse_4_authored_hint:
        remember_quantum: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
      grade3_ConditionalsElse_5_authored_hint:
        remember_quantum: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
      grade3_ConditionalsElse_TeacherIDo_authored_hint:
        remember_quantum: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
      grade3_Conditionals_10 BAD_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Mencoba memperlakukan teka-teki ini seperti persegi panjang yang panjang di mana lebah perlu bergerak maju, lalu belok kiri beberapa kali untuk menyelesaikan jalan.
      grade3_Conditionals_11_authored_hint:
        2-3_Bee_Conditionals_14_a: Mengalami kesulitan mencari tahu bagaiman untuk memblok ke bawah? Mencoba memperlakukan bunga merah sama seperti bunga ungu!
        2-3_Bee_Conditionals_14_b: Jika bunga merah itu ungu, bisakah Anda mencari tahu bagaimana menggunakan loop `ulangi` tambahan untuk mengurangi kode?
        2-3_Bee_Conditionals_14_c: "Try breaking this up into two separate chunks:  \n\n![](https://images.code.org/670ac0889a8f523865ff4099b4c54844-image-1463445460440.36.42.png)\n\n1) Gather nectar 3 times\n  - Move forward 5 times\n  - Check to see if nectar, if so: get it\n  - Turn left\n  \n2) Make honey \n  - Move forward one time\n  - Make two honey"
      grade3_Conditionals_12_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Ingat: Bunga ungu hanya memiliki sekitar 0 atau 1 nektar dan mereka dapat mengubah setiap kali anda menjalankan program.'
      grade3_Conditionals_2_authored_hint:
        2-3_Bee_Conditionals_3_a: Kode bisa menjadi singkat jika anda menggunakan loop setiap kali anda berpindah tepat, loop lain untuk mengumpulkan nektar, dan orang lain membuat madu.
      grade3_Conditionals_4_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Ingat: Bunga ungu mengubah antara 0 dan 1 nektar ketika anda menjalankan program anda!'
      grade3_Conditionals_TeacherIDo_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Ingat: Bunga ungu mengubah antara 0 dan 1 nektar ketika anda menjalankan program anda!'
      grade3_Debugging_1_authored_hint:
        2-3_Bee_Debugging_1_a: Setelah anda menemukan dan memperbaiki blok yang salah, apakah anda melihat setiap pola yang dapat dibuat lebih sederhana menggunakan loop 'ulang'?
      grade3_Debugging_10_authored_hint:
        grade3_Debugging_10_a: |-
          Start by looking at just the first loop.
          
          What does it do?
          
          What is it supposed to do?
          
          What does that tell you?
        grade3_Debugging_10_b: Setelah anda memiliki loop pertama seperti yang anda inginkan, apa yang tersisa dalam kode anda?
        grade3_Debugging_10_c: |-
          Cobalah membungkus sisa-sisa kode anda. Apakah pekerjaan sekarang?
          Jika tidak, apa yang masih salah?
      grade3_Debugging_11_authored_hint:
        grade3_Debugging_11_a: |-
          Coba jalankan melalui kode menggunakan tombol "step". Apakah semuanya baik pada langkah pertama?
          Bagaimana dengan yang kedua?
          Di mana ada yang salah?
        grade3_Debugging_11_b: Sepertinya semua langkah yang benar ada di sini, anda hanya butuh lebih banyak dari mereka. Bagaimana anda bisa mengulangi `mendapatkan nektar` dan tindakan`membuat madu ' berkali-kali?
      grade3_Debugging_2_authored_hint:
        grade3_Debugging_2_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        grade3_Debugging_2_b: Apakah anda melihat pola yang bisa dibuat lebih sederhana menggunakan loop `repeat`?
      grade3_Debugging_3_authored_hint:
        grade3_Debugging_3_a: |-
          Gunakan tombol "step" untuk melihat apakah semuanya benar pada langkah pertama.
          Bagaimana dengan yang kedua?
          Di mana salahnya?
        grade3_Debugging_3_b: Apakah anda melihat pola? Coba gunakan loop bersarang untuk memecahkan teka-teki ini.
      grade3_Debugging_4_authored_hint:
        grade3_Debugging_4_a: Adakah tempat dimana lebah melakukan sesuatu yang tidak masuk akal? Apa yang terjadi bila anda mengubah blok tersebut?
        grade3_Debugging_4_b: Cobalah menyederhanakan kode menggunakan loop bersarang.
      grade3_Debugging_8_authored_hint:
        grade3_Debugging_8_a: "Coba gunakan proses debug beberapa kali berturut-turut. \nApa yang menyebabkan masalah pertama?\nSetelah masalah itu diperbaiki, apa yang salah?"
        grade3_Debugging_8_b: "Jika anda mengalami kesulitan memikirkan cara membuat pola langkah tangga, cobalah menelusuri dengan jari anda dan ucapkan perintah dengan suara keras. \nJangan lupa tunjukkan arah belokan!"
      grade3_Debugging_TeacherIDo_authored_hint:
        2-3_Bee_Debugging_4_a: Ada beberapa tempat di mana lebah melakukan sesuatu yang tidak masuk akal? Apa yang terjadi jika anda mengubah blok?
      grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Anda harus mengakhirinya dengan lima blok dalam loop anda.
      grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Jika anda tidak melihat blok untuk dimasukkan ke dalam 'ulang', mulai dengan pengkodean seiap bergerak dan mencari pola.
      grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Juka anda tidak dapat mengatakan apa yang harus pergi ke loop 'ulang', cobalah menyeret keluar satu persatu dan lihat jika anda dapat menemukan pola.
        2-3_Bee_Loops_6_b: Disana harus ada 6 blok di dalam loop 'ulang' anda ketika anda sudah selesai.
      grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Anda akan membutuhkan dua loop 'fungsi' yang berbeda, satu demi satu.
      grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: Tindakan pertama akan berubah, daripada bergerak.
        2-3_Bee_Loops_7_b: 'Jika anda tidak cukup gambar loop dari awal, cobalah pengkodean dengan cara lama, kemudian mencari pola.  '
      grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: Tindakan pertama akan berubah, daripada bergerak.
        2-3_Bee_Loops_4A_b: Bagian terakhir program dapat diselesaikan dengan menulis kode pada akhir program anda di luar loop anda.
        2-3_Bee_Loops_4A_c: Jika Anda tidak dapat melihat loop belum, cobalah pengkodean keluar panjang jalan pertama, kemudian melihat apa yang Anda dapat menggabungkan menjadi loop 'ulangi' pada akhir.
      grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Anda harus mengakhirinya dengan empat blok dalam loop anda.
      grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Anda harus memiliki 6 blok dalam loop anda.
      grade3_RunningFarm_1_authored_hint:
        grade3_RunningFarm_1_a: Anda perlu mencari jagung 5 kali, menggunakan pengulangan loop.
        grade3_RunningFarm_1_b: Pastikan menggunakan blok `if at corn` atau anda mungkin mencoba untuk memilih sesuatu yang tidak ada di sana!
      grade3_RunningFarm_10_authored_hint:
        grade3_RunningFarm_10_a: This puzzle uses almost the exact same code as the last level, except you only need to repeat 4 times.
      grade3_RunningFarm_11a_authored_hint:
        grade3_RunningFarm_11a_a: You shouldn't need the `while path ahead` loop this time.
      grade3_RunningFarm_2_authored_hint:
        grade3_RunningFarm_2_a: 'Cara terbaik untuk melakukan ini adalah dengan menyarangkan `if` pernyataan dengan menempatkan satu di bagian yang lain.  '
        grade3_RunningFarm_2_b: Untuk teka-teki ini, anda harus memiliki satu pernyataan `if / else` dan satu pernyataan" if "biasa.
      grade3_RunningFarm_3_authored_hint:
        grade3_RunningFarm_3_a: |-
          To get all of the items, try nesting `if` statements three deep.
          
          This means you should put one `if` statement inside of another, then put a third `if` statement inside the second one.
        grade3_RunningFarm_3_b: Untuk teka-teki ini, anda harus memiliki dua pernyataan `if / else` dan satu pernyataan" if "biasa.
      grade3_RunningFarm_4_authored_hint:
        grade3_RunningFarm_4_a: |-
          Tidak ada yang tahu berapa kepala selada akan tumbuh dari setiap tunas.
          Gunakan loop ' while there is lettuce ' untuk terus dipetik sampai masing-masing potongan telah dikumpulkan.
      grade3_RunningFarm_5_authored_hint:
        grade3_RunningFarm_5_a: You will need to check for each type of crop that the farmer can pick.  Try using two `if/else` statements and one  `if` block.
      grade3_RunningFarm_6_authored_hint:
        grade3_RunningFarm_6_a: Gunakan loop `while path ahead` untuk memindahkan peternak ke bawah setiap bagian dari spiral.
        grade3_RunningFarm_6_b: Anda hanya perlu memeriksa jagung selama sebagian besar panen. Pilih satu labu di akhir program anda.
      grade3_RunningFarm_7_authored_hint:
        grade3_RunningFarm_7_a: |-
          Notice that the easiest path to get to all of the crops is still a spiral.
          
          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        grade3_RunningFarm_7_b: Coba gunakan `when path ahead` untuk menjaga agar peternak memindahkan jumlah langkah yang benar.
        grade3_RunningFarm_7_c: 'Use nested `if` statements and `while there is` loops to check each space for corn and lettuce, then pick only a single pumpkin at the end. '
      grade3_bee_Conditionals_new4_authored_hint:
        grade3_bee_Conditionals_new4_a: Don't forget that you can use loops for shorter code!
      grade3_bee_conditionals_new1a_authored_hint:
        grade3_bee_conditionals_new1a_a: Be sure to use an `if` statement to check each space to see if it has a flower or nothing.
      grade3_bee_conditionals_new2a_authored_hint:
        grade3_bee_conditionals_new2a_a: Anda masih bisa memperlakukan setiap ruangan seolah ada awan di atasnya, walaupun anda bisa melihat keseluruhan jalan.
        grade3_bee_conditionals_new2a_b: 'Use an `if` statement inside your loop to check each space. '
      grade3_bee_conditionals_new3a_authored_hint:
        grade3_bee_conditionals_new3a_a: In this puzzle, you know that each square has either a flower or a honeycomb.  That means you can repeat your `if/else` conditional at each square.
      grade3_bee_conditionals_quantum1_authored_hint:
        grade3_bee_conditionals_quantum1_a: Anda perlu menggunakan blok `if` untuk memeriksa apakah ada bunga dibawah awan sebelum anda mencoba untuk mendapatkan nektar.
      grade3_bee_conditionals_quantum2_authored_hint:
        grade3_bee_conditionals_quantum2_a: Terkadang akan ada bunga di sana, terkadang tidak. Jika anda ingin kode anda berjalan dalam kedua kasus, pastikan untuk menggunakan pernyataan `if`.
      grade3_bee_conditionals_quantum3_authored_hint:
        grade3_bee_conditionals_quantum3: Pastikan untuk menggunakan pernyataan `if` untuk memeriksa sarang lebah di bawah setiap awan.
      grade3_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "**Remember:** This puzzle changes each time it's run.  \n\nYou'll want to use a conditional block (`if/else`) to solve the challenge."
      grade3_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
        grade3_bee_conditionals_quantum5_a: This puzzle is tricky, because you can't check blank squares, nectar *and* honey with a single conditional.
      grade3_maze_loops1_authored_hint:
        grade3_maze_loops1_a: Try using the "Step" button to find errors.
      grade3_maze_loops2_authored_hint:
        grade3_maze_loops2_a: |-
          Try using this path through the maze.
          
          ![](https://images.code.org/6a8b4b97a8eef813d8a827b0b7b2d36b-image-1480446509692.05.22.png)
        grade3_maze_loops2_b: Jika pola sulit untuk dilihat, cobalah semua pengkodean pertama dan lihat apakah ulang lagi dan lagi sebelum anda memasukkan loop.
        grade3_maze_loops2_c: Coba gunakan satu loop`repeat`di dalam yang lain untuk mengurangi jumlah kode yang anda butuhkan.
      grade3_maze_loops2a_authored_hint:
        grade3_maze_loops2a_a: Untuk memecahkan teka-teki ini, anda akan perlu "nest" satu loop `repeat` di dalam loop` repeat` lain.
      grade3_maze_loops3_authored_hint:
        2-3_Maze_Loops_19_a: Jika anda terjebak, coba tuliskan kode di atas kertas tanpa loop terlebih dulu dan temukan pola.
        2-3_Maze_Loops_19_b: Loop bersarang `repeat` dapat membantu mengurangi jumlah blok yang digunakan.
        2-3_Maze_Loops_19_c: Ini akan mengambil dua set loop bertasarang `repeat` untuk menyelesaikan teka-teki ini.
      grade3_maze_loops4_authored_hint:
        2-3_Maze_Loops_20_a: Carilah pola langkah tangga di labirin ini untuk menemukan di mana loop bersarang bisa digunakan.
      grade3_maze_loops5_authored_hint:
        2-3_Maze_Loops_21_a: Jika anda mengalami kesulitan untuk menemukan pola langkah tangga, cobalah menutuo jalan yang diblokir dengan jari anda.
      grade3_robotFarmer_ConditionalsIntro_10a_authored_hint: [ ]
      grade3_robotFarmer_ConditionalsIntro_11a_authored_hint: [ ]
      grade3_robotFarmer_ConditionalsIntro_5_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_5a: Cobalah menyarangkan loop `while` di dalam loop` repeat`.
      grade3_robotFarmer_ConditionalsIntro_7_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_7_a: Pastikan anda menggunakan loop `while` untuk mengetahui berapa kali mengisi setiap lubang.
        grade3_robotFarmer_ConditionalsIntro_7_b: Perhatikan bahwa petani perlu bergerak maju dan turun beberapa kali dalam pola tangga.
      grade3_robotFarmer_ConditionalsIntro_8_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: Blok `while path ahead` memungkinkan anda terus berjalan, bahkan jika anda tidak tahu berapa banyak kotak berada di jalan.
      grade3_robotFarmer_ConditionalsIntro_9_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_9_a: Anda harus menggunakan lebih dari satu loop`while`.
        grade3_robotFarmer_ConditionalsIntro_9_b: Setiap lubang ada di ujung jalan, jadi gunakan `while path ahead` sebelum menggunakan` while there's a hole`.
        grade3_robotFarmer_ConditionalsIntro_9_c: Perhatikan bahwa anda perlu mengulangi kode`while path ahead`,` while there is a hole' enam kali.
      grade4_arist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Desain ini akan berputar 10 kali lebih dari 360 derajat. ** 360/10 =? **
      grade4_arist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Anda akan melingkar bentuk ini 6 kali lebih dari 360 derajat. ** 360/6 =? **
      grade4_arist_nested_loop_triangles2_authored_hint: [ ]
      grade4_arist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: |-
          Jangan lupa untuk membuat berbelok setelah lingkaran batin Anda. 
          
          Anda akan perulangan 6 segitiga lebih dari 360 derajat
      grade4_arist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      grade4_artist_functions1_authored_hint:
        2-3_Artist_Functions_1_a: Setiap persegi memiliki 100 piksel sisi, yang berarti anda harus bergerak maju ke depan 175 piksel sebelum menggambar persegi kedua anda.
        2-3_Artist_Functions_1_b: Tidak apa-apa menggambar garis tumpang tindih untuk membuat gelas anda.
      grade4_artist_functions2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          Program anda harus:
          - Menggunakan fungsi
          - Bergerak maju 100 + 75 piksel
          - Menggunakan fungsi
      grade4_artist_functions2a_authored_hint:
        grade4_artist_functions2a_a: To get around using multiple `move forward` blocks, create a `draw triangle` function and call that multiple times.
      grade4_artist_functions3a_authored_hint:
        grade4_artist_functions2a_a: To get around using multiple `move forward` blocks, create a `draw triangle` function and call that multiple times.
      grade4_artist_functions3b_authored_hint:
        grade4_artist_functions2a_a: Untuk berkeliling menggunakan beberapa blok 'move forward`, buat fungsi `draw hexagon` dan panggil beberapa kali.
      grade4_artist_functionsChallenge0_authored_hint:
        grade4_artist_functionsChallenge0_a: |-
          Mulailah dengan membuat fungsi untuk persegi, lalu coba buat fungsi untuk garis bujur sangkar.
          Bagaimana anda menggunakan fungsi `draw a line of squares` untuk membuat gambar ini?
        grade4_artist_functionsChallenge0_b: Setelah baris pertama anda kotak, anda perlu memindahkan artis ke bawah dan kembali sebelum anda memulai baris kedua kotak anda.
        grade4_artist_functionsChallenge0_c: Anda harus memindahkan artis kembali dengan jumlah piksel yang berbeda bahkan untuk garis genap daripada yang ganjil.
      grade4_artist_functions_challenge_authored_hint:
        Course_4_SCF_1_a: Setiap segi enam memiliki 40 sisi piksel.
        Course_4_SCF_1_b: Terdapat lompatan 120 piksel diantara setiap segi enam dalam setiap garis horisontal.
        Course_4_SCF_1_c: "Sebelum anda menggambar baris kedua oktagon, anda harus memutar ke kanan 60 derajat dan melompat maju 96 pixels. \n\nSetelah anda berada di di lokasi vertikal yang benar, anda harus memutar artis anda kembali lagi dan melompat 320 piksel kebelakang."
        Course_4_SCF_1_d: "Sebelum anda menggambar baris ketiga oktagon, anda harus memutar ke kanan 60 derajat dan melompat maju 40 piksel. \n\nSetelah anda berada di lokasi vertikal yang benar, anda harus memutar artis anda kembali dan melompat 440 piksel kebelakang (120 piksel lebih jauh dari `geser bawah/depan` fungsi. "
        Course_4_SCF_1_e: |-
          **Solution:**
          
          ![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      grade4_artist_functions_challenge2_authored_hint:
        Course_4_SCF_1_a: Setiap segi enam memiliki 40 sisi piksel.
        Course_4_SCF_1_b: Terdapat lompatan 120 piksel diantara setiap segi enam dalam setiap garis horisontal.
        Course_4_SCF_1_c: "Sebelum anda menggambar baris kedua oktagon, anda harus memutar ke kanan 60 derajat dan melompat maju 96 pixels. \n\nSetelah anda berada di di lokasi vertikal yang benar, anda harus memutar artis anda kembali lagi dan melompat 320 piksel kebelakang."
        Course_4_SCF_1_d: "Sebelum anda menggambar baris ketiga oktagon, anda harus memutar ke kanan 60 derajat dan melompat maju 40 piksel. \n\nSetelah anda berada di lokasi vertikal yang benar, anda harus memutar artis anda kembali dan melompat 440 piksel kebelakang (120 piksel lebih jauh dari `geser bawah/depan` fungsi. "
        Course_4_SCF_1_e: |-
          **Solution:**
          
          ![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      grade4_artist_functions_stars0_authored_hint:
        grade4_artist_functions_stars0_a: |-
          Untuk mengatasi teka-teki ini, anda hanya perlu menambahkan satu loop yang mengulangi kode starter 8 kali.
          Jika anda tidak ingat kode starternya, klik "start over" di sudut kanan atas ruang kerja.
      grade4_artist_functions_stars1_authored_hint:
        grade4_artist_functions_stars1_a: Mencoba mengunakan fungsi!
      grade4_artist_functions_stars2_authored_hint:
        grade4_artist_functions_stars2_a: Jangan menyerah! Ingat apa yang telah anda pelajari.
        grade4_artist_functions_stars2_b: Fungsi memudahkan untuk memanggil kode yang tersimpan kapan saja, tidak hanya dari dalam satu loop!
      grade4_artist_functions_stars3_authored_hint:
        hint1: Don't give up!
      grade4_artist_functions_windows0_authored_hint:
        grade4_artist_functions_windows0_a: Fokus hanya pada membuat satu jendela untuk sekarang. Kita akan membuat fungsi untuk itu di teka-teki berikutnya.
        grade4_artist_functions_windows0_b: Coba gunakan loop bersarang, di mana loop dalam membuat persegi dan loop luar berputar persegi empat kali.
      grade4_artist_functions_windows2_authored_hint:
        grade4_artist_functions_windows2_a: Coba buat fungsi anda terlebih dahulu lalu tambahkan di jendela satu per satu.
        grade4_artist_functions_windows2_b: Anda tidak perlu menambahkan loop pengulangan ekstra. hanya lompat seni 100 piksel ke depan untuk setiap jendela atas, dan 150 piksel turun untuk mendapatkan jendela bawah.
      grade4_artist_nestedLoops_challenge2_authored_hint:
        Course_4_Artist_11_a: 'Setengah segi enam memiliki **panjang 30** dan belok kanan **60 derajat**.  '
        Course_4_Artist_11_b: 'Segitiga 2/3 memiliki **panjang 80** dan belok kanan **120 derajat**. '
      grade4_artist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Desain ini akan berputar 10 kali lebih dari 360 derajat. ** 360/10 =? **
      grade4_artist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Anda akan melingkar bentuk ini 6 kali lebih dari 360 derajat. ** 360/6 =? **
      grade4_artist_nested_loop_triangles2_authored_hint: [ ]
      grade4_artist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: |-
          Don't forget to make a turn after your inner loop.
          
          You'll be looping 6 triangles over 360 degrees.
          
          **6 x ? = 360**
      grade4_artist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      grade4_bee_conditionals_new1a_authored_hint:
        grade4_bee_conditionals_new1a_a: An `if` block will help you out in this puzzle.
      grade4_bee_conditionals_new2_authored_hint:
        grade4_bee_conditionals_new2_a: 'The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side. '
        grade4_bee_conditionals_new2_b: You can check every square for a flower using the `if` block, even if you already know there's not one there.
      grade4_bee_conditionals_new3b_authored_hint:
        grade4_bee_conditionals_new3b_a: An `if/else` statement could really help you out here.
      grade4_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
      grade4_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "**Ingat.**Teka-teki ini berubah setiap kali di jalankan.  Anda akan ingin menggunakan blok bersyarat ('jika' atau 'jika/lain') untuk memecahkan tantangan."
      grade4_bee_functions1_authored_hint:
        grade4_bee_functions1_a: There is more than one right answer to this puzzle.
      grade4_bee_functions10_authored_hint:
        grade4_bee_functions10_a: You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.
      grade4_bee_functions2_authored_hint:
        grade4_bee_functions2_a: The function has been written for you, but you will need to call it at each flower.
      grade4_bee_functions3_authored_hint:
        grade4_bee_functions3_a: 'Your function for this puzzle only needs to collect nectar, it shouldn''t have any `move forward` or `turn` blocks in it. '
      grade4_bee_functions4_authored_hint:
        grade4_bee_functions4_a: Your function will travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.
      grade4_bee_functions6_authored_hint:
        grade4_bee_functions6_a: Edit the function so that it solves the puzzle without having to change the main program.
        grade4_bee_functions6_b: "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- turn around\n- move back to the main path\n- turn back to the direction that the bee started from"
      grade4_bee_functions7_authored_hint:
        2-3_Bee_Functions_8_a: "Jika teka-teki tampak menantang, cobalah bangun judul fungsi anda suatu waktu.  tambahkan beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai disana!![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      grade4_bee_functions8_authored_hint:
        2-3_Bee_Functions_8_a: "Jika teka-teki terlihat menantang, cobalah bangun judul fungsi anda pada suatu waktu.  Tambah beberapa blok, kemudian mencobanya. Tambahkan lebih banyak, kemudian coba lagi. Segera, anda akan sampai di sana!"
        2-3_Bee_Functions_8_b: |-
          Ingat untuk membangun kode dalam blok fungsi hijau.![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        2-3_Bee_Functions_8_c: This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back.
      grade4_bee_functions9_authored_hint:
        grade4_bee_functions9_a: Your function will only need to collect nectar... but this time, you will need to use a `while` loop instead of a `repeat` loop.
        grade4_bee_functions9_b: Use `while nectar > 0` to make sure you get all of the nectar.
      grade4_bee_nestedLoops1_authored_hint:
        grade4_bee_nestedLoops1_a: Jika anda tidak mengerti bagaimana menggunakan loop bersarang di sini, cobalah menulis instruksi langkah demi langkah di selembar kertas. Lingkari pola yang anda lihat.
      grade4_bee_nestedLoops2_authored_hint:
        grade4_bee_nestedLoops2_a: You will need to repeat `get nectar` inside of another `repeat` that also has the `move forward` block inside of it.
        grade4_bee_nestedLoops2_b: You will need to use all three of the available `repeat` blocks to solve this puzzle.
        grade4_bee_nestedLoops2_c: |-
          Nest your blocks three deep, like this:
          
          - repeat 3
          - repeat 3
          - move forward
          - repeat 12
          - get nectar
          - turn right
      grade4_bee_nestedLoops2a_authored_hint:
        grade4_bee_nestedLoops2a_a: Try using nested `repeat` loops to solve this puzzle.
      grade4_bee_nestedLoops4_authored_hint:
        grade4_bee_nestedLoops4_a: Cobalah buat kode baris demi baris dan lihat apakah anda bisa melihat tempat di mana pengulangan akan membuat kode menjadi lebih pendek!
        grade4_bee_nestedLoops4_b: |-
          You will need a nested loop to move forward and get nectar, but only a single loop to collect honey at the end.
          
          Altogether, you should be using 3 loops.
      grade4_bee_nestedLoops5_authored_hint:
        grade4_bee_nestedLoops5_a: You will need 4 repeat blocks!
      grade4_review_artist1_authored_hint:
        2-3_Artist_1_new_a: Jika Anda menggunakan blok agar saya 'bergerak maju dengan 100 pixel', saya akan menarik garis secara otomatis.
        2-3_Artist_1_new_b: Kesulitan mengubah sudut? Gunakan blok 'belok kanan 90 derajat'.
      grade4_review_artist2_authored_hint:
        2-3_Artist_6_a: 'Untuk membuat sudut kecil tersebut, Anda harus memutar *lebih jauh* dari yang kamu buat sebelumnya dengan bujur sangkar.   '
        2-3_Artist_6_b: Karena aku sudah menghadap ke kanan, akan lebih mudah memulai dengan berjalan maju, lalu putar ke arah kiri untuk membuat segitiga.
        2-3_Artist_6_c: Tiap sisi dari segitiga sama panjang dengan setiap sisi dari bujur sangkar...100 piksel!
      grade4_review_bee1_authored_hint:
        2-3_Bee_Loops_3B_a: Anda akan membutuhkan dua loop 'fungsi' yang berbeda, satu demi satu.
      grade4_review_bee2_authored_hint:
        2-3_Bee_Loops_3_a: Anda harus memiliki 6 blok dalam loop anda.
      grade4_review_bee3_authored_hint:
        2-3_Bee_Loops_4_a: Anda harus mengakhirinya dengan lima blok dalam loop anda.
      grade5_artist_binary10_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Kode ini menggunakan dua 'untuk loop'. Seseorang menghitung dari 1 untuk 8, hitungan lain dari 8-1.
        Course_4_Artist_Binary_Free_Play_2b_b: Masing-masing 'untuk loop' memiliki tiga mengulangi. Pertama menarik set paling kiri dari 1s, kedua menarik 0s di tengah-tengah dan ketiga menarik 1s di sebelah kanan.
        Course_4_Artist_Binary_Free_Play_2b_c: Dalam mengulangi setiap Anda perlu 'counter' 1s dan '16-(2 x counter)' untuk 0s.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Solution:**
          ![solution](https://images.code.org/866a92e042a546de3afcf462a8b5c695-image-1444438735003.58.28.png)
      grade5_artist_for_loops1_authored_hint:
        grade5_artist_for_loops1_a: |-
          If you use this `for` loop, it will run just like a `repeat 3 times` loop.
          
          ![](https://images.code.org/585d2e24f3021ac2561aec6e96dde430-image-1475906135993.54.11.png)
      grade5_artist_for_loops10_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: Poligon terbesar memiliki sisi 19.
        Course_4_Artist_For_Loops_Challenge_b: Setiap poligon tidak lengkap, dengan satu sisi kurang dari itu seharusnya.
      grade5_artist_for_loops1b_authored_hint:
        grade5_artist_for_loops1b_a: |-
          Can you draw something like this:
          
          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      grade5_artist_for_loops2_authored_hint:
        grade5_artist_for_loops2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.
          
          ![](https://images.code.org/5e9465321a0b7a4d791848a79f3e6715-image-1475908305872.31.26.png)
      grade5_artist_for_loops3_authored_hint:
        Course_4_Artist_For_Loops_3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.
          
          ![](https://images.code.org/15e87fc7fe408cbf1b63e0e8e69b7ffe-image-1475908502078.31.26.png)
      grade5_artist_for_loops4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "** Apakah nomor terkecil yang Anda perlukan? \nBerapakah jumlah terbesar? \nSeberapa besar adalah peningkatan setiap kali? ** \n\nmereka adalah pertanyaan-pertanyaan Anda perlu tanyakan untuk mengisi kekosongan loop 'untuk'."
      grade5_artist_for_loops5_authored_hint:
        grade5_artist_for_loops5_a: You don't need the traditional repeat loop when making this spiral!
      grade5_artist_for_loops7_authored_hint:
        grade5_artist_for_loops7_a: The pen is thinner in this puzzle. You will need to set it to `1` before you start.
        grade5_artist_for_loops7_b: Notice that this spiral turns right instead of left!
      grade5_artist_for_loops7a_authored_hint: [ ]
      grade5_artist_for_loops7b_authored_hint: [ ]
      grade5_artist_for_loops8_authored_hint:
        Course_4_Artist_For_Loops_11_a: "Sudut gilirannya akan berubah dengan setiap bentuk! \n\nGunakan blok matematika untuk memasukkan 360 dibagi dengan jumlah sisi bentuk harus mendapatkan sudut kanan. "
      grade5_artist_for_loops9_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 dibagi dengan jumlah sisi bentuk telah adalah jumlah derajat yang Anda akan perlu untuk mengubah. '
        Course_4_Artist_For_Loops_11a_b: 'Setiap kali, Anda akan perlu untuk bergerak maju dengan 10 kali panjang dari jumlah sisi. '
      grade5_artist_for_loopsfreeplay11_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: Dasar dari kode ini adalah sama dengan solusi yang sebelumnya tantangan teka-teki... dengan beberapa perubahan.
        Course_4_Artist_For_Loops_inspire_b: Coba 'untuk' loop yang berlangsung dari 3-10 dengan kenaikan dari 1.
        Course_4_Artist_For_Loops_inspire_c: Ada dua iterasi dari lingkaran ulangi yang sama di dalam loop 'untuk', tetapi ulangi kedua berubah arah yang berlawanan.
        Course_4_Artist_For_Loops_inspire_d: "**Solution:**  ![Solution](https://images.code.org/d619892fc17ff491c201d86bb917e523-image-1441005190828.12.30.png) "
      grade5_artist_for_loopsfreeplay12_authored_hint:
        grade5_artist_for_loopsfreeplay12_a: The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.
        grade5_artist_for_loopsfreeplay12_b: The image in the drawing uses a turn of 61 degrees.
        grade5_artist_for_loopsfreeplay12_c: |-
          Want to know how the sample image was done?
          
          ![](https://images.code.org/fdc5d6c15b357ba9763ac9ea914967a9-image-1475911612774.23.51.png)
      grade5_artist_functionparameters10_authored_hint:
        brush_width: Setiap item akan perlu loop sendiri 'sementara'. Kami menetapkan sikat lebar 1, kemudian warna biru sebelum kita melakukan apa pun.
        double_loop: Mencoba menempatkan 'untuk loop' dalam 'ulangi' loop.
        specifics: "'Untuk loop' berjalan dari tiga sampai tujuh belas untuk masing-masing dari enam \"kelopak\" sebelum pindah ke membuat berikutnya, menggambar bentuk dengan hanya angka ganjil dari sisi. \n     \nBlok 'diatur alpha' menggunakan Divisi memudar warna seperti counter semakin tinggi."
        after: Ketika Anda selesai dengan "petal", pastikan untuk 'bergerak maju' 20 piksel sebelum Anda membuat 60 derajat rotasi.
        solution: |-
          **Solution**
          
          ![](https://images.code.org/7e9f4be39d45726d537fe8e6e9147986-image-1456445254361.png)
      grade5_artist_functionparameters8_authored_hint:
        NEW_Course_4_Artist_Params_13_a: The length of sides for each shape is 7 times the number of sides it has.
      grade5_artist_functionparameters9_authored_hint:
        NEW_Course_4_Artist_Params_14_a: It's okay to run the program a few times to figure out how the function works with different parameters.
        grade5_artist_functionparameters9_b: You don't need to add any `move` or `turn` blocks to finish this code.
      grade5_artist_functionparameters9a_authored_hint:
        grade5_artist_functionparameters9a_a: 'Did the code get so scrambled up that it''s no longer recognizable?  Try clicking the "Start over" button in the upper righthand corner. '
        grade5_artist_functionparameters9a_b: Your new `min` variable should go in the first slot in your `for` loop, inside the function.
      grade5_artist_functionparameters9b_authored_hint:
        grade5_artist_functionparameters9b_a: If your function is correct, you shouldn't need to change it for this puzzle.
        grade5_artist_functionparameters9b_b: The only thing you should need to do between function calls is change the color of the line.
      grade5_artist_functionparameters_6_authored_hint:
        grade5_artist_functionparameters_6_a: Use a `for` loop to get the code as smooth as you can.
        grade5_artist_functionparameters_6_b: Remember to **add** a parameter.  Don't remove the one that is already there!
      grade5_artist_parameters_squares1a_authored_hint:
        grade5_artist_parameters_squares1a_a: Remember, you need to turn 90 degrees to draw a square.
        grade5_artist_parameters_squares1a_b: You only need to repeat as many times as the number of sides in a square.
      grade5_artist_parameters_squares2_authored_hint:
        grade5_artist_parameters_squares2_a: This gets easier if you put it all in a `for` loop.
        grade5_artist_parameters_squares2_b: |-
          Be sure to turn 90 degrees between each square!
          
          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      grade5_artist_parameters_squares2a_authored_hint:
        grade5_artist_parameters_squares2a_a: You need to click the "edit" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!
        grade5_artist_parameters_squares2a_b: When calling your function, use a `for loop` for the best possible code!
      grade5_artist_parameters_stars1_authored_hint:
        hint1: Don't give up!
      grade5_artist_variables_freeplay10_authored_hint:
        Course_4_Artist_Vars_8_a: Jika Anda membagi panjang awal dengan jumlah sisi, panjang masing-masing sisi akan menjadi lebih pendek karena jumlah sisi semakin tinggi.
      grade5_artist_variables_freeplay15_authored_hint:
        Course_4_Artist_Inspire_a: Setelah anda menyelesaikan satu persegi, cobalah melompat baju setengah panjangnya sebelum berbalik dan membuat lain.
        Course_4_Artist_Inspire_b: Setiap persegi dan lompatan diulang (menggunakan peralihan belok kiri) untuk membuat sebuah unit penuh seperti pinwheel.
        Course_4_Artist_Inspire_c: Setiap pinwheel juga diulang empat kali, dengan belok kekanan dari **360/sisi**.
        Course_4_Artist_Inspire_d: |-
          **Solution:**
          ![Blocks for solution](https://images.code.org/1865aaf1b4a8ba84a5e8a7408401092d-image-1440060930335.43.39.png)
      grade5_artist_variables_octagons13_authored_hint:
        Course_4_Artist_Vars_13_a: Anda memerlukan dua ulangi loop (satu di dalam yang lain) 'sisi' kedua berulang kali.
        Course_4_Artist_Vars_13_b: "Ulangi loop dalam menarik sebuah segi delapan (memutar ke kiri). \n\nSetelah itu, Anda perlu untuk bergerak maju dan belok kanan hanya dalam lingkaran luar."
        Course_4_Artist_Vars_13_c: Untuk menyesuaikan bentuk untuk menginap dengan ukuran yang sama dengan jumlah sisi mengubah, gunakan blok matematika untuk Bagilah panjang dalam pixel dengan jumlah sisi.
      grade5_artist_variables_square7_authored_hint:
        Course_4_Artist_Vars_6_a: Menggambar sebuah poligon beraturan, mengubah ** 360 / sisi ** setiap waktu.
      grade5_artist_variables_triangles1_authored_hint:
        grade5_artist_variables_triangles1_a: To make an internal angle of 60 degrees in this triangle, remember to turn the artist 120 degrees.
        grade5_artist_variables_triangles1_b: Use the `repeat` loop to make your code shorter.
        grade5_artist_variables_triangles1_c: Inside your loop, you will want to move forward 50 pixels, then turn left 120 degrees.
      grade5_artist_variables_triangles1_2018_authored_hint:
        grade5_artist_variables_triangles1_a: To make an internal angle of 60 degrees in this triangle, remember to turn the artist 120 degrees.
        grade5_artist_variables_triangles1_b: Use the `repeat` loop to make your code shorter.
        grade5_artist_variables_triangles1_c: Inside your loop, you will want to move forward 50 pixels, then turn left 120 degrees.
      grade5_bee_for_loops10_authored_hint:
        grade5_bee_for_loops10_a: "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
      grade5_bee_for_loops11_authored_hint:
        NEW_Course_4_Bee_For_Loops_10a_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        NEW_Course_4_Bee_For_Loops_10a_b: You'll need to have 2 repeats, one will use a math block.
      grade5_bee_for_loops3_authored_hint:
        grade5_bee_for_loops3_a: 'Use the `counter` variable inside the `repeat` loop where nectar is gathered to solve this puzzle. '
        grade5_bee_for_loops3_b: Your `for` loop will need to count from 1 to 5 with an increment of 1.
      grade5_bee_for_loops4_authored_hint:
        grade5_bee_for_loops4_a: Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.
        grade5_bee_for_loops4_b: Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!
      grade5_bee_for_loops5_authored_hint:
        grade5_bee_for_loops5_a: This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops.
      grade5_bee_for_loops6_authored_hint:
        grade5_bee_for_loops6_a: Don't forget to use a `counter` variable inside your `repeat` loop.
      grade5_bee_for_loops7_authored_hint:
        grade5_bee_for_loops7_a: Your `for` loop will need to count from 1 to 7 by 2.
      grade5_bee_for_loops8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?"
      grade5_bee_for_loops9_authored_hint:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        NEW_Course_4_Bee_For_Loops_7_b: 'Remember: If your loop is counting up, the increment is added to your `counter` variable each time through.'
      grade5_bee_parameters_new1_authored_hint:
        grade5_bee_parameters_new1_a: Use `if` statements to make sure you're only getting nectar from a flower.
      grade5_bee_parameters_new2_authored_hint:
        grade5_bee_parameters_new2_a: "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        grade5_bee_parameters_new2_b: Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built.
      grade5_bee_parameters_new3_authored_hint:
        grade5_bee_parameters_new3_a: Your function will run no matter which direction you're facing.
      grade5_bee_parameters_new4_authored_hint:
        grade5_bee_parameters_new4_a: You will need to add a parameter and use the resulting variable in your loop.
      grade5_bee_parameters_new5_authored_hint:
        grade5_bee_parameters_new5_a: Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.
      grade5_bee_parameters_new6_authored_hint:
        grade5_bee_parameters_new6_a: Which block automatically increments a variable that you could use as a parameter?
      grade5_bee_parameters_new7_authored_hint:
        grade5_bee_parameters_new7_a: You don't need a second parameter for this function, only a second `if` statement.
      grade5_bee_parameters_new8a_authored_hint:
        grade5_bee_parameters_new8a_a: This spiral can be simplified with a `for` loop.
      grade5_bee_parameters_new9a_authored_hint:
        grade5_bee_parameters_new9a_a: A `for` loop can help you with this stair step pattern, too!
        grade5_bee_parameters_new9a_b: For each stair, you'll need to call the function once, turn right, call the function again, then turn left.
      grade5_playlab_variables2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Pastikan untuk mengatur nomer untuk `dog_speed`untuk sesuatu yang besar dari `cat_speed`.
      gradeK_sequence_4_authored_hint:
        gradeK_sequence_4_a: Cobalah menuliskan langkah-langkah di atas kertas untuk menemukan solusinya!
      gradek_adventurer_loops3_authored_hint:
        gradek_adventurer_loops3_a: To change how far the adventurer goes, change the number of times that the loop runs.
        gradek_adventurer_loops3_b: Don't forget that the adventurer needs to walk down and collect gold after she finishes the `repeat` loop!
      gradek_adventurer_loops4_authored_hint:
        gradek_adventurer_loops4_a: Jika anda tidak mengetahui jawabannya segera, coba gunakan selembar kertas untuk mengetahui panah apa yang akan anda butuhkan dan cari sebuah pola.
      gradek_adventurer_loops4a_authored_hint:
        gradek_adventurer_loops4a_a: Can't figure out what's wrong? Try running the code to see what happens.
      gradek_adventurer_loops5_authored_hint:
        gradek_adventurer_loops5_a: Jika Anda tidak tahu apa yang akan terjadi selanjutnya, cobalah menjalankan kode untuk melihat di mana Laurel berakhir.
      gradek_adventurer_loops6_authored_hint:
        gradek_adventurer_loops6_a: If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper and look for a pattern.
      gradek_adventurer_loops7_challenge_authored_hint:
        gradek_adventurer_loops7_challenge_a: Does the code feel really long?  Try putting two of your `repeat` loops inside of another loop to make it much shorter!
      gradek_adventurer_loops8_authored_hint:
        gradek_adventurer_loops8_a: If you can't figure out where to put the loops, try writing the code out step-by-step and look for a pattern.
      gradek_adventurer_loops9_authored_hint:
        gradek_adventurer_loops9_a: If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.
      gradek_artist_loops1_authored_hint:
        gradek_artist_loops1_a: Can't figure out how to draw a line?  Start attaching blocks to the `when run` block to see what happens.
      gradek_artist_loops2_authored_hint:
        gradek_artist_loops2_a: Is something not quite right?  Use the "Step" button to see where things go wrong.
      gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: Jika Anda ingin lingkaran untuk mengulang lebih dari 4 kali, Anda dapat mengubah angka di atas blok.
      gradek_artist_loops4_authored_hint:
        artistLoopsK3_a: Coba gunakan apa yang telah Anda pelajari tentang blok berulang untuk menyelesaikan teka-teki ini!
      gradek_artist_loops5_authored_hint:
        gradek_artist_loops5_a: Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.
      gradek_artist_loops6_authored_hint:
        gradek_artist_loops6_a: Tidak tahu di mana harus meletakkan loop? Coba tulis kode langkah demi langkah dan cari sebuah pola.
      gradek_artist_loops7_authored_hint:
        gradek_artist_loops7_a: Cobalah menjalankan kode untuk melihat apa yang telah ditulis untuk anda.
        gradek_artist_loops7_b: Bagaimana anda akan mengulang kode loop yang telah diberikan kepada anda?
        gradek_artist_loops7_c: "What does the code do?  \nWhat is it supposed to do?  \nWhat does that tell you?"
      gradek_artist_loops8_authored_hint:
        gradek_artist_loops8_a: 'You don''t have to delete everything!  Some of the code is good. Use it to build the rest of the stairs. '
      gradek_artist_loops9_authored_hint:
        artistLoopsKA_a: Gunakan blok loncatan untuk maju ke depan tanpa menggambar sebuah garis.
      gradek_artist_loopsA_authored_hint:
        artistLoopsKB_a: There should be 2 blocks inside of your loop to solve this puzzle.
      gradek_artist_loopsFP_authored_hint: [ ]
      gradek_playlab_events1a_authored_hint:
        gradek_playlab_events1a_a: Attach the `move up` block to the `when click` event so that the cat moves up when the "up" button is pressed.
      gradek_playlab_events1c_authored_hint:
        gradek_playlab_events1c_a: "Here is the block you should connect to the `when run` block: \n\n![](https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
      gradek_playlab_events2c_authored_hint:
        gradek_playlab_events2c_a: drag this block out ![](https://images.code.org/b3d6215901969328333d6393f8101c5b-image-1478142333199.png) and connect it to ![](https://images.code.org/4f2130b2a3053695414a02c3d39ef864-image-1478143461271.png)
      gradek_playlab_events3c_authored_hint:
        gradek_playlab_events3c_a: |-
          Here is the event block that you will need to get Jorge to move right:
          
          ![](https://images.code.org/cfc4b696b1ad5762ff40c1c8a17a194d-image-1478141370249.png)
        gradek_playlab_events3c_b: |-
          Here is the block you should connect to the `when right` event:
          
          ![](https://images.code.org/e5c559cc1deef643c8b997d17ecb78e3-image-1478141726783.png)
      gradek_playlab_events4c_authored_hint:
        gradek_playlab_events4c_a: "Here are the event blocks that you will need to use to move Jorge up and down:\n\n![](https://images.code.org/cf9a6992f7b4619dfb592fb6905effbb-image-1478140906017.png)\nand \n![](https://images.code.org/bb2a117cef485e79119a63e5d027968e-image-1478140979742.png)"
      gradek_playlab_events5c_authored_hint:
        gradek_playlab_events5c_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:
          
          ![](https://images.code.org/6e3a654378643fd0590307ec3a0e429c-image-1478140058859.png)
        gradek_playlab_events5c_b: |-
          Here is the block you would use to change the background:
          
          ![](https://images.code.org/3f6d7a642b37c3abffe7b0de062ea076-image-1478140261440.png)
        gradek_playlab_events5c_c: |-
          Here is the block you would use to play a random sound:
          
          ![](https://images.code.org/81a8ef4f64023039438199fef67bb56b-image-1478140125332.png)
      gradek_playlab_eventsA_authored_hint:
        gradek_playlab_eventsA_a: |-
          If this seems like too much to do, try breaking it down into steps:
          
          1)  Have the actor change to a random size on click.
          2) Play a random sound when you click the actor.
          
          Now, make sure both of those actions are attached underneath the same event!
      harvester_Kahoot_authored_hint:
        courseE_farmer_functions1a_a: Think through the `if/else` statements step by step. What should you do if you are standing at a corn plant?
        courseE_farmer_functions1a_b: Use a `repeat until` block to get to the pumpkin!
      harvey_snowflake_artist1_authored_hint: [ ]
      harvey_snowflake_artist2_authored_hint: [ ]
      harvey_tictactoe_authored_hint:
        harvey_tictactoe: Anda bisa menggunakan blok `melompat` untuk pindah ke ruangan lain.
      iceAgeLoopsforVideo_authored_hint: [ ]
      iceage_click_hello_authored_hint:
        iceage_click_hello_a: Add one or more `actor 1 say` blocks to the `when clicked` event to complete this puzzle.
      iceage_click_hello_2018_authored_hint:
        iceage_click_hello_a: Add one or more `actor 1 say` blocks to the `when clicked` event to complete this puzzle.
      iceage_free_play_authored_hint:
        iceage_free_play_a: 'Can you make Sid and Manny have an Ice Crystal fight?  '
        iceage_free_play_b: Make Granny chase Diego.  End the game as a win if she catches him.
        iceage_free_play_c: Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.
      iceage_free_play_2018_authored_hint:
        iceage_free_play_a: 'Can you make Sid and Manny have an Ice Crystal fight?  '
        iceage_free_play_b: Make Granny chase Diego.  End the game as a win if she catches him.
        iceage_free_play_c: Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.
      iceage_free_playcourseF_IceAge_11_authored_hint:
        iceage_free_play_a: 'Can you make Sid and Manny have an Ice Crystal fight?  '
        iceage_free_play_b: Make Granny chase Diego.  End the game as a win if she catches him.
        iceage_free_play_c: Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.
      iceage_hello1_authored_hint:
        iceage_hello1_a: Anda hanya harus untuk menambahkan satu blok untuk memecahkan teka-teki ini. Menyeret blok `mengatakan` keluar dari toolbar dan menghubungkan itu ke `ketika menjalankan` event blok yang sudah ada di dalam ruang pekerjaan. Selanjutnya, ketik "Halo!" ke dalam.
      iceage_hello1_2018_authored_hint:
        iceage_hello1_a: Anda hanya harus untuk menambahkan satu blok untuk memecahkan teka-teki ini. Menyeret blok `mengatakan` keluar dari toolbar dan menghubungkan itu ke `ketika menjalankan` event blok yang sudah ada di dalam ruang pekerjaan. Selanjutnya, ketik "Halo!" ke dalam.
      iceage_hello2_authored_hint:
        iceage_hello2_a: 'To solve this puzzle, you will need to have Sid say something using the `actor 1 say` block.  You will also need to have Manny say something with the `actor 2 say` block. '
      iceage_hello2_2018_authored_hint:
        iceage_hello2_a: 'To solve this puzzle, you will need to have Sid say something using the `actor 1 say` block.  You will also need to have Manny say something with the `actor 2 say` block. '
      iceage_move_events_authored_hint:
        iceage_move_events_a: 'Each of the `when ___ arrow` events will need to have a different `move actor 1` command connected to it to solve this puzzle. '
      iceage_move_events_2018_authored_hint:
        iceage_move_events_a: 'Each of the `when ___ arrow` events will need to have a different `move actor 1` command connected to it to solve this puzzle. '
      iceage_move_to_actor_authored_hint:
        iceage_move_to_actor_a: For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.
        iceage_move_to_actor_b: Connect the `play ___ sound` block to the `when actor 1 touches actor 2` event to finish this challenge.
      iceage_move_to_actor_2018_authored_hint:
        iceage_move_to_actor_a: For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.
        iceage_move_to_actor_b: Connect the `play ___ sound` block to the `when actor 1 touches actor 2` event to finish this challenge.
      iceage_move_to_flag_authored_hint:
        iceage_hello3_a: Use the `move actor 1 right by 200 pixels` block to solve this puzzle.
      iceage_move_to_flag_2018_authored_hint:
        iceage_hello3_a: Use the `move actor 1 right by 200 pixels` block to solve this puzzle.
      iceage_repeat_authored_hint:
        iceage_repeat_a: Use both the `move actor 1 left` and `move actor 1 right` blocks to solve this puzzle.
      iceage_repeat_2018_authored_hint:
        iceage_repeat_a: Use both the `move actor 1 left` and `move actor 1 right` blocks to solve this puzzle.
      iceage_sound_and_points_authored_hint:
        iceage_sound_and_points_a: You will need to add two blocks beneath the `when actor 1 touches actor 2` event.
        iceage_sound_and_points_b: You will need both the `score a point` block and the 'play ____ sound` block to pass this level.
      iceage_sound_and_points_2018_authored_hint:
        iceage_sound_and_points_a: You will need to add two blocks beneath the `when actor 1 touches actor 2` event.
        iceage_sound_and_points_b: You will need both the `score a point` block and the 'play ____ sound` block to pass this level.
      iceage_throw_hearts_authored_hint:
        iceage_throw_hearts_a: When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!
        iceage_throw_hearts_b: To get granny to be happy when she receives a heart, you will need to connect the `set actor 2 mood to happy` block beneath the `when actor 2 touches projectile` event.
      iceage_throw_hearts_2018_authored_hint:
        iceage_throw_hearts_a: When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!
        iceage_throw_hearts_b: To get granny to be happy when she receives a heart, you will need to connect the `set actor 2 mood to happy` block beneath the `when actor 2 touches projectile` event.
      iceage_warn_embed_ice_age_authored_hint: [ ]
      iceage_warn_ice_age_authored_hint:
        iceage_warn_ice_age_a: 'You should only have to add two blocks to get this puzzle where it needs to be. '
        iceage_warn_ice_age_b: Add both new blocks beneath the `when run` event to have them happen immediately after the program starts.
      iceage_warn_ice_age_2018_authored_hint:
        iceage_warn_ice_age_a: 'You should only have to add two blocks to get this puzzle where it needs to be. '
        iceage_warn_ice_age_b: Add both new blocks beneath the `when run` event to have them happen immediately after the program starts.
      k1stickerfreeplay_authored_hint: [ ]
      level 'grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Anda harus mengakhirinya dengan lima blok dalam loop anda.
      level 'grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Jika anda tidak melihat blok untuk dimasukkan ke dalam 'ulang', mulai dengan pengkodean seiap bergerak dan mencari pola.
      level 'grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Juka anda tidak dapat mengatakan apa yang harus pergi ke loop 'ulang', cobalah menyeret keluar satu persatu dan lihat jika anda dapat menemukan pola.
        2-3_Bee_Loops_6_b: Disana harus ada 6 blok di dalam loop 'ulang' anda ketika anda sudah selesai.
      level 'grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Anda akan membutuhkan dua loop 'fungsi' yang berbeda, satu demi satu.
      level 'grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: Tindakan pertama akan berubah, daripada bergerak.
        2-3_Bee_Loops_7_b: 'Jika anda tidak cukup gambar loop dari awal, cobalah pengkodean dengan cara lama, kemudian mencari pola.  '
      level 'grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: Tindakan pertama akan berubah, daripada bergerak.
        2-3_Bee_Loops_4A_b: Bagian terakhir program dapat diselesaikan dengan menulis kode pada akhir program anda di luar loop anda.
        2-3_Bee_Loops_4A_c: Jika Anda tidak dapat melihat loop belum, cobalah pengkodean keluar panjang jalan pertama, kemudian melihat apa yang Anda dapat menggabungkan menjadi loop 'ulangi' pada akhir.
      level 'grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Anda harus mengakhirinya dengan empat blok dalam loop anda.
      level 'grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Anda harus memiliki 6 blok dalam loop anda.
      playLabDebugVideo1_authored_hint:
        courseA_playLab_events2_a: "Here is the block you should connect to the `when run` block: \n\n![](https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
      sample3_authored_hint:
        sample3_a: |-
          Try writing the code once and looping it seven times:
          
          ![](https://images.code.org/2a116e75e31ee3a8a8683349c9460286-image-1464307689813.gif)
      sample5_authored_hint:
        sample5_a: Did you know that you can put as many blocks inside of a repeat loop as you want to?
        sample5_b: |-
          The bee is looping these actions over and over again:
          - move forward
          - make honey
          - turn left
          - move forward
          - turn right
      sample6_authored_hint:
        sample6_a: Did you know that you can use more than one repeat loop in a puzzle?
        sample6_b: Sometimes repeat loops have lots of blocks inside, and sometimes they might only have one!
      sample7assessment_authored_hint: [ ]
