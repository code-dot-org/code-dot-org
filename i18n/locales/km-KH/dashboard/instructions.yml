km:
  data:
    instructions:
      2-3 Artist 1 new_instruction: "សួស្ដី, ខ្ញុំ​គឺជា​វិចិត្រករ។ អ្នក​អាច​សរសេរ​កូដ​បញ្ជា​ឲ្យ​ខ្ញុំ​គូរ​អ្វី​ក៏​បាន​ដែរ។\nសូម​ប្រើ​ប្លុក​ពីរបី ដើម្បី​បញ្ជា​ឲ្យ​ខ្ញុំ​គូរ​ពី​លើ​បន្ទាត់​ពណ៌​ប្រផេះ\nដូច​ក្នុង​រូប។ (បន្ទាត់​នីមួយៗ​មាន​ប្រវែង 100 ភីកសែល)"
      2-3 Artist 11_instruction: "Give the stop sign a border by making an octagon\nwith 100 pixels sides. \\r\n\\r\n"
      2-3 Artist 12_instruction: |-
        Create a circle to finish the eyeball!\\r
        \\r
        If
        the artist turns 1 degree with each loop, how many times do you need to repeat
        the code to draw a circle? 180? 360? 500?
      2-3 Artist 3new_instruction: "The red hat is 100 pixels tall. Finish drawing\na black hat that is 70 pixels shorter. \\r\n(Note: The width of each hat is\n50 pixels.)"
      2-3 Artist Debugging 10_instruction: "The direction pad on my game controller\nis too narrow. \\r\n\\r\nCan you make it wider by 10 pixels?\\r\n\\r\nTry running\nthe code first to see what's wrong."
      2-3 Artist Debugging 11_instruction: |-
        My snowflake is falling apart!\\r
        \\r
        Can
        you figure out what's going wrong?
      2-3 Artist Debugging 2_instruction: "This code for the cat's whiskers is wrong.\n\\r\n\\r\nFix this code to draw whiskers that are all the same length."
      2-3 Artist Debugging 3_instruction: "My boat has a hole! \\r\n\\r\nWhat do you\nneed to fix to make the ends meet?"
      2-3 Artist Debugging 5_instruction: "The code that we have for the leg and\nfoot is wrong. \\r\n\\r\nCan you fix it?"
      2-3 Artist Debugging 6_instruction: |-
        Looks like I'm sitting on a chair that’s
        missing a leg!\\r
        \\r
        Edit the code to draw the last leg.
      2-3 Artist Debugging 7_instruction: |-
        Looks like the C in code is drawn backwards!\\r
        \\r
        Can
        you make it look like a C again?
      2-3 Artist Debugging 8_instruction: |-
        My teacher says that I should finish what
        I start!\\r
        \\r
        Help me finish my pinwheel. Can you figure out what's wrong?
      2-3 Artist Debugging 9_instruction: |-
        Something is off!\\r
        \\r
        The code for
        this stem is wrong. Can you figure out how to get the artist to trace the
        stem the right way?
      2-3 Artist Debugging Assessment 1_instruction: "Assessment: Why does this square\nend up being 75 pixels too small on each side?  \\r\n\\r\nWhere does the code\ngo wrong?"
      2-3 Artist Functions 1 a_instruction: "\"Me zombie artist. Me love drawing!\"  \\r\n\\r\nHelp\nthe zombie draw square glasses.  \\r\n\\r\nThe bridge between the glasses is\n25 pixels shorter than the width of the squares, which is 100 pixels."
      2-3 Artist Functions 1_instruction: "\"Me zombie artist. Me love drawing!\"  \\r\n\\r\nHelp\nthe zombie draw square glasses.  \\r\n\\r\nThe bridge between the glasses is\n25 pixels shorter than the width of the squares, which is 100 pixels."
      2-3 Artist Functions 11 a_instruction: "We've renamed the `draw a square` function\nto `draw a hexagon`, but it's still giving us squares! Can you modify the\n`draw a hexagon` function to draw a hexagon with 50 pixel sides? \\r\n\\r\nDraw\nthe image using the new function!"
      2-3 Artist Functions 11.5 a_instruction: "Here's that same `draw a hexagon`\nfunction. \\r\n\\r\nWhat happens if you loop the main program 6 times, turning\n60 degrees each time you loop?"
      2-3 Artist Functions 11.5_instruction: "Here's that same `draw a hexagon`\nfunction. \\r\n\\r\nWhat happens if you loop the main program 6 times, turning\n60 degrees each time you loop?"
      2-3 Artist Functions 11_instruction: "We've renamed the `draw a square` function\nto `draw a hexagon`, but it's still giving us squares! Can you modify the\n`draw a hexagon` function to draw a hexagon with 50 pixel sides? \\r\n\\r\nDraw\nthe image using the new function!"
      2-3 Artist Functions 12 Mike_instruction: "Functions are really great for drawing\ncomplex things multiple times. \\r\n\\r\nCan you use the `draw a flower` function\nto fill the rest of the planter box?\\r\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 12 a_instruction: "Functions are really great for drawing\ncomplex things multiple times. \\r\n\\r\nCan you use the `draw a flower` function\nto fill the rest of the planter box?\\r\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 12_instruction: "Functions are really great for drawing\ncomplex things multiple times. \\r\n\\r\nCan you use the `draw a flower` function\nto fill the rest of the planter box?\\r\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 2_instruction: "Functions let you define new blocks! \\r\n\\r\nWe've\nmoved the blocks needed for drawing a square into a function called `draw\na square`. This time, use the `draw a square` function to create the glasses.\n\\r\n\\r\nThe squares are 75 pixels apart."
      2-3 Artist Functions 3_instruction: "Edit the function to draw a square with\na side length of 115 to draw the bigger glasses. \\r\n\\r\nThe squares are now\n45 pixels apart."
      2-3 Artist Loops New 13_instruction: "We are going to start you with some code\n(in grey) to make one diamond. \\r\n\\r\nLoop the grey code to create a fun\npattern!"
      2-3 Artist Loops New 2_instruction: |-
        Here is the same puzzle that we just solved,
        but this time, we can only use one `move forward` block and one `turn` block
        this time.\\r
        \\r
        Can you use a `repeat` to solve this puzzle?
      2-3 Artist Nested Loops 2_instruction: "Now loop the triangle 6 times. \\r\n\\r\nAfter\neach triangle, you'll need to turn 60 degrees before drawing the next."
      2-3 Artist Nested Loops 3_instruction: "You'll need to loop the triangle 12\ntimes to draw this pattern. \\r\n\\r\nDivide the number of degrees in a circle\n(360) by the number of shapes you're drawing (12) to figure out how far to\nturn after each shape."
      2-3 Artist Nested Loops 4_instruction: "Loop this diamond 12 times to draw\na flower!\\r\n\\r\nNote: We'll use the same angle to loop 12 diamonds as we\ndid for 12 triangles.  \\r\nHow much do you need to turn after each shape?"
      2-3 Artist Nested Loops 5_instruction: "Fill in this building's windows using\na nested loop. \\r\n\\r\nThe windows are 20 pixels long and 20 pixels apart."
      2-3 Artist Nested Loops 6_instruction: |-
        This dinosaur has 8 spikes running
        up its tail.\\r
        Each spike is 30 pixels long. Loop the triangle 8 times, but
        make sure to jump forward after each one!
      2-3 Artist Nested Loops 7_instruction: "Loop this triangle 10 times to draw\nthe sun. \\r\n\\r\nYou'll need to move and turn after each triangle. \\r\n\\r\nYou\ncan figure out how much to turn by dividing the number of degrees in a circle\nby the number of triangles that make it up."
      2-3 Artist Nested Loops 8_instruction: "Now let's add some grass to our picture.\n\\r\n\\r\nEach tuft of grass is 50 pixels apart."
      2-3 Artist Nested Loops 9_instruction: "We'll finish this picture by adding\nour flower. \\r\n\\r\nLoop the diamond 12 times to draw the flower."
      2-3 Bee Conditionals 11_instruction: "I wonder what's out there!\\r\n\\r\nHelp\nme fly around the yard and collect nectar only from the flowers that have\nsome. "
      2-3 Bee Conditionals 13_instruction: |-
        There's a lot happening here!\\r
        \\r
        Use
        what you've learned to collect all of the nectar and then make the honey.
      2-3 Bee Conditionals 14_instruction: |-
        Let's put everything together!\\r
        \\r
        Use
        what you've learned to help me collect nectar only from flowers that have
        it, using as few blocks as possible.  Don't forget to make honey at the end.
      2-3 Bee Conditionals 15_instruction: "This stair step pattern should look familiar.  \\r\n\\r\nCan\nyou collect nectar only from the flowers that have some, using as few blocks\nas possible?"
      2-3 Bee Conditionals 2_instruction: "I'm a hungry bee! \\r\nHelp me collect\nall of the nectar from the flowers using the fewest number of blocks."
      2-3 Bee Conditionals 3_instruction: "Look at all of that nectar!\\r\n\\r\nHelp\nme collect the nectar and make the honey using as few blocks as you can.  "
      2-3 Bee Conditionals 5_instruction: "Be careful not to collect nectar from\na purple flower if it doesn't have any. \\r\nYou must first check if the nectar\nis equal to 1 using the `if nectar` block."
      2-3 Bee Debugging 10_instruction: "This puzzle is making me loopy! \\r\nFix\nthe error(s) to collect all of the nectar and make all of the honey."
      2-3 Bee Debugging 2_instruction: |-
        Can you find the problem here?\\r
        Fix the
        error(s) to collect all of the nectar.
      2-3 Bee Debugging 3_instruction: |-
        Ooh, this one stings!\\r
        \\r
        Fix the error(s)
        to collect all of the nectar.
      2-3 Bee Debugging 5_instruction: "That flower looks tasty! \\r\n\\r\nFix the\nerror(s) to collect all of the nectar.  You can now use both run and step."
      2-3 Bee Debugging 6_instruction: |-
        What a sweet challenge!\\r
        \\r
        Fix the error(s)
        to collect all of the nectar.
      2-3 Bee Debugging 8_instruction: |-
        So many beautiful flowers!\\r
        \\r
        Fix the
        error(s) to collect all of the nectar.
      2-3 Bee Debugging 9_instruction: |-
        "Bee" patient with this one!\\r
        \\r
        You
        will need to fix a couple of things in this program to collect all of the
        nectar and make all of the honey.
      2-3 Bee Debugging Assessment 1_instruction: |-
        Assessment:  Now it's time to
        show what you know!\\r
        \\r
        Fix the error(s) to collect all of the nectar and
        make all of the honey.
      2-3 Bee Functions 10_instruction: "Purple flowers change between either 1 or\n0 nectar each time you run the puzzle.   \\r\n\\r\nCreate a function that collects\nnectar only from purple flowers that have nectar."
      2-3 Bee Functions 2_instruction: "Functions are blocks of code that perform\na task.  \\r\n\\r\nUse the `get 5` function to get 5 nectars at a time."
      2-3 Bee Functions 4_instruction: "The `move and get nectar` function turns\nthe bee, collects nectar, and then returns the bee to where it started.  \\r\n\\r\nUse\nthe function to collect all of the nectar."
      2-3 Bee Loops 1_instruction: |-
        Those flowers look tasty!\\r
        \\r
        Collect nectar
        from each of the flowers using the fewest blocks possible.
      2-3 Bee Loops 4_instruction: |-
        Such a busy bee!\\r
        \\r
        Help bee collect all
        of the nectar and make all of the honey with the fewest blocks possible.
      2-3 Bee Loops 4A_instruction: "How many times can loops help you in this puzzle?  \\r\n\\r\nLoops\nare your friend! Use a few of them to complete this puzzle with the fewest\nblocks possible."
      2-3 Bee Loops 5_instruction: "The shape of this path is different than the\nothers. \\r\n\\r\nCan you collect all of the nectar using as few blocks as possible?"
      2-3 Bee Loops 8_instruction: "These purple flowers have different amount of\nnectar each time you run the puzzle. \\r\n\\r\nUse the `while nectar` loop to\ncollect all of the nectar. \\r\n\\r\nThis loop will run as long as the condition\nis true, in this case `nectar > 0`."
      2-3 Maze Loops 18_instruction: "Get me to the sunflower using the fewest blocks\npossible!  \\r\n\\r\nTry using one `repeat` loop inside of another to cut down\non the amount of code you need."
      2-3 Maze Loops 19_instruction: "Let's take this to another level! \\r\nUse\nloops to get me to the sunflower with the fewest loops possible."
      20hr_maze_stage2_15_instruction: នេះ​ដូច​ទៅ​នឹង​ល្បែង​ប្រាជ្ញា​មុន​ដែរ ប៉ុន្តែ​អ្នក​ត្រូវ​ចងចាំ​អំពី​របៀប​ដែល​អ្នក​ប្រើ​ប្លុក "បើ" និង​ប្លុក "ធ្វើ​ឡើង​វិញ" ជាមួយ​គ្នា។
      4-5 Artist 8_instruction: "The halfway line on a soccer field is perpendicular\nto the sidelines.   \\r\nThis rectangle has a perimeter of 800 pixels total,\nand it is 240 pixels long. How tall is it?   \\r\n\\r\nDraw the bounds and the\nhalfway line."
      4-5 Artist Patterns 1_instruction: |-
        Draw this square using a loop.\\r
        \\r
        Each
        side is 20 pixels long.
      4-5 Artist Patterns 10_instruction: "This code draws two rows of hexagons -\nloop the whole thing 4 times to draw the whole honeycomb. \\r\n\\r\nYou'll\nneed to jump back 120 pixels in your outermost loop to make sure the artist\ndoesn't draw off the screen.\\r\n"
      4-5 Artist Patterns 12_instruction: "If you create another loop like this one,\nbut turn left instead of right, what happens? \\r\n\\r\nCan you repeat all of\nthat to draw this wave?"
      4-5 Artist Patterns 13_instruction: "Now let's loop that whole thing four\ntimes to create this picture frame. Watch out for the corners - you can't\njust turn 90 degrees! \\r\n\\r\nIf looping a 3 degree turn 60 times makes a\nhalf circle, which of these blocks of code will make an additional quarter\ncircle for the corners?"
      4-5 Artist Patterns 5_instruction: "Repeat this code to make a row of 6 diamonds.\n\\r\n\\r\nNotice that we changed our diamond code to repeat 3 times instead\nof 2 - why do you think that is?\\r\n"
      4-5 Artist Patterns 9_instruction: "Now repeat this code 3 times and draw the\nwhole row. \\r\n\\r\nEach hexagon is 80 pixels wide from the furthest points\nleft to right."
      4-5 Bee Conditionals 2_instruction: "More clouds! \\r\n\\r\nCheck underneath\nevery cloud to see if it is hiding a flower before you get nectar.  \\r\n\\r\nRemember:\nNot all clouds hide the same thing!"
      4-5 Bee Conditionals 5_instruction: |-
        There will be either a flower or a honeycomb
        under each of those clouds!\\r
        \\r
        Use the `if/else` block to collect nectar
        if there is a flower.\\r
        Otherwise, make honey (because there is a honeycomb).
      4-5 Bee Conditionals 6_instruction: "I am not sure how much nectar this flower\nhas, but I know it has either 1, 2, or 3 nectar. \\r\n\\r\nCombine the conditional\nblocks (`if` and/or `if/else`) to only get as much nectar as the flower has.\n\\r\n\\r\nRemember, the amount of nectar can change each time you run the puzzle!"
      4-5 Bee Conditionals 7_instruction: "These flowers can have 3, 2, or 1 nectar.\n\\r\n\\r\nComplete the `check purple flower` function and use it to collect\nall of the nectar at the flowers."
      4-5 Bee Conditionals 8_instruction: "Write the function for `check flower make\nhoney`. \\r\n\\r\nYour function should check if the purple flower has 3, 2,\nor 1 nectar and get all of the nectar. \\r\nThen, move forward and make honey."
      4-5 Bee Conditionals Assessment 1_instruction: "**Assessment:** This cloud\nis either hiding a flower with one nectar or a honeycomb that needs one honey.  \\r\n\\r\nComplete\nthe `get nectar or make honey` function, then call it to collect the nectar\nor honey. \\r\n"
      4-5 Bee Debugging 1_instruction: "These blocks are really bugging me. \\r\n\\r\nCan\nyou fix them?"
      4-5 Bee Debugging 6_instruction: "The purple flower has a different amount\nof nectar each time you run the puzzle. \\r\n\\r\nFix the blocks to get all\nof the nectar from the flower each time."
      4-5 Bee Nested Loops 4_instruction: "Collect all of the nectar from each flower\nand make honey at the honeycomb. \\r\n\\r\nUse a nested loop. "
      4-5 Maze 8_instruction: "Get the zombie to the sunflower using as few blocks\nas you can.  \\r\n(Avoid the chompers!)"
      4-5 Maze 9_instruction: "Now we have a new block called `repeat until`.  \\r\nThis\nwill let us keep looping commands until the zombie gets the sunflower.  \\r\n\\r\nUse\nthe new `repeat until` block to solve this puzzle in as few commands as possible."
      4-5 Maze Conditionals 10_instruction: "Can you add just 3 blocks to help the\nzombie solve a more complex maze? \\r\n\\r\nIf you do it right, he can walk\nany curvy path no matter the length!"
      4-5 Maze Conditionals 3_instruction: "Use the `if` block to help me decide\nwhen to turn. \\r\n"
      4-5 Maze Conditionals 5_instruction: "\"Me want sunflower!\"  \\r\n\\r\nUse an\n`if` statement to get the zombie to the sunflower with the fewest number of\nblocks."
      4-5 Maze Conditionals 6_instruction: |-
        "Eat sunflower!"\\r
        \\r
        Use an `if`
        statement to get the zombie to the sunflower with the fewest number of blocks.
      4-5 Maze Conditionals 8_instruction: "The `if/else` block checks a condition,\nand then does one thing OR another. \\r\n\\r\nUse this new block to get me to\nthe sunflower."
      4-5 Maze Conditionals 9_instruction: |-
        One more practice puzzle with the `if/else`
        block!\\r
        \\r
        Trace it with your finger to see if you can figure it out on
        your first try.
      4-5 Nested Loops 3_instruction: |-
        Create a sun by nesting the starter code in
        another loop.\\r
        \\r
        To get this cool design with a hollow center, you'll
        need to jump forward by the length of the triangle before turning.
      4-5 Nested Loops 7_instruction: "Loop this design 10 times. \\r\n\\r\nHow much\ndo you have to turn each time you loop?"
      4-5 Nested Loops 8_instruction: "Loop this shape 6 times. \\r\n\\r\nHow much\ndo you have to turn each time you loop? "
      4-5 While Loops 3_instruction: "Use as few blocks as possible to complete this\npuzzle!  \\r\n\\r\nMove me to the pile and remove all the dirt, then move to\nthe hole and fill it completely."
      4-5 While Loops 4_instruction: "Wow, look at that! \\r\n\\r\nI don't know how\nmany shovelfuls of dirt this hole needs.  \\r\nCan you write a program that\nkeeps using the `fill` block until the ground is even?  "
      App Lab test_instruction: សាក​ល្បង
      Artist Inspiration_instruction: "Free Play Inspiration: You've\nnow learned everything you need to know to make a pattern like this! If this\npicture inspires you, try to make something similar. Otherwise, create something\nall your own.\\r\n \\r\nWant to know how our inspiration pattern was made? "
      CSD U6 params modify clouds_instruction: |2
        # Clouds\\r
        \\r
        This program makes
        the clouds move when you blow on the sound sensor, but it's not finished.\\r
        \\r
        #
        Do This\\r
        * Create a new function `moveCloud(name)` that will move any cloud.\\r
          *
        (Hint: you will use almost all the same code as the `moveCloud0` function)\\r
        *
        Call your new `moveCloud(name)` function inside the event block, once for
        each cloud name.\\r
         * (Hint: this is similar to how the `loopCloud(name)`
        function is called many times.
      CSD U6 params modify clouds_2018_instruction: |2
        # Clouds\\r
        \\r
        This program makes
        the clouds move when you blow on the sound sensor, but it's not finished.\\r
        \\r
        #
        Do This\\r
        * Create a new function `moveCloud(name)` that will move any cloud.\\r
          *
        (Hint: you will use almost all the same code as the `moveCloud0` function)\\r
        *
        Call your new `moveCloud(name)` function inside the event block, once for
        each cloud name.\\r
         * (Hint: this is similar to how the `loopCloud(name)`
        function is called many times.
      CSD U6 params modify planes_instruction: |-
        # Multi-plane Controller\\r
        \\r
        This
        program moves the three planes using the board accelerometer and the on-screen
        check boxes.  Right now, only the red plane works.\\r
        \\r
        # Do This\\r
        * Create
        a new `movePlane(name)` function that can move any plane.\\r
        * Call the `movePlane(name)`
        function inside the event block, such that it only moves when its checkbox
        is checked.\\r
        \\r
        _Challenge: Right now the planes move way too fast.  Can
        you figure out how to change the code so they move more slowly?_
      CSD U6 params modify planes_2018_instruction: |-
        # Multi-plane Controller\\r
        \\r
        This
        program moves the three planes using the board accelerometer and the on-screen
        check boxes.  Right now, only the red plane works.\\r
        \\r
        # Do This\\r
        * Create
        a new `movePlane(name)` function that can move any plane.\\r
        * Call the `movePlane(name)`
        function inside the event block, such that it only moves when its checkbox
        is checked.\\r
        \\r
        _Challenge: Right now the planes move way too fast.  Can
        you figure out how to change the code so they move more slowly?_
      Course 4 Artist 10_instruction: |-
        Click here to see the full instructions again!\\r
        \\r
        Here
        is the code for an interesting shape.  What happens when you repeat it multiple
        times, turning between each iteration?   Notice that the turns in this shape
        add up to 420 degrees, which means that when your artist is done drawing,
        it will be facing a different direction than when you started.  That new direction
        is exactly 60 degrees to the right of where you began.
      Course 4 Artist 12_instruction: |-
        Want a second peek at the inspiration design
        or the hints?  Click here!\\r
        \\r
        Otherwise, make a design all your own!
      Course 4 Artist 9_instruction: "Loop this design 10 times and make sure to\nturn between each shape that's drawn. \\r\n"
      Course 4 Artist Binary 1_instruction: "Here's a function that takes a binary\nstring of 1's and 0's and instructs the artist to follow them from left\nto right, top to bottom.  The artist will fill-in the squares when it sees\na 1 and ignore the square when it sees a 0. \\r\n\\r\nRun this code to see how\nthe artist uses binary to draw this pattern."
      Course 4 Artist Binary 1a_instruction: "Here's a function that takes a binary\nstring of 1's and 0's and instructs the artist to follow them from left\nto right, top to bottom.  The artist will fill-in the squares when it sees\na 1 and ignore the square when it sees a 0. \\r\n\\r\nRun this code to see how\nthe artist uses binary to draw this pattern."
      Course 4 Artist Binary Free Play 2a_instruction: |-
        Here's a higher resolution
        canvas to draw on - 16 pixels by 16 pixels!\\r
        \\r
        See what happens when we
        start to get creative with the bits?
      Course 4 Artist Binary ryan_instruction: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \\r\n\\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      Course 4 Artist For Loops 11a_instruction: |-
        Let's put it all together!  Using
        your knowledge of `for` loops and the `counter` variable, create this drawing
        where each shape has two more sides than the last.  Make sure that each side
        is 10 times as long as the number of sides in the polygon.\\r
        \\r
        Very little
        of the code has been provided for you.
      Course 4 Artist For Loops 8_instruction: |-
        Just one little change to the code
        from the last image can create this drawing. Can you figure out what that
        change is?\\r
        \\r
        Hint:  You need to remove something!
      Course 4 Artist For Loops Challenge_a_instruction: |-
        Can you figure out how
        to use all of the things you've learned to create this image?\\r
        \\r
        Need
        a hint? Click here.
      Course 4 Artist For Loops inspire_instruction: |-
        Free-Play Inspiration: You've
        now learned everything you need to know to make a pattern like this! If this
        picture inspires you, try to make something similar. Otherwise, create something
        all your own.\\r
        \\r
        Need a hint? Click here.
      Course 4 Artist Inspire_instruction: |-
        Want a second peek at the inspiration
        design or the hints?  Click here!\\r
        \\r
        Otherwise, make a design all your
        own!
      Course 4 Artist Vars 1_instruction: "Let's draw an equilateral triangle. \\r\n\\r\nIt\nhas to be exactly 100 pixels long on each side."
      Course 4 Artist Vars 13_instruction: "When a shape has lots of sides, each\nside needs to be shorter if you want the whole pattern to fit on the screen.\n\\r\nLet's recreate the algorithm for this amazing pattern, but instead of\nmanually setting the `length` variable, let's use a math block with the `sides`\nvariable inside to make sure that each shape fits correctly. The perimeter\nof each polygon is 300 pixels.\\r\nNeed some hints?  Click here."
      Course 4 Artist Vars 14_instruction: |-
        Free Play: Check it out! Now your algorithm
        is nested within one more loop. Experiment with changing the values of your
        two variables to draw cool patterns.\\r
        \\r
        For even more effect, try playing
        with color!  Use random colors inside loops to see how it changes your design.
      Course 4 Artist Vars 6_instruction: |-
        Here’s some code that can draw any regular
        polygon. There’s a new variable called sides that is set to 4. Can you use
        the sides variable (along with the math block) to turn the right amount regardless
        of how many sides there are in the polygon?\\r
        \\r
        Click here to go back to
        the hint!
      Course 4 Artist Vars 7_instruction: |-
        Use what you learned in the last puzzle
        to create this hexagon using the "sides" variable.\\r
        \\r
        See how you could
        change just one value to draw a triangle,  square, pentagon, or octagon?
      Course 4 Bee 1_instruction: "The bee can't tell what's under the cloud! \\r\n\\r\nUse\nthe `if` block to check whether there is a flower under the cloud. \\r\n\\r\nGet\nnectar one time, ONLY if there is a flower."
      Course 4 Play Lab Params 10_instruction: "We've added one last function for\nyou. \\r\n\\r\nUse an \"if\" statement to program your game to call the \"level_up\"\nfunction only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample: \"player_score\" > 6\\r\n\\r\nPlay the game, and make it to level 3\nto move to the next puzzle. "
      Course 4 Play Lab Params 2_instruction: "Now we've got flags that are too\nhigh for our current jump! Let's use both the \"up\" and \"down\" arrows\nso that we can have multiple jump heights.  \\r\n\\r\nWe need to add a parameter\nto our jump function called \"height\".  The up arrow should cause the dog\nto jump 200 pixels and the down arrow should make it jump only 100 pixels.\n"
      Course 4 Play Lab Params 4_instruction: "Here's a function called `patrol`.\n\\r\n\\r\nEdit `patrol` to move Cat up 400 pixels and then down 400 pixels."
      Course 4 Play Lab Params 7_instruction: "Let's have some fun! Look at the\ncode provided to see if you can figure out what each block does.  \\r\nWhen\nyou're done, use the arrow keys to control Dog and collect all of the flags.\\r\nNOTE:\nYou don't need to make any changes to the program"
      Course 4 Play Lab Params 9_instruction: "Here's our game from an earlier stage,\nbut most of the code is hidden. There’s a new function `score_points.`\\r\n\\r\nEdit\nthe function so that a new parameter called `points` can be added to `player_score`.\n\\r\n\\r\nThe variable `player_score` should increase each time Dog tags Cat\nwith pie, and decrease each time that Cat tags Dog with a sandwich.\\r\n\\r\nNote:\nWhen you're done, click \"Run\" to play.  When Dog scores 6 points, you will\nmove on to the next puzzle. "
      Course 4 Play Lab Vars 6_instruction: |-
        Use the right arrow to throw pie.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a piece of pie. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      Course 4 Play Lab Vars 9_instruction: "Free Play time! Here are all of the\nvariables we've played with so far in this stage, as well as a few more in\ncase you want them. \\r\n\\r\nNotice that there are now so many blocks in our\ntoolbox that they need to be organized!  Here, we've put each piece into\nan appropriate category.  Take some time to explore everything that is available.\nWhen you're done browsing, make a game or story using repeats, variables,\nand events.  \\r\n\\r\nHint: scroll down to see all the commands in the workspace."
      Course 4 Playlab For Loops 6b_instruction: "Edit this `for` loop to create\na game that's fun for you to play! \\r\nPress \"Run\" and click Madame Unicorn\nas many times as you can.  Can you beat our score of 24? "
      Course 4 SCV 3_instruction: |-
        Now for a game of tag!  Tag Cat to get 2 points.
        Tag Penguin to get 3 points.  Get exactly 10 points to win!\\r
        But be careful,
        when Cat and Penguin tag each other, they take points away.\\r
        \\r
        Add the
        blocks necessary to make this game work the way it's been explained.  How
        will you get Dog to move in all directions using the arrow keys?  How will
        you add points when Dog tags Cat or Penguin?  How will you subtract points
        when Cat and Penguin touch?
      CourseF_PlayLab_vars10_instruction: "Free Play time! Here are all of the variables\nwe've played with so far in this stage, as well as a few more in case you\nwant them. \\r\n\\r\nNotice that there are now so many blocks in our toolbox\nthat they need to be organized!  Here, we've put each piece into an appropriate\ncategory.  Take some time to explore everything that is available. When you're\ndone browsing, make a game or story using repeats, variables, and events.  \\r\n\\r\nHint:\nscroll down to see all the commands in the workspace."
      CourseF_PlayLab_vars6_instruction: |-
        Use the right arrow to throw pie.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a piece of pie. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      CourseF_PlayLab_vars7_instruction: |-
        Use the right arrow to throw pie.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a piece of pie. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      CourseF_PlayLab_vars8_instruction: |-
        Use the right arrow to throw pie.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a piece of pie. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      Crack Random Substitution_instruction: សេចក្ដី​ណែនាំ
      Crack Random Substitution_2018_instruction: សេចក្ដី​ណែនាំ
      Crack a Caesar Cipher_instruction: សេចក្ដី​ណែនាំ
      Crack a Caesar Cipher_2018_instruction: សេចក្ដី​ណែនាំ
      D_Frozen_nested9_instruction: |-
        Try playing around with what you've
        created. Draw whatever you like!\\r
        - What happens if you use two different
        angles in your stair step pattern?\\r
        - What happens if you make your diamond
        pattern longer or shorter?\\r
        - What does it look like to draw two snowflakes
        on top of one another?
      Food Fight!_instruction: "We've added one last function for\nyou. \\r\n\\r\nUse an \"if\" statement to program your game to call the \"level_up\"\nfunction only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample: \"player_score\" > 6\\r\n\\r\nPlay the game, and make it to level 3\nto move to the next puzzle. "
      Function intro Ryan_instruction: ប្រើប្រាស់មុខងារ `build bridge`២ដងដើម្បីបង្កើតផ្លូវទៅកាន់ភ្លើងគប់។
      Inspirational Artwork_instruction: "Free Play Inspiration: You've\nnow learned everything you need to know to make a pattern like this! If this\npicture inspires you, try to make something similar. Otherwise, create something\nall your own.\\r\n \\r\nWant to know how our inspiration pattern was made? "
      K-1 Maze Loops 11_instruction: "Get me to the pig!  \\r\nThe `repeat` loop will\nmake this easier."
      K-1 Maze Sequence Assessment 1_instruction: |-
        Let's see what you've learned!\\r
        Move
        one way, then another to get me to the pig.
      K-1 maze debug 11_instruction: |-
        This is a test!\\r
        Debug this level by rearranging
        and changing blocks to get me to the pig
      KIKI GLJ Test Response_instruction: "Look carefully at the code below.  What\ndo you think the plane will do when you click \"Run\"?\\\\r\n"
      Kiki_StarWars_Test_3_instruction: អត្ថ​​បទ
      Kiki_StarWars_Test_4_instruction: អត្ថ​​បទ
      Kiki_StarWars_Test_5_instruction: អត្ថ​​បទ
      Kiki_StarWars_Test_5_Example_instruction: អត្ថ​​បទ
      MC Agent Freeplay_instruction: "**លេងដោយសេរី** វាជាពេលដែលអ្នកស្រាវជ្រាវដោយខ្លួនឯង!"
      MC HOC 2016 Level 3_instruction: "Great, the chicken moved! But then she stopped.\nIn games, chickens walk forever. Use a `forever do` loop to keep these chickens\nmoving.\\\\r\n"
      MC_HOC_2017 Agent Test_instruction: ចុចប៊ូតុង "Run" ដើម្បីរំកិលតួអង្គទៅរកការេពណ៏ទឹកក្រូចនៅក្នុងផ្ទះ។
      MC_HOC_2017_01_instruction: ចុចប៊ូតុង "Run" ដើម្បីរំកិលតួអង្គទៅរកការេពណ៏ទឹកក្រូចនៅក្នុងផ្ទះ។
      MC_HOC_2017_01_Cole_instruction: អ្នកត្រូវតែប្រមូលនូវសំភារៈទាំងអស់ក្នុងការផ្សងព្រេងមួយនេះ។ ធ្វើចលនាដោយប្រើ **គ្រាប់ចុចដែលមានសញ្ញាព្រួញ** ហើយស្វែងរកប្រអប់នៅតាមផ្លូវដើម្បីឈ្នះ
      MC_HOC_2017_01_Kiki_instruction: ចុចប៊ូតុង "Run" ដើម្បីរំកិលតួអង្គទៅរកការេពណ៏ទឹកក្រូចនៅក្នុងផ្ទះ។
      MC_HOC_2017_01_RETRY_instruction: 'សរសេរកូដដើម្បីអោយជំនួយការទៅសង្កត់បន្ទះក្តារ រួចចុចប៊ូតុង "Run" ហើយប្រើគ្រាប់ចុចដែលមានសញ្ញាព្រួញដើម្បីអោយតួអង្គធ្វើចលនាចេញពីផ្ទះដើម្បីប្រមូលប្រអប់។ '
      MC_HOC_2017_02_instruction: អោយជំនួយការសង្កត់បន្ទះក្តារ។
      MC_HOC_2017_02_Cole_instruction: "រំកិលជំនួយការដើម្បីសង្កត់បន្ទះក្តារ ដូច្នេះ​ \n{currentPlayerName} អាចទៅតាមផែនទីបាន។ "
      MC_HOC_2017_02_Kiki_instruction: អោយជំនួយការសង្កត់បន្ទះក្តារ ហើយអោយតួអង្គទៅរកការេពណ៏ទឹកក្រូច។
      MC_HOC_2017_02_Will_instruction: អោយជំនួយការសង្កត់បន្ទះក្តារ។
      MC_HOC_2017_03_Cole_instruction: 'សរសេរកូដដើម្បីអោយជំនួយការបើករបង។ '
      MC_HOC_2017_03_Kiki_instruction: អោយជំនួយការសង្កត់បន្ទះក្តារ។
      MC_HOC_2017_04_instruction: ប្តូររង្វិលជុំរបស់រូបផ្គុំចុងក្រោយដើម្បីជាជំនួយដល់ជំនួយការក្នុងការបង្កើតផ្លូវឆ្លងទន្លេ។
      MC_HOC_2017_04POINT5_Cole_instruction: អោយជំនួយការសង្កត់បន្ទះក្តារ។
      MC_HOC_2017_04POINT5_RYAN_instruction: អោយជំនួយការសង្កត់បន្ទះក្តារ។
      MC_HOC_2017_04_Cole_instruction: អោយជំនួយការសង្កត់បន្ទះក្តារ។
      MC_HOC_2017_04_Kiki_instruction: អោយជំនួយការសង្កត់បន្ទះក្តារ។
      MC_HOC_2017_05_instruction: ប្រើមុខងារមួយដើម្បីជួយដល់ជំនួយការក្នុងសង្កត់បន្ទះក្តារ។
      MC_HOC_2017_05_Cole_instruction: អោយតួអង្គទៅរកចបជីក។
      MC_HOC_2017_05_Josh_instruction: អោយតួអង្គទៅរកចបជីក។
      MC_HOC_2017_05_Kiki_instruction: អោយតួអង្គទៅរកការេពណ៏ទឹកក្រូច។
      MC_HOC_2017_06_Cole_instruction: កែតម្រូវកូដដើម្បីអោយជំនួយការសាងសង់ស្ពានដើម្បីឆ្លងទន្លេ។
      MC_HOC_2017_06_Josh_instruction: កែតម្រូវកូដដើម្បីអោយជំនួយការសាងសង់ស្ពានដើម្បីឆ្លងទន្លេ។
      MC_HOC_2017_06_Kiki_instruction: កែតម្រូវកូដដើម្បីអោយជំនួយការសាងសង់ស្ពានដើម្បីឆ្លងទន្លេ។
      MC_HOC_2017_07_Cole_instruction: បំបែកដុំទឹកកកដើម្បីអោយ{currentPlayerName} ទៅរកឧបករណ៏ដឹកជញ្ជូនតាមផ្លូវដែក។
      MC_HOC_2017_07_Kiki_instruction: ប្រើមុខងារមួយដើម្បីសំអាតផ្លូវទៅកាន់ការ៉េពណ៏ទឹកក្រូច។
      MC_HOC_2017_07a_Kiki_instruction: សំអាតផ្លូវទៅកាន់ការ៉េពណ៏ទឹកក្រូច។
      MC_HOC_2017_08_Cole_instruction: ផ្លាស់ប្តូរមុខងារដែលអោយដើម្បីវាអោយដំណើរការសំរាប់តំបន់ជីវចំរុះ។
      MC_HOC_2017_08_Kiki_instruction: ប្តូរមុខងារដែលដំណើរការចំពោះរូបផ្គុំនេះ។
      MC_HOC_2017_08_RY_instruction: ប្រើមុខងារដើម្បីរកផ្លូវឆ្លងកំអែរភ្នំភ្លើង។
      MC_HOC_2017_08_Will_instruction: ប្រើមុខងារដើម្បីរកផ្លូវឆ្លងកំអែរភ្នំភ្លើង។
      MC_HOC_2017_09_Cole_instruction: សរសេរកម្មវិធីដើម្បីអោយជំនួយការសំអាតផ្លូវអោយតួអង្គ។
      MC_HOC_2017_09_Kiki_instruction: សរសេរកម្មវិធីដើម្បីអោយជំនួយការធ្វើការសំអាតផ្លូវរបស់តួអង្គ និងដើម្បីទៅសង្កត់បន្ទះក្តារ។
      MC_HOC_2017_10_Cole_instruction: បង្កើតមុខងារមួយដើម្បីជួយក្នុងការបញ្ចប់ការធ្វើរទេះដឹករ៉ែ។
      MC_HOC_2017_10_Cole_old_instruction: បង្កើតមុខងារមួយដើម្បីជួយក្នុងការបញ្ចប់ការធ្វើរទេះដឹករ៉ែ។
      MC_HOC_2017_10_Kiki_instruction: បង្កើតមុខងារមួយដើម្បីជួយក្នុងការបញ្ចប់ការធ្វើរទេះដឹករ៉ែ។
      MC_HOC_2017_10_RETRY_instruction: ប្រើប្រាស់មុខងារដើម្បីបញ្ចប់ការធ្វើផ្លូវដែក។
      MC_HOC_2017_10_RYAN_instruction: បង្កើតមុខងារមួយដើម្បីជួយក្នុងការបញ្ចប់ការធ្វើរទេះដឹករ៉ែ។
      MC_HOC_2017_10_RYAN2_instruction: បង្កើតមុខងារមួយដើម្បីជួយក្នុងការបញ្ចប់ការធ្វើរទេះដឹករ៉ែ។
      MC_HOC_2017_13_Cole_instruction: "**លេងដោយសេរី** វាជាពេលដែលអ្នកស្រាវជ្រាវដោយខ្លួនឯង!"
      MC_HOC_2017_4.5v2_instruction: អោយជំនួយការសង្កត់បន្ទះក្តារ។
      MC_HOC_2017_Ali_instruction: ប្រើមុខងារដើម្បីរកផ្លូវឆ្លងកំអែភ្នំភ្លើង។
      MC_HOC_2017_FP10x10_instruction: "**លេងដោយសេរី** តើអ្នកអាចប្រកួតជាមួយខ្លួនឯងក្នុងការប្រមូលគ្រាប់ពេជ្រទាំងអស់នៅក្នុងវគ្គនេះទេ? "
      MC_HOC_2017_FP10x10_RE_instruction: "**លេងដោយសេរី** តើអ្នកអាចប្រកួតជាមួយខ្លួនឯងក្នុងការប្រមូលគ្រាប់ពេជ្រទាំងអស់នៅក្នុងវគ្គនេះទេ? "
      MC_HOC_2017_FP20x20_instruction: "**លេងដោយសេរី** វាជាពេលដែលអ្នកស្រាវជ្រាវដោយខ្លួនឯង!"
      MC_HOC_2017_Ryan_03_instruction: ឥលូវនេះចូលប្រើការរង្វិលជុំដើម្បីជួយជំនួយការក្នុងការសាងសង់ស្ពានឆ្លងទន្លេដោយដាក់ប្លុកទៅក្នុងទឹក។
      MC_HOC_2017_Ryan_05_instruction: កំទេចដើមដំបងយក្សទាំងនេះដើម្បីអោយតួអង្គទៅដល់គោលដៅ។
      NEW Course 4 Artist Functions 3_instruction: "Here is a new type of Block.\nIt is called a `function` block. Click \"edit\" then fill it with the code\nfor drawing a square with 100 pixel sides. \\r\n\\r\nWhen you're done editing\nthe function, click \"Close\" to go back to your program."
      NEW Course 4 Artist Params 13_instruction: "Let's edit this \"draw a polygon\"\nfunction. It already has a \"sides\" parameter. Now, let's add a \"length\"\nparameter. \\r\nThe perimeter of each shape is 200 pixels long. Do you remember\nthe equation to make shapes the same size when they have a different number\nof sides?"
      NEW Course 4 Artist Params 3_instruction: "Now let's use the function to draw\n5 triangles in a row. Each triangle is 30 pixels apart.\\\\r\n"
      NEW Course 4 Artist Params inspire_instruction: "Free Play Inspiration: You've\nnow learned everything you need to know to make a pattern like this! If this\npicture inspires you, try to make something similar. Otherwise, create something\nall your own.\\r\n \\r\nWant to know how our inspiration pattern was made? "
      NEW Course 4 Artist Vars 4_instruction: "Let's try it again! \\r\n\\r\nCan you\nset the `length` variable to 60 to make this cool design with hexagons?"
      NEW Course 4 Artist Vars 6_instruction: "Draw this pattern of pentagons with\n100 pixel sides by setting the right value for `length` and dropping the `length`\nvariable into all of the the correct places. \\r\n\\r\nSee how you only have\nto set the value for `length` once, and the code uses the right value everywhere?"
      NEW Course 4 Bee For Loops 7_instruction: |-
        Now, let's combine the "counter"
        variable with a math block! How can you use the "counter" variable to navigate
        this garden with the fewest number of blocks possible? What do you need to
        do to collect 3, 6, 9, 12, 15 nectar this time? The secret is in the "counter"
        variable!\\r
        \\r
        Remember: If your loop is counting up, the increment is added
        to your "counter" variable each time through.
      New Minecraft Hero Project_instruction: "**លេងដោយសេរី** វាជាពេលដែលអ្នកស្រាវជ្រាវដោយខ្លួនឯង!"
      PS copy 2-3 Bee Conditionals 5_instruction: "Be careful not to collect nectar from\na purple flower if it doesn't have any. \\r\nYou must first check if the nectar\nis equal to 1 using the `if nectar` block."
      Testing Quantum Farmer_instruction: "Wow, look at that! \\r\n\\r\nI don't know how\nmany shovelfuls of dirt this hole needs.  \\r\nCan you write a program that\nkeeps using the `fill` block until the ground is even?  "
      The Vigenere Cipher Widget_instruction: សេចក្ដី​ណែនាំ
      The Vigenere Cipher Widget_2018_instruction: សេចក្ដី​ណែនាំ
      The Vigenere Cipher_instruction: សេចក្ដី​ណែនាំ
      U2 frequency caesar_instruction: សេចក្ដី​ណែនាំ
      U2 frequency random sub_instruction: សេចក្ដី​ណែនាំ
      U2 vigenere cipher_instruction: សេចក្ដី​ណែនាំ
      U4 vigenere cipher 2_instruction: សេចក្ដី​ណែនាំ
      aE7_instruction: "If you create another loop like this one,\nbut turn left instead of right, what happens? \\r\n\\r\nCan you repeat all of\nthat to draw this wave?"
      aE8_instruction: "Now let's loop that whole thing four\ntimes to create this picture frame. Watch out for the corners - you can't\njust turn 90 degrees! \\r\n\\r\nIf looping a 3 degree turn 60 times makes a\nhalf circle, which of these blocks of code will make an additional quarter\ncircle for the corners?"
      course1_artist_loops_challenge1_instruction: |-
        You can use a loop to draw many
        lines in a row.\\r
        \\r
        Can you draw a house? Make it look just the way you
        like it!  Try looking for patterns that repeat!
      course2_playlab_stage17_10_instruction: |-
        Add blocks to the `when run` event
        to change the background and the speed of Waddles.\\r
        \\r
        Play the game and
        move Waddles with the arrows until you score.
      course2_playlab_stage17_8_instruction: "Can you have Waddles (actor 1) say\n\"Ouch!\" and play a \"hit\" sound if he runs into Chomp? \\r\n\\r\nWhen you're\ndone, play the game to make that happen."
      course2_playlab_stage17_9_instruction: "Can you add a block to score a point\nwhen Waddles runs into Octavia (actor 3)? \\r\nPlay the game and move Waddles\nwith the arrows until you score!"
      course3_playLab_challenge1_instruction: "Something should happen when you get\nenough points or when you run out of points. Add some code to the `win game`\nand `lose game` functions to make the game work the way it should. \\r\nClick\nthe hints for ideas!"
      courseA_collector_preLoops1_instruction: "This is Laurel the Adventurer! \\r\n\\r\nPress\n\"Run\" to see her walk up to the treasure and grab it."
      courseA_collector_preLoops2_instruction: "Great!  Now you get to add code yourself!  \\r\n\\r\nSnap\na `get treasure` block to the bottom of the program and click \"Run\"."
      courseB_maze_seq1_instruction: "Play with these blocks to see what they make\nthe bird do! \\r\n\\r\nGet the bird to the pig to complete the level."
      courseB_playlab_events6_instruction: |-
        Help your knight get all of the flags!\\r
        \\r
        To
        do this, you'll need to add events to help the knight move up, down, left,
        and right.
      courseB_playlab_events6_2018_instruction: |-
        Help your knight get all of the flags!\\r
        \\r
        To
        do this, you'll need to add events to help the knight move up, down, left,
        and right.
      courseC_PlayLab_events8_instruction: "Can you have Waddles (actor 1) play a\n\"hit\" sound and say \"Ouch!\" if he runs into Chomp? \\r\nWhen you're done,\nplay the game to make that happen."
      courseC_PlayLab_events8_2018_instruction: "Can you have Waddles (actor 1) play a\n\"hit\" sound and say \"Ouch!\" if he runs into Chomp? \\r\nWhen you're done,\nplay the game to make that happen."
      courseC_PlayLab_events9_instruction: "Can you add a block to score a point\nwhen Waddles the Penguin (actor1) runs into Octavia the Octopus (actor 3)?\n\\r\nPlay the game and move Waddles with the arrows until you score!"
      courseC_PlayLab_events9_2018_instruction: "Can you add a block to score a point\nwhen Waddles the Penguin (actor1) runs into Octavia the Octopus (actor 3)?\n\\r\nPlay the game and move Waddles with the arrows until you score!"
      courseC_PlayLab_eventsA_instruction: |-
        Add blocks to the `when run` event to
        change the background scene and the speed of Waddles the Penguin.\\r
        \\r
        Play
        the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsA_2018_instruction: |-
        Add blocks to the `when run` event to
        change the background scene and the speed of Waddles the Penguin.\\r
        \\r
        Play
        the game and move Waddles with the arrows until you score.
      courseC_PlayLab_events_challenge1_instruction: "Use a new block to make Waddles\nautomatically move back to the start when he runs into the Dinosaur and when\nhe scores a point. \\r\nPlay the game and move Waddles with the arrows until\nyou score enough points."
      courseC_PlayLab_events_challenge1_2018_instruction: "Use a new block to make Waddles\nautomatically move back to the start when he runs into the Dinosaur and when\nhe scores a point. \\r\nPlay the game and move Waddles with the arrows until\nyou score enough points."
      courseC_PlayLab_events_challenge1_xy_blocks_instruction: |-
        Here is a new block
        that is somewhat complicated. Use it to move Waddles back to the start when
        he runs into the Dinosaur and when he scores a point. This will make your
        game more challenging and fun!\\r
        \\r
        Play the game and move Waddles with
        the arrows until you score enough points.
      courseC_artist_loops1_instruction: "*\"Zombie.  Draw!\"*\\r\n\\r\nThe zombie\nwants to draw a line from where he is to the garden of sunflowers.  Can you\nhelp him?  \\r\n*(The garden is 250 pixels away)*  "
      courseC_artist_loops5_instruction: "Great!  Now it's time to make a fence\ninside to keep the animals out.   \\r\n\\r\n"
      courseC_artist_loops6_instruction: "What should the zombie put inside of the\ngarden?  \\r\n\\r\n\\r\n"
      courseC_artist_prog5_instruction: |-
        Finish this tag by drawing a rectangle around
        the outside.\\r
        (The long sides are 200 pixels each and the short sides are
        each 100 pixels)
      courseC_artist_prog5_2018_instruction: |-
        Finish this tag by drawing a rectangle
        around the outside.\\r
        (The long sides are 200 pixels each and the short sides
        are each 100 pixels)
      courseC_artist_prog8_instruction: |-
        One more tag.  This is a triangle for Pi.\\r
        (Each
        side is 150 pixels)
      courseC_artist_prog8_2018_instruction: |-
        One more tag.  This is a triangle for
        Pi.\\r
        (Each side is 150 pixels)
      courseC_playLab_embedded_instruction: |-
        Here's a game for you to play! To win,
        use your arrow keys to get the penguin to run into the octopus.\\r
        \\r
        Once
        you are done, you will learn how to make this game!
      courseD_Frozen_nested9_instruction: |-
        Try playing around with what you've
        created. Draw whatever you like!\\r
        - What happens if you use two different
        angles in your stair step pattern?\\r
        - What happens if you make your diamond
        pattern longer or shorter?\\r
        - What does it look like to draw two snowflakes
        on top of one another?
      courseD_artist_9_2018_instruction: |-
        Try playing around with what you've
        created. Draw whatever you like!\\r
        - What happens if you use two different
        angles in your stair step pattern?\\r
        - What happens if you make your diamond
        pattern longer or shorter?\\r
        - What does it look like to draw two snowflakes
        on top of one another?
      courseD_artist_binary5_instruction: "Each binary string below represents one\nrow of this picture. \\r\n\\r\nCan you rearrange them so it draws a smiley face\ninstead of a frown?"
      courseD_artist_binary5_2018_instruction: "Each binary string below represents one\nrow of this picture. \\r\n\\r\nCan you rearrange them so it draws a smiley face\ninstead of a frown?"
      courseD_artist_binaryFP_instruction: |-
        Here's a higher resolution canvas to
        draw on - 16 pixels by 16 pixels!\\r
        \\r
        See what happens when we start to
        get creative with the bits!
      courseD_artist_binaryFP_2018_instruction: |-
        Here's a higher resolution canvas to
        draw on - 16 pixels by 16 pixels!\\r
        \\r
        See what happens when we start to
        get creative with the bits!
      courseD_artist_functions2_instruction: "This time, use the `draw a square`\nfunction to create the glasses. \\r\n"
      courseD_artist_nestedLoops1_instruction: "Draw a triangle to kickstart this\nstage.  \\r\n(Each side is 100 pixels long and you'll need to turn 120 degrees\nfor each exterior angle.)"
      courseD_artist_nestedLoops1_2018_instruction: "Draw a triangle to kickstart this\nstage.  \\r\n(Each side is 100 pixels long and you'll need to turn 120 degrees\nfor each exterior angle.)"
      courseD_artist_nestedLoops3_instruction: |-
        Use your new skills to quickly draw
        the last row of windows for this building.\\r
        \\r
        The windows are 20 pixel
        squares, each 20 pixels apart.
      courseD_artist_nestedLoops3_2018_instruction: |-
        Use your new skills to quickly draw
        the last row of windows for this building.\\r
        \\r
        The windows are 20 pixel
        squares, each 20 pixels apart.
      courseD_artist_project4a_instruction: |-
        Try playing around with what you've
        created. Draw whatever you like!\\r
        - What happens if you use two different
        angles in your stair step pattern?\\r
        - What happens if you make your diamond
        pattern longer or shorter?\\r
        - What does it look like to draw two snowflakes
        on top of one another?
      courseD_artist_project4a_2018_instruction: |-
        Try playing around with what you've
        created. Draw whatever you like!\\r
        - What happens if you use two different
        angles in your stair step pattern?\\r
        - What happens if you make your diamond
        pattern longer or shorter?\\r
        - What does it look like to draw two snowflakes
        on top of one another?
      courseD_bee_conditionals3_instruction: "Help the bee collect all of the nectar.\n\\r\n\\r\nYou can only collect nectar from flowers, but you can check any space\nto see if there is a flower."
      courseD_bee_conditionals8_instruction: |-
        Collect nectar if there is a flower.\\r
        Otherwise,
        make honey (because there is a honeycomb).
      courseD_bee_conditionals8_2018_instruction: |-
        Collect nectar if there is a flower.\\r
        Otherwise,
        make honey (because there is a honeycomb).
      courseD_playLab_cond3b_instruction: "1) Make the dragon change between random\nemotions every second.  \\r\n2) Make it so when Pegleg gets to the dragon,\nhe gets 2 points if the dragon is happy and 1 otherwise."
      courseD_playLab_cond6_instruction: "1)  Slow the ninja (actor 3) down before\nyou set him to chase the pirate.  \\r\n2)  If the pirate is greater than 225\npixels down, set the ninja to **flee** the pirate.  Otherwise, set the ninja\nto **chase** the pirate.  "
      courseD_playLab_cond6_2018_instruction: "1)  Slow the ninja (actor 3) down before\nyou set him to chase the pirate.  \\r\n2)  If the pirate is greater than 225\npixels down, set the ninja to **flee** the pirate.  Otherwise, set the ninja\nto **chase** the pirate.  "
      courseD_playLab_embedded_instruction: "Move Pegleg the Pirate with the arrow\nkeys. Get to the dragon to score points, but avoid the ninja! Standing below\nthe line of octopuses will make the ninja stop chasing you, but beware! The\nlonger you stay there, the more points you lose. \\r\n\\r\nGet 5 points to win!"
      courseE_artist_functions1_instruction: "Help the zombie draw glasses using\nsquares with sides of 100 pixels.  \\r\nThe bridge between the glasses is 75\npixels long."
      courseE_farmer_functions2_instruction: "Now, there will be a different number\nof pumpkins each time you run the program.   \\r\n\\r\nUse the `while` block\nto pick only as many pumpkins as you need."
      courseE_farmer_functions3_instruction: "What happens when the paths to the\npumpkins are all different lengths?   \\r\n\\r\nGet them all with as few blocks\nas possible."
      courseE_farmer_functions4_instruction: |-
        Great!  Now you have code that will
        work to get pumpkins from any size path.\\r
        \\r
        Let's drag that code into
        a function so we can use it in lots of ways...but first use it to solve this
        puzzle again.
      courseE_farmer_functions6_instruction: |-
        *"Lettuce try something new!"*\\r
        \\r
        Here's
        some code to collect all of the lettuce.  Move it into a function so we can
        use it later.
      courseE_playLab_challenge1_instruction: "Something should happen when you get\nenough points or when you run out of points. Add some code to the `win game`\nand `lose game` functions to make the game work the way it should. \\r\nClick\nthe hints for ideas!"
      courseE_playLab_challenge1_2018_instruction: "Something should happen when\nyou get enough points or when you run out of points. Add some code to the\n`win game` and `lose game` functions to make the game work the way it should.\n\\r\nClick the hints for ideas!"
      courseF_artist_variables_2_instruction: "Now use another loop to draw three\nof those triangles right next to each other.   \\r\nYou can nest the code from\nyour last puzzle inside.\\r\n"
      courseF_artist_variables_6_instruction: "OOPS! We actually need the triangles\nto be 60 pixels wide, with 60 pixel jumps.  \\r\nAren't you glad you're using\na variable?"
      courseF_artist_variables_9_instruction: |-
        See what happens when you repeat the
        code from the last puzzle 30 times instead of only 3!\\r
        \\r
        Feel free to
        make your lines any color or pattern for some extra zest.
      courseF_artist_variables_FP_instruction: "**Freeplay:** Take what you've learned\nand make your own drawing. \\r\n\\r\nHow can you use variables with squares,\npentagons, or hexagons?"
      courseF_bee_conditionals8_instruction: |-
        Collect nectar if there is a flower.\\r
        Otherwise,
        make honey (because there is a honeycomb).
      courseF_bee_conditionals8_2018_instruction: |-
        Collect nectar if there is a flower.\\r
        Otherwise,
        make honey (because there is a honeycomb).
      courseF_playlab_variables2_instruction: "Now, decode Pirate Pegleg's speech\nby changing the value of the variables in just two places! \\r\n"
      courseF_playlab_variables2a_instruction: "Now, decode Pirate Pegleg's speech\nby changing the value of the variables in just two places! \\r\n"
      grade2_PuppyLoops_10_instruction: |-
        My teacher says that I should finish what
        I start!\\r
        \\r
        Help me finish my pinwheel. Can you figure out what's wrong?
      grade2_PuppyLoops_8_instruction: "This code for the cat's whiskers is wrong.\n\\r\n\\r\nFix this code to draw whiskers that are all the same length."
      grade2_PuppyLoops_9_instruction: |-
        Looks like the C in code is drawn backwards!\\r
        \\r
        Can
        you make it look like a C again?
      grade2_collector_pre1_instruction: "\"Hi, I'm Laurel. Today I'm searching\nfor treasure at the dog park!\" \\r\n\\r\nPlay around with the blocks to see\nif you can help Laurel collect some gold."
      grade2_playlab_project_3_instruction: "Can you have Waddles (actor 1) say\n\"Ouch!\" and play a \"hit\" sound if he runs into Chomp? \\r\n\\r\nWhen you're\ndone, play the game to make that happen."
      grade2_playlab_project_4_instruction: "Can you add a block to score a point\nwhen Waddles runs into Octavia (actor 3)? \\r\nPlay the game and move Waddles\nwith the arrows until you score!"
      grade2_playlab_project_5_instruction: |-
        Add blocks to the `when run` event
        to change the background and the speed of Waddles.\\r
        \\r
        Play the game and
        move Waddles with the arrows until you score.
      grade3_ConditionalsElse_2_instruction: "More clouds! \\r\n\\r\nCheck underneath\nevery cloud to see if it is hiding a flower before you get nectar.  \\r\n\\r\nRemember:\nNot all clouds hide the same thing!"
      grade3_ConditionalsElse_5_instruction: |-
        There will be either a flower or a honeycomb
        under each of those clouds!\\r
        \\r
        Use the `if/else` block to collect nectar
        if there is a flower.\\r
        Otherwise, make honey (because there is a honeycomb).
      grade3_ConditionalsElse_6_instruction: "I am not sure how much nectar this flower\nhas, but I know it has either 1, 2, or 3 nectar. \\r\n\\r\nCombine the conditional\nblocks (`if` and/or `if/else`) to only get as much nectar as the flower has.\n\\r\n\\r\nRemember, the amount of nectar can change each time you run the puzzle!"
      grade3_ConditionalsElse_7_instruction: "These flowers can have 3, 2, or 1 nectar.\n\\r\n\\r\nComplete the `check purple flower` function and use it to collect\nall of the nectar at the flowers."
      grade3_ConditionalsElse_8_instruction: "Write the function for `check flower make\nhoney`. \\r\n\\r\nYour function should check if the purple flower has 3, 2,\nor 1 nectar and get all of the nectar. \\r\nThen, move forward and make honey."
      grade3_ConditionalsElse_9_instruction: "**Assessment:** This cloud\nis either hiding a flower with one nectar or a honeycomb that needs one honey.  \\r\n\\r\nComplete\nthe `get nectar or make honey` function, then call it to collect the nectar\nor honey. \\r\n"
      grade3_ConditionalsElse_TeacherIDo_instruction: |-
        There will be either a flower or a honeycomb
        under each of those clouds!\\r
        \\r
        Use the `if/else` block to collect nectar
        if there is a flower.\\r
        Otherwise, make honey (because there is a honeycomb).
      grade3_Conditionals_1_instruction: "I'm a hungry bee! \\r\nHelp me collect\nall of the nectar from the flowers using the fewest number of blocks."
      grade3_Conditionals_10_instruction: |-
        There's a lot happening here!\\r
        \\r
        Use
        what you've learned to collect all of the nectar and then make the honey.
      grade3_Conditionals_11_instruction: |-
        Let's put everything together!\\r
        \\r
        Use
        what you've learned to help me collect nectar only from flowers that have
        it, using as few blocks as possible.  Don't forget to make honey at the end.
      grade3_Conditionals_12_instruction: "This stair step pattern should look familiar.  \\r\n\\r\nCan\nyou collect nectar only from the flowers that have some, using as few blocks\nas possible?"
      grade3_Conditionals_2_instruction: "Look at all of that nectar!\\r\n\\r\nHelp\nme collect the nectar and make the honey using as few blocks as you can.  "
      grade3_Conditionals_3_instruction: "Be careful not to collect nectar from\na purple flower if it doesn't have any. \\r\nYou must first check if the nectar\nis equal to 1 using the `if nectar` block."
      grade3_Conditionals_8_instruction: "I wonder what's out there!\\r\n\\r\nHelp\nme fly around the yard and collect nectar only from the flowers that have\nsome. "
      grade3_Debugging_5_instruction: "That flower looks tasty! \\r\n\\r\nFix the\nerror(s) to collect all of the nectar.  You can now use both run and step."
      grade3_Debugging_6_instruction: |-
        What a sweet challenge!\\r
        \\r
        Fix the error(s)
        to collect all of the nectar.
      grade3_Debugging_9_instruction: |-
        "Bee" patient with this one!\\r
        \\r
        You
        will need to fix a couple of things in this program to collect all of the
        nectar and make all of the honey.
      grade3_Loops_10_instruction: |-
        Such a busy bee!\\r
        \\r
        Help bee collect all
        of the nectar and make all of the honey with the fewest blocks possible.
      grade3_Loops_11_instruction: "The shape of this path is different than the\nothers. \\r\n\\r\nCan you collect all of the nectar using as few blocks as possible?"
      grade3_Loops_6_instruction: "How many times can loops help you in this puzzle?  \\r\n\\r\nLoops\nare your friend! Use a few of them to complete this puzzle with the fewest\nblocks possible."
      grade3_Loops_7_instruction: |-
        Those flowers look tasty!\\r
        \\r
        Collect nectar
        from each of the flowers using the fewest blocks possible.
      grade3_Loops_TeacherIDo_instruction: |-
        Those flowers look tasty!\\r
        \\r
        Collect nectar
        from each of the flowers using the fewest blocks possible.
      grade4_arist_nested_loop_polygons1_instruction: "Loop this design 10 times. \\r\n\\r\nHow much\ndo you have to turn each time you loop?"
      grade4_arist_nested_loop_polygons2_instruction: "Loop this shape 6 times. \\r\n\\r\nHow much\ndo you have to turn each time you loop? "
      grade4_arist_nested_loop_triangles5_instruction: |-
        Create a sun by nesting the starter code in
        another loop.\\r
        \\r
        To get this cool design with a hollow center, you'll
        need to jump forward by the length of the triangle before turning.
      grade4_artist_functions2_instruction: "Functions let you define new blocks! \\r\n\\r\nWe've\nmoved the blocks needed for drawing a square into a function called `draw\na square`. This time, use the `draw a square` function to create the glasses.\n\\r\n\\r\nThe squares are 75 pixels apart."
      grade4_artist_nestedLoops_challenge_instruction: |-
        Click here to see the full instructions again!\\r
        \\r
        Here
        is the code for an interesting shape.  What happens when you repeat it multiple
        times, turning between each iteration?   Notice that the turns in this shape
        add up to 420 degrees, which means that when your artist is done drawing,
        it will be facing a different direction than when you started.  That new direction
        is exactly 60 degrees to the right of where you began.
      grade4_artist_nested_loop_polygons1_instruction: "Loop this design 10 times. \\r\n\\r\nHow much\ndo you have to turn each time you loop?"
      grade4_artist_nested_loop_triangles5_instruction: |-
        Create a sun by nesting the starter code in
        another loop.\\r
        \\r
        To get this cool design with a hollow center, you'll
        need to jump forward by the length of the triangle before turning.
      grade4_bee_conditionals_quantum2_instruction: "More clouds! \\r\n\\r\nCheck underneath\nevery cloud to see if it is hiding a flower before you get nectar.  \\r\n\\r\nRemember:\nNot all clouds hide the same thing!"
      grade4_bee_conditionals_quantum5_instruction: |-
        There will be either a flower or a honeycomb
        under each of those clouds!\\r
        \\r
        Use the `if/else` block to collect nectar
        if there is a flower.\\r
        Otherwise, make honey (because there is a honeycomb).
      grade4_playlab_test_instruction: |-
        Use the right arrow to throw pie.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a piece of pie. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      grade4_review_artist1_instruction: "សួស្ដី, ខ្ញុំ​គឺជា​វិចិត្រករ។ អ្នក​អាច​សរសេរ​កូដ​បញ្ជា​ឲ្យ​ខ្ញុំ​គូរ​អ្វី​ក៏​បាន​ដែរ។\nសូម​ប្រើ​ប្លុក​ពីរបី ដើម្បី​បញ្ជា​ឲ្យ​ខ្ញុំ​គូរ​ពី​លើ​បន្ទាត់​ពណ៌​ប្រផេះ\nដូច​ក្នុង​រូប។ (បន្ទាត់​នីមួយៗ​មាន​ប្រវែង 100 ភីកសែល)"
      grade4_review_bee3_instruction: |-
        Such a busy bee!\\r
        \\r
        Help bee collect all
        of the nectar and make all of the honey with the fewest blocks possible.
      grade5_artist_binary1_instruction: "Binary is a way of representing information\nusing only two options.  Here, we're going to use the options \"off\" (represented\nby the number 0) and \"on\" (represented by the number 1).  \\r\n\\r\nWe've\nprovided you with a grid of \"pixels\" that you can walk through and make\ndesigns by turning on only certain squares.  Can you have the artist draw\n\"01010101\" in binary in the first row?"
      grade5_artist_binary2_instruction: "Here's a function that takes a binary\nstring of 1's and 0's and instructs the artist to follow them from left\nto right, top to bottom.  The artist will fill-in the squares when it sees\na 1 and ignore the square when it sees a 0. \\r\n\\r\nRun this code to see how\nthe artist uses binary to draw this pattern."
      grade5_artist_binary9_instruction: |-
        Here's a higher resolution
        canvas to draw on - 16 pixels by 16 pixels!\\r
        \\r
        See what happens when we
        start to get creative with the bits?
      grade5_artist_for_loops5_instruction: |-
        Just one little change to the code
        from the last image can create this drawing. Can you figure out what that
        change is?\\r
        \\r
        Hint:  You need to remove something!
      grade5_artist_for_loops9_instruction: |-
        Let's put it all together!  Using
        your knowledge of `for` loops and the `counter` variable, create this drawing
        where each shape has two more sides than the last.  Make sure that each side
        is 10 times as long as the number of sides in the polygon.\\r
        \\r
        Very little
        of the code has been provided for you.
      grade5_artist_for_loopsfreeplay11_instruction: |-
        Free-Play Inspiration: You've
        now learned everything you need to know to make a pattern like this! If this
        picture inspires you, try to make something similar. Otherwise, create something
        all your own.\\r
        \\r
        Need a hint? Click here.
      grade5_artist_functionparameters10_instruction: "Free Play Inspiration: You've\nnow learned everything you need to know to make a pattern like this! If this\npicture inspires you, try to make something similar. Otherwise, create something\nall your own.\\r\n \\r\nWant to know how our inspiration pattern was made? "
      grade5_artist_variables_freeplay14_instruction: |-
        Free Play: Check it out! Now your algorithm
        is nested within one more loop. Experiment with changing the values of your
        two variables to draw cool patterns.\\r
        \\r
        For even more effect, try playing
        with color!  Use random colors inside loops to see how it changes your design.
      grade5_artist_variables_freeplay15_instruction: |-
        Want a second peek at the inspiration
        design or the hints?  Click here!\\r
        \\r
        Otherwise, make a design all your
        own!
      grade5_artist_variables_hexagons1_instruction: "Let's try it again! \\r\n\\r\nCan you\nset the `length` variable to 60 to make this cool design with hexagons?"
      grade5_artist_variables_octagons13_instruction: "When a shape has lots of sides, each\nside needs to be shorter if you want the whole pattern to fit on the screen.\n\\r\nLet's recreate the algorithm for this amazing pattern, but instead of\nmanually setting the `length` variable, let's use a math block with the `sides`\nvariable inside to make sure that each shape fits correctly. The perimeter\nof each polygon is 300 pixels.\\r\nNeed some hints?  Click here."
      grade5_artist_variables_pentagon8_instruction: |-
        Use what you learned in the last puzzle
        to create this hexagon using the "sides" variable.\\r
        \\r
        See how you could
        change just one value to draw a triangle,  square, pentagon, or octagon?
      grade5_artist_variables_pentagons1_instruction: "Draw this pattern of pentagons with\n100 pixel sides by setting the right value for `length` and dropping the `length`\nvariable into all of the the correct places. \\r\n\\r\nSee how you only have\nto set the value for `length` once, and the code uses the right value everywhere?"
      grade5_artist_variables_square7_instruction: |-
        Here’s some code that can draw any regular
        polygon. There’s a new variable called sides that is set to 4. Can you use
        the sides variable (along with the math block) to turn the right amount regardless
        of how many sides there are in the polygon?\\r
        \\r
        Click here to go back to
        the hint!
      grade5_playlab_variables12_instruction: "Let's have some fun! Look at the\ncode provided to see if you can figure out what each block does.  \\r\nWhen\nyou're done, use the arrow keys to control Dog and collect all of the flags.\\r\nNOTE:\nYou don't need to make any changes to the program"
      grade5_playlab_variables6_instruction: |-
        Use the right arrow to throw pie.\\r
        \\r
        In
        our game, how should we score points? Add 1 to your "points" variable each
        time Dog hits Cat with a piece of pie. Use the "when actor 2 touches anything"
        event to trigger an update to your score. You can increment your variable
        by setting "points = points + 1." Get your score up to 10 (going one at
        a time!) to pass the level.
      grade5_playlab_variables71_instruction: "Here's our game from an earlier stage,\nbut most of the code is hidden. There’s a new function `score_points.`\\r\n\\r\nEdit\nthe function so that a new parameter called `points` can be added to `player_score`.\n\\r\n\\r\nThe variable `player_score` should increase each time Dog tags Cat\nwith pie, and decrease each time that Cat tags Dog with a sandwich.\\r\n\\r\nNote:\nWhen you're done, click \"Run\" to play.  When Dog scores 6 points, you will\nmove on to the next puzzle. "
      grade5_playlab_variables81_instruction: "We've added one last function for\nyou. \\r\n\\r\nUse an \"if\" statement to program your game to call the \"level_up\"\nfunction only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample: \"player_score\" > 6\\r\n\\r\nPlay the game, and make it to level 3\nto move to the next puzzle. "
      grade5_playlab_variables9_instruction: "Here's a function called `patrol`.\n\\r\n\\r\nEdit `patrol` to move Cat up 400 pixels and then down 400 pixels."
      grade5_playlab_variables_freeplay_instruction: "Free Play time! Here are all of the\nvariables we've played with so far in this stage, as well as a few more in\ncase you want them. \\r\n\\r\nNotice that there are now so many blocks in our\ntoolbox that they need to be organized!  Here, we've put each piece into\nan appropriate category.  Take some time to explore everything that is available.\nWhen you're done browsing, make a game or story using repeats, variables,\nand events.  \\r\n\\r\nHint: scroll down to see all the commands in the workspace."
      level 'grade3_Loops_10_instruction: |-
        Such a busy bee!\\r
        \\r
        Help bee collect all
        of the nectar and make all of the honey with the fewest blocks possible.
      level 'grade3_Loops_11_instruction: "The shape of this path is different than the\nothers. \\r\n\\r\nCan you collect all of the nectar using as few blocks as possible?"
      level 'grade3_Loops_6_instruction: "How many times can loops help you in this puzzle?  \\r\n\\r\nLoops\nare your friend! Use a few of them to complete this puzzle with the fewest\nblocks possible."
      level 'grade3_Loops_7_instruction: |-
        Those flowers look tasty!\\r
        \\r
        Collect nectar
        from each of the flowers using the fewest blocks possible.
