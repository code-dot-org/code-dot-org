---
zh-CN:
  data:
    blocks:
      Dancelab_atTimestamp:
        text: 在 {TIMESTAMP} {UNIT} 后
        options:
          UNIT:
            '"measures"': 衡量
            '"seconds"': " 秒"
      Dancelab_changeColorBy:
        text: 将 {COLOR} {METHOD} 改动 {AMOUNT}
        options:
          METHOD:
            '"hue"': 色调
            '"saturation"': 饱和度
            '"brightness"': 亮度
      Dancelab_changeMoveEachLR:
        text: '在 GROUP[0] 中，进行 循环查找   {MOVE} {DIR} '
        options:
          GROUP:
            sprites: 所有
            '"ALIEN"': 所有外星人
            '"BEAR"': 所有熊
            '"CAT"': 所有猫
            '"DOG"': 所有狗
            '"DUCK"': 所有鸭子
            '"FROG"': 所有青蛙
            '"MOOSE"': 所有老鼠
            '"PINEAPPLE"': 所有菠萝
            '"ROBOT"': 所有机器人
            '"SHARK"': 所有鲨鱼
          MOVE:
            MOVES.ClapHigh: 用力鼓掌
            MOVES.Clown: 小丑
            MOVES.Fresh: 新鲜
            '"next"': "(下一步)"
            '"prev"': "(前一步)"
            '"rand"': 随机
            MOVES.Rest: 没有
          DIR:
            '1': "→"
            "-1": "←"
      Dancelab_changeMoveLR:
        options:
          MOVE:
            MOVES.ClapHigh: 用力鼓掌
            MOVES.Clown: 小丑
            MOVES.Fresh: 新鲜
            '"next"': "(下一步)"
            '"prev"': "(前一步)"
            '"rand"': 随机
            MOVES.Rest: 没有
          DIR:
            '1': "→"
            "-1": "←"
      Dancelab_changePropBy:
        text: 将 {SPRITE} {PROPERTY} 改为 {VAL}
        options:
          PROPERTY:
            '"scale"': 大小
            '"width"': 宽度
            '"height"': 高度
            '"rotation"': 旋转
      Dancelab_doMoveEachLR:
        options:
          GROUP:
            sprites: 所有
            '"ALIEN"': 所有外星人
            '"BEAR"': 所有熊
            '"CAT"': 所有猫
            '"DOG"': 所有狗
            '"DUCK"': 所有鸭子
            '"FROG"': 所有青蛙
            '"MOOSE"': 所有老鼠
            '"PINEAPPLE"': 所有菠萝
            '"ROBOT"': 所有机器人
            '"SHARK"': 所有鲨鱼
          MOVE:
            MOVES.ClapHigh: 用力鼓掌
            MOVES.Clown: 小丑
            MOVES.Fresh: 新鲜
            '"next"': "(下一步)"
            '"prev"': "(前一步)"
            '"rand"': 随机
            MOVES.Rest: 没有
          DIR:
            '1': "→"
            "-1": "←"
      Dancelab_doMoveLR:
        options:
          MOVE:
            MOVES.ClapHigh: 用力鼓掌
            MOVES.Clown: 小丑
            MOVES.Fresh: 新鲜
            '"next"': "(下一步)"
            '"prev"': "(前一步)"
            '"rand"': 随机
            MOVES.Rest: 没有
          DIR:
            '1': "→"
            "-1": "←"
      Dancelab_eval:
        text: 执行 {CODE}
      Dancelab_everySeconds:
        text: '每次 {N} {UNIT} '
        options:
          UNIT:
            '"measures"': 衡量
            '"seconds"': " 秒"
      Dancelab_everySecondsRange:
        text: 每个 {N} {UNIT} 要从 {START} 到 {STOP}
        options:
          UNIT:
            measures: 衡量
            seconds: 秒
      Dancelab_everyVerseChorus:
        text: '每个 {UNIT} '
        options:
          UNIT:
            '"verse"': 诗歌
            '"chorus"': 合唱
      Dancelab_getEnergy:
        text: 获得 {RANGE}
        options:
          RANGE:
            '"low"': 低音
            '"mid"': 中
            '"high"': 高音
      Dancelab_getProp:
        text: "{SPRITE} {PROPERTY}"
        options:
          PROPERTY:
            '"scale"': 大小
            '"width"': 宽度
            '"height"': 高度
            '"rotation"': 旋转
            '"tint"': 色调
      Dancelab_getTime:
        text: "{UNIT} 消失"
        options:
          UNIT:
            '"measures"': 衡量
            '"seconds"': 秒
      Dancelab_ifDanceIs:
        options:
          DANCE:
            '0': 用力鼓掌
            '1': 小丑
            '2': Dab
            '3': Double Jam
            '4': Drop
            '5': Floss
            '6': 新鲜
            '7': Kick
            '8': 没有
            '9': Roll
            '10': This or That
            '11': Thriller
      Dancelab_jumpTo:
        text: "{SPRITE} 跳到 {LOCATION}"
        options:
          LOCATION:
            "{x: 200, y: 100}": 顶部
            "{x: 200, y: 300}": 底部
            "{x: 100, y: 200}": 向左
            "{x: 300, y: 200}": 向右
            "{x: 200, y: 200}": 中央
            "{x: 100, y: 100}": 左上
            "{x: 300, y: 100}": 右上
            "{x: 100, y: 300}": 左下
            "{x: 300, y: 300}": 右下
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": 随机
      Dancelab_layoutSprites:
        text: 输出 {GROUP} 精灵为 {FORMAT}
        options:
          GROUP:
            sprites: 所有
            '"ALIEN"': 所有外星人
            '"BEAR"': 所有熊
            '"CAT"': 所有猫
            '"DOG"': 所有狗
            '"DUCK"': 所有鸭子
            '"FROG"': 所有青蛙
            '"MOOSE"': 所有老鼠
            '"PINEAPPLE"': 所有菠萝
            '"ROBOT"': 所有机器人
            '"SHARK"': 所有鲨鱼
          FORMAT:
            '"grid"': 网格
            '"row"': 行
            '"column"': 列
            '"random"': 随机
      Dancelab_makeNewDanceSprite:
        text: 在 {LOCATION} 创建一个叫做 {NAME} 的新 {COSTUME}
        options:
          COSTUME:
            '"ALIEN"': 外星人
            '"BEAR"': 玩具熊
            '"CAT"': 猫
            '"DUCK"': 鸭子
            '"FROG"': 青蛙
            '"MOOSE"': 驼鹿
            '"PINEAPPLE"': 菠萝
            '"ROBOT"': 机器人
            '"SHARK"': 鲨鱼
          LOCATION:
            "{x: 200, y: 100}": 顶部
            "{x: 200, y: 300}": 底部
            "{x: 100, y: 200}": 向左
            "{x: 300, y: 200}": 向右
            "{x: 200, y: 200}": 中央
            "{x: 100, y: 100}": 左上
            "{x: 300, y: 100}": 右上
            "{x: 100, y: 300}": 左下
            "{x: 300, y: 300}": 右下
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": 随机
      Dancelab_makeNewDanceSpriteGroup:
        options:
          N:
            '2': '2'
            '3': '3'
            '4': '4'
            '5': '5'
            '6': '6'
            '7': '7'
            '8': '8'
            '9': '9'
            '10': '10'
          COSTUME:
            '"ALIEN"': 外星人
            '"MOOSE"': 驼鹿
            '"UNICORN"': 独角兽
          LAYOUT:
            '"grid"': 网格
            '"row"': 行
            '"column"': 列
            '"random"': 随机
      Dancelab_mixColors:
        text: 混合 {COLOR1} 和 {COLOR2}
      Dancelab_nMeasures:
        text: "{N} 度量"
      Dancelab_onPointerDown:
        text: 当指针按下时
      Dancelab_onPointerDrag:
        text: 当指针拖动时
      Dancelab_onPointerUp:
        text: 当指针向上时
      Dancelab_randomColor:
        text: 随机颜色
      Dancelab_setBackground:
        text: 设置背景颜色为 {COLOR}
      Dancelab_setBackgroundEffect:
        text: 设置背景效果为 {EFFECT}
        options:
          EFFECT:
            '"none"': 没有
            '"disco"': 方形
            '"rainbow"': 彩色
            '"diamonds"': 菱形
            "['disco', 'rainbow', 'diamonds'][randomNumber(0,2)]": 随机
      Dancelab_setDanceSpeed:
        text: 将 {SPRITE} 跳舞速度改为 {SPEED}
        options:
          SPEED:
            '1': 正常
            '2': 快
            '4': 非常快
            '0.5': 慢
            '0.25': 非常慢
      Dancelab_setForegroundEffect:
        text: 设置前景效果为 {EFFECT}
        options:
          EFFECT:
            '"none"': 没有
            "['strobe', 'rain', 'raining_tacos'][randomNumber(0,2)]": 随机
      Dancelab_setProp:
        text: 设置 {SPRITE} {PROPERTY} 为 {VAL}
        options:
          PROPERTY:
            '"scale"': 大小
            '"width"': 宽度
            '"height"': 高度
            '"rotation"': 旋转
            '"tint"': 色调
      Dancelab_setPropEach:
        options:
          GROUP:
            sprites: 所有
            '"ALIEN"': 所有外星人
            '"BEAR"': 所有熊
            '"CAT"': 所有猫
            '"DOG"': 所有狗
            '"DUCK"': 所有鸭子
            '"FROG"': 所有青蛙
            '"MOOSE"': 所有老鼠
            '"PINEAPPLE"': 所有菠萝
            '"ROBOT"': 所有机器人
            '"SHARK"': 所有鲨鱼
          PROPERTY:
            '"scale"': 大小
            '"width"': 宽度
            '"height"': 高度
            '"rotation"': 旋转
            '"tint"': 色调
      Dancelab_setPropRandom:
        options:
          PROPERTY:
            '"scale"': 大小
            '"width"': 宽度
            '"height"': 高度
            '"rotation"': 旋转
      Dancelab_setVisibleEach:
        text: 设置 {THIS} 可见度为 {VISIBILITY}
        options:
          THIS:
            sprites: 所有
            '"alien"': 外星人
            '"mrwiggles"': MrWiggles
            '"pizza"': 比萨
            '"unicorn"': 独角兽
          VISIBILITY:
            'true': 可见
            'false': 隐藏
      Dancelab_startMapping:
        text: "{SPRITE} 开始 {PROPERTY} 为 {RANGE}"
        options:
          PROPERTY:
            '"scale"': 大小
            '"width"': 宽度
            '"height"': 高度
            '"rotation"': 旋转
            '"tint"': 色调
          RANGE:
            '"bass"': 低音
            '"mid"': 中
            '"treble"': 高音
      Dancelab_stopMapping:
        text: "{SPRITE} 停止 {PROPERTY} 为 {RANGE}"
        options:
          PROPERTY:
            '"scale"': 大小
            '"width"': 宽度
            '"height"': 高度
            '"rotation"': 旋转
            '"direction"': 移动方向
            '"tint"': 色调
          RANGE:
            '"bass"': 低音
            '"mid"': 中
            '"treble"': 高音
      Dancelab_whenKey:
        text: 当 {KEY} 按下时
        options:
          KEY:
            '"up"': 向上
            '"down"': 向下
            '"left"': 向左
            '"right"': 向右
            '"space"': 空间
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      Dancelab_whenPeak:
        text: 当 {RANGE} 达到最高
        options:
          RANGE:
            '0': 低音
            '1': 中
            '2': 高音
      Dancelab_whenSetup:
        text: 设置
      Dancelab_whenSetupSong:
        options:
          SONG:
            '"peas"': 黑眼豆豆合唱团 - 我有一种感觉
      gamelab_add:
        text: 将 {SPRITE} 加入组 {THIS}
      gamelab_addBehaviorSimple:
        text: 精灵 {SPRITE} 开始 {BEHAVIOR}
      gamelab_bounceOff:
        text: "{SPRITE} 弹离 {TARGET}"
      gamelab_bounceOffEdges:
        text: "{SPRITE} 弹离边缘"
      gamelab_changeColor:
        text: 将 {COLOR} {METHOD} 改动 {AMOUNT}
        options:
          METHOD:
            '"tint"': 色调
            '"tone"': 语气
            '"shade"': 色度
      gamelab_changeColorBy:
        text: 将 {COLOR} {METHOD} 改动 {AMOUNT}
        options:
          METHOD:
            '"hue"': 色调
            '"saturation"': 饱和度
            '"brightness"': 亮度
      gamelab_changePropBy:
        text: 将 {SPRITE} {PROPERTY} 改为 {VAL}
        options:
          PROPERTY:
            '"scale"': 大小
            '"rotation"': 旋转
            '"x"': x位置
            '"y"': y位置
            '"direction"': 移动方向
      gamelab_clickedOn:
        text: 当 {SPRITE} 被点击时
      gamelab_comment:
        text: '注释: {COMMENT}'
      gamelab_console.log:
        text: 日志消息 {MESSAGE}
      gamelab_createNewSprite:
        text: "制作一个新的精灵 \n 叫做 {NAME} \n 服装为 {COSTUME} \n 位于 {LOCATION}"
      gamelab_debugSprite:
        text: 调试 {SPRITE} {VAL}
        options:
          VAL:
            'true': 真
            'false': 错
      gamelab_destroy:
        text: 移除 {THIS}
      gamelab_displace:
        text: "{THIS} 模块阻止了 {SPRITE} 移动"
      gamelab_distance:
        text: 从 {LOCATION1} 到 {LOCATION2} 的距离
      gamelab_edgesDisplace:
        text: 边缘模块阻止了 {SPRITE} 移动
      gamelab_enableDebug:
        text: 启用调试
      gamelab_eval:
        text: 执行 {CODE}
      gamelab_firstTouched:
        text: 首先碰到的精灵
      gamelab_getAnim:
        options:
          COSTUME:
            '"costume"': 服装
      gamelab_getDirection:
        text: "{SPRITE} 移动方向"
      gamelab_getFrameDelay:
        text: "{THIS} 帧延迟"
      gamelab_getProp:
        text: "{SPRITE} {PROPERTY}"
        options:
          PROPERTY:
            '"scale"': 大小
            '"rotation"': 旋转
            '"x"': x位置
            '"y"': y位置
            '"direction"': 移动方向
            '"tint"': 色调
      gamelab_groupLength:
        text: "{THIS} 中的精灵数量"
      gamelab_hasBehavior:
        text: "{SPRITE} 当前在 {BEHAVIOR}"
      gamelab_hideTitleScreen:
        text: 隐藏标题屏幕
      gamelab_hsbColor:
        text: |-
          HSB 颜色
          H{HUE}S{SATURATION}B{BRIGHTNESS}
      gamelab_isTouching:
        text: "{THIS} 正在触碰 {TARGET}"
      gamelab_isTouchingEdges:
        text: "{SPRITE} 正在触碰边缘"
      gamelab_joystickDirection:
        text: 游戏杆方向
      gamelab_jumpTo:
        text: "{SPRITE} 跳到 {LOCATION}"
      gamelab_keyDown:
        text: 键被按下 {KEY}
      gamelab_locationAdd:
        text: "{LOC1} {OPERATOR} {LOC2}"
        options:
          OPERATOR:
            "'plus'": "\\+"
            "'minus'": "\\-"
      gamelab_locationAt:
        text: '位置 x: {X} y: {Y}'
      gamelab_locationConstant:
        text: "{DIR}"
        options:
          DIR:
            "'north'": 北
            "'south'": 南
            "'east'": 东
            "'west'": 西
      gamelab_locationDelta:
        text: "{LOCATION} 的 {DIR} {DISTANCE} 像素"
        options:
          DIR:
            "'north'": 北
            "'south'": 南
            "'east'": 东
            "'west'": 西
            "'random'": 随机
      gamelab_locationEast:
        text: 东
      gamelab_locationMouse:
        text: 鼠标位置
      gamelab_locationNorth:
        text: 北
      gamelab_locationOf:
        text: "{SPRITE} 的位置"
      gamelab_locationSouth:
        text: 南
      gamelab_locationWest:
        text: 西
      gamelab_location_picker:
        text: "{LOCATION}"
      gamelab_location_variable_get:
        text: "{VAR} 的位置"
      gamelab_location_variable_set:
        text: 设置 {VAR} 的位置到 {VAL}
      gamelab_makeNewGroup:
        text: 创建新组
      gamelab_mirrorSprite:
        text: "{SPRITE} 面向 {DIRECTION}"
        options:
          DIRECTION:
            '"right"': 向右
            '"left"': 向左
      gamelab_mixColors:
        text: 混合 {COLOR1} 和 {COLOR2}
      gamelab_mouseDown:
        text: 鼠标已按下
      gamelab_mouseLocation:
        text: 鼠标位置
      gamelab_moveDown:
        text: "{THIS} 向下移动"
      gamelab_moveForward:
        text: 向前移动 {SPRITE} {DISTANCE} 像素
      gamelab_moveInDirection:
        text: 移动 {SPRITE} {DISTANCE} 像素，方向 {DIRECTION}
        options:
          DIRECTION:
            '"North"': 北
            '"East"': 东
            '"South"': 南
            '"West"': 西
      gamelab_moveLeft:
        text: "{THIS} 向左移动"
      gamelab_moveRight:
        text: "{THIS} 向右移动"
      gamelab_moveToward:
        text: 朝 {TARGET} 移动 {SPRITE} 距离 {DISTANCE}
      gamelab_moveUp:
        text: "{THIS} 向上移动"
      gamelab_pointInDirection:
        text: 指向 {SPRITE} {DIRECTION}
        options:
          DIRECTION:
            '"North"': 北
            '"East"': 东
            '"South"': 南
            '"West"': 西
      gamelab_pointToward:
        text: 将 {SPRITE} 朝向 {LOCATION}
      gamelab_randColor:
        text: 随机颜色
      gamelab_randomColor:
        text: 随机颜色
      gamelab_randomLocation:
        text: 随机位置
      gamelab_removeAllBehaviors:
        text: "{SPRITE} 停止所有事情"
      gamelab_removeBehaviorSimple:
        text: 精灵 {SPRITE} 停止 {BEHAVIOR}
      gamelab_removeTint:
        text: 从 {THIS} 删除颜色
      gamelab_secondTouched:
        text: 第二次碰到精灵
      gamelab_setAnimation:
        text: 将 {THIS} 的服装改为 {ANIMATION}
      gamelab_setBackground:
        text: 设置背景颜色为 {COLOR}
      gamelab_setDirection:
        text: 设置 {SPRITE} 移动方向为 {DIRECTION}
      gamelab_setFrameDelay:
        text: 设置 {THIS} 帧延迟 {VAL}
      gamelab_setPosition:
        text: 将 {THIS} 移动到 {POSITION} 位置
        options:
          POSITION:
            "{x: 50, y: 50}": 左上
            "{x: 200, y: 50}": 顶部居中
            "{x: 350, y: 50}": 右上
            "{x: 50, y: 200}": 中上
            "{x: 200, y: 200}": 中央
            "{x: 350, y: 200}": 中间右方
            "{x: 50, y: 350}": 左下
            "{x: 200, y: 350}": 底部居中
            "{x: 350, y: 350}": 右下
            '"random"': 随机
      gamelab_setProp:
        text: 设置 {SPRITE} {PROPERTY} 为 {VAL}
        options:
          PROPERTY:
            '"scale"': 大小
            '"rotation"': 旋转
            '"x"': x位置
            '"y"': y位置
            '"direction"': 移动方向
            '"tint"': 色调
      gamelab_setSizes:
        text: 设置 {SPRITE} {PROPERTY} 为 {N}%
        options:
          PROPERTY:
            '"scale"': 大小
            '"width"': 宽度
            '"height"': 高度
      gamelab_setTint:
        text: 将 {THIS} 的颜色改为 {COLOR}
      gamelab_setup:
        text: 设置
      gamelab_showTitleScreen:
        text: 显示标题屏幕 {BREAK} 标题 {TITLE} 文本 {SUBTITLE}
      gamelab_spriteCostume:
        text: "{COSTUME}"
      gamelab_spriteDirection:
        text: "{DIRECTION}"
        options:
          DIRECTION:
            '"North"': 北
            '"East"': 东
            '"South"': 南
            '"West"': 西
      gamelab_spritesWhere:
        text: 精灵的 {PROPERTY} 为 {VALUE}
        options:
          PROPERTY:
            '"scale"': 大小
            '"x"': x位置
            '"y"': y位置
            '"costume"': 服装
            '"direction"': 移动方向
            '"rotation"': 旋转或方向
            '"tint"': 色调
      gamelab_spritesWhereFirst:
        text: 第一个 {VALUE}
      gamelab_spritesWhereGenerator:
        text: 精灵的 {PROPERTY} {OP} {VALUE}
        options:
          PROPERTY:
            '"scale"': 大小
            '"x"': x位置
            '"y"': y位置
            '"costume"': 服装
            '"direction"': 移动方向
            '"rotation"': 旋转或方向
            '"tint"': 色调
          OP:
            '"="': "="
            '">"': ">"
            '"<"': "\\<"
      gamelab_spritesWhereLast:
        text: 最后一个 {VALUE}
      gamelab_spritesWhereRandom:
        text: 在组 {VALUE} 中随机
      gamelab_thisBeginsBehaviorSimple:
        text: 精灵 {SPRITE} 开始 {BEHAVIOR}
      gamelab_turn:
        text: "{SPRITE} 转 {DIRECTION} {N} 度"
        options:
          DIRECTION:
            '"right"': 向右
            '"left"': 向左
      gamelab_whenDownArrow:
        text: 当下方向键按下时
      gamelab_whenJoystick:
        text: 当使用游戏杆时
      gamelab_whenKey:
        text: 当 {KEY} 按下时
        options:
          KEY:
            '"up"': 向上
            '"down"': 向下
            '"left"': 向左
            '"right"': 向右
            '"space"': 空间
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      gamelab_whenLeftArrow:
        text: 当按左方向键时
      gamelab_whenMouseClicked:
        text: 当鼠标点击时
      gamelab_whenPressedAndReleased:
        text: "当 {DIR} 按下\n{STATEMENT1} 当释放 \n{STATEMENT2}"
        options:
          DIR:
            "'up'": 向上
            "'down'": 向下
            "'left'": 向左
            "'right'": 向右
      gamelab_whenRightArrow:
        text: 当按右方向键时
      gamelab_whenStartAndStopTouching:
        text: |-
          当 {SPRITE1} 开始碰到 {SPRITE2} {STATEMENT1} 当它们不再接触
          {STATEMENT2}
      gamelab_whenTouching:
        text: 当 {SPRITE1} 碰到 {SPRITE2}
      gamelab_whenTouchingAny:
        text: 当 {SPRITE} 碰到任何 {GROUP}
      gamelab_whenTrue:
        text: 当 {CONDITION} 为真时
      gamelab_whenUpArrow:
        text: 当上方向键按下时
      gamelab_whileDownArrow:
        text: 当下方向键按下时
      gamelab_whileJoystick:
        text: 当使用游戏杆时
      gamelab_whileKey:
        text: 当 {KEY} 按下时
        options:
          KEY:
            '"up"': 向上
            '"down"': 向下
            '"left"': 向左
            '"right"': 向右
            '"space"': 空间
            '"a"': a
            '"w"': w
            '"s"': s
            '"d"': d
      gamelab_whileLeftArrow:
        text: 当按左方向键时
      gamelab_whileRightArrow:
        text: 当按右方向键时
      gamelab_whileTouching:
        text: 当 {SPRITE1} 碰到 {SPRITE2}
      gamelab_whileUpArrow:
        text: 当上方向键按下时
      gamelab_xLocationOf:
        text: "{SPRITE} 的x轴坐标"
      gamelab_yLocationOf:
        text: "{SPRITE} 的y坐标"
      Mikelab_addBehaviorSimple:
        text: 精灵 {SPRITE} 开始 {BEHAVIOR}
      Mikelab_changePropBy:
        text: 将 {PROPERTY} {SPRITE} 改为 {VAL}
        options:
          PROPERTY:
            '"scale"': 大小
            '"rotation"': 旋转
            '"x"': x位置
            '"y"': y位置
            '"direction"': 移动方向
      Mikelab_createNewSprite:
        text: "制作一个新的精灵 \n 叫做 {COSTUME} \n 服装为 {NAME} \n 位于 {LOCATION}"
        options:
          LOCATION:
            "{x: 200, y: 100}": 顶部
            "{x: 200, y: 300}": 底部
            "{x: 100, y: 200}": 向左
            "{x: 300, y: 200}": 向右
            "{x: 200, y: 200}": 中央
            "{x: 100, y: 100}": 左上
            "{x: 300, y: 100}": 右上
            "{x: 100, y: 300}": 左下
            "{x: 300, y: 300}": 右下
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": 随机
      Mikelab_edgesDisplace:
        text: 边缘模块阻止了 {SPRITE} 移动
      Mikelab_eval:
        text: 执行 {CODE}
      Mikelab_getProp:
        text: "{SPRITE} {PROPERTY}"
        options:
          PROPERTY:
            '"scale"': 大小
            '"rotation"': 旋转
            '"x"': x位置
            '"y"': y位置
            '"direction"': 移动方向
      Mikelab_hasBehavior:
        text: "{SPRITE} 当前在 {BEHAVIOR}"
      Mikelab_locationAt:
        text: '位置 x: {X} y: {Y}'
      Mikelab_location_picker:
        text: "{LOCATION}"
      Mikelab_randomColor:
        text: 随机颜色
      Mikelab_removeBehaviorSimple:
        text: 精灵 {SPRITE} 停止 {BEHAVIOR}
      Mikelab_setBG:
        options:
          BG:
            '"https://studio.code.org/api/v1/animation-library/04L4sdTODkNZF1OHf4qO_I.Al3QP43wA/category_backgrounds/city.png"': 城市
      Mikelab_setProp:
        text: 设置 {PROPERTY} {SPRITE} 为 {VAL}
        options:
          PROPERTY:
            '"scale"': 大小
            '"rotation"': 旋转
            '"x"': x位置
            '"y"': y位置
            '"direction"': 移动方向
      Mikelab_setTint:
        text: 将 {SPRITE} 的颜色改为 {COLOR}
      Mikelab_showScoreboard:
        options:
          CORNER:
            '"right"': 向右
            '"left"': 向左
      Mikelab_whenClickedOn:
        text: 当 {SPRITE} 被点击时
      Mikelab_whenKeyPressed:
        text: 当 {KEY} 按下时
        options:
          KEY:
            '"up"': 上方向键
            '"down"': 下方向键
            '"left"': 左方向键
            '"right"': 右方向键
            '"w"': 西
            '"a"': A
            '"s"': 南
            '"d"': D
      Mikelab_whenKeyReleased:
        options:
          KEY:
            '"up"': 上方向键
            '"down"': 下方向键
            '"left"': 左方向键
            '"right"': 右方向键
            '"w"': 西
            '"a"': A
            '"s"': 南
            '"d"': D
      Mikelab_whenMouseClicked:
        text: 当鼠标点击时
      Mikelab_whenTouchesAny:
        text: 当{SPRITE} 触及任何精灵时
      Mikelab_whileKeyPressed:
        options:
          KEY:
            '"up"': 上方向键
            '"down"': 下方向键
            '"left"': 左方向键
            '"right"': 右方向键
      Mikelab_whileTouchingAny:
        text: |-
          当{SPRITE} 碰到任何精灵
          {STATEMENT}
      Mikelab_xLocationOf:
        text: "{SPRITE} 的x轴坐标"
      Mikelab_yLocationOf:
        text: "{SPRITE} 的y坐标"
      RyanLab_moveForward:
        text: 向前移动
      RyanLab_turnLeft:
        text: 向左转
      RyanLab_turnRight:
        text: 向右转
      Vector_createSpriteWith:
        text: |-
          创建精灵
          执行 {STATEMENT}
      Vector_log:
        text: 日志消息 {MESSAGE}
      Vector_positionCenter:
        text: 中央
      Vector_push:
        text: 设置速度为 {VECTOR}
      Vector_randomLocation:
        text: 随机位置
      Vector_setColor:
        text: 设置颜色为 {COLOR}
      Vector_setSize:
        text: 设置宽度为 {WIDTH} 高度为 {HEIGHT}
      Vector_teleportTo:
        text: 设置位置为 {POSITION}
      Vector_vectorNorth:
        text: 北
      Vector_where:
        text: 当每个的 {PROPERTY} 为 {VALUE} 时执行 {STATEMENT}
        options:
          PROPERTY:
            "'shapeColor'": 颜色
      aalab_changeGroupPropBy:
        options:
          PROPERTY:
            '"scale"': 大小
            '"rotation"': 旋转
            '"x"': x位置
            '"y"': y位置
            '"direction"': 移动方向
      aalab_spritesWhere:
        text: 精灵的 {PROPERTY} 为 {VALUE}
        options:
          PROPERTY:
            '"scale"': 大小
            '"x"': x位置
            '"y"': y位置
            '"costume"': 服装
            '"direction"': 移动方向
            '"rotation"': 旋转或方向
            '"tint"': 色调
      craft_ifPath:
        text: |-
          一直{DIR}
          {STATEMENT}
        options:
          DIR:
            "'ahead'": 前面
            "'right'": 向右转
            "'left'": 向左转
      craft_ifStandingOn:
        text: |-
          站在{TYPE}
          {STATEMENT}
        options:
          TYPE:
            "'blueCoralBlock'": 蓝色珊瑚
            "'redCoralBlock'": 红色珊瑚
            "'sand'": 沙子
            "'wool_blue'": 深水
            "'planksOak'": 橡木板
            "'seaLantern'": 海晶灯
      craft_ifStandingOnLimit:
        text: |-
          站在{TYPE}
          {STATEMENT}
        options:
          TYPE:
            "'sand'": 沙子
            "'darkPrismarine'": 暗海晶石
            "'seaLantern'": 海晶灯
      craft_log:
        text: 日志消息 {MESSAGE}
      craft_moveForward:
        text: 向前移动
      craft_placeBlock:
        text: 放下{blockType}
        options:
          blockType:
            '"strippedOak"': 去皮橡树
            '"strippedDarkOak"': 去皮深色橡树
            '"stoneBricks"': 石砖
            '"mossyStoneBricks"': 苔石砖
            '"crackedStoneBricks"': 裂石砖
            '"decorativeStoneBricks"': 装饰性石砖
            '"blueCoralBlock"': 蓝色珊瑚区块
            '"pinkCoralBlock"': 粉色珊瑚区块
            '"magentaCoralBlock"': 品红色珊瑚区块
            '"redCoralBlock"': 红色珊瑚区块
            '"yellowCoralBlock"': 黄色珊瑚区块
            '"blueDeadCoralBlock"': 蓝色死亡珊瑚区块
            '"pinkDeadCoralBlock"': 粉色死亡珊瑚区块
            '"magentaDeadCoralBlock"': 品红色死亡珊瑚区块
            '"readDeadCoralBlock"': 红色死亡珊瑚区块
            '"yellowDeadCoralBlock"': 黄色死亡珊瑚区块
            '"prismarine"': 海晶石
            '"darkPrismarine"': 暗海晶石
            '"seaLantern"': 海晶灯
            '"packedIce"': 浮冰
            '"blueIce"': 蓝色冰
            '"blackConcrete"': 黑色混凝土
            '"seaGrass"': 海草
            '"kelp"': 海带
            '"polishedGranite"': 磨制花岗岩
      craft_placeTorch:
        text: 放下火把
      craft_repeatUntilConduit:
        text: |-
          重复，直至导管完成
          {STATEMENT}
      craft_repeatUntilGoal:
        text: |-
          重复，直至目标达成
          {STATEMENT}
      craft_spawnEntity:
        text: 生成{ENTITY}
      craft_turn:
        text: 转向{DIR}
        options:
          DIR:
            right: 右 ↻
            left: 左 ↺
