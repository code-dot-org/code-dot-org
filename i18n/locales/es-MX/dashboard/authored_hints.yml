es-MX:
  data:
    authored_hints:
      2-3 Artist 1 new_authored_hint:
        2-3_Artist_1_new_a: Si utilizas un bloque que me ayude a "avanzar 100 pixeles". Dibujaré una línea automáticamente.
        2-3_Artist_1_new_b: '¿Tienes problemas para girar en la esquina? Utiliza el bloque "girar a la derecha 90 grados".'
      2-3 Artist 11_authored_hint:
        2-3_Artist_11_a: '¿Tienes problemas con los ángulos? Necesitas realizar un giro de 360 grados en 8 vueltas. ¿Qué es un 360/8? '
      2-3 Artist 12_authored_hint:
        2-3_Artist_12_a: Existen 360 grados en un círculo, por lo que, si el artista gira 1 grado cada vez que pasa por el ciclo. Entonces tendrá que ir a través de el 360 veces.
      2-3 Artist 2 new_authored_hint:
        2-3_Artist_2_new_a: Parece que el artista no está apuntando en la dirección correcta. ¿Podrías hacerlo que gire antes de que dibuje la línea?
      2-3 Artist 3new_authored_hint:
        2-3_Artist_3new_a: '¿Qué es un 100-70? Basado en la descripción del problema, ¡indica lo alto que debe ser el sombrero!'
        2-3_Artist_3new_b: Parece que el artista no está apuntando en la dirección correcta. ¿Podrías hacerlo que gire antes de que dibuje la línea?
      2-3 Artist 4_authored_hint:
        2-3_Artist_4_a: Para terminar la casa, lo que necesitamos hacer es ¡dibujar un cuadrado!
      2-3 Artist 6_authored_hint:
        2-3_Artist_6_a: 'Para realizar esos pequeños ángulos, tendrás que ir *más allá* cada vez así como lo hiciste con el cuadrado.   '
        2-3_Artist_6_b: Dado que ya estoy de lado derecho, es más fácil ir hacia adelante, luego gira a la derecha para crear el triángulo.
        2-3_Artist_6_c: Cada lado del triángulo tienen el mismo tamaño como los lados del cuadrado...¡100 pixeles!
      2-3 Artist 7_authored_hint:
        2-3_Artist_7_a: La forma más fácil de resolver este rompecabezas es dibujar el primer cuadro y finalizar con que el artista apunte hacia abajo antes de comenzar con el segundo cuadro.
      2-3 Artist 8_authored_hint:
        2-3_Artist_8_a: Si cortas la mitad de 200, ¿qué tan anchos deben ser los pixeles de cada cuadro?
      2-3 Artist 9 NEW_authored_hint:
        2-3_Artist_9_a: Este diamante es realmente sólo un cuadrado de lado
      2-3 Artist 9 REPLACEMENT_authored_hint:
        step_size: Cada paso tiene 100 pixeles de ancho y 100 pixeles de alto.
      2-3 Artist 9_authored_hint:
        2-3_Artist_9_a: Este diamante es realmente un cuadrado, gira 45 grados.
        2-3_Artist_9_b: |-
          Antes de comenzar a dibujar el cuadro, ¡No olvides girar 45 grados a la izquierda al artista![](https://images.code.org/47cc2474e533667101a2d73b98da204e-image-1467744539967.gif)
      2-3 Artist Debugging 10_authored_hint:
        2-3_Artist_Debugging_10_a: Recuerda que si deseas que el panel de control sea 10 pixeles *más ancho*...asegúrate de **sumarle** 10 al número que cambies.
        2-3_Artist_Debugging_10_b: "**¡Prueba y error son permitidos!**\n\nEmpieza por cambiar un número a la vez.\n\nSi te llegas a perder, solo da click en \"Comenzar de nuevo\" y el código se habrá reiniciado."
      2-3 Artist Debugging 2_authored_hint:
        2-3_Artist_Debugging_2_a: 'Pista: cada hebra tiene una longitud de 75 pixeles.'
      2-3 Artist Debugging 3_authored_hint:
        2-3_Artist_Debugging_3_a: Una de las vueltas es 15 grados más pequeño.
        2-3_Artist_Debugging_3_b: Si el programa se ejecuta muy rápido, intenta aminorar la velocidad con la barra para ver qué está pasando.
      2-3 Artist Debugging 7_authored_hint:
        2-3_Artist_Debugging_7_a: '¿Qué ocurre si mueves o lanzas al artista hacia atrás, después de que dibuja la primera línea?'
      2-3 Artist Debugging 8_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          ¿Cuántas veces se repitió mi forma?
          
          ¿Cuántas veces se *debería* repetir la forma?
          
          ¿Dónde puedes modificar eso en el programa?
      2-3 Artist Debugging 9_authored_hint:
        2-3_Artist_Debugging_9_a: '¡El artista tiene que girar 60 grados más a la izquierda antes de empezar a dibujar!'
        2-3_Artist_Debugging_9_b: '¡No necesitas añadir otro bloque para que puedas girar completamente, solo añade 60 grados ''a la izquierda'' al bloque que ya tienes ahí!'
      2-3 Artist Functions 1 a_authored_hint:
        2-3_Artist_Functions_1_a: Cada cuadrado tiene 100 pixeles de lado, eso significa que deberás avanzar hacia adelante 175 pixeles antes de dibujar el segundo cuadrado.
        2-3_Artist_Functions_1_b: Es correcto dibujar líneas solapadas para hacer tus lentes.
      2-3 Artist Functions 1_authored_hint:
        2-3_Artist_Functions_1_a: Cada cuadrado tiene 100 pixeles de lado, eso significa que deberás avanzar hacia adelante 175 pixeles antes de dibujar el segundo cuadrado.
        2-3_Artist_Functions_1_b: Es correcto dibujar líneas solapadas para hacer tus lentes.
      2-3 Artist Functions 11 a_authored_hint:
        2-3_Artist_Functions_11_a: Vas a cambiar no solo el número y longitud de los lados dentro de la función, sino también el ángulo que el artista toma entre cada lado.
      2-3 Artist Functions 11_authored_hint:
        2-3_Artist_Functions_11_a: Vas a cambiar no solo el número y longitud de los lados dentro de la función, sino también el ángulo que el artista toma entre cada lado.
      2-3 Artist Functions 12 a_authored_hint:
        2-3_Artist_Functions_12_a: Prmero intenta ejecutar el código para ver lo que necesitas agregar.
      2-3 Artist Functions 12_authored_hint:
        2-3_Artist_Functions_12_a: Prmero intenta ejecutar el código para ver lo que necesitas agregar.
      2-3 Artist Functions 2 a_authored_hint:
        2-3_Artist_Functions_2_a: |-
          El programa debe:
          - Usar la función
          - Avanzar 100 + 75 pixeles
          - Usar la función
      2-3 Artist Functions 2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          El programa debe:
          - Usar la función
          - Avanzar 100 + 75 pixeles
          - Usar la función
      2-3 Artist Functions 3 a_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 3_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4 a_authored_hint:
        2-3_Artist_Functions_4_a: El artista debe girar 120 grados entre cada cuadrado para completar este diseño.
      2-3 Artist Functions 4_authored_hint:
        2-3_Artist_Functions_4_a: El artista debe girar 120 grados entre cada cuadrado para completar este diseño.
      2-3 Artist Loops New 11_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          Recuerda que el código del rompecabezas pasado era:
          
          ![](https://images.code.org/15288d042780242ec5edeed5204c6ebb-image-1469640792081.png)
        2-3_Artist_Loops_New_11_b: El nuevo giro deberá ir **al final** del código dentro del bucle.
      2-3 Artist Loops New 12_authored_hint:
        2-3_Artist Loops_New_12_a: Antes de empezar el diamante, el artista necesita girar 60 grados a la izquierda para estar en el camino correcto.
        2-3_Artist Loops_New_12_b: Después de que el artista avance 100 pixeles, necesitará girar 120 grados a la derecha para hacer la esquina aguda.
        2-3_Artist Loops_New_12_c: El artista solamente deberá girar 60 grados a la derecha para crear una esquina amplia.
      2-3 Artist Loops New 13_authored_hint:
        2-3_Artist_Loops_New_13_a: "Al final de cada diamante, el artista ya se encuentra en la dirección correcta para iniciar la que sigue.\n\nDebido a esto, no necesitamos agregar un bloque extra de 'gira a la izquierda'  antes de que comenzar de nuevo."
        2-3_Artist_Loops_New_13_b: "Para hacer cada diamente, el artista requerirá:\n- mover\n- girar a la derecha 120 grados\n- mover\n- girar a la derecha 60 grados\n\nLuego, ¡hazlo de nueva cuenta!"
      2-3 Artist Loops New 9_authored_hint:
        2-3_Artist_Loops_New_9_a: El artista necesita girar 45 grados a la derecha antes de que comience a dibujar.
        2-3_Artist_Loops_New_9_b: Esta V solo es la mitad del cuadrado. ¿Cuál sería el código para dibujar la mitad del cuadrado?
      2-3 Artist Nested Loops 1_authored_hint:
        2-3_Artist_Nested_Loops_1_a: Recuerda poner todos los bloques grises dentro del ciclo.
      2-3 Artist Nested Loops 3_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "¿Requieres ayuda con los ángulos?\n**360/12 = 30**"
        2-3_Artist_Nested_Loops_3_b: Recuerda poner todo el código gris y tu bloque de girar dentro de un bucle.
      2-3 Artist Nested Loops 4_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "¿Requieres ayuda con los ángulos?\n**360/12 = 30**"
      2-3 Artist Nested Loops 5_authored_hint:
        2-3_Artist_Nested_Loops_5_a: "Utilice el bloque 'salto adelante' para llegar desde la parte superior de una plaza al lugar donde se iniciará la siguiente. Si sus plazas son 20 píxeles de alto y 20 píxeles apartes, ¿Cuánto necesita saltar?"
      2-3 Artist Nested Loops 7_authored_hint:
        2-3_Artist_Nested_Loops_7_a: "¿Hasta qué punto gire en cada bucle?  ¿Qué es 360/10?"
      2-3 Artist Nested Loops 9_authored_hint:
        2-3_Artist_Nested_Loops_9_a: |-
          ¿Necesita ayuda para encontrar el ángulo correcto? ** 360 / 12 = 30 **
      2-3 Bee Conditionals 14_authored_hint:
        2-3_Bee_Conditionals_14_a: '¿Tienes problema en resolver cómo bajar los bloques? ¡Intenta tratar a la flor roja de la misma manera que la flor morada!'
        2-3_Bee_Conditionals_14_b: Si la flor roja fuera morada, ¿Podrías averiguar como utilizar un ciclo extra de 'repetición' para reducir el código?
        2-3_Bee_Conditionals_14_c: "Intenta separar lo siguiente en dos partes:\n\n![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)\n\n1) Tomar néctar 3 veces:\n- Ve hacia adelante 5 veces\n- Revisa si existe néctar, de ser así: tómalo\n- Gira a la derecha\n\n2) Producir miel\n- Ve hacia adelante una vez\n- Fabrica dos mieles"
      2-3 Bee Conditionals 15_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Recuerda: las flores moradas solo tienen ya sea 0 o 1 de néctar y puede cambiar cada que ejecutes el programa.'
      2-3 Bee Conditionals 3_authored_hint:
        2-3_Bee_Conditionals_3_a: El código será más corto si utilizas un bucle por cada vez que avanzas, que recolectas néctar y cada que fabricas miel.
      2-3 Bee Conditionals 6_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Recuerda: las flores moradas cambian entre 0 y 1 cuando ejecutas el programa!'
      2-3 Bee Debugging 1_authored_hint:
        2-3_Bee_Debugging_1_a: Una vez que encuentres y arregles el bloque incorrecto ¿Ves algún patrón que pueda hacerse más simple utilizando un ciclo "repetir"?
      2-3 Bee Debugging 2_authored_hint:
        2-3_Bee_Debugging_2_a: Una vez que encuentres y arregles el bloque incorrecto ¿Ves algún patrón que pueda hacerse más simple utilizando un ciclo "repetir"?
      2-3 Bee Debugging 4_authored_hint:
        2-3_Bee_Debugging_4_a: '¿Hay algún lugar donde la abeja haga algo que no tiene sentido? ¿Qué pasa cuando cambias ese bloque?'
      2-3 Bee Functions 4_authored_hint:
        2-3_Bee_Functions_4_a: No tiene que usar un bucle con una función. Intenta moverte, usando la función, luego avanza y usa la función nuevamente.
      2-3 Bee Functions 6_authored_hint:
        2-3_Bee_Functions_6_a: No tiene que usar un bucle con una función. Intenta moverte, usando la función, luego avanza y usa la función nuevamente.
      2-3 Bee Functions 8_authored_hint:
        2-3_Bee_Functions_8_a: "Si el rompecabezas parece desafiante, intente construir su función un poco a la vez.   \n\nAgregue algunos  bloques , luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí! ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9_authored_hint:
        2-3_Bee_Functions_8_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        2-3_Bee_Functions_8_b: |-
          Recuerda construir tu código dentro del bloque de función verde. ! [] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2_authored_hint:
        2-3_Bee_Loops_2_a: Deberías terminar con cuatro bloques dentro de tu bucle.
      2-3 Bee Loops 3_authored_hint:
        2-3_Bee_Loops_3_a: Deberías tener 6 bloques dentro de tu bucle.
      2-3 Bee Loops 3B_authored_hint:
        2-3_Bee_Loops_3B_a: Necesitas dos bucles 'repetir' diferentes, un después del otro.
      2-3 Bee Loops 4_authored_hint:
        2-3_Bee_Loops_4_a: Deberías terminar con cinco bloques dentro de tu bucle.
      2-3 Bee Loops 4A_authored_hint:
        2-3_Bee_Loops_4A_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_4A_b: La última parte del programa puede terminarse escribiendo código al final de su programa fuera del bucle.
        2-3_Bee_Loops_4A_c: Si aún no puedes detectar los bucles, intenta codificarlo primero, luego ve lo que puedes combinar en un bucle 'repetir' al final.
      2-3 Bee Loops 5_authored_hint:
        2-3_Bee_Loops_5_a: Si no puedes detectar los bloques para colocar 'repetir` inmediatamente, comienza a codificar cada movimiento y busca un patrón.
      2-3 Bee Loops 6_authored_hint:
        2-3_Bee_Loops_6_a: Si no puedes indicar que debería ir en el bucle 'repeat', intenta arrastrar los bloques uno por uno y ve si puedes encontrar un patrón.
        2-3_Bee_Loops_6_b: Debería haber 6 bloques dentro de su bucle `repeat` cuando haya terminado.
      2-3 Bee Loops 7_authored_hint:
        2-3_Bee_Loops_7_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_7_b: 'Si no puedes programar el bucle desde el principio, intenta programarlo a lo largo del camino, luego busca un patrón.  '
      2-3 Maze 1_authored_hint:
        2-3_Maze_1_a: Para usar un bloque `avanzar`, arrástralo desde el área de la barra de herramientas al espacio de trabajo y conéctelo al bloque`al ejecutar`.
      2-3 Maze 16_authored_hint:
        2-3_Maze_16_a: Si el patrón es difícil de ver, intenta programarlo todo primero y mira qué cosas se repiten una y otra vez antes de colocar los bucles.
        2-3_Maze_16_b: "Para poner muchos bloques dentro de un bucle de \"repetición\", simplemente arrastre un bucle hacia el espacio de trabajo, luego arrastre todos los bloques desde el programa de inicio dentro de él!"
      2-3 Maze 6_authored_hint:
        2-3_Maze_6_a: '¡Hay dos formas de resolver este rompecabezas!'
      2-3 Maze Loops 17_authored_hint:
        2-3_Maze_Loops_17_a: Si el patrón es difícil de ver, intenta programarlo todo primero y mira qué cosas se repiten una y otra vez antes de colocar los bucles.
        2-3_Maze_Loops_17_b: '¿Se borró el código de inicio?  ¡Haga clic en "Comenzar de nuevo" para recuperarlo!'
      2-3 Maze Loops 18_authored_hint:
        2-3_Maze_Loops_18_a: Si el patrón es difícil de ver, intenta programarlo todo primero y mira qué cosas se repiten una y otra vez antes de colocar los bucles.
      2-3 Maze Loops 19_authored_hint:
        2-3_Maze_Loops_19_a: Si estas atascado, intenta escribir el código sin bucles primero y busca patrones.
        2-3_Maze_Loops_19_b: Poner un bucle de repetición dentro de otro puede ayudar a disminuir la cantidad de bloques utilizados.
      2-3 Maze Loops 20_authored_hint:
        2-3_Maze_Loops_20_a: Busca un patrón de escalera en este laberinto para encontrar dónde un bucle puede ser usado.
      2-3 Maze Loops 21_authored_hint:
        2-3_Maze_Loops_21_a: Si tienes problemas para encontrar el patrón de escalera, intenta cubrir los caminos bloqueados con tu dedo.
      4-5 Artist 1_authored_hint:
        4-5_Artist_1_a: "! [] (https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11_authored_hint:
        4-5_Artist_11_a: Dentro de tu ciclo, asegúrate que el artista salta hacia atrás y hacia arriba después de dibujar cada línea.
      4-5 Artist 3_authored_hint:
        4-5_Artist_3_a: |-
          Si el lecho de flores mide 600 píxeles y dos de los lados tienen 200 píxeles de largo, aquí se explica cómo se suman los lados cortos:
          **600 - 200 - 200 = 200**
          Eso significa que ambos lados cortos suman hasta 200 píxeles.
          ** ¿Qué es 200/2? **
        4-5_Artist_3_b: Si no puedes ver donde se repite el ciclo de inmediato, trata de codificar toda la solución y busca un patrón.
      4-5 Artist 4_authored_hint:
        4-5_Artist_4_a: "¡Hay 360 grados en un círculo! \n\n¡Esa es la cantidad de veces que necesitas repetir este código (convirtiendo 1 grado por vez) antes de que termine el círculo!"
      4-5 Artist 5_authored_hint:
        4-5_Artist_5_a: |-
          Prueba y error es un gran método, pero también puedes resolver el problema dividiendo el ángulo de 90 grados en tercios. ** 90/3 = _____ **
      4-5 Artist 7_authored_hint:
        4-5_Artist_7_a: '¿Qué ángulo es el más pequeño? ¿En qué ángulo está parado el artista? '
      4-5 Artist 8_authored_hint:
        4-5_Artist_8_a: "Los lados largos son 240 píxeles cada uno. Eso significa que los 2 lados cortos deben sumar: ** 800 - 240 - 240 = 320 ** ¿Qué es ** 320/2 **? "
        4-5_Artist_8_b: "¡Esta imagen se puede hacer de 2 maneras!   \n- Dibuja dos rectángulos que son ** 120 ** de largo y ** 160 ** de alto, con un lado superpuesto \n\n- Dibuja un rectángulo que es ** 240 ** de largo y ** 160 ** de alto, luego agrega una línea en el medio."
      4-5 Artist 9_authored_hint:
        4-5_Artist_9_a: "Cuando un triángulo es un equilátero, todos los lados y todos los ángulos son iguales.\n"
        4-5_Artist_9_b: Tendrás que dibujar tres triángulos del mismo tamaño. No olvides saltar a tu nueva posición después de cada uno.
      4-5 Artist Assessment 1_authored_hint:
        4-5_Artist_Assessment_1_a: Solo necesitas dibujar el triángulo exterior para completar este rompecabezas.
      4-5 Artist Patterns 11_authored_hint:
        4-5_Artist_Patterns_11_a: Si hay 360 grados en un círculo y cada ciclo gira 3 grados, ¿cuántas veces necesitarías repetir el ciclo para trazar la mitad de un círculo completo?
      4-5 Artist Patterns 2_authored_hint:
        4-5_Artist_Patterns_2_a: Ten en cuenta que dado que los cuadrados tienen 20 píxeles de largo, tendrás que saltar 20 píxeles antes de comenzar tu siguiente cuadrado.
      4-5 Artist Patterns 3_authored_hint:
        4-5_Artist_Patterns_3_a: Ten cuidado de sacar el bloque completo de código de la barra de herramientas cada vez que pruebes uno nuevo.
        4-5_Artist_Patterns_3_b: Si su código se vuelve demasiado confuso, siempre puede hacer clic en "Comenzar de nuevo" y ¡volver a intentarlo!
      4-5 Artist Patterns 5_authored_hint:
        4-5_Artist_Patterns_5_a: "Ahora, cuando el artista termine cada diamante, se encontrará en la dirección opuesta a la que necesita para comenzar la siguiente.   \n\n¿Cuántos grados necesita cambiar para ponerse en línea recta?"
      4-5 Bee Conditionals 4_authored_hint:
        remember_quantum: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
      4-5 Bee Conditionals 5_authored_hint:
        remember_quantum: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
      4-5 Bee Conditionals 6_authored_hint:
        4-5 Bee Conditionals 6_a: Puede resolver este rompecabezas usando solo los bloques en el espacio de trabajo. ¿En qué orden deberían ir?
        4-5 Bee Conditionals 6_b: Asegúrate de verificar si la flor tiene más de ** 0 ** néctar al menos ** 3 ** veces para resolver este rompecabezas.
      4-5 Bee Debugging 1_authored_hint:
        4-5_Bee_Debugging_1_a: Si tienes problemas para descubrir lo que no está bien, intenta ejecutarlo para ver dónde están mal las cosas.
      4-5 Bee Nested Loops Rows_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Intente tratar este rompecabezas como un rectángulo largo donde la abeja necesita avanzar, luego gire a la izquierda varias veces para completar el camino.
      4-5 Maze 10_authored_hint:
        4-5_Maze_10_a: |-
          Si no puedes ver cómo utilizar ciclos para resolver el rompecabezas de inmediato, trata de resolver el camino más largo en primer lugar, a continuación, mirando un patrón. ¿Qué debe tener el ciclo para hacer el código más corto?
      4-5 Maze 4_authored_hint:
        4-5_Maze_4_a: Si en estos momentos tienes dificultades para averiguar dónde poner la repetición, trata de codificarlo todo y busca un patrón.
      4-5 Maze 5_authored_hint:
        4-5_Maze_5_a: Intenta usar un ciclo de "repetición" cada vez que necesites `avanzar 'más de dos pasos.
        4-5_Maze_5_b: Puedes usar más de un ciclo de 'repeat' en un rompecabezas.
      4-5 Maze 6_authored_hint:
        4-5_Maze_6_a: "Intenta trazar un camino con tu dedo.   \n¿Es el camino más corto que puedes encontrar?"
      4-5 Maze 7_authored_hint:
        4-5_Maze_7_a: "** ¿Quieres tu código tan pequeño como pueda ser? **  \n\nMira los patrones en tus bloques. ¿Ves algo que se repite? ¡Intenta poner un bucle en su lugar!"
      4-5 Nested Loops 12_authored_hint:
        4-5_Nested_Loops_12_a: "** 360/36 =? **"
      4-5 Nested Loops 2_authored_hint: [ ]
      4-5 Nested Loops 6_authored_hint:
        4-5_Nested_Loops_6_a: |-
          No olvides hacer un giro después de su ciclo interno . Estarás formando un bucle de 6 triángulos en 360 grados. ** 360/6 =? **
      4-5 Nested Loops 7_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Este diseño se repetirá 10 veces terminando en 360 grados. ** 360/10 =? **
      4-5 Nested Loops 8_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Tienes que repetir el bucle 6 veces terminando en 360 grados. ** 360/6 =? **
      4-5 While Loops 8_authored_hint:
        4-5_While_Loops_8_a: Cada elemento necesitará su propio ciclo 'while'.
      AppLab Intro 3 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 4 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 5 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 6 - Change Screen Color_authored_hint: [ ]
      AppLab Intro 7 - Change Screen Color_authored_hint: [ ]
      Artist Inspiration_authored_hint:
        brush_width: Establecemos el grosor del pincel a 1, luego el color azul antes de hacer cualquier otra cosa.
        double_loop: Trate de poner un ` ciclo ` dentro de un ciclo de repetición.
        specifics: "El `bucle for` se ejecuta de tres a diecisiete veces para cada uno de los seis \"pétalos\" antes de pasar a crear el siguiente, dibujando formas con solo un número impar de lados. El bloque `set alpha` usa la división para atenuar el color a medida que el contador aumenta."
        after: Cuando hayas terminado con cada "pétalo", asegúrate de "avanzar" 20 píxeles antes de hacer una rotación de 60 grados.
        solution: |-
          ** Solución **! [ Imagen de Bloques de Solución ] (https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc- image -1469641375258.png)
      Bergeron Robot Maze1_authored_hint:
        2-3_Maze_1_a: Para usar un bloque `avanzar`, arrástralo desde el área de la barra de herramientas al espacio de trabajo y conéctelo al bloque`al ejecutar`.
      Course 4 Artist 11_authored_hint:
        Course_4_Artist_11_a: 'El semi-hexágono tiene una ** longitud de 30 ** y gira a la derecha por ** 60 grados **.  '
        Course_4_Artist_11_b: 'El triángulo 2/3 tiene una ** longitud de 80 ** y gira a la derecha por ** 120 grados **. '
      Course 4 Artist 12_authored_hint:
        Course_4_Artist_12_a: 'Cada forma repetida es la combinación de ** la mitad de un hexágono **, seguida de ** 2/3 de un triángulo **. '
        Course_4_Artist_12_b: 'La forma de la unidad es casi la misma que en el último acertijo, excepto que el medio hexágono es un poco más grande. '
        Course_4_Artist_12_c: "1) Las primeras tres líneas tienen 60 píxeles de largo y necesitas girar 60 grados.\n 2) Las siguientes dos líneas tienen 80 píxeles de largo y necesitas girar 120 grados "
        Course_4_Artist_12_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">6</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">3</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">60</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">60</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">80</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">120</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist 6_authored_hint:
        Course_4_Artist_6_a: Hay 3 triángulos dentro de la rotación de 360 grados... ¿Cuántas veces entran 3 en 360?
      Course 4 Artist 7_authored_hint: [ ]
      Course 4 Artist 8a_authored_hint:
        Course_4_Artist_8a: |-
          ¿Necesitas ayuda para calcular qué tan lejos girar?
          
          Hay 3 triángulos dentro de la rotación de 360 grados.
          
          ¿Cuántas veces entra 3 en 360?
      Course 4 Artist 9_authored_hint:
        Course_4_Artist_9_a: "¿Necesitas saber cuánto girar?\n\n¿Cuanto es 360 dividido por 10?"
      Course 4 Artist Binary Free Play 2b_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Este código usa dos `ciclos for`. Uno cuenta de 1 a 8, el otro cuenta de 8 a 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Cada `ciclo for` tiene tres repeticiones. El primero dibuja el conjunto más a la izquierda de 1s, el segundo dibuja los 0s en el medio y el tercero dibuja los 1s a la derecha.
        Course_4_Artist_Binary_Free_Play_2b_c: En cada repetición necesitas `contador` para 1s y` 16- (contador 2x) `para 0s.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          ** Solución: ** 
          
          <xml><block type="when_run" deletable="false" movable="false"> <next><block type="controls_for_counter" inline="true"> <mutation counter="counter"></mutation> <value name="FROM"> <block type="math_number"> <title name="NUM"> 1</title></block></value> <value name="TO"> <block type="math_number"> <title name="NUM"> 8</title></block></value> <value name="BY"> <block type="math_number"> <title name="NUM"> 1</title></block></value> <statement name="DO"> <block type="controls_repeat_ext" inline="true"> <value name="TIMES"> <block type="variables_get"> <title name="VAR"> contador de</title></block></value> <statement name="DO"> <block type="procedures_callnoreturn" inline="true"> <mutation name="draw"> <arg name="binary"></arg></mutation> <value name="ARG0"> <block type="text"> <title name="TEXT"> 1</title></block></value></block></statement> <next><block type="controls_repeat_ext" inline="true"> <value name="TIMES"> <block type="math_arithmetic" inline="true"> <title name="OP"> menos</title> <value name="A"> <block type="math_number"> <title name="NUM"> 16</title></block></value> <value name="B"> <block type="math_arithmetic" inline="true"> <title name="OP"> multiplicar</title> <value name="A"> <block type="variables_get"> <title name="VAR"> contador</title></block></value> <value name="B"> <block type="math_number"> <title name="NUM"> 2</title></block></value></block></value></block></value> <statement name="DO"> <block type="procedures_callnoreturn" inline="true"> <mutation name="draw"> <arg name="binary"></arg></mutation> <value name="ARG0"> <block type="text"> <title name="TEXT"> 0</title></block></value></block></statement> <next><block type="controls_repeat_ext" inline="true"> <value name="TIMES"> <block type="variables_get"> <title name="VAR"> contador de</title></block></value> <statement name="DO"> <block type="procedures_callnoreturn" inline="true"> <mutation name="draw"> <arg name="binary"></arg></mutation> <value name="ARG0"> <block type="text"> <title name="TEXT"> 1</title></block></value></block></statement></block></next></block></next></block></statement> <next><block type="controls_for_counter" inline="true"> <mutation counter="counter"></mutation> <value name="FROM"> <block type="math_number"> <title name="NUM"> 8</title></block></value> <value name="TO"> <block type="math_number"> <title name="NUM"> 1</title></block></value> <value name="BY"> <block type="math_number"> <title name="NUM"> 1</title></block></value> <statement name="DO"> <block type="controls_repeat_ext" inline="true"> <value name="TIMES"> <block type="variables_get"> <title name="VAR"> contador de</title></block></value> <statement name="DO"> <block type="procedures_callnoreturn" inline="true"> <mutation name="draw"> <arg name="binary"></arg></mutation> <value name="ARG0"> <block type="text"> <title name="TEXT"> 1</title></block></value></block></statement> <next><block type="controls_repeat_ext" inline="true"> <value name="TIMES"> <block type="math_arithmetic" inline="true"> <title name="OP"> menos</title> <value name="A"> <block type="math_number"> <title name="NUM"> 16</title></block></value> <value name="B"> <block type="math_arithmetic" inline="true"> <title name="OP"> se multiplican</title> <value name="A"> <block type="variables_get"> <title name="VAR"> contador</title></block></value> <value name="B"> <block type="math_number"> <title name="NUM"> 2</title></block></value></block></value></block></value> <statement name="DO"> <block type="procedures_callnoreturn" inline="true"> <mutation name="draw"> <arg name="binary"></arg></mutation> <value name="ARG0"> <block type="text"> <title name="TEXT"> 0</title></block></value></block></statement> <next><block type="controls_repeat_ext" inline="true"> <value name="TIMES"> <block type="variables_get"> <title name="VAR"> contador de</title></block></value> <statement name="DO"> <block type="procedures_callnoreturn" inline="true"> <mutation name="draw"> <arg name="binary"></arg></mutation> <value name="ARG0"> <block type="text"> <title name="TEXT"> 1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block> </xml>
      Course 4 Artist For Loops 11_authored_hint:
        Course_4_Artist_For_Loops_11_a: "¡El ángulo de giro cambiará con cada forma!\n\nUse el bloque matemático para ingresar 360 dividido por el número de lados que tiene la forma para obtener el ángulo correcto. "
      Course 4 Artist For Loops 11a_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 dividido por el número de lados que tiene una forma es la cantidad de grados que deberá girar. '
        Course_4_Artist_For_Loops_11a_b: 'Cada vez, deberá avanzar 10 veces la longitud del número actual de lados. '
      Course 4 Artist For Loops 3_authored_hint:
        Course_4_Artist_For_Loops_3_a: Para hacer que el ciclo `for` impulse su movimiento, asegúrese de estar usando` contador` como distancia.
      Course 4 Artist For Loops 4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "** ¿Cuál es el número más pequeño que necesitarás?\n¿Cuál es el número más grande?\n¿Qué tan grande es el aumento en cada ocasión? **\n\nEsas son las preguntas que debe realizar para completar los espacios en blanco del ciclo `for`."
      Course 4 Artist For Loops Challenge_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: La forma más grande tiene 19 lados. El más pequeño tiene solo dos.
        Course_4_Artist_For_Loops_Challenge_b: El bucle 'para' cuenta hasta dos cada vez que se ejecuta.
      Course 4 Artist For Loops Challenge_a_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: El polígono más grande tiene 19 lados.
        Course_4_Artist_For_Loops_Challenge_b: Cada polígono está incompleto, con un lado menos de lo que debería tener.
      Course 4 Artist For Loops inspire_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: La base de este código es la misma que la solución al desafío anterior... con un par de cambios.
        Course_4_Artist_For_Loops_inspire_b: Prueba un bucle 'for' que va de 3 a 10 con un incremento de 1.
        Course_4_Artist_For_Loops_inspire_c: Hay dos iteraciones del mismo bucle de repetición dentro del bucle 'for', pero la segunda repetición gira en la dirección opuesta.
        Course_4_Artist_For_Loops_inspire_d: "**Solución:**  \n\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\" inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_arithmetic\" inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value name=\"A\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <value name=\"B\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">40</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">360</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">1</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">moveForward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">40</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">360</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration_authored_hint:
        Course_4_Artist_Functions_Inspiration_a: Comience con el código del último rompecabezas y agregue un `giro adicional a la derecha` de tres grados dentro del ciclo de repetición.
        Course_4_Artist_Functions_Inspiration_b: Intenta girar más de 90 grados fuera del bucle 'repetir', pero aún dentro del bucle`for`.
        Course_4_Artist_Functions_Inspiration_c: |-
          **Solución:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">14</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a square 20"></mutation>
          <next>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">20</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">3</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">100</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Functions challenge_authored_hint:
        Course_4_Artist_Functions_challenge_a: Parte de entender cómo usar funciones es averiguar cuáles necesita y cuáles no.
        Course_4_Artist_Functions_challenge_b: Use un bucle `for`, luego use su contador de variables dentro de un bucle de repetición anidado.
        Course_4_Artist_Functions_challenge_c: En cada iteración, debe dibujar un cuadrado y luego saltar hacia adelante.
        Course_4_Artist_Functions_challenge_d: Tendrás que girar a la izquierda 90 grados fuera de tu repetición, pero aún dentro del bucle 'for'.
      Course 4 Artist Inspire_authored_hint:
        Course_4_Artist_Inspire_a: Después de completar un cuadrado, Intentar saltar la mitad de su longitud antes de girar y hacer otro.
        Course_4_Artist_Inspire_b: Cada cuadrado y salto se repite cuatro veces (usar un giro a la izquierda en el medio) para formar una unidad completa similar a un molinete.
        Course_4_Artist_Inspire_c: Cada molinete también se repite cuatro veces, con un giro a la derecha de ** 360 / lados **.
        Course_4_Artist_Inspire_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Vars 13_authored_hint:
        Course_4_Artist_Vars_13_a: Necesita dos bucles de repetición (uno dentro del otro) ambos repitiendo `sides ' veces.
        Course_4_Artist_Vars_13_b: "El ciclo de repetición interno dibuja un octágono (girando a la izquierda). Luego, debes avanzar y girar a la derecha solo en el bucle externo."
        Course_4_Artist_Vars_13_c: Para ajustar la forma para que permanezca del mismo tamaño cuando cambia el número de lados, use el bloque matemático para dividir la longitud en píxeles por el número de lados.
      Course 4 Artist Vars 6_authored_hint:
        Course_4_Artist_Vars_6_a: Para dibujar un polígono regular, gire ** 360 / lados ** cada vez.
      Course 4 Artist Vars 8_authored_hint:
        Course_4_Artist_Vars_8_a: Si divide su longitud inicial por el número de lados, la longitud de cada lado se acortará a medida que el número de lados aumente.
      Course 4 Bee Params 7_authored_hint:
        notice_pattern: '¿Ves un patrón en cómo cambia la cantidad de néctar? '
        count_with_for: Tenga en cuenta que el néctar se incrementa en pasos. ¿Qué tipo de bloque puede usar para hacer lo mismo?
      Course 4 Bee Params 8_authored_hint:
        Course_4_Bee_Params_8_a: Está bien pedir un número de miel y un número de néctar cada vez. Si no hay nada de algo, el número puede ser 0.
      Course 4 Play Lab Params 2_authored_hint:
        Course_4_Play_Lab_Params_2_a: Debes hacer clic en "editar" en la función de salto y actualizarla para que uses el parámetro 'altura'.
      Course 4 Play Lab Vars 2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Asegúrese de establecer el número de `velocidad_perro`a algo más grande que` velocidad_gato`.
      Course 4 Play Labs For Loops 2_authored_hint:
        Course_4_Play_Labs_For_Loops_2_a: '¿Qué añadirías a tu bucle para cada ocasión omitir los números pares?'
      Course 4 Playlab For Loop Freeplay_authored_hint: [ ]
      Course 4 Playlab For Loops 4b_authored_hint:
        Course_4_Playlab_For_Loops_4b_a: Las banderas están a unos 330 píxeles de distancia de los personajes.
        Course_4_Playlab_For_Loops_4b_b: '¿Cómo se puede hacer que cada personaje alcance 330 píxeles en el mismo número de movimientos con diferentes números de inicio y parada?'
        Course_4_Playlab_For_Loops_4b_c: Recuerde, no importa cuánto se pase un personaje de la bandera en su último paso, siempre que le tome a cada personaje el mismo número de pasos para llegar a la bandera.
      Course 4 Playlab For Loops 5b_authored_hint:
        Course_4_Playlab_For_Loops_5b_a: Los personajes están a unos 175 píxeles del centro.
        Course_4_Playlab_For_Loops_5b_b: Recuerde, el próximo paso de un personaje será más largo que el anterior, ya que el contador sigue creciendo.
      Course 4 Playlab For Loops 6b_authored_hint: [ ]
      Course 4 SCF 1_authored_hint:
        Course_4_SCF_1_a: Cada hexágono tiene 40 lados de píxeles.
        Course_4_SCF_1_b: Hay un salto de 120 píxeles entre cada hexágono en cada línea horizontal.
        Course_4_SCF_1_c: "Antes de dibujar la segunda fila de hexágonos, debe girar a la derecha 60 grados y avanzar 40 píxeles.\n\nUna vez que estás en la ubicación vertical correcta, debes volver a girar a tu artista y retroceder 320 píxeles hacia atrás."
        Course_4_SCF_1_d: "Antes de dibujar la tercera fila de hexágonos, debes girar a la derecha 60 grados y avanzar 40 píxeles. Una vez que estás en la ubicación vertical correcta, debes volver a girar en tu artista y retroceder 440 píxeles (120 píxeles más que tu función de desplazamiento 'hacia abajo / adelante'). "
        Course_4_SCF_1_e: |2
          ** Solución: **
          
           <xml> 
          <block type = "when_run" deletable = "false" movible = "false"> 
          <next> 
          <block type = "controls_repeat_ext" inline = "true"> 
          <value name = "TIMES" > 
          <block type = "math_number"> 
          <title name = "NUM"> 2 </ title> 
          </ block> 
          </ value> 
          <statement name = "DO"> 
          <block type = "procedures_callnoreturn"> 
          <mutation name = "dibujar una línea de hexágonos"> </ mutation> 
          <siguiente> 
          <block type = "procedures_callnoreturn"> 
          <mutation name = "shift down / forward"></ mutation> 
          <next> 
          <block type = "procedures_callnoreturn"> 
          <mutation name = "dibuja una línea de hexágonos"> </ mutation> 
          <next>
          <block type = "procedures_callnoreturn"> 
          <nombre de la mutación = "shift down / backward"> </ mutation> 
          </ block> 
          </ next> 
          </ block> 
          </ next> 
          </ block> 
          </ next> 
          </ block > 
          </ statement> 
          </ block> 
          </ next> 
          </ block> 
          <block type = "procedures_defnoreturn"> 
          <mutation> </ mutation> 
          <title name = "NAME"> dibuja un hexágono </ title> 
          <nombre de la declaración = "STACK"> 
          <block type = "controls_repeat_ext" inline = "true"> 
          <value name = "TIMES">
          <block type = "math_number"> 
          <title name = "NUM"> 6 </ title> 
          </ block> 
          </ value> 
          <statement name = "DO">
          <block type = "draw_move" inline = "true"> 
          <title name = "DIR"> moveForward </ title> 
          <value name = "VALUE"> 
          <block type = "math_number"> 
          <title name = "NUM"> 40 </ title> 
          </ block> 
          </ value> 
          <next> 
          <block type = "draw_turn" inline = "true"> 
          <title name = "DIR"> turnRight </ title> 
          <value name = "VALUE"> 
          <block type = "math_number"> 
          <title name = "NUM"> 60 </ title> 
          </ block> 
          </ value> 
          </ block>
          </ next> 
          </ block> 
          </ statement> 
          </ block> 
          </ statement> 
          </ block> 
          <block type = "procedures_defnoreturn"> 
          <mutation></ mutation> 
          <title name = "NAME"> shift down / backward </ title> 
          <statement name = "STACK"> 
          <block type = "draw_turn" inline = "true"> 
          <title name = "DIR"> turnRight </ title> 
          <value name = "VALUE"> 
          <block type = "math_number"> 
          <title name = "NUM"> 60 </ title> 
          </ block> 
          </ value> 
          <next> 
          <block type = "jump "inline =" true "> 
          <title name =" DIR "> jumpForward </ title> 
          <value name =" VALUE "> 
          <block type ="math_number "> 
          <title name =" NUM "> 40 </ title> 
          </ block> 
          </ value> 
          <next> 
          <block type =" draw_turn "inline =" true ">
          <title name = "DIR"> turnLeft </ title> 
          <value name = "VALUE"> 
          <block type = "math_number"> 
          <title name = "NUM"> 60 </ title> 
          </ block> 
          </ value> 
          <siguiente> 
          <block type = "jump" inline = "true"> 
          <title name = "DIR"> jumpBackward </ title> 
          <value name = "VALUE"> 
          <block type = "math_number"> 
          <title name = " NUM "> 440 </ title> 
          </ block> 
          </ value> 
          </ block> 
          </ next> 
          </ block> 
          </ next>
          </ block> 
          </ next> 
          </ block> 
          </ statement> 
          </ block> 
          <block type = "procedures_defnoreturn"> 
          <mutation></ mutation> 
          <title name = "NAME"> dibujar una línea de hexágonos </ title> 
          <statement name = "STACK"> 
          <block type = "controls_repeat_ext" inline = "true"> 
          <value name = "TIMES"> 
          <block type = "math_number"> 
          <title name = "NUM"> 3 </ title> 
          </ block> 
          </ value> 
          <statement name = "DO"> 
          <block type = "procedures_callnoreturn"> 
          <mutation name = " dibujar un hexágono "> </ mutation> 
          <siguiente> 
          <tipo de bloque =" saltar "en línea =" verdadero "> 
          <nombre del título =" DIR ">jumpForward </ title> 
          <value name = "VALUE"> 
          <block type = "math_number"> 
          <title name = "NUM"> 120 </ title> 
          </ block>
          </ value> 
          </ block> 
          </ next> 
          </ block> 
          </ statement> 
          </ block> 
          </ statement> 
          </ block> 
          <block type = "procedures_defnoreturn"> 
          <mutation> </ mutation> 
          <title name = "NAME"> shift hacia abajo / adelante </ title> 
          <statement name = "STACK"> 
          <block type = "draw_turn" inline = "true"> 
          <title name = "DIR"> turnRight </ title> 
          <value name = "VALOR"> 
          <block type = "math_number"> 
          <title name = "NUM"> 60 </ title> 
          </ block> 
          </ value> 
          <next> 
          <block type = "jump" inline = "true"> 
          <title name = "DIR"> jumpForward </ title>
          <value name = "VALUE"> 
          <block type = "math_number"> 
          <title name = "NUM"> 40 </ title> 
          </ block> 
          </ value> 
          <next> 
          <block type = "draw_turn" inline = " true "> 
          <title name =" DIR "> turnLeft </ title> 
          <value name =" VALUE "> 
          <block type =" math_number "> 
          <title name =" NUM "> 60 </ title> 
          </ block> 
          < / value> 
          <next> 
          <block type = "jump" inline = "true"> 
          <title name = "DIR"> jumpBackward </ title>
          <value name = "VALUE"> 
          <block type = "math_number"> 
          <title name = "NUM"> 320 </ title> 
          </ block> 
          </ value> 
          </ block>
          </ next> 
          </ block> 
          </ next> 
          </ block> 
          </ next> 
          </ block> 
          </ statement> 
          </ block> 
          </ xml>
      Course 4 SCF 1a_authored_hint:
        Course_4_SCF_1a_a: Recuerde sus funciones desde la etapa 16.
        Course_4_SCF_1a_b: "Mira el camino como su ruta principal:!   \n\n[] (Https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)"
        Course_4_SCF_1a_c: Debes considerar el uso de un ciclo. No para los pasos, sino para el parámetro de la función.
        Course_4_SCF_1a_d: |2
          ** Solución: **
          
           <xml> 
          <block type = "when_run" deletable = "false" movible = "false" uservisible = "false" y = "14"> 
          <next> 
          <block type = "variables_set" inline = " falso "uservisible =" false "> 
          <title name =" VAR "> left </ title> 
          <value name =" VALUE "> 
          <block type =" math_number "uservisible =" false "> 
          <title name =" NUM "> 1 </ title> 
          </ block> 
          </ value> 
          <next> 
          <block type = "variables_set" inline = "false" uservisible = "false"> 
          <title name = "VAR"> derecha </ title> 
          <value name = "VALUE"> 
          <block type = "math_number" uservisible = "false"> 
          <title name = "NUM"> 0 </ title> 
          </ block>
          </ value> 
          </ block> 
          </ next> 
          </ block> 
          </ next> 
          </ block> 
          <block type = "when_run" deletable = "false" movible = "falso"> 
          <next> 
          <block type = " controls_for "inline =" true "> 
          <title name =" VAR "> counter </ title> 
          <value name =" FROM "> 
          <block type =" math_number "> 
          <title name =" NUM "> 3 </ title> 
          </ block> 
          </ value> 
          <value name = "TO"> 
          <block type = "math_number"> 
          <title name = "NUM"> 21 </ title> 
          </ block> 
          </ value> 
          <value name = "BY"> 
          <block type = "math_number"> 
          <title name = "NUM"> 3 </ title> 
          </ block>
          </ value> 
          <statement name = "DO"> 
          <block type = "maze_move"> 
          <title name = "DIR"> moveForward </ title> 
          <next> 
          <block type = "maze_if"> 
          <title name = "DIR "> isPathLeft </ title> 
          <statement name =" DO "> 
          <block type =" procedures_callnoreturn "inline =" false "> 
          <nombre de la mutación =" get nectar "> 
          <arg name =" dir "> </ arg> 
          < arg name = "counter"> </ arg> 
          </ mutation> 
          <value name = "ARG0"> 
          <block type = "variables_get"> 
          <title name = "VAR"> left </ title> 
          </ block> 
          </ value> 
          <value name = "ARG1"> 
          <block type = "variables_get"> 
          <title name = "VAR">contador </ title> 
          </ block> 
          </ value> 
          </ block> 
          </ statement> 
          <next> 
          <block type = "maze_turn"> 
          <title name = "DIR"> turnRight </ title> 
          <next> 
          <block type = "maze_move"> 
          <title name = "DIR"> moveForward </ title> 
          <next> 
          <block type = "maze_turn"> 
          <title name = "DIR"> turnLeft </ title> 
          <next> 
          <block type = "maze_if"> 
          <title name = "DIR"> isPathRight </ title> 
          <statement name = "DO "> 
          <block type =" procedures_callnoreturn "inline =" false "> 
          <mutation name =" get néctar "> 
          <arg name =" dir "> </ arg>
          <arg name = "counter"> </ arg> 
          </ mutation> 
          <value name = "ARG0"> 
          <block type = "variables_get"> 
          <title name = "VAR"> right </ title> 
          </ block> 
          < / value> 
          <value name = "ARG1"> 
          <block type = "variables_get"> 
          <title name = "VAR"> counter </ title> 
          </ block> 
          </ value> 
          </ block> 
          </ statement> 
          </ bloquear> 
          </ next> 
          </ block> 
          </ next> 
          </ block> 
          </ next> 
          </ block> 
          </ next> 
          </ block> 
          </ next> 
          </ block> 
          </ statement> 
          </ block> 
          </ next> 
          </ block>
          <block type = "procedures_defnoreturn" editable = "false" usercreated = "true"> 
          <mutation> 
          <arg name = "dir"> </ arg> 
          <arg name = "counter"> </ arg> 
          </ mutation> 
          < title name = "NAME"> obtener néctar </ title> 
          <statement name = "STACK"> 
          <block type = "controls_if" inline = "false"> 
          <mutation else = "1"> </ mutation> 
          <value name = "IF0"> 
          <block type = "logical_compare" inline = "true" movible = "falso"> 
          <title name = "OP"> EQ </ title> 
          <value name = "A"> 
          <block type = "parameters_get"> 
          <title name = "VAR"> dir </ title> 
          </ block> 
          </ value> 
          <value name = "B">
          <block type = "variables_get"> 
          <title name = "VAR"> left </ title> 
          </ block> 
          </ value> 
          </ block> 
          </ value> 
          <statement name = "DO0"> 
          <block type = " maze_turn "> 
          <title name =" DIR "> turnLeft </ title> 
          </ block> 
          </ statement> 
          <statement name =" ELSE "> 
          <block type =" maze_turn "> 
          <title name =" DIR "> turnRight < / title> 
          </ block> 
          </ statement> 
          <next> 
          <block type = "controls_repeat_ext" inline = "true">
          <value name = "TIMES"> 
          <block type = "math_number"> 
          <title name = "NUM"> 3 </ title> 
          </ block> 
          </ value>
          <statement name = "DO"> 
          <block type = "maze_move"> 
          <title name = "DIR"> moveForward </ title> 
          </ block> 
          </ statement> 
          <next> 
          <block type = "controls_repeat_ext" inline = " true "> 
          <value name =" TIMES "> 
          <block type =" parameters_get "> 
          <title name =" VAR "> contador </ title> 
          </ block> 
          </ value> 
          <statement name =" DO "> 
          <block type = "maze_nectar"> </ block> 
          </ statement> 
          <next> 
          <block type = "controls_repeat_ext" inline = "true "> 
          <value name =" TIMES "> 
          <block type =" math_number "> 
          <title name =" NUM "> 3 </ title> 
          </ block> 
          </ value>
          <statement name = "DO"> 
          <block type = "maze_move"> 
          <title name = "DIR"> moveBackward </ title> 
          </ block> 
          </ statement> 
          <next> 
          <block type = "controls_if" inline = " falso "> 
          <mutation else =" 1 "> </ mutation> 
          <value name =" IF0 "> 
          <block type =" logical_compare "inline =" true "movible =" falso "> 
          <title name =" OP "> EQ </ title> 
          <value name = "A"> 
          <block type = "parameters_get"> 
          <title name = "VAR"> dir </ title> 
          </ block> 
          </ value> 
          <value name = "B"> 
          <block type = "variables_get"> 
          <title name = "VAR"> left </ title> 
          </ block> 
          </ value>
          </ block> 
          </ value> 
          <statement name = "DO0"> 
          <block type = "maze_turn"> 
          <title name = "DIR"> turnRight </ title> 
          </ block> 
          </ statement> 
          <statement name = " ELSE "> 
          <block type =" maze_turn "> 
          <title name =" DIR "> turnLeft </ title> 
          </ block> 
          </ statement> 
          </ block> 
          </ next> 
          </ block> 
          </ next> 
          </ bloquear> 
          </ next> 
          </ block> 
          </ next> 
          </ block> 
          </ statement> 
          </ block> 
          </ xml>
      Course 4 SCF 1b_authored_hint:
        Course_4_SCF_1b_a: "Ten en cuenta que la forma de todos los puntos de miel es similar.   \n\nBuen lugar para una función!"
        Course_4_SCF_1b_b: "Mire esta idea de cómo podría viajar la abeja:!   \n\n[] (Https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_c: Deberías considerar usar un 'ciclo for' para la distancia que recorre la abeja.
        Course_4_SCF_1b_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="make honey up and over"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">make honey up and over</title>
          <statement name="STACK">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 2_authored_hint:
        Course_4_SCF_2_a: Cada octágono tiene 40 lados de píxeles.
        Course_4_SCF_2_b: Hay un salto de 136 píxeles entre cada octágono en cada línea horizontal.
        Course_4_SCF_2_c: "Antes de dibujar la segunda fila de octágonos, debes girar a la derecha 45 grados y avanzar 96 píxeles.   \n\nUna vez que estás en la ubicación vertical correcta, debes volver a girar tu artista y retroceder 408 píxeles. "
        Course_4_SCF_2_d: "Tenga en cuenta que debido a que hay menos octágonos en las filas pares, no tiene que retroceder más para llegar al punto de partida de las filas impares.   \n\nEsto significa que puede usar la misma función  para todas las filas."
        Course_4_SCF_2_e: |-
          **Solucion:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="numOctagons"></arg>
          </mutation>
          <title name="NAME">draw octagons</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">numOctagons</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw an octagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">136</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">shift down</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">96</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">408</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 3_authored_hint:
        Course_4_SCF_3_a: "! [] (https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_b: 'Esta es una serie de octógonos con lados que son ''contador'' píxeles de largo. '
        Course_4_SCF_3_c: 'Cada octágono se llama desde dentro de un ciclo for que va desde 200 hasta 2 por 2. '
        Course_4_SCF_3_d: 'No olvides dar vuelta por 22.5 grados al final de cada iteración. '
        Course_4_SCF_3_e: Tanto el color de cada octágono como el ancho del lápiz están controlados por la variable `contador '.
        Course_4_SCF_3_f: |-
          **Solución:**
          
          <xml>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="length"></arg>
          </mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw an octagon">
          <arg name="length"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">22.5</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1_authored_hint:
        Course_4_SCFL_1_a: "Eche un vistazo a esta opción de movimiento   \n\n:! [] (Https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        Course_4_SCFL_1_b: 'Trate de usar dos ciclos for: Uno para subir y agarrar el néctar, y el otro para escalar hacia abajo y hacer miel.'
        Course_4_SCFL_1_c: "Observe que un ciclo `for` necesita varios bucles regulares dentro en el que se repita el 'contador' para hacer el modelo creciente de escalera. El otro ciclo for solo necesita un ciclo regular para hacer una cantidad 'contador' de miel."
        Course_4_SCFL_1_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1a_authored_hint:
        Course_4_SCFL_1a_a: Puede que tenga que viajar más lejos en general para usar la menor cantidad de bloques.
        Course_4_SCFL_1a_b: "Echa un vistazo a esta opción de movimiento:! [] (Https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)"
        Course_4_SCFL_1a_c: Un bucle `for` le ayudará a ejecutar el mismo modelo, pero con un número cambiante de los pasos. Tenga en cuenta que el número de pasos necesarios disminuye de 7 a 5 por 1.
        Course_4_SCFL_1a_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">7</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1b_authored_hint:
        Course_4_SCFL_1b_a: Trate de usar un ciclo `for`.
        Course_4_SCFL_1b_b: "Echa un vistazo a esta opción de movimiento:! [] (Https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)"
        Course_4_SCFL_1b_c: |-
          ** Solución: ** <xml> <block type = "when_run" deletable = "false" movible = "false"> <next> <block type = "controls_for" inline = "true"> <title name = "VAR" > contador </ title> <value name = "FROM"> <block type = "math_number"> <title name = "NUM"> 3 </ title> </ block> </ value> <value name = "TO" > <block type = "math_number"> <title name = "NUM"> 1 </ title> </ block> </ value> <value name = "BY"> <block type = "math_number"> <title name = "NUM"> 1 </ title> </ block> </ value> <statement name = "DO"> <block type = "controls_repeat_ext" inline = "true"> <value name = "TIMES"> <block type = "variables_get"> <title name = "VAR"> contador </ title> </ block> </ value> <statement name = "DO"> <block type = "maze_moveForward "/> </ statement> <next> <block type =" maze_turn "> <title name =" DIR "> turnLeft </ title> <next> <block type =" controls_repeat_ext "inline =" true "> <value name = "TIMES"> <block type = "variables_get"> <title name = "VAR"> counter </ title> </ block> </ value> <statement name = "DO"> <block type = "maze_moveForward" / > </ statement> <next> <block type = "maze_turn"> <title name = "DIR"> turnRight </ title> </ block> </ next> </ block> </ next> </ block> </ next> </ block> </ statement> </ block> </ next> </ block> </ xml>
      Course 4 SCFL 2_authored_hint:
        Course_4_SCFL_2_a: "Echa un vistazo a esta opción de movimiento:! [] (Https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)"
        Course_4_SCFL_2_b: Observa que hay tres puntos durante cada iteración del ciclo 'for' en el que se pone a interactuar con los objetos.
        Course_4_SCFL_2_c: Durante cada iteración del ciclo For, el número de cada objeto se relaciona con la variable contador en algún modo.
        Course_4_SCFL_2_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">POWER</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 3_authored_hint:
        Course_4_SCFL_3_a: El `ancho del lápiz 'es 1. El primer cuadrado tiene 50 lados de píxeles, y cada cuadrado es 50 píxeles más ancho que el anterior.
        Course_4_SCFL_3_b: La opacidad en el pincel siempre es `contador` / 2.
        Course_4_SCFL_3_c: Después de hacer cada cuadrado, no te olvides de saltar hacia atrás, girar, saltar de nuevo, ¡y luego retroceder!
        Course_4_SCFL_3_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 4_authored_hint:
        Course_4_SCFL_4_a: El cambio de color ocurre usando el bloque `establecer color con rojo, verde, azul`. El rojo siempre tiene el valor de 'contador', el verde siempre es '255 - contador`, y el azul permanece constante en 255 exactamente.
        Course_4_SCFL_4_b: Cada figura es un cuadro con los lados de 'contador' píxeles de largo, comenzando con 5px, e incrementándose por 5px todo el camino hasta 200px.
        Course_4_SCFL_4_c: El artista gira 15 grados entre cada cuadro.
        Course_4_SCFL_4_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 6_authored_hint:
        Course_4_SCFL_6_a: El cambio de color se presenta con el bloque 'definir color con rojo, verde, azul'. Rojo es la constante definida como 255, verde es siempre el valor de 'contador', y azul es siempre '255-contador'.
        Course_4_SCFL_6_b: El código para esto es mucho más simple de lo que usted puede pensar. Solo defina el color dentro del 'ciclo for', avance, luego gire.
        Course_4_SCFL_6_c: 'El ciclo For va de 5 a 250 por 2. '
        Course_4_SCFL_6_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 7_authored_hint:
        Course_4_SCFL_7_a: El cambio de color ocurre usando el bloque `establecer color con rojo, verde, azul`. El rojo siempre tiene el valor de 'contador', el verde siempre es '255 - contador`, y el azul permanece constante en 255 exactamente.
        Course_4_SCFL_7_b: 'Este dibujo se puede usar como ''controles de flujos''. Uno va de 5 a 200 por 2, el otro va de 200 a 5 por 2. '
        Course_4_SCFL_7_c: Dentro de cada ciclo For avanzas 5 píxeles antes de girar en` 360 / contador`. ¡No olvides poner tu pincel en el "contador" antes de hacer algo!
        Course_4_SCFL_7_d: Tendrás que girar a la izquierda 225 grados entre los dos ciclos for.
        Course_4_SCFL_7_e: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_number_dropdown">
          <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">225</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 1_authored_hint:
        Course_4_SCV_1_a: 'Las variables son útiles porque puede agregarlas cada vez, a través de un ciclo. '
        Course_4_SCV_1_b: Este rompecabezas tiene un ciclo que crea el polígono, un bucle que repite el polígono " lados " veces, luego otro ciclo que lo hace todo de nuevo después de agregar 5 a " lados ".
        Course_4_SCV_1_c: Usando una variable para 'lados' y una para 'longitud' se tiene un código más limpio que usted puede reutiliza en repetidas ocasiones, en vez de crear una nueva copia para cada conjunto de números.
        Course_4_SCV_1_d: |-
          **Solucion:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 2_authored_hint:
        Course_4_SCV_2_a: "La imagen completa se compone de 10 de estas \"flores\":   \n! [] (Https://images.code.org/bac2a606dfa59c00409294499540267d- imagen -1469641972385.png)\n         \n... que se hicieron de 10 de estos decágonos:   \n! [] (https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4- image -1469642051512.png)"
        Course_4_SCV_2_b: 'Este diseño utiliza ciclos anidados (tres niveles). Todos los ciclos se ejecutan ''lados'' veces. '
        Course_4_SCV_2_c: El artista gira a la izquierda cuando se crea cada decágono, pero gira a la derecha en los otros dos ciclos.
        Course_4_SCV_2_d: Para evitar que todos sus 10 pétalos de "flores" estén dibujados en el mismo lugar, asegúrese de pasar hacia adelante por la longitud de los lados 360 grados / "lados" grados como parte de su ciclo más externo.
        Course_4_SCV_2_e: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">400</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 3_authored_hint:
        Course_4_SCV_3_a: 'Utiliza el bloque de matemáticas para sumar y restar puntos a la variable ´points´ cuando los sprites choquen. '
        Course_4_SCV_3_b: Usted puede cambiar el parámetro de cuán lejos se mueve su sprite cada vez que una de las flechas es presionada.
        Course_4_SCV_3_c: |-
          **Solución:**
          
          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">points</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">points</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 4_authored_hint:
        Course_4_SCV_4_a: Tres variables te ayudarán aquí. Uno para las unidades de néctar, uno para las unidades de miel y otro para determinar hasta qué punto la abeja debe moverse cada iteración.
        Course_4_SCV_4_b: 'Será muy útil utilizar tres ciclos dentro de su ciclo principal. Una para avanzar, una para recolectar néctar y otra para  hacer miel. '
        Course_4_SCV_4_c: "Eche un vistazo a esta opción de movimiento   \n\n:! [] (Https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)"
        Course_4_SCV_4_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 5_authored_hint:
        Course_4_SCV_5_a: |-
          Eche un vistazo a esta opción de movimiento:! [] (Https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: Cada ciclo, las flores tienen dos veces menos néctar y la abeja tiene que hacer una miel más.
        Course_4_SCV_5_c: Tenga en cuenta que al comienzo del ciclo exterior, la abeja se mueve tantas veces como haya néctar en la siguiente flor.
        Course_4_SCV_5_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 6_authored_hint:
        Course_4_SCV_6_a: |-
          ¡Observe cómo se ve una sola forma completa! [] (Https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_b: 'Se beneficiará al crear 8 variables: rojo1, verde1, azul1, rojo2, verde2, azul2, largo y lados.'
        Course_4_SCV_6_c: Cada uno de los 5 lados de la forma se divide en pedazos de "longitud" / " lados " donde el zig es verde azulado (rgb = 0,175,200) y el zag es morado (rgb = 100, 50, 150).
        Course_4_SCV_6_d: 'Para zig, gire a la izquierda por `` 360` / lados `. Para zag, girar a la derecha por `` 360` / lados `. '
        Course_4_SCV_6_e: 'El resto del programa es muy estándar para hacer una rotación completa de 360 ​​grados de esa forma, excepto que estamos superponiendo las formas a la mitad, por lo que tenemos que girar a la derecha por `180` /` lados`, lo que significa que necesitamos dos veces tantos de ellos como de costumbre (repeticiones `lados` *` 2`). '
        Course_4_SCV_6_f: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">100</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">150</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">70</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red1</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green1</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red2</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green2</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">180</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      CourseF_PlayLab_vars2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Asegúrese de establecer el número de `velocidad_perro`a algo más grande que` velocidad_gato`.
      D_Frozen_nested3_authored_hint:
        courseD_artist_project3_a: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_project3_b: "¡Prueba los ciclos anidados! Usa el código que creaste para dibujar una línea de formas y anidarlo dentro de otro ciclo. En la parte inferior, antes de que termine el ciclo exterior, agrega un bloque que hará girar a Elsa.   \n\n- Pruebe 72 grados si está repitiendo el ciclo externo 5 veces - Pruebe 60 grados si está repitiendo el ciclo externo 6 veces"
      D_Frozen_nested4_authored_hint:
        courseD_artist_project4_a: |2
          Aquí está el copo de nieve del Pentágono con un giro de 36 grados antes de un copo de nieve triangular:
          
           <img src = "https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width = "200px" /> 
          
          
          Aquí hay una conjunto de hexágonos con cuadrados:
          
           <img src = "https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width = "200px" />
        courseD_artist_project4_b: Para probar esto, dibuja tu primer copo de nieve, gira y luego dibuja un segundo copo de nieve.
      D_Frozen_nested5_authored_hint:
        courseD_artist_project4_a: |
          Líneas de 2 hexágonos y 4 triángulos:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      D_Frozen_nested6_authored_hint:
        courseD_artist_project1a_a: |
          Este paso de la escalera utiliza un giro de 76 grados y se repite 4 veces.
          
          <img src = "https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width = "200px" />
        courseD_artist_project1a_b: Estos patrones son muy parecidos a los pasos de la escalera de otros acertijos, pero usando un ángulo diferente.
      D_Frozen_nested7_authored_hint:
        courseD_artist_project2a_a: |
          Este dibujo se hizo por ciclos anidados de 4 escaleras y una vuelta a la derecha `180 degrees` bloque dentro de un times`` repetición 2 bloque.
          
          <img src = "https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width = "200px" />
      D_Frozen_nested8_authored_hint:
        courseD_artist_project3a_a: '¡Puedes elegir diferentes cantidades para rotar tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?'
      D_Frozen_nested9_authored_hint:
        courseD_artist_project4a_a: |
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      Farmer for Authored Hint testing_authored_hint:
        first_hint: |-
          Esta es la primera pista. Tiene * algo de * ** basic ** `margen
        second_hint: |-
          Esta es la segunda pista . Tiene una imagen . ! [] (https://images.code.org/cab43107265a683a6216e18faab2353f- image -1452027548372.png)
        last_hint: Esta es la tercera y última pista. No tiene nada especial.
      Farmer for TTS testing_authored_hint:
        first_hint: |-
          Esta es la primera pista. Tiene * algo de * ** basic ** `margen
        second_hint: |-
          Esta es la segunda pista . Tiene una imagen . ! [] (https://images.code.org/cab43107265a683a6216e18faab2353f- image -1452027548372.png)
        last_hint: Esta es la tercera y última pista. No tiene nada especial.
      Function intro Ryan_authored_hint:
        Function_intro_Ryan_b: Si llama a las funciones correctamente, este es el camino por el que viajará...
        Function_intro_Ryan_a: '¡Puedes usar una función varias veces dentro de tu programa!  Trata de usarla dos veces para resolver este acertijo.'
      Harvesting_authored_hint:
        pointer_harvester_test: '¿Qué tipo de bloque puedo usar para verificar algo y tomar una decisión?'
      Inspirational Artwork_authored_hint:
        brush_width: Establecemos el grosor del pincel a 1, luego el color azul antes de hacer cualquier otra cosa.
        double_loop: Trate de poner un ` ciclo ` dentro de un ciclo de repetición.
        specifics: "El `bucle for` se ejecuta de tres a diecisiete veces para cada uno de los seis \"pétalos\" antes de pasar a crear el siguiente, dibujando formas con solo un número impar de lados. El bloque `set alpha` usa la división para atenuar el color a medida que el contador aumenta."
        after: Cuando hayas terminado con cada "pétalo", asegúrate de "avanzar" 20 píxeles antes de hacer una rotación de 60 grados.
        solution: |-
          ** Solución **! [ Imagen de Bloques de Solución ] (https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc- image -1469641375258.png)
      InspirationalArtwork_authored_hint: [ ]
      InspirationalArtwork_2018_authored_hint: [ ]
      K2.0 sequence 1_authored_hint:
        K2.0_sequence_1_a: Este programa falta un bloque. ¿Puedes averiguar cuál?
      K2.0 sequence 10_authored_hint:
        K2.0_sequence_10_a: Si tiene problemas, primero intente anotar los pasos en una hoja de papel.
        K2.0_sequence_10_b: You will need three different kinds of arrows to solve this puzzle.
      K2.0 sequence 12_authored_hint:
        K2.0_sequence_12_a: If the pig isn't moving far enough, try adding another block.
      K2.0 sequence 2_authored_hint:
        K2.0_sequence_2_a: Uno de los bloques está moviendo al pájaro en la dirección incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
      K2.0 sequence 3_authored_hint:
        K2.0_sequence_3_a: Si tiene problemas, intente descubrir cuál es la ruta correcta y luego elimine el bloque que no encaja.
      K2.0 sequence 4_authored_hint:
        K2.0_sequence_4_a: Use 2 different arrow blocks to solve this puzzle!
      K2.0 sequence 5_authored_hint:
        K2.0_sequence_5: Tu código final debe tener tres bloques de movimiento.
      K2.0 sequence 6_authored_hint:
        K2.0_sequence_6_a: Hay 1 bloque que debes agregar para mover el pájaro al cerdo.
        K2.0_sequence_6_b: Si no puede descubrir qué hacer, intente dibujar el rompecabezas en papel y use su dedo para descubrir en qué dirección moverse.
      K2.0 sequence 7_authored_hint:
        K2.0_sequence_7_a: Si estás atascado, intenta dibujar la imagen en papel para ver cómo se debe mover el pájaro.
      K2.0 sequence 8_authored_hint:
        K2.0_sequence_8_a: '¿Atascado? Intenta trazar el camino del pájaro con tu dedo.'
      K2.0 sequence 9_authored_hint:
        K2.0_sequence_9_a: Si tiene problemas, primero intente anotar los pasos en una hoja de papel.
        K2.0_sequence_9_b: You will need to go three different directions to solve this puzzle.
      K2.0 sequence FP_authored_hint:
        K2.0_sequence_FP_a: Si el camino que necesita no está claro, use su dedo para seguir el camino del pájaro hasta el cerdo.
      K2.0 sequence pre_authored_hint:
        K2.0_sequence_pre_a: If you are having trouble getting the bird to move, make sure blocks are connected under `when run`.
      MC Agent Freeplay_authored_hint:
        MC_HOC_2017_13_Cole_a: Haz que el Agent construya algunos puentes para que Alex o Steve puedan caminar más allá de los límites del mapa.
      MC_HOC_2017_01_Cole_authored_hint:
        MC_HOC_2017_01_Cole_a: Usa las teclas de flecha para dirigir al jugador a la casa. Termina en el cuadrado naranja para ganar.
      MC_HOC_2017_01_RETRY_authored_hint:
        MC_HOC_2017_01_RETRY_a: Arrastra un bloque "mover hacia adelante" de la caja de herramientas al área de trabajo y colócala en su lugar bajo el bloque "al correr".
        MC_HOC_2017_01_RETRY_b: Haz clic en "Ejecutar" para ejecutar el código para el Agent.
        MC_HOC_2017_01_RETRY_c: '¡Una vez que el Agent haya ejecutado todo su código, podrás mover al jugador con las teclas de flecha!'
      MC_HOC_2017_02_Cole_authored_hint:
        MC_HOC_2017_02_Cole_a: Mueve al Agent dos espacios hacia adelante para que se pare sobre la placa de presión.  Eso le abrirá la puerta a tu jugador.
        MC_HOC_2017_02_Cole_b: |-
          ¡Presiona "Ejecutar"! 
          Puedes ejecutar tu código aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta que descubras qué está mal.
        MC_HOC_2017_02_Cole_c: Una vez que el Agent haya abierto la puerta, ¡usa las teclas de flecha para mover al jugador hasta el mapa!
        MC_HOC_2017_02_Cole_d: '¡Asegúrate de que el agente esté siguiendo la ruta delineada en el mapa!'
      MC_HOC_2017_02_Will_authored_hint:
        MC_HOC_2017_02_Cole_a: Mueve al Agent dos espacios hacia adelante para que se pare sobre la placa de presión.  Eso le abrirá la puerta a tu jugador.
        MC_HOC_2017_02_Cole_b: |-
          ¡Presiona "Ejecutar Agent"! 
          Puedes ejecutar tu código aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta que descubras qué está mal.
        MC_HOC_2017_02_Cole_c: Una vez que el Agent haya abierto la puerta, usa las teclas de flecha para mover al jugador al cuadrado naranja.
      MC_HOC_2017_03_Cole_authored_hint:
        MC_HOC_2017_03_Cole_a: Una vez que lleves al Agent a la placa de presión, ¡puedes usar las teclas de flecha para mover al jugador hasta la brújula!
        MC_HOC_2017_03_Cole_b: '¿Crees que el código es demasiado largo?  ¡Prueba usando el bucle "Repetir" e intenta encontrar el modo de hacerlo más corto!'
      MC_HOC_2017_04POINT5_Cole_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          Cruzar esas dos placas de presión le despejará el camino al jugador. 
          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_04POINT5_RYAN_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: 'Usa el bloque "Girar a la derecha" para cambiar la dirección del Agent'
        MC_HOC_2017_04POINT5_RYAN_a: El Agent solo necesita llegar a la primera placa de presión para permitir que Alex o Steve pasen por el hacha.
      MC_HOC_2017_04_Cole_authored_hint:
        MC_HOC_2017_04_Cole_a: El Agent necesita "mover hacia adelante" 7 veces.  ¿Cómo puedes usar un bucle "Repetir" para que eso suceda?
        MC_HOC_2017_04_Cole_c: |-
          ¡Presiona "Ejecutar"! 
          Puedes ejecutar tu código aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta que descubras qué está mal.
        MC_HOC_2017_04_Cole_b: Una vez que el Agent llegue a la placa de presión, le abrirá la puerta al jugador.
      MC_HOC_2017_05_Cole_authored_hint:
        MC_HOC_2017_05_Cole_a: '¿Sabías que puedes poner más de una parte de código dentro del bucle?  Prueba colocando un tablón **y** moviéndote hacia adelante dentro de un "Repetir" para completar este acertijo.'
        MC_HOC_2017_05_Cole_b: Lleva al agente al otro lado del río y construye un puente sobre la marcha.
      MC_HOC_2017_05_Josh_authored_hint:
        MC_HOC_2017_05_Cole_a: '¿Sabías que puedes poner más de una parte de código dentro del bucle?  Prueba colocando un tablón **y** moviéndote hacia adelante dentro de un "Repetir" para completar este acertijo.'
      MC_HOC_2017_06_Cole_authored_hint:
        MC_HOC_2017_06_Cole_a: '¿Cuántas veces se ejecuta este bucle?  ¿Cuántas veces se *debería* ejecutar?'
        MC_HOC_2017_06_Cole_b: '¡Ayuda al Agente a construir un puente sobre el agua! '
      MC_HOC_2017_06_Josh_authored_hint:
        MC_HOC_2017_06_Cole_a: '¡Prueba colocando más de una instrucción dentro de un bucle "Repetir"!'
      MC_HOC_2017_07_Cole_authored_hint:
        MC_HOC_2017_07_Cole_c: Todo lo que necesita para que el Agente lo haga es abrir el camino hacia Minecart.
        MC_HOC_2017_07_Cole_a: Para completar este acertijo, descubre qué hace la función "Despejar camino" y úsala las veces que sean necesarias por medio del pequeño bloque verde "despejar camino" de la caja de herramientas.
        MC_HOC_2017_07_Cole_b: Prueba mezclando los bloques de funciones con otros bloques de la caja de herramientas para resolver este acertijo.
      MC_HOC_2017_08_RY_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          ¡Presiona "Ejecutar Agent"! 
          Puedes ejecutar tu código aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta que descubras qué está mal.
        MC_HOC_2017_08_RY_b: Hay muchísimas maneras de resolver este acertijo.  ¡Prueba con varias!
      MC_HOC_2017_08_Will_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          ¡Presiona "Ejecutar Agent"! 
          Puedes ejecutar tu código aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta que descubras qué está mal.
        MC_HOC_2017_08_RY_b: Hay muchísimas maneras de resolver este acertijo.  ¡Prueba con varias!
      MC_HOC_2017_10_Cole_authored_hint:
        MC_HOC_2017_10_Cole_a: '¡Usa funciones para que resolver acertijos sea más fácil!'
      MC_HOC_2017_10_RETRY_authored_hint:
        MC_HOC_2017_10_Cole_b: '¿No sabes a dónde ir? ¡Vea si puede encontrar la línea punteada!'
        MC_HOC_2017_10_Cole_a: '¡Usa funciones para que resolver acertijos sea más fácil!'
      MC_HOC_2017_13_Cole_authored_hint:
        MC_HOC_2017_13_Cole_a: Haz que el Agent construya algunos puentes para que Alex o Steve puedan caminar más allá de los límites del mapa.
      MC_HOC_2017_4.5v2_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: |-
          Cruzar esas dos placas de presión le despejará el camino al jugador. 
          ![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)
      MC_HOC_2017_Ali_authored_hint:
        MC_HOC_2017_08_RY_a: |-
          ¡Presiona "Ejecutar"! 
          Puedes ejecutar tu código aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta que descubras qué está mal.
        MC_HOC_2017_08_RY_b: Hay muchísimas maneras de resolver este acertijo.  ¡Prueba con varias!
        MC_HOC_2017_08_RY_c: Intenta seguir la línea de puntos para obtener un camino simple a través de la lava.
      MC_HOC_2017_FP10x10_authored_hint: [ ]
      MC_HOC_2017_FP10x10_RE_authored_hint: [ ]
      MC_HOC_2017_FP20x20_authored_hint:
        MC_HOC_2017_13_Cole_a: Haz que el Agent construya algunos puentes para que Alex o Steve puedan caminar más allá de los límites del mapa.
      MikeStar_authored_hint:
        hint1: Don't give up!
      MikeStarHard_authored_hint:
        hint1: Don't give up!
      MikeStarNested_authored_hint:
        hint1: Don't give up!
      NEW Course 4 Artist Functions 13_authored_hint:
        NEW_Course_4_Artist_Functions_13_a: Intenta editar la función de 'dibujar una línea de cuadrados' para que no tengas que llamar dos veces.
        NEW_Course_4_Artist_Functions_13_c: '¿Qué código necesitarías si intentaras hacer una estrella usando líneas regulares en lugar de cajas?'
      NEW Course 4 Artist Functions 4_authored_hint:
        NEW_Course_4_Artist_Functions_4_a: Tendrás que usar un bloque `girar a la derecha por 120 grados` después de cada cuadrado.
      NEW Course 4 Artist Functions 9_authored_hint:
        NEW_Course_4_Artist_Functions_9_a: Intenta ejecutar el código antes de agregar cualquier bloque. ¿Qué hace que el dibujo se vea un poco apagado?
        NEW_Course_4_Artist_Functions_9_b: Si no puede ubicar lo que está saliendo mal, intente reducir la velocidad del artista moviendo el control deslizante hacia la izquierda.
      NEW Course 4 Artist Params 11_authored_hint:
        NEW_Course_4_Artist_Params_11_a: Hay más de un número que necesita ser reemplazado por una variable dentro de la función.
      NEW Course 4 Artist Params 13_authored_hint:
        NEW_Course_4_Artist_Params_13_a: 'Tendrá que dividir * el perímetro * por el número de lados para mantener las formas del mismo tamaño en general. '
      NEW Course 4 Artist Params 14_authored_hint:
        NEW_Course_4_Artist_Params_14_a: It's okay to run the program a few times to figure out how the function works with different parameters.
      NEW Course 4 Artist Params inspire_authored_hint:
        brush_width: Establecemos el grosor del pincel a 1, luego el color azul antes de hacer cualquier otra cosa.
        double_loop: Trate de poner un ` ciclo ` dentro de un ciclo de repetición.
        specifics: "El `bucle for` se ejecuta de tres a diecisiete veces para cada uno de los seis \"pétalos\" antes de pasar a crear el siguiente, dibujando formas con solo un número impar de lados. El bloque `set alpha` usa la división para atenuar el color a medida que el contador aumenta."
        after: Cuando hayas terminado con cada "pétalo", asegúrate de "avanzar" 20 píxeles antes de hacer una rotación de 60 grados.
        solution: |-
          **Solución**
          
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">17</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw a polygon">
          <arg name="length"></arg>
          <arg name="sides"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">30</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">20</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      NEW Course 4 Bee For Loops 10a_authored_hint:
        NEW_Course_4_Bee_For_Loops_10a_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        NEW_Course_4_Bee_For_Loops_10a_b: You'll need to have 2 repeats, one will use a math block.
      NEW Course 4 Bee For Loops 7_authored_hint:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
      NEW Course 4 Bee For Loops 8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: "Si su ciclo está contando hacia arriba, el incremento se agrega a su variable de contador cada vez que pasa?"
      New Minecraft Hero Project_authored_hint:
        MC_HOC_2017_13_Cole_a: Haz que el Agent construya algunos puentes para que Alex o Steve puedan caminar más allá de los límites del mapa.
      Overworld Avoid Monsters_authored_hint:
        mc_8_a: Hay algunos caminos que puedes tomar. ¿Cuál es el más corto? Hay algunos caminos que puedes tomar. ¿Cuál es el más corto?
        mc_8_b: Use los ciclos de `repetición` para simplificar su código.
        mc_8_c: Tu objetivo es llegar a la entrada de la casa en la parte superior de la pantalla.
      Overworld Avoid Monsters_2018_authored_hint:
        mc_8_a: Hay algunos caminos que puedes tomar. ¿Cuál es el más corto? Hay algunos caminos que puedes tomar. ¿Cuál es el más corto?
        mc_8_b: Use los ciclos de `repetición` para simplificar su código.
        mc_8_c: Tu objetivo es llegar a la entrada de la casa en la parte superior de la pantalla.
      Overworld Chop Tree_authored_hint:
        mc_2_a: 'Tienes que `avanzar ''dos ​​veces para pararte frente al árbol.  '
        mc_2_b: El comando destruir bloque corta el árbol frente a usted.
      Overworld Chop Tree_2018_authored_hint:
        mc_2_a: 'Tienes que `avanzar ''dos ​​veces para pararte frente al árbol.  '
        mc_2_b: El comando destruir bloque corta el árbol frente a usted.
      Overworld Chop Trees_authored_hint:
        mc_4_a: 'Puedes talar árboles en cualquier orden. ¿Qué camino toma el menor número de bloques?  '
        mc_4_b: El comando destruir bloque corta el árbol frente a usted.
      Overworld Chop Trees_2018_authored_hint:
        mc_4_a: 'Puedes talar árboles en cualquier orden. ¿Qué camino toma el menor número de bloques?  '
        mc_4_b: El comando destruir bloque corta el árbol frente a usted.
      Overworld House Frame Chosen_authored_hint:
        mc_6_a: Haga clic en la flecha en el bloque `colocar` para elegir lo que desea colocar.
        mc_6_b: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
        mc_6_c: Usted puede poner más de un bloque dentro de un ciclo de 'repetición'.
      Overworld House Frame Chosen_2018_authored_hint:
        mc_6_a: Haga clic en la flecha en el bloque `colocar` para elegir lo que desea colocar.
        mc_6_b: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
        mc_6_c: Usted puede poner más de un bloque dentro de un ciclo de 'repetición'.
      Overworld Move to Sheep_authored_hint:
        mc_1_a: 'El bloque ''avanzar'' está en la parte superior del cuadro de herramientas.  '
        mc_1_b: 'Asegúrate de que los bloques se muevan para adelante.  '
      Overworld Move to Sheep_2018_authored_hint:
        mc_1_a: 'El bloque ''avanzar'' está en la parte superior del cuadro de herramientas.  '
        mc_1_b: 'Asegúrate de que los bloques se muevan para adelante.  '
      Overworld Place Wall_authored_hint:
        mc_5_a: Utilice primero el bloque 'colocar', y luego el bloque 'mover'.
        mc_5_b: Asegúrese de que ambos bloques estén dentro del ciclo de repetición para ejecutar el código más de una vez.
        mc_5_c: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
      Overworld Place Wall_2018_authored_hint:
        mc_5_a: Utilice primero el bloque 'colocar', y luego el bloque 'mover'.
        mc_5_b: Asegúrese de que ambos bloques estén dentro del ciclo de repetición para ejecutar el código más de una vez.
        mc_5_c: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
      Overworld Plant Crops_authored_hint:
        mc_7_a: Utilice el bloque 'cultivo de plantas' para plantar un cultivo en el espacio donde está parado.
        mc_7_b: Ambas franjas de tierra marrón oscura junto al agua deben llenarse con cultivos.
        mc_7_c: Puedes poner más de un bloque dentro de un ciclo de repetición.
      Overworld Plant Crops_2018_authored_hint:
        mc_7_a: Utilice el bloque 'cultivo de plantas' para plantar un cultivo en el espacio donde está parado.
        mc_7_b: Ambas franjas de tierra marrón oscura junto al agua deben llenarse con cultivos.
        mc_7_c: Usted puede poner más de un bloque dentro de un ciclo de 'repetición'.
      Overworld Powered Minecart_authored_hint:
        mc_13_a: Utilizar 'colocar riel' para colocar un riel en el cuadro en el que está.
        mc_13_b: Utiliza los ciclos de repetición para hacer tu código más corto.
      Overworld Powered Minecart_2018_authored_hint:
        mc_13_a: Utilizar 'colocar riel' para colocar un riel en el cuadro en el que está.
        mc_13_b: Utiliza los ciclos de repetición para hacer tu código más corto.
      Overworld Shear Sheep_authored_hint:
        mc_3_a: 'El bloque ''cortar'' obtiene la oveja en frente de usted. ¿Está frente a la oveja?  '
        mc_3_b: 'Si necesita cambiar la dirección en la que mira, utilice un bloque de ''girar''.  '
        mc_3_c: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.  '
      Overworld Shear Sheep_2018_authored_hint:
        mc_3_a: 'El bloque ''cortar'' obtiene la oveja en frente de usted. ¿Está frente a la oveja?  '
        mc_3_b: 'Si necesita cambiar la dirección en la que mira, utilice un bloque de ''girar''.  '
        mc_3_c: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.  '
      Pattern Bee 1_authored_hint:
        conditional_pointer: |-
          Comience por pensar en esta parte: ¿qué es diferente en cada paso del camino? ¿Qué tipo de bloqueo puedes usar para tomar una * decisión * sobre si estás en una flor o en un panal? ! [] (https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: Aparte de hacer miel, ¿ves algo diferente que tengas que hacer en cada panal?
      Planning Farmer_authored_hint:
        conditional_pointer: |-
          Comience por pensar en esta parte: ¿qué es diferente en cada paso del camino? ¿Qué tipo de bloqueo puedes usar para tomar una * decisión * sobre si estás en una flor o en un panal? ! [] (https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: Aparte de hacer miel, ¿ves algo diferente que tengas que hacer en cada panal?
      Quantum Bee - Ryan_authored_hint:
        test_hint: Esta es una pista de prueba.
      Test embedded K1 Blockly in instructions_authored_hint: [ ]
      Underground Avoiding Lava_authored_hint:
        mc_11_a: Todo el código está en su lugar para asegurarnos de la lava y enfrentarla. Todo lo que necesitas hacer es agregar un bloque para moverte.
        mc_11_b: '¿Debería su comando ''avanzar'' estar dentro de la instrucción ''si'' o después?'
      Underground Avoiding Lava_2018_authored_hint:
        mc_11_a: Todo el código está en su lugar para asegurarnos de la lava y enfrentarla. Todo lo que necesitas hacer es agregar un bloque para moverte.
        mc_11_b: '¿Debería su comando ''avanzar'' estar dentro de la instrucción ''si'' o después?'
      Underground If Statements_authored_hint:
        mc_12_a: Los espacios con puntos rojos son donde usted encontrará Redstone.
        mc_12_b: Se puede utilizar un ciclo de repetición para hacer su código más corto?
        mc_12_c: 'Usa un argumento `si` para revisar si hay espacios con lava, entonces ubica rocas. '
      Underground If Statements_2018_authored_hint:
        mc_12_a: Los espacios con puntos rojos son donde usted encontrará Redstone.
        mc_12_b: Se puede utilizar un ciclo de repetición para hacer su código más corto?
        mc_12_c: 'Usa un argumento `si` para revisar si hay espacios con lava, entonces ubica rocas. '
      Underground Iron_authored_hint:
        mc_10_a: '¡Los bloques de hierro son espacios abiertos detrás de la antorcha! ¿Cómo va a llegar allá?'
        mc_10_b: Cuando está parado el borde de la lava, utiliza 'colocar adoquín adelante' para un camino seguro.¡Luego, puedes caminar sobre el!
        mc_10_c: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
      Underground Iron_2018_authored_hint:
        mc_10_a: '¡Los bloques de hierro son espacios abiertos detrás de la antorcha! ¿Cómo va a llegar allá?'
        mc_10_b: Cuando está parado el borde de la lava, utiliza 'colocar adoquín adelante' para un camino seguro.¡Luego, puedes caminar sobre el!
        mc_10_c: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
      Underground Mining Coal_authored_hint:
        mc_9_a: '¿Está frente al camino correcto? El ''bloque destruir'' explota el bloque en frente de usted.'
        mc_9_b: '¡Las machas negras en el muro son carbón! Utilizar ''destruir bloque'' en estas para minar el carbón.'
        mc_9_c: Utilizar 'poner antorcha' para poner una antorcha en el espacio donde está parado.
      Underground Mining Coal_2018_authored_hint:
        mc_9_a: '¿Está frente al camino correcto? El ''bloque destruir'' explota el bloque en frente de usted.'
        mc_9_b: '¡Las machas negras en el muro son carbón! Utilizar ''destruir bloque'' en estas para minar el carbón.'
        mc_9_c: Utilizar 'poner antorcha' para poner una antorcha en el espacio donde está parado.
      Valentine_artist2_01_authored_hint:
        Valentine_artist2_01_a: Cada lado de la hierba tiene 30 píxeles de largo. Intenta usar un patrón de pasos de escalera.
        Valentine_artist2_01_b: '¿Ves algún patrón repitiendo? Usted debe hacer el uso de dos bloques `movimientos adelante" y dos giros` diferentes` dentro de un bucle. '
        Valentine_artist2_01_c: |-
          Prueba este ciclo
          <xml><block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      Valentine_artist_01_authored_hint:
        Valentine_artist_01_a: '¿Qué dirección necesita enfrentar el artista para moverse? ¿En qué dirección debe enfrentarse el artista para colocar una nueva pegatina de llama?'
        Valentine_artist_01_b: El artista necesita colocar 10 pegatinas de llamas y girar 90 grados en cada turno.
      Valentine_playlab_01_authored_hint:
        Valentine_playlab_01_a: |-
          Encaje el actor de `1 tiro corazones rojos abajo` bloque en el` cuando el actor 1 hace clic en ` evento. ¡No te olvides de cambiar `izquierda` a` abajo`!
        Valentine_playlab_01_b: Utilizar el movimiento actor de `1 izquierda` bloque por clic en su lugar debajo de la flecha hacia la izquierda cuando` clic ' evento.
      aE1_authored_hint: [ ]
      aE2_authored_hint:
        aE2_a: Tenga en cuenta que dado que las servilletas tienen 20 píxeles de largo, tendrá que saltar 20 píxeles antes de comenzar su próximo ciclo.
      aE3_authored_hint:
        aE3_a: Después de ejecutar su ** ciclo anidado ** desde la última etapa, debe volver al principio de la línea.
        aE3_b: "¡No olvide mover al artista hacia abajo antes de comenzar una nueva fila de formas! \n\nPara mover el artista y colocarse frente a él de la manera correcta una vez más, asegúrese de hacer: - giro de 90 grados ( boca abajo) - Saltar 20 píxeles (para llegar a la nueva fila) - Girar hacia atrás 90 grados (para hacer frente a la derecha de nuevo)"
        aE3_c: Cuando este todo listo, sus ** ciclos anidados ** deben tener tres niveles de repetición.
        aE3_d: Si su código se vuelve demasiado confuso, siempre puede hacer clic en "Comenzar de nuevo" y ¡volver a intentarlo!
      aE3alternate_authored_hint:
        aE3alternate_a: Después de ejecutar su ** ciclo anidado ** desde la última etapa, debe volver al principio de la línea.
        aE3alternate_b: "¡No olvide mover al artista hacia abajo antes de comenzar una nueva fila de formas! \n\nPara mover el artista y colocarse frente a él de la manera correcta una vez más, asegúrese de hacer: - giro de 90 grados ( boca abajo) - Saltar 20 píxeles (para llegar a la nueva fila) - Girar hacia atrás 90 grados (para hacer frente a la derecha de nuevo)"
        aE3alternate_c: Cuando este todo listo, sus ** ciclos anidados ** deben tener tres niveles de repetición.
        aE3alternate_d: Si su código se vuelve demasiado confuso, siempre puede hacer clic en "Comenzar de nuevo" y ¡volver a intentarlo!
      aE3alternateB_authored_hint:
        aE4alternateB_a: Después de ejecutar su ** ciclo anidado ** desde la última etapa, debe volver al principio de la línea.
        aE4alternateB_b: "¡No olvide mover al artista hacia abajo antes de comenzar una nueva fila de formas! \n\nPara mover el artista y colocarse frente a él de la manera correcta una vez más, asegúrese de hacer: - giro de 90 grados ( boca abajo) - Saltar 20 píxeles (para llegar a la nueva fila) - Girar hacia atrás 90 grados (para hacer frente a la derecha de nuevo)"
        aE4alternateB_c: Cuando este todo listo, sus ** ciclos anidados ** deben tener tres niveles de repetición.
        aE4alternateB_d: Si su código se vuelve demasiado confuso, siempre puede hacer clic en "Comenzar de nuevo" y ¡volver a intentarlo!
      aE4_authored_hint:
        aE4_a: Después de ejecutar su ** ciclo anidado ** desde la última etapa, debe volver al principio de la línea.
        aE4_b: "¡No olvide mover al artista hacia abajo antes de comenzar una nueva fila de formas! \n\nPara mover el artista y colocarse frente a él de la manera correcta una vez más, asegúrese de hacer: - giro de 90 grados ( boca abajo) - Saltar 20 píxeles (para llegar a la nueva fila) - Girar hacia atrás 90 grados (para hacer frente a la derecha de nuevo)"
        aE4_c: Cuando este todo listo, sus ** ciclos anidados ** deben tener tres niveles de repetición.
        aE4_d: Si su código se vuelve demasiado confuso, siempre puede hacer clic en "Comenzar de nuevo" y ¡volver a intentarlo!
      aE5_authored_hint: [ ]
      aE6_authored_hint:
        aE6_a: |-
          Si hay 180 grados en un semicírculo y cada ciclo el artista hace giros 3 grados, ¿cuántas veces necesitarías hacer un ciclo para dibujar la mitad de un círculo completo? ** 180 ÷ 3 =? **
      aE7_authored_hint:
        aE7_a: Dibuja la mitad inferior de un círculo y luego la mitad superior de un círculo para hacer un segmento.
        aE7_b: Usted está 4 segmentos para completar este rompecabezas.
      aE8_authored_hint:
        aE8_a: "Para hacer un cuadrado desde tu línea, necesitarás:  \n-   dibujar la línea  \n- usar la esquina con curvas\n Repita estos pasos 4 veces."
      allHallows2017_authored_hint:
        allHallows2017_a: '¡Cuidado! ¡GT podría seguir detrás de ti en su bicicleta y borrar tu línea!'
        allHallows2017_g: 'Sarah dice: "¿Tienes frío? Ven a sentarte en la esquina... ¡Son 90 grados!"'
        allHallows2017_c: 'Jordyn dice: "¡No se detengan ahora! ¡Continúen!"'
        allHallows2017_d: 'Josh dice: "¡Tendrá que recurrir a sus habilidades de codificación para completar este rompecabezas!"'
        allHallows2017_e: 'Dados Dani: "No soy bueno con los juegos de palabras. ¡Intente usar un bloque de repetición'
        allHallows2017_b: 'Baker dice: "El crayón Chicago solo funciona en la * línea verde *"'
        allHallows2017_f: 'Amy dice: "¡Puede hacerlo! Solo piense fuera de la caja"'
      artistDebugVideo1_authored_hint:
        courseA_artist_loops7_a: '¿No puede averiguar dónde colocar el ciclo? Trate de escribir el código paso a paso, y buscar para un patrón.'
      artistFunctionsVideo1_authored_hint: [ ]
      artistLoopsK2_authored_hint:
        artistLoopsK2_a: Si desea que el ciclo se repita más de 4 veces, puede cambiar el número en la parte superior del bloque.
      artistLoopsK2gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: Si desea que el ciclo se repita más de 4 veces, puede cambiar el número en la parte superior del bloque.
      artistLoopsK3_authored_hint:
        artistLoopsK3_a: Intenta usar lo que has aprendido sobre repetir bloques para completar este rompecabezas!
      artistLoopsK4_authored_hint:
        artistLoopsK4_a: '¿Atascado? Intenta ejecutar el código para ver qué bloque es incorrecto.'
      artistLoopsK5_authored_hint:
        artistLoopsK5_a: Los 4 bloques iniciales deben ir dentro de tu bloque de repetición para resolver este rompecabezas.
      artistLoopsK6_authored_hint:
        artistLoopsK6_a: Intenta ejecutar el código para ver dónde hay un error.
      artistLoopsK7_authored_hint:
        artistLoopsK7_a: '¡Todos los bloques que necesitas para este rompecabezas ya están en tu espacio de trabajo!'
      artistLoopsK8_authored_hint:
        artistLoopsK8_a: Intenta ejecutar el código para ver dónde hay un error.
      artistLoopsK9_authored_hint:
        artistLoopsK9_a: '¡Este desafío usa CUATRO ciclos, uno tras otro!'
      artistLoopsKA_authored_hint:
        artistLoopsKA_a: Use el bloque de salto para avanzar sin dibujar una línea.
      artistLoopsKB_authored_hint:
        artistLoopsKB_a: Debería haber 3 bloques dentro de su ciclo para resolver este rompecabezas.
      artistLoopsKFP_authored_hint: [ ]
      comment_intro_maze_2018_authored_hint:
        courseC_maze_programming4_a: Los comentarios también son útiles cuando otras personas intentan leer su código.
        courseC_maze_programming4_b: 'Agregue un comentario cuando cambie de dirección: ¿qué hubiera pasado si hubiera girado en sentido contrario?'
      conditionals_forvideo_harvester_authored_hint: [ ]
      course1_artist_loops_challenge1_authored_hint:
        courseA_artist_loops_challenge1_a: |+
          Puede usar ciclo como este para crear las paredes y el techo. Intenta repetir diferentes bloques . ! [] (https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png) Diseña el tuyo o haz clic en ! [] (https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) para algunas ideas!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2_authored_hint:
        harvey_tictactoe: Puedes usar bloques `saltar` para moverte a otros espacios.
      course1_artist_loops_challenge3_authored_hint:
        courseA_artist_loops_challenge2_a: 'Bloques como este: <xml>  <block type="simple_move_up_left"/></xml> ¡ permitirá que tu artista se mueva de forma inclinada!'
        courseA_artist_loops_challenge2_b: Cuando termines una casa de pájaros, ¡salta a la siguiente!
        courseA_artist_loops_challenge2_c: Necesitará MUCHOS bloques dentro del ciclo para este desafío.
      course1_artist_loops_challenge4_authored_hint:
        courseB_artist_loops_challenge1_a: 'Bloques como este: <xml>  <block type="simple_move_up_right"/></xml> permitirá que tu artista se mueva de forma inclinada!'
        courseB_artist_loops_challenge1_b: Cuando termina una casa de pájaros, ¡salta a la siguiente!
        courseB_artist_loops_challenge1_c: 'Tendrá que `mover` o` saltar` sobre algunas de las mismas líneas dos veces. '
      course1_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada ciclo si algo sale mal.
        courseA_collector_loops_challenge1_b: No necesita usar un ciclo si solo está haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la cueva, pero solo necesitas moverte y recolectar 5 veces. ¿Sabes por qué?
      course1_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: "¡Solo necesita usar un bloque ! [] (Https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) para resolver esto.\n\n"
        courseA_collector_loops_challenge2_a: |-
          Puede retroceder por el camino una segunda vez antes de ir hacia el sur. ! [] (https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      course1_collector_loops_challenge3_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Start by looping the commands`moverse hacia el sur` y` obtener tesoro`.
          <xml>
          <block type="maze_moveSouth"/><next>
          <block type="collector_collect"/></next>
          </xml>
        courseB_collector_loops_challenge1_a: |
          El patrón norte es un poco diferente que el patrón sur.
          <xml>
          <block type="collector_collect"/><next>
          <block type="maze_moveNorth"/></next>next>
          </xml>
        courseB_collector_loops_challenge1_c: "Muévete hacia el este dos veces entre cada camino.\n<xml>\n  <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next>\n  </xml>\nPuedes hacer esto con solo 14 bloques. Haga clic para obtener una sugerencia más para ver una solución.\n"
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba esto!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_collector_loops_challenge4_authored_hint:
        courseB_collector_loops_challenge2_a: Si algo sale mal, no tengas miedo de comenzar de nuevo. No te rindas!
        courseB_collector_loops_challenge2_b: |-
          Si repites este patrón, ¡Laurel no golpeará la pared en el fondo de la cueva!
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: Intenta usar un bloque de repetición para recolectar la pila final de tesoros!
        courseB_collector_loops_challenge2_d: |-
          Pruebe esta solución:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_maze_debugging_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Algunos caminos te guiarán al TNT, si vas muy lejos.
      course1_maze_debugging_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: No necesita agregar o eliminar bloques para resolver este rompecabezas.
        courseB_maze_seq_challenge2_b: Reorganiza los bloques y toma el camino del medio.
      course1_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con tu dedo. ¡Recuerda no contar el espacio donde comienzas!
      course1_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: El camino más corto podría no funcionar esta vez.
        courseB_maze_seq_challenge1_b: Intenta moverte al oeste para comenzar.
      course1_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "¡Haz que Waddles the Penguin se muestre al hacer clic en Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "¡Haz el espectáculo de Boo the Ghost cuando haces clic en Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "¡Haz que Jayden sea el Show de Fuzzy Monster cuando haces clic en Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "¡Haz que Spiff the Robot se muestre cuando haces clic en el monstruo!\n\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finalmente, haz que Wendel sea el asistente cuando hagas clic en Spiff.\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "Puedes hacer cantar a un pájaro.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Puedes hacer un pitido de robot.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Puedes hacer gruñir a un monstruo enojado.
          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      course2_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Comience creando un ciclo anidado para crear cuatro octágonos. Gire 45 grados para hacer el octágono. Salta, luego gira 90 grados después de cada uno.
        courseD_artist_nestedLoops_challenge1_b: Agregue código para dibujar un triángulo dentro de su ciclo anidado. Usa vueltas de 120 grados para tu triángulo.
        courseD_artist_nestedLoops_challenge1_c: |-
          Use un ciclo anidado: repita 8 veces dibuje un octágono dibuje un triángulo 
          salte 50 píxeles hacia adelante, gire 90 grados hacia la derecha
      course2_artist_nestedLoops_challenge2_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Para dibujar un octágono regular, el artista debe girar 45 grados 8 veces.
        courseD_artist_nestedLoops_challenge2_b: Para dibujar un cuadrado, el artista debe girar 90 grados 4 veces.
      course2_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: 'El rectángulo tiene 200 píxeles de ancho y 100 píxeles de alto. '
      course2_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: "Se puede poner en el interior de un ciclo comandos de repetición una y otra vez. ¡Intentalo!\n<xml>\n  \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n                <title name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n                </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: |-
          ¿Puedes encontrar un camino que llegue a cada flor y panal sin golpear ningún árbol? El mejor camino es una espiral. ** Puedes resolver esto sin girar a la izquierda. **
        courseD_bee_conditionals_challenge1_b: En este rompecabezas, cada espacio podría tener una flor, un panal de miel o nada. Eso significa que puedes repetir tu condicional `if / else` en cada cuadrado.
      course2_bee_conditionals_challenge2_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Al igual que los bloques ` if at flower`, el código dentro de un` while nectar> 0` solo se ejecutará si la abeja está en una flor. La principal diferencia es que el código interno se ejecutará repetidamente hasta que no quede néctar. Pruebe este patrón:
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      course2_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_a: El código original funcionaría muy bien, ¡ si hubiera solo una pieza de tesoro en cada pila!
        courseC_maze_loops_challenge2_b: Usa ciclos para que no se quede sin `collect` bloques!
      course2_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar el comando `collect` más a menudo para recolectar el tesoro extra.
      course2_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar el comando `collect` más a menudo para recolectar el tesoro extra.
      course2_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: '¡Ni siquiera pienses en tratar de probar esto sin ciclos!'
        courseC_harvester_loops_challenge1_b: Puedes repetir 'mover hacia adelante' y 'elegir maíz' todas las veces que necesites hacerlo, luego haz 'gira a la derecha' en cada esquina.
        courseC_harvester_loops_challenge1_c: |-
          Aquí está la solución completa para este acertijo.
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course2_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_a: Una forma de resolver esto parece un zig-zag. Otra parece un espiral. Hay muchas soluciones distintas para un acertijo como este. ¡Se persistente!
        courseC_harvester_loops_challenge2_b: Puedes repetir 'mover hacia adelante' y 'elegir maíz' todas las veces que necesites hacerlo, luego haz 'gira a la derecha' en cada esquina.
        courseC_harvester_loops_challenge2_c: |
          El patrón de zig zag puede repetirse dos veces para acabar el acertijo con solo 20 bloques.
          
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          El patrón de espiral puede programarse con solo 18 bloques.
          
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      course2_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_a: Piense en este camino como tres diferentes piezas. Cada uno tiene un patrón que se puede repetir.
        courseC_maze_loops_challenge1_b: Entre cada bloque 'repetición' necesita 'gire a la izquierda' o 'gire a la derecha' Scrat listo para el siguiente patrón.
        courseC_maze_loops_challenge1_c: |-
          Si hace esto ahora, solo necesita `girar a la izquierda`, luego` mover adelante adelante` unas pocas veces. ¡No te rindas! ! [] (https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png)
      course2_maze_programming_challenge1_authored_hint: [ ]
      course2_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: "* ¡Si me envías hacia atrás, sé muy cuidadoso de que me dirija al camino correcto! *"
        courseC_maze_programming_challenge2_b: '¡La solución más corta usa solo 5 bloques, pero usa el bloque de ''repetición!'
      course2_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con tu dedo. ¡Recuerda no contar el espacio donde comienzas!
      course2_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: El camino más corto podría no funcionar esta vez.
        courseB_maze_seq_challenge1_b: Intenta moverte al oeste para comenzar.
      course3_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'El semi-hexágono tiene una ** longitud de 30 ** y gira a la derecha por ** 60 grados **.  '
        courseE_artist_concept_challenge1_b: 'El triángulo 2/3 tiene una ** longitud de 80 ** y gira a la derecha por ** 120 grados **. '
      course3_artist_functions_challenge1_authored_hint:
        courseE_artist_functions_challenge1_a: Si llama a la función una vez más, puede crear el mismo diseño en la esquina final. ¡También puedes "saltar a" otras posiciones o cambiar todo como quieras!
      course3_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\nEste bloque 'salto' le permite mover el artista zombie a cualquier píxel en la cuadrícula, siempre que lo desee. Funciona moviéndolo un número de píxeles hacia la derecha y una cantidad de píxeles hacia abajo. Esto siempre se cuenta desde la esquina superior izquierda, lo que significa que no importa dónde esté * el artista zombi * * ¡se ejecuta el comando! ! [] (https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      course3_bee_debugging_challenge1_authored_hint:
        courseD_bee_debugging_challenge1_a: '¿Por qué funciona la primera mitad de este programa? Piensa por qué la abeja necesita moverse hacia atrás. ¿Cuánto néctar recoge la abeja cada vez que se mueve sobre una flor?'
        courseD_bee_debugging_challenge1_b: En el camino de regreso, haz que la abeja siga el mismo patrón. ¿Cuánta miel necesita la abeja para hacer cada vez que se mueve sobre un panal de miel?
        courseD_bee_debugging_challenge1_c: |-
          Después de que la abeja llegue a la fila inferior, haz que repita estos comandos: * Repite 2 veces: * Avanza * Haz 3 mieles * Mueve hacia atrás
      course3_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseE_bee_functions_challenge1_b: Recuerde construir su código dentro del bloque de función verde.
      course3_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseE_bee_functions_challenge1_b: Recuerde construir su código dentro del bloque de función verde.
      course3_bee_functions_challenge3_authored_hint:
        courseF_bee_functions_challenge1_a: Puedes usar las funciones en la caja de herramientas para ayudarlo. ¡Puedes invocar una función dentro de la definición de otra función!
      course3_bee_functions_challenge4_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          Si hay un camino a la derecha, deberías hacer lo siguiente:
          * Obtén cualquier néctar o haz miel.
          * Gira a la derecha hacia el camino lateral.
          * Muévete hasta final de la ruta lateral.
          * Dobla a la derecha.
          
          Si repites las acciones anteriores dos veces, estarás listo para retroceder por la ruta principal.
          
          ** ¡Solo haz clic para obtener otra sugerencia si deseas ver la solución completa! **
        courseF_bee_functions_challenge2_b: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      course3_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "Comienza centrándote en recolectar DOS gemas de cada una de las dos primeras pilas . ! [] (https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 SOY copy.png) Use estos bloques .\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Luego, recoge las gemas restantes en esta fila. ! [] (https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png) Agregue estos bloques a su programa.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finalmente, recoge el tesoro restante. Agregue estos bloques a su programa.\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Aquí está la solución completa para este rompecabezas.
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course3_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: El botón de 'PASO' puede ser muy útil en este desafío.
        courseD_farmer_condLoops_challenge1_b: Normalmente, usted simplemente "recoge calabaza" si está en una calabaza. ¿Qué más necesitas hacer si estás en una calabaza?
      course3_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: La cantidad de cada vegetal en cada espacio varía. Use los ciclos `while` para estos.
      course3_farmer_until_challenge2_authored_hint: [ ]
      course3_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: '¿Izquierda o derecha? ¡Es tu decisión!'
        courseC_maze_debugging_challenge1_b: '¡El camino de Scrat es la forma de un rectángulo! ¡Tiene que volverse del mismo modo cada vez!'
        courseC_maze_debugging_challenge1_c: Si te quedas atascado, siempre puedes volver a empezar, o eliminar todo el código y encontrar tu propio camino!
      course3_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_a: Una forma de resolver esto es agregar más pasos hacia adelante entre los giros.
        courseC_maze_debugging_challenge2_b: Si se está atorado, siempre puedes comenzar de nuevo o eliminar todo el código y encontrar su propio camino!
        courseC_maze_debugging_challenge2_c: |-
          Hay dos caminos diferentes que puedes seguir usando `seguir adelante`, y solo cuatro turnos. Si encuentras una forma de usar el bloque `repetición ¡puede haber aún más! ! [] (https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      course3_maze_until_challenge1_authored_hint: [ ]
      course3_playLab_challenge1_authored_hint:
        courseE_playLab_challenge1_a: |-
          Aquí hay algunas cosas que podría hacer cuando el jugador gana el juego: * Hacer que el dinosaurio desaparezca. * Detener las ardillas. * Haz felices a las ardillas y al caballero. * Establecer un nuevo fondo. * Haz que el caballero agradezca al jugador por ayudar. * Haz desaparecer a todos los actores y muestra un "¡Tu ganas!" mensaje.
        courseE_playLab_challenge1_b: |-
          Aquí hay algunas cosas que podrías hacer cuando el jugador pierda el juego: * Haz que el caballero desaparezca. * Haz tristes a las ardillas. * Haz que el dinosaurio diga algo. * Establecer un nuevo fondo. * Haz desaparecer a todos los actores y muestra un mensaje de "Game Over".
      course3_playlab_challenge2_authored_hint:
        courseE_playlab_challenge2_a: |-
          El actor sabe qué decir en función de su estado de ánimo. Intenta jugar con las cosas que la bruja podría decir.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">¡ Concéntrate y pregunta de nuevo!</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block></xml>
        courseE_playlab_challenge2_b: "Se sentirá como si el juego comienza de si se llama al pedir a un `question` función de nuevo por debajo de la lista de los condicionales.\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n               \n<block type=\"procedures_callnoreturn\">\n<mutation name=\"Ask a question\"></mutation>\n        </block></block></xml>"
        courseE_playlab_challenge2_c: "Tendrá que agregar más declaraciones condicionales para dar a los actores más cosas que decir.\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n              </statement></block></xml>!"
        courseE_playlab_challenge2_d: |-
          Una vez que entienda todo el código que se refiere al Actor 1, puede tratar de volver a escribir el mismo código, pero esta vez para el Actor 2. ¡No te olvides de cambiar las instrucciones dentro del bloque de 'Mostrar pantalla de título' por lo que todavía tengo sentido!
        courseE_playlab_challenge2_e: |-
          Cuando todo esté terminado, deberias poder hacer clic en cualquier actor y obtener hasta 8 mensajes diferentes. ¿Es posible expandirlo aún más?
          
          ¡Haz que un amigo pruebe tu apliación cuando termines!
      course4_artist_binary_challenge2_authored_hint:
        courseD_artist_binary_challenge2_a: |-
          El mejor consejo que tengo para ti es presionar `⟲ Start Over` si comienza a ponerse realmente desordenado. Solo hay unas pocas líneas incorrectas en el programa original. Si falla un enfoque, haz una copia de seguridad y vuelve a intentarlo. ¡Hay una solucion!
      course4_artist_concept_challenge2_authored_hint:
        courseE_artist_concept_challenge2_a: Una vez que define una función, puede llamarla una y otra vez, cuando y donde quiera!
        courseE_artist_concept_challenge2_b: |-
          Puede saltar a diferentes posiciones en el lienzo usando este comando:
          
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      course4_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\nEste bloque 'salto' le permite mover el artista zombie a cualquier píxel en la cuadrícula, siempre que lo desee. Funciona moviéndolo un número de píxeles hacia la derecha y una cantidad de píxeles hacia abajo. Esto siempre se cuenta desde la esquina superior izquierda, lo que significa que no importa dónde esté * el artista zombi * * ¡se ejecuta el comando! ! [] (https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      course4_artist_fwp_challenge1_authored_hint: [ ]
      course4_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_a: Each vertical line has a length of `10`. Each horizontal line should have a length of `length`.
        courseF_artist_variables_challenge1_b: You will want to increase the value of `length` by 10 **twice** inside the loop.
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberá girar a la izquierda dos veces, girar a la derecha dos veces y avanzar un total de cuatro veces.
        courseF_artist_variables_challenge1_d: |-
          This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.
          
          ![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)
          
          If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: 'Las variables son útiles porque puede agregarlas cada vez, a través de un ciclo. '
        courseF_artist_variables_challenge2_b: Este rompecabezas tiene un ciclo que crea el polígono, un bucle que repite el polígono " lados " veces, luego otro ciclo que lo hace todo de nuevo después de agregar 5 a " lados ".
        courseF_artist_variables_challenge2_c: Usando una variable para 'lados' y una para 'longitud' se tiene un código más limpio que usted puede reutiliza en repetidas ocasiones, en vez de crear una nueva copia para cada conjunto de números.
        courseF_artist_variables_challenge2_d: |-
          **Solution:**
          
          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      course4_bee_for_challenge1_authored_hint: [ ]
      course4_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          The main program should look something like this:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: |-
          Mira cuánto maíz hay disponible para cosechar en cada espacio. ¿Ves el patrón de contador? El parámetro 'longitud' debe ser utilizado para establecer el valor máximo en el ciclo`for`. ¡No olvides que el agricultor vuelva al camino principal después de la cosecha!
        courseF_bee_fwp_challenge1_c: |-
          Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.
          Inside this loop, you should move forward and pick all of the corn.
          
          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: |-
          En el 'loop' se va a 'avanzar' y luego 'obtener néctar' ** contador de veces **. Después del 'bucle' para usted puede simplemente 'retroceder' ** longitud veces **. Puede leer esta pista varias veces para entenderlo. La parte de ** negrita ** es una sugerencia sobre cómo usar los dos lazos 'repetición' necesita.
        courseF_bee_fwp_challenge1_e: |
          **Here is the solution:**
          
          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      course4_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Comience asegurándose de que entiende cómo funciona esta *supuesta* función. A medida que la agricultora se mueve por cada camino, solo intentará recolectar maíz. En cambio, ¿cómo puedes hacer que revise cada una de las 3 verduras y elegir solo la que encuentra?
          
          Agregue declaraciones condicionales a la función para buscar maíz, calabazas y lechuga.
        courseF_bee_fwp_challenge2_b: "¿Te estás quedando sin bloques de 'avanzar'? Trate de usar un *segundo * ` para el ciclo ` en su programa principal. \n\n** Nota: ** Tenga cuidado de no confundir `counter` con` counter2` en su código."
        courseF_bee_fwp_challenge2_c: |-
          **Here is what your function should look like:**
          
          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **Here is what your main program should look like:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      course4_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvide que puede `repetir` un solo comando o un patrón más largo. Incluso se puede `` repetir` un repetir` bloque!
        courseD_bee_nested_loops_challenge2_b: Para obtener las 4 gemas, primero use un ciclo para alejarse del centro. Gire a la izquierda o a la derecha, luego use un ciclo anidado para pasar de la primera pila de tesoros a la segunda. Si repite el ciclo anidado suficientes veces, el recolector se moverá alrededor de la * cueva completa *!
        courseD_bee_nested_loops_challenge2_c: El programa más corto que alcanza todo el tesoro usa solo un bloque `colectar` y dos turnos.
        courseD_bee_nested_loops_challenge2_d: |-
          **Solución:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_harvester_nested_loops_challenge1_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: Probablemente ya hayas usado un ciclo para crear un patron zig-zag. Si recuerdas ese algoritmo, puedes agregarle algunas cosas para usarlo aquí.
      course4_playlab_variables_challenge1_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          You will need additional blocks from the tool box to get the actors to talk.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      course4_playlab_variables_challenge3_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          El actor sabe que decir porque revisa el valor actual de la variable ´fortuna´.
          
          <xml><block type="variables_set" inline="false">
          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          Parecera que el juego empieza de nuevo si llamas a la función 'haz una pregunta' despues de que el actor dice la fortuna.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">fortune</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "Tendrás que agregar más declaraciones condicionales para dar a los actores más cosas que decir.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n              \nNo olvides cambiar los humores que mostrarán los actores dentro del ciclo ´repetir para siempre´. ¡También puedes determinar los humores al azar!"
        courseF_playlab_variables_challenge3_d: |-
          Una vez que entiendas todo el código que se refiere al Actor 1, puedes tratar de volver a escribir el mismo código, pero esta vez para el Actor 2. ¡No te olvides de cambiar las instrucciones dentro del bloque de 'Mostrar pantalla de título' para que tengan sentido!
        courseF_playlab_variables_challenge3_e: |-
          Cuando todo esté terminado, deberias poder hacer clic en cualquier actor y obtener hasta 8 mensajes diferentes. ¿Es posible expandirlo aún más?
          
          ¡Haz que un amigo pruebe tu apliación cuando termines!
      courseA_artist_loops10_authored_hint: [ ]
      courseA_artist_loops10_2018_authored_hint: [ ]
      courseA_artist_loops11_authored_hint: [ ]
      courseA_artist_loops11_2018_authored_hint: [ ]
      courseA_artist_loops11_predict2_authored_hint: [ ]
      courseA_artist_loops12_authored_hint: [ ]
      courseA_artist_loops12_2018_authored_hint: [ ]
      courseA_artist_loops2_authored_hint:
        courseA_artist_loops2_a: '¿No sabes cómo dibujar una línea? Comience unir  bloques a la <xml> <tipo de bloque = "when_run" /> </ xml>   para ver qué pasa.'
        courseA_artist_loops2_b: Usa este bloque <xml><block type="simple_move_right"/></xml> para resolver este rompecabezas.
      courseA_artist_loops2_2018_authored_hint:
        courseA_artist_loops2_a: '¿No sabes cómo dibujar una línea? Comience unir  bloques a la <xml> <tipo de bloque = "when_run" /> </ xml>   para ver qué pasa.'
        courseA_artist_loops2_b: Usa este bloque <xml><block type="simple_move_right"/></xml> para resolver este rompecabezas.
      courseA_artist_loops3_authored_hint:
        courseA_artist_loops3_a: Rastree lentamente el programa con el dedo para ver dónde esta el error.
        courseA_artist_loops3_b: |-
          Querrá utilizar un bloque como este para resolver este rompecabezas . 
          
          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops3_2018_authored_hint:
        courseA_artist_loops3_a: Rastree lentamente el programa con el dedo para ver dónde esta el error.
        courseA_artist_loops3_b: |-
          Querrá utilizar un bloque como este para resolver este rompecabezas . 
          
          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops4_authored_hint:
        courseA_artist_loops4_a: Si desea que el ciclo se repita más de 4 veces, puede cambiar el número en la parte superior del bloque.
        courseA_artist_loops4_b: |-
          Dado que sólo puede utilizar un bloque <xml><block type="simple_move_right"/></xml>
          trate de poner dentro del ciclo <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml>.
      courseA_artist_loops4_2018_authored_hint:
        courseA_artist_loops4_a: Si desea que el ciclo se repita más de 4 veces, puede cambiar el número en la parte superior del bloque.
        courseA_artist_loops4_b: |-
          Dado que solo puede utilizar un bloque <xml><block type="simple_move_right"/></xml>
          trate de poner dentro del ciclo <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block>.
      courseA_artist_loops5_authored_hint:
        courseA_artist_loops5_a: Intenta usar lo que has aprendido sobre bloques <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> para completar este rompecabezas!
        courseA_artist_loops5_b: Si desea que el ciclo se repita más de 4 veces, puede cambiar el número en la parte superior del bloque.
        courseA_artist_loops5_c: "Dado que sólo puede utilizar un bloque <xml><block type=\"simple_move_right\"/></xml> trate de poner dentro del ciclo\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>."
      courseA_artist_loops5_2018_authored_hint:
        courseA_artist_loops5_a: Intenta usar lo que has aprendido sobre bloques <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> para completar este rompecabezas!
        courseA_artist_loops5_b: Si desea que el ciclo se repita más de 4 veces, puede cambiar el número en la parte superior del bloque.
        courseA_artist_loops5_c: "Dado que sólo puede utilizar un bloque <xml><block type=\"simple_move_right\"/></xml> trate de poner dentro del ciclo\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>."
      courseA_artist_loops6_authored_hint:
        courseA_artist_loops6_a: No puede averiguar cómo hacer la colina? Intenta jugar un poco con los bloques para ver qué dibuja cada uno.
        courseA_artist_loops6_b: Necesitarás 2 bloques en 2 direcciones para resolver este rompecabezas.
      courseA_artist_loops6_2018_authored_hint:
        courseA_artist_loops6_a: No puede averiguar cómo hacer la colina? Intenta jugar un poco con los bloques para ver qué dibuja cada uno.
        courseA_artist_loops6_b: Necesitarás 2 bloques en 2 direcciones para resolver este rompecabezas.
      courseA_artist_loops7_authored_hint:
        courseA_artist_loops7_a: '¿No puede averiguar dónde colocar el ciclo? Trate de escribir el código paso a paso, y buscar para un patrón.'
        courseA_artist_loops7_b: Primero escribe el código para una ola y luego repítelo para dibujar las otras dos.
        courseA_artist_loops7_c: |-
          Recuerda que puedes poner más de un bloque en un ciclo <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops7_2018_authored_hint:
        courseA_artist_loops7_a: '¿No puede averiguar dónde colocar el ciclo? Trate de escribir el código paso a paso, y buscar para un patrón.'
        courseA_artist_loops7_b: Primero escribe el código para una ola y luego repítelo para dibujar las otras dos.
        courseA_artist_loops7_c: |-
          Recuerda que puedes poner más de un bloque en un ciclo <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops7_forVideo_authored_hint:
        courseA_artist_loops7_a: '¿No puede averiguar dónde colocar el ciclo? Trate de escribir el código paso a paso, y buscar para un patrón.'
        courseA_artist_loops7_b: Primero escribe el código para una ola y luego repítelo para dibujar las otras dos.
        courseA_artist_loops7_c: |-
          Recuerda que puedes poner más de un bloque en un ciclo <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops8_authored_hint:
        courseA_artist_loops8_a: Intenta ejecutar el código para ver lo que se ha escrito para ti.
        courseA_artist_loops8_b: '¿Cómo enlazarías el código que se te ha dado?'
        courseA_artist_loops8_c: "¿Qué hace el código?   \n¿Qué se supone que haga?   \n¿Qué te dice eso?"
      courseA_artist_loops8_2018_authored_hint:
        courseA_artist_loops8_a: Intenta ejecutar el código para ver lo que se ha escrito para ti.
        courseA_artist_loops8_b: '¿Cómo enlazarías el código que se te ha dado?'
        courseA_artist_loops8_c: "¿Qué hace el código?   \n¿Qué se supone que haga?   \n¿Qué te dice eso?"
      courseA_artist_loops9_authored_hint:
        courseA_artist_loops9_a: Agregue otro bloque al código que le dan para dibujar el resto de las escaleras.
        courseA_artist_loops9_b: "El bloque que se agrega debe ir dentro del bucle.\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>."
        courseA_artist_loops9_c: Si no puede averiguar dónde poner el ciclo, intenta escribir el código paso a paso y buscar los patrones.
      courseA_artist_loops9_2018_authored_hint:
        courseA_artist_loops9_a: Agregue otro bloque al código que le dan para dibujar el resto de las escaleras.
        courseA_artist_loops9_b: "El bloque que se agrega debe ir dentro del bucle.\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>."
        courseA_artist_loops9_c: Si no puede averiguar dónde poner el ciclo, intenta escribir el código paso a paso y buscar los patrones.
      courseA_artist_loops_challenge1_authored_hint: [ ]
      courseA_artist_loops_challenge1_2018_authored_hint: [ ]
      courseA_artist_loops_challenge2_authored_hint:
        courseA_artist_loops_challenge2_a: Bloques como este <xml>  <block type="simple_move_up_left"/></xml> le permitirán a su artista moverse de forma inclinada!
        courseA_artist_loops_challenge2_b: Cuando termines una casa de pájaros, ¡salta a la siguiente!
        courseA_artist_loops_challenge2_c: Necesitará MUCHOS bloques dentro del ciclo para este desafío.
      courseA_artist_loops_challenge2a_authored_hint:
        courseA_artist_loops_challenge2_a: Bloques como este <xml>  <block type="simple_move_up_left"/></xml> le permitirán a su artista moverse de forma inclinada!
        courseA_artist_loops_challenge2_b: Cuando termines una tienda, ¡salta dos veces para pasar a la siguiente!
        courseA_artist_loops_challenge2_c: Todos tus bloques necesitarán estar dentro de un ciclo para terminar este rompecabezas.
      courseA_artist_loops_challenge2a_2018_authored_hint:
        courseA_artist_loops_challenge2_a: Bloques como este <xml>  <block type="simple_move_up_left"/></xml> le permitirán a su artista moverse de forma inclinada!
        courseA_artist_loops_challenge2_b: Cuando termines una tienda, ¡salta dos veces para pasar a la siguiente!
        courseA_artist_loops_challenge2_c: Todos tus bloques necesitarán estar dentro de un ciclo para terminar este rompecabezas.
      courseA_artist_loops_challenge3_authored_hint:
        harvey_tictactoe: Puede usar bloques `salto` para moverte a otros espacios.
      courseA_bee_seq1_authored_hint:
        courseA_bee_seq1_a: |-
          Usa este bloque para obtener néctar una vez que la abeja encuentre una flor.
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq10_authored_hint: [ ]
      courseA_bee_seq11_authored_hint: [ ]
      courseA_bee_seq12_authored_hint:
        courseA_bee_seq1_a: |-
          Usa este bloque para obtener néctar una vez que la abeja encuentre una flor.
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq13_authored_hint: [ ]
      courseA_bee_seq14_authored_hint: [ ]
      courseA_bee_seq2_authored_hint: [ ]
      courseA_bee_seq3_authored_hint: [ ]
      courseA_bee_seq4_authored_hint: [ ]
      courseA_bee_seq5_authored_hint: [ ]
      courseA_bee_seq6_authored_hint: [ ]
      courseA_bee_seq7_authored_hint: [ ]
      courseA_bee_seq8_authored_hint: [ ]
      courseA_bee_seq9_authored_hint: [ ]
      courseA_collector_loops1_authored_hint:
        courseA_collector_loops1_a: |-
          Despúes de que te hayas mudado a un cuadrado con tesoro, usa este bloque para recogerlo.
          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Una solución simple sería moverse al este 2 veces, luego obtener el tesoro.
      courseA_collector_loops10_authored_hint: [ ]
      courseA_collector_loops10_2018_authored_hint: [ ]
      courseA_collector_loops11_authored_hint: [ ]
      courseA_collector_loops11_2018_authored_hint: [ ]
      courseA_collector_loops11_predict2_authored_hint: [ ]
      courseA_collector_loops1_2018_authored_hint:
        courseA_collector_loops1_a: |-
          Despúes de que te hayas mudado a un cuadrado con tesoro, usa este bloque para recogerlo.
          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Una solución simple sería moverse al este 2 veces, luego obtener el tesoro.
      courseA_collector_loops2_authored_hint:
        courseA_collector_loops2_a: Tendrás que moverte antes de poder recolectar cualquier tesoro.
        courseA_collector_loops2_b: |-
          Despúes de que te hayas mudado a un cuadrado con tesoro, usa este bloque para recogerlo.
          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018_authored_hint:
        courseA_collector_loops2_a: Tendrás que moverte antes de poder recolectar cualquier tesoro.
        courseA_collector_loops2_b: |-
          Despúes de que te hayas mudado a un cuadrado con tesoro, usa este bloque para recogerlo.
          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3_authored_hint:
        courseA_collector_loops3_a: "Intente usar un ciclo\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>!"
        courseA_collector_loops3_b: El bloque que se agrega debe ir dentro del bucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loop.
      courseA_collector_loops3_2018_authored_hint:
        courseA_collector_loops3_a: "Intente usar un ciclo\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>!"
        courseA_collector_loops3_b: El bloque que se agrega debe ir dentro del bucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> loop.
      courseA_collector_loops3_predict1_authored_hint: [ ]
      courseA_collector_loops4_authored_hint:
        courseA_collector_loops4_a: Para cambiar qué tan lejos va Laurel, cambie la cantidad de veces que se ejecuta el ciclo.
        courseA_collector_loops4_b: No olvides que Laurel necesita caminar y recoger el tesoro después de que ella termine el ciclo <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>!
      courseA_collector_loops4_2018_authored_hint:
        courseA_collector_loops4_a: Para cambiar qué tan lejos va Laurel, cambie la cantidad de veces que se ejecuta el ciclo.
        courseA_collector_loops4_b: No olvides que Laurel necesita caminar y recoger el tesoro después de que ella termine el ciclo <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>!
      courseA_collector_loops5_authored_hint:
        courseA_collector_loops5_a: Si usted no puede encontrar la respuesta de inmediato, trate de usar un trozo de papel para averiguar las flechas que se necesita y mirar un patrón.
        courseA_collector_loops5_b: Intente dividir el problema en 2 partes, moviéndose de lado y luego hacia abajo.
        courseA_collector_loops5_c: Deberá comenzar con un ciclo <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> que mueve a Laurel hacia el oeste y recoge el tesoro.
      courseA_collector_loops5_2018_authored_hint:
        courseA_collector_loops5_a: Si usted no puede encontrar la respuesta de inmediato, trate de usar un trozo de papel para averiguar las flechas que se necesita y mirar un patrón.
        courseA_collector_loops5_b: Intente dividir el problema en 2 partes, moviéndose de lado y luego hacia abajo.
        courseA_collector_loops5_c: Deberá comenzar con un ciclo <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> que mueve a Laurel hacia el oeste y recoge el tesoro.
      courseA_collector_loops6_authored_hint:
        courseA_collector_loops6_a: '¿No puede descubrir qué pasa? Intenta ejecutar el código un par de veces para ver qué pasa.'
        courseA_collector_loops6_b: La solución más corta tiene 2 ciclos, <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>, uno después del otro.
      courseA_collector_loops6_2018_authored_hint:
        courseA_collector_loops6_a: '¿No puede descubrir qué pasa? Intenta ejecutar el código un par de veces para ver qué pasa.'
        courseA_collector_loops6_b: La solución más corta tiene 2 ciclos, <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>, uno después del otro.
      courseA_collector_loops7_authored_hint:
        courseA_collector_loops7_a: Si no puede descubrir qué viene después, intente ejecutar el código para ver dónde termina Laurel.
      courseA_collector_loops7_2018_authored_hint:
        courseA_collector_loops7_a: Si no puede descubrir qué viene después, intente ejecutar el código para ver dónde termina Laurel.
      courseA_collector_loops8_authored_hint:
        courseA_collector_loops8_a: Si usted está teniendo problemas para encontrar este rompecabezas, trate de escribir los movimientos hacia abajo en un pedazo de papel y mirando a un patrón.
        courseA_collector_loops8_b: Intenta dividir este rompecabezas en 3 problemas separados y escribir ciclos para cada uno.
        courseA_collector_loops8_c: Recuerde que puede escribir una parte del código a la vez, luego presione "Ejecutar" para descubrir hacia dónde debe dirigirse desde allí.
      courseA_collector_loops8_2018_authored_hint:
        courseA_collector_loops8_a: Si usted está teniendo problemas para encontrar este rompecabezas, trate de escribir los movimientos hacia abajo en un pedazo de papel y mirando a un patrón.
        courseA_collector_loops8_b: Intenta dividir este rompecabezas en 3 problemas separados y escribir ciclos para cada uno.
        courseA_collector_loops8_c: Recuerde que puede escribir una parte del código a la vez, luego presione "Ejecutar" para descubrir hacia dónde debe dirigirse desde allí.
      courseA_collector_loops9_authored_hint:
        courseA_collector_loops9_a: 'Si no encuentra los mejores lugares para utilizar ciclos, trate de codificar paso a paso y encontrar un patrón. '
        courseA_collector_loops9_b: Intenta poner dos de tus ciclos <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> dentro de otro ciclo que hacen el código más corto!
      courseA_collector_loops9_2018_authored_hint:
        courseA_collector_loops9_a: 'Si no encuentra los mejores lugares para utilizar ciclos, trate de codificar paso a paso y encontrar un patrón. '
        courseA_collector_loops9_b: Intenta poner dos de tus ciclos <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> dentro de otro ciclo que hacen el código más corto!
      courseA_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada ciclo si algo parece estar mal.
        courseA_collector_loops_challenge1_b: No necesita usar un ciclo si solo está haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la cueva cuando comienzas, pero solo necesitas moverte 5 veces al sur para obtener el tesoro. ¿Sabes por qué?
        courseA_collector_loops_challenge1_d: |-
          El programa de inicio no recoge las últimas 2 gemas. Intente agregar este código al final: <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2018_authored_hint:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada ciclo si algo parece estar mal.
        courseA_collector_loops_challenge1_b: No necesita usar un ciclo si solo está haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la cueva cuando comienzas, pero solo necesitas moverte 5 veces al sur para obtener el tesoro. ¿Sabes por qué?
        courseA_collector_loops_challenge1_d: |-
          El programa de inicio no recoge las últimas 2 gemas. Intente agregar este código al final: <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: Solo necesitas usar 1 bloque para resolver esto.
        courseA_collector_loops_challenge2_a: Puede retroceder por el camino una segunda vez antes de ir hacia el sur.
      courseA_collector_loops_challenge2kp_authored_hint:
        courseA_collector_loops_challenge2kp_b: Prueba este camino para llegar a una solución.
        courseA_collector_loops_challenge2kp_a: '¿Puedes usar ciclos para resolver este rompecabezas?'
      courseA_collector_loops_challenge2kp_2018_authored_hint:
        courseA_collector_loops_challenge2kp_b: Prueba este camino para llegar a una solución.
        courseA_collector_loops_challenge2kp_a: '¿Puedes usar ciclos para resolver este rompecabezas?'
      courseA_collector_preLoops1_authored_hint: [ ]
      courseA_collector_preLoops2_authored_hint: [ ]
      courseA_collector_preLoops3_authored_hint: [ ]
      courseA_collector_preLoops4_authored_hint:
        courseA_collector_preLoops4_a: "Para agarrar el tesoro, ¡encaje dos! [] (Https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png) ¡ bloques y uno! [] (Https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d- image-1508904559201.05.30.png) bloquear en la parte inferior del programa y haga clic en \"Ejecutar\"!\n\n"
      courseA_collector_preLoops5_authored_hint:
        courseA_collector_preLoops5_a: '¡Tendrás que ir en dos direcciones diferentes para obtener incluso una gema!'
      courseA_collector_preLoops6_authored_hint:
        courseA_collector_preLoops6_a: Tendrá que utilizar dos! [] (Https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) bloques para resolver este rompecabezas .
      courseA_collector_preLoops7_authored_hint:
        courseA_collector_loops2_b: |-
          Despúes de que te hayas mudado a un cuadrado con tesoro, usa este bloque para recogerlo.
          <xml>  <block type="collector_collect"/></xml>
      courseA_forVideoTest_artist_authored_hint: [ ]
      courseA_harvester_forVideo_authored_hint:
        courseA_harvester_loops3_a: |-
          Use un bloque de repetición como este para ayudarlo.
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">3</title>
          </block></xml>
      courseA_harvester_loops1_authored_hint:
        courseA_harvester_loops1_a: |-
          ¡Una vez que se mueva hacia el maíz, use este bloque para recogerlo!
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops10_authored_hint: [ ]
      courseA_harvester_loops11_authored_hint: [ ]
      courseA_harvester_loops2_authored_hint:
        courseA_harvester_loops2_a: 'Su código tendrá ** cuatro ** bloques `de mover el oeste` y ** cuatro ** bloques de` selección de maíz`. '
      courseA_harvester_loops3_authored_hint:
        courseA_harvester_loops3_a: |-
          Use un bloque de repetición como este para ayudarlo.
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">4</title>
          </block></xml>
        courseA_harvester_loops3_b: Para repetir código, arrastra un ciclo ´repetir´, luego coloca dentro el bloque que quieres repetir.
      courseA_harvester_loops4_authored_hint:
        courseA_harvester_loops4_a: '¡No tengas miedo de presionar `Ejecutar` para ver qué pasa!'
        courseA_harvester_loops4_b: '¿Cuántas piezas de maíz hay? ¿Cuántas veces se repite tu código?'
      courseA_harvester_loops5_authored_hint:
        courseA_harvester_loops5_a: Si te quedas atascado, intenta resolver el rompecabezas en 2 partes, una parte antes de la esquina y una parte después de la esquina.
        courseA_harvester_loops5_b: El código final tendrá ** un ** ciclo, ** un ** bloque de 'mover al sur', y ** un ** bloque 'mover al Este'.
        courseA_harvester_loops5_c: '¡Utilizar esta ruta para recoger el maíz!'
      courseA_harvester_loops5a_authored_hint:
        courseA_harvester_loops5a_a: Necesitará un ciclo de repetición después de otro.
        courseA_harvester_loops5a_b: Un ciclo repetirá `mover al sur`, y el otro repetirá` mover al este`.
        courseA_harvester_loops5a_c: Utilizar este camino para mover una forma y luego el otro.
      courseA_harvester_loops5b_authored_hint:
        courseA_harvester_loops5b_a: Presiona `Ejecutar` y mira lo que sucede!
        courseA_harvester_loops5b_b: '¿Sus ciclos repiten la cantidad correcta de veces?'
        courseA_harvester_loops5b_c: Muevete de una forma, luego de la otra con este camino.
      courseA_harvester_loops6_authored_hint:
        courseA_harvester_loops6_a: Si te quedas atascado, intentar escribir los pasos en el papel y en busca de patrones que se repiten.
        courseA_harvester_loops6_b: Este es el camino que debes tomar para recoger el maíz.
      courseA_harvester_loops7_authored_hint:
        courseA_harvester_loops7_a: '¡Necesitará dos ciclos de repeteción uno después del otro!'
        courseA_harvester_loops7_b: Utiliza dos ciclos para seguir este camino.
      courseA_harvester_loops8_authored_hint: [ ]
      courseA_harvester_loops9_authored_hint:
        courseA_harvester_loops9_a: Divide este rompecabezas en tres partes diferentes. Una parte en la primera esquina, una parte en la segunda esquina y una parte hasta el final.
        courseA_harvester_loops9_b: '¡No tengas miedo de ejecutar tu código después de cada parte para ver qué pasa!'
        courseA_harvester_loops9_c: '¡Sigue esta ruta para recoger todo el maíz.'
      courseA_harvester_seq1_authored_hint:
        courseA_harvester_seq1_a: |-
          ¡Usa este bloque para recoger el maíz cuando la cosechadora lo encuentre!
          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          La cosechadora deberá moverse al este tres veces para llegar al maíz. Utilice este bloque:
          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10_authored_hint:
        courseA_harvester_seq10_a: '¿Estás atascado? Trate de anotar primero los pasos en una hoja de papel.'
        courseA_harvester_seq10_b: Necesitas `Mover al este`, luego` Mover al norte`. Haz esto dos veces. ¡No te olvides de obtener todo el maíz también!
        courseA_harvester_seq10_c: '¡Utiliza esta ruta para recoger todo el maíz.'
      courseA_harvester_seq11_authored_hint: [ ]
      courseA_harvester_seq12_authored_hint: [ ]
      courseA_harvester_seq13_authored_hint:
        courseA_bee_seq1_a: |-
          Use este bloque para recoger maíz una vez que la cosechadora lo recibe.
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_harvester_seq2_authored_hint:
        courseA_harvester_seq2_a: '¡No olvides utilizar <xml><block type="harvester_corn"/></xml> para recoger el maíz!'
        courseA_harvester_seq2_b: '¡Intenta escribir los pasos en papel para encontrar una solución!'
      courseA_harvester_seq3_authored_hint:
        courseA_harvester_seq3_a: |-
          ¿Recuerdas usar este bloque?
          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Diga los pasos en voz alta y vea si le ayudan a encontrar la respuesta.
      courseA_harvester_seq4_authored_hint:
        courseA_harvester_seq4_a: '¿Cuántos espacios hay entre el Harvester y el maíz? ¿Cuántos bloques hay en tu espacio de trabajo?'
        courseA_harvester_seq4_b: |-
          Necesitará cinco bloques mover al este y un bloque` Tomar maíz`:
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5_authored_hint:
        courseA_harvester_seq5_a: '¿Qué bloque mueve a la cosechadora de la manera incorrecta?'
        courseA_harvester_seq5_b: Es necesario eliminar un bloque.
        courseA_harvester_seq5_c: |-
          ¡Tira este bloque a la basura!
          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6_authored_hint:
        courseA_harvester_seq6_a: Si estás atascado, trata de decir los pasos en voz alta. Podría ayudarte a descubrir el camino correcto.
      courseA_harvester_seq7_authored_hint:
        courseA_harvester_seq7_a: Intenta resolver el rompecabezas en 2 partes, una parte antes de la esquina y una parte después de la esquina.
        courseA_harvester_seq7_b: '¿Tienes problemas? Este es el camino que debe tomar la cosechadora.'
      courseA_harvester_seq8_authored_hint: [ ]
      courseA_harvester_seq9_authored_hint:
        courseA_harvester_seq9_a: Ejecute el código varias veces para ver qué sucede. ¿Dónde se detiene la cosechadora?
        courseA_harvester_seq9_b: '¡No te olvides de recoger todo el maíz! Necesitarás bloques de maíz ** ** **.'
        courseA_harvester_seq9_c: Sigue esta ruta para recoger todo el maíz.
      courseA_maze_ramp2_2018_authored_hint:
        '1': |-
          Su código debe verse así:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2a_2018_authored_hint:
        '1': Ajustar los dos bloques de la parte inferior del bloque "cuando corre".
      courseA_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) \n\nPara eliminar un bloque del medio de su código, arrastra todos los bloques debajo de él hacia la derecha y permite que se queden en el espacio de trabajo por un tiempo. \n\nHaz clic en el bloque que desea eliminar y arrástralo nuevamente a la caja de herramientas. \n\nFinalmente, coloca los otros bloques en su lugar.\n"
      courseA_maze_ramp3a_2018_authored_hint:
        '1': |
          Su código debe verse así:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
      courseA_maze_ramp4a_2018_authored_hint:
        '1': |-
          Su código debe verse así:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerde que girar a la derecha e izquierda es desde la perspectiva del pájaro.
        courseC_maze_programming5_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseA_maze_ramp5a_2018_authored_hint:
        '1': |-
          Su código debe verse así:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_seq1_authored_hint:
        courseA_maze_seq1_a: |-
          Si usted está teniendo problemas para conseguir que el pájaro se mueva, asegurar que los bloques encajen en su lugar
          <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          El ave tendrá que moverse hacia el oeste 3 veces para llegar al cerdo. Utilice este bloque:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10_authored_hint:
        courseA_maze_seq10_a: Si tiene problemas, primero intente anotar los pasos en una hoja de papel.
        courseA_maze_seq10_b: Tendrá que ir en 3 direcciones para resolver este rompecabezas.
      courseA_maze_seq10_2018_authored_hint:
        courseA_maze_seq10_a: Si tiene problemas, primero intente anotar los pasos en una hoja de papel.
        courseA_maze_seq10_b: Tendrá que ir en 3 direcciones diferentes para resolver este rompecabezas.
      courseA_maze_seq11_authored_hint: [ ]
      courseA_maze_seq11_2018_authored_hint: [ ]
      courseA_maze_seq12_authored_hint: [ ]
      courseA_maze_seq12_2018_authored_hint: [ ]
      courseA_maze_seq12_predict2_authored_hint: [ ]
      courseA_maze_seq13_authored_hint:
        courseA_maze_seq13_a: Si el camino que necesita no está claro, use su dedo para seguir el camino del pájaro hasta el cerdo.
        courseA_maze_seq13_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá.'
        courseA_maze_seq13_c: |-
          Estos bloques le ayudarán a moverse más cerca del cerdo <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml>.
      courseA_maze_seq13_2018_authored_hint:
        courseA_maze_seq13_a: Si el camino que necesita no está claro, use su dedo para seguir el camino del pájaro hasta el cerdo.
        courseA_maze_seq13_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá.'
        courseA_maze_seq13_c: |-
          Estos bloques le ayudarán a moverse más cerca del cerdo <xml><block type="maze_moveNorth"/></xml>
          <xml><block type="maze_moveEast"/></xml>.
      courseA_maze_seq1_2018_authored_hint:
        courseA_maze_seq1_a: |-
          Si usted está teniendo problemas para conseguir que el pájaro se mueva, asegurar que los bloques encajen en su lugar
          <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          El ave tendrá que moverse hacia el oeste 3 veces para llegar al cerdo. Utilice este bloque:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2_authored_hint:
        courseA_maze_seq2_a: A este programa le falta 1 bloque. ¿Puede averiguar cuál?
        courseA_maze_seq2_b: Intenta ejecutar el código primero, para ver dónde termina el pájaro. ¿A dónde necesitar ir desde allí?
      courseA_maze_seq2_2018_authored_hint:
        courseA_maze_seq2_a: A este programa le falta 1 bloque. ¿Puede averiguar cuál?
        courseA_maze_seq2_b: Intenta ejecutar el código primero, para ver dónde termina el pájaro. ¿A dónde necesitar ir desde allí?
      courseA_maze_seq2_predict1_authored_hint: [ ]
      courseA_maze_seq3_authored_hint:
        courseA_maze_seq3_a: 1 de los bloques está moviendo al pájaro en la dirección incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
        courseA_maze_seq3_b: Intenta usar el botón de paso para encontrar dónde sale mal el programa. ¿Es el primer paso? ¿El segundo?
        courseA_maze_seq3_c: Este bloque no parece estar moviendo el pájaro en la dirección correcta. ¿Puedes reemplazarlo con un bloque diferente? <xml><block type="maze_moveNorth"/></xml>?
      courseA_maze_seq3_2018_authored_hint:
        courseA_maze_seq3_a: 1 de los bloques está moviendo al pájaro en la dirección incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
        courseA_maze_seq3_b: Intenta usar el botón de paso para encontrar dónde sale mal el programa. ¿Es el primer paso? ¿El segundo?
        courseA_maze_seq3_c: Este bloque no parece estar moviendo el pájaro en la dirección correcta. ¿Puedes reemplazarlo con un bloque diferente? <xml><block type="maze_moveNorth"/></xml>?
      courseA_maze_seq4_authored_hint:
        courseA_maze_seq4_a: Si tiene problemas, intente descubrir cuál es la ruta correcta y luego elimine el bloque que no encaja.
        courseA_maze_seq4_b: Intenta ejecutar el código tal como está. ¿Algo va mal? ¿Qué bloque puedes eliminar? ¿Cómo puedes arreglarlo?
      courseA_maze_seq4_2018_authored_hint:
        courseA_maze_seq4_a: Si tiene problemas, intente descubrir cuál es la ruta correcta y luego elimine el bloque que no encaja.
        courseA_maze_seq4_b: Intenta ejecutar el código tal como está. ¿Algo va mal? ¿Qué bloque puedes eliminar? ¿Cómo puedes arreglarlo?
      courseA_maze_seq4a_authored_hint:
        courseA_maze_seq4_a: Si tiene problemas, intente usar su dedo para descubrir la ruta correcta señalándola en el mapa. Lo que mueve el dedo se hace?
      courseA_maze_seq5_authored_hint:
        courseA_maze_seq5_a: '¡Intenta escribir los pasos en papel para encontrar una solución!'
        courseA_maze_seq5_b: Necesitarás 2 bloques, apuntando en 2 direcciones.
      courseA_maze_seq5_2018_authored_hint:
        '1': '¡Intenta escribir los pasos en papel para encontrar una solución!'
        '2': |-
          Necesitará usar este bloque: 
          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5a_2018_authored_hint:
        '1': Diga los pasos en voz alta y vea si le ayudan a encontrar la respuesta.
      courseA_maze_seq6_authored_hint:
        courseA_maze_seq6_a: Tu código final debe tener 3 bloques de movimiento.
        courseA_maze_seq6_b: Si te quedas atascado, intenta resolver el rompecabezas en 2 partes, una parte antes de la esquina y una parte después de la esquina.
      courseA_maze_seq6_2018_authored_hint:
        courseA_maze_seq6_a: Tu código final debe tener 3 bloques de movimiento.
        courseA_maze_seq6_b: Si te quedas atascado, intenta resolver el rompecabezas en 2 partes, una parte antes de la esquina y una parte después de la esquina.
      courseA_maze_seq7_authored_hint:
        courseA_maze_seq7_a: Hay 1 bloque que debes agregar para mover el pájaro al cerdo.
        courseA_maze_seq7_b: Si no puede descubrir qué hacer, intente dibujar el rompecabezas en papel y use su dedo para descubrir en qué dirección moverse.
      courseA_maze_seq7_2018_authored_hint:
        courseA_maze_seq7_a: Hay 1 bloque que debes agregar para mover el pájaro al cerdo.
        courseA_maze_seq7_b: Si no puede descubrir qué hacer, intente dibujar el rompecabezas en papel y use su dedo para descubrir en qué dirección moverse.
      courseA_maze_seq8_authored_hint:
        courseA_maze_seq8_a: Si estás atascado, intenta dibujar la imagen en papel para ver cómo se debe mover el pájaro.
      courseA_maze_seq8_2018_authored_hint:
        courseA_maze_seq8_a: Si estás atascado, intenta dibujar la imagen en papel para ver cómo se debe mover el pájaro.
      courseA_maze_seq9_authored_hint:
        courseA_maze_seq9_a: '¿Atascado? Intenta trazar el camino del pájaro con tu dedo.'
        courseA_maze_seq9_b: Si no está seguro de qué hacer, intente presionar "Comenzar de nuevo" y ejecutar el código para ver qué falla.
        courseA_maze_seq9_c: Tendrá que moverse en 3 direcciones para resolver este rompecabezas.
      courseA_maze_seq9_2018_authored_hint:
        courseA_maze_seq9_a: '¿Atascado? Intenta trazar el camino del pájaro con tu dedo.'
        courseA_maze_seq9_b: Si no está seguro de qué hacer, intente presionar "Comenzar de nuevo" y ejecutar el código para ver qué falla.
        courseA_maze_seq9_c: Tendrá que moverse en 3 direcciones para resolver este rompecabezas.
      courseA_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Hay dos soluciones para este rompecabezas.
      courseA_maze_seq_challenge1_2018_authored_hint:
        courseA_maze_seq_challenge1_a: Hay dos soluciones para este rompecabezas.
      courseA_maze_seq_challenge2_authored_hint:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con tu dedo. ¡Recuerda no contar el espacio donde comienzas!
      courseA_maze_seq_challenge2_2018_authored_hint:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con tu dedo. ¡Recuerda no contar el espacio donde comienzas!
      courseA_playLab_events2_authored_hint:
        courseA_playLab_events2_a: Mira el bloque que hace decir algo al perro.
        courseA_playLab_events2_b: |-
          Este es el código que necesita para completar este rompecabezas:
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018_authored_hint:
        courseA_playLab_events2_a: Mira el bloque que hace decir algo al perro.
        courseA_playLab_events2_b: |-
          Este es el código que necesita para completar este rompecabezas:
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3_authored_hint:
        courseA_playLab_events3_a: |-
          Arrastre este bloque <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Recuerde usar la tecla de flecha izquierda para mover a Jorge a la bandera una vez que haya escrito su programa. Cuando la bandera se pone verde, ¡has terminado!
      courseA_playLab_events3_2018_authored_hint:
        courseA_playLab_events3_a: |-
          Arrastre este bloque <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> out and snap it to the bottom of <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Recuerde usar la tecla de flecha izquierda para mover a Jorge a la bandera una vez que haya escrito su programa. Cuando la bandera se pone verde, ¡has terminado!
      courseA_playLab_events4_authored_hint:
        courseA_playLab_events4_a: |-
          Aquí está el bloque de eventos que necesitará para que Jorge se mueva hacia la derecha:
          
          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Este es el código que necesitará para completar este rompecabezas:
          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2018_authored_hint:
        courseA_playLab_events4_a: |-
          Aquí está el bloque de eventos que necesitará para que Jorge se mueva hacia la derecha:
          
          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Este es el código que necesitará para completar este rompecabezas:
          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events5_authored_hint:
        courseA_playLab_events5_a: "Aquí están los bloques de eventos que deberá usar para mover a Jorge arriba y abajo:\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n  </block></xml>\nand \n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          ¿Sabía que puede cambiar la clave de   la flecha del evento haciendo clic en la imagen del bloque y eligiendo una nueva? ! [] (https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018_authored_hint:
        courseA_playLab_events5_a: "Aquí están los bloques de eventos que deberá usar para mover a Jorge arriba y abajo:\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n  </block></xml>\nand \n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          ¿Sabía que puede cambiar la clave de   la flecha del evento haciendo clic en la imagen del bloque y eligiendo una nueva? ! [] (https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6_authored_hint:
        courseA_playLab_events6_a: |-
          Aquí está el bloque de eventos que usaría para que Jorge haga algo cuando se haga clic:
          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Aquí está el bloque que usaría para cambiar el fondo:
          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Aquí está el bloque que usaría para reproducir un sonido aleatorio:
          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events6_2018_authored_hint:
        courseA_playLab_events6_a: |-
          Aquí está el bloque de eventos que usaría para que Jorge haga algo cuando se haga clic:
          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Aquí está el bloque que usaría para cambiar el fondo:
          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Aquí está el bloque que usaría para reproducir un sonido aleatorio:
          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events7_authored_hint:
        courseA_playLab_events7_a: |-
          Usa este bloque para controlar lo que sucede cuando los actores colisionan.
          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playLab_events7_2018_authored_hint:
        courseA_playLab_events7_a: |-
          Usa este bloque para controlar lo que sucede cuando los actores colisionan.
          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playlab_challengeTemplate_authored_hint: [ ]
      courseA_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "¡Haz que Waddles the Penguin se muestre al hacer clic en Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "¡Haz el espectáculo de Boo the Ghost cuando haces clic en Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "¡Haz que Jayden realice el Show de Fuzzy Monster cuando haces clic en Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "¡Haz que Spiff the Robot se muestre cuando haces clic en el monstruo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finalmente, haz que Wendel sea el asistente cuando hagas clic en Spiff.\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2018_authored_hint:
        courseA_playlab_events_challenge1_a: "¡Haz que Waddles the Penguin se muestre al hacer clic en Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "¡Haz el espectáculo de Boo the Ghost cuando haces clic en Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "¡Haz que Jayden realice el Show de Fuzzy Monster cuando haces clic en Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "¡Haz que Spiff the Robot se muestre cuando haces clic en el monstruo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finalmente, haz que Wendel sea el asistente cuando hagas clic en Spiff.\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1a_authored_hint:
        courseA_playlab_events_challenge1_a: "Puedes hacer cantar a un pájaro.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Puedes hacer un pitido de robot.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge1_c: |-
          Puedes hacer gruñir a un monstruo enojado.
          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "Puedes hacer cantar a un pájaro.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Puedes hacer un pitido de robot.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Puedes hacer gruñir a un monstruo enojado.
          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2018_authored_hint:
        courseA_playlab_events_challenge2_a: "Puedes hacer cantar a un pájaro.\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Puedes hacer un pitido de robot.\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Puedes hacer gruñir a un monstruo enojado.
          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challengeClone_authored_hint:
        courseA_playlab_events_challenge1_a: "¡Haz que Waddles the Penguin se muestre al hacer clic en Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "¡Haz el espectáculo de Boo the Ghost cuando haces clic en Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "¡Haz que Jayden realice el Show de Fuzzy Monster cuando haces clic en Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "¡Haz que Spiff the Robot se muestre cuando haces clic en el monstruo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finalmente, haz que Wendel sea el asistente cuando hagas clic en Spiff.\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
      courseA_toMakeLoopsVideo_Collector_authored_hint: [ ]
      courseB_Scrat_ramp1_2018_authored_hint:
        '1': Si Scrat no hace lo que quieres, asegúrate que ambos bloques han sido embonados totalmente, luego haz clic en "Ejecutar" otra vez.
        '2': '¡No tengas miedo de cometer un error! ¡Prueba algo y si no funciona, prueba con algo más!'
      courseB_Scrat_ramp2_2018_authored_hint:
        '1': |-
          Su código debe verse así:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2018_authored_hint:
        '1': |
          Su código debe verse así:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2018_authored_hint:
        '1': |-
          Su código debe verse así:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2018_authored_hint:
        '1': |-
          Su código debe verse así:
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_artist_loops10_authored_hint: [ ]
      courseB_artist_loops10_2018_authored_hint: [ ]
      courseB_artist_loops2_authored_hint:
        courseB_artist_loops2_a: Si desea que el ciclo se repita más de 4 veces, puede cambiar el número en la parte superior del bloque.
        courseB_artist_loops2_b: Intenta ejecutar el código primero para ver dónde termina el artista.
      courseB_artist_loops2_2018_authored_hint:
        courseB_artist_loops2_a: Si desea que el ciclo se repita más de 4 veces, puede cambiar el número en la parte superior del bloque.
        courseB_artist_loops2_b: Intenta ejecutar el código primero para ver dónde termina el artista.
      courseB_artist_loops3_authored_hint:
        courseB_artist_loops3_a: Recuerde utilizar un ciclo de repetición` para un mejor código!
        courseB_artist_loops3_b: El artista querrá moverse hacia el sur para dibujar esta línea.
      courseB_artist_loops3_2018_authored_hint:
        courseB_artist_loops3_a: Recuerde utilizar un ciclo de repetición` para un mejor código!
        courseB_artist_loops3_b: El artista querrá moverse hacia el sur para dibujar esta línea.
      courseB_artist_loops4_authored_hint:
        courseB_artist_loops4_a: Utilice el bloque de salto para avanzar sin dibujar una línea.
        courseB_artist_loops4_b: Deberá agregar un bloque dentro del ciclo de repetición para resolver este rompecabezas.
        courseB_artist_loops4_c: No olvides cambiar la cantidad de veces que el loop se repite.
      courseB_artist_loops4_2018_authored_hint:
        courseB_artist_loops4_a: Utilice el bloque de salto para avanzar sin dibujar una línea.
        courseB_artist_loops4_b: Deberá agregar un bloque dentro del ciclo de repetición para resolver este rompecabezas.
        courseB_artist_loops4_c: No olvides cambiar la cantidad de veces que el loop se repite.
      courseB_artist_loops5_authored_hint:
        courseB_artist_loops5_a: Arrastre un ciclo de "repetición", luego coloque los otros bloques dentro de él. ¿Cuántas veces necesitas repetir?
      courseB_artist_loops5_2018_authored_hint:
        courseB_artist_loops5_a: Arrastre un ciclo de "repetición", luego coloque los otros bloques dentro de él. ¿Cuántas veces necesitas repetir?
      courseB_artist_loops6_authored_hint:
        courseB_artist_loops6_b: Intenta escribir tus movimientos en un pedazo de papel y buscar un patrón.
      courseB_artist_loops6_2018_authored_hint:
        courseB_artist_loops6_b: Intenta escribir tus movimientos en un pedazo de papel y buscar un patrón.
      courseB_artist_loops7_authored_hint:
        courseB_artist_loops7_a: '¡Este desafío usa Cuatro ciclos, uno tras otro!'
        courseB_artist_loops7_b: |-
          Observe que cada ciclo hace un patrón de escalera que va en una dirección diferente. ! [] (https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "Los ciclos deberían hacer esto: - ciclo 1\n   - Derecha\n   - Abajo\n   \n- Ciclo 2\n   - Derecha\n   - Arriba - ciclo 3\n   - Izquierda\n   - Arriba - ciclo 4\n   - Izquierda\n   - Abajo"
      courseB_artist_loops7_2018_authored_hint:
        courseB_artist_loops7_a: '¡Este desafío usa Cuatro ciclos, uno tras otro!'
        courseB_artist_loops7_b: |-
          Observe que cada ciclo hace un patrón de escalera que va en una dirección diferente. ! [] (https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "Los ciclos deberían hacer esto: - ciclo 1\n   - Derecha\n   - Abajo\n   \n- Ciclo 2\n   - Derecha\n   - Arriba - ciclo 3\n   - Izquierda\n   - Arriba - ciclo 4\n   - Izquierda\n   - Abajo"
      courseB_artist_loops8_authored_hint:
        courseB_artist_loops8_a: '¿Cuántas veces debes repetir el patrón para hacer la escalera?'
        courseB_artist_loops8_b: Intenta ejecutar el código que se te ha dado para ver lo que hace.
      courseB_artist_loops8_2018_authored_hint:
        courseB_artist_loops8_a: '¿Cuántas veces debes repetir el patrón para hacer la escalera?'
        courseB_artist_loops8_b: Intenta ejecutar el código que se te ha dado para ver lo que hace.
      courseB_artist_loops8_predict1_authored_hint: [ ]
      courseB_artist_loops9_authored_hint:
        courseB_artist_loops9_a: Recuerde que los bloques de salto se pueden usar para moverse sin dibujar una línea.
        courseB_artist_loops9_b: Querrá utilizar 3 ciclos de repetición para resolver este rompecabezas.
        courseB_artist_loops9_c: '¿No puede averiguar dónde colocar el ciclo? Trate de escribir el código paso a paso, y buscar para un patrón.'
      courseB_artist_loops9_2018_authored_hint:
        courseB_artist_loops9_a: Recuerde que los bloques de salto se pueden usar para moverse sin dibujar una línea.
        courseB_artist_loops9_b: Querrá utilizar 3 ciclos de repetición para resolver este rompecabezas.
        courseB_artist_loops9_c: '¿No puede averiguar dónde colocar el ciclo? Trate de escribir el código paso a paso, y buscar para un patrón.'
      courseB_artist_loops_challenge1_authored_hint:
        courseB_artist_loops_challenge1_a: 'Bloques como este: <xml>  <block type="simple_move_up_right"/></xml> permitirá que tu artista se mueva de forma inclinada!'
        courseB_artist_loops_challenge1_b: Cuando termina una casa de pájaros, ¡salta a la siguiente!
        courseB_artist_loops_challenge1_c: 'Tendrá que `mover` o` saltar` sobre algunas de las mismas líneas dos veces. '
      courseB_artist_loops_challenge1_2018_authored_hint:
        courseB_artist_loops_challenge1_a: 'Bloques como este: <xml>  <block type="simple_move_up_right"/></xml> permitirá que tu artista se mueva de forma inclinada!'
        courseB_artist_loops_challenge1_b: Cuando termina una casa de pájaros, ¡salta a la siguiente!
        courseB_artist_loops_challenge1_c: 'Tendrá que `mover` o` saltar` sobre algunas de las mismas líneas dos veces. '
      courseB_artist_loops_challenge2_authored_hint:
        courseB_artist_loops_challenge2_a: El código para dibujar una X ya se te ha dado. Todo lo que necesitas hacer es repetir la X y "saltar" al siguiente punto.
        courseB_artist_loops_challenge2_b: Puede usar bloques `salto` para moverte a otros espacios.
      courseB_artist_loops_challenge2_2018_authored_hint:
        courseB_artist_loops_challenge2_a: El código para dibujar una X ya se te ha dado. Todo lo que necesitas hacer es repetir la X y "saltar" al siguiente punto.
        courseB_artist_loops_challenge2_b: Puede usar bloques `salto` para moverte a otros espacios.
      courseB_collector_loops1_authored_hint:
        courseB_collector_loops1_a: El <xml><block type="collector_collect_simplified"/></xml> bloque se puede utilizar para recoger el tesoro cuando está de pie en la parte superior de la misma.
      courseB_collector_loops10_authored_hint:
        courseB_collector_loops10_a: Si no puede averiguar dónde las repeticiones de ciclo, escriba el código paso a paso y busque un patrón.
        courseB_collector_loops10_b: Trate de escribir todos los movimientos en un pedazo de papel y mirando un patrón.
      courseB_collector_loops10_2018_authored_hint:
        courseB_collector_loops10_a: Si no puede averiguar dónde las repeticiones de ciclo, escriba el código paso a paso y busque un patrón.
        courseB_collector_loops10_b: Trate de escribir todos los movimientos en un pedazo de papel y mirando un patrón.
      courseB_collector_loops1_2018_authored_hint:
        courseB_collector_loops1_a: El <xml><block type="collector_collect_simplified"/></xml> bloque se puede utilizar para recoger el tesoro cuando está de pie en la parte superior de la misma.
      courseB_collector_loops2_authored_hint:
        courseB_collector_loops2_a: Tendrás que moverte antes de poder recolectar cualquier tesoro.
        courseB_collector_loops2_b: Cuando haya llegado a un punto de tesoros, utilice el <xml><block type="collector_collect"/></xml> bloque para recogerlo.
      courseB_collector_loops2_2018_authored_hint:
        courseB_collector_loops2_a: Tendrás que moverte antes de poder recolectar cualquier tesoro.
        courseB_collector_loops2_b: Cuando haya llegado a un punto de tesoros, utilice el <xml><block type="collector_collect"/></xml> bloque para recogerlo.
      courseB_collector_loops3_authored_hint:
        courseB_collector_prog3_a: Trate de usar un <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block></xml> bloque de recoger el tesoro.
        courseB_collector_prog3_b: Recuerde que puede poner más de un bloque dentro de un ciclo de repetición.
      courseB_collector_loops3_2018_authored_hint:
        courseB_collector_prog3_a: Trate de usar un <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block></xml> bloque de recoger el tesoro.
        courseB_collector_prog3_b: Recuerde que puede poner más de un bloque dentro de un ciclo de repetición.
      courseB_collector_loops3_predict1_authored_hint:
        courseB_collector_prog3_a: Intenta usar un bloque de repetición para recolectar tu oro.
      courseB_collector_loops4_authored_hint:
        courseB_collector_loops4_a: Pruebe usar el botón de paso para descubrir dónde van las cosas mal.
        courseB_collector_loops4_b: Para cambiar qué tan lejos va Laurel, cambie la cantidad de veces que se ejecuta el ciclo.
        courseB_collector_loops4_c: Laurel tiene que bajar y recoger el tesoro después de que termina el ciclo de repetición!
      courseB_collector_loops4_2018_authored_hint:
        courseB_collector_loops4_a: Pruebe usar el botón de paso para descubrir dónde van las cosas mal.
        courseB_collector_loops4_b: Para cambiar qué tan lejos va Laurel, cambie la cantidad de veces que se ejecuta el ciclo.
        courseB_collector_loops4_c: Laurel tiene que bajar y recoger el tesoro después de que termina el ciclo de repetición!
      courseB_collector_loops5_authored_hint:
        courseB_collector_loops5_a: Use más de un ciclo para hacer el trabajo.
        courseB_collector_loops5_b: Intenta ejecutar el código un par de veces para ver qué pasa.
      courseB_collector_loops5_2018_authored_hint:
        courseB_collector_loops5_a: Use más de un ciclo para hacer el trabajo.
        courseB_collector_loops5_b: Intenta ejecutar el código un par de veces para ver qué pasa.
      courseB_collector_loops6_authored_hint:
        courseB_collector_loops6_a: '¿No puede imaginarse dónde las cosas empiezan a ir mal? Use el botón "Paso" para ejecutar su programa un bloque a la vez.'
        courseB_collector_loops6_b: Puede cambiar el número de veces que se repite el ciclo haciendo clic en "3" y eligiendo un número diferente.
        courseB_collector_loops6_c: Querrá utilizar 3 ciclos de repetición para resolver este rompecabezas.
        courseB_collector_loops6_d: Si está confundido, intente dividir este rompecabezas en 3 piezas.
      courseB_collector_loops6_2018_authored_hint:
        courseB_collector_loops6_a: '¿No puede imaginarse dónde las cosas empiezan a ir mal? Use el botón "Paso" para ejecutar su programa un bloque a la vez.'
        courseB_collector_loops6_b: Puede cambiar el número de veces que se repite el ciclo haciendo clic en "3" y eligiendo un número diferente.
        courseB_collector_loops6_c: Querrá utilizar 3 ciclos de repetición para resolver este rompecabezas.
        courseB_collector_loops6_d: Si está confundido, intente dividir este rompecabezas en 3 piezas.
      courseB_collector_loops7_authored_hint:
        courseB_collector_loops7_a: Si tiene problemas con el rompecabezas, intente dibujarlo en papel para ayudarlo a resolverlo.
        courseB_collector_loops7_b: Necesitará 3 repetición de ciclos para resolver este rompecabezas, y no se olvide el tesoro extra al final!
      courseB_collector_loops7_2018_authored_hint:
        courseB_collector_loops7_a: Si tiene problemas con el rompecabezas, intente dibujarlo en papel para ayudarlo a resolverlo.
        courseB_collector_loops7_b: Necesitará 3 repetición de ciclos para resolver este rompecabezas, y no se olvide el tesoro extra al final!
      courseB_collector_loops8_authored_hint:
        courseB_collector_loops8_challenge_a: Si no puede averiguar dónde poner las repeticiones de ciclo, escriba el código paso a paso y busque un patrón.
      courseB_collector_loops8_2018_authored_hint:
        courseB_collector_loops8_challenge_a: Si no puede averiguar dónde poner las repeticiones de ciclo, escriba el código paso a paso y busque un patrón.
      courseB_collector_loops9_authored_hint:
        courseB_collector_loops9_a: '¿Esto parece demasiado difícil?  Divídalo en 3 pequeños problemas para que se sienta más fácil.  '
        courseB_collector_loops9_b: Se necesitan 3 ciclos de repetición, uno tras otro, para esta solución.
      courseB_collector_loops9_2018_authored_hint:
        courseB_collector_loops9_a: '¿Esto parece demasiado difícil?  Divídalo en 3 pequeños problemas para que se sienta más fácil.  '
        courseB_collector_loops9_b: Se necesitan 3 ciclos de repetición, uno tras otro, para esta solución.
      courseB_collector_loops_challenge1_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Comience por correr los siguientes comandos:
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Muévete hacia el este dos veces entre cada camino.\n\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n  </xml>\nPuedes hacer esto con solo 14 bloques. Haga clic para obtener una sugerencia más para ver una solución.\n"
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba esto!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2018_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Comience por correr los siguientes comandos:
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Muévete hacia el este dos veces entre cada camino.\n\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n  </xml>\nPuedes hacer esto con solo 14 bloques. Haga clic para obtener una sugerencia más para ver una solución.\n"
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba esto!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2_authored_hint:
        courseB_collector_loops_challenge2_a: Si algo sale mal, no tengas miedo de comenzar de nuevo. No te rindas!
        courseB_collector_loops_challenge2_b: |-
          Si repites este patrón, ¡Laurel no golpeará la pared en el fondo de la cueva!
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: Intenta usar un bloque de repetición para recolectar la pila final de tesoros!
        courseB_collector_loops_challenge2_d: |-
          Pruebe esta solución:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2a_authored_hint:
        courseB_collector_loops_challenge2a_a: Si algo sale mal, intenta depurarlo. No te rindas!
        courseB_collector_loops_challenge2a_b: Mire esta opción para atravesar el laberinto. ¿Ves un patrón que puedes repetir?
        courseB_collector_loops_challenge2a_c: Para recoger todo el tesoro, tendrá que añadir dos bloques dentro de su ciclo <xml> <block type="collector_collect"/></xml>, o poner el bloque en el interior de su propio bloque de repetición.
      courseB_collector_loops_challenge2a_2018_authored_hint:
        courseB_collector_loops_challenge2a_a: Si algo sale mal, intenta depurarlo. No te rindas!
        courseB_collector_loops_challenge2a_b: Mire esta opción para atravesar el laberinto. ¿Ves un patrón que puedes repetir?
        courseB_collector_loops_challenge2a_c: Para recoger todo el tesoro, tendrá que añadir dos bloques dentro de su ciclo <xml> <block type="collector_collect"/></xml>, o poner el bloque en el interior de su propio bloque de repetición.
      courseB_collector_loops_challenge`_authored_hint:
        courseA_collector_loops_challenge2_b: "¡Solo necesita usar un bloque ! [] (Https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png) para resolver esto.\n\n"
        courseA_collector_loops_challenge2_a: |-
          Puede retroceder por el camino una segunda vez antes de ir hacia el sur. ! [] (https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      courseB_collector_prog3_authored_hint:
        courseB_collector_prog3_a: Intenta usar un bloque de repetición para recolectar tu oro.
      courseB_iceage_loops1_authored_hint:
        courseB_iceage_loops1_a: Cuidado con de hielo roto! ¡Scrat caerá a la perfección!
        courseB_iceage_loops1_b: |-
          Deberá usar este bloque: 
          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Cuidado con de hielo roto! ¡Scrat caerá al agua!
        courseB_iceage_loops10_b: Intente decir los pasos en voz alta o escríbalos en un pedazo de papel. ¿Ves algún patrón?
        courseB_iceage_loops10_c: '¡Este es un acertijo muy largo! Sigue este camino.'
      courseB_iceage_loops2_authored_hint:
        courseB_iceage_loops2_a: Divide este rompecabezas en dos partes, una antes de la esquina y otra después de la esquina.
        courseB_iceage_loops2_b: Si te quedas atascado, trata de decir los pasos en voz alta.
        courseB_iceage_loops2_c: Sigue este camino para que Scrat llegue a la bellota.
      courseB_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          Usa este nuevo bloque!
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: Para repetir código, arrastra un ciclo ´repetir´, luego coloca dentro el bloque que quieres repetir.
      courseB_iceage_loops4_authored_hint:
        courseB_iceage_loops4_a: Intente anotar los pasos que Scrat tomaría para llegar a la bellota. ¿Ves un patrón?
        courseB_iceage_loops4_b: '¡No tengas miedo de ejecutar tu código y ver qué pasa!'
        courseB_iceage_loops4_c: Este es el camino que Scrat deberia tomar.
      courseB_iceage_loops6_authored_hint:
        courseB_iceage_loops6_a: Su código final tendrá ** tres ** bloques de movimiento.
        courseB_iceage_loops6_b: '¡Solo necesita agregar un ciclo más!'
        courseB_iceage_loops6_c: La ruta final debe verse así.
      courseB_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: Si te quedas atascado, prueba a escribir pasos en una hoja de papel. ¿Ves un patrón?
        courseB_iceage_loops7_b: Este es el camino que Scrat debe tomar para llegar a la bellota.
      courseB_iceage_loops8_authored_hint:
        courseB_iceage_loops8_a: '¿Los bloques de movimiento son correctos? ¿Qué más puedes cambiar?'
        courseB_iceage_loops8_b: El primer ciclo deberia repetirse **3** veces, el segundo **5** veces, el cuarto **4** veces, y el último **4** veces.
        courseB_iceage_loops8_c: Utiliza ciclos para ayudar a Scrat a que siga este camino.
      courseB_iceage_loops9_authored_hint:
        courseB_iceage_loops9_a: '¿Teniendo problemas? Intenta dividir este rompecabezas en pedazos más pequeños. ¡No tengas miedo de ejecutar tu rompecabezas mientras codifica!'
        courseB_iceage_loops9_b: Su código final debe tener 4 bucles.
        courseB_iceage_loops9_c: Scrat deberia seguir esta ruta para llegar a la bellota.
      courseB_maze_seq1_authored_hint:
        courseB_maze_seq1_a: Conecta los bloques para hacer que el ave se mueva <xml><block type="when_run"/></xml>!
        courseB_maze_seq1_b: Arrastre tres de estas <xml><block type="maze_moveSouth"/></xml> flechas y conectalos al <xml><block type="when_run"/></xml> bloque para obtener su ave y el cerdo.
      courseB_maze_seq10_authored_hint:
        courseB_maze_seq10_a: Trate de anotar primero los pasos en una hoja de papel.
        courseB_maze_seq10_b: Tendrá que moverse en dos direcciones diferentes para llegar al cerdo.
      courseB_maze_seq10_2018_authored_hint: [ ]
      courseB_maze_seq10_predict1_authored_hint: [ ]
      courseB_maze_seq10_predict1_2018_authored_hint: [ ]
      courseB_maze_seq11_authored_hint:
        courseB_maze_seq11_a: Trate de anotar primero los pasos en una hoja de papel.
        courseB_maze_seq11_b: 'Resuelve el rompecabezas en dos partes: una antes de la esquina y otra después de la esquina.'
      courseB_maze_seq11_2018_authored_hint: [ ]
      courseB_maze_seq1_2018_authored_hint:
        courseB_maze_seq1_a: Conecta los bloques al bloque <xml><block type="when_run"/></xml> Scrat hará movimiento!
        courseB_maze_seq1_b: Arrastre tres de estas <xml><block type="maze_moveSouth"/></xml> flechas y conectalas al bloque <xml><block type="when_run"/></xml> para que Scrat llegue a la bellota.
      courseB_maze_seq1_predict1_authored_hint: [ ]
      courseB_maze_seq1_predict1_2018_authored_hint: [ ]
      courseB_maze_seq2_authored_hint:
        courseB_maze_seq2_a: Este programa falta un bloque. ¿Puedes averiguar cuál?
        courseB_maze_seq2_b: Intenta ejecutar el código que se te da para ver qué debe hacer el pájaro a continuación.
      courseB_maze_seq2_2018_authored_hint:
        courseB_maze_seq2_a: Este programa falta un bloque. ¿Puedes averiguar cuál?
        courseB_maze_seq2_b: Intenta ejecutar el código que se te da para ver lo que Scrat debe hacer a continuación.
      courseB_maze_seq3_authored_hint:
        courseB_maze_seq3_a: Uno de los bloques está moviendo al pájaro en la dirección incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
        courseB_maze_seq3_b: Intenta usar el botón de paso para encontrar dónde sale mal el programa. ¿Es el primer paso? ¿El segundo?
        courseB_maze_seq3_c: El bloque <xml><block type="maze_moveWest"/></xml> no parece estar moviéndose el pájaro en la dirección correcta.
      courseB_maze_seq3_2018_authored_hint:
        courseB_maze_seq3_a: Uno de los bloques mueve a Scrat en la dirección incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
        courseB_maze_seq3_b: Intenta usar el botón de paso para encontrar dónde sale mal el programa. ¿Es el primer paso? ¿El segundo?
        courseB_maze_seq3_c: El bloque <xml><block type="maze_moveWest"/></xml> no parece estar moviéndose el pájaro en la dirección correcta.
      courseB_maze_seq4_authored_hint:
        courseB_maze_seq4_a: Intente agregar una instrucción a la vez hasta que llegue al cerdo.
        courseB_maze_seq4_b: Usted tendrá que utilizar el <xml><block type="maze_moveEast"/></xml> bloque para resolver este rompecabezas.
      courseB_maze_seq4_2018_authored_hint:
        courseB_maze_seq4_a: Intente agregar una instrucción a la vez hasta que llegue a la bellota.
        courseB_maze_seq4_b: Usted tendrá que utilizar el <xml><block type="maze_moveEast"/></xml> bloque para resolver este rompecabezas.
      courseB_maze_seq5_authored_hint:
        courseB_maze_seq5_a: Si te quedas atascado, intenta dibujar la ruta en papel.
        courseB_maze_seq5_b: '¡Hay 2 formas de resolver este rompecabezas!'
        courseB_maze_seq5_c: '¿No estás seguro de cómo llegar al cerdo? Prueba este camino.'
      courseB_maze_seq5_2018_authored_hint:
        courseB_maze_seq5_a: Si te quedas atascado, intenta dibujar la ruta en papel.
        courseB_maze_seq5_b: '¡Hay 2 formas de resolver este rompecabezas!'
        courseB_maze_seq5_c: '¿No estás seguro de cómo llegar a la bellota? Prueba este camino.'
      courseB_maze_seq6_authored_hint:
        courseB_maze_seq6_a: Tu código final debe tener tres bloques de movimiento.
        courseB_maze_seq6_b: Si te quedas atascado, intenta resolver el rompecabezas en dos partes, una hacia los lados y otra hacia arriba y hacia abajo.
        courseB_maze_seq5_c: Hay dos formas de resolver este rompecabezas.
        courseB_maze_seq5_d: '¿No estás seguro de cómo llegar al cerdo? ¡Prueba este camino!'
      courseB_maze_seq6_2018_authored_hint:
        courseB_maze_seq6_a: Tu código final debe tener tres bloques de movimiento.
        courseB_maze_seq6_b: Si te quedas atascado, intenta resolver el rompecabezas en dos partes, una hacia los lados y otra hacia arriba y hacia abajo.
        courseB_maze_seq5_c: Hay dos formas de resolver este rompecabezas.
        courseB_maze_seq5_d: '¿No estás seguro de cómo llegar a la bellota? ¡Prueba este camino!'
      courseB_maze_seq7_authored_hint:
        courseB_maze_seq7_a: Agregue 1 bloque para mover el pájaro al cerdo.
        courseB_maze_seq7_b: Intente ejecutar el código que se le da y vea dónde termina.
        courseB_maze_seq7_c: '¿No puedes llegar al cerdo? ¡Prueba este camino!'
      courseB_maze_seq7_2018_authored_hint:
        courseB_maze_seq7_a: Agregue 1 bloque para mover Scrat a la bellota.
        courseB_maze_seq7_b: Intente ejecutar el código que se le da y vea dónde termina.
        courseB_maze_seq7_c: No se puede llegar a la bellota? ¡Prueba este camino!
      courseB_maze_seq8_authored_hint:
        courseB_maze_seq8_a: Intenta agregar un bloque a la vez hasta que resuelvas el acertijo.
        courseB_maze_seq8_b: '¡Hay dos formas de resolver este rompecabezas!'
        courseB_maze_seq8_c: '¿No sabes qué camino tomar? ¡Prueba este camino!'
      courseB_maze_seq8_2018_authored_hint:
        courseB_maze_seq8_a: Intenta agregar un bloque a la vez hasta que resuelvas el acertijo.
        courseB_maze_seq8_b: '¡Hay dos formas de resolver este rompecabezas!'
        courseB_maze_seq8_c: '¿No sabes qué camino tomar? ¡Prueba este camino!'
      courseB_maze_seq9_authored_hint:
        courseB_maze_seq9_a: Primero intente escribir todos los pasos en un pedazo de papel.
        courseB_maze_seq9_b: Construye tu programa un bloque a la vez y prueba a medida que creas.
        courseB_maze_seq9_c: Hay dos formas de resolver este rompecabezas.
        courseB_maze_seq9_d: '¿Atascado? ¡Prueba este camino!'
      courseB_maze_seq9_2018_authored_hint:
        courseB_maze_seq9_a: Primero intente escribir todos los pasos en un pedazo de papel.
        courseB_maze_seq9_b: Construye tu programa un bloque a la vez y prueba a medida que creas.
        courseB_maze_seq9_c: Hay dos formas de resolver este rompecabezas.
        courseB_maze_seq9_d: '¿Atascado? ¡Prueba este camino!'
      courseB_maze_seq9_challenge1_authored_hint: [ ]
      courseB_maze_seqCold_authored_hint:
        courseB_maze_seqCold_a: '¿Atascado? Intenta trazar el camino del pájaro con tu dedo.'
        courseB_maze_seqCold_b: '¡Los bloques adicionales deben agregarse antes del último! [] (Https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51 PM.png)'
      courseB_maze_seqOld_authored_hint:
        courseB_maze_seqOld_a: Si tiene problemas, primero intente anotar los pasos en una hoja de papel.
      courseB_maze_seq_challenge1_authored_hint:
        courseB_maze_seq_challenge1_a: El camino más corto podría no funcionar esta vez.
        courseB_maze_seq_challenge1_b: Trata de usar el <xml><block type="maze_moveWest"/></xml> bloque para comenzar.
      courseB_maze_seq_challenge1_2018_authored_hint:
        courseB_maze_seq_challenge1_a: El camino más corto podría no funcionar esta vez.
        courseB_maze_seq_challenge1_b: Trata de usar el <xml><block type="maze_moveWest"/></xml> bloque para comenzar.
      courseB_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: No necesita agregar o eliminar bloques para resolver este rompecabezas.
        courseB_maze_seq_challenge2_b: Reorganiza los bloques y toma la ruta del patrón de la escalera.
      courseB_maze_seq_challenge2_2018_authored_hint:
        courseB_maze_seq_challenge2_a: No necesita agregar o eliminar bloques para resolver este rompecabezas.
        courseB_maze_seq_challenge2_b: Reorganiza los bloques y toma la ruta del patrón de la escalera.
      courseB_playlab_challenge1_Template_authored_hint: [ ]
      courseB_playlab_challenge1_Template_2018_authored_hint: [ ]
      courseB_playlab_events2_authored_hint:
        courseB_playlab_events2_a: |-
          Este es el bloque para que Margarita diga algo:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events2_2018_authored_hint:
        courseB_playlab_events2_a: |-
          Este es el bloque para que Margarita diga algo:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events3_authored_hint:
        courseB_playlab_events3_a: |-
          Este es el bloque que debe usar para agregar el evento:
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Este es el bloque que necesita para cambiar el estado de ánimo de Daisy:
          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events3_2018_authored_hint:
        courseB_playlab_events3_a: |-
          Este es el bloque que debe usar para agregar el evento:
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Este es el bloque que necesita para cambiar el estado de ánimo de Daisy:
          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events4_authored_hint:
        courseB_playlab_events4_a: |-
          Este es el evento que controla la flecha izquierda:
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Este es el bloque que hace que el caballo se mueva hacia la izquierda.
          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2018_authored_hint:
        courseB_playlab_events4_a: |-
          Este es el evento que controla la flecha izquierda:
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Este es el bloque que hace que el caballo se mueva hacia la izquierda.
          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events5_authored_hint:
        courseB_playlab_events5_a: "Este es el bloque de eventos  que controla la flecha derecha:\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n  </block>\n  </xml>"
        courseB_playlab_events5_b: "Este es el bloque que hace huir al caballero.\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events5_2018_authored_hint:
        courseB_playlab_events5_a: "Este es el bloque de eventos  que controla la flecha derecha:\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n  </block>\n  </xml>"
        courseB_playlab_events5_b: "Este es el bloque que hace huir al caballero.\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events6_authored_hint:
        courseB_playlab_events6_a: |-
          Necesitará estos bloques de eventos:
          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Utiliza el desplegable flechas verde bloquea el evento 'cuando ___ flecha presiona' para elegir diferentes direcciones. ! [] (https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: '¡Llega a todas las banderas para pasar!'
      courseB_playlab_events6_2018_authored_hint:
        courseB_playlab_events6_a: |-
          Necesitará estos bloques de eventos:
          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Utiliza el desplegable flechas verde bloquea el evento 'cuando ___ flecha presiona' para elegir diferentes direcciones. ! [] (https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: '¡Llega a todas las banderas para pasar!'
      courseB_playlab_events7_authored_hint:
        courseB_playlab_events7_a: |-
          Este es el bloque de eventos que necesitará:
          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Este es el bloque que necesitas para reproducir un sonido.
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Este es el bloque que necesitas para que el caballero desaparezca:
          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2018_authored_hint:
        courseB_playlab_events7_a: |-
          Este es el bloque de eventos que necesitará:
          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Este es el bloque que necesitas para reproducir un sonido.
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Este es el bloque que necesitas para que el caballero desaparezca:
          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_eventsTemplate_authored_hint: [ ]
      courseB_playlab_eventsTemplate_2018_authored_hint: [ ]
      courseB_playlab_eventsToolbox_authored_hint:
        courseB_playlab_events7_a: |-
          Este es el bloque de eventos que necesitará:! [] (Https://images.code.org/2ed42b3a3108c6affdfc866de57f2eec-image-1475624565390.42.18.png)
        courseB_playlab_events7_b: |-
          Este es el bloque que necesitas para reproducir un sonido. ! [] (https://images.code.org/58e9b9a146a4ca3a8eee25845110b805-image-1475624550269.42.00.png)
        courseB_playlab_events7_c: |-
          Este es el bloque que necesitas para hacer que el caballero desaparezca:! [] (Https://images.code.org/f468611cbe51e1cb35531334f625395a-image-1475624478204.41.02.png)
      courseB_playlab_events_challenge1_authored_hint:
        courseB_playlab_events_challenge1_a: "Haga que los otros animales se muevan hacia abajo cuando presione `▼`\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          Cambie la velocidad de los animales usando este bloque:
          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          ¿Qué dirán todos cuando termine la carrera? Hacen que hablen con este evento:
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2018_authored_hint:
        courseB_playlab_events_challenge1_a: "Haga que los otros animales se muevan hacia abajo cuando presione `▼`\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          Cambie la velocidad de los animales usando este bloque:
          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          ¿Qué dirán todos cuando termine la carrera? Hacen que hablen con este evento:
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge2_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debería desaparecer al hacer clic. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡Mezclar!
          
          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_playlab_events_challenge2_2018_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debería desaparecer al hacer clic. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡Mezclar!
          
          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_playlab_events_challenge2_embed_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debe desaparecer cuando se golpea. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡Mezclar!
          
          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_playlab_events_challenge2_template_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debe desaparecer cuando se golpea. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡Mezclar!
          
          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_playlab_events_challenge2_template_2018_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debe desaparecer cuando se golpea. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡Mezclar!
          
          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_scrat_forVideo_authored_hint: [ ]
      courseB_starWars_prog1_authored_hint:
        courseB_starWars_prog1_a: Intenta agregar bloques de uno en uno, luego haz clic en "Ejecutar" para ver qué sucede.
        courseB_starWars_prog1_b: |
          Querrás moverte hacia el este para resolver este rompecabezas. ¿Qué tan lejos necesita moverse?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog10_authored_hint: [ ]
      courseB_starWars_prog10_2018_authored_hint: [ ]
      courseB_starWars_prog11_authored_hint: [ ]
      courseB_starWars_prog11_2018_authored_hint: [ ]
      courseB_starWars_prog1_2018_authored_hint:
        courseB_starWars_prog1_a: Intenta agregar bloques de uno en uno, luego haz clic en "Ejecutar" para ver qué sucede.
        courseB_starWars_prog1_b: |
          Querrás moverte hacia el este para resolver este rompecabezas. ¿Qué tan lejos necesita moverse?
          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog2_authored_hint:
        courseB_starWars_prog2_a: Divida este problema en dos partes. Consigue una sola pila de chatarra y luego descubre cómo llegar a la otra.
      courseB_starWars_prog2_2018_authored_hint:
        courseB_starWars_prog2_a: Divida este problema en dos partes. Consigue una sola pila de chatarra y luego descubre cómo llegar a la otra.
      courseB_starWars_prog3_authored_hint:
        courseB_starWars_prog3_a: Tendrá que encontrar 3 formas de resolver este rompecabezas.
        courseB_starWars_prog3_b: Construye una pieza de código a la vez. Ejecútelo para descubrir a dónde ir desde allí.
      courseB_starWars_prog3_2018_authored_hint:
        courseB_starWars_prog3_a: Tendrá que encontrar 3 formas de resolver este rompecabezas.
        courseB_starWars_prog3_b: Construye una pieza de código a la vez. Ejecútelo para descubrir a dónde ir desde allí.
      courseB_starWars_prog4_authored_hint:
        courseB_starWars_prog4_a: Construye una pieza de código a la vez. Ejecútelo para descubrir a dónde ir desde allí.
        courseB_starWars_prog4_b: |-
          Intenta usar el bloque de repetición para un código más corto.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog4_2018_authored_hint:
        courseB_starWars_prog4_a: Construye una pieza de código a la vez. Ejecútelo para descubrir a dónde ir desde allí.
        courseB_starWars_prog4_b: |-
          Intenta usar el bloque de repetición para un código más corto.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog5_authored_hint:
        courseB_starWars_prog5_a: '¿Este patrón no se parece un poco al último rompecabezas?'
        courseB_starWars_prog5_b: BB-8 agarrará la chatarra mientras rueda sobre ella.
        courseB_starWars_prog5_c: Rastrea este patrón con tu dedo. Cuente las piezas de metal mientras se mueve.
        courseB_starWars_prog5_da: |-
          Mira lo que sucede si usas la misma solución que el acertijo de escalera :! [] (Https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018_authored_hint:
        courseB_starWars_prog5_a: '¿Este patrón no se parece un poco al último rompecabezas?'
        courseB_starWars_prog5_b: BB-8 agarrará la chatarra mientras rueda sobre ella.
        courseB_starWars_prog5_c: Rastrea este patrón con tu dedo. Cuente las piezas de metal mientras se mueve.
        courseB_starWars_prog5_da: |-
          Mira lo que sucede si usas la misma solución que el acertijo de escalera :! [] (Https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog6_authored_hint:
        courseB_starWars_prog6_a: Este patrón es solo un paso de escalera con dos movimientos por dirección!
        courseB_starWars_prog6_b: |-
          Intenta usar el bloque de repetición para un código más corto.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog6_2018_authored_hint:
        courseB_starWars_prog6_a: Este patrón es solo un paso de escalera con dos movimientos por dirección!
        courseB_starWars_prog6_b: |-
          Intenta usar el bloque de repetición para un código más corto.
          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog7_authored_hint:
        courseB_starWars_prog7_a: '¿Este patrón no se parece un poco al último rompecabezas?'
        courseB_starWars_prog7_b: BB-8 agarrará la chatarra mientras rueda sobre ella.
        courseB_starWars_prog7_c: Trate de dibujar el patrón de paso de escalera grande sobre este rompecabezas. ¿Cubre todo el metal de desecho?
      courseB_starWars_prog7_2018_authored_hint:
        courseB_starWars_prog7_a: '¿Este patrón no se parece un poco al último rompecabezas?'
        courseB_starWars_prog7_b: BB-8 agarrará la chatarra mientras rueda sobre ella.
        courseB_starWars_prog7_c: Trate de dibujar el patrón de paso de escalera grande sobre este rompecabezas. ¿Cubre todo el metal de desecho?
      courseB_starWars_prog8_authored_hint:
        courseB_starWars_prog8_a: Está bien volver sobre un conjunto de espacios en los que ya ha viajado.
        courseB_starWars_prog8_b: |-
          Intenta usar el bloque de repetición para ver qué sucede con el código que colocas dentro.
          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2018_authored_hint:
        courseB_starWars_prog8_a: Está bien volver sobre un conjunto de espacios en los que ya ha viajado.
        courseB_starWars_prog8_b: |-
          Intenta usar el bloque de repetición para ver qué sucede con el código que colocas dentro.
          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog9_authored_hint:
        courseB_starWars_prog9_a: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
        courseB_starWars_prog9_b: Hay muchas formas de resolver este rompecabezas.
        courseB_starWars_prog9_c: '¿Podría un ciclo de repetición ayudar aquí?'
      courseB_starWars_prog9_2018_authored_hint:
        courseB_starWars_prog9_a: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
        courseB_starWars_prog9_b: Hay muchas formas de resolver este rompecabezas.
        courseB_starWars_prog9_c: '¿Podría un ciclo de repetición ayudar aquí?'
      courseC_PlayLab_embed_events9_authored_hint: [ ]
      courseC_PlayLab_events1_authored_hint:
        courseC_PlayLab_events1_a: |-
          Fije este bloque a bloque 'cuando corre':
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2018_authored_hint:
        courseC_PlayLab_events1_a: |-
          Fije este bloque a bloque 'cuando corre':
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events2_authored_hint:
        courseC_PlayLab_events2_a: |-
          Adjunte dos de estos bloques al bloque `cuando corre`:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Usa el menú desplegable en el segundo bloque `actor __ say` para cambiar qué actor habla.
      courseC_PlayLab_events2_2018_authored_hint:
        courseC_PlayLab_events2_a: |-
          Adjunte dos de estos bloques al bloque `cuando corre`:
          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Usa el menú desplegable en el segundo bloque `actor __ say` para cambiar qué actor habla.
      courseC_PlayLab_events3_authored_hint:
        courseC_PlayLab_events3_a: Solo necesitas mover a Jorge hacia la derecha unos 25 píxeles para resolver este rompecabezas.
        courseC_PlayLab_events3_b: '¿Hay un bloque en la caja de herramientas que parece mover a un actor?'
        courseC_PlayLab_events3_c: |-
          Fije este bloque al bloque`cuando corre`:
          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2018_authored_hint:
        courseC_PlayLab_events3_a: Solo necesitas mover a Jorge hacia la derecha unos 25 píxeles para resolver este rompecabezas.
        courseC_PlayLab_events3_b: '¿Hay un bloque en la caja de herramientas que parece mover a un actor?'
        courseC_PlayLab_events3_c: |-
          Fije este bloque al bloque`cuando corre`:
          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events4_authored_hint:
        courseC_PlayLab_events4_b: Cuando se haga clic en el botón "Ejecutar", Jorge se moverá a la derecha ** 100 píxeles para llegar al gato.
        courseC_PlayLab_events4_a: Deberá adjuntar un bloque de "actor __ decir " al evento "cuando el actor toque" para resolver este rompecabezas.
      courseC_PlayLab_events4_2018_authored_hint:
        courseC_PlayLab_events4_b: Cuando se haga clic en el botón "Ejecutar", Jorge se moverá a la derecha ** 100 píxeles para llegar al gato.
        courseC_PlayLab_events4_a: Deberá adjuntar un bloque de "actor __ decir " al evento "cuando el actor toque" para resolver este rompecabezas.
      courseC_PlayLab_events5_authored_hint:
        courseC_PlayLab_events5_a: Deberá hacer clic en el menú desplegable en el bloque `actor decir` para encontrar el texto" ¿Qué hay de nuevo
        courseC_PlayLab_events5_b: Haga clic en Octavia cuando ejecute su programa para verificar que funcione!
      courseC_PlayLab_events5_2018_authored_hint:
        courseC_PlayLab_events5_a: Deberá hacer clic en el menú desplegable en el bloque `actor decir` para encontrar el texto" ¿Qué hay de nuevo
        courseC_PlayLab_events5_b: Haga clic en Octavia cuando ejecute su programa para verificar que funcione!
      courseC_PlayLab_events6_authored_hint:
        courseC_PlayLab_events6_a: Cada bloque verde `cuando flecha` debe tener una acción debajo de él.
        courseC_PlayLab_events6_b: Usa el menú desplegable en el bloque `move actor 1` para cambiar la dirección en la que se mueve Waddles.
        courseC_PlayLab_events6_c: '¡Cuando hayas terminado, deberías poder mover Waddles usando las teclas de flecha en tu computadora!'
      courseC_PlayLab_events6_2018_authored_hint:
        courseC_PlayLab_events6_a: Cada bloque verde `cuando flecha` debe tener una acción debajo de él.
        courseC_PlayLab_events6_b: Usa el menú desplegable en el bloque `move actor 1` para cambiar la dirección en la que se mueve Waddles.
        courseC_PlayLab_events6_c: '¡Cuando hayas terminado, deberías poder mover Waddles usando las teclas de flecha en tu computadora!'
      courseC_PlayLab_events7_authored_hint:
        courseC_PlayLab_events7_a: 'Utilizar tanto el bloque `movimiento actor de 2 hasta 400 píxeles ` y el actor de `movimiento 2 por 400 píxeles ` dentro del ciclo ` repita siempre ` para resolver este rompecabezas. '
        courseC_PlayLab_events7_b: El ciclo ` repetir por siempre` no necesita estar conectado a ningún otro bloque de eventos; se ejecutará solo.
      courseC_PlayLab_events7_2018_authored_hint:
        courseC_PlayLab_events7_a: 'Utilizar tanto el bloque `movimiento actor de 2 hasta 400 píxeles ` y el actor de `movimiento 2 por 400 píxeles ` dentro del ciclo ` repita siempre ` para resolver este rompecabezas. '
        courseC_PlayLab_events7_b: El ciclo ` repetir por siempre` no necesita estar conectado a ningún otro bloque de eventos; se ejecutará solo.
      courseC_PlayLab_events8_authored_hint:
        courseC_PlayLab_events8_a: Necesitará conectar bloques en el bloque 'cuando el actor toca' para que esto suceda correctamente.
        courseC_PlayLab_events8_b: El bloque 'actor dice' y 'sonido, en la caja de herramientas debe ayudarte!
      courseC_PlayLab_events8_2018_authored_hint:
        courseC_PlayLab_events8_a: Necesitará conectar bloques en el bloque 'cuando el actor toca' para que esto suceda correctamente.
        courseC_PlayLab_events8_b: El bloque 'actor dice' y 'sonido, en la caja de herramientas debe ayudarte!
      courseC_PlayLab_events9_authored_hint:
        courseC_PlayLab_events9_a: El bloque `puntuación punto` te ayudará a resolver este rompecabezas.
        courseC_PlayLab_events9_b: Asegúrate de que tu nuevo bloque `cuando toque el actor` dice actor ** 1 ** y actor ** 3 **.
        courseC_PlayLab_events9_c: '¡Puede tener más de un evento `cuando el actor toque '' en su espacio de trabajo al mismo tiempo, por lo que no tiene que borrar el primero!'
      courseC_PlayLab_events9_2018_authored_hint:
        courseC_PlayLab_events9_a: El bloque `puntuación punto` te ayudará a resolver este rompecabezas.
        courseC_PlayLab_events9_b: Asegúrate de que tu nuevo bloque `cuando toque el actor` dice actor ** 1 ** y actor ** 3 **.
        courseC_PlayLab_events9_c: '¡Puede tener más de un evento `cuando el actor toque '' en su espacio de trabajo al mismo tiempo, por lo que no tiene que borrar el primero!'
      courseC_PlayLab_eventsA_authored_hint:
        courseC_PlayLab_eventsA_a: Usa el bloque ` establecer fondo ' y el bloque ' establecer agente a una velocidad de_____ ' para resolver este rompecabezas.
        courseC_PlayLab_eventsA_b: Tendrá que arrastrar específicamente un bloque de eventos `cuando se ejecuta` al espacio de trabajo para resolver este rompecabezas.
      courseC_PlayLab_eventsA_2018_authored_hint:
        courseC_PlayLab_eventsA_a: Usa el bloque ` establecer fondo ' y el bloque ' establecer agente a una velocidad de_____ ' para resolver este rompecabezas.
        courseC_PlayLab_eventsA_b: Tendrá que arrastrar específicamente un bloque de eventos `cuando se ejecuta` al espacio de trabajo para resolver este rompecabezas.
      courseC_PlayLab_eventsFP_authored_hint:
        idea1: |-
          * ¿Necesitas una idea? * ** ¿Quién está ahí? ** Haz que los personajes aparezcan con imágenes aleatorias , para que nadie sepa quién aparece a continuación. ! [] (https: // images .code.org / a56e03479801995d93ad5a4e4384a79e- image -1475340154498.gif)
        idea2: |-
          * ¿Necesitas una idea? * ** Ir a una aventura ** - Cambia el fondo, luego haz que los personajes hablen de dónde están ahora. ! [] (https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          * Necesitas una idea? * ** Pinball ** - hacer movimiento de un personaje con las flechas (cuando está arriba, bloques de flecha abajo), luego reproducir sonidos al azar cuando choca con otros caracteres en la pantalla.
      courseC_PlayLab_eventsFP_2018_authored_hint:
        idea1: |-
          * ¿Necesitas una idea? * ** ¿Quién está ahí? ** Haz que los personajes aparezcan con imágenes aleatorias , para que nadie sepa quién aparece a continuación. ! [] (https: // images .code.org / a56e03479801995d93ad5a4e4384a79e- image -1475340154498.gif)
        idea2: |-
          * ¿Necesitas una idea? * ** Ir a una aventura ** - Cambia el fondo, luego haz que los personajes hablen de dónde están ahora. ! [] (https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          * Necesitas una idea? * ** Pinball ** - hacer movimiento de un personaje con las flechas (cuando está arriba, bloques de flecha abajo), luego reproducir sonidos al azar cuando choca con otros caracteres en la pantalla.
      courseC_PlayLab_events_challenge1_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          Puedes usar este bloque para mover actores a diferentes lugares en el espacio del juego.
          <xml> <block type="studio_setSpritePosition">
          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Intenta usar ` establecer actor 1 en la posición izquierda media 'cuando toca a cualquiera de los otros actores. ¡Esto restablecerá el juego para que el jugador pueda seguir intentándolo!
        courseC_PlayLab_events_challenge_c: |-
          ¡También puede intentar cambiar la velocidad de los diferentes actores para hacer que el juego sea más fácil o más desafiante!
          
          <xml>  <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2018_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          Puedes usar este bloque para mover actores a diferentes lugares en el espacio del juego.
          <xml> <block type="studio_setSpritePosition">
          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Intenta usar ` establecer actor 1 en la posición izquierda media 'cuando toca a cualquiera de los otros actores. ¡Esto restablecerá el juego para que el jugador pueda seguir intentándolo!
        courseC_PlayLab_events_challenge_c: |-
          ¡También puede intentar cambiar la velocidad de los diferentes actores para hacer que el juego sea más fácil o más desafiante!
          
          <xml>  <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_xy_blocks_authored_hint:
        courseC_PlayLab_events_challenge_a: Los dos valores en este bloque le permiten mover un actor a cualquier píxel en el área de juego. Puede elegir cualquier número entre 0-400.
        courseC_PlayLab_events_challenge_b: |-
          Puede decidir qué números usar, al pensar qué tan lejos de la esquina superior izquierda desea mover. El primer número es el número de píxeles de la izquierda. El segundo número es el número de píxeles desde la parte superior.
          
          <xml><block type="studio_setSpriteXY" inline="true">
          <value name="SPRITE">
          <block type="math_number" movable="false">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="XPOS">
          <block type="math_number" movable="false">
          <title name="NUM">37</title>
          </block>
          </value>
          <value name="YPOS">
          <block type="math_number" movable="false">
          <title name="NUM">187</title>
          </block>
          </value>
          </block></xml>
          ![](https://images.code.org/b1559bf476ceb59f880c43271c5e10b2-image-1494111787192.59.49 PM.png)
      courseC_artist_loop1_authored_hint:
        courseC_artist_loop1_a: No necesita realizar ningún cambio en el ciclo, simplemente coloque un bloque encima.
        courseC_artist_loop1_b: |-
          Este es el bloque que necesitará para establecer un patrón:
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
          Elija cualquier patrón que desee!
      courseC_artist_loop1_2018_authored_hint:
        courseC_artist_loop1_a: No necesita realizar ningún cambio en el ciclo, simplemente coloque un bloque encima.
        courseC_artist_loop1_b: |-
          Este es el bloque que necesitará para establecer un patrón:
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
          Elija cualquier patrón que desee!
      courseC_artist_loops1a_authored_hint:
        courseC_artist_loops1a_a: |-
          Este es el primer bloque que necesitará:
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Use este bloque para dibujar la pegatina!
          
          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2018_authored_hint:
        courseC_artist_loops1a_a: |-
          Este es el primer bloque que necesitará:
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Use este bloque para dibujar la pegatina!
          
          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops2a_authored_hint:
        courseC_artist_loops2a_a: Dentro de su ciclo, querrá saltar a 200 más de 200, luego dibujar la pegatina de pájaro y luego girar 30 grados.
        courseC_artist_loops2a_b: Haga clic en el número en la parte superior del ciclo `repeat` para cambiar cuántas veces se repite.
      courseC_artist_loops2a_2018_authored_hint:
        courseC_artist_loops2a_a: Dentro de su ciclo, querrá saltar a 200 más de 200, luego dibujar la pegatina de pájaro y luego girar 30 grados.
        courseC_artist_loops2a_b: Haga clic en el número en la parte superior del ciclo `repeat` para cambiar cuántas veces se repite.
      courseC_artist_loops3a_authored_hint:
        courseC_artist_loops3a_a: Deberá agregar solo un bloque dentro de su ciclo, después de la etiqueta de pájaro.
        courseC_artist_loops3a_b: Use el menú desplegable en el bloque ` dibujar pegatina` para encontrar la pegatina del bate.
      courseC_artist_loops3a_2018_authored_hint:
        courseC_artist_loops3a_a: Deberá agregar solo un bloque dentro de su ciclo, después de la etiqueta de pájaro.
        courseC_artist_loops3a_b: Use el menú desplegable en el bloque ` dibujar pegatina` para encontrar la pegatina del bate.
      courseC_artist_loops4a_authored_hint:
        courseC_artist_loops4a_a: |-
          Utilice este bloque para avanzar:
          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>
          ¡No olvides cambiar qué tan lejos!
      courseC_artist_loops4a_2018_authored_hint:
        courseC_artist_loops4a_a: |-
          Utilice este bloque para avanzar:
          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>
          ¡No olvides cambiar qué tan lejos!
      courseC_artist_loops5_authored_hint:
        courseC_artist_loops5_a: |-
          Intenta usar el bloque `jump to` para que tu artista vuelva al centro:
          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">100</title>
          <title name="YPOS">100</title>
          </block>
          </xml>
      courseC_artist_loops5a_authored_hint:
        courseC_artist_loops5a_a: Use los menús desplegables en los bloques ` dibujar pegatina` para cambiar sus imágenes.
      courseC_artist_loops5a_2018_authored_hint:
        courseC_artist_loops5a_a: Use los menús desplegables en los bloques ` dibujar pegatina` para cambiar sus imágenes.
      courseC_artist_loops5b_authored_hint:
        courseC_artist_loops5b_a: |-
          Utilice este bloque para establecer el patrón de sus líneas:
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Para hacer un diseño como el anterior, deberá retroceder la misma cantidad que avanza.
      courseC_artist_loops5b_2018_authored_hint:
        courseC_artist_loops5b_a: |-
          Utilice este bloque para establecer el patrón de sus líneas:
          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Para hacer un diseño como el anterior, deberá retroceder la misma cantidad que avanza.
      courseC_artist_loops6_authored_hint:
        courseC_artist_loops6_a: |2
          Pruebe una flor de triángulo:
           <img src = "https://images.code.org/4248a974a7631c4240effba06fdee731-image-1495821015097.49.18.png" width = "150px" /> 
          
          O un pequeño error verde:
           <img src = "https: //images.code.org/b9454d6f1159e19c58d9f5b5b37fd156-image-1495821067980.52.43.png "width =" 150px "/>
      courseC_artist_loops6a_authored_hint:
        courseC_artist_loops6a_a: Para hacer un diseño como el de arriba, salta hacia adelante menos de 75 píxeles entre cada etiqueta.
      courseC_artist_loops6a_2018_authored_hint:
        courseC_artist_loops6a_a: Para hacer un diseño como el de arriba, salta hacia adelante menos de 75 píxeles entre cada etiqueta.
      courseC_artist_loops7a_authored_hint:
        courseC_artist_loops7a_a: |-
          Un círculo tiene 360 ​​grados. Multiplique los grados en su turno por la cantidad de veces que repite. ¿Es igual a 360? ¡Compruebe las rotaciones sugeridas para ver si esto funciona!
      courseC_artist_loops7a_2018_authored_hint:
        courseC_artist_loops7a_a: |-
          Un círculo tiene 360 ​​grados. Multiplique los grados en su turno por la cantidad de veces que repite. ¿Es igual a 360? ¡Compruebe las rotaciones sugeridas para ver si esto funciona!
      courseC_artist_loopsPre1a_authored_hint:
        courseC_artist_loopsPre1a_a: Recuerda poner el bloque `giro` dentro del ciclo.
        courseC_artist_loopsPre1a_b: 'Su ciclo ''repetición'' debe tener 3 cuadras dentro de ella: ''saltar un 200 más de 200 hacia abajo'', ''avanzar por 50 píxeles'' y ''girar a la derecha por 60 grados''.'
      courseC_artist_loopsPre1a_2018_authored_hint:
        courseC_artist_loopsPre1a_a: Recuerda poner el bloque `giro` dentro del ciclo.
        courseC_artist_loopsPre1a_b: 'Su ciclo ''repetición'' debe tener 3 cuadras dentro de ella: ''saltar un 200 más de 200 hacia abajo'', ''avanzar por 50 píxeles'' y ''girar a la derecha por 60 grados''.'
      courseC_artist_loopsPrePre1a_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          El primer bloque que necesitarás es:! [] (Https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png)
        courseC_artist_loopsPrePre1a_b: |-
          Para avanzar 50 píxeles , utiliza este bloque :! [] (Https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png)
      courseC_artist_loopsPrePre1a_2018_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          El primer bloque que necesitarás es:! [] (Https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png)
        courseC_artist_loopsPrePre1a_b: |-
          Para avanzar 50 píxeles , utiliza este bloque :! [] (Https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png)
      courseC_artist_prog1_authored_hint: [ ]
      courseC_artist_prog1_2018_authored_hint: [ ]
      courseC_artist_prog2_authored_hint:
        courseC_artist_prog2_a: 'Si utilizas un bloque que me ayude a "avanzar 100 pixeles". Dibujaré una línea automáticamente.'
        courseC_artist_prog2_b: '¿Tienes problemas para girar en la esquina? Utiliza el bloque "girar a la derecha 90 grados".'
      courseC_artist_prog2_2018_authored_hint:
        courseC_artist_prog2_a: 'Si utilizas un bloque que me ayude a "avanzar 100 pixeles". Dibujaré una línea automáticamente.'
        courseC_artist_prog2_b: '¿Tienes problemas para girar en la esquina? Utiliza el bloque "girar a la derecha 90 grados".'
      courseC_artist_prog3_authored_hint:
        courseC_artist_prog3_a: |-
          Para crear esta ventana, simplemente dibuje un cuadrado con 100 lados de píxeles. - Avanzar - girar - avanzar - girar - avanzar - girar - avanzar
        courseC_artist_prog3_b: '¿Quieres hacer un código más corto? Intenta usar un ciclo en este rompecabezas.'
      courseC_artist_prog3_2018_authored_hint:
        courseC_artist_prog3_a: |-
          Para crear esta ventana, simplemente dibuje un cuadrado con 100 lados de píxeles. - Avanzar - girar - avanzar - girar - avanzar - girar - avanzar
        courseC_artist_prog3_b: '¿Quieres hacer un código más corto? Intenta usar un ciclo en este rompecabezas.'
      courseC_artist_prog4_authored_hint:
        courseC_artist_prog4_a: Para terminar el cohete, ¡simplemente dibuja el triángulo en la parte superior!
        courseC_artist_prog4_b: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseC_artist_prog4_c: |-
          Para dibujar un triángulo, deberás - avanzar - girar a la izquierda 120 grados - avanzar - girar a la izquierda 120 grados - avanzar
      courseC_artist_prog4_2018_authored_hint:
        courseC_artist_prog4_a: Para terminar el cohete, ¡simplemente dibuja el triángulo en la parte superior!
        courseC_artist_prog4_b: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseC_artist_prog4_c: |-
          Para dibujar un triángulo, deberás - avanzar - girar a la izquierda 120 grados - avanzar - girar a la izquierda 120 grados - avanzar
      courseC_artist_prog5_authored_hint:
        courseC_artist_prog5_a: Reduzca la velocidad del control deslizante hasta que pueda ejecutar su código línea por línea para ver dónde van las cosas mal.
        courseC_artist_prog5_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
        courseC_artist_prog5_c: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseC_artist_prog5_d: Cada vuelta debe ser 90 grados a la derecha.
      courseC_artist_prog5_2018_authored_hint:
        courseC_artist_prog5_a: Reduzca la velocidad del control deslizante hasta que pueda ejecutar su código línea por línea para ver dónde van las cosas mal.
        courseC_artist_prog5_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
        courseC_artist_prog5_c: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseC_artist_prog5_d: Cada vuelta debe ser 90 grados a la derecha.
      courseC_artist_prog6_authored_hint:
        courseC_artist_prog6_a: El artista ya se está enfrentando a la forma correcta de dibujar su primera línea.
        courseC_artist_prog6_b: Este diamante es realmente solo un cuadrado que está parado en su esquina.
        courseC_artist_prog6_c: Como este diamante también es cuadrado, asegúrese de girar 90 grados en las esquinas.
      courseC_artist_prog6_2018_authored_hint:
        courseC_artist_prog6_a: El artista ya se está enfrentando a la forma correcta de dibujar su primera línea.
        courseC_artist_prog6_b: Este diamante es realmente solo un cuadrado que está parado en su esquina.
        courseC_artist_prog6_c: Como este diamante también es cuadrado, asegúrese de girar 90 grados en las esquinas.
      courseC_artist_prog6_predict1_authored_hint: [ ]
      courseC_artist_prog6_predict1_2018_authored_hint: [ ]
      courseC_artist_prog7_authored_hint:
        courseC_artist_prog7_a: Cada ángulo es 45 o 90 grados.
        courseC_artist_prog7_b: "¿Funciona en el primer paso?   \n¿Qué tal el segundo?   \n¿Dónde va mal?"
        courseC_artist_prog7_c: '¡Puedes usar el menú desplegable en los bloques de viraje para ver qué ángulo necesitas!'
        courseC_artist_prog7_d: |-
          Tendrá que: - avanzar - girar 45 grados a la derecha - avanzar - girar 90 grados a la derecha - avanzar - girar 45 grados a la derecha ¡Repita este patrón 2 veces!
        courseC_artist_prog7_e: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseC_artist_prog7_2018_authored_hint:
        courseC_artist_prog7_a: Cada ángulo es 45 o 90 grados.
        courseC_artist_prog7_b: "¿Funciona en el primer paso?   \n¿Qué tal el segundo?   \n¿Dónde va mal?"
        courseC_artist_prog7_c: '¡Puedes usar el menú desplegable en los bloques de viraje para ver qué ángulo necesitas!'
        courseC_artist_prog7_d: |-
          Tendrá que: - avanzar - girar 45 grados a la derecha - avanzar - girar 90 grados a la derecha - avanzar - girar 45 grados a la derecha ¡Repita este patrón 2 veces!
        courseC_artist_prog7_e: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseC_artist_prog8_authored_hint: [ ]
      courseC_artist_prog8_2018_authored_hint: [ ]
      courseC_artist_prog_challenge1-doghouse_authored_hint:
        courseC_artist_prog7_a: Usa ángulos de 60 grados para hacer el techo.
      courseC_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: '¡Puedes dibujar esto como un rectángulo con una línea en el medio o dos cuadrados diferentes!'
      courseC_artist_prog_challenge1_2018_authored_hint:
        courseC_artist_prog_challenge1_a: '¡Puedes dibujar esto como un rectángulo con una línea en el medio o dos cuadrados diferentes!'
      courseC_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: "Se puede poner en el interior de un ciclo comandos de repetición una y otra vez. ¡Intentalo!\n<xml>\n  \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n                <title name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n                </next>\n              </block>\n              </statement></block></xml>"
      courseC_artist_prog_challenge2a_authored_hint:
        courseC_artist_prog_challenge2_a: Después de dibujar la primera línea, gire a la izquierda antes de dibujar su segunda línea.
        courseC_artist_prog_challenge2_b: Después de dibujar la segunda línea, gire a la derecha antes de dibujar su tercera línea.
      courseC_artist_prog_challenge2a_2018_authored_hint:
        courseC_artist_prog_challenge2_a: Después de dibujar la primera línea, gire a la izquierda antes de dibujar su segunda línea.
        courseC_artist_prog_challenge2_b: Después de dibujar la segunda línea, gire a la derecha antes de dibujar su tercera línea.
      courseC_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_b: Usa ciclos para que no se quede sin `collect` bloques!
      courseC_collector_loops_challenge2_2018_authored_hint:
        courseC_maze_loops_challenge2_b: Usa ciclos para que no se quede sin `collect` bloques!
      courseC_collector_prog1_authored_hint:
        courseC_collector_prog1_a: Cuando usted está parado en un espacio de tesoros, utilice el <xml><block type="collector_collect"/></xml> bloque para recogerlo.
        courseC_collector_prog1_b: La solución más simple sería avanzar una vez, luego recoger el tesoro.
      courseC_collector_prog1_2018_authored_hint:
        courseC_collector_prog1_a: Cuando usted está parado en un espacio de tesoros, utilice el <xml><block type="collector_collect"/></xml> bloque para recogerlo.
        courseC_collector_prog1_b: La solución más simple sería avanzar una vez, luego recoger el tesoro.
      courseC_collector_prog2_authored_hint:
        courseC_collector_prog2_a: Puede utilizar cuatro <xml><block type="maze_move"><title name="DIR"> mover adelante </title></block></xml> bloques o utilizar el <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bloque para hacer su programa más corto.
        courseC_collector_prog2_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseC_collector_prog2_2018_authored_hint:
        courseC_collector_prog2_a: Puede utilizar cuatro <xml><block type="maze_move"><title name="DIR"> mover adelante </title></block></xml> bloques o utilizar el <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bloque para hacer su programa más corto.
        courseC_collector_prog2_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseC_collector_prog3_authored_hint:
        courseC_collector_prog3_a: El programa sólo se ejecutará los bloques que están conectados a la <xml><block type="when_run"/></xml> bloque.
        courseC_collector_prog3_b: Intente usar el botón "Paso" para ejecutar su código una línea a la vez. ¿Ves dónde falla el código?
        courseC_collector_prog3_c: Si tiene problemas para descifrar este enigma, intente escribir los movimientos hacia abajo en una hoja de papel.
      courseC_collector_prog3_2018_authored_hint:
        courseC_collector_prog3_a: El programa sólo se ejecutará los bloques que están conectados a la <xml><block type="when_run"/></xml> bloque.
        courseC_collector_prog3_b: Intente usar el botón "Paso" para ejecutar su código una línea a la vez. ¿Ves dónde falla el código?
        courseC_collector_prog3_c: Si tiene problemas para descifrar este enigma, intente escribir los movimientos hacia abajo en una hoja de papel.
      courseC_collector_prog4_authored_hint:
        courseC_collector_prog4_a: Si te quedas atascado, intenta escribir los pasos en una hoja de papel.
        courseC_collector_prog4_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
        courseC_collector_prog4_c: Pruebe esta opción para una ruta.
      courseC_collector_prog4_2018_authored_hint:
        courseC_collector_prog4_a: Si te quedas atascado, intenta escribir los pasos en una hoja de papel.
        courseC_collector_prog4_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
        courseC_collector_prog4_c: Pruebe esta opción para una ruta.
      courseC_collector_prog5_authored_hint:
        courseC_collector_prog5_a: "\"¿Funciona en el primer paso? ¿Funciona en el segundo paso? \n¿Dónde van las cosas mal?\""
        courseC_collector_prog5_b: Si corrigió un error y el programa todavía no funciona, utilice los pasos de arriba para encontrar más errores.
        courseC_collector_prog5_c: Si te quedas atascado, intenta escribir los pasos en una hoja de papel.
        courseC_collector_prog5_d: Sigue el camino para recoger el tesoro.
      courseC_collector_prog5_2018_authored_hint:
        courseC_collector_prog5_a: "\"¿Funciona en el primer paso? ¿Funciona en el segundo paso? \n¿Dónde van las cosas mal?\""
        courseC_collector_prog5_b: Si corrigió un error y el programa todavía no funciona, utilice los pasos de arriba para encontrar más errores.
        courseC_collector_prog5_c: Si te quedas atascado, intenta escribir los pasos en una hoja de papel.
        courseC_collector_prog5_d: Sigue el camino para recoger el tesoro.
      courseC_collector_prog6_authored_hint:
        courseC_collector_prog6_a: "¿Puedes descubrir qué está pasando mal?   \n\nIntente usar el botón \"Paso\" para buscar errores ejecutando su código línea por línea."
        courseC_collector_prog6_b: '¿Atascado? Prueba este camino para recolectar el tesoro.'
      courseC_collector_prog6_2018_authored_hint:
        courseC_collector_prog6_a: "¿Puedes descubrir qué está pasando mal?   \n\nIntente usar el botón \"Paso\" para buscar errores ejecutando su código línea por línea."
        courseC_collector_prog6_b: '¿Atascado? Prueba este camino para recolectar el tesoro.'
      courseC_collector_prog7_authored_hint:
        courseC_collector_prog7_a: 'Ya hay un gran código en el área de trabajo. No necesita eliminar nada para resolver este rompecabezas.  '
        courseC_collector_prog7_b: '¿No ves el bloqueo que necesitas para que el aventurero se mueva en la dirección correcta? Saca uno de la caja de herramientas.'
        courseC_collector_prog7_c: '¿Tiene problemas para ver una ruta para recoger todo el tesoro? ¡Prueba este camino!'
      courseC_collector_prog7_2018_authored_hint:
        courseC_collector_prog7_a: 'Ya hay un gran código en el área de trabajo. No necesita eliminar nada para resolver este rompecabezas.  '
        courseC_collector_prog7_b: '¿No ves el bloqueo que necesitas para que el aventurero se mueva en la dirección correcta? Saca uno de la caja de herramientas.'
        courseC_collector_prog7_c: '¿Tiene problemas para ver una ruta para recoger todo el tesoro? ¡Prueba este camino!'
      courseC_collector_prog8_authored_hint: [ ]
      courseC_collector_prog8_2018_authored_hint: [ ]
      courseC_collector_prog9_authored_hint: [ ]
      courseC_collector_prog9_2018_authored_hint: [ ]
      courseC_collector_progA_authored_hint:
        courseC_collector_progA_a: Intente utilizar el botón "Paso" para ir a través de su código línea por línea.
      courseC_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar el bloque `collect` muchas veces para recoger el tesoro extra.
      courseC_collector_prog_challenge1_2018_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar el bloque `collect` muchas veces para recoger el tesoro extra.
      courseC_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: Puede usar más de un bloque `collect` en cada espacio.
        courseC_collector_prog_challenge1_b: Perdió su camino? ¡Prueba este camino para resolver el rompecabezas!
      courseC_collector_prog_challenge2_2018_authored_hint:
        courseC_collector_prog_challenge1_a: Puede usar más de un bloque `collect` en cada espacio.
        courseC_collector_prog_challenge1_b: Perdió su camino? ¡Prueba este camino para resolver el rompecabezas!
      courseC_external_events_authored_hint: [ ]
      courseC_flappy_events1_authored_hint:
        courseC_flappy_events1_a: "! [] (https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2018_authored_hint:
        courseC_flappy_events1_a: "! [] (https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events2_authored_hint:
        courseC_flappy_events2_a: 'El bloque que necesitas agregar se llama `` velocidad establecida '' ''. '
        courseC_flappy_events2_b: Conecte el bloque ´establecer la velocidad´ al bloque ´cuando se ejecuta´ para resolver este rompecabezas.
      courseC_flappy_events2_2018_authored_hint:
        courseC_flappy_events2_a: 'El bloque que necesitas agregar se llama `` velocidad establecida '' ''. '
        courseC_flappy_events2_b: Conecte el bloque ´establecer la velocidad´ al bloque ´cuando se ejecuta´ para resolver este rompecabezas.
      courseC_flappy_events3_authored_hint:
        courseC_flappy_events3_a: Si algo no está funcionando correctamente, asegúrese de que sus bloques estén conectados a los hechos correctos en el espacio de trabajo.
      courseC_flappy_events3_2018_authored_hint:
        courseC_flappy_events3_a: Si algo no está funcionando correctamente, asegúrese de que sus bloques estén conectados a los hechos correctos en el espacio de trabajo.
      courseC_flappy_events4_authored_hint:
        courseC_flappy_events4_a: Conecte el bloque `final del juego` a` cuando golpee un obstáculo` para resolver este rompecabezas.
      courseC_flappy_events4_2018_authored_hint:
        courseC_flappy_events4_a: Conecte el bloque `final del juego` a` cuando golpee un obstáculo` para resolver este rompecabezas.
      courseC_flappy_events5_authored_hint:
        courseC_flappy_events5_a: Deberá usar el bloque `score a point` para pasar este nivel.
      courseC_flappy_events5_2018_authored_hint:
        courseC_flappy_events5_a: Deberá usar el bloque `score a point` para pasar este nivel.
      courseC_flappy_events6_authored_hint:
        courseC_flappy_events6_a: Trate de conectar el bloque de 'aleta una cantidad ___' el evento 'cuando haga clic en'.
      courseC_flappy_events6_2018_authored_hint:
        courseC_flappy_events6_a: Trate de conectar el bloque de 'aleta una cantidad ___' el evento 'cuando haga clic en'.
      courseC_flappy_events7_authored_hint:
        courseC_flappy_events7_a: 'Usted puede cambiar el fondo usando el bloque de ''escena''. '
      courseC_flappy_events7_2018_authored_hint:
        courseC_flappy_events7_a: 'Usted puede cambiar el fondo usando el bloque de ''escena''. '
      courseC_flappy_events8_authored_hint:
        courseC_flappy_events8_a: Tratar de conectar un bloque segundo 'escena' en el evento 'cuando pase el obstáculo' para pasar este nivel.
      courseC_flappy_events8_2018_authored_hint:
        courseC_flappy_events8_a: Tratar de conectar un bloque segundo 'escena' en el evento 'cuando pase el obstáculo' para pasar este nivel.
      courseC_flappy_events9_authored_hint:
        courseC_flappy_events9_a: Conectar el 'sistema puntuación 0' bloque al evento 'cuando choca con un obstáculo' para pasar este nivel.
      courseC_flappy_events9_2018_authored_hint:
        courseC_flappy_events9_a: Conectar el 'sistema puntuación 0' bloque al evento 'cuando choca con un obstáculo' para pasar este nivel.
      courseC_flappy_events_template_authored_hint: [ ]
      courseC_flappy_events_template_2018_authored_hint: [ ]
      courseC_harvester_loops1_authored_hint:
        courseC_harvester_loops1_a: Una vez que se haya mudado a una calabaza, use <xml><block type="harvester_pumpkin"/></xml> para recogerlo.
        courseC_harvester_loops1_b: Puede utilizar un ciclo con el <xml><block type="harvester_pumpkin"/></xml> bloque para recoger más de una calabaza de una plaza.
      courseC_harvester_loops10_authored_hint: [ ]
      courseC_harvester_loops10_2018_authored_hint: [ ]
      courseC_harvester_loops11_authored_hint: [ ]
      courseC_harvester_loops11_2018_authored_hint: [ ]
      courseC_harvester_loops1_2018_authored_hint:
        courseC_harvester_loops1_a: Una vez que se haya mudado a una calabaza, use <xml><block type="harvester_pumpkin"/></xml> para recogerlo.
        courseC_harvester_loops1_b: Puede utilizar un ciclo con el <xml><block type="harvester_pumpkin"/></xml> bloque para recoger más de una calabaza de una plaza.
      courseC_harvester_loops2_authored_hint:
        courseC_harvester_loops2_a: Si te quedas atascado, intentar escribir los pasos en el papel y en busca de patrones que se repiten.
        courseC_harvester_loops2_b: Necesitará un ciclo de repetición después de otro.
        courseC_harvester_loops2_c: Un ciclo repetirá el comando 'avanzar', y el otro repetirá el comando 'recoger calabaza'.
      courseC_harvester_loops2_2018_authored_hint:
        courseC_harvester_loops2_a: Si te quedas atascado, intentar escribir los pasos en el papel y en busca de patrones que se repiten.
        courseC_harvester_loops2_b: Necesitará un ciclo de repetición después de otro.
        courseC_harvester_loops2_c: Un ciclo repetirá el comando 'avanzar', y el otro repetirá el comando 'recoger calabaza'.
      courseC_harvester_loops3_authored_hint:
        courseC_harvester_loops3_a: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
        courseC_harvester_loops3_b: Para las primeras calabazas, puedes usar código muy similar al último acertijo. ¿A donde necesitas voltear después?
        courseC_harvester_loops3_c: Si quieres simplificar tu código, ¡puedes poner un ciclo dentro de otro! Esto se llama un ** ciclo anidado **.
      courseC_harvester_loops3_2018_authored_hint:
        courseC_harvester_loops3_a: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
        courseC_harvester_loops3_b: Para las primeras calabazas, puedes usar código muy similar al último acertijo. ¿A donde necesitas voltear después?
        courseC_harvester_loops3_c: Si quieres simplificar tu código, ¡puedes poner un ciclo dentro de otro! Esto se llama un ** ciclo anidado **.
      courseC_harvester_loops4_authored_hint:
        courseC_harvester_loops4_a: Usa el nuevo bloque "recoger mazorca".
        courseC_harvester_loops4_b: Puedes usar múltiples ciclos en tu código, algunos para recoger mazorcas y otros para recoger calabazas.
        courseC_harvester_loops4_c: Si quieres simplificar tu código, ¡puedes poner un ciclo dentro de otro! Esto se llama un ** ciclo anidado **.
      courseC_harvester_loops4_2018_authored_hint:
        courseC_harvester_loops4_a: Usa el nuevo bloque "recoger mazorca".
        courseC_harvester_loops4_b: Puedes usar múltiples ciclos en tu código, algunos para recoger mazorcas y otros para recoger calabazas.
        courseC_harvester_loops4_c: Si quieres simplificar tu código, ¡puedes poner un ciclo dentro de otro! Esto se llama un ** ciclo anidado **.
      courseC_harvester_loops5_authored_hint:
        courseC_harvester_loops5_a: Si te quedas atascado, intentar dibujar los pasos en el papel y busca patrones que se repiten.
        courseC_harvester_loops5_b: '¿Este escalón de la escalera parece familiar? Los movimientos deben ser similares, recuerda recoger cultivos en el camino.'
      courseC_harvester_loops5_2018_authored_hint:
        courseC_harvester_loops5_a: Si te quedas atascado, intentar dibujar los pasos en el papel y busca patrones que se repiten.
        courseC_harvester_loops5_b: '¿Este escalón de la escalera parece familiar? Los movimientos deben ser similares, recuerda recoger cultivos en el camino.'
      courseC_harvester_loops6_authored_hint:
        courseC_harvester_loops6_a: Recuerda que puedes poner más de un bloque dentro de un ciclo de repetición.
        courseC_harvester_loops6_b: No olvides girar al final de la hilera de maíz.
      courseC_harvester_loops6_2018_authored_hint:
        courseC_harvester_loops6_a: Recuerda que puedes poner más de un bloque dentro de un ciclo de repetición.
        courseC_harvester_loops6_b: No olvides girar al final de la hilera de maíz.
      courseC_harvester_loops7_authored_hint:
        courseC_harvester_loops7_a: Puedes resolver este acertijo de dos maneras, obteniendo el maíz o las calabazas primero.
        courseC_harvester_loops7_b: Necesitarás multiples ciclos de 'repetir' para resolver este acertijo.
      courseC_harvester_loops7_2018_authored_hint:
        courseC_harvester_loops7_a: Puedes resolver este acertijo de dos maneras, obteniendo el maíz o las calabazas primero.
        courseC_harvester_loops7_b: Necesitarás multiples ciclos de 'repetir' para resolver este acertijo.
      courseC_harvester_loops8_authored_hint:
        courseC_harvester_loops8_a: '¿Este escalón de la escalera te parece familiar? Los movimientos deben ser similares, recuerda recoger cultivos en el camino.'
        courseC_harvester_loops8_b: Si quieres simplificar tu código, ¡puedes poner un ciclo dentro de otro! Esto se llama un ** ciclo anidado **.
      courseC_harvester_loops8_2018_authored_hint:
        courseC_harvester_loops8_a: '¿Este escalón de la escalera te parece familiar? Los movimientos deben ser similares, recuerda recoger cultivos en el camino.'
        courseC_harvester_loops8_b: Si quieres simplificar tu código, ¡puedes poner un ciclo dentro de otro! Esto se llama un ** ciclo anidado **.
      courseC_harvester_loops9_authored_hint: [ ]
      courseC_harvester_loops9_2018_authored_hint: [ ]
      courseC_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: '¡Esto es demasiado dificil sin ciclos!'
        courseC_harvester_loops_challenge1_b: Puedes repetir 'mover hacia adelante' y 'recoger maíz' todas las veces que necesites hacerlo, luego gira a la derecha en cada esquina.
        courseC_harvester_loops_challenge1_c: |-
          Aquí está la solución completa para este acertijo.
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseC_harvester_loops_challenge1a_authored_hint:
        courseC_harvester_loops_challenge1_a: '¡Esto es demasiado dificil sin ciclos!'
        courseC_harvester_loops_challenge1_b: Puedes repetir 'mover hacia adelante' y 'recoger maíz' todas las veces que necesites hacerlo, luego gira a la derecha en cada esquina.
        courseC_harvester_loops_challenge1_c: |-
          La mejor manera de recoger el maiz en medio usa un ciclo dentro de otro.
          
          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
          
      courseC_harvester_loops_challenge1a_2018_authored_hint:
        courseC_harvester_loops_challenge1_a: '¡Esto es demasiado dificil sin ciclos!'
        courseC_harvester_loops_challenge1_b: Puedes repetir 'mover hacia adelante' y 'recoger maíz' todas las veces que necesites hacerlo, luego gira a la derecha en cada esquina.
        courseC_harvester_loops_challenge1_c: |-
          La mejor manera de recoger el maiz en medio usa un ciclo dentro de otro.
          
          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
          
      courseC_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_a: Una forma de resolver esto parece un zig-zag. Otra parece un espiral. Hay muchas soluciones distintas para un acertijo como este. ¡Se persistente!
        courseC_harvester_loops_challenge2_b: Puedes repetir 'mover hacia adelante' y 'elegir maíz' todas las veces que necesites hacerlo, luego haz 'gira a la derecha' en cada esquina.
        courseC_harvester_loops_challenge2_c: |
          El patrón de zig zag puede repetirse dos veces para acabar el acertijo con solo 20 bloques.
          
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          El patrón de espiral puede programarse con solo 18 bloques.
          
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      courseC_harvester_loops_challenge2_2018_authored_hint:
        courseC_harvester_loops_challenge2_a: Una forma de resolver esto parece un zig-zag. Otra parece un espiral. Hay muchas soluciones distintas para un acertijo como este. ¡Se persistente!
        courseC_harvester_loops_challenge2_b: Puedes repetir 'mover hacia adelante' y 'elegir maíz' todas las veces que necesites hacerlo, luego haz 'gira a la derecha' en cada esquina.
        courseC_harvester_loops_challenge2_c: |
          El patrón de zig zag puede repetirse dos veces para acabar el acertijo con solo 20 bloques.
          
          ![](https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png)
        courseC_harvester_loops_challenge2_d: |-
          El patrón de espiral puede programarse con solo 18 bloques.
          
          ![](https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png)
      courseC_harvester_loops_forVid_authored_hint: [ ]
      courseC_maze_debugging1_authored_hint:
        courseC_maze_debugging1_a: |-
          -¿Funciona todo después del primer paso?
          -¿Funciona despues del segundo?
          -¿Dónde deja de funcionar?
        courseC_maze_debugging1_b: Hay un bloque que necesitas agregar para completar este acertijo.
      courseC_maze_debugging1_2018_authored_hint:
        courseC_maze_debugging1_a: |-
          -¿Funciona todo después del primer paso?
          -¿Funciona despues del segundo?
          -¿Dónde deja de funcionar?
        courseC_maze_debugging1_b: Hay un bloque que necesitas agregar para completar este acertijo.
      courseC_maze_debugging2_authored_hint:
        courseC_maze_debugging2_a: Hay mucho código valioso en el area de trabajo. No solo lo borres e inicies de nuevo!
        courseC_maze_debugging2_b: |-
          -¿Funciona todo después del primer paso?
          -¿Funciona despues del segundo?
          -¿Dónde deja de funcionar?
        courseC_maze_debugging2_c: '¿No puede descubrir qué pasa? Intenta ejecutar el código un par de veces para ver qué pasa.'
      courseC_maze_debugging2_2018_authored_hint:
        courseC_maze_debugging2_a: Hay mucho código valioso en el area de trabajo. No solo lo borres e inicies de nuevo!
        courseC_maze_debugging2_b: |-
          -¿Funciona todo después del primer paso?
          -¿Funciona despues del segundo?
          -¿Dónde deja de funcionar?
        courseC_maze_debugging2_c: '¿No puede descubrir qué pasa? Intenta ejecutar el código un par de veces para ver qué pasa.'
      courseC_maze_debugging3_authored_hint:
        courseC_maze_debugging3_a: |-
          Para borrar un bloque de la mitad de tu codigo, arrastra todos los bloques a otra parte del area de trabajo.
          
          Arrastra el bloque que quieres borrar de regreso a la caja de herramientas.
          
          Finalmente, pon tus otros bloques donde pertenecen.
          
          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: '¿No puede descubrir qué pasa? Intenta ejecutar el código un par de veces para ver qué pasa.'
      courseC_maze_debugging3_2018_authored_hint:
        courseC_maze_debugging3_a: |-
          Para borrar un bloque de la mitad de tu codigo, arrastra todos los bloques a otra parte del area de trabajo.
          
          Arrastra el bloque que quieres borrar de regreso a la caja de herramientas.
          
          Finalmente, pon tus otros bloques donde pertenecen.
          
          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: '¿No puede descubrir qué pasa? Intenta ejecutar el código un par de veces para ver qué pasa.'
      courseC_maze_debugging4_authored_hint:
        courseC_maze_debugging4_a: Usa el boton "paso" para ir a través de las instrucciones una a la ves. ¿Te ayuda a encontrar donde ocurrió el error?
        courseC_maze_debugging4_b: Una de las vueltas esta haciendo que Scrat vaya en la dirección equivocada. ¿Sabes cual?
      courseC_maze_debugging4_2018_authored_hint:
        courseC_maze_debugging4_a: Usa el boton "paso" para ir a través de las instrucciones una a la ves. ¿Te ayuda a encontrar donde ocurrió el error?
        courseC_maze_debugging4_b: Una de las vueltas esta haciendo que Scrat vaya en la dirección equivocada. ¿Sabes cual?
      courseC_maze_debugging5_authored_hint:
        courseC_maze_debugging5_a: "Hay muchos bloques utiles en el area de trabajo. ¡No los borres!\n\nUsa el boton \"paso\" para ir a traves del código y averiguar donde hay un error."
        courseC_maze_debugging5_b: Intenta decir lo que Scrat deberia hacer en voz alta. ¿Es lo mismo que el código en el area de trabajo? ¿Dónde falla?
      courseC_maze_debugging5_2018_authored_hint:
        courseC_maze_debugging5_a: "Hay muchos bloques utiles en el area de trabajo. ¡No los borres!\n\nUsa el boton \"paso\" para ir a traves del código y averiguar donde hay un error."
        courseC_maze_debugging5_b: Intenta decir lo que Scrat deberia hacer en voz alta. ¿Es lo mismo que el código en el area de trabajo? ¿Dónde falla?
      courseC_maze_debugging6_authored_hint:
        courseC_maze_debugging6_a: |-
          - ¿Qué se supone que haga Scrat?
          - ¿Qué hace Scrat?
          - ¿Qué te dice eso?
        courseC_maze_debugging6_b: |-
          Una vez que hayas encontrado y arreglado el error, repite el proceso para encontrar el segundo.
          
          Repite el proceso hasta que funcione el programa!
      courseC_maze_debugging6_2018_authored_hint:
        courseC_maze_debugging6_a: |-
          - ¿Qué se supone que haga Scrat?
          - ¿Qué hace Scrat?
          - ¿Qué te dice eso?
        courseC_maze_debugging6_b: |-
          Una vez que hayas encontrado y arreglado el error, repite el proceso para encontrar el segundo.
          
          Repite el proceso hasta que funcione el programa!
      courseC_maze_debugging7_authored_hint:
        courseC_maze_debugging7_a: |-
          - ¿Todo funciona en el primer paso?
          
          - ¿Que hay del segundo?
          
          - ¿Dónde falla?
        courseC_maze_debugging7_b: No olvides usar el boton 'paso' para ejecutar el programa lnea por linea!
        courseC_maze_debugging7_c: |-
          Despues de encontrar y arreglar el primer error, asegurate de usar el proceso de depuración para encontrar el iguiente.
          
          ¡Repite el proceso de depuración hasta que el programa funcione!
      courseC_maze_debugging7_2018_authored_hint:
        courseC_maze_debugging7_a: |-
          - ¿Todo funciona en el primer paso?
          
          - ¿Que hay del segundo?
          
          - ¿Dónde falla?
        courseC_maze_debugging7_b: No olvides usar el boton 'paso' para ejecutar el programa lnea por linea!
        courseC_maze_debugging7_c: |-
          Despues de encontrar y arreglar el primer error, asegurate de usar el proceso de depuración para encontrar el iguiente.
          
          ¡Repite el proceso de depuración hasta que el programa funcione!
      courseC_maze_debugging8_authored_hint:
        courseC_maze_debugging8_a: |-
          - ¿Qué se supone que haga Scrat?
          - ¿Qué hace Scrat?
          - ¿Qué te dice eso?
      courseC_maze_debugging8_predict1_authored_hint: [ ]
      courseC_maze_debugging8_predict1_2018_authored_hint: [ ]
      courseC_maze_debugging9_authored_hint: [ ]
      courseC_maze_debugging9_2018_authored_hint: [ ]
      courseC_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: '¿Izquierda o derecha? ¡Es tu decisión!'
        courseC_maze_debugging_challenge1_b: '¡El camino de Scrat tiene la forma de un rectángulo! ¡Tiene que volterarse del mismo modo cada vez.'
        courseC_maze_debugging_challenge1_c: Si te atoras, siempre puedes comenzar de nuevo y encontrar un nuevo camino!
      courseC_maze_debugging_challenge1_2018_authored_hint:
        courseC_maze_debugging_challenge1_a: '¿Izquierda o derecha? ¡Es tu decisión!'
        courseC_maze_debugging_challenge1_b: '¡El camino de Scrat tiene la forma de un rectángulo! ¡Tiene que volterarse del mismo modo cada vez.'
        courseC_maze_debugging_challenge1_c: Si te atoras, siempre puedes comenzar de nuevo y encontrar un nuevo camino!
      courseC_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_b: Si estas atorada, intenta depurar el código. ¿Dónde falla?
        courseC_maze_debugging_challenge2_c: |-
          Hay dos caminos diferentes que puedes seguir simplemente avanzando y girando cuatro veces. Si encuentra una forma de usar un ciclo , ¡puede haber aún más! ! [] (https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      courseC_maze_debugging_challenge2_2018_authored_hint:
        courseC_maze_debugging_challenge2_b: Si estas atorada, intenta depurar el código. ¿Dónde falla?
        courseC_maze_debugging_challenge2_c: |-
          Hay dos caminos diferentes que puedes seguir simplemente avanzando y girando cuatro veces. Si encuentra una forma de usar un ciclo , ¡puede haber aún más! ! [] (https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      courseC_maze_loops10_authored_hint: [ ]
      courseC_maze_loops10_predict2_authored_hint: [ ]
      courseC_maze_loops11_authored_hint: [ ]
      courseC_maze_loops2_authored_hint:
        courseC_maze_loops2_a: Puede resolver este rompecabezas con tres bloques, incluyendo 'cuando ejecute'.
        courseC_maze_loops2_b: Intente poner el bloque de 'avanzar' dentro de un bloque de 'repetir' para crear un ciclo.
        courseC_maze_loops2_c: Tendrá que repetir el comando 'avanzar' 5 veces para resolver este rompecabezas.
      courseC_maze_loops2_predict1_authored_hint:
        courseC_maze_loops2_a: Puede resolver este rompecabezas con tres bloques, incluyendo 'cuando ejecute'.
        courseC_maze_loops2_b: Intente poner el bloque de 'avanzar' dentro de un bloque de 'repetir' para crear un ciclo.
        courseC_maze_loops2_c: Tendrá que repetir el comando 'avanzar' 5 veces para resolver este rompecabezas.
      courseC_maze_loops3_authored_hint:
        courseC_maze_loops3_a: Este rompecabezas es muy similar al último.
        courseC_maze_loops3_b: Utilizar un bloque de 'repetir 5 veces' para crear el ciclo.
      courseC_maze_loops4_authored_hint:
        courseC_maze_loops4_a: No todos los bloques de comando deben repetirse.
        courseC_maze_loops4_b: Use dos bloques de repetición establecidos en diferentes números.
        courseC_maze_loops4_c: "`Gire a la derecha` una vez entre los dos ciclos."
      courseC_maze_loops5_authored_hint:
        courseC_maze_loops5_a: La mejor solución utiliza los dos comandos 'avanzar' y un ciclo.
      courseC_maze_loops6_authored_hint:
        courseC_maze_loops6_a: Si el patrón es difícil de ver, intenta programarlo todo primero y mira qué cosas se repiten una y otra vez antes de colocar los ciclos.
        courseC_maze_loops6_b: "Para poner muchos bloques dentro de un bucle de \"repetición\", simplemente arrastre un bucle hacia el espacio de trabajo, luego arrastre todos los bloques desde el programa de inicio dentro de él!"
      courseC_maze_loops7_authored_hint:
        courseC_maze_loops7_a: Si el patrón es difícil de ver, intenta programarlo todo primero y mira qué cosas se repiten una y otra vez antes de colocar los bucles.
      courseC_maze_loops8_authored_hint:
        courseC_puppy_loops8courseC_maze_loops8_a: Trate de pensar sobre este problema en pequeñas partes. Tómate tu tiempo. ¡No es necesario resolver en el primer intento!
        courseC_puppy_loops8courseC_maze_loops8_b: La primera mitad de este camino es similar a las escaleras del rompecabezas del pasado, pero va en una dirección diferente.
        courseC_puppy_loops8courseC_maze_loops8_c: "Hay diferentes maneras de solucionar esto Tienes que usar al menos dos ciclos y repetir un conjunto de acciones en la primera, luego un solo 'avanzar' en la otra."
      courseC_maze_loops9_authored_hint:
        courseC_maze_loops9_1: 'Si usted está teniendo problemas para encontrar este rompecabezas, trate de escribir los movimientos hacia abajo en un pedazo de papel y observa un patrón. '
      courseC_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_a: Piense en este camino como tres diferentes piezas. Cada uno tiene un patrón que se puede repetir.
        courseC_maze_loops_challenge1_b: Entre cada bloque 'repetición' necesita 'gire a la izquierda' o 'gire a la derecha' Scrat listo para el siguiente patrón.
      courseC_maze_loops_challenge1a_authored_hint:
        courseC_maze_loops_challenge1_a: Piense en este camino como tres diferentes piezas. Cada uno tiene un patrón que se puede repetir.
        courseC_maze_loops_challenge1_b: '¿Puedes recordar cómo usar los ciclos para repetir un patrón de escalera?'
      courseC_maze_loops_challenge1a_2018_authored_hint:
        courseC_maze_loops_challenge1_a: Piense en este camino como tres diferentes piezas. Cada uno tiene un patrón que se puede repetir.
        courseC_maze_loops_challenge1_b: '¿Puedes recordar cómo usar los ciclos para repetir un patrón de escalera?'
      courseC_maze_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_a: El código original funcionaría muy bien, ¡ si hubiera solo una pieza de tesoro en cada pila!
        courseC_maze_loops_challenge2_b: Usa ciclos para que no se quede sin `collect` bloques!
      courseC_maze_programming1_authored_hint:
        courseC_maze_programming1_0: Asegúrese de que todos los bloques se hayan ensamblado por completo, luego haga clic en "Ejecutar" nuevamente.
      courseC_maze_programming1_2018_authored_hint:
        courseC_maze_programming1_0: Asegúrese de que todos los bloques se hayan ensamblado por completo, luego haga clic en "Ejecutar" nuevamente.
      courseC_maze_programming2_authored_hint:
        courseC_maze_programming2_a: Para utilizar un <xml><block type="maze_moveForward"/></xml> bloque, arrastre fuera de la caja de herramientas y encaje al bloque <xml><block type="when_run"/></xml>.
        courseC_maze_programming2_b: Asegúrese de que todos los bloques se hayan ensamblado por completo, luego haga clic en "Ejecutar" nuevamente.
      courseC_maze_programming2_2018_authored_hint:
        courseC_maze_programming2_a: Para utilizar un <xml><block type="maze_moveForward"/></xml> bloque, arrastre fuera de la caja de herramientas y encaje al bloque <xml><block type="when_run"/></xml>.
        courseC_maze_programming2_b: Asegúrese de que todos los bloques se hayan ensamblado por completo, luego haga clic en "Ejecutar" nuevamente.
      courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: Intenta ejecutar el código primero para ver dónde sale mal.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) 
          
          Para eliminar un bloque del medio de su código, arrastre todos los bloques debajo de él hacia la derecha y permita que se sienten en el espacio de trabajo por un tiempo. 
          
          Haga clic en el bloque que desea eliminar y arrástrelo nuevamente a la caja de herramientas. 
          
          Finalmente, coloque sus otros bloques en su lugar a donde pertenecen.
      courseC_maze_programming3_2018_authored_hint:
        courseC_maze_programming3_a: Intenta ejecutar el código primero para ver dónde sale mal.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) 
          
          Para eliminar un bloque del medio de su código, arrastre todos los bloques debajo de él hacia la derecha y permita que se sienten en el espacio de trabajo por un tiempo. 
          
          Haga clic en el bloque que desea eliminar y arrástrelo nuevamente a la caja de herramientas. 
          
          Finalmente, coloque sus otros bloques en su lugar a donde pertenecen.
      courseC_maze_programming4_authored_hint:
        courseC_maze_programming4_a: Recuerda que cuando giras, te estás alejando del punto de vista del pájaro.  Si gira a la derecha, el ave apuntará hacia abajo.
        courseC_maze_programming4_b: |-
          Para seguir el camino: 
          - Avanzar 
          - Girar en un sentido 
          - Avanzar 
          - Retroceder en el otro lado 
          - Seguir adelante
      courseC_maze_programming4_2018_authored_hint:
        courseC_maze_programming4_a: Recuerda que cuando giras, te estás alejando del punto de vista del pájaro.  Si gira a la derecha, el ave apuntará hacia abajo.
        courseC_maze_programming4_b: |-
          Para seguir el camino: 
          - Avanzar 
          - Girar en un sentido 
          - Avanzar 
          - Retroceder en el otro lado 
          - Seguir adelante
      courseC_maze_programming5_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: El pájaro tendrá que hacer un giro para completar este rompecabezas. ¿Puedes descubrir en qué dirección?
        courseC_maze_programming5_c: La solución tendrá dos bloques 'adelante', un turno y dos bloques más 'adelante'.
      courseC_maze_programming5_2018_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: El pájaro tendrá que hacer un giro para completar este rompecabezas. ¿Puedes descubrir en qué dirección?
        courseC_maze_programming5_c: La solución tendrá dos bloques 'adelante', un turno y dos bloques más 'adelante'.
      courseC_maze_programming6_authored_hint:
        courseC_maze_programming6_a: '¡Hay dos formas de resolver este rompecabezas!'
        courseC_maze_programming6_b: Siga su dedo del pájaro al cerdo, ¿qué pasos tomó?
        courseC_maze_programming6_c: Recuerde que debe dar la vuelta primero, ya que el pájaro comienza a mirar hacia una pared.
        courseC_maze_programming6_d: '¿Te sientes atrapado? Mira este camino!'
      courseC_maze_programming6_2018_authored_hint:
        courseC_maze_programming6_a: '¡Hay dos formas de resolver este rompecabezas!'
        courseC_maze_programming6_b: Siga su dedo del pájaro al cerdo, ¿qué pasos tomó?
        courseC_maze_programming6_c: Recuerde que debe dar la vuelta primero, ya que el pájaro comienza a mirar hacia una pared.
        courseC_maze_programming6_d: '¿Te sientes atrapado? Mira este camino!'
      courseC_maze_programming7_authored_hint:
        courseC_maze_programming7_a: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseC_maze_programming7_b: Si tiene problemas para descifrar este enigma, intente escribir los movimientos hacia abajo en una hoja de papel.
      courseC_maze_programming7_2018_authored_hint:
        courseC_maze_programming7_a: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseC_maze_programming7_b: Si tiene problemas para descifrar este enigma, intente escribir los movimientos hacia abajo en una hoja de papel.
      courseC_maze_programming8_authored_hint:
        courseC_maze_programming8_a: Recuerde que puede usar el botón "Paso" para revisar su código línea por línea si se queda atascado.
        courseC_maze_programming8_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseC_maze_programming8_2018_authored_hint:
        courseC_maze_programming8_a: Recuerde que puede usar el botón "Paso" para revisar su código línea por línea si se queda atascado.
        courseC_maze_programming8_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseC_maze_programming8_predict1_authored_hint: [ ]
      courseC_maze_programming8_predict1_2018_authored_hint: [ ]
      courseC_maze_programming9_authored_hint: [ ]
      courseC_maze_programming9_2018_authored_hint: [ ]
      courseC_maze_programming_challenge1_authored_hint:
        courseC_maze_programming_challenge1_a: Hay muchas maneras de llegar al cerdo. ¡Usa tu dedo para encontrar un camino y luego programarlo!
      courseC_maze_programming_challenge1_2018_authored_hint:
        courseC_maze_programming_challenge1_a: Hay muchas maneras de llegar al cerdo. ¡Usa tu dedo para encontrar un camino y luego programarlo!
      courseC_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: '* "¡ Si me envían al revés, tenga mucho cuidado de que gire en la dirección correcta!" *'
        courseC_maze_programming_challenge2_b: |-
          La solución más corta usa solo 5 bloques, pero usa este bloque:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018_authored_hint:
        courseC_maze_programming_challenge2_a: '* "¡ Si me envían al revés, tenga mucho cuidado de que gire en la dirección correcta!" *'
        courseC_maze_programming_challenge2_b: |-
          La solución más corta usa solo 5 bloques, pero usa este bloque:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_playLab_embedded_authored_hint: [ ]
      courseC_puppy_loops10_authored_hint:
        courseC_puppy_loops9_1: Necesito mover dos o tres veces entre cada turno.
      courseC_puppy_loops11_authored_hint: [ ]
      courseC_puppy_loops8_authored_hint:
        2-3_Maze_Loops_17_a: Trate de pensar sobre este problema en pequeñas partes. Tómate tu tiempo. ¡No es necesario resolver en el primer intento!
        2-3_Maze_Loops_17_b: La primera mitad de este camino es similar al paso de escalera del último rompecabezas, pero va en una dirección diferente.
        courseC_puppy_loops8_c: Hay diferentes formas de resolver esto. Querrá usar al menos dos ciclos y repetir un conjunto de acciones o un solo movimiento.
      courseC_puppy_loops8courseC_maze_loops8_authored_hint:
        courseC_puppy_loops8courseC_maze_loops8_a: Trate de pensar sobre este problema en pequeñas partes. Tómate tu tiempo. ¡No es necesario resolver en el primer intento!
        courseC_puppy_loops8courseC_maze_loops8_b: La primera mitad de este camino es similar a las escaleras del rompecabezas del pasado, pero va en una dirección diferente.
        courseC_puppy_loops8courseC_maze_loops8_c: "Hay diferentes maneras de solucionar esto Tienes que usar al menos dos ciclos y repetir un conjunto de acciones en la primera, luego un solo 'avanzar' en la otra."
      courseC_puppy_loops9_authored_hint:
        courseC_puppy_loops9_1: '¡Si repites las primeras acciones, puedes llevarme al puerco con solo cuatro bloques más!'
      courseC_starWars_loops1_authored_hint:
        courseC_starWars_loops1_a: Cuando BB-8 rueda sobre metal lo recoge automaticamente.
        courseC_starWars_loops1_b: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
        courseC_starWars_loops1_c: Querras 'mover hacia adelante' cinco veces para resolver este acertijo.
      courseC_starWars_loops10_authored_hint:
        courseC_starWars_loops10_a: '¿Este patrón no te parece una escalera gigante? Intenta usar lo que aprendiste de los acertijos anteriores para lograr todas las vueltas.'
        courseC_starWars_loops10_b: "Si deseas utilizar menos código, puedes poner un ciclo de repetición dentro de otro.    \nEsto se llama un ** ciclo anidado **."
        courseC_starWars_loops10_c: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
      courseC_starWars_loops10_2018_authored_hint:
        courseC_starWars_loops10_a: '¿Este patrón no te parece una escalera gigante? Intenta usar lo que aprendiste de los acertijos anteriores para lograr todas las vueltas.'
        courseC_starWars_loops10_b: "Si deseas utilizar menos código, puedes poner un ciclo de repetición dentro de otro.    \nEsto se llama un ** ciclo anidado **."
        courseC_starWars_loops10_c: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
      courseC_starWars_loops10_predict2_authored_hint: [ ]
      courseC_starWars_loops10_predict2_2018_authored_hint: [ ]
      courseC_starWars_loops11_authored_hint: [ ]
      courseC_starWars_loops11_2018_authored_hint: [ ]
      courseC_starWars_loops1_2018_authored_hint:
        courseC_starWars_loops1_a: Cuando BB-8 rueda sobre metal lo recoge automaticamente.
        courseC_starWars_loops1_b: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
        courseC_starWars_loops1_c: Querras 'mover hacia adelante' cinco veces para resolver este acertijo.
      courseC_starWars_loops2_authored_hint:
        courseC_starWars_loops2_a: Para repetir código, arrastra un ciclo ´repetir´, luego coloca dentro el bloque que quieres repetir.
      courseC_starWars_loops2_2018_authored_hint:
        courseC_starWars_loops2_a: Para repetir código, arrastra un ciclo ´repetir´, luego coloca dentro el bloque que quieres repetir.
      courseC_starWars_loops4_authored_hint:
        courseC_starWars_loops4_c: Hacer clic en la pequeña flecha junto a "izquierda" en el bloque de de vuelta te permite cambiarlo a "derecha".
        courseC_starWars_loops4_a: Usa dos bloques de "repetir".
        courseC_starWars_loops4_b: 'Cada ciclo de repetición tendrá solo un comando dentro de él: `avanzar`.'
      courseC_starWars_loops4_2018_authored_hint:
        courseC_starWars_loops4_c: Hacer clic en la pequeña flecha junto a "izquierda" en el bloque de de vuelta te permite cambiarlo a "derecha".
        courseC_starWars_loops4_a: Usa dos bloques de "repetir".
        courseC_starWars_loops4_b: 'Cada ciclo de repetición tendrá solo un comando dentro de él: `avanzar`.'
      courseC_starWars_loops5_authored_hint:
        courseC_starWars_loops5_b: Para moverte hacia abajo, debes girar y luego avanzar.
        courseC_starWars_loops5_a: La mejor solución utilizar un giro, luego un único `avanzar ', otro giro y luego un ciclo.
      courseC_starWars_loops5_2018_authored_hint:
        courseC_starWars_loops5_b: Para moverte hacia abajo, debes girar y luego avanzar.
        courseC_starWars_loops5_a: La mejor solución utilizar un giro, luego un único `avanzar ', otro giro y luego un ciclo.
      courseC_starWars_loops6_authored_hint:
        courseC_starWars_loops6_a: Trate de escribir todos los movimientos en un pedazo de papel y mirando un patrón.
        courseC_starWars_loops6_b: "Si desea utilizar menos código, puede poner un ciclo de repetición dentro de otro.    \nEsto se llama un ** ciclo anidado **."
      courseC_starWars_loops6_2018_authored_hint:
        courseC_starWars_loops6_a: Trate de escribir todos los movimientos en un pedazo de papel y mirando un patrón.
        courseC_starWars_loops6_b: "Si deseas utilizar menos código, puedes poner un ciclo de repetición dentro de otro.    \nEsto se llama un ** ciclo anidado **."
      courseC_starWars_loops7_authored_hint:
        courseC_starWars_loops7_a: '¡Este patrón parece más difícil de lo que es! Comience con un simple paso de escalera. ¿Eso cubre toda la chatarra?'
        courseC_starWars_loops7_b: Si usted está teniendo problemas con este rompecabezas, trate de escribir todos los movimientos en un pedazo de papel y mirando a un patrón.
        courseC_starWars_loops7_c: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
      courseC_starWars_loops7_2018_authored_hint:
        courseC_starWars_loops7_a: '¡Este patrón parece más difícil de lo que es! Comience con un simple paso de escalera. ¿Eso cubre toda la chatarra?'
        courseC_starWars_loops7_b: Si usted está teniendo problemas con este rompecabezas, trate de escribir todos los movimientos en un pedazo de papel y mirando a un patrón.
        courseC_starWars_loops7_c: '¡No tengas miedo de cometer un error! Ejecute el código para ver qué sucede, incluso si aún no ha resuelto el acertijo.'
      courseC_starWars_loops8_authored_hint:
        course_starWars_loops8_a: Trate de pensar sobre este problema en pequeñas partes. Tómate tu tiempo. ¡No es necesario resolver en el primer intento!
        course_starWars_loops8_b: Piense en la primera mitad de este problema como un problema de escalera. ¿Cómo resolviste eso antes?
        course_starWars_loops8_c: |-
          Echa un vistazo a este camino . ! [] (https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018_authored_hint:
        course_starWars_loops8_a: Trate de pensar sobre este problema en pequeñas partes. Tómate tu tiempo. ¡No es necesario resolver en el primer intento!
        course_starWars_loops8_b: Piense en la primera mitad de este problema como un problema de escalera. ¿Cómo resolviste eso antes?
        course_starWars_loops8_c: |-
          Echa un vistazo a este camino . ! [] (https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9_authored_hint:
        course_starWars_loops9_b: Puedes poner más de un bloque dentro de un ciclo de repetición.
        course_starWars_loops9_c: |-
          No necesitas girar a la izquierda para resolver este rompecabezas . Todos tus giros pueden ser hacia la derecha. ! [] (https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018_authored_hint:
        course_starWars_loops9_b: Puedes poner más de un bloque dentro de un ciclo de repetición.
        course_starWars_loops9_c: |-
          No necesitas girar a la izquierda para resolver este rompecabezas . Todos tus giros pueden ser hacia la derecha. ! [] (https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_Frozen_nested1_authored_hint:
        courseD_artist_project1_a: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_project1_b: Recuerda que 'mover adelante' dibuja una línea, mientras que 'salta adelante' no.
      courseD_Frozen_nested2_authored_hint:
        courseD_artist_project2_a: Recuerda que 'mover adelante' dibuja una línea, mientras que 'salta adelante' no.
        courseD_artist_project2_b: Después de dibujar y mover la primera vez, puede repetir el código agregando un ciclo alrededor del exterior.
      courseD_Frozen_nested3_authored_hint:
        courseD_artist_project3_a: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_project3_b: "¡Prueba los ciclos anidados! Usa el código que creaste para dibujar una línea de formas y anidarlo dentro de otro ciclo. En la parte inferior, antes de que termine el ciclo exterior, agrega un bloque que hará girar a Elsa.   \n\n- Pruebe 72 grados si está repitiendo el ciclo externo 5 veces - Pruebe 60 grados si está repitiendo el ciclo externo 6 veces"
      courseD_Frozen_nested4_authored_hint:
        courseD_artist_project4_a: |2
          Aquí está el copo de nieve del Pentágono con un giro de 36 grados antes de un copo de nieve triangular:
          
           <img src = "https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width = "200px" /> 
          
          
          Aquí hay una conjunto de hexágonos con cuadrados:
          
           <img src = "https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width = "200px" />
        courseD_artist_project4_b: Para probar esto, dibuja tu primer copo de nieve, gira y luego dibuja un segundo copo de nieve.
      courseD_Frozen_nested5_authored_hint:
        courseD_artist_project4_a: |
          Líneas de 2 hexágonos y 4 triángulos:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_Frozen_nested6_authored_hint:
        courseD_artist_project1a_a: |
          Este paso de la escalera utiliza un giro de 76 grados y se repite 4 veces.
          
          <img src = "https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width = "200px" />
        courseD_artist_project1a_b: Estos patrones son muy parecidos a los pasos de la escalera de otros acertijos, pero usando un ángulo diferente.
      courseD_Frozen_nested7_authored_hint:
        courseD_artist_project2a_a: |
          Este dibujo se hizo por ciclos anidados de 4 escaleras y una vuelta a la derecha `180 degrees` bloque dentro de un times`` repetición 2 bloque.
          
          <img src = "https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width = "200px" />
      courseD_Frozen_nested8_authored_hint:
        courseD_artist_project3a_a: '¡Puedes elegir diferentes cantidades para rotar tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?'
      courseD_Frozen_nested9_authored_hint:
        courseD_artist_project4a_a: |
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_1_2018_authored_hint:
        courseD_artist_project1_a: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_project1_b: Recuerda que 'mover adelante' dibuja una línea, mientras que 'salta adelante' no.
      courseD_artist_2_2018_authored_hint:
        courseD_artist_project1_b: Remember that `move` draws a line, while `jump` does not.
        courseD_artist_project1_a: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
      courseD_artist_3_2018_authored_hint: [ ]
      courseD_artist_4_2018_authored_hint: [ ]
      courseD_artist_5_2018_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to switch their angles, too!
      courseD_artist_6_2018_authored_hint: [ ]
      courseD_artist_7_2018_authored_hint:
        courseD_artist_project2a_a: |
          Este dibujo se hizo por ciclos anidados de 4 escaleras y una vuelta a la derecha `180 degrees` bloque dentro de un times`` repetición 2 bloque.
          
          <img src = "https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width = "200px" />
      courseD_artist_8_2018_authored_hint:
        courseD_artist_project3a_a: '¡Puedes elegir diferentes cantidades para rotar tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?'
      courseD_artist_9_2018_authored_hint:
        courseD_artist_project4a_a: |
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_Template_2018_authored_hint: [ ]
      courseD_artist_binary1_authored_hint:
        courseD_artist_binary1_a: Reemplace la "???" en el bloque de texto con la imagen binaria que quieras, en ceros y unos.
        courseD_artist_binary1_b: El artista dibujará un espacio en blanco por cada 1 y un espacio en negro por cada 0.
        courseD_artist_binary1_c: |-
          Así es como puede ingresar su código binario:! [] (Https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2018_authored_hint:
        courseD_artist_binary1_a: Reemplace la "???" en el bloque de texto con la imagen binaria que quieras, en ceros y unos.
        courseD_artist_binary1_b: El artista dibujará un espacio en blanco por cada 1 y un espacio en negro por cada 0.
        courseD_artist_binary1_c: |-
          Así es como puede ingresar su código binario:! [] (Https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary2_authored_hint:
        courseD_artist_binary2_a: '¡Simplemente haga clic en ''Ejecutar'' para ver este programa en acción!'
      courseD_artist_binary2_2018_authored_hint:
        courseD_artist_binary2_a: '¡Simplemente haga clic en ''Ejecutar'' para ver este programa en acción!'
      courseD_artist_binary3_authored_hint:
        courseD_artist_binary3_a: '¡Uno de los cuatro patrones binarios en la caja de herramientas resolverá este rompecabezas!'
        courseD_artist_binary3_b: '¡No tengas miedo de cometer un error! Intenta escribir binario y ejecuta el código para ver qué sucederá, incluso si aún no has resuelto el acertijo.'
      courseD_artist_binary3_2018_authored_hint:
        courseD_artist_binary3_a: '¡Uno de los cuatro patrones binarios en la caja de herramientas resolverá este rompecabezas!'
        courseD_artist_binary3_b: '¡No tengas miedo de cometer un error! Intenta escribir binario y ejecuta el código para ver qué sucederá, incluso si aún no has resuelto el acertijo.'
      courseD_artist_binary4_authored_hint:
        courseD_artist_binary4_a: Mira los primeros tres cuadrados en la fila superior. ¿Podría repetir estos tres para obtener el patrón completo?
        courseD_artist_binary4_b: '¡No tengas miedo de cometer un error! Intenta escribir código binario y ejecuta el código para ver qué sucederá, incluso si no crees que ya has resuelto el enigma.'
      courseD_artist_binary4_2018_authored_hint:
        courseD_artist_binary4_a: Mira los primeros tres cuadrados en la fila superior. ¿Podría repetir estos tres para obtener el patrón completo?
        courseD_artist_binary4_b: '¡No tengas miedo de cometer un error! Intenta escribir código binario y ejecuta el código para ver qué sucederá, incluso si no crees que ya has resuelto el enigma.'
      courseD_artist_binary5_authored_hint:
        courseD_artist_binary5_a: Intenta ejecutar el código primero para ver con qué tienes que trabajar.
        courseD_artist_binary5_b: Solo necesita cambiar dos filas para hacer una sonrisa.
        courseD_artist_binary5_c: Si usted está teniendo problemas para encontrar este rompecabezas, trate de escribir las líneas binarias en un pedazo de papel y mirando a un patrón.
      courseD_artist_binary5_2018_authored_hint:
        courseD_artist_binary5_a: Intenta ejecutar el código primero para ver con qué tienes que trabajar.
        courseD_artist_binary5_b: Solo necesita cambiar dos filas para hacer una sonrisa.
        courseD_artist_binary5_c: Si usted está teniendo problemas para encontrar este rompecabezas, trate de escribir las líneas binarias en un pedazo de papel y mirando a un patrón.
      courseD_artist_binary6_authored_hint:
        courseD_artist_binary6_a: Comience en la parte superior izquierda. ¿Qué tan lejos debe leer antes de que el patrón comience a repetirse?
        courseD_artist_binary6_b: '¡Puedes construir tu cadena binaria un poquito a la vez y seguir probando!'
      courseD_artist_binary6_2018_authored_hint:
        courseD_artist_binary6_a: Comience en la parte superior izquierda. ¿Qué tan lejos debe leer antes de que el patrón comience a repetirse?
        courseD_artist_binary6_b: '¡Puedes construir tu cadena binaria un poquito a la vez y seguir probando!'
      courseD_artist_binary7_authored_hint:
        courseD_artist_binary7_a: Comience en la parte superior izquierda. ¿Qué tan lejos debe leer antes de que el patrón comience a repetirse?
        courseD_artist_binary7_b: '¡No tengas miedo de cometer un error! Intenta escribir código binario y ejecuta el código para ver qué sucederá, incluso si no crees que ya has resuelto el enigma.'
      courseD_artist_binary7_2018_authored_hint:
        courseD_artist_binary7_a: Comience en la parte superior izquierda. ¿Qué tan lejos debe leer antes de que el patrón comience a repetirse?
        courseD_artist_binary7_b: '¡No tengas miedo de cometer un error! Intenta escribir código binario y ejecuta el código para ver qué sucederá, incluso si no crees que ya has resuelto el enigma.'
      courseD_artist_binary8_authored_hint:
        courseD_artist_binary8_a: La espiral puede ser confusa a veces. Aísle cada línea horizontal en su mente mientras crea este diseño.
        courseD_artist_binary8_b: Intenta ejecutar el código primero para ver con qué tienes que trabajar.
        courseD_artist_binary8_c: '¡No tengas miedo de cometer un error! Intenta escribir binario y ejecuta el código para ver qué sucederá, incluso si aún no has resuelto el acertijo.'
      courseD_artist_binary8_2018_authored_hint:
        courseD_artist_binary8_a: La espiral puede ser confusa a veces. Aísle cada línea horizontal en su mente mientras crea este diseño.
        courseD_artist_binary8_b: Intenta ejecutar el código primero para ver con qué tienes que trabajar.
        courseD_artist_binary8_c: '¡No tengas miedo de cometer un error! Intenta escribir binario y ejecuta el código para ver qué sucederá, incluso si aún no has resuelto el acertijo.'
      courseD_artist_binaryFP_authored_hint: [ ]
      courseD_artist_binaryFP8_authored_hint: [ ]
      courseD_artist_binaryFP_2018_authored_hint: [ ]
      courseD_artist_binary_challenge2_authored_hint:
        courseD_artist_binary_challenge2_a: Solo hay unas pocas líneas incorrectas en el programa original.
      courseD_artist_binary_challenge2_2018_authored_hint:
        courseD_artist_binary_challenge2_a: Solo hay unas pocas líneas incorrectas en el programa original.
      courseD_artist_binary_challenge3_authored_hint:
        courseD_artist_binary_challenge3_a: |-
          El mejor consejo que tengo para ti es presionar `⟲ Start Over` si comienza a ponerse realmente desordenado. Solo hay unas pocas líneas incorrectas en el programa original. Si falla un enfoque, haz una copia de seguridad y vuelve a intentarlo. ¡Hay una solucion!
      courseD_artist_embed_frozen_authored_hint: [ ]
      courseD_artist_embed_frozen2_authored_hint: [ ]
      courseD_artist_embedded_project1a_authored_hint: [ ]
      courseD_artist_functions10_authored_hint:
        courseD_artist_functions10_b: Este dibujo es muy parecido al último, excepto que la función dibuja un tipo diferente de línea.
        courseD_artist_functions10_a: Para evitar la necesidad de bloques múltiples 'avanzar', cree una función de 'dibujar triángulo' y llamar varias veces.
      courseD_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |-
          El programa debe:
          - Usar la función
          - Avanzar 100 + 75 pixeles
          - Usar la función
      courseD_artist_functions3_authored_hint:
        courseD_artist_functions3_a: |-
          Para resolver este rompecabezas, solo necesita agregar un ciclo que repita el código de inicio 8 veces.
          
          Si no puede recordar cuál era el código de inicio, haga clic en "comenzar de nuevo" en la esquina superior derecha del espacio de trabajo.
      courseD_artist_functions4_authored_hint:
        courseD_artist_functions4_a: Intenta usar una función!
      courseD_artist_functions5_authored_hint:
        courseD_artist_functions5_a: No te rindas! Recuerda lo que has estado aprendiendo.
        courseD_artist_functions5_b: Las funciones hacen que sea fácil de llamar a código guardado en cualquier momento, no sólo desde el interior de un ciclo!
      courseD_artist_functions6_authored_hint:
        grade4_artist_functions_windows0_a: Concéntrese solo en hacer una ventana por ahora. Vamos a crear una función para el siguiente rompecabezas.
        grade4_artist_functions_windows0_b: Intente hacer ciclos anidados, donde el ciclo interno hace el cuadrado y el ciclo externo gira el cuadrado cuatro veces.
      courseD_artist_functions7_authored_hint:
        courseD_artist_functions7_a: Intenta crear tu función primero y luego agrega ventanas de una a una por vez.
        courseD_artist_functions7_b: No debería necesitar agregar ningún ciclo de repetición adicional. Simplemente salta al artista 100 píxeles hacia adelante para cada ventana superior, y 150 píxeles hacia abajo para obtener las ventanas inferiores.
      courseD_artist_functions8_authored_hint:
        courseD_artist_functions8_a: |-
          Comience haciendo una función para un cuadrado, luego intente hacer una función para una línea de cuadrados. ¿Cómo usarías la función ` dibujar una línea de cuadrados` para hacer esta imagen?
        courseD_artist_functions8_b: Después de su primera línea de cuadrados, debe mover al artista hacia abajo y hacia atrás antes de comenzar su segunda línea de cuadrados.
        courseD_artist_functions8_c: Debe mover al artista hacia atrás un número de píxeles diferente para las líneas pares que para las impares.
      courseD_artist_functions9_authored_hint:
        courseD_artist_functions9_a: Para evitar la necesidad de bloques múltiples 'avanzar', cree una función de 'dibujar triángulo' y llamar varias veces.
        courseD_artist_functions9_b: Este dibujo se hace con la creación de una línea de triángulos y girando 60 o 120 grados cada vez que dibuja la línea del triángulo.
      courseD_artist_nestedLoops1_authored_hint:
        courseD_artist_nestedLoops1_a: La forma más fácil de dibujar esto es avanzar y usar giros a la derecha.
        courseD_artist_nestedLoops1_b: Puedes dibujar este triángulo con un ciclo de 'repetición' con dos bloques adentro. ¿Qué bloques necesitas?
        courseD_artist_nestedLoops1_c: Trate de escribir los pasos en el papel y en busca de patrones que se pueden simplificar con ciclos.
      courseD_artist_nestedLoops10_authored_hint: [ ]
      courseD_artist_nestedLoops10_2018_authored_hint: [ ]
      courseD_artist_nestedLoops1_2018_authored_hint:
        courseD_artist_nestedLoops1_a: La forma más fácil de dibujar esto es avanzar y usar giros a la derecha.
        courseD_artist_nestedLoops1_b: Puedes dibujar este triángulo con un ciclo de 'repetición' con dos bloques adentro. ¿Qué bloques necesitas?
        courseD_artist_nestedLoops1_c: Trate de escribir los pasos en el papel y en busca de patrones que se pueden simplificar con ciclos.
      courseD_artist_nestedLoops1a_authored_hint:
        courseD_artist_nestedLoops1a_a: |-
          Deberá dibujar un total de 6 triángulos. Después de terminar cada triángulo, gírelo 60 grados y muévalo para comenzar el siguiente triángulo. ! [] (https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: Si crea el triángulo con un ciclo, el artista debe hacer frente a la misma manera como empezaron. Esto hará que el grado 60 vueltas mucho más fácil.
        courseD_artist_nestedLoops1a_c: Si quieres colores, utiliza el bloque de 'set color' en el código. No es necesario que coincida con los colores de la imagen de la plantilla.
      courseD_artist_nestedLoops1a_2018_authored_hint:
        courseD_artist_nestedLoops1a_a: |-
          Deberá dibujar un total de 6 triángulos. Después de terminar cada triángulo, gírelo 60 grados y muévalo para comenzar el siguiente triángulo. ! [] (https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: Si crea el triángulo con un ciclo, el artista debe hacer frente a la misma manera como empezaron. Esto hará que el grado 60 vueltas mucho más fácil.
        courseD_artist_nestedLoops1a_c: Si quieres colores, utiliza el bloque de 'set color' en el código. No es necesario que coincida con los colores de la imagen de la plantilla.
      courseD_artist_nestedLoops2_authored_hint:
        courseD_artist_nestedLoops2_a: Anidar los ciclos montando su código triángulo con otro ciclo de 'repetición'.
        courseD_artist_nestedLoops2_b: Recuerde poner el bloque de 'girar' dentro del ciclo para que el artista se giré después de cada triángulo.
      courseD_artist_nestedLoops2_2018_authored_hint:
        courseD_artist_nestedLoops2_a: Anidar los ciclos montando su código triángulo con otro ciclo de 'repetición'.
        courseD_artist_nestedLoops2_b: Recuerde poner el bloque de 'girar' dentro del ciclo para que el artista se giré después de cada triángulo.
      courseD_artist_nestedLoops3_authored_hint:
        courseD_artist_nestedLoops3_a: "Utilice el bloque 'salto adelante' para llegar desde la parte superior de una plaza al lugar donde se iniciará la siguiente. Si sus plazas son 20 píxeles de alto y 20 píxeles apartes, ¿Cuánto necesita saltar?"
        courseD_artist_nestedLoops3_b: 'No te olvides de usar un ciclo anidado para resolver este rompecabezas rápidamente. '
        courseD_artist_nestedLoops3_c: 'Comience usando un ciclo de `repetición` para hacer un cuadrado. A continuación, repita ese cuadro 8 veces, saltando 40 píxeles en el medio. '
      courseD_artist_nestedLoops3_2018_authored_hint:
        courseD_artist_nestedLoops3_a: "Utilice el bloque 'salto adelante' para llegar desde la parte superior de una plaza al lugar donde se iniciará la siguiente. Si sus plazas son 20 píxeles de alto y 20 píxeles apartes, ¿Cuánto necesita saltar?"
        courseD_artist_nestedLoops3_b: 'No te olvides de usar un ciclo anidado para resolver este rompecabezas rápidamente. '
        courseD_artist_nestedLoops3_c: 'Comience usando un ciclo de `repetición` para hacer un cuadrado. A continuación, repita ese cuadro 8 veces, saltando 40 píxeles en el medio. '
      courseD_artist_nestedLoops4_authored_hint:
        courseD_artist_nestedLoops4_d: Para resolver esto correctamente, necesitarás moverte ** antes de ** tu turno, ¡o de lo contrario tus círculos se apagarán por la mínima cantidad!
        courseD_artist_nestedLoops4_a: |-
          Para hacer un círculo: - Repite 360 ​​veces - Avanza 1 píxel 
          - Gira a la izquierda 1 grado
        courseD_artist_nestedLoops4_b: No te olvides de saltar 50 píxeles entre círculos.
        courseD_artist_nestedLoops4_c: Use un ciclo anidado para dibujar sus círculos 4 veces.
      courseD_artist_nestedLoops4_2018_authored_hint:
        courseD_artist_nestedLoops4_d: Para resolver esto correctamente, necesitarás moverte ** antes de ** tu turno, ¡o de lo contrario tus círculos se apagarán por la mínima cantidad!
        courseD_artist_nestedLoops4_a: |-
          Para hacer un círculo: - Repite 360 ​​veces - Avanza 1 píxel 
          - Gira a la izquierda 1 grado
        courseD_artist_nestedLoops4_b: No te olvides de saltar 50 píxeles entre círculos.
        courseD_artist_nestedLoops4_c: Use un ciclo anidado para dibujar sus círculos 4 veces.
      courseD_artist_nestedLoops5_authored_hint:
        courseD_artist_nestedLoops5_a: |-
          Para hacer esto fácilmente: - repita 4 veces - haga un círculo - salte 50 píxeles hacia adelante 
          - gire 90 grados hacia la derecha
        courseD_artist_nestedLoops5_b: Para hacer un círculo necesitarás establecer un ciclo de repetición para repetir 360 veces. Dentro del ciclo, avance 1 píxel y gire 1 grado.
      courseD_artist_nestedLoops5_2018_authored_hint:
        courseD_artist_nestedLoops5_a: |-
          Para hacer esto fácilmente: - repita 4 veces - haga un círculo - salte 50 píxeles hacia adelante 
          - gire 90 grados hacia la derecha
        courseD_artist_nestedLoops5_b: Para hacer un círculo necesitarás establecer un ciclo de repetición para repetir 360 veces. Dentro del ciclo, avance 1 píxel y gire 1 grado.
      courseD_artist_nestedLoops6_authored_hint:
        courseD_artist_nestedLoops6_a: Tendrá que repetir su ciclo externo 6 veces, en lugar de solo 4.
        courseD_artist_nestedLoops6_b: 'Ahora que estás dividiendo 360 grados en seis piezas en lugar de cuatro, solo necesitarás girar 60 grados entre círculos. '
      courseD_artist_nestedLoops7_authored_hint:
        courseD_artist_nestedLoops7_a: Tendrá que usar ciclos anidados aquí. Primero, usa un ciclo para dibujar un cuadrado. ¿Cómo será el exterior del ciclo si el interior del ciclo dibuja un cuadrado?
        courseD_artist_nestedLoops7_b: |-
          Use un ciclo anidado, donde el ciclo interno es el código de un cuadrado. - repetir 6 veces - hacer cuadrado - saltar hacia delante en ** 50 píxeles ** - girar ** 60 grados **
      courseD_artist_nestedLoops7_2018_authored_hint:
        courseD_artist_nestedLoops7_a: Tendrá que usar ciclos anidados aquí. Primero, usa un ciclo para dibujar un cuadrado. ¿Cómo será el exterior del ciclo si el interior del ciclo dibuja un cuadrado?
        courseD_artist_nestedLoops7_b: |-
          Use un ciclo anidado, donde el ciclo interno es el código de un cuadrado. - repetir 6 veces - hacer cuadrado - saltar hacia delante en ** 50 píxeles ** - girar ** 60 grados **
      courseD_artist_nestedLoops8_authored_hint:
        courseD_artist_nestedLoops8_a: Para tener 8 hexágonos en su dibujo, deberá girar ** 45 grados ** entre cada uno de ellos. ¿Por qué? Porque 360 ​​grados (una vuelta completa) dividido por 8 (el número de hexágonos) es de 45 grados.
        courseD_artist_nestedLoops8_b: Si estás atascado, comienza mirando el último rompecabezas, luego cambia las cosas que son diferentes.
        courseD_artist_nestedLoops8_c: |-
          Use un ciclo anidado: repita 8 veces dibuje un hexágono salte 50 píxeles hacia adelante, gire 45 grados hacia la derecha
      courseD_artist_nestedLoops8_2018_authored_hint:
        courseD_artist_nestedLoops8_a: Para tener 8 hexágonos en su dibujo, deberá girar ** 45 grados ** entre cada uno de ellos. ¿Por qué? Porque 360 ​​grados (una vuelta completa) dividido por 8 (el número de hexágonos) es de 45 grados.
        courseD_artist_nestedLoops8_b: Si estás atascado, comienza mirando el último rompecabezas, luego cambia las cosas que son diferentes.
        courseD_artist_nestedLoops8_c: |-
          Use un ciclo anidado: repita 8 veces dibuje un hexágono salte 50 píxeles hacia adelante, gire 45 grados hacia la derecha
      courseD_artist_nestedLoops9_authored_hint:
        courseD_artist_nestedLoops9_a: Comience usando un ciclo anidado como lo hizo antes, pero esta vez, hágalo con cuadrados.
        courseD_artist_nestedLoops9_b: Agregue un segundo conjunto de ciclos anidados al final del primer conjunto, pero esta vez use triángulos.
        courseD_artist_nestedLoops9_c: |-
          Use dos ciclos anidados: repita 8 veces dibuje un cuadrado salte 50 píxeles hacia adelante, gire hacia la derecha 45 grados Repita 8 veces dibuje un triángulo 
          salte hacia adelante 50 píxeles 
          gire a la derecha 45 grados
      courseD_artist_nestedLoops9_2018_authored_hint:
        courseD_artist_nestedLoops9_a: Comience usando un ciclo anidado como lo hizo antes, pero esta vez, hágalo con cuadrados.
        courseD_artist_nestedLoops9_b: Agregue un segundo conjunto de ciclos anidados al final del primer conjunto, pero esta vez use triángulos.
        courseD_artist_nestedLoops9_c: |-
          Use dos ciclos anidados: repita 8 veces dibuje un cuadrado salte 50 píxeles hacia adelante, gire hacia la derecha 45 grados Repita 8 veces dibuje un triángulo 
          salte hacia adelante 50 píxeles 
          gire a la derecha 45 grados
      courseD_artist_nestedLoops9_predict1_authored_hint: [ ]
      courseD_artist_nestedLoops9_predict1_2018_authored_hint: [ ]
      courseD_artist_nestedLoopsFP_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src = "https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width = "200px" /> 
          
          Esta imagen se realizó utilizando un único ciclo anidado que repite un hexágono (con lados de 50px) 15 veces con un giro de 48 grados.
        courseD_artist_nestedLoopsFP_b: |-
          <img src = "https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width = "200px" /> 
          
          Esta imagen se hizo usando un código similar a otros niveles que ya has hecho anteriormente, pero con círculos (repita 360 veces: avance 1, gire 1 grado).
        courseD_artist_nestedLoopsFP_c: |-
          <img src = "https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width = "200px" /> 
          
          Esta imagen se hizo usando un único ciclo anidado que repite un pentágono (con lados de 50px) 15 veces con un giro de 48 grados.
      courseD_artist_nestedLoopsFP_2018_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src = "https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width = "200px" /> 
          
          Esta imagen se realizó utilizando un único ciclo anidado que repite un hexágono (con lados de 50px) 15 veces con un giro de 48 grados.
        courseD_artist_nestedLoopsFP_b: |-
          <img src = "https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png" width = "200px" /> 
          
          Esta imagen se hizo usando un código similar a otros niveles que ya has hecho anteriormente, pero con círculos (repita 360 veces: avance 1, gire 1 grado).
        courseD_artist_nestedLoopsFP_c: |-
          <img src = "https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png" width = "200px" /> 
          
          Esta imagen se hizo usando un único ciclo anidado que repite un pentágono (con lados de 50px) 15 veces con un giro de 48 grados.
      courseD_artist_nestedLoopsPre1_authored_hint: [ ]
      courseD_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Comience por cambiar el color a azul, luego cree un octágono con 50 lados de píxeles y 45 grados de vuelta a la izquierda.
        courseD_artist_nestedLoops_challenge1_b: Agregue el código para cambiar el color a verde y haga un triángulo con 50 lados de píxeles y 120 grados de vuelta a la izquierda.
        courseD_artist_nestedLoops_challenge1_c: Después de que haya dibujado ambas formas, tendrá que saltar 50 píxeles hacia delante antes de girar 90 grados hacia la derecha.
        courseD_artist_nestedLoops_challenge1_d: Coloca todo tu código dentro de un ciclo `repeat 4 times` para terminarlo.
      courseD_artist_nestedLoops_challenge1_2018_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Comience por cambiar el color a azul, luego cree un octágono con 50 lados de píxeles y 45 grados de vuelta a la izquierda.
        courseD_artist_nestedLoops_challenge1_b: Agregue el código para cambiar el color a verde y haga un triángulo con 50 lados de píxeles y 120 grados de vuelta a la izquierda.
        courseD_artist_nestedLoops_challenge1_c: Después de que haya dibujado ambas formas, tendrá que saltar 50 píxeles hacia delante antes de girar 90 grados hacia la derecha.
        courseD_artist_nestedLoops_challenge1_d: Coloca todo tu código dentro de un ciclo `repeat 4 times` para terminarlo.
      courseD_artist_nestedLoops_challenge2_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Para dibujar un octágono regular, el artista debe girar 45 grados 8 veces.
        courseD_artist_nestedLoops_challenge2_b: Para dibujar un cuadrado, el artista debe girar 90 grados 4 veces.
      courseD_artist_nestedLoops_challenge2_2018_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Para dibujar un octágono regular, el artista debe girar 45 grados 8 veces.
        courseD_artist_nestedLoops_challenge2_b: Para dibujar un cuadrado, el artista debe girar 90 grados 4 veces.
      courseD_artist_project1_authored_hint:
        courseD_artist_project1_a: Use el menú desplegable en los bloques `turn` para elegir el ángulo que necesita!
        courseD_artist_project1_b: Recuerda que 'mover adelante' dibuja una línea, mientras que 'salta adelante' no.
      courseD_artist_project1_2018_authored_hint:
        courseD_artist_project1_a: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_project1_b: Recuerda que 'mover adelante' dibuja una línea, mientras que 'salta adelante' no.
      courseD_artist_project1a_authored_hint:
        courseD_artist_project1a_a: |
          Este paso de la escalera utiliza un giro de 76 grados y se repite 4 veces.
          
          <img src = "https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width = "200px" />
        courseD_artist_project1a_b: Estos patrones son muy parecidos a los pasos de la escalera de otros acertijos, pero usando un ángulo diferente.
      courseD_artist_project1a_2018_authored_hint:
        courseD_artist_project1a_a: |
          Este paso de la escalera utiliza un giro de 76 grados y se repite 4 veces.
          
          <img src = "https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width = "200px" />
        courseD_artist_project1a_b: Estos patrones son muy parecidos a los pasos de la escalera de otros acertijos, pero usando un ángulo diferente.
      courseD_artist_project2_authored_hint:
        courseD_artist_project2_a: Recuerda que 'mover adelante' dibuja una línea, mientras que 'salta adelante' no.
        courseD_artist_project2_b: Después de dibujar y mover la primera vez, puede repetir el código agregando un ciclo alrededor del exterior.
      courseD_artist_project2Template_authored_hint: [ ]
      courseD_artist_project2Template_2018_authored_hint: [ ]
      courseD_artist_project2_2018_authored_hint:
        courseD_artist_project2_a: Recuerda que 'mover adelante' dibuja una línea, mientras que 'salta adelante' no.
        courseD_artist_project2_b: Después de dibujar y mover la primera vez, puede repetir el código agregando un ciclo alrededor del exterior.
      courseD_artist_project2a_authored_hint:
        courseD_artist_project2a_a: |
          Este dibujo se hizo por ciclos anidados de 4 escaleras y una vuelta a la derecha `180 degrees` bloque dentro de un times`` repetición 2 bloque.
          
          <img src = "https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width = "200px" />
      courseD_artist_project2a_2018_authored_hint:
        courseD_artist_project2a_a: |
          Este dibujo se hizo por ciclos anidados de 4 escaleras y una vuelta a la derecha `180 degrees` bloque dentro de un times`` repetición 2 bloque.
          
          <img src = "https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width = "200px" />
      courseD_artist_project3_authored_hint:
        courseD_artist_project3_a: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_project3_b: "¡Prueba los ciclos anidados! Usa el código que creaste para dibujar una línea de formas y anidarlo dentro de otro ciclo. En la parte inferior, antes de que termine el ciclo exterior, agrega un bloque que hará girar a Elsa.   \n\n- Pruebe 72 grados si está repitiendo el ciclo externo 5 veces - Pruebe 60 grados si está repitiendo el ciclo externo 6 veces"
      courseD_artist_project3_2018_authored_hint:
        courseD_artist_project3_a: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_project3_b: "¡Prueba los ciclos anidados! Usa el código que creaste para dibujar una línea de formas y anidarlo dentro de otro ciclo. En la parte inferior, antes de que termine el ciclo exterior, agrega un bloque que hará girar a Elsa.   \n\n- Pruebe 72 grados si está repitiendo el ciclo externo 5 veces - Pruebe 60 grados si está repitiendo el ciclo externo 6 veces"
      courseD_artist_project3a_authored_hint:
        courseD_artist_project3a_a: '¡Puedes elegir diferentes cantidades para rotar tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?'
      courseD_artist_project3a_2018_authored_hint:
        courseD_artist_project3a_a: '¡Puedes elegir diferentes cantidades para rotar tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?'
      courseD_artist_project4_authored_hint:
        courseD_artist_project4_a: |2
          Aquí está el copo de nieve del Pentágono con un giro de 36 grados antes de un copo de nieve triangular:
          
           <img src = "https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width = "200px" /> 
          
          
          Aquí hay una conjunto de hexágonos con cuadrados:
          
           <img src = "https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width = "200px" />
        courseD_artist_project4_b: Para probar esto, dibuja tu primer copo de nieve, gira y luego dibuja un segundo copo de nieve.
      courseD_artist_project4_2018_authored_hint:
        courseD_artist_project4_a: |2
          Aquí está el copo de nieve del Pentágono con un giro de 36 grados antes de un copo de nieve triangular:
          
           <img src = "https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width = "200px" /> 
          
          
          Aquí hay una conjunto de hexágonos con cuadrados:
          
           <img src = "https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width = "200px" />
        courseD_artist_project4_b: Para probar esto, dibuja tu primer copo de nieve, gira y luego dibuja un segundo copo de nieve.
      courseD_artist_project4a_authored_hint:
        courseD_artist_project4a_a: |
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2018_authored_hint:
        courseD_artist_project4a_a: |
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project5_authored_hint:
        courseD_artist_project4_a: |
          Líneas de 2 hexágonos y 4 triángulos:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2018_authored_hint:
        courseD_artist_project4_a: |
          Líneas de 2 hexágonos y 4 triángulos:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_projectTemplate_authored_hint: [ ]
      courseD_artist_projectTemplate_2018_authored_hint: [ ]
      courseD_artist_project_embedded_authored_hint: [ ]
      courseD_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: Para dibujar un lado, utilice el bloque `se mueven hacia adelante por 100 pixeles `, y cambiar el 100 a un 200.
        courseD_artist_ramp11b: |-
          Para dibujar 4 lados, poner un bloque`avanzar por 200 píxeles ` dentro de una repetición y hacer que el ciclo se ajuste a dibujar 4 veces. ¡No olvides girar después!
        courseD_artist_ramp11_c: '¡Recuerde colocar el bloque `giro` dentro del ciclo!'
      courseD_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: '¡Puedes dibujar primero el cuadrado, luego el triángulo o hacerlo al revés!'
        courseD_artist_ramp12_b: Intenta dividir el problema en 2 partes y usando 2 ciclos.
        courseD_artist_ramp12_c: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
      courseD_bee_conditionals1_authored_hint:
        courseD_bee_conditionals1_a: Usted tendrá que utilizar un bloque ` si ` para comprobar si hay una flor debajo de la nube antes de tratar de obtener el néctar.
      courseD_bee_conditionals10_authored_hint: [ ]
      courseD_bee_conditionals10_2018_authored_hint: [ ]
      courseD_bee_conditionals1_predict1_authored_hint:
        courseD_bee_conditionals1_a: Usted tendrá que utilizar un bloque ` si ` para comprobar si hay una flor debajo de la nube antes de tratar de obtener el néctar.
      courseD_bee_conditionals1_predict1_2018_authored_hint:
        courseD_bee_conditionals1_a: Usted tendrá que utilizar un bloque ` si ` para comprobar si hay una flor debajo de la nube antes de tratar de obtener el néctar.
      courseD_bee_conditionals2_authored_hint:
        courseD_bee_conditionals2_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si quieres que tu código se ejecute en ambos casos, asegúrate de utilizar un ` si ` comunicado.
        courseD_bee_conditionals2_b: Puede usar un bucle 'repetición' o un 'mientras camino por delante' para moverse a través de este laberinto.
        courseD_bee_conditionals2_c: No tienes ningún comprobador para panales, solo habrá flores o espacios en blanco debajo de las nubes.
        courseD_bee_conditionals2_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals2_2018_authored_hint:
        courseD_bee_conditionals2_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si quieres que tu código se ejecute en ambos casos, asegúrate de utilizar un ` si ` comunicado.
        courseD_bee_conditionals2_b: Puede usar un bucle 'repetición' o un 'mientras camino por delante' para moverse a través de este laberinto.
        courseD_bee_conditionals2_c: No tienes ningún comprobador para panales, solo habrá flores o espacios en blanco debajo de las nubes.
        courseD_bee_conditionals2_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals2_test_authored_hint:
        courseD_bee_conditionals2_aa: '¿Necesita ayuda para comenzar? Aquí hay un pequeño vídeo de sugerencia.'
        courseD_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si quieres que tu código se ejecute en ambos casos, asegúrate de utilizar un ` si ` comunicado.
        courseD_bee_conditionals2_b: Puede usar un bucle 'repetición' o un 'mientras camino por delante' para moverse a través de este laberinto.
        courseD_bee_conditionals2_c: No hay que comprobar si hay panales, solo habrá flores o espacios en blanco debajo de las nubes.
        courseD_bee_conditionals2_d: '¿Necesitas ayuda para terminar las cosas? Mire este video de sugerencia.'
      courseD_bee_conditionals3_authored_hint:
        courseD_bee_conditionals3_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals3_a: Asegúrese de utilizar un ` si ' declaración para comprobar cada espacio para ver si tiene ya sea una flor o nada.
        courseD_bee_conditionals3_b: Puede utilizar un ciclo de repetición o un ciclo` while` para mantener que la abeja se mueva hacia adelante. ¡Usa el que más te guste!
        courseD_bee_conditionals3_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
        courseD_bee_conditionals3_hintVid2: Mire este vídeo para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals3_2018_authored_hint:
        courseD_bee_conditionals3_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals3_a: Asegúrese de utilizar un ` si ' declaración para comprobar cada espacio para ver si tiene ya sea una flor o nada.
        courseD_bee_conditionals3_b: Puede utilizar un ciclo de repetición o un ciclo` while` para mantener que la abeja se mueva hacia adelante. ¡Usa el que más te guste!
        courseD_bee_conditionals3_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
        courseD_bee_conditionals3_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals4_authored_hint:
        courseD_bee_conditionals4_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals4_a: Todavía puede tratar cada espacio como si hubiera una nube sobre él, aunque puede ver todo el camino.
        courseD_bee_conditionals4_b: 'Utilizar una declaración` si '' dentro de su ciclo para comprobar cada espacio de néctar. '
        courseD_bee_conditionals4_c: Usando un bloque <xml><block type="maze_untilBlocked"/></xml>, debe seguir adelante y comprobar si hay una flor, ¿qué debería hacer la abeja?
        courseD_bee_conditionals4_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals4_2018_authored_hint:
        courseD_bee_conditionals4_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals4_a: Todavía puede tratar cada espacio como si hubiera una nube sobre él, aunque puede ver todo el camino.
        courseD_bee_conditionals4_b: 'Utilizar una declaración` si '' dentro de su ciclo para comprobar cada espacio de néctar. '
        courseD_bee_conditionals4_c: Usando un bloque <xml><block type="maze_untilBlocked"/></xml>, debe seguir adelante y comprobar si hay una flor, ¿qué debería hacer la abeja?
        courseD_bee_conditionals4_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals5_authored_hint:
        courseD_bee_conditionals5_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals5_a: Piense en cada lado de la ruta rectangular como un camino en sí mismo. Configure un ciclo anidado con un bloque `repetición` en el exterior y un ciclo`cuando hay un camino por delante` en el interior. ¿Cuántos caminos necesita la abeja para zumbar si la abeja necesita zumbar por todos lados con una flor?
        courseD_bee_conditionals5_c: Hay 3 lados del rectángulo con flores, por lo que el código debe `repetir 3 veces`. En cada repetición, la abeja deberá continuar a lo largo del camino, "mientras haya un camino por delante". Para continuar por el camino, la abeja deberá 'avanzar'. Mientras que en el camino, la abeja tiene que comprobar de una flor. ` si hay una flor`, la abeja debería` obtener néctar`.
        courseD_bee_conditionals5_b: En el interior del bloque`mientras que hay una ruta adelante` tendrá que seguir adelante y comprobar una flor. ¿Cómo se comprueba si hay una flor? ¿Qué haces si hay una flor?
        courseD_bee_conditionals5_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals5_2018_authored_hint:
        courseD_bee_conditionals5_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals5_a: Piense en cada lado de la ruta rectangular como un camino en sí mismo. Configure un ciclo anidado con un bloque `repetición` en el exterior y un ciclo`cuando hay un camino por delante` en el interior. ¿Cuántos caminos necesita la abeja para zumbar si la abeja necesita zumbar por todos lados con una flor?
        courseD_bee_conditionals5_c: Hay 3 lados del rectángulo con flores, por lo que el código debe `repetir 3 veces`. En cada repetición, la abeja deberá continuar a lo largo del camino, "mientras haya un camino por delante". Para continuar por el camino, la abeja deberá 'avanzar'. Mientras que en el camino, la abeja tiene que comprobar de una flor. ` si hay una flor`, la abeja debería` obtener néctar`.
        courseD_bee_conditionals5_b: En el interior del bloque`mientras que hay una ruta adelante` tendrá que seguir adelante y comprobar una flor. ¿Cómo se comprueba si hay una flor? ¿Qué haces si hay una flor?
        courseD_bee_conditionals5_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals6_authored_hint:
        courseD_bee_conditionals6_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals6_a: Asegúrese de utilizar una declaración` si ' para comprobar el nido de abeja debajo de cada nube.
        courseD_bee_conditionals6_b: En este caso, no necesita verificar si hay flores debajo de las nubes.
        courseD_bee_conditionals6_c: '¿Hay algún ciclo que pueda usar para simplificar su código?'
        courseD_bee_conditionals6_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals6_2018_authored_hint:
        courseD_bee_conditionals6_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals6_a: Asegúrese de utilizar una declaración` si ' para comprobar el nido de abeja debajo de cada nube.
        courseD_bee_conditionals6_b: En este caso, no necesita verificar si hay flores debajo de las nubes.
        courseD_bee_conditionals6_c: '¿Hay algún ciclo que pueda usar para simplificar su código?'
        courseD_bee_conditionals6_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals7_authored_hint:
        courseD_bee_conditionals7_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals7_a: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta. \nQuerrá   usar un bloque condicional (`if / else`) para resolver el desafío."
        courseD_bee_conditionals7_b: Si no hay una flor debajo de la nube, debe haber un panal, por lo que no necesita pensar en el caso de un espacio vacío.
        courseD_bee_conditionals7_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals7_2018_authored_hint:
        courseD_bee_conditionals7_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals7_a: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta. \nQuerrá   usar un bloque condicional (`if / else`) para resolver el desafío."
        courseD_bee_conditionals7_b: Si no hay una flor debajo de la nube, debe haber un panal, por lo que no necesita pensar en el caso de un espacio vacío.
        courseD_bee_conditionals7_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals7_predict2_authored_hint:
        courseD_bee_conditionals7_a: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta. \nQuerrá   usar un bloque condicional (`if / else`) para resolver el desafío."
      courseD_bee_conditionals7_predict2_2018_authored_hint:
        courseD_bee_conditionals7_a: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta. \nQuerrá   usar un bloque condicional (`if / else`) para resolver el desafío."
      courseD_bee_conditionals8_authored_hint:
        courseD_bee_conditionals8_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals8_a: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
        courseD_bee_conditionals8_b: |-
          Este enigma es complicado, porque no puedes verificar cuadrados en blanco, néctar, * y * miel con solo un único condicional. Sólo echa de néctar y la miel al final de su camino.
        courseD_bee_conditionals8_c: '¿Cómo se puede hacer seguro para viajar hasta el final de cada ruta, no importa cuánto tiempo de camino es?'
        courseD_bee_conditionals8_d: |-
          Aunque hay una nube justo frente a ti, no tienes que visitarla primero. Intenta comenzar con la nube en la parte inferior derecha del cuadrado. ! [] (https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals8_2018_authored_hint:
        courseD_bee_conditionals8_hintVid1: '¿Necesita ayuda para comenzar? ¡Ver el vídeo!'
        courseD_bee_conditionals8_a: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
        courseD_bee_conditionals8_b: |-
          Este enigma es complicado, porque no puedes verificar cuadrados en blanco, néctar, * y * miel con solo un único condicional. Sólo echa de néctar y la miel al final de su camino.
        courseD_bee_conditionals8_c: '¿Cómo se puede hacer seguro para viajar hasta el final de cada ruta, no importa cuánto tiempo de camino es?'
        courseD_bee_conditionals8_d: |-
          Aunque hay una nube justo frente a ti, no tienes que visitarla primero. Intenta comenzar con la nube en la parte inferior derecha del cuadrado. ! [] (https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: Mire este video para ayudar a resolver este rompecabezas.
      courseD_bee_conditionals9_authored_hint: [ ]
      courseD_bee_conditionals9_2018_authored_hint: [ ]
      courseD_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: '¿Puedes encontrar un camino que llegue a cada flor y panal sin golpear ningún árbol? El mejor camino es una espiral.'
        courseD_bee_conditionals_challenge1_b: En este rompecabezas, cada espacio podría tener una flor, un panal de miel o nada. Eso significa que puedes repetir tu condicional `if / else` en cada cuadrado.
      courseD_bee_conditionals_challenge1_2018_authored_hint:
        courseD_bee_conditionals_challenge1_a: '¿Puedes encontrar un camino que llegue a cada flor y panal sin golpear ningún árbol? El mejor camino es una espiral.'
        courseD_bee_conditionals_challenge1_b: En este rompecabezas, cada espacio podría tener una flor, un panal de miel o nada. Eso significa que puedes repetir tu condicional `if / else` en cada cuadrado.
      courseD_bee_conditionals_challenge2_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Al igual que los bloques ` if at flower`, el código dentro de un` while nectar> 0` solo se ejecutará si la abeja está en una flor. La diferencia es que el código interno se ejecutará una y otra vez hasta que no quede néctar. Pruebe este patrón:
          
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge2_2018_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Al igual que los bloques ` if at flower`, el código dentro de un` while nectar> 0` solo se ejecutará si la abeja está en una flor. La diferencia es que el código interno se ejecutará una y otra vez hasta que no quede néctar. Pruebe este patrón:
          
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge3_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Al igual que los bloques ` if at flower`, el código dentro de un` while nectar> 0` solo se ejecutará si la abeja está en una flor. La principal diferencia es que el código interno se ejecutará repetidamente hasta que no quede néctar. Pruebe este patrón:
          <xml>  <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_debugging1_authored_hint:
        courseD_bee_debugging1_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_bee_debugging1_b: '¿Ha observado algunos patrones que podrían ser hechos más simple usando un ciclo de repetición?'
      courseD_bee_debugging2_authored_hint:
        courseD_bee_debugging2_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_bee_debugging2_b: "¿Ves un patrón?    \nIntenta usar ciclos anidados para resolver este rompecabezas . ! [] (https://images.code.org/72fbb8a06937479599b12804f990a0f3-image-1501012383369.50.27.png)"
      courseD_bee_debugging3_authored_hint:
        courseD_bee_debugging3_a: '¿Hay algún lugar donde la abeja haga algo que no tiene sentido? ¿Qué pasa cuando cambias esos bloques?'
        courseD_bee_debugging3_b: Intente simplificar el código utilizando ciclos anidados.
      courseD_bee_debugging4_authored_hint:
        courseD_bee_debugging4_a: "Intente utilizar el proceso de depuración varias veces seguidas. \n\n¿Qué causa el primer problema? Una vez que se resuelve ese problema, ¿qué sale mal?"
        courseD_bee_debugging4_b: "Si tiene dificultades para descubrir cómo hacer el patrón de escalón de la escalera, intente trazarlo con el dedo y diga los comandos en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      courseD_bee_debugging5_authored_hint:
        courseD_bee_debugging5_a: |-
          Comience mirando solo el primer ciclo. ¿Qué hace? ¿Qué se supone que haga? ¿Qué te dice eso?
        courseD_bee_debugging5_b: Una vez que tiene el primer ciclo, ¿cómo quiere qué quede en su código?
        courseD_bee_debugging5_c: |-
          Intente envolver el ciclo sobrante alrededor del resto de su código completo. ¿funciona ahora?
          
          Si no, ¿qué sigue andando mal?
      courseD_bee_debugging6_authored_hint:
        courseD_bee_debugging6_a: |-
          Intente ejecutar el código con el botón "Paso". ¿Todo está bien en el primer paso? ¿Qué tal el segundo? ¿Dónde van las cosas mal?
        courseD_bee_debugging6_b: Parece que todos los pasos correctos están aquí, solo necesita más de ellos. ¿Cómo puedes repetir las acciones `get néctar` y` make honey` varias veces?
      courseD_bee_debugging7_authored_hint:
        courseD_bee_debugging7_a: "Intenta usar el botón \"Paso\". ¿Está todo bien en el primer paso?   \n\n¿Qué tal el segundo?   \n\n¿Dónde va mal?  "
        courseD_bee_debugging7_b: Si algo tiene que ocurrir varias veces, trate de añadir un ciclo de repetición.
      courseD_bee_debugging8_authored_hint:
        courseD_bee_debugging8_a: '¿Ves un patrón que puedes simplificar con un ciclo?'
        courseD_bee_debugging8_b: Trate de usar un ciclo anidado para hacer el código más corto.
      courseD_bee_debugging9_authored_hint:
        courseD_bee_debugging9_a: Hay varias formas de resolver este problema... ¡pero todas involucran giros!
        courseD_bee_debugging9_b: Averigua cómo resolverías el acertijo, luego muévete paso a paso para intentar que el código coincida con lo que tienes en la cabeza.
        courseD_bee_debugging9_c: "Visualice uno de estos escalones hacia las flores.    \n\n! [] (https://images.code.org/d3dfd710961b9ff8571816a97d76ae46-image-1501012931437.59.18.png) ¿Puedes construir cualquiera de estos con lo que está en el área de trabajo y en la caja de herramientas?\n\n"
      courseD_bee_debugging9_predict1_authored_hint: [ ]
      courseD_bee_debugging_challenge1_authored_hint:
        courseD_bee_debugging_challenge1_a: '¿Por qué funciona la primera mitad de este programa? Piensa por qué la abeja necesita moverse hacia atrás. ¿Cuánto néctar recoge la abeja cada vez que se mueve sobre una flor?'
        courseD_bee_debugging_challenge1_b: En el camino de regreso, haz que la abeja siga el mismo patrón. ¿Cuánta miel necesita la abeja para hacer cada vez que se mueve sobre un panal de miel?
        courseD_bee_debugging_challenge1_c: |-
          Después de que la abeja llegue a la fila inferior, haz que repita estos comandos: * Repite 2 veces: * Avanza * Haz 3 mieles * Mueve hacia atrás
      courseD_bee_debugging_challenge1_2018_authored_hint:
        courseD_bee_debugging_challenge1_a: '¿Por qué funciona la primera mitad de este programa? Piensa por qué la abeja necesita moverse hacia atrás. ¿Cuánto néctar recoge la abeja cada vez que se mueve sobre una flor?'
        courseD_bee_debugging_challenge1_b: En el camino de regreso, haz que la abeja siga el mismo patrón. ¿Cuánta miel necesita la abeja para hacer cada vez que se mueve sobre un panal de miel?
        courseD_bee_debugging_challenge1_c: |-
          Después de que la abeja llegue a la fila inferior, haz que repita estos comandos: * Repite 2 veces: * Avanza * Haz 3 mieles * Mueve hacia atrás
      courseD_bee_debugging_challenge1a_authored_hint:
        courseD_bee_debugging_challenge1_a: '¿Por qué funciona la primera mitad de este programa? Piensa por qué la abeja necesita moverse hacia atrás. ¿Cuánto néctar recoge la abeja cada vez que se mueve sobre una flor?'
        courseD_bee_debugging_challenge1_b: Para resolver este enigma, haga que la abeja siga el mismo patrón para hacer miel que cuando recolecta néctar.
        courseD_bee_debugging_challenge1_c: |-
          Después de que la abeja llegue a la fila inferior, haga que repita estos comandos:
          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_honey"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block></xml>
      courseD_bee_debugging_challenge2_authored_hint:
        courseD_bee_debugging_challenge1_a: '¿Por qué funciona la primera mitad de este programa? Piensa por qué la abeja necesita moverse hacia atrás. ¿Cuánto néctar recoge la abeja cada vez que se mueve sobre una flor?'
        courseD_bee_debugging_challenge1_b: En el camino de regreso, haz que la abeja siga el mismo patrón. ¿Cuánta miel necesita la abeja para hacer cada vez que se mueve sobre un panal de miel?
        courseD_bee_debugging_challenge1_c: |-
          Después de que la abeja llegue a la fila inferior, haz que repita estos comandos: * Repite 2 veces: * Avanza * Haz 3 mieles * Mueve hacia atrás
      courseD_bee_nestedLoops1_authored_hint:
        courseD_bee_nestedLoops1_a: '¿No funciona? Intenta usar el botón "Paso" para ver lo que sucede línea por línea.'
        courseD_bee_nestedLoops1_b: Intenta escribir código para un lado del cuadrado primero. ¿Puedes repetir esto para obtener todo el néctar?
        courseD_bee_nestedLoops1_c: Recuerda usar el bloque `obtener néctar` una vez que estés en un cuadrado con una flor.
      courseD_bee_nestedLoops1_2018_authored_hint:
        courseD_bee_nestedLoops1_a: '¿No funciona? Intenta usar el botón "Paso" para ver lo que sucede línea por línea.'
        courseD_bee_nestedLoops1_b: Intenta escribir código para un lado del cuadrado primero. ¿Puedes repetir esto para obtener todo el néctar?
        courseD_bee_nestedLoops1_c: Recuerda usar el bloque `obtener néctar` una vez que estés en un cuadrado con una flor.
      courseD_bee_nestedLoops1a_authored_hint:
        courseD_bee_nestedLoops1_a: '¿No funciona? Intenta usar el botón "Paso" para ver lo que sucede línea por línea.'
        courseD_bee_nestedLoops1_c: Recuerda usar el bloque `obtener néctar` una vez que estés en un cuadrado con una flor.
      courseD_bee_nestedLoops1a_2018_authored_hint:
        courseD_bee_nestedLoops1_a: '¿No funciona? Intenta usar el botón "Paso" para ver lo que sucede línea por línea.'
        courseD_bee_nestedLoops1_c: Recuerda usar el bloque `obtener néctar` una vez que estés en un cuadrado con una flor.
      courseD_bee_nestedLoops2_authored_hint:
        courseD_bee_nestedLoops2_a: Para resolver este acertijo, deberá anidar un ciclo de 'repetición' dentro de otro.
        courseD_bee_nestedLoops2_b: '¿No puede averiguar dónde colocar los ciclos? Trate de escribir el código en el papel paso a paso y buscar un patrón.'
        courseD_bee_nestedLoops2_c: Recuerde que puede poner más de un bloque dentro de un ciclo.
      courseD_bee_nestedLoops2_2018_authored_hint:
        courseD_bee_nestedLoops2_a: Para resolver este acertijo, deberá anidar un ciclo de 'repetición' dentro de otro.
        courseD_bee_nestedLoops2_b: '¿No puede averiguar dónde colocar los ciclos? Trate de escribir el código en el papel paso a paso y buscar un patrón.'
        courseD_bee_nestedLoops2_c: Recuerde que puede poner más de un bloque dentro de un ciclo.
      courseD_bee_nestedLoops2_predict1_authored_hint: [ ]
      courseD_bee_nestedLoops2_predict1_2018_authored_hint: [ ]
      courseD_bee_nestedLoops3_authored_hint:
        grade4_bee_nestedLoops1_a: Si no entiende cómo usar los ciclos anidados aquí, intente escribir las instrucciones paso a paso en un pedazo de papel. Encierra en un círculo los patrones que ves.
      courseD_bee_nestedLoops5_authored_hint:
        grade4_bee_nestedLoops4_a: Intente construir su código línea por línea y vea si puede detectar los lugares donde una repetición hará que el código sea más corto!
        grade4_bee_nestedLoops4_b: |-
          Necesitarás un ciclo anidado para avanzar y obtener néctar, pero solo un ciclo para recolectar miel al final. En total, deberías usar 3 ciclos.
      courseD_bee_nestedLoops6_authored_hint: [ ]
      courseD_bee_nestedLoops6_2018_authored_hint:
        courseD_maze_nestedLoops6_a: Si estas atorado, intenta escribir el código sin ciclos primero y busca patrones.
        courseD_maze_nestedLoops6_b: Poner un ciclo de repetición dentro de otro puede ayudar a disminuir la cantidad de bloques utilizados.
        courseD_maze_nestedLoops6_c: Tomará dos conjuntos de ciclos 'repetir´anidados para resolver este acertijo.
      courseD_bee_nestedLoops7_authored_hint:
        courseD_bee_nestedLoops7_a: Necesitarás repetir `obtener néctar` dentro de otra repetición que también tenga el bloque `avanzar` dentro de ella.
        courseD_bee_nestedLoops7_b: Tendrá que usar los tres bloques de `repetición` disponibles para resolver este rompecabezas.
        courseD_bee_nestedLoops7_c: |
          Anida tus tres bloques, así: - repite 4 - repite 3 - repite 12 - obtén néctar - avanza - gira a la derecha
      courseD_bee_nestedLoops7_2018_authored_hint:
        courseD_bee_nestedLoops7_a: Necesitarás repetir `obtener néctar` dentro de otra repetición que también tenga el bloque `avanzar` dentro de ella.
        courseD_bee_nestedLoops7_b: Tendrá que usar los tres bloques de `repetición` disponibles para resolver este rompecabezas.
        courseD_bee_nestedLoops7_c: |
          Anida tus tres bloques, así: - repite 4 - repite 3 - repite 12 - obtén néctar - avanza - gira a la derecha
      courseD_bee_nestedLoops8_authored_hint: [ ]
      courseD_bee_nestedLoops8_2018_authored_hint: [ ]
      courseD_bee_nestedLoops9_authored_hint: [ ]
      courseD_bee_nestedLoops9_2018_authored_hint: [ ]
      courseD_bee_nestedLoops9_predict2_authored_hint: [ ]
      courseD_bee_nestedLoops9_predict2_2018_authored_hint: [ ]
      courseD_bee_nested_loops_challenge1_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvide que puede `repetir` un solo comando o un patrón más largo. Incluso se puede `` repetir` un repetir` bloque!
        courseD_bee_nested_loops_challenge2_b: Para obtener las 4 gemas, primero use un ciclo para alejarse del centro. Gire a la izquierda o a la derecha, luego use un ciclo anidado para pasar de la primera pila de tesoros a la segunda. Si repite el ciclo anidado suficientes veces, el recolector se moverá alrededor de la * cueva completa *!
        courseD_bee_nested_loops_challenge2_c: El programa más corto que alcanza todo el tesoro usa solo un bloque `colectar` y dos turnos.
      courseD_bee_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvide que puede `repetir` un solo comando o un patrón más largo. Incluso se puede `` repetir` un repetir` bloque!
        courseD_bee_nested_loops_challenge2_b: Para obtener las 4 gemas, primero use un ciclo para alejarse del centro. Luego gire a la izquierda o derecha y use un bucle anidado para pasar de la primera pila de tesoros a la segunda.
        courseD_bee_nested_loops_challenge2_c: Si repite el ciclo anidado suficientes veces, el recolector se moverá alrededor de la * cueva completa *!
        courseD_bee_nested_loops_challenge2_d: El programa más corto que alcanza todo el tesoro usa solo un bloque `colectar` y dos turnos.
      courseD_bounce_events10s_authored_hint:
        courseD_bounce_events10s_a: |-
          Debería tener estos dos eventos en su código:
          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">swish</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">whistle</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block</xml>
      courseD_bounce_events10s_2018_authored_hint:
        courseD_bounce_events10s_a: |-
          Debería tener estos dos eventos en su código:
          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">swish</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">whistle</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block</xml>
      courseD_bounce_events11s_authored_hint:
        courseD_bounce_events11s_a: Tendrá que tirar una pelota cuando comience el juego, cuando golpee la canasta, y cuando la mano pase por alto la pelota.
      courseD_bounce_events11s_2018_authored_hint:
        courseD_bounce_events11s_a: Tendrá que tirar una pelota cuando comience el juego, cuando golpee la canasta, y cuando la mano pase por alto la pelota.
      courseD_bounce_events12s_authored_hint:
        courseD_bounce_events12s_a: Puede acelerar la pelota de baloncesto o la mano uniendo esos bloques al evento `cuando ejecuta`.
        courseD_bounce_events12s_b: Intenta hacer que cada toma valga 2 puntos y ¡ cambia el logo del equipo por el de tu ciudad natal!
      courseD_bounce_events12s_2018_authored_hint:
        courseD_bounce_events12s_a: Puede acelerar la pelota de baloncesto o la mano uniendo esos bloques al evento `cuando ejecuta`.
        courseD_bounce_events12s_b: Intenta hacer que cada toma valga 2 puntos y ¡ cambia el logo del equipo por el de tu ciudad natal!
      courseD_bounce_events1s_authored_hint:
        courseD_bounce_events1s_a: "Es necesario añadir el bloque`mover izquierda` al evento` cuando se deja flecha` al realizar este juego:\n <xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n   \n   </xml>"
        courseD_bounce_events1s_b: No te olvides de presionar "Ejecutar" y llevar la mano a la cesta para resolver este rompecabezas.
      courseD_bounce_events1s_2018_authored_hint:
        courseD_bounce_events1s_a: "Es necesario añadir el bloque`mover izquierda` al evento` cuando se deja flecha` al realizar este juego:\n <xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n   \n   </xml>"
        courseD_bounce_events1s_b: No te olvides de presionar "Ejecutar" y llevar la mano a la cesta para resolver este rompecabezas.
      courseD_bounce_events2s_authored_hint:
        courseD_bounce_events2s_a: |-
          Tendrá que tener dos conjuntos de eventos `mover` codificados para que esto funcione:
          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events2s_2018_authored_hint:
        courseD_bounce_events2s_a: |-
          Tendrá que tener dos conjuntos de eventos `mover` codificados para que esto funcione:
          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events5s_authored_hint:
        courseD_bounce_events5s_a: No es necesario mover la mano para resolver este rompecabezas.
        courseD_bounce_events5s_b: |-
          Asegúrese de haber agregado este código a su espacio de trabajo:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2018_authored_hint:
        courseD_bounce_events5s_a: No es necesario mover la mano para resolver este rompecabezas.
        courseD_bounce_events5s_b: |-
          Asegúrese de haber agregado este código a su espacio de trabajo:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events6s_authored_hint:
        courseD_bounce_events6s_a: |-
          ¿Tienes un evento que se parece a esto?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Si ha escrito el código correctamente, no tiene que mover la mano para ganar.
      courseD_bounce_events6s_2018_authored_hint:
        courseD_bounce_events6s_a: |-
          ¿Tienes un evento que se parece a esto?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Si ha escrito el código correctamente, no tiene que mover la mano para ganar.
      courseD_bounce_events7s_authored_hint:
        courseD_bounce_events7s_a: '¡Puedes agregar sonidos en más lugares si te apetece!'
      courseD_bounce_events7s_2018_authored_hint:
        courseD_bounce_events7s_a: '¡Puedes agregar sonidos en más lugares si te apetece!'
      courseD_bounce_events_template_authored_hint: [ ]
      courseD_bounce_events_template_2018_authored_hint: [ ]
      courseD_collector_debugging1_authored_hint:
        courseD_collector_debugging1_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_collector_debugging1_b: '¿Ha observado algunos patrones que podrían ser hechos más simple usando un ciclo de repetición?'
        courseD_collector_debugging1_c: 'Recuerde usar el bloque recoger, para recoger el tesoro una vez que se haya movido a él.  '
      courseD_collector_debugging10_predict1_authored_hint:
        courseD_collector_debugging9_a: Hay varias formas de resolver este problema... ¡pero todas involucran giros!
        courseD_collector_debugging9_b: Averigua cómo resolverías el acertijo, luego muévete paso a paso para intentar que el código coincida con lo que tienes en la cabeza.
      courseD_collector_debugging10_predict1_2018_authored_hint:
        courseD_collector_debugging9_a: Hay varias formas de resolver este problema... ¡pero todas involucran giros!
        courseD_collector_debugging9_b: Averigua cómo resolverías el acertijo, luego muévete paso a paso para intentar que el código coincida con lo que tienes en la cabeza.
      courseD_collector_debugging1_2018_authored_hint:
        courseD_collector_debugging1_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_collector_debugging1_b: '¿Ha observado algunos patrones que podrían ser hechos más simple usando un ciclo de repetición?'
        courseD_collector_debugging1_c: 'Recuerde usar el bloque recoger, para recoger el tesoro una vez que se haya movido a él.  '
      courseD_collector_debugging1a_authored_hint:
        courseD_collector_debugging1_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_collector_debugging1_c: 'Recuerde usar el bloque recoger, para recoger el tesoro una vez que se haya movido a él.  '
      courseD_collector_debugging1a_2018_authored_hint:
        courseD_collector_debugging1_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_collector_debugging1_c: 'Recuerde usar el bloque recoger, para recoger el tesoro una vez que se haya movido a él.  '
      courseD_collector_debugging2_authored_hint:
        courseD_collector_debugging2_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_collector_debugging2_b: '¿Ha observado algunos patrones que podrían ser hechos más simple usando un ciclo de repetición?'
        courseD_collector_debugging2_c: Intenta recoger tesoros para un lado de este patrón. ¿Puedes repetir esto para recoger tesoros en los otros dos lados?
      courseD_collector_debugging2_2018_authored_hint:
        courseD_collector_debugging2_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_collector_debugging2_b: '¿Ha observado algunos patrones que podrían ser hechos más simple usando un ciclo de repetición?'
        courseD_collector_debugging2_c: Intenta recoger tesoros para un lado de este patrón. ¿Puedes repetir esto para recoger tesoros en los otros dos lados?
      courseD_collector_debugging2a_authored_hint:
        courseD_collector_debugging2a_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_collector_debugging2a_c: |-
          ¿Lo que pasa? ¿Qué se supone que va a pasar? ¿Qué te dice eso?
      courseD_collector_debugging2a_2018_authored_hint:
        courseD_collector_debugging2a_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_collector_debugging2a_c: |-
          ¿Lo que pasa? ¿Qué se supone que va a pasar? ¿Qué te dice eso?
      courseD_collector_debugging3_authored_hint:
        courseD_collector_debugging3_a: '¿Hay algún lugar donde Laurel haga algo que no tiene sentido? ¿Qué pasa cuando cambias esos bloques?'
        courseD_collector_debugging3_b: Intente simplificar el código utilizando ciclos anidados.
      courseD_collector_debugging3_2018_authored_hint:
        courseD_collector_debugging3_a: '¿Hay algún lugar donde Laurel haga algo que no tiene sentido? ¿Qué pasa cuando cambias esos bloques?'
        courseD_collector_debugging3_b: Intente simplificar el código utilizando ciclos anidados.
      courseD_collector_debugging3a_authored_hint:
        courseD_collector_debugging3_a: '¿Hay algún lugar donde Laurel haga algo que no tiene sentido? ¿Qué pasa cuando cambias esos bloques?'
      courseD_collector_debugging3a_2018_authored_hint:
        courseD_collector_debugging3_a: '¿Hay algún lugar donde Laurel haga algo que no tiene sentido? ¿Qué pasa cuando cambias esos bloques?'
      courseD_collector_debugging4_authored_hint:
        courseD_collector_debugging4_a: "Intente utilizar el proceso de depuración varias veces seguidas. \n\n¿Qué causa el primer problema? Una vez que se resuelve ese problema, ¿qué sale mal?"
        courseD_collector_debugging4_b: "Si tiene dificultades para descubrir cómo hacer el patrón de escalón de la escalera, intente trazarlo con el dedo y diga los comandos en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
        courseD_collector_debugging4_c: En este ciclo solo falta un bloque. ¿Puedes averiguar cuál?
      courseD_collector_debugging4_2018_authored_hint:
        courseD_collector_debugging4_a: "Intente utilizar el proceso de depuración varias veces seguidas. \n\n¿Qué causa el primer problema? Una vez que se resuelve ese problema, ¿qué sale mal?"
        courseD_collector_debugging4_b: "Si tiene dificultades para descubrir cómo hacer el patrón de escalón de la escalera, intente trazarlo con el dedo y diga los comandos en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
        courseD_collector_debugging4_c: En este ciclo solo falta un bloque. ¿Puedes averiguar cuál?
      courseD_collector_debugging4a_authored_hint:
        courseD_collector_debugging4_a: "Intente utilizar el proceso de depuración varias veces seguidas. \n\n¿Qué causa el primer problema? Una vez que se resuelve ese problema, ¿qué sale mal?"
        courseD_collector_debugging4_b: "Si tiene dificultades para descubrir cómo hacer el patrón de escalón de la escalera, intente trazarlo con el dedo y diga los comandos en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      courseD_collector_debugging4a_2018_authored_hint:
        courseD_collector_debugging4_a: "Intente utilizar el proceso de depuración varias veces seguidas. \n\n¿Qué causa el primer problema? Una vez que se resuelve ese problema, ¿qué sale mal?"
        courseD_collector_debugging4_b: "Si tiene dificultades para descubrir cómo hacer el patrón de escalón de la escalera, intente trazarlo con el dedo y diga los comandos en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      courseD_collector_debugging5_authored_hint:
        courseD_collector_debugging5_a: |-
          Comience mirando solo el primer ciclo. ¿Qué hace? ¿Qué se supone que haga? ¿Qué te dice eso?
        courseD_collector_debugging5_b: Una vez que tiene el primer ciclo, ¿cómo quiere qué quede en su código?
      courseD_collector_debugging5_2018_authored_hint:
        courseD_collector_debugging5_a: |-
          Comience mirando solo el primer ciclo. ¿Qué hace? ¿Qué se supone que haga? ¿Qué te dice eso?
        courseD_collector_debugging5_b: Una vez que tiene el primer ciclo, ¿cómo quiere qué quede en su código?
      courseD_collector_debugging5a_authored_hint:
        courseD_collector_debugging5a_a: |-
          ¿Qué hace? ¿Qué se supone que haga? ¿Qué te dice eso?
        courseD_collector_debugging5a_b: Una vez que tiene la primera línea de tesoro recolectada, ¿qué queda en su código?
      courseD_collector_debugging5a_2018_authored_hint:
        courseD_collector_debugging5a_a: |-
          ¿Qué hace? ¿Qué se supone que haga? ¿Qué te dice eso?
        courseD_collector_debugging5a_b: Una vez que tiene la primera línea de tesoro recolectada, ¿qué queda en su código?
      courseD_collector_debugging6_authored_hint:
        courseD_collector_debugging6_a: |-
          Intente ejecutar el código con el botón "Paso". ¿Todo está bien en el primer paso? ¿Qué tal el segundo? ¿Dónde van las cosas mal?
        courseD_collector_debugging6_b: Parece que todos los pasos correctos están aquí, solo necesita más de ellos. ¿Cómo puedes repetir la acción `recolectar` varias veces?
      courseD_collector_debugging6_2018_authored_hint:
        courseD_collector_debugging6_a: |-
          Intente ejecutar el código con el botón "Paso". ¿Todo está bien en el primer paso? ¿Qué tal el segundo? ¿Dónde van las cosas mal?
        courseD_collector_debugging6_b: Parece que todos los pasos correctos están aquí, solo necesita más de ellos. ¿Cómo puedes repetir la acción `recolectar` varias veces?
      courseD_collector_debugging6a_authored_hint:
        courseD_collector_debugging6_a: |-
          Intente ejecutar el código con el botón "Paso". ¿Todo está bien en el primer paso? ¿Qué tal el segundo? ¿Dónde van las cosas mal?
        courseD_collector_debugging6_b: Parece que todos los bloques que necesita están en el área de trabajo. Intente hacer clic en "comenzar de nuevo" si las cosas se ponen demasiado confusas.
      courseD_collector_debugging6a_2018_authored_hint:
        courseD_collector_debugging6_a: |-
          Intente ejecutar el código con el botón "Paso". ¿Todo está bien en el primer paso? ¿Qué tal el segundo? ¿Dónde van las cosas mal?
        courseD_collector_debugging6_b: Parece que todos los bloques que necesita están en el área de trabajo. Intente hacer clic en "comenzar de nuevo" si las cosas se ponen demasiado confusas.
      courseD_collector_debugging7_authored_hint:
        courseD_collector_debugging7_a: |-
          Intente ejecutar el código con el botón "Paso". ¿Todo está bien en el primer paso? ¿Qué tal el segundo? ¿Dónde van las cosas mal?
        courseD_collector_debugging7_b: Si algo tiene que ocurrir varias veces, trate de añadir un ciclo de repetición.
        courseD_collector_debugging7_c: Si tiene problemas, intente escribir los pasos en un pedazo de papel y luego coloque los bloques en ese orden.
      courseD_collector_debugging8_authored_hint:
        courseD_collector_debugging8_a: '¿Ves un patrón que puedes simplificar con un ciclo?'
        courseD_collector_debugging8_b: Trate de usar un ciclo anidado para hacer el código más corto.
      courseD_collector_debugging8_2018_authored_hint:
        courseD_collector_debugging8_a: '¿Ves un patrón que puedes simplificar con un ciclo?'
        courseD_collector_debugging8_b: Trate de usar un ciclo anidado para hacer el código más corto.
      courseD_collector_debugging8a_authored_hint: [ ]
      courseD_collector_debugging8a_2018_authored_hint: [ ]
      courseD_collector_debugging9_authored_hint:
        courseD_collector_debugging9_a: Hay varias formas de resolver este problema... ¡pero todas involucran giros!
        courseD_collector_debugging9_b: Averigua cómo resolverías el acertijo, luego muévete paso a paso para intentar que el código coincida con lo que tienes en la cabeza.
      courseD_collector_debugging9_2018_authored_hint:
        courseD_collector_debugging9_a: Hay varias formas de resolver este problema... ¡pero todas involucran giros!
        courseD_collector_debugging9_b: Averigua cómo resolverías el acertijo, luego muévete paso a paso para intentar que el código coincida con lo que tienes en la cabeza.
      courseD_collector_debugging9a_authored_hint: [ ]
      courseD_collector_debugging9a_2018_authored_hint: [ ]
      courseD_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "Comience recogiendo solo ** dos ** gemas de cada una de las primeras ** dos ** pilas . ! [] (https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 SOY copy.png) Use estos bloques .\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Luego, recoge las gemas restantes en esta fila. ! [] (https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png) Agregue estos bloques a su programa.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finalmente, recoge el tesoro restante. Agregue estos bloques a su programa.\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Aquí está la solución completa para este rompecabezas.
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_debugging_challenge2_2018_authored_hint:
        courseD_collector_debugging_challenge2_a: "Comience recogiendo solo ** dos ** gemas de cada una de las primeras ** dos ** pilas . ! [] (https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 SOY copy.png) Use estos bloques .\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n\n                  </block>\n                  \n \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Luego, recoge las gemas restantes en esta fila. ! [] (https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png) Agregue estos bloques a su programa.\n\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finalmente, recoge el tesoro restante. Agregue estos bloques a su programa.\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Aquí está la solución completa para este rompecabezas.
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvide que puede `repetir` un solo comando o un patrón más largo. Incluso se puede `` repetir` un repetir` bloque!
        courseD_bee_nested_loops_challenge2_b: Para obtener las 4 gemas, primero use un ciclo para alejarse del centro. Gire a la izquierda o a la derecha, luego use un ciclo anidado para pasar de la primera pila de tesoros a la segunda. Si repite el ciclo anidado suficientes veces, el recolector se moverá alrededor de la * cueva completa *!
        courseD_bee_nested_loops_challenge2_c: El programa más corto que alcanza todo el tesoro usa solo un bloque `recolectar` y dos turnos.
        courseD_bee_nested_loops_challenge2_d: |-
          **Solución:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvide que puede `repetir` un solo comando o un patrón más largo. Incluso se puede `` repetir` un repetir` bloque!
        courseD_bee_nested_loops_challenge2_b: Para obtener las 4 gemas, primero use un ciclo para alejarse del centro. Gire a la izquierda o a la derecha, luego use un ciclo anidado para pasar de la primera pila de tesoros a la segunda. Si repite el ciclo anidado suficientes veces, el recolector se moverá alrededor de la * cueva completa *!
        courseD_bee_nested_loops_challenge2_c: El programa más corto que alcanza todo el tesoro usa solo un bloque `colectar` y dos turnos.
        courseD_bee_nested_loops_challenge2_d: |-
          **Solución:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2a_authored_hint:
        courseD_collector_nested_loops_challenge2a_a: No olvide que puede `repetir` un solo comando o un patrón más largo. Incluso se puede `` repetir` un repetir` bloque!
        courseD_collector_nested_loops_challenge2a_b: '¿Puedes descubrir cómo obtener las cuatro gemas sin usar más bloques de los necesarios para obtener dos?'
      courseD_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          Instead of using four `move forward` blocks for each side, try putting one `move forward` block inside of a `repeat` loop, like this:
          <xml><block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          </block></xml>
        courseD_artist_ramp10_b: '¡No te olvides de recoger una pieza del tesoro, luego gire para comenzar en un nuevo lado de la plaza!'
        courseD_artist_ramp10_c: Si quiere simplificar su código, ¡puede poner un ciclo dentro de otro! Esto se llama un ** ciclo anidado **.
      courseD_collector_ramp8_authored_hint:
        courseD_collector_ramp8_a: Cuando llegas a un cuadrado con tesoro, usa `recoger` para recogerlo. ¡Para este rompecabezas, tendrás que recolectar tesoros más de una vez!
        courseD_collector_ramp8_b: Si quiere simplificar más su código, ¡puede poner un ciclo de "repetición" dentro de otro! Esto se llama un ** ciclo anidado **.
      courseD_collector_ramp9_authored_hint:
        courseD_collector_ramp9_a: Comience por mover a Laurel al primer tesoro y luego recójalo. ¿Puedes repetir esta secuencia para obtener el segundo montón?
        courseD_collector_ramp9_b: Si quiere simplificar su código, ¡puede poner un ciclo de repetición dentro de otro! Esto se llama un ** ciclo anidado **.
      courseD_collector_until_challenge1_authored_hint: [ ]
      courseD_debugging_1_authored_hint:
        courseD_debugging_1_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_debugging_1_b: '¿Ha observado algunos patrones que podrían ser hechos más simple usando un ciclo de repetición?'
      courseD_debugging_2_authored_hint:
        courseD_debugging_2_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_debugging_2_b: '¿Ves un patrón? Intenta usar ciclos anidados para resolver este rompecabezas.'
      courseD_debugging_3_authored_hint:
        courseD_debugging_3_a: '¿Hay algún lugar donde la abeja haga algo que no tiene sentido? ¿Qué pasa cuando cambias esos bloques?'
        courseD_debugging_3_b: Intente simplificar el código utilizando ciclos anidados.
      courseD_debugging_4_authored_hint:
        courseD_debugging_4_a: "Intente utilizar el proceso de depuración varias veces seguidas. \n\n¿Qué causa el primer problema? Una vez que se resuelve ese problema, ¿qué sale mal?"
        courseD_debugging_4_b: "Si tiene dificultades para descubrir cómo hacer el patrón de escalón de la escalera, intente trazarlo con el dedo y diga los comandos en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      courseD_debugging_5_authored_hint:
        courseD_debugging_5_a: |-
          Comience mirando solo el primer ciclo. ¿Qué hace? ¿Qué se supone que haga? ¿Qué te dice eso?
        courseD_debugging_5_b: Una vez que tiene el primer ciclo, ¿cómo quiere qué quede en su código?
        courseD_debugging_5_c: |-
          Intente envolver el ciclo sobrante alrededor del resto de su código completo. ¿funciona ahora?
          
          Si no, ¿qué sigue andando mal?
      courseD_debugging_6_authored_hint:
        courseD_debugging_6_a: |-
          Intente ejecutar el código con el botón "Paso". ¿Todo está bien en el primer paso? ¿Qué tal el segundo? ¿Dónde van las cosas mal?
        courseD_debugging_6_b: Parece que todos los pasos correctos están aquí, solo necesita más de ellos. ¿Cómo puedes repetir las acciones `get néctar` y` make honey` varias veces?
      courseD_external_cond_authored_hint: [ ]
      courseD_farmer_condLoops1_authored_hint:
        courseD_farmer_condLoops1_a: Usted tendrá que buscar para el maíz 5 veces, utilizando una repetición del ciclo.
        courseD_farmer_condLoops1_b: Asegúrese de usar un bloque de 'si en maíz'!
      courseD_farmer_condLoops1_2018_authored_hint:
        courseD_farmer_condLoops1_a: Usted tendrá que buscar para el maíz 5 veces, utilizando una repetición del ciclo.
        courseD_farmer_condLoops1_b: Asegúrese de usar un bloque de 'si en maíz'!
      courseD_farmer_condLoops2_authored_hint:
        courseD_farmer_condLoops2_a: 'La mejor manera de hacer esto es anidar las declaraciones de ''si'' ubicando uno dentro del otro.  '
        courseD_farmer_condLoops2_b: Para este rompecabezas, usted debe tener una ' si / else` declaración y uno sencillo ` si ` comunicado.
        courseD_farmer_condLoops2_c: "Su declaración` si '  podría parecerse mucho a esto: \n- Si en el maíz\n - la recolección de maíz - cosa\n - si en la lechuga\n \\ t - recoger lechugas\n\n Si no hay nada allí, no comprar alguna cosa!"
      courseD_farmer_condLoops2_2018_authored_hint:
        courseD_farmer_condLoops2_a: 'La mejor manera de hacer esto es anidar las declaraciones de ''si'' ubicando uno dentro del otro.  '
        courseD_farmer_condLoops2_b: Para este rompecabezas, usted debe tener una ' si / else` declaración y uno sencillo ` si ` comunicado.
        courseD_farmer_condLoops2_c: "Su declaración` si '  podría parecerse mucho a esto: \n- Si en el maíz\n - la recolección de maíz - cosa\n - si en la lechuga\n \\ t - recoger lechugas\n\n Si no hay nada allí, no comprar alguna cosa!"
      courseD_farmer_condLoops3_authored_hint:
        courseD_farmer_condLoops3_a: |-
          Para obtener todos los elementos, intente anidar declaraciones ' if ' tres profundas. Esto significa que debe poner un ` si ' declaración dentro de otro, a continuación, poner una tercera` si ' declaración dentro de la segunda.
        courseD_farmer_condLoops3_b: Para este rompecabezas, usted debe tener dos ` if/ else` declaraciones y una llanura` if ` comunicado.
      courseD_farmer_condLoops3_2018_authored_hint:
        courseD_farmer_condLoops3_a: |-
          Para obtener todos los elementos, intente anidar declaraciones ' if ' tres profundas. Esto significa que debe poner un ` si ' declaración dentro de otro, a continuación, poner una tercera` si ' declaración dentro de la segunda.
        courseD_farmer_condLoops3_b: Para este rompecabezas, usted debe tener dos ` if/ else` declaraciones y una llanura` if ` comunicado.
      courseD_farmer_condLoops4_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Nadie sabe cuántas cabezas de lechuga crecerá de cada brote. Utilizar un ciclo 'mientras hay lechuga' para seguir recogiendo hasta que cada pieza haya sido recolectada.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: '¡El bucle `while` manejará espacios vacíos también! Como no hay lechuga, no elegirá ninguna y permitirá que el código avance.'
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: Puede utilizar un ciclo`mientras camino por delante` o un ciclo de repetición`para todos los cultivos.
      courseD_farmer_condLoops4_2018_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Nadie sabe cuántas cabezas de lechuga crecerá de cada brote. Utilizar un ciclo 'mientras hay lechuga' para seguir recogiendo hasta que cada pieza haya sido recolectada.
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: '¡El bucle `while` manejará espacios vacíos también! Como no hay lechuga, no elegirá ninguna y permitirá que el código avance.'
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: Puede utilizar un ciclo`mientras camino por delante` o un ciclo de repetición`para todos los cultivos.
      courseD_farmer_condLoops4a_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          Nadie sabe cuántas cabezas de lechuga crecerá de cada brote. Utiliza un ciclo 'mientras hay lechuga' para seguir recogiendo hasta que cada pieza haya sido recolectada.
      courseD_farmer_condLoops5_authored_hint:
        courseD_farmer_condLoops5_a: 'Hay un nuevo ciclo: `repetir calabaza ''. ¿Puedes ver cómo usarlo en este rompecabezas?'
        courseD_farmer_condLoops5_b: Podría haber más de una planta de maíz o lechuga en cada lugar. Utilizar un ciclo `while`para reunir todos ellos!
      courseD_farmer_condLoops5_2018_authored_hint:
        courseD_farmer_condLoops5_a: 'Hay un nuevo ciclo: `repetir calabaza ''. ¿Puedes ver cómo usarlo en este rompecabezas?'
        courseD_farmer_condLoops5_b: Podría haber más de una planta de maíz o lechuga en cada lugar. Utilizar un ciclo `while`para reunir todos ellos!
      courseD_farmer_condLoops6_authored_hint:
        courseD_farmer_condLoops6_a: Utilizar un ciclo «mientras camino por delante» para mover al agricultor hacia abajo en cada parte de la espiral.
        courseD_farmer_condLoops6_b: Sólo necesita el control del maíz durante la mayor parte de la cosecha. Sólo debes elegir una calabaza al final de su programa.
      courseD_farmer_condLoops6_2018_authored_hint:
        courseD_farmer_condLoops6_a: Utilizar un ciclo «mientras camino por delante» para mover al agricultor hacia abajo en cada parte de la espiral.
        courseD_farmer_condLoops6_b: Sólo necesita el control del maíz durante la mayor parte de la cosecha. Sólo debes elegir una calabaza al final de su programa.
      courseD_farmer_condLoops7_authored_hint:
        courseD_farmer_condLoops7_a: |-
          Tenga en cuenta que el camino más fácil para llegar a todos los cultivos sigue siendo una espiral. ! [] (https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Intente usar `cuando camino adelante` para mantener la cosechadora moviéndose el número correcto de pasos.
      courseD_farmer_condLoops7_2018_authored_hint:
        courseD_farmer_condLoops7_a: |-
          Tenga en cuenta que el camino más fácil para llegar a todos los cultivos sigue siendo una espiral. ! [] (https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: Intente usar `cuando camino adelante` para mantener la cosechadora moviéndose el número correcto de pasos.
      courseD_farmer_condLoops8_authored_hint: [ ]
      courseD_farmer_condLoops8_2018_authored_hint: [ ]
      courseD_farmer_condLoops9_authored_hint: [ ]
      courseD_farmer_condLoops9_2018_authored_hint: [ ]
      courseD_farmer_condLoops9_predict1_authored_hint: [ ]
      courseD_farmer_condLoops9_predict1_2018_authored_hint: [ ]
      courseD_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: El botón "Paso" podría ser muy útil en este desafío.
        courseD_farmer_condLoops_challenge1_b: Normalmente, usted simplemente "recoge calabaza" si está en una calabaza. ¿Qué más necesitas hacer si estás en una calabaza?
      courseD_farmer_condLoops_challenge1_2018_authored_hint:
        courseD_farmer_condLoops_challenge1_a: El botón "Paso" podría ser muy útil en este desafío.
        courseD_farmer_condLoops_challenge1_b: Normalmente, usted simplemente "recoge calabaza" si está en una calabaza. ¿Qué más necesitas hacer si estás en una calabaza?
      courseD_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: La cantidad de cada vegetal en cada espacio puede cambiar. Un ciclo `while` puede ayudar!
      courseD_farmer_condLoops_challenge2_2018_authored_hint:
        courseD_farmer_condLoops_challenge2_a: La cantidad de cada vegetal en cada espacio puede cambiar. Un ciclo `while` puede ayudar!
      courseD_farmer_condLoops_challenge2_clone_authored_hint: [ ]
      courseD_farmer_conditionals10_authored_hint: [ ]
      courseD_farmer_conditionals4_authored_hint:
        courseD_farmer_conditionals4_a: En lugar de utilizar un ciclo de`repetición`, utilizar un ciclo` while` para mantener la excavación hasta que la pila se ha ido.
      courseD_farmer_conditionals5_authored_hint:
        courseD_farmer_conditionals5a: Trate de anidar un ciclo `while` en el interior de un ciclo de repetición.
      courseD_farmer_conditionals6_authored_hint:
        courseD_farmer_conditionals6_a: Asegúrese de que esté utilizando el ciclo 'while' y averiguare cuántas veces lo necesita para llenar cada agujero.
        courseD_farmer_conditionals6_b: Observe que el agricultor necesita avanzar y descender varias veces en un patrón de escalera.
      courseD_farmer_conditionals7_authored_hint:
        courseD_farmer_conditionals8_a: El bloque `camino por delante` te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
      courseD_farmer_conditionals8_authored_hint:
        courseD_farmer_conditionals8_a: Usted va a tener que utilizar más de un ciclo`while`.
        courseD_farmer_conditionals8_b: Cada hoyo se encuentra al final de un camino, por lo que debes utilizar `while antes de usar` antes de usar` mientras hay un hoyo `.
        courseD_farmer_conditionals8_c: Tenga en cuenta que necesita repetir el `while camino por delante`,` mientras que hay un hoyo `seis veces.
      courseD_farmer_conditionals9_authored_hint: [ ]
      courseD_farmer_until_challenge2_authored_hint: [ ]
      courseD_farmer_until_challenge2_2018_authored_hint: [ ]
      courseD_farmer_while1_authored_hint:
        courseD_farmer_while1_a: Tendrá que avanzar cuatro veces para llegar a la pila. ¿Puedes usar un ciclo de 'repetición' para esto?
        courseD_farmer_while1_b: Usa el bloque `quita 1` cuando estés parado en la pila de tierra para quitarlo.
      courseD_farmer_while10_authored_hint: [ ]
      courseD_farmer_while10_2018_authored_hint: [ ]
      courseD_farmer_while10_predict2_authored_hint: [ ]
      courseD_farmer_while10_predict2_2018_authored_hint: [ ]
      courseD_farmer_while1_2018_authored_hint:
        courseD_farmer_while1_a: Tendrá que avanzar cuatro veces para llegar a la pila. ¿Puedes usar un ciclo de 'repetición' para esto?
        courseD_farmer_while1_b: Usa el bloque `quita 1` cuando estés parado en la pila de tierra para quitarlo.
      courseD_farmer_while2_authored_hint:
        courseD_farmer_while2_a: Solo necesitarás moverte una vez para llegar al hoyo.
        courseD_farmer_while2_b: Se necesita el bloque de 'llenar 1' seis veces. ¿Puede usar un ciclo para hacerlo más simple?
      courseD_farmer_while2_2018_authored_hint:
        courseD_farmer_while2_a: Solo necesitarás moverte una vez para llegar al hoyo.
        courseD_farmer_while2_b: Se necesita el bloque de 'llenar 1' seis veces. ¿Puede usar un ciclo para hacerlo más simple?
      courseD_farmer_while3_authored_hint:
        courseD_farmer_while3_a: Un ciclo puede ayudarte a simplificar tu código aquí.
        courseD_farmer_while3_b: No es necesario ningún bloque de`giro` para llegar a la pila.
      courseD_farmer_while3_2018_authored_hint:
        courseD_farmer_while3_a: Un ciclo puede ayudarte a simplificar tu código aquí.
        courseD_farmer_while3_b: No es necesario ningún bloque de`giro` para llegar a la pila.
      courseD_farmer_while4_authored_hint:
        courseD_farmer_conditionals4_a: En lugar de utilizar un ciclo de`repetición`, utilizar un ciclo` while` para mantener la excavación hasta que la pila se ha ido.
        courseD_farmer_conditionals4_b: Esto se ve muy similar a un rompecabezas anterior, la única diferencia es qué ciclo necesita.
      courseD_farmer_while4_2018_authored_hint:
        courseD_farmer_conditionals4_a: En lugar de utilizar un ciclo de`repetición`, utilizar un ciclo` while` para mantener la excavación hasta que la pila se ha ido.
        courseD_farmer_conditionals4_b: Esto se ve muy similar a un rompecabezas anterior, la única diferencia es qué ciclo necesita.
      courseD_farmer_while4_predict1_authored_hint: [ ]
      courseD_farmer_while4_predict1_2018_authored_hint: [ ]
      courseD_farmer_while5_authored_hint:
        courseD_farmer_conditionals5a_a: Trate de anidar un ciclo `while` en el interior de un ciclo de repetición.
        courseD_farmer_conditionals5a_b: El agricultor necesita avanzar un total de cinco veces para llegar al final de la fila. ¿Qué más necesita hacer el agricultor?
        courseD_farmer_conditionals5a_c: Avanza 5 veces. Cada vez que avance, elimine la pila de tierra utilizando el bloque `eliminar pila '.
      courseD_farmer_while5_2018_authored_hint:
        courseD_farmer_conditionals5a_a: Trate de anidar un ciclo `while` en el interior de un ciclo de repetición.
        courseD_farmer_conditionals5a_b: El agricultor necesita avanzar un total de cinco veces para llegar al final de la fila. ¿Qué más necesita hacer el agricultor?
        courseD_farmer_conditionals5a_c: Avanza 5 veces. Cada vez que avance, elimine la pila de tierra utilizando el bloque `eliminar pila '.
      courseD_farmer_while6_authored_hint:
        courseD_farmer_conditionals6_a: Asegúrese de que esté utilizando el ciclo 'while' y averiguare cuántas veces lo necesita para llenar cada agujero.
        courseD_farmer_conditionals6_b: Observe que el agricultor necesita avanzar y descender varias veces en un patrón de escalera.
        courseD_farmer_conditionals6_c: |2
          El patrón de escalón de escalera utiliza los siguientes bloques:
           avance hacia adelante, orificio de llenado, gire hacia la derecha, avance hacia adelante, orificio de llenado, gire hacia la izquierda. ¿Cuántas veces necesita usar este patrón de escalón de escalera?
          
          Hacer seguro de que está utilizando el `mientras que hay un agujero ` para llenar el agujero.
      courseD_farmer_while6_2018_authored_hint:
        courseD_farmer_conditionals6_a: Asegúrese de que esté utilizando el ciclo 'while' y averiguare cuántas veces lo necesita para llenar cada agujero.
        courseD_farmer_conditionals6_b: Observe que el agricultor necesita avanzar y descender varias veces en un patrón de escalera.
        courseD_farmer_conditionals6_c: |2
          El patrón de escalón de escalera utiliza los siguientes bloques:
           avance hacia adelante, orificio de llenado, gire hacia la derecha, avance hacia adelante, orificio de llenado, gire hacia la izquierda. ¿Cuántas veces necesita usar este patrón de escalón de escalera?
          
          Hacer seguro de que está utilizando el `mientras que hay un agujero ` para llenar el agujero.
      courseD_farmer_while7_authored_hint:
        courseD_farmer_conditionals8_a: El bloque `camino por delante` te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        courseD_farmer_conditionals8_b: Poner un ciclo `mientras camino adelante` dentro de un ciclo de repetición puede ayudarlo en este acertijo.
        courseD_farmer_conditionals8_c: '¿Qué necesitas hacer al final de cada ruta?'
      courseD_farmer_while7_2018_authored_hint:
        courseD_farmer_conditionals8_a: El bloque `camino por delante` te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        courseD_farmer_conditionals8_b: Poner un ciclo `mientras camino adelante` dentro de un ciclo de repetición puede ayudarlo en este acertijo.
        courseD_farmer_conditionals8_c: '¿Qué necesitas hacer al final de cada ruta?'
      courseD_farmer_while8_authored_hint:
        courseD_farmer_conditionals8_a: Usted va a tener que utilizar más de un ciclo`while`.
        courseD_farmer_conditionals8_b: Cada hoyo se encuentra al final de un camino, por lo que debes utilizar `while antes de usar` antes de usar` mientras hay un hoyo `.
        courseD_farmer_conditionals8_c: Tenga en cuenta que necesita repetir el `while camino por delante`,` mientras que hay un hoyo `seis veces.
      courseD_farmer_while8_2018_authored_hint:
        courseD_farmer_conditionals8_a: Usted va a tener que utilizar más de un ciclo`while`.
        courseD_farmer_conditionals8_b: Cada hoyo se encuentra al final de un camino, por lo que debes utilizar `while antes de usar` antes de usar` mientras hay un hoyo `.
        courseD_farmer_conditionals8_c: Tenga en cuenta que necesita repetir el `while camino por delante`,` mientras que hay un hoyo `seis veces.
      courseD_farmer_while9_authored_hint: [ ]
      courseD_farmer_while9_2018_authored_hint: [ ]
      courseD_farmer_while_challenge1_authored_hint:
        courseD_farmer_while_challenge1_a: Cada hoyo o pila se encuentra un espacio ** hacia atrás ** desde el final de la ruta.
        courseD_farmer_while_challenge1_b: Si se utiliza un ciclo`while`, se puede decir que el agricultor para eliminar una pila o llenar un agujero, incluso si uno no está allí. Eso significa que puede programarla para eliminar cualquier suciedad o rellenar cualquier agujero, sin importar dónde se encuentre.
        courseD_farmer_conditionals8_c: Es posible resolver esto sin usar ningún ciclo "repetir". Para hacerlo, necesitarás cuatro ciclos "mientras".
      courseD_farmer_while_challenge1_2018_authored_hint:
        courseD_farmer_while_challenge1_a: Cada hoyo o pila se encuentra un espacio ** hacia atrás ** desde el final de la ruta.
        courseD_farmer_while_challenge1_b: Si se utiliza un ciclo`while`, se puede decir que el agricultor para eliminar una pila o llenar un agujero, incluso si uno no está allí. Eso significa que puede programarla para eliminar cualquier suciedad o rellenar cualquier agujero, sin importar dónde se encuentre.
        courseD_farmer_conditionals8_c: Es posible resolver esto sin usar ningún ciclo "repetir". Para hacerlo, necesitarás cuatro ciclos "mientras".
      courseD_farmer_while_challenge2_authored_hint:
        courseD_farmer_while_challenge1_a: Cada hoyo o pila se encuentra un espacio ** hacia atrás ** desde el final de la ruta.
        courseD_farmer_while_challenge1_b: Si usas un ciclo "repetir", puedes pedirle al granjero que elimine una pila o llene un agujero, aún si no hay uno ahí. Eso significa que puedes programarla para remover cualquier suciedad y llenar cualquier hoyo mientras estas en el mismo lugar.
        courseD_farmer_conditionals8_c: Es posible resolver esto sin usar ningún ciclo "repetir". Para hacerlo, necesitarás cuatro ciclos "mientras".
      courseD_farmer_while_challenge2_2018_authored_hint:
        courseD_farmer_while_challenge1_a: Cada hoyo o pila se encuentra un espacio ** hacia atrás ** desde el final de la ruta.
        courseD_farmer_while_challenge1_b: Si usas un ciclo "repetir", puedes pedirle al granjero que elimine una pila o llene un agujero, aún si no hay uno ahí. Eso significa que puedes programarla para remover cualquier suciedad y llenar cualquier hoyo mientras estas en el mismo lugar.
        courseD_farmer_conditionals8_c: Es posible resolver esto sin usar ningún ciclo "repetir". Para hacerlo, necesitarás cuatro ciclos "mientras".
      courseD_harvester_nested_loops_challenge1-broken_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: Probablemente ya hayas usado un ciclo para crear un patron zig-zag. Si recuerdas ese algoritmo, puedes agregarle algunas cosas para usarlo aquí.
      courseD_harvester_nested_loops_challenge1_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: '¡Intenta seguír este camino para recoger todo el máíz! '
        courseD_harvester_nested_loops_challenge1_b: Para recoger más de un pedazo de maíz, necesitas usar ´recoger maíz´más de una vez.
        courseD_harvester_nested_loops_challenge1_c: '¡Deberás agregar un ciclo de repetición anidado para resolver este acertijo!'
      courseD_harvester_nested_loops_challenge1_2018_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: '¡Intenta seguír este camino para recoger todo el máíz! '
        courseD_harvester_nested_loops_challenge1_b: Para recoger más de un pedazo de maíz, necesitas usar ´recoger maíz´más de una vez.
        courseD_harvester_nested_loops_challenge1_c: '¡Deberás agregar un ciclo de repetición anidado para resolver este acertijo!'
      courseD_iceage_loops1_authored_hint:
        courseD_iceage_loops1_a: Cuidado con de hielo roto! ¡Scrat caerá a la perfección!
        courseD_iceage_loops1_b: |-
          Deberás usar este bloque:
          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Cuidado con de hielo roto! ¡Scrat caerá al agua!
        courseB_iceage_loops10_b: Intente decir los pasos en voz alta o escríbalos en un pedazo de papel. ¿Ves algún patrón?
        courseB_iceage_loops10_c: '¡Este es un acertijo muy largo! Sigue este camino.'
      courseD_iceage_loops2_authored_hint:
        courseD_iceage_loops2_a: Divide este rompecabezas en dos partes, una antes de la esquina y otra después de la esquina.
        courseD_iceage_loops2_b: Si te quedas atascado, trata de decir los pasos en voz alta.
        courseD_iceage_loops2_c: Sigue este camino para que Scrat llegue a la bellota.
      courseD_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          ¡Usa este nuevo bloque!
          <xml><block type="controls_repeat_dropdown">
          <title name="TIMES" config="2-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: Para repetir código, arrastra un ciclo ´repetir´, luego coloca dentro el bloque que quieres repetir.
      courseD_iceage_loops4_authored_hint:
        courseD_iceage_loops4_a: '¡No tengas miedo de ejecutar tu código y ver qué pasa!'
        courseD_iceage_loops4_b: Intenta anotar los pasos que Scrat tomaría para llegar a la bellota. ¿Ves un patrón?
        courseD_iceage_loops4_c: Este es el camino que Scrat deberia tomar.
      courseD_iceage_loops6_authored_hint:
        courseD_iceage_loops6_a: Tu código final tendrá ** tres ** bloques de movimiento.
        courseD_iceage_loops6_b: '¡Solo necesita agregar un ciclo más!'
        courseD_iceage_loops6_c: La ruta final debe verse así.
      courseD_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: Si te quedas atascado, prueba a escribir pasos en una hoja de papel. ¿Ves un patrón?
        courseB_iceage_loops7_b: Este es el camino que Scrat debe tomar para llegar a la bellota.
      courseD_iceage_loops8_authored_hint:
        courseD_iceage_loops8_a: '¿Los bloques de movimiento son correctos? ¿Qué más puedes cambiar?'
        courseD_iceage_loops8_b: El primer ciclo deberia repetirse **3** veces, el segundo **5** veces, el cuarto **4** veces, y el último **4** veces.
        courseD_iceage_loops8_c: Utiliza ciclos para ayudar a Scrat a que siga este camino.
      courseD_iceage_loops9_authored_hint:
        courseD_iceage_loops9_a: '¿Teniendo problemas? Intenta dividir este rompecabezas en pedazos más pequeños. ¡No tengas miedo de ejecutar tu rompecabezas mientras codifica!'
        courseD_iceage_loops9_b: Su código final debe tener 4 bucles.
        courseD_iceage_loops9_c: Scrat deberia seguir esta ruta para llegar a la bellota.
      courseD_maze_loops_challenge1_authored_hint:
        courseD_bee_nested_loops_challenge1_a: No olvide que puede `repetir` un solo comando o un patrón más largo. Incluso se puede `` repetir` un repetir` bloque!
        courseD_bee_nested_loops_challenge1_b: Para obtener las 4 gemas, primero use un ciclo para alejarse del centro. Gire a la izquierda o a la derecha, luego use un ciclo anidado para pasar de la primera pila de tesoros a la segunda. Si repite el ciclo anidado suficientes veces, el recolector se moverá alrededor de la * cueva completa *!
        courseD_bee_nested_loops_challenge1_c: El programa más corto que alcanza todo el tesoro usa solo un bloque `colectar` y dos turnos.
      courseD_maze_nestedLoops3_authored_hint:
        courseD_maze_nestedLoops3_a: Para resolver este acertijo, deberá anidar un ciclo de 'repetición' dentro de otro.
        courseD_maze_nestedLoops3_b: '¿No sabes dónde colocar el ciclo? Trata de escribir el código paso a paso, y buscar un patrón.'
        courseD_maze_nestedLoops3_c: Intenta escribir código para una porción recta del camino y una vuelta. ¿Puedes repetir esto para llegar al girasol?
      courseD_maze_nestedLoops3_2018_authored_hint:
        courseD_maze_nestedLoops3_a: Para resolver este acertijo, deberá anidar un ciclo de 'repetición' dentro de otro.
        courseD_maze_nestedLoops3_b: '¿No sabes dónde colocar el ciclo? Trata de escribir el código paso a paso, y buscar un patrón.'
        courseD_maze_nestedLoops3_c: Intenta escribir código para una porción recta del camino y una vuelta. ¿Puedes repetir esto para llegar al girasol?
      courseD_maze_nestedLoops4_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Intenta utilizar este camino a través del laberinto.
          
          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Si el patrón es difícil de ver, intenta programarlo todo primero y ver qué cosas se repiten una y otra vez antes de colocar los ciclos.
        courseD_maze_nestedLoops4_c: Intenta utilizar un ciclo 'repetir' dentro de otro para reducir la cantidad de código que necesitas.
      courseD_maze_nestedLoops4_2018_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Intenta utilizar este camino a través del laberinto.
          
          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Si el patrón es difícil de ver, intenta programarlo todo primero y ver qué cosas se repiten una y otra vez antes de colocar los ciclos.
        courseD_maze_nestedLoops4_c: Intenta utilizar un ciclo 'repetir' dentro de otro para reducir la cantidad de código que necesitas.
      courseD_maze_nestedLoops5_authored_hint:
        courseD_maze_nestedLoops5_a: Busca un patrón de escalera en este laberinto para encontrar dónde puede usarse un ciclo anidado.
        courseD_maze_nestedLoops5_b: '¿No sabes dónde colocar el ciclo? Trata de escribir el código paso a paso, y buscar un patrón.'
      courseD_maze_nestedLoops5_2018_authored_hint:
        courseD_maze_nestedLoops5_a: Busca un patrón de escalera en este laberinto para encontrar dónde puede usarse un ciclo anidado.
        courseD_maze_nestedLoops5_b: '¿No sabes dónde colocar el ciclo? Trata de escribir el código paso a paso, y buscar un patrón.'
      courseD_maze_nestedLoops6_authored_hint:
        courseD_maze_nestedLoops6_a: Si estas atorado, intenta escribir el código sin ciclos primero y busca patrones.
        courseD_maze_nestedLoops6_b: Poner un ciclo de repetición dentro de otro puede ayudar a disminuir la cantidad de bloques utilizados.
        courseD_maze_nestedLoops6_c: Tomará dos conjuntos de ciclos 'repetir´anidados para resolver este acertijo.
      courseD_maze_nestedLoops6_2018_authored_hint:
        courseD_maze_nestedLoops6_a: Si estas atorado, intenta escribir el código sin ciclos primero y busca patrones.
        courseD_maze_nestedLoops6_b: Poner un ciclo de repetición dentro de otro puede ayudar a disminuir la cantidad de bloques utilizados.
        courseD_maze_nestedLoops6_c: Tomará dos conjuntos de ciclos 'repetir´anidados para resolver este acertijo.
      courseD_maze_ramp1_authored_hint:
        courseC_maze_programming1_a: Si el pájaro no está llegando al cerdo, asegurate de que los bloques están totalmente juntos, a continuación, y haz clic en "Ejecutar" de nuevo.
        courseC_maze_programming1_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_maze_ramp2_authored_hint:
        courseC_maze_programming2_a: Para usar un bloque 'avanzar', arrástralo desde el área de la barra de herramientas al espacio de trabajo y conéctalo al bloque`al ejecutar`.
        courseC_maze_programming2_b: Asegúrate de que los 3 bloques estan embonados y unidos al bloque 'al ejecutar'.
      courseD_maze_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Asegúrate de que los 3 bloques estan embonados y unidos al bloque 'al ejecutar'.
      courseD_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) \n\nPara eliminar un bloque del medio de su código, arrastra todos los bloques debajo de él hacia la derecha y permite que se queden en el espacio de trabajo por un tiempo. \n\nHaz clic en el bloque que desea eliminar y arrástralo nuevamente a la caja de herramientas. \n\nFinalmente, coloca los otros bloques en su lugar.\n"
      courseD_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) \n\nPara eliminar un bloque del medio de su código, arrastra todos los bloques debajo de él hacia la derecha y permite que se queden en el espacio de trabajo por un tiempo. \n\nHaz clic en el bloque que desea eliminar y arrástralo nuevamente a la caja de herramientas. \n\nFinalmente, coloca los otros bloques en su lugar.\n"
      courseD_maze_ramp4_authored_hint:
        courseC_maze_programming4_a: Puedes girar a la derecha o a la izquierda desde el punto de vista del pájaro. Si estás mirando hacia la derecha, girar a la derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido, luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más para alcanzar al cerdo.
      courseD_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
      courseD_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerde que girar a la derecha e izquierda es desde la perspectiva del pájaro.
        courseC_maze_programming5_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerde que girar a la derecha e izquierda es desde la perspectiva del pájaro.
        courseC_maze_programming5_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_maze_ramp5a_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que girar a la derecha e izquierda es desde la perspectiva del pájaro.
        courseC_maze_programming5_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_maze_ramp5a_2018_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerde que girar a la derecha e izquierda es desde la perspectiva del pájaro.
        courseC_maze_programming5_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_maze_ramp5b_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerde que girar a la derecha e izquierda es desde la perspectiva del pájaro.
        courseC_maze_programming5_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_maze_ramp5b_2018_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerde que girar a la derecha e izquierda es desde la perspectiva del pájaro.
        courseC_maze_programming5_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_maze_ramp5c_authored_hint: [ ]
      courseD_maze_ramp5c_2018_authored_hint: [ ]
      courseD_maze_ramp5d_authored_hint: [ ]
      courseD_maze_ramp5d_2018_authored_hint: [ ]
      courseD_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: '¡Hay dos formas de resolver este rompecabezas!'
        courseC_maze_programming6_b: El pájaro comienza mirando a la pared, ¡así que recuerda girar antes de moverte.
        courseC_maze_programming6_c: Recuerda que puedes escribir una parte del código a la vez, luego presionar "Ejecutar" para descubrir hacia dónde debe dirigirse desde allí.
      courseD_maze_ramp6a_authored_hint:
        courseC_maze_programming6a_a: Utilizar un ciclo de repetición para poner al pájaro en movimiento!
      courseD_maze_ramp7_authored_hint:
        courseD_maze_ramp7_b: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseD_maze_ramp7_a: Usa bloques de repetición para ejecutar un solo bloque o un fragmento de código una y otra vez.
        courseD_maze_ramp7_c: Si quiere simplificar su código, ¡puede poner un ciclo de repetición dentro de otro! Esto se llama un ** ciclo anidado **.
      courseD_maze_until1_authored_hint:
        courseD_maze_until1_a: '¿Existen secuencias que puedas ciclar para hacer tu código más corto?'
        courseD_maze_until1_b: Intenta usar un ciclo anidado para resolver este acertijo.
      courseD_maze_until10_authored_hint: [ ]
      courseD_maze_until10_2018_authored_hint: [ ]
      courseD_maze_until10_predict2_authored_hint: [ ]
      courseD_maze_until10_predict2_2018_authored_hint: [ ]
      courseD_maze_until1_2018_authored_hint:
        courseD_maze_until1_a: '¿Existen secuencias que puedas ciclar para hacer tu código más corto?'
        courseD_maze_until1_b: Intenta usar un ciclo anidado para resolver este acertijo.
      courseD_maze_until2_authored_hint:
        courseD_maze_until2_a: '¡Un ciclo ''hasta puerco'' te ayudara a seguir hasta lograrlo!'
      courseD_maze_until2_predict1_authored_hint: [ ]
      courseD_maze_until2_predict1_2018_authored_hint: [ ]
      courseD_maze_until3_authored_hint:
        courseD_maze_until3_a: |-
          - ¿Qué hace el código? 
          - ¿Qué se supone que haga? 
          - ¿Qué te dice eso?
        courseD_maze_until3_b: Si te estas atorando, intenta escribir todos los pasos en una hoja de papel y buscar donde se repiten.
        courseD_maze_until3_c: '¿Hay un patrón de escaleras que puedas seguir para este acertijo?'
        courseD_maze_until3_d: No olvides usar el ciclo ´repetir hasta´para hacer tu código más corto.
      courseD_maze_until3_2018_authored_hint:
        courseD_maze_until3_a: |-
          - ¿Qué hace el código? 
          - ¿Qué se supone que haga? 
          - ¿Qué te dice eso?
        courseD_maze_until3_b: Si te estas atorando, intenta escribir todos los pasos en una hoja de papel y buscar donde se repiten.
        courseD_maze_until3_c: '¿Hay un patrón de escaleras que puedas seguir para este acertijo?'
        courseD_maze_until3_d: No olvides usar el ciclo ´repetir hasta´para hacer tu código más corto.
      courseD_maze_until4_authored_hint:
        courseD_maze_until4_a: |-
          Usa el boton ´Paso´para ir a traves de tu código linea por linea.
          
          - ¿Todo funciona en el primer paso?
          - ¿Todo funciona en el segundo paso?
          - ¿Dónde ocurre el error?
        courseD_maze_until4_b: '¿Hay un patrón de escaleras que puedas seguir para este acertijo?'
        courseD_maze_until4_c: No olvides usar el ciclo ´repetir hasta´para hacer tu código más corto.
      courseD_maze_until4_2018_authored_hint:
        courseD_maze_until4_a: |-
          Usa el boton ´Paso´para ir a traves de tu código linea por linea.
          
          - ¿Todo funciona en el primer paso?
          - ¿Todo funciona en el segundo paso?
          - ¿Dónde ocurre el error?
        courseD_maze_until4_b: '¿Hay un patrón de escaleras que puedas seguir para este acertijo?'
        courseD_maze_until4_c: No olvides usar el ciclo ´repetir hasta´para hacer tu código más corto.
      courseD_maze_until5_authored_hint:
        courseD_maze_until5_a: No te olvides de usar 'si camino a la izquierda´para evitar que el zombie revise a donde voltear.
        courseD_maze_until5_b: Para usar solo un 'ir hacia adelante', ponlo dentro del ciclo 'repetir hasta girasol'.
        courseD_maze_until5_c: Después de cada paso, el zombie deberia revisar si hay un camino a la izquierda. ¿Qué deberia hacer si encuentra uno?
      courseD_maze_until5_2018_authored_hint:
        courseD_maze_until5_b: Para usar solo un 'ir hacia adelante', ponlo dentro del ciclo 'repetir hasta girasol'.
      courseD_maze_until6_authored_hint:
        courseD_maze_until6_a: Esta vez, intenta usar 'si camino entonces a la derecha' para mantener al zombie en el camino.
        courseD_maze_until6_b: Para usar solo un 'ir hacia adelante', ponlo dentro del ciclo 'repetir hasta girasol'.
        courseD_maze_until6_c: '¡Aunque hay mas vueltas aquí que en el ultimo acertijo, tu código puede ser casí identico por el bloque ´repetir hasta´!'
      courseD_maze_until6_2018_authored_hint:
        courseD_maze_until6_b: Para usar solo un 'ir hacia adelante', ponlo dentro del ciclo 'repetir hasta girasol'.
      courseD_maze_until7_authored_hint:
        courseD_maze_until7_a: '¡No necesitas que tu código sea más largo que la vez pasada solo porque el laberinto lo es!'
        courseD_maze_until7_b: '¡Aunque hay mas vueltas aquí que en el ultimo acertijo, tu código puede ser casí identico por el bloque ´repetir hasta´!'
        courseD_maze_until7_c: '¡Recuerde revisar las rutas a la izquierda, ya que girar a la derecha le llevará por el camino equivocado!'
      courseD_maze_until7_2018_authored_hint:
        courseD_maze_until7_a: '¡No necesitas que tu código sea más largo que la vez pasada solo porque el laberinto lo es!'
        courseD_maze_until7_b: '¡Aunque hay mas vueltas aquí que en el ultimo acertijo, tu código puede ser casí identico por el bloque ´repetir hasta´!'
      courseD_maze_until8_authored_hint:
        courseD_maze_until8_a: Asegúrate de estar usando un bloque `if / else` para mantener al zombi en la dirección correcta.
        courseD_maze_until8_b: 'Con tu bloque ` if / else`: si hay un camino por delante, ¿qué deberías hacer?'
        courseD_maze_until8_c: 'Con su bloque ` if / else`: si no hay un camino por delante, ¿en qué dirección debe girar?'
      courseD_maze_until8_2018_authored_hint:
        courseD_maze_until8_a: Asegúrate de estar usando un bloque `if / else` para mantener al zombi en la dirección correcta.
        courseD_maze_until8_b: 'Con tu bloque ` if / else`: si hay un camino por delante, ¿qué deberías hacer?'
        courseD_maze_until8_c: 'Con su bloque ` if / else`: si no hay un camino por delante, ¿en qué dirección debe girar?'
      courseD_maze_until9_authored_hint:
        courseD_maze_until8_a: Si usas ` if camino adelante` te mantendrá adelante siempre que sea posible, ayudándote a perder los caminos con chompers.
        courseD_maze_until8_b: '¿En qué dirección debes girar si no hay un camino hacia adelante?'
        courseD_maze_until8_c: Recuerda usar el bloque `repetir hasta` para llevarte al girasol!
      courseD_maze_until9_2018_authored_hint:
        courseD_maze_until8_c: Recuerda usar el bloque `repetir hasta` para llevarte al girasol!
      courseD_maze_until_challenge_authored_hint: [ ]
      courseD_maze_until_challenge1-delete-this-copy_authored_hint: [ ]
      courseD_maze_until_challenge1_authored_hint: [ ]
      courseD_maze_until_challenge1_2018_authored_hint: [ ]
      courseD_maze_until_challenge2_authored_hint: [ ]
      courseD_playLab_cond1_authored_hint:
        courseD_playLab_cond1_a: Para resolver este problema, coloque el bloque de 'subir el actor 1' el evento 'cuando flecha arriba' y, a continuación, haga lo mismo con todas las otras direcciones.
        courseD_playLab_cond1_b: Utilizar los menús desplegables en el 'cuando flecha' y 'mover el agente' para cambiar la dirección en que van.
        courseD_playLab_cond1_c: Recuerde mover a Pegleg a ambas banderas una vez que haga clic en "Ejecutar"!
      courseD_playLab_cond1_2018_authored_hint:
        courseD_playLab_cond1_a: Para resolver este problema, coloque el bloque de 'subir el actor 1' el evento 'cuando flecha arriba' y, a continuación, haga lo mismo con todas las otras direcciones.
        courseD_playLab_cond1_b: Utilizar los menús desplegables en el 'cuando flecha' y 'mover el agente' para cambiar la dirección en que van.
        courseD_playLab_cond1_c: Recuerde mover a Pegleg a ambas banderas una vez que haga clic en "Ejecutar"!
      courseD_playLab_cond2_authored_hint:
        courseD_playLab_cond2_a: Para tener éxito con este rompecabezas, usar el bloque puntuación de punto de la 'cuando el actor 1 toque 2' evento de actor.
      courseD_playLab_cond2_2018_authored_hint:
        courseD_playLab_cond2_a: Para tener éxito con este rompecabezas, usar el bloque puntuación de punto de la 'cuando el actor 1 toque 2' evento de actor.
      courseD_playLab_cond3_authored_hint:
        courseD_playLab_cond3_a: Usted tendrá que agregar dos bloques a su ciclo 'repite por siempre'. Uno elegirá una emoción al azar para el dragón (actor 2) y la otra espera un segundo antes de volver a pasar por el núcleo.
      courseD_playLab_cond3_2018_authored_hint:
        courseD_playLab_cond3_a: Usted tendrá que agregar dos bloques a su ciclo 'repite por siempre'. Uno elegirá una emoción al azar para el dragón (actor 2) y la otra espera un segundo antes de volver a pasar por el núcleo.
      courseD_playLab_cond3a_authored_hint:
        courseD_playLab_cond3_c: "- ` Si 'el dragón está contento -` puntaje'\n - `puntaje` \n- `El otro` puntaje `"
      courseD_playLab_cond3a_2018_authored_hint:
        courseD_playLab_cond3_c: "- ` Si 'el dragón está contento -` puntaje'\n - `puntaje` \n- `El otro` puntaje `"
      courseD_playLab_cond3b_authored_hint:
        courseD_playLab_cond3b_a: Usted tendrá que añadir bloques a su ciclo` repita siempre ` para hacer que el dragón continué moviéndose hacia arriba y hacia abajo
      courseD_playLab_cond4_authored_hint:
        courseD_playLab_cond4_a: Utiliza el evento `cuando se ejecuta` para que el ninja persiga al pirata.
        courseD_playLab_cond4_b: Hay un bloque especial llamado ` establecer a cada ninja enmascarado para perseguir al actor` que mantendrá al ninja caliente en el camino del pirata!
        courseD_playLab_cond4_c: Poner el bloque `final del juego como una pérdida` debajo del actor de 1 toque` cuando el actor 3` evento.
      courseD_playLab_cond4_2018_authored_hint:
        courseD_playLab_cond4_a: Utiliza el evento `cuando se ejecuta` para que el ninja persiga al pirata.
        courseD_playLab_cond4_b: Hay un bloque especial llamado ` establecer a cada ninja enmascarado para perseguir al actor` que mantendrá al ninja caliente en el camino del pirata!
        courseD_playLab_cond4_c: Poner el bloque `final del juego como una pérdida` debajo del actor de 1 toque` cuando el actor 3` evento.
      courseD_playLab_cond5_authored_hint:
        courseD_playLab_cond5_a: Utilizar un ` si ` comunicado que compara si `` score` es> `5 de resolver este desafío.
        courseD_playLab_cond5_b: Puede tener más de un ciclo ` repita siempre ` en el espacio de trabajo.
      courseD_playLab_cond5_2018_authored_hint:
        courseD_playLab_cond5_a: Utilizar un ` si ` comunicado que compara si `` score` es> `5 de resolver este desafío.
        courseD_playLab_cond5_b: Puede tener más de un ciclo ` repita siempre ` en el espacio de trabajo.
      courseD_playLab_cond6_authored_hint:
        courseD_playLab_cond6_a: Agrega el bloque ` establecer velocidad de ninja enmascarada` al comienzo del programa para ayudar a frenar al ninja.
        courseD_playLab_cond6_b: Usted tendrá que utilizar un ` si el actor 1 y la posición> 255` bloque dentro de un` repita siempre ` para comprobar siempre si el pirata es por debajo de los pulpos.
      courseD_playLab_cond6_2018_authored_hint:
        courseD_playLab_cond6_a: Agrega el bloque ` establecer velocidad de ninja enmascarada` al comienzo del programa para ayudar a frenar al ninja.
        courseD_playLab_cond6_b: Usted tendrá que utilizar un ` si el actor 1 y la posición> 255` bloque dentro de un` repita siempre ` para comprobar siempre si el pirata es por debajo de los pulpos.
      courseD_playLab_cond6a_authored_hint:
        courseD_playLab_cond6_c: Agregar un bloque 'espere 1 segundo' en la parte superior del ciclo 'repetir por siempre' que comprueba la posición del pirata (pero no dentro de la instrucción 'si') para evitar que los puntos se eliminen muy rápidamente.
      courseD_playLab_cond6a_2018_authored_hint:
        courseD_playLab_cond6_c: Agregar un bloque 'espere 1 segundo' en la parte superior del ciclo 'repetir por siempre' que comprueba la posición del pirata (pero no dentro de la instrucción 'si') para evitar que los puntos se eliminen muy rápidamente.
      courseD_playLab_cond6cloneForTest_authored_hint:
        courseD_playLab_cond6_a: Agrega el bloque ` establecer velocidad de ninja enmascarada` al comienzo del programa para ayudar a frenar al ninja.
        courseD_playLab_cond6_b: Usted tendrá que utilizar un ` si el actor 1 y la posición> 255` bloque dentro de un` repita siempre ` para comprobar siempre si el pirata es por debajo de los pulpos.
        courseD_playLab_cond6_c: Agregar un bloque 'espere 1 segundo' en la parte superior del ciclo 'repetir por siempre' que comprueba la posición del pirata (pero no dentro de la instrucción 'si') para evitar que los puntos se eliminen muy rápidamente.
      courseD_playLab_embed_cond6a_authored_hint: [ ]
      courseD_playLab_embedded_authored_hint: [ ]
      courseD_scrat_predict1_authored_hint: [ ]
      courseD_scrat_predict1_2018_authored_hint: [ ]
      courseD_scrat_ramp1_authored_hint:
        courseC_maze_programming1_a: Si Scrat no es llegar a la bellota, asegura que los tres bloques han sido totalmente encajados, a continuación, haga clic en "Ejecutar" de nuevo.
        courseC_maze_programming1_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_scrat_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: Si Scrat no es llegar a la bellota, asegura que los tres bloques han sido totalmente encajados, a continuación, haga clic en "Ejecutar" de nuevo.
        courseC_maze_programming1_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_scrat_ramp2_authored_hint:
        courseC_maze_programming2_a: Para usar un bloque `avanzar`, arrástralo desde el área de la barra de herramientas al espacio de trabajo y conéctelo al bloque`al ejecutar`.
        courseC_maze_programming2_b: Hacer que los tres bloques`movimiento adelante` estén unidos al bloque` cuando corra`.
      courseD_scrat_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Hacer que los tres bloques`movimiento adelante` se encuentren unidos al bloque`` cuando corra`.
      courseD_scrat_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) \n\nPara eliminar un bloque del medio de su código, arrastre todos los bloques debajo de él hacia la derecha y permita que se sienten en el espacio de trabajo por un tiempo. \n\nHaga clic en el bloque que desea eliminar y arrástrelo nuevamente a la caja de herramientas. \n\nFinalmente, coloque sus otros bloques en su lugar a donde pertenecen.\n"
        courseC_maze_programming3_b: Recuerda que los giros a la derecha e izquierda son desde la perspectiva de Scrat.
      courseD_scrat_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) \n\nPara eliminar un bloque del medio de su código, arrastra todos los bloques debajo de él hacia la derecha y permite que se queden en el espacio de trabajo por un tiempo. \n\nHaz clic en el bloque que desea eliminar y arrástralo nuevamente a la caja de herramientas. \n\nFinalmente, coloca los otros bloques en su lugar.\n"
        courseC_maze_programming3_b: Recuerda que los giros a la derecha e izquierda son desde la perspectiva de Scrat.
      courseD_scrat_ramp4_authored_hint:
        courseC_maze_programming4_a: Puede girar a la derecha o a la izquierda desde el punto de vista de Scrat. Si estás mirando hacia la derecha, girar a la derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido, luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más para alcanzar la bellota.
        courseC_maze_programming4_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_scrat_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: Puede girar a la derecha o a la izquierda desde el punto de vista de Scrat. Si estás mirando hacia la derecha, girar a la derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido, luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más para alcanzar la bellota.
        courseC_maze_programming4_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_scrat_ramp5_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: '¿Qué tan lejos necesita moverse para llegar a la esquina?'
        courseC_maze_programming5_c: Tendrá que girar a la izquierda en la esquina para llegar a la bellota.
      courseD_scrat_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: '¿Qué tan lejos necesita moverse para llegar a la esquina?'
        courseC_maze_programming5_c: Tendrá que girar a la izquierda en la esquina para llegar a la bellota.
      courseD_scrat_ramp6_authored_hint:
        courseC_maze_programming6a_a: Utilizar un ciclo de repetición para obtener Scrat en movimiento!
      courseD_scrat_ramp6_2018_authored_hint:
        courseC_maze_programming6a_a: Utilizar un ciclo de repetición para obtener Scrat en movimiento!
      courseD_scrat_ramp7_authored_hint:
        courseD_scrat_programming6_a: '¡Hay dos formas de resolver este rompecabezas!'
        courseD_scrat_programming6_b: Recuerde girar primero antes de moverse, ya que Scrat está mirando en la dirección incorrecta.
        courseD_scrat_programming6_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_scrat_ramp7_2018_authored_hint:
        courseD_scrat_programming6_a: '¡Hay dos formas de resolver este rompecabezas!'
        courseD_scrat_programming6_b: Recuerde girar primero antes de moverse, ya que Scrat está mirando en la dirección incorrecta.
        courseD_scrat_programming6_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_scrat_ramp8_authored_hint:
        courseD_maze_ramp7_b: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseD_maze_ramp7_a: Usa bloques repetidos para ejecutar un solo bloque o un fragmento de código una y otra vez.
        courseD_maze_ramp7_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseD_scrat_ramp8_2018_authored_hint:
        courseD_maze_ramp7_b: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseD_maze_ramp7_a: Usa bloques de repetición para ejecutar un solo bloque o un fragmento de código una y otra vez.
        courseD_maze_ramp7_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseE_artist_concept1_authored_hint:
        courseE_artist_concept1_a: Los hexágonos tienen 50 lados de píxeles y 60 grados de vueltas a la derecha.
        courseE_artist_concept1_b: Intente utilizar una función aquí para que no tenga que escribir el código de un hexágono una y otra vez.
        courseE_artist_concept1_c: Utilice el bloque ` establecer ancho` antes de cada llamada de función para cambiar el ancho del lápiz.
      courseE_artist_concept1_2018_authored_hint:
        courseE_artist_concept1_a: Los hexágonos tienen 50 lados de píxeles y 60 grados de vueltas a la derecha.
        courseE_artist_concept1_b: Intente utilizar una función aquí para que no tenga que escribir el código de un hexágono una y otra vez.
        courseE_artist_concept1_c: Utilice el bloque ` establecer ancho` antes de cada llamada de función para cambiar el ancho del lápiz.
      courseE_artist_concept4_authored_hint:
        courseE_artist_concept4_a: Hay varias formas de resolver este rompecabezas. ¿Puedes hacer un plan?
        courseE_artist_concept4_b: Intenta crear un cuadrado, haz una línea de cuadrados. ¿Que viene después?
        courseE_artist_concept4_c: Después de dibujar una línea de cuadrados, puedes dar la vuelta y dibujar otra línea de cuadrados hacia la izquierda, o puedes saltar hacia el lado izquierdo de la figura para dibujar otra línea de cuadrados hacia la derecha. ¿Cual prefieres?
      courseE_artist_concept4_2018_authored_hint:
        courseE_artist_concept4_a: Hay varias formas de resolver este rompecabezas. ¿Puedes hacer un plan?
        courseE_artist_concept4_b: Intenta crear un cuadrado, haz una línea de cuadrados. ¿Que viene después?
        courseE_artist_concept4_c: Después de dibujar una línea de cuadrados, puedes dar la vuelta y dibujar otra línea de cuadrados hacia la izquierda, o puedes saltar hacia el lado izquierdo de la figura para dibujar otra línea de cuadrados hacia la derecha. ¿Cual prefieres?
      courseE_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'El semi-hexágono tiene una ** longitud de 30 ** y gira a la derecha por ** 60 grados **.  '
        courseE_artist_concept_challenge1_b: 'El triángulo 2/3 tiene una ** longitud de 80 ** y gira a la derecha por ** 120 grados **. '
        courseE_artist_concept_challenge1_c: |-
          Este es el diseño que desea repetir para obtener la forma completa:! [] (Https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png)
      courseE_artist_concept_challenge1_2018_authored_hint:
        courseE_artist_concept_challenge1_a: 'El semi-hexágono tiene una ** longitud de 30 ** y gira a la derecha por ** 60 grados **.  '
        courseE_artist_concept_challenge1_b: 'El triángulo 2/3 tiene una ** longitud de 80 ** y gira a la derecha por ** 120 grados **. '
        courseE_artist_concept_challenge1_c: |-
          Este es el diseño que desea repetir para obtener la forma completa:! [] (Https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png)
      courseE_artist_concept_challenge2_authored_hint:
        courseE_artist_concept_challenge2_a: Una vez que define una función, puede llamarla una y otra vez, cuando y donde quiera!
        courseE_artist_concept_challenge2_b: |-
          Puede saltar a diferentes posiciones en el lienzo usando este comando:
          
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_concept_challenge2_2018_authored_hint:
        courseE_artist_concept_challenge2_a: Una vez que define una función, puede llamarla una y otra vez, cuando y donde quiera!
        courseE_artist_concept_challenge2_b: |-
          Puede saltar a diferentes posiciones en el lienzo usando este comando:
          
          <xml>  <block type="jump_to">
          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_embed_functions8_authored_hint: [ ]
      courseE_artist_functions1_authored_hint:
        courseE_artist_functions1_a: Cada cuadrado tiene 100 pixeles de lado, eso significa que deberás avanzar hacia adelante 175 pixeles antes de dibujar el segundo cuadrado.
        courseE_artist_functions1_b: Es correcto dibujar líneas solapadas para hacer tus lentes.
        courseE_artist_functions1_c: Para código más corto, intente usar un ciclo de repetición para dibujar los cuadrados de los lentes.
      courseE_artist_functions10_authored_hint:
        courseD_artist_functions10_b: Este dibujo es muy similar a la anterior, pero la función ` dibujar line` está dibujando una forma diferente.
        courseD_artist_functions10_a: Para evitar el uso de múltiples bloques`mover adelante`, crear una función` dibujar hexágono`y llamarla múltiples veces.
        courseD_artist_functions10_c: |-
          ¿Ves dónde este dibujo podría usar una función llamada `línea de hexágonos`? ! [] (https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2018_authored_hint:
        courseD_artist_functions10_b: Este dibujo es muy similar a la anterior, pero la función ` dibujar line` está dibujando una forma diferente.
        courseD_artist_functions10_a: Para evitar el uso de múltiples bloques`mover adelante`, crear una función` dibujar hexágono`y llamarla múltiples veces.
        courseD_artist_functions10_c: |-
          ¿Ves dónde este dibujo podría usar una función llamada `línea de hexágonos`? ! [] (https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions1_2018_authored_hint:
        courseE_artist_functions1_a: Cada cuadrado tiene 100 pixeles de lado, eso significa que deberás avanzar hacia adelante 175 pixeles antes de dibujar el segundo cuadrado.
        courseE_artist_functions1_b: Es correcto dibujar líneas solapadas para hacer tus lentes.
        courseE_artist_functions1_c: Para código más corto, intente usar un ciclo de repetición para dibujar los cuadrados de los lentes.
      courseE_artist_functions2_authored_hint:
        courseD_artist_functions2_b: La función que escribas no deberia contener tu programa completo, solo la parte que dibuja un cuadrado con 100 pixeles.
        courseD_artist_functions2_c: |-
          Utilice el bloque verde ` dibujar un square` "llamar" a su función bajo el bloque` cuando ejecuta`. De lo contrario, el código en su función no se ejecutará.
          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          El programa debe:
          - Usar la función
          - Avanzar 100 + 75 pixeles
          - Usar la función
      courseE_artist_functions2_2018_authored_hint:
        courseD_artist_functions2_b: La función que escribas no deberia contener tu programa completo, solo la parte que dibuja un cuadrado con 100 pixeles.
        courseD_artist_functions2_c: |-
          Utilice el bloque verde ` dibujar un square` "llamar" a su función bajo el bloque` cuando ejecuta`. De lo contrario, el código en su función no se ejecutará.
          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          El programa debe:
          - Usar la función
          - Avanzar 100 + 75 pixeles
          - Usar la función
      courseE_artist_functions3_authored_hint:
        courseD_artist_functions3_a: |-
          Para resolver este rompecabezas, solo necesita agregar un ciclo que repita el código de inicio 8 veces.
          
          Si no puede recordar cuál era el código de inicio, haga clic en "comenzar de nuevo" en la esquina superior derecha del espacio de trabajo.
        courseD_artist_functions3_b: Su ciclo debe tener los 3 bloques de código de inicio dentro de él.
      courseE_artist_functions3_2018_authored_hint:
        courseD_artist_functions3_a: |-
          Para resolver este rompecabezas, solo necesita agregar un ciclo que repita el código de inicio 8 veces.
          
          Si no puede recordar cuál era el código de inicio, haga clic en "comenzar de nuevo" en la esquina superior derecha del espacio de trabajo.
        courseD_artist_functions3_b: Su ciclo debe tener los 3 bloques de código de inicio dentro de él.
      courseE_artist_functions4_authored_hint:
        courseD_artist_functions4_a: Intenta usar una función!
        courseD_artist_functions4_b: Arrastre el bloque de función ` dibujar una estrella` fuera de la caja de herramientas para comenzar a construir su función. Debería tener el mismo código que el rompecabezas anterior, ya que está dibujando el mismo patrón de estrella.
        courseD_artist_functions4_c: Use el bloque verde ` dibujar una estrella` para llamar a esta función en su programa principal. ¡No te olvides de saltar hacia adelante entre cada estrella!
      courseE_artist_functions4_2018_authored_hint:
        courseD_artist_functions4_a: Intenta usar una función!
        courseD_artist_functions4_b: Arrastre el bloque de función ` dibujar una estrella` fuera de la caja de herramientas para comenzar a construir su función. Debería tener el mismo código que el rompecabezas anterior, ya que está dibujando el mismo patrón de estrella.
        courseD_artist_functions4_c: Use el bloque verde ` dibujar una estrella` para llamar a esta función en su programa principal. ¡No te olvides de saltar hacia adelante entre cada estrella!
      courseE_artist_functions5_authored_hint:
        courseD_artist_functions5_a: No te rindas! Recuerda lo que has estado aprendiendo.
        courseD_artist_functions5_b: Las funciones hacen que sea fácil de llamar a código guardado en cualquier momento, no sólo desde el interior de un ciclo!
        courseD_artist_functions5_c: Comience arrastrando el código de una forma de estrella en la función ` dibujar una estrella de Estados Unidos, a continuación, utilizar esta función para dibujar las tres estrellas!
      courseE_artist_functions5_2018_authored_hint:
        courseD_artist_functions5_a: No te rindas! Recuerda lo que has estado aprendiendo.
        courseD_artist_functions5_b: Las funciones hacen que sea fácil de llamar a código guardado en cualquier momento, no sólo desde el interior de un ciclo!
        courseD_artist_functions5_c: Comience arrastrando el código de una forma de estrella en la función ` dibujar una estrella de Estados Unidos, a continuación, utilizar esta función para dibujar las tres estrellas!
      courseE_artist_functions6_authored_hint:
        grade4_artist_functions_windows0_a: Concéntrese solo en hacer una ventana por ahora. Vamos a crear una función en el siguiente rompecabezas.
        grade4_artist_functions_windows0_b: Intenta usar ciclos anidados. El ciclo interno hará que el cuadrado y el ciclo externo roten el cuadrado cuatro veces.
        grade4_artist_functions_windows0_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseE_artist_functions6_2018_authored_hint:
        grade4_artist_functions_windows0_a: Concéntrese solo en hacer una ventana por ahora. Vamos a crear una función en el siguiente rompecabezas.
        grade4_artist_functions_windows0_b: Intenta usar ciclos anidados. El ciclo interno hará que el cuadrado y el ciclo externo roten el cuadrado cuatro veces.
        grade4_artist_functions_windows0_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseE_artist_functions7_authored_hint:
        courseD_artist_functions7_a: Trate de crear su función primero y luego agregar ventanas de uno a la vez.
        courseD_artist_functions7_b: No debería necesitar agregar ningún ciclo de repetición adicional. Simplemente salta al artista 100 píxeles entre cada ventana superior, luego baja 150 píxeles para llegar a las ventanas inferiores.
      courseE_artist_functions7_2018_authored_hint:
        courseD_artist_functions7_a: Trate de crear su función primero y luego agregar ventanas de uno a la vez.
        courseD_artist_functions7_b: No debería necesitar agregar ningún ciclo de repetición adicional. Simplemente salta al artista 100 píxeles entre cada ventana superior, luego baja 150 píxeles para llegar a las ventanas inferiores.
      courseE_artist_functions8_authored_hint:
        courseD_artist_functions8_f: Usted necesita solamente una cuadra de 'avanzar', pero habrá bastantes 'salto adelante' o 'salto atrás' ¡bloques!
        courseD_artist_functions8_a: |-
          Comience haciendo una función para un cuadrado, luego intente hacer una función para una línea de cuadrados. ¿Cómo usarías la función ` dibujar una línea de cuadrados` para hacer esta imagen?
        courseD_artist_functions8_d: |-
          Para hacer una línea de cuadrados, repita 3 veces dibuje un cuadrado con una longitud lateral de ** 50 píxeles ** salte hacia adelante ** 100 píxeles **
        courseD_artist_functions8_b: |-
          Piense en cada fila de esta imagen como una línea de 3 cuadrados. ¿Cuántas líneas de cuadrados hay y dónde comienza a dibujar cada uno de ellos? ! [] (https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Sugerencia de dibujo .png)
        courseD_artist_functions8_c: Al final de cada línea de cuadrados, el artista tendrá que saltar hacia abajo y hacia atrás antes de dibujar la siguiente línea de cuadrados.
        courseD_artist_functions8_g: "! [] (https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2018_authored_hint:
        courseD_artist_functions8_f: Usted necesita solamente una cuadra de 'avanzar', pero habrá bastantes 'salto adelante' o 'salto atrás' ¡bloques!
        courseD_artist_functions8_a: |-
          Comience haciendo una función para un cuadrado, luego intente hacer una función para una línea de cuadrados. ¿Cómo usarías la función ` dibujar una línea de cuadrados` para hacer esta imagen?
        courseD_artist_functions8_d: |-
          Para hacer una línea de cuadrados, repita 3 veces dibuje un cuadrado con una longitud lateral de ** 50 píxeles ** salte hacia adelante ** 100 píxeles **
        courseD_artist_functions8_b: |-
          Piense en cada fila de esta imagen como una línea de 3 cuadrados. ¿Cuántas líneas de cuadrados hay y dónde comienza a dibujar cada uno de ellos? ! [] (https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Sugerencia de dibujo .png)
        courseD_artist_functions8_c: Al final de cada línea de cuadrados, el artista tendrá que saltar hacia abajo y hacia atrás antes de dibujar la siguiente línea de cuadrados.
        courseD_artist_functions8_g: "! [] (https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions9_authored_hint:
        courseD_artist_functions9_e: |-
          ¿Puedes ver los cuatro lugares donde se puede usar la "línea de triángulos" en este dibujo ? ! [] (https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          Este rompecabezas puede romper en tres partes: - hacer el ` dibujar un triángulo ` función 
          - hacer que el ` dibujar una línea de triangles` función 
          - usar su función` dibujar una línea de triángulos` cuatro veces para completar el dibujo
        courseD_artist_functions9_b: Este dibujo se hizo mediante la elaboración de una línea de triángulos 4 veces y girando ya sea 60 o 120 grados antes de dibujar la línea siguiente triángulo.
        courseD_artist_functions9_c: |-
          Para dibujar una línea de triángulos: - repetir 4 veces - dibujar un triángulo 
          - saltar 50 píxeles hacia adelante
        courseD_artist_functions9_d: |-
          Para dibujar el diamante: - repite 2 veces - dibuja una línea de triángulos - gira 60 grados - dibuja una línea de triángulos - gira 120 grados
      courseE_artist_functions9_2018_authored_hint:
        courseD_artist_functions9_e: |-
          ¿Puedes ver los cuatro lugares donde se puede usar la "línea de triángulos" en este dibujo ? ! [] (https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          Este rompecabezas puede romper en tres partes: - hacer el ` dibujar un triángulo ` función 
          - hacer que el ` dibujar una línea de triangles` función 
          - usar su función` dibujar una línea de triángulos` cuatro veces para completar el dibujo
        courseD_artist_functions9_b: Este dibujo se hizo mediante la elaboración de una línea de triángulos 4 veces y girando ya sea 60 o 120 grados antes de dibujar la línea siguiente triángulo.
        courseD_artist_functions9_c: |-
          Para dibujar una línea de triángulos: - repetir 4 veces - dibujar un triángulo 
          - saltar 50 píxeles hacia adelante
        courseD_artist_functions9_d: |-
          Para dibujar el diamante: - repite 2 veces - dibuja una línea de triángulos - gira 60 grados - dibuja una línea de triángulos - gira 120 grados
      courseE_artist_functions_challenge_authored_hint:
        courseE_artist_functions_challenge_a: Si llama a la función una vez más, puede crear el mismo diseño en la esquina final. ¡También puedes "saltar a" otras posiciones o cambiar todo como quieras!
      courseE_artist_functions_challenge1_authored_hint:
        courseE_artist_functions_challenge1_a: Si llama a la función una vez más, puede crear el mismo diseño en la esquina final.
        courseE_artist_functions_challenge1_b: '¡También puede ''saltar a'' otras posiciones o cambiar el diseño completo como lo desee!'
      courseE_artist_functions_challenge1_2018_authored_hint:
        courseE_artist_functions_challenge1_a: Si llama a la función una vez más, puede crear el mismo diseño en la esquina final.
        courseE_artist_functions_challenge1_b: '¡También puede ''saltar a'' otras posiciones o cambiar el diseño completo como lo desee!'
      courseE_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\nEste bloque 'salto' le permite mover el artista zombie a cualquier píxel en la cuadrícula, siempre que lo desee. Funciona moviéndolo un número de píxeles hacia la derecha y una cantidad de píxeles hacia abajo. Esto siempre se cuenta desde la esquina superior izquierda, lo que significa que no importa dónde esté * el artista zombi * * ¡se ejecuta el comando! ! [] (https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_functions_challenge2_2018_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\nEste bloque 'salto' le permite mover el artista zombie a cualquier píxel en la cuadrícula, siempre que lo desee. Funciona moviéndolo un número de píxeles hacia la derecha y una cantidad de píxeles hacia abajo. Esto siempre se cuenta desde la esquina superior izquierda, lo que significa que no importa dónde esté * el artista zombi * * ¡se ejecuta el comando! ! [] (https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_functions_predict1_authored_hint: [ ]
      courseE_artist_functions_predict1_2018_authored_hint: [ ]
      courseE_artist_functions_predict2_authored_hint: [ ]
      courseE_artist_functions_predict2_2018_authored_hint: [ ]
      courseE_artist_predict1_authored_hint: [ ]
      courseE_artist_predict1_2018_authored_hint: [ ]
      courseE_artist_ramp10_authored_hint:
        courseD_artist_ramp10_a: No olvide girar 60 grados después de cada triángulo. ¿Qué ciclo necesitas para poner esa instrucción adentro?
        courseD_artist_ramp10_b: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_ramp10_c: |-
          El artista dibujará seis triángulos en total:! [] (Https://images.code.org/752d82f3afdca0a7d7c01d6fa2abb583-image-1499889821499.2_solution2.gif)
      courseE_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: Para dibujar un lado, utilice el bloque `se mueven hacia adelante por 100 pixeles `, y cambiar el 100 a un 200.
        courseD_artist_ramp11b: |-
          Para dibujar 4 lados, poner el bloque`avanzar por 100 píxeles ` dentro de un ciclo de repetición y hacer que el ciclo se ajuste a dibujar 4 veces. ¡No te olvides de girar después!
      courseE_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: '¡Puedes dibujar primero el cuadrado, luego el triángulo o hacerlo al revés!'
      courseE_artist_ramp8_authored_hint:
        courseE_artist_ramp8_a: Para dibujar un lado, utilice el bloque `se mueven hacia adelante por 100 pixeles `, y cambiar el 100 a un 200.
        courseE_artist_ramp8_b: |-
          Para dibujar 4 lados, poner el bloque`avanzar por 100 píxeles ` dentro de un ciclo de repetición y hacer que el ciclo se ajuste a dibujar 4 veces. ¡No te olvides de girar después!
        courseE_artist_ramp8_c: 'Su ciclo debe tener dos bloques dentro: `avanzar ''y` girar 90 grados hacia la derecha`.'
      courseE_artist_ramp8_2_authored_hint:
        courseE_artist_ramp8_a: Para dibujar un lado, utilice el bloque `se mueven hacia adelante por 100 pixeles `, y cambiar el 100 a un 200.
        courseE_artist_ramp8_b: |-
          Para dibujar 4 lados, poner el bloque`avanzar por 100 píxeles ` dentro de un ciclo de repetición y hacer que el ciclo se ajuste a dibujar 4 veces. ¡No te olvides de girar después!
        courseE_artist_ramp8_c: 'Su ciclo debe tener dos bloques dentro: `avanzar ''y` girar 90 grados hacia la derecha`.'
      courseE_artist_ramp8_2018_authored_hint:
        courseE_artist_ramp8_a: Para dibujar un lado, utilice el bloque `se mueven hacia adelante por 100 pixeles `, y cambiar el 100 a un 200.
        courseE_artist_ramp8_b: |-
          Para dibujar 4 lados, poner el bloque`avanzar por 100 píxeles ` dentro de un ciclo de repetición y hacer que el ciclo se ajuste a dibujar 4 veces. ¡No te olvides de girar después!
        courseE_artist_ramp8_c: 'Su ciclo debe tener dos bloques dentro: `avanzar ''y` girar 90 grados hacia la derecha`.'
      courseE_artist_ramp8_2_2018_authored_hint:
        courseE_artist_ramp8_a: Para dibujar un lado, utilice el bloque `se mueven hacia adelante por 100 pixeles `, y cambiar el 100 a un 200.
        courseE_artist_ramp8_b: |-
          Para dibujar 4 lados, poner el bloque`avanzar por 100 píxeles ` dentro de un ciclo de repetición y hacer que el ciclo se ajuste a dibujar 4 veces. ¡No te olvides de girar después!
        courseE_artist_ramp8_c: 'Su ciclo debe tener dos bloques dentro: `avanzar ''y` girar 90 grados hacia la derecha`.'
      courseE_artist_ramp9_authored_hint:
        courseD_artist_ramp12_a: '¿Cómo es esto similar a un cuadrado? ¿Como es diferente?'
        courseD_artist_ramp12_b: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_ramp12_c: Para dibujar cada lado, deberá avanzar 100 píxeles, luego girar a la derecha 120 grados. ¿Cuántos lados necesitas?
      courseE_artist_ramp9_2_authored_hint:
        courseD_artist_ramp12_a: '¿Cómo es esto similar a un cuadrado? ¿Como es diferente?'
        courseD_artist_ramp12_b: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_ramp12_c: Para dibujar cada lado, deberá avanzar 100 píxeles, luego girar a la derecha 120 grados. ¿Cuántos lados necesitas?
      courseE_artist_ramp9_2018_authored_hint:
        courseD_artist_ramp12_a: '¿Cómo es esto similar a un cuadrado? ¿Como es diferente?'
        courseD_artist_ramp12_b: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_ramp12_c: Para dibujar cada lado, deberá avanzar 100 píxeles, luego girar a la derecha 120 grados. ¿Cuántos lados necesitas?
      courseE_artist_ramp9_2_2018_authored_hint:
        courseD_artist_ramp12_a: '¿Cómo es esto similar a un cuadrado? ¿Como es diferente?'
        courseD_artist_ramp12_b: '¡Puedes utilizar el menú desplegable en los bloques de ''giro'' para ver qué ángulo necesitas!'
        courseD_artist_ramp12_c: Para dibujar cada lado, deberá avanzar 100 píxeles, luego girar a la derecha 120 grados. ¿Cuántos lados necesitas?
      courseE_bee_concept1_authored_hint:
        courseE_bee_concept1_b: '¿Hay algún patrón que * repita * aquí?'
        courseE_bee_concept1_a: Si no entiende cómo usar los ciclos anidados aquí, intente escribir las instrucciones paso a paso en un pedazo de papel. Encierra en un círculo los patrones que ves.
      courseE_bee_concept1_2018_authored_hint:
        courseE_bee_concept1_b: '¿Hay algún patrón que * repita * aquí?'
        courseE_bee_concept1_a: Si no entiende cómo usar los ciclos anidados aquí, intente escribir las instrucciones paso a paso en un pedazo de papel. Encierra en un círculo los patrones que ves.
      courseE_bee_concept2_authored_hint:
        courseE_bee_concept2_a: '¿Ayudaría un ciclo`while` aquí?'
        courseE_bee_concept2_d: Incluso puedes verificar espacios vacíos para ver si miel es> 0.
        courseE_bee_concept2_b: Puede usar los ciclos `while` para moverse al final de cada ruta y para recoger toda la miel de cada espacio.
        courseE_bee_concept2_c: '¿De qué manera debe girar la abeja después de cada camino?'
      courseE_bee_concept2_2018_authored_hint:
        courseE_bee_concept2_a: '¿Ayudaría un ciclo`while` aquí?'
        courseE_bee_concept2_d: Incluso puedes verificar espacios vacíos para ver si miel es> 0.
        courseE_bee_concept2_b: Puede usar los ciclos `while` para moverse al final de cada ruta y para recoger toda la miel de cada espacio.
        courseE_bee_concept2_c: '¿De qué manera debe girar la abeja después de cada camino?'
      courseE_bee_concept3_authored_hint:
        courseE_bee_concept3a_a: Intenta usar los ciclos anidados de repetición para resolver este rompecabezas.
        courseE_bee_concept3a_b: Si no se puede averiguar dónde colocar los ciclos, intentar escribir el código paso a paso y en busca de patrones.
        courseE_bee_concept3a_c: Hay tres grupos de flores, por lo que su ciclo externo de repetición debe repetirse tres veces.
      courseE_bee_concept3_2018_authored_hint:
        courseE_bee_concept3a_a: Intenta usar los ciclos anidados de repetición para resolver este rompecabezas.
        courseE_bee_concept3a_b: Si no se puede averiguar dónde colocar los ciclos, intentar escribir el código paso a paso y en busca de patrones.
        courseE_bee_concept3a_c: Hay tres grupos de flores, por lo que su ciclo externo de repetición debe repetirse tres veces.
      courseE_bee_concept4_authored_hint:
        courseE_bee_concept4_a: Una declaración `if / else` podría ayudarte mucho aquí.
        courseE_bee_concept4_b: El patrón de escalones puede ayudarlo a atravesar todas las flores y panales.
        courseE_bee_concept4_c: Si estás en una flor, ¿cuántas veces tienes que obtener néctar? ¿Es este el mismo número para todas las flores?
      courseE_bee_concept4_2018_authored_hint:
        courseE_bee_concept4_a: Una declaración `if / else` podría ayudarte mucho aquí.
        courseE_bee_concept4_b: El patrón de escalones puede ayudarlo a atravesar todas las flores y panales.
        courseE_bee_concept4_c: Si estás en una flor, ¿cuántas veces tienes que obtener néctar? ¿Es este el mismo número para todas las flores?
      courseE_bee_concept5_authored_hint:
        courseE_bee_concept5_a: "Las flores siguen un camino rectangular. Puede rastrear ese rectángulo usando `\nmientras camino adelante` incluso con un número diferente de cuadrados por lado."
        courseE_bee_concept5_c: |-
          Aquí hay una foto de un camino rectangular que la abeja podría tomar. ! [] (https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)
        courseE_bee_concept5_b: Puede comprobar todas los espacios de una flor usando el bloque ` si `, incluso si usted ya sabe que no hay nada allí.
      courseE_bee_concept5_2018_authored_hint:
        courseE_bee_concept5_a: "Las flores siguen un camino rectangular. Puede rastrear ese rectángulo usando `\nmientras camino adelante` incluso con un número diferente de cuadrados por lado."
        courseE_bee_concept5_c: |-
          Aquí hay una foto de un camino rectangular que la abeja podría tomar. ! [] (https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)
        courseE_bee_concept5_b: Puede comprobar todas los espacios de una flor usando el bloque ` si `, incluso si usted ya sabe que no hay nada allí.
      courseE_bee_functions1_authored_hint:
        courseE_bee_functions1_a: Recuerde que los giros a izquierda y derecha son desde el punto de vista de la abeja.
        courseE_bee_functions1_b: Utilizar un ciclo de repetición en la recolección del néctar para hacer su código más corto.
        courseE_bee_functions1_c: Recuerde que los giros a izquierda y derecha son desde la perspectiva de la abeja.
      courseE_bee_functions10_authored_hint:
        courseE_bee_functions10_a: Se necesita un ciclo `while` para recoger toda la miel, ya que varía entre los panales.
        courseE_bee_functions10_b: Incluya los giros y el movimiento en su función, para que pueda llamarla cuando la abeja esté en la ruta principal.
        courseE_bee_functions10_c: '¡Recuerde llamar a su función en el programa principal!'
      courseE_bee_functions10_2018_authored_hint:
        courseE_bee_functions10_a: Se necesita un ciclo `while` para recoger toda la miel, ya que varía entre los panales.
        courseE_bee_functions10_b: Incluya los giros y el movimiento en su función, para que pueda llamarla cuando la abeja esté en la ruta principal.
        courseE_bee_functions10_c: '¡Recuerde llamar a su función en el programa principal!'
      courseE_bee_functions1_2018_authored_hint:
        courseE_bee_functions1_a: Recuerde que los giros a izquierda y derecha son desde el punto de vista de la abeja.
        courseE_bee_functions1_b: Utilizar un ciclo de repetición en la recolección del néctar para hacer su código más corto.
        courseE_bee_functions1_c: Recuerde que los giros a izquierda y derecha son desde la perspectiva de la abeja.
      courseE_bee_functions2_authored_hint:
        courseE_bee_functions2_a: La función ha sido escrita para usted, pero deberá llamarla a cada flor.
        courseE_bee_functions2_b: Este bloque <xml><block type="procedures_callnoreturn"><mutation name="get 2 nectar"/></block></xml> llama a la función que se le ha asignado.
        courseE_bee_functions2_c: Querrá avanzar y obtener néctar dos veces para resolver este rompecabezas.
      courseE_bee_functions2_2018_authored_hint:
        courseE_bee_functions2_a: La función ha sido escrita para usted, pero deberá llamarla a cada flor.
        courseE_bee_functions2_b: Este bloque <xml><block type="procedures_callnoreturn"><mutation name="get 2 nectar"/></block></xml> llama a la función que se le ha asignado.
        courseE_bee_functions2_c: Querrá avanzar y obtener néctar dos veces para resolver este rompecabezas.
      courseE_bee_functions3_authored_hint:
        courseE_bee_functions3_a: 'Tu función para este rompecabezas solo necesita hacer miel, no debería tener bloque de ''avanzar'' o ''girar''. '
        courseE_bee_functions3_b: Llame a la función 'obtener 5' en el bloque 'cuando se ejecuta'.
        courseE_bee_functions3_c: Su programa principal controlará todo el movimiento, la función es solo para lo que sucede cuando la abeja llega a una flor.
        courseE_bee_functions3_d: Intenta usar este camino.
      courseE_bee_functions3_2018_authored_hint:
        courseE_bee_functions3_a: 'Tu función para este rompecabezas solo necesita hacer miel, no debería tener bloque de ''avanzar'' o ''girar''. '
        courseE_bee_functions3_b: Llame a la función 'obtener 5' en el bloque 'cuando se ejecuta'.
        courseE_bee_functions3_c: Su programa principal controlará todo el movimiento, la función es solo para lo que sucede cuando la abeja llega a una flor.
        courseE_bee_functions3_d: Intenta usar este camino.
      courseE_bee_functions4_authored_hint:
        courseE_bee_functions4_a: Su función ya viajará por los caminos laterales  y devolverá la abeja a la carretera principal. No necesita agregar esa parte a su programa.
        courseE_bee_functions4_b: Use el bloque verde `mover y obtener néctar` para llamar a esta función.
        courseE_bee_functions4_c: No necesita cambiar la función, simplemente úsela en su programa.
      courseE_bee_functions4_2018_authored_hint:
        courseE_bee_functions4_a: Su función ya viajará por los caminos laterales  y devolverá la abeja a la carretera principal. No necesita agregar esa parte a su programa.
        courseE_bee_functions4_b: Use el bloque verde `mover y obtener néctar` para llamar a esta función.
        courseE_bee_functions4_c: No necesita cambiar la función, simplemente úsela en su programa.
      courseE_bee_functions5_authored_hint:
        courseE_bee_functions5_a: Edite la función para que resuelva el acertijo sin tener que cambiar el programa principal.
        courseE_bee_functions5_c: El bloque de 'avanzar' se puede cambiar en un bloque de 'retroceder'. Úselo en lugar de girar completamente al final de los caminos!
        courseE_bee_functions5_b: "Tu función debe hacer que la abeja: \n- girar - avanzar - recoger todo el néctar - retroceder - volver a la dirección desde la que comenzó la abeja"
      courseE_bee_functions5_2018_authored_hint:
        courseE_bee_functions5_a: Edite la función para que resuelva el acertijo sin tener que cambiar el programa principal.
        courseE_bee_functions5_c: El bloque de 'avanzar' se puede cambiar en un bloque de 'retroceder'. Úselo en lugar de girar completamente al final de los caminos!
        courseE_bee_functions5_b: "Tu función debe hacer que la abeja: \n- girar - avanzar - recoger todo el néctar - retroceder - volver a la dirección desde la que comenzó la abeja"
      courseE_bee_functions6_authored_hint:
        courseE_bee_functions6_a: "Si el rompecabezas parece desafiante, intente construir su función un poco a la vez.   \n\nAgregue algunos  bloques , luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí! ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: En este caso, puede ser útil moverse dentro de la función, pero no todos los bloques de 'movimiento' deben estar allí.
      courseE_bee_functions6_2018_authored_hint:
        courseE_bee_functions6_a: "Si el rompecabezas parece desafiante, intente construir su función un poco a la vez.   \n\nAgregue algunos  bloques , luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí! ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: En este caso, puede ser útil moverse dentro de la función, pero no todos los bloques de 'movimiento' deben estar allí.
      courseE_bee_functions6test_authored_hint:
        courseE_bee_functions6_a: "Si el rompecabezas parece desafiante, intente construir su función un poco a la vez.   \n\nAgregue algunos  bloques , luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí! ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: En este caso, puede ser útil moverse dentro de la función, pero no todos los bloques de 'movimiento' deben estar allí.
      courseE_bee_functions7_authored_hint:
        courseE_bee_functions7_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseE_bee_functions7_b: |-
          Recuerda construir tu código dentro del bloque de función verde. ! [] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: Esta función debe hacer que la abeja lo dirija hacia el camino, recoger el néctar, hacer la miel, girar la abeja y traerlo de regreso.
      courseE_bee_functions7_2018_authored_hint:
        courseE_bee_functions7_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseE_bee_functions7_b: |-
          Recuerda construir tu código dentro del bloque de función verde. ! [] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: Esta función debe hacer que la abeja lo dirija hacia el camino, recoger el néctar, hacer la miel, girar la abeja y traerlo de regreso.
      courseE_bee_functions8_authored_hint:
        courseE_bee_functions8_a: Su función solo necesitará recolectar néctar. Intenta usar un ciclo while en lugar de un ciclo repeat.
        courseE_bee_functions8_b: Use `mientras el néctar> 0` para recibir todo el néctar.
        courseE_bee_functions8_c: Su programa principal necesitará un patrón de movimiento de escalera. Recuerde, el programa principal es el código debajo del bloque cuando corre`.
      courseE_bee_functions8_2018_authored_hint:
        courseE_bee_functions8_a: Su función solo necesitará recolectar néctar. Intenta usar un ciclo while en lugar de un ciclo repeat.
        courseE_bee_functions8_b: Use `mientras el néctar> 0` para recibir todo el néctar.
        courseE_bee_functions8_c: Su programa principal necesitará un patrón de movimiento de escalera. Recuerde, el programa principal es el código debajo del bloque cuando corre`.
      courseE_bee_functions9_authored_hint:
        courseE_bee_functions9_a: Puedes usar exactamente la misma función  para este rompecabezas que hiciste en el último rompecabezas. Todo lo que necesitas hacer es crear una función que recolecte todo el néctar cuando llegues a cada flor.
        courseE_bee_functions9_b: A pesar de que saber cuánto néctar de algunas de las flores tienen un ciclo `while` puede realizar una función de trabajo para todos ellos.
      courseE_bee_functions9_2018_authored_hint:
        courseE_bee_functions9_a: Puedes usar exactamente la misma función  para este rompecabezas que hiciste en el último rompecabezas. Todo lo que necesitas hacer es crear una función que recolecte todo el néctar cuando llegues a cada flor.
        courseE_bee_functions9_b: A pesar de que saber cuánto néctar de algunas de las flores tienen un ciclo `while` puede realizar una función de trabajo para todos ellos.
      courseE_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseE_bee_functions_challenge1_b: Recuerde construir su código dentro del bloque de función verde.
      courseE_bee_functions_challenge1_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseE_bee_functions_challenge1_b: Recuerde construir su código dentro del bloque de función verde.
      courseE_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseE_bee_functions_challenge1_b: Recuerde construir su código dentro del bloque de función verde.
      courseE_bee_functions_challenge2_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseE_bee_functions_challenge1_b: Recuerde construir su código dentro del bloque de función verde.
      courseE_bee_ramp14_authored_hint:
        courseE_bee_ramp14_a: La abeja funciona igual que el agricultor en el rompecabezas anterior. Zumba a lo largo del camino y recoge el néctar mientras hay néctar (mientras néctar> 0) y haz toda la miel.
        courseE_bee_ramp14_b: Puede haber más de una flor o nido de abeja en cada espacio, ¡así que asegúrese de usar los ciclos `while` para obtenerlos todos!
        courseE_bee_ramp14_c: El acertijo es casi identico al anterior, solo con miel y nectar en vez de vegetales.
      courseE_bee_ramp14_2018_authored_hint:
        courseE_bee_ramp14_a: La abeja funciona igual que el agricultor en el rompecabezas anterior. Zumba a lo largo del camino y recoge el néctar mientras hay néctar (mientras néctar> 0) y haz toda la miel.
        courseE_bee_ramp14_b: Puede haber más de una flor o nido de abeja en cada espacio, ¡así que asegúrese de usar los ciclos `while` para obtenerlos todos!
        courseE_bee_ramp14_c: El acertijo es casi identico al anterior, solo con miel y nectar en vez de vegetales.
      courseE_bee_ramp17_authored_hint:
        courseE_bee_ramp17_a: Dado que no tenemos un bloque de repetición que haga algo un cierto número de veces, ¿qué bloque deberiamos usar para mover algo a traves del camino?
        courseE_bee_ramp17: Si fueramos a resolver este acertijo sin un bloque hasta, ¿dónde verias codigo repetido? ¿Cómo puedes usar este código repetido para saber como usar un bloque hasta para resolver el problema?
        courseE_bee_ramp17_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
        courseE_bee_ramp17_c: Querrás moverte en un patron de escalón. Intenta programarlo primero, despues añade el "si/entonces" y el ciclo "mientras" para buscar flores y panales.
      courseE_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          Instead of using four `move forward` blocks for each side, try putting one `move forward` block inside of a `repeat` loop, like this:
          <xml><block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          </block></xml>
        courseD_artist_ramp10_b: '¡No te olvides de recoger una pieza del tesoro, luego gira despues de cada conjunto de escalones!'
      courseE_farmer_concept1_authored_hint:
        courseE_farmer_concept1_a: Un bloque 'mientras que hay un agujero' te ayudará a llenar cualquier hueco hasta que quede plano.
        courseE_farmer_concept1_b: Puede utilizar un patrón de paso de la escalera para llegar a los agujeros.
      courseE_farmer_concept1_2018_authored_hint:
        courseE_farmer_concept1_a: Un bloque 'mientras que hay un agujero' te ayudará a llenar cualquier hueco hasta que quede plano.
        courseE_farmer_concept1_b: Puede utilizar un patrón de paso de la escalera para llegar a los agujeros.
      courseE_farmer_concept2_authored_hint:
        courseE_farmer_concept2_a: Los caminos son todos la misma longitud, pero estan un número diferente de casillas aparte.  Un ciclo no es ideal aquí. Intenta con una función.
        courseE_farmer_concept2_b: Una función que da vuelta, va por el camino, recoge calabazas y vuelve a la senda horizontal principal podría ser útil aquí.
        courseE_farmer_concept2_c: Tu programa principal puede llamar a esta función con el bloque verde de 'hacer algo'.
      courseE_farmer_concept2_2018_authored_hint:
        courseE_farmer_concept2_a: Los caminos son todos la misma longitud, pero estan un número diferente de casillas aparte.  Un ciclo no es ideal aquí. Intenta con una función.
        courseE_farmer_concept2_b: Una función que da vuelta, va por el camino, recoge calabazas y vuelve a la senda horizontal principal podría ser útil aquí.
        courseE_farmer_concept2_c: Tu programa principal puede llamar a esta función con el bloque verde de 'hacer algo'.
      courseE_farmer_concept3_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: El bloque `camino por delante` te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        grade3_robotFarmer_ConditionalsIntro_8_b: '¿Qué debes hacer una vez que hayas llegado al final de un camino?'
        grade3_robotFarmer_ConditionalsIntro_8_c: Utiliza un cicle 'repetir' para ejecutar el código varias veces para cada camino recto.
      courseE_farmer_concept3_2018_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: El bloque `camino por delante` te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        grade3_robotFarmer_ConditionalsIntro_8_b: '¿Qué debes hacer una vez que hayas llegado al final de un camino?'
        grade3_robotFarmer_ConditionalsIntro_8_c: Utiliza un cicle 'repetir' para ejecutar el código varias veces para cada camino recto.
      courseE_farmer_concept4_authored_hint:
        4-5_Artist_Patterns_3_a: Ten cuidado de sacar el bloque completo de código de la barra de herramientas cada vez que pruebes uno nuevo.
        4-5_Artist_Patterns_3_b: Si su código se vuelve demasiado confuso, siempre puede hacer clic en "Comenzar de nuevo" y ¡volver a intentarlo!
      courseE_farmer_functions1_authored_hint:
        courseE_farmer_functions1_a: '¡La caja de herramientas está organizado un poco diferente esta vez! Haz clic en las diferentes categorías para ver que bloques tienes.'
        courseE_farmer_functions1_b: Sólo tienes que escoger una calabaza, ¿pero podrías utilizar un ciclo para llegar a ella?
      courseE_farmer_functions10_authored_hint: [ ]
      courseE_farmer_functions10b_authored_hint:
        courseE_farmer_functions10b_a: Deberás volver a crear tu primera función.
        courseE_farmer_functions10b_b: '¿Qué necesitas hacer después de la primera calabaza?'
        courseE_farmer_functions10b_c: Revisa el ultimo acertijo si necesitas ayuda para hacer la función.
      courseE_farmer_functions10b_2018_authored_hint:
        courseE_farmer_functions10b_a: Deberás volver a crear tu primera función.
        courseE_farmer_functions10b_b: '¿Qué necesitas hacer después de la primera calabaza?'
        courseE_farmer_functions10b_c: Revisa el ultimo acertijo si necesitas ayuda para hacer la función.
      courseE_farmer_functions11_predict_authored_hint: [ ]
      courseE_farmer_functions11_predict_2018_authored_hint: [ ]
      courseE_farmer_functions1_2018_authored_hint:
        courseE_farmer_functions1_a: '¡La caja de herramientas está organizado un poco diferente esta vez! Haz clic en las diferentes categorías para ver que bloques tienes.'
        courseE_farmer_functions1_b: Sólo tienes que escoger una calabaza, ¿pero podrías utilizar un ciclo para llegar a ella?
      courseE_farmer_functions1a_authored_hint:
        courseE_farmer_functions1a_a: Piensa en las declaraciónes "si/entonces" paso a paso. ¿Que debes hacer si estas parado en una planta de maíz?
        courseE_farmer_functions1a_b: '¡Utiliza un bloque "repetir hasta" para llegar a la calabaza!'
      courseE_farmer_functions1a_2018_authored_hint:
        courseE_farmer_functions1a_a: Piensa en las declaraciónes "si/entonces" paso a paso. ¿Que debes hacer si estas parado en una planta de maíz?
        courseE_farmer_functions1a_b: '¡Utiliza un bloque "repetir hasta" para llegar a la calabaza!'
      courseE_farmer_functions2a_authored_hint: [ ]
      courseE_farmer_functions2aALT_authored_hint: [ ]
      courseE_farmer_functions2b_authored_hint:
        courseE_farmer_functions2b_a: Puesdes utilizar un 'repetir hasta calabaza' para llegar al final de los dos caminos.
        courseE_farmer_functions2b_b: No hay maíz en el camino que cruza, por lo que puedes solo moverte a lo largo y girar.
        courseE_farmer_functions2b_c: Necesitarás dos bloques de 'repetir hasta' para llegar a todos los cultivos.
      courseE_farmer_functions2b_2018_authored_hint:
        courseE_farmer_functions2b_a: Puesdes utilizar un 'repetir hasta calabaza' para llegar al final de los dos caminos.
        courseE_farmer_functions2b_b: No hay maíz en el camino que cruza, por lo que puedes solo moverte a lo largo y girar.
        courseE_farmer_functions2b_c: Necesitarás dos bloques de 'repetir hasta' para llegar a todos los cultivos.
      courseE_farmer_functions2ba_authored_hint:
        courseE_farmer_functions2ba_a: Use el bloque verde `maíz y calabaza` para llamar a esta función.
        courseE_farmer_functions2ba_b: Arrastra todos los bloques del espacio de trabajo junto con 'al ejecutar' para ver cómo funciona esta función.
      courseE_farmer_functions2ba_2018_authored_hint:
        courseE_farmer_functions2ba_a: Use el bloque verde `maíz y calabaza` para llamar a esta función.
        courseE_farmer_functions2ba_b: Arrastra todos los bloques del espacio de trabajo junto con 'al ejecutar' para ver cómo funciona esta función.
      courseE_farmer_functions3_authored_hint:
        courseE_farmer_functions3_a: Intenta usar un ciclo "mientras haya camino por delante" para llegar a donde necesitas.
      courseE_farmer_functions3b_authored_hint:
        courseE_farmer_functions1a_a: '''si'' y '' si/entonces'' realmente ayudarán aquí.'
      courseE_farmer_functions3c_authored_hint:
        courseE_farmer_functions3c_a: '¿Qué secuencia se repite a menudo en este programa? ¿Puedes arrastrar estos bloques a la función?'
        courseE_farmer_functions3c_b: No olvides llamar a tu función en el programa principal donde quitaste los bloques.
      courseE_farmer_functions3c_2018_authored_hint:
        courseE_farmer_functions3c_a: '¿Qué secuencia se repite a menudo en este programa? ¿Puedes arrastrar estos bloques a la función?'
        courseE_farmer_functions3c_b: No olvides llamar a tu función en el programa principal donde quitaste los bloques.
      courseE_farmer_functions4_authored_hint:
        courseE_farmer_functions4_a: Arrastra todo el código fuera de tu ciclo 'repetir' y en la función 'ir a buscar calabazas'.
        courseE_farmer_functions4_b: No te olvides de poner el bloque que llama a las funciones de 'ir a buscar calabazas' dentro de su ciclo antes de ejecutar el código.
      courseE_farmer_functions4b_authored_hint:
        courseE_farmer_functions4b_a: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
        courseE_farmer_functions4b_b: Recuerda dar vuelta despues de cada cámino.
        courseE_farmer_functions4b_c: Los bloques 'calabaza y maiz' esta en la pestaña de funciones de la caja de herramientas.
      courseE_farmer_functions4b_2018_authored_hint:
        courseE_farmer_functions4b_a: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
        courseE_farmer_functions4b_b: Recuerda dar vuelta despues de cada cámino.
        courseE_farmer_functions4b_c: Los bloques 'calabaza y maiz' esta en la pestaña de funciones de la caja de herramientas.
      courseE_farmer_functions5_authored_hint: [ ]
      courseE_farmer_functions5a_authored_hint: [ ]
      courseE_farmer_functions5b_authored_hint:
        courseE_farmer_functions5b_a: Tendrás que usar un ciclo 'mientras maiz', un ciclo 'mientras lechuga' y 'mientras calabaza' para asegurarte de que consigues todo.
      courseE_farmer_functions5c_authored_hint:
        courseE_farmer_functions5c_a: '¿Hay más patrones que puedas ciclar en este acertijo?'
        courseE_farmer_functions5c_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseE_farmer_functions5c_2018_authored_hint:
        courseE_farmer_functions5c_a: '¿Hay más patrones que puedas ciclar en este acertijo?'
        courseE_farmer_functions5c_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseE_farmer_functions6_authored_hint: [ ]
      courseE_farmer_functions6b_authored_hint: [ ]
      courseE_farmer_functions6c_authored_hint:
        courseE_farmer_functions6c_a: Edita tu función para revisar la lechuga también.
        courseE_farmer_functions6c_b: '¿Podria un bloque "si/entonces" ayudarte a saber si hay una lechuga en un espacio?'
        courseE_farmer_functions6c_c: '¡No olvides seguir buscando maiz!'
      courseE_farmer_functions6c_2018_authored_hint:
        courseE_farmer_functions6c_a: Edita tu función para revisar la lechuga también.
        courseE_farmer_functions6c_b: '¿Podria un bloque "si/entonces" ayudarte a saber si hay una lechuga en un espacio?'
        courseE_farmer_functions6c_c: '¡No olvides seguir buscando maiz!'
      courseE_farmer_functions7_authored_hint: [ ]
      courseE_farmer_functions7b_authored_hint:
        courseE_farmer_functions7b_a: '¡No necesitas una función aquí, pero puedes hacer una si te ayuda!'
        courseE_farmer_functions7b_b: Usa un "si/entonces" para buscar cultivos, luego voltea basandote en que cultivo encontraste.
        courseE_farmer_functions7b_c: Un ciclo 'repetir hasta calabaza' puede ayudarte a llegar al final del laberinto.
      courseE_farmer_functions7b_2018_authored_hint:
        courseE_farmer_functions7b_a: '¡No necesitas una función aquí, pero puedes hacer una si te ayuda!'
        courseE_farmer_functions7b_b: Usa un "si/entonces" para buscar cultivos, luego voltea basandote en que cultivo encontraste.
        courseE_farmer_functions7b_c: Un ciclo 'repetir hasta calabaza' puede ayudarte a llegar al final del laberinto.
      courseE_farmer_functions8_authored_hint:
        courseE_farmer_functions8_a: Crea una función que lleva al agricultor al maíz, obtiene todo el maíz, da la vuelta y vuelve.
      courseE_farmer_functions8b_authored_hint:
        courseE_farmer_functions8b_a: Intenta ejecutar el código dado para ver lo que hace. ¿Qué se necesita después de esto?
        courseE_farmer_functions8b_b: Arrastra todos los bloques a una función para que puedas usarlos más de una vez.
        courseE_farmer_functions8b_c: '¿Cuantas vees necesitas llamar a la función?'
      courseE_farmer_functions8b_2018_authored_hint:
        courseE_farmer_functions8b_a: Intenta ejecutar el código dado para ver lo que hace. ¿Qué se necesita después de esto?
        courseE_farmer_functions8b_b: Arrastra todos los bloques a una función para que puedas usarlos más de una vez.
        courseE_farmer_functions8b_c: '¿Cuantas vees necesitas llamar a la función?'
      courseE_farmer_functions9_authored_hint:
        courseE_farmer_functions8_a: Crea una función que lleva al agricultor al maíz, obtiene todo el maíz, da la vuelta y vuelve.
      courseE_farmer_functions9b_authored_hint:
        courseE_farmer_functions9b_a: '¿Puede utilizar ''si'' y '' si/entonces'' anidados para avanzar por el camino?'
        courseE_farmer_functions9b_b: Utiliza 'repetir hasta calabaza' para recorrer todos los caminos.
        courseE_farmer_functions9b_c: Tienes que avanzar por los caminos como si fueran cuadrados haciendose más grandes después de cada ciclo.
      courseE_farmer_functions9b_2018_authored_hint:
        courseE_farmer_functions9b_a: '¿Puede utilizar ''si'' y '' si/entonces'' anidados para avanzar por el camino?'
        courseE_farmer_functions9b_b: Utiliza 'repetir hasta calabaza' para recorrer todos los caminos.
        courseE_farmer_functions9b_c: Tienes que avanzar por los caminos como si fueran cuadrados haciendose más grandes después de cada ciclo.
      courseE_farmer_functions9b_clone_authored_hint: [ ]
      courseE_farmer_predict1_authored_hint:
        courseE_farmer_ramp12a: No dudes en volver al último acertijo si necesitas un recordatorio de cómo recoger cultivos solo **mientras** hay cultivos para recoger.
      courseE_farmer_predict1_2018_authored_hint:
        courseE_farmer_ramp12a: No dudes en volver al último acertijo si necesitas un recordatorio de cómo recoger cultivos solo **mientras** hay cultivos para recoger.
      courseE_farmer_predict2_authored_hint: [ ]
      courseE_farmer_predict2_2018_authored_hint: [ ]
      courseE_farmer_ramp11_authored_hint:
        courseE_farmer_ramp11_a: Si tienes problemas para ver donde van los ciclos, intenta programarlo y buscar patrones.
        courseE_farmer_ramp11_b: '¿Cómo se puede utilizar un ciclo de repetición para recoger la lechuga en lugar de arrastrar 5 bloques` recoger lechuga?'
        courseE_farmer_ramp11_c: No es necesario utilizar la repetición 5 ciclos para obtener toda la lechuga. En su lugar, arrastre el ciclo de repetición de recolección de lechugas dentro de otro ciclo (junto con un bloque `avanzar ', ¡y lo tendrá!)
      courseE_farmer_ramp11a_authored_hint:
        courseE_farmer_ramp12_a: 'En lugar de utilizar un ciclo de repetición para decirle al agricultor cuántas veces debe pala de tierra, ahora se puede utilizar un` mientras que hay un montón ` bloque.  '
        courseE_farmer_ramp12_b: Solo necesitas avanzar una vez para llegar a la tierra.
      courseE_farmer_ramp11a_2018_authored_hint:
        courseE_farmer_ramp12_a: 'En lugar de utilizar un ciclo de repetición para decirle al agricultor cuántas veces debe pala de tierra, ahora se puede utilizar un` mientras que hay un montón ` bloque.  '
        courseE_farmer_ramp12_b: Solo necesitas avanzar una vez para llegar a la tierra.
      courseE_farmer_ramp11b_authored_hint:
        courseE_farmer_ramp11b_a: Puede anidar su ciclo`while` en el interior de un ciclo de` repetición para hacer que su código corto.
      courseE_farmer_ramp11b_2018_authored_hint:
        courseE_farmer_ramp11b_a: Puede anidar su ciclo`while` en el interior de un ciclo de` repetición para hacer que su código corto.
      courseE_farmer_ramp12_authored_hint:
        courseE_farmer_ramp12_b: Todavía necesitará usar un ciclo de repetición en el exterior para decirle al agricultor cuántas veces debe caminar y obtener lechuga.
      courseE_farmer_ramp12_2018_authored_hint:
        courseE_farmer_ramp12_b: Todavía necesitará usar un ciclo de repetición en el exterior para decirle al agricultor cuántas veces debe caminar y obtener lechuga.
      courseE_farmer_ramp12_forswap_authored_hint:
        courseE_farmer_ramp12_b: Todavía necesitará usar un ciclo de repetición en el exterior para decirle al agricultor cuántas veces debe caminar y obtener lechuga.
      courseE_farmer_ramp12_forswap_2018_authored_hint:
        courseE_farmer_ramp12_b: Todavía necesitará usar un ciclo de repetición en el exterior para decirle al agricultor cuántas veces debe caminar y obtener lechuga.
      courseE_farmer_ramp12a_authored_hint:
        courseE_farmer_ramp12b: Usted tendrá que comprobar sus declaraciones ` si ' 21 veces para resolver este rompecabezas.
        courseE_farmer_ramp12c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
        courseE_farmer_ramp12d: Solo habrá lechuga, por lo que no tendrá que preocuparse por los espacios vacíos, el maíz o las calabazas.
      courseE_farmer_ramp12a_2018_authored_hint:
        courseE_farmer_ramp12b: Usted tendrá que comprobar sus declaraciones ` si ' 21 veces para resolver este rompecabezas.
        courseE_farmer_ramp12c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
        courseE_farmer_ramp12d: Solo habrá lechuga, por lo que no tendrá que preocuparse por los espacios vacíos, el maíz o las calabazas.
      courseE_farmer_ramp12b_authored_hint: [ ]
      courseE_farmer_ramp12b_2018_authored_hint: [ ]
      courseE_farmer_ramp12c_authored_hint:
        courseE_farmer_ramp12b_b: Todavía necesitará usar primero un ciclo 'hasta', luego use un ciclo 'while' una vez que llegue a la lechuga.
      courseE_farmer_ramp12c_2018_authored_hint:
        courseE_farmer_ramp12b_b: Todavía necesitará usar primero un ciclo 'hasta', luego use un ciclo 'while' una vez que llegue a la lechuga.
      courseE_farmer_ramp12d_authored_hint:
        courseE_farmer_ramp12d_b: De todos modos tendrá que poner sus ciclos `` until` y while` dentro de un ciclo de repetición para resolver este rompecabezas!
      courseE_farmer_ramp12d_2018_authored_hint:
        courseE_farmer_ramp12d_b: De todos modos tendrá que poner sus ciclos `` until` y while` dentro de un ciclo de repetición para resolver este rompecabezas!
      courseE_farmer_ramp12e_authored_hint:
        courseE_farmer_ramp12e_b: La solución a este rompecabezas se parecerá mucho a la solución al último rompecabezas, pero girando en la otra dirección.
      courseE_farmer_ramp12e_2018_authored_hint:
        courseE_farmer_ramp12e_b: La solución a este rompecabezas se parecerá mucho a la solución al último rompecabezas, pero girando en la otra dirección.
      courseE_farmer_ramp12f_authored_hint:
        courseE_farmer_ramp12f_b: Use un bloque ` if / else` para ayudar al agricultor a decidir si necesita girar a la derecha o a la izquierda.
      courseE_farmer_ramp12f_2018_authored_hint:
        courseE_farmer_ramp12f_b: Use un bloque ` if / else` para ayudar al agricultor a decidir si necesita girar a la derecha o a la izquierda.
      courseE_farmer_ramp12g_authored_hint:
        courseE_farmer_ramp12G_b: Use un bloque ` if / else` para ayudar al agricultor a decidir si necesita girar a la derecha o a la izquierda.
      courseE_farmer_ramp12g_2018_authored_hint:
        courseE_farmer_ramp12G_b: Use un bloque ` if / else` para ayudar al agricultor a decidir si necesita girar a la derecha o a la izquierda.
      courseE_farmer_ramp13_authored_hint:
        courseE_farmer_ramp13_a: Puede haber más de uno de los cultivos en un espacio, así que asegúrese de usar los ciclos`while` para elegirlos a todos!
        courseE_farmer_ramp13_b: Utilizar un ciclo de repetición de modo que usted no tiene que escribir una por separado si la declaración de cada cuadrado.
        courseE_farmer_ramp13_c: Si no se puede averiguar dónde colocar los ciclos, intentar escribir el código paso a paso y buscar para los patrones.
      courseE_farmer_ramp13_2018_authored_hint:
        courseE_farmer_ramp13_a: Puede haber más de uno de los cultivos en un espacio, así que asegúrese de usar los ciclos`while` para elegirlos a todos!
        courseE_farmer_ramp13_b: Utilizar un ciclo de repetición de modo que usted no tiene que escribir una por separado si la declaración de cada cuadrado.
        courseE_farmer_ramp13_c: If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.
      courseE_farmer_ramp15_authored_hint:
        courseE_farmer_ramp15_a: Usar el bloque de 'repetir hasta en calabaza' para llegar al final de la ruta.
        courseE_farmer_ramp15_b: '¿Qué más se debe hacer cuando se mueve a lo largo de la ruta de acceso a la calabaza?'
        courseE_farmer_ramp15_c: Los brotes esconden varias cantidades de maíz o de lechuga a la cosecha en su camino a la calabaza.
      courseE_farmer_ramp15_2018_authored_hint:
        courseE_farmer_ramp15_a: Usar el bloque de 'repetir hasta en calabaza' para llegar al final de la ruta.
        courseE_farmer_ramp15_b: '¿Qué más se debe hacer cuando se mueve a lo largo de la ruta de acceso a la calabaza?'
        courseE_farmer_ramp15_c: Los brotes esconden varias cantidades de maíz o de lechuga a la cosecha en su camino a la calabaza.
      courseE_farmer_ramp16_authored_hint:
        courseE_farmer_ramp16_a: Si nos estamos moviendo a lo largo del camino hacia la calabaza, ¿qué tenemos que hacer una y otra vez? ¿Cuándo dejamos de repetir?
        courseE_farmer_ramp16_b: Comprobación de maíz o de lechuga en cada espacio ayudará a simplificar su código. ¿Qué deberías hacer si hay un cultivo? ¿Qué pasa si no hay nada?
        courseE_farmer_ramp16_c: Use un bloque `if / else` para seguir avanzando. ¿De qué manera debes girar cuando la ruta de avance está bloqueada?
      courseE_maze_predict1_authored_hint: [ ]
      courseE_maze_predict1_2018_authored_hint: [ ]
      courseE_maze_ramp1_authored_hint:
        courseC_maze_programming1_0: Si el pájaro no está recibiendo al cerdo, hacer seguro de los tres de los bloques han sido totalmente hecho clic en conjunto, a continuación, haga clic en "Ejecutar" de nuevo.
        courseC_maze_programming1_b: '¡No necesitas ningún bloque adicional de la caja de herramientas para este rompecabezas!'
      courseE_maze_ramp13_authored_hint:
        courseD_maze_ramp11_b: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseD_maze_ramp11_a: Usa bloques repetidos para ejecutar un solo bloque o un fragmento de código una y otra vez.
      courseE_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_0: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
        courseC_maze_programming1_b: '¡No necesitas ningún bloque adicional de la caja de herramientas para este rompecabezas!'
      courseE_maze_ramp2_authored_hint:
        courseC_maze_programming2_a: Para usar un bloque `avanzar`, arrástralo desde el área de la barra de herramientas al espacio de trabajo y conéctelo al bloque`al ejecutar`.
        courseC_maze_programming2_b: Hacer que los tres bloques`movimiento adelante` se encuentren unidos al bloque`` cuando corra`.
      courseE_maze_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
        courseC_maze_programming2_b: Hacer que los tres bloques`movimiento adelante` se encuentren unidos al bloque`` cuando corra`.
      courseE_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) \n\nPara eliminar un bloque del medio de su código, arrastre todos los bloques debajo de él hacia la derecha y permita que se sienten en el espacio de trabajo por un tiempo. \n\nHaga clic en el bloque que desea eliminar y arrástrelo nuevamente a la caja de herramientas. \n\nFinalmente, coloque sus otros bloques en su lugar a donde pertenecen.\n"
        courseC_maze_programming3_b: Recuerde que gira a la derecha e izquierda desde la perspectiva del pájaro.
      courseE_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) \n\nPara eliminar un bloque del medio de su código, arrastra todos los bloques debajo de él hacia la derecha y permite que se queden en el espacio de trabajo por un tiempo. \n\nHaz clic en el bloque que desea eliminar y arrástralo nuevamente a la caja de herramientas. \n\nFinalmente, coloca los otros bloques en su lugar.\n"
        courseC_maze_programming3_b: Recuerde que gira a la derecha e izquierda desde la perspectiva del pájaro.
      courseE_maze_ramp4_authored_hint:
        courseC_maze_programming4_a: Puede girar a la derecha o a la izquierda desde el punto de vista del pájaro. Si estás mirando hacia la derecha, girar a la derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido, luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más para alcanzar al cerdo.
        courseC_maze_programming4_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseE_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseC_maze_programming4_b: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
        courseC_maze_programming4_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseE_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: '¿Qué tan lejos necesita moverse para llegar a la esquina?'
        courseC_maze_programming5_c: Tendrá que girar a la izquierda en la esquina para llegar al cerdo.
      courseE_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: '¿Qué tan lejos necesita moverse para llegar a la esquina?'
        courseC_maze_programming5_c: Tendrá que girar a la izquierda en la esquina para llegar al cerdo.
      courseE_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: '¡Hay dos formas de resolver este rompecabezas!'
        courseC_maze_programming6_b: Recuerde girar primero antes de moverse, ya que el pájaro comienza a mirar hacia la pared.
        courseC_maze_programming6_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseE_maze_ramp6_2018_authored_hint:
        courseC_maze_programming6_a: '¡Hay dos formas de resolver este rompecabezas!'
        courseC_maze_programming6_b: Recuerde girar primero antes de moverse, ya que el pájaro comienza a mirar hacia la pared.
        courseC_maze_programming6_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseE_maze_ramp7_authored_hint:
        courseD_maze_ramp7_b: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseD_maze_ramp7_a: Usa bloques repetidos para ejecutar un solo bloque o un fragmento de código uno y otra vez.
        courseD_maze_ramp7_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseE_maze_ramp7_2018_authored_hint:
        courseD_maze_ramp7_b: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseD_maze_ramp7_a: Usa bloques de repetición para ejecutar un solo bloque o un fragmento de código una y otra vez.
        courseD_maze_ramp7_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseE_maze_ramp_predict1_authored_hint: [ ]
      courseE_multi_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
      courseE_playLab_challenge1_authored_hint:
        courseE_playLab_challenge1_a: |-
          Aquí hay algunas cosas que podría hacer cuando el jugador gana el juego: * Hacer que el dinosaurio desaparezca. * Detener las ardillas. * Haz felices a las ardillas y al caballero. * Establecer un nuevo fondo. * Haz que el caballero agradezca al jugador por ayudar. * Haz desaparecer a todos los actores y muestra un "¡Tu ganas!" mensaje.
        courseE_playLab_challenge1_b: |-
          Aquí hay algunas cosas que podrías hacer cuando el jugador pierda el juego: * Haz que el caballero desaparezca. * Haz tristes a las ardillas. * Haz que el dinosaurio diga algo. * Establecer un nuevo fondo. * Haz desaparecer a todos los actores y muestra un mensaje de "Game Over".
      courseE_playLab_challenge1_2018_authored_hint:
        courseE_playLab_challenge1_a: |-
          Aquí hay algunas cosas que podría hacer cuando el jugador gana el juego: * Hacer que el dinosaurio desaparezca. * Detener las ardillas. * Haz felices a las ardillas y al caballero. * Establecer un nuevo fondo. * Haz que el caballero agradezca al jugador por ayudar. * Haz desaparecer a todos los actores y muestra un "¡Tu ganas!" mensaje.
        courseE_playLab_challenge1_b: |-
          Aquí hay algunas cosas que podrías hacer cuando el jugador pierda el juego: * Haz que el caballero desaparezca. * Haz tristes a las ardillas. * Haz que el dinosaurio diga algo. * Establecer un nuevo fondo. * Haz desaparecer a todos los actores y muestra un mensaje de "Game Over".
      courseE_playLab_embed_scaffold5_authored_hint: [ ]
      courseE_playLab_scaffold1_authored_hint:
        courseE_playLab_scaffold1_a: El 'set actor 1 ??? imagen 'bloque puede usarse para agregar actor al escenario.
        courseE_playLab_scaffold1_b: Coloque el bloque de 'actor' de 'debajo del' cuando 'para que su agente aparezca al principio del programa.
        courseE_playLab_scaffold1_c: Use ` set ´ Fondo para elegir un fondo para tu escena.
      courseE_playLab_scaffold1_2018_authored_hint:
        courseE_playLab_scaffold1_a: El 'set actor 1 ??? imagen 'bloque puede usarse para agregar actor al escenario.
        courseE_playLab_scaffold1_b: Coloque el bloque de 'actor' de 'debajo del' cuando 'para que su agente aparezca al principio del programa.
        courseE_playLab_scaffold1_c: Use ` set ´ Fondo para elegir un fondo para tu escena.
      courseE_playLab_scaffold2_authored_hint:
        courseE_playLab_scaffold1_a: Tirar en el menú desplegable de la 'cuando ___ flecha' evento para cambiar la dirección de los controles de bloqueo.
        courseE_playLab_scaffold1_b: Debe tener cuatro 'cuando flecha' bloques de eventos, con una dirección para abrir debajo de cada uno.
        courseE_playLab_scaffold1_c: Cuando hayas terminado, ¡podrás mover a tu héroe con las teclas de flecha!
      courseE_playLab_scaffold2_2018_authored_hint:
        courseE_playLab_scaffold1_a: Tirar en el menú desplegable de la 'cuando ___ flecha' evento para cambiar la dirección de los controles de bloqueo.
        courseE_playLab_scaffold1_b: Debe tener cuatro 'cuando flecha' bloques de eventos, con una dirección para abrir debajo de cada uno.
        courseE_playLab_scaffold1_c: Cuando hayas terminado, ¡podrás mover a tu héroe con las teclas de flecha!
      courseE_playLab_scaffold3_authored_hint: [ ]
      courseE_playLab_scaffold3_2018_authored_hint: [ ]
      courseE_playLab_scaffold4_authored_hint:
        courseE_playLab_scaffold4_a: Use `score point` para agregar un punto, y` remove point` para restar uno.
      courseE_playLab_scaffold4_2018_authored_hint:
        courseE_playLab_scaffold4_a: Use `score point` para agregar un punto, y` remove point` para restar uno.
      courseE_playLab_scaffold5_authored_hint:
        courseE_playLab_scaffold5_a: Para finalizar este nivel, debes ganar o perder. Utilizar un `final del juego como win` o 'final del juego como loss` bloque hasta el final.
      courseE_playLab_scaffold5_2018_authored_hint:
        courseE_playLab_scaffold5_a: Para finalizar este nivel, debes ganar o perder. Utilizar un `final del juego como win` o 'final del juego como loss` bloque hasta el final.
      courseE_playlab_challenge2_authored_hint:
        courseE_playlab_challenge2_a: |-
          El actor sabe qué decir en función de su estado de ánimo. Intenta jugar con las cosas que la bruja podría decir.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">¡ Concéntrate y pregunta de nuevo!</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block></xml>
        courseE_playlab_challenge2_b: "Se sentirá como si el juego comienza de si se llama al pedir a un `question` función de nuevo por debajo de la lista de los condicionales.\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n               \n<block type=\"procedures_callnoreturn\">\n<mutation name=\"Ask a question\"></mutation>\n        </block></block></xml>"
        courseE_playlab_challenge2_c: "Tendrá que agregar más declaraciones condicionales para dar a los actores más cosas que decir.\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n              </statement></block></xml>!"
        courseE_playlab_challenge2_d: |-
          Una vez que entienda todo el código que se refiere al Actor 1, puede tratar de volver a escribir el mismo código, pero esta vez para el Actor 2. ¡No te olvides de cambiar las instrucciones dentro del bloque de 'Mostrar pantalla de título' por lo que todavía tengo sentido!
        courseE_playlab_challenge2_e: |-
          Cuando todo esté terminado, deberias poder hacer clic en cualquier actor y obtener hasta 8 mensajes diferentes. ¿Es posible expandirlo aún más?
          
          ¡Haz que un amigo pruebe tu apliación cuando termines!
      courseE_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          El actor sabe que decir porque revisa el valor actual de la variable ´fortuna´.
          
          <xml><block type="variables_set" inline="false">
          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          Parecera que el juego empieza de nuevo si llamas a la función 'haz una pregunta' despues de que el actor dice la fortuna.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">fortune</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "Tendrás que agregar más declaraciones condicionales para dar a los actores más cosas que decir.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n              \nNo olvides cambiar los humores que mostrarán los actores dentro del ciclo ´repetir para siempre´. ¡También puedes determinar los humores al azar!"
        courseF_playlab_variables_challenge3_d: |-
          Una vez que entiendas todo el código que se refiere al Actor 1, puedes tratar de volver a escribir el mismo código, pero esta vez para el Actor 2. ¡No te olvides de cambiar las instrucciones dentro del bloque de 'Mostrar pantalla de título' para que tengan sentido!
        courseF_playlab_variables_challenge3_e: |-
          Cuando todo esté terminado, deberias poder hacer clic en cualquier actor y obtener hasta 8 mensajes diferentes. ¿Es posible expandirlo aún más?
          
          ¡Haz que un amigo pruebe tu apliación cuando termines!
      courseF_IceAge_1_authored_hint:
        iceage_hello1_a: You only need to add one block to solve this puzzle.  Drag the `actor 1 say` block out from the toolbar and connect it to the `when run` event block that is already in the workspace. Next, type "Hello!" inside.
      courseF_IceAge_10_authored_hint:
        iceage_throw_hearts_a: When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!
        iceage_throw_hearts_b: To get granny to be happy when she receives a heart, you will need to connect the `set actor 2 mood to happy` block beneath the `when actor 2 touches projectile` event.
      courseF_IceAge_11_authored_hint:
        iceage_free_play_a: 'Can you make Sid and Manny have an Ice Crystal fight?  '
        iceage_free_play_b: Make Granny chase Diego.  End the game as a win if she catches him.
        iceage_free_play_c: Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.
      courseF_IceAge_2_authored_hint:
        iceage_hello2_a: 'To solve this puzzle, you will need to have Sid say something using the `actor 1 say` block.  You will also need to have Manny say something with the `actor 2 say` block. '
      courseF_IceAge_3_authored_hint:
        iceage_hello3_a: Use the `move actor 1 right by 200 pixels` block to solve this puzzle.
      courseF_IceAge_4_authored_hint:
        iceage_move_to_actor_a: For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.
        iceage_move_to_actor_b: Connect the `play ___ sound` block to the `when actor 1 touches actor 2` event to finish this challenge.
      courseF_IceAge_5_authored_hint:
        iceage_repeat_a: Use both the `move actor 1 left` and `move actor 1 right` blocks to solve this puzzle.
      courseF_IceAge_6_authored_hint:
        iceage_click_hello_a: Add one or more `actor 1 say` blocks to the `when clicked` event to complete this puzzle.
      courseF_IceAge_7_authored_hint:
        iceage_move_events_a: 'Each of the `when ___ arrow` events will need to have a different `move actor 1` command connected to it to solve this puzzle. '
      courseF_IceAge_8_authored_hint:
        iceage_sound_and_points_a: You will need to add two blocks beneath the `when actor 1 touches actor 2` event.
        iceage_sound_and_points_b: You will need both the `score a point` block and the 'play ____ sound` block to pass this level.
      courseF_IceAge_9_authored_hint:
        iceage_warn_ice_age_a: 'You should only have to add two blocks to get this puzzle where it needs to be. '
        iceage_warn_ice_age_b: Add both new blocks beneath the `when run` event to have them happen immediately after the program starts.
      courseF_IceAge_template_authored_hint: [ ]
      courseF_artist_embed_for7_authored_hint: [ ]
      courseF_artist_for1_authored_hint:
        courseF_artist_for1_a: |-
          Can you draw something like this:
          
          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for10_authored_hint:
        courseF_artist_for10_a: The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.
        courseF_artist_for10_b: The image in the drawing uses a turn of 61 degrees.
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for10_2018_authored_hint:
        courseF_artist_for10_a: The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.
        courseF_artist_for10_b: The image in the drawing uses a turn of 61 degrees.
        courseF_artist_for10_c: |-
          Want to know how the sample image was done?
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for10_predict1_authored_hint: [ ]
      courseF_artist_for10_predict1_2018_authored_hint: [ ]
      courseF_artist_for1_2018_authored_hint:
        courseF_artist_for1_a: |-
          Can you draw something like this:
          
          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for2_authored_hint:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.
          
          <xml><block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: Remember to count by 10 within your for loop.
        courseF_artist_for2_c: |-
          This is the pattern that the Artist will follow:
          
          ![](https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif)
      courseF_artist_for2_2018_authored_hint:
        courseF_artist_for2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.
          
          <xml><block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: Remember to count by 10 within your for loop.
        courseF_artist_for2_c: |-
          This is the pattern that the Artist will follow:
          
          ![](https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif)
      courseF_artist_for3_authored_hint:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.
          
          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseF_artist_for3_2018_authored_hint:
        courseF_artist_for3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.
          
          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseF_artist_for4_authored_hint:
        courseF_artist_for4_a: "** ¿Cuál es el número más pequeño que necesitarás?\n¿Cuál es el número más grande?\n¿Qué tan grande es el aumento en cada ocasión? **\n\nEsas son las preguntas que debe realizar para completar los espacios en blanco del ciclo `for`."
        courseF_artist_for4_b: Your code will be very similar to what you wrote in the last puzzle, but remember to draw a square this time!
        courseF_artist_for4_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseF_artist_for4_2018_authored_hint:
        courseF_artist_for4_a: "** ¿Cuál es el número más pequeño que necesitarás?\n¿Cuál es el número más grande?\n¿Qué tan grande es el aumento en cada ocasión? **\n\nEsas son las preguntas que debe realizar para completar los espacios en blanco del ciclo `for`."
        courseF_artist_for4_b: Your code will be very similar to what you wrote in the last puzzle, but remember to draw a square this time!
        courseF_artist_for4_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseF_artist_for5_authored_hint:
        courseF_artist_for5_a: You don't need the `repeat` loop inside when making this spiral!
        courseF_artist_for5_b: Your `for` loop, move, and turn blocks can stay exactly the same.
      courseF_artist_for5_2018_authored_hint:
        courseF_artist_for5_a: You don't need the `repeat` loop inside when making this spiral!
        courseF_artist_for5_b: Your `for` loop, move, and turn blocks can stay exactly the same.
      courseF_artist_for6_authored_hint:
        courseF_artist_for6_a: Your `for` loop will count from 15 to 300 by 15.
        courseF_artist_for6_b: Put a `move forward` and a `turn` block within this `for` loop.
        courseF_artist_for6_c: All you have to change is the number of degrees in the `turn` block.
      courseF_artist_for6_2018_authored_hint:
        courseF_artist_for6_a: Your `for` loop will count from 15 to 300 by 15.
        courseF_artist_for6_b: Put a `move forward` and a `turn` block within this `for` loop.
        courseF_artist_for6_c: All you have to change is the number of degrees in the `turn` block.
      courseF_artist_for7_authored_hint:
        courseF_artist_for7_a: The pen is thinner in this puzzle. You will need to set it to `1` before you start.
        courseF_artist_for7_b: Notice that this spiral turns right instead of left!
        courseF_artist_for7_c: The `for` loop in this puzzle goes from 15 to 300 by 2.
        courseF_artist_for7_d: This image is made by turning just 89 degrees.
      courseF_artist_for7_2018_authored_hint:
        courseF_artist_for7_a: The pen is thinner in this puzzle. You will need to set it to `1` before you start.
        courseF_artist_for7_b: Notice that this spiral turns right instead of left!
        courseF_artist_for7_c: The `for` loop in this puzzle goes from 15 to 300 by 2.
        courseF_artist_for7_d: This image is made by turning just 89 degrees.
      courseF_artist_for8_authored_hint:
        courseF_artist_for8_a: Keep everything else the same in your code, only the turn angle needs to change.
        courseF_artist_for8_b: If you want, you can choose a different color for your spiral!
      courseF_artist_for8_2018_authored_hint:
        courseF_artist_for8_a: Keep everything else the same in your code, only the turn angle needs to change.
        courseF_artist_for8_b: If you want, you can choose a different color for your spiral!
      courseF_artist_for9_authored_hint:
        courseF_artist_for9_a: If you put the `set alpha` block inside of your `for` loop, and use the `counter` variable to change it, you can create a design like this.
        courseF_artist_for9_b: The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is.
      courseF_artist_for9_2018_authored_hint:
        courseF_artist_for9_a: If you put the `set alpha` block inside of your `for` loop, and use the `counter` variable to change it, you can create a design like this.
        courseF_artist_for9_b: The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is.
      courseF_artist_for_challenge1_authored_hint:
        courseF_artist_for_challenge1_a: El `ancho del lápiz 'es 1. El primer cuadrado tiene 50 lados de píxeles, y cada cuadrado es 50 píxeles más ancho que el anterior.
        courseF_artist_for_challenge1_b: La opacidad en el pincel siempre es `contador` / 2.
        courseF_artist_for_challenge1_c: Después de hacer cada cuadrado, no te olvides de saltar hacia atrás, girar, saltar de nuevo, ¡y luego retroceder!
        courseF_artist_for_challenge1_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018_authored_hint:
        courseF_artist_for_challenge1_a: El `ancho del lápiz 'es 1. El primer cuadrado tiene 50 lados de píxeles, y cada cuadrado es 50 píxeles más ancho que el anterior.
        courseF_artist_for_challenge1_b: La opacidad en el pincel siempre es `contador` / 2.
        courseF_artist_for_challenge1_c: Después de hacer cada cuadrado, no te olvides de saltar hacia atrás, girar, saltar de nuevo, ¡y luego retroceder!
        courseF_artist_for_challenge1_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2_authored_hint:
        courseF_artist_for_challenge2_c: 'El ciclo For va de 5 a 250 por 2. '
        courseF_artist_for_challenge2_a: El cambio de color se presenta con el bloque 'definir color con rojo, verde, azul'. Rojo es la constante definida como 255, verde es siempre el valor de 'contador', y azul es siempre '255-contador'.
        courseF_artist_for_challenge2_b: The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.
        courseF_artist_for_challenge2_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
          
          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_for_challenge2_2018_authored_hint:
        courseF_artist_for_challenge2_c: 'El ciclo For va de 5 a 250 por 2. '
        courseF_artist_for_challenge2_a: El cambio de color se presenta con el bloque 'definir color con rojo, verde, azul'. Rojo es la constante definida como 255, verde es siempre el valor de 'contador', y azul es siempre '255-contador'.
        courseF_artist_for_challenge2_b: The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.
        courseF_artist_for_challenge2_d: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
          
          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_fwp1_authored_hint:
        courseF_artist_fwp1_c: Put all of the code for drawing a square inside the function editor.
        courseF_artist_fwp1_a: Remember, you need to turn 90 degrees to draw a square.
        courseF_artist_fwp1_b: You only need to repeat as many times as the number of sides in a square.
      courseF_artist_fwp1_2018_authored_hint:
        courseF_artist_fwp1_c: Put all of the code for drawing a square inside the function editor.
        courseF_artist_fwp1_a: Remember, you need to turn 90 degrees to draw a square.
        courseF_artist_fwp1_b: You only need to repeat as many times as the number of sides in a square.
      courseF_artist_fwp2_authored_hint:
        courseF_artist_fwp2_a: You need to click the "edit" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!
        courseF_artist_fwp2_b: When calling your function, use a `for loop` for the best possible code!
      courseF_artist_fwp2_2018_authored_hint:
        courseF_artist_fwp2_a: You need to click the "edit" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!
        courseF_artist_fwp2_b: When calling your function, use a `for loop` for the best possible code!
      courseF_artist_fwp2_predict1_authored_hint: [ ]
      courseF_artist_fwp2_predict1_2018_authored_hint: [ ]
      courseF_artist_fwp3_authored_hint:
        courseF_artist_fwp3_a: This gets easier if you put it all in a `for` loop.
        courseF_artist_fwp3_b: |-
          Be sure to turn 90 degrees between each square!
          
          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp3_2018_authored_hint:
        courseF_artist_fwp3_a: This gets easier if you put it all in a `for` loop.
        courseF_artist_fwp3_b: |-
          Be sure to turn 90 degrees between each square!
          
          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp4_authored_hint:
        courseF_artist_fwp4_b: Remember to **add** a parameter.  Don't remove the one that is already there!
        courseF_artist_fwp4_c: You will need to call your function three times to draw the shapes.
      courseF_artist_fwp4_2018_authored_hint:
        courseF_artist_fwp4_b: Remember to **add** a parameter.  Don't remove the one that is already there!
        courseF_artist_fwp4_c: You will need to call your function three times to draw the shapes.
      courseF_artist_fwp5_authored_hint:
        courseF_artist_fwp5_d: A `for` loop would really help you out here!
        courseF_artist_fwp5_c: You will need to edit the function a little bit, since your previous function turned the artist to the right after each side, and this image needs a turn to the left.
        courseF_artist_fwp5_a: The length of sides for each shape is 7 times the number of sides it has.
        courseF_artist_fwp5_b: Don't forget to jump 100 pixels between shapes.
      courseF_artist_fwp5_2018_authored_hint:
        courseF_artist_fwp5_d: A `for` loop would really help you out here!
        courseF_artist_fwp5_c: You will need to edit the function a little bit, since your previous function turned the artist to the right after each side, and this image needs a turn to the left.
        courseF_artist_fwp5_a: The length of sides for each shape is 7 times the number of sides it has.
        courseF_artist_fwp5_b: Don't forget to jump 100 pixels between shapes.
      courseF_artist_fwp6_authored_hint:
        courseF_artist_fwp6_a: It's okay to run the program a few times to figure out how the function works with different parameters.
        courseF_artist_fwp6_b: You don't need to add any `move` or `turn` blocks to finish this code.
      courseF_artist_fwp6_2018_authored_hint:
        courseF_artist_fwp6_a: It's okay to run the program a few times to figure out how the function works with different parameters.
        courseF_artist_fwp6_b: You don't need to add any `move` or `turn` blocks to finish this code.
      courseF_artist_fwp7_authored_hint:
        courseF_artist_fwp7_a: Feeling lost after trying a couple of ideas? Try clicking the "Start over" button in the upper right-hand corner.
        courseF_artist_fwp7_b: Your new `min` variable should go in the first slot in your `for` loop, inside the function.
      courseF_artist_fwp7_2018_authored_hint:
        courseF_artist_fwp7_a: Feeling lost after trying a couple of ideas? Try clicking the "Start over" button in the upper right-hand corner.
        courseF_artist_fwp7_b: Your new `min` variable should go in the first slot in your `for` loop, inside the function.
      courseF_artist_fwp8_authored_hint:
        courseF_artist_fwp8_a: If your function is correct, you shouldn't need to change it for this puzzle.
        courseF_artist_fwp8_b: The only thing you should need to do between function calls is change the color of the line.
      courseF_artist_fwp8_2018_authored_hint:
        courseF_artist_fwp8_a: If your function is correct, you shouldn't need to change it for this puzzle.
        courseF_artist_fwp8_b: The only thing you should need to do between function calls is change the color of the line.
      courseF_artist_fwp9_authored_hint:
        courseF_artist_fwp9_a: |-
          Try one of these drawings.
          ![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)
      courseF_artist_fwp9_2018_authored_hint:
        courseF_artist_fwp9_a: |-
          Try one of these drawings.
          ![](https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png)
      courseF_artist_fwp_challenge1_authored_hint:
        courseF_artist_fwp_challenge1_b: This is a series of polygons with sides that are counter pixels long.
        courseF_artist_fwp_challenge1_c: Each polygon is called from inside a for loop that goes from 3 down to 6 by an increment of 1. What shapes is it making?
      courseF_artist_fwp_challenge1_2018_authored_hint:
        courseF_artist_fwp_challenge1_b: This is a series of polygons with sides that are counter pixels long.
        courseF_artist_fwp_challenge1_c: Each polygon is called from inside a for loop that goes from 3 down to 6 by an increment of 1. What shapes is it making?
      courseF_artist_fwp_challenge2_authored_hint:
        courseF_artist_fwp_challenge1_a: "! [] (https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'Esta es una serie de octógonos con lados que son ''contador'' píxeles de largo. '
        courseF_artist_fwp_challenge1_c: 'Cada octágono se llama desde dentro de un ciclo for que va desde 200 hasta 2 por 2. '
        courseF_artist_fwp_challenge1_d: 'No olvides dar vuelta por 22.5 grados al final de cada iteración. '
        courseF_artist_fwp_challenge1_e: Tanto el color de cada octágono como el ancho del lápiz están controlados por la variable `contador '.
        courseF_artist_fwp_challenge1_f: |-
          **Solution:**
          
          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_fwp_challenge2_2018_authored_hint:
        courseF_artist_fwp_challenge1_a: "! [] (https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'Esta es una serie de octógonos con lados que son ''contador'' píxeles de largo. '
        courseF_artist_fwp_challenge1_c: 'Cada octágono se llama desde dentro de un ciclo for que va desde 200 hasta 2 por 2. '
        courseF_artist_fwp_challenge1_d: 'No olvides dar vuelta por 22.5 grados al final de cada iteración. '
        courseF_artist_fwp_challenge1_e: Tanto el color de cada octágono como el ancho del lápiz están controlados por la variable `contador '.
        courseF_artist_fwp_challenge1_f: |-
          **Solution:**
          
          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_predict1_authored_hint: [ ]
      courseF_artist_predict1_2018_authored_hint: [ ]
      courseF_artist_ramp10_authored_hint:
        courseF_artist_ramp10_a: No olvide girar 60 grados después de cada triángulo. ¿Qué ciclo necesitas para poner esa instrucción adentro?
        courseF_artist_ramp10_b: If your code for a triangle is in a <xml><block type="controls_repeat"><title name="TIMES">6</title></block></xml> loop, this task will be a lot simpler.
        courseF_artist_ramp10_c: |-
          You will draw six triangles in total for this design:
          
          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseF_artist_ramp10_2018_authored_hint:
        courseF_artist_ramp10_a: No olvide girar 60 grados después de cada triángulo. ¿Qué ciclo necesitas para poner esa instrucción adentro?
        courseF_artist_ramp10_b: If your code for a triangle is in a <xml><block type="controls_repeat"><title name="TIMES">6</title></block></xml> loop, this task will be a lot simpler.
        courseF_artist_ramp10_c: |-
          You will draw six triangles in total for this design:
          
          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseF_artist_ramp8_authored_hint:
        courseF_artist_ramp8_a: To draw a side, use the <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">100</title></block></xml> block, and change the 100 to a 200.
        courseF_artist_ramp8_b: |-
          To draw 4 sides, put the <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">200</title></block></xml> block inside of a repeat loop and make sure the loop is set to draw 4 times.
          
          Don't forget to turn afterward!
        courseF_artist_ramp8_c: Your turn will also go inside of the <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop.
      courseF_artist_ramp8_2018_authored_hint:
        courseF_artist_ramp8_a: To draw a side, use the <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">100</title></block></xml> block, and change the 100 to a 200.
        courseF_artist_ramp8_b: |-
          To draw 4 sides, put the <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">200</title></block></xml> block inside of a repeat loop and make sure the loop is set to draw 4 times.
          
          Don't forget to turn afterward!
        courseF_artist_ramp8_c: Your turn will also go inside of the <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop.
      courseF_artist_ramp9_authored_hint:
        courseF_artist_ramp9_a: '¿Cómo es esto similar a un cuadrado? ¿Como es diferente?'
        courseF_artist_ramp9_b: You can use the drop down menu on the turn blocks to see which angle you need!
        courseF_artist_ramp9_c: You will want to move forward 100 pixels, then turn right 120 degrees for each side. Can you use a <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop to make your code shorter?
      courseF_artist_ramp9_2018_authored_hint:
        courseF_artist_ramp9_a: '¿Cómo es esto similar a un cuadrado? ¿Como es diferente?'
        courseF_artist_ramp9_b: You can use the drop down menu on the turn blocks to see which angle you need!
        courseF_artist_ramp9_c: You will want to move forward 100 pixels, then turn right 120 degrees for each side. Can you use a <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop to make your code shorter?
      courseF_artist_variables10_authored_hint:
        courseF_artist_variables10_a: Have fun with this level! See what little changes can do to your code.
        courseF_artist_variables10_b: You can try multiple things, and run your code multiple times.
      courseF_artist_variables10_2018_authored_hint:
        courseF_artist_variables10_a: Have fun with this level! See what little changes can do to your code.
        courseF_artist_variables10_b: You can try multiple things, and run your code multiple times.
      courseF_artist_variables2_authored_hint:
        courseF_artist_variables2_a: Remember to move forward after drawing each triangle.
        courseF_artist_variables2_b: Your new loop will contain the loop for your triangle, then a `move forward` command.
      courseF_artist_variables2_2018_authored_hint:
        courseF_artist_variables2_a: Remember to move forward after drawing each triangle.
        courseF_artist_variables2_b: Your new loop will contain the loop for your triangle, then a `move forward` command.
      courseF_artist_variables3_authored_hint:
        courseF_artist_variables3_a: 'The variable `length` will be used in two places in your code: In the side length of your triangle, and in the amount you move forward between triangles.'
        courseF_artist_variables3_b: 'A number block with value 50 should only be in one place: after the `set variable length` block.'
      courseF_artist_variables3_2018_authored_hint:
        courseF_artist_variables3_a: 'The variable `length` will be used in two places in your code: In the side length of your triangle, and in the amount you move forward between triangles.'
        courseF_artist_variables3_b: 'A number block with value 50 should only be in one place: after the `set variable length` block.'
      courseF_artist_variables4_authored_hint:
        courseF_artist_variables4_a: Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.
        courseF_artist_variables4_c: |-
          This is the pattern your artist will be following:
          
          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables4_2018_authored_hint:
        courseF_artist_variables4_a: Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.
        courseF_artist_variables4_c: |-
          This is the pattern your artist will be following:
          
          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables5_authored_hint:
        courseF_artist_variables5_a: The second half of your code should look almost the same as the first half, except you will be turning *left*, jumping, then turning *right*.
        courseF_artist_variables5_b: La primera mitad de tu código dibujará tres triángulos, y la segunda mitad dibujará los otros tres.
        courseF_artist_variables5_c: Comienza por duplicar el código en la primera mitad de su programa, luego modifícalo para que se muestre el diseño.
        courseF_artist_variables5_d: |-
          This is the pattern your artist will follow:
          
          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2018_authored_hint:
        courseF_artist_variables5_a: The second half of your code should look almost the same as the first half, except you will be turning *left*, jumping, then turning *right*.
        courseF_artist_variables5_b: La primera mitad de tu código dibujará tres triángulos, y la segunda mitad dibujará los otros tres.
        courseF_artist_variables5_c: Comienza por duplicar el código en la primera mitad de su programa, luego modifícalo para que se muestre el diseño.
        courseF_artist_variables5_d: |-
          This is the pattern your artist will follow:
          
          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables6_authored_hint:
        courseF_artist_variables6_a: Thanks to variables, you only need to change one number at the top to make this work.
        courseF_artist_variables6_b: Deberás editar el bloque numérico con el valor 50, pero no se debe alterar más nada en el código.
      courseF_artist_variables6_2018_authored_hint:
        courseF_artist_variables6_a: Thanks to variables, you only need to change one number at the top to make this work.
        courseF_artist_variables6_b: Deberás editar el bloque numérico con el valor 50, pero no se debe alterar más nada en el código.
      courseF_artist_variables6a_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: '¡Este código será muy similar al código de tu triángulo, solo que con una forma diferente!'
        courseF_artist_variables6a_c: Primero escribe el código de un cuadrado, luego agrega el código para moverte entre los cuadrados. Finalmente, agrega un bucle alrededor de todo!
        courseF_artist_variables6a_d: |-
          This is the pattern you'll follow!
          
          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2018_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead of an actual number to solve this puzzle.
        courseF_artist_variables6a_b: '¡Este código será muy similar al código de tu triángulo, solo que con una forma diferente!'
        courseF_artist_variables6a_c: Primero escribe el código de un cuadrado, luego agrega el código para moverte entre los cuadrados. Finalmente, agrega un bucle alrededor de todo!
        courseF_artist_variables6a_d: |-
          This is the pattern you'll follow!
          
          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables7_authored_hint:
        courseF_artist_variables7_a: Start your code by using the `set length` block. Set the length variable to 150.
        courseF_artist_variables7_b: You can use a `repeat` loop to make your code for the triangle simpler.
        courseF_artist_variables7_c: You will want to turn left 120 degrees to make the corners of the triangle.
      courseF_artist_variables7_2018_authored_hint:
        courseF_artist_variables7_a: Start your code by using the `set length` block. Set the length variable to 150.
        courseF_artist_variables7_b: You can use a `repeat` loop to make your code for the triangle simpler.
        courseF_artist_variables7_c: You will want to turn left 120 degrees to make the corners of the triangle.
      courseF_artist_variables8_authored_hint:
        courseF_artist_variables8_b: Remember to start your code for the triangle with the `set length` block, and start it at 150 pixels.
        courseF_artist_variables8_c: Make sure to use the `repeat` loop to draw your triangle.
        courseF_artist_variables8_a: "Try putting the set of \n\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks inside your loop at the end.\n"
      courseF_artist_variables8_2018_authored_hint:
        courseF_artist_variables8_b: Remember to start your code for the triangle with the `set length` block, and start it at 150 pixels.
        courseF_artist_variables8_c: Make sure to use the `repeat` loop to draw your triangle.
        courseF_artist_variables8_a: "Try putting the set of \n\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\nblocks inside your loop at the end.\n"
      courseF_artist_variables9_authored_hint:
        courseF_artist_variables9_a: For this puzzle, all you need to do is change how many times the loop repeats.
        courseF_artist_variables9_b: Make sure the blocks that increment `length` are within your loop so the lines keep getting longer.
      courseF_artist_variables9_2018_authored_hint:
        courseF_artist_variables9_a: For this puzzle, all you need to do is change how many times the loop repeats.
        courseF_artist_variables9_b: Make sure the blocks that increment `length` are within your loop so the lines keep getting longer.
      courseF_artist_variablesFP_authored_hint:
        courseF_artist_variablesFP_a: |-
          Try one of these three drawings.
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variablesFP_2018_authored_hint:
        courseF_artist_variablesFP_a: |-
          Try one of these three drawings.
          ![](https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png)
      courseF_artist_variables_4_authored_hint:
        courseF_artist_variables_4_a: Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to move down, then turn him back to get ready to move forward again.
        courseF_artist_variables_4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables_6_authored_hint:
        courseF_artist_variables_6_a: Thanks to variables, you only need to change one number at the top to make this work.
      courseF_artist_variables_6a_authored_hint:
        courseF_artist_variables6a_a: Remember to use the variable `length` instead of an actual number to solve this puzzle.
      courseF_artist_variables_8_authored_hint:
        courseF_artist_variables_8_a: 'Try putting the set of ![](https://images.code.org/6525bebee31ee15b84a48761b2866f53-image-1477531948829.31.37.png) blocks inside your loop at the end.  '
      courseF_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_a: Each vertical line has a length of `10`. Each horizontal line should have a length of `length`.
        courseF_artist_variables_challenge1_b: You will want to increase the value of `length` by 10 **twice** inside the loop.
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberá girar a la izquierda dos veces, girar a la derecha dos veces y avanzar un total de cuatro veces.
        courseF_artist_variables_challenge1_d: |-
          This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.
          
          ![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)
          
          If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1_2018_authored_hint:
        courseF_artist_variables_challenge1_a: Each vertical line has a length of `10`. Each horizontal line should have a length of `length`.
        courseF_artist_variables_challenge1_b: You will want to increase the value of `length` by 10 **twice** inside the loop.
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberá girar a la izquierda dos veces, girar a la derecha dos veces y avanzar un total de cuatro veces.
        courseF_artist_variables_challenge1_d: |-
          This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.
          
          ![](https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png)
          
          If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.
        courseF_artist_variables_challenge1_e: |-
          Here is the solution.
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1a_authored_hint:
        courseF_artist_variables_challenge1_a: 'Las variables son útiles porque puede agregarlas cada vez, a través de un ciclo. '
        courseF_artist_variables_challenge1_b: Este rompecabezas tiene un ciclo que crea el polígono, un bucle que repite el polígono " lados " veces, luego otro ciclo que lo hace todo de nuevo después de agregar 5 a " lados ".
        courseF_artist_variables_challenge1_c: Usando una variable para 'lados' y una para 'longitud' se tiene un código más limpio que usted puede reutiliza en repetidas ocasiones, en vez de crear una nueva copia para cada conjunto de números.
        courseF_artist_variables_challenge1_d: |-
          **Solution:**
          
          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: Las variables son útiles ya que usted puede sumarlas cada vez mediante un lazo. 
        courseF_artist_variables_challenge2_c: Usar una variable para 'lados' y una para 'longitud' hace al código más limpio ya que usted puede reutilizar el mismo código múltiples veces, en vez de crear una nueva copia para cada conjunto de números.
        courseF_artist_variables_challenge2_d: |-
          **Solution:**
          
          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018_authored_hint:
        courseF_artist_variables_challenge2_a: Las variables son útiles ya que usted puede sumarlas cada vez mediante un lazo. 
        courseF_artist_variables_challenge2_c: Usar una variable para 'lados' y una para 'longitud' hace al código más limpio ya que usted puede reutilizar el mismo código múltiples veces, en vez de crear una nueva copia para cada conjunto de números.
        courseF_artist_variables_challenge2_d: |-
          **Solution:**
          
          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_bee_conditionals10_authored_hint:
        courseF_bee_conditionals10_a: Imagine there is a cloud in every spot. Does this help simplify your code?
        courseF_bee_conditionals10_b: Use an `if/else` block to check every space for nectar or honey.
        courseF_bee_conditionals10_c: Could a `while` loop help get to the end of this path?
      courseF_bee_conditionals10_2018_authored_hint:
        courseF_bee_conditionals10_a: Imagine there is a cloud in every spot. Does this help simplify your code?
        courseF_bee_conditionals10_b: Use an `if/else` block to check every space for nectar or honey.
        courseF_bee_conditionals10_c: Could a `while` loop help get to the end of this path?
      courseF_bee_conditionals1_predict1_authored_hint: [ ]
      courseF_bee_conditionals1_predict1_2018_authored_hint: [ ]
      courseF_bee_conditionals2_authored_hint:
        courseF_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si quieres que tu código se ejecute en ambos casos, asegúrate de utilizar un ` si ` comunicado.
        courseF_bee_conditionals2_b: Try writing the sequence to get you to all of the spaces, then add the `if` statement.
      courseF_bee_conditionals2_2018_authored_hint:
        courseF_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si quieres que tu código se ejecute en ambos casos, asegúrate de utilizar un ` si ` comunicado.
        courseF_bee_conditionals2_b: Try writing the sequence to get you to all of the spaces, then add the `if` statement.
      courseF_bee_conditionals3_authored_hint:
        courseF_bee_conditionals3_a: Asegúrese de utilizar un ` si ' declaración para comprobar cada espacio para ver si tiene ya sea una flor o nada.
        courseF_bee_conditionals3_b: A `repeat` loop will be useful so you only have to use one `if` block.
        courseF_bee_conditionals3_c: Try writing code to check the first cloud. Can you loop this to check all of them?
      courseF_bee_conditionals3_2018_authored_hint:
        courseF_bee_conditionals3_a: Asegúrese de utilizar un ` si ' declaración para comprobar cada espacio para ver si tiene ya sea una flor o nada.
        courseF_bee_conditionals3_b: A `repeat` loop will be useful so you only have to use one `if` block.
        courseF_bee_conditionals3_c: Try writing code to check the first cloud. Can you loop this to check all of them?
      courseF_bee_conditionals4_authored_hint:
        courseD_bee_conditionals4_a: Todavía puede tratar cada espacio como si hubiera una nube sobre él, aunque puede ver todo el camino.
        courseF_bee_conditionals4_b: 'Utilizar una declaración` si '' dentro de su ciclo para comprobar cada espacio de néctar. '
        courseF_bee_conditionals4_c: Using the block `while there is a path ahead`, you should `move forward` and check for a flower. `if there is a flower` what should the bee do?
      courseF_bee_conditionals4_2018_authored_hint:
        courseD_bee_conditionals4_a: Todavía puede tratar cada espacio como si hubiera una nube sobre él, aunque puede ver todo el camino.
        courseF_bee_conditionals4_b: 'Utilizar una declaración` si '' dentro de su ciclo para comprobar cada espacio de néctar. '
        courseF_bee_conditionals4_c: Using the block `while there is a path ahead`, you should `move forward` and check for a flower. `if there is a flower` what should the bee do?
      courseF_bee_conditionals5_authored_hint:
        courseF_bee_conditionals5_a: Think of every side of the rectangular path as a path by itself. Set up a nested loop with a `repeat` block on the outside and a `while there is a path ahead` on the inside. How many paths does the bee need to buzz down if the bee needs to buzz every side with a flower?
        courseF_bee_conditionals5_b: Inside the `while there is a path ahead` block, you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?
        courseF_bee_conditionals5_c: 'There are 3 sides of the rectangle with flowers, so the code needs to `repeat 3 times`. In every repeat, the bee will need to continue along the path, `while there is a path ahead`. '
        courseF_bee_conditionals5_d: Para continuar por el camino, la abeja deberá 'avanzar'. Mientras está en el camino, la abeja necesita buscar una flor. ¿Qué debería hacer la abeja si hay una flor?
      courseF_bee_conditionals5_2018_authored_hint:
        courseF_bee_conditionals5_a: Think of every side of the rectangular path as a path by itself. Set up a nested loop with a `repeat` block on the outside and a `while there is a path ahead` on the inside. How many paths does the bee need to buzz down if the bee needs to buzz every side with a flower?
        courseF_bee_conditionals5_b: Inside the `while there is a path ahead` block, you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?
        courseF_bee_conditionals5_c: 'There are 3 sides of the rectangle with flowers, so the code needs to `repeat 3 times`. In every repeat, the bee will need to continue along the path, `while there is a path ahead`. '
        courseF_bee_conditionals5_d: Para continuar por el camino, la abeja deberá 'avanzar'. Mientras está en el camino, la abeja necesita buscar una flor. ¿Qué debería hacer la abeja si hay una flor?
      courseF_bee_conditionals7_predict2_authored_hint: [ ]
      courseF_bee_conditionals7_predict2_2018_authored_hint: [ ]
      courseF_bee_conditionals8_authored_hint:
        courseF_bee_conditionals8_a: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
        courseF_bee_conditionals8_b: |-
          Este enigma es complicado, porque no puedes verificar cuadrados en blanco, néctar, * y * miel con solo un único condicional. Sólo echa de néctar y la miel al final de su camino.
        courseF_bee_conditionals8_c: What happens if you skip the first flower, then use the `while path ahead` block?
      courseF_bee_conditionals8_2018_authored_hint:
        courseF_bee_conditionals8_a: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
        courseF_bee_conditionals8_b: |-
          Este enigma es complicado, porque no puedes verificar cuadrados en blanco, néctar, * y * miel con solo un único condicional. Sólo echa de néctar y la miel al final de su camino.
        courseF_bee_conditionals8_c: What happens if you skip the first flower, then use the `while path ahead` block?
      courseF_bee_for1_authored_hint:
        courseF_bee_for1_a: Drag a purple number block into the blank space on the `repeat` loop to tell it how many times to repeat.
        courseF_bee_for1_b: You will need two blocks in your ‘repeat’ loop to collect all of the nectar.
      courseF_bee_for10_authored_hint:
        courseF_bee_for10_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        courseF_bee_for10_b: The first set of flowers has a total of **14 flowers**. To get to this first set, the bee must buzz down **7 squares** (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?
        courseF_bee_for10_c: "In the puzzle, the first set of flowers has **14** flowers, the second set has **10** flowers, third set has **6** flowers, and the fourth set has **2** flowers.\n\nIn this drawing, notice there are **7** red squares, **5** orange squares, **3** green squares, and **1** blue block. \n\n![](https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png)\n\nHow do the numbers relate?"
        courseF_bee_for10_d: You'll need to have 2 repeats, one will use a math block.
      courseF_bee_for10_2018_authored_hint:
        courseF_bee_for10_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        courseF_bee_for10_b: The first set of flowers has a total of **14 flowers**. To get to this first set, the bee must buzz down **7 squares** (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?
        courseF_bee_for10_c: "In the puzzle, the first set of flowers has **14** flowers, the second set has **10** flowers, third set has **6** flowers, and the fourth set has **2** flowers.\n\nIn this drawing, notice there are **7** red squares, **5** orange squares, **3** green squares, and **1** blue block. \n\n![](https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png)\n\nHow do the numbers relate?"
        courseF_bee_for10_d: You'll need to have 2 repeats, one will use a math block.
      courseF_bee_for11_authored_hint:
        courseF_bee_for11_a: "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
      courseF_bee_for11_2018_authored_hint:
        courseF_bee_for11_a: "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
      courseF_bee_for1_2018_authored_hint:
        courseF_bee_for1_a: Drag a purple number block into the blank space on the `repeat` loop to tell it how many times to repeat.
        courseF_bee_for1_b: You will need two blocks in your ‘repeat’ loop to collect all of the nectar.
      courseF_bee_for2_authored_hint:
        courseF_bee_for2_a: If you’re confused, work one flower at a time, and test often.
        courseF_bee_for2_b: Remember to move forward between each loop, so you reach each flower.
      courseF_bee_for2_2018_authored_hint:
        courseF_bee_for2_a: If you’re confused, work one flower at a time, and test often.
        courseF_bee_for2_b: Remember to move forward between each loop, so you reach each flower.
      courseF_bee_for3_authored_hint:
        courseF_bee_for3_a: 'Use the `counter` variable inside the `repeat` loop where nectar is gathered to solve this puzzle. '
        courseF_bee_for3_b: Your `for` loop will need to count from 1 to 5 with an increment of 1.
      courseF_bee_for3_predict1_authored_hint: [ ]
      courseF_bee_for3_predict1_2018_authored_hint: [ ]
      courseF_bee_for4_authored_hint:
        courseF_bee_for4_a: Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.
        courseF_bee_for4_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for4_c: Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!
      courseF_bee_for4_2018_authored_hint:
        courseF_bee_for4_a: Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.
        courseF_bee_for4_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for4_c: Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!
      courseF_bee_for5_authored_hint:
        courseF_bee_for5_a: This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops, both inside the same `for` loop.
        courseF_bee_for5_b: Use the `counter` variable in each loop so the bee moves different distances between each flower.
        courseF_bee_for5_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseF_bee_for5_2018_authored_hint:
        courseF_bee_for5_a: This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops, both inside the same `for` loop.
        courseF_bee_for5_b: Use the `counter` variable in each loop so the bee moves different distances between each flower.
        courseF_bee_for5_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseF_bee_for6_authored_hint:
        courseF_bee_for6_a: Don't forget to use a `counter` variable inside your `repeat` loop.
        courseF_bee_for6_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for6_c: Your loop should count **from 5 to 1**.
      courseF_bee_for6_2018_authored_hint:
        courseF_bee_for6_a: Don't forget to use a `counter` variable inside your `repeat` loop.
        courseF_bee_for6_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for6_c: Your loop should count **from 5 to 1**.
      courseF_bee_for7_authored_hint:
        courseF_bee_for7_a: Your `for` loop will need to count from 1 to 7 by 2.
        courseF_bee_for7_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for7_c: Remember to use the `counter` variable in your `repeat` loop.
      courseF_bee_for7_2018_authored_hint:
        courseF_bee_for7_a: Your `for` loop will need to count from 1 to 7 by 2.
        courseF_bee_for7_b: Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.
        courseF_bee_for7_c: Remember to use the `counter` variable in your `repeat` loop.
      courseF_bee_for8_authored_hint:
        courseF_bee_for8_a: "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?"
        courseF_bee_for8_b: En este puzzle, tendrás que moverte en un patrón de escalones para llegar a las flores.
        courseF_bee_for8_c: Your loop will count *from 3 to 15* with some increment. What is it?
      courseF_bee_for8_2018_authored_hint:
        courseF_bee_for8_a: "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?"
        courseF_bee_for8_b: En este puzzle, tendrás que moverte en un patrón de escalones para llegar a las flores.
        courseF_bee_for8_c: Your loop will count *from 3 to 15* with some increment. What is it?
      courseF_bee_for9_authored_hint:
        courseF_bee_for9_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        courseF_bee_for9_c: It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.
        courseF_bee_for9_b: "**Remember:** If your loop is counting up, the increment is added to your `counter` variable each time through."
      courseF_bee_for9_2018_authored_hint:
        courseF_bee_for9_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        courseF_bee_for9_c: It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.
        courseF_bee_for9_b: "**Remember:** If your loop is counting up, the increment is added to your `counter` variable each time through."
      courseF_bee_for_challenge1_authored_hint: [ ]
      courseF_bee_for_challenge1_2018_authored_hint: [ ]
      courseF_bee_for_challenge2_authored_hint:
        courseF_bee_for_challenge2_a: "Eche un vistazo a esta opción de movimiento   \n\n:! [] (Https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Trate de usar dos ciclos for: Uno para subir y agarrar el néctar, y el otro para escalar hacia abajo y hacer miel.'
        courseF_bee_for_challenge2_c: "Observe que un ciclo `for` necesita varios bucles regulares dentro en el que se repita el 'contador' para hacer el modelo creciente de escalera. El otro ciclo for solo necesita un ciclo regular para hacer una cantidad 'contador' de miel."
        courseF_bee_for_challenge2_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018_authored_hint:
        courseF_bee_for_challenge2_a: "Eche un vistazo a esta opción de movimiento   \n\n:! [] (Https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Trate de usar dos ciclos for: Uno para subir y agarrar el néctar, y el otro para escalar hacia abajo y hacer miel.'
        courseF_bee_for_challenge2_c: "Observe que un ciclo `for` necesita varios bucles regulares dentro en el que se repita el 'contador' para hacer el modelo creciente de escalera. El otro ciclo for solo necesita un ciclo regular para hacer una cantidad 'contador' de miel."
        courseF_bee_for_challenge2_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge3_authored_hint:
        courseF_bee_for_challenge2_a: "Eche un vistazo a esta opción de movimiento   \n\n:! [] (Https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Trate de usar dos ciclos for: Uno para subir y agarrar el néctar, y el otro para escalar hacia abajo y hacer miel.'
        courseF_bee_for_challenge2_c: "Observe que un ciclo `for` necesita varios bucles regulares dentro en el que se repita el 'contador' para hacer el modelo creciente de escalera. El otro ciclo for solo necesita un ciclo regular para hacer una cantidad 'contador' de miel."
        courseF_bee_for_challenge2_d: |-
          **Solución:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_functions2_authored_hint:
        courseF_bee_functions2_a: La función ha sido escrita para usted, pero deberá llamarla a cada flor.
        courseF_bee_functions2_b: Click on the blue edit button on the `get only nectar` function to see what it does.
      courseF_bee_functions2_2018_authored_hint:
        courseF_bee_functions2_a: La función ha sido escrita para usted, pero deberá llamarla a cada flor.
        courseF_bee_functions2_b: Click on the blue edit button on the `get only nectar` function to see what it does.
      courseF_bee_functions3_authored_hint:
        courseF_bee_functions3_a: 'Tu función para este puzzle solo necesita hacer miel, no debería tener ningún bloque de ''avanzar'' o ''girar''. '
        courseF_bee_functions3_b: Recuerda que tu función solo debe obtener miel * si * hay un panal de miel.
        courseF_bee_functions3_c: Usa el bloque verde `solo hacer miel` para llamar a tu función.
        courseF_bee_functions3_d: Mira este camino.
      courseF_bee_functions3_2018_authored_hint:
        courseF_bee_functions3_a: 'Tu función para este puzzle solo necesita hacer miel, no debería tener ningún bloque de ''avanzar'' o ''girar''. '
        courseF_bee_functions3_b: Recuerda que tu función solo debe obtener miel * si * hay un panal de miel.
        courseF_bee_functions3_c: Usa el bloque verde `solo hacer miel` para llamar a tu función.
        courseF_bee_functions3_d: Mira este camino.
      courseF_bee_functions3a_authored_hint:
        courseF_bee_functions3a_a: 'Tu función para este puzzle solo necesita obtener néctar o hacer miel, no deberías tener ningún bloque de ''avanzar'' o ''girar''. '
        courseF_bee_functions3a_b: Usa un patrón de escalones para verificar las primeras cuatro nubes.
      courseF_bee_functions3a_2018_authored_hint:
        courseF_bee_functions3a_a: 'Tu función para este puzzle solo necesita obtener néctar o hacer miel, no deberías tener ningún bloque de ''avanzar'' o ''girar''. '
        courseF_bee_functions3a_b: Usa un patrón de escalones para verificar las primeras cuatro nubes.
      courseF_bee_functions4_authored_hint:
        courseF_bee_functions4_a: Tu función debe viajar por los caminos laterales y devolver la abeja a la camino principal. No necesitas agregar esa parte a tu programa principal.
        courseF_bee_functions4_b: Intenta crear el programa y usar los bloques de funciones como esperas que se comporte la función, luego crea la función.
      courseF_bee_functions4_2018_authored_hint:
        courseF_bee_functions4_a: Tu función debe viajar por los caminos laterales y devolver la abeja a la camino principal. No necesitas agregar esa parte a tu programa principal.
        courseF_bee_functions4_b: Intenta crear el programa y usar los bloques de funciones como esperas que se comporte la función, luego crea la función.
      courseF_bee_functions5_authored_hint:
        courseE_bee_functions5_a: Edite la función para que resuelva el acertijo sin tener que cambiar el programa principal.
        courseE_bee_functions5_b: "Tu función debe hacer que la abeja: \n- gire\n- avanze\n- recoja todo el néctar\n- dé la vuelta\n- retroceda al camino principal\n- vuelva a la dirección desde la que comenzó"
      courseF_bee_functions5a_authored_hint:
        courseF_bee_functions5a_a: "Tu función debería verificar si hay un camino a la derecha, y si lo hay, recorrer los caminos laterales y regresar a la abeja al camino principal.\n\nNo necesitas agregar esa parte a tu programa principal."
        courseF_bee_functions5a_b: Usa un bucle`siempre que` para viajar por todas las rutas principales, ya que son de diferentes longitudes.
        courseF_bee_functions5a_c: Dentro de tu bucle `siempre que`, asegúrate de avanzar, luego usa tu función para buscar una ruta.
      courseF_bee_functions5a_2018_authored_hint:
        courseF_bee_functions5a_a: "Tu función debería verificar si hay un camino a la derecha, y si lo hay, recorrer los caminos laterales y regresar a la abeja al camino principal.\n\nNo necesitas agregar esa parte a tu programa principal."
        courseF_bee_functions5a_b: Usa un bucle`siempre que` para viajar por todas las rutas principales, ya que son de diferentes longitudes.
        courseF_bee_functions5a_c: Dentro de tu bucle `siempre que`, asegúrate de avanzar, luego usa tu función para buscar una ruta.
      courseF_bee_functions6_authored_hint:
        courseF_bee_functions6_a: "Si el rompecabezas parece desafiante, intente construir su función un poco a la vez.   \n\nAgregue algunos  bloques , luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí! ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseF_bee_functions6_b: Tu función debe verificar si hay una flor o un panal, obtener néctar o hacer miel, luego girar.
        courseF_bee_functions6_c: Dado que estás girando dentro de tu función, solo necesitas un bucle `siempre que` para atravesar este laberinto.
      courseF_bee_functions6_2018_authored_hint:
        courseF_bee_functions6_a: "Si el rompecabezas parece desafiante, intente construir su función un poco a la vez.   \n\nAgregue algunos  bloques , luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí! ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseF_bee_functions6_b: Tu función debe verificar si hay una flor o un panal, obtener néctar o hacer miel, luego girar.
        courseF_bee_functions6_c: Dado que estás girando dentro de tu función, solo necesitas un bucle `siempre que` para atravesar este laberinto.
      courseF_bee_functions7_authored_hint:
        courseF_bee_functions7_a: Puedes mirar hacia atrás en el último puzzle para ver tu función.
        courseF_bee_functions7_b: Trata de dibujar un camino a través de este laberinto con tu dedo. ¿Dónde tendrá que tomar la abeja una decisión?
      courseF_bee_functions7_2018_authored_hint:
        courseF_bee_functions7_a: Puedes mirar hacia atrás en el último puzzle para ver tu función.
        courseF_bee_functions7_b: Trata de dibujar un camino a través de este laberinto con tu dedo. ¿Dónde tendrá que tomar la abeja una decisión?
      courseF_bee_functions8a_authored_hint:
        courseF_bee_functions8a_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseF_bee_functions8a_b: "Recuerda construir código dentro del editor de funciones."
      courseF_bee_functions8a_2018_authored_hint:
        courseF_bee_functions8a_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseF_bee_functions8a_b: "Recuerda construir código dentro del editor de funciones."
      courseF_bee_functionsPre7_authored_hint:
        courseF_bee_functions7_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseF_bee_functions7_b: |-
          Remember to build code inside of the green function block.
          
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseF_bee_functions7_c: '¿De qué manera deberías girar si hay un panal? ¿Qué tal una flor? ¿Qué pasa si no hay nada?'
      courseF_bee_functionsPre7_2018_authored_hint:
        courseF_bee_functions7_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseF_bee_functions7_b: |-
          Remember to build code inside of the green function block.
          
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseF_bee_functions7_c: '¿De qué manera deberías girar si hay un panal? ¿Qué tal una flor? ¿Qué pasa si no hay nada?'
      courseF_bee_functions_challenge1_authored_hint:
        courseF_bee_functions_challenge1_a: Puedes usar las funciones en la caja de herramientas para ayudarlo. ¡Puedes invocar una función dentro de la definición de otra función!
      courseF_bee_functions_challenge1_2018_authored_hint:
        courseF_bee_functions_challenge1_a: Puedes usar las funciones en la caja de herramientas para ayudarlo. ¡Puedes invocar una función dentro de la definición de otra función!
      courseF_bee_functions_challenge2_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          Si hay un camino a la derecha, deberías hacer lo siguiente:
          * Obtén cualquier néctar o haz miel.
          * Gira a la derecha hacia el camino lateral.
          * Muévete hasta final de la ruta lateral.
          * Dobla a la derecha.
          
          Si repites las acciones anteriores dos veces, estarás listo para retroceder por la ruta principal.
          
          ** ¡Solo haz clic para obtener otra sugerencia si deseas ver la solución completa! **
        courseF_bee_functions_challenge2_b: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_2018_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          Si hay un camino a la derecha, deberías hacer lo siguiente:
          * Obtén cualquier néctar o haz miel.
          * Gira a la derecha hacia el camino lateral.
          * Muévete hasta final de la ruta lateral.
          * Dobla a la derecha.
          
          Si repites las acciones anteriores dos veces, estarás listo para retroceder por la ruta principal.
          
          ** ¡Solo haz clic para obtener otra sugerencia si deseas ver la solución completa! **
        courseF_bee_functions_challenge2_b: |-
          **Solution:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_recursion_authored_hint:
        courseF_bee_functions8a_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        courseF_bee_functions8a_b: "Recuerda construir código dentro del editor de funciones."
      courseF_bee_fwp1_authored_hint:
        courseF_bee_fwp1_a: Use `if` statements to make sure you're only getting nectar from a flower.
        courseF_bee_fwp1_b: Continue along the path using a `repeat` block. Make sure you are using a `move forward` block and checking if there is a flower using a `if` statement.
      courseF_bee_fwp1_2018_authored_hint:
        courseF_bee_fwp1_a: Use `if` statements to make sure you're only getting nectar from a flower.
        courseF_bee_fwp1_b: Continue along the path using a `repeat` block. Make sure you are using a `move forward` block and checking if there is a flower using a `if` statement.
      courseF_bee_fwp2_authored_hint:
        courseF_bee_fwp2_a: "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        courseF_bee_fwp2_b: Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built.
      courseF_bee_fwp2_2018_authored_hint:
        courseF_bee_fwp2_a: "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        courseF_bee_fwp2_b: Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built.
      courseF_bee_fwp3_authored_hint:
        courseF_bee_fwp3_a: Your function will run no matter which direction you're facing.
        courseF_bee_fwp3_b: There are 3 rows of nectar, what kind of turns and movements do you need to make between each row?
        courseF_bee_fwp3_c: Para resolver este puzzle, necesitarás llamar a tu función 3 veces. Entre cada llamada, debes `girar a la derecha`,` avanzar` 2 veces, luego `girar a la derecha` de nuevo. O bien, tienes que `girar a la izquierda`,` avanzar` 2 veces, luego `girar a la izquierda` de nuevo.
      courseF_bee_fwp3_2018_authored_hint:
        courseF_bee_fwp3_a: Your function will run no matter which direction you're facing.
        courseF_bee_fwp3_b: There are 3 rows of nectar, what kind of turns and movements do you need to make between each row?
        courseF_bee_fwp3_c: Para resolver este puzzle, necesitarás llamar a tu función 3 veces. Entre cada llamada, debes `girar a la derecha`,` avanzar` 2 veces, luego `girar a la derecha` de nuevo. O bien, tienes que `girar a la izquierda`,` avanzar` 2 veces, luego `girar a la izquierda` de nuevo.
      courseF_bee_fwp4_authored_hint:
        courseF_bee_fwp4_a: You will need to add a parameter and use the resulting variable in your loop.
        courseF_bee_fwp4_b: El parámetro que crees para tu función se usará en el bucle de repetición para determinar cuántas veces la abeja avanzará y buscará néctar.
      courseF_bee_fwp4_2018_authored_hint:
        courseF_bee_fwp4_a: You will need to add a parameter and use the resulting variable in your loop.
        courseF_bee_fwp4_b: El parámetro que crees para tu función se usará en el bucle de repetición para determinar cuántas veces la abeja avanzará y buscará néctar.
      courseF_bee_fwp5_authored_hint:
        courseF_bee_fwp5_a: Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.
        courseF_bee_fwp5_a_b: Remember to turn between each function call.
      courseF_bee_fwp5_2018_authored_hint:
        courseF_bee_fwp5_a: Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.
        courseF_bee_fwp5_a_b: Remember to turn between each function call.
      courseF_bee_fwp6_authored_hint:
        courseF_bee_fwp6_a: Which block automatically increments a variable that you could use as a parameter?
        courseF_bee_fwp6_b: Try using a `for` loop to solve this puzzle.
      courseF_bee_fwp6_2018_authored_hint:
        courseF_bee_fwp6_a: Which block automatically increments a variable that you could use as a parameter?
        courseF_bee_fwp6_b: Try using a `for` loop to solve this puzzle.
      courseF_bee_fwp7_authored_hint:
        courseF_bee_fwp7_a: You don't need a second parameter for this function, only a second `if` statement.
        courseF_bee_fwp7_b: Add an `if` statement in your function so the bee checks for both honeycombs and flowers.
      courseF_bee_fwp7_2018_authored_hint:
        courseF_bee_fwp7_a: You don't need a second parameter for this function, only a second `if` statement.
        courseF_bee_fwp7_b: Add an `if` statement in your function so the bee checks for both honeycombs and flowers.
      courseF_bee_fwp8_authored_hint:
        courseF_bee_fwp8_a: How could a `for` loop help in this puzzle?
        courseF_bee_fwp8_b: Since the spiral gets smaller as you go in, your `for` loop should count down.
      courseF_bee_fwp8_2018_authored_hint:
        courseF_bee_fwp8_a: How could a `for` loop help in this puzzle?
        courseF_bee_fwp8_b: Since the spiral gets smaller as you go in, your `for` loop should count down.
      courseF_bee_fwp9_authored_hint: [ ]
      courseF_bee_fwp9_predict1_authored_hint: [ ]
      courseF_bee_fwp9_predict1_2018_authored_hint: [ ]
      courseF_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          The main program should look something like this:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: 'Look at how much corn is available to harvest in each space. Do you see the counter pattern? '
        courseF_bee_fwp_challenge1_b1: |-
          The `length` parameter should be used to set the maximum value in the `for loop`.
          
          Don't forget to have the farmer move back to the main path after harvesting!
        courseF_bee_fwp_challenge1_c: |-
          Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.
          Inside this loop, you should move forward and pick all of the corn.
          
          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: Inside the `for loop` you will want to `move forward` then `pick corn` **counter times**.
        courseF_bee_fwp_challenge1_d2: After the `for loop` you can just `move backward` **length times**.
        courseF_bee_fwp_challenge1_e: |
          **Here is the solution:**
          
          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge1_2018_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          The main program should look something like this:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: 'Look at how much corn is available to harvest in each space. Do you see the counter pattern? '
        courseF_bee_fwp_challenge1_b1: |-
          The `length` parameter should be used to set the maximum value in the `for loop`.
          
          Don't forget to have the farmer move back to the main path after harvesting!
        courseF_bee_fwp_challenge1_c: |-
          Place a `for loop` inside a function and set it to count from `1` to `length` by `1`.
          Inside this loop, you should move forward and pick all of the corn.
          
          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: Inside the `for loop` you will want to `move forward` then `pick corn` **counter times**.
        courseF_bee_fwp_challenge1_d2: After the `for loop` you can just `move backward` **length times**.
        courseF_bee_fwp_challenge1_e: |
          **Here is the solution:**
          
          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Comience asegurándose de que entiende cómo funciona esta *supuesta* función. A medida que la agricultora se mueve por cada camino, solo intentará recolectar maíz. En cambio, ¿cómo puedes hacer que revise cada una de las 3 verduras y elegir solo la que encuentra?
          
          Agregue declaraciones condicionales a la función para buscar maíz, calabazas y lechuga.
        courseF_bee_fwp_challenge2_b: |-
          Are you running out of `move forward` blocks?
          Try using a *second* `for loop` in your main program.
        courseF_bee_fwp_challenge2_c: |-
          **Here is what your function should look like:**
          
          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **Here is what your main program should look like:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_bee_fwp_challenge2_2018_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Comience asegurándose de que entiende cómo funciona esta *supuesta* función. A medida que la agricultora se mueve por cada camino, solo intentará recolectar maíz. En cambio, ¿cómo puedes hacer que revise cada una de las 3 verduras y elegir solo la que encuentra?
          
          Agregue declaraciones condicionales a la función para buscar maíz, calabazas y lechuga.
        courseF_bee_fwp_challenge2_b: |-
          Are you running out of `move forward` blocks?
          Try using a *second* `for loop` in your main program.
        courseF_bee_fwp_challenge2_c: |-
          **Here is what your function should look like:**
          
          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |
          **Here is what your main program should look like:**
          
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_farmer_ramp11_authored_hint:
        courseF_farmer_ramp11_a: Si tienes problemas para ver donde van los ciclos, intenta programarlo y buscar patrones.
        courseF_farmer_ramp11_b: How can you use a <xml><block type="controls_repeat"><title name="TIMES">???</title></block></xml> loop to pick lettuce, instead of dragging out 5 <xml><block type="harvester_lettuce"/></xml> blocks?
        courseF_farmer_ramp11_c: You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a <xml><block type="maze_moveForward"/></xml> block, and you'll have it!)
      courseF_farmer_ramp11_2018_authored_hint:
        courseF_farmer_ramp11_a: Si tienes problemas para ver donde van los ciclos, intenta programarlo y buscar patrones.
        courseF_farmer_ramp11_b: How can you use a <xml><block type="controls_repeat"><title name="TIMES">???</title></block></xml> loop to pick lettuce, instead of dragging out 5 <xml><block type="harvester_lettuce"/></xml> blocks?
        courseF_farmer_ramp11_c: You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a <xml><block type="maze_moveForward"/></xml> block, and you'll have it!)
      courseF_maze_predict1_authored_hint: [ ]
      courseF_maze_ramp1_authored_hint:
        courseF_maze_ramp1_a: If the bird isn't getting to the pig, make sure all of the blocks have been fully snapped together, then click "Run" again.
        courseF_maze_ramp1_b: You don't need any extra blocks from the toolbox here!
      courseF_maze_ramp13_authored_hint:
        courseF_maze_ramp13_b: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseF_maze_ramp13_a: Usa bloques de repetición para ejecutar un solo bloque o un fragmento de código una y otra vez.
        courseF_maze_ramp13_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
        courseF_maze_ramp13_d: Una vez que hayas terminado tu bucle, ¿qué tienes que hacer para mover los últimos cuadrados? Adjunta estos bloques después del bucle.
      courseF_maze_ramp15_authored_hint:
        courseF_maze_ramp7_b: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseF_maze_ramp7_a: Usa bloques de repetición para ejecutar un solo bloque o un fragmento de código una y otra vez.
      courseF_maze_ramp1_2018_authored_hint:
        courseF_maze_ramp1_a: If the bird isn't getting to the pig, make sure all of the blocks have been fully snapped together, then click "Run" again.
        courseF_maze_ramp1_b: You don't need any extra blocks from the toolbox here!
      courseF_maze_ramp2_authored_hint:
        courseF_maze_ramp2_a: To use a new block, drag it from the toolbox out into the workspace and connect it to the program that is attached to the <xml><block type="when_run"/></xml> block.
        courseF_maze_ramp2_b: Make sure the <xml><block type="maze_moveForward"/></xml> block is inside of the loop, so that it is repeated.
      courseF_maze_ramp2_2018_authored_hint:
        courseF_maze_ramp2_a: To use a new block, drag it from the toolbox out into the workspace and connect it to the program that is attached to the <xml><block type="when_run"/></xml> block.
        courseF_maze_ramp2_b: Make sure the <xml><block type="maze_moveForward"/></xml> block is inside of the loop, so that it is repeated.
      courseF_maze_ramp4_authored_hint:
        courseF_maze_ramp4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseF_maze_ramp4_b: Para seguir el camino, avanza y gira en un sentido, luego muévete tres veces antes de girar en el sentido opuesto. Avanza una vez más para alcanzar al cerdo.
        courseF_maze_ramp4_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseF_maze_ramp4_2018_authored_hint:
        courseF_maze_ramp4_a: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        courseF_maze_ramp4_b: Para seguir el camino, avanza y gira en un sentido, luego muévete tres veces antes de girar en el sentido opuesto. Avanza una vez más para alcanzar al cerdo.
        courseF_maze_ramp4_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún no has resuelto el rompecabezas.'
      courseF_maze_ramp5_authored_hint:
        courseF_maze_ramp5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseF_maze_ramp5_b: There is more than one way to get to the pig.
        courseF_maze_ramp5_c: Try using a <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop for shorter code!
      courseF_maze_ramp5_2018_authored_hint:
        courseF_maze_ramp5_a: Intente usar el botón "Paso" para ejecutar su código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseF_maze_ramp5_b: There is more than one way to get to the pig.
        courseF_maze_ramp5_c: Try using a <xml><block type="controls_repeat"><title name="TIMES">3</title></block></xml> loop for shorter code!
      courseF_maze_ramp6_authored_hint:
        courseF_maze_ramp6_a: '¡Hay dos formas de resolver este rompecabezas!'
        courseF_maze_ramp6_b: El pájaro comienza a mirar hacia la pared, ¡así que recuerda girar antes de moverte!
        courseF_maze_ramp6_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseF_maze_ramp6_2018_authored_hint:
        courseF_maze_ramp6_a: '¡Hay dos formas de resolver este rompecabezas!'
        courseF_maze_ramp6_b: El pájaro comienza a mirar hacia la pared, ¡así que recuerda girar antes de moverte!
        courseF_maze_ramp6_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
      courseF_maze_ramp7_authored_hint:
        courseF_maze_ramp7_b: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
        courseF_maze_ramp7_a: Usa bloques de repetición para ejecutar un solo bloque o un fragmento de código una y otra vez.
        courseF_maze_ramp7_c: '¡No tengas miedo de cometer un error! Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees que aún no has resuelto el rompecabezas.'
        courseF_maze_ramp7_d: Hay más de una forma de llegar al cerdo. ¿Cuál forma requiere el menor código?
        courseF_maze_ramp7_aa: |-
          Look at this path...
          
          ![](https://images.code.org/e1d29901495eea9504c194b09efaa88e-image-1503437474226.29.32.png)
      courseF_playlab_variables1a_authored_hint:
        courseF_playlab_variables1a_a: You will want to replace the words “What should I shout?” in the green block with “Goal!”
      courseF_playlab_variables1a_2018_authored_hint:
        courseF_playlab_variables1a_a: You will want to replace the words “What should I shout?” in the green block with “Goal!”
      courseF_playlab_variables2b_authored_hint:
        courseF_playlab_variables2b_a: '¿Qué crees que dirá Kiki cuando toques `Ejecutar`?'
      courseF_playlab_variables2b_2018_authored_hint:
        courseF_playlab_variables2b_a: '¿Qué crees que dirá Kiki cuando toques `Ejecutar`?'
      courseF_playlab_variables3b_authored_hint:
        courseF_playlab_variables3b_a: The variable blocks are already in the workspace.  All you have to do is put them where they belong!
      courseF_playlab_variables3bEdit_authored_hint:
        courseF_playlab_variables3b_a: The variable blocks are already in the workspace.  All you have to do is put them where they belong!
      courseF_playlab_variables3b_josh_authored_hint:
        courseF_playlab_variables3b_a: 'Hay dos bloques con espacios vacíos: un bloque `actor dice` y un bloque` unirse`. ¡Agregue las variables de bloques allí!'
      courseF_playlab_variables3b_josh_2018_authored_hint:
        courseF_playlab_variables3b_a: 'Hay dos bloques con espacios vacíos: un bloque `actor dice` y un bloque` unirse`. ¡Agregue las variables de bloques allí!'
      courseF_playlab_variables4b_authored_hint:
        courseF_playlab_variables4b_a: No necesitas más bloques de la caja de herramientas aquí.
        courseF_playlab_variables4b_b: Coloque las dos variables 'año' y una variable 'nombre' donde tengan más sentido en la conversación.
      courseF_playlab_variables4b_2018_authored_hint:
        courseF_playlab_variables4b_a: No necesitas más bloques de la caja de herramientas aquí.
        courseF_playlab_variables4b_b: Coloque las dos variables 'año' y una variable 'nombre' donde tengan más sentido en la conversación.
      courseF_playlab_variables5c_authored_hint:
        courseF_playlab_variables5c_a: Encuentre un bloque de variables `respuesta` en la caja de herramientas, debajo de" Variables ".
        courseF_playlab_variables5c_b: Prueba tu código! Intenta ingresar "rojo", y también otros colores, para ver qué pasa.
      courseF_playlab_variables5c_2018_authored_hint:
        courseF_playlab_variables5c_a: Encuentre un bloque de variables `respuesta` en la caja de herramientas, debajo de" Variables ".
        courseF_playlab_variables5c_b: Prueba tu código! Intenta ingresar "rojo", y también otros colores, para ver qué pasa.
      courseF_playlab_variables6c_authored_hint:
        courseF_playlab_variables6c_a: Debajo de la sección "Entrada", usa el bloque `preguntar` para obtener la entrada de los usuarios.
      courseF_playlab_variables6c_2018_authored_hint:
        courseF_playlab_variables6c_a: Debajo de la sección "Entrada", usa el bloque `preguntar` para obtener la entrada de los usuarios.
      courseF_playlab_variables7b_authored_hint:
        courseF_playlab_variables7b_a: Haz que un gato y un perro hablen sobre sus comidas favoritas. Usa el bloque de pregunta para encontrar la comida favorita, ¡luego muestra el texto en la pantalla!
        courseF_playlab_variables7b_b: Haz que tu personaje favorito pregunte si quiere escuchar un chiste. Si la respuesta es sí, muestra una broma a la pantalla.
      courseF_playlab_variables7b_2018_authored_hint:
        courseF_playlab_variables7b_a: Haz que un gato y un perro hablen sobre sus comidas favoritas. Usa el bloque de pregunta para encontrar la comida favorita, ¡luego muestra el texto en la pantalla!
        courseF_playlab_variables7b_b: Haz que tu personaje favorito pregunte si quiere escuchar un chiste. Si la respuesta es sí, muestra una broma a la pantalla.
      courseF_playlab_variables7c_authored_hint:
        courseF_playlab_variables7c_a: Coloque el nuevo bloque `pregunta` antes de su instrucción` si/ de lo contrario` para que pueda usarlo allí en otras etapas.
      courseF_playlab_variables7c_2018_authored_hint:
        courseF_playlab_variables7c_a: Coloque el nuevo bloque `pregunta` antes de su instrucción` si/ de lo contrario` para que pueda usarlo allí en otras etapas.
      courseF_playlab_variables8c_authored_hint:
        courseF_playlab_variables8c_a: El bloque `unirse` entra en un bloque` actor dice`, y te permite usar tus variables en oraciones más grandes.
      courseF_playlab_variables8c_2018_authored_hint:
        courseF_playlab_variables8c_a: El bloque `unirse` entra en un bloque` actor dice`, y te permite usar tus variables en oraciones más grandes.
      courseF_playlab_variables_challenge1_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          You will need additional blocks from the tool box to get the actors to talk.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge1_2018_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          You will need additional blocks from the tool box to get the actors to talk.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge2_a: Suma y resta puntos a la variable `Puntuación` cuando los sprites colisionan. 
        courseF_playlab_variables_challenge2_b: Usted puede cambiar el parámetro de cuán lejos se mueve su sprite cada vez que una de las teclas flecha es presionada.
        courseF_playlab_variables_challenge2_c: |-
          **Solution:**
          
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge2_2018_authored_hint:
        courseF_playlab_variables_challenge2_a: Suma y resta puntos a la variable `Puntuación` cuando los sprites colisionan. 
        courseF_playlab_variables_challenge2_b: Usted puede cambiar el parámetro de cuán lejos se mueve su sprite cada vez que una de las teclas flecha es presionada.
        courseF_playlab_variables_challenge2_c: |-
          **Solution:**
          
          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge3_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          El actor sabe que decir porque revisa el valor actual de la variable ´fortuna´.
          
          <xml><block type="variables_set" inline="false">
          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          Parecera que el juego empieza de nuevo si llamas a la función 'haz una pregunta' despues de que el actor dice la fortuna.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">fortune</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: "Tendrás que agregar más declaraciones condicionales para dar a los actores más cosas que decir.\n\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n              \nNo olvides cambiar los humores que mostrarán los actores dentro del ciclo ´repetir para siempre´. ¡También puedes determinar los humores al azar!"
        courseF_playlab_variables_challenge3_d: |-
          Una vez que entiendas todo el código que se refiere al Actor 1, puedes tratar de volver a escribir el mismo código, pero esta vez para el Actor 2. ¡No te olvides de cambiar las instrucciones dentro del bloque de 'Mostrar pantalla de título' para que tengan sentido!
        courseF_playlab_variables_challenge3_e: |-
          Cuando todo esté terminado, deberias poder hacer clic en cualquier actor y obtener hasta 8 mensajes diferentes. ¿Es posible expandirlo aún más?
          
          ¡Haz que un amigo pruebe tu apliación cuando termines!
      coursea_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: Si el pájaro no está llegando al cerdo, asegurate de que los bloques están totalmente juntos, a continuación, y haz clic en "Ejecutar" de nuevo.
        courseC_maze_programming1_b: '¡No tengas miedo de cometer un error! ¡Prueba algo y si no funciona, prueba con algo más!'
      coursef_maze_ramp3_authored_hint:
        courseF_maze_ramp3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) \n\nPara eliminar un bloque del medio de su código, arrastra todos los bloques debajo de él hacia la derecha y permite que se queden en el espacio de trabajo por un tiempo. \n\nHaz clic en el bloque que desea eliminar y arrástralo nuevamente a la caja de herramientas. \n\nFinalmente, coloca los otros bloques en su lugar.\n"
        courseF_maze_ramp3_b: Use el botón de paso para recorrer el programa línea por línea. ¿Dónde hay un error?
      coursef_maze_ramp3_2018_authored_hint:
        courseF_maze_ramp3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) \n\nPara eliminar un bloque del medio de su código, arrastra todos los bloques debajo de él hacia la derecha y permite que se queden en el espacio de trabajo por un tiempo. \n\nHaz clic en el bloque que desea eliminar y arrástralo nuevamente a la caja de herramientas. \n\nFinalmente, coloca los otros bloques en su lugar.\n"
        courseF_maze_ramp3_b: Use el botón de paso para recorrer el programa línea por línea. ¿Dónde hay un error?
      drawings!_authored_hint:
        triangle_geometry_hint: 'Recuerda: un triángulo equilátero tiene tres lados, ¡con un giro de 60 grados entre cada uno!'
        repeat_pointer: Tienes que dibujar un lado y girar 3 veces... ¿qué bloque puedes usar para ejecutar las mismas instrucciones muchas veces?
        repeat_bottom_out: '¡Usa un bloque `repetir 3 veces`!'
      grade1_adventurer_loops10_authored_hint:
        grade1_adventurer_loops10_a: Necesitarás tres bucles `repetir` para resolver este puzzle.
      grade1_adventurer_loops2_authored_hint:
        grade1_adventurer_loops2_a: Intenta usar un bloque de repetición para recolectar tu oro.
      grade1_adventurer_loops3_authored_hint:
        grade1_adventurer_loops3_a: '¿Algo no está bien? Prueba usando el botón de paso para descubrir dónde están las cosas mal.'
      grade1_adventurer_loops4_authored_hint:
        grade1_adventurer_loops4_a: Intenta usar más de un bucle para hacer el trabajo.
      grade1_adventurer_loops5_authored_hint:
        grade1_adventurer_loops5_a: '¿No puede imaginarse dónde las cosas empiezan a ir mal? Use el botón "Paso" para ejecutar su programa un bloque a la vez.'
      grade1_adventurer_loops6_authored_hint:
        grade1_adventurer_loops6_a: Si tiene problemas con el rompecabezas, intente dibujarlo en papel para ayudarlo a resolverlo.
      grade1_adventurer_loops7_challenge_authored_hint:
        grade1_adventurer_loops7_challenge_a: 'Si no puede averiguar dónde colocar los bucles de repetición, prográmalo paso a paso y busca un patrón. '
        grade1_adventurer_loops7_challenge_b: '¿El código se siente un poco largo? Puede hacerlo mucho más corto moviendo dos de tus bucles `repetir` dentro de otro bucle.'
      grade1_adventurer_loops8_challenge_authored_hint:
        grade1_adventurer_loops8_challenge_a: Can you find a pattern in the steps?  Where can you use a repeat?
      grade1_adventurer_loops9_authored_hint:
        grade1_adventurer_loops9_a: '¿Esto parece demasiado difícil? Divídelo en 4 pequeños problemas para que se sienta más fácil.'
      grade1_artist_loops1_authored_hint:
        grade1_artist_loops1_a: Si desea que el ciclo se repita más de 4 veces, puede cambiar el número en la parte superior del bloque.
      grade1_artist_loops2_authored_hint:
        grade1_artist_loops2_a: Recuerde utilizar un ciclo de repetición` para un mejor código!
      grade1_artist_loops3_authored_hint: [ ]
      grade1_artist_loops4_authored_hint:
        grade1_artist_loops4_a: Arrastre un ciclo de "repetición", luego coloque los otros bloques dentro de él. ¿Cuántas veces necesitas repetir?
      grade1_artist_loops5_authored_hint: [ ]
      grade1_artist_loops6_authored_hint:
        grade1_artist_loops6_a: '¡Este desafío usa CUATRO ciclos, uno tras otro!'
        grade1_artist_loops6_b: |-
          Notice that every loop makes a stair pattern that travels in a different direction.
          
          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        grade1_artist_loops6_c: "Los ciclos deberían hacer esto: - ciclo 1\n   - Derecha\n   - Abajo\n   \n- Ciclo 2\n   - Derecha\n   - Arriba - ciclo 3\n   - Izquierda\n   - Arriba - ciclo 4\n   - Izquierda\n   - Abajo"
      grade1_artist_loops7_authored_hint: [ ]
      grade1_artist_loops7a_authored_hint:
        artistLoopsK9_a: '¡Este desafío usa CUATRO ciclos, uno tras otro!'
        artistLoopsK9_b: |-
          Notice that every loop makes a stair pattern that travels in a different direction.
          
          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        artistLoopsK9_c: "Los ciclos deberían hacer esto: - ciclo 1\n   - Derecha\n   - Abajo\n   \n- Ciclo 2\n   - Derecha\n   - Arriba - ciclo 3\n   - Izquierda\n   - Arriba - ciclo 4\n   - Izquierda\n   - Abajo"
      grade1_artist_loops7b_authored_hint:
        grade1_artist_loops7b_a: '¿Cuántas veces debes repetir el patrón para hacer la escalera?'
      grade1_artist_loops8_authored_hint: [ ]
      grade1_artist_loops9_authored_hint: [ ]
      grade1_artist_loopsFP_authored_hint: [ ]
      grade1_maze_sequence1_authored_hint:
        grade1_maze_sequence1_a: Este programa falta un bloque. ¿Puedes averiguar cuál?
      grade1_maze_sequence10_authored_hint:
        grade1_maze_sequence10_a: Si tiene problemas, primero intente anotar los pasos en una hoja de papel.
      grade1_maze_sequence2_authored_hint:
        grade1_maze_sequence2_a: Uno de los bloques está moviendo al pájaro en la dirección incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
      grade1_maze_sequence3_authored_hint:
        grade1_maze_sequence3_a: Intente agregar una instrucción a la vez hasta que llegue al cerdo.
      grade1_maze_sequence5_authored_hint:
        K2.0_sequence_5: Tu código final debe tener tres bloques de movimiento.
      grade1_maze_sequence6_authored_hint:
        K2.0_sequence_6_a: Hay 1 bloque que debes agregar para mover el pájaro al cerdo.
      grade1_maze_sequence7_authored_hint:
        grade1_maze_sequence7a: Si estás atascado, intenta agregar un bloque a la vez hasta que resuelvas el acertijo.
      grade1_maze_sequence8_authored_hint:
        grade1_maze_sequence8_a: '¿Atascado? Intenta trazar el camino del pájaro con tu dedo.'
        grade1_maze_sequence8_b: '¡Los bloques adicionales deben agregarse antes del último! [] (Https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51 PM.png)'
      grade1_maze_sequence9_authored_hint:
        grade1_maze_sequence9_a: Si tiene problemas, primero intente anotar los pasos en una hoja de papel.
      grade1_maze_sequenceA_authored_hint:
        grade1_maze_sequence10_a: Si tiene problemas, primero intente anotar los pasos en una hoja de papel.
      grade1_maze_sequenceB_authored_hint:
        grade1_maze_sequenceB_a: Si tiene problemas, primero intente anotar los pasos en una hoja de papel.
      grade1_maze_sequenceC_authored_hint:
        grade1_maze_sequenceC_a: Si tiene problemas, primero intente anotar los pasos en una hoja de papel.
      grade2_CaringForNewPet_0_authored_hint:
        grade2_CaringForNewPet_0: If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click "Run" again.
      grade2_CaringForNewPet_1_authored_hint:
        2-3_Maze_1_a: To use a `move forward` block, drag it from the toolbox out into the workspace and connect it to the `when run` block.
      grade2_CaringForNewPet_11_authored_hint: [ ]
      grade2_CaringForNewPet_2courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif) \n\nPara eliminar un bloque del medio de su código, arrastra todos los bloques debajo de él hacia la derecha y permite que se queden en el espacio de trabajo por un tiempo. \n\nHaz clic en el bloque que desea eliminar y arrástralo nuevamente a la caja de herramientas. \n\nFinalmente, coloca los otros bloques en su lugar.\n"
      grade2_CaringForNewPet_3_authored_hint:
        hint1: You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.
        hint2: This path is a zig-zag. You need to move forward 3 times and turn 2 times.
        hint3: To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.
      grade2_CaringForNewPet_3D_authored_hint: [ ]
      grade2_CaringForNewPet_4_authored_hint:
        2-3_Maze_6_a: '¡Hay dos formas de resolver este rompecabezas!'
      grade2_CaringForNewPet_5_authored_hint:
        grade2_CaringForNewPet_5_a: If you can't quite see what you need to do, try saying the steps that your bird will take out loud one-by-one and see if they match the blocks in the workspace.
      grade2_CaringForNewPet_6_authored_hint:
        grade2_CaringForNewPet_6_a: You don't have to code the whole solution at once!  Try running the code as you go to make sure it works at each step.
      grade2_CaringForNewPet_7D_authored_hint:
        grade2_CaringForNewPet_7D_a: No se olvide de utilizar el botón de "paso" que pasa bloque por bloque y busca errores.
      grade2_MakeDogTag_1_authored_hint:
        2-3_Artist_1_new_a: Si utilizas un bloque que me ayude a "avanzar 100 pixeles". Dibujaré una línea automáticamente.
        2-3_Artist_1_new_b: '¿Tienes problemas para girar en la esquina? Utiliza el bloque "girar a la derecha 90 grados".'
      grade2_MakeDogTag_2_authored_hint:
        2-3_Artist_2_new_a: To create this window, just draw a square with 100 pixel sides.
      grade2_MakeDogTag_3_authored_hint:
        2-3_Artist_4_a: Para terminar el cohete, ¡simplemente dibuja el triángulo en la parte superior!
      grade2_MakeDogTag_4_authored_hint: [ ]
      grade2_MakeDogTag_5_authored_hint:
        grade2_MakeDogTag_5a: El artista ya se está enfrentando a la forma correcta de dibujar su primera línea.
        grade2_MakeDogTag_5b: Este diamante es realmente solo un cuadrado que está parado en su esquina.
        grade2_MakeDogTag_5c: Como este diamante también es cuadrado, asegúrese de girar 90 grados en las esquinas.
      grade2_MakeDogTag_6_authored_hint:
        grade2_MakeDogTag_6a: Cada ángulo es 45 o 90 grados.
        grade2_MakeDogTag_6b: "¿Funciona en el primer paso?   \n¿Qué tal el segundo?   \n¿Dónde va mal?"
      grade2_MakeDogTag_7_authored_hint:
        2-3_Artist_11_a: The exterior angles on this triangle are 120 degrees each.
      grade2_MakeDogTag_9_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          Remember that the code from the last puzzle was:
          
          ![](https://images.code.org/e5c7492f509dd41efe2888c7e7895c28-image-1461177002636.29.02.png)
        2-3_Artist_Loops_New_11_b: El nuevo giro deberá ir **al final** del código dentro del bucle.
      grade2_MakeDogTag_BFP_authored_hint: [ ]
      grade2_PuppyLoops_10_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          ¿Cuántas veces se repitió mi forma?
          
          ¿Cuántas veces se *debería* repetir la forma?
          
          ¿Dónde puedes modificar eso en el programa?
      grade2_PuppyLoops_3_authored_hint:
        hint1: Este rompecabezas es muy similar al último.
        hint2: Utilizar un bloque de 'repetir 5 veces' para crear el ciclo.
        hint3: Place a `move forward` block inside the `repeat block`.
      grade2_PuppyLoops_5_authored_hint:
        hint1: La mejor solución utiliza los dos comandos 'avanzar' y un ciclo.
      grade2_PuppyLoops_6_authored_hint:
        2-3_Maze_16_a: Si el patrón es difícil de ver, intenta programarlo todo primero y mira qué cosas se repiten una y otra vez antes de colocar los bucles.
        2-3_Maze_16_b: "Para poner muchos bloques dentro de un bucle de \"repetición\", simplemente arrastre un bucle hacia el espacio de trabajo, luego arrastre todos los bloques desde el programa de inicio dentro de él!"
      grade2_PuppyLoops_7_authored_hint:
        2-3_Maze_Loops_17_a: Si el patrón es difícil de ver, intenta programarlo todo primero y mira qué cosas se repiten una y otra vez antes de colocar los bucles.
        2-3_Maze_Loops_17_b: '¿Se borró el código de inicio?  ¡Haga clic en "Comenzar de nuevo" para recuperarlo!'
      grade2_PuppyLoops_8_authored_hint:
        2-3_Artist_Debugging_2_a: 'Pista: cada hebra tiene una longitud de 75 pixeles.'
      grade2_PuppyLoops_9_authored_hint:
        2-3_Artist_Debugging_7_a: '¿Qué ocurre si mueves o lanzas al artista hacia atrás, después de que dibuja la primera línea?'
      grade2_collector_2_authored_hint:
        hint1: You can use four `move forward` blocks or use the `repeat 4 times` block to make your program shorter.
      grade2_collector_A_authored_hint: [ ]
      grade2_collector_A_2018_authored_hint: [ ]
      grade2_maze_debuggingFP_authored_hint: [ ]
      grade2_maze_intro4_authored_hint:
        hint_1: Connect a "move forward" block to the bottom of the program.
      grade2_playlab_project_6_authored_hint:
        idea1: |-
          * ¿Necesitas una idea? * ** ¿Quién está ahí? ** Haz que los personajes aparezcan con imágenes aleatorias , para que nadie sepa quién aparece a continuación. ! [] (https: // images .code.org / a56e03479801995d93ad5a4e4384a79e- image -1475340154498.gif)
        idea2: |-
          * ¿Necesitas una idea? * ** Ir a una aventura ** - Cambia el fondo, luego haz que los personajes hablen de dónde están ahora. ! [] (https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          * Necesitas una idea? * ** Pinball ** - hacer movimiento de un personaje con las flechas (cuando está arriba, bloques de flecha abajo), luego reproducir sonidos al azar cuando choca con otros caracteres en la pantalla.
      grade2_puppy_loops2_authored_hint:
        hint1: Puede resolver este rompecabezas con tres bloques, incluyendo 'cuando ejecute'.
        hint2: Intente poner el bloque de 'avanzar' dentro de un bloque de 'repetir' para crear un ciclo.
        hint3: Tendrá que repetir el comando 'avanzar' 5 veces para resolver este rompecabezas.
      grade2_puppy_loops3_authored_hint:
        hint1: Este rompecabezas es muy similar al último.
        hint2: Utilizar un bloque de 'repetir 5 veces' para crear el ciclo.
        hint3: Place a `move forward` block inside the `repeat block`.
      grade2_puppy_loops4_authored_hint:
        hint1: No todos los bloques de comando deben repetirse.
        hint2: Use dos bloques de repetición establecidos en diferentes números.
        hint3: "`Gire a la derecha` una vez entre los dos ciclos."
      grade2_puppy_loops5_authored_hint:
        hint1: La mejor solución utiliza los dos comandos 'avanzar' y un ciclo.
      grade2_puppy_loops6_authored_hint:
        2-3_Maze_16_a: Si el patrón es difícil de ver, intenta programarlo todo primero y mira qué cosas se repiten una y otra vez antes de colocar los bucles.
        2-3_Maze_16_b: "Para poner muchos bloques dentro de un bucle de \"repetición\", simplemente arrastre un bucle hacia el espacio de trabajo, luego arrastre todos los bloques desde el programa de inicio dentro de él!"
      grade2_puppy_loops7_authored_hint:
        2-3_Maze_Loops_17_a: Si el patrón es difícil de ver, intenta programarlo todo primero y mira qué cosas se repiten una y otra vez antes de colocar los bucles.
      grade3_ConditionalsElse_4_authored_hint:
        remember_quantum: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
      grade3_ConditionalsElse_5_authored_hint:
        remember_quantum: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
      grade3_ConditionalsElse_TeacherIDo_authored_hint:
        remember_quantum: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
      grade3_Conditionals_10 BAD_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Intente tratar este rompecabezas como un rectángulo largo donde la abeja necesita avanzar, luego gire a la izquierda varias veces para completar el camino.
      grade3_Conditionals_11_authored_hint:
        2-3_Bee_Conditionals_14_a: '¿Tienes problema en resolver cómo bajar los bloques? ¡Intenta tratar a la flor roja de la misma manera que la flor morada!'
        2-3_Bee_Conditionals_14_b: Si la flor roja fuera morada, ¿Podrías averiguar como utilizar un ciclo extra de 'repetición' para reducir el código?
        2-3_Bee_Conditionals_14_c: "Try breaking this up into two separate chunks:  \n\n![](https://images.code.org/670ac0889a8f523865ff4099b4c54844-image-1463445460440.36.42.png)\n\n1) Gather nectar 3 times\n  - Move forward 5 times\n  - Check to see if nectar, if so: get it\n  - Turn left\n  \n2) Make honey \n  - Move forward one time\n  - Make two honey"
      grade3_Conditionals_12_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Recuerda: las flores moradas solo tienen ya sea 0 o 1 de néctar y puede cambiar cada que ejecutes el programa.'
      grade3_Conditionals_2_authored_hint:
        2-3_Bee_Conditionals_3_a: El código será más corto si utilizas un bucle por cada vez que avanzas, que recolectas néctar y cada que fabricas miel.
      grade3_Conditionals_4_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Recuerda: las flores moradas cambian entre 0 y 1 cuando ejecutas el programa!'
      grade3_Conditionals_TeacherIDo_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Recuerda: las flores moradas cambian entre 0 y 1 cuando ejecutas el programa!'
      grade3_Debugging_1_authored_hint:
        2-3_Bee_Debugging_1_a: Una vez que encuentres y arregles el bloque incorrecto ¿Ves algún patrón que pueda hacerse más simple utilizando un ciclo "repetir"?
      grade3_Debugging_10_authored_hint:
        grade3_Debugging_10_a: |-
          Comience mirando solo el primer ciclo. ¿Qué hace? ¿Qué se supone que haga? ¿Qué te dice eso?
        grade3_Debugging_10_b: Una vez que tiene el primer ciclo, ¿cómo quiere qué quede en su código?
        grade3_Debugging_10_c: |-
          Intente envolver el ciclo sobrante alrededor del resto de su código completo. ¿funciona ahora?
          
          Si no, ¿qué sigue andando mal?
      grade3_Debugging_11_authored_hint:
        grade3_Debugging_11_a: |-
          Intente ejecutar el código con el botón "Paso". ¿Todo está bien en el primer paso? ¿Qué tal el segundo? ¿Dónde van las cosas mal?
        grade3_Debugging_11_b: Parece que todos los pasos correctos están aquí, solo necesita más de ellos. ¿Cómo puedes repetir las acciones `get néctar` y` make honey` varias veces?
      grade3_Debugging_2_authored_hint:
        grade3_Debugging_2_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        grade3_Debugging_2_b: '¿Ha observado algunos patrones que podrían ser hechos más simple usando un ciclo de repetición?'
      grade3_Debugging_3_authored_hint:
        grade3_Debugging_3_a: |-
          Use el botón "Paso" para ver si todo está bien en el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        grade3_Debugging_3_b: '¿Ves un patrón? Intenta usar ciclos anidados para resolver este rompecabezas.'
      grade3_Debugging_4_authored_hint:
        grade3_Debugging_4_a: '¿Hay algún lugar donde la abeja haga algo que no tiene sentido? ¿Qué pasa cuando cambias esos bloques?'
        grade3_Debugging_4_b: Intente simplificar el código utilizando ciclos anidados.
      grade3_Debugging_8_authored_hint:
        grade3_Debugging_8_a: "Intente utilizar el proceso de depuración varias veces seguidas. \n\n¿Qué causa el primer problema? Una vez que se resuelve ese problema, ¿qué sale mal?"
        grade3_Debugging_8_b: "Si tiene dificultades para descubrir cómo hacer el patrón de escalón de la escalera, intente trazarlo con el dedo y diga los comandos en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      grade3_Debugging_TeacherIDo_authored_hint:
        2-3_Bee_Debugging_4_a: '¿Hay algún lugar donde la abeja haga algo que no tiene sentido? ¿Qué pasa cuando cambias ese bloque?'
      grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Deberías terminar con cinco bloques dentro de tu bucle.
      grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Si no puedes detectar los bloques para colocar 'repetir` inmediatamente, comienza a codificar cada movimiento y busca un patrón.
      grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Si no puedes indicar que debería ir en el bucle 'repeat', intenta arrastrar los bloques uno por uno y ve si puedes encontrar un patrón.
        2-3_Bee_Loops_6_b: Debería haber 6 bloques dentro de su bucle `repeat` cuando haya terminado.
      grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Necesitas dos bucles 'repetir' diferentes, un después del otro.
      grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_7_b: 'Si no puedes programar el bucle desde el principio, intenta programarlo a lo largo del camino, luego busca un patrón.  '
      grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_4A_b: La última parte del programa puede terminarse escribiendo código al final de su programa fuera del bucle.
        2-3_Bee_Loops_4A_c: Si aún no puedes detectar los bucles, intenta codificarlo primero, luego ve lo que puedes combinar en un bucle 'repetir' al final.
      grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Deberías terminar con cuatro bloques dentro de tu bucle.
      grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Deberías tener 6 bloques dentro de tu bucle.
      grade3_RunningFarm_1_authored_hint:
        grade3_RunningFarm_1_a: Usted tendrá que buscar para el maíz 5 veces, utilizando una repetición del ciclo.
        grade3_RunningFarm_1_b: Asegúrese de usar un bloque de 'si en maíz'!
      grade3_RunningFarm_10_authored_hint:
        grade3_RunningFarm_10_a: This puzzle uses almost the exact same code as the last level, except you only need to repeat 4 times.
      grade3_RunningFarm_11a_authored_hint:
        grade3_RunningFarm_11a_a: You shouldn't need the `while path ahead` loop this time.
      grade3_RunningFarm_2_authored_hint:
        grade3_RunningFarm_2_a: 'La mejor manera de hacer esto es anidar las declaraciones de ''si'' ubicando uno dentro del otro.  '
        grade3_RunningFarm_2_b: Para este rompecabezas, usted debe tener una ' si / else` declaración y uno sencillo ` si ` comunicado.
      grade3_RunningFarm_3_authored_hint:
        grade3_RunningFarm_3_a: |-
          Para obtener todos los elementos, intente anidar declaraciones ' if ' tres profundas. Esto significa que debe poner un ` si ' declaración dentro de otro, a continuación, poner una tercera` si ' declaración dentro de la segunda.
        grade3_RunningFarm_3_b: Para este rompecabezas, usted debe tener dos ` if/ else` declaraciones y una llanura` if ` comunicado.
      grade3_RunningFarm_4_authored_hint:
        grade3_RunningFarm_4_a: |-
          Nadie sabe cuántas cabezas de lechuga crecerá de cada brote. Utilizar un ciclo 'mientras hay lechuga' para seguir recogiendo hasta que cada pieza haya sido recolectada.
      grade3_RunningFarm_5_authored_hint:
        grade3_RunningFarm_5_a: You will need to check for each type of crop that the farmer can pick.  Try using two `if/else` statements and one  `if` block.
      grade3_RunningFarm_6_authored_hint:
        grade3_RunningFarm_6_a: Utilizar un ciclo «mientras camino por delante» para mover al agricultor hacia abajo en cada parte de la espiral.
        grade3_RunningFarm_6_b: Sólo necesita el control del maíz durante la mayor parte de la cosecha. Sólo debes elegir una calabaza al final de su programa.
      grade3_RunningFarm_7_authored_hint:
        grade3_RunningFarm_7_a: |-
          Tenga en cuenta que el camino más fácil para llegar a todos los cultivos sigue siendo una espiral. ! [] (https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        grade3_RunningFarm_7_b: Try using `when path ahead` to keep the farmer moving the right number of steps.
        grade3_RunningFarm_7_c: 'Use nested `if` statements and `while there is` loops to check each space for corn and lettuce, then pick only a single pumpkin at the end. '
      grade3_bee_Conditionals_new4_authored_hint:
        grade3_bee_Conditionals_new4_a: Don't forget that you can use loops for shorter code!
      grade3_bee_conditionals_new1a_authored_hint:
        grade3_bee_conditionals_new1a_a: Be sure to use an `if` statement to check each space to see if it has a flower or nothing.
      grade3_bee_conditionals_new2a_authored_hint:
        grade3_bee_conditionals_new2a_a: Todavía puede tratar cada espacio como si hubiera una nube sobre él, aunque puede ver todo el camino.
        grade3_bee_conditionals_new2a_b: 'Use an `if` statement inside your loop to check each space. '
      grade3_bee_conditionals_new3a_authored_hint:
        grade3_bee_conditionals_new3a_a: In this puzzle, you know that each square has either a flower or a honeycomb.  That means you can repeat your `if/else` conditional at each square.
      grade3_bee_conditionals_quantum1_authored_hint:
        grade3_bee_conditionals_quantum1_a: Usted tendrá que utilizar un bloque ` si ` para comprobar si hay una flor debajo de la nube antes de tratar de obtener el néctar.
      grade3_bee_conditionals_quantum2_authored_hint:
        grade3_bee_conditionals_quantum2_a: Algunas veces una flor estará allí, otras no.  Si quieres que tu código se ejecute en ambos casos, asegúrate de utilizar un ` si ` comunicado.
      grade3_bee_conditionals_quantum3_authored_hint:
        grade3_bee_conditionals_quantum3: Asegúrese de utilizar una declaración` si ' para comprobar el nido de abeja debajo de cada nube.
      grade3_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta. \nQuerrá   usar un bloque condicional (`if / else`) para resolver el desafío."
      grade3_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
        grade3_bee_conditionals_quantum5_a: This puzzle is tricky, because you can't check blank squares, nectar *and* honey with a single conditional.
      grade3_maze_loops1_authored_hint:
        grade3_maze_loops1_a: Try using the "Step" button to find errors.
      grade3_maze_loops2_authored_hint:
        grade3_maze_loops2_a: |-
          Try using this path through the maze.
          
          ![](https://images.code.org/6a8b4b97a8eef813d8a827b0b7b2d36b-image-1480446509692.05.22.png)
        grade3_maze_loops2_b: Si el patrón es difícil de ver, intenta programarlo todo primero y mira qué cosas se repiten una y otra vez antes de colocar los bucles.
        grade3_maze_loops2_c: Intenta utilizar un ciclo 'repetir' dentro de otro para reducir la cantidad de código que necesitas.
      grade3_maze_loops2a_authored_hint:
        grade3_maze_loops2a_a: Para resolver este acertijo, deberá anidar un ciclo de 'repetición' dentro de otro.
      grade3_maze_loops3_authored_hint:
        2-3_Maze_Loops_19_a: Si estas atorado, intenta escribir el código sin ciclos primero y busca patrones.
        2-3_Maze_Loops_19_b: Poner un ciclo de repetición dentro de otro puede ayudar a disminuir la cantidad de bloques utilizados.
        2-3_Maze_Loops_19_c: Tomará dos conjuntos de ciclos 'repetir´anidados para resolver este acertijo.
      grade3_maze_loops4_authored_hint:
        2-3_Maze_Loops_20_a: Busca un patrón de escalera en este laberinto para encontrar dónde puede usarse un ciclo anidado.
      grade3_maze_loops5_authored_hint:
        2-3_Maze_Loops_21_a: Si tienes problemas para encontrar el patrón de escalera, intenta cubrir los caminos bloqueados con tu dedo.
      grade3_robotFarmer_ConditionalsIntro_10a_authored_hint: [ ]
      grade3_robotFarmer_ConditionalsIntro_11a_authored_hint: [ ]
      grade3_robotFarmer_ConditionalsIntro_5_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_5a: Trate de anidar un ciclo `while` en el interior de un ciclo de repetición.
      grade3_robotFarmer_ConditionalsIntro_7_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_7_a: Asegúrese de que esté utilizando el ciclo 'while' y averiguare cuántas veces lo necesita para llenar cada agujero.
        grade3_robotFarmer_ConditionalsIntro_7_b: Observe que el agricultor necesita avanzar y descender varias veces en un patrón de escalera.
      grade3_robotFarmer_ConditionalsIntro_8_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: El bloque `camino por delante` te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
      grade3_robotFarmer_ConditionalsIntro_9_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_9_a: Usted va a tener que utilizar más de un ciclo`while`.
        grade3_robotFarmer_ConditionalsIntro_9_b: Cada hoyo se encuentra al final de un camino, por lo que debes utilizar `while antes de usar` antes de usar` mientras hay un hoyo `.
        grade3_robotFarmer_ConditionalsIntro_9_c: Tenga en cuenta que necesita repetir el `while camino por delante`,` mientras que hay un hoyo `seis veces.
      grade4_arist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Este diseño se repetirá 10 veces terminando en 360 grados. ** 360/10 =? **
      grade4_arist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Tienes que repetir el bucle 6 veces terminando en 360 grados. ** 360/6 =? **
      grade4_arist_nested_loop_triangles2_authored_hint: [ ]
      grade4_arist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: |-
          No olvides hacer un giro después de su ciclo interno . Estarás formando un bucle de 6 triángulos en 360 grados. ** 360/6 =? **
      grade4_arist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "** 360/36 =? **"
      grade4_artist_functions1_authored_hint:
        2-3_Artist_Functions_1_a: Cada cuadrado tiene 100 pixeles de lado, eso significa que deberás avanzar hacia adelante 175 pixeles antes de dibujar el segundo cuadrado.
        2-3_Artist_Functions_1_b: Es correcto dibujar líneas solapadas para hacer tus lentes.
      grade4_artist_functions2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          El programa debe:
          - Usar la función
          - Avanzar 100 + 75 pixeles
          - Usar la función
      grade4_artist_functions2a_authored_hint:
        grade4_artist_functions2a_a: To get around using multiple `move forward` blocks, create a `draw triangle` function and call that multiple times.
      grade4_artist_functions3a_authored_hint:
        grade4_artist_functions2a_a: To get around using multiple `move forward` blocks, create a `draw triangle` function and call that multiple times.
      grade4_artist_functions3b_authored_hint:
        grade4_artist_functions2a_a: Para evitar la necesidad de bloques múltiples 'avanzar', cree una función de 'dibujar triángulo' y llamar varias veces.
      grade4_artist_functionsChallenge0_authored_hint:
        grade4_artist_functionsChallenge0_a: |-
          Comience haciendo una función para un cuadrado, luego intente hacer una función para una línea de cuadrados. ¿Cómo usarías la función ` dibujar una línea de cuadrados` para hacer esta imagen?
        grade4_artist_functionsChallenge0_b: Después de su primera línea de cuadrados, debe mover al artista hacia abajo y hacia atrás antes de comenzar su segunda línea de cuadrados.
        grade4_artist_functionsChallenge0_c: Debe mover al artista hacia atrás un número de píxeles diferente para las líneas pares que para las impares.
      grade4_artist_functions_challenge_authored_hint:
        Course_4_SCF_1_a: Cada hexágono tiene 40 lados de píxeles.
        Course_4_SCF_1_b: Hay un salto de 120 píxeles entre cada hexágono en cada línea horizontal.
        Course_4_SCF_1_c: "Antes de dibujar la segunda fila de hexágonos, debe girar a la derecha 60 grados y avanzar 40 píxeles.\n\nUna vez que estás en la ubicación vertical correcta, debes volver a girar a tu artista y retroceder 320 píxeles hacia atrás."
        Course_4_SCF_1_d: "Antes de dibujar la tercera fila de hexágonos, debes girar a la derecha 60 grados y avanzar 40 píxeles. Una vez que estás en la ubicación vertical correcta, debes volver a girar en tu artista y retroceder 440 píxeles (120 píxeles más que tu función de desplazamiento 'hacia abajo / adelante'). "
        Course_4_SCF_1_e: |-
          **Solution:**
          
          ![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      grade4_artist_functions_challenge2_authored_hint:
        Course_4_SCF_1_a: Cada hexágono tiene 40 lados de píxeles.
        Course_4_SCF_1_b: Hay un salto de 120 píxeles entre cada hexágono en cada línea horizontal.
        Course_4_SCF_1_c: "Antes de dibujar la segunda fila de hexágonos, debe girar a la derecha 60 grados y avanzar 40 píxeles.\n\nUna vez que estás en la ubicación vertical correcta, debes volver a girar a tu artista y retroceder 320 píxeles hacia atrás."
        Course_4_SCF_1_d: "Antes de dibujar la tercera fila de hexágonos, debes girar a la derecha 60 grados y avanzar 40 píxeles. Una vez que estás en la ubicación vertical correcta, debes volver a girar en tu artista y retroceder 440 píxeles (120 píxeles más que tu función de desplazamiento 'hacia abajo / adelante'). "
        Course_4_SCF_1_e: |-
          **Solution:**
          
          ![Solution Blocks](https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png)
      grade4_artist_functions_stars0_authored_hint:
        grade4_artist_functions_stars0_a: |-
          Para resolver este rompecabezas, solo necesita agregar un ciclo que repita el código de inicio 8 veces.
          
          Si no puede recordar cuál era el código de inicio, haga clic en "comenzar de nuevo" en la esquina superior derecha del espacio de trabajo.
      grade4_artist_functions_stars1_authored_hint:
        grade4_artist_functions_stars1_a: Intenta usar una función!
      grade4_artist_functions_stars2_authored_hint:
        grade4_artist_functions_stars2_a: No te rindas! Recuerda lo que has estado aprendiendo.
        grade4_artist_functions_stars2_b: Las funciones hacen que sea fácil de llamar a código guardado en cualquier momento, no sólo desde el interior de un ciclo!
      grade4_artist_functions_stars3_authored_hint:
        hint1: Don't give up!
      grade4_artist_functions_windows0_authored_hint:
        grade4_artist_functions_windows0_a: Concéntrese solo en hacer una ventana por ahora. Vamos a crear una función para el siguiente rompecabezas.
        grade4_artist_functions_windows0_b: Intente hacer ciclos anidados, donde el ciclo interno hace el cuadrado y el ciclo externo gira el cuadrado cuatro veces.
      grade4_artist_functions_windows2_authored_hint:
        grade4_artist_functions_windows2_a: Intenta crear tu función primero y luego agrega ventanas de una a una por vez.
        grade4_artist_functions_windows2_b: No debería necesitar agregar ningún ciclo de repetición adicional. Simplemente salta al artista 100 píxeles hacia adelante para cada ventana superior, y 150 píxeles hacia abajo para obtener las ventanas inferiores.
      grade4_artist_nestedLoops_challenge2_authored_hint:
        Course_4_Artist_11_a: 'El semi-hexágono tiene una ** longitud de 30 ** y gira a la derecha por ** 60 grados **.  '
        Course_4_Artist_11_b: 'El triángulo 2/3 tiene una ** longitud de 80 ** y gira a la derecha por ** 120 grados **. '
      grade4_artist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Este diseño se repetirá 10 veces terminando en 360 grados. ** 360/10 =? **
      grade4_artist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Tienes que repetir el bucle 6 veces terminando en 360 grados. ** 360/6 =? **
      grade4_artist_nested_loop_triangles2_authored_hint: [ ]
      grade4_artist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: |-
          Don't forget to make a turn after your inner loop.
          
          You'll be looping 6 triangles over 360 degrees.
          
          **6 x ? = 360**
      grade4_artist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "** 360/36 =? **"
      grade4_bee_conditionals_new1a_authored_hint:
        grade4_bee_conditionals_new1a_a: An `if` block will help you out in this puzzle.
      grade4_bee_conditionals_new2_authored_hint:
        grade4_bee_conditionals_new2_a: 'The flowers follow a rectangular path.  You can trace that rectangle using `while path ahead` even with a different number of squares per side. '
        grade4_bee_conditionals_new2_b: Puede comprobar todas los espacios de una flor usando el bloque ` si `, incluso si usted ya sabe que no hay nada allí.
      grade4_bee_conditionals_new3b_authored_hint:
        grade4_bee_conditionals_new3b_a: Una declaración `if / else` podría ayudarte mucho aquí.
      grade4_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
      grade4_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "** Recuerde: ** Este rompecabezas  cambia cada vez que se ejecuta.   \n\nUsted querrá utilizar un condicional de bloque ( ` si 'o' si / else`) para resolver el desafío."
      grade4_bee_functions1_authored_hint:
        grade4_bee_functions1_a: There is more than one right answer to this puzzle.
      grade4_bee_functions10_authored_hint:
        grade4_bee_functions10_a: Puedes usar exactamente la misma función  para este rompecabezas que hiciste en el último rompecabezas. Todo lo que necesitas hacer es crear una función que recolecte todo el néctar cuando llegues a cada flor.
      grade4_bee_functions2_authored_hint:
        grade4_bee_functions2_a: La función ha sido escrita para usted, pero deberá llamarla a cada flor.
      grade4_bee_functions3_authored_hint:
        grade4_bee_functions3_a: 'Tu función para este rompecabezas solo necesita hacer miel, no debería tener bloque de ''avanzar'' o ''girar''. '
      grade4_bee_functions4_authored_hint:
        grade4_bee_functions4_a: Your function will travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.
      grade4_bee_functions6_authored_hint:
        grade4_bee_functions6_a: Edite la función para que resuelva el acertijo sin tener que cambiar el programa principal.
        grade4_bee_functions6_b: "Your function should make the bee: \n- turn\n- move forward\n- collect all of the nectar\n- turn around\n- move back to the main path\n- turn back to the direction that the bee started from"
      grade4_bee_functions7_authored_hint:
        2-3_Bee_Functions_8_a: "Si el rompecabezas parece desafiante, intente construir su función un poco a la vez.   \n\nAgregue algunos  bloques , luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí! ! [] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      grade4_bee_functions8_authored_hint:
        2-3_Bee_Functions_8_a: "Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco. Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!"
        2-3_Bee_Functions_8_b: |-
          Recuerda construir tu código dentro del bloque de función verde. ! [] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        2-3_Bee_Functions_8_c: Esta función debe hacer que la abeja lo dirija hacia el camino, recoger el néctar, hacer la miel, girar la abeja y traerlo de regreso.
      grade4_bee_functions9_authored_hint:
        grade4_bee_functions9_a: Your function will only need to collect nectar... but this time, you will need to use a `while` loop instead of a `repeat` loop.
        grade4_bee_functions9_b: Use `mientras el néctar> 0` para recibir todo el néctar.
      grade4_bee_nestedLoops1_authored_hint:
        grade4_bee_nestedLoops1_a: Si no entiende cómo usar los ciclos anidados aquí, intente escribir las instrucciones paso a paso en un pedazo de papel. Encierra en un círculo los patrones que ves.
      grade4_bee_nestedLoops2_authored_hint:
        grade4_bee_nestedLoops2_a: Necesitarás repetir `obtener néctar` dentro de otra repetición que también tenga el bloque `avanzar` dentro de ella.
        grade4_bee_nestedLoops2_b: Tendrá que usar los tres bloques de `repetición` disponibles para resolver este rompecabezas.
        grade4_bee_nestedLoops2_c: |-
          Nest your blocks three deep, like this:
          
          - repeat 3
          - repeat 3
          - move forward
          - repeat 12
          - get nectar
          - turn right
      grade4_bee_nestedLoops2a_authored_hint:
        grade4_bee_nestedLoops2a_a: Intenta usar los ciclos anidados de repetición para resolver este rompecabezas.
      grade4_bee_nestedLoops4_authored_hint:
        grade4_bee_nestedLoops4_a: Intente construir su código línea por línea y vea si puede detectar los lugares donde una repetición hará que el código sea más corto!
        grade4_bee_nestedLoops4_b: |-
          Necesitarás un ciclo anidado para avanzar y obtener néctar, pero solo un ciclo para recolectar miel al final. En total, deberías usar 3 ciclos.
      grade4_bee_nestedLoops5_authored_hint:
        grade4_bee_nestedLoops5_a: You will need 4 repeat blocks!
      grade4_review_artist1_authored_hint:
        2-3_Artist_1_new_a: Si utilizas un bloque que me ayude a "avanzar 100 pixeles". Dibujaré una línea automáticamente.
        2-3_Artist_1_new_b: '¿Tienes problemas para girar en la esquina? Utiliza el bloque "girar a la derecha 90 grados".'
      grade4_review_artist2_authored_hint:
        2-3_Artist_6_a: 'Para realizar esos pequeños ángulos, tendrás que ir *más allá* cada vez así como lo hiciste con el cuadrado.   '
        2-3_Artist_6_b: Dado que ya estoy de lado derecho, es más fácil ir hacia adelante, luego gira a la derecha para crear el triángulo.
        2-3_Artist_6_c: Cada lado del triángulo tienen el mismo tamaño como los lados del cuadrado...¡100 pixeles!
      grade4_review_bee1_authored_hint:
        2-3_Bee_Loops_3B_a: Necesitas dos bucles 'repetir' diferentes, un después del otro.
      grade4_review_bee2_authored_hint:
        2-3_Bee_Loops_3_a: Deberías tener 6 bloques dentro de tu bucle.
      grade4_review_bee3_authored_hint:
        2-3_Bee_Loops_4_a: Deberías terminar con cinco bloques dentro de tu bucle.
      grade5_artist_binary10_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Este código usa dos `ciclos for`. Uno cuenta de 1 a 8, el otro cuenta de 8 a 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Cada `ciclo for` tiene tres repeticiones. El primero dibuja el conjunto más a la izquierda de 1s, el segundo dibuja los 0s en el medio y el tercero dibuja los 1s a la derecha.
        Course_4_Artist_Binary_Free_Play_2b_c: En cada repetición necesitas `contador` para 1s y` 16- (contador 2x) `para 0s.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Solution:**
          ![solution](https://images.code.org/866a92e042a546de3afcf462a8b5c695-image-1444438735003.58.28.png)
      grade5_artist_for_loops1_authored_hint:
        grade5_artist_for_loops1_a: |-
          If you use this `for` loop, it will run just like a `repeat 3 times` loop.
          
          ![](https://images.code.org/585d2e24f3021ac2561aec6e96dde430-image-1475906135993.54.11.png)
      grade5_artist_for_loops10_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: El polígono más grande tiene 19 lados.
        Course_4_Artist_For_Loops_Challenge_b: Cada polígono está incompleto, con un lado menos de lo que debería tener.
      grade5_artist_for_loops1b_authored_hint:
        grade5_artist_for_loops1b_a: |-
          Can you draw something like this:
          
          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      grade5_artist_for_loops2_authored_hint:
        grade5_artist_for_loops2_a: |-
          Use `counter` for the length of your triangles inside your `repeat` loop.
          
          ![](https://images.code.org/5e9465321a0b7a4d791848a79f3e6715-image-1475908305872.31.26.png)
      grade5_artist_for_loops3_authored_hint:
        Course_4_Artist_For_Loops_3_a: |-
          To have the `for` loop drive your movement, make sure that you're using `counter` as your distance in the `move forward` block.
          
          ![](https://images.code.org/15e87fc7fe408cbf1b63e0e8e69b7ffe-image-1475908502078.31.26.png)
      grade5_artist_for_loops4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "** ¿Cuál es el número más pequeño que necesitarás?\n¿Cuál es el número más grande?\n¿Qué tan grande es el aumento en cada ocasión? **\n\nEsas son las preguntas que debe realizar para completar los espacios en blanco del ciclo `for`."
      grade5_artist_for_loops5_authored_hint:
        grade5_artist_for_loops5_a: You don't need the traditional repeat loop when making this spiral!
      grade5_artist_for_loops7_authored_hint:
        grade5_artist_for_loops7_a: The pen is thinner in this puzzle. You will need to set it to `1` before you start.
        grade5_artist_for_loops7_b: Notice that this spiral turns right instead of left!
      grade5_artist_for_loops7a_authored_hint: [ ]
      grade5_artist_for_loops7b_authored_hint: [ ]
      grade5_artist_for_loops8_authored_hint:
        Course_4_Artist_For_Loops_11_a: "¡El ángulo de giro cambiará con cada forma!\n\nUse el bloque matemático para ingresar 360 dividido por el número de lados que tiene la forma para obtener el ángulo correcto. "
      grade5_artist_for_loops9_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 dividido por el número de lados que tiene una forma es la cantidad de grados que deberá girar. '
        Course_4_Artist_For_Loops_11a_b: 'Cada vez, deberá avanzar 10 veces la longitud del número actual de lados. '
      grade5_artist_for_loopsfreeplay11_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: La base de este código es la misma que la solución al desafío anterior... con un par de cambios.
        Course_4_Artist_For_Loops_inspire_b: Prueba un bucle 'for' que va de 3 a 10 con un incremento de 1.
        Course_4_Artist_For_Loops_inspire_c: Hay dos iteraciones del mismo bucle de repetición dentro del bucle 'for', pero la segunda repetición gira en la dirección opuesta.
        Course_4_Artist_For_Loops_inspire_d: "**Solution:**  ![Solution](https://images.code.org/d619892fc17ff491c201d86bb917e523-image-1441005190828.12.30.png) "
      grade5_artist_for_loopsfreeplay12_authored_hint:
        grade5_artist_for_loopsfreeplay12_a: The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.
        grade5_artist_for_loopsfreeplay12_b: The image in the drawing uses a turn of 61 degrees.
        grade5_artist_for_loopsfreeplay12_c: |-
          Want to know how the sample image was done?
          
          ![](https://images.code.org/fdc5d6c15b357ba9763ac9ea914967a9-image-1475911612774.23.51.png)
      grade5_artist_functionparameters10_authored_hint:
        brush_width: Establecemos el grosor del pincel a 1, luego el color azul antes de hacer cualquier otra cosa.
        double_loop: Trate de poner un ` ciclo ` dentro de un ciclo de repetición.
        specifics: "El `bucle for` se ejecuta de tres a diecisiete veces para cada uno de los seis \"pétalos\" antes de pasar a crear el siguiente, dibujando formas con solo un número impar de lados. El bloque `set alpha` usa la división para atenuar el color a medida que el contador aumenta."
        after: Cuando hayas terminado con cada "pétalo", asegúrate de "avanzar" 20 píxeles antes de hacer una rotación de 60 grados.
        solution: |-
          **Solution**
          
          ![](https://images.code.org/7e9f4be39d45726d537fe8e6e9147986-image-1456445254361.png)
      grade5_artist_functionparameters8_authored_hint:
        NEW_Course_4_Artist_Params_13_a: The length of sides for each shape is 7 times the number of sides it has.
      grade5_artist_functionparameters9_authored_hint:
        NEW_Course_4_Artist_Params_14_a: It's okay to run the program a few times to figure out how the function works with different parameters.
        grade5_artist_functionparameters9_b: You don't need to add any `move` or `turn` blocks to finish this code.
      grade5_artist_functionparameters9a_authored_hint:
        grade5_artist_functionparameters9a_a: 'Did the code get so scrambled up that it''s no longer recognizable?  Try clicking the "Start over" button in the upper righthand corner. '
        grade5_artist_functionparameters9a_b: Your new `min` variable should go in the first slot in your `for` loop, inside the function.
      grade5_artist_functionparameters9b_authored_hint:
        grade5_artist_functionparameters9b_a: If your function is correct, you shouldn't need to change it for this puzzle.
        grade5_artist_functionparameters9b_b: The only thing you should need to do between function calls is change the color of the line.
      grade5_artist_functionparameters_6_authored_hint:
        grade5_artist_functionparameters_6_a: Use a `for` loop to get the code as smooth as you can.
        grade5_artist_functionparameters_6_b: Remember to **add** a parameter.  Don't remove the one that is already there!
      grade5_artist_parameters_squares1a_authored_hint:
        grade5_artist_parameters_squares1a_a: Remember, you need to turn 90 degrees to draw a square.
        grade5_artist_parameters_squares1a_b: You only need to repeat as many times as the number of sides in a square.
      grade5_artist_parameters_squares2_authored_hint:
        grade5_artist_parameters_squares2_a: This gets easier if you put it all in a `for` loop.
        grade5_artist_parameters_squares2_b: |-
          Be sure to turn 90 degrees between each square!
          
          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      grade5_artist_parameters_squares2a_authored_hint:
        grade5_artist_parameters_squares2a_a: You need to click the "edit" button to get into the function.  Once you're there, add a parameter called `length` and use it inside your `move forward` block!
        grade5_artist_parameters_squares2a_b: When calling your function, use a `for loop` for the best possible code!
      grade5_artist_parameters_stars1_authored_hint:
        hint1: Don't give up!
      grade5_artist_variables_freeplay10_authored_hint:
        Course_4_Artist_Vars_8_a: Si divide su longitud inicial por el número de lados, la longitud de cada lado se acortará a medida que el número de lados aumente.
      grade5_artist_variables_freeplay15_authored_hint:
        Course_4_Artist_Inspire_a: Después de completar un cuadrado, Intentar saltar la mitad de su longitud antes de girar y hacer otro.
        Course_4_Artist_Inspire_b: Cada cuadrado y salto se repite cuatro veces (usar un giro a la izquierda en el medio) para formar una unidad completa similar a un molinete.
        Course_4_Artist_Inspire_c: Cada molinete también se repite cuatro veces, con un giro a la derecha de ** 360 / lados **.
        Course_4_Artist_Inspire_d: |-
          **Solution:**
          ![Blocks for solution](https://images.code.org/1865aaf1b4a8ba84a5e8a7408401092d-image-1440060930335.43.39.png)
      grade5_artist_variables_octagons13_authored_hint:
        Course_4_Artist_Vars_13_a: Necesita dos bucles de repetición (uno dentro del otro) ambos repitiendo `sides ' veces.
        Course_4_Artist_Vars_13_b: "El ciclo de repetición interno dibuja un octágono (girando a la izquierda). Luego, debes avanzar y girar a la derecha solo en el bucle externo."
        Course_4_Artist_Vars_13_c: Para ajustar la forma para que permanezca del mismo tamaño cuando cambia el número de lados, use el bloque matemático para dividir la longitud en píxeles por el número de lados.
      grade5_artist_variables_square7_authored_hint:
        Course_4_Artist_Vars_6_a: Para dibujar un polígono regular, gire ** 360 / lados ** cada vez.
      grade5_artist_variables_triangles1_authored_hint:
        grade5_artist_variables_triangles1_a: Para formar un ángulo interno de 60 grados en este triángulo, recuerda girar el artista 120 grados.
        grade5_artist_variables_triangles1_b: Use el bucle `repetir` para acortar su código.
        grade5_artist_variables_triangles1_c: Dentro de tu bucle, querras avanzar 50 píxeles, luego gira a la izquierda 120 grados.
      grade5_artist_variables_triangles1_2018_authored_hint:
        grade5_artist_variables_triangles1_a: Para formar un ángulo interno de 60 grados en este triángulo, recuerda girar el artista 120 grados.
        grade5_artist_variables_triangles1_b: Use el bucle `repetir` para acortar su código.
        grade5_artist_variables_triangles1_c: Dentro de tu bucle, querras avanzar 50 píxeles, luego gira a la izquierda 120 grados.
      grade5_bee_for_loops10_authored_hint:
        grade5_bee_for_loops10_a: "How much less is 12 than 15?  \nHow much less is 9 than 12?\n\nDo you see a pattern?"
      grade5_bee_for_loops11_authored_hint:
        NEW_Course_4_Bee_For_Loops_10a_a: Can you find a pattern between the number of steps you need to take and the number of nectars to gather?
        NEW_Course_4_Bee_For_Loops_10a_b: You'll need to have 2 repeats, one will use a math block.
      grade5_bee_for_loops3_authored_hint:
        grade5_bee_for_loops3_a: 'Use the `counter` variable inside the `repeat` loop where nectar is gathered to solve this puzzle. '
        grade5_bee_for_loops3_b: Your `for` loop will need to count from 1 to 5 with an increment of 1.
      grade5_bee_for_loops4_authored_hint:
        grade5_bee_for_loops4_a: Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.
        grade5_bee_for_loops4_b: Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!
      grade5_bee_for_loops5_authored_hint:
        grade5_bee_for_loops5_a: This time, your `move forward` block and your `get nectar` block will need to be in separate `repeat` loops.
      grade5_bee_for_loops6_authored_hint:
        grade5_bee_for_loops6_a: Don't forget to use a `counter` variable inside your `repeat` loop.
      grade5_bee_for_loops7_authored_hint:
        grade5_bee_for_loops7_a: Your `for` loop will need to count from 1 to 7 by 2.
      grade5_bee_for_loops8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: "If your loop is counting up, the increment is added to your counter variable each time through. \n\nWhat do you need to add to each number to get the next amount of nectar?"
      grade5_bee_for_loops9_authored_hint:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Try doing some math with the counter variable.
          
          What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?
        NEW_Course_4_Bee_For_Loops_7_b: 'Remember: If your loop is counting up, the increment is added to your `counter` variable each time through.'
      grade5_bee_parameters_new1_authored_hint:
        grade5_bee_parameters_new1_a: Use `if` statements to make sure you're only getting nectar from a flower.
      grade5_bee_parameters_new2_authored_hint:
        grade5_bee_parameters_new2_a: "To turn this into a function, simply drag the code into the existing function block.  \n\n\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)"
        grade5_bee_parameters_new2_b: Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built.
      grade5_bee_parameters_new3_authored_hint:
        grade5_bee_parameters_new3_a: Your function will run no matter which direction you're facing.
      grade5_bee_parameters_new4_authored_hint:
        grade5_bee_parameters_new4_a: You will need to add a parameter and use the resulting variable in your loop.
      grade5_bee_parameters_new5_authored_hint:
        grade5_bee_parameters_new5_a: Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.
      grade5_bee_parameters_new6_authored_hint:
        grade5_bee_parameters_new6_a: Which block automatically increments a variable that you could use as a parameter?
      grade5_bee_parameters_new7_authored_hint:
        grade5_bee_parameters_new7_a: You don't need a second parameter for this function, only a second `if` statement.
      grade5_bee_parameters_new8a_authored_hint:
        grade5_bee_parameters_new8a_a: This spiral can be simplified with a `for` loop.
      grade5_bee_parameters_new9a_authored_hint:
        grade5_bee_parameters_new9a_a: A `for` loop can help you with this stair step pattern, too!
        grade5_bee_parameters_new9a_b: For each stair, you'll need to call the function once, turn right, call the function again, then turn left.
      grade5_playlab_variables2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Asegúrese de establecer el número de `velocidad_perro`a algo más grande que` velocidad_gato`.
      gradeK_sequence_4_authored_hint:
        gradeK_sequence_4_a: '¡Intenta escribir los pasos en papel para encontrar una solución!'
      gradek_adventurer_loops3_authored_hint:
        gradek_adventurer_loops3_a: Para cambiar la distancia que recorre el aventurero, cambia la cantidad de veces que se ejecuta el bucle.
        gradek_adventurer_loops3_b: '¡No olvides que el aventurero necesita caminar hacia abajo y recoger oro después de que termine el bucle `repetir`!'
      gradek_adventurer_loops4_authored_hint:
        gradek_adventurer_loops4_a: Si usted no puede encontrar la respuesta de inmediato, trate de usar un trozo de papel para averiguar las flechas que se necesita y mirar un patrón.
      gradek_adventurer_loops4a_authored_hint:
        gradek_adventurer_loops4a_a: Can't figure out what's wrong? Try running the code to see what happens.
      gradek_adventurer_loops5_authored_hint:
        gradek_adventurer_loops5_a: Si no puede descubrir qué viene después, intente ejecutar el código para ver dónde termina Laurel.
      gradek_adventurer_loops6_authored_hint:
        gradek_adventurer_loops6_a: If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper and look for a pattern.
      gradek_adventurer_loops7_challenge_authored_hint:
        gradek_adventurer_loops7_challenge_a: '¿El código se siente realmente largo? Intenta poner dos de tus bucles `repetir` dentro de otro bucle para hacerlo mucho más corto!'
      gradek_adventurer_loops8_authored_hint:
        gradek_adventurer_loops8_a: If you can't figure out where to put the loops, try writing the code out step-by-step and look for a pattern.
      gradek_adventurer_loops9_authored_hint:
        gradek_adventurer_loops9_a: If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.
      gradek_artist_loops1_authored_hint:
        gradek_artist_loops1_a: Can't figure out how to draw a line?  Start attaching blocks to the `when run` block to see what happens.
      gradek_artist_loops2_authored_hint:
        gradek_artist_loops2_a: Is something not quite right?  Use the "Step" button to see where things go wrong.
      gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: Si desea que el ciclo se repita más de 4 veces, puede cambiar el número en la parte superior del bloque.
      gradek_artist_loops4_authored_hint:
        artistLoopsK3_a: Intenta usar lo que has aprendido sobre repetir bloques para completar este rompecabezas!
      gradek_artist_loops5_authored_hint:
        gradek_artist_loops5_a: No puede averiguar cómo hacer la colina? Intenta jugar un poco con los bloques para ver qué dibuja cada uno.
      gradek_artist_loops6_authored_hint:
        gradek_artist_loops6_a: '¿No puede averiguar dónde colocar el ciclo? Trate de escribir el código paso a paso, y buscar para un patrón.'
      gradek_artist_loops7_authored_hint:
        gradek_artist_loops7_a: Intenta ejecutar el código para ver lo que se ha escrito para ti.
        gradek_artist_loops7_b: '¿Cómo enlazarías el código que se te ha dado?'
        gradek_artist_loops7_c: "¿Qué hace el código?   \n¿Qué se supone que haga?   \n¿Qué te dice eso?"
      gradek_artist_loops8_authored_hint:
        gradek_artist_loops8_a: 'You don''t have to delete everything!  Some of the code is good. Use it to build the rest of the stairs. '
      gradek_artist_loops9_authored_hint:
        artistLoopsKA_a: Use el bloque de salto para avanzar sin dibujar una línea.
      gradek_artist_loopsA_authored_hint:
        artistLoopsKB_a: There should be 2 blocks inside of your loop to solve this puzzle.
      gradek_artist_loopsFP_authored_hint: [ ]
      gradek_playlab_events1a_authored_hint:
        gradek_playlab_events1a_a: Attach the `move up` block to the `when click` event so that the cat moves up when the "up" button is pressed.
      gradek_playlab_events1c_authored_hint:
        gradek_playlab_events1c_a: "Here is the block you should connect to the `when run` block: \n\n![](https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
      gradek_playlab_events2c_authored_hint:
        gradek_playlab_events2c_a: drag this block out ![](https://images.code.org/b3d6215901969328333d6393f8101c5b-image-1478142333199.png) and connect it to ![](https://images.code.org/4f2130b2a3053695414a02c3d39ef864-image-1478143461271.png)
      gradek_playlab_events3c_authored_hint:
        gradek_playlab_events3c_a: |-
          Here is the event block that you will need to get Jorge to move right:
          
          ![](https://images.code.org/cfc4b696b1ad5762ff40c1c8a17a194d-image-1478141370249.png)
        gradek_playlab_events3c_b: |-
          Here is the block you should connect to the `when right` event:
          
          ![](https://images.code.org/e5c559cc1deef643c8b997d17ecb78e3-image-1478141726783.png)
      gradek_playlab_events4c_authored_hint:
        gradek_playlab_events4c_a: "Here are the event blocks that you will need to use to move Jorge up and down:\n\n![](https://images.code.org/cf9a6992f7b4619dfb592fb6905effbb-image-1478140906017.png)\nand \n![](https://images.code.org/bb2a117cef485e79119a63e5d027968e-image-1478140979742.png)"
      gradek_playlab_events5c_authored_hint:
        gradek_playlab_events5c_a: |-
          Here is the event block that you would use to have Jorge do something when clicked:
          
          ![](https://images.code.org/6e3a654378643fd0590307ec3a0e429c-image-1478140058859.png)
        gradek_playlab_events5c_b: |-
          Here is the block you would use to change the background:
          
          ![](https://images.code.org/3f6d7a642b37c3abffe7b0de062ea076-image-1478140261440.png)
        gradek_playlab_events5c_c: |-
          Here is the block you would use to play a random sound:
          
          ![](https://images.code.org/81a8ef4f64023039438199fef67bb56b-image-1478140125332.png)
      gradek_playlab_eventsA_authored_hint:
        gradek_playlab_eventsA_a: |-
          If this seems like too much to do, try breaking it down into steps:
          
          1)  Have the actor change to a random size on click.
          2) Play a random sound when you click the actor.
          
          Now, make sure both of those actions are attached underneath the same event!
      harvester_Kahoot_authored_hint:
        courseE_farmer_functions1a_a: Piensa en las declaraciónes "si/entonces" paso a paso. ¿Que debes hacer si estas parado en una planta de maíz?
        courseE_farmer_functions1a_b: '¡Utiliza un bloque "repetir hasta" para llegar a la calabaza!'
      harvey_snowflake_artist1_authored_hint: [ ]
      harvey_snowflake_artist2_authored_hint: [ ]
      harvey_tictactoe_authored_hint:
        harvey_tictactoe: Puedes usar bloques `saltar` para moverte a otros espacios.
      iceAgeLoopsforVideo_authored_hint: [ ]
      iceage_click_hello_authored_hint:
        iceage_click_hello_a: Add one or more `actor 1 say` blocks to the `when clicked` event to complete this puzzle.
      iceage_click_hello_2018_authored_hint:
        iceage_click_hello_a: Add one or more `actor 1 say` blocks to the `when clicked` event to complete this puzzle.
      iceage_free_play_authored_hint:
        iceage_free_play_a: 'Can you make Sid and Manny have an Ice Crystal fight?  '
        iceage_free_play_b: Make Granny chase Diego.  End the game as a win if she catches him.
        iceage_free_play_c: Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.
      iceage_free_play_2018_authored_hint:
        iceage_free_play_a: 'Can you make Sid and Manny have an Ice Crystal fight?  '
        iceage_free_play_b: Make Granny chase Diego.  End the game as a win if she catches him.
        iceage_free_play_c: Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.
      iceage_free_playcourseF_IceAge_11_authored_hint:
        iceage_free_play_a: '¿Puedes hacer que Sid y Manny tengan una lucha de cristales de hielo?  '
        iceage_free_play_b: Haz que Granny persiga a Diego. Termina el juego como una victoria si lo atrapa.
        iceage_free_play_c: '¿Puedes hacer que Sid aviente copos de nieve a Diego y que Diego se haga más grande cada vez que recibe uno? Termina el juego como una victoria si Diego recibe 5 golpes.'
      iceage_hello1_authored_hint:
        iceage_hello1_a: Solo necesitas agregar un bloque para resolver este puzzle. Arrastre el bloque `decir` desde la barra de herramientas y conéctelo al bloque de evento `cuando ejecuta` que ya se encuentra en el área de trabajo. Luego, escribe "¡Hola!" dentro.
      iceage_hello1_2018_authored_hint:
        iceage_hello1_a: Solo necesitas agregar un bloque para resolver este puzzle. Arrastre el bloque `decir` desde la barra de herramientas y conéctelo al bloque de evento `cuando ejecuta` que ya se encuentra en el área de trabajo. Luego, escribe "¡Hola!" dentro.
      iceage_hello2_authored_hint:
        iceage_hello2_a: 'To solve this puzzle, you will need to have Sid say something using the `actor 1 say` block.  You will also need to have Manny say something with the `actor 2 say` block. '
      iceage_hello2_2018_authored_hint:
        iceage_hello2_a: 'To solve this puzzle, you will need to have Sid say something using the `actor 1 say` block.  You will also need to have Manny say something with the `actor 2 say` block. '
      iceage_move_events_authored_hint:
        iceage_move_events_a: 'Each of the `when ___ arrow` events will need to have a different `move actor 1` command connected to it to solve this puzzle. '
      iceage_move_events_2018_authored_hint:
        iceage_move_events_a: 'Each of the `when ___ arrow` events will need to have a different `move actor 1` command connected to it to solve this puzzle. '
      iceage_move_to_actor_authored_hint:
        iceage_move_to_actor_a: For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.
        iceage_move_to_actor_b: Connect the `play ___ sound` block to the `when actor 1 touches actor 2` event to finish this challenge.
      iceage_move_to_actor_2018_authored_hint:
        iceage_move_to_actor_a: For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.
        iceage_move_to_actor_b: Connect the `play ___ sound` block to the `when actor 1 touches actor 2` event to finish this challenge.
      iceage_move_to_flag_authored_hint:
        iceage_hello3_a: Use the `move actor 1 right by 200 pixels` block to solve this puzzle.
      iceage_move_to_flag_2018_authored_hint:
        iceage_hello3_a: Use the `move actor 1 right by 200 pixels` block to solve this puzzle.
      iceage_repeat_authored_hint:
        iceage_repeat_a: Use both the `move actor 1 left` and `move actor 1 right` blocks to solve this puzzle.
      iceage_repeat_2018_authored_hint:
        iceage_repeat_a: Use both the `move actor 1 left` and `move actor 1 right` blocks to solve this puzzle.
      iceage_sound_and_points_authored_hint:
        iceage_sound_and_points_a: You will need to add two blocks beneath the `when actor 1 touches actor 2` event.
        iceage_sound_and_points_b: You will need both the `score a point` block and the 'play ____ sound` block to pass this level.
      iceage_sound_and_points_2018_authored_hint:
        iceage_sound_and_points_a: You will need to add two blocks beneath the `when actor 1 touches actor 2` event.
        iceage_sound_and_points_b: You will need both the `score a point` block and the 'play ____ sound` block to pass this level.
      iceage_throw_hearts_authored_hint:
        iceage_throw_hearts_a: When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!
        iceage_throw_hearts_b: To get granny to be happy when she receives a heart, you will need to connect the `set actor 2 mood to happy` block beneath the `when actor 2 touches projectile` event.
      iceage_throw_hearts_2018_authored_hint:
        iceage_throw_hearts_a: When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!
        iceage_throw_hearts_b: To get granny to be happy when she receives a heart, you will need to connect the `set actor 2 mood to happy` block beneath the `when actor 2 touches projectile` event.
      iceage_warn_embed_ice_age_authored_hint: [ ]
      iceage_warn_ice_age_authored_hint:
        iceage_warn_ice_age_a: 'You should only have to add two blocks to get this puzzle where it needs to be. '
        iceage_warn_ice_age_b: Add both new blocks beneath the `when run` event to have them happen immediately after the program starts.
      iceage_warn_ice_age_2018_authored_hint:
        iceage_warn_ice_age_a: 'You should only have to add two blocks to get this puzzle where it needs to be. '
        iceage_warn_ice_age_b: Add both new blocks beneath the `when run` event to have them happen immediately after the program starts.
      k1stickerfreeplay_authored_hint: [ ]
      level 'grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Deberías terminar con cinco bloques dentro de tu bucle.
      level 'grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Si no puedes detectar los bloques para colocar 'repetir` inmediatamente, comienza a codificar cada movimiento y busca un patrón.
      level 'grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Si no puedes indicar que debería ir en el bucle 'repeat', intenta arrastrar los bloques uno por uno y ve si puedes encontrar un patrón.
        2-3_Bee_Loops_6_b: Debería haber 6 bloques dentro de su bucle `repeat` cuando haya terminado.
      level 'grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Necesitas dos bucles 'repetir' diferentes, un después del otro.
      level 'grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_7_b: 'Si no puedes programar el bucle desde el principio, intenta programarlo a lo largo del camino, luego busca un patrón.  '
      level 'grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_4A_b: La última parte del programa puede terminarse escribiendo código al final de su programa fuera del bucle.
        2-3_Bee_Loops_4A_c: Si aún no puedes detectar los bucles, intenta codificarlo primero, luego ve lo que puedes combinar en un bucle 'repetir' al final.
      level 'grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Deberías terminar con cuatro bloques dentro de tu bucle.
      level 'grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Deberías tener 6 bloques dentro de tu bucle.
      playLabDebugVideo1_authored_hint:
        courseA_playLab_events2_a: "Aquí está el bloque debes conectar al bloque 'al ejecutar':! [] (https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png)"
      sample3_authored_hint:
        sample3_a: |-
          Try writing the code once and looping it seven times:
          
          ![](https://images.code.org/2a116e75e31ee3a8a8683349c9460286-image-1464307689813.gif)
      sample5_authored_hint:
        sample5_a: Did you know that you can put as many blocks inside of a repeat loop as you want to?
        sample5_b: |-
          The bee is looping these actions over and over again:
          - move forward
          - make honey
          - turn left
          - move forward
          - turn right
      sample6_authored_hint:
        sample6_a: Did you know that you can use more than one repeat loop in a puzzle?
        sample6_b: Sometimes repeat loops have lots of blocks inside, and sometimes they might only have one!
      sample7assessment_authored_hint: [ ]
