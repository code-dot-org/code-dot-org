es-MX:
  data:
    instructions:
      2-3 Artist 1 new_instruction: Hola, soy un artista. Puedes escribir código para hacerme dibujar cualquier cosa. Usa algunos bloques para hacerme dibujar sobre las líneas grises en la imagen. (Cada línea tiene 100 píxeles de largo)
      2-3 Artist 11_instruction: "Dale un borde a la señal de alto haciendo un octágono con ocho lados, cada uno de 100 píxeles de largo. ¿Cuántos grados debes girar? (Pista: ¿Cuánto es 360 dividido entre 8?) "
      2-3 Artist 12_instruction: |-
        Configura el bloque "repetir" de tal forma que cree un "círculo" para terminar el globo ocular. Si cada movimiento gira un grado a la derecha, ¿cuántas veces necesitas repetir para completar el círculo? ¿180? ¿360? ¿500?
      2-3 Artist 2 new_instruction: 'Esta casa tiene una pared a medio terminar. Cada lado mide 100, pero la pared incompleta solo mide 50. Completa la pared. '
      2-3 Artist 2_instruction: 'Esta casa tiene una pared a medio terminar. Cada lado mide 100, pero la pared incompleta solo mide 50. Completa la pared. '
      2-3 Artist 3.4_instruction: El bloque Salta mueve el artista sin dibujar. Dibuja la línea punteada utilizando los bloques Salta y Dibuja.
      2-3 Artist 3_instruction: Este sombrero mide 100 píxeles de alto. Dibuja un sombrero que mida 70 píxeles menos.
      2-3 Artist 3new_instruction: "El sombrero rojo tiene 100 píxeles de alto. Termina de dibujar un sombrero negro que tiene 70 píxeles menos. El ancho del sombrero negro es de 50 píxeles."
      2-3 Artist 4_instruction: Ayúdame a completar la casa para este gato.
      2-3 Artist 5_instruction: Sustituye este código con el bloque "repetir" para dibujar la misma casa usando sólo 3 bloques.
      2-3 Artist 6_instruction: '¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.'
      2-3 Artist 7_instruction: 'Termina de dibujar la mitad derecha de la última ventana. Cada cuadrado de la ventana mide 25 píxeles.'
      2-3 Artist 8_instruction: Completa las habitaciones para cada uno de los animales dividiendo el rectángulo en 2 cuadrados del mismo tamaño. El rectángulo mide 200 píxeles de ancho y 100 píxeles de alto.
      2-3 Artist 9 NEW_instruction: Termina esta cometa
      2-3 Artist 9 REPLACEMENT_instruction: Termina de dibujar estas escaleras!
      2-3 Artist 9_instruction: Termina esta cometa
      2-3 Artist Assessment 1_instruction: 'evaluación Termina de dibujar el último diente, 25 píxeles de ancho por 25 píxeles de alto.'
      2-3 Artist Debugging 1_instruction: '¿Puedes hacer este sombrero con una longitud máxima de 100?'
      2-3 Artist Debugging 10_instruction: "El pad de dirección en mi control es demasiado angosto. Sugerencia: Hazlo 10 píxeles mas ancho"
      2-3 Artist Debugging 11_instruction: |-
        Ayúdame a terminar mi hermoso copo de nieve. ¿Cuántas veces necesito "Repetir" para finalizarlo?
      2-3 Artist Debugging 12_instruction: Tengo que añadir una ola del océano a esta escena. ¿Puedes ayudarme?
      2-3 Artist Debugging 2_instruction: "El código para los tres bigotes que ves es incorrecto. Sugerencia: cada bigote tiene 75 píxeles de largo. Repara este código para dibujar los bigotes."
      2-3 Artist Debugging 3_instruction: "¡Mi barco tiene un agujero! ¿Puedes repararlo cambiando el ángulo de la línea? Sugerencia: el último ángulo está errado por 15 grados."
      2-3 Artist Debugging 4_instruction: '¿Qué imagen intentamos representar? Termina de unir los puntos mediante los ángulos y líneas adecuados.'
      2-3 Artist Debugging 5_instruction: "El código para la pierna y el pie está equivocado. Sugerencia: El pie es demasiado largo, podríamos necesitar eliminar un paso (juego de palabras intencional)"
      2-3 Artist Debugging 6_instruction: |-
        Parece que estoy sentado en una silla a la que le falta una pata. Edita los Bloques para dibujar la pata.
      2-3 Artist Debugging 7_instruction: |-
        Parece que la C en Código está dibujada al revés - ¿Puedes hacer que parezca una C?
      2-3 Artist Debugging 8_instruction: |-
        Mi molinillo de viento no está terminado. ¿Cuántas veces necesito repetir para terminarlo?
      2-3 Artist Debugging 9_instruction: |-
        El código de este tallo es incorrecto. Sugerencia: El ángulo está fuera por 60 grados
      2-3 Artist Debugging Assessment 1_instruction: "Esta figura es demasiado pequeña. ¿Puedes hacerla más grande? Pista: debería tener 75 píxeles más por cada lado."
      2-3 Artist Free Play_instruction: '¡Juego libre! Dibuja lo que quieras.'
      2-3 Artist Functions 1 a_instruction: "Hola. Yo artista zombi. ¡Yo amo dibujar! Ayúdame a dibujar las gafas cuadradas. Sugerencia: el puente entre las gafas es 25 píxeles más corto que el ancho del cuadrado."
      2-3 Artist Functions 1_instruction: "Hola. Yo artista zombi. ¡Yo amo dibujar! Ayúdame a dibujar las gafas cuadradas. Sugerencia: el puente entre las gafas es 25 píxeles más corto que el ancho del cuadrado."
      2-3 Artist Functions 10_instruction: 'Aquí hay dos funciones, una para dibujar un engranaje grande y otra para dibujar un engranaje pequeño. ¡Utilízalos para dibujar el interior de una máquina!'
      2-3 Artist Functions 11 a_instruction: "Hemos renombrado la función \"dibuja un cuadrado\" a \"dibuja un hexágono\", ¡pero sigue dibujando cuadrados! ¿Puedes modificar la función \"dibuja un hexágono\" para que dibuje un hexágono con 50 píxeles de cada lado y que dibuje la imagen usando la función?"
      2-3 Artist Functions 11.5 a_instruction: "Aquí está la misma función \"Dibuja un hexágono\". ¿Qué pasa si sólo giras 60 grados en cada iteración?"
      2-3 Artist Functions 11.5_instruction: "Aquí está la misma función \"Dibuja un hexágono\". ¿Qué pasa si sólo giras 60 grados en cada iteración?"
      2-3 Artist Functions 11_instruction: "Hemos renombrado la función \"dibuja un cuadrado\" a \"dibuja un hexágono\", ¡pero sigue dibujando cuadrados! ¿Puedes modificar la función \"dibuja un hexágono\" para que dibuje un hexágono con 50 píxeles de cada lado y que dibuje la imagen usando la función?"
      2-3 Artist Functions 12 Mike_instruction: "Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función \"dibujar una flor\" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  "
      2-3 Artist Functions 12 a_instruction: "Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función \"dibujar una flor\" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  "
      2-3 Artist Functions 12_instruction: "Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función \"dibujar una flor\" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  "
      2-3 Artist Functions 13_instruction: Tienes cuatro funciones. Utilízalas como quieras dentro de uno o varios bucles para hacer dibujos que puedes compartir con tus amigos. Pulsa "run" para ver un ejemplo.
      2-3 Artist Functions 2 a_instruction: 'Use the small green `draw a square` block to call this new function and create the glasses. '
      2-3 Artist Functions 2_instruction: "¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada \"dibuja un cuadrado\". ¿Puedes utilizar la función \"dibuja un cuadrado\" para crear los lentes? Los cuadrados están separados por 75 píxeles."
      2-3 Artist Functions 3 a_instruction: "Edit the \"draw a square\" function to draw glasses with frames that are 115px on each side. \n\nThe squares are now 45 pixels apart."
      2-3 Artist Functions 3_instruction: "Edita la función para dibujar un cuadrado con una longitud lateral de 115 y dibuja los lentes más grandes. Los cuadrados están ahora separados 45 píxeles."
      2-3 Artist Functions 4 a_instruction: Now, put the function inside of a loop and add an extra turn to draw these three squares.
      2-3 Artist Functions 4_instruction: Usa el bloque "repetir" para dibujar estos 3 cuadrados.
      2-3 Artist Functions 7_instruction: 'Utiliza la función "dibuja una casa" para dibujar dos casas utilizando dos parámetros diferentes. (Sugerencia: la primera casa es de 100 píxeles).'
      2-3 Artist Functions 9_instruction: 'Ésta es la función copo de nieve. ¡Experimenta con ella para crear una escena invernal! Éste es un nivel libre de acertijos, puedes jugar libremente. ¡Diviértete!'
      2-3 Artist Loops 1_instruction: '¿Podrías hacer un hexágono cuyos lados midan 100 píxeles de largo para terminar la célula? Recuerda, eso significa que ¡sólo deberás girar 60 grados!'
      2-3 Artist Loops 10_instruction: '¿Qué pasa con el diseño cuando hacemos nuestro último paso hacia adelante hasta la mitad?'
      2-3 Artist Loops 11_instruction: '¡Ahora vamos a poner * otro * bucle alrededor de toda la creación! No olvide añadir un ángulo al final del bucle externo.'
      2-3 Artist Loops 2_instruction: Ahora, usa un bloque de repetición para que la célula se convierta en una concha.
      2-3 Artist Loops 4_instruction: '¿Quieres ver lo que pasa cuando repetimos la forma una y otra vez utilizando un bucle?'
      2-3 Artist Loops 5_instruction: Ahora vamos a hacer un pequeño cambio en el bucle y ver cuán diferente se convierte nuestro foto.
      2-3 Artist Loops 6_instruction: Añadir un paso más y otra vez dentro del bucle y ver cómo cambia su diseño.
      2-3 Artist Loops 7_instruction: Podemos usar bucles para hacer todas las clases de polígonos. ¿Puede crear un rombo dentro de este hexágono?
      2-3 Artist Loops 8_instruction: Pongamos ambos elementos dentro de un ciclo.
      2-3 Artist Loops 9_instruction: |-
        Vamos a iterar sobre los mismos elementos, pero ahora vamos a añadir algo de separación entre ellos. Usa el mismo código de antes pero añade un paso mas al final del bucle exterior.
      2-3 Artist Loops New 1_instruction: '¡Dibujemos la cabeza de este robot! ¿Puedes hacer un cuadrado con lados que son de 100 píxeles?'
      2-3 Artist Loops New 10_instruction: Ahora conectemos un montón de V juntos, dibujándolos en un bucle.
      2-3 Artist Loops New 11_instruction: Esta vez vamos a dibujarlo 24 veces. Añadir un giro a la izquierda de 30 grados a este código y ponerlo todo en un bloque de repetición.
      2-3 Artist Loops New 12_instruction: 'Dibuja un diamante con lados de 100 píxeles.'
      2-3 Artist Loops New 13_instruction: "Ahora dibuja un diamante 3 veces en una iteración."
      2-3 Artist Loops New 14_instruction: Ahora, a dibujar el diamante 10 veces pero gire 90 grados entre cada diamante.
      2-3 Artist Loops New 15_instruction: Dibuja algo divertido.
      2-3 Artist Loops New 2_instruction: |-
        Aquí hay parte del código que utilizas para dibujar ese cuadro. ¿Qué sucede si se utiliza el bloque de repetición para ejecutar este código 4 veces?
      2-3 Artist Loops New 9_instruction: Dibujar una "V" simple donde ambos lados sean 50 píxeles para completar la flecha.
      2-3 Artist Match Hex Pic_instruction: 'Iguala: Ayuda a terminar el hexágono.'
      2-3 Artist Match Rho Pic_instruction: 'Iguala: Terminar el código faltante.'
      2-3 Artist Match Sq Pic_instruction: 'Iguala: Completar el código faltante'
      2-3 Artist Match Tri pic_instruction: 'Igualando: Rellene el código faltante.'
      2-3 Artist Nested Loops 1_instruction: Has usado bucles para dibujar formas anteriormente, pero sabías que puedes poner un bucle dentro de otro bucle, todo este bloque de código 3 veces para dibujar el patrón.
      2-3 Artist Nested Loops 10_instruction: Itera este código 12 veces para completar el patrón.
      2-3 Artist Nested Loops 11_instruction: Haga un bucle de este código 4 veces para completar el patrón, gire 90 grados después de cada círculo.
      2-3 Artist Nested Loops 12_instruction: Itera este código 12 veces para completar las curvas.
      2-3 Artist Nested Loops 2_instruction: "Ahora haga un bucle del triángulo 6 veces. Después de cada triángulo, usted necesitará girar 60 grados antes de dibujar el siguiente."
      2-3 Artist Nested Loops 3_instruction: "Usted necesitará el triángulo del bucle 12 veces para dibujar este patrón. Divida el número de grados en un círculo (360) por el número de formas que dibujas (12) para averiguar cuánto debe girar después de cada forma."
      2-3 Artist Nested Loops 4_instruction: "Haga un bucle de este diamante 12 veces para dibujar una flor. Sugerencia: 12 diamantes es igual a los 12 triángulos que hiciste - ¿cuánto necesitas para girar después de cada forma?"
      2-3 Artist Nested Loops 5_instruction: "Llenar en las ventanas del edificio con un bucle anidado. Las ventanas son 20 píxeles largos y 20 píxeles aparte."
      2-3 Artist Nested Loops 6_instruction: |-
        Este dinosaurio tiene 8 picos subiendo su cola; cada espiga es 30 píxeles de largo. El triángulo del bucle 8 veces, pero asegúrese de mover hacia adelante después de cada uno.
      2-3 Artist Nested Loops 7_instruction: "Bucle este triángulo 10 veces para dibujar el sol, necesitarás moverte y girar después de cada triángulo. Puedes averiguar cuánto girar dividiendo la cantidad de grados en un círculo por la cantidad de figuras que lo componen."
      2-3 Artist Nested Loops 8_instruction: "Ahora vamos a agregar un poco de hierba a nuestra imagen. Cada penacho de césped es 50 píxeles aparte."
      2-3 Artist Nested Loops 9_instruction: "Terminaremos esta foto agregándole una flor. Enrolle el diamante 12 veces para dibujar su flor."
      2-3 Artist Nested Loops Free Play_instruction: juego libre, dibujar algo fascinante con bucles anidados.
      2-3 Bee Conditionals 1_instruction: '¡Hola! Soy una abeja. Ayúdame a obtener néctar de la flor.'
      2-3 Bee Conditionals 10_instruction: 'Flores de color púrpura pueden tener 1 o 0 néctar. Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno.'
      2-3 Bee Conditionals 11_instruction: "Ayúdame a recolectar néctar, pero solo de las flores que tienen néctar."
      2-3 Bee Conditionals 12_instruction: Utilizar un bucle para comprobar y recolectar el néctar de todas estas flores.
      2-3 Bee Conditionals 13_instruction: |-
        Recoge néctar y haz miel. Pista: ¿Qué ocurre si usas el condicional "Si néctar" en una flor roja? ¿Puedes completar esto con un bucle (loop)?
      2-3 Bee Conditionals 14_instruction: |-
        Colecta néctar y miel. Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno.
      2-3 Bee Conditionals 15_instruction: "Recoge néctar de las cuatro flores."
      2-3 Bee Conditionals 2_instruction: "¡Hola, soy una abeja! Ayúdame a recoger todo el néctar de las flores. Utiliza un bucle (loop)."
      2-3 Bee Conditionals 3_instruction: "Ayúdame a recoger todo el néctar de las flores y a hacer miel. Usa un bucle (loop)."
      2-3 Bee Conditionals 4_instruction: Ayúdame a recoger todo el néctar de las flores y a hacer toda la miel.
      2-3 Bee Conditionals 5_instruction: "¡Flores de color púrpura pueden tener 1 o 0 néctar, pero no sabes cuál! Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno. Compruebe si el néctar es igual a 1 utilizando el bloque if."
      2-3 Bee Conditionals 6_instruction: Verifica esta flor con un bloque de "if" para ver si hay cualquier néctar disponible.
      2-3 Bee Conditionals 7_instruction: Colecta néctar de cada flor si tiene alguno.
      2-3 Bee Conditionals 8_instruction: Este campo tiene flores rojas y púrpura. Flores rojas tienen una cantidad conocida de néctar, pero se desconoce el néctar de la flor de color púrpura. Colecta todo el néctar.
      2-3 Bee Conditionals 9_instruction: Colecta todo el néctar de cada flor.
      2-3 Bee Conditionals Assessment 1_instruction: 'evaluación Colecta todo el néctar. Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno.'
      2-3 Bee Debugging 1_instruction: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 10_instruction: "Estos bloques realmente me molestan. Corregir el (los) error(es) para colectar todo el néctar y hacer toda la miel."
      2-3 Bee Debugging 2_instruction: |-
        Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 3_instruction: |-
        Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 4_instruction: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 5_instruction: "Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel. Usted puede ahora usar ejecutar y paso."
      2-3 Bee Debugging 6_instruction: |-
        Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer toda la miel.
      2-3 Bee Debugging 7_instruction: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 8_instruction: |-
        Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 9_instruction: |-
        Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging Assessment 1_instruction: |-
        Evaluación: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Functions 1_instruction: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 2 néctar" para recolectar el néctar de cada flor.
      2-3 Bee Functions 10_instruction: "Las flores moradas pueden tener 1 o 0 néctar. Crea una función que recoja el néctar solo de aquellas flores que lo tengan."
      2-3 Bee Functions 2_instruction: "Las funciones son bloques de código que realizan una tarea. Utilice la función \"get 5\" para obtener 5 néctares a cada momento. Asegúrese de utilizar un bucle para obtener un recuento ideal de bloque, también."
      2-3 Bee Functions 3_instruction: Colecta todo el néctar de cada flor.
      2-3 Bee Functions 4_instruction: "La función \"mover y obtener néctar\" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar."
      2-3 Bee Functions 5_instruction: Ahora hay más néctar en las flores. Edita la función dada de manera que recoja 4 néctares y úsalo para recoger todo el néctar de las flores.
      2-3 Bee Functions 6_instruction: Ahora, utiliza la misma función para recoger el néctar de las tres flores.
      2-3 Bee Functions 7_instruction: Las flores están ahora más lejos. Editar la función dada y usarlo para recoger todo el néctar de las flores.
      2-3 Bee Functions 8_instruction: Crea tu propia función que obtiene 7 de néctar, avanza hacia adelante y obtén 7 de miel. Utiliza la función para recoger néctar en cada flor y hacer miel en cada panal de miel.
      2-3 Bee Functions 9_instruction: Crea tu propia función que desciende por un camino, obtiene néctar, hace miel y luego devuelve la abeja a la cima de la ruta.
      2-3 Bee Functions Assessment 1_instruction: 'Utilice la función dada para recolectar néctar de cada flor.'
      2-3 Bee Functions Assessment 2_instruction: 'Valoracion: Crea una función para hacer 3 mieles a la vez.'
      2-3 Bee Loops 1_instruction: |-
        Cada flor contiene una unidad de néctar. Recolecta néctar de cada una de las flores. 
      2-3 Bee Loops 10_instruction: '¿Podrías utilizar un ciclo mientras dentro de otros dos ciclos para recolectar todo el néctar?'
      2-3 Bee Loops 11_instruction: Utiliza ciclos mientras para recolectar todo el néctar de las flores en este campo.
      2-3 Bee Loops 12_instruction: Utiliza ciclos mientras para recolectar todo el néctar de las flores en este campo.
      2-3 Bee Loops 13_instruction: 'Evaluación: Usa el bloque de repetición para recoger todo el néctar.'
      2-3 Bee Loops 1A_instruction: '¡Hola, soy una abeja! ¿Puedes ayudarme a recolectar el néctar de estas flores?'
      2-3 Bee Loops 2_instruction: Usa un ciclo para recolectar el néctar y hacer la miel.
      2-3 Bee Loops 2A_instruction: '¿Podrías hacer la misma tarea más fácilmente con un ciclo?'
      2-3 Bee Loops 3_instruction: Recolecta el néctar de cada flor y haz miel en cada panal.
      2-3 Bee Loops 3A_instruction: '¿Podrías utilizar un ciclo para recolectar todo el néctar?'
      2-3 Bee Loops 3B_instruction: Ahora usa el nuevo bloque repeat para recolectar todo el néctar y hacer toda la miel.
      2-3 Bee Loops 4_instruction: |-
        Utiliza un ciclo similar al del último problema, pero ahora utiliza un bloque turn.
      2-3 Bee Loops 4A_instruction: "¿Qué pasa si haces un ciclo con esta secuencia 3 veces? ¡No olvides hacer la miel al final!"
      2-3 Bee Loops 5_instruction: "Utiliza un ciclo para seguir los pasos y recolectar el néctar."
      2-3 Bee Loops 6_instruction: Utiliza un ciclo para recolectar néctar de cada flor y hacer miel en cada panal.
      2-3 Bee Loops 7_instruction: Pon estos bloques en un ciclo para recolectar néctar de cada flor.
      2-3 Bee Loops 8_instruction: "Estas flores moradas tienen una cantidad desconocida de néctar. Utiliza el ciclo \"while nectar\" para recolectar todo el néctar. Este ciclo va a ejecutarse mientras la condición sea verdadera, en este caso Néctar > 0."
      2-3 Bee Loops 9_instruction: El ciclo while puede ejecutar la misma acción como un estatuto if en un ciclo. Añade un ciclo while a este código para ejecutar la misma tarea.
      2-3 Bee Loops Assessment 1_instruction: 'Evaluación - Utiliza un ciclo while para recolectar todo el néctar de esta flor.'
      2-3 Maze 1_instruction: '¿Me puedes ayudar a atrapar al cerdo malo? Apila un par de bloques "avanzar" juntos y presiona "Ejecutar".'
      2-3 Maze 10_instruction: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze 11_instruction: '¡Llévame a la flor que tengo hambre! ¿Cuántas veces se tiene que repetir un bloque?'
      2-3 Maze 12 (copy 1)_instruction: '¿Podrías reemplazar la respuesta anterior con solo dos bloques? (Sugerencia: Crea un ciclo utilizando un bloque de "repeticiones".)'
      2-3 Maze 12 (copy 2)_instruction: '¿Podrías reemplazar la respuesta anterior con solo dos bloques? (Sugerencia: Crea un ciclo utilizando un bloque de "repeticiones".)'
      2-3 Maze 12 (old)_instruction: '¡Llévame al cerdo, ahora con el bloque repetir!'
      2-3 Maze 12 - One Move Block_instruction: Llegar al cerdo! Pero esta vez, sólo se puede utilizar un bloque de 'avanzar'. ¿Cree que cualquier otros bloques que te pueden ayudar?
      2-3 Maze 12_instruction: '¿Podrías reemplazar estos cinco bloques con solo dos? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      2-3 Maze 13 (old)_instruction: '¡Llévame al cerdo, ahora con el bloque repetir hasta!'
      2-3 Maze 13_instruction: Llévame al cerdo usando solo dos bloques.
      2-3 Maze 14 (old)_instruction: '¡Llévame al cerdo con el bloque repetir hasta!'
      2-3 Maze 14_instruction: '¡Llévame al girasol! (¿Dónde está ese bloque "repeticiones" cuando lo necesito?)'
      2-3 Maze 15 (old)_instruction: '¡Llévame al cerdo con el bloque repetir hasta!'
      2-3 Maze 15_instruction: Usa dos ciclos para hacer que el cerdo use menos bloques.
      2-3 Maze 16 (old)_instruction: '¡Llévame al cerdo con el bloque repetir hasta!'
      2-3 Maze 16 before_instruction: Tráeme al cerdo.
      2-3 Maze 16_instruction: Llévame al girasol. ¡Haz un ciclo con la secuencia!
      2-3 Maze 2_instruction: Este cerdo me está colmando la paciencia. ¡Ayúdame a llegar a él!
      2-3 Maze 3_instruction: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      2-3 Maze 4_instruction: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze 5_instruction: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze 6_instruction: Mantén la calma y ayúdame a encontrar al cerdo malo. ¡Si no, puede que me enfade!
      2-3 Maze 7_instruction: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze 8_instruction: '¡Tráeme al cerdo!'
      2-3 Maze 9_instruction: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze Loops 1_instruction: '¿Puedes llevarme hasta el cerdo usando 5 bloques?'
      2-3 Maze Loops 17_instruction: '¡Llévame al girasol!'
      2-3 Maze Loops 18_instruction: "¡Llévame al girasol!"
      2-3 Maze Loops 19_instruction: "¡Llévame al girasol!"
      2-3 Maze Loops 20_instruction: '¡Llévame al girasol!'
      2-3 Maze Loops 21_instruction: '¡Llévame al girasol!'
      2-3 Maze Loops Assessment 1_instruction: 'Evaluación: ¡Llévame al girasol usando solo 5 bloques! '
      2-3 Maze sq1_instruction: This pig is ruffling my feathers.  Help me find him!
      2-3 Maze sq10_instruction: '¡Llévame hasta el cerdo! ¿Qué bloques se han repetido?'
      2-3 Maze sq10v2_instruction: '¡Llévame hasta el cerdo! ¿Qué bloques se han repetido?'
      2-3 Maze sq2_instruction: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      2-3 Maze sq3_instruction: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      2-3 Maze sq4_instruction: Mantén la calma y ayúdame a encontrar al cerdo malo. ¡Si no, puede que me enfade!
      2-3 Maze sq5_instruction: '¡Llévame al cerdo! ¿Cuántas veces debes repetir un bloque?'
      2-3 Maze sq6_instruction: '¿Podrías reemplazar la respuesta anterior con solo dos bloques? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      2-3 Maze sq7_instruction: Llévame al intruso verde usando solo tres bloques.
      2-3 Maze sq8_instruction: '¡Llevame hacia el cerdo! (¿Dónde está el bloque "repeticiones" cuando lo necesito?)'
      2-3 Maze sq9_instruction: Crea bucles para llegar al cerdo usando menos bloques.
      2-3 maze sq11_instruction: '¡Llévame hasta el cerdo! ¿Qué bloques se han repetido?'
      2-3 maze sq12_instruction: '¿Podrías reemplazar la respuesta anterior con un ciclo usando un bloque de "repeticiones"?'
      2-3 maze sq13_instruction: Querida persona. Yo zombie. Debo... llegar... al girasol. Crear ciclo con bloque "repetir hasta".
      2-3 maze sq14_instruction: '¿Podrías llegar al girasol usando solo cuatro bloques?'
      2-3 maze sq15_instruction: '¿Podrías llegar al girasol usando solo cinco bloques?'
      2-3 maze sq16_instruction: Ok, esto es similar, pero un poco diferente. ¿Puedes hacerlo con solo cinco bloques?
      2-3_instruction: Purple flowers may have either 1 or 0 nectar. Be careful not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: Ayuda al pájaro para que atrape al cerdo travieso moviéndolo hacia adelante
      20hr_farmer_stage9_1_instruction: Hola, soy un granjero. Necesito que me ayudes a aplanar el campo en mi granja para que esté listo para sembrar. Muéveme a la pila de tierra y utiliza el bloque "eliminar" para quitarla.
      20hr_farmer_stage9_10_instruction: I'm working late, so it's dark out, and I can't tell how large the piles are. Now I don't have all the options I used to have on the while block. Move me along the field, and if there is a pile, remove it
      20hr_farmer_stage9_11_instruction: 'Todavía está oscuro afuera. Muéveme a lo largo del campo. Si hay una pila, quítala y si hay un agujero, rellénalo. Sugerencia: utiliza el menú desplegable de opciones del bloque "si".'
      20hr_farmer_stage9_2_instruction: A continuación, muéveme hacia el agujero y llénalo con DOS paladas de tierra, usando el bloque "llenar".
      20hr_farmer_stage9_3_instruction: Muéveme a la pila de tierra y dime cuantas paladas de eliminar debo dar usando la menor cantidad de bloques posible.
      20hr_farmer_stage9_4_instruction: '¿Puedes ayudarme a quitar las cuatro pilas de tierra? Sugerencia: usa un bloque repetir si puedes.'
      20hr_farmer_stage9_5_instruction: 'Ayúdame a llenar todos estos agujeros con 5 paladas de tierra. Sugerencia: puedes poner un bloque "repetir" dentro del bloque "mientras".'
      20hr_farmer_stage9_6_instruction: Quita todas las pilas de tierra, utilizando la menor cantidad de bloques que sea posible. Las nuevas opciones en el menú desplegable del bloque "mientras" me dicen si estoy parado en una pila o un agujero.
      20hr_farmer_stage9_7_instruction: '¡Vaya, encontré un agujero muy profundo! No sé cuantas paladas de tierra necesita. ¿Puedes escribir un programa que lo llene hasta que la tierra esté plana?'
      20hr_farmer_stage9_8_instruction: Ayúdame a llenar el agujero en el otro extremo del campo, con la menor cantidad posible de bloques.
      20hr_farmer_stage9_9_instruction: 'Hazme quitar todas estas pilas de tierra. Trata de usar la menor cantidad de bloques que sea posible. Sugerencia: prueba usando un bloque "mientras".'
      20hr_maze_stage2_1_instruction: Can you help me to catch the naughty pig? Stack a couple of "move forward" blocks together and press "Run" to help me get there.
      20hr_maze_stage2_10_instruction: Ok, prueba el nuevo bloque "repetir hasta" - repetirá hasta que llegue al cerdo molesto.
      20hr_maze_stage2_11_instruction: Ok, una última vez para practicar - ¿se puede resolver éste usando solo 4 bloques?
      20hr_maze_stage2_12_instruction: Dear person. Me zombie. Me hungry. Must... get... to sunflower... Can you get me there with only 5 blocks?
      20hr_maze_stage2_13_instruction: Ok, esto es similar, pero un poco diferente. ¿Puedes hacerlo en sólo 5 bloques?
      20hr_maze_stage2_14_instruction: 'Usa el nuevo bloque "si" para dejarme decidir cuándo girar. Sugerencia: solo necesitas un bloque más, pero aprende cómo lo hicimos así puedes hacerlo tú solo la próxima vez.'
      20hr_maze_stage2_15_instruction: Ok, esto es como el último puzzle, pero tienes que recordar cómo usaste el bloque "si" y el bloque "repetir" juntos.
      20hr_maze_stage2_16_instruction: '¡Yo quiero girasol! Usa un bloque "si" para llevarme allí con la menor cantidad posible de bloques.'
      20hr_maze_stage2_17_instruction: Ok, vamos a hacer esto nuevamente para practicar - esto no es muy diferente, ¡pero ten cuidado con los masticadores!
      20hr_maze_stage2_18_instruction: Los bloques "si-sino" comprueban una condición, y luego hacen una cosa U otra. Para llevarme al girasol intenta usar este nuevo bloque.
      20hr_maze_stage2_19_instruction: Una práctica más del bloque "si-sino", ¿puedes hacerlo bien en tu primer intento?
      20hr_maze_stage2_2_instruction: Este cerdo me está poniendo furioso. ¡Ayúdame a encontrarlo!
      20hr_maze_stage2_20_instruction: '¿Puedes agregar sólo 3 bloques para ayudarme a resolver un laberinto más complejo? Si lo haces bien, puedo caminar cualquier camino con curvas sin importar su longitud.'
      20hr_maze_stage2_3_instruction: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      20hr_maze_stage2_4_instruction: '¡Guíame al demonio verde! (Cuidado con el TNT)'
      20hr_maze_stage2_5_instruction: Mantén la calma y ayúdame a encontrar al cerdo malo. O de lo contrario, ¡puedo enfadarme!
      20hr_maze_stage2_6_instruction: Hay una forma de llegar al tonto cerdo utilizando sólo 2 bloques. ¿Puedes encontrarla?
      20hr_maze_stage2_7_instruction: Intenta llevarme al intruso verde utilizando sólo tres bloques.
      20hr_maze_stage2_8_instruction: Ayúdame a desterrar este cerdito malo usando el menor número de bloques posible. Prueba usando más de un bloque "repetir veces".
      20hr_maze_stage2_9_instruction: 'Cuando un bloque es gris, significa que no puedes borrarlo. Resuelve este puzzle utilizando el bloque de "repetir" que se repite 3 veces. Intenta poner estos 3 bloques dentro del bloque gris de "repetir": mover, mover, girar.'
      4-5 Artist 1_instruction: 'Ayúdame a terminar de dibujar mi caja. (Cada línea tiene 300 píxeles de largo) '
      4-5 Artist 10_instruction: Presione "Ejecutar" para probar el código. Luego, repita varias veces para completar el dibujo. Los colores serán diferentes cada vez.
      4-5 Artist 11_instruction: Completa las líneas verdes. Las líneas son de 300 píxeles de largo y están separadas por 15 píxeles.
      4-5 Artist 2_instruction: '¿Puedes crear un bucle de código para completar el cuadrado?'
      4-5 Artist 3.5_instruction: Muy bien, trata de averiguar qué pasaría si ejecutas este código (o presiona "Run" para probarlo). Luego, repítelo la suficiente cantidad de veces para completar el dibujo. Los colores serán (probablemente) diferentes cada vez.
      4-5 Artist 3_instruction: Este parterre de flores rectangular tiene un perímetro de 600. El lado más largo tiene una longitud de 200. Dibuja el rectángulo.
      4-5 Artist 4_instruction: '¿Cuántos grados son en un círculo? Crea bucles con los bloques para crear un círculo de colores.'
      4-5 Artist 5_instruction: '¿Qué ángulo utilizas?'
      4-5 Artist 6_instruction: Este triángulo equilátero tiene ángulos de 60, 60 y 60 grados. Cada lado es de 200 píxeles. Completa el dibujo.
      4-5 Artist 7_instruction: Este triángulo rectángulo tiene ángulos de 30, 60 y 90 grados. La longitud de la hipotenusa es del doble de la altura de 100 píxeles. Completa el dibujo.
      4-5 Artist 8_instruction: "La línea media en un campo de fútbol es perpendicular al margen. Este campo tiene un perímetro de 800 píxeles y es 240 píxeles de largo. ¿Qué tan amplia es? Dibujar los límites y la línea media."
      4-5 Artist 9_instruction: dibuja la otra mitad para que el diseño sea simétrico. Los triángulos son equiláteros y tienen 50 píxeles de largo.
      4-5 Artist Assessment 1_instruction: 'Evaluación: Utilizar un bucle para dibujar el triángulo equilátero. Cada lado es de 300 píxeles.'
      4-5 Artist For Loops 1_instruction: Pon los números 1 a 10 en el ancho de los bloques y ejecuta el código.
      4-5 Artist For Loops 11_instruction: Completa el bloque "for" de manera que cuente 0, 20, 40, 60, 80 ... 200.
      4-5 Artist For Loops 12_instruction: '¿Qué sucedería si inviertes los números "desde" y "hasta"? Completa el bloque "para" para que cuente 200, 180, 160, 140, 120...0. '
      4-5 Artist For Loops 13_instruction: '¡Este diseño inicia sin un bucle "for" y está tomando demasiados bloques! Use un bloque "for" para completar la espiral. Sugerencia: La longitud de la última línea es de 250 píxeles.'
      4-5 Artist For Loops 14_instruction: '¡Alguien comenzó el código, pero se dio cuenta de que debe haber una manera más rápida! Utilice un bloque "for" para reemplazar los bloques y completar la espiral triangular. Sugerencia: La longitud de la última línea es de 300 píxeles.'
      4-5 Artist For Loops 15_instruction: '¡Alguien comenzó el código, pero se dio cuenta de que debe haber una manera más rápida! Utilice un bloque "for" para reemplazar los bloques y completar la espiral hexagonal. Sugerencia: La longitud de la última línea es de 200 píxeles.'
      4-5 Artist For Loops 2_instruction: Este es un bloque "for". En lugar de escribir 1, 2, 3… 10, el bloque "for" puede repetir los bloques dentro de él y contar los números por ti. Coloca el número 10 dentro de la sección "a" del bloque "for".
      4-5 Artist For Loops 3_instruction: '¿Cómo podemos contar de 1 a 50? Editar el bloque "for" .'
      4-5 Artist For Loops 4_instruction: Completar el bloque "for" para que lo cuente de 1 a 10 de 1 por 1.
      4-5 Artist For Loops 6_instruction: Dibujar cuadrados con lados de 50, 60, 70, 80 y 90 píxeles. Usted necesitará utilizar la función "draw a square" cinco veces.
      4-5 Artist For Loops 7_instruction: 'Dibuje los mismos cuadros pero utilice un bloque "counter" para cambiar los tamaños. coloque el bloque "counter" de la función "draw a square". Sugerencia: Es en la categoría de las Variables.'
      4-5 Artist For Loops 8_instruction: Se puede completar el programa colocando los bloques dentro de un bloque "for" que se cuenta desde 10 a 200 de 10 por 10. Puedes encontrar el bloque "for" en la categoría de bucles.
      4-5 Artist For Loops 9_instruction: Estos círculos son tamaño 5, 10, 15, 20, 25, 30 y 35. Dibujar los círculos usando un bloque de "for".
      4-5 Artist Free Draw 1_instruction: '¡Dibujo libre! Dibujar lo que estés inspirado para crear.'
      4-5 Artist Functions 1_instruction: Utilice un bucle de repetición para dibujar este triángulo.
      4-5 Artist Functions 10a_instruction: Ponga este código en la función 'draw a snowflake' y reemplace 50 con el parámetro 'size'. La función esta lista para dibujar un copo de nieve de 100 píxeles.
      4-5 Artist Functions 10b_instruction: 'Utilice la función "draw a snowflake" para crear copos de diversos tamaños. Sugerencia: El primer copo de nieve es de un tamaño de 25 en longitud y cada copo de nieve es el doble del anterior.'
      4-5 Artist Functions 11_instruction: 'La función "draw a hexagon" utiliza la función "draw a triangle". Completa la función del hexágono. Pista: Un hexágono tiene 6 lados, y cada lado con 100 píxeles de largo'
      4-5 Artist Functions 12_instruction: 'Completa la función ''draw waves''. Cada onda está compuesta por una onda superior y una inferior. Sugerencia: Dibujar 5 ondas azules.'
      4-5 Artist Functions 13 Free play_instruction: Aquí están algunas funciones para dibujar los planetas, las estrellas, los cohetes y los robots. Utiliza cualquier forma que te guste para hacer imágenes que puedas compartir con tus amigos.
      4-5 Artist Functions 14 Free play_instruction: Aquí te ofrecemos varias funciones. Utilízalas como quieras dentro de uno o más bucles para hacer imágenes que puedas compartir con tus amigos. Haga clic en 'Run' para ver un ejemplo.
      4-5 Artist Functions 15 Assessment_instruction: 'Evaluación: Utilice la función "draw a square" para crear los cuadros. Los cuadros tienen 50, 100 y 150 píxeles.'
      4-5 Artist Functions 2a_instruction: Ahora utiliza esos bloques en una nueva función llamada "dibuja un pequeño triángulo" y llámalo.
      4-5 Artist Functions 2b_instruction: Ahora cree una función llamada "dibuja un triangulo chico" usando los bloques proporcionados.
      4-5 Artist Functions 3_instruction: 'Ahora crea las funciones "dibujar un triangulo mediano" y "dibujar un triángulo grande". La función "dibuja un triangulo chico" está hecha para ti. Los triángulos tienen longitudes laterales de 50 (chico), 100 (medio) y 150 (grande).'
      4-5 Artist Functions 4_instruction: Esta nueva función de "dibuja un triangulo" tiene un parámetro y puede hacer el trabajo de las tres funciones de antes. Dibuja los mismos triángulos usando esta nueva función.
      4-5 Artist Functions 5_instruction: '¿Puedes modificar la función "dibuja un triángulo" en una función "dibuja un cuadrado" y cambiar el dibujo?'
      4-5 Artist Functions 6_instruction: 'Utilice "dibuja un cuadrado" y "dibuja un triángulo" para dibujar una casa. (Sugerencia: Los lados del cuadrado son de 200 píxeles)'
      4-5 Artist Functions 6b_instruction: Utilice "dibuja un cuadrado" y funciones de triángulo junto con otros bloques para crear una casa añadiéndolos a la función "dibuja una casa" y llámala.
      4-5 Artist Functions 7_instruction: Utilice la función "'dibuja una casa" para dibujar casas de 100 píxeles y 50 píxeles. Las dos casas están separadas por 50 píxeles.
      4-5 Artist Functions 8_instruction: La función de "dibuja una flor" tiene un parámetro que le permite ajustar la altura del tallo. Establézcalo en 200 y vea qué pasa.
      4-5 Artist Functions 9_instruction: Dibuja estas 3 flores. La primera es de una altura de 100 y la siguiente flor es siempre 50 píxeles más que la altura de la anterior. Las flores también son separadas por 100 píxeles.
      4-5 Artist Patterns 1_instruction: |-
        ¿Puedes dibujar esta cuadro utilizando un bucle? Cada lado es de 20 píxeles de largo.
      4-5 Artist Patterns 10_instruction: "Este código dibuja dos filas de hexágonos - utilice un bucle de 4 veces para dibujar el panal entero. Consejo: Tendrá que retroceder 120 píxeles en su bucle para asegurarse de que el artista no dibuja fuera de la pantalla."
      4-5 Artist Patterns 11_instruction: '¿Cuántas veces necesitas bucle para dibujar un semicírculo? Sugerencia: si hay 360 grados en un círculo y cada bucle se desplaza 3 grados, ¿cuántas veces necesitarías para que el bucle dibuje un círculo completo?'
      4-5 Artist Patterns 12_instruction: "Si copia ese bucle y gira a la izquierda en lugar de la derecha, ¿qué pasa? ¿Puedes repetir eso para dibujar esta ola?"
      4-5 Artist Patterns 13_instruction: "Ahora repitamos todo eso cuatro veces para crear este cuadro. Cuidado con las esquinas - ¡simplemente no puedes girar 90 grados! Si se repite 60 veces un giro de 3 grados hace un semicírculo, ¿cuál de estos bloques de código hará un cuarto de círculo para las esquinas?"
      4-5 Artist Patterns 2_instruction: Si usted pone su bucle cuadrado dentro de otro bucle, lo llamamos un bucle anidado. ¿Qué necesita agregar a su bucle externo para asegurarse de que todos los 15 cuadrados se alinean al lado del otro?
      4-5 Artist Patterns 3_instruction: Ahora vamos a un nivel más profundo. Hemos anidado todo el bloque de código en otro bucle, pero tienes que poner al artista en su lugar para dibujar la línea siguiente. ¿Cuál de estos bloques de código puede usted colocar al final del bucle exterior para dibujar la red entera?
      4-5 Artist Patterns 4_instruction: Este diamante tiene 50 píxeles y lados y ángulos de 120 y 60 grados. Utiliza un bucle para dibujarlo.
      4-5 Artist Patterns 5.5_instruction: '¿Cuántas veces necesitas repetir este bloque para dibujar la red completa de diamantes?'
      4-5 Artist Patterns 5_instruction: "Repetimos para hacer una fila de 6 diamantes. Observe que hemos cambiado nuestro código del diamante para repetir 3 veces en lugar de 2 - ¿por qué cree que es así?"
      4-5 Artist Patterns 6_instruction: '¿Cuántas veces necesitas repetir este bloque para dibujar la red completa de diamantes?'
      4-5 Artist Patterns 7_instruction: Vamos a modificar el código del último rompecabezas para hacer este patrón más complejo. ¿Observe cómo los diamantes se superponen ahora, intente cambiar el primer "jump backwards" de 100 a 50 (medio en la medida) - ¿ahora hasta dónde debe ir el artista en el segundo "jump backwards"?
      4-5 Artist Patterns 8_instruction: Utilice un bucle para dibujar este hexágono con 40 píxeles y lados y ángulos de 60 grados.
      4-5 Artist Patterns 9.5_instruction: Ciclemos este código para dibujar dos filas de hexágonos. Observe cómo nuestra segunda fila se desplaza hacia la derecha.
      4-5 Artist Patterns 9_instruction: "Ahora repite el código 3 veces para dibujar toda la fila. Sugerencia, cada hexágono es de 80 píxeles de ancho desde los puntos más lejanos de izquierda a derecha."
      4-5 Artist Patterns Free Play_instruction: Juego libre - ¡prueba tu destreza en la fabricación de un patrón propio!
      4-5 Bee Conditionals - FC Test_instruction: La abeja sólo quiere néctar ahora. No todos los objetos son flores, así que compruebe debajo de cada nube para ver si está ocultando una flor. Si es así, puede recolectar néctar.
      4-5 Bee Conditionals 1 (copy 1)_instruction: The bee can't tell if this is a flower or a honeycomb. Gather nectar only from flowers, but first check if it is a flower or a honeycomb.
      4-5 Bee Conditionals 1_instruction: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      4-5 Bee Conditionals 2 (copy 1)_instruction: The bee only wants nectar right now. Remember, not all objects are flowers, so check to gather nectar only at flowers.
      4-5 Bee Conditionals 2_instruction: "La abeja sólo quiere néctar ahora. Recuerda que no todos los objetos son flores, recoge néctar solamente de las flores."
      4-5 Bee Conditionals 3_instruction: Ahora la abeja sólo quiere hacer miel. Asegúrese de que sólo haga miel en el panal.
      4-5 Bee Conditionals 4 (copy 1)_instruction: The unknown object is either a flower or a honeycomb. Use the if/else block to collect nectar if it is a flower, else to make honey (because it is a honeycomb).
      4-5 Bee Conditionals 4_instruction: El objeto desconocido es una flor o un panal de miel. Use el bloque "if/else" para recoger néctar si es una flor, si no haz miel (porque es un panal de abejas).
      4-5 Bee Conditionals 5_instruction: |-
        Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, si no haz miel (porque hay un panal de abejas).
      4-5 Bee Conditionals 6 (copy 1)_instruction: This purple flower may have either 3, 2, or 1 nectar. Here an if-else block is combined with another if-else block to create an if, else-if, else block. Complete the solution to collect the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: "Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque if-else se combina con otro bloque if-else para crear un bloque if,else-if, else. Completa la solución para recoger la cantidad desconocida de néctar."
      4-5 Bee Conditionals 7_instruction: "Recuerda que las flores púrpura pueden tener 1, 2 o 3 néctares. Completa la función \"revisar flor púrpura\" y úsala para recoger todo el néctar de las flores."
      4-5 Bee Conditionals 8_instruction: "Escribe una función dentro del bloque llamada \"revisar que la flor hace miel.\" Tu función debe comprobar cuánto néctar tiene la flor púrpura, recogerla, avanzar y luego hacer miel."
      4-5 Bee Conditionals Assessment 1_instruction: "Evaluación: Este código está errado. Completa la función \"consigue néctar o produce miel\", entonces llámalo para recolectar todo el néctar y la miel. Recuerda que las rosas púrpuras pueden tener 3, 2 o 1 néctares."
      4-5 Bee Debugging 1_instruction: "Estos bloques realmente me molestan. ¿Puedes arreglarlos?"
      4-5 Bee Debugging 10_instruction: Encuentra los errores y arréglalos.
      4-5 Bee Debugging 11_instruction: '¿Esto está contado correctamente?'
      4-5 Bee Debugging 2_instruction: "Ayuda a la abeja a conseguir el néctar para hacer la miel.\n"
      4-5 Bee Debugging 3_instruction: Encuentra los errores y arréglalos.
      4-5 Bee Debugging 4_instruction: Estos bloques no funcionan. ¿Cúal es el patrón?
      4-5 Bee Debugging 5_instruction: Algo no está bien aquí...
      4-5 Bee Debugging 6_instruction: "La flor púrpura contiene una cantidad desconocida de néctar. Arregla los bloques, para obtener todo el néctar de la flor."
      4-5 Bee Debugging 7_instruction: A la función le falta algo...
      4-5 Bee Debugging 8_instruction: Esta función está bien, pero no fue usada correctamente.
      4-5 Bee Debugging 9_instruction: '¿Por qué la abeja no está haciendo suficiente miel?'
      4-5 Bee Debugging Assessment 1_instruction: 'Evaluación: Arregla el código.'
      4-5 Bee Nested Loops 1_instruction: Utiliza un bucle para recolectar todo el néctar.
      4-5 Bee Nested Loops 2_instruction: 'Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. '
      4-5 Bee Nested Loops 3_instruction: Recolecta todo el néctar poniendo el código de arranque en un bucle anidado.
      4-5 Bee Nested Loops 4_instruction: "Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. "
      4-5 Bee Nested Loops 5_instruction: Recolecta todo el néctar creando un bucle anidado.
      4-5 Bee Nested Loops 6_instruction: Recolecta el néctar.
      4-5 Bee Nested Loops 7_instruction: Pon este bucle dentro de otro bucle para crear un bucle anidado y recolectar todo el néctar de las flores.
      4-5 Bee Nested Loops 8_instruction: 'Recolecta todo el néctar de estas flores anidando un bucle de tiempo. Reemplaza el bloque interno repetidas veces con un bucle de tiempo. '
      4-5 Bee Nested Loops 9_instruction: Recolecta todo el néctar de estas flores, anidando un bucle de tiempo dentro de un bloque de repetición.
      4-5 Bee Nested Loops Assessment 1_instruction: "Evaluación - Recolecta todo el néctar y haz toda la miel mediante el uso de bucles."
      4-5 Bee Nested Loops Rows_instruction: '¡Reune todo el néctar de las filas de las flores! Utiliza un bucle anidado.'
      4-5 Maze 1 (copy 1)_instruction: Estimada persona. Yo zombie. Debe...llegar...al girasol.
      4-5 Maze 1_instruction: Estimada persona. Yo zombie. Debe...llegar...al girasol.
      4-5 Maze 10_instruction: '¿Podrías llegar al girasol usando solo cuatro bloques?'
      4-5 Maze 11_instruction: '¿Puedes llegar al girasol utilizando sólo seis bloques?'
      4-5 Maze 12_instruction: Ok, esto es ligeramente diferente. ¿Puedes hacerlos con sólo seis bloques?
      4-5 Maze 13_instruction: '¡Tráeme al cerdo!'
      4-5 Maze 14_instruction: '¡Tráeme al cerdo! Utiliza la repetición hasta el bloque.'
      4-5 Maze 2 (copy 1)_instruction: Lleva al zombie hasta el girasol, pero evade al ¡chomper!
      4-5 Maze 2_instruction: Lleva al zombie hasta el girasol, pero evade al ¡chomper!
      4-5 Maze 3 (copy 1)_instruction: Debe...llegar... al girasol.
      4-5 Maze 3_instruction: Debe...llegar... al girasol.
      4-5 Maze 4 (copy 1)_instruction: Intenta usar el bloque "repeat" para utilizar menos bloques.
      4-5 Maze 4_instruction: Intenta usar el bloque "repeat" para utilizar menos bloques.
      4-5 Maze 5 (copy 1)_instruction: '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      4-5 Maze 5_instruction: '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      4-5 Maze 6 (copy 1)_instruction: '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      4-5 Maze 6_instruction: '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      4-5 Maze 7_instruction: Estimada persona. Yo zombie. Debe...llegar...al girasol.
      4-5 Maze 8_instruction: "Utiliza el bloque \"repeat\" para llevar al zombie hasta el girasol. (¡Evadiendo a los chompers!)"
      4-5 Maze 9_instruction: "Crear un lazo en el bloque \"repetir hasta\"."
      4-5 Maze Assessment 1_instruction: 'Evaluación: Llega hasta el girasol.'
      4-5 Maze Conditionals 1_instruction: Utiliza el bloque repetir hasta para llevar al zombie hasta el girasol.
      4-5 Maze Conditionals 10_instruction: "¿Puede añadir solo 3 bloques para ayudar al zombie a resolver un laberinto más complejo? \\r \\r si lo haces bien, él puede caminar cualquier camino con curvas sin importar la longitud!"
      4-5 Maze Conditionals 2_instruction: Utiliza el bloque repetir hasta para llevar al zombie hasta el girasol.
      4-5 Maze Conditionals 3_instruction: "Utiliza el bloque \"if\" para dejarme decidir cuando voltear. Sugerencia: Sólo necesitas un bloque más, pero aprende cómo se configura, con eso lo puedes hacer por ti mismo la próxima vez."
      4-5 Maze Conditionals 4_instruction: Ok, esto es como con el rompecabezas pasado, pero recuerda como utilizaste el bloque "if" y el bloque "repeat" juntos.
      4-5 Maze Conditionals 5_instruction: "¡Yo quiero girasol! Utiliza in bloque \"if\" para llevarme allá, con el menor número de bloques."
      4-5 Maze Conditionals 6_instruction: |-
        ¡Yo quiero girasol! Utiliza in bloque "if" para llevarme allá, con el menor número de bloques.
      4-5 Maze Conditionals 7_instruction: Ok, hagámoslo de nuevo para practicar - esto no es muy diferente, pero hay que estar pendiente de los ¡chompers!
      4-5 Maze Conditionals 8_instruction: "Los bloques \"if-else\" comprueban una condición, y luego realizan una cosa o la otra. Para llevarme al girasol trata usando este nuevo bloque."
      4-5 Maze Conditionals 9_instruction: |-
        Una práctica más con el bloque "if-else", ¿Puedes hacerlo correctamente en el primer intento?
      4-5 Maze Conditionals Assessment 1_instruction: "Utiliza un bloque \"repeat until\" y un bloque \"if-else\" para llevarme al girasol usando la mínima cantidad de bloques posible."
      4-5 Nested Loops 1_instruction: 'Completa el código para dibujar estos triángulos. El primero es hecho por ti. Sugerencia: 3 triángulos en una rotación de 360 grados.'
      4-5 Nested Loops 10_instruction: Dibuja la última fila de estrellas de esta bandera, por medio de un bucle de bloques proporcionados. Las estrellas son de 50 píxeles, pero recuerda que las estrellas por sí mismas son 30 píxeles de ancho.
      4-5 Nested Loops 11_instruction: '¿Puedes dibujar estas 10 plazas de esta acera, usando un bucle anidado? Cada cuadrado tiene 30 píxeles.'
      4-5 Nested Loops 12_instruction: '¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?'
      4-5 Nested Loops 2_instruction: 'Ahora anida este bucle dentro de otro bucle para dibujar 10 triángulos. Esto se llama un bucle anidado. Sugerencia: Todos los 10 triángulos completan una rotación de 360 grados.  '
      4-5 Nested Loops 3_instruction: |-
        Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado.
      4-5 Nested Loops 5_instruction: haz un bucle con el código dado para crear un molino de viento.
      4-5 Nested Loops 6_instruction: '¿Puedes dibujar un hexágono con un bucle del código del triángulo?'
      4-5 Nested Loops 7_instruction: "con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuánto es 360 dividido por 10?)"
      4-5 Nested Loops 8_instruction: "Repite el bucle 6 veces. ¿Cuánto tienes que girar cada vez el bucle? (Pista: ¿Cuánto es 360 dividido por 6?)"
      4-5 Nested Loops 9_instruction: '¡Dibuja los dientes en la boca de cocodrilo!'
      4-5 Nested Loops Assessment 1_instruction: 'Usar un bucle anidado para completar el diseño.'
      4-5 While Loops 1_instruction: Muéveme al agujero y rellena con dos palas de tierra, usando el bloque de "relleno".
      4-5 While Loops 2_instruction: Muéveme a la pila de tierra y remueve con 5 palos, usando el bloque 'remover'.
      4-5 While Loops 3_instruction: "Muéveme a la pila y remueve todo, después muéveme hacia el agujero y llénalo completamente. Sugerencia: Utiliza tan pocos bloques como sea posible."
      4-5 While Loops 4_instruction: "¡Wow, encontré un agujero realmente profundo! no sé cuántas paleadas de tierra necesita. ¿Puedes escribir un programa que llene hasta que el suelo esté parejo? Sugerencia: trata usando el bucle mientras."
      4-5 While Loops 5_instruction: Wow, ahora hay dos agujeros muy profundos. ¿Puedes escribir un programa que llene los dos hasta que el suelo esté parejo?
      4-5 While Loops 6_instruction: '¡Wow, ahora hay un montón de tierra! ¿Puedes escribir un programa que quite todo eso para que el suelo quede parejo?'
      4-5 While Loops 7_instruction: '¡Wow, ahora hay tres montones de tierra! ¿Puedes escribir un programa que elimine cada uno de ellos hasta que la tierra quede plana?'
      4-5 While Loops 8_instruction: " Hay un hueco muy profundo y mucha tierra amontonada. ¿Cúantas paladas son necesarias para aplanar la tierra? Sugerencia: Utiliza el circuito de bloque \"while\" para ambas."
      4-5 While Loops Assessment 1_instruction: Existen un montón de huecos y pilotes. Ayúdame a llenarlos y removerlos para aplanar la tierra.
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      Alien Defender_instruction: 'Idea del proyecto: ¡ Haz un juego de defensor en Play Lab!'
      Alien Defender_2018_instruction: 'Idea del proyecto: ¡ Haz un juego de defensor en Play Lab!'
      AllTheThings Applab - Turtle move with button_instruction: Add a button that moves the turtle when clicked.  (Click to see full instructions)
      'AllTheThings: Pixelation - Lesson 14 - Make the Letter A_instruction': "Haga \nuna letra 'A' de 3x5. El widget está configurado con las dimensiones incorrectas. Su primera tarea es establecer el segundo byte en el código binario de 8 bits para 5: 0000 0101. Luego comience a ingresar datos de píxeles."
      'AllTheThings: Pixelation - Lesson 15 - Color Shades 4x4_instruction': 'Comenzamos con la imagen 4x4 que Maddie creó en el video. Su tarea es llenar una cuadrícula de 4x4 con colores utilizando 12 bits por píxel. Estos son los requisitos: Fila 1: llenar con tonos de rojo. Fila 2: tonos de verde. Fila 3 - tonos de azul. Fila 4 - tonos de gris.'
      'AllTheThings: Pixelation - Lesson 15 - Complete 3-bit color_instruction': Comenzamos con la imagen de 4x2 que Maddie estaba creando, pero hemos omitido los dos últimos cuadrados. Termine la imagen descubriendo los dos colores que faltan y codifíquelos.
      App Lab test_instruction: prueba
      AppLab_test02_instruction: One sentence summary of the activity. Click to view full instructions.
      Applab AllTheThings ResourcesTab AllResources_instruction: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      Applab AllTheThings ResourcesTab MapReference_instruction: Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.
      Applab AllTheThings ResourcesTab ReferenceLinks_instruction: Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.
      Applab allthethings onRecordEvent_instruction: Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).
      Applab test_instruction: This level is submittable. For testing only!
      Artist - Nested Loops 1_instruction: 'Complete the code to draw these triangles.  The first one is done for you.  Hint:  3 triangles in a 360 degree rotation.'
      Artist - Nested Loops 10_instruction: Draw the last row of stars on this flag by looping the provided blocks. The stars are 50 pixels apart, but remember that the stars themselves are 30 pixels wide.
      Artist - Nested Loops 11_instruction: Can you draw these 10 squares of this sidewalk using a nested loop? Each square is 30 pixels.
      Artist - Nested Loops 12_instruction: Can you draw these 36 triangles using a nested loop?
      Artist - Nested Loops 2_instruction: 'Now nest this loop inside another loop to draw 10 triangles.  This is called a nested loop.  Hint: All 10 triangles complete a 360 degree rotation.  '
      Artist - Nested Loops 3_instruction: 'Create a sun by nesting the starter code in another loop. This is called a nested loop.  '
      Artist - Nested Loops 5_instruction: Loop the given code to create a windmill.
      Artist - Nested Loops 6_instruction: Can you draw a hexagon by looping the triangle code?
      Artist - Nested Loops 7_instruction: 'Loop this design 10 times. How much do you have to turn each time you loop? (Hint: What is 360 divided by 10?)'
      Artist - Nested Loops 8_instruction: 'Loop this design 6 times. How much do you have to turn each time you loop? (Hint: What is 360 divided by 6?)'
      Artist - Nested Loops 9_instruction: Draw the teeth in the alligator's mouth!
      Artist - Nested Loops Assessment 1_instruction: Utiliza un circuito anidado para completar el diseño.
      Artist Inspiration_instruction: "Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita https://studio.code.org/c/106387604 para la solución."
      Auto Open Function Editor_instruction: '¡Puedes llamar una función dentro de otra función! Utilizando tu función "shape" como base, crea 3 formas de casa cada una de 20 píxeles mas larga que la anterior, empezando con 50 píxeles de longitud. Usar un circuito de contar puede ser útil.'
      Bee Recommended Blocks test_instruction: Las flores moradas pueden tener 1 o 0 néctar, ¡pero tú no sabes cuál de los dos es! Ten cuidado de no recolectar néctar de una flor morada que no tenga. Comprueba que el néctar es igual a 1 utilizando un bloque si-entonces.
      Bergeron Robot Maze1_instruction: '¿Me puedes ayudar a atrapar al cerdo malo? Apila un par de bloques "avanzar" juntos y presiona "Ejecutar".'
      Big Game Animation 1 (copy 1)_instruction: Now that you've learned to write simple linear functions, let's work on using them to add some movement to our game. Click play to see what your game can currently do (not much!), update any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: Now that you've learned to write simple linear functions, let's work on using them to add some movement to our game. Click "Run" to see what your game can currently do (not much!), update any variables you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: The function 'update-target' function takes the target's current x value, and returns an updated value. Complete the 'update-target' function so that it adds to the x value each time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: The update-target function takes the target's current x value, and returns an updated value. Complete the update-target function so that it adds to the x value each time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 3_instruction: The update-danger function should work just like update-target, except that the danger should move from the right side over towards the left. Complete update-danger to make the danger fly across the screen.
      Big Game Animation 4_instruction: At this point in your game, your danger should run across the screen from right to left, and your target should run across from left to right. They don't ever come back on screen once they've left, but we'll take care of that later. Take a minute to make sure your game is working like you want it to, and then click "Finish" to move on.
      Big Game Booleans 1_instruction: When you last worked on your game we got our target and danger sprites to fly across the screen, but they never come back. Click "Run" to see how your game is currently working, and then click finish and we'll work on making those sprites reappear on screen after they've left.
      Big Game Booleans 2_instruction: Go to the Functions section of the toolbox and complete the safe-left? function so that it returns true if the sprite's x coordinate is greater than -50. If you're successful you should see the Danger go off the left side and then return on the right side.
      Big Game Booleans 3_instruction: Now that you've got safe-left?, let's fill in safe-right? - it should take in a sprite's x coordinate and return true if that coordinate is less than 450. Once your safe-right? is complete you should see the Target go off the right side of the screen and return on the left.
      Big Game Booleans 4_instruction: Complete the onscreen? function so that it checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: At this point your Danger should run across the screen from right to left, your Target should run across from left to right, and they should both return to the opposite side, repeatedly. Take a minute to make sure your game is working like you want it to, and then click "Finish" to move on.
      Big Game Collision 1 (copy 1)_instruction: When you last worked on your game we got our target and danger sprites to fly across the screen, but they never come back. Click run to see how your game is currently working, and then click finish and we'll work on making those sprites reappear on screen after they've left.
      Big Game Collision 1_instruction: At this point you've programmed a video game with a moving Target and Danger, both of which return to the screen once they've left, and a Player that responds to keyboard input. Click "Run" to see how your game is currently working, and then we'll dig into the final missing piece - collision detection!
      Big Game Collision 2_instruction: To move the player up and down, we'll need to use a conditional block to figure out which key is pressed and respond accordingly. Computers read keypresses as numeric key codes - the up arrow is 38 and the down arrow is 40. You can lookup other key codes in your student workbook. Edit the 'update-player' function so that if moves the player up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: Use the Distance Formula, so the distance function returns the distance between the player's center coordinates (px, py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: Complete the collide? function so that it returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete_instruction: A demo of the completed CS in Algebra Big Game project
      Big Game Final_instruction: You made it! At this point your game should be fully functioning, take some time to enjoy your new game and make any final tweaks to it. When you're happy with the final product, click Finish and you'll have an opportunity to share a link to your game. Good work!
      Big Game Player 1_instruction: We're getting really close to a finished game! Last time you worked on your game, you used booleans to make your Target and Danger return to the screen once they've left. Click Run to see how your game looks right now, and then we'll get to making your Player move up and down.
      Big Game Player 2_instruction: Edit the update-player function so the player moves up when the up arrow (keycode 38) is pressed, and moves down (keycode 40) when the down arrow is pressed.
      Big Game Testing_instruction: A demo of the completed CS in Algebra Big Game project
      Big Game Vars 1 (copy 1)_instruction: Let's get started on your Big Game! Here you'll see a whole bunch of placeholder code that you'll eventually replace with your own, but for now we're only going to worry about defining variables. Click "Run" to see what the game looks like with the default values.
      Big Game Vars 1_instruction: Let's get started on your Big Game! Here you'll see a whole bunch of placeholder code that you'll eventually replace with your own, but for now we're only going to worry about defining variables. Click "Run" to see what the game looks like with the default values.
      Big Game Vars 2 (copy 1)_instruction: The first step to making this game your own is to give it a good Title. Click edit on the 'title' and 'subtitle' variables and change them to something new.
      Big Game Vars 2_instruction: The first step to making this game your own is to give it a good Title. Click edit on the title and subtitle variables and change them to something new.
      Big Game Vars 3 (copy 1)_instruction: Now let's set the background for your new game. Edit the 'bg' variable and select a new background Image from the dropdown.
      Big Game Vars 3_instruction: Now let's set the background for your new game. Edit the bg variable and select a new background Image from the dropdown.
      Big Game Vars 4 (copy 1)_instruction: Awesome, now you can update the variables for your Player, Target, and Danger. Feel free to play with all of the variables at this point to make your game look like you'd like it to. Click 'finish' when you're done.
      Big Game Vars 4_instruction: Awesome! Now you can update the variables for your Player, Target, and Danger. Feel free to play with all of the variables at this point to make your game look like you'd like it to. Click "Finish" when you're done.
      Brad Spooky House Copy_instruction: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      Brad Spooky House_instruction: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      Building a Foundation Assessment_instruction: Build a three level pyramid, there are no other directions, so just play with the pieces until you get it!
      Busy Bee 2_instruction: '¡Esta abeja tiene mucho trabajo por hacer! ¿Puedes encontrar algún patrón que se pueda utilizar para simplificar el código?'
      Busy Bee_instruction: '¡Esta abeja tiene mucho trabajo por hacer! ¿Puedes encontrar algún patrón que se pueda utilizar para simplificar el código?'
      C3-Farmer While Loops 1_instruction: Move me to the hole and fill it with two shovelfuls of dirt, using the "fill" block.
      C3-Farmer While Loops 2_instruction: Move me to the pile of dirt and remove it with 5 shovel scoops, using the 'remove' block.
      C3-Farmer While Loops 3_instruction: 'Move me to the pile and remove all of it, then move to the hole and fill it completely.  Hint:  Use as few blocks as possible.'
      C3-Farmer While Loops 4_instruction: 'Wow, I found a really deep hole! I don''t know how many shovelfuls of dirt it needs.  Can you write a program that fills it until the ground is even?  Hint:  Try using the while loop this time.'
      C3-Farmer While Loops 5_instruction: Wow, now there are two deep holes! Can you write a program that fills them both until the ground is even?
      C3-Farmer While Loops 6_instruction: Wow, now there is a large pile of dirt! Can you write a program that removes all of it so the ground is even?
      C3-Farmer While Loops 7_instruction: Wow, now there are three piles of dirt! Can you write a program that removes each of them until the ground is even?
      C3-Farmer While Loops 8_instruction: " There is a really deep hole and a really large pile of dirt.  How many shovelfuls of dirt need to be moved around to make the ground flat?  Hint: Use the while loop for both."
      C3-Farmer While Loops Assessment 1_instruction: There are a lot of holes and piles.  Help me to fill and remove them to make the ground flat.
      CSD Hackathon Pt 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Pt 2_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 2_instruction: "(Click to see full instructions)"
      CSD U3 Background Discuss_instruction: Here's a program that looks pretty similar to what you've been writing, but may behave quite differently. You'll want to stop and discuss with the class before moving on.
      CSD U3 Background Experiment_instruction: Here's a program that looks pretty similar to what you've been writing, but may behave quite differently. You'll want to stop and discuss with the class before moving on.
      CSD U3 Boolean Modify_instruction: Modify the code so that all of the console.log commands print true
      CSD U3 Boolean Modify_2018_instruction: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 Boolean Predict_instruction: What do you think this code will do when it is run? Predict what each console.log() command will print, then run the program to check your predictions.
      CSD U3 Boolean Predict_2018_instruction: '¿Qué crees que hará este código cuando se ejecute? Predecir qué se imprimirá cada comando console.log (), luego ejecutar el programa para verificar sus predicciones.'
      CSD U3 Draw Loop Discuss_instruction: Here's a program that looks pretty similar to what you've been writing, but may behave quite differently. You'll want to stop and discuss with the class before moving on.
      CSD U3 Draw Loop Experiment_instruction: Try using some of the other shape functions you've learned in the draw loop. What happens when you use randomNumber() to generate some of the inputs?You'll want to stop and discuss with the class before moving on.
      CSD U3 Expressions calculator_instruction: Add the numbers 1 through 10. Multiply the numbers 1 through 10. Check your answers with a neighbor.
      CSD U3 Frame Rate_instruction: Slow down Gamelab Gary's animation with frameRate()
      CSD U3 Keypress Boolean-2018_instruction: Modify the code so that all of the console.log commands print true
      CSD U3 Keypress Boolean_instruction: Modify the code so that all of the console.log commands print true
      CSD U3 Keypress Boolean_2018_instruction: Modify the code so that all of the console.log commands print true
      CSD U3 Keypress Watchers_instruction: Modify the code so that all of the console.log commands print true
      CSD U3 Keypress Watchers_2018_instruction: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 L5 Freeplay_instruction: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 L5 Freeplay_2018_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      CSD U3 Mouse Input Bee 2_instruction: Do this
      CSD U3 Mouse Input Bee 2_2018_instruction: Do this
      CSD U3 Random Animation_instruction: Use randomNumber() to animate Gary's mouth.
      CSD U3 Random Choice_instruction: Use the randomNumber() block to generate either 0 or 1
      CSD U3 Random Color_instruction: Could you use randomNumber() to pick random colors as well? Try setting one or more of the channels in the rgb block with a random number. What should the maximum value be?
      CSD U3 Random Intro_instruction: What do you think this code will do when it is run? Make a prediction, then run this code 5 - 10 times, recording the output each time. Share your results with your neighbor.
      CSD U3 Random Min Max_instruction: Using console.log() write a program that randomly returns a number in a range you define.
      CSD U3 Random Width Height_instruction: Pick a shape block and use calls to randomNumber() in place of one or more of the parameters. Maker sure you run it a few times so you can see the effect of randomization.
      CSD U3 Simple Drawing - Animation 2_instruction: Use randomNumber() on the x position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Animation_instruction: Use randomNumber() on the x position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Background_instruction: Put all of your code into a draw() loop and then add set the background to blue with the background() block.
      CSD U3 Simple Drawing - Personal Animation_instruction: DO This
      CSD U3 Sprites intro sprites_instruction: Do This
      CSD U3 Sprites intro sprites_2018_instruction: Do This
      CSD U3 Variable Arithmetic pt2_instruction: 'Predict: What two numbers will be displayed in the console?'
      CSD U3 Variable Arithmetic_instruction: Change the value "size" initialized to make a larger square.
      CSD U3 Variable Incrementation pt2_instruction: 'Predict: What two numbers will be displayed in the console?'
      CSD U3 Variable Incrementation_instruction: 'Predict: What two numbers will be displayed in the console?'
      CSD U3 Variables CHALLENGE gamelab gary_instruction: Use variables to animate Game Lab Gary
      CSD U3 Variables Initialize_instruction: 'Predict: What will get displayed in the console?'
      CSD U3 Variables Intro_instruction: 'Create your own variable '
      CSD U3 Variables Random_instruction: 'Predict: What will get displayed in the console?'
      CSD U3 Variables Reassign pt2_instruction: Create and assign a new variable in a single line.
      CSD U3 Variables Reassign_instruction: 'Predict: What will get displayed in the console?'
      CSD U3 Variables Square Random Loop_instruction: Test your predictions from the last level.
      CSD U3 Variables Square Random_instruction: Change the value "size" initialized to make a larger square.
      CSD U3 Variables Square_instruction: Change the value "size" initialized to make a larger square.
      CSD U3 Variables TEMPLATE square_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      CSD U3 Variables change circle size_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      CSD U3 Variables change circle size_2018_instruction: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables create and assign_instruction: Create and assign size in a single line of code.
      CSD U3 Variables draw loop newVars_instruction: Extend this project to create your own random art visualization with variables.
      CSD U3 Variables draw loop rgb_instruction: Assign the variables x1 and y1 random values inside the draw loop and use them to control where the square is drawn.
      CSD U3 Variables draw loop xy_instruction: Assign the variables x1 and y1 random values inside the draw loop and use them to control where the square is drawn.
      CSD U3 Variables eyeBrows_instruction: Predict what will happen when you move the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables make a big square_instruction: Change the value of size multiple times. How does it change your drawing?
      CSD U3 Variables make a square_instruction: Change the value of size multiple times. How does it change your drawing?
      CSD U3 Variables multiple assignments_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      CSD U3 Variables naming rules v2-2018_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      CSD U3 Variables naming rules v2_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      CSD U3 Variables naming rules v2_2018_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      CSD U3 Variables naming rules_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      CSD U3 Variables random assignment_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      CSD U3 Variables random draw loop_instruction: Predict what will happen when you move the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables random drawing exemplar_instruction: Check out this example randomized drawing.
      CSD U3 Variables random with assignment_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      CSD U3 Variables random with assignment_2018_instruction: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables use value rect_instruction: 'Predict: What will get displayed in the console?'
      CSD U3 Variables write_instruction: Use the write block to display the value of size
      CSD U3 Variables2 expressions in commands_instruction: Use expressions inside a drawing command
      CSD U3 Variables2 expressions in variables_instruction: Assign the value of each expression to a variable and console.log that variable.
      CSD U3 Variables2 expressions_instruction: Use console.log to display the results of each expression. Then create your own.
      CSD U4 - Events Template_instruction: Add a large red button to your screen using Design Mode. (Click for full instructions.)
      CSD U5 black white images pixelation 2_instruction: Draw a smiley face (click here to see image)
      CSD U5 black white images pixelation 2_2018_instruction: Draw a smiley face (click here to see image)
      CSD U5 black white images pixelation 3_instruction: Change the width and height sliders to find the image (click here to see more)
      CSD U5 black white images pixelation 3_2018_instruction: Change the width and height sliders to find the image (click here to see more)
      CSD U5 black white images pixelation 4_instruction: Add eyebrows to the smiley face (click here to see the image)
      CSD U5 black white images pixelation 4_2018_instruction: Add eyebrows to the smiley face (click here to see the image)
      CSD U5 black white images pixelation 5_instruction: Draw anything you like
      CSD U5 black white images pixelation 5_2018_instruction: Draw anything you like
      CSD U5 black white images pixelation_instruction: Complete the X shape by typing 0s and 1s
      CSD U5 black white images pixelation_2018_instruction: Complete the X shape by typing 0s and 1s
      CSD U6 params modify clouds_instruction: |-
        # Clouds
        
        This program makes the clouds move when you blow on the sound sensor, but it's not finished.
        
        # Do This
        * Create a new function `moveCloud(name)` that will move any cloud.
        * (Hint: you will use almost all the same code as the `moveCloud0` function)
        * Call your new `moveCloud(name)` function inside the event block, once for each cloud name.
        * (Hint: this is similar to how the `loopCloud(name)` function is called many times.
      CSD U6 params modify clouds_2018_instruction: |-
        # Clouds
        
        This program makes the clouds move when you blow on the sound sensor, but it's not finished.
        
        # Do This
        * Create a new function `moveCloud(name)` that will move any cloud.
        * (Hint: you will use almost all the same code as the `moveCloud0` function)
        * Call your new `moveCloud(name)` function inside the event block, once for each cloud name.
        * (Hint: this is similar to how the `loopCloud(name)` function is called many times.
      CSD U6 params modify planes_instruction: |-
        # Multi-plane Controller
        
        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.
        
        # Do This
        * Create a new `movePlane(name)` function that can move any plane.
        * Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.
        
        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSD U6 params modify planes_2018_instruction: |-
        # Multi-plane Controller
        
        This program moves the three planes using the board accelerometer and the on-screen check boxes.  Right now, only the red plane works.
        
        # Do This
        * Create a new `movePlane(name)` function that can move any plane.
        * Call the `movePlane(name)` function inside the event block, such that it only moves when its checkbox is checked.
        
        _Challenge: Right now the planes move way too fast.  Can you figure out how to change the code so they move more slowly?_
      CSDU4 - AppLab - 1_instruction: Read the documentation for penColor() and penWidth() before using them to draw the blue square.
      CSDU4 - AppLab - 2_instruction: Write a program that acts as a simple calculator. (click to see full instructions)
      CSDU4 - AppLab - 3_instruction: Use console to check the ending value of num. (Click to see full instructions)
      CSDU4 - AppLab - 4_instruction: " Use the Debug Commands to make a list of all the values rolled before a 6. (Click to see full instructions)"
      CSDU4 - Design Mode - 1_instruction: Add a button that moves the turtle when clicked.  (Click to see full instructions)
      CSDU4 - Design Mode - 10_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSDU4 - Design Mode - 11_instruction: Experiment with different event types and select the one that you think is best. (Click to see full instructions)
      CSDU4 - Design Mode - 12_instruction: Use the textLabel command to replace the button in your program with a text label. (Click to see full instructions)
      CSDU4 - Design Mode - 16_instruction: Add an event handler for the button using the "Insert and show" link in the Design Mode Events tab. (Click to see full instructions).
      CSDU4 - Design Mode - 17_instruction: Update the ID names and `console.log` messages to match the correct button. (Click to see full instructions.)
      CSDU4 - Design Mode - 18_instruction: Fix the layout of the bullseye game. (Click to see full instructions)
      CSDU4 - Design Mode - 2_instruction: Run a program with two buttons that have the same id to see the warning message in the console. Change the ids to make the program run without getting a warning message.
      CSDU4 - Design Mode - 24_instruction: Add an Text Input box for the name and age. (Click to see full instructions)
      CSDU4 - Design Mode - 25_instruction: Add an event handler to the Submit button so that when the button is clicked it will display the name entered in the text box to the console.  Use getText to get the value out of the text box. (Click to see full instructions)
      CSDU4 - Design Mode - 26_instruction: Save the age and name of the user in variables (Click to see full instructions)
      CSDU4 - Design Mode - 27_instruction: Output a message to the 'textArea' (Click to see full instructions)
      CSDU4 - Design Mode - 28_instruction: Write a greeting to the user when they hit 'enter' in the text input, using the 'change' event. (Click to see full instructions)
      CSDU4 - Design Mode - 29_instruction: Add a dropdown for their guess instead of promptNum (Click to see full instructions)
      CSDU4 - Design Mode - 30_instruction: Show different die images for the random number generated. (Click to see full instructions)
      CSDU4 - Design Mode - 31_instruction: Set up an event handler to respond to keypress events, and display event.key in the console. Hit keys on the keyboard to see what happens. (Click to see full instructions)
      CSDU4 - Design Mode - 32_instruction: Try out the keyup and keydown events to see how they are different from keypress. (Click to see full instructions)
      CSDU4 - Design Mode - 33_instruction: Change the code so the sound will only play when the up arrow is pressed. (Click to see full instructions)
      CSDU4 - Design Mode - 4_instruction: Improve the button by choosing a descriptive and meaningful ID. (Click to see full instructions)
      CSDU4 - Design Mode - 5_instruction: Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)
      CSDU4 - Design Mode - 6_instruction: Debug the program by properly ordering your button commands and event handlers. (Click to see full instructions)
      CSDU4 - Design Mode - 7_instruction: Debug the program by fixing the logical error within the program. (Click to see full instructions)
      CSDU4 - Design Mode - 8_instruction: Move the button to the middle of the screen. (Click to see full instructions)
      CSDU4 nameAgeTemplate_instruction: Add an Text Input box for the name and age. (Click to see full instructions)
      CSDU6 - Arrays - expressionsAsIndexes_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      CSDU6 - Arrays - indexPractice_instruction: Write the contents of the array to the screen in numerical order. (Click to see full instructions)
      CSDU6 - Arrays - length_instruction: Use list.length to determine the length of each array. (Click to see full instructions)
      CSDU6 - Arrays - lengthMinus1_instruction: Use list.length - 1 to log the last item in the array to the console. (Click to see full instructions)
      CSDU6 - for loop - color buttons with for_instruction: Write the contents of the array to the screen in numerical order. (Click to see full instructions)
      CSDU6 - for loop - color buttons_instruction: Write the contents of the array to the screen in numerical order. (Click to see full instructions)
      CSDU6 - for loop - why for_instruction: Write the contents of the array to the screen in numerical order. (Click to see full instructions)
      CSDU6 arrays rainbow_instruction: Write the contents of the array to the screen in numerical order. (Click to see full instructions)
      CSDU6 arrays random_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      CSDU6 arrays select icons_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      CSDU6 arrays select rainbow_instruction: Write the contents of the array to the screen in numerical order. (Click to see full instructions)
      CSDU6 arrays select rainbow_2018_instruction: Write the contents of the array to the screen in numerical order. (Click to see full instructions)
      CSDU6 arrays select random_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      CSDU6 arrays select random_2018_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      CSDU6 arrays select variable_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      CSDU6 arrays select variable_2018_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      CSDU6 arrays variable_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      CSP Data Unit - Counting Multiple Things_instruction: |-
        If you can count one thing you can count multiple things
        
        Find out how many people like something other than dogs and cats
        
        Count dogs
        Count cats
        Count total
        Do the math
        
        blank/ blank toal
        
        Can also use this to find percents from this
        
        x% are dog lovers
      CSP Data Unit -Counting Records - Easy Way_instruction: "ReadRecords with specific criteria \nfind the length of an array\n"
      CSP Data Unit -Counting Records - Hard Way_instruction: |2
        
        1. ReadRecords for all records
        2. Way to loop through and count
      CSP U4 - JSON Object Intro - Bad Way_instruction: Trigger both the keyboard and mouse event and examine the event objects displayed in the console. Why might an object be the best way to store this information? (Click to see full instructions)
      CSP U4 - JSON Object Intro - Good Way_instruction: 'Create an object with at least 5 values including at least one string and one number. (Click to see full instructions) '
      CSP U4 - Objects - createObject_instruction: 'Create an object with at least 5 values including at least one string and one number. (Click to see full instructions) '
      CSP student contact info_instruction: Please enter your email address.
      CSPU5 Add Screens to Chaser Game_instruction: Recreate the game from the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      CSPU5 Add a 2nd Screen_instruction: Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)
      CSPU5 Add a 2nd Screen_2018_instruction: Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)
      CSPU5 Add full screen image to bg of chaser game_instruction: Recreate the game from the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      CSPU5 Add full screen image to bg of chaser game_2018_instruction: Recreate the game from the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      CSPU5 Add game over screen_instruction: Recreate the game from the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      CSPU5 Add game over screen_2018_instruction: Recreate the game from the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      CSPU5 Add onEvent from Design Mode_instruction: Add an event handler for the button using the "Insert and show" link in the Design Mode Events tab. (Click to see full instructions).
      CSPU5 Add onEvent from Design Mode_2018_instruction: Add an event handler for the button using the "Insert and show" link in the Design Mode Events tab. (Click to see full instructions).
      CSPU5 Add welcome screen to chaser game_instruction: Recreate the game from the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      CSPU5 Add welcome screen to chaser game_2018_instruction: Recreate the game from the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      CSPU5 Adding Screens Template_instruction: Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)
      CSPU5 Adding Screens Template_2018_instruction: Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)
      CSPU5 Debugging Overlapping Objects and Screen Events_instruction: Recreate the "Chaser Game" from the last lesson using Design Mode. (Click to see full instructions.)
      CSPU5 Debugging Overlapping Objects and Screen Events_2018_instruction: Recreate the "Chaser Game" from the last lesson using Design Mode. (Click to see full instructions.)
      CSPU5 First Time Console.log_instruction: Add a 3 console.log messages and test them out. (Click to see full instructions.)
      CSPU5 First Time Console.log_2018_instruction: Add a 3 console.log messages and test them out. (Click to see full instructions.)
      CSPU5 Layering and Deleting in Design Mode_instruction: Fix the layout of the bullseye game. (Click to see full instructions)
      CSPU5 Layering and Deleting in Design Mode_2018_instruction: Fix the layout of the bullseye game. (Click to see full instructions)
      CSPU5 Project - Multi Screen App_instruction: Create your multi-screen app. (Click to see full instructions.)
      CSPU5 Use Console.log to update IDs_instruction: Update the ID names and `console.log` messages to match the correct button. (Click to see full instructions.)
      CSPU5 Use setScreen for first time_instruction: Make a 2 screen app which can switch back and forth between a black screen and a white screen using buttons. (Click to see detailed instructions.)
      CSPU5 Use setScreen for first time_2018_instruction: Make a 2 screen app which can switch back and forth between a black screen and a white screen using buttons. (Click to see detailed instructions.)
      CSPU5_AddImageToChaserGame_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSPU5_AddImage_andMakeChaserGame_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSPU5_AddLabelToChaserGame_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSPU5_AddLabelToChaserGame_2018_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSPU5_Debugging predict unexpected behavior - two onEvents to one ID_instruction: Predict what will happen. Once you've made a prediction, run the code to see what happens. (Click to see full instructions)
      CSPU5_Debugging predict unexpected behavior - two onEvents to one_2018_instruction: Predict what will happen. Once you've made a prediction, run the code to see what happens. (Click to see full instructions)
      CSPU5_FinalizeChaserGame_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSPU5_Project - Multi Screen App_instruction: Create your multi-screen app. (Click to see full instructions.)
      CSPU5_U3 - Arrays - Demo App_instruction: Use the "My Favorite Things" app. How might this app be making use of an array? (Click to see full instructions)
      CSPU5_U3 - Arrays - Demo App_2018_instruction: Use the "My Favorite Things" app. How might this app be making use of an array? (Click to see full instructions)
      CSPU5_U3 - Arrays - appendItem_instruction: Create an array of odd numbers 1-11 by using appendItem. (Click to see full instructions)
      CSPU5_U3 - Arrays - appendItem_2018_instruction: Create an array of odd numbers 1-11 by using appendItem. (Click to see full instructions)
      CSPU5_U3 - Arrays - assignment_instruction: Use indexes to change the values in this array from 1 to 0. (Click to see full instructions)
      CSPU5_U3 - Arrays - assignment2_instruction: Calculate the sum of three values stored in an array. (Click to see full instructions)
      CSPU5_U3 - Arrays - assignment2_2018_instruction: Calculate the sum of three values stored in an array. (Click to see full instructions)
      CSPU5_U3 - Arrays - assignment3_instruction: Increase the value of each value in the randomly generated array by 1. (Click to see full instructions)
      CSPU5_U3 - Arrays - assignment3_2018_instruction: Increase the value of each value in the randomly generated array by 1. (Click to see full instructions)
      CSPU5_U3 - Arrays - assignment_2018_instruction: Use indexes to change the values in this array from 1 to 0. (Click to see full instructions)
      CSPU5_U3 - Arrays - createFirstArray_instruction: Create an array of the even numbers from 0 to 10 and display its contents with console.log. (Click to see full instructions)
      CSPU5_U3 - Arrays - createFirstArray_2018_instruction: Create an array of the even numbers from 0 to 10 and display its contents with console.log. (Click to see full instructions)
      CSPU5_U3 - Arrays - expressionsAsIndexes_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - expressionsAsIndexes_2018_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings Counting Variable_instruction: Create a global variable for the current index and use it to display the first item in the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings Counting Variable_2018_instruction: Create a global variable for the current index and use it to display the first item in the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings Next_instruction: Write code that allows the user to move forward through your list by clicking the "Next" button. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings Next_2018_instruction: Write code that allows the user to move forward through your list by clicking the "Next" button. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings Prev_instruction: Write code that allows the user to move backward through your list by clicking the "Last" button. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings Prev_2018_instruction: Write code that allows the user to move backward through your list by clicking the "Last" button. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings addItem_instruction: Write code that allows a user to add their own favorite things to the list. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings addItem_2018_instruction: Write code that allows a user to add their own favorite things to the list. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings bounds_instruction: Add if statements to your event handlers that prevent the global index from going out of bounds. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings bounds_2018_instruction: Add if statements to your event handlers that prevent the global index from going out of bounds. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings createArray_instruction: Create an array of words describing your favorite things. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings createArray_2018_instruction: Create an array of words describing your favorite things. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings firstOutput_instruction: Use setText to display the first item in the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings firstOutput_2018_instruction: Use setText to display the first item in the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings giveIDs_instruction: Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings giveIDs_2018_instruction: Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings keepPlaying_instruction: Make any other improvements you want! (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings keepPlaying_2018_instruction: Make any other improvements you want! (Click to see full instructions)
      CSPU5_U3 - Arrays - indexPractice_instruction: Write the contents of the array to the screen in numerical order. (Click to see full instructions)
      CSPU5_U3 - Arrays - indexPractice_2018_instruction: Write the contents of the array to the screen in numerical order. (Click to see full instructions)
      CSPU5_U3 - Arrays - insertingItems_instruction: Insert items into an array to form a complete sentence. (Click to see full instructions)
      CSPU5_U3 - Arrays - insertingItems_2018_instruction: Insert items into an array to form a complete sentence. (Click to see full instructions)
      CSPU5_U3 - Arrays - insertionErrors_instruction: Run each command that references indexes that are out of bounds and observe the results. (Click to see full instructions)
      CSPU5_U3 - Arrays - insertionErrors_2018_instruction: Run each command that references indexes that are out of bounds and observe the results. (Click to see full instructions)
      CSPU5_U3 - Arrays - introIndex_instruction: Display the first and last element in the array. Display the number 5 from the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - introIndex_2018_instruction: Display the first and last element in the array. Display the number 5 from the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - length_instruction: Use list.length to determine the length of each array. (Click to see full instructions)
      CSPU5_U3 - Arrays - lengthMinus1_instruction: Use list.length - 1 to log the last item in the array to the console. (Click to see full instructions)
      CSPU5_U3 - Arrays - lengthMinus1_2018_instruction: Use list.length - 1 to log the last item in the array to the console. (Click to see full instructions)
      CSPU5_U3 - Arrays - length_2018_instruction: Use list.length to determine the length of each array. (Click to see full instructions)
      CSPU5_U3 - Arrays - remove_instruction: Remove items from an array to form a complete sentence. (Click to see full instructions)
      CSPU5_U3 - Arrays - remove_2018_instruction: Remove items from an array to form a complete sentence. (Click to see full instructions)
      CSPU5_U3 - Arrays - stringsInArrays_instruction: Write a sentence word by word by adding strings to an array. (Click to see full instructions)
      CSPU5_U3 - Arrays - stringsInArrays_2018_instruction: Write a sentence word by word by adding strings to an array. (Click to see full instructions)
      CSPU5_U3 - Canvas - 200dots_instruction: Add a loop to your program that draws 200 dots on your canvas. (Click to see full instructions)
      CSPU5_U3 - Canvas - 200dots_2018_instruction: Add a loop to your program that draws 200 dots on your canvas. (Click to see full instructions)
      CSPU5_U3 - Canvas - One Dot sprayPaint_instruction: Write code that redraws your image using a dot whose x and y locations use offsetX and offsetY with a small random value added. (Click to see full instructions)
      CSPU5_U3 - Canvas - One Dot sprayPaint_2018_instruction: Write code that redraws your image using a dot whose x and y locations use offsetX and offsetY with a small random value added. (Click to see full instructions)
      CSPU5_U3 - Canvas - appendToArray_instruction: Create an array to store each event parameter. Append each event parameter to this array within your event handler. (Click to see full instructions)
      CSPU5_U3 - Canvas - appendToArray_2018_instruction: Create an array to store each event parameter. Append each event parameter to this array within your event handler. (Click to see full instructions)
      CSPU5_U3 - Canvas - changeToMouseMove_instruction: Change your program so that dots are drawn at the location of the mouse as the user moves the mouse on the canvas. (Click to see full instructions)
      CSPU5_U3 - Canvas - changeToMouseMove_2018_instruction: Change your program so that dots are drawn at the location of the mouse as the user moves the mouse on the canvas. (Click to see full instructions)
      CSPU5_U3 - Canvas - clickToAdd_instruction: Change your program so that dots are added to the canvas when the user clicks on it. (Click to see full instructions)
      CSPU5_U3 - Canvas - clickToAdd_2018_instruction: Change your program so that dots are added to the canvas when the user clicks on it. (Click to see full instructions)
      CSPU5_U3 - Canvas - delete_instruction: Create a button that deletes the drawing by clearing the canvas and removing all stored values. (Click to see full instructions)
      CSPU5_U3 - Canvas - delete_2018_instruction: Create a button that deletes the drawing by clearing the canvas and removing all stored values. (Click to see full instructions)
      CSPU5_U3 - Canvas - draw at click point_instruction: Change your program so that dots are drawn at the location of the mouse click. (Click to see full instructions)
      CSPU5_U3 - Canvas - draw at click point_2018_instruction: Change your program so that dots are drawn at the location of the mouse click. (Click to see full instructions)
      CSPU5_U3 - Canvas - freePlay_instruction: Extend the functionality of one of the effects, or create an entirely new one of your own. (Click to see full instructions)
      CSPU5_U3 - Canvas - freePlay_2018_instruction: Extend the functionality of one of the effects, or create an entirely new one of your own. (Click to see full instructions)
      CSPU5_U3 - Canvas - introCanvas_instruction: Add a canvas to your app and set it to be the active canvas. Then add a large dot to your canvas. (Click to see full instructions)
      CSPU5_U3 - Canvas - introCanvas_2018_instruction: Add a canvas to your app and set it to be the active canvas. Then add a large dot to your canvas. (Click to see full instructions)
      CSPU5_U3 - Canvas - movementFunction fix Orig_instruction: Modify the "Original" button event handler so that it takes the movement of the mouse into account. (Click to see full instructions)
      CSPU5_U3 - Canvas - movementFunction fix Orig_2018_instruction: Modify the "Original" button event handler so that it takes the movement of the mouse into account. (Click to see full instructions)
      CSPU5_U3 - Canvas - movementFunction_instruction: Write a function that takes the movement of the mouse as input and generates a line width as output. (Click to see full instructions)
      CSPU5_U3 - Canvas - movementFunction_2018_instruction: Write a function that takes the movement of the mouse as input and generates a line width as output. (Click to see full instructions)
      CSPU5_U3 - Canvas - redrawOriginal_instruction: Write a function that processes your array, redrawing the dots as they originally appeared. (Click to see full instructions)
      CSPU5_U3 - Canvas - redrawOriginal_2018_instruction: Write a function that processes your array, redrawing the dots as they originally appeared. (Click to see full instructions)
      CSPU5_U3 - Canvas - redrawRandom_instruction: Set up a button and event handler for the random function. (Click to see full instructions)
      CSPU5_U3 - Canvas - redrawRandom2_instruction: Write a function that processes your array, redrawing every dot with a random size. (Click to see full instructions)
      CSPU5_U3 - Canvas - redrawRandom2_2018_instruction: Write a function that processes your array, redrawing every dot with a random size. (Click to see full instructions)
      CSPU5_U3 - Canvas - redrawRandom_2018_instruction: Set up a button and event handler for the random function. (Click to see full instructions)
      CSPU5_U3 - Canvas - shiftKey_instruction: Add an if statement to your event handler so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      CSPU5_U3 - Canvas - shiftKey_2018_instruction: Add an if statement to your event handler so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      CSPU5_U3 - Canvas - sketch_instruction: Write code that redraws your image using a sketch effect. (Click to see full instructions)
      CSPU5_U3 - Canvas - sketch_2018_instruction: Write code that redraws your image using a sketch effect. (Click to see full instructions)
      CSPU5_U3 - Canvas - sprayPaint_instruction: Update the spray paint code so that it redraws your image using multiple random dots instead of using a nested for loop. (Click to see full instructions)
      CSPU5_U3 - Canvas - sprayPaint_2018_instruction: Update the spray paint code so that it redraws your image using multiple random dots instead of using a nested for loop. (Click to see full instructions)
      CSPU5_U3 - Canvas - transparentDots_instruction: Change the colors of your dots so they have a fully transparent stroke and partially transparent fill. (Click to see full instructions)
      CSPU5_U3 - Canvas - transparentDots_2018_instruction: Change the colors of your dots so they have a fully transparent stroke and partially transparent fill. (Click to see full instructions)
      CSPU5_U3 - Canvas - usingOffsetXY_instruction: Add a console.log command inside the function of your event handler. Use it to display the event parameter. Click on the screen to see the contents of the event parameter (Click to see full instructions)
      CSPU5_U3 - Canvas - usingOffsetXY_2018_instruction: Add a console.log command inside the function of your event handler. Use it to display the event parameter. Click on the screen to see the contents of the event parameter (Click to see full instructions)
      CSPU5_U3 - Conditional Basics - 6_instruction: Add a setText after the if statement to "Nope. Guess again." (Click to see full instructions)
      CSPU5_U3 - Conditionals - Combine AND OR Simple_instruction: Write an if statement that uses AND and OR to display "Sleep in!" if it's the weekend and the user is a teenager. (Click to see full instructions.
      CSPU5_U3 - Conditionals - Combine AND OR Simple_2018_instruction: Write an if statement that uses AND and OR to display "Sleep in!" if it's the weekend and the user is a teenager. (Click to see full instructions.
      CSPU5_U3 - Conditionals - Combine AND OR and NOT_instruction: Write an if statement that uses AND and OR to display "Time to go to school!" if it's not the weekend and the user is under 18. (Click to see full instructions.)
      CSPU5_U3 - Conditionals - Combine AND OR and NOT_2018_instruction: Write an if statement that uses AND and OR to display "Time to go to school!" if it's not the weekend and the user is under 18. (Click to see full instructions.)
      CSPU5_U3 - Conditionals - Simple AND_instruction: Write an if statement that uses AND to display "You are a teenager." if the user enters an age between 13 and 19. (Click to see full instructions)
      CSPU5_U3 - Conditionals - Simple AND_2018_instruction: Write an if statement that uses AND to display "You are a teenager." if the user enters an age between 13 and 19. (Click to see full instructions)
      CSPU5_U3 - Conditionals - Simple OR_instruction: Write an if statement that uses OR to display "It's the weekend!" if the user enters a weekend day at the prompt. (Click to see full instructions)
      CSPU5_U3 - Conditionals - Simple OR_2018_instruction: Write an if statement that uses OR to display "It's the weekend!" if the user enters a weekend day at the prompt. (Click to see full instructions)
      CSPU5_U3 - Design Mode - Console Log_instruction: Update the ID names and `console.log` messages to match the correct button. (Click to see full instructions.)
      CSPU5_U3 - Design Mode - Layers and Delete_instruction: Fix the layout of the bullseye game. (Click to see full instructions)
      CSPU5_U3 - Design Mode - Multi Screens 2_instruction: Make a 2 screen app which can switch back and forth between a black screen and a white screen using buttons. (Click to see detailed instructions.)
      CSPU5_U3 - Design Mode - Multi Screens_instruction: Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)
      CSPU5_U3 - Design Mode - WTF Console Log_instruction: Add a 3 console.log messages and test them out. (Click to see full instructions.)
      CSPU5_U3 - Design Mode -Recreate Beyond Buttons_instruction: Recreate the game from the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      CSPU5_U3 - Design Mode 1_instruction: Add a large red button to your screen using Design Mode. (Click for full instructions.)
      CSPU5_U3 - Design Mode 1_2018_instruction: Add a large red button to your screen using Design Mode. (Click for full instructions.)
      CSPU5_U3 - Dice - Dropdown and Score_instruction: Add guess and score to the Dice Game (Click to see full instructions)
      CSPU5_U3 - Dice - Dropdown with Strings_instruction: Add a dropdown for difficulty level that prints the difficulty level in the console. (Click to see full instructions)
      CSPU5_U3 - Dice - If_instruction: Show different die images for the random number generated. (Click to see full instructions)
      CSPU5_U3 - Dice - Nested_instruction: Use nested if statements to make the scoring different for the different game levels. (Click to see full instructions)
      CSPU5_U3 - High Low - Debug_instruction: Debug the order of the conditionals so that it will actually tell the user when their guess is close. (Click to see full instructions)
      CSPU5_U3 - High Low - Debug_2018_instruction: Debug the order of the conditionals so that it will actually tell the user when their guess is close. (Click to see full instructions)
      CSPU5_U3 - High Low - Dropdown_instruction: Add a dropdown for their guess instead of promptNum (Click to see full instructions)
      CSPU5_U3 - High Low - Else if_instruction: Add an else-if statement in order to tell the user if their guess is high or low instead of just wrong. (Click to see full instructions)
      CSPU5_U3 - High Low - Else if_2018_instruction: Add an else-if statement in order to tell the user if their guess is high or low instead of just wrong. (Click to see full instructions)
      CSPU5_U3 - High Low - Else_instruction: 'Add an else statement so that the program will tell the user when they are right and when they are wrong. (Click to see full instructions)  '
      CSPU5_U3 - High Low - If_instruction: Add code to the if statement that indicates the user guessed the secret number. (Click to see full instructions)
      CSPU5_U3 - Keys - Add Image URLs_instruction: Add image URLs to your array. Replace the text area with an image and setText with setImageURL. Then test your app! (Click to see full instructions)
      CSPU5_U3 - Keys - Add Image URLs_2018_instruction: Add image URLs to your array. Replace the text area with an image and setText with setImageURL. Then test your app! (Click to see full instructions)
      CSPU5_U3 - Keys - Buttons and Keys_instruction: Have the program respond the same way for both clicking images on the screen and hitting the up and down keys on the keyboard. (Click to see full instructions)
      CSPU5_U3 - Keys - Buttons and Keys_2018_instruction: Have the program respond the same way for both clicking images on the screen and hitting the up and down keys on the keyboard. (Click to see full instructions)
      CSPU5_U3 - Keys - Demo App_instruction: Play with the image scroller. Press the left and right arrows to progress through the images.
      CSPU5_U3 - Keys - Demo App_2018_instruction: Play with the image scroller. Press the left and right arrows to progress through the images.
      CSPU5_U3 - Keys - Final Image Scroller_instruction: Update the image scroller to respond to buttons and key presses. (Click to see full instructions)
      CSPU5_U3 - Keys - Functions_instruction: Write doUpArrow and doDownArrow functions and call the functions instead of duplicating the code. (Click to see full instructions)
      CSPU5_U3 - Keys - Functions_2018_instruction: Write doUpArrow and doDownArrow functions and call the functions instead of duplicating the code. (Click to see full instructions)
      CSPU5_U3 - Keys - Key Up and Down_instruction: Try out the keyup and keydown events to see how they are different from keypress. (Click to see full instructions)
      CSPU5_U3 - Keys - Key Up and Down_2018_instruction: Try out the keyup and keydown events to see how they are different from keypress. (Click to see full instructions)
      CSPU5_U3 - Keys - Multiple Keys_instruction: Play a different sound when the down arrow is pressed. (Click to see full instructions)
      CSPU5_U3 - Keys - Multiple Keys_2018_instruction: Play a different sound when the down arrow is pressed. (Click to see full instructions)
      CSPU5_U3 - Loops -  Complex Condition_instruction: Change the boolean expression for the while loop so that it will stop when both dice are greater than or equal to 5. (Click to see full instructions)
      CSPU5_U3 - Loops -  Complex Condition_2018_instruction: Change the boolean expression for the while loop so that it will stop when both dice are greater than or equal to 5. (Click to see full instructions)
      CSPU5_U3 - Loops - 1_instruction: Change the condition for the while loop to check if the variable num is less than 90. (Click to see full instructions)
      CSPU5_U3 - Loops - 10_instruction: Write a program that simulates the rolling of two dice. Roll the dice repeatedly until the sum of the dice is either 7 or 11.
      CSPU5_U3 - Loops - 10_2018_instruction: Write a program that simulates the rolling of two dice. Roll the dice repeatedly until the sum of the dice is either 7 or 11.
      CSPU5_U3 - Loops - 11_instruction: Fix the condition so that it keeps rolling the die as long as the value is not a 2 or a 3 instead of rolling infinitely. (Click to see full instructions)
      CSPU5_U3 - Loops - 11_2018_instruction: Fix the condition so that it keeps rolling the die as long as the value is not a 2 or a 3 instead of rolling infinitely. (Click to see full instructions)
      CSPU5_U3 - Loops - 12_instruction: Change the code so that it prints the string "Hi" 5 times. (Click to see full instructions)
      CSPU5_U3 - Loops - 12_2018_instruction: Change the code so that it prints the string "Hi" 5 times. (Click to see full instructions)
      CSPU5_U3 - Loops - 14_instruction: Change the loop condition to prevent the infinite loop and stop counting once the count is past 30. (Click to see full instructions)
      CSPU5_U3 - Loops - 14_2018_instruction: Change the loop condition to prevent the infinite loop and stop counting once the count is past 30. (Click to see full instructions)
      CSPU5_U3 - Loops - 15_instruction: Count the number of times the sum of the dice is 12. (Click to see full instructions)
      CSPU5_U3 - Loops - 15_2018_instruction: Count the number of times the sum of the dice is 12. (Click to see full instructions)
      CSPU5_U3 - Loops - 1_2018_instruction: Change the condition for the while loop to check if the variable num is less than 90. (Click to see full instructions)
      CSPU5_U3 - Loops - 2_instruction: Try creating an infinite loop using !=, > and <. (Click to see full instructions)
      CSPU5_U3 - Loops - 2_2018_instruction: Try creating an infinite loop using !=, > and <. (Click to see full instructions)
      CSPU5_U3 - Loops - 3_instruction: Change the if statement to a while loop so the program will run until it rolls a 6. (Click to see full instructions)
      CSPU5_U3 - Loops - 3_2018_instruction: Change the if statement to a while loop so the program will run until it rolls a 6. (Click to see full instructions)
      CSPU5_U3 - Loops - 4_instruction: Use the Debug Commands to make a list of all the values rolled before a 6. (Click to see full instructions)
      CSPU5_U3 - Loops - 4_2018_instruction: Use the Debug Commands to make a list of all the values rolled before a 6. (Click to see full instructions)
      CSPU5_U3 - Loops - 5_instruction: Add code inside the while loop which will update the variable num so that the condition will eventually become false. (Click to see full instructions)
      CSPU5_U3 - Loops - 5_2018_instruction: Add code inside the while loop which will update the variable num so that the condition will eventually become false. (Click to see full instructions)
      CSPU5_U3 - Loops - 6_instruction: Fix the problem so the loop will run at least once. Change the initial value of num to a dummy value such as -1. (Click to see full instructions)
      CSPU5_U3 - Loops - 6_2018_instruction: Fix the problem so the loop will run at least once. Change the initial value of num to a dummy value such as -1. (Click to see full instructions)
      CSPU5_U3 - Loops - 7_instruction: Without adding any lines of code, reorder the code so that it prints all the values of num. (Click to see full instructions)
      CSPU5_U3 - Loops - 7_2018_instruction: Without adding any lines of code, reorder the code so that it prints all the values of num. (Click to see full instructions)
      CSPU5_U3 - Loops - 8_instruction: Debug which number is not getting printed and add a write statement to display that value. (Click to see full instructions)
      CSPU5_U3 - Loops - 8_2018_instruction: Debug which number is not getting printed and add a write statement to display that value. (Click to see full instructions)
      CSPU5_U3 - Loops - 9_instruction: " Modify the condition so that it keeps rolling as long as both are less than 3. (Click to see full instructions)"
      CSPU5_U3 - Loops - 9_2018_instruction: " Modify the condition so that it keeps rolling as long as both are less than 3. (Click to see full instructions)"
      CSPU5_U3 - Loops - Minus Minus_instruction: Change the code to count down from 10 to 1. (Click to see full instructions)
      CSPU5_U3 - Loops - Minus Minus_2018_instruction: Change the code to count down from 10 to 1. (Click to see full instructions)
      CSPU5_U3 - Loops - Plus Plus_instruction: Change the code to use count++ instead of count = count + 1.  (Click to see full instructions)
      CSPU5_U3 - Loops - Plus Plus_2018_instruction: Change the code to use count++ instead of count = count + 1.  (Click to see full instructions)
      CSPU5_U3 - Loops - Typing in Console_instruction: Use console to check the ending value of num. (Click to see full instructions)
      CSPU5_U3 - Loops - Typing in Console_2018_instruction: Use console to check the ending value of num. (Click to see full instructions)
      CSPU5_U3 - Loops - minus = operator_instruction: Update the code to use the -= operator to count from 30 down to 0 by 3's. (Click to see full instructions)
      CSPU5_U3 - Loops - minus = operator_2018_instruction: Update the code to use the -= operator to count from 30 down to 0 by 3's. (Click to see full instructions)
      CSPU5_U3 - Loops - plus and minus = operator_instruction: Update the code to use the += operator. (Click to see full instructions)
      CSPU5_U3 - Loops - plus and minus = operator_2018_instruction: Update the code to use the += operator. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Add 5_instruction: Add 5 to all the values in an array (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Add 5_2018_instruction: Add 5 to all the values in an array (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Counting Times_instruction: Count the number of times 5 appears in an array. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Counting Times_2018_instruction: Count the number of times 5 appears in an array. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Divid by 2_instruction: Divide every value in the array by 2. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Divid by 2_2018_instruction: Divide every value in the array by 2. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Find Min_instruction: Complete the findMinVal function to find and display the smallest value in an array  (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Find Min_2018_instruction: Complete the findMinVal function to find and display the smallest value in an array  (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - General Search Param_instruction: Add a second parameter to the search function for the value to search for.  (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - General Search Param_2018_instruction: Add a second parameter to the search function for the value to search for.  (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Intro For Loop_instruction: Add a for loop with a console.log inside and test out the 3 pieces of the for loop. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Intro For Loop_2018_instruction: Add a for loop with a console.log inside and test out the 3 pieces of the for loop. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Linear Search_instruction: Visit every element in the array and display "true" if the value is a 5, and "false" otherwise. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Linear Search_2018_instruction: Visit every element in the array and display "true" if the value is a 5, and "false" otherwise. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Loop Array If_instruction: Use an if statement to only display the values in the array that are greater than 5. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Loop Array If_2018_instruction: Use an if statement to only display the values in the array that are greater than 5. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Make it a Function - add list param_2018_instruction: Create a function that takes a list parameter and prints if the list contains a 5. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: Create a function that takes a list parameter and prints if the list contains a 5. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Make it a Function_instruction: Move the code that searches the list for a 5 into a function called "search". (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Make it a Function_2018_instruction: Move the code that searches the list for a 5 into a function called "search". (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Print Array_instruction: Use a for loop to print out all the values in an array. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Print Array_2018_instruction: Use a for loop to print out all the values in an array. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Printing Single True_instruction: Process the array and display a single "true" if the array contains a 5 or a single "false" if it does not.  (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Printing Single True_2018_instruction: Process the array and display a single "true" if the array contains a 5 or a single "false" if it does not.  (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Search with Boolean Var_instruction: Make a boolean variable to use as a flag to keep track of whether there is a 5 in the array. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Search with Boolean Var_2018_instruction: Make a boolean variable to use as a flag to keep track of whether there is a 5 in the array. (Click to see full instructions)
      CSPU5_U3 - Movie Bot - Multiple If Sequences_instruction: Add another set of if, else if, and else statements inside the question if statement to check for keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      CSPU5_U3 - Movie Bot - Nested Motivation_instruction: Add a separate set of if statements to check for a "?" in the input. (Click to see full instructions)
      CSPU5_U3 - Movie Bot - When Multiple If Statements_instruction: Add an if and else-if statement that checks for please and thank you. (Click to see full instructions)
      CSPU5_U3 - Movie Bot - toLowerCase_instruction: Use the toLowerCase command to change all user input into lowercase letters after they enter it. (Click to see full instructions)
      CSPU5_U3 - Practice Create Performance Task_instruction: Design and implement your practice Create Performance Task. (Click to see full instructions)
      CSPU5_U3 - Return Values - constrainTurtle_instruction: Use constrain in this simple app to keep the turtle from driving off the screen.  (Click to see full instructions)
      CSPU5_U3 - Return Values - constrainTurtle_2018_instruction: Use constrain in this simple app to keep the turtle from driving off the screen.  (Click to see full instructions)
      CSPU5_U3 - Return Values - debuggingConstrain_instruction: Correct the error in constrain so that it returns the appropriate value.  (Click to see full instructions)
      CSPU5_U3 - Return Values - debuggingConstrain_2018_instruction: Correct the error in constrain so that it returns the appropriate value.  (Click to see full instructions)
      CSPU5_U3 - Return Values - debuggingMaxVal_instruction: Correct the error in maxVal so that it correctly reports the maximum value.  (Click to see full instructions)
      CSPU5_U3 - Return Values - debuggingMaxVal_2018_instruction: Correct the error in maxVal so that it correctly reports the maximum value.  (Click to see full instructions)
      CSPU5_U3 - Return Values - useMinVal_instruction: Call minVal within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)
      CSPU5_U3 - Return Values - useMinVal_2018_instruction: Call minVal within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)
      CSPU5_U3 - Return Values - wrapTurtle_instruction: Write wrap in this simple app to let the turtle "wrap" to the other side of the screen when it goes off.  (Click to see full instructions)
      CSPU5_U3 - Return Values - wrapTurtle_2018_instruction: Write wrap in this simple app to let the turtle "wrap" to the other side of the screen when it goes off.  (Click to see full instructions)
      CSPU5_U3 - Return Values - writeMaxVal_instruction: Write the function maxVal and then use it within the console.log statement to calculate the maximum of two values.  (Click to see full instructions)
      CSPU5_U3 - Return Values - writeMaxVal_2018_instruction: Write the function maxVal and then use it within the console.log statement to calculate the maximum of two values.  (Click to see full instructions)
      CSPU5_U3 - Simulation - 1_instruction: Use a while loop to "flip a coin 10 times" and write the values to the screen. (Click to see full instructions)
      CSPU5_U3 - Simulation - 1_2018_instruction: Use a while loop to "flip a coin 10 times" and write the values to the screen. (Click to see full instructions)
      CSPU5_U3 - Simulation - 2.1_instruction: Change your looping condition so the simulation runs until there are 5 heads flipped. (Click to see full instructions)
      CSPU5_U3 - Simulation - 2.1_2018_instruction: Change your looping condition so the simulation runs until there are 5 heads flipped. (Click to see full instructions)
      CSPU5_U3 - Simulation - 2.5_instruction: Run your simulation to get the full 10,000 heads! How long did it take? (Click to see full instructions)
      CSPU5_U3 - Simulation - 2.5_2018_instruction: Run your simulation to get the full 10,000 heads! How long did it take? (Click to see full instructions)
      CSPU5_U3 - Simulation - 2_instruction: Keep track of how many heads (1's) your program generates and print the results to the screen. (Click to see full instructions)
      CSPU5_U3 - Simulation - 2_2018_instruction: Keep track of how many heads (1's) your program generates and print the results to the screen. (Click to see full instructions)
      CSPU5_U3 - Simulation - 3_instruction: 'Add functionality that counts how many heads in a row are flipped. (Click to see full instructions)  '
      CSPU5_U3 - Simulation - 3_2018_instruction: 'Add functionality that counts how many heads in a row are flipped. (Click to see full instructions)  '
      CSPU5_U3 - Simulation - 4_instruction: Update your while loop's condition so the the coin flips until there are three heads in a row. (Click to see full instructions)
      CSPU5_U3 - Simulation - 4_2018_instruction: Update your while loop's condition so the the coin flips until there are three heads in a row. (Click to see full instructions)
      CSPU5_U3 - Simulation - 5_instruction: Change your while loop to run until you get a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      CSPU5_U3 - Simulation - 5_2018_instruction: Change your while loop to run until you get a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      CSPU5_U3 - Simulation - 6_instruction: Keep adding to your simulation. What do you want to explore next? (Click to see full instructions)
      CSPU5_U3 - Simulation - 6_2018_instruction: Keep adding to your simulation. What do you want to explore next? (Click to see full instructions)
      CSPU5_U3 - User Input - Save getText To Variable_instruction: Save the age and name of the user in variables (Click to see full instructions)
      CSPU5_U3 - User Input - Save getText To Variable_2018_instruction: Save the age and name of the user in variables (Click to see full instructions)
      CSPU5_U3 - Variables - Set to Expression with Other Variables_instruction: 'Write an expression that calculates the player''s total score and stores it in the totalScore variable. The calculation is: the player''s points times lives divided by the total time. (click to see full instructions)'
      CSPU5_U3 - Variables - Set to Expression with Other Variables_2018_instruction: 'Write an expression that calculates the player''s total score and stores it in the totalScore variable. The calculation is: the player''s points times lives divided by the total time. (click to see full instructions)'
      CSPU5_U3 - Variables - Set to Expression_instruction: Test out the new expressions. (Click to see full instructions)
      CSPU5_U3 - Variables - Set to Expression_2018_instruction: Test out the new expressions. (Click to see full instructions)
      CSPU5_U3 Digital Assistant Design_instruction: Pick a topic for your Digital Assistant and create the basic layout with a text input and text area. (Click to show full instructions)
      CSPU5_U3 Digital Assistant Set Text_instruction: Have your digital assistant repeat back what the user types and include a canned response. (Click to see full instructions)
      CSPU5_U3 Digital Assistant Target_instruction: Try out a demo of the Digital Assistant!
      CSPU5_U3 full clicker demo_instruction: Clicker game - Try it out!
      CSPU5_U3 full clicker demo_2018_instruction: Clicker game - Try it out!
      CSPU5_U3- Variables - Create And Assign_instruction: On one line add a variable called "lives" and assign it the value 3. Print it to the console. (Click to see full instructions)
      CSPU5_U3- Variables - Create And Assign_2018_instruction: On one line add a variable called "lives" and assign it the value 3. Print it to the console. (Click to see full instructions)
      CSPU5_U3- Variables - Text Mode_instruction: 1. Switch to text mode and type instructions; 2. drag blocks out into text mode; 3. experiment with code completion
      CSPU5_U3- Variables - Text Mode_2018_instruction: 1. Switch to text mode and type instructions; 2. drag blocks out into text mode; 3. experiment with code completion
      CSPU5_U3-Design Mode-ID and Event Handler_instruction: Add an event handler for the button using the "Insert and show" link in the Design Mode Events tab. (Click to see full instructions).
      CSPU5_U3-Design Mode-Image_instruction: Recreate the "Chaser Game" from the last lesson using Design Mode. (Click to see full instructions.)
      CSPU5_U313 Two Buttons with Ids_instruction: Predict what will happen. Once you've made a prediction, run the code to see what happens. (Click to see full instructions)
      CSPU5_U313 drag Two Buttons_instruction: Run a program with two buttons that have the same id to see the warning message in the console. Change the ids to make the program run without getting a warning message.
      CSPU5_U3L13 - Debug Id Problem_instruction: Improve the button by choosing a descriptive and meaningful ID. (Click to see full instructions)
      CSPU5_U3L13 - Debugging 1_instruction: Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)
      CSPU5_U3L13 - Debugging 2_instruction: Debug the program by properly ordering your button commands and event handlers. (Click to see full instructions)
      CSPU5_U3L13 - Debugging 3_instruction: Debug the program by fixing the logical error within the program. (Click to see full instructions)
      CSPU5_U3L13 - Debugging 3_2018_instruction: Debug the program by fixing the logical error within the program. (Click to see full instructions)
      CSPU5_U3L13 - Debugging IDs case sensitive_instruction: Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)
      CSPU5_U3L13 - Debugging IDs case sensitive_2018_instruction: Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)
      CSPU5_U3L13 - Project_instruction: Create your multi-screen app. (Click to see full instructions.)
      CSPU5_U3L13 - Turtle Driver Project_instruction: Create a "turtle driver" that includes buttons to move the turtle forward and turn it left and right. (Click to see full instructions)
      CSPU5_U3L13 - Turtle move with button_instruction: Add a button that moves the turtle when clicked.  (Click to see full instructions)
      CSPU5_U3L13 eventsDetails_instruction: Add an event handler to the button to move the turtle forward. (Click to see full instructions)
      CSPU5_U3L14 - Assigning Random Value_instruction: Write a program that simulates the rolling of two dice and reports their individual values as well as the sum. (click to see full instructions)
      CSPU5_U3L14 - Assigning Random Value_2018_instruction: Write a program that simulates the rolling of two dice and reports their individual values as well as the sum. (click to see full instructions)
      CSPU5_U3L14 - Mini Calculator embed_instruction: You will be prompted for two numbers, one right after the other.  See what happens.  Enter different numbers until you get the idea.
      CSPU5_U3L14 - Mini Calculator embed_2018_instruction: You will be prompted for two numbers, one right after the other.  See what happens.  Enter different numbers until you get the idea.
      CSPU5_U3L14 - User Input Division calculator_instruction: Write a program that acts as a simple calculator. (click to see full instructions)
      CSPU5_U3L14 - User Input Division calculator_2018_instruction: Write a program that acts as a simple calculator. (click to see full instructions)
      CSPU5_U3L14 - Variable ReAssignment pt2_instruction: Trace the code and predict what you think will be printed to the console. Then add a console.log statement at the end of the program to see the last value of someNum to see if your full prediction is correct. (click to see full Instructions)
      CSPU5_U3L14 - Variable ReAssignment pt2_2018_instruction: Trace the code and predict what you think will be printed to the console. Then add a console.log statement at the end of the program to see the last value of someNum to see if your full prediction is correct. (click to see full Instructions)
      CSPU5_U3L14 - concatenate simple_instruction: Modify the write statement on line 3 to combine text and variables together to make the app display a single line of text that shows the player's lives and score. (click to see full instructions)
      CSPU5_U3L14 - concatenate simple_2018_instruction: Modify the write statement on line 3 to combine text and variables together to make the app display a single line of text that shows the player's lives and score. (click to see full instructions)
      CSPU5_U3L14 - moving memory challenge1_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge1_2018_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge2_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge2_2018_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge3_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge3_2018_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge4_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge4_2018_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge5_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge5_2018_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge6_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L14 - moving memory challenge6_2018_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      CSPU5_U3L15 - Add reset button to UpDown app_instruction: Add code so that clicking the start over button will reset the game and send you back to the main screen. (Click to see full instructions)
      CSPU5_U3L15 - Add reset button to UpDown app_2018_instruction: Add code so that clicking the start over button will reset the game and send you back to the main screen. (Click to see full instructions)
      CSPU5_U3L15 - DEMO up down count practice app_instruction: Try out the demo app (Click to see full instructions)
      CSPU5_U3L15 - DEMO up down count practice app_2018_instruction: Try out the demo app (Click to see full instructions)
      CSPU5_U3L15 - Debug forget to update var on reset in UpDown app_instruction: Run the app, and click the up or down button until you get to the gameOverScreen. Click 'Start Over' and try the app again. Find and fix the issue in the code. (Click to see full instructions)
      CSPU5_U3L15 - Debug forget to update var on reset in UpDown app_2018_instruction: Run the app, and click the up or down button until you get to the gameOverScreen. Click 'Start Over' and try the app again. Find and fix the issue in the code. (Click to see full instructions)
      CSPU5_U3L15 - Debug if never triggers in UpDown app_instruction: Run the app and use the up and down arrows to try to hit the gameOverScreen. You can't! Find and fix the issue in the code. (Click to see full instructions)
      CSPU5_U3L15 - Debug if never triggers in UpDown app_2018_instruction: Run the app and use the up and down arrows to try to hit the gameOverScreen. You can't! Find and fix the issue in the code. (Click to see full instructions)
      CSPU5_U3L15 - Debugging Simple If-statements =v==_instruction: Run the app, and click the up button. Then restart and run it again, and click the down button. Find and fix the issue in the code. (Click to see full instructions)
      CSPU5_U3L15 - Debugging Simple If-statements =v==_2018_instruction: Run the app, and click the up button. Then restart and run it again, and click the down button. Find and fix the issue in the code. (Click to see full instructions)
      CSPU5_U3L15 - Simple If-statements in UpDown App_instruction: Add an if statement so that the app changes screens when the count reaches -5. (Click to see full instructions)
      CSPU5_U3L15 - Simple If-statements in UpDown App_2018_instruction: Add an if statement so that the app changes screens when the count reaches -5. (Click to see full instructions)
      CSPU5_U3L15 - add code to make count down work_instruction: Write code to make the down arrow work as expected. (Click to see full instructions)
      CSPU5_U3L15 - add code to make count down work_2018_instruction: Write code to make the down arrow work as expected. (Click to see full instructions)
      CSPU5_U3L15 - count upDown bug forget to set text_instruction: Find the bug in the program and fix it. (Click to see full instructions)
      CSPU5_U3L15 - count upDown bug forget to set text_2018_instruction: Find the bug in the program and fix it. (Click to see full instructions)
      CSPU5_U3L15 - count upDown bug logic error wrong update_instruction: Find the bug in the program and fix it. (Click to see full instructions)
      CSPU5_U3L15 - count upDown bug logic error wrong update_2018_instruction: Find the bug in the program and fix it. (Click to see full instructions)
      CSPU5_U3L15 - count upDown bug var not created globally_instruction: Find the bug in the program and fix it. (Click to see full instructions)
      CSPU5_U3L15 - count upDown bug var not created globally_2018_instruction: Find the bug in the program and fix it. (Click to see full instructions)
      CSPU5_U3L15 - global var example count up_instruction: Look at the code for this app and see how the code works to update the count variable when the up arrow is clicked. (Click to see full instructions).
      CSPU5_U3L15 - global var example count up_2018_instruction: Look at the code for this app and see how the code works to update the count variable when the up arrow is clicked. (Click to see full instructions).
      CSPU5_U3L15 - mini clicker update score_instruction: Add code to update the score when the apple is clicked. (Click to see full instructions)
      CSPU5_U3L15 - mini clicker update score_2018_instruction: Add code to update the score when the apple is clicked. (Click to see full instructions)
      CSPU5_U3L15 - practice with setText_instruction: Use setText to complete the click event handler for the down arrow. (Click to see full instructions)
      CSPU5_U3L15 - practice with setText_2018_instruction: Use setText to complete the click event handler for the down arrow. (Click to see full instructions)
      CSPU5_U3L15 - variable scoping problem debugging_instruction: See if you can figure out why the code is no longer working. (Click to see full instructions)
      CSPU5_U3L15 - variable scoping problem debugging_2018_instruction: See if you can figure out why the code is no longer working. (Click to see full instructions)
      CSPU5_U3L15 click add lives_instruction: Add lives to the clicker game that decrement by 1 when the background image is clicked (Click to see full instructions)
      CSPU5_U3L15 click add lives_2018_instruction: Add lives to the clicker game that decrement by 1 when the background image is clicked (Click to see full instructions)
      CSPU5_U3L15 full clicker app_instruction: Complete your clicker game! (Click to see full instructions)
      CSPU5_U3L15 full clicker app_2018_instruction: Complete your clicker game! (Click to see full instructions)
      CSPU5_U3L16 - challenge say hi app_instruction: Write a greeting to the user when they hit 'enter' in the text input, using the 'change' event. (Click to see full instructions)
      CSPU5_U3L16 - chaserApp_instruction: Create your own "Chaser Game." (Click to see full instructions)
      CSPU5_U3L16 - chooseImages_instruction: Replace the image in your application with one of your own. (Click to see full instructions)
      CSPU5_U3L16 - doubleQuotes_instruction: Save a string inside a variable and log it to the console. (Click to see full instructions)
      CSPU5_U3L16 - doubleQuotes_2018_instruction: Save a string inside a variable and log it to the console. (Click to see full instructions)
      CSPU5_U3L16 - intro getText_instruction: Add an event handler to the Submit button so that when the button is clicked it will display the name entered in the text box to the console.  Use getText to get the value out of the text box. (Click to see full instructions)
      CSPU5_U3L16 - intro getText_2018_instruction: Add an event handler to the Submit button so that when the button is clicked it will display the name entered in the text box to the console.  Use getText to get the value out of the text box. (Click to see full instructions)
      CSPU5_U3L16 - introSetPosition_instruction: Move the buttons to the bottom of the screen. (Click to see full instructions)
      CSPU5_U3L16 - introStrings_instruction: Save a string inside a variable and log it to the console. (Click to see full instructions)
      CSPU5_U3L16 - introStrings_2018_instruction: Save a string inside a variable and log it to the console. (Click to see full instructions)
      CSPU5_U3L16 - newEventTypes_instruction: Experiment with different event types and select the one that you think is best. (Click to see full instructions)
      CSPU5_U3L16 - outputWithTextArea_instruction: Output a message to the 'textArea' (Click to see full instructions)
      CSPU5_U3L16 - outputWithTextArea_2018_instruction: Output a message to the 'textArea' (Click to see full instructions)
      CSPU5_U3L16 - setPosition to fixed location_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSPU5_U3L16 - setPosition to move button_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSPU5_U3L16 - setPosition to move button_2018_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSPU5_U3L16 - singleSetPosition_instruction: Move the button to the middle of the screen. (Click to see full instructions)
      CSPU5_U3L16 - text labels_instruction: Use the textLabel command to replace the button in your program with a text label. (Click to see full instructions)
      CSPU5_U3L16 - textInput getText write_instruction: Add an Text Input box for the name and age. (Click to see full instructions)
      CSPU5_U3L16 - textInput getText write_2018_instruction: Add an Text Input box for the name and age. (Click to see full instructions)
      CSPU5_U3L16 - toUpper_instruction: Make the name of the user appear in uppercase (Click to see full instructions)
      CSPU5_U3L16 - toUpper_2018_instruction: Make the name of the user appear in uppercase (Click to see full instructions)
      CSPU5_U3L16 - use images_instruction: Use the image command to replace the text label in your program with an image. (Click to see full instructions)
      CSPU5_U3L16 Mad Lib Clear Input_instruction: 'Clear the user''s previous text when the Play Again button is clicked (Click to see full instructions) '
      CSPU5_U3L16 Mad Lib Clear Input_2018_instruction: 'Clear the user''s previous text when the Play Again button is clicked (Click to see full instructions) '
      CSPU5_U3L16 Mad Lib Demo_instruction: Mad Libs Demo - Try it out!
      CSPU5_U3L16 Mad Lib Demo_2018_instruction: Mad Libs Demo - Try it out!
      CSPU5_U3L16 Mad Lib Student Setup_instruction: 'Back to Mad Libs: To get started, set up the two screens for your Mad Libs app (Click to show full instructions)'
      CSPU5_U3L16 Mad Lib Student Setup_2018_instruction: 'Back to Mad Libs: To get started, set up the two screens for your Mad Libs app (Click to show full instructions)'
      CSPU5_U3L16 Mad Lib getText_instruction: 'Before setting the text area with your Mad Libs outline, get the user''s text and incorporate their responses. (Click to see full instructions) '
      CSPU5_U3L16 Mad Lib getText_2018_instruction: 'Before setting the text area with your Mad Libs outline, get the user''s text and incorporate their responses. (Click to see full instructions) '
      CSPU5_U3L16 Mad Lib setText_instruction: 'When the Next button is clicked, set the text area to have the main outline of your How-to Mad Libs (without the user''s input). (Click to see full instructions) '
      CSPU5_U3L16 Mad Lib setText_2018_instruction: 'When the Next button is clicked, set the text area to have the main outline of your How-to Mad Libs (without the user''s input). (Click to see full instructions) '
      CSPU5_U3L16 Mad Lib toUpper_instruction: 'Apply the toUpperCase and toLowerCase string functions to the user''s text. (Click to see full instructions) '
      CSPU5_U3L16 Mad Lib toUpper_2018_instruction: 'Apply the toUpperCase and toLowerCase string functions to the user''s text. (Click to see full instructions) '
      CSPU5_U3L18 comparison operators_instruction: Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      CSPU5_U3L18 comparison operators_2018_instruction: Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      CSPU5_U3L19 - fix the var name syntax error v2_instruction: Fix the error and get it to print the value of both variables (Click to see full instructions)
      CSPU5_U3L19 - fix the var name syntax error v2_2018_instruction: Fix the error and get it to print the value of both variables (Click to see full instructions)
      CSPU5_U3L19 - test reassignment of two vars_instruction: Predict the value of a and b. Add console.log statements to find out the actual value of a and b. (Click for full instructions)
      CSPU5_U3L19 - test reassignment of two vars_2018_instruction: Predict the value of a and b. Add console.log statements to find out the actual value of a and b. (Click for full instructions)
      CSPU5_U3L19 - three basic ops of variables_instruction: Add another variable called "lives" and set the value to 3. Print the value of the variable to the console. (Click to see full instructions)
      CSPU5_U3L19 - three basic ops of variables_2018_instruction: Add another variable called "lives" and set the value to 3. Print the value of the variable to the console. (Click to see full instructions)
      CSPU5_U3L19 - variable reassignment challenge pt2_instruction: Make a prediction about the ending values of a, b, and c. Then use console.log to check your understanding (Click to see full instructions)
      CSPU5_U3L19 - variable reassignment challenge pt2_2018_instruction: Make a prediction about the ending values of a, b, and c. Then use console.log to check your understanding (Click to see full instructions)
      CSPU5_U3L19 - write var and string with same name v2_instruction: Fix the code so that the values of both variables print to the console. (Click to see full instructions)
      CSPU5_U3L19 - write var and string with same name v2_2018_instruction: Fix the code so that the values of both variables print to the console. (Click to see full instructions)
      CSPU5_U3L23 Chatbot Conditionals 1_instruction: Add if, else if, and else statements to detect the movie genres Comedy, Romance, Action, and Horror. (Click to see full instructions)
      CSPU5_U3L24 Chatbot Basic Conditionals_instruction: Check out the project description for instructions. (Click to see full instructions.)
      CSPU5_U3L24 Nested Conditionals 1_instruction: Change all of the boolean expressions to use includes instead of ==. (Click to see full instructions)
      CSPU5_U3L24 Nested Conditionals 2_instruction: 'Nest your movie genre if statements inside the if statements to check for a ? in the input. '
      CSPU5_U3L24 introIncludes_instruction: Practice using the includes command. (Click to see full instructions)
      CSPU5_U3L25 - drag out key event_instruction: Set up an event handler to respond to keypress events, and display event.key in the console. Hit keys on the keyboard to see what happens. (Click to see full instructions)
      CSPU5_U3L25 - drag out key event_2018_instruction: Set up an event handler to respond to keypress events, and display event.key in the console. Hit keys on the keyboard to see what happens. (Click to see full instructions)
      CSPU5_U3L25 - play sound when up key_instruction: Change the code so the sound will only play when the up arrow is pressed. (Click to see full instructions)
      CSPU5_U3L25 - play sound when up key_2018_instruction: Change the code so the sound will only play when the up arrow is pressed. (Click to see full instructions)
      CSPU5_U3L26 AND operator_instruction: Update the genre and rating if statements to give only one movie suggestion at a time. (Click to see full instructions)
      CSPU5_U3L26 OR operator_instruction: Update the if statement to use an OR to check for a "?" as well as who, what, where, when, why, how in the user input. (Click to see full instructions)
      CSPU5_addDescriptiveIDsToTurtleDriver_instruction: Improve the button by choosing a descriptive and meaningful ID. (Click to see full instructions)
      CSPU5_addDescriptiveIDsToTurtleDriver_2018_instruction: Improve the button by choosing a descriptive and meaningful ID. (Click to see full instructions)
      CSPU5_basic if - DIY secret number_instruction: Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      CSPU5_basic if - DIY secret number_2018_instruction: Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      CSPU5_basic if - check driving age_instruction: Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      CSPU5_basic if - check driving age_2018_instruction: Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      CSPU5_basic if - voting examle_instruction: Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      CSPU5_basic if-else - driving age_instruction: Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      CSPU5_basic if-else - driving age_2018_instruction: Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      CSPU5_clickerGame_v1_template_instruction: Create your own "Chaser App". (Click to see full instructions)
      CSPU5_clickerGame_v1_template_2018_instruction: Create your own "Chaser App". (Click to see full instructions)
      CSPU5_moveTurtleOnButtonClick_instruction: Add an event handler to the button to move the turtle forward. (Click to see full instructions)
      CSPU5_moveTurtleOnButtonClick_2018_instruction: Add an event handler to the button to move the turtle forward. (Click to see full instructions)
      CSPU5_playWithEventTypes_instruction: Debug the program by fixing the logical error within the program. (Click to see full instructions)
      CSPU5_playWithEventTypes_2018_instruction: Debug the program by fixing the logical error within the program. (Click to see full instructions)
      CSPU5_setPosition to fixed location_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSPU5_setPosition to fixed location_2018_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      CSPU5_turtleDriver_add2ndButton_instruction: Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)
      CSPU5_turtleDriver_add2ndButton_2018_instruction: Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)
      Calc Circles of Eval .1_instruction: You’ll be writing a kind of code called Evaluation Blocks, because each block of code evaluates to a single value. Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: This Evaluation Block is a multiplication function which takes two numbers and returns the product of those numbers. Edit this block so that it multiplies 2 * 5
      Calc Circles of Eval .3_instruction: Here's a function for addition which takes two numbers and returns their sum. Use this Addition Block to add 3 + 6.
      Calc Circles of Eval .4_instruction: Here we've nested an Addition Block inside a Multiplication Block. Complete this code so it multiplies 3 by (4 + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: Convert this statement to <some_shape> of evaluation.
      Calc Circles of Eval 1_instruction: Every mathematical operator (+, -, *, /, and so on) can be represented by an Evaluation Block in code. Change the Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: Convert this statement to <some_shape> of evaluation.
      Calc Circles of Eval 2_instruction: Use a Multiplication Block to complete this code.
      Calc Circles of Eval 3_instruction: Complete the Evaluation Blocks to match this statement.
      Calc Circles of Eval 4_instruction: This code is missing a couple of Evaluation Blocks - make sure you put everything in the right order.
      Calc Circles of Eval 5_instruction: Complete the Evaluation Blocks to match this statement.
      Calc Circles of Eval 6_instruction: Complete the Evaluation Blocks to match this expression.
      Calc Circles of Eval 7_instruction: Complete the Evaluation Blocks to match this statement.
      Calc Circles of Eval 8_instruction: Complete the Evaluation Blocks to match this statement.
      Calc Circles of Eval 9_instruction: Complete the Evaluation Blocks to match this statement.
      Calc Circles of Eval Free Play_instruction: 'Free Play: Try using the Evaluation Blocks to write some equations of your own. How does nesting the blocks in different ways impact their evaluation?'
      Calc Define Funcs 1 (copy 1)_instruction: Let's look at some more algebraic functions now. Here's a function translated from the simple algebraic function f(x) = x + 1. What would you expect this function to output if provided an input of 15?
      Calc Define Funcs 1_instruction: Let's look at some more traditional algebraic functions now. Here's a function translated from the simple algebraic function f(x) = x + 1. What would you expect this function to output if provided an input of 15?
      Calc Define Funcs 2_instruction: Write a function f that takes a parameter x and returns x - 10. Test your function using f(15).
      Calc Define Funcs 3_instruction: We don't have to call our function f every time; create a function called times-ten that should take a parameter x and return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: Write a function called half that takes a number x and returns half that number. Once you've written the function, use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: Oh no! We lost our multiply block! We'll have to create a function to multiply for us. To start off, write a function "f" that takes a parameter "x" and returns x*5. Test your function using f(3).
      Calc Design Recipe 1_instruction: Let's use the Design Recipe to create a function called cube - this function should take in a Number and return that number to the power of 3. Make sure to write two example cases! When you're done, use your new function to calculate cube(7).
      Calc Design Recipe 2_instruction: |-
        Your school is holding a bake sale, and you need to track the cost of making each cookie, the money paid, and the total profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.
        
        Write the function cost, which takes in the number of cookies you intend to sell, and returns the cost of making those cookies.
        
        Test your function by calculating the cost of 42 cookies
      Calc Design Recipe 3_instruction: |-
        Write the function sales which takes in the number of cookies sold, and produces the amount of money customers spent to buy those cookies (each cookie is sold at $1.50).
        
        Test your function by calculating the sales for 135 cookies
      Calc Design Recipe 4_instruction: |-
        Using the two functions we just wrote, write the function profit, which takes in the number of cookies you sold, and gives you back the total profit you make from selling your cookies, accounting for the cost of baking them.
        
        Test your function by calculating the total profit for 15 cookies.
      Calc Free Play_instruction: 'Free Play: Write functions and algorithms of your own design!'
      Calc Rocket 1 (copy 1)_instruction: "In the last puzzle you wrote a contract for the function \"rocket-height\" that states it has a range of Number, domain of Number, and should return the height of the rocket traveling at 15 m/s after a given number of seconds. Let's write an example case now for the height of the rocket at 3 seconds.\n\n\n\n  \n\n"
      Calc Rocket 1_instruction: In the last puzzle you wrote a contract for the function rocket-height that states it has a range of Number, domain of Number, and should return the height of the rocket traveling at 15 m/s after a given number of seconds. Let's write an example case now for the height of the rocket at 3 seconds.
      Calc Rocket 2_instruction: Great, let's do one more example before writing the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: Here we've set the age variable to 17 years. Can you write an expression that calculates age in days?
      Calc Vars 1_instruction: Variables allow us to name values so that we can easily refer to them repeatedly throughout our programs. Here's a variable called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: Here we've set the "age" variable to 17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: Here's a new variable called age-in-months. Use the variable age to set age-in-months.
      Calc Vars 2_instruction: Can you write an expression that calculates age in months?
      Calc Vars 3 (copy 1)_instruction: Can you add to this code so that it calculates how many hours there are in "age" years?
      Calc Vars 3_instruction: Can you add to this code so that it uses the "age" variable to calculate age in hours?
      Calc Vars 4_instruction: We can also set variables by using other variables. Let's say you have a brother who is two years younger than you - can you set a new variable "brother-age" using your "age" variable?
      Choose Your Own Adventure_instruction: '¡Puedes hacer lo que quieras en el laboratorio de juego! Aquí hay un ejemplo para escoger tu propia historia de aventura en el laboratorio de juego.'
      Choose Your Own Adventure_2018_instruction: '¡Puedes hacer lo que quieras en el laboratorio de juego! Aquí hay un ejemplo para escoger tu propia historia de aventura en el laboratorio de juego.'
      Code Studio Puzzle Challenge 1 - Artist_instruction: 'Draw the line. It is 200 pixels long. '
      Code Studio Puzzle Challenge 1 Artist1_instruction: 'Draw the line. It is 200 pixels long. '
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: Move the Bee to the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: Move the Bee to the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: Move the Bee to the flowers and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: Draw this line by using the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: Draw a square by using the variable length provided.
      Code Studio Puzzle Challenge 12 - Artist_instruction: The code provided draws one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 12a - Artist_instruction: The code provided draws one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 13 - Artist_instruction: 'This is just like a "for" loop. Complete the code to draw six lines that grow from 50, 60, 70, 80, 90, to 100 pixels long. '
      Code Studio Puzzle Challenge 14 - Artist_instruction: 'This is just like a "for" loop. Complete the loop to draw 4 squares that grow from 80, 100, 120, to 140 pixels. '
      Code Studio Puzzle Challenge 2 - Artist_instruction: Now add a turn and another line. The lines are 200 pixels long.
      Code Studio Puzzle Challenge 3 - Artist_instruction: Draw the square. Each side is 100 pixels long.
      Code Studio Puzzle Challenge 4 - Artist_instruction: Draw the octagon. Each side is 100 pixels long.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: Move the Bee to the flower and get the nectar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: Flowers contain a specific amount of nectar. Move the Bee to the flower and collect nectar with the get nectar block.
      Code Studio Puzzle Challenge 6 - Bee_instruction: Honeycombs can hold a specific amount of honey. Get the nectar from the flower and make some honey.
      Code Studio Puzzle Challenge 7 - Bee_instruction: Move the Bee to the flower and get the nectar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: The cloud could be hiding a flower or a honeycomb. Only get nectar from flowers. Only make honey at honeycombs.
      Code Studio Puzzle Challenge 9 - Bee_instruction: The cloud could be hiding a flower or a honeycomb. Only get nectar from flowers. Only make honey at honeycombs.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: 'Draw the line. Each segment is 100 pixels long. '
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: 'Complete the code to draw the line. Each segment is 100 pixels long. '
      Code Studio Puzzle Challenge Artist Screencast_instruction: 'Draw the line. Each segment is 100 pixels long. '
      Code Studio Puzzle Challenge Bee Screencast_instruction: Move the Bee to the flowers and get all of the nectar.
      Code Studio Puzzle Challenge Square - Artist_instruction: Draw a square by using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: Draw a line by using a variable "length" set to 180.
      Collector Demo_instruction: Look at all this loot! Help me get as many coins as I can so I can improve my farm. I can only use 9 blocks though!
      Course 2 Bee Loops 1_instruction: 'Hi, I''m a bee. Can you help me collect the nectar from these flowers? '
      Course 2 Bee Loops 13_instruction: 'Assessment: Use the repeat block to collect all of the nectar.'
      Course 2 Bee Loops 2_instruction: Can you do the same task more easily with a loop?
      Course 2 Bee Loops 3_instruction: Now use the new repeat block to collect all of the nectar and make all of the honey.
      Course 2 Bee Loops 3__instruction: Can you use a loop to collect all that nectar?
      Course 2 Bee Loops 4_instruction: What happens if you loop this sequence 3 times? Don't forget to make the honey at the end!
      Course 2 Maze Loops 1_instruction: '¿Puedes llevarme hasta el cerdo usando 5 bloques?'
      Course 4 2_instruction: La abeja solo quiere néctar ahora mismo. Recuerda, no todos los objetos son flores, así que chequea, para solo recoger néctar de las flores.
      Course 4 Artist 1_instruction: 'Ayúdame a terminar de dibujar mi caja. (Cada línea es de 200 píxeles de largo)'
      Course 4 Artist 10_instruction: |-
        ¡Haz clic para ver las sugerencias otra vez! Aquí esta el código para una interesante figura. ¿Qué pasa cuando lo repites muchas veces, torneado entre cada interacción? Nota que el giro en esta figura agrega más de 420 grados, lo cual significa que cuando el artista termino de dibujar, verá otra dirección diferente que cuando empezó. Esa nueva dirección es exactamente 60 grados a la derecha de cuando comenzó.
      Course 4 Artist 11_instruction: '¡Ahora, un desafío! Aquí hay un diseño que solamente usa bloques que ya te hemos mostrado. ¿Puedes averiguar cómo crearlo nuevamente sin información extra? Sugerencia: Tantea, usa ensayo y error. No se espera que esté perfecto la primera vez.'
      Course 4 Artist 12_instruction: |-
        ¿Quieres una segunda vista a la inspiración del diseño o las sugerencias? ¡Haz clic aquí! ¡De otra forma, haz un diseño por ti mismo!
      Course 4 Artist 13_instruction: '¿Aún jugando? ¡Aquí hay un lienzo en blanco en donde usted podrá diseñar lo que quiera!'
      Course 4 Artist 2_instruction: '¿Puedes enlazar este código para que dibuje de gris el cuadrado?'
      Course 4 Artist 20_instruction: '¿Aún jugando? ¡Aquí hay un lienzo en blanco donde usted podrá crear lo que quiera!'
      Course 4 Artist 3_instruction: Muy bien, trate de averiguar qué sucede si ejecuta este código (o presiona "Run" para comprobarlo). Entonces repítelo varias veces hasta completar el dibujo.
      Course 4 Artist 4_instruction: '¿Cúantos grados tiene un círculo? Rellena el bloque de repetición con ese número para crear un círculo de colores.'
      Course 4 Artist 5_instruction: 'Dibuja la otra mitad de este diseño de tal manera que sea simétrico. Los triángulos son equiláteros y tienen 50 píxeles de longitud.'
      Course 4 Artist 6_instruction: 'Completa el código para dibujar estos triángulos. Sugerencia: 3 triángulos en una rotación de 360 grados.'
      Course 4 Artist 7_instruction: 'Ahora anida este circuito dentro de otro circuito para dibujar 3 triángulos. Esto es llamado un circuito anidado. Sugerencia: Todos los 10 triángulos completan una rotación de 360 grados.'
      Course 4 Artist 8_instruction: Dibuje este sol enlazando este bloque de código íntegramente 12 veces.
      Course 4 Artist 8a_instruction: '¿Recuerdas esta forma? ¡Ahora vamos a dejarte construirla sin darte ningún bloque para empezar! Sugerencia: hay 3 triángulos dentro de la rotación de 360 grados... ¿Cuántas veces 3 va en 360?'
      Course 4 Artist 9_instruction: "Continúe con este diseño 10 veces y asegúrese de que cada forma que dibuja apunte hacia adentro. Aquí hay una sugerencia de cuánto más debe apuntar: ¿Cuánto es 360 dividido entre 10?"
      Course 4 Artist Binary 1_instruction: "Aquí hay una función que toma una cadena binaria de 0 y 1 e instruye al artista a que gire de izquierda a derecha, de arriba hacia abajo, llenando los cuadrados cuando ve 1 e ignorándolos cuando ve 0. Corre este código para ver cómo el artista usa el binario para dibujar el patrón."
      Course 4 Artist Binary 1a_instruction: "Aquí hay una función que toma una cadena binaria de 0 y 1 e instruye al artista a que gire de izquierda a derecha, de arriba hacia abajo, llenando los cuadrados cuando ve 1 e ignorándolos cuando ve 0. Corre este código para ver cómo el artista usa el binario para dibujar el patrón."
      Course 4 Artist Binary 2_instruction: '¿Cuántas de estas secuencias binarias podría enlazar 8 veces para dibujar esta imagen?'
      Course 4 Artist Binary 3_instruction: '¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?'
      Course 4 Artist Binary 4_instruction: Cada secuencia binaria representa una fila de esta figura. ¿Puede reacomodarla de tal manera que dibuje una cara con una sonrisa en lugar de una cara de aspecto fruncido?
      Course 4 Artist Binary 5_instruction: '¿Cuál de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?'
      Course 4 Artist Binary 6_instruction: '¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?'
      Course 4 Artist Binary 7_instruction: Termine este dibujo.
      Course 4 Artist Binary Free Play 2_instruction: 'Juego Libre: Aquí tiene un lienzo de alta resolución para dibujar - ¡16 bits por 16 bits!'
      Course 4 Artist Binary Free Play 2a_instruction: |-
        Aquí hay un lienzo con mejor resolución para pintar - ¡16 píxeles por 16 píxeles! ¿Ves lo que pasa cuando empezamos a ser creativos con los bits?
      Course 4 Artist Binary Free Play 2b_instruction: Haga clic aquí para ver sugerencias.
      Course 4 Artist Binary Free Play_instruction: 'Juego Gratis: ¡Dibuje lo que quiera con binarios!'
      Course 4 Artist Binary pre1_instruction: Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1). Le hemos provisto una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      Course 4 Artist Binary ryan_instruction: "Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones \"apagado\" (representado por el número 0) y \"encendido\" (representado por el número 1). Le hemos provisto una red de \"píxeles\" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte \"01010101\" en binario en la primera fila?"
      Course 4 Artist For  Functions 10_instruction: Elevemos un poco el nivel de dificultad. ¿Puede dibujar una forma de estrella usando la función "Dibuje una Línea Cuadrada"? ¡Buena suerte!
      Course 4 Artist For  Functions 11_instruction: Elevemos un poco el nivel de dificultad. ¿Puede dibujar una forma de estrella usando la función "Dibuje una Línea Cuadrada"? ¡Buena suerte!
      Course 4 Artist For Loops 1_instruction: 'Dibuje este triángulo que tiene un tamaño de 50 píxeles. Sugerencia: Use un bloque de repetición.'
      Course 4 Artist For Loops 10_instruction: 'Juego Gratis: Diviértase dibujando lo que le guste con los bloques que ha aprendido a usar'
      Course 4 Artist For Loops 11_instruction: '¿Recuerdas cuando usamos una variable para controlar el número de lados de una forma? Este patrón empieza con un triángulo y agrega un cada lado a la vez hasta que dibuja un decágono (10 lados). Cada lado debe ser de 100 píxeles de largo. Sugerencia: 360 dividido por el número de lados de una forma, es el número de grados que necesitarás para girar.'
      Course 4 Artist For Loops 11a_instruction: |-
        ¡Vamos a poner todo junto! Usando tu conocimiento de "ciclos for" y del "contador", crea este dibujo donde cada forma tiene dos partes más que la anterior. Asegúrate de que cada lado sea 10 veces más largo que el número de lados del polígono. Muy poco del código se ha proporcionado para ti.
      Course 4 Artist For Loops 12_instruction: 'Eso se ve muy bien, pero ahora me gustaría que dibuje cada forma junto a la otra. Esta vez, cada lado es de 20 píxeles. Use un bloque de salto para saltar 20 píxeles adelante después de cada forma. '
      Course 4 Artist For Loops 13_instruction: '¡Hmmm, esas formas están creciendo a cada instante! ¿No solucionamos este problema con las variables? ¿Cómo podemos usar la variable de contar para hacer lados mas pequeños, ya que hay más de ellos? En lugar de mover hacia adelante estableciendo una cantidad, tratemos de avanzar (100/counter) píxeles.'
      Course 4 Artist For Loops 14_instruction: Si girara un poco más o menos de lo que normalmente haría para una forma, crearía un efecto más nítido. Intente girar 89 grados para crear esta espiral cuadrada torcida.
      Course 4 Artist For Loops 15_instruction: 'Juego Gratis: Intente hacer algunos dibujos propios usando Para Vueltas. Hemos añadido también algunas variables genéricas para su uso.'
      Course 4 Artist For Loops 2_instruction: 'He puesto un código para dibujar un triángulo dentro de una iteración que cuenta de 50 a 100 por 10. Revise cómo he creado el código y presione "Ejecutar" cuando esté listo para verlo en acción.'
      Course 4 Artist For Loops 3_instruction: 'El triángulo más pequeño tiene 20 píxeles de lado, el más grande tiene 200 píxeles de lado y cada triángulo es 20 píxeles más grande que el anterior. Actualiza el bucle "for" para dibujar estos triángulos.'
      Course 4 Artist For Loops 4_instruction: 'Usa un bucle "FOR" para dibujar estos cuadrados. Empiezan a 15 píxeles de largo, el más grande es de 300 píxeles de largos, y cada cuadrado es 15 píxeles más grande que el anterior. Te he dado casi todo el código que vas a necesitar - haz perdido un bloque, ¿cuál es?'
      Course 4 Artist For Loops 5_instruction: '¡Buen trabajo en el último rompecabezas! Usemos ese bloque variable "counter" de nuevo para dibujar esta asombrosa pintura.'
      Course 4 Artist For Loops 6_instruction: '¡Juego gratis! Intenta usando un circuito para dibujar un patrón de forma creciente con tu propio diseño.'
      Course 4 Artist For Loops 6a_instruction: '¡Haz 3 pequeños cambios al código desde el último nivel para obtener esto!'
      Course 4 Artist For Loops 7_instruction: Que pasa si eliminas el "repeat 3" de este algoritmo, manteniendo los bloques "move" y "turn" en el circuito. En este triángulo en espiral, cada lado es 20 píxeles mas largo que el anterior.
      Course 4 Artist For Loops 8_instruction: |-
        La línea más pequeña de este espiral cuadrado es 10, el más largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      Course 4 Artist For Loops 8a_instruction: La línea más pequeña de este espiral cuadrado es 10, el más largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      Course 4 Artist For Loops 9_instruction: '¿Puedes hacer un espiral? Avanza de 1 a 75 píxeles, incrementando de 1 a 1 píxeles.'
      Course 4 Artist For Loops Challenge_instruction: "Con todas las cosas que ha aprendido, ¿podrías decir cómo se hizo esta imagen? ¿Necesita una ayuda? Presione aquí."
      Course 4 Artist For Loops Challenge_a_instruction: |-
        Can you figure out how to use all of the things you've learned to create this image?
        
        Need a hint? Click here.
      Course 4 Artist For Loops inspire_instruction: |-
        Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita https://studio.code.org/c/106387604 para la solución.
      Course 4 Artist Functions 1_instruction: '¿Puedes dibujar en cuadrado que tiene 100 píxeles de longitud, utilizando un circuito?'
      Course 4 Artist Functions 10_instruction: '¿Cúal bloque necesitas agregar para conseguir que el triángulo se ubique en la cima del cuadrado?'
      Course 4 Artist Functions 11_instruction: Mira este código que dibuja un cubo - ¿Puedes moverlo en una función llamada "Draw a cube"?
      Course 4 Artist Functions 12.1_instruction: Creemos una función llamada "dibujar un octágono 20" que dibuja un octágono donde cada lado es de 20 píxeles de largo.
      Course 4 Artist Functions 12_instruction: La función circuito cuadrado para dibujar una línea
      Course 4 Artist Functions 13.1_instruction: |-
        Ahora, vamos a hacer una función llamada "salto para arriba a la derecha" que mueve el artista a la derecha superior del Octógono que usted acaba de dibujar, por lo que podemos terminar este toque patrón: para usted llegar a la esquina superior derecha, trate de saltar en un patrón que hace apenas 3/8 del octágono.
      Course 4 Artist Functions 13_instruction: Mira, tenemos una nueva función llamada "draw a line of squares". No dudes en echar un vistazo dentro de la función de bloque para ver cómo se construye. Haz clic en "Run" cuando estés listo para el siguiente rompecabezas.
      Course 4 Artist Functions 14.1_instruction: Ahora, vamos a hacer una función llamada "saltar arriba a la derecha" que mueve al artista a la parte superior derecha del Octágono que usted acaba de dibujar, por lo que podemos terminar este patrón.
      Course 4 Artist Functions 14_instruction: '¡Estás haciéndolo muy bien! Usemos tu nueva función "Draw a line of squares" para dibujar un cuadrado. Recuerda que cada cuadrado es de 40 píxeles de longitud.'
      Course 4 Artist Functions 15_instruction: '¡Demos un pequeño paso hacia adelante! ¿Puedes dibujar una forma de estrella usando la función "dibuja una línea de cuadrados"? ¡Buena Suerte! Sugerencia: Debes girar a 144 grados'
      Course 4 Artist Functions 2_instruction: '¿Puedes dibujar 3 cuadrados de 20 píxeles separado uno del otro? Sugerencia: cada cuadrado es de una medida de 100 píxeles '
      Course 4 Artist Functions 3_instruction: 'Usando la función de bloque "dibuja un cuadrado", ¿puedes dibujar este dibujo? Sugerencia: cada cuadrado debe ser de 120 píxeles entre uno y otro.'
      Course 4 Artist Functions 4_instruction: '¿Estás listo para crear tu propio "Function Block"? Haz clic en el bloque "functions" en la caja de herramientas, donde dice "draw a triangle", entonces crea un triángulo como lo has hecho con anterioridad con los bloques acción y circuitos. Haz clic en guardar y cerrar en la esquina superior derecha . Sugerencia: Crea un triángulo que tiene 100 píxeles de longitud. ¡Buena suerte!'
      Course 4 Artist Functions 5 OLD_instruction: Tratemos de usar nuestras dos funciones para dibujar una casa - ¿Qué se necesita arreglar en este código para dibujar la casa correctamente?
      Course 4 Artist Functions 5_instruction: 'Usando la función de bloque "dibuja un cuadrado", ¿puedes dibujar este dibujo? Sugerencia: cada cuadrado debe ser de 120 píxeles entre uno y otro.'
      Course 4 Artist Functions 6_instruction: '¿Cúal bloque necesitas agregar para conseguir que el triángulo se ubique en la cima del cuadrado?'
      Course 4 Artist Functions 7_instruction: '¿Puedes dibujar una línea de cuadrados usando la función de cuadrado? Cada cuadrado es 40 píxeles de longitud.'
      Course 4 Artist Functions 8_instruction: '¿Estás comenzando a comprender cómo usar la función de los bloques? Modifiquemos este cuadrado de 200 píxeles de medida. Sugerencia: haz clic en "edit" para cambiar el tamaño del "draw a square" en la función editor. Recuerda hacer clic en "guardar y cerrar" para salir de la función editor.'
      Course 4 Artist Functions 9_instruction: Te hemos dado la mayor parte del código para crear una función. Sin embargo, parece que falta algo. ¿Puedes completar esta función de bloques?
      Course 4 Artist Functions Inspiration_instruction: Haz clic aquí para ver las sugerencias nuevamente.
      Course 4 Artist Functions challenge_instruction: Haz clic aquí para ver las sugerencias nuevamente.
      Course 4 Artist Functions inspire_instruction: 'Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita https://studio.code.org/c/106387604 para la solución.'
      Course 4 Artist Inspire_instruction: |-
        Inspiración para ejercicio libre: ¡Ya has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Echa un vistazo aquí: https://levelbuilder-studio.code.org/c/8781/edit
      Course 4 Artist Params 1_instruction: Editemos una función que dibuje un cuadrado de 50 píxeles cada lado
      Course 4 Artist Params 10_instruction: '¡Puedes llamar una función dentro de otra función! Utilizando tu función "shape" como base, crea 3 formas de casa cada una de 20 píxeles mas larga que la anterior, empezando con 50 píxeles de longitud. Usar un circuito de contar puede ser útil.'
      Course 4 Artist Params 11_instruction: How about a function called "pinwheel" that takes three parameters - "sides," "length" and "repeat." You can calculate how much to turn after each shape using the same math you used to figure out the turns for a shape of "sides". Can you recreate this picture? Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: Utilice la función "pinwheel" (molinete) para dibujar cada una de estas formas. La longitud del lado de cada imagen es 50.
      Course 4 Artist Params 13_instruction: 'Freeplay: Aquí están las funciones que has escrito y algunas más para que juegues. ¡Dibuja algo impresionante!'
      Course 4 Artist Params 2_instruction: That triangle function would be a whole lot more useful if it could draw triangles of different sizes. I've added a parameter for line length, but it doesn't do anything yet. Can you update the function so it uses the "length" parameter when it draws each side? The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: 'Impresionante, ¿puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50, y el tercero es de 75. '
      Course 4 Artist Params 4_instruction: '¿Puede agregar una nueva función llamada cuadrado? También debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez dibuja 3 cuadrados, 25, 50 y 75 píxeles de lado, además de uno de 100 píxeles.'
      Course 4 Artist Params 5_instruction: 'Usa tus dos funciones para dibujar esta imagen. Para hacer esto más fácil, usa un bucle con un parámetro de "contador".'
      Course 4 Artist Params 6_instruction: 'Vamos a editar esta función "dibujar una forma". Ya tiene un parámetro de "longitud". Ahora, vamos a editar la función para añadir un parámetro "lados". Recuerda que el ángulo de una forma determinada es de 360 dividido por la cantidad de lados que tiene. Sugerencia: las longitudes para cada forma son: el triángulo de 100 píxeles, el hexágono de 25 píxeles y el cuadrado de 50 píxeles.'
      Course 4 Artist Params 7_instruction: 'Puedes dibujar estas formas rellenando el "???" El cuadrado y triángulo son 100 píxeles de tamaño mientras que el hexágono es de 75 píxeles de tamaño. '
      Course 4 Artist Params 8_instruction: '¿Puedes calcular cómo dibujar esta forma? Aquí hay una pista, crea una nueva función con 6 lados llamada hexágono.'
      Course 4 Artist Params 9_instruction: '¿Recuerdas cuando usamos el bucle con Contador pero habíamos quitado un bucle dentro? Vamos a divertirnos y usar la función "dibujar una forma" con parámetros de "lados" y "longitud". ¿Puede volver a crear estas formas? El contador de cuadrados debe ser 5/100/5, el contador del triángulo debe ser 10/100/10 y el hexágono es 2/100/2.'
      Course 4 Artist Var 9_instruction: 'Aquí está el algoritmo para dibujar un triángulo, modificarlo para que utilice la variable "lados". Reemplazar el número 3 con la variable "lados". Sugerencia: Recuerda que debes utilizar el bloque de "set sides to".'
      Course 4 Artist Vars 1_instruction: "¿Puedes ayudarme a dibujar un triángulo? Es de 100 píxeles de largo en cada lado."
      Course 4 Artist Vars 10_instruction: Aquí encontrarás un algoritmo que dibuja un triángulo de pequeños triángulos. ¿Podrías modificarlo usando la variable de "sides" para dibujar cada triángulo? Observa a través del código y cada vez que veas el número 3, reemplázalo con tu variable "sides". Recuerda el uso del bloque "set sides".
      Course 4 Artist Vars 11_instruction: Aquí está el mismo algoritmo que ideamos con el último rompecabezas - ¿Qué debes establecer en la variable "sides" para dibujar este dibujo de cuadrados?
      Course 4 Artist Vars 12_instruction: Vamos a poner la variable "sides" en 5. Si agrego mas lados a este algoritmo, ¡más grande es el patrón entero! Agreguemos una nueva variable llamada longitud "lengh" y úsala si tienes que avanzar "move forward". Establece la variable longitud "lengh" a 75 para esta figura.
      Course 4 Artist Vars 13_instruction: "Cuando una forma tiene varios lados, cada lado necesita ser más corto si tú quieres el patrón completo para ajustar la pantalla. Vamos a recrear el algoritmo desde este increíble patrón, pero en lugar de poner manualmente la variable de \"longitud\", vamos a usar un bloque de matemáticas con la variable de \"lados\" dentro para asegurarse de que cada forma se ajusta correctamente. El perímetro de cada polígono es de 300 píxeles. ¿Necesitas algunos consejos? Haga clic aquí."
      Course 4 Artist Vars 14_instruction: |-
        Juego Gratis: revísalo, ahora tu algoritmo está anidado dentro de otro circuito. Experimenta cambiando los valores de tus dos variables para dibujar patrones asombrosos.
      Course 4 Artist Vars 2_instruction: En lugar de avanzar por 100 "moving forward by 100", el bloque mover "move" ahora referencia la variable longitud "length". ¿Podrías establecer la longitud "length" a 150 para dibujar este nuevo triángulo?.
      Course 4 Artist Vars 3_instruction: 'Aquí es un bucle que dibuja un cuadrado, pero algo está mal. ¿Puedes arreglarlo para que utilice la variable "largo" para averiguar qué tan largo debe ser cada lado? '
      Course 4 Artist Vars 4_instruction: Ahora quiero hacer un rectángulo que es dos veces tan alto como ancho. Tenemos una variable llamada "ancho" que se encuentra a 100. ¿Puedes usar los bloques de matemáticas para completar el código?
      Course 4 Artist Vars 5_instruction: Utiliza las variable "caras" para controlar cuántas veces el bucle se repite.
      Course 4 Artist Vars 6_instruction: |-
        Aquí hay un código que puede dibujar cualquier polígono regular. Hay una nueva variable llamada lados que se inicializa a 4. ¿Puedes usar la variable lados (junto con el bloque de matemáticas) para activar la cantidad correcta independientemente de cuántos lados hay en el polígono? ¡Haz clic aquí para regresar a la pista!
      Course 4 Artist Vars 7_instruction: |-
        Utiliza lo que aprendiste en el rompecabezas anterior para crear el hexágono usando la variable "lados". Vé cómo puedes cambiar solo una variable para dibujar un triángulo, cuadrado, pentágono u octágono?
      Course 4 Artist Vars 8_instruction: 'Juego libre: Experimento con el número de lados de esta forma. ¿Puedes cambiar el algoritmo de modo que el tamaño total de la forma siga siendo el mismo, sin importa cuántos lados tenga? Consejo: Tendrás que usar tus bloques de matemáticas (360 dividido por "caras" en dos lugares esta vez) '
      Course 4 Artist Vars 9_instruction: Modifica este algoritmo para utilizar la variable "caras" en lugar de un número fijo para dibujar un triángulo. Reemplaza el número 3 con la variable "caras" y utiliza el bloque de "establecer lados".
      Course 4 Bee 1_instruction: "La abeja no puede decir si se trata de una flor o un panal de miel. Compruebe primero si se trata de una flor o un panal de abejas y entonces sólo recogen néctar si es una flor."
      Course 4 Bee 2_instruction: Utiliza el bloque "Si/de lo contrario" para revisar cada objeto para ver si es una flor o un panal...de lo contrario, ¡haz miel!
      Course 4 Bee 3_instruction: El objeto desconocido es una flor o un panal de miel. Ahora utiliza el bloque "Si/de lo contrario" para colectar néctar, "Si" si es una flor, "de lo contrario" haz miel (porque entonces sería un panal).
      Course 4 Bee 4_instruction: Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque Si-de lo contrario es combinado con otro bloque Si/de lo contrario para crear una sentencia "Si/de lo contrario-Si/de lo contrario". Completa la solución para recoger la cantidad desconocida de néctar.
      Course 4 Bee 5_instruction: Esta flor púrpura puede tener 3, 2 o 1 néctares. Agrega un bloque si-de lo contrario para crear un bloque si, de lo contrario-si, de lo contrario. Completa la solución para recolectar la cantidad desconocida de néctar.
      Course 4 Bee 6_instruction: Esta flor púrpura puede tener 3, 2 o 1 néctares. Crea un bloque si, de lo contrario-si, de lo contrario para recoger la cantidad desconocida de néctar.
      Course 4 Bee 7_instruction: Aprovecha todo lo que has aprendido hasta ahora para recolectar todo el néctar. La flor púrpura puede tener 3, 2 o 1 néctares.
      Course 4 Bee For Loops 1_instruction: Utilizar un bucle para recolectar el néctar de cada flor.
      Course 4 Bee For Loops 10_instruction: Si tu ciclo es regresivo, se resta el incremento de la variable contador en cada bucle. ¿Lo que debería ser un incremento a recoger néctar 9, luego 6 y 3?
      Course 4 Bee For Loops 11_instruction: '¿Qué hay de malo en este ciclo? A ver si puedes arreglarlo y hacer que las abejas recolecten el néctar.'
      Course 4 Bee For Loops 2_instruction: Aquí está un nuevo tipo de lazo, llamado el bucle "for" . Este particular bucle contará de 1 a 5 por 1 y ejecutará el contenido del bucle cada cuenta. Ayudar a la abeja el néctar.
      Course 4 Bee For Loops 3_instruction: Puede resolver este problema utilizando un bucle para contar del 1 al 3 por 1. ¡Ahora vamos a obtener un néctar!
      Course 4 Bee For Loops 4_instruction: Recoge todo el néctar de las flores. Me pregunto si hay una manera más fácil de hacer esto...
      Course 4 Bee For Loops 5_instruction: 'Ah, ¡el bucle lo hace mucho más fácil! Usando la variable "contador" de la de circuito a circuito al "obtener néctar", bloquea el mismo número de veces que el bucle. ¡Wow! Eso es un montón de bucles. Todo el código que necesitas, echa un vistazo a cómo es juntar a continuación, haz clic en ejecutar y vé cómo funciona. '
      Course 4 Bee For Loops 6_instruction: También puedes utilizar un bucle a contar hacia atrás. Trata de recoger este néctar por la cuenta regresiva del 5 al 1 por 1.
      Course 4 Bee For Loops 7_instruction: Usa tu variable "contador" de bucle para el controlar qué tan lejos debe moverse horizontalmente.
      Course 4 Bee For Loops 8_instruction: '¿Puedes usar la variable del bucle para controlar el movimiento y la recolección de néctar?'
      Course 4 Bee For Loops 9_instruction: El último número en tu bucle se llama "incremento", y cada vez que se ejecuta el bucle, la variable contador cambia por el incremento. Trata de recoger la flores usando un incremento de 2.
      Course 4 Bee Loops 5 NEW_instruction: Aquí hay tres flores. ¿Puedes encontrar el patrón de instrucciones que se repita 3 veces para recoger el néctar con el menor número de bloques?
      Course 4 Bee Loops 5a NEW_instruction: Ahora, utiliza ciclos para ayudar a la abeja a recoger todo el néctar en su camino hacia el panal con tan pocos bloques como sea posible. Al llegar allí, ¡no olvides hacer la miel!
      Course 4 Bee Params 1_instruction: Use la función "obtener néctar 3" que gira, mueve para recoger el néctar y luego regresa a su ubicación original. Escriba una secuencia para recoger todo el néctar usando "obtener néctar 3".
      Course 4 Bee Params 2_instruction: Modifique la función "obtener néctar 3" de tal manera que me haga girar a la derecha hacia las flores en vez de a la izquierda.
      Course 4 Bee Params 3 (copy 1)_instruction: '¡Ahora hay flores en ambos lados! Tal vez puede usar un parámetro de tal manera que la misma funcione para la flores en cada lado. He añadido un parámetro a la función denominado "dirección". Si el parámetro "dirección" es igual a 0, debería voltear a la izquierda, si es 1 debería voltear a la derecha.'
      Course 4 Bee Params 3_instruction: '¡Ahora hay flores en ambos lados! He añadido un parámetro a la función. Use las variables "izquierda" y "derecha" para controlar la dirección. Termine el resto de la definición de la función y luego haga clic en "Salvar y Cerrar".'
      Course 4 Bee Params 4 (copy 1)_instruction: Trate de usar la nueva función para recoger todas las flores. Recuerde, 0 = izquierda y 1 = derecha.
      Course 4 Bee Params 4 - Two WhenRun_instruction: Pruebe usando su nueva función para recolectar todas las flores. Recuerde usar las variables izquierda y derecha.
      Course 4 Bee Params 4 backup_instruction: '¿No sería bueno si pudiéramos recoger todo este néctar con una sola función? Intente añadir un nuevo parámetro a la función denominada "néctares" para controlar la cantidad de néctar a ser recogido. ¡Probablemente también querrás cambiar de nombre a la función!'
      Course 4 Bee Params 4_instruction: Intente usar su nueva función para recoger todas las flores. Recuerde usar las variables izquierda y derecha.
      Course 4 Bee Params 5_instruction: Vamos a empezar desde cero - ¿Puedes crear una nueva función llamada "consigue 5 néctares" con un parámetro de dirección?
      Course 4 Bee Params 6 (copy 1)_instruction: Intenta utilizar tu nueva función para recolectar todo este néctar.
      Course 4 Bee Params 6_instruction: '¿No sería genial si pudiéramos recolectar todo este néctar con una sola función? Intenta agregar un nuevo parámetro a tu función "nectars" para controlar la cantidad de néctar para recolectar. ¡Probablemente quieras renombrar la función también!'
      Course 4 Bee Params 7 (copy 1)_instruction: Intenta utilizar tu nueva función para recolectar todo este néctar.
      Course 4 Bee Params 7_instruction: Trata de utilizar tu nueva función para recolectar todos este néctar.
      Course 4 Bee Params 8 Clone 2_instruction: '¡Oooh, ahora hay miel con la que lidiar también! Cómo puedes actualizar tu función para así obtener néctar o hacer miel.'
      Course 4 Bee Params 8 Clone_instruction: '¡Oooh, ahora hay miel con la que lidiar también! Cómo puedes actualizar tu función para así obtener néctar o hacer miel.'
      Course 4 Bee Params 8 clone 3_instruction: '¡Oooh, ahora hay miel con la que lidiar también! Cómo puedes actualizar tu función para así obtener néctar o hacer miel.'
      Course 4 Bee Params 8 new_instruction: '¡Oooh, ahora también hay miel de la que ocuparse! ¿Cómo puedes actualizar tu función para así obtener néctar o hacer miel?'
      Course 4 Bee Params 8_instruction: 'Desafío: ¡Ahora hay que ocuparse de la miel! Vuelve a escribir tu función para usar las dos el número de unidades de miel y el número de unidades de néctar. ¿Cómo utilizarías esos números para decidir qué puedes hacer?'
      Course 4 Bee Params Ex_instruction: Intenta utilizar tu nueva función para recolectar todo este néctar.
      Course 4 Binary 1_instruction: Ésta es una función que toma una cadena binaria de 0s y 1s e instruye al granjero a girar de izquierda a derecha, de arriba a abajo, girando en los cuadrados donde el número tiene un cero. Ejecute el código proporcionado para ver cómo los granjeros utilizan binario para dibujar una imagen.
      Course 4 Binary 2_instruction: '¿Qué cadena binaria podrías repetir 8 veces para dibujar esta imagen? Pista: el número "1" llena un hueco.'
      Course 4 Binary 3_instruction: '¿Puedes dibujar este patrón repitiendo una sola cadena binaria?'
      Course 4 Binary 5 (copy 1)_instruction: '¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?'
      Course 4 Binary 5_instruction: '¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?'
      Course 4 Binary 6 (copy 1)_instruction: '¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?'
      Course 4 Binary 6_instruction: '¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?'
      Course 4 Binary 7_instruction: '¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?'
      Course 4 Binary 8_instruction: Puedes completar la mayor parte de esta imagen repitiendo un numero binario de 5 bits - luego, necesitarás un número más de 4 bits a la esquina inferior derecha.
      Course 4 EC 1a_instruction: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 1b_instruction: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2a_instruction: '**Reto Extremo:** No hay reglas. No hay pistas. ¡Sólo el reto!'
      Course 4 EC 2b_instruction: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2c_instruction: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2d_instruction: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 3_instruction: 'Utiliza lo que aprendiste en la lección anterior para dibujar una imagen como ésta. Nota: El código se vuelve más simple si incorporas parámetros. '
      Course 4 EC 3a_instruction: 'Desafío Extremo: Sin reglas. Sin pistas. ¡Solo el desafío!'
      Course 4 Maze 1_instruction: '¡Envía las aves enojadas al cerdo!'
      Course 4 Maze 2_instruction: '¡Evite la TNT!'
      Course 4 Maze 3_instruction: 'Programe la aves enojadas para llegar al cerdo.'
      Course 4 Maze 4_instruction: Intenta usar un bloque de "repetición" para utilizar menos bloques cuando resuelvas el rompecabezas...
      Course 4 Maze 5_instruction: '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      Course 4 Maze 6_instruction: '¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?'
      Course 4 Play Lab For Loops 2_instruction: Esta vez, intentemos contar los números impares de 1 a 100.
      Course 4 Play Lab Params 1_instruction: Aquí está la función denominada "salto" que permite que tu personaje principal salte hasta 100 píxeles. Use la función salto para recoger todas las banderas.
      Course 4 Play Lab Params 10_instruction: "Añadimos una última función para ti. Utiliza una sentencia \"Si\" para que tu programa llame la función \"livel_mas\" solo cuando \"puntuacion_jugador\" sea mayor que un cierto número. Por ejemplo: \"puntuacion_jugador\" > 6 Juega el juego, y hazlo pasar de nivel 4 para mover al siguiente problema. "
      Course 4 Play Lab Params 2_instruction: "¡Ahora tenemos banderas que son muy altas para nuestro actual salto! Usaremos ambas flechas \"arriba\" y \"abajo\" para poder tener múltiples saltos de altura. Necesitamos agregar un parámetro a nuestra función llamada \"altura\". La flecha arriba debe hacer al perro saltar 200 píxeles y la flecha de abajo debe hacerlo saltar solo 100 píxeles. Pista: deberás hacer clic en \"editar\" en la función brinca y actualizar para que uses el parámetro \"altura\"."
      Course 4 Play Lab Params 3_instruction: 'Añadimos otro parámetro a la función salto para poder usar otros actores. Cada actor es representado por un número, empezando por uno. Edita la función de "salto" para que utilice el parámetro "actor" hacer el correcto salto del personaje.'
      Course 4 Play Lab Params 4_instruction: "Aquí hay una función denominada \"patrulla\". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles."
      Course 4 Play Lab Params 5_instruction: Llene el parámetro de entrada "actor" de tal manera que podamos llamar la función "patrulla" para cada uno de los actores. Recuerde, los actores corresponden a los números 1, 2 y 3.
      Course 4 Play Lab Params 6_instruction: Agrega otro parámetro llamado "velocidad" a la función de "patrulla". Trata de usar un bloque "obtén velocidad" con el nuevo parámetro "velocidad" para ayudar a Pingüino a que obtenga ambas banderas antes de que los otros duendes obtengan una.
      Course 4 Play Lab Params 7_instruction: "¡Vamos a divertirnos! Mira el código dado para ver si puedes averiguar qué es lo que hace cada bloque. Cuando termines, usa las flechas de tu teclado para controlar el Perro y colecta todas las banderas."
      Course 4 Play Lab Params 8_instruction: Use un bloque "cuando el actor toque" para enviar al Perro de regreso al lado superior izquierdo SOLAMENTE si el Perro toca a alguno de los otros actores.
      Course 4 Play Lab Params 9_instruction: "Aquí esta nuestro juego de una etapa anterior, pero la mayoría del código está oculto. Hay una nueva función \"puntuación.\" Editar la función para que el parámetro \"puntos\" sea agregado a la variable \"puntuacion_jugador\". La variable \"puntuación_jugador\" debe aumentar cada vez que Perro etiquete Gato con corazones y disminuir cada vez que Gato etiquete Perro con corazones. Nota: cuando haya terminado, haga clic en \"Ejecutar\" para jugar. Cuando perro tenga 6 puntos, tú serás llevado al siguiente rompecabezas. "
      Course 4 Play Lab Vars 1_instruction: '¡Ahora no tienes que escribir nada de código, sólo presiona "ejecutar" para jugar el juego! En este juego, tú eres el perro que está tratando de recoger más banderas que el Gato. Use la flecha abajo para controlar al Perro. Presiona "Finalizar" cuando terminaste de jugar.'
      Course 4 Play Lab Vars 2_instruction: '¡Esa carrera en ese último problema no fue justa! Cambie la variable de "velocidad_perro" para asegurarse de que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!'
      Course 4 Play Lab Vars 3_instruction: '¡Aquí tiene una nueva clase de juego! Use las flechas hacia la izquierda y hacia la derecha para moverse y las flechas hacia arriba y hacia abajo para saltar. Vea si puede recoger todas las banderas.'
      Course 4 Play Lab Vars 4_instruction: 'Ahora estamos usando una variable denominada "altura" para controlar cuán alto puede saltar el perro. Actualice la variable "altura" de tal manera que el perro pueda saltar lo suficientemente alto para alcanzar todas las banderas. Pista: las banderas nuevas tienen 200 píxeles de altura.'
      Course 4 Play Lab Vars 5_instruction: '¡Diseñemos un juego! Primero necesitaremos una calificación. Use el bloque "asigne puntos a" para establecer la calificación a 10.'
      Course 4 Play Lab Vars 6 (copy 1)_instruction: '¡Qué bueno! Ahora tenemos nuestra variable puntuación pero, ¿cómo vamos a hacerla útil? ¿Qué tal si añadimos tu variable puntuación cada vez que toca al enemigo con una bola de fuego? Usa el evento "cuando el actor 2 toca cualquier cosa" para generar una actualización a tu puntuación cuando tus bolas de fuego toquen al gato. Puedes incrementar tu puntuación estableciendo puntuación= puntuación + 1. Obtén tu puntuación más de 10 (¡yendo una a la vez!) para pasar de nivel.'
      Course 4 Play Lab Vars 6_instruction: |-
        Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      Course 4 Play Lab Vars 7_instruction: Bien, ahora asegurémonos que este juego no sea muy fácil - cada vez que el Perro (actor 1) es golpeado por una bola de fuego usted debe perder un punto. Empiece con 10 puntos de tal manera que no sea muy difícil. Deje que su calificación caiga de 10 a 0 para pasar de nivel.
      Course 4 Play Lab Vars 8 (copy 1)_instruction: Muy bien, una consideración final para este juego - programémoslo de tal manera que el jugador pueda ganar (o perder). Use una iteración infinita para verificar el valor de la calificación ' si la calificación es alguna vez mayor de 20, haga que el enemigo se esfume. Si la calificación es menor de 0, haga que el jugador se esfume. Presione "Terminar" cuando el juego funcione como le gustaría.
      Course 4 Play Lab Vars 8_instruction: Vamos a configurar este juego donde el Perro puede ganar (o perder). Use un ciclo continuo para verificar el valor de la puntuación - Si la puntuación es mayor que 20, haga que desaparezca un enemigo (Un gato), Si la puntuación es siempre menor que 0, haz que desaparezca el jugador (El Perro). Presiona "Finalizar" cuando el juego funcione como te gustaría.
      Course 4 Play Lab Vars 9_instruction: "¡Tiempo Libre para jugar! Aquí están todas las variables con las que hemos jugado hasta ahora, también unas pocas más en caso de necesitarlas. Haz un juego o historia que utilice estas variables. Sugerencia: desplázate hacia abajo para ver todos los comandos en el área de trabajo."
      Course 4 Play Lab Vars_instruction: Muy bien, una cosa más para este juego - configúralo para que pueda ganar (perder). Usa un ciclo continuo para verificar el valor de la puntuación - si la puntuación es siempre mayor que 20, haz que el enemigo desaparezca. Si la puntuación es siempre menor que 0, haz que el jugador desaparezca.
      Course 4 Play Labs For Loops 1_instruction: Vamos a hacer que el perro diga todos los números desde el 1 hasta el 100. Usa un ciclo y un bloque contador para decir la variable contador cada vez que se ejecute el ciclo.
      Course 4 Play Labs For Loops 2_instruction: Esta vez, intentemos contar los números impares de 1 a 101.
      Course 4 Play Labs For Loops 3_instruction: Si contamos con números mayores, nosotros podríamos contar velozmente en el mismo tiempo. Pruébalo haciendo al perro contar de 10 en 10 hasta mil empezando de 10
      Course 4 Play Labs For Loops 4_instruction: Cambiar el incremento puede ser beneficioso, pero seguiríamos contando linealmente (cada número cambia en la misma medida que el anterior). ¿Que pasaría si contamos exponencialmente? Sin cambiar las instrucciones en este enlace, ¿podrías contar 1,4, 9,16,25...(conteo cuadrádico)?
      Course 4 Play Labs For Loops 4a_instruction: "Ahora, vamos a mezclar las variables del nivel 7 junto con la variable \"contador\" para que la magia suceda. En este rompecabezas, el perro contará de 0 a 1000 \"incrementando\". Establezca la variable \"incremento\" en 10 al principio de su código para ver qué pasa."
      Course 4 Play Labs For Loops 5_instruction: En el último paso, contamos el cuadrado de cada número. Intenta cambiar "conteo ^ 2" a "conteo ^ 3" para trabajar con el cubo de cada número
      Course 4 Play Labs For Loops 5a_instruction: |-
        In this puzzle, Dog will be your time keeper.
        
        Dog will count from 0 to 30 by "increment".  The "increment" variable will begin with a value of 1.
        
        Can you make it so that each time you click Dog, the increment increases by 2?  Click the forward arrow to run the for loop.
        
        Run the loop a couple of times, clicking Dog before each one.
      Course 4 Play Labs For Loops 6_instruction: Recordarás que los números primos son cualquier número que solo puede ser dividido por sí mismo y por 1. Utiliza la función "is_prime" para dialogar solo con los números primos desde 1 a 100
      Course 4 Play Labs For Loops 6a_instruction: |-
        El Perro aún mantendrá tiempo contando con nuestro bucle "for" de incremento, pero esta vez, vamos a añadir el asistente en la mezcla. ¿Se puede cambiar el código para que el "incremento" suba de dos en dos cada vez que se hace clic en el Asistente? ¡Cuidado! ¡El asistente se mueve rápidamente!
      Course 4 Play Labs For Loops 7_instruction: '¿Podrías utilizar un enlace para dialogar la secuencia 1, 4, 7, 10, 13, 16, 19, 22, 25?'
      Course 4 Play Labs For Loops 7a_instruction: "¡Ahora estamos consiguiendo algo! ¿Qué pasa si empezamos contando cuántas veces podemos hacer clic en el Asistente antes de que el perro llegue a 30? Termina de añadir bloques al mago para que cada vez que se hace clic en la variable, \"hacer clic en\" aumenta de a uno. Puede ignorar \"incrementar\" por ahora. Perro comenzará a contar cuando usted haga clic en \"Ejecutar\"."
      Course 4 Play Labs For Loops 8_instruction: "¿Qué enlace me haría dialogar 19, 27, 35, 43, 51?"
      Course 4 Play Labs For Loops 8a_instruction: |-
        Para terminar nuestro juego, tenemos que usar de nuevo la variable "incremento". Vamos a vincularlo al nivel del juego. 1) Registra la cantidad de veces que se hace clic en el asistente. 2) Si hace clic al mago en al menos 10 veces antes de que el perro cuente 30, suma 1 a la variable "incrementar" y comienza de nuevo. 3) Si el mago no hace clic en al menos 10 veces, el juego es terminado.
      Course 4 Playlab For Loop Freeplay_instruction: 'Utiliza todo lo que has aprendido hasta ahora para hacer un juego que incluya un bucle ''for''.'
      Course 4 Playlab For Loops 4b_instruction: '¡Ahora, estos dos personajes van a correr! \r \r cada uno de ellos se moverá ''contador'' pasos en un momento, pero sus contadores tendrán diferentes valores debido a los bucles ''for''.\r \r ¿Puede cambiar el valor del incremento en uno de los bucles para que la carrera sea un empate?'
      Course 4 Playlab For Loops 5b_instruction: Ajusta el intervalo de los bucles 'for' para que ambos personajes terminen exactamente en el mismo lugar.
      Course 4 Playlab For Loops 6b_instruction: "Editar este bucle 'for' para crear un juego que es divertido para jugar! \\r \\r Presione \"Run\" y haga clic en Madame unicornio cuatro veces para ganar. "
      Course 4 SCF 1_instruction: Utiliza las funciones sugeridas para dibujar cuatro filas de hexágonos. ¿Te das cuenta de cómo nuestras filas pares se desplazan hacia la derecha?
      Course 4 SCF 1a_instruction: '¿Puedes averiguar cómo recolectar todo este néctar con la menor cantidad de bloques posibles?'
      Course 4 SCF 1b_instruction: '¿Puedes averiguar cómo recolectar todo este néctar con la menor cantidad de bloques posibles?'
      Course 4 SCF 2_instruction: 'Utiliza lo que aprendiste en la lección anterior para dibujar una imagen como ésta. Nota: El código se vuelve más simple si incorporas parámetros. '
      Course 4 SCF 3 Fail 1_instruction: Puedes averiguar cómo...
      Course 4 SCF 3 Fail 2_instruction: Puedes averiguar cómo...
      Course 4 SCF 3_instruction: 'Utiliza lo que aprendiste en la lección anterior para dibujar una imagen como ésta. Nota: El código se vuelve más simple si incorporas parámetros. '
      Course 4 SCFL 1_instruction: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      Course 4 SCFL 1a_instruction: '¿Puede hacer que Skrat llegue a su bellota usando la menor cantidad de bloques posible?'
      Course 4 SCFL 1b_instruction: '¿Puede hacer que Skrat llegue a su bellota usando la menor cantidad de bloques posible?'
      Course 4 SCFL 2_instruction: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      Course 4 SCFL 3_instruction: '¿Puedes averiguar cómo volver a crear este dibujo?'
      Course 4 SCFL 4_instruction: '¿Puedes averiguar cómo volver a crear este dibujo?'
      Course 4 SCFL 5_instruction: '¿Puedes averiguar cómo volver a crear este dibujo?'
      Course 4 SCFL 6_instruction: '¿Puedes averiguar cómo volver a crear este dibujo utilizando un solo ciclo?'
      Course 4 SCFL 7_instruction: '¡El artista quiere pegar algunas olas! ¿Puedes averiguar cómo volver a crear este dibujo?'
      Course 4 SCFP 1_instruction: Crea una función con parámetros que permita al artista saltar hacia adelante y atrás una cantidad x de píxeles, y además arriba y abajo una cantidad y de píxeles (utilizando números positivos y negativos).
      Course 4 SCV 1_instruction: Haga clic aquí para ver las instrucciones de nuevo.
      Course 4 SCV 2_instruction: Haga clic aquí para ver las instrucciones de nuevo.
      Course 4 SCV 3_instruction: |-
        ¡Ahora por un juego de tocar! Toca al Gato para obtener 2 puntos. Toca al Pingüino para conseguir 3 puntos. ¡Consigue 10 puntos para ganar!, pero ten cuidado, cuando Gato y Pingüino se tocan mutuamente, le quitan puntos. Agrega los bloques necesarios para hacer que este juego funcione de la manera que se explica. ¿Cómo podrá el perro moverse en todas las direcciones con las flechas? ¿Cómo se va añadir puntos cuando el perro toque al gato o al pingüino? ¿Cómo se restarán puntos cuando gato y Pinguino se tocan?
      Course 4 SCV 4_instruction: Resuelve este rompecabezas con el menor número de bloques posible.
      Course 4 SCV 5_instruction: Resuelve este rompecabezas con el menor número de bloques posible.
      Course 4 SCV 6_instruction: Haga clic aquí para ver las instrucciones de nuevo.
      Course 4 SCVP 1_instruction: Crea una función con parámetros que permita al artista saltar hacia adelante y atrás una cantidad x de píxeles, y además arriba y abajo una cantidad y de píxeles (utilizando números positivos y negativos).
      Course 4 Variables Assessment_instruction: '¿Puedes crear esta imagen utilizando una variable para los lados? Cada línea debe tener 50 píxeles de largo.'
      Course1BeePuzzle12_instruction: Get three nectars and then make two honey
      Course1MazeAssessment1_instruction: |-
        This is a test!
        Move one way, then another to get me to the pig
      Course1MazeAssessment2_instruction: |-
        This is a test!
        Move one way, then another to get me to the pig.
      CourseF_PlayLab_vars1_instruction: 'Para jugar este juego, no necesitas escribir ningún código, ¡sólo presiona "Ejecutar"! '
      CourseF_PlayLab_vars10_instruction: "¡Tiempo Libre para jugar! Aquí están todas las variables con las que hemos jugado hasta ahora, también unas pocas más en caso de necesitarlas. Haz un juego o historia que utilice estas variables. Sugerencia: desplázate hacia abajo para ver todos los comandos en el área de trabajo."
      CourseF_PlayLab_vars2_instruction: '¡Esa carrera en ese último problema no fue justa! Cambie la variable de "velocidad_perro" para asegurarse de que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!'
      CourseF_PlayLab_vars3_instruction: '¡Aquí tiene una nueva clase de juego! Use las flechas hacia la izquierda y hacia la derecha para moverse y las flechas hacia arriba y hacia abajo para saltar. Vea si puede recoger todas las banderas.'
      CourseF_PlayLab_vars4_instruction: 'Ahora estamos usando una variable denominada "altura" para controlar cuán alto puede saltar el perro. Actualice la variable "altura" de tal manera que el perro pueda saltar lo suficientemente alto para alcanzar todas las banderas. Pista: las banderas nuevas tienen 200 píxeles de altura.'
      CourseF_PlayLab_vars5_instruction: '¡Diseñemos un juego! Primero necesitaremos una calificación. Use el bloque "asigne puntos a" para establecer la calificación a 10.'
      CourseF_PlayLab_vars6_instruction: |-
        Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      CourseF_PlayLab_vars7_instruction: |-
        Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      CourseF_PlayLab_vars8_instruction: |-
        Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      CourseF_PlayLab_vars9_instruction: Bien, ahora asegurémonos que este juego no sea muy fácil - cada vez que el Perro (actor 1) es golpeado por una bola de fuego usted debe perder un punto. Empiece con 10 puntos de tal manera que no sea muy difícil. Deje que su calificación caiga de 10 a 0 para pasar de nivel.
      Crack Random Substitution_instruction: Instrucciones
      Crack Random Substitution_2018_instruction: Instrucciones
      Crack a Caesar Cipher_instruction: Instrucciones
      Crack a Caesar Cipher_2018_instruction: Instrucciones
      D_Frozen_nested3_instruction: '¡Hagamos grar la línea de formas!'
      D_Frozen_nested4_instruction: '¡Es hor de poner las formas en capas!'
      D_Frozen_nested5_instruction: '¡Juega con los copos de nieve!'
      D_Frozen_nested6_instruction: Dibuja un patrón de peldaños que use entre 75 y 105 grados.
      D_Frozen_nested7_instruction: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      D_Frozen_nested8_instruction: Haz girar la forma 5 ó 6 veces en círculo.
      D_Frozen_nested9_instruction: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!
        - ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        - ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        - ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      Dance Party 1-validated_instruction: 'What do you think will happen when you click on the alien?  '
      Dance Party 2_instruction: Change the behavior inside the `___ begins ___` block to make the alien start spinning around.
      Dance Party 3 - Validated_instruction: 'Create a new sprite called `alien2`, then make it do a different dance move when it''s clicked.  '
      Dance Party 3_instruction: 'Create a new sprite called `alien2`, then make it do a different dance move when it''s clicked.  '
      Dance Party 4 Validated_instruction: 'Create a third sprite called `alien3` and get all of your aliens to stand in a line. '
      Dance Party 4_instruction: 'Create a third sprite called `alien3` and get all of your aliens to stand in a line. '
      Dance Party 5 - Validated_instruction: Add code to change the color of each alien when it gets clicked.
      Dance Party 5_instruction: Add code to change the color of each alien when it gets clicked.
      Dance Party 6 - Validated_instruction: Use the `stops everything` block to make each alien stop moving when it is clicked.
      Dance Party 6_instruction: Use the `stops everything` block to make each alien stop moving when it is clicked.
      Dance Party 7 - Validated_instruction: Add a new bell sprite called `myBell` that makes all the aliens start doing the same dance move when it's clicked.
      Dance Party 7_instruction: Add a new bell sprite called `myBell` that makes all the aliens start doing the same dance move when it's clicked.
      Dance Party Freeplay_instruction: Now create your own alien disco!
      Dance Party Predict_instruction: 'What do you think will happen when you click on the alien?  '
      ECSPD Binary Odometer_instruction: This is another resource you could use with your students.
      Eval Booleans 1_instruction: Boolean operators (like >, <, =) allow us to compare different values, returning either true or false. Click "Run" to see how this expression evaluates.
      Eval Booleans 2_instruction: Can you set the values so that this expression evaluates as true?
      Eval Booleans 3_instruction: The string-length function returns the number of characters in a string (including spaces!) - make this code evaluate to true.
      Eval Booleans 4_instruction: Here's an Evaluation Block called AND - it returns true if both of its parameters are true, otherwise it returns false. Edit the x variable so that this expression returns true.
      Eval Booleans 5_instruction: This OR block returns true if either of its parameters is true. Otherwise, if both parameters are false it will return false. Set the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: Here's one more boolean block called NOT. This block flips true to false, or false to true. If you wrap this block of code in a NOT block, it should return true (because we are asking if the two expressions do NOT produce equal values).
      Eval Booleans Free Play_instruction: 'Free Play: Try out some creations of your own using Booleans.'
      Eval Booleans_instruction: Booleans allow us to compare different values, returning "true" if the are equal, or "false" if they are not. What do you think this code will evaluate to?
      Eval Cond 1_instruction: The cond block checks the boolean expressions in the left column, and as soon as it finds one that returns "true" it runs the corresponding code on the right. If none of the expressions evaluate to "true," it runs the bottom block. Update the "temperature" variable so that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: This condition returns a different shape based on the value of the "sides" variable - change the value of "sides" so that the conditional returns a triangle.
      Eval Cond 2_instruction: This condition returns a different shape based on the value of the "sides" variable - change the value of "sides" so that the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: 'Can you write a conditional that checks the variable "age" and returns "Old enough to vote and drive" if age > 17, "Old enough to drive" if age is > 15, and "Can''t drive or vote" if neither conditions is true. Hint: The first condition to return "true" wins - make sure you put your conditions in the right order.'
      Eval Cond 3_instruction: 'Can you write a conditional that checks the variable "age" and returns "Old enough to vote and drive" if age > 17, "Old enough to drive" if age is > 15, and "Can''t drive or vote" if neither conditions is true. Hint: The first condition to return "true" wins - make sure you put your conditions in the right order.'
      Eval Cond 4_instruction: We can use the string=? function to make conditionals that respond to text input. Here's a function called green shape that takes a string for the type of shape. Complete the conditions so that the correct solid green shape is returned when the function is run with "circle", "triangle", "square", or "rectangle".
      Eval Cond 5_instruction: Here's a similar function red shape with an additional variable for size. Complete the conditionals so the correct solid red image of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: |-
        Write a function called food-critic, which takes in the name of a food and produces a String that says how you feel about that food. For example, (food-critic “pizza”) might evaluate to “delicious”, but (food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two foods to review, but you can you write more if you like!  Don’t forget to add an “else” clause!
        One example - and part of the definition -  has already been done for you!
      Eval Cond 7_instruction: |
        Free Play: Write a function called green-shape, which takes in the name of a shape and produces a solid green shape. Your function should work with at least “circle”, “star” and “rectangle”, but you can add other shapes if you like. You can choose the size of each shape. Don’t forget to add an “else” clause!
        One example - and part of the definition -  has already been done for you!
      Eval Cond 8_instruction: 'Free Play: Suppose you want to own a car at 21, or have your own business by 30. Write a function called life-goals, which takes in an age and produces a string that describes your life goals by then. Don’t forget to add an “else” clause!  '
      Eval Contracts 1_instruction: Use the "star" function to produce a red star with a 60 pixel radius
      Eval Contracts 10A_instruction: Alright let's complete this puzzle with a Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: Can you complete this puzzle to read "Hello World" in the banner?
      Eval Contracts 2_instruction: Check out the "rotate" function - can you use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: Try using the "text" function to write this teal text at size 40.
      Eval Contracts 4 A_instruction: The "scale" function returns an image that is scaled either larger or smaller than the input image. Try scaling this circle by a factor of 10 - how is the resulting image different than if you'd just made a circle of that size in the first place?
      Eval Contracts 4_instruction: The scale function returns an image that is either larger or smaller than the input image. Try scaling this circle by a factor of 10. How is the returned image different than if you'd just made a circle of that size in the first place?
      Eval Contracts 8A_instruction: Can you complete this puzzle? The big-triangle is 200 pixels in size and purple?
      Eval Contracts A_instruction: Use the star function to produce a solid red star with a 60 pixel radius
      Eval Contracts C_instruction: Check out the rotate function - can you use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: Try using the text function to write "Hello, world!" in teal at size 40.
      Eval Contracts shrink_instruction: 'Can you complete this image using the "shrink" function block? The radius is 20. '
      Eval Define Funcs 1_instruction: Here's a new function called green-triangle that takes a single Number for size and produces a green triangle. Use the new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: Let's look inside that green-triangle function to see how it works. Can you modify it so that the green-triangle function always draws outlined green triangles?
      Eval Define Funcs 3_instruction: Here's the start of another new function called purple-circle with a domain of one Number (the radius) and a range of Image. The body of the function is broken though - fix it and then make a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: Create a new function called aqua-star that has a Domain of a single Number for radius and returns an aqua star of the given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: Let's use that aqua-star function to make a row of different sized stars. From left to right, the stars should have radii of 25, 50, and 75.
      Eval Define Funcs Test_instruction: Here's the start of another new function called purple-circle with a domain of one Number (the radius) and a range of Image. The body of the function is broken though - fix it and then make a purple circle with 150 pixel radius
      Eval Defining Vars Free Play 1_instruction: 'Free Play: We''ve provided a function that fills your screen with my-image. Change my-image to see what patterns you can make.'
      Eval Design Recipe .1_instruction: Here's a Design Recipe for a function called square-circle with domain Number String and range Image. Click Edit to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: We're going to write a function that draws a solid rectangle of any color that is twice wide as it is high. Start with an example - draw a solid green rectangle that has a height on 100 pixels.
      Eval Design Recipe 1_instruction: 'Alright, now given the Contract wide-rect: Number String -> Image, write an example - draw a solid green rectangle that has a height of 100 pixels.'
      Eval Design Recipe 2 (copy 1)_instruction: Let's do one more example before writing the function definition - this time draw a solid red rectangle with a height of 75 pixels.
      Eval Design Recipe 2_instruction: Let's do one more example before writing the function definition - this time draw a solid red rectangle with a height of 75 pixels.
      Eval Design Recipe 3_instruction: The Design Recipe for wide-rect already has a contract and one example. Can you write a second example and then complete the definition? The wide-rect function should produce a rectangle of given color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: Use the Design Recipe to create a function starburst. When given a number of points and an outer radius, starburst returns a yellow radial star with given points, and an inner radius that is half the outer radius.
      Eval Design Recipe 5_instruction: Using the Design Recipe, write a function striped-flag that takes two colors and produces a flag that is 250 pixels wide, 150 pixels tall, with three even horizontal stripes of given colors, in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: Write a function large-polygon that should output a solid polygon of given sides and color that takes up most of the window, regardless of the number of sides. To make sure that the polygon doesn't get too large as you increase the number of sides, side length should be inversely proportional to side number, with a length of (800/sides).
      Eval Design Recipe Free Play_instruction: 'Free Play: Use the Design Recipe to create some functions of your own design'
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: So far we've only dealt with a single type of data, Numbers. Another type of data is a String, which is any combination of letters, numbers, or other characters wrapped in quotation marks. Run the String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: The string-append function takes two Strings and returns a single combined String. Add a String "Universe" to the second argument of string-append.
      Eval Strings Images 1_instruction: The third type of data we're going to use is an Image. This star function takes in a Number and two Strings, and it evaluates to an Image. Use this function to make a solid red star with radius of 100.
      Eval Strings Images 2_instruction: 'Free Play: Every Evaluation Block is color-coded to let you know which data type it returns and which types it needs for its parameters. The last parameter of the triangle function takes a String that controls its color - try some different colors to see what works.'
      Eval Strings Images 3_instruction: Some functions can only take a specific set of Strings, such as the second argument of this circle function, which controls its style. Draw this orange outline circle using the special String block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: Try using the rectangle block to draw this solid, red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: Try using this new Evaluation Block called overlay to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: Use the overlay block to place a 75 pixel radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: The offset block lets you move an image relative to where it would normally be placed. Use this block to offset the square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: Here's a different kind of star block - it's called radial-star and it allows you to draw stars with any number of points! Use it to create a 7 point solid orange star with an inner radius of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: 'Free Play: Explore the blocks available to create something interesting. Make sure to share your favorite creations.'
      Farmer for Authored Hint testing_instruction: 'Wow, I found a really deep hole! I don''t know how many shovelfuls of dirt it needs.  Can you write a program that fills it until the ground is even?  Hint:  Try using the while loop this time.'
      Farmer for TTS testing_instruction: 'Wow, I found a really deep hole! I don''t know how many shovelfuls of dirt it needs.  Can you write a program that fills it until the ground is even?  Hint:  Try using the while loop this time.'
      Finalize Your Chaser Game v.1_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      Finalize Your Chaser Game v.1_2018_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      Find the Wizard_instruction: Build whatever you want. This is an example of a number-guessing game!
      Find the Wizard_2018_instruction: Build whatever you want. This is an example of a number-guessing game!
      Fish Tank 2-validated_instruction: Change Dusty (the tumbleweed) to a fish.
      Fish Tank 3-validated_instruction: Change the fish's behavior so that it swims around the tank.
      Fish Tank 4-validated_instruction: Use the `set background color` block to make the background blue.
      Fish Tank 5-validated_instruction: Our fish is getting a little lonely. Add another sprite to the fish tank.
      Fish Tank 6-validated_instruction: Add a behavior to the fish's new friend.
      Fish Tank 7-validated_instruction: Use some new blocks from the toolbox to make your fish tank special!
      Food Fight!_instruction: "Añadimos una última función para ti. Utiliza una sentencia \"Si\" para que tu programa llame la función \"livel_mas\" solo cuando \"puntuacion_jugador\" sea mayor que un cierto número. Por ejemplo: \"puntuacion_jugador\" > 6 Juega el juego, y hazlo pasar de nivel 4 para mover al siguiente problema. "
      Food Fight_instruction: You can make whatever you want in play lab! This is an example of a game you can make in play lab.
      FoodFight_instruction: This is an example of a game you can make in play lab.
      FoodFight_2018_instruction: This is an example of a game you can make in play lab.
      Frequency Analysis_instruction: Test
      Function intro Ryan_instruction: Usa la función "Construir puente" dos veces para crear un camino para la antorcha.
      GLJ Drag and fall_instruction: This Corgi has been a good boy! Drag this carrot to him as a special treat.
      GLJ Dragity_instruction: This Corgi has been a good boy! Drag this carrot to him as a special treat.
      GLJ Flappy2_instruction: Click to flap - don't touch the ground!
      GLJr_Behavior_1_instruction: On your worksheet, write what you think the dog will do when you click "Run."
      GLJr_Behavior_2_instruction: Now you have some new blocks! Try them out and see how they work. On your worksheet, write down which ones you tried, and what they do.
      GLJr_Behavior_5_instruction: Now we have two sprites! Use behaviors to make the dog jittery and make the cat wander
      GLJr_Behavior_6_instruction: Let's try some more behaviors - make the dog run up and make the cat run right.
      GLJr_Forever_1_instruction: On your worksheet, write what you think the dog will do when you click "Run."
      GLJr_Forever_2_instruction: Now you have some new blocks! Try them out and see how they work. On your worksheet, write down which ones you tried, and what they do.
      GLJr_Forever_5_instruction: Now we have two sprites! Use a loop to make the dog jittery and make the cat wander
      'Game Lab Workshop: Random_instruction': Pick a shape block and use calls to randomNumber() in place of one or more of the parameters. Maker sure you run it a few times so you can see the effect of randomization.
      Geometric Pattern_instruction: 'Project Idea: Create a pattern using geometric ideas like shapes. This requires persistence and planning!'
      Geometric Sun_instruction: 'Project Idea: Create a pattern using geometric ideas like shapes. This requires persistence and planning!'
      Geometric Sun_2018_instruction: 'Project Idea: Create a pattern using geometric ideas like shapes. This requires persistence and planning!'
      Get To The Goal_instruction: Build whatever you want. This is an example of a number-guessing game!
      'Grade 4 Example PlayLab Project #1_instruction': Take a look at this project.  Do you see how it was made?
      'Grade 4 Example PlayLab Project #2_instruction': Take a look at this project.  Do you see how it was made?
      Guess The Number 2_instruction: Build whatever you want. This is an example of a number-guessing game!
      Guess The Number_instruction: Build whatever you want. This is an example of a number-guessing game!
      Guess The Number_2018_instruction: Build whatever you want. This is an example of a number-guessing game!
      Harvester Test_instruction: It's harvest time! But I forgot what crop I planted at which tile. Please help me harvest all my crops, no matter how they were originally planted!
      Harvesting_instruction: Uh oh, I lost my map and can't remember what I planted. Every sprout could grow up to be corn, beans, or pumpkins. Can you write some code to pick all the crops, no matter what they are?
      HoCAB_labyrinth1_instruction: Use the arrow blocks to solve this maze!
      Infinity_catch_instruction: '¿Puedes hacer que Elsa ("actor2") alcance a Anna utilizando las teclas de flecha?'
      Infinity_finale_instruction: '¡Crea cualquier cosa que desees compartir!'
      Infinity_move_collide_instruction: Hiro es el "actor 1". Muévelo cerca de Baymax y reproduce un sonido cuando se toquen.
      Infinity_move_directions_instruction: Baymax es el "actor 2". Agrega bloques de movimiento y luego mueve a Baymax utilizando las flechas. Haz que toque a los otros dos personajes.
      Infinity_move_right_instruction: Hiro es el "actor 1". Utiliza el bloque de movimiento para mover a Hiro hasta a tocar Baymax.
      Infinity_repeat_instruction: Utilice un bloque "repetir para siempre" para mover a Anna arriba y abajo de 400 píxeles.
      Infinity_say_instruction: Haz a Anna decir "Hola" utilizando el bloque de decir.
      Infinity_shoot_instruction: Baymax es el "actor 2". Haz que Baymax lance un cohete a Hiro.
      Infinity_shoot_directions_instruction: Hiro es el "actor 3". Has que Hiro lance un proyectil a cada uno de los cuatro personajes. Espera un segundo entre cada tiro.
      Infinity_test_instruction: This is a test Infinity level.
      Infinity_touch_faster_instruction: '¡Toca aún más copos de nieve!'
      Infinity_touch_four_instruction: Mueve a Anna hacia arriba, abajo a la izquierda y a la derecha para tocar cada uno de los cuatro copos de nieve.
      Infinity_touch_score_instruction: Haz que Anna anote un punto cuando ella toque un copo de nieve. Después, haz clic en "Ejecutar" y condúcela para tocar una vez cada copo de nieve.
      Inspirational Artwork_instruction: "Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita https://studio.code.org/c/106387604 para la solución."
      InspirationalArtwork_instruction: If this picture inspires you, try to make something similar. Otherwise, create something all your own.
      InspirationalArtwork_2018_instruction: If this picture inspires you, try to make something similar. Otherwise, create something all your own.
      'Internet Simulator: Broadcast Mode_instruction': 'Now use the Internet Simulator to send the battleship moves. For setup, join a Room with your group, and add ships to your paper board for each opponent. When playing, all communication must be done through the tool, so no talking, but have fun!  '
      'Internet Simulator: Broadcast_instruction': 'Now use the Internet Simulator to send the battleship moves. For setup, join a Room with your group, and add ships to your paper board for each opponent. When playing, all communication must be done through the tool, so no talking, but have fun!  '
      'Internet Simulator: Broadcast_2018_instruction': 'Now use the Internet Simulator to send the battleship moves. For setup, join a Room with your group, and add ships to your paper board for each opponent. When playing, all communication must be done through the tool, so no talking, but have fun!  '
      'Internet Simulator: DNS Mode_instruction': In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      'Internet Simulator: DNS_instruction': In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      'Internet Simulator: DNS_2018_instruction': In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      'Internet Simulator: Packets_instruction': |-
        Develop a Protocol for Reliably Sending a Message.
        
        Constraints:
        - Packets may contain only 8 characters
        - Packets may drop with small probability
        - Packets may not arrive in order
      'Internet Simulator: Packets_2018_instruction': |-
        Develop a Protocol for Reliably Sending a Message.
        
        Constraints:
        - Packets may contain only 8 characters
        - Packets may drop with small probability
        - Packets may not arrive in order
      'Internet Simulator: Routers_instruction': Send messages with your classmates (Click to see full instructions)
      'Internet Simulator: Routers_2018_instruction': Send messages with your classmates (Click to see full instructions)
      'Internet Simulator: Sending Binary Messages 1_instruction': 'Develop, document, and test a protocol that allows you to use Internet Simulator to relay a message. See the worksheet for more detailed instructions.  '
      'Internet Simulator: Sending Binary Messages_instruction': 'Develop, document, and test a protocol that allows you to use Internet Simulator to relay a message. See the worksheet for more detailed instructions.  '
      'Internet Simulator: Sending Binary Messages_2018_instruction': 'Develop, document, and test a protocol that allows you to use Internet Simulator to relay a message. See the worksheet for more detailed instructions.  '
      'Internet Simulator: Sending Numbers_instruction': With your partner, develop a protocol or set of rules for communicating a drawing using only bits. See the worksheet handed out by your teacher for more detailed instructions!
      'Internet Simulator: Sending Numbers_2018_instruction': With your partner, develop a protocol or set of rules for communicating a drawing using only bits. See the worksheet handed out by your teacher for more detailed instructions!
      'Internet Simulator: Sending Text_instruction': Work with a partner or in a small team to develop a protocol that allows you to send formatted text. See the worksheet handed out by your teacher for more detailed instructions!
      'Internet Simulator: Sending Text_2018_instruction': Work with a partner or in a small team to develop a protocol that allows you to send formatted text. See the worksheet handed out by your teacher for more detailed instructions!
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: '¡Dibuja una línea corta hacia arriba y una larga a la derecha!'
      K-1 Artist Loops 1_instruction: Dibuja esa línea moviéndote al este 4 veces
      K-1 Artist Loops 2_instruction: '¿Podrías dibujar la misma línea usando un enlace?'
      K-1 Artist Loops 3_instruction: '¿Podrías enlazar estos bloques para dibujar 6 líneas?'
      K-1 Artist Loops 4_instruction: '¿Podría un enlace ayudarnos a dibujar el tope del castillo?'
      K-1 Artist Loops 5_instruction: '¿Puedes repetir 4 veces el mismo enlace para dibujar la escalera?'
      K-1 Artist Loops 6_instruction: 'Aquí se necesitan dos enlaces: Uno para subir y otro para bajar la escalera.'
      K-1 Artist Loops 7_instruction: '¿Podrías terminar este patrón con dos enlaces?'
      K-1 Artist Loops 8_instruction: Esta escalera tiene escalones largos
      K-1 Artist Loops 9_instruction: 'Evaluación: utilice un enlace para dibujar la escalera'
      K-1 Artist Loops Free Play_instruction: Dibuja algo divertido.
      K-1 Artist1 1_instruction: Dibuja el pie del hombre con una línea
      K-1 Artist1 10_instruction: Dibuja y salta para trazar el camino al tesoro
      K-1 Artist1 2_instruction: '¡Dibuja el bigote del gato con dos líneas!'
      K-1 Artist1 3_instruction: '¡Dibuja dos líneas al este y dos al norte para terminar la casa!'
      K-1 Artist1 4_instruction: '¡Dibuja líneas verticales, superiores e inferiores para terminar el castillo!'
      K-1 Artist1 5.5_instruction: Completa la tercera torre del castillo usando líneas pequeñas
      K-1 Artist1 5_instruction: '¡Dibuja el tallo de la flor con dos líneas! '
      K-1 Artist1 6_instruction: '¡Termina el dibujo usando el bloque de salto! '
      K-1 Artist1 7_instruction: Use el bloque de salto para moverte sin dibujar. Salta hacia arriba y dibuja una línea
      K-1 Artist1 8_instruction: Traza una línea usando los bloques de saltar y dibujar
      K-1 Artist1 9_instruction: Dibuja y salta para trazar una línea
      K-1 Artist1 Assessment 1_instruction: '¡Dibuja líneas largas y cortas!'
      K-1 Artist1 Assessment 2_instruction: '¡Dibuja un trazo de líneas cortas!'
      K-1 Artist2 1_instruction: Dibuja un cuadrado debajo del triángulo
      K-1 Artist2 2_instruction: '"Salta y dibuja un cuadrado junto a la casa".'
      K-1 Artist2 3_instruction: Dibuja un cuadrado arriba de otro cuadrado
      K-1 Artist2 4_instruction: Dibuja un rectángulo para completar el puente.
      K-1 Artist2 5_instruction: Dibuja un rectángulo para completar los soportes del puente
      K-1 Artist2 6_instruction: '¡Dibuja dos cuadrados para hacer el rectángulo!'
      K-1 Artist2 Assessment1_instruction: '"Evaluación: Dibuja un cuadrado junto a otro cuadrado".'
      K-1 Artist2 Free Draw_instruction: '¡Dibuja cualquier cosa!'
      K-1 Artist2_7_instruction: '¡Dibuja un rectángulo para hacerle un cajón al vestidor!'
      K-1 Bee 1_instruction: Llévame a la flor, toma el néctar, entonces llévame a la colmena, y haz miel
      K-1 Bee 10_instruction: '¡Toma cuatro néctares y entonces haz dos mieles!'
      K-1 Bee 11.5_instruction: '¡Toma cuatro néctares y haz cuatro mieles!'
      K-1 Bee 11_instruction: Toma tres néctares y entonces haz una miel
      K-1 Bee 12_instruction: '¡Toma tres néctares y entonces haz dos mieles!'
      K-1 Bee 13_instruction: '¡Toma tres néctares y entonces haz una miel!'
      K-1 Bee 14_instruction: Llévame al néctar, recógelo, llévame a la colmena y haz miel
      K-1 Bee 15_instruction: '¡Conseguir dos néctares para hacer dos unidades de miel!'
      K-1 Bee 2_instruction: Llévame a la flor, toma el néctar, entonces llévame a la colmena, y haz miel
      K-1 Bee 3_instruction: Llévame a la flor, toma el néctar, entonces llévame a la colmena, y haz miel
      K-1 Bee 4_instruction: '¡Consigue dos unidades de néctar y luego haz dos unidades de miel!'
      K-1 Bee 5_instruction: '¡Toma tres néctares y entonces haz dos mieles!'
      K-1 Bee 6_instruction: '¡Consigue dos unidades de néctar y luego haz dos unidades de miel!'
      K-1 Bee 7_instruction: '¡Toma tres néctares y entonces haz dos mieles!'
      K-1 Bee 8_instruction: '¡Consigue dos unidades de néctar y luego haz dos unidades de miel!'
      K-1 Bee 9_instruction: '¡Consigue dos unidades de néctar y luego haz dos unidades de miel!'
      K-1 Bee Assessment 1_instruction: '¡Consigue néctar para hacer miel!'
      K-1 Bee Assessment 2_instruction: '¡Consigue néctar para hacer miel!'
      K-1 Bee Loops 1_instruction: '¡Obtén el néctar para hacer miel!'
      K-1 Bee Loops 10_instruction: '¡Utiliza enlaces para obtener néctar, miel y para moverte!'
      K-1 Bee Loops 11_instruction: 'Evaluación: ¡Utiliza enlaces para obtener néctar y miel!'
      K-1 Bee Loops 12_instruction: 'Evaluación: ¡Utiliza enlaces para obtener néctar, miel y moverte!'
      K-1 Bee Loops 2_instruction: '¡Utiliza un enlace para moverte y obtener el néctar y hacer miel!'
      K-1 Bee Loops 3_instruction: '¡Utiliza enlaces para obtener néctar y para hacer miel!'
      K-1 Bee Loops 4_instruction: '¡Ulilice enlaces para obtener néctar, hacer miel y moverse!'
      K-1 Bee Loops 5_instruction: '¡Utiliza enlaces para tomar néctar y miel!'
      K-1 Bee Loops 6_instruction: '¡Utiliza enlaces para obtener néctar, miel y para moverte!'
      K-1 Bee Loops 7_instruction: '¡Utiliza enlaces para obtener néctar y para hacer miel!'
      K-1 Bee Loops 8_instruction: '¡Utiliza enlaces para obtener néctar y para hacer miel!'
      K-1 Bee Loops 9_instruction: '¡Utiliza enlaces para obtener néctar, miel y para moverte!'
      K-1 Bee Loops Assessment 1_instruction: '¡Toma néctar para hacer miel y usa enlaces para moverte!'
      K-1 Bee Loops Assessment 2_instruction: '¡Utiliza enlaces para tomar néctar y hacer miel!'
      K-1 Bee Puzzle 12_instruction: Get three nectars and then make two honey
      K-1 Building a Foundation Assessment_instruction: Construye una pirámide de tres niveles, ¡no hay mas instrucciones, simplemente juega con las piezas hasta lograrlo!
      K-1 Maze 10_instruction: '¡Evita el TNT para llevarme al cerdo!'
      K-1 Maze 11_instruction: '"Traza la ruta y llévame con el cerdo loco". ¡Evita el TNT o las plumas volarían! Ayuda: él está al sur de mí".'
      K-1 Maze 2_instruction: '¡Muéveme al Este para llevarme al cerdo!'
      K-1 Maze 3_instruction: '¡Muéveme al sur para llegar al cerdo!'
      K-1 Maze 4_instruction: '¡Muéveme al norte para llegar al cerdo!'
      K-1 Maze 5_instruction: '¡Muéveme al Este para llevarme al cerdo!'
      K-1 Maze 6_instruction: '¡Muéveme en una dirección, luego en otra para llevarme el cerdo!'
      K-1 Maze 7_instruction: '¡Muéveme en una dirección, luego en otra para llevarme el cerdo!'
      K-1 Maze 8_instruction: '¡Muéveme en una dirección, luego en otra para llevarme el cerdo!'
      K-1 Maze 9_instruction: '¡Muéveme en una dirección, luego en otra para llevarme el cerdo!'
      K-1 Maze Assessment 1_instruction: Evaluación, ¡tráeme al cerdo!
      K-1 Maze Assessment 12_instruction: Nivel de evaluación
      K-1 Maze Assessment 13_instruction: Nivel de evaluación
      K-1 Maze Assessment 2_instruction: Evaluación, ¡tráeme al cerdo!
      K-1 Maze Loops 1_instruction: '¡Tráeme al cerdo!'
      K-1 Maze Loops 10_instruction: '¡Llévame al cerdo! Usa el bloque de repetición.'
      K-1 Maze Loops 11_instruction: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 12_instruction: '¡Llévame al cerdo! Usa el bloque de repetición.'
      K-1 Maze Loops 2_instruction: '¡Usa el bloque de Repetición para llevarme al cerdo!'
      K-1 Maze Loops 3_instruction: '¡Llévame al cerdo! Usa el bloque de repetición.'
      K-1 Maze Loops 4_instruction: '¡Tráeme al cerdo!'
      K-1 Maze Loops 5_instruction: '¡Llévame al cerdo! Usa el bloque de repetición.'
      K-1 Maze Loops 6_instruction: '¡Llévame al cerdo! Usa el bloque de repetición.'
      K-1 Maze Loops 7_instruction: '¡Llévame al cerdo! Usa el bloque de repetición.'
      K-1 Maze Loops 8_instruction: '¡Llévame al cerdo! Usa el bloque de repetición.'
      K-1 Maze Loops 9_instruction: '¡Tráeme al cerdo!'
      K-1 Maze Loops Assessment 1_instruction: Evaluación -- ¡Usa ciclos para llevarme al cerdo!
      K-1 Maze Loops Assessment 2_instruction: Evaluación -- ¡Usa ciclos para llevarme al cerdo!
      K-1 Maze Multi 14_instruction: Nivel de evaluación
      K-1 Maze Multi 15_instruction: Nivel de evaluación
      K-1 Maze Sequence Assessment 1_instruction: |-
        ¡Ésta es una prueba! Muévete en una dirección, luego en otra para llevarme al cerdo
      K-1 Maze Sequence Assessment 2_instruction: '¡Ésta es una prueba! Muévete en una dirección, luego en otra para llevarme al cerdo.'
      K-1 Maze debug Assessment 1_instruction: Evaluación -- ¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!
      K-1 artist 1 level 10_instruction: Dibuja una línea punteada utilizando los bloques de dibujar y saltar
      K-1 artist 1 level 9_instruction: Dibuja esto utilizando tres líneas
      K-1 maze debug 1_instruction: '¡Cambie el código para traerme al cerdo!'
      K-1 maze debug 10_instruction: '¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!'
      K-1 maze debug 11_instruction: |-
        ¡Ésta es una prueba! Depura este nivel reorganizando y agregando bloques para llevarme al cerdo
      K-1 maze debug 2_instruction: '¡Averigua qué falta y entonces agrega bloques para llevarme al cerdo!'
      K-1 maze debug 3_instruction: '¡Averigua cuál es el problema y borra bloques para llevarme al cerdo!'
      K-1 maze debug 4_instruction: '¡Ejecuta estos bloques y arréglalos! Yo creo que voy en la dirección equivocada.'
      K-1 maze debug 5_instruction: '¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!'
      K-1 maze debug 6_instruction: '¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!'
      K-1 maze debug 7_instruction: '¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!'
      K-1 maze debug 8_instruction: '¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!'
      K-1 maze debug 9_instruction: '¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!'
      K2.0 sequence 1_instruction: '¡Cambie el código para traerme al cerdo!'
      K2.0 sequence 10_instruction: 'Challenge: Move me around the TNT to get to the pig.'
      K2.0 sequence 12_instruction: 'Let''s get that pig! '
      K2.0 sequence 2_instruction: '¡Cambie el código para traerme al cerdo!'
      K2.0 sequence 3_instruction: Something is not quite right. REMOVE a block to get me to the pig!
      K2.0 sequence 4_instruction: Time for a shorter puzzle!  Move one way, then another to get me to the pig.
      K2.0 sequence 4a_instruction: Try this puzzle again from the start!
      K2.0 sequence 5_instruction: '¡Muéveme en una dirección, luego en otra para llevarme el cerdo!'
      K2.0 sequence 6_instruction: '¡Averigua qué falta y entonces agrega bloques para llevarme al cerdo!'
      K2.0 sequence 7_instruction: Solve this level and get me to the pig!
      K2.0 sequence 8_instruction: Debug this level by adding blocks to get me to the pig!
      K2.0 sequence 9_instruction: '¡Evita el TNT para llevarme al cerdo!'
      K2.0 sequence FP_instruction: Now figure out how to get the pig any way you can!
      K2.0 sequence pre_instruction: Play with these blocks to see if you can get me to the pig!
      KIKI GLJ Test Response_instruction: 'Look carefully at the code below.  What do you think the plane will do when you click "Run"?  '
      KTest1_instruction: Can you make me move South once more to get to the pig?
      KTest2_instruction: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      Kiki_StarWars_Test_3_instruction: Texto
      Kiki_StarWars_Test_4_instruction: Texto
      Kiki_StarWars_Test_5_instruction: Texto
      Kiki_StarWars_Test_5_Example_instruction: Texto
      LaurelDebugging4Video1_instruction: Move Laurel around and get as much gold as you can!
      Limited Quantity of Blocks Test_instruction: Get me to the pig by adding only one block
      Luigi's Pizza 1_instruction: Welcome to Luigi's Pizza! To order a pizza, type the name of a topping into the cost function, and we'll return the price of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: Right now there are only four choices available at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional block in the "cost" function. Once you've added your toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: Right now there are only four choices available at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional block in the cost function. Once you've added your toppings, test out the function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: That's better, everyone loves more variety in their pizza toppings! But you still can't please everyone, and folks are coming in to order toppings that Luigi doesn't have. Instead of saying no to those people, could you update the "else" clause so that we charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: That's better, everyone loves more variety in their pizza toppings! But you still can't please everyone, and folks are coming in to order toppings that Luigi doesn't have. Instead of saying no to those people, could you update the else clause so that we charge them a premium for toppings that we don't normally offer? Let's charge $10,000 for a topping we don't carry.
      Luigi's Pizza 4_instruction: 'Free Play: What can you do to make Luigi''s cost function even more useful?'
      MC Agent Freeplay_instruction: "**Improvisación:**  ¡Es hora de explorar por tu cuenta!"
      MC HOC 2016 Level 10_instruction: '¡Es hora de crear tu propio Minecraft! Genera criaturas y haz que hagan lo que tú quieras. ¡Diviértete!'
      MC HOC 2016 Level 2-2_instruction: La gallina está quieta. Para lograr que se mueva, debes colocar los bloques "mover" y "girar" en el espacio "cuando se genera".
      MC HOC 2016 Level 3_instruction: '¡Perfecto! ¡La gallina se movió! Pero luego se detuvo. En los videojuegos, las gallinas están en movimiento constante. Usa un bucle "hacer siempre" para que las gallinas no dejen de moverse.'
      MC HOC 2016 Level 4_instruction: Ahora se ven raras moviéndose todas iguales. Para darle autenticidad a las cosas, los videojuegos usan movimientos aleatorios. Puedes hacer que las gallinas "giren al azar".
      MC HOC 2016 Level 5_instruction: '¡Estas vacas están perdidas! Condúcelas hasta el pasto con el bloque "dar un paso hacia" en un bucle "hacer siempre".'
      MC HOC 2016 Level 6_instruction: Puedes crear zombis. Usar el bloque "generar" para crear 3 zombis cuando caiga la noche. Haz que se acerquen a ti. Sobrevive hasta la mañana.
      MC HOC 2016 Level 8_instruction: El camino hasta la oveja está obstruido por un muro de piedra. Por suerte, hay un Creeper aquí. Los Creepers explotan cuando los tocas. ¡Para poder llegar a la oveja, tienes que hacer el Creeper explote cerca del muro!
      MC HOC 2016 New Drop_instruction: En Minecraft, las ovejas sueltan lana. Coloca un bloque "soltar" en el espacio "cuando se usa", luego acércate y usa la oveja para que suelte un objeto.
      MC HOC 2016 New Spawn_instruction: En los videojuegos, generar cosas significa agregar cosas al mundo. Para generar algo cuando comienza el juego, debes colocar el bloque "generar" debajo de "cuando se ejecuta".
      MC HOC 2016 New Walk_instruction: '¡Exploremos el mundo! Puedes moverte con las fechas y usar objetos con la barra espaciadora o tocando la pantalla. Usa la puerta para entrar a la casa.'
      MC HOC 2016 SCORE LEVEL_instruction: En algunos juegos, puedes sumar puntos. Juega a la mancha con gólems de hierro y usa el bloque "agregar 1 a la puntuación", así podrás anotar un punto cada vez que atrapes uno. ¡Acumula cinco puntos y gana!
      MC HOC 2016 Village Test_instruction: '¡Ay, no! ¡Los zombis te tienen atrapado! ¡Escribe código que haga que el gólem de hierro persiga y ataque a los zombis!'
      MC_2017_Ryan_02_instruction: Help the player get out by using loops to get the Agent to the pressure plate.
      MC_HOC_2017 Agent Test_instruction: Vajuta "Käivita", et liigutada mängija oranžile ruudule maja sees.
      MC_HOC_2017_01_instruction: Vajuta "Käivita", et liigutada mängija oranžile ruudule maja sees.
      MC_HOC_2017_01_Cole_instruction: Debes recoger todas las herramientas en esta aventura. Muévete usando las **teclas de flecha** y llega al cofre del camino para ganar
      MC_HOC_2017_01_Kiki_instruction: Vajuta "Käivita", et liigutada mängija oranžile ruudule maja sees.
      MC_HOC_2017_01_RETRY_instruction: 'Lleva al Agent a la placa de presión, luego presiona "Ejecutar" y usa las teclas de flecha para mover al jugador fuera de la casa para recoger el cofre.'
      MC_HOC_2017_02_instruction: Lleva al Agent a la placa de presión.
      MC_HOC_2017_02_Cole_instruction: 'Mueve al Agent a la placa de presión para que {currentPlayerName} pueda llegar al mapa.'
      MC_HOC_2017_02_Kiki_instruction: Lleva al Agent a la placa de presión y luego lleva al jugador al cuadrado naranja.
      MC_HOC_2017_02_Will_instruction: Lleva al Agent a la placa de presión.
      MC_HOC_2017_03_Cole_instruction: 'Dale un código al Agent para que abra la puerta.'
      MC_HOC_2017_03_Kiki_instruction: Lleva al Agent a la placa de presión.
      MC_HOC_2017_04_instruction: Cambia el bucle del último acertijo para ayudar al Agent a crear un camino sobre la parte más ancha de este río.
      MC_HOC_2017_04POINT5_Cole_instruction: Lleva al Agent a la placa de presión.
      MC_HOC_2017_04POINT5_RYAN_instruction: Lleva al Agent a la placa de presión.
      MC_HOC_2017_04_Cole_instruction: Lleva al Agent a la placa de presión.
      MC_HOC_2017_04_Kiki_instruction: Lleva al Agent a la placa de presión.
      MC_HOC_2017_05_instruction: Usa una función para ayudar al Agent a llegar a la placa de presión.
      MC_HOC_2017_05_Cole_instruction: Haz que el jugador vaya por la pala.
      MC_HOC_2017_05_Josh_instruction: Haz que el jugador vaya por la pala.
      MC_HOC_2017_05_Kiki_instruction: Haz que el jugador vaya al cuadrado naranja.
      MC_HOC_2017_06_Cole_instruction: Arregla este código para que el Agent construya un puente sobre este río.
      MC_HOC_2017_06_Josh_instruction: Arregla este código para ayudar al Agent a construir un puente sobre este río.
      MC_HOC_2017_06_Kiki_instruction: Arregla este código para ayudar al Agent a construir un puente sobre este río.
      MC_HOC_2017_07_Cole_instruction: Destruye el hielo y lleva a {currentPlayerName} a la vagoneta.
      MC_HOC_2017_07_Kiki_instruction: Usa una función para despejar el camino hasta el cuadrado naranja.
      MC_HOC_2017_07a_Kiki_instruction: Despeja el camino hacia el cuadrado naranja.
      MC_HOC_2017_08_Cole_instruction: Cambia la función proporcionada para que funcione en este bioma.
      MC_HOC_2017_08_Kiki_instruction: Cambia la función para que funcione con este acertijo.
      MC_HOC_2017_08_RY_instruction: Usa las funciones para encontrar un modo de cruzar la lava.
      MC_HOC_2017_08_Will_instruction: Usa las funciones para encontrar un modo de cruzar la lava.
      MC_HOC_2017_09_Cole_instruction: Programa al Agent para despejar el camino del jugador.
      MC_HOC_2017_09_Kiki_instruction: Programa al Agent para despejar el camino del jugador y llegar a la placa de presión.
      MC_HOC_2017_10_Cole_instruction: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_Cole_old_instruction: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_Kiki_instruction: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_RETRY_instruction: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_RYAN_instruction: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_RYAN2_instruction: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_13_Cole_instruction: "**Improvisación:**  ¡Es hora de explorar por tu cuenta!"
      MC_HOC_2017_4.5v2_instruction: Lleva al Agent a la placa de presión.
      MC_HOC_2017_Ali_instruction: Usa las funciones para encontrar un modo de cruzar la lava.
      MC_HOC_2017_FP10x10_instruction: "**Improvisación:** ¿Puedes ponerte el desafío de recoger todos los diamantes de este nivel?"
      MC_HOC_2017_FP10x10_RE_instruction: "**Improvisación:** ¿Puedes ponerte el desafío de recoger todos los diamantes de este nivel?"
      MC_HOC_2017_FP20x20_instruction: "**Improvisación:**  ¡Es hora de explorar por tu cuenta!"
      MC_HOC_2017_Ryan_03_instruction: Ahora usa bucles para ayudar al Agent a construir un puente sobre el río colocando bloques en el agua.
      MC_HOC_2017_Ryan_05_instruction: Destruye estos cactus para que el jugador pueda llegar a la meta.
      MC_HOC_Kiki_02_instruction: Lleva al Agent a la placa de presión.
      MSM Big Game Empty_instruction: All variables and functions are currently empty stubs. Each puzzle progression will be focused on defining and handful of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: In the Variables toolbox you'll see several variables that define how your game characters look, move, and interact
      MSM Big Game Vars 1_instruction: In the Variables toolbox you'll see several variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: In the Variables toolbox you'll see several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: Write a program that produces a 50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: Write a program that produces a 50 pixel solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: If we wanted to make fifty green triangles, it would be a pain to repeat that block of code 50 times. Let's create a variable called "my-shape" and put the code for a 50 pixel solid green triangle inside.
      MSM Defining Vars 2_instruction: If we wanted to make fifty green triangles, it would be a pain to repeat that block of code 50 times. Let's create a variable called my-shape and put the code for a 50 pixel solid green triangle inside.
      MSM Defining Vars 3 (copy 1)_instruction: Take your "my-shape" variable and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: Take your my-shape variable and use it with this provided code to draw two identical green triangles that are 50 pixels in size.
      MSM Defining Vars 4_instruction: Edit your my-shape variable so that it draws 75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: Help Sam stay on the screen so that you can always see at least a little piece of him. Using the arrow keys, see how far Sam can go to the left while still staying onscreen. You’ll find that Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: Now make Sam stay on the right side of the screen. You'll have to experiment to see how far he can go and still be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: Now, combine your work to make Sam stay on both sides of the screen.
      MSM Play Lab Game 2_instruction: Variables can also be used to control the speed of players in a game. Set the player speed and the enemy speed and see how the movement changes. Speed can be between 2 and 12.
      Middle School Hackathon Pt 1_instruction: "(Click to see full instructions)"
      Middle School Hackathon Pt 2_instruction: "(Click to see full instructions)"
      Mike Pair Programming_instruction: Here are the instructions
      Mike Test Bee Conditionals 1_instruction: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      Mike Test Bee Conditionals 2_instruction: Collect all of the nectar. You can only collect nectar from flowers, but you can check any space to see if there is a flower.
      MikeAssessment1_instruction: Now do it right!
      MikeStar_instruction: Draw this.
      MikeStarHard_instruction: Draw this.
      MikeStarNested_instruction: Draw this.
      MikeTest1_instruction: Who knows what you should do?!?!
      MikeTest2_instruction: Draw something!
      MikeTest3_instruction: Build Something
      NEW Course 4 Artist Functions 1_instruction: '¿Puedes dibujar un cuadrado de 100 píxeles de largo usando un ciclo?'
      NEW Course 4 Artist Functions 10.1_instruction: Use las funciones de los puzzles anteriores para dibujar este patrón.
      NEW Course 4 Artist Functions 10_instruction: Haz clic en "editar" para llenar los bloques en la definición de la función, para hacer un cuadrado de 40 píxeles.
      NEW Course 4 Artist Functions 11_instruction: Tenemos una nueva función llamada "dibuja una fila de cuadrados". Puedes mirar dentro del bloque de función para entender cómo la construimos. Haz clic en "Ejecutar" cuando estés listo/a para el siguiente ejercicio.
      NEW Course 4 Artist Functions 12_instruction: Utiliza la función "trazar una línea de cuadrados" del rompecabezas anterior para trazar este patrón.
      NEW Course 4 Artist Functions 13_instruction: '¿Puede dibujar la forma de una estrella usando la función "traza una línea de cuadrados"? Te daré una pista: puedes avanzar 60 píxeles y girar 144 grados'
      NEW Course 4 Artist Functions 14_instruction: '¡Tiempo de juego libre!'
      NEW Course 4 Artist Functions 2_instruction: '¿Puedes dibujar 3 cuadrados de 20 píxeles separado uno del otro? Sugerencia: cada cuadrado es de una medida de 100 píxeles '
      NEW Course 4 Artist Functions 3_instruction: "Aquí está el nuevo tipo de Bloque. Es llamado \"Bloque función\". Haga clic en \"Ejecutar\" para ver qué pasa."
      NEW Course 4 Artist Functions 4_instruction: 'Utiliza la función "dibujar un cuadrado" para dibujar este patrón. Pista: tendrás que usar un bloque "girar a la derecha 120 grados" después de cada cuadrado.'
      NEW Course 4 Artist Functions 5_instruction: '¿Cómo sabía el bloque "dibujar un cuadrado" qué comandos ejecutar? Haz clic en "Editar" en el bloque de función "dibujar un cuadrado". Los bloques en el editor de la función son la definición de lo que lleva a cabo "dibujar un cuadrado". Cuando hayas terminado, haz clic en "Guardar y Cerrar" y luego en "Ejecutar".'
      NEW Course 4 Artist Functions 6_instruction: '¿Puedes dibujar esta imagen usando la función "dibujar un cuadrado"? Pista: cada cuadrado está separado por 20 píxeles.'
      NEW Course 4 Artist Functions 7_instruction: '¿Estás comenzando a entender cómo usar los bloques de función? Modifiquemos este cuadrado para que mida 200 píxeles. Sugerencia: haz clic en "editar" para cambiar el tamaño del editor de la función "dibujar un cuadrado". Recuerda hacer clic en "guardar y cerrar" para salir del editor de la función. '
      NEW Course 4 Artist Functions 8_instruction: Te hemos dado la mayoría del código para crear una función. Sin embargo, parece que falta algo. ¿Puedes editar la definición de la función para dibujar el triángulo?
      NEW Course 4 Artist Functions 9_instruction: '¿Qué bloque necesitas añadir para conseguir que el triángulo se ponga encima del cuadrado?'
      NEW Course 4 Artist Functions inspire_instruction: 'Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita https://studio.code.org/c/106387604 para la solución.'
      NEW Course 4 Artist Params 1_instruction: Vamos a definir esta función para dibujar un cuadrado con lados de 50 píxeles. Haz clic en "editar" para empezar.
      NEW Course 4 Artist Params 10_instruction: 'Crea un bloque de función "dibujar un hexágono" con un parámetro de longitud. Pista: este hexágono tiene 100 píxeles de tamaño. '
      NEW Course 4 Artist Params 11_instruction: '¿Puedes averiguar cómo dibujar esta forma? Edita la función para usar el parámetro "lados".'
      NEW Course 4 Artist Params 12_instruction: '¿Puedes completar este dibujo? Los lados de todas las formas son 100 píxeles de largo.'
      NEW Course 4 Artist Params 12a_instruction: Esta imagen es similar a la última. ¿Se puede utilizar un "ciclo for" con tu función para hacer este diseño?
      NEW Course 4 Artist Params 13_instruction: "Vamos a editar esta función \"dibujar una forma\". Ya tiene un parámetro de \"longitud\". Ahora, vamos a editar la función para añadir también un parámetro \"lados\". Recuerda que el ángulo para girar una forma determinada es 360 dividido por la cantidad de lados que tiene. Sugerencia: las longitudes para cada forma son: el triángulo es de 100 píxeles, el hexágono es de 25 píxeles y el cuadrado es de 50 píxeles."
      NEW Course 4 Artist Params 14_instruction: '¿Puedes recrear estas formas? Arrastra el parámetro "longitud" en la definición de función. '
      NEW Course 4 Artist Params 15_instruction: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      NEW Course 4 Artist Params 2_instruction: Create a `draw triangle` function from scratch that makes a triangle with  50 pixel sides.
      NEW Course 4 Artist Params 3_instruction: 'Ahora vamos a utilizar la función para dibujar tres triángulos desde el último puzzle en una fila. Sugerencia: cada triángulo tiene 50 píxeles de separación.'
      NEW Course 4 Artist Params 4_instruction: '¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.'
      NEW Course 4 Artist Params 5_instruction: 'Llena en el ??? en el bloque de entrada del parámetro de longitud. Sugerencia: El Pentágono es de 100 píxeles de tamaño. '
      NEW Course 4 Artist Params 6_instruction: Llena el parámetro "longitud" para dibujar estas formas sustituyendo el "???" con los números correctos. El cuadrado y el triángulo son de 100 píxeles de tamaño mientras que el hexágono es de 75 píxeles de tamaño.
      NEW Course 4 Artist Params 7_instruction: '¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles más grande que el último. El primer triángulo es de 25 píxeles de tamaño.'
      NEW Course 4 Artist Params 8_instruction: '¿Puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50 y el tercero es de 75. Sugerencia: comienza haciendo clic en "Editar" en tu bloque de función.'
      NEW Course 4 Artist Params 9_instruction: 'Haz clic en "Editar" para completar la definición de la función "dibujar un cuadrado" y agrega un parámetro. Debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez, dibuja 3 cuadrados: de 25, 50 y 75 píxeles de largo, separados por 100 píxeles.'
      NEW Course 4 Artist Params inspire_instruction: "Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita https://studio.code.org/c/106387604 para la solución."
      NEW Course 4 Artist Vars 1.5_instruction: 'Echa un vistazo al código, ¿puedes ver cómo los bloques "establecer longitud" y "longitud" trabajan juntos? Haz clic en "Ejecutar" para verlo en acción. '
      NEW Course 4 Artist Vars 12_instruction: Modifica este algoritmo para que utilice la variable "lados" en lugar de un número fijo para dibujar un pentágono. Reemplaza el número 5 con la variable "lados" y usa el bloque "establecer lados".
      NEW Course 4 Artist Vars 2.5_instruction: 'Echa un vistazo al código, ¿puedes ver cómo los bloques "establecer longitud" y "longitud" trabajan juntos? Haz clic en "Ejecutar" para verlo en acción. '
      NEW Course 4 Artist Vars 2_instruction: 'Arrastra un bloque de número hasta el bloque "establecer longitud" para dibujar un conjunto de triángulos de 50 píxeles.'
      NEW Course 4 Artist Vars 4 5_instruction: Impresionante trabajo en el último puzzle, vamos a intentarlo de nuevo, esta vez vamos a hacer este diseño cool con un hexágono de 60 píxeles.
      NEW Course 4 Artist Vars 4_instruction: "Vamos a intentarlo otra vez. Ahora, vamos a hacer este diseño cool con un hexágono de 60 píxeles."
      NEW Course 4 Artist Vars 6_instruction: "¿Me puedes ayudar a dibujar este patrón cool dejando caer el bloque de variable \"longitud\" en los lugares correctos?"
      NEW Course 4 Bee For Loops 1_instruction: Utiliza un bucle para recolectar el néctar de cada flor.
      NEW Course 4 Bee For Loops 10_instruction: Usa tu variable "contador" de bucle para el controlar qué tan lejos debe moverse horizontalmente.
      NEW Course 4 Bee For Loops 10a_instruction: '¿Listo para un desafío? Toma lo que has aprendido sobre ciclos y trata de solucionar este problema. Recuerda: puedes tener que ejecutar la solución varias veces antes de averiguar todos los pasos.'
      NEW Course 4 Bee For Loops 11_instruction: '¿Puedes utilizar la variable de bucle para controlar el movimiento y la recolección del néctar?'
      NEW Course 4 Bee For Loops 2_instruction: Agrega el código necesario para asegurarte de que la abeja recolecta todo el néctar. ¡Mira cuánto código necesitas para este puzzle! (Aprenderemos una manera más simple en el siguiente puzzle).
      NEW Course 4 Bee For Loops 3_instruction: '¡Ah, el de bucle for hace esto mucho más fácil! Todo el código que necesitas está allí, echa un vistazo a cómo se colocan juntos, luego haz clic en "Ejecutar" para ver cómo funciona. '
      NEW Course 4 Bee For Loops 4 4_instruction: '¿Puedes ayudar a la abeja a recolectar el resto de la miel utilizando este bucle for? '
      NEW Course 4 Bee For Loops 4_instruction: 'Reemplaza el ??? en el bucle for con la mayor cantidad de néctar que la abeja debe recoger. '
      NEW Course 4 Bee For Loops 5 5_instruction: '¿Has comprendido el truco al bucle "for"? Vamos a ayudar a la abeja a obtener el resto del néctar.'
      NEW Course 4 Bee For Loops 5_instruction: También puedes utilizar un bucle para contar hacia atrás. Trata de recoger este néctar por la cuenta regresiva del 5 al 1 por 1.
      NEW Course 4 Bee For Loops 6_instruction: El último número en tu bucle for se llama el "incremento", y cada vez que el bucle se ejecuta la variable contador cambia al incrementarse. Trata de recoger estas flores con un incremento de 2.
      NEW Course 4 Bee For Loops 7_instruction: |-
        ¿Estás comprendiendo el truco a los bucles? Esto es parecido al último puzzle, pero tienes que conseguir 2, 4, 6, 8,10 de néctar. Ya tienes el código de arranque, excepto los números en los bucles del contador. ¡Vamos a recoger algo de néctar!
      NEW Course 4 Bee For Loops 8_instruction: Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar?
      NEW Course 4 Bee For Loops 9_instruction: Si tu ciclo es regresivo, se resta el incremento de la variable contador en cada bucle. ¿Lo que debería ser un incremento a recoger néctar 9, luego 6 y 3?
      NEW Course 4 Bee For Loops 95_instruction: Echa un vistazo a cada pieza del ciclo "for" que acabas de crear. ¿Puedes averiguar qué números necesitas multiplicar por dos para resolver este rompecabezas? ¿Por qué funciona?
      NEW Course 4 Play Lab Params 11_instruction: '¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. '
      NEW Course 4 Play Lab Params 5 5_instruction: Introducir entradas de parámetro de actor con los números (1, 2 y 3) para hacer de estos actores patrulla. 
      NEW Course 4 Play Lab Vars 4 5_instruction: "\"¿Qué piensas que este código realizará? Presiona \"Ejecutar\" para ver qué ocurre\"."
      NEW Course 4 Play Labs For Loops 7a_instruction: Usando lo que has aprendido hasta ahora, ¿puedes hacer al dinosaurio dar un paso adelante cada vez que el pingüino cuenta?
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: 'Es hora de jugar libremente, diviértete con todos los bloques de tu caja de herramientas.'
      NEW Course 4 Play Labs For Loops 8a_instruction: 'Desafío: ¿Cómo utilizas el ciclo for para lograr que todos los actores den la vuelta, digan su número de actor y desaparezcan de la pantalla? '
      NetSim Standalone Automatic DNS_instruction: In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast_instruction: 'In this version of the Internet Simulator, you can connect to up to 5 other people in a room. When you send messages in the room, everyone receives them. What are some of the challenges of this system, and how might you solve them?  '
      NetSim Standalone Classroom Routers_instruction: In this version of the Internet Simulator, everyone connects to a router and has a specific address. To send messages, you have to address your message to the specific address of the recipient, and the router will take care of delivering it to the right computer. If there are other routers created in your class, ask for the address of one of your classmates and send them a message! View the Log Router to see the path the messages have taken through the network.
      NetSim Standalone Freeplay_instruction: In this configuration, most of the options are turned on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS_instruction: In this version of the simulator you can't see the other students' addresses.  Instead, one of you must act as a name service, to help share addresses with each other.
      NetSim Standalone Packets TCP_instruction: 'Messages on the Internet can take many paths to get to their destination, and sometimes along the way the message gets dropped. In this version of the Internet Simulator, there is a 10% chance of a packet being dropped, multiple packets may take different paths to the destination, and the default max packet size is set to 6 additional characters. '
      NetSim Standalone Routers Addresses_instruction: |-
        For this activity, connect to a router with the others in your group. Important note: The router will only properly route messages where the first 4 bits are the To: address and the second 4 bits are the From: address.
        
        [TODO: NetSim needs to support hierarchical addresses. For now, level is set up for 4 bit to and from addresses]
      NetSim Standalone SendAB_instruction: You and your partner share a single wire that can only be in state A or state B. You can set the wire to either state at any time, and you can read the state of the wire at any time. Can you figure out a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers Ascii_instruction: 'Now that you''ve transmitted information represented as decimal numbers, you can map those numbers to text characters to send text-based information back and forth. With a text-based protocol, you can easily represent and communicate all kinds of information. '
      NetSim Standalone Sending Numbers_instruction: 'You and your partner can now reliably send messages back and forth without extra coordination! While you''re always sending bits back and forth, you can also represent those bits as decimal numbers. What kinds of information can you represent with this system? '
      NetSim_AddressingMessages_instruction: In this version of the simulator, you will connect to a Router instead of directly to another student. Enter an address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: In this version of the simulator a DNS service is provided for you. Send a message in the form GET [hostname] to the DNS service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: In this version of the simulator you can't see the other students' addresses.  Instead, one of you must act as a name service, to help share addresses with each other.
      NetSim_SendAB_instruction: Connect to another student.  Each of you can set the value of the wire between you to "A" or "B".  See if you can send a complete message!
      NetSim_SendAscii_instruction: In this version of the simulator, you can send numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: Connect to another student.  You can now set your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendNumbers_instruction: In this version of the simulator, you can view the decimal representations of the binary you are sending.
      NetSim_SendingABTest_instruction: This is Sarah's test of making a netsim level
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: 'NetSim: Variant 1 allows students to manually work out the timing of sending bits back and forth.'
      NetSim_Variant2_instruction: 'NetSim: Variant 2: Students connect directly to one another and send entire packets back and forth, exploring systems of encoding data.'
      NetSim_Variant3_instruction: 'NetSim: Variant 3: Connects groups of 2-6 students with a router, and explores issues in routing and DNS'
      New Artist Project_instruction: '¡Dibuja algo impresionante! Tu código ha sido guardado como un proyecto al que puedes regresar en cualquier momento.'
      New Basketball Project_instruction: Create your own Basketball game. You can change all the rules. When you're done, click Finish to let friends try your game on their phones.
      New Bounce Project_instruction: Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones.
      New Course 4 Artist Functions Level 4_instruction: Usa la función "dibujar un cuadrado" para dibujar este patrón.
      New Gumball Project_instruction: '¡Crea cualquier cosa que desees compartir!'
      New Ice Age Project_instruction: '¡Crea cualquier cosa que desees compartir!'
      New Infinity Project_instruction: '¡Crea cualquier cosa que desees compartir!'
      New Minecraft Hero Project_instruction: "**Improvisación:**  ¡Es hora de explorar por tu cuenta!"
      New Sports Project_instruction: 'Create your own game! You''re in charge here: you can change all the rules, mix and match sports, get creative! When you''re done, click Finish to let friends try your game on their phones.'
      Ninjacat Demo B (copy 1)_instruction: "\nLet’s begin by exploring a simple videogame, and then figuring out how it works. You can use the arrow keys to move the ninja left, right and jump - try to catch the unicorn and avoid the dragon!\n\n\n\n  \n\n"
      Ninjacat Demo B_instruction: Let’s begin by exploring a simple videogame, and then figuring out how it works. You can use the arrow keys to move the ninja up and down - try to catch the unicorn and avoid the dragon! When you think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: Let’s begin by exploring a simple videogame, and then figuring out how it works. You can use the arrow keys to move the ninja up and down - try to catch the unicorn and avoid the dragon! When you think you've figured out how the game works, click "Finish"
      October15 JoL 1_instruction: Program the artist to design a face for your jack-o-lantern!
      October15 bat_instruction: 'Freeplay: Here are some functions to play with.  Can you draw a bat?  '
      October15 ghost 1_instruction: Give the ghost eyes, using the "draw a circle" function.
      October15 pumpkin 1_instruction: Finish this jack-o-lantern by drawing the eyes and nose in any style you would like.
      October15 stars 1_instruction: Use loops and the "random integer" block to fill the night sky with stars of different shapes and sizes.
      Overworld Avoid Monsters_instruction: Ir contra un Creeper no es buena idea. Evítalos con cuidado y llega a casa para estar a salvo.
      Overworld Avoid Monsters_2018_instruction: Ir contra un Creeper no es buena idea. Evítalos con cuidado y llega a casa para estar a salvo.
      Overworld Chop Tree - allthethings_instruction: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Tree_instruction: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Tree_2018_instruction: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Trees_instruction: Necesitamos construir una casa antes de que se ponga el sol. Las casas necesitan mucha madera. Tala los tres árboles.
      Overworld Chop Trees_2018_instruction: Necesitamos construir una casa antes de que se ponga el sol. Las casas necesitan mucha madera. Tala los tres árboles.
      Overworld Free Play 20x20_instruction: '¡Felicitaciones! Has completado todos los rompecabezas. Ahora extrae recursos, construye y crea algo único con todo lo que has aprendido.'
      Overworld Free Play 20x20_2018_instruction: '¡Felicitaciones! Has completado todos los rompecabezas. Ahora extrae recursos, construye y crea algo único con todo lo que has aprendido.'
      Overworld House Frame Chosen_instruction: Construye el resto de tu casa de cualquier material que desees. El comando "repetir" va a venir bien.
      Overworld House Frame Chosen_2018_instruction: Construye el resto de tu casa de cualquier material que desees. El comando "repetir" va a venir bien.
      Overworld Move to Sheep_instruction: Añade un segundo comando "avanzar" para llegar a la oveja.
      Overworld Move to Sheep_2018_instruction: Añade un segundo comando "avanzar" para llegar a la oveja.
      Overworld Place Wall_instruction: Cada casa comienza con un muro. Construye la primera parte colocando los comandos "colocar" y "avanzar" en el bucle de repetición.
      Overworld Place Wall_2018_instruction: Cada casa comienza con un muro. Construye la primera parte colocando los comandos "colocar" y "avanzar" en el bucle de repetición.
      Overworld Plant Crops_instruction: Es bueno planificar. Planta cultivos a ambos lados del agua para no pasar hambre después.
      Overworld Plant Crops_2018_instruction: Es bueno planificar. Planta cultivos a ambos lados del agua para no pasar hambre después.
      Overworld Powered Minecart_instruction: '¡Buen trabajo! Has reunido muchos recursos y ya tienes una casita. Ahora, coloca un raíl desde el extremo del mapa a la puerta de tu hogar.'
      Overworld Powered Minecart_2018_instruction: '¡Buen trabajo! Has reunido muchos recursos y ya tienes una casita. Ahora, coloca un raíl desde el extremo del mapa a la puerta de tu hogar.'
      Overworld Shear Sheep_instruction: '¡Hora de esquilar! Usa el comando "esquilar" para obtener lana de ambas ovejas.'
      Overworld Shear Sheep_2018_instruction: '¡Hora de esquilar! Usa el comando "esquilar" para obtener lana de ambas ovejas.'
      PDAlg 13-16 Sam Extension Puzzle_instruction: Add a second parameter to "onscreen?" for Sam's y coordinate and update the function so it keeps him safe on all four sides.
      PDAlg 17-20 Luigi Extension Puzzle_instruction: Without modifying your existing "cost" function, create a new "coupon" function that takes a pizza topping and coupon code and returns the cost of a pizza with that topping. If the coupon code is correct (you get to decide what it is), apply a 30% discount to the pizza.
      PDAlg 8-12 Rocket Height Puzzle_instruction: Let's write a "rocket-height" function with simple acceleration. Write a function that ensures the rocket is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      PDAlg 8-12 ex dr 1_instruction: The definition in this Design Recipe doesn't match both examples. Test each example to see which is failing, and then fix the definition to match.
      PDAlg 8-12 ex dr 2_instruction: This student has created two examples for the function "apples" but something's not quite right. How would you direct this student to correct their mistake?
      PDAlg Big Game History_instruction: Now that you've played through a Big Game level you should see a new entry in your history. Click the Version History button and you should see at least one version. Each time you go back to a Big Game level you'll get a new record in your version history that you can revert back to.
      PDAlg Big Game Remix_instruction: |-
        Here's your Big Game as you last left it. Try clicking the Remix button to spin off a new remix of your project.
        
        Any changes you make after you click Remix will be saved on your new remix and not on your main Big Game.
      PDAlg Design Recipe Delete_instruction: Click the delete button to get rid of this function, then try creating and deleting a few of your own.
      PDAlg Design Recipe Examples_instruction: The definition in this Design Recipe doesn't match both examples. Test each example to see which is failing, and then fix the definition to match.
      PDAlg Design Recipe Required_instruction: Complete the Design Recipe for the "eggs" function, making sure to create and test your examples.
      PDAlg Updates Cond_instruction: When you went to PD in the summer, the Conditional block that you were introduced to was black and allowed any data type to be used. This proved to be confusing, given that every other function we've seen always produces the same type of data. To help make conditionals clearer and more consistent we've replaced the single black block with a separate block for each data type.
      PDAlg Updates Errors_instruction: Run the provided program and use the error messages to try and track down the bugs.
      PDAlg Updates Space_instruction: Making use of limited programming space (especially on small screens) is challenging with a block based language. To help with this we've added a few features. Experiment with this provided code to see how the space can be manipulated to deal with larger programs.
      PDK5 Conditionals 1_instruction: Purple flowers may have either 1 or 0 nectar, but you don't know which one! Be careful not to collect nectar from a purple flower if it doesn't have any. Check if the nectar is equal to 1 by using the if block.
      PDK5 Conditionals 2_instruction: 'Try this puzzle that uses conditionals and loops together. Use the "if" block to decide when to turn. Hint: you only need one more block to complete this puzzle. '
      PDK5 Events 1_instruction: 'So far all of the programs we''ve written are executed in order from top to bottom. In this puzzle, we''ll use "Events" to respond to an action on demand. Make the octopus say "Hello" only when you click on the Octopus. '
      PDK5 Functions 1_instruction: 'Hello. Me zombie artist. Me love drawing! Help me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels shorter than the square length.'
      PDK5 Functions 2_instruction: '¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada "dibuja un cuadrado". ¿Puedes utilizar la función "dibuja un cuadrado" para crear los lentes? Los cuadrados están separados por 75 píxeles.'
      PDK5 Loops 1_instruction: 'Instead of using 5 "move forward" blocks, use the "repeat" block with a "move forward" block inside of it. In computer science, this is called a "loop." '
      PDK5 Loops 3_instruction: Here's another puzzle to practice loops. What happens if you use the repeat block to run the code already provided on the workspace 4 times?
      PS - test - pixelation_instruction: Complete the X shape by typing 0s and 1s
      PS FR test 7-25_instruction: 'Here are your instructions for this free response.  '
      PS Log test - Define and use turnAround_instruction: Define a function called turnAround. Call the function and then move the turtle forward. (Click to see full instructions)
      PS copy 2-3 Bee Conditionals 5_instruction: "¡Flores de color púrpura pueden tener 1 o 0 néctar, pero no sabes cuál! Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno. Compruebe si el néctar es igual a 1 utilizando el bloque if."
      PS predictive Applab level test_instruction: 'Here are some instructions. '
      Pattern Bee 1_instruction: What a strange field of goodies! I wonder if there's a pattern here...
      Pixelation - AllTheThings 4_instruction: Este nivel de pixelación demuestra el uso de la opción `ocultar_controles_codificacion`. Tenga en cuenta que el nivel muestra los datos de imagen en hexadecimal y no le permite volver a convertirlo en binario.
      Pixelation - AllTheThings 5_instruction: Este nivel de pixelación demuestra el uso de la opción "Ocultar controles deslizantes". Tenga en cuenta que los controles deslizantes de ancho y alto no están disponibles, y los campos de ancho y alto no son editables.
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: 'Something happened to the bits in this image! Find the error and fix it! Hint: a few extra bits were added. You should only need to remove some bits.'
      Pixelation - Lesson 14 - Fix bit offset_instruction: A single extra bit was inserted into the stream of bits that make up the C of the Code.org logo. That extra bit bumps all of the other bits down the line which makes the logo look messed up. Hunt down the extra bit and remove it to fix the Code.org logo.
      Pixelation - Lesson 14 - Fix bit offset_2018_instruction: A single extra bit was inserted into the stream of bits that make up the C of the Code.org logo. That extra bit bumps all of the other bits down the line which makes the logo look messed up. Hunt down the extra bit and remove it to fix the Code.org logo.
      Pixelation - Lesson 14 - Fix the error_instruction: 'Something happened to the bits in this image!  Find error and fix it!  Hint: a few extra bits were added.  You should only need to remove some bits.'
      Pixelation - Lesson 14 - Make the Letter A_instruction: 'Make a 3x5 letter ''A''. The widget is setup with the incorrect dimensions. Your first task is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then start entering pixel data.'
      Pixelation - Lesson 14 - Make the Letter A_2018_instruction: 'Make a 3x5 letter ''A''. The widget is setup with the incorrect dimensions. Your first task is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then start entering pixel data.'
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: Now make your own image! We've started you off with a 10x10 canvas but you can make it whatever size you want. Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: Now make your own image! We've started you off with a 10x10 canvas but you can make it whatever size you want.  Happy pixeling!
      Pixelation - Lesson 15 - Color Free Play_instruction: 'Requirements: The icon must be 16x16 pixels. You must use the Pixelation Widget to encode the bits of color information. The image must be encoded with at least 12 bits per pixel.'
      Pixelation - Lesson 15 - Color Shades 4x4_instruction: 'We start you out with the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4 - shades of gray.'
      Pixelation - Lesson 15 - Color Shades 4x4_2018_instruction: 'We start you out with the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4 - shades of gray.'
      Pixelation - Lesson 15 - Color Shades_instruction: We start you out with the row of shades of red that Maddie created in the video. Experiment with 6-bit color by filling in the bottom row of the image with shades of a different color. Here is an example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Color Shades_2018_instruction: We start you out with the row of shades of red that Maddie created in the video. Experiment with 6-bit color by filling in the bottom row of the image with shades of a different color. Here is an example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Complete 3-bit color_instruction: We start you with the 4x2 image Maddie was creating, but we've left out the last two squares. Finish off the image by figuring out which two colors are missing and encode them.
      Pixelation - Lesson 15 - Complete 3-bit color_2018_instruction: We start you with the 4x2 image Maddie was creating, but we've left out the last two squares. Finish off the image by figuring out which two colors are missing and encode them.
      Pixelation 2_instruction: Something happened to the bits in this image!  Find error and fix it!
      Pixelation 4x4 Empty_instruction: The width and height are now encoded in the pixel data. Can you figure out how to adjust the dimensions?
      Pixelation Bee_instruction: 'This larger image of a bee encodes color with 12 bits per pixel, but viewing in hex makes it easier to see the color of each pixel. If you switch to binary mode - hold on to your hat - it''s a lot of bits. Here''s another mind-blowing thing to try: slide the bits per pixel up to 24 bits per pixel. What happens? Can you explain this behavior?'
      Pixelation Bee_2018_instruction: 'This larger image of a bee encodes color with 12 bits per pixel, but viewing in hex makes it easier to see the color of each pixel. If you switch to binary mode - hold on to your hat - it''s a lot of bits. Here''s another mind-blowing thing to try: slide the bits per pixel up to 24 bits per pixel. What happens? Can you explain this behavior?'
      Pixelation Flappy_instruction: Here is a bigger image at 9 bits per pixel. With 9 bits per pixel you can express 512 different colors. Click through to see the next image which is even more sophisticated, but easier to understand.
      Pixelation Flappy_2018_instruction: Here is a bigger image at 9 bits per pixel. With 9 bits per pixel you can express 512 different colors. Click through to see the next image which is even more sophisticated, but easier to understand.
      Pizza on a Plate_instruction: 'Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!'
      Planning Farmer_instruction: What a strange field of goodies! I wonder if there's a pattern here...
      Planter Test_instruction: Help me plant my fields!
      Play Lab Rocket 1_instruction: A rocket blasts off, traveling at 15 meters per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2_instruction: We've started the Design Recipe for rocket-height using the contract and examples you just wrote. Complete the function definition for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: A rocket blasts off, traveling at 15 meters per second. Using the Design Recipe, write a function called rocket-height that takes in a number of  seconds that have passed since the rocket took off, and produces the height of the rocket at that time.
      Play Lab Rocket 3_instruction: Awesome, now can you update that function so that our rocket moves more quickly? Make sure to update the purpose statement, examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: Real rockets start off slowly and gain speed over time - let's make ours do the same! Write an exponential function that describes a rocket that travels at "seconds" squared meters per second.
      Play Lab Rocket 4_instruction: Real rockets start off slowly and gain speed over time - so let's add some simple acceleration to ours! Can you write a function that describes a rocket that is at 10 meters at 1 second, 40 meters at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: Much better, but let's write one more function with simple acceleration. This time the rocket should be 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: 'Free Play: Experiment with your rocket-height function to make the rocket fly in different ways. Click "Finish" when you are done.'
      Poorva copy U3L2 Using Simple Commands_instruction: Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.
      Poorva-test_instruction: Here are regular instructions for a level. There is nothing fancy going on here.
      Practice Create Performance Task_instruction: Design and implement your practice Create Performance Task. (Click to see full instructions)
      Practice Create Performance Task_2018_instruction: Design and implement your practice Create Performance Task. (Click to see full instructions)
      Project - Final Image Scroller_instruction: Update the image scroller to respond to buttons and key presses. (Click to see full instructions)
      Project - Final Image Scroller_2018_instruction: Update the image scroller to respond to buttons and key presses. (Click to see full instructions)
      Project - Finish your canvas app_instruction: Extend the functionality of one of the effects, or create an entirely new one of your own. (Click to see full instructions)
      Project - Make Your Own Clicker Game_instruction: Complete your clicker game! (Click to see full instructions)
      Project - Your Own Multi Screen App_instruction: Create your multi-screen app. (Click to see full instructions.)
      Project - Your Own Multi Screen App_2018_instruction: Create your multi-screen app. (Click to see full instructions.)
      Prompt Test_instruction: Build whatever you want. This is an example of a number-guessing game!
      Quantum Bee - Ryan_instruction: Estas nubes me están molestando! Algunas de las nubes tienen flores dentro, y otras no. Debo comprobar cada nube y obtener el néctar sólo de las flores.
      Quantum Bee_instruction: '¡Las flores moradas pueden tener un tipo de néctar de 1 ó 0, pero tu no sabes cuál! Ten cuidado de no recolectar el néctar de una flor morada sin néctar. Revisa si el valor del néctar es igual a 1 usando el bloque “if”.'
      Robot Doodle_instruction: 'Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!'
      Robot Doodle_2018_instruction: 'Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!'
      Robot Drawing_instruction: 'Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!'
      Robot_instruction: 'Project Idea: Create a picture of something familiar from the real world. This requires persistence and planning!'
      Rocket Height Course A_instruction: Follow the Design Recipe to create a function rocket-height.
      Ryan - 4-5 Bee Conditionals 2_instruction: La abeja sólo quiere néctar ahora. No todos los objetos son flores, así que compruebe debajo de cada nube para ver si está ocultando una flor. Si es así, puede recolectar néctar.
      Ryan - Bee Conditionals_instruction: La abeja sólo quiere néctar ahora. No todos los objetos son flores, así que mira debajo de TODAS LAS NUBES para verlo si está escondiendo una flor. Si es así, puedes recolectar néctar.
      Ryan Doily Step 1_instruction: Now we're going to draw a doily step by step. First, draw a square.
      Ryan Doily Step 2_instruction: Now you need to turn and repeat it 20 times! How many degrees do you turn to get 360 after 20 iterations?
      Ryan Doily Step 3_instruction: Now you need to turn and repeat it 20 times! How many degrees do you turn to get 360 after 20 iterations?
      Ryan Test Locked Blocks_instruction: Aquí hay una función denominada "patrulla". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles.
      Ryan's clone of C4S15P10_instruction: "We've added one last function for you. \n\nUse an \"if\" statement to program your game to call the \"level_up\" function only when \"player_score\" becomes greater than a certain number.\n\nFor example: \"player_score\" > 6\n\nPlay the game, and make it past level 4 to move to the next puzzle. "
      RyanTest3_instruction: '¡Este nivel tiene activado el cambio de forma! Actualiza para ver diferentes variantes.'
      SG Add Subgoals practice_instruction: Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)
      SG U3L03 - draw rect function_instruction: |-
        Write a function called drawRectangle().
        (Click to see full instructions)
      SG U3L03 - draw step_instruction: Write the drawStep function. (Click to see full instructions)
      SG U3L03 Define and use turnAround_instruction: Define a function called turnAround. Call the function and then move the turtle forward. (Click to see full instructions)
      SG U3L03 Draw a T using turnAround_instruction: Draw a plus sign using the provided version of turnAround().  (Click to see full instructions)
      SG U3L03 Three Steps_instruction: Define a function called drawSide() which draws three steps and moves the turtle to prepare for the next side (Click to see full instructions)
      SG U3L03 define turnRight and draw a rectangle_instruction: Define a function called right() that turns the turtle to the right. Then use this function to draw a rectangle, as shown below. (Click to see full instructions)
      SG U3L03 draw diamond_instruction: Create a function called drawDiamond() that makes use of your previous work to draw the complete diamond. (Click to see full instructions)
      SG U3L04 - 3 by 3 with functions_instruction: Make the 3x3 square as efficiently as you can. (Click to see full instructions)
      SG U3L04 - snowflake_instruction: Create the design by breaking it down into layers of functions. (Click to see full instructions)
      SG U3L06 - moveForwardwithParams_instruction: Use a single command to move the turtle to the edge of the screen. (Click to see full instructions)
      SG U3L06 Challenge 1 triangle_instruction: Use the parameterized versions of the turtle commands to create a triangle with sides 100 pixels long. (Click to see full instructions)
      SG U3L06 Challenge 2 purple square_instruction: Read the documentation for penColor() and penWidth() before using them to draw the blue square.
      SG U3L06 Challenge 3 fill pink_instruction: Fill in the background of the screen with your favorite color. (Click to see full instructions)
      SG U3L06 Challenge 4 bullseye_instruction: Create the bullseye using hexadecimal colors and dot(). (Click to see full instructions)
      SG U3L06 Challenge 5 overlapping circles_instruction: 'This image is created just using dot() and penColor() but, how are we going to get those circles to be transparent?  If you haven''t gotten the hint yet: check out the documentation!'
      SG U3L06 Challenge 6 squiggles_instruction: 'Read the documentation for the "arcLeft" and "arcRight" commands and then draw the squiggles as shown. '
      SG U3L06 Challenge 7 smiley face_instruction: Use turnTo() and moveTo() to help draw a smiley face. (Click to see full instructions)
      SG U3L06 Challenge 8 make your own_instruction: Create a drawing of your own. (Click to see full instructions)
      SG U3L07 - Free Play Loops and Random_instruction: Free Play! Use what you learned from loops and random to make your own little scene. Have fun.
      SG U3L07 - allSeaGrass_instruction: Add 50 pieces of seagrass to the image by writing drawAllSeagrass with a loop. (Click to see full instructions)
      SG U3L07 - bubbles_instruction: Add 200 bubbles to the image by writing drawAllBubbles with a loop. (Click to see full instructions)
      SG U3L07 - createTriangleParam_instruction: Define a function that accepts a parameter to match the function calls and complete the image. (Click to see full instructions)
      SG U3L07 - fish_instruction: Add 15 fish to the image by writing drawAllFish with a loop. (Click to see full instructions)
      SG U3L07 - introSquare_instruction: Use a loop to draw a square. Then add another loop to draw many squares each one rotated some amount. (Click to see full instructions)
      SG U3L07 - loopsWithRandom_instruction: Increase the number of iterations to fill the screen with white. (Click to see full instructions)
      SG U3L07 - randomDots1_instruction: Increase the number of iterations to fully fill the screen with random dots. (Click to see full instructions)
      SG U3L07 - randomSquare_instruction: Draw the figure using a loop. (Click to see full instructions)
      SG U3L07 - seaGrass_instruction: Add a parameter to drawSeagrass that controls the number of waves in the grass. (Click to see full instructions)
      SG U3L07 - seaStar_instruction: Add 5 sea stars to the image by writing drawAllSeaStars with a loop. (Click to see full instructions)
      SG U3L07 - sunBeams_instruction: Add 100 sunbeams to the image by writing drawAllSunbeams with a loop. (Click to see full instructions)
      SG U3L07 - topDownDesign_instruction: Get comfortable with the structure of this program, then move on to the next exercise. (Click to see full instructions)
      SG U3L07 More Subgoals_instruction: Read the documentation for penColor() and penWidth() before using them to draw the blue square.
      SG U3L08 - createTwoParamTriangle_instruction: Define a function called drawTriangle() that accepts two parameters to set the size and width of the triangle. (Click to see full instructions)
      SG U3L08 - digitalScene_instruction: Create the functions you were assigned as part of your digital scene. (Click to see full instructions)
      SG U3L08 - drawSquareWithParam_instruction: Use drawSquare() to recreate the image of both squares, this time using parameters. (Click to see full instructions)
      SG U3L08 - fish_instruction: Add a parameter to drawFish that changes the size of the fish drawn. (Click to see full instructions)
      SG U3L08 - freePlay_instruction: Keep adding to your image by making more calls to your new functions with parameters. (Click to see full instructions)
      SG U3L08 - individualCode_instruction: Create the functions you were assigned as part of your digital scene. (Click to see full instructions)
      SG U3L08 - introUnderTheSea - recovery_instruction: Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)
      SG U3L08 - introUnderTheSea_instruction: Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)
      SG U3L08 - multiParamFish_instruction: Add three parameters to your drawFish function to accept red, green and blue values to make your fish different colors. (Click to see full instructions)
      SG U3L08 - paramsToStarfish_instruction: Add a parameter to drawStarfish that changes the size of the starfish drawn. (Click to see full instructions)
      SG U3L08 - randomInput_instruction: Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)
      SG U3L08 - seaGrass_instruction: Add a parameter to drawSeagrass that changes the size of the piece of seagrass drawn. (Click to see full instructions)
      SG U3L08 - squareTwoParams_instruction: Call drawSquare() to complete the drawing of two squares. (Click to see full instructions)
      SG U3L08 comments_instruction: Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)
      SG U3L08 how to add comments_instruction: Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)
      SG U3L2 Using Simple Commands part 1_instruction: Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.
      SG U3L2 Using Simple Commands_instruction: Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.
      SG U3L2_Add-subgoals_instruction: Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)
      SG U3L2_Turtle3by3Grid_instruction: Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)
      SG U3L2_TurtleSquare_right_instruction: Draw a square to the front and to the right of the starting location. (Click to show full instructions)
      SGU3L07 - randomDots1_instruction: Increase the number of iterations to fully fill the screen with random dots. (Click to see full instructions)
      Sam the Butterfly 1 (copy 1)_instruction: This butterfly is named Sam, and the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can see, Sam is free to walk around the yard, and the coordinates at the top of the screen update to tell you his location. Use the arrow keys to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: This bat is named Sam, and the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can see, Sam is free to walk around the yard, and the coordinates at the top of the screen update to tell you his location. Click "Run" and then use the arrow keys to move Sam around his yard, making note of Sam's coordinates at different locations. Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: Sam's mom wants to make sure that she can always see at least a bit of him, so lets write some functions that help make sure he doesn't go too far out of the yard. Here's a function called safe-left? - it should take a Number for its domain that represents Sam's x-coordinates and return true if he's completely visible on screen. If your function works, Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: In the last puzzle we kept Sam from leaving on the left, now let's do the same thing on the right. Complete the safe-right? function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: Huh, we can keep Sam from leaving on the left, or we can keep him from leaving on the right, but how can we keep him safe from leaving both directions? Try using the and block to program the function on-screen? to check if Sam is safe-left? and safe-right?
      Sam the Butterfly 5_instruction: 'Free Play: Awesome, we''ve kept Sam safe on the left and right! Use this free play stage to experiment with your functions and further improve onscreen?'
      Sam the Butterfly 6_instruction: We've added a new parameter "y" to the "on-screen?" function. Update the function so that it checks that "safe-left?" AND "safe-right?" AND "safe-up?" are all true. When you've fixed the function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: Only one last direction to worry about! Create a "safe-down?" function and update the "on-screen?" function so that it checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: Only one last direction to worry about! Create a "safe-down?" function and update the "on-screen?" function so that it checks up, down, left, and right.
      SpecialFrozenLevel_instruction: '¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal.'
      Standalone_Artist_1_instruction: '¡Bienvenido a Artista! En primer lugar, vamos a intentar hacer un simple cuadrado usando el bloque vuelta derecha y el bloque mover hacia adelante. Cada lado debe tener 100 píxeles de largo.'
      Standalone_Artist_2_instruction: Dibuja este diamante con 120 y 60 grados de ángulo y lados largos de 150 píxeles.
      Standalone_Artist_3_instruction: '¿Puede dibujar este hexágono con lados de 100 píxeles y vueltas de 60 grados?'
      Standalone_Artist_4_instruction: Ahora tienes un nuevo bloque para poder jugar, el bucle. Éste repetirá un conjunto de comandos. ¿Qué sucede si se realiza un bucle de estos comandos 6 veces?
      Standalone_Artist_5.5_instruction: 'Nota que simplificamos el código del diamante convirtiéndolo en una repetición. Puedes repetir toda la secuencia 12 veces para dibujar la flor. Pista: Necesitas girar 30 grados después de dibujar el diamante, para que no sigas dibujando sobre el mismo diamante.'
      Standalone_Artist_5_instruction: '¿Cuántas veces necesitas repetir este diamante para dibujar la flor?'
      Standalone_Artist_6_instruction: 'Repite este código de hexágono 6 veces para crear el diseño. ¿Cuántos grados necesitarás girar cada vez? Pista: Divide el numero de grados en un círculo por el número de veces que estás repitiendo.'
      Standalone_Artist_7_instruction: 'Una función es otra herramienta de programación que te ayuda a evitar repetir código. Esta función dibuja una flor, para que la puedas utilizar en cualquier momento para dibujar una flor. Utiliza esto y el nuevo bloque de salto para dibujar estas flores. Pista: Hay 150 píxeles de espacio entre cada flor'
      Standalone_Artist_8_instruction: Aquí hay una función llamada "Dibuja una figura" que hemos programado para dibujar hexágonos. Ejecuta el código para ver lo que hace y luego experimenta con la función para ver qué pasa. ¿Puedes hacer que dibuje un patrón de cuadrados, triángulos u octágonos?
      Standalone_Artist_9_instruction: '¡Ahora sigue adelante y haz la imagen que tú quieras! ¡Incluso tienes una función vacía con la que puedes hacer lo que quieras!'
      Standalone_Artist_v2_instruction: '¡Bienvenido a Artista! En primer lugar, vamos a intentar hacer un simple cuadrado usando el bloque vuelta derecha y el bloque mover hacia adelante. Cada lado debe tener 100 píxeles de largo.'
      StepIntro_instruction: Here's how to use the "Step" button.
      Test Play Lab_instruction: This is a test play lab level.
      Test embedded Blockly in instructions_instruction: |-
        As a block element, we should be able to include XML representing a valid Blockly block or blocks.
        
        <xml>
        <block type="draw_move_by_constant">
        <title name="DIR">moveForward</title>
        <title name="VALUE">100</title>
        </block>
        </xml>
        
        We also support Blockly XML as an inline element like so: <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">100</title></block></xml>. The difference in input format being that this one is embedded within a paragraph, whereas the previous one is in a text block of its own. The difference in output is comparable.
      Test embedded K1 Blockly in instructions_instruction: Usa tres bloques "mover oeste" y un bloque "recoger maíz" para resolver este rompecabezas.
      Test of comment block_instruction: Drag out the subgoal label block you want.
      Testing Quantum Farmer_instruction: "¡Wow, encontré un agujero realmente profundo! no sé cuántas paleadas de tierra necesita. ¿Puedes escribir un programa que llene hasta que el suelo esté parejo? Sugerencia: trata usando el bucle mientras."
      Text Compression 1_instruction: "Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.\n\n"
      The Vigenere Cipher Widget_instruction: Instrucciones
      The Vigenere Cipher Widget_2018_instruction: Instrucciones
      The Vigenere Cipher_instruction: Instrucciones
      Total Artist Clone Me_instruction: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      U1L10 NetSim numbers with decimal_instruction: Invent and test a protocol for encoding and sending text messages. Your protocol must include the letters a-z, spaces, and common punctuation marks. You may add additional characters if you wish. See the worksheet handed out by your teacher for more detailed instructions!
      U1L11 NetSim numbers with Ascii_instruction: Work with a partner or in a small team to develop a protocol that allows you to send formatted text. See the worksheet handed out by your teacher for more detailed instructions!
      U1L13 Text Compression_instruction: Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.
      U1L4 NetSim SendAB_instruction: 'Develop, document, and test a protocol that allows you to use Internet Simulator to relay a message. See the worksheet for more detailed instructions.  '
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: With your partner, develop a protocol or set of rules for communicating a drawing using only bits. See the worksheet handed out by your teacher for more detailed instructions!
      U2 Vigenere_instruction: Test
      U2 frequency caesar_instruction: Instrucciones
      U2 frequency random sub_instruction: Instrucciones
      U2 vigenere cipher_instruction: Instrucciones
      U2L04 - NetSim Routers with Addresses_instruction: Send messages with your classmates (Click to see full instructions)
      U2L05 - NetSim - Packets and Building TCP_instruction: |-
        Develop a Protocol for Reliably Sending a Message.
        
        Constraints:
        - Packets may contain only 6 characters
        - Packets may drop with small probability
        - Packets may not arrive in order
      U2L10 NetSim Automatic DNS_instruction: In this version of the Internet Simulator, a Domain Name System (DNS) is provided for you and knows the IP addresses of all connected computers. Send a message in the form GET [hostname] to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: In this version of the simulator you can't see the other students' addresses.  Instead, one of you must act as a name service, to help share addresses with each other.
      U2L14 frequency random_instruction: Test
      U2L2 NetSim Hub Mode_instruction: 'Now use the Internet Simulator to send the battleship moves. For setup, join a Room with your group, and add ships to your paper board for each opponent. When playing, all communication must be done through the tool, so no talking, but have fun!  '
      U2L3 NetSim Hub Mode_instruction: Use the Internet Simulator to test out your group's binary communication protocol for battleship. How short can you make the message and response?
      U2L4 NetSim Routers Addresses_instruction: |-
        For this activity, connect to a router with the others in your group. Important note: The router will only properly route messages where the first 4 bits are the To: address and the second 4 bits are the From: address.
        
        [TODO: NetSim needs to support hierarchical addresses. For now, level is set up for 4 bit to and from addresses]
      U2L5 NetSim Classroom Internet_instruction: "For this activity, connect to a router with the others in your group. The Internet Simulator now provides a place for you to put the To and From addresses, so you don't have to type out the bits manually.\n\n"
      U2L7 NetSim Need for Packets_instruction: Transfer your favicon to a partner across a network in which the larger a packet grows, the more likely it is to be dropped.
      U3 - Arrays - Demo App_instruction: Use the "My Favorite Things" app. How might this app be making use of an array? (Click to see full instructions)
      U3 - Arrays - appendItem_instruction: Create an array of odd numbers 1-11 by using appendItem. (Click to see full instructions)
      U3 - Arrays - assignment_instruction: Use indexes to change the values in this array from 1 to 0. (Click to see full instructions)
      U3 - Arrays - assignment2_instruction: Calculate the sum of three values stored in an array. (Click to see full instructions)
      U3 - Arrays - assignment3_instruction: Increase the value of each value in the randomly generated array by 1. (Click to see full instructions)
      U3 - Arrays - createFirstArray_instruction: Create an array of the even numbers from 0 to 10 and display its contents with console.log. (Click to see full instructions)
      U3 - Arrays - expressionsAsIndexes_instruction: Write a program that displays a randomly chosen color from the array. (Click to see full instructions)
      U3 - Arrays - favThings Counting Variable_instruction: Create a global variable for the current index and use it to display the first item in the array. (Click to see full instructions)
      U3 - Arrays - favThings Next_instruction: Write code that allows the user to move forward through your list by clicking the "Next" button. (Click to see full instructions)
      U3 - Arrays - favThings Prev_instruction: Write code that allows the user to move backward through your list by clicking the "Last" button. (Click to see full instructions)
      U3 - Arrays - favThings addItem_instruction: Write code that allows a user to add their own favorite things to the list. (Click to see full instructions)
      U3 - Arrays - favThings bounds_instruction: Add if statements to your event handlers that prevent the global index from going out of bounds. (Click to see full instructions)
      U3 - Arrays - favThings createArray_instruction: Create an array of words describing your favorite things. (Click to see full instructions)
      U3 - Arrays - favThings firstOutput_instruction: Use setText to display the first item in the array. (Click to see full instructions)
      U3 - Arrays - favThings giveIDs_instruction: Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - favThings keepPlaying_instruction: Make any other improvements you want! (Click to see full instructions)
      U3 - Arrays - favThings template_instruction: Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - favThings template_2018_instruction: Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - globalVariableIndex_instruction: Give your UI elements descriptive and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - indexPractice_instruction: Write the contents of the array to the screen in numerical order. (Click to see full instructions)
      U3 - Arrays - insertingItems_instruction: Insert items into an array to form a complete sentence. (Click to see full instructions)
      U3 - Arrays - insertionErrors_instruction: Run each command that references indexes that are out of bounds and observe the results. (Click to see full instructions)
      U3 - Arrays - introIndex_instruction: Display the first and last element in the array. Display the number 5 from the array. (Click to see full instructions)
      U3 - Arrays - length_instruction: Use list.length to determine the length of each array. (Click to see full instructions)
      U3 - Arrays - lengthMinus1_instruction: Use list.length - 1 to log the last item in the array to the console. (Click to see full instructions)
      U3 - Arrays - remove_instruction: Remove items from an array to form a complete sentence. (Click to see full instructions)
      U3 - Arrays - stringsInArrays_instruction: Write a sentence word by word by adding strings to an array. (Click to see full instructions)
      U3 - Canvas - 200dots_instruction: Add a loop to your program that draws 200 dots on your canvas. (Click to see full instructions)
      U3 - Canvas - One Dot sprayPaint_instruction: Write code that redraws your image using a dot whose x and y locations use offsetX and offsetY with a small random value added. (Click to see full instructions)
      U3 - Canvas - appendToArray_instruction: Create an array to store each event parameter. Append each event parameter to this array within your event handler. (Click to see full instructions)
      U3 - Canvas - changeToMouseMove_instruction: Change your program so that dots are drawn at the location of the mouse as the user moves the mouse on the canvas. (Click to see full instructions)
      U3 - Canvas - clickToAdd_instruction: Change your program so that dots are added to the canvas when the user clicks on it. (Click to see full instructions)
      U3 - Canvas - delete_instruction: Create a button that deletes the drawing by clearing the canvas and removing all stored values. (Click to see full instructions)
      U3 - Canvas - draw at click point_instruction: Change your program so that dots are drawn at the location of the mouse click. (Click to see full instructions)
      U3 - Canvas - freePlay_instruction: Extend the functionality of one of the effects, or create an entirely new one of your own. (Click to see full instructions)
      U3 - Canvas - introCanvas_instruction: Add a canvas to your app and set it to be the active canvas. Then add a large dot to your canvas. (Click to see full instructions)
      U3 - Canvas - movementFunction fix Orig_instruction: Modify the "Original" button event handler so that it takes the movement of the mouse into account. (Click to see full instructions)
      U3 - Canvas - movementFunction_instruction: Write a function that takes the movement of the mouse as input and generates a line width as output. (Click to see full instructions)
      U3 - Canvas - redrawOriginal_instruction: Write a function that processes your array, redrawing the dots as they originally appeared. (Click to see full instructions)
      U3 - Canvas - redrawRandom_instruction: Set up a button and event handler for the random function. (Click to see full instructions)
      U3 - Canvas - redrawRandom2_instruction: Write a function that processes your array, redrawing every dot with a random size. (Click to see full instructions)
      U3 - Canvas - shiftKey_instruction: Add an if statement to your event handler so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      U3 - Canvas - sketch_instruction: Write code that redraws your image using a sketch effect. (Click to see full instructions)
      U3 - Canvas - sprayPaint_instruction: Update the spray paint code so that it redraws your image using multiple random dots instead of using a nested for loop. (Click to see full instructions)
      U3 - Canvas - transparentDots_instruction: Change the colors of your dots so they have a fully transparent stroke and partially transparent fill. (Click to see full instructions)
      U3 - Canvas - usingOffsetXY_instruction: Add a console.log command inside the function of your event handler. Use it to display the event parameter. Click on the screen to see the contents of the event parameter (Click to see full instructions)
      U3 - Conditional Basics - 6_instruction: Add a setText after the if statement to "Nope. Guess again." (Click to see full instructions)
      U3 - Conditionals - Combine AND OR Simple_instruction: Write an if statement that uses AND and OR to display "Sleep in!" if it's the weekend and the user is a teenager. (Click to see full instructions.
      U3 - Conditionals - Combine AND OR and NOT_instruction: Write an if statement that uses AND and OR to display "Time to go to school!" if it's not the weekend and the user is under 18. (Click to see full instructions.)
      U3 - Conditionals - Combine AND and OR_instruction: Write an if statement that uses AND and OR to display "Time to go to school!" if it's not the weekend and the user is under 18. (Click to see full instrucitons.
      U3 - Conditionals - Simple AND_instruction: Write an if statement that uses AND to display "You are a teenager." if the user enters an age between 13 and 19. (Click to see full instructions)
      U3 - Conditionals - Simple OR_instruction: Write an if statement that uses OR to display "It's the weekend!" if the user enters a weekend day at the prompt. (Click to see full instructions)
      U3 - Conditionals - intoOr_instruction: Add 2 if statements that use the OR operator. (Click to see full instructions)
      U3 - Conditionals - introAND_instruction: Add 2 if statements that use the OR operator. (Click to see full instructions)
      U3 - Design Mode - Console Log_instruction: Update the ID names and `console.log` messages to match the correct button. (Click to see full instructions.)
      U3 - Design Mode - Layers and Delete_instruction: Fix the layout of the bullseye game. (Click to see full instructions)
      U3 - Design Mode - Multi Screens 2_instruction: Make a 2 screen app which can switch back and forth between a black screen and a white screen using buttons. (Click to see detailed instructions.)
      U3 - Design Mode - Multi Screens_instruction: Make a 2 screen app with a black screen and a white screen. (Click to see detailed instructions)
      U3 - Design Mode - Other Events_instruction: Delete the button and make the image move to a random location when you click on it. (click to see detailed instructions)
      U3 - Design Mode - WTF Console Log_instruction: Add a 3 console.log messages and test them out. (Click to see full instructions.)
      U3 - Design Mode -Recreate Beyond Buttons_instruction: Recreate the game from the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      U3 - Design Mode 1_instruction: Add a large red button to your screen using Design Mode. (Click for full instructions.)
      U3 - Dice - Dropdown and Score_instruction: Add guess and score to the Dice Game (Click to see full instructions)
      U3 - Dice - Dropdown with Strings_instruction: Add a dropdown for difficulty level that prints the difficulty level in the console. (Click to see full instructions)
      U3 - Dice - If_instruction: Show different die images for the random number generated. (Click to see full instructions)
      U3 - Dice - Nested_instruction: Use nested if statements to make the scoring different for the different game levels. (Click to see full instructions)
      U3 - High Low - Debug_instruction: Debug the order of the conditionals so that it will actually tell the user when their guess is close. (Click to see full instructions)
      U3 - High Low - Dropdown_instruction: Add a dropdown for their guess instead of promptNum (Click to see full instructions)
      U3 - High Low - Else if_instruction: Add an else-if statement in order to tell the user if their guess is high or low instead of just wrong. (Click to see full instructions)
      U3 - High Low - Else_instruction: 'Add an else statement so that the program will tell the user when they are right and when they are wrong. (Click to see full instructions)  '
      U3 - High Low - If_instruction: Add code to the if statement that indicates the user guessed the secret number. (Click to see full instructions)
      U3 - Keys - Add Image URLs_instruction: Add image URLs to your array. Replace the text area with an image and setText with setImageURL. Then test your app! (Click to see full instructions)
      U3 - Keys - Buttons and Keys_instruction: Have the program respond the same way for both clicking images on the screen and hitting the up and down keys on the keyboard. (Click to see full instructions)
      U3 - Keys - Demo App_instruction: Play with the image scroller. Press the left and right arrows to progress through the images.
      U3 - Keys - Final Image Scroller_instruction: Update the image scroller to respond to buttons and key presses. (Click to see full instructions)
      U3 - Keys - Functions_instruction: Write doUpArrow and doDownArrow functions and call the functions instead of duplicating the code. (Click to see full instructions)
      U3 - Keys - Key Up and Down_instruction: Try out the keyup and keydown events to see how they are different from keypress. (Click to see full instructions)
      U3 - Keys - Multiple Keys_instruction: Play a different sound when the down arrow is pressed. (Click to see full instructions)
      U3 - Keys - Practice Adding Images with URL_instruction: Add image URLs to your image array. Test out the add button. Style your image scroller. (Click to see full instructions)
      U3 - Keys - Words to Images_instruction: Add image URLs to your image array. Test out the add button. Style your image scroller. (Click to see full instructions)
      U3 - Loops -  9 Part 2_instruction: Change the boolean expression for the while loop so that it will roll until both dice are greater than 3. (Click to see full instructions)
      U3 - Loops -  Complex Condition_instruction: Change the boolean expression for the while loop so that it will stop when both dice are greater than or equal to 5. (Click to see full instructions)
      U3 - Loops - 1_instruction: Change the condition for the while loop to check if the variable num is less than 90. (Click to see full instructions)
      U3 - Loops - 10_instruction: Write a program that simulates the rolling of two dice. Roll the dice repeatedly until the sum of the dice is either 7 or 11.
      U3 - Loops - 11_instruction: Fix the condition so that it keeps rolling the die as long as the value is not a 2 or a 3 instead of rolling infinitely. (Click to see full instructions)
      U3 - Loops - 12_instruction: Change the code so that it prints the string "Hi" 5 times. (Click to see full instructions)
      U3 - Loops - 13_instruction: Update the code to count up by 3 instead of 1. (Click to see full instructions)
      U3 - Loops - 14_instruction: Change the loop condition to prevent the infinite loop and stop counting once the count is past 30. (Click to see full instructions)
      U3 - Loops - 15_instruction: Count the number of times the sum of the dice is 12. (Click to see full instructions)
      U3 - Loops - 16_instruction: Find out how many times you have to roll to get the sum of 7 100 times (Click to see full instructions)
      U3 - Loops - 2_instruction: Try creating an infinite loop using !=, > and <. (Click to see full instructions)
      U3 - Loops - 3_instruction: Change the if statement to a while loop so the program will run until it rolls a 6. (Click to see full instructions)
      U3 - Loops - 4_instruction: " Use the Debug Commands to make a list of all the values rolled before a 6. (Click to see full instructions)"
      U3 - Loops - 5_instruction: Add code inside the while loop which will update the variable num so that the condition will eventually become false. (Click to see full instructions)
      U3 - Loops - 6_instruction: Fix the problem so the loop will run at least once. Change the initial value of num to a dummy value such as -1. (Click to see full instructions)
      U3 - Loops - 7_instruction: Without adding any lines of code, reorder the code so that it prints all the values of num. (Click to see full instructions)
      U3 - Loops - 8_instruction: Debug which number is not getting printed and add a write statement to display that value. (Click to see full instructions)
      U3 - Loops - 9_instruction: " Modify the condition so that it keeps rolling as long as both are less than 3. (Click to see full instructions)"
      U3 - Loops - Continue_instruction: " Use the Debug Commands to to make a list of all the values rolled before a 6. (Click to see full instructions)"
      U3 - Loops - Minus Minus_instruction: Change the code to count down from 10 to 1. (Click to see full instructions)
      U3 - Loops - Plus Plus_instruction: Change the code to use count++ instead of count = count + 1.  (Click to see full instructions)
      U3 - Loops - Typing in Console_instruction: Use console to check the ending value of num. (Click to see full instructions)
      U3 - Loops - minus = operator_instruction: Update the code to use the -= operator to count from 30 down to 0 by 3's. (Click to see full instructions)
      U3 - Loops - plus and minus = operator_instruction: Update the code to use the += operator. (Click to see full instructions)
      U3 - Loops And Arrays - Add 5_instruction: Add 5 to all the values in an array (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 1_instruction: Write a function that finds and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 2_instruction: Write a function that finds and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Counting Times_instruction: Count the number of times 5 appears in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Divid by 2_instruction: Divide every value in the array by 2. (Click to see full instructions)
      U3 - Loops And Arrays - Find Max_instruction: Design a function that displays the smallest number in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Find Min_instruction: Complete the findMinVal function to find and display the smallest value in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Functions that Return Value_instruction: Call findMin within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Loops And Arrays - General Search Param_instruction: Add a second parameter to the search function for the value to search for.  (Click to see full instructions)
      U3 - Loops And Arrays - Intro For Loop_instruction: Add a for loop with a console.log inside and test out the 3 pieces of the for loop. (Click to see full instructions)
      U3 - Loops And Arrays - Linear Search_instruction: Visit every element in the array and display "true" if the value is a 5, and "false" otherwise. (Click to see full instructions)
      U3 - Loops And Arrays - Loop Array If_instruction: Use an if statement to only display the values in the array that are greater than 5. (Click to see full instructions)
      U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: Create a function that takes a list parameter and prints if the list contains a 5. (Click to see full instructions)
      U3 - Loops And Arrays - Make it a Function_instruction: Move the code that searches the list for a 5 into a function called "search". (Click to see full instructions)
      U3 - Loops And Arrays - Multiple Returns_instruction: Test out the return values of the findMax function.  (Click to see full instructions)
      U3 - Loops And Arrays - Print Array_instruction: Use a for loop to print out all the values in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Printing Single True_instruction: Process the array and display a single "true" if the array contains a 5 or a single "false" if it does not.  (Click to see full instructions)
      U3 - Loops And Arrays - Return Index_instruction: Make the search function return the index of the search value in the array. (Click to see full instructions)
      U3 - Loops And Arrays - Return Value_instruction: Use constrain in this simple app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Loops And Arrays - Search and Remove_instruction: Search for 5 in the array and remove it from the array. (Click to see full instructions)
      U3 - Loops And Arrays - Search with Boolean Var_instruction: Make a boolean variable to use as a flag to keep track of whether there is a 5 in the array. (Click to see full instructions)
      U3 - Loops And Arrays - useFindMin_instruction: Call findMin within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Movie Bot - Multiple If Sequences_instruction: Add another set of if, else if, and else statements inside the question if statement to check for keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      U3 - Movie Bot - Nested Motivation_instruction: Add a separate set of if statements to check for a "?" in the input. (Click to see full instructions)
      U3 - Movie Bot - When Multiple If Statements_instruction: Add an if and else-if statement that checks for please and thank you. (Click to see full instructions)
      U3 - Movie Bot - toLowerCase_instruction: Use the toLowerCase command to change all user input into lowercase letters after they enter it. (Click to see full instructions)
      U3 - Practice Create Performance Task_instruction: Design and implement your practice Create Performance Task. (Click to see full instructions)
      U3 - Read Record - 1.2_instruction: 'Console.log the records returned by a call to readRecords. (Click to see full instructions)  '
      U3 - Read Record - 1.5_instruction: 'Console.log the records returned by a call to readRecords. (Click to see full instructions)  '
      U3 - Read Record - 1.6_instruction: 'Console.log the records returned by a call to readRecords. (Click to see full instructions)  '
      U3 - Read Record - 1_instruction: 'Console.log the records returned by a call to readRecords. (Click to see full instructions)  '
      U3 - Read Record - 2_instruction: 'Change the table name so that the records are read from the new table.(Click to see full instructions)  '
      U3 - Read Record - 3_instruction: 'Change the name of the table in a readRecords command to read from a table that does not exist. (Click to see full instructions)  '
      U3 - Read Record - 4.1_instruction: 'Print out each record return from the readRecords call individually. (Click to see full instructions)  '
      U3 - Read Record - 4_instruction: 'Print out each record return from the readRecords call individually. (Click to see full instructions)  '
      U3 - Read Record - 5 and half_instruction: 'Print out the name of each movie in the records return from the readRecords call. (Click to see full instructions)  '
      U3 - Read Record - 5_instruction: 'Print out the name of each movie in the records return from the readRecords call. (Click to see full instructions)  '
      U3 - Return Values - constrainTurtle_instruction: Use constrain in this simple app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Return Values - debuggingConstrain_instruction: Correct the error in constrain so that it returns the appropriate value.  (Click to see full instructions)
      U3 - Return Values - debuggingMaxVal_instruction: Correct the error in maxVal so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - debuggingReturns_instruction: Correct the error in maxVal so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - increase1_instruction: Call the increase function within moveForward, write, and console.log.  (Click to see full instructions)
      U3 - Return Values - increase2_instruction: Change the increase function to return 3 times the input value. (Click to see full instructions)
      U3 - Return Values - min1_instruction: Test out the return values of the findMax function.  (Click to see full instructions)
      U3 - Return Values - useFindMin_instruction: Call findMin within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - useMinVal_instruction: Call minVal within the console.log statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - wrapTurtle_instruction: Write wrap in this simple app to let the turtle "wrap" to the other side of the screen when it goes off.  (Click to see full instructions)
      U3 - Return Values - writeMaxVal_instruction: Write the function maxVal and then use it within the console.log statement to calculate the maximum of two values.  (Click to see full instructions)
      U3 - Search Terms - 1_instruction: 'Create an array of all the movies made in 2008 and print it out. (Click to see full instructions)  '
      U3 - Search Terms - 2_instruction: 'Print out all the movies with year 2008 using the readRecords search terms. (Click to see full instructions)  '
      U3 - Search Terms - 3_instruction: 'Print whether or not there are movies matching the search criteria (Click to see full instructions)  '
      U3 - Search Terms - 4_instruction: 'Print whether or not there are movies matching the search criteria (Click to see full instructions)  '
      U3 - Search Terms - 5_instruction: 'Print out the cities that are in California or have a population of 2,000,000. (Click to see full instructions)  '
      U3 - Search Terms - 6_instruction: 'Print out the cities that are in California or have a population of 2,000,000. (Click to see full instructions)  '
      U3 - Simple Drawing - Comments_instruction: Do this
      U3 - Simple Drawing - Ellipse and No Fill_instruction: Do this
      U3 - Simple Drawing - Fill_instruction: Do This
      U3 - Simple Drawing - No Fill_instruction: Do this
      U3 - Simple Drawing - Order of Blocks_instruction: Do this
      U3 - Simple Drawing - Oval_instruction: Do This
      U3 - Simple Drawing - Personal Drawing_instruction: DO This
      U3 - Simple Drawing - Rectangle Width and Height_instruction: Do This
      U3 - Simple Drawing - Rectangle_instruction: Do This
      U3 - Simple Drawing - Road Ellipse_instruction: Do This
      U3 - Simple Drawing - Road Rects and Color_instruction: Do This
      U3 - Simple Drawing - Simple Shape Drawing_instruction: Do This
      U3 - Simple Drawing - Stroke and Stroke Weight_instruction: Do this
      U3 - Simple Drawing - X and Y values_instruction: Do This
      U3 - Simple Drawing - regular polygon_instruction: Do this
      U3 - Simple Drawing - text_instruction: Do This
      U3 - Simulation - 1_instruction: Use a while loop to "flip a coin 10 times" and write the values to the screen. (Click to see full instructions)
      U3 - Simulation - 2.1_instruction: Change your looping condition so the simulation runs until there are 5 heads flipped. (Click to see full instructions)
      U3 - Simulation - 2.5_instruction: Run your simulation to get the full 10,000 heads! How long did it take? (Click to see full instructions)
      U3 - Simulation - 2_instruction: Keep track of how many heads (1's) your program generates and print the results to the screen. (Click to see full instructions)
      U3 - Simulation - 3_instruction: 'Add functionality that counts how many heads in a row are flipped. (Click to see full instructions)  '
      U3 - Simulation - 4_instruction: Update your while loop's condition so the the coin flips until there are three heads in a row. (Click to see full instructions)
      U3 - Simulation - 5_instruction: Change your while loop to run until you get a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      U3 - Simulation - 6_instruction: Keep adding to your simulation. What do you want to explore next? (Click to see full instructions)
      U3 - Simulation - App_instruction: Change your code to run the full simulation with 10,000 coins. What was your longest streak of heads? (Click to see full instructions)
      U3 - Simulation - Template_instruction: Use a while loop to "flip 10 coins" and write them to the screen. (Click to see full instructions)
      U3 - Sprites - Intro Sprites_instruction: Do This
      U3 - Sprites and Mod - Create  and Draw Sprite_instruction: Do This
      U3 - Sprites and Mod - Mouse Width and Height_instruction: Do this
      U3 - Sprites and Mod - Mouse X and Y_instruction: Do this
      U3 - Sprites and Mod - Rand Around Mouse_instruction: Do this
      U3 - Sprites and Mod - Rand Shape Color_instruction: Do This
      U3 - Sprites and Mod - Shape Color_instruction: Do This
      U3 - Sprites and Mod - Wrap Many Squares_instruction: Do This
      U3 - Sprites and Mod - X and Y Prop_instruction: Do This
      U3 - Sprites and Mod - two sprites_instruction: Do This
      U3 - User Input - Save getText To Variable_instruction: Save the age and name of the user in variables (Click to see full instructions)
      U3 - User Input - Saving After Input_instruction: Save the age of the user in a variable using getText() (Click to see full instructions)
      U3 - User Input and String -  Concat_instruction: Output a message about age in a Text Area (Click to see full instructions)
      U3 - Variables - Clicker Game_instruction: Create your improved Chaser-Game here. (Click to see full instructions)
      U3 - Variables - Debug Scope_instruction: Why isn't the value of foo changing correctly? Make a guess. (Click to see full instructions)
      U3 - Variables - Debugging with Turtle_instruction: Use your new debugging techniques to get the code to run correctly (Click to see full instructions)
      U3 - Variables - Decrement_instruction: Decrement the value of the variable. (Click to see full instructions)
      U3 - Variables - Identify Variables_instruction: Identify the values printing in the terminal with console.log statements. (Click to see full instructions)
      U3 - Variables - Increment_instruction: Use the console.log debugging technique to see what is happening in this example. Add another variable and increment its value. (Click to see full instructions)
      U3 - Variables - Incrementing Variables_instruction: Create a repeat loop for the repeated code and use increment to recreate the original program with less lines of code! (Click to see full instructions)
      U3 - Variables - Read Using Turtle_instruction: Create a second set of variables for x and y position. Move turtle to that new location. (Click to see full instructions)
      U3 - Variables - Reassigning Variables with Console.log_instruction: Add another reassignment statement at the end of the code to change the value of the variable at second time. (Click to see full instructions)
      U3 - Variables - Set to Expression with Other Variables and Turtle_instruction: "(click to see full instructions)"
      U3 - Variables - Set to Expression with Other Variables_instruction: 'Write an expression that calculates the player''s total score and stores it in the totalScore variable. The calculation is: the player''s points times lives divided by the total time. (click to see full instructions)'
      U3 - Variables - Set to Expression with Turtle_instruction: "(click to see full)"
      U3 - Variables - Set to Expression_instruction: Test out the new expressions. (Click to see full instructions)
      U3 - images - bee free play_instruction: Do this
      U3 Digital Assistant Design_instruction: Pick a topic for your Digital Assistant and create the basic layout with a text input and text area. (Click to show full instructions)
      U3 Digital Assistant Set Text_instruction: Have your digital assistant repeat back what the user types and include a canned response. (Click to see full instructions)
      U3 Digital Assistant Target - Mehal_instruction: Try out a demo of the Digital Assistant!
      U3 Digital Assistant Target_instruction: Try out a demo of the Digital Assistant!
      U3 Digital Assistant Template_instruction: This is a project template!
      U3 Digital_instruction: Choose a specialization topic for your digital assistant. Create a basic digital assistant that takes the user's input and displays back a default response.
      U3 Variables consolelog_instruction: Use the write block to display the value of size
      U3 Variables flower example_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      U3 Variables gray square_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      U3 Variables make a square_instruction: Change the value of size multiple times. How does it change your drawing?
      U3 Variables misconceptions try it_instruction: Test out your predictions from the previous level.
      U3 Variables randomize your square_instruction: Change the value of petalSize multiple times. How does it change your drawing?
      U3 Variables write_instruction: Use the write block to display the value of size
      U3 full clicker demo_instruction: Clicker game - Try it out!
      U3 mehal's clone_instruction: Try out a demo of the Digital Assistant!
      U3- Variables - Assign Random For Turtle Draw_instruction: Try writing the same code in text mode.
      U3- Variables - Changing the Value_instruction: Update the value of 'turnAmount' before each moveForward so the turtle turns a different amount each time. (Click to see full instructions)
      U3- Variables - Create And Assign_instruction: On one line add a variable called "lives" and assign it the value 3. Print it to the console. (Click to see full instructions)
      U3- Variables - Text Mode_instruction: 1. Switch to text mode and type instructions; 2. drag blocks out into text mode; 3. experiment with code completion
      U3-Design Mode-ID and Event Handler_instruction: Add an event handler for the button using the "Insert and show" link in the Design Mode Events tab. (Click to see full instructions).
      U3-Design Mode-ID_instruction: Using the Design Mode Events change the button ID and update the code to match. (Click to see detail instructions).
      U3-Design Mode-Image_instruction: Recreate the "Chaser Game" from the last lesson using Design Mode. (Click to see full instructions.)
      U313 Two Buttons with Ids_instruction: Predict what will happen. Once you've made a prediction, run the code to see what happens. (Click to see full instructions)
      U313 drag Two Buttons_instruction: Run a program with two buttons that have the same id to see the warning message in the console. Change the ids to make the program run without getting a warning message.
      U313 eventsDetails_instruction: Run a program with two buttons that have the same id to see the warning message in the console. Change the ids to make the program run without getting a warning message.
      U3L03 - draw rect function_instruction: |-
        Write a function called drawRectangle().
        (Click to see full instructions)
      U3L03 - draw rect function_2018_instruction: |-
        Write a function called drawRectangle().
        (Click to see full instructions)
      U3L03 - draw step_instruction: Write the drawStep function. (Click to see full instructions)
      U3L03 - draw step_2018_instruction: Write the drawStep function. (Click to see full instructions)
      U3L03 Creating Procedures 1_instruction: 'Write the turnAround() function and use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif'
      U3L03 Define and use turnAround_instruction: Define a function called turnAround. Call the function and then move the turtle forward. (Click to see full instructions)
      U3L03 Define and use turnAround_2018_instruction: Define a function called turnAround. Call the function and then move the turtle forward. (Click to see full instructions)
      U3L03 Draw a T using turnAround_instruction: Draw a plus sign using the provided version of turnAround().  (Click to see full instructions)
      U3L03 Draw a T using turnAround_2018_instruction: Draw a plus sign using the provided version of turnAround().  (Click to see full instructions)
      U3L03 Three Steps_instruction: Define a function called drawSide() which draws three steps and moves the turtle to prepare for the next side (Click to see full instructions)
      U3L03 Three Steps_2018_instruction: Define a function called drawSide() which draws three steps and moves the turtle to prepare for the next side (Click to see full instructions)
      U3L03 choose your own drawing_instruction: 'Now choose your own!  Pick one of the three drawings shown here and attempt to create it on your own, making smart decisions about how to break the problem down into re-usable functions.  You will review your work with a peer using "procedures peer review rubric."  Check it for the requirements.  GIF: U3L3-ProceduresChooseOne.png'
      U3L03 define turnRight and draw a rectangle_instruction: Define a function called right() that turns the turtle to the right. Then use this function to draw a rectangle, as shown below. (Click to see full instructions)
      U3L03 define turnRight and draw a rectangle_2018_instruction: Define a function called right() that turns the turtle to the right. Then use this function to draw a rectangle, as shown below. (Click to see full instructions)
      U3L03 draw diamond_instruction: Create a function called drawDiamond() that makes use of your previous work to draw the complete diamond. (Click to see full instructions)
      U3L03 draw diamond_2018_instruction: Create a function called drawDiamond() that makes use of your previous work to draw the complete diamond. (Click to see full instructions)
      U3L04 - 3 by 3 with functions_instruction: Make the 3x3 square as efficiently as you can. (Click to see full instructions)
      U3L04 - 3 by 3 with functions_2018_instruction: Make the 3x3 square as efficiently as you can. (Click to see full instructions)
      U3L04 - snowflake_instruction: Create the design by breaking it down into layers of functions. (Click to see full instructions)
      U3L04 - snowflake_2018_instruction: Create the design by breaking it down into layers of functions. (Click to see full instructions)
      U3L04 choose your own drawing_instruction: Now choose your own!  Pick one of the three drawings shown here and attempt to create it on your own, making smart decisions about how to break the problem down into re-usable functions.  You will review your work with a peer using "procedures peer review rubric."  Check it for the requirements.
      U3L04 diamond solution_instruction: Study this solution to the drawDiamond problem.  Notice that the whole program starts by calling drawDiamond() at the top.  The program then follows a chain of function calls.  You can trace what's happening in the code to see the functions reused.  It's also easy to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: Let's revisit the 3x3 grid problem you did a few lessons ago.  This time the challenge is to program the solution "as efficiently as possible."  Now that you know how to write functions, it should be easier to break the problem down, and your code should be easier to read and debug.  See the rubric for more details about requirements and expectations.
      U3L05_draw3x3GridEfficiently_instruction: 'Draw a 3x3 grid above and to the right of the turtle. Try to do so with the fewest number of commands possible. NOTE: This is a very challenging problem.  You may need to play with it for a while and tweak it.  You might also consider using pencil and paper to sketch your ideas.'
      U3L06 - moveForwardwithParams_instruction: Use a single command to move the turtle to the edge of the screen. (Click to see full instructions)
      U3L06 - moveForwardwithParams_2018_instruction: Use a single command to move the turtle to the edge of the screen. (Click to see full instructions)
      U3L06 Challenge 1 triangle_instruction: Use the parameterized versions of the turtle commands to create a triangle with sides 100 pixels long. (Click to see full instructions)
      U3L06 Challenge 1 triangle_2018_instruction: Use the parameterized versions of the turtle commands to create a triangle with sides 100 pixels long. (Click to see full instructions)
      U3L06 Challenge 2 purple square_instruction: Read the documentation for penColor() and penWidth() before using them to draw the blue square.
      U3L06 Challenge 2 purple square_2018_instruction: Read the documentation for penColor() and penWidth() before using them to draw the blue square.
      U3L06 Challenge 3 fill pink_instruction: Fill in the background of the screen with your favorite color. (Click to see full instructions)
      U3L06 Challenge 3 fill pink_2018_instruction: Fill in the background of the screen with your favorite color. (Click to see full instructions)
      U3L06 Challenge 4 bullseye_instruction: Create the bullseye using hexadecimal colors and dot(). (Click to see full instructions)
      U3L06 Challenge 4 bullseye_2018_instruction: Create the bullseye using hexadecimal colors and dot(). (Click to see full instructions)
      U3L06 Challenge 5 overlapping circles_instruction: 'This image is created just using dot() and penColor() but, how are we going to get those circles to be transparent?  If you haven''t gotten the hint yet: check out the documentation!'
      U3L06 Challenge 5 overlapping circles_2018_instruction: 'This image is created just using dot() and penColor() but, how are we going to get those circles to be transparent?  If you haven''t gotten the hint yet: check out the documentation!'
      U3L06 Challenge 6 squiggles_instruction: 'Read the documentation for the "arcLeft" and "arcRight" commands and then draw the squiggles as shown. '
      U3L06 Challenge 6 squiggles_2018_instruction: 'Read the documentation for the "arcLeft" and "arcRight" commands and then draw the squiggles as shown. '
      U3L06 Challenge 7 smiley face_instruction: Use turnTo() and moveTo() to help draw a smiley face. (Click to see full instructions)
      U3L06 Challenge 7 smiley face_2018_instruction: Use turnTo() and moveTo() to help draw a smiley face. (Click to see full instructions)
      U3L06 Challenge 8 make your own_instruction: Create a drawing of your own. (Click to see full instructions)
      U3L06 Challenge 8 make your own_2018_instruction: Create a drawing of your own. (Click to see full instructions)
      U3L07 - Free Play Loops and Random_instruction: Free Play! Use what you learned from loops and random to make your own little scene. Have fun.
      U3L07 - Free Play Loops and Random_2018_instruction: Free Play! Use what you learned from loops and random to make your own little scene. Have fun.
      U3L07 - Starry Night Starter Code_instruction: 'You are going to use loops and random numbers to generate an image of starry night sky similar to one shown here.  We have given you some starter code to generate the ground and sky (just two giant dots), you will add code to this project to make the stars, grass, and moon.  All of the effects are clever applications of turtle dots, lines, and colors.  To get started, follow the series of steps suggested in the accompanying worksheet. '
      U3L07 - allSeaGrass_instruction: Add 50 pieces of seagrass to the image by writing drawAllSeagrass with a loop. (Click to see full instructions)
      U3L07 - allSeaGrass_2018_instruction: Add 50 pieces of seagrass to the image by writing drawAllSeagrass with a loop. (Click to see full instructions)
      U3L07 - bubbles_instruction: Add 200 bubbles to the image by writing drawAllBubbles with a loop. (Click to see full instructions)
      U3L07 - bubbles_2018_instruction: Add 200 bubbles to the image by writing drawAllBubbles with a loop. (Click to see full instructions)
      U3L07 - callingFunctionsInLoops_instruction: Call the function within the loop to complete the figure. (Click to see full instructions)
      U3L07 - createTriangleParam_instruction: Define a function that accepts a parameter to match the function calls and complete the image. (Click to see full instructions)
      U3L07 - createTriangleParam_2018_instruction: Define a function that accepts a parameter to match the function calls and complete the image. (Click to see full instructions)
      U3L07 - fish_instruction: Add 15 fish to the image by writing drawAllFish with a loop. (Click to see full instructions)
      U3L07 - fish_2018_instruction: Add 15 fish to the image by writing drawAllFish with a loop. (Click to see full instructions)
      U3L07 - introSquare_instruction: Use a loop to draw a square. Then add another loop to draw many squares each one rotated some amount. (Click to see full instructions)
      U3L07 - introSquare_2018_instruction: Use a loop to draw a square. Then add another loop to draw many squares each one rotated some amount. (Click to see full instructions)
      U3L07 - loopsWithRandom_instruction: Increase the number of iterations to fill the screen with white. (Click to see full instructions)
      U3L07 - loopsWithRandom_2018_instruction: Increase the number of iterations to fill the screen with white. (Click to see full instructions)
      U3L07 - randomDots1_instruction: Increase the number of iterations to fully fill the screen with random dots. (Click to see full instructions)
      U3L07 - randomDots1_2018_instruction: Increase the number of iterations to fully fill the screen with random dots. (Click to see full instructions)
      U3L07 - randomSquare_instruction: Draw the figure using a loop. (Click to see full instructions)
      U3L07 - randomSquare_2018_instruction: Draw the figure using a loop. (Click to see full instructions)
      U3L07 - seaGrass_instruction: Add a parameter to drawSeagrass that controls the number of waves in the grass. (Click to see full instructions)
      U3L07 - seaGrass_2018_instruction: Add a parameter to drawSeagrass that controls the number of waves in the grass. (Click to see full instructions)
      U3L07 - seaStar_instruction: Add 5 sea stars to the image by writing drawAllSeaStars with a loop. (Click to see full instructions)
      U3L07 - seaStar_2018_instruction: Add 5 sea stars to the image by writing drawAllSeaStars with a loop. (Click to see full instructions)
      U3L07 - sunBeams_instruction: Add 100 sunbeams to the image by writing drawAllSunbeams with a loop. (Click to see full instructions)
      U3L07 - sunBeams_2018_instruction: Add 100 sunbeams to the image by writing drawAllSunbeams with a loop. (Click to see full instructions)
      U3L07 - topDownDesign_instruction: Get comfortable with the structure of this program, then move on to the next exercise. (Click to see full instructions)
      U3L07 - topDownDesign_2018_instruction: Get comfortable with the structure of this program, then move on to the next exercise. (Click to see full instructions)
      U3L08 - Enchantment Under the Sea_instruction: You have been provided with starter code for an “Under the Sea” scene which includes three functions, one each for the starfish, seagrass, and fish. Create versions of these functions which accept parameters to allow you to add more variation to your scene.  The student worksheet provides more details and guidance.
      U3L08 - createTwoParamTriangle_instruction: Define a function called drawTriangle() that accepts two parameters to set the size and width of the triangle. (Click to see full instructions)
      U3L08 - createTwoParamTriangle_2018_instruction: Define a function called drawTriangle() that accepts two parameters to set the size and width of the triangle. (Click to see full instructions)
      U3L08 - digitalScene_instruction: Create the functions you were assigned as part of your digital scene. (Click to see full instructions)
      U3L08 - digitalScene_2018_instruction: Create the functions you were assigned as part of your digital scene. (Click to see full instructions)
      U3L08 - drawSquareWithParam - for video_instruction: Use drawSquare() to recreate the image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - drawSquareWithParam_instruction: Use drawSquare() to recreate the image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - drawSquareWithParam_2018_instruction: Use drawSquare() to recreate the image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - drawSquaresWithParams_instruction: Write drawSmallSquare() to draw a 25px square. (Click to see full instructions)
      U3L08 - fish_instruction: Add a parameter to drawFish that changes the size of the fish drawn. (Click to see full instructions)
      U3L08 - fish_2018_instruction: Add a parameter to drawFish that changes the size of the fish drawn. (Click to see full instructions)
      U3L08 - freePlay_instruction: Keep adding to your image by making more calls to your new functions with parameters. (Click to see full instructions)
      U3L08 - freePlay_2018_instruction: Keep adding to your image by making more calls to your new functions with parameters. (Click to see full instructions)
      U3L08 - individualCode_instruction: Create the functions you were assigned as part of your digital scene. (Click to see full instructions)
      U3L08 - individualCode_2018_instruction: Create the functions you were assigned as part of your digital scene. (Click to see full instructions)
      U3L08 - introUnderTheSea with comments_instruction: Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)
      U3L08 - introUnderTheSea_instruction: Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)
      U3L08 - introUnderTheSea_2018_instruction: Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)
      U3L08 - multiParamFish_instruction: Add three parameters to your drawFish function to accept red, green and blue values to make your fish different colors. (Click to see full instructions)
      U3L08 - multiParamFish_2018_instruction: Add three parameters to your drawFish function to accept red, green and blue values to make your fish different colors. (Click to see full instructions)
      U3L08 - multipleLayersofParams_instruction: Call drawPlusSign() to complete the image. (Click to see full instructions)
      U3L08 - paramsToStarfish_instruction: Add a parameter to drawStarfish that changes the size of the starfish drawn. (Click to see full instructions)
      U3L08 - paramsToStarfish_2018_instruction: Add a parameter to drawStarfish that changes the size of the starfish drawn. (Click to see full instructions)
      U3L08 - randomInput_instruction: Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)
      U3L08 - randomInput_2018_instruction: Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)
      U3L08 - seaGrass_instruction: Add a parameter to drawSeagrass that changes the size of the piece of seagrass drawn. (Click to see full instructions)
      U3L08 - seaGrass_2018_instruction: Add a parameter to drawSeagrass that changes the size of the piece of seagrass drawn. (Click to see full instructions)
      U3L08 - squareTwoParams_instruction: Call drawSquare() to complete the drawing of two squares. (Click to see full instructions)
      U3L08 - squareTwoParams_2018_instruction: Call drawSquare() to complete the drawing of two squares. (Click to see full instructions)
      U3L08 - starFish_instruction: Add an extra fish, starfish, and piece of seagrass to the image. Look at, but don't change, the functions that create them. (Click to see full instructions)
      U3L08 - triangleTwoParams_instruction: Call drawSquare() to complete the drawing of two squares. (Click to see full instructions)
      U3L08 how to add comments_instruction: Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)
      U3L08 how to add comments_2018_instruction: Use the randomNumber() blocks to test the functions you designed with random input. (Click to see full instructions)
      U3L1 - Simulation - Template_instruction: Use a while loop to "flip 10 coins" and write them to the screen. (Click to see full instructions)
      U3L12 Chaser Template_instruction: This is a project template!
      U3L13 - Button with ID_instruction: Drag a button out onto the screen and set its text to "Go forth!".  Run the program to make sure you can see the button.
      U3L13 - Debug Id Problem_instruction: Improve the button by choosing a descriptive and meaningful ID. (Click to see full instructions)
      U3L13 - Debug Id plus logic problem_instruction: |-
        The last problem was an example of syntax error.  App Lab did not understand which object it should be listening to for a "click" event so it showed an error message in the console to let you know.  Another kind of error is a logical error - the program is valid, but it's not doing what you want it to do.
        
        This program has 2 errors. A (tricky) syntax error and logical error.  Find them, fix them, and make the program work as expected.
      U3L13 - Debugging 1_instruction: Debug the program by verifying your IDs are being referenced properly. (Click to see full instructions)
      U3L13 - Debugging 2_instruction: Debug the program by properly ordering your button commands and event handlers. (Click to see full instructions)
      U3L13 - Debugging 3_instruction: Debug the program by fixing the logical error within the program. (Click to see full instructions)
      U3L13 - Project_instruction: Create your multi-screen app. (Click to see full instructions.)
      U3L13 - Turtle Driver Project_instruction: Create a "turtle driver" that includes buttons to move the turtle forward and turn it left and right. (Click to see full instructions)
      U3L13 - Turtle move with button_instruction: Add a button that moves the turtle when clicked.  (Click to see full instructions)
      U3L13 eventsDetails_instruction: Add an event handler to the button to move the turtle forward. (Click to see full instructions)
      U3L14 - Assigning Random Value_instruction: Write a program that simulates the rolling of two dice and reports their individual values as well as the sum. (click to see full instructions)
      U3L14 - Mini Calculator embed_instruction: You will be prompted for two numbers, one right after the other.  See what happens.  Enter different numbers until you get the idea.
      U3L14 - Unfortunate Events Free Play_instruction: Follow the "Unfortunate Events" Worksheet and enter your code here to experiment.  We've pre-loaded the code you need to start.
      U3L14 - User Input Division calculator_instruction: Write a program that acts as a simple calculator. (click to see full instructions)
      U3L14 - Variable ReAssignment pt2_instruction: Trace the code and predict what you think will be printed to the console. Then add a console.log statement at the end of the program to see the last value of someNum to see if your full prediction is correct. (click to see full Instructions)
      U3L14 - concatenate simple_instruction: Modify the write statement on line 3 to combine text and variables together to make the app display a single line of text that shows the player's lives and score. (click to see full instructions)
      U3L14 - moving memory challenge1_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge2_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge3_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge4_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge5_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge6_instruction: Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)
      U3L15 - Add reset button to UpDown app_instruction: Add code so that clicking the start over button will reset the game and send you back to the main screen. (Click to see full instructions)
      U3L15 - DEMO up down count practice app_instruction: Try out the demo app (Click to see full instructions)
      U3L15 - Debug forget to update var on reset in UpDown app_instruction: Run the app, and click the up or down button until you get to the gameOverScreen. Click 'Start Over' and try the app again. Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - Debug if never triggers in UpDown app_instruction: Run the app and use the up and down arrows to try to hit the gameOverScreen. You can't! Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - Debugging Simple If-statements =v==_instruction: Run the app, and click the up button. Then restart and run it again, and click the down button. Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - Simple If-statements in UpDown App_instruction: Add an if statement so that the app changes screens when the count reaches -5. (Click to see full instructions)
      U3L15 - add code to make count down work_instruction: Write code to make the down arrow work as expected. (Click to see full instructions)
      U3L15 - clicker update score_instruction: Add code to update the score when the apple is clicked. (Click to see full instructions)
      U3L15 - count upDown bug forget to set text_instruction: Find the bug in the program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug logic error wrong update_instruction: Find the bug in the program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug var not created globally_instruction: Find the bug in the program and fix it. (Click to see full instructions)
      U3L15 - global var example count up_instruction: Look at the code for this app and see how the code works to update the count variable when the up arrow is clicked. (Click to see full instructions).
      U3L15 - mini clicker update score_instruction: Add code to update the score when the apple is clicked. (Click to see full instructions)
      U3L15 - practice with setText_instruction: Use setText to complete the click event handler for the down arrow. (Click to see full instructions)
      U3L15 - variable scoping problem debugging_instruction: See if you can figure out why the code is no longer working. (Click to see full instructions)
      U3L15 click add lives_instruction: Add lives to the clicker game that decrement by 1 when the background image is clicked (Click to see full instructions)
      U3L15 full clicker app_instruction: Complete your clicker game! (Click to see full instructions)
      U3L16 - challenge say hi app_instruction: Write a greeting to the user when they hit 'enter' in the text input, using the 'change' event. (Click to see full instructions)
      U3L16 - chaserApp_instruction: Create your own "Chaser Game." (Click to see full instructions)
      U3L16 - chooseImages_instruction: Replace the image in your application with one of your own. (Click to see full instructions)
      U3L16 - doubleQuotes_instruction: Save a string inside a variable and log it to the console. (Click to see full instructions)
      U3L16 - hideAndShow_instruction: 'Introducing textInput, getText and write.  First run the starter code several times.  Try to change what''s written to the screen when the button is clicked. Then use getText to write to the screen what the user entered in the text box. GIF: U3L16 - useGetText.gif'
      U3L16 - hideAndShowPractice_instruction: 'You are given some starting code that puts an image and two buttons on the screen.  The image is initially hidden. Add two new event handlers: one for each button, that when clicked hide and show the image.'
      U3L16 - image and text labels_instruction: Introducing the setPosition command!  Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: 'Introducing objects other than buttons! - textLabels and images.  First try replacing your button with a textLabel.  Will the text respond to events just like the button?  Try connecting an event handler to it.  We''ve started you out with code similar to the result of the last level, you can copy your code from that level into here if you prefer. '
      U3L16 - images_instruction: 'Introducing Images.  Try replacing the textLabel with an image..  Will the image respond to events just like the button?  Try connecting an event handler to it.  We''ve started you out with code similar to the result of the last level, you can copy your code from that level into here if you prefer. '
      U3L16 - intro getText_instruction: Add an event handler to the Submit button so that when the button is clicked it will display the name entered in the text box to the console.  Use getText to get the value out of the text box. (Click to see full instructions)
      U3L16 - introSetPosition_instruction: Move the buttons to the bottom of the screen. (Click to see full instructions)
      U3L16 - introStrings_instruction: Save a string inside a variable and log it to the console. (Click to see full instructions)
      U3L16 - nameAgeTemplate_instruction: Add an Text Input box for the name and age. (Click to see full instructions)
      U3L16 - nameAgeTemplate_2018_instruction: Add an Text Input box for the name and age. (Click to see full instructions)
      U3L16 - newEventTypes_instruction: Experiment with different event types and select the one that you think is best. (Click to see full instructions)
      U3L16 - outputWithTextArea_instruction: Output a message to the 'textArea' (Click to see full instructions)
      U3L16 - projectTemplate_instruction: Create your own "Chaser App". (Click to see full instructions)
      U3L16 - quick double click_instruction: Mini-Project.  The Quick Double-Click game.  In this simple game an object (an image) moves around, or pops up randomly on the screen, as the user clicks it.  The goal of our game will be to try to double-click the object before it moves.  Part of the challenge (and fun) here is creating this app from scratch.  You can look back at your previous work for examples, but it's fun to create something from scratch, too.  Try it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: Introducing the setPosition command! Replace the moveTo in the button-click event handler to use setPosition to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: Modify the code so that the turtle moves to a random screen location when the button is clicked. (Click to see full instructions)
      U3L16 - singleSetPosition_instruction: Move the button to the middle of the screen. (Click to see full instructions)
      U3L16 - stringsVsNumbers_instruction: Run the program to see how strings and numbers behave with different arithmetic operators. (Click to see full instructions)
      U3L16 - text labels_instruction: Use the textLabel command to replace the button in your program with a text label. (Click to see full instructions)
      U3L16 - textInput getText write_instruction: Add an Text Input box for the name and age. (Click to see full instructions)
      U3L16 - toUpper_instruction: Make the name of the user appear in uppercase (Click to see full instructions)
      U3L16 - use images_instruction: Use the image command to replace the text label in your program with an image. (Click to see full instructions)
      U3L16 Mad Lib Clear Input_instruction: 'Clear the user''s previous text when the Play Again button is clicked (Click to see full instructions) '
      U3L16 Mad Lib Demo_instruction: Mad Libs Demo - Try it out!
      U3L16 Mad Lib Student Setup_instruction: 'Back to Mad Libs: To get started, set up the two screens for your Mad Libs app (Click to show full instructions)'
      U3L16 Mad Lib getText_instruction: 'Before setting the text area with your Mad Libs outline, get the user''s text and incorporate their responses. (Click to see full instructions) '
      U3L16 Mad Lib setText_instruction: 'When the Next button is clicked, set the text area to have the main outline of your How-to Mad Libs (without the user''s input). (Click to see full instructions) '
      U3L16 Mad Lib toUpper_instruction: 'Apply the toUpperCase and toLowerCase string functions to the user''s text. (Click to see full instructions) '
      U3L17 - getAndSetKeyValue_instruction: Create an image like app. (Click to see full instructions)
      U3L17 - getKeyValue_instruction: Run the program several times to observe how the setKeyValue commands now always arrive in order. (Click to see full instructions)
      U3L17 - introCallbacks_instruction: Run the program several times to observe how the setKeyValue commands now always arrive in order. (Click to see full instructions)
      U3L17 - introKeyValue_instruction: Explore your key value pairs with the Data Viewer. (Click to see full instructions)
      U3L17 - readKeyValue_instruction: Explore your key value pairs with the Data Viewer. (Click to see full instructions)
      U3L17 - setKeyValue_instruction: Create and update your key value pairs using setKeyValue. (Click to see full instructions)
      U3L17 - twoSetKeyValue_instruction: Run the program several times to observe how often setKeyValue commands arrive out of order. (Click to see full instructions)
      U3L18 comparison operators_instruction: Use console.log to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      U3L18 comparison operators_for_video_instruction: Use `console.log` to print out the different boolean expressions below to see what information they return. (Click to see full instructions)
      U3L19 - Clicker Game Freeplay Area_instruction: Use this App Lab area to improve your clicker game.  You should start by copy/pasting the code from your old game here.  We're showing a more full set of blocks in the toolbox - some of the things you might not have used yet.  Feel free to explore then and experiment if you want to.  Everything else you need should be shown.  Have fun!
      U3L19 - DEMO up down count practice app_instruction: Try out the demo app (Click to see full instructions)
      U3L19 - Debugging with consoleLog_instruction: Add console.log() statements to find out the value of a and b after the first reassignment statement a = b; (Click to see full instructions)
      U3L19 - Simple If-statements in UpDown App_instruction: Add an if statement so that the app changes screens when the count reaches -5. (Click to see full instructions)
      U3L19 - Target Clicker App_instruction: Investigate the new elements of the 'chaser-game'
      U3L19 - do concatenate string with var_instruction: "We've given you a piece of code from the previous screen.  Try changing the value assigned to foo to see the string change. \nDo this: \n1. Try changing the value assigned to foo to see the string change. \n2. By only modifying the lines of code that were given to you, try to get the output to say: “The value of foo is: 9.  And isn’t that fine.” \n"
      U3L19 - fix the var name syntax error v2_instruction: Fix the error and get it to print the value of both variables (Click to see full instructions)
      U3L19 - fix the var name syntax error_instruction: Fix the error and get it to print the value of both variables (Click to see full instructions)
      U3L19 - global var example count up_instruction: Look at the code for this app and see how the code works to update the count variable when the up arrow is clicked. (Click to see full instructions).
      U3L19 - practice with setText_instruction: Add another button that changes the text to the value of a new variable. (Click to see full instructions)
      U3L19 - test reassignment of two vars_instruction: Predict the value of a and b. Add console.log statements to find out the actual value of a and b. (Click for full instructions)
      U3L19 - three basic ops of variables_instruction: Add another variable called "lives" and set the value to 3. Print the value of the variable to the console. (Click to see full instructions)
      U3L19 - try out console log_instruction: "Try out console.log.  Do this: replace the statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).  Run the program and you should see the output show up in the console area below the workspace.  Then try adding a few more console.log statements.  Display some text.  Make another variable and display that.  \nThe app screen will be blank -- that's the point.  With console.log you can test output behind the scenes in a way the user cannot see.  \n\n\nGIF: U3L19-useconsolelog.gif"
      U3L19 - up down count practice app_instruction: Set up the down button to decrease the value of count by 1 each time it is clicked. (Click to see full instructions)
      U3L19 - updating variables pt1_instruction: 'This app is only SLIGHTLY different from the previous one, but much more dynamic.  See if you can figure out how and why the count is going up.  Once you''ve figured it out then you should be able to DO THIS: add a button to the app that when clicked makes the count go down, and updates the label.  When you''re done the app should work as shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif'
      U3L19 - variable reassignment challenge pt2_instruction: Make a prediction about the ending values of a, b, and c. Then use console.log to check your understanding (Click to see full instructions)
      U3L19 - variable reassignment part 1_instruction: Predict the value of a and b. Add console.log statements to find out the actual value of a and b. (Click for full instructions)
      U3L19 - variable scope problem 2_instruction: What is happening with foo? Play with the level to try to figure it out. (Click to see full instructions)
      U3L19 - variable scoping problem debugging_instruction: See if you can figure out why the code is no longer work. (Click to see full instructions)
      U3L19 - write var and string with same name v2_instruction: Fix the code so that the values of both variables print to the console. (Click to see full instructions)
      U3L19 - write var and string with same name_instruction: Fix the code so that the value of both variables prints to the console. (Click to see full instructions)
      U3L2 Using Simple Commands (no tooltips)_instruction: Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.
      U3L2 Using Simple Commands_instruction: Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.
      U3L2 Using Simple Commands_2018_instruction: Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: Add if, else if, and else statements to detect the movie genres Comedy, Romance, Action, and Horror. (Click to see full instructions)
      U3L23 Chatbot Intro 1a_instruction: Store the user's input inside a variable and log it to the console.
      U3L23 Chatbot Intro 2_instruction: 'Use string concatenation to store the user''s input and assistant''s answer into the conversation variable using the format "User: <input><bot name>: <default response>" . Log the conversation to the console.'
      U3L23 Chatbot Intro 2a_instruction: 'Display the conversation onto the "text_area" element. Optional: clear the user''s input after every "change" event.'
      U3L23 Chatbot Intro 3_instruction: Add newline characters "\n" to separate the user's input and the computer's response.
      U3L23 Chatbot Intro 4_instruction: Use this level to make your chatbot look and work better!
      U3L23 Chatbot Intro_instruction: Choose a specialization topic for your digital assistant. Create a basic digital assistant that takes the user's input and displays back a default response.
      U3L23 Digital Assistant 1_instruction: Set the text_area element to display the user's input from the text_input element.
      U3L23 Digital Assistant 2_instruction: Add the response "I don't know." after each of the user's inputs.
      U3L23 Digital Assistant 3_instruction: Add the response "I don't know." after each of the user's inputs.
      U3L23 Digital Assistant 4_instruction: Display the user's input and the digital assistant's response on different lines.
      U3L23 Digital Assistant 5_instruction: Start the user's command with the phrase "User:" and the digital assistant's response with the phrase "Bot:"
      U3L23 Digital Assistant 6_instruction: When the user hits Run, display the text "I'm a generic digital assistant. Ask me anything!"
      U3L24 Basic String Parsing 1_instruction: Use the function "userInput.indexOf(<food>)" to check if the strings "pizza" or "soup" are anywhere in the user's response.
      U3L24 Chatbot Basic Conditionals_instruction: Check out the project description for instructions. (Click to see full instructions.)
      U3L24 Chatbot Conditionals 2_instruction: Adjust the "if" block to make the bot respond "I don't know that color." if the user types anything besides "blue"
      U3L24 Chatbot Conditionals 3_instruction: Adjust the "if/else" block to make the bot respond to the colors blue, red, and green, and to two additional colors.
      U3L24 Chatbot Keyword Record_instruction: Use the next level to record your digital assistant's keywords/phrases.
      U3L24 Chatbot Nested Conditionals_instruction: Add a chained conditional with at least 3 "else if" statements to your personal assistant.
      U3L24 Nested Conditionals 1_instruction: Change all of the boolean expressions to use includes instead of ==. (Click to see full instructions)
      U3L24 Nested Conditionals 2_instruction: 'Nest your movie genre if statements inside the if statements to check for a ? in the input. '
      U3L24 Nested Conditionals Bugs 2_instruction: Fix the problem with the code so that all the conditions can be reached. (Click to see full instructions)
      U3L24 Nested Conditionals Bugs 3_instruction: Fix the bugs that still exist in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs_instruction: Expose the bugs in this problem by typing inputs into the user-input box. Track which inputs cause unexpected outputs.
      U3L24 introIncludes_instruction: Practice using the includes command. (Click to see full instructions)
      U3L25 - drag out key event_instruction: Set up an event handler to respond to keypress events, and display event.key in the console. Hit keys on the keyboard to see what happens. (Click to see full instructions)
      U3L25 - play sound when up key_instruction: Change the code so the sound will only play when the up arrow is pressed. (Click to see full instructions)
      U3L25 Chatbot Strings_instruction: 1. Adjust your digital assistant to evaluate inputs the same way whether the inputs are capitalized or lowercase. 2. If a user asks "What is <phrase>?", where <phrase> is an input your digital assistant does not recognize, make your digital assistant respond "I don't know what <phrase> is."
      U3L25 String Parsing 1_instruction: Given the string "Wisdom begins with wonder." what is the index of the following characters W, t, w, ., d, and k? Confirm your expectation using the string.indexOf() function.
      U3L25 String Parsing 2_instruction: Use str.length to find the length of the strings “Hello World”, “Computer science rocks!", and “I promise to do my homework every day.”
      U3L25 String Parsing 3_instruction: Write a password length checker that writes “yes” to the console if a string has a length greater than 10, or “no” if it is less than or equal to 10.  Test your function using two strings, one that will satisfy each conditional option.
      U3L25 String Parsing 4_instruction: You are given the string "Wisdom begins with wonder." Use the string.substring(begin, end) function to print "begin" and "nder" to the console.
      U3L25 String Parsing 5_instruction: "Fill in the function, findBeginNder() to get the strings \"begin\" and \"nder\" from a sentence no matter where in the sentence they exist.\nPrint the strings and their index to the console. "
      U3L25 String Parsing 6_instruction: Write a function that takes a name (first last) and reorders it (last, first).
      U3L25 String Parsing 7_instruction: You are given the string “The earth has music for those who listen.” Manipulate it using the functions str.toUpperCase() and str.toLowerCase().
      U3L26 AND operator_instruction: Update the genre and rating if statements to give only one movie suggestion at a time. (Click to see full instructions)
      U3L26 Chatbot Compound Conditionals_instruction: Update your digital assistant to include at least one each of AND, OR, and NOT
      U3L26 Chatbot Final_instruction: Update your digital assistant to include at least one each of AND, OR, and NOT
      U3L26 Compound Logic_instruction: Write a conditional statement that detects if a command contains all the phrases "2000" "animated" and "G-rated." If all these phrases are detected, make Movie Bot respond "The top grossing animated and G-rated film in the 2000 decade was Finding Nemo."
      U3L26 NOT operator_instruction: 'Write a conditional statement that detects if a command does not contain the phrase "bad." If "bad" is not detected, make Movie Bot respond normally. Otherwise, make Movie Bot respond "Sorry, I don''t know about bad movies." '
      U3L26 OR operator_instruction: Update the if statement to use an OR to check for a "?" as well as who, what, where, when, why, how in the user input. (Click to see full instructions)
      U3L27 Chatbot Final_instruction: Make your digital assistant awesome and when you are finished, ask one of your classmates to test it for you using the activity guide. As you add features to your digital assistant, track them on the next level.
      U3L2_Turtle3by3Grid_instruction: Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)
      U3L2_Turtle3by3Grid_2018_instruction: Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: Draw a square to the front and to the right of the starting location. (Click to show full instructions)
      U3L2_TurtleSquare_right_2018_instruction: Draw a square to the front and to the right of the starting location. (Click to show full instructions)
      U4 - Add Row By Hand_instruction: Add a new record to your table in the Data Viewer. (Click to see full instructions)
      U4 - Add Row By Hand_2018_instruction: Add a new record to your table in the Data Viewer. (Click to see full instructions)
      U4 - Charts - Export Data_instruction: Export the data from the “ages” table as a CSV file, then remix this app and import the CSV file. (Click to see full instructions)
      U4 - Charts - Export Data_2018_instruction: Export the data from the “ages” table as a CSV file, then remix this app and import the CSV file. (Click to see full instructions)
      U4 - Charts - Import Data 1_instruction: Download the CSV file we’ve provided, and then use the data viewer to import the data from the file into the “mytable” table. (Click to see full instructions)
      U4 - Charts - Import Data 1_2018_instruction: Download the CSV file we’ve provided, and then use the data viewer to import the data from the file into the “mytable” table. (Click to see full instructions)
      U4 - Charts - Import Data 2_instruction: Call readRecords on “mytable” and print each record to the console. (Click to see full instructions)
      U4 - Charts - Import Data 2_2018_instruction: Call readRecords on “mytable” and print each record to the console. (Click to see full instructions)
      U4 - Charts - Line Chart 1_instruction: 'Create a line chart showing the change in popularity of “#tbt” over time. (Click to see full instructions)'
      U4 - Charts - Line Chart 1_2018_instruction: 'Create a line chart showing the change in popularity of “#tbt” over time. (Click to see full instructions)'
      U4 - Charts - Line Chart 2_instruction: 'Add a second line to your chart to show the change in popularity of both “#tbt” and “#nofilter” at the same time. (Click to see full instructions)'
      U4 - Charts - Line Chart 2_2018_instruction: 'Add a second line to your chart to show the change in popularity of both “#tbt” and “#nofilter” at the same time. (Click to see full instructions)'
      U4 - Charts - Line Chart Template_instruction: This is a template.
      U4 - Charts - Remixing Apps with Data_instruction: Run this app and see what it prints to the console. Then remix the app and run the remixed version to see what happened to the data. (Click to see full instructions)
      U4 - Charts - Remixing Apps with Data_2018_instruction: Run this app and see what it prints to the console. Then remix the app and run the remixed version to see what happened to the data. (Click to see full instructions)
      U4 - Charts - Scatter Chart_instruction: Create a scatter plot of the “rottenTomatoes” table, using the new table and column names. (Click to see full instructions)
      U4 - Charts - Scatter Chart_2018_instruction: Create a scatter plot of the “rottenTomatoes” table, using the new table and column names. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords 1_instruction: Use the drawChartFromRecords block to create a scatter plot from the table in the database. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords 1_2018_instruction: Use the drawChartFromRecords block to create a scatter plot from the table in the database. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 1_instruction: Add a title to your chart and change the colors of your lines using the options parameter of drawChartFromRecords. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 1_2018_instruction: Add a title to your chart and change the colors of your lines using the options parameter of drawChartFromRecords. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 2_instruction: Look through the drawChartFromRecords API and choose some more options to customize. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 2_2018_instruction: Look through the drawChartFromRecords API and choose some more options to customize. (Click to see full instructions)
      U4 - Charts - drawChartsFromRecords 1_instruction: Add screen element, pull out drawCharts block, run the program!
      U4 - CreateRecord - 1_instruction: Add a createRecord command and run the program. (Click to see full instructions)
      U4 - CreateRecord - 1_2018_instruction: Add a createRecord command and run the program. (Click to see full instructions)
      U4 - CreateRecord - 2.5_instruction: Change the table name in createRecord then check the Data Viewer to see the new table. (Click to see  full instructions)
      U4 - CreateRecord - 2.5_2018_instruction: Change the table name in createRecord then check the Data Viewer to see the new table. (Click to see  full instructions)
      U4 - CreateRecord - 2_instruction: Change the name from "Alice" to something else in the createRecord command.  Run the program and use the Data Viewer to see the changes to your table. (Click to see full instructions)
      U4 - CreateRecord - 2_2018_instruction: Change the name from "Alice" to something else in the createRecord command.  Run the program and use the Data Viewer to see the changes to your table. (Click to see full instructions)
      U4 - CreateRecord - 3_instruction: Use createRecord to add the song object as a record to a table. (Click to see full instructions)
      U4 - CreateRecord - 3_2018_instruction: Use createRecord to add the song object as a record to a table. (Click to see full instructions)
      U4 - CreateRecord - 4_instruction: Run the program. Verify the song object was added to the database. Note the callback function now displays the copy of the record sent back back by the database. (Click to see full instructions)
      U4 - CreateRecord - 4_2018_instruction: Run the program. Verify the song object was added to the database. Note the callback function now displays the copy of the record sent back back by the database. (Click to see full instructions)
      U4 - CreateRecord - 5_instruction: Add a property to the JavaScript object, then run the program.  View the data table and see how changing the object affects the data table. (Click to see full instructions)
      U4 - CreateRecord - 5_2018_instruction: Add a property to the JavaScript object, then run the program.  View the data table and see how changing the object affects the data table. (Click to see full instructions)
      U4 - Edit Data Table by Hand_instruction: View the data table and click edit next to each row.  Add the artists names for each song by hand. (Click to see full instructions)
      U4 - Edit Data Table by Hand_2018_instruction: View the data table and click edit next to each row.  Add the artists names for each song by hand. (Click to see full instructions)
      U4 - Exploring Data Tools - Template_instruction: Use createRecord to add the song object as a record to a table. (Click to see full instructions)
      U4 - Exploring Data Tools - Template_2018_instruction: Use createRecord to add the song object as a record to a table. (Click to see full instructions)
      U4 - Objects - accessingPropertiesInArray_instruction: Access the properties of the objects stored in an array. (Click to see full instructions)
      U4 - Objects - accessingPropertiesInArray_2018_instruction: Access the properties of the objects stored in an array. (Click to see full instructions)
      U4 - Objects - arraysOfObjects_instruction: Create an array called "students" and add all 5 student objects to the array. (Click to see full instructions)
      U4 - Objects - arraysOfObjects_2018_instruction: Create an array called "students" and add all 5 student objects to the array. (Click to see full instructions)
      U4 - Objects - createContactObject_instruction: Construct a new object from the user inputs, and append it to your array. (Click to see full instructions)
      U4 - Objects - createContactObject_2018_instruction: Construct a new object from the user inputs, and append it to your array. (Click to see full instructions)
      U4 - Objects - createContactsData_instruction: Add values to the three contact objects provided in the starter code. (Click to see full instructions)
      U4 - Objects - createContactsData_2018_instruction: Add values to the three contact objects provided in the starter code. (Click to see full instructions)
      U4 - Objects - createDotNotation_instruction: Create a student Object yourself. Add properties to your object one at a time using dot notation. (Click to see full instructions)
      U4 - Objects - createDotNotation_2018_instruction: Create a student Object yourself. Add properties to your object one at a time using dot notation. (Click to see full instructions)
      U4 - Objects - createObject_instruction: 'Create an object with at least 3 properties and display it in the Debug Console. (Click to see full instructions) '
      U4 - Objects - dotNotation_instruction: Use dot notation to display individual properties of the object. (Click to see full instructions)
      U4 - Objects - dotNotation_2018_instruction: Use dot notation to display individual properties of the object. (Click to see full instructions)
      U4 - Objects - eventHandlersToSwitchScreen_instruction: Attach event handlers to the "Add Contact" and "Go Back" buttons that allow the user to switch screens. (Click to see full instructions)
      U4 - Objects - eventParameter_instruction: Trigger both the keyboard and mouse event and examine the event objects displayed in the console. Why might an object be the best way to store this information? (Click to see full instructions)
      U4 - Objects - eventParameter_2018_instruction: Trigger both the keyboard and mouse event and examine the event objects displayed in the console. Why might an object be the best way to store this information? (Click to see full instructions)
      U4 - Objects - exemplarContactsApp_instruction: Use the Contacts app and then add a contact of your own. (Click to see full instructions)
      U4 - Objects - exemplarContactsApp_2018_instruction: Use the Contacts app and then add a contact of your own. (Click to see full instructions)
      U4 - Objects - loopingArray_instruction: Loop over your array of students and print the name of every students. (Click to see full instructions)
      U4 - Objects - loopingArray2_instruction: Loop over your array of students and print the name and grade of every student. (Click to see full instructions)
      U4 - Objects - loopingCompoundConditions_instruction: Loop over the array of students and display the information of students who are present and in the 11th grade. (Click to see full instructions)
      U4 - Objects - loopingConditions_instruction: Loop over your array of student objects and display the names of every student who is present in class. (Click to see full instructions)
      U4 - Objects - pullValues_instruction: Create an event handler for the "Save Contact" button that displays the contents of the 4 text input fields in the console. (Click to see full instructions)
      U4 - Objects - pullValues_2018_instruction: Create an event handler for the "Save Contact" button that displays the contents of the 4 text input fields in the console. (Click to see full instructions)
      U4 - Objects - readStarterCode_instruction: Familiarize yourself with the starter code and UI elements provided. (Click to see full instructions)
      U4 - Objects - readStarterCode_2018_instruction: Familiarize yourself with the starter code and UI elements provided. (Click to see full instructions)
      U4 - Objects - resetIndexAndShow_instruction: Add code to your event handler for the "Save Contact" button so that when a new contact is added, the inputs are cleared, the screen is switched, and the correct contact is shown. (Click to see full instructions)
      U4 - Objects - resetIndexAndShow_2018_instruction: Add code to your event handler for the "Save Contact" button so that when a new contact is added, the inputs are cleared, the screen is switched, and the correct contact is shown. (Click to see full instructions)
      U4 - Objects - showContact1_instruction: Add code to the showCurrentContact function to show the name of the contact stored at the currentIndex of your array. (Click to see full instructions)
      U4 - Objects - showContact1_2018_instruction: Add code to the showCurrentContact function to show the name of the contact stored at the currentIndex of your array. (Click to see full instructions)
      U4 - Objects - showContact2_instruction: Add the phone number and birthday text to your text area. (Click to see full instructions)
      U4 - Objects - showContact2_2018_instruction: Add the phone number and birthday text to your text area. (Click to see full instructions)
      U4 - Objects - showContact3_instruction: Display the image information for each contact. (Click to see full instructions)
      U4 - Objects - showContact3_2018_instruction: Display the image information for each contact. (Click to see full instructions)
      U4 - Objects - showSampleImage_instruction: Attach an event handler to the image URL text input so that the user can confirm their image will work as expected. (Click to see full instructions)
      U4 - Objects - showSampleImage_2018_instruction: Attach an event handler to the image URL text input so that the user can confirm their image will work as expected. (Click to see full instructions)
      U4 - Objects - writeWrap_instruction: Use the wrap function to prevent currentIndex from leaving the bounds of your array. (Click to see full instructions)
      U4 - Read Record - 1.2_instruction: 'Place a console.log command below the readRecords command. (Click to see full instructions)  '
      U4 - Read Record - 1.2_2018_instruction: 'Place a console.log command below the readRecords command. (Click to see full instructions)  '
      U4 - Read Record - 1.3_instruction: 'Add a console.log command inside the callback function. (Click to see full instructions)  '
      U4 - Read Record - 1.3_2018_instruction: 'Add a console.log command inside the callback function. (Click to see full instructions)  '
      U4 - Read Record - 1_instruction: 'Use console.log to display the records returned by a call to readRecords. (Click to see full instructions)  '
      U4 - Read Record - 1_2018_instruction: 'Use console.log to display the records returned by a call to readRecords. (Click to see full instructions)  '
      U4 - Read Record - 2_instruction: 'Change the table name so that the records are read from the new table. (Click to see full instructions)  '
      U4 - Read Record - 2_2018_instruction: 'Change the table name so that the records are read from the new table. (Click to see full instructions)  '
      U4 - Read Record - 3_instruction: 'Change the name of the table in a readRecords command to read from a table that does not exist. (Click to see full instructions)  '
      U4 - Read Record - 3_2018_instruction: 'Change the name of the table in a readRecords command to read from a table that does not exist. (Click to see full instructions)  '
      U4 - Read Record - 4.1_instruction: 'Use indexes and dot notation to reference values in the response from the database. (Click to see full instructions)  '
      U4 - Read Record - 4.1_2018_instruction: 'Use indexes and dot notation to reference values in the response from the database. (Click to see full instructions)  '
      U4 - Read Record - 4_instruction: 'Print out each record return from the readRecords call individually. (Click to see full instructions)  '
      U4 - Read Record - 5_instruction: 'Using a for loop, display the title of each movie in your database. (Click to see full instructions)  '
      U4 - Read Record - 5_2018_instruction: 'Using a for loop, display the title of each movie in your database. (Click to see full instructions)  '
      U4 - Read Record - part 1 - template_instruction: 'Use console.log to display the records returned by a call to readRecords. (Click to see full instructions)  '
      U4 - ReadRecords - Contacts App 1_instruction: Use readRecords to copy the data in your database into your "contacts" global variable and call showCurrentContact. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 1_2018_instruction: Use readRecords to copy the data in your database into your "contacts" global variable and call showCurrentContact. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 2_instruction: Create a function called refreshLocalData. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 2_2018_instruction: Create a function called refreshLocalData. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 3_instruction: Add a call to "refreshLocalData" to the callback function of the createRecord you use to add a new contact to your database. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 3_2018_instruction: Add a call to "refreshLocalData" to the callback function of the createRecord you use to add a new contact to your database. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 4_instruction: Create a "Delete" button. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 4_2018_instruction: Create a "Delete" button. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 5 make delete work_instruction: Create an event handler for the "Delete" button you created. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 5 make delete work_2018_instruction: Create an event handler for the "Delete" button you created. (Click to see full instructions)
      U4 - add createRecord to contacts App_instruction: Add code to your contacts app so that newly-added contacts are saved in a table. (Click to see full instructions)
      U4 - add createRecord to contacts App_2018_instruction: Add code to your contacts app so that newly-added contacts are saved in a table. (Click to see full instructions)
      U4 - debug column names are case sensitive_instruction: Change song.title to song.Title (capital T).  And run the program.  Check the data table  (Click to see full instructions)
      U4 - debug column names are case sensitive_2018_instruction: Change song.title to song.Title (capital T).  And run the program.  Check the data table  (Click to see full instructions)
      U4 - deleteRecords 0_instruction: Use the deleteRecord command with default values. Verify the record was deleted. (Click for full instructions).
      U4 - deleteRecords 0_2018_instruction: Use the deleteRecord command with default values. Verify the record was deleted. (Click for full instructions).
      U4 - deleteRecords 1_instruction: Find the id of "Little Bunny Foo Foo" in the data table "mySongs".  Use the deleteRecord command to delete it.  See what happens when you try to delete an ID a second time. (Click for full Instructions).
      U4 - deleteRecords 1_2018_instruction: Find the id of "Little Bunny Foo Foo" in the data table "mySongs".  Use the deleteRecord command to delete it.  See what happens when you try to delete an ID a second time. (Click for full Instructions).
      U4 - deleteRecords 2 delete object_instruction: Use the song object to delete multiple objects in the database by changing only the "id" property. (Click for full Instructions).
      U4 - deleteRecords 2 delete object_2018_instruction: Use the song object to delete multiple objects in the database by changing only the "id" property. (Click for full Instructions).
      U4 - deleteRecords 2_instruction: Using the data viewer, find the id of a a record you want to delete. Use the deleteRecord command to delete it. (Click for full instructions).
      U4 - fix contacts by hand in data table_instruction: Use the data viewer to add rows to the data table.  Add the original hard-coded contacts from your app to the database. (Click to see full instructions)
      U4 - fix contacts by hand in data table_2018_instruction: Use the data viewer to add rows to the data table.  Add the original hard-coded contacts from your app to the database. (Click to see full instructions)
      U4 - last stage test adding contcts_instruction: Confirm that new contacts you add are saved to the database.  Verify that after restarting your app, the contacts you added no longer show in the app, but still exist in the database. (Click to see full instructions)
      U4 - last stage test adding contcts_2018_instruction: Confirm that new contacts you add are saved to the database.  Verify that after restarting your app, the contacts you added no longer show in the app, but still exist in the database. (Click to see full instructions)
      U4 Model App_instruction: Add a large red button to your screen using Design Mode. (Click for full instructions.)
      U4 Model App_2018_instruction: Add a large red button to your screen using Design Mode. (Click for full instructions.)
      U4 Model Design 1_instruction: Add a large red button to your screen using Design Mode. (Click for full instructions.)
      U4 Model Design 1_2018_instruction: Add a large red button to your screen using Design Mode. (Click for full instructions.)
      U4 vigenere cipher 2_instruction: Instrucciones
      U4L02 - Objects - Template1_instruction: Plantilla
      U4L02 - Objects - Template1_2018_instruction: Plantilla
      U4L02 - Objects - createObject_instruction: 'Create an object with at least 5 values including at least one string and one number. (Click to see full instructions) '
      U4L02 - Objects - eventParameter_instruction: Trigger both the keyboard and mouse event and examine the event objects displayed in the console. Why might an object be the best way to store this information? (Click to see full instructions)
      U4L06 Data Storage 1_instruction: "Fill in your name instead of \"Enter Your Name\", run the app and click the button. Run it multiple times with different names! Watch the console and use the ‘View Data” button to see how the table is updated. As you play around make sure you can explain the purpose of each of the circled parts of the diagram.\n\n"
      U4L06 Data Storage 2_instruction: "The app is a continuation of the previous one we started. Add a text label to collect the users name and use that as the data input for the record.\n\nRun the app and click the button multiple times and see what happens. Is there a problem you notice? "
      U4L06 Data Storage 3_instruction: We want to improve the user experience. Once they have submitted their data for storage, it would be nice to clear the textbox.  Update your app to clear the textbox after the data is stored.
      U4L06 Data Storage 4_instruction: Add a label and drop down box, to your app and save the data to your JSON object and add it to your table. Make sure to reset the dropdown after the data is stored.
      U4L06 Data Storage 5_instruction: 'Add a couple radio buttons or checkboxes to our app. Then find a way to collect the data from those. '
      U4L06 Data Storage 6_instruction: " Use one of the getTime() and getUserId() blocks to collect additional data. "
      U4L06 Data Storage 7_instruction: Add a second screen to the sample app we have been building to capture an image from a user. Return to screen 1 after the JSON object has been stored in the table.
      U4L15 Read Data 1_instruction: Run the level and see what happens. Then edit the code to make it print a different column of information.
      U4L15 Read Data 2_instruction: |-
        Student should create a sentence which puts together all the pieces from a record.
        
        <<Name>> is <<Age>> years old and like <<Food>>
      U4L15 Read Data 3_instruction: "Print the sentence using the first JSON object in the array\n\n"
      U4L15 Read Data 4_instruction: |2-
        
        Use a random record from the list of records to display your sentence.
      U5 if-else-if movie example_instruction: Add an else-if statement in order to tell the user if their guess is high or low instead of just wrong. (Click to see full instructions)
      U5 if-else-if movie example_2018_instruction: Add an else-if statement in order to tell the user if their guess is high or low instead of just wrong. (Click to see full instructions)
      U6 - Final Project - Project Level_instruction: Build your final project here. (Click to see full instructions)
      U6 - Final Project - Project Level_2018_instruction: Build your final project here. (Click to see full instructions)
      U6 - updateRecord - Callback Success Parameter_instruction: Add an if-else block inside the callback function for updateRecord. (Click to see full instructions)
      U6 - updateRecord - Callback Success Parameter_2018_instruction: Add an if-else block inside the callback function for updateRecord. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit UI_instruction: Set up the UI elements needed to edit contacts. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit UI_2018_instruction: Set up the UI elements needed to edit contacts. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit event handler_instruction: Write event handlers for the Edit Contacts UI elements. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit event handler_2018_instruction: Write event handlers for the Edit Contacts UI elements. (Click to see full instructions)
      U6 - updateRecord - Contacts - Save edited contact_instruction: Use updateRecord to store the user's edits in the database. (Click to see full instructions)
      U6 - updateRecord - Contacts - Save edited contact_2018_instruction: Use updateRecord to store the user's edits in the database. (Click to see full instructions)
      U6 - updateRecord - Default Block_instruction: Use updateRecord to change the record for "Eye of the Tiger." (Click to see full instructions)
      U6 - updateRecord - Default Block_2018_instruction: Use updateRecord to change the record for "Eye of the Tiger." (Click to see full instructions)
      U6 - updateRecord - Update Nonexistent Record_instruction: Force updateRecord to fail by changing the ID of songToUpdate. (Click to see full instructions)
      U6 - updateRecord - Update Nonexistent Record_2018_instruction: Force updateRecord to fail by changing the ID of songToUpdate. (Click to see full instructions)
      Underground Avoiding Lava_instruction: Hay lava bajo algunos de estos bloques. Tendrás que cubrirlos antes de seguir avanzando. Aquí te será útil un comando "si". Añade un comando "avanzar" en el lugar correcto para extraer los recursos de estos bloques.
      Underground Avoiding Lava_2018_instruction: Hay lava bajo algunos de estos bloques. Tendrás que cubrirlos antes de seguir avanzando. Aquí te será útil un comando "si". Añade un comando "avanzar" en el lugar correcto para extraer los recursos de estos bloques.
      Underground If Statements_instruction: Ahora las cosas se complican. Recoge tres bloques de piedra rojiza pero no te caigas en la lava. Usa un comando "si" para colocar roca sobre la lava que descubras.
      Underground If Statements_2018_instruction: Ahora las cosas se complican. Recoge tres bloques de piedra rojiza pero no te caigas en la lava. Usa un comando "si" para colocar roca sobre la lava que descubras.
      Underground Iron_instruction: Caminar hacia la lava fundida es una mala idea. Coloca rocas para crear un puente y extrae el hierro de al menos dos bloques.
      Underground Iron_2018_instruction: Caminar hacia la lava fundida es una mala idea. Coloca rocas para crear un puente y extrae el hierro de al menos dos bloques.
      Underground Mining Coal_instruction: Encontrarás los recursos más valiosos bajo tierra, pero puede estar oscuro. Coloca al menos dos antorchas y extrae al menos dos de carbón.
      Underground Mining Coal_2018_instruction: Encontrarás los recursos más valiosos bajo tierra, pero puede estar oscuro. Coloca al menos dos antorchas y extrae al menos dos de carbón.
      Unicorn Tag_instruction: Take a look at this project.  Do you see how it was made?
      Valentine_artist2_01_instruction: Program the artist to draw some grass for the Love Bug.
      Valentine_artist_01_instruction: 'Help the artist finish his llama heart. '
      Valentine_playlab_01_instruction: 'Program Kiki (Actor 1) to move left and right when the left and right arrows are pressed. When Kiki is clicked, she should throw hearts towards her friends. '
      Vigenere_instruction: Test
      Virtual Pet 1_instruction: What do you think will happen if you press "Run" and then click on her?
      Virtual Pet 2_instruction: Create an **event** so that when Geraldine touches the puddle, her color changes to brown.
      Virtual Pet 3_instruction: Add a new soap sprite to the screen.  Can you make it so that when the giraffe and the soap touch, the giraffe goes back to its normal color?
      Virtual Pet 4_instruction: Add a behavior to your soap to make it draggable, then drag it over to clean the giraffe!
      Virtual Pet 5_instruction: Add actions to each event so that when the giraffe collides with each sprite, it shrinks by 5.
      Virtual Pet 6_instruction: Add an apple that returns the giraffe back to regular size when they touch.
      Virtual Pet Freeplay_instruction: 'Freeplay: What more can you make your giraffe do? '
      WhileAdventure_instruction: Our adventurer wants to collect coins. Can you help her grab as many as she can using only one remove 1 block?
      'Widget: Black and White Pixelation_instruction': Now make your own image! We've started you off with a 10x10 canvas but you can make it whatever size you want. Happy pixeling!
      'Widget: Black and White Pixelation_2018_instruction': Now make your own image! We've started you off with a 10x10 canvas but you can make it whatever size you want. Happy pixeling!
      'Widget: Color Pixelation_instruction': 'Requirements: The icon must be 16x16 pixels. You must use the Pixelation Widget to encode the bits of color information. The image must be encoded with at least 12 bits per pixel.'
      'Widget: Color Pixelation_2018_instruction': 'Requirements: The icon must be 16x16 pixels. You must use the Pixelation Widget to encode the bits of color information. The image must be encoded with at least 12 bits per pixel.'
      'Widget: Text Compression_instruction': Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.
      'Widget: Text Compression_2018_instruction': Look for patterns (repeated words or phrases) in the text. Enter the patterns you see into the dictionary on the right. As you type entries into the dictionary, the symbol for the entry is inserted into the text in place of the pattern.
      XML Scratchpad_instruction: Using this test level to grab xml for unit tests
      aE1_instruction: "You chose to make a square napkin! \n\nTo finish, draw a square with 20 pixel sides. "
      aE2_instruction: If you place your square loop inside another loop, we call that a nested loop. What do you need to add as an outer loop to make sure all 14 napkins line up next to each other?
      aE3_instruction: "We've got to have a tablecloth!  \n\nTake your row of 14 napkins and sew 14 of those together with another **outer loop** to make a cover for our table."
      aE3alternate_instruction: Alternate
      aE3alternateB_instruction: Alternate
      aE4_instruction: Alternate
      aE5_instruction: Example of puzzle using highest difficulty level shape.
      aE6_instruction: 'How many times do you need to loop this to draw half  of a circle? '
      aE7_instruction: "Si copia ese bucle y gira a la izquierda en lugar de la derecha, ¿qué pasa? ¿Puedes repetir eso para dibujar esta ola?"
      aE8_instruction: "Ahora repitamos todo eso cuatro veces para crear este cuadro. Cuidado con las esquinas - ¡simplemente no puedes girar 90 grados! Si se repite 60 veces un giro de 3 grados hace un semicírculo, ¿cuál de estos bloques de código hará un cuarto de círculo para las esquinas?"
      aEfreeplay_instruction: Free Play!
      allHallows2017_instruction: Trap the Code.org employees in the crayon box by drawing a square with 320 pixel sides!
      allthethings data blocks test_instruction: Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).
      allthethings design mode elements_instruction: Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).
      allthethings level dataTables_instruction: Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).
      allthethings_U3 - Simple Drawing - Rectangle Width and Height_instruction: Do This
      allthethings_moviebot_instruction: This level cloned from "U3 Digital Assistant Target"
      allthethings_template_backed1_instruction: 'Backed by a template #1. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script). '
      allthethings_template_backed2_instruction: 'Backed by a template #2. Please sign in to test applab levels (By design, applab levels only work if signed in. Normally, we make people sign in, but this is only enforceable for a whole script and would be annoying to do for the allthethings script).'
      allthethings_ttscsp_instruction: Debug the program by fixing the logical error within the program. (Click to see full instructions)
      artistDebugVideo1_instruction: Use the `repeat` loop to add waves to the water.
      artistFunctionsVideo1_instruction: Follow the instructions to make your own function.
      artistLoopsK1_instruction: Este es un nuevo tipo de rompecabezas llamado "Artista". Juega con el nivel y dibuja algo divertido.
      artistLoopsK2_instruction: Now, use a `repeat` loop to draw this line five times!
      artistLoopsK2gradek_artist_loops3_instruction: Now, use a `repeat` loop to draw this line five times!
      artistLoopsK3_instruction: Draw a line eight steps long. This will become the land for our kingdom!
      artistLoopsK4_instruction: Now we need a castle with a draw bridge.  Fix the code so that the bridge lays straight instead of falling down.
      artistLoopsK5_instruction: Now we need to fix the top of the castle. Can you loop the code three times?
      artistLoopsK6_instruction: 'Someone is stuck in the tower!  Fix the stairs to set them free. '
      artistLoopsK7_instruction: 'This tower is lovely, what is downstairs? Build another staircase to find out! '
      artistLoopsK8_instruction: Wow! There's a garden over there!  Help fix these stairs so I can get to it.
      artistLoopsK9_instruction: "**Challenge:**  Lovely! Let's take a walk around the garden."
      artistLoopsKA_instruction: These stones are in the wrong place.  Help me move them so I don't fall in!
      artistLoopsKB_instruction: 'Look!  It''s a theater.  Help me set up the chairs so we can all see the stage. '
      artistLoopsKFP_instruction: Picture time!  Use what you have learned to draw a picture of what you think the Artist saw on stage.
      asteroids_instruction: This Corgi has been a good boy! Drag this carrot to him as a special treat.
      beeDebugVideo1_instruction: '¿Podrías utilizar un ciclo para recolectar todo el néctar?'
      behavior bash mary_instruction: Clone this level and make your own blocks!
      behaviors clone me 2_instruction: Clone this level and make your own blocks!
      behaviors clone me Ram_instruction: Clone this level and make your own blocks!
      behaviors clone me joshl_instruction: Clone this level and make your own blocks!
      behaviors clone me nk_instruction: Clone this level and make your own blocks!
      behaviors clone me tanya_instruction: Clone this level and make your own blocks!
      behaviors clone me_instruction: Clone this level and make your own blocks!
      behaviors pet test 123 copy_instruction: When Daisy gets a carrot, she gets excited. Use the **"when touches"** event and the "add behavior" block to make Daisy do something fun when she gets the carrot.
      behaviors pet test 123_instruction: When Daisy gets a carrot, she gets excited. Use the **"when touches"** event and the "add behavior" block to make Daisy do something fun when she gets the carrot.
      behaviors pet test 2_instruction: When Daisy gets a carrot, she gets excited. Use the **"when touches"** event and the "add behavior" block to make Daisy do something fun when she gets the carrot.
      behaviors pet test 3_instruction: "**It's time to make your own virtual pet!** You can change whatever code you want to to make your own pet. Here are some ideas:\n* Can you make your pet start a new behavior when you click on it?\n* Can you make your pet run away when you drag the vacuum to it?\n* Can you add other animal friends to your pet's area? "
      behaviors pet test_instruction: "Last time, you practiced using \"behaviors\" to make a sprite do something forever. This time, we will use behaviors to make a virtual pet. \n\nThis dog's name is Daisy. Daisy LOVES to snack on carrots. Add the \"drag and drop\" behavior to the carrot so you can move it to her."
      behaviors_caley_instruction: Clone this level and make your own blocks!
      ben's first level_instruction: Clone this level and make your own blocks!
      birdsDebugVideo1_instruction: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      bounce_1_instruction: Une un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar Programa". Mueve la paleta usando la flecha izquierda para alcanzar el objetivo final.
      bounce_10_instruction: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pasa de largo" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_10_2018_instruction: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pasa de largo" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_10_basketball_instruction: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pierde mano" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_10_sports_instruction: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pierde mano" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_11_instruction: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la paleta y la pelota y ver cuántos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_11_2018_instruction: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la paleta y la pelota y ver cuántos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_11_basketball_instruction: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la mano y la pelota y ver cuantos puntos puedes anotar antes de que tu oponente anote dos veces!
      bounce_11_sports_instruction: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la mano y la pelota y ver cuantos puntos puedes anotar antes de que tu oponente anote dos veces!
      bounce_12_instruction: Crea tu propio juego "Rebote". Puedes cambiar todos los efectos visuales y las reglas. Cuando estés listo, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      bounce_12_2018_instruction: Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones.
      bounce_12_basketball_instruction: Create your own Basketball game. You can change all the rules. When you're done, click Finish to let friends try your game on their phones.
      bounce_12_sports_instruction: 'Create your own game! You''re in charge here: you can change all the rules, mix and match sports, get creative! When you''re done, click Finish to let friends try your game on their phones.'
      bounce_1_2018_instruction: Une un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar Programa". Mueve la paleta usando la flecha izquierda para alcanzar el objetivo final.
      bounce_1_basketball_instruction: Une un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar". Mueve la mano usando la flecha izquierda para alcanzar el objetivo final.
      bounce_1_sports_instruction: '¡Llega a la bandera! Agrega un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar" para mover al jugador hasta la bandera.'
      bounce_2_instruction: Une un bloque a los bloques "cuándo flecha derecha" y "cuándo flecha izquierda". Mueve la paleta para alcanzar ambos objetivos finales.
      bounce_2_2018_instruction: Une un bloque a los bloques "cuándo flecha derecha" y "cuándo flecha izquierda". Mueve la paleta para alcanzar ambos objetivos finales.
      bounce_2_basketball_instruction: Une un bloque a los bloques "cuando flecha derecha" y "cuando flecha izquierda". Mueve la mano para alcanzar los 2 objetivos finales.
      bounce_2_sports_instruction: '¡Ahora hay dos banderas! Coloque un bloque en "cuando flecha izquierda" y "cuando flecha derecha" para mover a tu jugador en las dos direcciones.'
      bounce_3_instruction: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      bounce_3_2018_instruction: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      bounce_4_instruction: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este puzzle.
      bounce_4_2018_instruction: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este puzzle.
      bounce_5_instruction: Vamos a lanzar una pelota hacia la paleta. Une un bloque al bloque "cuando la pelota golpea la paleta" para asegurar que la pelota alcance el objetivo final.
      bounce_5_2018_instruction: Vamos a lanzar una pelota hacia la paleta. Une un bloque al bloque "cuando la pelota golpea la paleta" para asegurar que la pelota alcance el objetivo final.
      bounce_5_basketball_instruction: Lanzaremos una pelota hacia la mano. Añade un bloque al bloque "cuando la bola golpee mano" para asegurar que la pelota llegue a la bandera.
      bounce_5_sports_instruction: La pastilla de hockey se deslizará hacia el jugador. Coloque un bloque en "cuando la bola golpea al jugador".
      bounce_6_instruction: Ahora el objetivo final está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este puzzle.
      bounce_6_2018_instruction: Ahora el objetivo final está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este puzzle.
      bounce_6_basketball_instruction: Ahora la bandera está en la parte superior. Necesitas añadir bloques a ambos bloques "cuando la bola golpee" para resolver este acertijo.
      bounce_6_sports_instruction: Ahora la bandera está en la parte superior. Necesitas añadir bloques a ambos bloques "cuando la bola golpee" para resolver este acertijo.
      bounce_7_instruction: Une bloques a cada uno de los bloques "cuando". Rebota la pelota hasta que alcance el objetivo final.
      bounce_7_2018_instruction: Une bloques a cada uno de los bloques "cuando". Rebota la pelota hasta que alcance el objetivo final.
      bounce_7_basketball_instruction: Coloca bloques cada uno de lo bloques "cuando". Bota la pelota hasta que toque la bandera.
      bounce_7_sports_instruction: Coloca bloques cada uno de lo bloques "cuando". Bota la pelota hasta que toque la bandera.
      brendan behaviors clone_instruction: Clone this level and make your own blocks!
      brendan hackathon level_instruction: these are the instructions for my level.  you should do this level and have a good time.
      clone me mary_instruction: Clone this level and make your own blocks!
      collector example_instruction: Put these blocks in order to collect all of the gold and solve the puzzle.
      collectorDebugVideo2_instruction: Put these blocks in order to collect all of the gold and solve the puzzle.
      collectorSkinVideo1_instruction: Collect all four piles to pass this level.
      collectorSkinVideo2_instruction: Collect one pile of gold to pass this level.
      comment_intro_maze_2018_instruction: Use the new `comment` block to leave yourself quick reminders.
      conditionals_forvideo_harvester_instruction: Collect all of the corn and lettuce, then pick the pumpkin.
      conditionals_forvideo_playlab_instruction: Score as many points as you can!
      course1_artist_loops_challenge1_instruction: |-
        You can use a loop to draw many lines in a row.
        
        Can you draw a house? Make it look just the way you like it!  Try looking for patterns that repeat!
      course1_artist_loops_challenge2_instruction: "¡Vamos a jugar un juego!! Dibuja tantas X como tú\npuedas! ¿Puedes obtener 3 en una fila?"
      course1_artist_loops_challenge3_instruction: '"¿Puedes ayudarme a hacer dos casas para pájaros?"'
      course1_artist_loops_challenge4_instruction: '"¡Es hora de tirar los dados! ¿Puedes ayudarme a dibujar estos?"'
      course1_collector_loops_challenge1_instruction: '"Can you help me spot some bugs? I know which way I want to go, but I''m not sure how many steps to take."'
      course1_collector_loops_challenge2_instruction: 'Esta vez solo puedes usar uno de cada bloque de flecha. ¡Obtén todo el tesoro! '
      course1_collector_loops_challenge3_instruction: 'Esta vez solo puedes usar uno de cada bloque de flecha. ¡Obtén todo el tesoro! '
      course1_collector_loops_challenge4_instruction: '¡Consigamos el tesoro! Ayúdame a cruzar cada fila y luego regresa para comenzar la siguiente fila. ¿Puedes encontrar un patrón?'
      course1_maze_debugging_challenge1_instruction: Debug this level. Remove the extra blocks and add the missing blocks. Get the bird to the pig!
      course1_maze_debugging_challenge2_instruction: Depura este nivel. ¡Estos son los bloques correctos, pero están en el orden equivocado!
      course1_maze_seq_challenge1_instruction: '"Trace the path and lead me to the silly pig. Avoid TNT or the feathers will fly!"'
      course1_maze_seq_challenge2_instruction: You can only move up to four times in each direction. Can you find a path before you run out of blocks?
      course1_playlab_events_challenge1_instruction: '"Where are my friends hiding? Can you write code to show the rest of my friends?"'
      course1_playlab_events_challenge2_instruction: '"Let''s have a party! Give my friends something to do when you click or tap them."'
      course2_artist_nestedLoops_challenge1_instruction: '¿Puedes descifrar cómo hacer una imagen como esta?'
      course2_artist_nestedLoops_challenge2_instruction: '¿Puedes descifrar cómo hacer una imagen como esta?'
      course2_artist_prog_challenge1_instruction: Draw rooms for each of the animals. There are many different ways to solve this puzzle, so have some fun. The shortest possible solution is 6 blocks, but use as many as you like!
      course2_artist_prog_challenge2_instruction: "*¡Ayúdame a pintar de amarillo las líneas en este camino!*"
      course2_bee_conditionals_challenge1_instruction: Recoge todo el néctar o haz toda la miel.
      course2_bee_conditionals_challenge2_instruction: Recoge todo el néctar o haz toda la miel.
      course2_collector_loops_challenge2_instruction: Get all of the treasure!
      course2_collector_prog_challenge1_instruction: Look carefully! Can you collect all *10* pieces of treasure?
      course2_collector_prog_challenge2_instruction: There are 20 pieces of treasure to be found. Collect at least half to finish this challenge!
      course2_harvester_loops_challenge1_instruction: Recoge todo el maíz.
      course2_harvester_loops_challenge2_instruction: Recoge toda la lechuga. ¡Evita los áboles y los campos!
      course2_maze_loops_challenge1_instruction: 'Ahora Scrat quiere intentarlo utilizando bucles para encontrar su bellota! '
      course2_maze_programming_challenge1_instruction: '*"The pig is hiding! Can you help me find a way around?"*'
      course2_maze_programming_challenge2_instruction: A veces hay más de una forma de resolver el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      course2_maze_seq_challenge1_instruction: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      course2_maze_seq_challenge2_instruction: You can only move up to four times in each direction. Can you find a path before you run out of blocks?
      course2_playlab_stage17_1_instruction: "¿Puedes hacer que Jorge el Perro (actor 1)\ndiga \"Hola\"?"
      course2_playlab_stage17_10_instruction: |-
        Agrega bloques al evento "cuando se ejecuta"
        para cambiar el fondo y la velocidad de Waddles.\r
        \r
        Juega y
        mueve a Waddles con las flechas hasta que anotes.
      course2_playlab_stage17_11_instruction: Crea tu propia historia. Cuando finalices, haz clic en Terminar para que tus amigos prueben tu historia en sus teléfonos.
      course2_playlab_stage17_2_instruction: '¿Puedes hacer que el perro diga algo y que a continuación el gato le conteste?'
      course2_playlab_stage17_3_instruction: '¿Puedes escribir un programa para hacer que el perro se mueva hasta el gato?'
      course2_playlab_stage17_4_instruction: "¿Puedes escribir un programa que haga que\nJorge (actor 1) mueva a Olive el Gato, y que Olive diga \"Hola\" cuando Jorge\nla alcance?"
      course2_playlab_stage17_5_instruction: "¿Puedes escribir un programa que haga que Octavia\ndiga \"Hola\" cuando se hace clic en ella?"
      course2_playlab_stage17_6_instruction: "Ahora, ¡escribe un programa que haga que Waddles\nse mueva usando las teclas arriba/abajo/izquierda/derecha para tocar a todos los blancos!"
      course2_playlab_stage17_7_instruction: The `repeat forever` block allows you to run code over and over forever. Can you attach blocks to move Chomp the Dino (actor 2) up and down forever?
      course2_playlab_stage17_8_instruction: "¡Puedes hacer que Waddles (actor 1) diga\n\"Ouch!\" y reproduzca un sonido de \"toque\" si choca con Chomp?\\r\n\\r\nCuando termines,\njuega para que esto suceda."
      course2_playlab_stage17_9_instruction: "¿Puedes agregar un bloque para ganar un punto\ncuando Waddles choque con Octavia (actor 3)?\\r\n¡Juega y mueve a Waddles\ncon las flechas hasta que anotes!"
      course3_artist_concept_challenge1_instruction: Feel free to use trial and error. You are not expected to get the image perfect the first time.   Want to see more hints?  Click here!
      course3_artist_functions_challenge1_instruction: Una vez que defines una función, puedes llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      course3_artist_functions_challenge2_instruction: Intenta este código para ver cómo funciona, ¡luego has tu programa propio!
      course3_bee_debugging_challenge1_instruction: Watch how the bee gets the nectar. Can you use the same kind of pattern to help the bee make all of the honey?
      course3_bee_functions_challenge1_instruction: Estás por tu cuenta para este desafío. ¡Esto puede "ser" más díficil de lo que parece!
      course3_bee_functions_challenge2_instruction: You are on your own for this challenge!
      course3_bee_functions_challenge3_instruction: Crea una función para recoger todo el néctar y la miel mientras hay un camino por delante. ¡Úsalo para completar el rompecabezas!
      course3_bee_functions_challenge4_instruction: '¡Usa todo lo que has aprendido para completar el rompecabezas!'
      course3_collector_debugging_challenge2_instruction: '¿Eres experto en bucles anidados? ¡Usa lo que has aprendido hasta ahora para recolectar todo el tesoro!'
      course3_farmer_condLoops_challenge1_instruction: Turn right at the pumpkins. Collect everything to complete the level. Each hidden crop has only one corn or lettuce.
      course3_farmer_condLoops_challenge2_instruction: Recoge todo para completar el nivel.
      course3_farmer_until_challenge2_instruction: Usa bloques si/más para seguir el camno con curvas. En cada esquina, usa el comando 'remover 1' en un bucle para limpiar los montones.
      course3_maze_debugging_challenge1_instruction: '*"Am I just going around in circles?"*'
      course3_maze_debugging_challenge2_instruction: '*"If I turn too often, I might get dizzy! Help me reach the acorn with only four `turn` commands."*'
      course3_maze_until_challenge1_instruction: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      course3_playLab_challenge1_instruction: "Algo debería suceder cuando obtegas suficientes puntos o cuando se te acaben los puntos. Agrega algo de código a las funciones 'ganar juego' y 'perder juego' para hacer que el juego funcione de la manera que deberñia. \n¡Haz clic en las pistas para más ideas!"
      course3_playlab_challenge2_instruction: '¿Puedes descifrar como funciona esta aplicación "Adivino"? Haz clic en ''MÁS'' para ver tus desafíos.'
      course3_playlab_stage16_1_instruction: '¿Puedes hacer que este perro diga "Hola mundo"?'
      course3_playlab_stage16_2_instruction: '¿Puedes hacer que el perro diga algo y que el gato le conteste algo?'
      course3_playlab_stage16_3_instruction: '¿Puedes crear un programa que haga que el perro se mueva hacia el gato?'
      course3_playlab_stage16_4_instruction: '¿Puedes escribir un programa que haga que el perro se mueva hacia el gato, y que el gato diga "hola" cuando el perro se acerque a él?'
      course3_playlab_stage16_5_instruction: '¿Puedes agregar un bloque para que el pulpo esté feliz?'
      course3_playlab_stage16_6_instruction: Crea tu propia historia. Cuando finalices, haz clic en Terminar para que tus amigos prueben tu historia en sus teléfonos.
      course3_playlab_stage17_1_instruction: '¿Puedes escribir un programa para hacer que el pulpo diga "hola" cuando se hace clic sobre él?'
      course3_playlab_stage17_2_instruction: '¿Puedes escribir un programa que haga que este pingüino se mueva al presionar las teclas de flecha arriba/abajo/izquierda/derecha para alcanzar todos los objetivos?'
      course3_playlab_stage17_3_instruction: El bloque de "repetir para siempre" te permite ejecutar el código de manera continua. ¿Puedes adjuntar los bloques que se necesitan para mover este dinosaurio hacia arriba y hacia abajo continuamente?
      course3_playlab_stage17_4_instruction: '¿Puedes hacer que el pingüino diga "¡Ouch!" y reproduzca un sonido de "golpe", si él choca con el dinosaurio? Hay que moverlo con las teclas de flecha para hacer que esto ocurra'
      course3_playlab_stage17_5_instruction: '¿Puedes agregar un bloque para anotar un punto cuando el pingüino choque con el pulpo?, hay que moverlo con las teclas de flecha para anotar un punto'
      course3_playlab_stage17_6_instruction: '¿Puedes agregar bloques para cambiar el fondo y la velocidad del pingüino y moverlo con las teclas de flecha hasta anotar?'
      course3_playlab_stage17_7_instruction: Crea tu propia historia. Cuando finalices, haz clic en Terminar para que tus amigos prueben tu historia en sus teléfonos.
      course4_artist_binary_challenge1_instruction: Sólo puedes usar cada valor binario (0 ó 1) una vez cada un en este rompecabezas. Intenta usar bucles anidados para completar este dibujo.
      course4_artist_binary_challenge2_instruction: '¿Eres lo suficientemente persevaerante para restaurar este logo de vuelta a lo normal?'
      course4_artist_concept_challenge2_instruction: Crea cinco molinillos usando el código de más abajo.
      course4_artist_functions_challenge2_instruction: Intenta este código para ver cómo funciona, ¡luego has tu programa propio!
      course4_artist_fwp_challenge1_instruction: Intente ejecutar este programa y haga cambios para ver que ocurre. ¿Puedes averiguar cómo funciona? (o elimínalo y reemplázalo con algo totalmente diferente)
      course4_artist_variables_challenge1_instruction: '¡Has aprendido todo lo que necesitas saber para hacer un patrón como este! Este rompecabezas está hecho para ser díficil. ¿Puedes quedarte aqeí hsta quue descifres la solución?'
      course4_artist_variables_challenge2_instruction: '¡Has aprendido todo lo que necesitas saber para hacer un patrón como este! Este rompecabezas está hecho para ser díficil. ¿Puedes quedarte aqeí hsta quue descifres la solución?'
      course4_bee_for_challenge1_instruction: Use this for loop to collect all of the nectar. There are a few actions that you will want to repeat 'counter' times.
      course4_bee_fwp_challenge1_instruction: Usa un 'bucle para' en una función para recoger todo el máiz. El mismo 'bucle para' puede contar a valores máximos diferentes usando el parametro 'longitud'.
      course4_bee_fwp_challenge2_instruction: Use one `for loop` in a function to collect all of the vegetables in the row. Make the `for loop` can count to different maximum values by using the `length` parameter. Make your program as short as possible by using a second `for loop` outside the function.
      course4_collector_nested_loops_challenge2_instruction: Ayuda al recolector a alcanzar al menos dos pilas del tesoro usando solo los bloques en tu caja de herramientas. Es posible recolectar las 4.
      course4_harvester_nested_loops_challenge1_instruction: '"¡Necesito ayuda en la granja! Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."'
      course4_playlab_variables_challenge1_instruction: "Usa estos bloques para hacer \nque los actores compartan una broma de toc-toc. ¡Cambia la configuración y la frase final para contar con tu propio chiste!"
      course4_playlab_variables_challenge3_instruction: '¿Puedes descifrar como funciona esta aplicación "Adivino"? Haz clic en ''MÁS'' para ver tus desafíos.'
      courseA_artist_loops1_instruction: Este es un nuevo tipo de rompecabezas llamado "Artista". Juega con el nivel y dibuja algo divertido.
      courseA_artist_loops10_instruction: '¡Ayúdame a poner piedras para que no me caiga!'
      courseA_artist_loops10_2018_instruction: '¡Ayúdame a poner piedras para que no me caiga!'
      courseA_artist_loops11_instruction: Ayúdame a construir pasos para ver cómo navega el barco.
      courseA_artist_loops11_2018_instruction: Ayúdame a construir pasos para ver cómo navega el barco.
      courseA_artist_loops12_instruction: El artista vio algo gracioso en la distancia.  Dibuja lo que crees que vio.
      courseA_artist_loops12_2018_instruction: El artista vio algo gracioso en la distancia.  Dibuja lo que crees que vio.
      courseA_artist_loops1_2018_instruction: Este es un nuevo tipo de rompecabezas llamado "Artista". Juega con el nivel y dibuja algo divertido.
      courseA_artist_loops2_instruction: Ayude al artista a dibujar esta línea dos veces hacia adelante.
      courseA_artist_loops2_2018_instruction: Ayude al artista a dibujar esta línea dos veces hacia adelante.
      courseA_artist_loops3_instruction: Dibuja una línea hacia adelante cinco veces.
      courseA_artist_loops3_2018_instruction: Dibuja una línea hacia adelante cinco veces.
      courseA_artist_loops4_instruction: Ahora, utiliza un ciclo de repetición para dibujar esta línea cinco veces!
      courseA_artist_loops4_2018_instruction: Ahora, utiliza un ciclo de repetición para dibujar esta línea cinco veces!
      courseA_artist_loops5_instruction: Dibuja una línea de siete pasos de largo. Esto se convertirá en nuestro horizonte.
      courseA_artist_loops5_2018_instruction: Dibuja una línea de siete pasos de largo. Esto se convertirá en nuestro horizonte.
      courseA_artist_loops6_instruction: Pongamos una buena colina en la parte de atrás.
      courseA_artist_loops6_2018_instruction: Let's put a nice hill in the back.
      courseA_artist_loops7_instruction: Utilizar el ciclo de repetición para agregar las ondas al agua.
      courseA_artist_loops7_2018_instruction: Use the `repeat` loop to add waves to the water.
      courseA_artist_loops7_forVideo_instruction: Utilizar el ciclo de repetición para agregar las ondas al agua.
      courseA_artist_loops8_instruction: Necesitamos una escalera hasta el bote.
      courseA_artist_loops8_2018_instruction: We need a ladder up to the boat.
      courseA_artist_loops9_instruction: 'Desafío: Arregla las escaleras.'
      courseA_artist_loops9_2018_instruction: 'Desafío: Arregla las escaleras.'
      courseA_artist_loops_challenge1_instruction: '¿Puedes dibujar una casa? ¡Haz que se vea como a ti te gusta!'
      courseA_artist_loops_challenge1_2018_instruction: "¿Puedes dibujar una casa? ¡Haz que \nse vea como a ti te gusta!"
      courseA_artist_loops_challenge2_instruction: '"¿Puedes ayudarme a hacer dos casas para pájaros?"'
      courseA_artist_loops_challenge2a_instruction: '* "¡Ayúdame a armar estas tres carpas!" *'
      courseA_artist_loops_challenge2a_2018_instruction: '* "¡Ayúdame a armar estas tres tiendas!" *'
      courseA_artist_loops_challenge3_instruction: '¡Vamos a jugar un juego!! Dibuja tantas X como tú puedas! ¿Puedes obtener 3 en una fila?'
      courseA_bee_seq1_instruction: Juega con estos bloques para ayudar a la abeja a obtener * un * néctar.
      courseA_bee_seq10_instruction: '¡Inténtalo tu mismo! Obtén todo el néctar.'
      courseA_bee_seq11_instruction: Obtén todo el néctar.
      courseA_bee_seq12_instruction: Juega con estos bloques para ayudar a la abeja a obtener * un * néctar.
      courseA_bee_seq13_instruction: "Utilizar tres `Poner West` bloques y un 'Obtener Nectar`\n bloque."
      courseA_bee_seq14_instruction: Utilizar tres `Poner West` bloques y un 'Obtener Nectar` bloque.
      courseA_bee_seq2_instruction: '¡Ayuda a la abeja a obtener el néctar!'
      courseA_bee_seq3_instruction: Encuentra el error y arréglalo!
      courseA_bee_seq4_instruction: Inténtalo tú mismo!
      courseA_bee_seq5_instruction: Inténtalo tú mismo!
      courseA_bee_seq6_instruction: '¡Ahora la abeja necesita obtener el néctar de dos flores!'
      courseA_bee_seq7_instruction: '¡Agrega dos bloques para terminar este rompecabezas!'
      courseA_bee_seq8_instruction: '¡ Asegúrate de obtener el néctar de cada flor!'
      courseA_bee_seq9_instruction: '¡ Asegúrate de obtener el néctar de cada flor!'
      courseA_collector_loops1_instruction: '¡Mueva a Laurel y obtenga todo el tesoro que pueda!'
      courseA_collector_loops10_instruction: Ayuda a Laurel a obtener todo el tesoro a lo largo de este camino.
      courseA_collector_loops10_2018_instruction: Ayuda a Laurel a obtener todo el tesoro a lo largo de este camino.
      courseA_collector_loops11_instruction: Ayuda a Laurel a obtener todo el tesoro de esta cueva.
      courseA_collector_loops11_2018_instruction: Ayuda a Laurel a obtener todo el tesoro de esta cueva.
      courseA_collector_loops12_instruction: '* "¡Eureka, consigue todo el tesoro que puedas!" *'
      courseA_collector_loops12_2018_instruction: '* "¡Eureka, consigue todo el tesoro que puedas!" *'
      courseA_collector_loops1_2018_instruction: '¡Mueva a Laurel y obtenga todo el tesoro que pueda!'
      courseA_collector_loops2_instruction: Obtenga las tres pilas para pasar este nivel.
      courseA_collector_loops2_2018_instruction: Obtenga las tres pilas para pasar este nivel.
      courseA_collector_loops4_instruction: Arregla el camino de Laurel para obtener todo este tesoro.
      courseA_collector_loops4_2018_instruction: Arregla el camino de Laurel para obtener todo este tesoro.
      courseA_collector_loops5_instruction: Usa lo que aprendiste para obtener todo el tesoro.
      courseA_collector_loops5_2018_instruction: Usa lo que aprendiste para obtener todo el tesoro.
      courseA_collector_loops6_instruction: "Añade bloques a esté código para conseguir\ntodo el tesoro."
      courseA_collector_loops6_2018_instruction: "Añade bloques a esté código para conseguir\ntodo el tesoro."
      courseA_collector_loops7_instruction: "¿Qué deberias añadirle a este código para\nconseguir todo el tesoro?"
      courseA_collector_loops7_2018_instruction: "¿Qué deberias añadirle a este código para\nconseguir todo el tesoro?"
      courseA_collector_loops8_instruction: "Escribe el código para obtener\ntodo este tesoro."
      courseA_collector_loops8_2018_instruction: "Escribe el código para obtener\ntodo este tesoro."
      courseA_collector_loops9_instruction: "** Desafío: ** ¡El tesoro sigue\npor estas escaleras! Escribe el código para ayudar a Laurel a obtenerlo todo."
      courseA_collector_loops9_2018_instruction: "** Desafío: ** ¡El tesoro sigue\npor estas escaleras! Escribe el código para ayudar a Laurel a obtenerlo todo."
      courseA_collector_loops_challenge1_instruction: "\"¿Puedes ayudarme a encontrar\nerrores?\"*"
      courseA_collector_loops_challenge1_2018_instruction: "\"¿Puedes ayudarme a encontrar\nerrores?\"*"
      courseA_collector_loops_challenge2_instruction: '¡Consigue todo el tesoro! '
      courseA_collector_loops_challenge2kp_instruction: "Recolecta por lo menos **3** piezas\nde tesoro para pasar este nivel."
      courseA_collector_loops_challenge2kp_2018_instruction: "Recolecta por lo menos **3** piezas\nde tesoro para pasar este nivel."
      courseA_collector_preLoops1_instruction: "¡Esta es Laurel la Aventurera!\n\\r\n\\r\nPresiona el botón \"Ejecutar\" para verla caminar hasta el tesoro y tomarlo."
      courseA_collector_preLoops2_instruction: "¡Bien!  ¡Ahora tu puedes agregar el código!  \\r\n\\r\nColoca\nun bloque ´recoger tesoro´al fondo del programa y presiona \"Ejecutar\"."
      courseA_collector_preLoops3_instruction: Agrega dos bloques `E -->`y uno de ´recoger tesoro´ al final del programa, luego haz click en "Ejecutar".
      courseA_collector_preLoops4_instruction: '¿Puedes resolver este rompecabezas?'
      courseA_collector_preLoops5_instruction: "Consigue una de estas dos gemas para resolver este\nacertijo."
      courseA_collector_preLoops6_instruction: "Consigue las dos piezas del tesoro para resolver\neste acertijo."
      courseA_collector_preLoops7_instruction: Obten las tres pilas para pasar este nivel.
      courseA_forVideoTest_artist_instruction: Utilicé el ciclo de repetición para agregar olas al agua.
      courseA_harvester_forVideo_instruction: '¿Puedes recoger todo el maíz utilizando únicamente ** un ** bloque ´mover´?'
      courseA_harvester_loops1_instruction: '¡Ayuda a la cosechadora recoger el maíz!'
      courseA_harvester_loops10_instruction: '¡Ayuda a la cosechadora a recoger todo el maíz!'
      courseA_harvester_loops11_instruction: '¡Intenta uno más por tu cuenta! '
      courseA_harvester_loops2_instruction: '¡Asegurate de recoger todo el maiz!'
      courseA_harvester_loops3_instruction: '¿Puedes recoger todo el maíz utilizando únicamente ** un ** bloque ´mover´?'
      courseA_harvester_loops4_instruction: '¿Puede ayudar a la cosechadora encontrar el error en su código?'
      courseA_harvester_loops5_instruction: '¡Compruébalo tú mismo! ¿Puedes recoger el maíz al final?'
      courseA_harvester_loops5a_instruction: '¡Mira todo este maíz! ¿Puede recogerlo todo por ti mismo?'
      courseA_harvester_loops5b_instruction: '¿Puedes cambiar tu código para que la cosechadora pueda recoger el maíz?'
      courseA_harvester_loops6_instruction: Se necesita ** un ** bloque 'Mover al Sur' y ** un ** bloque 'Mover al oeste'.
      courseA_harvester_loops7_instruction: '¡Inténtalo! '
      courseA_harvester_loops8_instruction: Este es el mismo rompecabezas, pero ahora tienes que repetir ** tres ** veces!
      courseA_harvester_loops9_instruction: '¿Sabes cómo recoger todo el maíz?'
      courseA_harvester_seq1_instruction: Juega con estos bloques para ayudar a la cosechadora a recoger el maíz.
      courseA_harvester_seq10_instruction: '¡Asegurate de recoger todo el maiz!'
      courseA_harvester_seq11_instruction: '¡Inténtalo! Recoge el maíz.'
      courseA_harvester_seq12_instruction: Recoge todo el maíz.
      courseA_harvester_seq13_instruction: "Juega con estos bloques para ayudar a la cosechadora a \nrecoger **un**maíz."
      courseA_harvester_seq2_instruction: Usa tres bloques "mover oeste" y un bloque "recoger maíz" para resolver este rompecabezas.
      courseA_harvester_seq3_instruction: Utilizar tres bloques "Mover Norte" y un bloque "Recoger Maíz".
      courseA_harvester_seq4_instruction: Agrega un bloque para ayudar a la cosechadora a recoger el maíz.
      courseA_harvester_seq5_instruction: Encuentra el error y arréglalo!
      courseA_harvester_seq6_instruction: Inténtalo tú mismo!
      courseA_harvester_seq7_instruction: Inténtalo tú mismo!
      courseA_harvester_seq8_instruction: '¡Ahora la cosechadora necesita recoger maíz dos veces!'
      courseA_harvester_seq9_instruction: '¡Agrega dos bloques para terminar este rompecabezas!'
      courseA_maze_ramp2_2018_instruction: Junta todos los bloques para terminar tu código, luego haz clic en "Ejecutar".
      courseA_maze_ramp2a_2018_instruction: Junta todos los bloques para terminar tu código, luego haz clic en "Ejecutar".
      courseA_maze_ramp3_2018_instruction: Hay un bloque extra que va a causar que el pájaro choque. Elimínalo arrastrandolo de vuellta a la caja de herramientas.
      courseA_maze_ramp3a_2018_instruction: Agrega un bloque "Norte" en la parte inferior de los otros bloques para terminar este código, luego haz clic en "Ejecutar".
      courseA_maze_ramp3b_2018_instruction: Add a `North` block to the bottom of the other blocks to finish this code, then click "Run".
      courseA_maze_ramp4_2018_instruction: '¡Evita el TNT o volarán las plumas!'
      courseA_maze_ramp4a_2018_instruction: '¿Puedes descubrir qué bloque necesitas agregar al final de los otros bloques para terminar este código?'
      courseA_maze_ramp5_2018_instruction: Evita el TNT.
      courseA_maze_ramp5a_2018_instruction: '¡Lleva al pájaro hasta el cerdo!'
      courseA_maze_seq1_instruction: '¡Lleva al pájaro hasta el cerdo malo!'
      courseA_maze_seq10_instruction: 'Desafío: ¡Muévete alrededor del TNT para llevar al pájaro hasta el cerdo! '
      courseA_maze_seq10_2018_instruction: 'Desafío: Evita el TNT para llevar el pájaro al cerdo! '
      courseA_maze_seq11_instruction: Muévete en una dirección, luego en otra para llevar el pájaro al cerdo.
      courseA_maze_seq11_2018_instruction: Muévete en una dirección, luego en otra para llevar el pájaro al cerdo.
      courseA_maze_seq12_instruction: '¡Atrapa a ese cerdo! '
      courseA_maze_seq12_2018_instruction: '¡Atrapa a ese cerdo! '
      courseA_maze_seq13_instruction: Obtener el cerdo de cualquier manera que puedas!
      courseA_maze_seq13_2018_instruction: Obtener el cerdo de cualquier manera que puedas!
      courseA_maze_seq1_2018_instruction: '¡Lleva al pájaro hasta el cerdo malo!'
      courseA_maze_seq2_instruction: '¡Cambie el código para traerme al cerdo!'
      courseA_maze_seq2_2018_instruction: '¡Cambie el código para traerme al cerdo!'
      courseA_maze_seq3_instruction: '¡Arregla el código para llevar el pájaro al cerdo!'
      courseA_maze_seq3_2018_instruction: '¡Arregla el código para llevar el pájaro al cerdo!'
      courseA_maze_seq4_instruction: Agregue 1 bloque para mover el pájaro al cerdo!
      courseA_maze_seq4_2018_instruction: '¡RETIRA un bloque para llevar al pájaro al cerdo!'
      courseA_maze_seq4a_instruction: "Lleva el pájaro al cerdo usando la menor cantidad posible de\n bloques."
      courseA_maze_seq5_instruction: Pruébelo usted mismo desde el principio.
      courseA_maze_seq5_2018_instruction: Dale una oportunidad a este.
      courseA_maze_seq5a_2018_instruction: '¿Qué puedes agregar al final de este código para llevar al pájaro al cerdo?'
      courseA_maze_seq6_instruction: '¡Muéveme en una dirección, luego en otra para llevarme el cerdo!'
      courseA_maze_seq6_2018_instruction: '¡Muéveme en una dirección, luego en otra para llevarme el cerdo!'
      courseA_maze_seq7_instruction: '¡Descubre lo que falta y luego agrega bloques para llevar el pájaro al cerdo!'
      courseA_maze_seq7_2018_instruction: '¡Descubre lo que falta y luego agrega bloques para llevar el pájaro al cerdo!'
      courseA_maze_seq8_instruction: '¡Resuelve este nivel y lleva el pájaro al cerdo!'
      courseA_maze_seq8_2018_instruction: '¡Resuelve este nivel y lleva el pájaro al cerdo!'
      courseA_maze_seq9_instruction: '¡Depure este nivel agregando bloques para llevar el pájaro al cerdo!'
      courseA_maze_seq9_2018_instruction: '¡Depure este nivel agregando bloques para llevar el pájaro al cerdo!'
      courseA_maze_seq_challenge1_instruction: Algo está mal aquí. ¡Ayuda a arreglar el código para llevar el pájaro al cerdo!
      courseA_maze_seq_challenge1_2018_instruction: Algo está mal aquí. ¡Ayuda a arreglar el código para llevar el pájaro al cerdo!
      courseA_maze_seq_challenge2_instruction: Traza el camino para llevar el pájaro al cerdo. ¡Evita TNT o las plumas volarán!
      courseA_maze_seq_challenge2_2018_instruction: Traza el camino para llevar el pájaro al cerdo. ¡Evita TNT o las plumas volarán!
      courseA_playLab_events1_instruction: "Este es un nivel de Play Lab. Mueva los bloques \nal espacio de trabajo y vea qué sucede!"
      courseA_playLab_events1_2018_instruction: "Este es un nivel de Play Lab. Mueva los\n bloques al espacio de trabajo y vea qué sucede!"
      courseA_playLab_events2_instruction: Jorge el Perro quiere decir "Hola". ¿Puedes ayudarlo?
      courseA_playLab_events2_2018_instruction: Jorge the Dog wants to say "Hi there."  Can you help him?
      courseA_playLab_events3_instruction: Conecte el bloque "moverse a la izquierda" al bloque "cuando izquierda" que que ya está en el espacio de trabajo.
      courseA_playLab_events3_2018_instruction: Conecte el bloque "moverse a la izquierda" al bloque "cuando izquierda" que ya está en el espacio de trabajo.
      courseA_playLab_events4_instruction: Ahora, consigue Jorge a la derecha cuando se haga clic en el botón 'derecho'.
      courseA_playLab_events4_2018_instruction: Ahora, consigue Jorge a la derecha cuando hagas clic en el botón 'derecho'.
      courseA_playLab_events5_instruction: Agregue eventos para que Jorge se mueva hacia arriba y hacia abajo cuando se presionen los botones 'arriba' y 'abajo'.
      courseA_playLab_events5_2018_instruction: Agregue eventos para que Jorge se mueva hacia arriba y hacia abajo cuando se presionen los botones 'arriba' y 'abajo'.
      courseA_playLab_events6_instruction: "Haz que esto sea más interesante cambiando \nel fondo y reproduciendo un sonido aleatorio cuando se hace clic en Jorge."
      courseA_playLab_events6_2018_instruction: Make this more interesting by changing the background and playing a random sound when Jorge is clicked.
      courseA_playLab_events7_instruction: Agrega todo lo que quieras a este juego. ¿Puedes hacer desaparecer al dinosaurio cuando Jorge se encuentra con él?
      courseA_playLab_events7_2018_instruction: "*Freeplay:* Add anything you want to this game."
      courseA_playlab_events_challenge1_instruction: '¿Puedes escribir código para mostrar al resto de mis amigos? Los consejos te ayudarán a hacer este proyecto paso a paso.'
      courseA_playlab_events_challenge1_2018_instruction: '¿Puedes escribir código para mostrar al resto de mis amigos? Los consejos te ayudarán a hacer este proyecto paso a paso.'
      courseA_playlab_events_challenge2_instruction: Dé a cada uno algo que hacer cuando haga clic en ellos.
      courseA_playlab_events_challenge2_2018_instruction: Dé a cada uno algo que hacer cuando haga clic en ellos.
      courseA_playlab_events_challengeClone_instruction: '¿Dónde se esconden mis amigos? ¿Puedes escribir código para mostrar al resto de mis amigos?'
      courseA_toMakeLoopsVideo_Collector_instruction: '¡Los bucles te permiten hacer lo que está dentro una y otra vez!'
      courseA_video_events_instruction: Necesita a una mejor combinación de funciones y eventos
      courseA_video_events_2018_instruction: Need a better playlab/events combo
      courseB_Scrat_ramp1_2018_instruction: Para este rompecabezas, ¡ junta los bloques y haz clic en "Ejecutar"!
      courseB_Scrat_ramp2_2018_instruction: Junta todos los bloques para terminar tu código, luego haz clic en "Ejecutar".
      courseB_Scrat_ramp3a_2018_instruction: Agrega un bloque "Norte" en la parte inferior de los otros bloques para terminar este código, luego haz clic en "Ejecutar".
      courseB_Scrat_ramp3b_2018_instruction: "Drag the extra block back to the toolbox to throw it away.\n\n"
      courseB_Scrat_ramp4a_2018_instruction: '¿Puedes descubrir qué bloque necesitas agregar al final de los otros bloques para terminar este código?'
      courseB_Scrat_ramp5a_2018_instruction: '¡Lleva al pájaro hasta el cerdo!'
      courseB_artist_loops1_instruction: Este es un nuevo tipo de rompecabezas llamado "Artista". Juega con el nivel y dibuja algo divertido.
      courseB_artist_loops10_instruction: Usa lo que has aprendido para dibujar lo que crees que el artista vio cuando llegó a casa.
      courseB_artist_loops10_2018_instruction: "Usa lo que has aprendido para dibujar \nlo que crees que el artista vio cuando llegó a casa."
      courseB_artist_loops1_2018_instruction: Este es un nuevo tipo de rompecabezas llamado "Artista". Juega con el nivel y dibuja algo divertido.
      courseB_artist_loops2_instruction: El artista está tratando de trazar una línea ** 6 ** veces, pero no puede hacerlo bien. ¿Puedes ayudarlo?
      courseB_artist_loops2_2018_instruction: El artista está tratando de trazar una línea ** 6 ** veces, pero no puede hacerlo bien. ¿Puede usted ayudar?
      courseB_artist_loops3_instruction: "Ayude al artista a dibujar una línea 7 veces para\n hacer un muro de jardín."
      courseB_artist_loops3_2018_instruction: Ayude al artista a dibujar una línea 7 veces para hacer un muro de jardín.
      courseB_artist_loops4_instruction: 'Ahora tenemos que preparar el suelo para plantar. Encuentra los errores en el código y ayuda al artista a preparar el terreno. '
      courseB_artist_loops4_2018_instruction: "Ahora tenemos que preparar el suelo para plantar. Encuentra los errores en el código y ayuda al artista a preparar el terreno.\n"
      courseB_artist_loops5_instruction: '¡Hora de arreglar las escaleras! Repite este patrón ** 5 ** veces para que el artista pueda alcanzar la parte superior de los arbustos.'
      courseB_artist_loops5_2018_instruction: '¡Hora de arreglar las escaleras! Repita este patrón ** 5 ** veces para que el artista pueda alcanzar la parte superior de los arbustos.'
      courseB_artist_loops6_instruction: '¿Subir la vid y ver a dónde va?'
      courseB_artist_loops6_2018_instruction: '¿Subir la vid y ver a dónde va?'
      courseB_artist_loops7_instruction: "** Desafío: ** ¡Es un jardín escondido! Vamos a caminar."
      courseB_artist_loops7_2018_instruction: "**Challenge:**  It's a hidden garden! Let's walk around."
      courseB_artist_loops8_instruction: Es hora de irse a casa. ¿Puedes arreglar esta escalera usando sólo un bloque para ayudar al artista a bajar?
      courseB_artist_loops8_2018_instruction: Es hora de irse a casa. ¿Puedes arreglar esta escalera usando solo un bloque para ayudar al artista a bajar?
      courseB_artist_loops9_instruction: Tomemos el camino corto a casa, sobre el estanque. ¿Puedes ayudar al artista a permanecer en las piedras?
      courseB_artist_loops9_2018_instruction: Tomemos el camino corto a casa, sobre el estanque. ¿Puedes ayudar al artista a permanecer en las piedras?
      courseB_artist_loops_challenge1_instruction: '"¡Es hora de tirar los dados! ¿Puedes ayudarme a dibujar estos?"'
      courseB_artist_loops_challenge1_2018_instruction: "\"¡Es hora de tirar los\n dados! ¿Puedes ayudarme a dibujar estos?\""
      courseB_artist_loops_challenge2_instruction: Dibuja tantas X como puedas. ¿Puedes obtener 3 en una fila?
      courseB_artist_loops_challenge2_2018_instruction: Dibuja tantas X como puedas. ¿Puedes obtener 3 en una fila?
      courseB_collector_loops1_instruction: '¡Esta es Laurel la aventurera! ¿Puedes moverla y obtener tesoros?'
      courseB_collector_loops10_instruction: Ayuda a Laurel a obtener todo el tesoro de esta cueva.
      courseB_collector_loops10_2018_instruction: Ayuda a Laurel a obtener todo el tesoro de esta cueva.
      courseB_collector_loops11_instruction: '¡Eureka!, ¡Consigue todo el tesoro que puedas!'
      courseB_collector_loops11_2018_instruction: '* "¡Eureka, consigue todo el tesoro que puedas!" *!'
      courseB_collector_loops1_2018_instruction: '¡Esta es Laurel la aventurera! ¿Puedes moverla y obtener tesoros?'
      courseB_collector_loops2_instruction: Obtén las cuatro pilas para pasar este nivel.
      courseB_collector_loops2_2018_instruction: Obtenga las cuatro pilas para pasar este nivel.
      courseB_collector_loops3_instruction: '¿Cómo puede Laurel obtener los cinco montones de tesoros usando sólo un bloque `E -->`?'
      courseB_collector_loops3_2018_instruction: "¿Cómo puede Laurel obtener los cinco montones \nde tesoros usando solo un bloque `E ->`?"
      courseB_collector_loops3_predict1_instruction: '¿Cómo puede Laurel recoger las cinco pilas de oro usando solo un bloque `E ->`?'
      courseB_collector_loops4_instruction: '¡Arregla el camino de Laurel para obtener todo este tesoro!'
      courseB_collector_loops4_2018_instruction: '¡Arregla el camino de Laurel para obtener todo este tesoro!'
      courseB_collector_loops5_instruction: 'Agrega al código del último rompecabezas para obtener todo el tesoro. '
      courseB_collector_loops5_2018_instruction: 'Agrega al código del último rompecabezas para obtener todo el tesoro. '
      courseB_collector_loops6_instruction: '¡Descubre el código para ayudar a Laurel a obtener todo el tesoro!'
      courseB_collector_loops6_2018_instruction: '¡Descubre el código para ayudar a Laurel a obtener todo el tesoro!'
      courseB_collector_loops7_instruction: Escribe el código para obtener todo este tesoro.
      courseB_collector_loops7_2018_instruction: Escribe el código para obtener todo este tesoro.
      courseB_collector_loops8_instruction: "** Desafío: ** ¡El tesoro baja por estas escaleras! Escribe el código para ayudar a Laurel a obtenerlo todo."
      courseB_collector_loops8_2018_instruction: "** Desafío: ** ¡El tesoro baja por estas escaleras! Escribe el código para ayudar a Laurel a obtenerlo todo."
      courseB_collector_loops9_instruction: '* "Ayúdame a obtener el tesoro de este valle profundo". *'
      courseB_collector_loops9_2018_instruction: '* "Ayúdame a obtener el tesoro de este valle profundo". *'
      courseB_collector_loops_challenge1_instruction: 'Esta vez tienes bloques limitados. ¡Obtén todo el tesoro! '
      courseB_collector_loops_challenge1_2018_instruction: 'Esta vez tienes bloques limitados. ¡Obtén todo el tesoro! '
      courseB_collector_loops_challenge2_instruction: '¡Consigamos el tesoro! Ayúdame a cruzar cada fila y luego regresa para comenzar la siguiente fila. ¿Puedes encontrar un patrón?'
      courseB_collector_loops_challenge2_2018_instruction: '¡Consigamos el tesoro! Ayúdame a cruzar cada fila y luego regresa para comenzar la siguiente fila. ¿Puedes encontrar un patrón?'
      courseB_collector_loops_challenge2a_instruction: Ayuda a Laurel a obtener ** 5 ** piezas del tesoro para completar este rompecabezas.
      courseB_collector_loops_challenge2a_2018_instruction: Ayuda a Laurel a obtener ** 5 ** piezas del tesoro para completar este rompecabezas.
      courseB_collector_loops_challenge`_instruction: 'Esta vez solo puedes usar uno de cada bloque de flecha. ¡Obtén todo el tesoro! '
      courseB_collector_prog1_instruction: '¡Esta es Laurel la aventurera! ¿Puedes moverla y obtener tesoros?'
      courseB_collector_prog2_instruction: Cuatro pilas de oro! Recoge las cuatro.
      courseB_collector_prog3_instruction: '¿Cómo puede Laurel recoger las cinco pilas de oro usando solo un bloque `E ->`?'
      courseB_iceage_loops1_instruction: '¡Ayuda a Scrat a cruzar el hielo para llegar a la bellota!'
      courseB_iceage_loops10_instruction: '¡Ayuda a Scrat a llegar a la bellota!'
      courseB_iceage_loops11_instruction: '¡Ayuda a Scrat a llegar a la bellota!'
      courseB_iceage_loops11_forVideo_instruction: '¡Ayuda a Scrat a llegar a la bellota!'
      courseB_iceage_loops12_instruction: '¡Llega a la bellota de cualquier forma que puedas!'
      courseB_iceage_loops2_instruction: Utiliza dos bloques de movimiento para llegar a la bellota!
      courseB_iceage_loops3_instruction: '¿Puedes alcanzar la bellota con solo bloque "W"?'
      courseB_iceage_loops4_instruction: Añade un bloque más para que Scrat llegue hasta la bellota!
      courseB_iceage_loops5_instruction: '¿Puedes agrear un bucle más para alcanzar la bellota?'
      courseB_iceage_loops6_instruction: '¿Puedes agrear un bucle para alcanzar la bellota?'
      courseB_iceage_loops7_instruction: 'Scrat realmente quiere esa bellota! '
      courseB_iceage_loops8_instruction: "\n¿Puedes arreglar este código? "
      courseB_iceage_loops9_instruction: La bellota está muy lejos! ¿Puedes utilizar los bucles para ayudar a Scrat a alcanzarla?
      courseB_maze_seq1_instruction: "¡Juega con estos bloques para ver lo que le hacen hacer al pájaro! \n\nLleva el pájaro al cerdo para completar el nivel."
      courseB_maze_seq10_instruction: Fix the bugs to get the bird to the pig.
      courseB_maze_seq10_2018_instruction: Arregla los errores para llevar a Scrat a la bellota.
      courseB_maze_seq11_instruction: It's all you!  Get the bird to the pig.
      courseB_maze_seq11_2018_instruction: '¡Es todo tuyo!  Lleva a Scrat a la bellota.'
      courseB_maze_seq12_instruction: '¡Ahora consigue ese cerdo como puedas!'
      courseB_maze_seq12_2018_instruction: '¡Ahora consigue esa bellota como puedas!'
      courseB_maze_seq1_2018_instruction: "¡Juega con estos bloques para ver lo que hacen que haga Scrat! \n\nLleva a Scrat a la bellota para completar el nivel."
      courseB_maze_seq2_instruction: '*"¡Un error! Arregla el código para llevarme hasta el cerdo."*'
      courseB_maze_seq2_2018_instruction: '¡Un error! Arregla el código para llevar a Scrat a la bellota!'
      courseB_maze_seq4_instruction: Add 2 blocks to get the bird to the pig.
      courseB_maze_seq4_2018_instruction: Usa bloques de movimiento **2** para llevar a Scrat a la bellota.
      courseB_maze_seq5_instruction: Now try this puzzle from the start!
      courseB_maze_seq5_2018_instruction: '¡Este rompecabezas es un poco complicado!'
      courseB_maze_seq6_instruction: '¡Muéveme en una dirección, luego en otra para llevarme el cerdo!'
      courseB_maze_seq6_2018_instruction: '¡Muévete a un lado, luego a otro para llevar a Scrat a la bellota!'
      courseB_maze_seq7_instruction: '¡Descubre lo que falta y luego agrega bloques para llevar el pájaro al cerdo!'
      courseB_maze_seq7_2018_instruction: '¡Averigua lo que falta y luego añade bloques para llevar a Scrat a la bellota!'
      courseB_maze_seq8_instruction: Your turn!  What do you need to do to get the bird to the pig?
      courseB_maze_seq8_2018_instruction: '¡Tu turno!  ¿Qué tienes que hacer para llevar a Scrat a la bellota?'
      courseB_maze_seq9_instruction: 'Desafío: Muévete al rededor del TNT para llevar al pájaro hasta el cerdo.'
      courseB_maze_seq9_2018_instruction: 'Desafío: Muévete por el hielo quebrado para llevar a Scrat hasta la bellota.'
      courseB_maze_seq9_challenge1_instruction: "*¿dónde se está escondiendo el cerdo ahora?*"
      courseB_maze_seqCold_instruction: 'Desafío: ¡Depura este nivel agregando bloques para llevar al pájaro hasta el cerdo!'
      courseB_maze_seqOld_instruction: '¡Rodead el TNT para llevar el pájaro al cerdo! '
      courseB_maze_seq_challenge1_instruction: '¿Puedes encontrar un camino antes de que se te acaben los bloques?'
      courseB_maze_seq_challenge1_2018_instruction: '¿Puedes encontrar un camino antes de que se te acaben los bloques?'
      courseB_maze_seq_challenge2_instruction: Depura este nivel. ¡Estos son los bloques correctos, pero están en el orden equivocado!
      courseB_maze_seq_challenge2_2018_instruction: Depura este nivel. ¡Estos son los bloques correctos, pero están en el orden equivocado!
      courseB_playLab_events1_instruction: Intenta averiguar qué hace cada bloque.
      courseB_playLab_events1_2018_instruction: Intenta averiguar qué hace cada bloque.
      courseB_playlab_events2_instruction: Haz que Daisy el Dragón diga algo cuando hagas click en "Ejecutar".
      courseB_playlab_events2_2018_instruction: Haz que Daisy el Dragón diga algo cuando hagas click en "Ejecutar".
      courseB_playlab_events3_instruction: Usa un evento para hacer que Daisy el Dragón cambie a un estado de ánimo aleatorio al hacer clic sobre ella.
      courseB_playlab_events3_2018_instruction: Usa un evento para hacer que Daisy el Dragón cambie a un estado de ánimo aleatorio al hacer clic sobre ella.
      courseB_playlab_events4_instruction: '¡Tiempo de caballeros!  Añade un evento para que el caballero se mueva hacia el dragón al hacer clic en la flecha izquierda.'
      courseB_playlab_events4_2018_instruction: '¡Tiempo de caballeros!  Añade un evento para que el caballero se mueva hacia el dragón al hacer clic en la flecha izquierda.'
      courseB_playlab_events5_instruction: Ahora añade un evento para que el caballero huya del dragón al presionar la flecha derecha.
      courseB_playlab_events5_2018_instruction: Ahora añade un evento para que el caballero huya del dragón al presionar la flecha derecha.
      courseB_playlab_events6_instruction: |-
        ¡Ayuda a tu caballero a conseguir todas las banderas!
        
        Para ello, necesitarás añadir eventos para que ayuden al caballero a moverse hacia arriba, hacia abajo, a la izquierda y a la derecha.
      courseB_playlab_events6_2018_instruction: |-
        ¡Ayuda a tu caballero a conseguir todas las banderas!
        
        Para ello, necesitarás añadir eventos para que ayuden al caballero a moverse hacia arriba, hacia abajo, a la izquierda y a la derecha.
      courseB_playlab_events7_instruction: '¡Haz que este juego sea más divertido haciendo que el caballero se desvanezca cuando se encuentre con el dragón en su camino para conseguir las banderas!  Reproduzca un sonido cuando choquen para que parezca más real.'
      courseB_playlab_events7_2018_instruction: '¡Haz que este juego sea más divertido haciendo que el caballero se desvanezca cuando se encuentre con el dragón en su camino para conseguir las banderas!  Reproduzca un sonido cuando choquen para que parezca más real.'
      courseB_playlab_events8_instruction: Use your imagination. What can you do to make this game more fun?
      courseB_playlab_eventsFP_instruction: Use your imagination. What can you do to make this game more fun?
      courseB_playlab_eventsFP_2018_instruction: Use your imagination. What can you do to make this game more fun?
      courseB_playlab_eventsToolbox_instruction: '¡Termina reproduciendo un sonido y haciendo que el caballero desaparezca cuando se encuentre con el dragón!'
      courseB_playlab_events_challenge1_instruction: 'Haga que los animales se muevan hacia abajo cuando presiona ▼. '
      courseB_playlab_events_challenge1_2018_instruction: 'Haga que los animales se muevan hacia abajo cuando presiona ▼. '
      courseB_playlab_events_challenge2_instruction: Haz que los animales desaparezcan cuando haces clic en ellos.
      courseB_playlab_events_challenge2_2018_instruction: Haz que los animales desaparezcan cuando haces clic en ellos.
      courseB_playlab_events_challenge2_embed_instruction: Aquí está tu juego terminado!
      courseB_playlab_events_challenge2_template_instruction: Hagamos que los animales desaparezcan cuando haga clic en ellos. ¡También puedes agregar sonidos y ganar puntos para crear un divertido juego de Animal Tag!
      courseB_playlab_events_challenge2_template_2018_instruction: Hagamos que los animales desaparezcan cuando haga clic en ellos. ¡También puedes agregar sonidos y ganar puntos para crear un divertido juego de Animal Tag!
      courseB_scrat_forVideo_instruction: '¡Recoge la bellota!'
      courseB_starWars_prog1_instruction: '"¡Ve por la chatarra, BB-8!"'
      courseB_starWars_prog10_instruction: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog10_2018_instruction: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog11_instruction: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog11_2018_instruction: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog1_2018_instruction: '"¡Ve por la chatarra, BB-8!"'
      courseB_starWars_prog2_instruction: Obtener todo el metal.
      courseB_starWars_prog2_2018_instruction: Obtener todo el metal.
      courseB_starWars_prog3_instruction: Obtenga toda la chatarra
      courseB_starWars_prog3_2018_instruction: Obtenga toda la chatarra
      courseB_starWars_prog4_instruction: Obtenga toda la chatarra
      courseB_starWars_prog4_2018_instruction: Obtenga toda la chatarra
      courseB_starWars_prog5_instruction: Obtenga la chatarra
      courseB_starWars_prog5_2018_instruction: Obtenga la chatarra
      courseB_starWars_prog6_instruction: Obtenga toda la chatarra
      courseB_starWars_prog6_2018_instruction: Obtenga toda la chatarra
      courseB_starWars_prog7_instruction: '¡Ve a buscarlo!'
      courseB_starWars_prog7_2018_instruction: '¡Ve a buscarlo!'
      courseB_starWars_prog8_instruction: "** Desafío: ** Ayuda BB-8 a recoger la chatarra que brilla intensamente"
      courseB_starWars_prog8_2018_instruction: "** Desafío: ** Ayuda BB-8 a recoger la chatarra que brilla intensamente"
      courseB_starWars_prog9_instruction: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog9_2018_instruction: Ayuda a BB-8 a recoger la chatarra brillante
      courseC_PlayLab_events1_instruction: Hacer que Jorge el perro (actor 1) diga "Hola."
      courseC_PlayLab_events1_2018_instruction: Hacer que Jorge el perro (actor 1) diga "Hola."
      courseC_PlayLab_events2_instruction: '¿Puedes hacer que Jorge el Perro (actor 1) diga algo y que Olive el Gato (actor 2) diga algo después?'
      courseC_PlayLab_events2_2018_instruction: '¿Puedes hacer que Jorge el Perro (actor 1) diga algo y que Olive el Gato (actor 2) diga algo después?'
      courseC_PlayLab_events3_instruction: '¿Puedes escribir un programa para que Jorge (actor 1) se mueva hacia Olive el Gato?'
      courseC_PlayLab_events3_2018_instruction: '¿Puedes escribir un programa para hacer que el perro se mueva hasta el gato?'
      courseC_PlayLab_events4_instruction: '¿Puedes escribir un programa que haga que Jorge (actor 1) se mueva hasta Olive el Gato, y que Olive diga "Hola" cuando Jorge lo alcance?'
      courseC_PlayLab_events4_2018_instruction: '¿Puedes escribir un programa que haga que Jorge (actor 1) se mueva hasta Olive el Gato, y que Olive diga "Hola" cuando Jorge lo alcance?'
      courseC_PlayLab_events5_instruction: '¿Puedes escribir un programa para hacer que Octavia el Pulpo diga "¿Qué hay de nuevo?" cuando se haga clic sobre ella?'
      courseC_PlayLab_events5_2018_instruction: '¿Puedes escribir un programa para hacer que Octavia el Pulpo diga "¿Qué hay de nuevo?" cuando se haga clic sobre ella?'
      courseC_PlayLab_events6_instruction: Ahora, ¡escribe un programa que haga que Waddles el Pingüino se mueva usando las teclas arriba / abajo / izquierda / derecha para tocar a todos los blancos!
      courseC_PlayLab_events6_2018_instruction: Ahora, ¡escribe un programa que haga que Waddles el Pingüino se mueva usando las teclas arriba / abajo / izquierda / derecha para tocar a todos los blancos!
      courseC_PlayLab_events7_instruction: El bloque "repetir para siempre" te permite ejecutar código una y otra vez para siempre. Usa este bloque para mover a Chomp el Dinosaurio (actor 2) arriba y abajo por 400 píxeles para siempre.
      courseC_PlayLab_events7_2018_instruction: El bloque "repetir para siempre" te permite ejecutar código una y otra vez para siempre. Usa este bloque para mover a Chomp el Dinosaurio (actor 2) arriba y abajo por 400 píxeles para siempre.
      courseC_PlayLab_events8_instruction: "¿Puedes hacer que Waddles (actor 1) diga \"Ouch!\" y reproduzca un sonido de \"golpe\" si choca con Chomp? Cuando termines, juega para que esto suceda."
      courseC_PlayLab_events8_2018_instruction: "¿Puedes hacer que Waddles (actor 1) diga \"Ouch!\" y reproduzca un sonido de \"golpe\" si choca con Chomp? Cuando termines, juega para que esto suceda."
      courseC_PlayLab_events9_instruction: "¿Puedes agregar un bloque para ganar un punto cuando Waddles el Pingüino choque con Octavia el Pulpo (actor 3)? ¡Juega y mueve a Waddles con las flechas hasta que anotes!"
      courseC_PlayLab_events9_2018_instruction: "¿Puedes agregar un bloque para ganar un punto cuando Waddles el Pingüino choque con Octavia el Pulpo (actor 3)? ¡Juega y mueve a Waddles con las flechas hasta que anotes!"
      courseC_PlayLab_eventsA_instruction: |-
        Agrega bloques al evento "cuando se ejecuta" para cambiar el fondo y la velocidad de Waddles el Pingüino.
        
        Juega y mueve a Waddles con las flechas hasta que anotes.
      courseC_PlayLab_eventsA_2018_instruction: |-
        Agrega bloques al evento "cuando se ejecuta" para cambiar el fondo y la velocidad de Waddles el Pingüino.
        
        Juega y mueve a Waddles con las flechas hasta que anotes.
      courseC_PlayLab_eventsFP_instruction: Crea tu propia historia. Cuando termines, haz clic en "Terminar" para compartir con tus amigos. Mira ideas de historias en las pistas.
      courseC_PlayLab_eventsFP_2018_instruction: Crea tu propia historia. Cuando termines, haz clic en "Terminar" para compartir con tus amigos. Mira ideas de historias en las pistas.
      courseC_PlayLab_events_challenge1_instruction: "Usa un nuevo bloque para hacer que Waddles regrese automáticamente a la salida cuando se encuentre con el Dinosaurio y cuando consiga un punto. \nJuega y mueve a Waddles con las flechas hasta que consigas suficientes puntos."
      courseC_PlayLab_events_challenge1_2018_instruction: "Usa un nuevo bloque para hacer que Waddles regrese automáticamente a la salida cuando se encuentre con el Dinosaurio y cuando consiga un punto. \nJuega y mueve a Waddles con las flechas hasta que consigas suficientes puntos."
      courseC_PlayLab_events_challenge1_xy_blocks_instruction: |-
        Aquí hay un nuevo bloque que es algo complicado. Se usa para mover a Waddles de vuelta al inicio cuando se encuentra con el Dinosaurio y cuando anota un punto. Esto hará que su juego sea más desafiante y divertido!
        
        Juega y mueve a Waddles con las flechas hasta que consigas suficientes puntos.
      courseC_artist_loop1_instruction: '¡Agregemos un poco de dinamismo!'
      courseC_artist_loop1_2018_instruction: '¡Agregemos un poco de dinamismo!'
      courseC_artist_loops1_instruction: "*\"Zombie.  Dibuja!\"*\n\nEl zombie quiere trazar una línea desde donde está hasta el jardín de los girasoles.  ¿Puedes ayudarlo?  \n*(El jardín está a 250 píxeles de distancia)*  "
      courseC_artist_loops1a_instruction: 'Lleva al artista al centro del área de juego, luego dibuja un pájaro usando un sticker. '
      courseC_artist_loops1a_2018_instruction: 'Lleva al artista al centro del área de juego, luego dibuja un pájaro usando un sticker. '
      courseC_artist_loops2_instruction: Ahora que el zombie conoce su camino, ¡ayúdalo a cavar agujeros a lo largo del camino para plantar más flores!
      courseC_artist_loops2a_instruction: Ahora, usa un bucle para hacer que tu pájaro de vueltas 12 veces con un giro de 30 grados.
      courseC_artist_loops2a_2018_instruction: Ahora, usa un bucle para hacer que tu pájaro de vueltas 12 veces con un giro de 30 grados.
      courseC_artist_loops3_instruction: '¡Excelente! Ahora que las flores han brotado, ayuda al zombie a colocar a un amigo cada 50 píxeles para que las proteja hasta que crezcan.'
      courseC_artist_loops3a_instruction: '¡Ahora agrega un murciélago!'
      courseC_artist_loops3a_2018_instruction: '¡Ahora agrega un murciélago!'
      courseC_artist_loops4_instruction: '¡El zombie ha encontrado una granja vacía!  ¿Puedes ayudarlo a darle vida estampando stickers de animales cada 100 píxeles alrededor del borde?'
      courseC_artist_loops4a_instruction: Intenta saltar 75 píxeles hacia adelante.
      courseC_artist_loops4a_2018_instruction: Intenta saltar 75 píxeles hacia adelante.
      courseC_artist_loops5_instruction: "¡Genial! Ahora es tiempo de hacer una cerca adentro para mantener a los animales afuera.   \n\n"
      courseC_artist_loops5a_instruction: '¡Prueba nuevos stickers!'
      courseC_artist_loops5a_2018_instruction: '¡Prueba nuevos stickers!'
      courseC_artist_loops5b_instruction: '¡Prueba agregando lineas!'
      courseC_artist_loops5b_2018_instruction: '¡Prueba agregando lineas!'
      courseC_artist_loops6_instruction: "¿Qué debe poner el zombie dentro del jardín?  \n\n\n"
      courseC_artist_loops6a_instruction: '¡Agrega otro sticker!'
      courseC_artist_loops6a_2018_instruction: '¡Agrega otro sticker!'
      courseC_artist_loops7a_instruction: Juega con los bucles y los ángulos.
      courseC_artist_loops7a_2018_instruction: Juega con los bucles y los ángulos.
      courseC_artist_loops8a_instruction: '¡Ahora intenta algo por tu cuenta!'
      courseC_artist_loops8a_2018_instruction: '¡Ahora intenta algo por tu cuenta!'
      courseC_artist_loopsPre1a_instruction: '¡Es hora de dar la vuelta a esa línea!'
      courseC_artist_loopsPre1a_2018_instruction: '¡Es hora de dar la vuelta a esa línea!'
      courseC_artist_loopsPrePre1a_instruction: 'Lleva al artista al centro del área de juego, luego dibuja una linea.'
      courseC_artist_loopsPrePre1a_2018_instruction: 'Lleva al artista al centro del área de juego, luego dibuja una linea.'
      courseC_artist_loopsTemplate_instruction: '¡Excelente! Ahora que las flores han brotado, ayuda al zombie a colocar a un amigo cada 50 píxeles para que las proteja hasta que crezcan.'
      courseC_artist_loopsTemplateA_instruction: 'Lleva al artista al centro del área de juego, luego dibuja un pájaro usando un sticker. '
      courseC_artist_loopsTemplateA_2018_instruction: 'Lleva al artista al centro del área de juego, luego dibuja un pájaro usando un sticker. '
      courseC_artist_prog1_instruction: '¡Juega con los bloques en la caja de herramientas para ver lo que hacen!'
      courseC_artist_prog1_2018_instruction: '¡Juega con los bloques en la caja de herramientas para ver lo que hacen!'
      courseC_artist_prog2_instruction: Arrastra bloques a la pantalla para que el artista dibuje sobre las líneas grises de la imagen. (Cada línea tiene una longitud de 100 píxeles)
      courseC_artist_prog2_2018_instruction: Drag blocks onto the screen to have the artist draw over the grey lines in the picture. (Each line is 100 pixels long)
      courseC_artist_prog3_instruction: Cada lado del cuadrado interior es de 100 píxeles y todos los ángulos son de 90 grados.
      courseC_artist_prog3_2018_instruction: Cada lado del cuadrado interior es de 100 píxeles y todos los ángulos son de 90 grados.
      courseC_artist_prog4_instruction: Termina el cohete de Starla para que pueda perseguir a su mascota.
      courseC_artist_prog4_2018_instruction: Termina el cohete de Starla para que pueda perseguir a su mascota.
      courseC_artist_prog5_instruction: |-
        ¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.
      courseC_artist_prog5_2018_instruction: |-
        ¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.
      courseC_artist_prog6_instruction: Dibuja este diamante con lados de 200 pixels.
      courseC_artist_prog6_2018_instruction: Dibuja este diamante con lados de 200 pixels.
      courseC_artist_prog7_instruction: "**Desafío:** ¡Esta etiqueta es especial!  ¿Puedes averiguar cómo dibujar el contorno?"
      courseC_artist_prog7_2018_instruction: "**Desafío:** ¡Esta etiqueta es especial!  ¿Puedes averiguar cómo dibujar el contorno?"
      courseC_artist_prog8_instruction: |-
        Una etiqueta más.  Este es un triángulo para Pi. 
        (Cada lado es de 150 pixeles)
      courseC_artist_prog8_2018_instruction: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      courseC_artist_prog_challenge1-doghouse_instruction: '¡Construyamos una casa para Jorge!'
      courseC_artist_prog_challenge1_instruction: 'Dibuja habitaciones para cada uno de los animales. '
      courseC_artist_prog_challenge1_2018_instruction: 'Dibuja habitaciones para cada uno de los animales. '
      courseC_artist_prog_challenge2_instruction: "*¡Ayúdame a pintar de amarillo las líneas en este camino!*"
      courseC_artist_prog_challenge2a_instruction: '*¡Ayúdame a pintar de amarillo las líneas en este camino!*'
      courseC_artist_prog_challenge2a_2018_instruction: '*¡Ayúdame a pintar de amarillo las líneas en este camino!*'
      courseC_collector_loops_challenge2_instruction: Obtén por lo menos **5** piezas de tesoro!
      courseC_collector_loops_challenge2_2018_instruction: Obtén por lo menos **5** piezas de tesoro!
      courseC_collector_prog1_instruction: Juega con los bloques para ver si puedes ayudar a Laurel a recoger algún tesoro.
      courseC_collector_prog1_2018_instruction: Juega con los bloques para ver si puedes ayudar a Laurel a recoger algún tesoro.
      courseC_collector_prog2_instruction: Mueve a Laurel hacia el tesoro, luego usa "recoger" para recogerlo.
      courseC_collector_prog2_2018_instruction: Mueve a Laurel hacia el tesoro, luego usa "recoger" para recogerlo.
      courseC_collector_prog3_instruction: Ordena estos bloques para recoger el tesoro y resolver el rompecabezas.
      courseC_collector_prog3_2018_instruction: Ordena estos bloques para recoger el tesoro y resolver el rompecabezas.
      courseC_collector_prog4_instruction: Pon estos bloques para recoger todo el tesoro y resolver el rompecabezas.
      courseC_collector_prog4_2018_instruction: Pon estos bloques para recoger todo el tesoro y resolver el rompecabezas.
      courseC_collector_prog5_instruction: Estos bloques están en el orden equivocado. ¿Puedes arreglarlos?
      courseC_collector_prog5_2018_instruction: These blocks are in the wrong order. Can you fix them?
      courseC_collector_prog6_instruction: Reorganiza los bloques para recoger todo el tesoro.
      courseC_collector_prog6_2018_instruction: Reorder the blocks to collect all of the treasure.
      courseC_collector_prog7_instruction: Utiliza bloques de la caja de herramientas para recoger todo el tesoro.
      courseC_collector_prog7_2018_instruction: Utiliza bloques de la caja de herramientas para recoger todo el tesoro.
      courseC_collector_prog8_instruction: '*"¡Sigue con el buen trabajo! Ayúdame a recolectar todo el tesoro."*'
      courseC_collector_prog8_2018_instruction: '*"¡Sigue con el buen trabajo! Ayúdame a recolectar todo el tesoro."*'
      courseC_collector_prog9_instruction: '*"¡Vamos por todo el tesoro!"*'
      courseC_collector_prog9_2018_instruction: '*"¡Vamos por todo el tesoro!"*'
      courseC_collector_progA_instruction: Ayuda a Laurel a recolectar todo el tesoro.
      courseC_collector_progB_instruction: Recoge la mayor cantidad de monedas que puedas para finalizar esta instancia!
      courseC_collector_prog_challenge1_instruction: Cuidado! Presta atención. ¿Podes recolectar todas las **10** piezas del tesoro?
      courseC_collector_prog_challenge1_2018_instruction: Cuidado! Presta atención. ¿Podes recolectar todas las **10** piezas del tesoro?
      courseC_collector_prog_challenge2_instruction: Recolecta por lo menos **10** piezas del tesoro para finalizar este desafío!
      courseC_collector_prog_challenge2_2018_instruction: Recolecta por lo menos **10** piezas del tesoro para finalizar este desafío!
      courseC_flappy_embed_events_instruction: Este es un ejemplo de un juego que vas a crear tú mismo! Juega a través de él una o dos veces para tener una idea de lo que estás a punto de hacer.
      courseC_flappy_events1_instruction: Agrega el bloque "cantidad normal de aleteo" al evento "cuando hagas click" y, a continuación, pulsa "Ejecutar". Haz click o toca en el espacio de juego para mover a Flappy al objetivo.
      courseC_flappy_events10_instruction: 'Crea tu propio juego de "Flatty! '
      courseC_flappy_events10_2018_instruction: 'Crea tu propio juego de "Flatty! '
      courseC_flappy_events1_2018_instruction: Agrega el bloque "cantidad normal de aleteo" al evento "cuando hagas click" y, a continuación, pulsa "Ejecutar". Haz click o toca en el espacio de juego para mover a Flappy al objetivo.
      courseC_flappy_events2_instruction: Intenta agregar un bloque que fije la velocidad cuando se presione el botón "Run". Juégalo y apunta al objetivo para continuar.
      courseC_flappy_events2_2018_instruction: Intenta agregar un bloque que fije la velocidad cuando se presione el botón "Run". Juégalo y apunta al objetivo para continuar.
      courseC_flappy_events3_instruction: Conecta el bloque de "end game" al evento  "when hit the ground". Juégalo y estrella al pájaro contra el suelo para continuar.
      courseC_flappy_events3_2018_instruction: Conecta el bloque de "end game" al evento  "when hit the ground". Juégalo y estrella al pájaro contra el suelo para continuar.
      courseC_flappy_events4_instruction: Conecta el bloque al evento "when hit an obstacle" para que el juego finalice cuando Flappy choque contra el primer set de tuberías.
      courseC_flappy_events4_2018_instruction: Conecta el bloque al evento "when hit an obstacle" para que el juego finalice cuando Flappy choque contra el primer set de tuberías.
      courseC_flappy_events5_instruction: Agrega un bloque al evento "when pass an obstacle", luego presiona el botón "Run" para anotar un punto haciendo que Flappy vuele a través del primer juego de tuberías.
      courseC_flappy_events5_2018_instruction: Agrega un bloque al evento "when pass an obstacle", luego presiona el botón "Run" para anotar un punto haciendo que Flappy vuele a través del primer juego de tuberías.
      courseC_flappy_events6_instruction: Ve si puedes anotar aún un punto haciendo que Flappy aletee más rápido o más lento en cada click que haces.
      courseC_flappy_events6_2018_instruction: Ve si puedes anotar aún un punto haciendo que Flappy aletee más rápido o más lento en cada click que haces.
      courseC_flappy_events7_instruction: A continuación, intenta cambiar la escena adjuntando un bloque al evento "Cuando se Ejecute".
      courseC_flappy_events7_2018_instruction: A continuación, intenta cambiar la escena adjuntando un bloque al evento "Cuando se Ejecute".
      courseC_flappy_events8_instruction: Intenta configurar una escena **random** cuando otros eventos suceden... por ejemplo, al pasar un obstáculo.
      courseC_flappy_events8_2018_instruction: Intenta configurar una escena **random** cuando otros eventos suceden... por ejemplo, al pasar un obstáculo.
      courseC_flappy_events9_instruction: Para mezclar las cosas, en lugar de finalizar el juego cuando Flappy golpee un obstáculo, trata de volver el puntaje a 0.
      courseC_flappy_events9_2018_instruction: Para mezclar las cosas, en lugar de finalizar el juego cuando Flappy golpee un obstáculo, trata de volver el puntaje a 0.
      courseC_harvester_loops1_instruction: Utiliza bucles para recoger todas las calabazas.
      courseC_harvester_loops10_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops10_2018_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops11_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops11_2018_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops1_2018_instruction: Utiliza bucles para recoger todas las calabazas.
      courseC_harvester_loops2_instruction: '¿Puedes combinar dos bucles diferentes para moverte hacia las calabazas, luego recogerlas todas?'
      courseC_harvester_loops2_2018_instruction: '¿Puedes combinar dos bucles diferentes para moverte hacia las calabazas, luego recogerlas todas?'
      courseC_harvester_loops3_instruction: Recoge todas las calabazas.
      courseC_harvester_loops3_2018_instruction: Recoge todas las calabazas.
      courseC_harvester_loops4_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops4_2018_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops5_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops5_2018_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops6_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops6_2018_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops7_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops7_2018_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops8_instruction: "**Desafío**: recoge todo el maíz y todas las calabazas."
      courseC_harvester_loops8_2018_instruction: "**Desafío**: recoge todo el maíz y todas las calabazas."
      courseC_harvester_loops9_instruction: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops9_2018_instruction: Recoge todo el maiz y todas las calabazas.
      courseC_harvester_loops_challenge1_instruction: Recoge todo el maíz.
      courseC_harvester_loops_challenge1a_instruction: Recoge todo el maíz.
      courseC_harvester_loops_challenge1a_2018_instruction: Recoge todo el maíz.
      courseC_harvester_loops_challenge2_instruction: Recoge toda la lechuga. ¡Evita los áboles y los campos!
      courseC_harvester_loops_challenge2_2018_instruction: Recoge toda la lechuga. ¡Evita los áboles y los campos!
      courseC_harvester_loops_forVid_instruction: Recoge todo el maíz, toda la lechuga y toda las calabazas.
      courseC_maze_debugging1_instruction: Arregla el código para ayudar a Scrat a alcanzar la bellota.
      courseC_maze_debugging10_instruction: '¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!'
      courseC_maze_debugging1_2018_instruction: Arregla el código para ayudar a Scrat a alcanzar la bellota.
      courseC_maze_debugging2_instruction: Utiliza tus habilidades de depuración para que Scrat llegue a la bellota.
      courseC_maze_debugging2_2018_instruction: Utiliza tus habilidades de depuración para que Scrat llegue a la bellota.
      courseC_maze_debugging3_instruction: Remueve bloques para que Scrat llegue a la bellota!
      courseC_maze_debugging3_2018_instruction: Remueve bloques para que Scrat llegue a la bellota!
      courseC_maze_debugging4_instruction: Alguien tiene sus direcciones mezcladas! ¿Podrás ayudarlo?
      courseC_maze_debugging4_2018_instruction: Alguien tiene sus direcciones mezcladas! ¿Podrás ayudarlo?
      courseC_maze_debugging5_instruction: Depura este nivel reorganizando y cambiando los bloques.
      courseC_maze_debugging5_2018_instruction: Depura este nivel reorganizando y cambiando los bloques.
      courseC_maze_debugging6_instruction: Descubre qué está mal y lleva a Scrat a la bellota.
      courseC_maze_debugging6_2018_instruction: Descubre qué está mal y lleva a Scrat a la bellota.
      courseC_maze_debugging7_instruction: "**Desafío**: Depura este nivel reorganizando, agregando y eliminando bloques."
      courseC_maze_debugging7_2018_instruction: "**Desafío**: Depura este nivel reorganizando, agregando y eliminando bloques."
      courseC_maze_debugging8_instruction: Depura este nivel para llevar a Scrat a la bellota.
      courseC_maze_debugging9_instruction: Depura este nivel para llevar a Scrat a la bellota.
      courseC_maze_debugging9_2018_instruction: Depura este nivel para llevar a Scrat a la bellota.
      courseC_maze_debugging_challenge1_instruction: Ayuda a Scrat a decidir cuál es el camino para llegar a su bellota.
      courseC_maze_debugging_challenge1_2018_instruction: Ayuda a Scrat a decidir cuál es el camino para llegar a su bellota.
      courseC_maze_debugging_challenge2_instruction: Ayuda a Scrat a alcanzar la bellota solamente con cuatro comandos "turn".
      courseC_maze_debugging_challenge2_2018_instruction: Ayuda a Scrat a alcanzar la bellota solamente con cuatro comandos "turn".
      courseC_maze_loops1_instruction: Puedes llevar el pájaro hasta el cerdo?
      courseC_maze_loops10_instruction: Estás haciéndolo muy bien! Sigue así!
      courseC_maze_loops11_instruction: Ya casi llegas! Ahora puedes elegir el camino que quieras!
      courseC_maze_loops2_instruction: '¿Podrías llevar el pájaro hacia el cerdo creando un loop que utilice solo un bloque "move forward" en vez de un "repeat"?'
      courseC_maze_loops3_instruction: Resuelve este rompecabezas creando un bucle!
      courseC_maze_loops4_instruction: En este rompecabezas, ¡dos bucles 'repetir' te ayudarán a llevar al pájaro hasta el cerdo con el menor númeroo de bloques!
      courseC_maze_loops5_instruction: '*"¡Llevame hasta el cerdo lo más pronto posible!"*'
      courseC_maze_loops6_instruction: Los bucles aún sirven con más de un bloque dentro! Podrías buclear esta secuencia?
      courseC_maze_loops7_instruction: Utiliza lo que has aprendido en los otros puzzles!
      courseC_maze_loops8_instruction: 'Desafío_: combina ideas de los últimos rompecabezas para completar este nivel.'
      courseC_maze_loops9_instruction: Estás haciéndolo muy bien! Sigue así!
      courseC_maze_loops_challenge1_instruction: 'Ahora Scrat quiere intentarlo utilizando bucles para encontrar su bellota! '
      courseC_maze_loops_challenge1a_instruction: 'Ahora Scrat quiere intentarlo utilizando bucles para encontrar su bellota! '
      courseC_maze_loops_challenge1a_2018_instruction: 'Ahora Scrat quiere intentarlo utilizando bucles para encontrar su bellota! '
      courseC_maze_loops_challenge2_instruction: Vamos a cazar tesoros - ¡usando bucles! Ayuda al coleccionista depurando este código. ¡Obtén todo el tesoro!
      courseC_maze_programming1_instruction: For this puzzle, drag all of the blocks together and click "Run" to watch it go!
      courseC_maze_programming1_2018_instruction: For this puzzle, drag all of the blocks together and click "Run" to watch it go!
      courseC_maze_programming2_instruction: Drag an extra `move forward` block out of the toolbox to finish your code.
      courseC_maze_programming2_2018_instruction: Drag an extra `move forward` block out of the toolbox to finish your code.
      courseC_maze_programming3_instruction: Hay un bloque extra que va a causar que el pájaro choque. Elimínalo arrastrandolo de vuellta a la caja de herramientas.
      courseC_maze_programming3_2018_instruction: Hay un bloque extra que va a causar que el pájaro choque. Elimínalo arrastrandolo de vuellta a la caja de herramientas.
      courseC_maze_programming4_instruction: '¡Evita el TNT o volarán las plumas!'
      courseC_maze_programming4_2018_instruction: '¡Evita el TNT o volarán las plumas!'
      courseC_maze_programming5_instruction: Evita el TNT.
      courseC_maze_programming5_2018_instruction: Evita el TNT.
      courseC_maze_programming6_instruction: '"Keep calm and help me find the bad pig. Otherwise I might get angry!"'
      courseC_maze_programming6_2018_instruction: '"Keep calm and help me find the bad pig. Otherwise I might get angry!"'
      courseC_maze_programming7_instruction: "**Desafío**: Este código tiene algunos errores. Necesitaras eliminar algunos bloques y agregar otros."
      courseC_maze_programming7_2018_instruction: "**Desafío**: Este código tiene algunos errores. Necesitaras eliminar algunos bloques y agregar otros."
      courseC_maze_programming8_instruction: '*"Mantén la calma y ayúdame a encontrar al cerdo malo."*'
      courseC_maze_programming8_2018_instruction: '*"Mantén la calma y ayúdame a encontrar al cerdo malo."*'
      courseC_maze_programming8_predict1_instruction: '*"Mantén la calma y ayúdame a encontrar al cerdo malo."*'
      courseC_maze_programming8_predict1_2018_instruction: '*"Mantén la calma y ayúdame a encontrar al cerdo malo."*'
      courseC_maze_programming9_instruction: '*"Ahora, ¡ayúdame a acercarme sigilosamente al cerdo de la forma que quieras!"*'
      courseC_maze_programming9_2018_instruction: '*"Ahora, ¡ayúdame a acercarme sigilosamente al cerdo de la forma que quieras!"*'
      courseC_maze_programming_challenge1_instruction: 'Este cerdo esta escondido, el objetivo es encontrarlo. '
      courseC_maze_programming_challenge1_2018_instruction: 'Este cerdo esta escondido, el objetivo es encontrarlo. '
      courseC_maze_programming_challenge2_instruction: A veces hay más de una forma de resolver el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      courseC_maze_programming_challenge2_2018_instruction: A veces hay más de una forma de resolver el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      courseC_playLab_embedded_instruction: |-
        Aquí tenemos un juego para ti! Para ganarlo debes hacer que se encuentre el pinguino con el pulpo, utilizando las flechas de tu teclado!
      courseC_puppy_loops10_instruction: Estás haciéndolo muy bien! Sigue así!
      courseC_puppy_loops11_instruction: Ya casi llegas! Ahora puedes elegir el camino que quieras!
      courseC_puppy_loops8_instruction: 'Desafío_: combina ideas de los últimos rompecabezas para completar este nivel.'
      courseC_puppy_loops8courseC_maze_loops8_instruction: 'Desafío_: combina ideas de los últimos rompecabezas para completar este nivel.'
      courseC_puppy_loops9_instruction: Estás haciéndolo muy bien! Sigue así!
      courseC_starWars_loops1_instruction: BB-8 recogerá cualquier resto de metal a lo largo del camino. Utiliza 5 de los mismos bloques para que BB-8 pueda recoger los restos en el área de juego.
      courseC_starWars_loops10_instruction: Estás haciéndolo muy bien! Sigue así!
      courseC_starWars_loops10_2018_instruction: Estás haciéndolo muy bien! Sigue así!
      courseC_starWars_loops10_predict2_instruction: Estás haciéndolo muy bien! Sigue así!
      courseC_starWars_loops10_predict2_2018_instruction: Estás haciéndolo muy bien! Sigue así!
      courseC_starWars_loops11_instruction: Ya casi llegas! Ahora puedes elegir el camino que quieras!
      courseC_starWars_loops11_2018_instruction: Ya casi llegas! Ahora puedes elegir el camino que quieras!
      courseC_starWars_loops1_2018_instruction: BB-8 recogerá cualquier resto de metal a lo largo del camino. Utiliza 5 de los mismos bloques para que BB-8 pueda recoger los restos en el área de juego.
      courseC_starWars_loops1_predict1_instruction: BB-8 recogerá cualquier resto de metal a lo largo del camino. Utiliza 5 de los mismos bloques para que BB-8 pueda recoger los restos en el área de juego.
      courseC_starWars_loops1_predict1_2018_instruction: BB-8 recogerá cualquier resto de metal a lo largo del camino. Utiliza 5 de los mismos bloques para que BB-8 pueda recoger los restos en el área de juego.
      courseC_starWars_loops2_instruction: Para obtener toda la chatarra, intenta crear un bucle que utilice solamente un bloque dentro de un bloque de 'repeat'.
      courseC_starWars_loops2_2018_instruction: Para obtener toda la chatarra, intenta crear un bucle que utilice solamente un bloque dentro de un bloque de 'repeat'.
      courseC_starWars_loops4_instruction: En este rompecabezas, ¡dos bucles 'repetir' te ayudarán a llevar a BB-8 a toda la chatarra con el menor número de bloques!
      courseC_starWars_loops4_2018_instruction: En este rompecabezas, ¡dos bucles 'repetir' te ayudarán a llevar a BB-8 a toda la chatarra con el menor número de bloques!
      courseC_starWars_loops5_instruction: '¡Consigue que BB-8 recoja toda la chatarra lo más rápido posible!'
      courseC_starWars_loops5_2018_instruction: '¡Consigue que BB-8 recoja toda la chatarra lo más rápido posible!'
      courseC_starWars_loops6_instruction: Los bucles aún sirven con más de un bloque dentro! Podrías buclear esta secuencia?
      courseC_starWars_loops6_2018_instruction: Los bucles aún sirven con más de un bloque dentro! Podrías buclear esta secuencia?
      courseC_starWars_loops7_instruction: '¿Puedes intentar conseguir toda la chatarra usando sólo un bucle? Intenta programar todo y luego busca el código que se repite para ponerlo en un bucle.'
      courseC_starWars_loops7_2018_instruction: '¿Puedes intentar conseguir toda la chatarra usando sólo un bucle? Intenta programar todo y luego busca el código que se repite para ponerlo en un bucle.'
      courseC_starWars_loops9_instruction: '¡Usa lo que has aprendido para recoger toda la chatarra!'
      courseC_starWars_loops9_2018_instruction: '¡Usa lo que has aprendido para recoger toda la chatarra!'
      courseD_Frozen_nested1_instruction: 'Dibuja una forma pequeña, entre **20 a 50** pixeles de ancho. Puede ser cualquier forma que te guste.  '
      courseD_Frozen_nested2_instruction: '¡Ahora toma tu forma y dibuja dos o tres seguidos!'
      courseD_Frozen_nested3_instruction: '¡Hagamos grar la línea de formas!'
      courseD_Frozen_nested4_instruction: '¡Es hor de poner las formas en capas!'
      courseD_Frozen_nested5_instruction: '¡Juega con los copos de nieve!'
      courseD_Frozen_nested6_instruction: Dibuja un patrón de peldaños que use entre 75 y 105 grados.
      courseD_Frozen_nested7_instruction: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      courseD_Frozen_nested8_instruction: Haz girar la forma 5 ó 6 veces en círculo.
      courseD_Frozen_nested9_instruction: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!
        - ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        - ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        - ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      courseD_artist_1_2018_instruction: "Dibuja un pequeño cuadrado con lados de **30** pixeles.\n"
      courseD_artist_2_2018_instruction: "Ahora gira a la derecha en **60** grados, luego dibuja una línea recta de **150** pixeles de largo y salta de vuelta al centro de área de juego.\n"
      courseD_artist_3_2018_instruction: 'Anida todo el código dentro de otro bucle ''repetir'' y ejecútalo un total de **6** veces. '
      courseD_artist_4_2018_instruction: '¡Agrega una forma pequeña al final de la línea!'
      courseD_artist_5_2018_instruction: '¡Juega con los copos de nieve!'
      courseD_artist_6_2018_instruction: "Intenta cambiar tu línea de 15 pixeles de largo en 6 líneas cortas de **25** pixeles, con pequeños giros al final.\n"
      courseD_artist_7_2018_instruction: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      courseD_artist_8_2018_instruction: Haz girar la forma 5 ó 6 veces en círculo.
      courseD_artist_9_2018_instruction: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!
        - ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        - ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        - ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      courseD_artist_binary1_instruction: Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1). Le hemos provisto una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      courseD_artist_binary1_2018_instruction: Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1). Le hemos provisto una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      courseD_artist_binary2_instruction: Ejecuta este código para ver cómo el artista usa sitema binario para dibujar este patrón.
      courseD_artist_binary2_2018_instruction: Ejecuta este código para ver cómo el artista usa sitema binario para dibujar este patrón.
      courseD_artist_binary3_instruction: '¿Cuál de los hilos binarios de más abajo podrías buclear 8 veces para dibujar esta imagen?'
      courseD_artist_binary3_2018_instruction: '¿Cuál de los hilos binarios de más abajo podrías buclear 8 veces para dibujar esta imagen?'
      courseD_artist_binary4_instruction: '¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?'
      courseD_artist_binary4_2018_instruction: '¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?'
      courseD_artist_binary5_instruction: "Cada hilo binario de más abajo representa una fila de esta imagen. \n\n¿Puedes reorganizarlos para que dibujen una cara sonriente en lugar del ceño fruncido?"
      courseD_artist_binary5_2018_instruction: "Cada hilo binario de más abajo representa una fila de esta imagen. \n\n¿Puedes reorganizarlos para que dibujen una cara sonriente en lugar del ceño fruncido?"
      courseD_artist_binary6_instruction: '¿Cuál de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?'
      courseD_artist_binary6_2018_instruction: '¿Cuál de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?'
      courseD_artist_binary7_instruction: '¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?'
      courseD_artist_binary7_2018_instruction: '¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?'
      courseD_artist_binary8_instruction: Finaliza el código para crear este dibujo.
      courseD_artist_binary8_2018_instruction: Finaliza el código para crear este dibujo.
      courseD_artist_binary8_predict1_instruction: Finaliza el código para crear este dibujo.
      courseD_artist_binary8_predict1_2018_instruction: Finaliza el código para crear este dibujo.
      courseD_artist_binaryFP_instruction: |-
        ¡Aquí hay un lienzo de resolución más alta para dibujar - 16 por 16 pixeles!
      courseD_artist_binaryFP8_instruction: "**Juego libre:** ¡Dibuja lo que quieras en binario! "
      courseD_artist_binaryFP_2018_instruction: |-
        ¡Aquí hay un lienzo de resolución más alta para dibujar - 16 por 16 pixeles!
      courseD_artist_binary_challenge0_instruction: Intenta usar bucles anidados para completar este dibujo.
      courseD_artist_binary_challenge1_instruction: Sólo puedes usar cada valor binario (0 ó 1) una vez cada un en este rompecabezas. Intenta usar bucles anidados para completar este dibujo.
      courseD_artist_binary_challenge1_2018_instruction: Sólo puedes usar cada valor binario (0 ó 1) una vez cada un en este rompecabezas. Intenta usar bucles anidados para completar este dibujo.
      courseD_artist_binary_challenge2_instruction: '¿Eres lo suficientemente persevaerante para restaurar este logo de vuelta a lo normal?'
      courseD_artist_binary_challenge2_2018_instruction: '¿Eres lo suficientemente persevaerante para restaurar este logo de vuelta a lo normal?'
      courseD_artist_binary_challenge3_instruction: '¿Eres lo suficientemente persevaerante para restaurar este logo de vuelta a lo normal?'
      courseD_artist_embed_frozen_instruction: '¡Presiona Ejecutar para ver el diseño de un copo de nieve!'
      courseD_artist_embed_frozen2_instruction: Presiona Ejecutar para ver el diseño de un copo de nieve.
      courseD_artist_functions10_instruction: Esta vez, usa l´neas de 8 hexágonos con lados de 25 pixeles.
      courseD_artist_functions2_instruction: "Esta vez, usa la función 'dibujar cuadrado' para crear los vasos.\n"
      courseD_artist_functions3_instruction: Puedes hacer este dibujo agregando un bloque de repetición.
      courseD_artist_functions4_instruction: Ahora puedes dibujar una estrella, ¡intenta dibujar cuatro estrellas!
      courseD_artist_functions5_instruction: Dibuj solamente esas tres estrellas para finalizar el rompecabezas.
      courseD_artist_functions6_instruction: Haz esta ventana dibujando un cuadrado, luego gira 90 grados antes de dibujar otro, etcetera.
      courseD_artist_functions7_instruction: Intenta resolver este rompecabezas crando un 'dibuajr ventana' y llamándolo cinco veces. ¡Cuidado con la puerta!
      courseD_artist_functions8_instruction: 'Chalenge: Crea tantas funciones como creas que necesitas para hacer este dibujo de cuadrados de 50 pixeles.'
      courseD_artist_functions9_instruction: Crea esta inagen usando sólo los bloques proporcionados.
      courseD_artist_nestedLoops1_instruction: "Dibuja un triángulo para comenzar esta etapa. \n(Cada lado es de 100 pixeles de largo y necesitarás girar en 120 grados para cada ángulo exterior)."
      courseD_artist_nestedLoops10_instruction: Toma los cuadrados anteriores, pero esta vez dibuja sólo 7 de ellos, y ponlos en una fila.
      courseD_artist_nestedLoops10_2018_instruction: Toma los cuadrados anteriores, pero esta vez dibuja sólo 7 de ellos, y ponlos en una fila.
      courseD_artist_nestedLoops1_2018_instruction: "Dibuja un triángulo para comenzar esta etapa. \n(Cada lado es de 100 pixeles de largo y necesitarás girar en 120 grados para cada ángulo exterior)."
      courseD_artist_nestedLoops1a_instruction: 'Ahora buclea el triángulo 6 veces. '
      courseD_artist_nestedLoops1a_2018_instruction: 'Ahora buclea el triángulo 6 veces. '
      courseD_artist_nestedLoops2_instruction: Esta vez, completa el rompecabezas con la menor cantidad de bloques posible.
      courseD_artist_nestedLoops2_2018_instruction: Esta vez, completa el rompecabezas con la menor cantidad de bloques posible.
      courseD_artist_nestedLoops3_instruction: |-
        Usa tus nuevas habilidades para dibujar rápidamente la última fila de ventanas para este edificio.
        
        Las ventanas son de 20 pixeles cuadrados, con 20 pixeles de separación.
      courseD_artist_nestedLoops3_2018_instruction: |-
        Usa tus nuevas habilidades para dibujar rápidamente la última fila de ventanas para este edificio.
        
        Las ventanas son de 20 pixeles cuadrados, con 20 pixeles de separación.
      courseD_artist_nestedLoops4_instruction: '¡Excelente! Haz lo mismo con estos círculos.'
      courseD_artist_nestedLoops4_2018_instruction: '¡Excelente! Haz lo mismo con estos círculos.'
      courseD_artist_nestedLoops5_instruction: '¿Qué sucede si también giras en 90 grados entre los círculos?'
      courseD_artist_nestedLoops5_2018_instruction: '¿Qué sucede si también giras en 90 grados entre los círculos?'
      courseD_artist_nestedLoops6_instruction: Edita los bloques dentro del código existente para hacer esta imagen.
      courseD_artist_nestedLoops7_instruction: Us alo que has aprendido para hacer este dibujo.
      courseD_artist_nestedLoops7_2018_instruction: Us alo que has aprendido para hacer este dibujo.
      courseD_artist_nestedLoops8_instruction: Usando lo que has aprendido en el último par de rompecabezas, construye esta imagen desde el comienzo.
      courseD_artist_nestedLoops8_2018_instruction: Usando lo que has aprendido en el último par de rompecabezas, construye esta imagen desde el comienzo.
      courseD_artist_nestedLoops9_instruction: "**Desafío:** ¿Puedes descifrar cómo hacer una magen cómo esta?"
      courseD_artist_nestedLoops9_2018_instruction: "**Desafío:** ¿Puedes descifrar cómo hacer una magen cómo esta?"
      courseD_artist_nestedLoops9_predict1_instruction: "**Desafío:** ¿Puedes descifrar cómo hacer una magen cómo esta?"
      courseD_artist_nestedLoops9_predict1_2018_instruction: "**Desafío:** ¿Puedes descifrar cómo hacer una magen cómo esta?"
      courseD_artist_nestedLoopsFP_instruction: Ahra es tu turno. ¡Usa las habilidades que has aprendido y haz algo que te encante!
      courseD_artist_nestedLoopsFP_2018_instruction: Ahra es tu turno. ¡Usa las habilidades que has aprendido y haz algo que te encante!
      courseD_artist_nestedLoopsPre1_instruction: Crea un triángulo para comenzar esta etapa.
      courseD_artist_nestedLoops_challenge1_instruction: '¿Puedes descifrar cómo hacer una imagen como esta?'
      courseD_artist_nestedLoops_challenge1_2018_instruction: '¿Puedes descifrar cómo hacer una imagen como esta?'
      courseD_artist_nestedLoops_challenge2_instruction: '¡Arregla el código para hacer esta imagen!'
      courseD_artist_nestedLoops_challenge2_2018_instruction: '¡Arregla el código para hacer esta imagen!'
      courseD_artist_project1_instruction: 'Dibuja una forma pequeña, entre **20 a 50** pixeles de ancho. Puede ser cualquier forma que te guste.  '
      courseD_artist_project1_2018_instruction: 'Dibuja una forma pequeña, entre **20 a 50** pixeles de ancho. Puede ser cualquier forma que te guste.  '
      courseD_artist_project1a_instruction: Dibuja un patrón de peldaños que use entre 75 y 105 grados.
      courseD_artist_project1a_2018_instruction: Dibuja un patrón de peldaños que use entre 75 y 105 grados.
      courseD_artist_project2_instruction: '¡Ahora toma tu forma y dibuja dos o tres seguidos!'
      courseD_artist_project2_2018_instruction: '¡Ahora toma tu forma y dibuja dos o tres seguidos!'
      courseD_artist_project2a_instruction: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      courseD_artist_project2a_2018_instruction: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      courseD_artist_project3_instruction: '¡Hagamos grar la línea de formas!'
      courseD_artist_project3_2018_instruction: '¡Hagamos grar la línea de formas!'
      courseD_artist_project3a_instruction: Haz girar la forma 5 ó 6 veces en círculo.
      courseD_artist_project3a_2018_instruction: Haz girar la forma 5 ó 6 veces en círculo.
      courseD_artist_project4_instruction: '¡Es hor de poner las formas en capas!'
      courseD_artist_project4_2018_instruction: '¡Es hor de poner las formas en capas!'
      courseD_artist_project4a_instruction: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!
        - ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        - ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        - ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      courseD_artist_project4a_2018_instruction: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!
        - ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        - ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        - ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      courseD_artist_project5_instruction: '¡Juega con los copos de nieve!'
      courseD_artist_project5_2018_instruction: '¡Juega con los copos de nieve!'
      courseD_artist_project_embedded_instruction: '¡Aquí está lo que pronto estarás construyendo!'
      courseD_artist_ramp11_instruction: '¡Ahora haz un cuadrado usando Artista!'
      courseD_artist_ramp12_instruction: Usa lo que has aprendido para dibujar este triángulo dentro de un cuadrado.
      courseD_bee_conditionals1_instruction: Revisa si hay una flor debajo de la nube. Si hay una flor, obtén el néctar.
      courseD_bee_conditionals10_instruction: Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals10_2018_instruction: Collect all of the nectar and make all of the honey.
      courseD_bee_conditionals1_predict1_instruction: Check to see if there's a flower under the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals1_predict1_2018_instruction: Check to see if there's a flower under the cloud. If there's a flower, get nectar.
      courseD_bee_conditionals2_instruction: 'Revisa debajo de cada nube para ver si hay una flor escondida antes de recoger el néctar.  '
      courseD_bee_conditionals2_2018_instruction: 'Revisa debajo de cada nube para ver si hay una flor escondida antes de recoger el néctar.  '
      courseD_bee_conditionals2_test_instruction: 'Revisa debajo de cada nube para ver si hay una flor escondida antes de recoger el néctar.  '
      courseD_bee_conditionals3_instruction: "Ayuda a la abeja a recoger todo el néctar.\n\nSólo puedes recoger el néctar de las flores, pero puedes revisar cualquier espacio para ver si hay una flor."
      courseD_bee_conditionals3_2018_instruction: "Help the bee collect all of the nectar. \n\nYou can only collect nectar from flowers, but you can check any space to see if there is a flower."
      courseD_bee_conditionals4_instruction: Obtén todo el néctar usando los menos bloques posibles.
      courseD_bee_conditionals4_2018_instruction: Get all of the nectar using as few blocks as possible.
      courseD_bee_conditionals5_instruction: Recoge todo el néctar usando los menos bloues posibles
      courseD_bee_conditionals5_2018_instruction: Collect all of the nectar using as few blocks as possible
      courseD_bee_conditionals6_instruction: '¡Alguna de estas nubes pueden tener una panal debajo de ellas. Asegúrate de revisar si hay un panal escondido debajo de cada nube!'
      courseD_bee_conditionals6_2018_instruction: Some of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud!
      courseD_bee_conditionals7_instruction: Usa el bloque 'si/más' para recoger néctar en las flores y hacer miel en los panales.
      courseD_bee_conditionals7_2018_instruction: Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2_instruction: Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2_2018_instruction: Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.
      courseD_bee_conditionals8_instruction: |-
        Recoge el néctar si hay una flor.
        De lo contrario, haz miel (porque hay un panal).
      courseD_bee_conditionals8_2018_instruction: |-
        Recoge el néctar si hay una flor.
        De lo contrario, haz miel (porque hay un panal).
      courseD_bee_conditionals9_instruction: Recoge todo el néctar o haz toda la miel.
      courseD_bee_conditionals9_2018_instruction: Recoge todo el néctar o haz toda la miel.
      courseD_bee_conditionals_challenge1_instruction: Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals_challenge1_2018_instruction: Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals_challenge2_instruction: Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals_challenge2_2018_instruction: Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals_challenge3_instruction: Recoge todo el néctar o haz toda la miel.
      courseD_bee_debugging1_instruction: Corrige el error(es) para recoger todo el néctar.
      courseD_bee_debugging2_instruction: Corrige el error(es) para recoger todo el néctar.
      courseD_bee_debugging3_instruction: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      courseD_bee_debugging4_instruction: Corrige el error(es) para hacer toda la miel.
      courseD_bee_debugging5_instruction: 'Desafío: Todos los comandos que necesitas ya están aquí...ahora usa tus habilidades de depuración para descifrar como resolver este rompecabezas.'
      courseD_bee_debugging6_instruction: 'Desafío: Corrige los errores para recoger todo el néctar y hacer toda la miel.'
      courseD_bee_debugging9_instruction: Ayuda a la abeja a corregir el código para obtener todo el néctar.
      courseD_bee_debugging_challenge1_instruction: Observa como las abejas obtinen el néctar. ¿Puedes usar el mismo tipo de patrón para ayduar a la abeja a hacer toda la miel?
      courseD_bee_debugging_challenge1_2018_instruction: Observa como las abejas obtinen el néctar. ¿Puedes usar el mismo tipo de patrón para ayduar a la abeja a hacer toda la miel?
      courseD_bee_debugging_challenge1a_instruction: Observa como la abeja obtiene el néctar. Usa el mismo patrón para ayudar a la abeja a hacer toda la miel.
      courseD_bee_debugging_challenge2_instruction: Obeserva cómo la abeja obtine el néctar ¿Puedes usar el mismo tipo de patrón para ayduar a la abeja a hacer toda la miel?
      courseD_bee_nestedLoops1_instruction: Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops1_2018_instruction: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops1a_instruction: Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops1a_2018_instruction: Help the bee collect all of the nectar.
      courseD_bee_nestedLoops2_instruction: Esta vez, ayuda a la abeja a recoger todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_2018_instruction: Esta vez, ayuda a la abeja a recoger todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_predict1_instruction: Esta vez, ayuda a la abeja a recoger todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_predict1_2018_instruction: Esta vez, ayuda a la abeja a recoger todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops3_instruction: Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. 
      courseD_bee_nestedLoops5_instruction: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bee_nestedLoops6_instruction: Haz todo el néctar.
      courseD_bee_nestedLoops6_2018_instruction: '¡Llévame al girasol!'
      courseD_bee_nestedLoops7_instruction: 'Desafío: Descifra como obtener todo el néctar usando sólo los bloques disponibles.'
      courseD_bee_nestedLoops7_2018_instruction: 'Desafío: Descifra como obtener todo el néctar usando sólo los bloques disponibles.'
      courseD_bee_nestedLoops8_instruction: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bee_nestedLoops8_2018_instruction: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      courseD_bee_nestedLoops9_instruction: Haz toda la miel.
      courseD_bee_nestedLoops9_2018_instruction: Haz toda la miel.
      courseD_bee_nestedLoops9_predict2_instruction: Haz toda la miel.
      courseD_bee_nestedLoops9_predict2_2018_instruction: Haz toda la miel.
      courseD_bee_nested_loops_challenge1_instruction: Vamos a cazar un tesoro - ¡usando bucles! Ayuda al coleccionista a alcanzar al menos dos pilas del tesoro usando sólo los bloques en tu caja de herramientas.
      courseD_bee_nested_loops_challenge2_instruction: Vamos a cazar un tesoro - ¡usando bucles! Ayuda al coleccionista a alcanzar al menos dos pilas del tesoro usando sólo los bloques en tu caja de herramientas.
      courseD_bounce_embed_endgame_instruction: Usa las flecha izquierda y derecha para mover el remo. ¡Observa cuántos puntos puedes obtener antes que tu oponente anote dos veces!
      courseD_bounce_embedded_instruction: Escribe las instrucciones Aquí
      courseD_bounce_events1_instruction: Adjunta un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar" para mover al jugador hacia la bandera.
      courseD_bounce_events10_instruction: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pasa de largo" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      courseD_bounce_events10s_instruction: 'Adjunta el bloque ''anotar un punto'' al evento ''cuando la pelota en gol'' y al bloque ''anotar punto oponente'' al evento ''cuando la pelota falla la mano'' para hacer n juego. '
      courseD_bounce_events10s_2018_instruction: 'Adjunta el bloque ''anotar un punto'' al evento ''cuando la pelota en gol'' y al bloque ''anotar punto oponente'' al evento ''cuando la pelota falla la mano'' para hacer n juego. '
      courseD_bounce_events11_instruction: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la paleta y la pelota y ver cuántos puntos puedes anotar antes de que tu oponente anote dos veces.
      courseD_bounce_events11s_instruction: 'Adjunta el bloque ''lanzar pelota'' en todos los lugares donde el juego necesite una pelota nueva. '
      courseD_bounce_events11s_2018_instruction: 'Adjunta el bloque ''lanzar pelota'' en todos los lugares donde el juego necesite una pelota nueva. '
      courseD_bounce_events12_instruction: Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones.
      courseD_bounce_events12s_instruction: Haz este juego tuyo propio. Puedes cambiar los visuales y las reglas. Cuando estés listo, haz clic en "Finalizar" para dejar que tus amigos prueben el juego en sus teléfonos.
      courseD_bounce_events12s_2018_instruction: Haz este juego tuyo propio. Puedes cambiar los visuales y las reglas. Cuando estés listo, haz clic en "Finalizar" para dejar que tus amigos prueben el juego en sus teléfonos.
      courseD_bounce_events1s_instruction: Adjunta un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar" para mover al jugador hacia la red.
      courseD_bounce_events1s_2018_instruction: Adjunta un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar" para mover al jugador hacia la red.
      courseD_bounce_events2_instruction: Une un bloque a los bloques "cuándo flecha derecha" y "cuándo flecha izquierda". Mueve la paleta para alcanzar ambos objetivos finales.
      courseD_bounce_events2s_instruction: Ahora, agrega un bloque al evento 'cuando evento derecho' para que la mano pueda obtener ambas cestas.
      courseD_bounce_events2s_2018_instruction: Ahora, agrega un bloque al evento 'cuando evento derecho' para que la mano pueda obtener ambas cestas.
      courseD_bounce_events3_instruction: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      courseD_bounce_events3s_instruction: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      courseD_bounce_events4_instruction: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este puzzle.
      courseD_bounce_events4s_instruction: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este puzzle.
      courseD_bounce_events5_instruction: Vamos a lanzar una pelota hacia la paleta. Une un bloque al bloque "cuando la pelota golpea la paleta" para asegurar que la pelota alcance el objetivo final.
      courseD_bounce_events5s_instruction: Adjunta un bloque al evento 'cuando la pelota golpee la mano' para asegurar que la pelota alcance el cesto.
      courseD_bounce_events5s_2018_instruction: Adjunta un bloque al evento 'cuando la pelota golpee la mano' para asegurar que la pelota alcance el cesto.
      courseD_bounce_events6_instruction: Ahora el objetivo final está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este puzzle.
      courseD_bounce_events6s_instruction: Adjunta el código para hacer que la pelota rebote cuando golpee la muralla para que puedas resolver este rompecabezas.
      courseD_bounce_events6s_2018_instruction: Adjunta el código para hacer que la pelota rebote cuando golpee la muralla para que puedas resolver este rompecabezas.
      courseD_bounce_events7_instruction: Une bloques a cada uno de los bloques "cuando". Rebota la pelota hasta que alcance el objetivo final.
      courseD_bounce_events7s_instruction: Adjunta bloques de sonido para hacer que la red emita un sílbido cuando golpees el cesto y has que el silbato suene cuando la pelota falle golpear la mano. Rebota la pelota hasta que golpee el blanco final.
      courseD_bounce_events7s_2018_instruction: Adjunta bloques de sonido para hacer que la red emita un sílbido cuando golpees el cesto y has que el silbato suene cuando la pelota falle golpear la mano. Rebota la pelota hasta que golpee el blanco final.
      courseD_collector_debugging1_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging1_2018_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging1a_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging1a_2018_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging2_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging2_2018_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging2a_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging2a_2018_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging3_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging3_2018_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging3a_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging3a_2018_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging4_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging4_2018_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging4a_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging4a_2018_instruction: Corrige el error(s) para recoger todo el tesoro.
      courseD_collector_debugging5_instruction: Todos los comandos que necesitas están listos aquí...ahora usa tus habilidades de depuración para descifrar como resolver el rompecabezas.
      courseD_collector_debugging5_2018_instruction: Todos los comandos que necesitas están listos aquí...ahora usa tus habilidades de depuración para descifrar como resolver el rompecabezas.
      courseD_collector_debugging5a_instruction: Todos los comandos que necesitas están listos aquí...ahora usa tus habilidades de depuración para descifrar como resolver el rompecabezas.
      courseD_collector_debugging5a_2018_instruction: Todos los comandos que necesitas están listos aquí...ahora usa tus habilidades de depuración para descifrar como resolver el rompecabezas.
      courseD_collector_debugging6_instruction: 'Desafío: Usa tus habilidades para la depuración para corregir los errores y recolectar todo el tesoro.'
      courseD_collector_debugging6_2018_instruction: 'Desafío: Usa tus habilidades para la depuración para corregir los errores y recolectar todo el tesoro.'
      courseD_collector_debugging6a_instruction: 'Desafío: ¡Usa el código en el área de trabajo para obtener al menos **6** piezas de tesoro!'
      courseD_collector_debugging6a_2018_instruction: 'Desafío: ¡Usa el código en el área de trabajo para obtener al menos **6** piezas de tesoro!'
      courseD_collector_debugging7_instruction: 'Desafío: Todos los comandos que necesitas ya están aquí...ahora usa tus habilidades de depuración para descifrar como resolver este rompecabezas.'
      courseD_collector_debugging_challenge2_instruction: '¿Eres experto en bucles anidados? ¡Usa lo que has aprendido hasta ahora para recolectar todo el tesoro!'
      courseD_collector_debugging_challenge2_2018_instruction: '¿Eres experto en bucles anidados? ¡Usa lo que has aprendido hasta ahora para recolectar todo el tesoro!'
      courseD_collector_nested_loops_challenge2_instruction: Ayuda al recolector a alcanzar al menos dos pilas del tesoro usando solo los bloques en tu caja de herramientas. Es posible recolectar las 4.
      courseD_collector_nested_loops_challenge2_2018_instruction: Ayuda al recolector a alcanzar al menos dos pilas del tesoro usando solo los bloques en tu caja de herramientas. Es posible recolectar las 4.
      courseD_collector_nested_loops_challenge2a_instruction: Ayuda a Laurel a reclectar al menos dos pilas de tesoro.
      courseD_collector_ramp10_instruction: Ayuda a Laurel a recolectar todo el tesoro.
      courseD_collector_ramp8_instruction: Ayuda a Laurel a recolectar todo el tesoro.
      courseD_collector_ramp9_instruction: Ayuda a Laurel a recolectar todo el tesoro.
      courseD_collector_until_challenge1_instruction: '¿Eres experto en bucles anidados? ¡Usa lo que has aprendido hasta ahora para recolectar todo el tesoro!'
      courseD_debugging_1_instruction: Corrige los errores para recolectar ttodo el néctar.
      courseD_debugging_2_instruction: Corrige los errores para recolectar todo el néctar.
      courseD_debugging_3_instruction: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      courseD_debugging_4_instruction: Corrige los errores para hacer toda la miel.
      courseD_debugging_5_instruction: 'Desafío: Todos los comandos que necesitas están listos aquí...ahora usa tus habilidades de depuración para descifrar como resolver el rompecabezas.'
      courseD_debugging_6_instruction: 'Desafío: Corrige los errores para recolectar todo el néctar y hacer toda la miel.'
      courseD_farmer_condLoops1_instruction: Usa condicionales para asegurarte de recoger todo el maíz solamente cuando esté ahí.
      courseD_farmer_condLoops1_2018_instruction: Usa condicionales para asegurarte de recoger todo el maíz solamente cuando esté ahí.
      courseD_farmer_condLoops2_instruction: Ayuda a la cosechadora a recoger el maíz y las lechugas del campo.
      courseD_farmer_condLoops2_2018_instruction: Ayuda a la cosechadora a recoger el maíz y las lechugas del campo.
      courseD_farmer_condLoops3_instruction: '*"¡Maíz, lechugas, Y calabazas! Ayúdame a cosecharlas todas."*'
      courseD_farmer_condLoops3_2018_instruction: '*"Corn, lettuce, AND pumpkins! Help me harvest them all."*'
      courseD_farmer_condLoops4_instruction: Ayuda a la cosechadora a recoger todas las lechugas en cada racímo antes de moverte a la siguiente rama.
      courseD_farmer_condLoops4_2018_instruction: Ayuda a la cosechadora a recoger todas las lechugas en cada racímo antes de moverte a la siguiente rama.
      courseD_farmer_condLoops4a_instruction: Ayuda al garnjero a recoger todas las lechugas en cada racímo antes de moverte a la siguiente rama.
      courseD_farmer_condLoops5_instruction: Recoge todo el maíz y las lechugas, luego toma la calabaza al final.
      courseD_farmer_condLoops5_2018_instruction: Recoge todo el maíz y las lechugas, luego toma la calabaza al final.
      courseD_farmer_condLoops6_instruction: '¿Puedes descifrar cómo recoger la calabaza? ¡Asegúrate de recoger todo el maíz por el camino!'
      courseD_farmer_condLoops6_2018_instruction: Can you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!
      courseD_farmer_condLoops7_instruction: 'Desafío: Recoge todo el máiz y todas las lechugas, luego recoge la calabaza.'
      courseD_farmer_condLoops7_2018_instruction: 'Desafío: Recoge todo el máiz y todas las lechugas, luego recoge la calabaza.'
      courseD_farmer_condLoops8_instruction: Recoge todo el máiz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops8_2018_instruction: Collect all of the corn and lettuce, then pick the pumpkin.
      courseD_farmer_condLoops9_instruction: Recoge todo el máiz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops9_2018_instruction: Collect all of the corn and lettuce, then pick the pumpkin.
      courseD_farmer_condLoops9_predict1_instruction: Recoge todo el máiz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops9_predict1_2018_instruction: Collect all of the corn and lettuce, then pick the pumpkin.
      courseD_farmer_condLoops_challenge1_instruction: Recoge todo para completar el nivel. Cada cultivo oculto sólo tiene un maíz o una lechuga.
      courseD_farmer_condLoops_challenge1_2018_instruction: Recoge todo para completar el nivel. Cada cultivo oculto sólo tiene un maíz o una lechuga.
      courseD_farmer_condLoops_challenge2_instruction: Recoge todo para completar el nivel.
      courseD_farmer_condLoops_challenge2_2018_instruction: Recoge todo para completar el nivel.
      courseD_farmer_condLoops_challenge2_clone_instruction: Recoge todo para completar el nivel.
      courseD_farmer_conditionals1_instruction: Muévete a la pila de tierra y usa el bloque 'remover' para eliminarla.
      courseD_farmer_conditionals10_instruction: 'Aplana todas estos motones usando los menos bloques posible. '
      courseD_farmer_conditionals2_instruction: Muévete hacia el orificio y llénalo con 6 paladas de tierra, usando el bloque 'llenar'.
      courseD_farmer_conditionals3_instruction: Usa los menos bloques posibles para resolver este rompecabezas.
      courseD_farmer_conditionals4_instruction: Ayuda al granjero a eliminar todo el montón usando el bucle 'mientras'.
      courseD_farmer_conditionals5_instruction: 'Ayúdame a eliminar toda esta tierra. '
      courseD_farmer_conditionals6_instruction: Usa el bucle 'mientras' para llenar los orificios facílmente.
      courseD_farmer_conditionals7_instruction: Llena el orificio al final de cada uno de estos caminos.
      courseD_farmer_conditionals8_instruction: 'Desafío: Llena estos orificios usando la menor cantidad de bloques. '
      courseD_farmer_conditionals9_instruction: 'Aplana todas estos motones usando los menos bloques posible. '
      courseD_farmer_until_challenge2_instruction: Usa bloques si/más para seguir el camno con curvas. En cada esquina, usa el comando 'remover 1' en un bucle para limpiar los montones.
      courseD_farmer_until_challenge2_2018_instruction: Usa bloques si/más para seguir el camno con curvas. En cada esquina, usa el comando 'remover 1' en un bucle para limpiar los montones.
      courseD_farmer_while1_instruction: Muévete a la pila de tierra y usa el bloque 'remover' para eliminarla.
      courseD_farmer_while10_instruction: 'Aplana todas estos motones usando los menos bloques posible. '
      courseD_farmer_while10_2018_instruction: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while10_predict2_instruction: 'Aplana todas estos motones usando los menos bloques posible. '
      courseD_farmer_while10_predict2_2018_instruction: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while1_2018_instruction: Muévete a la pila de tierra y usa el bloque 'remover' para eliminarla.
      courseD_farmer_while2_instruction: Muévete hacia el orificio y llénalo con 6 paladas de tierra, usando el bloque 'llenar'.
      courseD_farmer_while2_2018_instruction: Muévete hacia el orificio y llénalo con 6 paladas de tierra, usando el bloque 'llenar'.
      courseD_farmer_while3_instruction: Usa los menos bloques posibles para resolver este rompecabezas.
      courseD_farmer_while3_2018_instruction: Usa los menos bloques posibles para resolver este rompecabezas.
      courseD_farmer_while4_instruction: Ayuda al granjero a eliminar todo el montón usando el bucle 'mientras'.
      courseD_farmer_while4_2018_instruction: Help the farmer remove this entire pile using a `while` loop.
      courseD_farmer_while4_predict1_instruction: Ayuda al granjero a eliminar todo el montón usando el bucle 'mientras'.
      courseD_farmer_while4_predict1_2018_instruction: Help the farmer remove this entire pile using a `while` loop.
      courseD_farmer_while5_instruction: 'Ayúdame a eliminar toda esta tierra. '
      courseD_farmer_while5_2018_instruction: 'Help me remove all of this dirt. '
      courseD_farmer_while6_instruction: Usa el bucle 'mientras' para llenar los orificios facílmente.
      courseD_farmer_while6_2018_instruction: Usa el bucle 'mientras' para llenar los orificios facílmente.
      courseD_farmer_while7_instruction: Llena el orificio al final de cada uno de estos caminos.
      courseD_farmer_while7_2018_instruction: Fill in the hole at the end of each of these paths.
      courseD_farmer_while8_instruction: 'Desafío: Llena estos orificios usando la menor cantidad de bloques. '
      courseD_farmer_while8_2018_instruction: 'Desafío: Llena estos orificios usando la menor cantidad de bloques. '
      courseD_farmer_while9_instruction: 'Aplana todas estos motones usando los menos bloques posible. '
      courseD_farmer_while9_2018_instruction: 'Flatten all of these piles using as few blocks as possible. '
      courseD_farmer_while_challenge1_instruction: Llena todos los hoyos y remueve todos los montones.
      courseD_farmer_while_challenge1_2018_instruction: Llena todos los hoyos y remueve todos los montones.
      courseD_farmer_while_challenge2_instruction: Llena todos los hoyos y remueve todos los montones.
      courseD_farmer_while_challenge2_2018_instruction: Llena todos los hoyos y remueve todos los montones.
      courseD_harvester_nested_loops_challenge1-broken_instruction: '"¡Necesito ayuda en la granja! Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."'
      courseD_harvester_nested_loops_challenge1_instruction: '"¡Necesito ayuda en la granja! Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."'
      courseD_harvester_nested_loops_challenge1_2018_instruction: '"¡Necesito ayuda en la granja! Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."'
      courseD_iceage_loops1_instruction: '¡Ayuda a Scrat a cruzar el hielo para llegar a la bellota!'
      courseD_iceage_loops10_instruction: '¡Ayuda a Scrat a llegar a la bellota!'
      courseD_iceage_loops11_instruction: '¡Ayuda a Scrat a llegar a la bellota!'
      courseD_iceage_loops12_instruction: '¡Llega a la bellota de cualquier forma que puedas!'
      courseD_iceage_loops2_instruction: '¡Usa un bloque ''girar a la derecha'' para obtener la bellota!'
      courseD_iceage_loops3_instruction: '¿Puedes obtener la bellota con sólo un bloque ''mover hacia adelante''?'
      courseD_iceage_loops4_instruction: Añade un bloque más para que Scrat llegue hasta la bellota!
      courseD_iceage_loops6_instruction: '¿Puedes agrear un bucle para alcanzar la bellota?'
      courseD_iceage_loops7_instruction: 'Scrat realmente quiere esa bellota! '
      courseD_iceage_loops8_instruction: "\n¿Puedes arreglar este código? "
      courseD_iceage_loops9_instruction: La bellota está muy lejos! ¿Puedes utilizar los bucles para ayudar a Scrat a alcanzarla?
      courseD_maze_loops_challenge1_instruction: Vamos a cazar un tesoro - ¡usando bucles! Ayuda al coleccionista a alcanzar al menos dos pilas del tesoro usando sólo los bloques en tu caja de herramientas.
      courseD_maze_nestedLoops3_instruction: Lleva al zmobie hasta el girasol usando la menor cantidad de bloques posible.
      courseD_maze_nestedLoops3_2018_instruction: Get the zombie to the sunflower using the fewest number of blocks possible.
      courseD_maze_nestedLoops4_instruction: '¡Llévame al girasol!'
      courseD_maze_nestedLoops4_2018_instruction: '¡Llévame al girasol!'
      courseD_maze_nestedLoops5_instruction: '¡Lleva al zmobie hasta el girasol usando la menor cantidad de bloques posible!'
      courseD_maze_nestedLoops5_2018_instruction: '¡Lleva al zmobie hasta el girasol usando la menor cantidad de bloques posible!'
      courseD_maze_nestedLoops6_instruction: '¡Llévame al girasol!'
      courseD_maze_nestedLoops6_2018_instruction: '¡Llévame al girasol!'
      courseD_maze_ramp1_instruction: Para este rompecabezas, encaja todos los bloques haz clic en "Ejecutar" y ¡ve que sucede!
      courseD_maze_ramp1_2018_instruction: Para este rompecabezas, encaja todos los bloques haz clic en "Ejecutar" y ¡ve que sucede!
      courseD_maze_ramp2_instruction: Arrastra un bloque `mover hacia adelante` extra desde la caja de herramientas, luego adjunta todos los bloques al `cuando ejecute` para finalizar tu código.
      courseD_maze_ramp2_2018_instruction: Arrastra un bloque `mover hacia adelante` extra desde la caja de herramientas, luego adjunta todos los bloques al `cuando ejecute` para finalizar tu código.
      courseD_maze_ramp3_instruction: Hay un bloque extra que va a causar que el pájaro choque. Elimínalo arrastrandolo de vuellta a la caja de herramientas.
      courseD_maze_ramp3_2018_instruction: Hay un bloque extra que va a causar que el pájaro choque. Elimínalo arrastrandolo de vuellta a la caja de herramientas.
      courseD_maze_ramp4_instruction: '¡Evita el TNT o volarán las plumas!'
      courseD_maze_ramp4_2018_instruction: '¡Evita el TNT o volarán las plumas!'
      courseD_maze_ramp5_instruction: Evita el TNT.
      courseD_maze_ramp5_2018_instruction: Evita el TNT.
      courseD_maze_ramp5a_instruction: Pon atención a la secuencia y ve si puedes descifrar ¡cómo llegar a ese cerdo!
      courseD_maze_ramp5a_2018_instruction: Pon atención a la secuencia y ve si puedes descifrar ¡cómo llegar a ese cerdo!
      courseD_maze_ramp5b_instruction: '¡Navega el laberinto para ayudar al pájaro a encontrar al cerdo!'
      courseD_maze_ramp5b_2018_instruction: '¡Navega el laberinto para ayudar al pájaro a encontrar al cerdo!'
      courseD_maze_ramp5c_instruction: Ayuda al pájaro a llegar al cerdo.
      courseD_maze_ramp5c_2018_instruction: Ayuda al pájaro a llegar al cerdo.
      courseD_maze_ramp5d_instruction: Lleva al pájaro hasta el cerdo.
      courseD_maze_ramp5d_2018_instruction: Lleva al pájaro hasta el cerdo.
      courseD_maze_ramp6_instruction: '"Keep calm and help me find the bad pig. Otherwise I might get angry!"'
      courseD_maze_ramp6a_instruction: '"¡Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, me puedo enojar!"'
      courseD_maze_ramp7_instruction: '¡Lleva al pájaro hasta el cerdo!'
      courseD_maze_until1_instruction: Lleva al pájaro enojado hasta el cerdo.
      courseD_maze_until10_instruction: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_2018_instruction: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_predict2_instruction: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_predict2_2018_instruction: Ayuda al zombie a llegar al girasol.
      courseD_maze_until1_2018_instruction: Lleva al pájaro enojado hasta el cerdo.
      courseD_maze_until2_instruction: Ahora, usa el bucle 'repetir hasta' para hacer l mismo sin especificar cuántas veces moverse hacia adelate y girar.
      courseD_maze_until3_instruction: Lleva al pájaro hasta el cerdo.
      courseD_maze_until3_2018_instruction: Lleva al pájaro hasta el cerdo.
      courseD_maze_until4_instruction: '¿Puedes llevar al zombie hasta el girasol usando sólamente los bloues disponibles?'
      courseD_maze_until4_2018_instruction: '¿Puedes llevar al zombie hasta el girasol usando sólamente los bloues disponibles?'
      courseD_maze_until5_instruction: Usa el bloque si/más para ayudar al zombie a decidir cuándo girar, luego lleva al zombie hasta el girasol.
      courseD_maze_until5_2018_instruction: Usa el bloque si/más para ayudar al zombie a decidir cuándo girar, luego lleva al zombie hasta el girasol.
      courseD_maze_until6_instruction: Ayuda al zombie a llegar al girasol.
      courseD_maze_until6_2018_instruction: Ayuda al zombie a llegar al girasol.
      courseD_maze_until7_instruction: Ayuda al zombie a llegar al girasol.
      courseD_maze_until7_2018_instruction: Ayuda al zombie a llegar al girasol.
      courseD_maze_until8_instruction: Ayuda al zombie a llegar al girasol.
      courseD_maze_until8_2018_instruction: Ayuda al zombie a llegar al girasol.
      courseD_maze_until9_instruction: "**Desafío:** Evita las mordidas y ayuda al zombie a llegar hasta el girasol."
      courseD_maze_until9_2018_instruction: "**Desafío:** Evita las mordidas y ayuda al zombie a llegar hasta el girasol."
      courseD_maze_until_challenge_instruction: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      courseD_maze_until_challenge1-delete-this-copy_instruction: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      courseD_maze_until_challenge1_instruction: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      courseD_maze_until_challenge1_2018_instruction: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      courseD_maze_until_challenge2_instruction: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      courseD_pixelation_instruction: Codifica una imagen de lo que te guste en binario. El idioma binario estará representado solamente "0" y "1".
      courseD_playLab_cond1_instruction: Lleva a Pegleg hasta las banderas para resolver este rompecabezas.
      courseD_playLab_cond1_2018_instruction: Lleva a Pegleg hasta las banderas para resolver este rompecabezas.
      courseD_playLab_cond2_instruction: 'Dala un punto a Pegleg cada vez que llegue hasta el drgón. '
      courseD_playLab_cond2_2018_instruction: 'Dala un punto a Pegleg cada vez que llegue hasta el drgón. '
      courseD_playLab_cond3_instruction: 'Haz que el dragón cambie entre emociones al azar a cada segundo.  '
      courseD_playLab_cond3_2018_instruction: 'Haz que el dragón cambie entre emociones al azar a cada segundo.  '
      courseD_playLab_cond3a_instruction: Hazlo de tal manera que Pegleg llegue hasta el dragón, él obtiene 2 puntos si el dragón está feliz y de lo contrario 1.
      courseD_playLab_cond3a_2018_instruction: Hazlo de tal manera que Pegleg llegue hasta el dragón, él obtiene 2 puntos si el dragón está feliz y de lo contrario 1.
      courseD_playLab_cond3b_instruction: "1) Asegúrate que el dragón cambie entre emociones al azar a cada segundo.  \n2) Hazlo de tal manera que Pegleg llegue hasta el dragón, él obtiene 2 puntos si el dragón está feliz y de lo contrario 1."
      courseD_playLab_cond4_instruction: Agrega algún código para que el ninja (actor 3) comience a perseguir a Pegleg tan pronto como el juego inicie. Finaliza el juego tan pronto como el ninja lo atrape.
      courseD_playLab_cond4_2018_instruction: Agrega algún código para que el ninja (actor 3) comience a perseguir a Pegleg tan pronto como el juego inicie. Finaliza el juego tan pronto como el ninja lo atrape.
      courseD_playLab_cond5_instruction: Agrega un bucle 'repetir siempre' que revise continuamente si el puntaje es mayor a 5, luego finaliza el juego omo triunfo cuandolo sea.
      courseD_playLab_cond5_2018_instruction: Agrega un bucle 'repetir siempre' que revise continuamente si el puntaje es mayor a 5, luego finaliza el juego omo triunfo cuandolo sea.
      courseD_playLab_cond6_instruction: "1) Desacelera al ninja (actor 3) antes de ponerlo a perseguir al pirata. \n2) Si el pirata es más grande a los 225 pixeles, pon al ninja a **huir** del pirata.\nDe lo contrario, pon al ninja a **perseguir** al pirata.  "
      courseD_playLab_cond6_2018_instruction: "1) Desacelera al ninja (actor 3) antes de ponerlo a perseguir al pirata. \n2) Si el pirata es más grande a los 225 pixeles, pon al ninja a **huir** del pirata.\nDe lo contrario, pon al ninja a **perseguir** al pirata.  "
      courseD_playLab_cond6a_instruction: Si el pirata (actor 1) está en la zona segura, espera un segundo, luego quítale un punto mientras permanezca debajo de la línea del pulpo.
      courseD_playLab_cond6a_2018_instruction: Si el pirata (actor 1) está en la zona segura, espera un segundo, luego quítale un punto mientras permanezca debajo de la línea del pulpo.
      courseD_playLab_cond6cloneForTest_instruction: Probando
      courseD_playLab_condFP_instruction: '¡Ahora, construye tu propio juego para presumir con tus amigos!'
      courseD_playLab_condFP_2018_instruction: '¡Ahora, construye tu propio juego para presumir con tus amigos!'
      courseD_playLab_condFP_a_instruction: '¡Ahora, construye tu propio juego para presumir con tus amigos!'
      courseD_playLab_condForVideo_instruction: '¡Ahora, construye tu propio juego para presumir con tus amigos!'
      courseD_playLab_embedded_instruction: "Mueve a Pegleg el Pirata con las teclas de flechas. ¡Llega hasta el dragón para anotar puntos, pero evita al ninja! Pararse bajo la línea del pulpo hará que el ninja deje de perseguirte, ¡pero cuidado! Mientras más te quedes ahí, más puntos perderás!"
      courseD_scrat_ramp1_instruction: Para este rompecabezas, encaja todos los bloques haz clic en "Ejecutar" y ¡ve que sucede!
      courseD_scrat_ramp1_2018_instruction: Para este rompecabezas, encaja todos los bloques haz clic en "Ejecutar" y ¡ve que sucede!
      courseD_scrat_ramp2_instruction: Arrastra un bloque `mover hacia adelante` extra desde la caja de herramientas, luego adjunta todos los bloques al `cuando ejecute` para finalizar tu código.
      courseD_scrat_ramp2_2018_instruction: Arrastra un bloque `mover hacia adelante` extra desde la caja de herramientas, luego adjunta todos los bloques al `cuando ejecute` para finalizar tu código.
      courseD_scrat_ramp3_instruction: Hay un bloque extra que va a hacer que Scrat se estrelle. Elimínalo arrastrandolo de vuelta a la caja de herramientas.
      courseD_scrat_ramp3_2018_instruction: Hay un bloque extra que va a hacer que Scrat se estrelle. Elimínalo arrastrandolo de vuelta a la caja de herramientas.
      courseD_scrat_ramp4_instruction: '¡Evita el hielo trizado para mantener seguro a Scrat!'
      courseD_scrat_ramp4_2018_instruction: '¡Evita el hielo trizado para mantener seguro a Scrat!'
      courseD_scrat_ramp5_instruction: Evita el hielo quebradizo.
      courseD_scrat_ramp5_2018_instruction: Evita el hielo quebradizo.
      courseD_scrat_ramp6_instruction: '¡Ayuda a Scrat para llegar a la bellota usando un bucle!'
      courseD_scrat_ramp6_2018_instruction: '¡Ayuda a Scrat para llegar a la bellota usando un bucle!'
      courseD_scrat_ramp7_instruction: '¡Ayuda a Scrat a llegar a la bellota!'
      courseD_scrat_ramp7_2018_instruction: '¡Ayuda a Scrat a llegar a la bellota!'
      courseD_scrat_ramp8_instruction: '¡Usa lo que has aprendido para llevar a Scrat hasta la bellota!'
      courseD_scrat_ramp8_2018_instruction: '¡Usa lo que has aprendido para llevar a Scrat hasta la bellota!'
      courseE_artist_concept1_instruction: 'Recrea esta imagen. '
      courseE_artist_concept1_2018_instruction: 'Recrea esta imagen. '
      courseE_artist_concept4_instruction: Recrea este dibujo.
      courseE_artist_concept4_2018_instruction: Recrea este dibujo.
      courseE_artist_concept_challenge1_instruction: 'Ayuda al artista a dibujar una forma única. '
      courseE_artist_concept_challenge1_2018_instruction: 'Ayuda al artista a dibujar una forma única. '
      courseE_artist_concept_challenge2_instruction: Crea cinco molinillos usando el código de más abajo.
      courseE_artist_concept_challenge2_2018_instruction: Crea cinco molinillos usando el código de más abajo.
      courseE_artist_embed_functions8_instruction: Obsrva cudiadosamente este nivel. ¿Que tipo de funciones ves que un progrma neecesita con el propósito de crear un diseño como este? Pronto lo harás tu mismo, así que vuelve aquí cuando necesites ayuda.
      courseE_artist_functions1_instruction: "Hola. Yo artista zombi. ¡Yo amo dibujar! Ayúdame a dibujar las gafas cuadradas. Sugerencia: el puente entre las gafas es 25 píxeles más corto que el ancho del cuadrado."
      courseE_artist_functions10_instruction: Esta vez, usa las líneas de 8 hexagones con lados de 25 pixeles.
      courseE_artist_functions10_2018_instruction: This time, use lines of 8 hexagons with 25 pixel sides.
      courseE_artist_functions1_2018_instruction: "Hola. Yo artista zombi. ¡Yo amo dibujar! Ayúdame a dibujar las gafas cuadradas. Sugerencia: el puente entre las gafas es 25 píxeles más corto que el ancho del cuadrado."
      courseE_artist_functions2_instruction: 'Esta vez, usa la función ''dibujar cuadrado'' para crear estos vasos. '
      courseE_artist_functions2_2018_instruction: 'Usa la función ''dibujar cuadrado'' para crear estos vasos. '
      courseE_artist_functions3_instruction: Puedes hacer este dibujo agregando un bloque de repetición.
      courseE_artist_functions3_2018_instruction: Construye una función que creará esta estrella.
      courseE_artist_functions4_instruction: Ahora que puedes dibujar una estrella, ¡intenta dibujar 4 estrellas!
      courseE_artist_functions4_2018_instruction: Now that you can draw a star, try drawing four stars!
      courseE_artist_functions5_instruction: Dibuja sólo esas tres estrellas para finalizar este reompecabezas.
      courseE_artist_functions5_2018_instruction: Draw only those three stars to finish this puzzle.
      courseE_artist_functions6_instruction: Construye esta ventana dibujando un cuadrado, luego gira 90 grados antes de dibujar otro, etcétera.
      courseE_artist_functions6_2018_instruction: Make this window by drawing a square, then turning 90 degrees before drawing another, and so on.
      courseE_artist_functions7_instruction: Intenta resolver este rompecabezas creando un 'dibujar una ventana' y llamándolo cico veces. ¡Cuidado con la puerta!
      courseE_artist_functions7_2018_instruction: Intenta resolver este rompecabezas crando un 'dibuajr ventana' y llamándolo cinco veces. ¡Cuidado con la puerta!
      courseE_artist_functions8_instruction: 'Chalenge: Crea tantas funciones como creas que necesitas para hacer este dibujo de cuadrados de 50 pixeles.'
      courseE_artist_functions8_2018_instruction: Usa todo lo que has aprendido hasta ahora para recrear este diseño.
      courseE_artist_functions8a_2018_instruction: Crea una función para un cuadrado individual.
      courseE_artist_functions8b_2018_instruction: Llama a la función 'dibujar cuadrado' desde el interior de la función 'dibujar una línea de cuadrados' ¡para hacer esto más fácil!
      courseE_artist_functions8c_2018_instruction: Agrega una función más que cree esta pila de cuadrados escalonados.
      courseE_artist_functions9_instruction: Crea esta imagen usando sólo los bloques proporcionados.
      courseE_artist_functions9_2018_instruction: "**Desafío:** Crea esta imagen usando sólo los bloques proporcionados."
      courseE_artist_functionsProj_2018_instruction: "**Inspiración:** ¡Usa lo que has aprendido para hacer lo que sea que quieras!"
      courseE_artist_functions_challenge_instruction: Una vez que defines una función, puedes llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      courseE_artist_functions_challenge1_instruction: Una vez que defines una función, puedes llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      courseE_artist_functions_challenge1_2018_instruction: Una vez que defines una función, puedes llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      courseE_artist_functions_challenge2_instruction: Intenta este código para ver cómo funciona, ¡luego has tu programa propio!
      courseE_artist_functions_challenge2_2018_instruction: Intenta este código para ver cómo funciona, ¡luego has tu programa propio!
      courseE_artist_ramp10_instruction: '¡Ahora, arrastra el código para el último tirángulo dentro de un nuevo bucle para hacerlo girar y hacer un copo de nieve!'
      courseE_artist_ramp11_instruction: '¡Ahora haz un cuadrado usando Artista!'
      courseE_artist_ramp12_instruction: Usa lo que has aprendido para dibujar este triángulo dentro de un cuadrado.
      courseE_artist_ramp8_instruction: '¡Ahora haz un cuadrado usando Artista!'
      courseE_artist_ramp8_2_instruction: '¡Ahora haz un cuadrado usando Artista!'
      courseE_artist_ramp8_2018_instruction: '¡Ahora haz un cuadrado usando Artista!'
      courseE_artist_ramp8_2_2018_instruction: '¡Ahora haz un cuadrado usando Artista!'
      courseE_artist_ramp9_instruction: Usa lo que has aprendido para dibujar este triángulo.
      courseE_artist_ramp9_2_instruction: Usa lo que has aprendido para dibujar este triángulo.
      courseE_artist_ramp9_2018_instruction: Usa lo que has aprendido para dibujar este triángulo.
      courseE_artist_ramp9_2_2018_instruction: Usa lo que has aprendido para dibujar este triángulo.
      courseE_bee_concept1_instruction: Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. 
      courseE_bee_concept1_2018_instruction: Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. 
      courseE_bee_concept2_instruction: 'Ayuda a la abeja a hacer toda la miel. '
      courseE_bee_concept2_2018_instruction: 'Ayuda a la abeja a hacer toda la miel. '
      courseE_bee_concept3_instruction: Recoge todo el néctar usando los menos bloques posibles.
      courseE_bee_concept3_2018_instruction: Collect all of the nectar using  as few blocks as possible.
      courseE_bee_concept4_instruction: '¡Ah oh! La abeja no está segura si debería recoger el néctar o hacer miel. ¿Puedes ayudarla?'
      courseE_bee_concept4_2018_instruction: Uh oh! The bee is not sure if he should collect nectar or make honey. Can you help him out?
      courseE_bee_concept5_instruction: Ayuda a la abeja a recoger el néctar de las flores.
      courseE_bee_concept5_2018_instruction: Ayuda a la abeja a recoger el néctar de las flores.
      courseE_bee_functions1_instruction: Colecta todo el néctar de cada flor.
      courseE_bee_functions10_instruction: Resuelve este rompecabezas creando una función que ayude a la abeja a ir a obtener la miel antes de regresar al camino principal.
      courseE_bee_functions10_2018_instruction: Resuelve este rompecabezas creando una función que ayude a la abeja a ir a obtener la miel antes de regresar al camino principal.
      courseE_bee_functions1_2018_instruction: Colecta todo el néctar de cada flor.
      courseE_bee_functions2_instruction: Usa la función 'obtener 2 néctar' para recoger el néctar de cada flor.
      courseE_bee_functions2_2018_instruction: Usa la función 'obtener 2 néctar' para recoger el néctar de cada flor.
      courseE_bee_functions3_instruction: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 5" para obtener 5 néctares a cada momento. Asegúrese de utilizar un bucle para obtener un recuento ideal de bloque, también.
      courseE_bee_functions3_2018_instruction: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 5" para obtener 5 néctares a cada momento. Asegúrese de utilizar un bucle para obtener un recuento ideal de bloque, también.
      courseE_bee_functions4_instruction: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseE_bee_functions4_2018_instruction: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseE_bee_functions5_instruction: Ahora escribe la función para recoger el néctar de las flores.
      courseE_bee_functions5_2018_instruction: Now write the function to collect nectar from the flowers.
      courseE_bee_functions6_instruction: Crea una función para recoger el néctar en cada flor y hacer miel en cada panal.
      courseE_bee_functions6_2018_instruction: Create a function and call it to collect nectar at each flower and make honey at each honeycomb.
      courseE_bee_functions6test_instruction: Crea una función para recoger el néctar en cada flor y hacer miel en cada panal.
      courseE_bee_functions7_instruction: Crea tu propia función que recorra el camino, obtenga el néctar, haga la miel, y luego regrese a la abeja a la cima del camino. ¡Recoge todo el néctar y haz toda la miel!
      courseE_bee_functions7_2018_instruction: Crea tu propia función que recorra el camino, obtenga el néctar, haga la miel, y luego regrese a la abeja a la cima del camino. ¡Recoge todo el néctar y haz toda la miel!
      courseE_bee_functions8_instruction: Crea una función que recoja todo el néctar de cada flor.
      courseE_bee_functions8_2018_instruction: Create a function that collects all of the nectar from each flower.
      courseE_bee_functions9_instruction: Crea una función que recoja todo el néctar de cada flor.
      courseE_bee_functions9_2018_instruction: Create a function to collect all of the nectar from each flower.
      courseE_bee_functions9b_instruction: '¡Ahora intténtalo en Bee!'
      courseE_bee_functions_challenge1_instruction: Estás por tu cuenta para este desafío. ¡Esto puede "ser" más díficil de lo que parece!
      courseE_bee_functions_challenge1_2018_instruction: Estás por tu cuenta para este desafío. ¡Esto puede "ser" más díficil de lo que parece!
      courseE_bee_functions_challenge2_instruction: Estas por tu cuenta para este desafío. ¡Dulce!
      courseE_bee_functions_challenge2_2018_instruction: Estas por tu cuenta para este desafío. ¡Dulce!
      courseE_bee_ramp14_instruction: Ayuda a la abeja a seguir el camino para juntar toda la miel y todo el néctar.
      courseE_bee_ramp14_2018_instruction: Ayuda a la abeja a seguir el camino para juntar toda la miel y todo el néctar.
      courseE_bee_ramp17_instruction: Usa lo que has aprendido para resolver este rompecabezas.
      courseE_collector_ramp10_instruction: Ayuda Laurel a recolectar todo el tesoro.
      courseE_collector_ramp8_instruction: Ayuda Laurel a recolectar todo el tesoro.
      courseE_collector_ramp9_instruction: Ayuda Laurel a recolectar todo el tesoro.
      courseE_farmer_concept1_instruction: '¿Puedes escribir un programa que llene estos orificios hasta que el terreno esté plano?'
      courseE_farmer_concept1_2018_instruction: '¿Puedes escribir un programa que llene estos orificios hasta que el terreno esté plano?'
      courseE_farmer_concept2_instruction: Recoge todas las calabazas.
      courseE_farmer_concept2_2018_instruction: Recoge todas las calabazas.
      courseE_farmer_concept3_instruction: Llena lo orificios al final de cada uno de estos caminos.
      courseE_farmer_concept3_2018_instruction: Fill in the hole at the end of each of these paths.
      courseE_farmer_concept4_instruction: Ahora vamos a un nivel más profundo. Hemos anidado todo el bloque de código en otro bucle, pero tienes que poner al artista en su lugar para dibujar la línea siguiente. ¿Cuál de estos bloques de código puede usted colocar al final del bucle exterior para dibujar la red entera?
      courseE_farmer_functions1_instruction: Ayuda a la cosechadora a llegar a la calabaza y recogerla.
      courseE_farmer_functions10_instruction: 'Nadie sabe en que se convertirán estos brotes. Usa las afirmaciones ''si'' para escribir el código para revisar y cosechar cada uno.   '
      courseE_farmer_functions10a1_2018_instruction: '¡Usa todo lo que has apprendido hasta ahora para resolver este rompecabezas!'
      courseE_farmer_functions10b_instruction: Usa tu nueva función dos veces para resolver este rompecabezas.
      courseE_farmer_functions10b_2018_instruction: Usa tu nueva función dos veces para resolver este rompecabezas.
      courseE_farmer_functions13_2018_instruction: Resuelve este rompecabezas en 23 bloques o menos.
      courseE_farmer_functions1_2018_instruction: Ayuda a la cosechadora a llegar a la calabaza y recogerla.
      courseE_farmer_functions1a_instruction: Ahora ayuda a la cosechadora a recoger máiz, lechugas **y** calabazas.
      courseE_farmer_functions1a_2018_instruction: Ayuda a la cosechadora a recoger todo el maíz, luego la calabaza.
      courseE_farmer_functions2_instruction: "Ahora, habrá un número diferente de calabazas cada vez que ejecutes el programa.  \n\nUsa el bloque 'mientras' para recoger sólo la cantidad de calabazas ue necesites."
      courseE_farmer_functions2a_instruction: Vamos a revisar muchos cuadrados por cultivos en los próximos rompecabezas. Movamos todo a una función para hacerlo más fácil.
      courseE_farmer_functions2aALT_instruction: Vamos a revisar muchos cuadrados por cultivos en los próximos rompecabezas. Movamos todo a una función para hacerlo más fácil.
      courseE_farmer_functions2b_instruction: Ayuda a la cosechadora a recoger el maíz y las calabazas.
      courseE_farmer_functions2b_2018_instruction: Ayuda a la cosechadora a recoger el maíz y las calabazas.
      courseE_farmer_functions2ba_instruction: Ayuda al granjero a recoger el maíz y las calabazas usando la función 'maíz y calabaza'.
      courseE_farmer_functions2ba_2018_instruction: Ayuda al granjero a recoger el maíz y las calabazas usando la función 'maíz y calabaza'.
      courseE_farmer_functions3_instruction: "¿Qué sucede cando los caminos hacia las calabazas son de longitudes diferentes?  \n\nReógelos todos con la menor cantidad de bloques."
      courseE_farmer_functions3b_instruction: Ahora ayuda al granjero a recoger el maíz, la lechuga **y** la calabaza.
      courseE_farmer_functions3c_instruction: Ahora completa la función tu mismo sacando los bloques del código y dejándolos dento de la **función definición**.
      courseE_farmer_functions3c1_2018_instruction: '¡Esta función llama a otras funciones!'
      courseE_farmer_functions3c_2018_instruction: Inenta por un camino más largo.
      courseE_farmer_functions4_instruction: |-
        ¡Grandioso! Ahora tienes un código que funcionará para obtener calabazas de un camino de cualquier tamaño.
        
        Arrastraemos ese código dentro de una función para que podamos usarlo de muchas maneras...pero primero usémoslo para resolver este rompecabezas.
      courseE_farmer_functions4b_instruction: Usa tu nueva función para resolver este rompecabezas.
      courseE_farmer_functions4b_2018_instruction: Usa tu nueva función para resolver este rompecabezas.
      courseE_farmer_functions5_instruction: '¿Cómo puedes cmbiar tu programa para hacer que esta función funcione para cada uno de estos caminos?'
      courseE_farmer_functions5a_instruction: '¿Cómo puedes cmbiar tu programa para hacer que esta función funcione para cada uno de estos caminos?'
      courseE_farmer_functions5b_instruction: Los cultvos están creciendo en racimos. Agrega algunos bucles 'mientras' a tu función para asegúrarte de obtener todos la producción.
      courseE_farmer_functions5c_instruction: Tu función será útil aquí.
      courseE_farmer_functions5c_2018_instruction: Tu función será útil aquí.
      courseE_farmer_functions6_instruction: |-
        *"¡Lechuga intenta algo nuevo aquí!"*
        
        Aquí hay algún código para recoger todas las lechugas. Muévelo dentro de una función para que podamos usarlo más tarde.
      courseE_farmer_functions6b_instruction: Recoge toda la producción.
      courseE_farmer_functions6c_instruction: '¿Qué necesitas agregar a este programa para que revise si el brote es maíz o lechuga?'
      courseE_farmer_functions6c_2018_instruction: '¿Qué necesitas agregar a este programa para que revise si el brote es maíz o lechuga?'
      courseE_farmer_functions7_instruction: Usa tus funciones para resolver este rompecabezas.
      courseE_farmer_functions7a1_2018_instruction: Crea una función que envíe a la cosechadora por un camino cuadrado para recoger una lechuga de la mitad de cada fila.
      courseE_farmer_functions7b_instruction: Ayuda a la cosechadora a encontrar su vía en este confuso camino y a la calabza girando a la izquierda en el maíz y a la derecha en la lechuga.
      courseE_farmer_functions7b_2018_instruction: Ayuda a la cosechadora a encontrar su vía en este confuso camino y a la calabza girando a la izquierda en el maíz y a la derecha en la lechuga.
      courseE_farmer_functions8_instruction: "**Desafío:** Resuelve este rompecabezas con la menor cantidad de bloques posible."
      courseE_farmer_functions8a1_2018_instruction: '¿Es aún útil tu funcón?'
      courseE_farmer_functions8b_instruction: "**Desafío:** Recoge todas las calabzas usando el método del últtimo rompecabezas. "
      courseE_farmer_functions8b_2018_instruction: "**Desafío:** Recoge todas las calabzas usando el método del últtimo rompecabezas. "
      courseE_farmer_functions9_instruction: Utilice condicionales para simplificar su programa.
      courseE_farmer_functions9a1_2018_instruction: '¿Es aún útil tu funcón?'
      courseE_farmer_functions9b_instruction: '¿Puede descifrar el patrón que necesitas para reesolver este rompecabezas?'
      courseE_farmer_functions9b_2018_instruction: '¿Puede descifrar el patrón que necesitas para reesolver este rompecabezas?'
      courseE_farmer_functions9b_clone_instruction: '¿Puede descifrar el patrón que necesitas para reesolver este rompecabezas?'
      courseE_farmer_predict1_instruction: Recoge todas las lechugas (sólo mientras haya alguna que recoger)
      courseE_farmer_predict1_2018_instruction: Recoge todas las lechugas (sólo mientras haya alguna que recoger)
      courseE_farmer_ramp11_instruction: Este rompecabezas también utiliza bucles anidados. ¿Puedes descifrar cómo?
      courseE_farmer_ramp11a_instruction: Mientras hay un montón, remueve la tierra.
      courseE_farmer_ramp11a_2018_instruction: Mientras hay un montón, remueve la tierra.
      courseE_farmer_ramp11b_instruction: Mientras haya una pila, quita la suciedad.
      courseE_farmer_ramp11b_2018_instruction: Mientras hay un montón, remueve la tierra.
      courseE_farmer_ramp12_instruction: Ahora usa bucles anidados para resolver este rompecabezas.
      courseE_farmer_ramp12_2018_instruction: Ahora usa bucles anidados para resolver este rompecabezas.
      courseE_farmer_ramp12_forswap_instruction: Ahora usa bucles anidados para resolver este rompecabezas.
      courseE_farmer_ramp12_forswap_2018_instruction: Ahora usa bucles anidados para resolver este rompecabezas.
      courseE_farmer_ramp12a_instruction: Ayude al agricultor a recorrer correctamente el camino para recolectar toda la lechuga.
      courseE_farmer_ramp12a_2018_instruction: Ayude al agricultor a recorrer correctamente el camino para recolectar toda la lechuga.
      courseE_farmer_ramp12b_instruction: '¡Mientras haya lechuga, recoge la lechuga!'
      courseE_farmer_ramp12b_2018_instruction: '¡Mientras haya lechuga, recoge la lechuga!'
      courseE_farmer_ramp12c_instruction: Muévete hacia adelante hasta que alcances la lechuga, luego recogela usando un bucle 'mientras'.
      courseE_farmer_ramp12c_2018_instruction: Muévete hacia adelante hasta que alcances la lechuga, luego recogela usando un bucle 'mientras'.
      courseE_farmer_ramp12d_instruction: Muévete hacia adelante hasta que alcances la lechuga, luego recógela usando un bucle 'mientras'.
      courseE_farmer_ramp12d_2018_instruction: Muévete hacia adelante hasta que alcances la lechuga, luego recogela usando un bucle 'mientras'.
      courseE_farmer_ramp12e_instruction: Muévete hacia adelante hasta que alcances la lechuga, luego recógela usando un bucle 'mientras'.
      courseE_farmer_ramp12e_2018_instruction: Muévete hacia adelante hasta que alcances la lechuga, luego recogela usando un bucle 'mientras'.
      courseE_farmer_ramp12f_instruction: Muévete hacia adelante hasta que alcances la lechuga, luego gira a la izquierda **si** hay un camino a la izquierda. De lo contrario, gira a la derecha.
      courseE_farmer_ramp12f_2018_instruction: Muévete hacia adelante hasta que alcances la lechuga, luego gira a la izquierda **si** hay un camino a la izquierda. De lo contrario, gira a la derecha.
      courseE_farmer_ramp12g_instruction: Avanza hasta llegar a la lechuga, luego gira a la izquierda **si** hay un camino a la izquierda.  De lo contrario, gira a la derecha.
      courseE_farmer_ramp12g_2018_instruction: Muévete hacia adelante hasta que alcances la lechuga, luego gira a la izquierda **si** hay un camino a la izquierda. De lo contrario, gira a la derecha.
      courseE_farmer_ramp13_instruction: Recoge el maíz si hay maíz, y la lechuga mientras haya lechuga.
      courseE_farmer_ramp13_2018_instruction: Recoge el maíz si hay maíz, y la lechuga mientras haya lechuga.
      courseE_farmer_ramp15_instruction: Resuelve este rompecabezas usando sólo los bloques disponibles.
      courseE_farmer_ramp15_2018_instruction: Resuelve este rompecabezas usando sólo los bloques disponibles.
      courseE_farmer_ramp16_instruction: "**Desafío:** Resuelve este rompecabezas con la menor cantidad de bloques."
      courseE_maze_predict1_instruction: Este código incluye un nuevo bloque. ¿Qué crees que pasaría si pulsas el bloque "Correr"?
      courseE_maze_predict1_2018_instruction: Este código incluye un nuevo bloque. ¿Qué crees que pasaría si pulsas el bloque "Correr"?
      courseE_maze_ramp1_instruction: For this puzzle, drag all of the blocks together and click "Run" to watch it go!
      courseE_maze_ramp13_instruction: '¡Momento para un último rompecabezas para unirlo todo!'
      courseE_maze_ramp1_2018_instruction: For this puzzle, drag all of the blocks together and click "Run" to watch it go!
      courseE_maze_ramp2_instruction: Arrastra un bloque 'mover hacia adelante' extra desde la caja de herramientas, luego adjunta todos los bloques al 'cuando ejecute' para finalizar el código.
      courseE_maze_ramp2_2018_instruction: Arrastra un bloque `mover hacia adelante` extra desde la caja de herramientas, luego adjunta todos los bloques al `cuando ejecute` para finalizar tu código.
      courseE_maze_ramp3_instruction: Hay un bloque extra que causará que el pájaro se estrelle. Elimínalo arrastrándolo de vuelta a la caja d eherramientas.
      courseE_maze_ramp3_2018_instruction: Hay un bloque extra que va a causar que el pájaro choque. Elimínalo arrastrandolo de vuellta a la caja de herramientas.
      courseE_maze_ramp4_instruction: '¡Evita el TNT o volarán las plumas!'
      courseE_maze_ramp4_2018_instruction: '¡Evita el TNT o volarán las plumas!'
      courseE_maze_ramp5_instruction: Evita el TNT.
      courseE_maze_ramp5_2018_instruction: Evita el TNT.
      courseE_maze_ramp6_instruction: '"Mantén la calma y ayúdame a encontrar a ese cerdo malo. ¡De lo contrario me puedo enojar!"'
      courseE_maze_ramp6_2018_instruction: '"Keep calm and help me find the bad pig. Otherwise I might get angry!"'
      courseE_maze_ramp7_instruction: '¡Usa lo que has aprendido para llevar al pájaro hasta el cerdo!'
      courseE_maze_ramp7_2018_instruction: '¡Usa lo que has aprendido para llevar al pájaro hasta el cerdo!'
      courseE_maze_ramp_predict1_instruction: Este código incluye un nuevo bloque. ¿Qué crees que pasaría si pulsas el bloque "Correr"?
      courseE_multi_maze_ramp5_instruction: Evita el TNT.
      courseE_playLab_challenge1_instruction: "Algo debería suceder cuando obtegas suficientes puntos o cuando se te acaben los puntos. Agrega algo de código a las funciones 'ganar juego' y 'perder juego' para hacer que el juego funcione de la manera que deberñia. \n¡Haz clic en las pistas para más ideas!"
      courseE_playLab_challenge1_2018_instruction: "Algo debería suceder cuando obtegas suficientes puntos o cuando se te acaben los puntos. Agrega algo de código a las funciones 'ganar juego' y 'perder juego' para hacer que el juego funcione de la manera que deberñia. \n¡Haz clic en las pistas para más ideas!"
      courseE_playLab_embedded_instruction: Este es un juego de ejemplo con el que puedes jugar. Mueve al perro con tu tecla de flecha. Cuándo el perro toque a los gatos, ¡anota un punto! ¡Anota 5 puntos para ganar!
      courseE_playLab_exampleProject2_instruction: '¡Aquí está todo tu código para escoger una carta - intenta agregar otras características divertidas!'
      courseE_playLab_scaffold1_instruction: Escoge un fondo y un mapa, y escoge un actor para ser el héroe de tu juego.
      courseE_playLab_scaffold1_2018_instruction: Escoge un fondo y un mapa, y escoge un actor para ser el héroe de tu juego.
      courseE_playLab_scaffold2_instruction: Usa el manjador de eventos y acciones para hacer que tu héroe se mueva.
      courseE_playLab_scaffold2_2018_instruction: Usa el manjador de eventos y acciones para hacer que tu héroe se mueva.
      courseE_playLab_scaffold3_instruction: Agrega dos o más actores adicionales a tu juego y hazlos moverse.
      courseE_playLab_scaffold3_2018_instruction: Agrega dos o más actores adicionales a tu juego y hazlos moverse.
      courseE_playLab_scaffold4_instruction: Encuentra algunas formas interesantes de cambiar el puntaje en tu juego. Obtén el puntaje para mostrar al más que 0 para continuar.
      courseE_playLab_scaffold4_2018_instruction: Encuentra algunas formas interesantes de cambiar el puntaje en tu juego. Obtén el puntaje para mostrar al más que 0 para continuar.
      courseE_playLab_scaffold5_instruction: Ahora pasa algo de tiempo aegurándote que el juego funcione d ela manera que quiers. Incluye una manera para ganar o perder tu juego, luego juega hasta que encuentres esas condiciones.
      courseE_playLab_scaffold5_2018_instruction: Ahora pasa algo de tiempo aegurándote que el juego funcione d ela manera que quiers. Incluye una manera para ganar o perder tu juego, luego juega hasta que encuentres esas condiciones.
      courseE_playLab_scaffold6_instruction: '¡Has terminado! Ahora puedes jugar tu juego o compartirlo con tus amigos o compañeros!'
      courseE_playLab_scaffold6_2018_instruction: You've finished! Now you can play your game or share it with your friends and classmates!
      courseE_playlab_challenge2_instruction: '¿Puedes descifrar como funciona esta aplicación "Adivino"? Haz clic en ''MÁS'' para ver tus desafíos.'
      courseE_playlab_variables_challenge2_instruction: '¿Puedes descifrar como funciona esta aplicación "Adivino"? Haz clic en ''MÁS'' para ver tus desafíos.'
      courseE_video_createFunctions_instruction: Aún no tenemos un video para la creación de funciones. Este es un referente.
      courseE_video_createFunctions2_instruction: Aún no tenemos un video para la creación de funciones. Este es un referente.
      courseE_video_createFunctions2_2018_instruction: Aún no tenemos un video para la creación de funciones. Este es un referente.
      courseE_video_createFunctions_2018_instruction: Aún no tenemos un video para la creación de funciones. Este es un referente.
      courseF_IceAge_1_instruction: Ayuda a Sid a decir "¡Hola! arrastrando el bloque `actor 1 dice` y conéctalo al final del evento `cuando ejecuta`.
      courseF_IceAge_10_instruction: Usa el comando 'acto_lanza' para hacer que Sid (actor 1) lance corazones a Granny (actor 2) y establece el ánimo de Granny en feliz cuando es golpeada por ellos.
      courseF_IceAge_11_instruction: '¡Tiempo de crear tu propio juego o historia! '
      courseF_IceAge_2_instruction: Ayuda a Manny y a Sid a saludarse usando el bloque `actor ___ dice` dos veces.
      courseF_IceAge_3_instruction: '¡Scrat está buscando su bellota! ¿Puedes ayudarlo a moverse los últimos 200 pixeles?'
      courseF_IceAge_4_instruction: Conecta un bloque al evento 'cuando actor toca' para hacer que suene un sonido cuando Diego encuentra a Manny.
      courseF_IceAge_5_instruction: Ayuda a Granny a hacer algo de ejercicio moviendo a la izquierda y a la derecha repetidamente.
      courseF_IceAge_6_instruction: '¿Puedes ayudar a Sid a llamar a sus amigos cuando hagas clic en él? '
      courseF_IceAge_7_instruction: '¡Escrbe el código para ayudar a Scrat a llegar a la bellota!'
      courseF_IceAge_8_instruction: '¿Puedes terminar este programa para hacerlo que tú **reproduzcas un sonido** y **hagas un punto** cuando Sid y Granny choquen? '
      courseF_IceAge_9_instruction: Cambia la escena a un fondo con hielo y ajusta la velocidad de Sid (actor 1) a rápido.
      courseF_IceAge_template_instruction: '¡Escrbe el código para ayudar a Scrat a llegar a la bellota!'
      courseF_artist_embed_for7_instruction: '¡Presiona Ejecutar para ver un programa en acción! Este se usa para bucles.'
      courseF_artist_embed_variables9_instruction: '¡Presiona Ejecutar para ver este programa en acción!'
      courseF_artist_for1_instruction: Expermenta con un bucle 'para' y juega con la variable 'contar'.
      courseF_artist_for10_instruction: 'Juego libre: Inteta usar la variable ''contar'' con otros elementos del dibujo para hacer imágenes mágicas como esta.'
      courseF_artist_for10_2018_instruction: 'Free Play: Try using the `counter` variable with other drawing elements to make magical images like this one.'
      courseF_artist_for1_2018_instruction: Experiment with the `for` loop and play with the `counter` variable.
      courseF_artist_for2_instruction: Crea este grupo de tirángulos que va de 50 pixeles a 100 piseles por lado.
      courseF_artist_for2_2018_instruction: Crea este grupo de tirángulos que va de 50 pixeles a 100 piseles por lado.
      courseF_artist_for3_instruction: 'Ests triángulos van desde lados de 20 pixeles a lados de 200 pixeles y cada triángulo es 20 pixeles más garnde que el anterior. '
      courseF_artist_for3_2018_instruction: 'These triangles go from 20 pixel sides to 200 pixel sides, and each triangle is 20 pixels larger than the last. '
      courseF_artist_for4_instruction: 'Estos cuadrados coienzan con 15 pixeles de largo. El más largo es de 300 pixeles de largo, y cada cuadrado es 15 pixeles más grande que el anterior. '
      courseF_artist_for4_2018_instruction: 'Estos cuadrados coienzan con 15 pixeles de largo. El más largo es de 300 pixeles de largo, y cada cuadrado es 15 pixeles más grande que el anterior. '
      courseF_artist_for5_instruction: Sólo un pequeño cambio al código de la última imagen puede crear este dibujo. ¿Puedes desifrar cuál es ese cambio?
      courseF_artist_for5_2018_instruction: Sólo un pequeño cambio al código de la última imagen puede crear este dibujo. ¿Puedes desifrar cuál es ese cambio?
      courseF_artist_for6_instruction: Recrea tu código del último nivel, pero gira 89 grados para crear este espiral cuadrado torcido.
      courseF_artist_for6_2018_instruction: Recrea tu código del último nivel, pero gira 89 grados para crear este espiral cuadrado torcido.
      courseF_artist_for7_instruction: '¡Haz 3 pequeños cambios al código desde el último nivel para obtener esto!'
      courseF_artist_for7_2018_instruction: '¡Haz 3 pequeños cambios al código desde el último nivel para obtener esto!'
      courseF_artist_for8_instruction: Baja el ángulo a 72 grados para obtener un pentagón en espiral.
      courseF_artist_for8_2018_instruction: Take the angle down to 72 degrees to get a spiraled pentagon.
      courseF_artist_for9_instruction: "**Inspiración:** Usa el contador dentro del bloque 'establecer alfa' para obtener este centro desvanecido."
      courseF_artist_for9_2018_instruction: "**Inspiración:** Usa el contador dentro del bloque 'establecer alfa' para obtener este centro desvanecido."
      courseF_artist_for_Template_instruction: Intenta usar algo del código del último nivel, per gira 89 grados para crear esta espiral cuadrada torcida.
      courseF_artist_for_Template_2018_instruction: Intenta usar algo del código del último nivel, per gira 89 grados para crear esta espiral cuadrada torcida.
      courseF_artist_for_challenge1_instruction: '¿Puedes averiguar cómo volver a crear este dibujo?'
      courseF_artist_for_challenge1_2018_instruction: '¿Puedes averiguar cómo volver a crear este dibujo?'
      courseF_artist_for_challenge2_instruction: '¿Puedes averiguar cómo volver a crear este dibujo utilizando un solo ciclo?'
      courseF_artist_for_challenge2_2018_instruction: '¿Puedes averiguar cómo volver a crear este dibujo utilizando un solo ciclo?'
      courseF_artist_fwp1_instruction: Edita la función 'dibujar un cuadrado' para encontrar bugs.
      courseF_artist_fwp1_2018_instruction: Edita la función 'dibujar un cuadrado' para encontrar bugs.
      courseF_artist_fwp2_instruction: Edit the function to accept a parameter called `length`.
      courseF_artist_fwp2_2018_instruction: Edit the function to accept a parameter called `length`.
      courseF_artist_fwp2_predict1_instruction: Edit the function to accept a parameter called `length`.
      courseF_artist_fwp2_predict1_2018_instruction: Edit the function to accept a parameter called `length`.
      courseF_artist_fwp3_instruction: Crea una función llamada 'dibujar cuadrado' y úsala para delinear estas cuatro cajas usando parametros.
      courseF_artist_fwp3_2018_instruction: Crea una función llamada 'dibujar cuadrado' y úsala para delinear estas cuatro cajas usando parametros.
      courseF_artist_fwp4_instruction: Edita esta función para agregar un parametro para el número de lados en tu polígono.
      courseF_artist_fwp4_2018_instruction: Edita esta función para agregar un parametro para el número de lados en tu polígono.
      courseF_artist_fwp5_instruction: 'Usa la función del último rompecabezas para dibujar este serie de formas.  '
      courseF_artist_fwp5_2018_instruction: 'Usa la función del último rompecabezas para dibujar este serie de formas.  '
      courseF_artist_fwp6_instruction: 'Challenge: Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.'
      courseF_artist_fwp6_2018_instruction: 'Challenge: Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.'
      courseF_artist_fwp7_instruction: Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.
      courseF_artist_fwp7_2018_instruction: Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.
      courseF_artist_fwp8_instruction: Can you figure out how to make this drawing using the function that you just created?
      courseF_artist_fwp8_2018_instruction: Can you figure out how to make this drawing using the function that you just created?
      courseF_artist_fwp9_instruction: 'Juego libre: ¡Dibuja algo increíble! ¡Juega con el ancho del lapiz para ver que tan diferentes lucen tus dibujos!'
      courseF_artist_fwp9_2018_instruction: 'Juego libre: ¡Dibuja algo increíble! ¡Juega con el ancho del lapiz para ver que tan diferentes lucen tus dibujos!'
      courseF_artist_fwp_challenge1_instruction: '¿Puedes descifrar cómo funciona este programa?'
      courseF_artist_fwp_challenge1_2018_instruction: '¿Puedes descifrar cómo funciona este programa?'
      courseF_artist_fwp_challenge2_instruction: Usa lo que has aprendido en el nivel previo para dibujar una imagen como esta.
      courseF_artist_fwp_challenge2_2018_instruction: Usa lo que has aprendido en el nivel previo para dibujar una imagen como esta.
      courseF_artist_ramp10_instruction: Ahora, ¡arrastra el código para el último triángulo al nuevo bucle para hacerlo girar y hacer un copo de nieve!
      courseF_artist_ramp10_2018_instruction: '¡Ahora, arrastra el código para el último tirángulo dentro de un nuevo bucle para hacerlo girar y hacer un copo de nieve!'
      courseF_artist_ramp8_instruction: '¡Ahora haz un cuadrado usando a Artista!'
      courseF_artist_ramp8_2018_instruction: '¡Ahora haz un cuadrado usando Artista!'
      courseF_artist_ramp9_instruction: Usa lo que has aprendido para dibujar este triángulo.
      courseF_artist_ramp9_2018_instruction: Usa lo que has aprendido para dibujar este triángulo.
      courseF_artist_variables1_instruction: Vamos a dibujar un triángulo equilatero que tiene exactamente 50 pixeles de largo en cada lado.
      courseF_artist_variables10_instruction: 'Aquí está tu código del último rompecabezas. Intenta editar la variable de otras formas.  '
      courseF_artist_variables10_2018_instruction: 'Aquí está tu código del último rompecabezas. Intenta editar la variable de otras maneras.  '
      courseF_artist_variables2_instruction: 'Ahora dibuja tres de esos triángulos justo uno al lado del otro.   '
      courseF_artist_variables2_2018_instruction: 'Ahora dibuja tres de esos triángulos justo uno al lado del otro.   '
      courseF_artist_variables3_instruction: Mueve la laongitod de 50 a una variable de como que podamos usarla en los próximos rompecabezas.
      courseF_artist_variables3_2018_instruction: Mueve la laongitod de 50 a una variable de como que podamos usarla en los próximos rompecabezas.
      courseF_artist_variables4_instruction: Ahora, usa la variable 'longitud' para hacer qe el artista salte haciia adelante y hacia abajo por la 'longitud' en pixeles entre los triángulos.
      courseF_artist_variables4_2018_instruction: Ahora, usa la variable 'longitud' para hacer qe el artista salte haciia adelante y hacia abajo por la 'longitud' en pixeles entre los triángulos.
      courseF_artist_variables5_instruction: Agrega otro grupo de bucles al final de tu código para agregera tres triángulos más. ¡Esta vez, para moverse hacia adelante y hacia arriba!
      courseF_artist_variables5_2018_instruction: Agrega otro grupo de bucles al final de tu código para agregar tres triángulos más. Esta vez, ¡muévelos hacia adelate y hacia arriba!
      courseF_artist_variables6_instruction: 'Ahora haz los triángulos de 60 pixeles de ancho, con saltos de 60 pixeles.  '
      courseF_artist_variables6_2018_instruction: 'Ahora haz los triángulos de 60 pixeles de ancho, con saltos de 60 pixeles.  '
      courseF_artist_variables6a_instruction: Construye este diseño donde los cuadrados tienen lados de 8 pixeles y el artista salte 80 pixeles por sobre y hacia abajo entre cada uno.
      courseF_artist_variables6a_2018_instruction: Construye este diseño donde los cuadrados tienen lados de 8 pixeles y el artista salte 80 pixeles por sobre y hacia abajo entre cada uno.
      courseF_artist_variables7_instruction: 'Dibuja un triángulo con lados de 150 pixeles. '
      courseF_artist_variables7_2018_instruction: 'Dibuja un triángulo con lados de 150 pixeles. '
      courseF_artist_variables8_instruction: Reconstruye el código del triángulo del último rompecabezas, pero esta vez usa el bloque 'establecer longitud a' para re establecer la variable 'longitud'+10 al final de cada iteración de bucle.
      courseF_artist_variables8_2018_instruction: Reconstruye el código del triángulo del último rompecabezas, pero esta vez usa el bloque 'establecer longitud a' para re establecer la variable 'longitud'+10 al final de cada iteración de bucle.
      courseF_artist_variables9_instruction: '¡Ve lo que pasa cuando repites el código del último rmpecabezas 30 veces en lugar de sólo 3! Siente la libertad de hacer tus líneas de cualquier color o patrón para algo de diversión extra.'
      courseF_artist_variables9_2018_instruction: '¡Ve lo que pasa cuando repites el código del último rmpecabezas 30 veces en lugar de sólo 3! Siente la libertad de hacer tus líneas de cualquier color o patrón para algo de diversión extra.'
      courseF_artist_variablesFP_instruction: "**Juego libre:** Usa lo que has aprendido y haz tu popio dibujo. "
      courseF_artist_variablesFP_2018_instruction: "**Juego libre:** Usa lo que has aprendido y haz tu popio dibujo. "
      courseF_artist_variables_10_instruction: 'Aquí está tu código del último rompecabezas. Intenta editar la variable de otras maneras.  '
      courseF_artist_variables_2_instruction: "Ahora usa otro bucle para dibujar tres de eso striángulos justo uno al lado del otro.  \nPuedes anidar el código de tu último rompecabezas dentro.\n"
      courseF_artist_variables_5_instruction: Agrega otro grupo de bucles al final de tu código para agregar tres triángulos más. Esta vez, ¡muévelos hacia adelate y hacia arriba!
      courseF_artist_variables_6_instruction: "¡Ups1 Realmente necesitamos que los triángulos sean de 60 pixeles de ancho, con 60 pixeles de salto. ¿No estás contento de estar usando una variable?"
      courseF_artist_variables_6a_instruction: Construye este diseño donde los cuadrados tienen lados de 8 pixeles y el artista salte 80 pixeles por sobre y hacia abajo entre cada uno.
      courseF_artist_variables_9_instruction: |-
        ¡Ve lo que sucede cuando repites el código de último rompecabezas 30 veces en lugar de solo 3!
        
        Sientete libre de hacer tus líneas de cualquier color o patrón para algo de diversión extra.
      courseF_artist_variables_FP_instruction: "**Juego libre:** Usa lo que has aprendido y haz tu popio dibujo. \n\n¿Cómo puedes usar las variables con cuadrados, pentágonos o hexágonos?"
      courseF_artist_variables_challenge1_instruction: '¿Puedes crear una variable de ''longitud'' y usarla para crear este patrón?'
      courseF_artist_variables_challenge1_2018_instruction: '¿Puedes crear una variable de ''longitud'' y usarla para crear este patrón?'
      courseF_artist_variables_challenge1a_instruction: '¡Has aprendido todo lo que necesitas saber para hacer un patrón como este! Este rompecabezas está hecho para ser díficil. ¿Puedes quedarte aqeí hsta quue descifres la solución?'
      courseF_artist_variables_challenge2_instruction: '¡Has aprendido todo lo que necesitas saber para hacer un patrón como este!'
      courseF_artist_variables_challenge2_2018_instruction: '¡Has aprendido todo lo que necesitas saber para hacer un patrón como este!'
      courseF_artistembed_variables9_instruction: '¡Ve lo que pasa cuando repites el código del último rmpecabezas 30 veces en lugar de sólo 3! Siente la libertad de hacer tus líneas de cualquier color o patrón para algo de diversión extra.'
      courseF_bee_conditionals10_instruction: Recoge todo el néctar y haz toda la miel.
      courseF_bee_conditionals10_2018_instruction: Collect all of the nectar and make all of the honey.
      courseF_bee_conditionals1_predict1_instruction: Revisa paa ver si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseF_bee_conditionals1_predict1_2018_instruction: Check to see if there's a flower under the cloud. If there's a flower, get nectar.
      courseF_bee_conditionals2_instruction: 'Revisa debajo de cada nube para ver si hay una flor escondida antes de recoger el néctar.  '
      courseF_bee_conditionals2_2018_instruction: 'Revisa debajo de cada nube para ver si hay una flor escondida antes de recoger el néctar.  '
      courseF_bee_conditionals3_instruction: 'Ayuda a la abeja a recoger todo el néctar. '
      courseF_bee_conditionals3_2018_instruction: 'Ayuda a la abeja a recoger todo el néctar. '
      courseF_bee_conditionals4_instruction: Recoge todo el néctar usando la menor cantidad de bloques posibles.
      courseF_bee_conditionals4_2018_instruction: Get all of the nectar using as few blocks as possible.
      courseF_bee_conditionals5_instruction: Recolecta todo el néctar usando la menor cantidad de bloques posible
      courseF_bee_conditionals5_2018_instruction: Collect all of the nectar using as few blocks as possible
      courseF_bee_conditionals7_predict2_instruction: Usa el bloque 'si/màs' para recoger el néctar de las flores y hacer miel en las colmenas.
      courseF_bee_conditionals7_predict2_2018_instruction: Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.
      courseF_bee_conditionals8_instruction: |-
        Recoge el néctar si hay una flor.
        De lo contrario, haz miel (porque hay una colmena).
      courseF_bee_conditionals8_2018_instruction: |-
        Recoge el néctar si hay una flor.
        De lo contrario, haz miel (porque hay un panal).
      courseF_bee_for1_instruction: Recoge el néctar de cada flor usando la menor cantidad de bloques posible.
      courseF_bee_for10_instruction: "**Desafío:** Toma lo que has aprendido acerca de los blucles 'para' e intenta resolver este problema. "
      courseF_bee_for10_2018_instruction: "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. "
      courseF_bee_for11_instruction: '¿Cuál debería ser tu incremento para recoger 15, luego 12, luego 9, 6, 3 néctar?'
      courseF_bee_for11_2018_instruction: What should your increment be to collect 15, then 12, then 9, 6, 3 nectar?
      courseF_bee_for1_2018_instruction: Recoge el néctar de cada flor usando la menor cantidad de bloques posible.
      courseF_bee_for2_instruction: Escribe el código para ayudar a la abeja a recoger todo el néctar.
      courseF_bee_for2_2018_instruction: Escribe el código para ayudar a la abeja a recoger todo el néctar.
      courseF_bee_for3_instruction: Haz este rompecabezas usando el bucle 'para' y la variable 'contar' para ver cuánto más corto se hacen tus códigos.
      courseF_bee_for4_instruction: Ayuda a la abeja a recoger todo el néctar.
      courseF_bee_for4_2018_instruction: Help the bee collect all of the nectar.
      courseF_bee_for5_instruction: Usa la variable 'contar' dos veces para resolver este rompecabezas.
      courseF_bee_for5_2018_instruction: Usa la variable 'contar' dos veces para resolver este rompecabezas.
      courseF_bee_for6_instruction: Intenta juntar este néctar contando en forma regresiva de 5 a 1 de a 1.
      courseF_bee_for6_2018_instruction: Intenta juntar este néctar contando en forma regresiva de 5 a 1 de a 1.
      courseF_bee_for7_instruction: Inenta recolectar estas flores usando un incremento de 2.
      courseF_bee_for7_2018_instruction: Try collecting these flowers using an increment of 2.
      courseF_bee_for8_instruction: Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar?
      courseF_bee_for8_2018_instruction: Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar?
      courseF_bee_for9_instruction: Usa la variable 'contar' para navegar por este jardín con el menor número de bloques posible.
      courseF_bee_for9_2018_instruction: Use the `counter` variable to navigate this garden with the fewest number of blocks possible.
      courseF_bee_for_challenge1_instruction: 'Usa este ''bucle para'' para recoger todo el néctar. '
      courseF_bee_for_challenge1_2018_instruction: 'Usa este ''bucle para'' para recoger todo el néctar. '
      courseF_bee_for_challenge2_instruction: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_for_challenge2_2018_instruction: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_for_challenge3_instruction: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_functions2_instruction: Usa la función 'recoger sólo néctar' para reolectar el néctar de cada flor.
      courseF_bee_functions2_2018_instruction: Usa la función 'recoger sólo néctar' para reolectar el néctar de cada flor.
      courseF_bee_functions3_instruction: Haz clic en "editar" para pone un código dentro de la función 'sólo hacer miel', luego usalo para resolver este rompecabezas.
      courseF_bee_functions3_2018_instruction: Haz clic en "editar" para pone un código dentro de la función 'sólo hacer miel', luego usalo para resolver este rompecabezas.
      courseF_bee_functions3a_instruction: Escribe una función que recoja el néctar si es qye la abeja está en una flor, de lo contrario obtiene miel. ¡Usa tu función para resolver el rompecabezas!
      courseF_bee_functions3a_2018_instruction: Escribe una función que recoja el néctar si es qye la abeja está en una flor, de lo contrario obtiene miel. ¡Usa tu función para resolver el rompecabezas!
      courseF_bee_functions4_instruction: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseF_bee_functions4_2018_instruction: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseF_bee_functions5_instruction: Ahora escribe la función para recoger el néctar de las flores.
      courseF_bee_functions5a_instruction: Usa la función 'mover y revisar' para recoger todo el néctar.
      courseF_bee_functions5a_2018_instruction: Usa la función 'mover y revisar' para recoger todo el néctar.
      courseF_bee_functions6_instruction: Ayua a la abeja a pasar el leberinto girando a la izquierda en las flores y a la derecha en las colmenas.
      courseF_bee_functions6_2018_instruction: Ayua a la abeja a pasar el leberinto girando a la izquierda en las flores y a la derecha en las colmenas.
      courseF_bee_functions7_instruction: Reconstruye tu función del último rompecabezas para resolver este laberinto.
      courseF_bee_functions7_2018_instruction: Reconstruye tu función del último rompecabezas para resolver este laberinto.
      courseF_bee_functions8a_instruction: '¡Recoge todo el néctar o haz toda la miel!'
      courseF_bee_functions8a_2018_instruction: '¡Recoge todo el néctar o haz toda la miel!'
      courseF_bee_functionsPre7_instruction: Ahora intenta construir una función para resolver este laberinto. ¿Cómo es diferente a la última vez?
      courseF_bee_functionsPre7_2018_instruction: Ahora intenta construir una función para resolver este laberinto. ¿Cómo es diferente a la última vez?
      courseF_bee_functions_1_2018_instruction: Finaliza este código para que la abeja pueda recoger toda la miel y el néctar.
      courseF_bee_functions_2_2018_instruction: Edita tu solución en un lugar que la abeja pueda recoger toda la miel y el néctar.
      courseF_bee_functions_3_2018_instruction: Sustrae uno de la variable cada vez que atravieses el bucle si quieres usar la misma función para resolver este nivel.
      courseF_bee_functions_challenge1_instruction: Crea una nueva función para recoger todo el néctar y la miel mientras hay un camino por delante.
      courseF_bee_functions_challenge1_2018_instruction: Crea una nueva función para recoger todo el néctar y la miel mientras hay un camino por delante.
      courseF_bee_functions_challenge2_instruction: '¡Usa todo lo que has aprendido para completar el rompecabezas!'
      courseF_bee_functions_challenge2_2018_instruction: '¡Usa todo lo que has aprendido para completar el rompecabezas!'
      courseF_bee_functions_challenge2_recursion_instruction: '¡Recoge todo el néctar o haz toda la miel!'
      courseF_bee_fwp2_instruction: Transforma este código en función, luego llama a la función para revisar esta fila de néctar.
      courseF_bee_fwp2_2018_instruction: Transforma este código en función, luego llama a la función para revisar esta fila de néctar.
      courseF_bee_fwp3_instruction: Veamos si esta función facilita la recolección de estas tres filas de néctar.
      courseF_bee_fwp3_2018_instruction: Veamos si esta función facilita la recolección de estas tres filas de néctar.
      courseF_bee_fwp4_instruction: Agrega el parametro 'longitud' a la función para que funcione aún cuando la fila tenga una longitud diferente.
      courseF_bee_fwp4_2018_instruction: Agrega el parametro 'longitud' a la función para que funcione aún cuando la fila tenga una longitud diferente.
      courseF_bee_fwp5_instruction: Esa esta función para recoger todo el néctar.
      courseF_bee_fwp5_2018_instruction: Esa esta función para recoger todo el néctar.
      courseF_bee_fwp6_instruction: Construye una solución breve y dulce para este rompecabezas.
      courseF_bee_fwp6_2018_instruction: Construye una solución breve y dulce para este rompecabezas.
      courseF_bee_fwp7_instruction: "**Desafío:** Modifica tu fnción para que también haga miel."
      courseF_bee_fwp7_2018_instruction: "**Desafío:** Modifica tu fnción para que también haga miel."
      courseF_bee_fwp8_instruction: Use your new function to solve this spiral.
      courseF_bee_fwp8_2018_instruction: Use your new function to solve this spiral.
      courseF_bee_fwp9_instruction: Usa tu nueva función para resolver este rompecabezas.
      courseF_bee_fwp9_predict1_instruction: Usa tu nueva función para resolver este rompecabezas.
      courseF_bee_fwp9_predict1_2018_instruction: Usa tu nueva función para resolver este rompecabezas.
      courseF_bee_fwp_challenge1_instruction: Usa un 'bule para' en una función con un parametro de 'longitud' para recoger todo el maíz.
      courseF_bee_fwp_challenge1_2018_instruction: Usa un 'bule para' en una función con un parametro de 'longitud' para recoger todo el maíz.
      courseF_bee_fwp_challenge2_instruction: 'Usa un ''bucle para'' en una función con un parametro de ''longitud'' para recoger todos los vegetales en ada fila. '
      courseF_bee_fwp_challenge2_2018_instruction: 'Usa un ''bucle para'' en una función con un parametro de ''longitud'' para recoger todos los vegetales en ada fila. '
      courseF_bee_variables_1_2018_instruction: Finaliza este código para que la abeja pueda recoger toda la miel y el néctar.
      courseF_bee_variables_2_2018_instruction: Edita tu solución en un lugar que la abeja pueda recoger toda la miel y el néctar.
      courseF_bee_variables_3_2018_instruction: Sustrae uno de la variable cada vez que atravieses el bucle si quieres usar la misma función para resolver este nivel.
      courseF_bee_variables_4_2018_instruction: Edita el código para trabajar este rompecabezas.
      courseF_bee_variables_5_2018_instruction: Crea tu propio código para resolver este rompecabezas
      courseF_bee_variables_6_2018_instruction: "**Desafío:** ¡Ahora inténtalo con este rompecabezas!"
      courseF_bee_variables_7_2018_instruction: Este rompecabezas es un poco diferente. ¿Qué necesitas para resolverlo?
      courseF_bee_variables_8_2018_instruction: '¿Cuánto néctar recogerá la abeja de esta flor?'
      courseF_farmer_ramp11_instruction: Este rompecabezas también usa bucles anidados. ¿Puedes descifrar cómo?
      courseF_farmer_ramp11_2018_instruction: Este rompecabezas también utiliza bucles anidados. ¿Puedes descifrar cómo?
      courseF_maze_predict1_instruction: Este código incluye un nuevo bloque. ¿Qué crees que sucedería si presionas el bloque "Ejecutar"?
      courseF_maze_ramp13_instruction: '¡Momento para otro rompecabezas de Angry Birds que lo reúna todo!'
      courseF_maze_ramp15_instruction: '¡Usa lo que has aprendido para llevar al pájaro hasta el cerdo!'
      courseF_maze_ramp4_instruction: '¡Evita el TNT o volarán las plumas!'
      courseF_maze_ramp4_2018_instruction: '¡Evita el TNT o volarán las plumas!'
      courseF_maze_ramp5_instruction: Evita el TNT.
      courseF_maze_ramp5_2018_instruction: Evita el TNT.
      courseF_maze_ramp6_instruction: '"Mantén la calma y ayúdame a encontrar al cerdo malo. ¡De lo contrario me puedo enojar!"'
      courseF_maze_ramp6_2018_instruction: '"Keep calm and help me find the bad pig. Otherwise I might get angry!"'
      courseF_maze_ramp7_instruction: '¡Usa lo que has aprendido para llevar al pájaro hasta el cerdo!'
      courseF_playlab_brokenText_instruction: En el resto de esta etapa, ¡vams a construir un juego que tú controles!
      courseF_playlab_embed_vars_instruction: Respnde Las preguntas de Pegleg el Pirata. ¿Qué sucede si ingresas la "contraseña" códigonombre? ¿Qué pasa con otros nombres de código?
      courseF_playlab_variables0_instruction: Este es el Pirara Pegleg. ¡Es muy díficil entenderle en estos días!
      courseF_playlab_variables1_instruction: Este es el Pirara Pegleg. ¡Es muy díficil entenderle en estos días!
      courseF_playlab_variables1a_instruction: Las variables pueden ser usadas para almavenar texto que puedes usar luego. Has que Kiki, jugador de fútbol, grite "¡Gol!" asignándole ese texto a la variable 'gritar'.
      courseF_playlab_variables1a_2018_instruction: Las variables pueden ser usadas para almavenar texto que puedes usar luego. Has que Kiki, jugador de fútbol, grite "¡Gol!" asignándole ese texto a la variable 'gritar'.
      courseF_playlab_variables2_instruction: "Ahora, decodifica el discurso de Pegleg ¡cambiando el valor de las variables en sólo dos lugares! \n"
      courseF_playlab_variables2a_instruction: "Ahora, decodifica el discurso de Pegleg ¡cambiando el valor de las variables en sólo dos lugares! \n"
      courseF_playlab_variables2b RYAN CLONE_instruction: Inserta la variable 'color' en medio de la oración poniendola en el espacio vacío en el bloque 'unir'.
      courseF_playlab_variables2b_instruction: Inserta la variable 'color' en medio de la oración poniendola en el espacio vacío en el bloque 'unir'.
      courseF_playlab_variables2b_2018_instruction: Inserta la variable 'color' en medio de la oración poniendola en el espacio vacío en el bloque 'unir'.
      courseF_playlab_variables3_instruction: El bloque 'preguntar' automáticamante almacenará cualquier respuesta del usuario en la variable de tu elección.
      courseF_playlab_variables3b_instruction: 'Ayuda a Kiki a tener una conversación con Brian usando la variable ''edad'' en todos los lugares don se deba usar edad ''12''. '
      courseF_playlab_variables3bEdit_instruction: 'Ayuda a Kiki a tener una conversación con Brian usando la variable ''A1'' en todos los lugares donde se debería usar la edad ''12''. '
      courseF_playlab_variables3b_josh_instruction: 'Ayuda a Kiki a tener una conversación con Brian usando la variable ''edad'' en todos los lugares don se deba usar edad ''12''. '
      courseF_playlab_variables3b_josh_2018_instruction: 'Ayuda a Kiki a tener una conversación con Brian usando la variable ''edad'' en todos los lugares don se deba usar edad ''12''. '
      courseF_playlab_variables4_instruction: '¿Puedes encontrar la variable correcta en la caja de hrramientas para llenar el espacio?'
      courseF_playlab_variables4b_instruction: Pon las variables en los lugares correctos para crear esta conversación.
      courseF_playlab_variables4b_2018_instruction: Pon las variables en los lugares correctos para crear esta conversación.
      courseF_playlab_variables5_instruction: '¿Puedes encontrar la variable correcta en la caja de hrramientas para llenar el espacio?'
      courseF_playlab_variables5b_instruction: Pon todas las variables en el lugar correcto para que asi la historia de Pegleg haga sentido.
      courseF_playlab_variables5c RYAN Copy_instruction: '¡Vamos a combinar el bloque ''preguntar`con la afirmación ''si/más'' para hacer un juego!'
      courseF_playlab_variables5c_instruction: '¡Vamos a combinar el bloque ''preguntar`con la afirmación ''si/más'' para divertirnos!'
      courseF_playlab_variables5c_2018_instruction: '¡Vamos a combinar el bloque ''preguntar`con la afirmación ''si/más'' para divertirnos!'
      courseF_playlab_variables6b_instruction: Junta las variables para hacer una historia divertida que implique más de una búrbja de discurso para contarla.
      courseF_playlab_variables6c_instruction: En el resto de esta etapa, ¡vams a construir un juego que tú controles!
      courseF_playlab_variables6c_2018_instruction: En el resto de esta etapa, ¡vams a construir un juego que tú controles!
      courseF_playlab_variables7b_instruction: Cra algunas preguntas y entrelaza las respuestas a tu propia historia.
      courseF_playlab_variables7b_2018_instruction: Cra algunas preguntas y entrelaza las respuestas a tu propia historia.
      courseF_playlab_variables7c_instruction: Haz que el juego haga algo pidiendo al usuario que adivine un color.
      courseF_playlab_variables7c_2018_instruction: Haz que el juego haga algo pidiendo al usuario que adivine un color.
      courseF_playlab_variables8b_instruction: Usa lo que has aprendido para crear una escena impro entre los actores.
      courseF_playlab_variables8c_instruction: Usa las variables para hacer el juego más personal.
      courseF_playlab_variables8c_2018_instruction: Usa las variables para hacer el juego más personal.
      courseF_playlab_variables_challenge1_instruction: 'Usa estos bloques para hacer a los actores compartir chistes noc-noc. '
      courseF_playlab_variables_challenge1_2018_instruction: 'Usa estos bloques para hacer a los actores compartir chistes noc-noc. '
      courseF_playlab_variables_challenge2_instruction: Este juego usaraá las variables para llevar registro de los puntos. Etiqueta a Gato para obtener 2 puntos. Etiqueta a Pingûino para obtener 3 puntos. Cuando Gato y Pingûino se toquen, se llevan los puntos. ¡Consigue 10 puntos para ganar!
      courseF_playlab_variables_challenge2_2018_instruction: Este juego usaraá las variables para llevar registro de los puntos. Etiqueta a Gato para obtener 2 puntos. Etiqueta a Pingûino para obtener 3 puntos. Cuando Gato y Pingûino se toquen, se llevan los puntos. ¡Consigue 10 puntos para ganar!
      courseF_playlab_variables_challenge3_instruction: '¿Puedes descifrar cómo funciona la aplicación "Adivino"? Haz clic en ''MÁS'' para ver tus desafós.'
      courseF_video_createFunctions_instruction: Aún no tenemos un video para crear funciones. Este es un referente.
      courseF_video_createFunctions_2018_instruction: Aún no tenemos un video para la creación de funciones. Este es un referente.
      course_playlab_variables1_instruction: This is Pirate Pegleg.  He's awfully hard to understand these days!
      course_playlab_variables2_instruction: "Now, decode Pirate Pegleg's speech by changing the value of the variables in just two places! \n"
      course_playlab_variables3_instruction: "Now, decode Pirate Pegleg's speech by changing the value of the variables in just two places! \n"
      coursea_maze_ramp1_2018_instruction: Para este rompecabezas, ¡ junta los bloques y haz clic en "Ejecutar"!
      coursef_explore_CYOA_Witch_instruction: '¡Puedes hacer lo que quieras en el laboratorio de juego! Aquí hay un ejemplo para escoger tu propia historia de aventura en el laboratorio de juego.'
      coursef_explore_playlab2_instruction: '¡Puedes hacer lo que quieras en el laboratorio de juego! Aquí hay un ejemplo de historia en el laboratorio de juego.'
      coursef_explore_playlab_cat_game_instruction: '¡Puedes hacer lo que quieras en el laboratorio de juego! Aquí hay un ejemplo de juego que puedes hacer.'
      coursef_maze_ramp3_instruction: Hay un bloque extra que va a causar que el pájaro choque. Elimínalo arrastrandolo de vuellta a la caja de herramientas.
      coursef_maze_ramp3_2018_instruction: Hay un bloque extra que va a causar que el pájaro choque. Elimínalo arrastrandolo de vuellta a la caja de herramientas.
      drawings!_instruction: Draw the equilateral triangle - all the sides are the same!
      eventsIntro_instruction: Need a better playlab/events combo
      flappy_1_instruction: Adjunta un bloque a "cuando se haga clic en el bloque", entonces presiona "Ejecutar". Haz clic o toca la pantalla para mover a Flappy hacia el objetivo.
      flappy_11_instruction: Crea tu propio juego Flappy, puedes cambiar todos los efectos visuales y las reglas, hasta la gravedad. Cuando finalices, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      flappy_11_2018_instruction: Crea tu propio juego Flappy, puedes cambiar todos los efectos visuales y las reglas, hasta la gravedad. Cuando finalices, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      flappy_1_2018_instruction: Adjunta un bloque a "cuando se haga clic en el bloque", entonces presiona "Ejecutar". Haz clic o toca la pantalla para mover a Flappy hacia el objetivo.
      flappy_2_instruction: Ahora hemos agregado el suelo. Adjunta un bloque al bloque "cuando golpee el suelo". Tu código necesita 'TERMINAR EL JUEGO' cuando Flappy golpee el suelo.
      flappy_2_2018_instruction: Ahora hemos agregado el suelo. Adjunta un bloque al bloque "cuando golpee el suelo". Tu código necesita 'TERMINAR EL JUEGO' cuando Flappy golpee el suelo.
      flappy_3_instruction: El bloque "cuando ejecute" te permite ejecutar el código cuando tu juego inicie. Intenta establecer la velocidad del nivel y el aleteo al objetivo.
      flappy_3_2018_instruction: El bloque "cuando ejecute" te permite ejecutar el código cuando tu juego inicie. Intenta establecer la velocidad del nivel y el aleteo al objetivo.
      flappy_4_instruction: Flappy volará entre los obstáculos a menos que escribas el código que lo hará estrellarse. Adjunta un bloque al bloque "cuando golpea un obstáculo". Tu código necesita 'TERMINAR EL JUEGO' cuando Flappy se estrelle en el primer conjunto de tubos.
      flappy_4_2018_instruction: Flappy volará entre los obstáculos a menos que escribas el código que lo hará estrellarse. Adjunta un bloque al bloque "cuando golpea un obstáculo". Tu código necesita 'TERMINAR EL JUEGO' cuando Flappy se estrelle en el primer conjunto de tubos.
      flappy_5_instruction: Ahora agreguemos el marcador, y contaremos los puntos cuando Flappy pase los obstáculos. Agrega al bloque "cuando pase un obstáculo", y entonces anota un punto cuando Flappy vuele entre el primer conjunto de tubos.
      flappy_5_2018_instruction: Ahora agreguemos el marcador, y contaremos los puntos cuando Flappy pase los obstáculos. Agrega al bloque "cuando pase un obstáculo", y entonces anota un punto cuando Flappy vuele entre el primer conjunto de tubos.
      flappy_6_instruction: Ve si puedes anotar un punto haciendo que Flappy aletee más rápido o más lento.
      flappy_6_2018_instruction: Ve si puedes anotar un punto haciendo que Flappy aletee más rápido o más lento.
      flappy_7_instruction: A continuación, trata de cambiar el fondo adjuntando otro bloque al bloque "cuando ejecute".
      flappy_7_2018_instruction: A continuación, trata de cambiar el fondo adjuntando otro bloque al bloque "cuando ejecute".
      flappy_8_instruction: Puedes poner elementos visuales en cualquier momento, no sólo cuando comience el juego. Intenta establecer una escena AL AZAR cuando sucedan otros eventos, por ejemplo, al superar un obstáculo.
      flappy_8_2018_instruction: Puedes poner elementos visuales en cualquier momento, no sólo cuando comience el juego. Intenta establecer una escena AL AZAR cuando sucedan otros eventos, por ejemplo, al superar un obstáculo.
      flappy_9_instruction: Para mezclar las cosas, al chocar con un obstáculo, en vez de terminar el juego, intente ajustar el marcador de nuevo a 0.
      flappy_9_2018_instruction: Para mezclar las cosas, al chocar con un obstáculo, en vez de terminar el juego, intente ajustar el marcador de nuevo a 0.
      frozen circle function in circle_instruction: Ahora crearemos 20 círculos superpuestos, girando 18 grados entre cada círculo.
      frozen circle function with parameter_instruction: Aquí está un bloque "Crear círculo" que puede dibujar círculos de diferentes tamaños. ¿Puedes usarlo para dibujar un círculo pequeño de tamaño 5 y uno más grande de tamaño 10?
      frozen circle function_instruction: Utiliza el nuevo bloque "Crear un círculo" para crear 10 círculos superpuestos. No te olvides de saltar hacia adelante entre cada círculo.
      frozen circle_instruction: Un círculo es una figura especial. ¿Puedes adivinar qué número debe reemplazar los signos de interrogación para dibujar un círculo?
      frozen cross rotate dense_instruction: '¡Ahora repitámoslo 90 veces! ¿Cuántas veces cabe 90 en 360? Pista: Es un número muy pequeño.'
      frozen cross rotate_instruction: Ahora trata de repetirlo 10 veces. ¿Cuántos grados necesitas girar entre cada línea?
      frozen cross_instruction: Cubre un bloque de "Repetir" alrededor de estos comandos para crear un signo más. ¿Notaste que Elsa puede moverse hacia adelante y hacia atrás?
      frozen diamond mini snowflake_instruction: '¿Sabías que cada copo de nieve tiene una forma distinta? Crearemos un nuevo copo de nieve utilizando otro bloque de "Repetir" para repetir el paralelogramo 4 veces, girando hacia la derecha 90 grados entre cada paralelogramo.'
      frozen diamond snowflake_instruction: Ahora crearemos un nuevo copo de nieve, utilizando el bloque "Repetir" para repetir el paralelogramo 10 veces, girando a la derecha 36 grados entre cada uno.
      frozen diamond_instruction: Utiliza una repetición alrededor de estos bloques para crear un paralelogramo. Es como un rectángulo, pero tiene diferentes ángulos. Éste tiene 60 grados y 120 ángulos de grados en lugar de todos los 90 ángulos de grados.
      frozen freeplay_instruction: '¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal.'
      frozen line_instruction: '¡Hola! Soy Elsa de Arendelle. Ayúdame a crear una línea.'
      frozen perpendicular_instruction: Ahora veamos si podemos crear dos líneas que se encuentran a un ángulo de 90 grados una de la otra. Necesitarás usar tanto el bloque de "Giro" como el bloque de "Mover".
      frozen snowflake branch_instruction: Intenta utilizar el bloque "Crear una rama de copo de nieve" para dibujar 3 ramas, lo que empezará a parecerse a un copo de nieve.
      frozen snowflake full_instruction: '¡Ahora repitámoslo 8 veces para dibujar un hermoso copo de nieve!'
      frozen snowflower_instruction: Formas complejas de nieve pueden crearse usando figuras geométricas muy simples. ¿Puedes crear uno repitiendo 5 círculos de tamaño 5 y 5 círculos de tamaño 10?
      frozen square iterative_instruction: Parece que estamos a la mitad de completar un cuadrado. Ahora pongamos 4 líneas juntas para crear un cuadrado.
      frozen square loop 3x_instruction: Ahora crearemos tres cuadrados, girando al terminar cada cuadrado. Asegúrate de girar 120 grados antes de iniciar un nuevo cuadrado.
      frozen square loop_instruction: '¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?'
      frozen square snowflake_instruction: '¿Puedes dibujar un copo de nieve utilizando el bloque "Repetir" para dibujar un cuadrado 10 veces y el bloque "Girar" para girar 36 grados entre cada cuadrado?'
      grade1_adventurer_loops1_instruction: Four piles of gold!  Collect all four.
      grade1_adventurer_loops10_instruction: Help me get all of the gold from this cave.
      grade1_adventurer_loops2_instruction: How can Laurel collect all five piles of gold using only one `E -->` block?
      grade1_adventurer_loops3_instruction: Can you fix Laurel's path to get all of this gold?
      grade1_adventurer_loops4_instruction: 'Add to the code from the last puzzle to get all of the gold. '
      grade1_adventurer_loops5_instruction: What should you add to this code to get all of the gold?
      grade1_adventurer_loops6_instruction: Write the code to get all of this gold.
      grade1_adventurer_loops7_challenge_instruction: "**Challenge: ** The gold goes all the way down these stairs!  Write the code to help me get it all."
      grade1_adventurer_loops8_challenge_instruction: 'Challenge: Try this staircase now! It has an extra spike at the end you''ll have to climb.'
      grade1_adventurer_loops9_instruction: Help me get the gold from this deep valley.
      grade1_adventurer_loopsFP_instruction: Eureka!  Collect as much gold as you can!
      grade1_adventurer_loopsPre_instruction: This is Laurel the Adventurer!  Can you move her around and get gold?
      grade1_artist_loops1_instruction: The Artist is trying to draw a line six times, but can't get it right.  Can you help?
      grade1_artist_loops2_instruction: Help the artist draw a line 7 times to make a garden wall.
      grade1_artist_loops3_instruction: 'Now we need to get the soil ready to plant. Find the bugs in the code and help the artist prepare the ground. '
      grade1_artist_loops4_instruction: Time to fix the stairs!  Repeat this pattern five times so the artist can reach the top of the bushes.
      grade1_artist_loops5_instruction: Behind the bushes there is a beautiful vine full of flowers.  Can you climb the vine and see where it goes?
      grade1_artist_loops6_instruction: "**Challenge:**  It's a hidden garden! Let's walk around."
      grade1_artist_loops7_instruction: The flowers down here are so pretty.  Let's take a closer look.
      grade1_artist_loops7a_instruction: "**Challenge:**  Lovely! Let's take a walk around the garden."
      grade1_artist_loops7b_instruction: Time to head home. Can you fix this ladder to help the artist get down?
      grade1_artist_loops8_instruction: Let's take the short way home, over the pond. Can you help the artist stay on the stones?
      grade1_artist_loops9_instruction: I still need a story for this puzzle
      grade1_artist_loopsFP_instruction: Use what you have learned to draw a picture of what you think the artist saw when he got home.
      grade1_maze_sequence1_instruction: '¡Cambie el código para traerme al cerdo!'
      grade1_maze_sequence10_instruction: Move me around the TNT to get to the pig.
      grade1_maze_sequence2_instruction: '¡Cambie el código para traerme al cerdo!'
      grade1_maze_sequence3_instruction: Add 2 blocks to get the bird to the pig.
      grade1_maze_sequence4_instruction: Now try this puzzle from the start!
      grade1_maze_sequence5_instruction: '¡Muéveme en una dirección, luego en otra para llevarme el cerdo!'
      grade1_maze_sequence6_instruction: '¡Averigua qué falta y entonces agrega bloques para llevarme al cerdo!'
      grade1_maze_sequence7_instruction: Your turn!  What do you need to do to get the bird to the pig?
      grade1_maze_sequence8_instruction: Debug this level by adding blocks to get me to the pig!
      grade1_maze_sequence9_instruction: '¡Evita el TNT para llevarme al cerdo!'
      grade1_maze_sequenceA_instruction: 'Challenge: Move me around the TNT to get to the pig.'
      grade1_maze_sequenceB_instruction: Fix the bugs to get the bird to the pig.
      grade1_maze_sequenceC_instruction: It's all you!  Get the bird to the pig.
      grade1_maze_sequenceD_instruction: Now head any which way to get that pig!
      grade1_playlab_events1_instruction: This game is called "Play Lab".  See if you can figure out what each block does.
      grade1_playlab_events1a_instruction: Make your robot say "Hello!" when the button is clicked.
      grade1_playlab_events2_instruction: This program makes Robin fly.  Can you get her to vanish when you click her?
      grade1_playlab_events2a_instruction: Edit the code so that when the second bird is clicked, your program plays a sound!
      grade1_playlab_events3_instruction: 'This program makes Robin fly.  Can you make the robot jump when you press the up button?  '
      grade1_playlab_events3a_instruction: When the third bird is clicked, the background should change to a city. Can you add code to make this happen?
      grade1_playlab_events4_instruction: Add a block to make Robin vanish when she collides with the robot.
      grade1_playlab_events4a_instruction: Add code to make something happen when the fourth bird is clicked. Be creative!
      grade1_playlab_events5_instruction: Add a block to the 'when run' event that starts the dragon flying.
      grade1_playlab_events5a_instruction: About My Robot Project! Write code so that clicking on each bird shows a new fact about your robot.
      grade1_playlab_events6_instruction: Add a block to the 'when actor 1 clicked' event that makes the dragon return to the middle of the screen.
      grade1_playlab_events7_instruction: Add a block so that when you push the left arrow button, the knight surges toward the dragon.
      grade1_playlab_events8_instruction: Add a block so that when the knight collides with the dragon, it plays a sound.
      grade1_playlab_events9 RYAN COPY_instruction: Now, have Robin wait a second, then come back after she vanishes.
      grade1_playlab_events9_instruction: Now, add a block to keep score each time the knight hits the dragon.
      grade1_playlab_eventsFP_instruction: Use your imagination. What can you do to make this game more fun?
      grade1_sequence_pre_instruction: Play with these blocks to see what they make the bird do!
      grade1_video_frustrationRainbow_instruction: This video describes the rainbow of frustration and introduces persistence.
      grade2_CaringForNewPet_0_instruction: For this puzzle, drag all of the blocks together and click "Run" to watch it go!
      grade2_CaringForNewPet_1_instruction: Drag an extra `move forward` block out of the toolbox to finish your code.
      grade2_CaringForNewPet_10_instruction: '¡Tráeme al cerdo!'
      grade2_CaringForNewPet_11_instruction: '"Keep calm and help me find the bad pig."'
      grade2_CaringForNewPet_2_instruction: |-
        "This pig is ruffling my feathers."
        
        There is one extra block that is going to cause the bird to crash. Throw it away by dragging it back to the toolbox.
      grade2_CaringForNewPet_2courseC_maze_programming3_instruction: Hay un bloque extra que va a causar que el pájaro choque. Elimínalo arrastrandolo de vuellta a la caja de herramientas.
      grade2_CaringForNewPet_3_instruction: '"Trace the path and lead me to the silly pig. Avoid TNT or feathers will fly!"'
      grade2_CaringForNewPet_3D_instruction: '"Follow this path to get me to the pig!"'
      grade2_CaringForNewPet_4_instruction: '"Keep calm and help me find the bad pig. Otherwise I might get angry!"'
      grade2_CaringForNewPet_5_instruction: '¡Tráeme al cerdo!'
      grade2_CaringForNewPet_6_instruction: 'Challenge: Guide me to the green evilness! (Watch out for TNT)'
      grade2_CaringForNewPet_7D_instruction: 'Challenge: This code has a lot of bugs. You''ll need to remove blocks and add blocks.'
      grade2_MakeDogTag_1_instruction: Drag blocks onto the screen to have the artist draw over the grey lines in the picture. (Each line is 100 pixels long)
      grade2_MakeDogTag_10_instruction: Dibuja algo divertido.
      grade2_MakeDogTag_2_instruction: |-
        This spaceship needs a window!
        
        Each side of the inner square is 100 pixels and all of the angles are 90 degrees.
      grade2_MakeDogTag_3_instruction: |-
        Ayúdame a completar la casa para este gato.
      grade2_MakeDogTag_4_instruction: |-
        ¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.
      grade2_MakeDogTag_5_instruction: |-
        "Now a tag for Belle!"
        
        Draw this diamond with 200 pixel sides.
      grade2_MakeDogTag_6_instruction: '¡Juego libre! Dibuja lo que quieras.'
      grade2_MakeDogTag_7_instruction: |-
        One more tag.  This is a triangle for Pi.
        (Each side is 150 pixels)
      grade2_MakeDogTag_8_instruction: Ahora conectemos un montón de V juntos, dibujándolos en un bucle.
      grade2_MakeDogTag_9_instruction: Esta vez vamos a dibujarlo 24 veces. Añadir un giro a la izquierda de 30 grados a este código y ponerlo todo en un bloque de repetición.
      grade2_MakeDogTag_BFP_instruction: |-
        "Hi, I'm an artist. You can write code to make me draw almost anything."
        
        Play with the blocks in the toolbox to see what they do!
      grade2_MakeDogTag_FP_instruction: 'Freeplay: What shape will you make the tag for your pet?'
      grade2_PuppyLoops_1_instruction: '¿Puedes llevarme hasta el cerdo usando 5 bloques?'
      grade2_PuppyLoops_10_instruction: |-
        Mi molinillo de viento no está terminado. ¿Cuántas veces necesito repetir para terminarlo?
      grade2_PuppyLoops_2_instruction: '¿Podrías reemplazar estos cinco bloques con solo dos? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      grade2_PuppyLoops_3_instruction: Get me to the pig! Solve this puzzle by creating a loop!
      grade2_PuppyLoops_4_instruction: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade2_PuppyLoops_5_instruction: Tráeme al cerdo.
      grade2_PuppyLoops_6_instruction: Loops even work with more than one block inside!  Can you loop this sequence to get me to the pig?
      grade2_PuppyLoops_7_instruction: '¡Llévame al girasol!'
      grade2_PuppyLoops_8_instruction: "El código para los tres bigotes que ves es incorrecto. Sugerencia: cada bigote tiene 75 píxeles de largo. Repara este código para dibujar los bigotes."
      grade2_PuppyLoops_9_instruction: |-
        Parece que la C en Código está dibujada al revés - ¿Puedes hacer que parezca una C?
      grade2_collector_10_instruction: You're almost done! Collect as many pieces of treasure as you can to finish the stage!
      grade2_collector_10_2018_instruction: You're almost done! Collect as many pieces of treasure as you can to finish the stage!
      grade2_collector_2_instruction: Move Laurel to the gold, then use `collect` to pick it up.
      grade2_collector_3_instruction: Put these blocks in order to collect all of the gold and solve the puzzle.
      grade2_collector_4_instruction: Sequence matters! The blocks you need are already in the workspace, but not connected.  Order these blocks to solve the puzzle.
      grade2_collector_5_instruction: These blocks are in the wrong order. Can you fix them?
      grade2_collector_6_instruction: Reorder the blocks to collect all of the treasure.
      grade2_collector_7_instruction: Challenge puzzle! Use blocks from the toolbox to collect all of the treasure.
      grade2_collector_8_instruction: '"Keep up the good work! Help me collect all of the coins."'
      grade2_collector_9_instruction: '*"Let''s get all of the coins!"*'
      grade2_collector_9a_instruction: "**Challenge:** Grab all of the coins."
      grade2_collector_A_instruction: Ayuda a Laurel a recolectar todo el tesoro.
      grade2_collector_A_2018_instruction: Ayuda a Laurel a recolectar todo el tesoro.
      grade2_collector_pre1_instruction: "\"Hi, I'm Laurel. Today I'm searching for treasure at the dog park!\" \n\nPlay around with the blocks to see if you can help Laurel collect some gold."
      grade2_maze_debuggingFP_instruction: '"Now, help me sneak up on the pig any way you want to!"'
      grade2_maze_debuggingPre_instruction: Play with these blocks to see what they make the bird do!
      grade2_maze_intro10_instruction: Solve this puzzle.
      grade2_maze_intro2_instruction: Welcome to Code Studio! Here you will learn to use blocks to build programs. Press `Run` to run a program now!
      grade2_maze_intro3_instruction: The `workspace` is where you will create all of your programs. Can you guess what this program does? Press the “Run” button to find out.
      grade2_maze_intro4_instruction: Drag a block from the toolbox into the workspace. Connect it to the other blocks.
      grade2_maze_intro6_instruction: 'That’s it!  Now we’re ready to try to solve a few puzzles. '
      grade2_maze_intro7_instruction: This time, try something a bit more challenging.
      grade2_maze_intro8_instruction: This is a challenge puzzle.  It is meant to be hard and will probably take you a couple of tries to solve.  If you don’t solve it after several tries, don’t worry!  It will be in the Play Zone at the end of the stage and you can try it again when you’ve had more practice.
      grade2_maze_intro9_instruction: Solve this puzzle.
      grade2_playlab_project_1_instruction: "Ahora, ¡escribe un programa que haga que Waddles\nse mueva usando las teclas arriba/abajo/izquierda/derecha para tocar a todos los blancos!"
      grade2_playlab_project_2_instruction: The `repeat forever` block allows you to run code over and over forever. Can you attach blocks to move Chomp the Dino (actor 2) up and down forever?
      grade2_playlab_project_3_instruction: "¡Puedes hacer que Waddles (actor 1) diga\n\"Ouch!\" y reproduzca un sonido de \"toque\" si choca con Chomp?\\r\n\\r\nCuando termines,\njuega para que esto suceda."
      grade2_playlab_project_4_instruction: "¿Puedes agregar un bloque para ganar un punto\ncuando Waddles choque con Octavia (actor 3)?\\r\n¡Juega y mueve a Waddles\ncon las flechas hasta que anotes!"
      grade2_playlab_project_5_instruction: |-
        Agrega bloques al evento "cuando se ejecuta"
        para cambiar el fondo y la velocidad de Waddles.\r
        \r
        Juega y
        mueve a Waddles con las flechas hasta que anotes.
      grade2_playlab_project_6_instruction: Create your own story. When you're done, click "Finish" to share with friends.
      grade2_puppy_loops2_instruction: '¿Podrías reemplazar estos cinco bloques con solo dos? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      grade2_puppy_loops3_instruction: |-
        "Get me to the pig!"
        
        Solve this puzzle by creating a loop!
      grade2_puppy_loops4_instruction: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade2_puppy_loops5_instruction: '"Get me to the pig as quickly as possible!"'
      grade2_puppy_loops6_instruction: |-
        "This pig is ruffling my feathers!"
        
        Loops even work with more than one block inside!  Can you loop this sequence?
      grade2_puppy_loops7_instruction: |-
        "Get me to the pig!"
        
        Use what you learned in other puzzles!
      grade3_AboutMyRobot_1_instruction: Make your robot say "Hello!" when the button is clicked.
      grade3_AboutMyRobot_2_instruction: Edit the code so that when the second bird is clicked, your program plays a sound!
      grade3_AboutMyRobot_3_instruction: When the third bird is clicked, the background should change to a city. Can you add code to make this happen?
      grade3_AboutMyRobot_4_instruction: Add code to make something happen when the fourth bird is clicked. Be creative!
      grade3_AboutMyRobot_5_instruction: About My Robot Project! Write code so that clicking on each bird shows a new fact about your robot.
      grade3_AboutMyRobot_TeacherIDo_instruction: Run this puzzle and click on the robot to see what happens!
      grade3_ConditionalsElse_1_instruction: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      grade3_ConditionalsElse_2_instruction: "La abeja sólo quiere néctar ahora. Recuerda que no todos los objetos son flores, recoge néctar solamente de las flores."
      grade3_ConditionalsElse_3_instruction: Ahora la abeja sólo quiere hacer miel. Asegúrese de que sólo haga miel en el panal.
      grade3_ConditionalsElse_4_instruction: El objeto desconocido es una flor o un panal de miel. Use el bloque "if/else" para recoger néctar si es una flor, si no haz miel (porque es un panal de abejas).
      grade3_ConditionalsElse_5_instruction: |-
        Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, si no haz miel (porque hay un panal de abejas).
      grade3_ConditionalsElse_6_instruction: "Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque if-else se combina con otro bloque if-else para crear un bloque if,else-if, else. Completa la solución para recoger la cantidad desconocida de néctar."
      grade3_ConditionalsElse_7_instruction: "Recuerda que las flores púrpura pueden tener 1, 2 o 3 néctares. Completa la función \"revisar flor púrpura\" y úsala para recoger todo el néctar de las flores."
      grade3_ConditionalsElse_8_instruction: "Escribe una función dentro del bloque llamada \"revisar que la flor hace miel.\" Tu función debe comprobar cuánto néctar tiene la flor púrpura, recogerla, avanzar y luego hacer miel."
      grade3_ConditionalsElse_9_instruction: "Evaluación: Este código está errado. Completa la función \"consigue néctar o produce miel\", entonces llámalo para recolectar todo el néctar y la miel. Recuerda que las rosas púrpuras pueden tener 3, 2 o 1 néctares."
      grade3_ConditionalsElse_TeacherIDo_instruction: |-
        Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, si no haz miel (porque hay un panal de abejas).
      grade3_Conditionals_1 BAD_instruction: Utiliza un bucle para recolectar todo el néctar.
      grade3_Conditionals_1_instruction: "¡Hola, soy una abeja! Ayúdame a recoger todo el néctar de las flores. Utiliza un bucle (loop)."
      grade3_Conditionals_10 BAD_instruction: '¡Reune todo el néctar de las filas de las flores! Utiliza un bucle anidado.'
      grade3_Conditionals_10_instruction: |-
        Recoge néctar y haz miel. Pista: ¿Qué ocurre si usas el condicional "Si néctar" en una flor roja? ¿Puedes completar esto con un bucle (loop)?
      grade3_Conditionals_11 BAD_instruction: 'Evaluación - Utiliza un ciclo while para recolectar todo el néctar de esta flor.'
      grade3_Conditionals_11_instruction: |-
        Colecta néctar y miel. Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno.
      grade3_Conditionals_12_instruction: "Recoge néctar de las cuatro flores."
      grade3_Conditionals_13_instruction: 'evaluación Colecta todo el néctar. Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno.'
      grade3_Conditionals_2_instruction: "Ayúdame a recoger todo el néctar de las flores y a hacer miel. Usa un bucle (loop)."
      grade3_Conditionals_3_instruction: "¡Flores de color púrpura pueden tener 1 o 0 néctar, pero no sabes cuál! Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno. Compruebe si el néctar es igual a 1 utilizando el bloque if."
      grade3_Conditionals_4_instruction: Verifica esta flor con un bloque de "if" para ver si hay cualquier néctar disponible.
      grade3_Conditionals_5_instruction: Colecta néctar de cada flor si tiene alguno.
      grade3_Conditionals_6_instruction: Este campo tiene flores rojas y púrpura. Flores rojas tienen una cantidad conocida de néctar, pero se desconoce el néctar de la flor de color púrpura. Colecta todo el néctar.
      grade3_Conditionals_7_instruction: Colecta todo el néctar de cada flor.
      grade3_Conditionals_8_instruction: "Ayúdame a recolectar néctar, pero solo de las flores que tienen néctar."
      grade3_Conditionals_9_instruction: Utilizar un bucle para comprobar y recolectar el néctar de todas estas flores.
      grade3_Conditionals_TeacherIDo_instruction: Verifica esta flor con un bloque de "if" para ver si hay cualquier néctar disponible.
      grade3_Debugging_1_instruction: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      grade3_Debugging_5_instruction: "Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel. Usted puede ahora usar ejecutar y paso."
      grade3_Debugging_6_instruction: |-
        Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer toda la miel.
      grade3_Debugging_7_instruction: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      grade3_Debugging_9_instruction: |-
        Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      grade3_Debugging_TeacherIDo_instruction: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      grade3_Loops_1_instruction: 'Can you help me collect the nectar from these flowers? '
      grade3_Loops_10_instruction: |-
        Utiliza un ciclo similar al del último problema, pero ahora utiliza un bloque turn.
      grade3_Loops_11_instruction: "Utiliza un ciclo para seguir los pasos y recolectar el néctar."
      grade3_Loops_12_instruction: Utiliza un ciclo para recolectar néctar de cada flor y hacer miel en cada panal.
      grade3_Loops_2_instruction: '¿Podrías hacer la misma tarea más fácilmente con un ciclo?'
      grade3_Loops_3_instruction: '¿Podrías utilizar un ciclo para recolectar todo el néctar?'
      grade3_Loops_4_instruction: Ahora usa el nuevo bloque repeat para recolectar todo el néctar y hacer toda la miel.
      grade3_Loops_5_instruction: Pon estos bloques en un ciclo para recolectar néctar de cada flor.
      grade3_Loops_6_instruction: "¿Qué pasa si haces un ciclo con esta secuencia 3 veces? ¡No olvides hacer la miel al final!"
      grade3_Loops_7_instruction: |-
        Cada flor contiene una unidad de néctar. Recolecta néctar de cada una de las flores. 
      grade3_Loops_8_instruction: Usa un ciclo para recolectar el néctar y hacer la miel.
      grade3_Loops_9_instruction: Recolecta el néctar de cada flor y haz miel en cada panal.
      grade3_Loops_TeacherIDo_instruction: |-
        Cada flor contiene una unidad de néctar. Recolecta néctar de cada una de las flores. 
      grade3_RunningFarm_1_instruction: Use conditionals to make sure that you pick all of the corn, but don't disturb the stalks where nothing is growing yet.
      grade3_RunningFarm_10_instruction: Collect all of the corn and lettuce, then pick the pumpkin.
      grade3_RunningFarm_11a_instruction: Collect all of the corn and lettuce, then pick the pumpkin.
      grade3_RunningFarm_2_instruction: Help the farmer collect both corn and lettuce from the field.
      grade3_RunningFarm_3_instruction: '*"Corn, lettuce, AND pumpkins! Help me harvest them all."*'
      grade3_RunningFarm_4_instruction: Help the farmer pick all of the lettuce in each cluster before moving on to the next bunch.
      grade3_RunningFarm_5_instruction: This field has clusters of corn, lettuce, and pumpkins all growing together.  Can you collect them all?
      grade3_RunningFarm_6_instruction: Can you figure out how to pick the pumpkin?  Make sure to collect all of the corn along the way!
      grade3_RunningFarm_7_instruction: "**Challenge:** Collect all of the corn and lettuce, then pick the pumpkin."
      grade3_RunningFarm_8_instruction: Have wheat and potatoes planted randomly at various growth stages. Now we introduce multiple while loops (stacked) nested inside a loop. The two while loops in the solution represent different while loops (while there is potato and while there is wheat)
      grade3_RunningFarm_9_instruction: Add Weeds element. Weeds start out in random spots in the field and spread more and more rapidly as time goes on.. This puzzle is the culminating game-like puzzle. Students should have the event blocks (up, down, left, right, spacebar) available in the toolbox to use if they want. The entire field should be planted randomly with mostly wheat, potatoes, and a few weeds.
      grade3_RunningFarm_TeacherIDo_instruction: 'Teacher I Do: Show students how they can use loops and conditionals to plant and harvest 2 rows of crops.'
      grade3_RunningFarm_TeacherIDo2_instruction: 'Teacher I Do: Show students how to use loops to harvest many crops.'
      grade3_bee_Conditionals_new4_instruction: Now try checking all of these flowers with "if" blocks to see if there is any nectar available.
      grade3_bee_conditionals_new1a_instruction: "Help the bee collect all of the nectar. \n\nYou can only collect nectar from flowers, but you can check any space to see if there is a flower."
      grade3_bee_conditionals_new1b_instruction: Help the bee collect all of the nectar. You can only collect nectar from flowers, but you can check any space to see if there is a flower.
      grade3_bee_conditionals_new2_instruction: Collect all of the nectar using as few blocks as possible
      grade3_bee_conditionals_new2a_instruction: Get all of the nectar using as few blocks as possible.
      grade3_bee_conditionals_new2b_instruction: Collect all of the nectar. You can only collect nectar from flowers, but you can check any space to see if there is a flower.
      grade3_bee_conditionals_new3a_instruction: Collect all of the nectar or make all the honey. You can only collect nectar from flowers and make honey from honeycombs. Check any space to see if there is a flower or honeycomb.
      grade3_bee_conditionals_new3b_instruction: Collect all of the nectar and make all of the honey.
      grade3_bee_conditionals_new3c_instruction: 'Help the bee collect all of the nectar and make all of the honey! Hint: Try using one loop inside of another loop.'
      grade3_bee_conditionals_quantum1_instruction: Check to see if there's a flower under the cloud. If there's a flower, get nectar.
      grade3_bee_conditionals_quantum2_instruction: "La abeja sólo quiere néctar ahora. Recuerda que no todos los objetos son flores, recoge néctar solamente de las flores."
      grade3_bee_conditionals_quantum3_instruction: Some of these clouds might have honeycombs under them.  Be sure to check if a honeycomb is hiding behind each cloud!
      grade3_bee_conditionals_quantum4_instruction: Use the `if/else` block to collect nectar at flowers and make honey at honeycomb.
      grade3_bee_conditionals_quantum5_instruction: |-
        Use the `if/else` block to collect nectar if there is a flower.
        Otherwise, make honey (because there is a honeycomb).
      grade3_maze_Loop1_instruction: 'Evaluación: ¡Llévame al girasol usando solo 5 bloques! '
      grade3_maze_loops1_instruction: Get the zombie to the sunflower.
      grade3_maze_loops2_instruction: '¡Llévame al girasol!'
      grade3_maze_loops2a_instruction: Get the zombie to the sunflower using the fewest number of blocks possible.
      grade3_maze_loops3_instruction: '¡Llévame al girasol!'
      grade3_maze_loops4_instruction: '¡Llévame al girasol!'
      grade3_maze_loops5_instruction: '¡Llévame al girasol!'
      grade3_maze_nestedLoops1_instruction: '¿Puedes llevarme hasta el cerdo usando 5 bloques?'
      grade3_maze_nestedLoops2_instruction: '¿Podrías reemplazar estos cinco bloques con solo dos? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      grade3_maze_nestedLoops3_instruction: Llévame al cerdo usando solo dos bloques.
      grade3_maze_nestedLoops4_instruction: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade3_playLab_buildGame_1_instruction: There is a new block in this lesson, the `random integer` block. It is used to choose a random number. Write a program where the robot says a random number between 1 and 100!
      grade3_playLab_buildGame_2_instruction: We have already created a random integer, "j", which is either 1 or 0. Now, we need to use it to decide whether our card is red or black. Add a second if statement to the code under `when run` to complete this code.
      grade3_playLab_buildGame_3_instruction: There are 13 different card values in a deck of cards, so we'll need to have 13 options. Under the empty `when run` block, add a line that sets the placeholder "i" to a random integer between 1 and 13.
      grade3_playLab_buildGame_4_instruction: In a deck of cards, a card with value 1 isn't actually called a "1", there's a special name. Write an if statement that checks if the random number is a 1, then tell the computer that the value of that card is "Ace".
      grade3_playLab_buildGame_5_instruction: We can just call the cards from 2 to 10 by their numbers, so add an if statement that checks whether the number generated is within those numbers, then sets the card value to the number generated.
      grade3_playLab_buildGame_6_instruction: There are three more cards with special names in the deck. Add to your code so that a card number 11 is called a "Jack", a 12 is a "Queen" and a 13 is a "King"
      grade3_playLab_buildGame_7_instruction: You already know what color your card is, but what suit is it? Add code to the conditional statement "if card is Red" to choose hearts or diamonds.
      grade3_playLab_buildGame_8_instruction: Add the second part of the code to choose a suit, copying what you made for a Red card.
      grade3_playLab_buildGame_final_instruction: Final stage for playlab conditionals level (could hide entire function so that students just work with point scoring)
      grade3_playLab_buildGame_final2_instruction: Here's all of your code to choose a card - try adding some other fun features!
      grade3_robotFarmer_ConditionalsIntro4_instruction: Help the farmer remove this entire pile using a `while` loop.
      grade3_robotFarmer_ConditionalsIntro_1_instruction: "*\"Hi, I'm a farmer. I need your help to flatten the field on my farm so it's ready for planting!\"*  \n\nMove to the pile of dirt and use the `remove` block to remove it."
      grade3_robotFarmer_ConditionalsIntro_10_instruction: I'm working late, so it's dark out, and I can't tell how large the piles are. Now I don't have all the options I used to have on the while block. Move me along the field, and if there is a pile, remove it
      grade3_robotFarmer_ConditionalsIntro_10a_instruction: 'Flatten all of these piles using as few blocks as possible. '
      grade3_robotFarmer_ConditionalsIntro_11_instruction: 'Todavía está oscuro afuera. Muéveme a lo largo del campo. Si hay una pila, quítala y si hay un agujero, rellénalo. Sugerencia: utiliza el menú desplegable de opciones del bloque "si".'
      grade3_robotFarmer_ConditionalsIntro_11a_instruction: 'Flatten all of these piles using as few blocks as possible. '
      grade3_robotFarmer_ConditionalsIntro_2_instruction: Next, move to the hole and fill it with six shovelfuls of dirt, using the `fill` block.
      grade3_robotFarmer_ConditionalsIntro_3_instruction: '*"Move to the pile of dirt and tell me how many shovelfuls to remove using as few blocks as possible."*'
      grade3_robotFarmer_ConditionalsIntro_4_instruction: |-
        *"I don't know how much dirt is in this pile!"*
        
        Help the farmer remove this entire pile using a `while` loop.
      grade3_robotFarmer_ConditionalsIntro_5_instruction: 'Help me remove all of this dirt. '
      grade3_robotFarmer_ConditionalsIntro_6_instruction: Quita todas las pilas de tierra, utilizando la menor cantidad de bloques que sea posible. Las nuevas opciones en el menú desplegable del bloque "mientras" me dicen si estoy parado en una pila o un agujero.
      grade3_robotFarmer_ConditionalsIntro_7_instruction: "Look at all of those holes!  Each one needs a different amount of dirt.   \n\nYou can use the `while` loop to easily fill them all!"
      grade3_robotFarmer_ConditionalsIntro_8_instruction: Fill in the hole at the end of each of these paths.
      grade3_robotFarmer_ConditionalsIntro_9_instruction: "**Challenge:** Fill all of these holes using as few blocks as possible. "
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1_instruction: 'Ayúdame a llenar todos estos agujeros con 5 paladas de tierra. Sugerencia: puedes poner un bloque "repetir" dentro del bloque "mientras".'
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo2_instruction: I'm working late, so it's dark out, and I can't tell how large the piles are. Now I don't have all the options I used to have on the while block. Move me along the field, and if there is a pile, remove it
      grade4_arist_functions_star0_instruction: Have you drawn something like this star before? Practice making it one more time by adding a turn and a repeat block.
      grade4_arist_nested_loop_circles1_instruction: 'Usar un bucle anidado para completar el diseño.'
      grade4_arist_nested_loop_flags1_instruction: Loop the given code to create a windmill.
      grade4_arist_nested_loop_polygons1_instruction: "con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuánto es 360 dividido por 10?)"
      grade4_arist_nested_loop_polygons2_instruction: "Repite el bucle 6 veces. ¿Cuánto tienes que girar cada vez el bucle? (Pista: ¿Cuánto es 360 dividido por 6?)"
      grade4_arist_nested_loop_squares1_instruction: Can you draw these 10 squares of this sidewalk using a nested loop? Each square is 30 pixels.
      grade4_arist_nested_loop_triangles2_instruction: 'Ahora anida este bucle dentro de otro bucle para dibujar 10 triángulos. Esto se llama un bucle anidado. Sugerencia: Todos los 10 triángulos completan una rotación de 360 grados.  '
      grade4_arist_nested_loop_triangles3_instruction: Can you draw a hexagon by looping the triangle code?
      grade4_arist_nested_loop_triangles4_instruction: Draw the teeth in the alligator's mouth!
      grade4_arist_nested_loop_triangles5_instruction: |-
        Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado.
      grade4_arist_nested_loop_triangles6_instruction: Can you draw these 36 triangles using a nested loop?
      grade4_artist_freeplay_instruction: You are on your own now! Try out any of the functions you used in this stage or try this new function that will automatically give your image a beautiful background color! This creation will be saved to your Projects dashboard so that you can easily edit it any time!
      grade4_artist_functions1_instruction: "Hola. Yo artista zombi. ¡Yo amo dibujar! Ayúdame a dibujar las gafas cuadradas. Sugerencia: el puente entre las gafas es 25 píxeles más corto que el ancho del cuadrado."
      grade4_artist_functions2_instruction: "¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada \"dibuja un cuadrado\". ¿Puedes utilizar la función \"dibuja un cuadrado\" para crear los lentes? Los cuadrados están separados por 75 píxeles."
      grade4_artist_functions2a_instruction: Create this image using only the blocks provided.
      grade4_artist_functions3a_instruction: Create this image using only the blocks provided.
      grade4_artist_functions3b_instruction: This time, use lines of 8 hexagons with 25 pixel sides.
      grade4_artist_functionsChallenge0_instruction: "**Challenge:** Create as many functions as you think you need to make this drawing of 50 pixel squares."
      grade4_artist_functions_challenge_instruction: Utiliza las funciones sugeridas para dibujar cuatro filas de hexágonos. ¿Te das cuenta de cómo nuestras filas pares se desplazan hacia la derecha?
      grade4_artist_functions_challenge2_instruction: Utiliza las funciones sugeridas para dibujar cuatro filas de hexágonos. ¿Te das cuenta de cómo nuestras filas pares se desplazan hacia la derecha?
      grade4_artist_functions_freeplay_instruction: You are on your own now! Try out any of the functions you used in this stage or try this new function that will automatically give your image a beautiful background color! This creation will be saved to your Projects dashboard so that you can easily edit it any time!
      grade4_artist_functions_stars0_instruction: You can make this drawing by adding a repeat block.
      grade4_artist_functions_stars1_instruction: Now that you can draw a star, try drawing four stars!
      grade4_artist_functions_stars2_instruction: Draw only those three stars to finish this puzzle.
      grade4_artist_functions_stars3_instruction: That last one is tough if you only use loops. Let's try drawing the same picture using this new 'function' that will help to **draw a star**.
      grade4_artist_functions_windows0_instruction: Make this window by drawing a square, then turning 90 degrees before drawing another, and so on.
      grade4_artist_functions_windows1_instruction: If you can draw one window, you can draw three! Try using your choice of a nested loop or a function here. Don't forget the jump block!
      grade4_artist_functions_windows2_instruction: "Try solving this puzzle by creating `draw a window` and calling it five times. Watch out for the door!\n\n- The top windows are 50 pixels away from each other.  \n- The bottom windows are 100 pixels below the top set."
      grade4_artist_nestedLoops_challenge_instruction: |-
        ¡Haz clic para ver las sugerencias otra vez! Aquí esta el código para una interesante figura. ¿Qué pasa cuando lo repites muchas veces, torneado entre cada interacción? Nota que el giro en esta figura agrega más de 420 grados, lo cual significa que cuando el artista termino de dibujar, verá otra dirección diferente que cuando empezó. Esa nueva dirección es exactamente 60 grados a la derecha de cuando comenzó.
      grade4_artist_nestedLoops_challenge2_instruction: '¡Ahora, un desafío! Aquí hay un diseño que solamente usa bloques que ya te hemos mostrado. ¿Puedes averiguar cómo crearlo nuevamente sin información extra? Sugerencia: Tantea, usa ensayo y error. No se espera que esté perfecto la primera vez.'
      grade4_artist_nested_loop_circles1_instruction: 'Usar un bucle anidado para completar el diseño.'
      grade4_artist_nested_loop_flags1_instruction: Loop the given code to create a windmill.
      grade4_artist_nested_loop_polygons1_instruction: "con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuánto es 360 dividido por 10?)"
      grade4_artist_nested_loop_polygons2_instruction: "Hi, I'm the Artist! Let's create some drawings together! For starters, try repeating this shape 6 times. \n\nHow much do you have to turn each time you loop? "
      grade4_artist_nested_loop_squares1_instruction: Can you draw these 10 squares of this sidewalk using a nested loop? Each square is 30 pixels.
      grade4_artist_nested_loop_triangles1_instruction: 'Complete the code to draw these triangles.  The first one is done for you.  Hint:  3 triangles in a 360 degree rotation.'
      grade4_artist_nested_loop_triangles2_instruction: "Let's make a quick adjustment to get completely different image!  \nHint: ? × 10 = 360"
      grade4_artist_nested_loop_triangles3_instruction: |-
        Can you draw a hexagon by looping the triangle code?
        Hint: 6 × ? = 360
      grade4_artist_nested_loop_triangles4_instruction: Hi! I'm the Artist. Let's try some different types of drawings together. Can you help me draw the bottom teeth in the alligator's mouth?
      grade4_artist_nested_loop_triangles5_instruction: |-
        Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado.
      grade4_artist_nested_loop_triangles6_instruction: Can you draw these 36 triangles using a nested loop?
      grade4_artist_parameters_squares1_instruction: 'Haz clic en "Editar" para completar la definición de la función "dibujar un cuadrado" y agrega un parámetro. Debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez, dibuja 3 cuadrados: de 25, 50 y 75 píxeles de largo, separados por 100 píxeles.'
      grade4_artist_parameters_triangles1_instruction: Today, we're going to try out a different, more powerful function editor. See if you can figure out how to edit the function 'draw a triangle' to find the bugs.
      grade4_artist_parameters_triangles2_instruction: '¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.'
      grade4_artist_parameters_triangles2b_instruction: '¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles más grande que el último. El primer triángulo es de 25 píxeles de tamaño.'
      grade4_artist_parameters_triangles3_instruction: '¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles más grande que el último. El primer triángulo es de 25 píxeles de tamaño.'
      grade4_artist_parameters_triangles4_instruction: '¿Puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50 y el tercero es de 75. Sugerencia: comienza haciendo clic en "Editar" en tu bloque de función.'
      grade4_artist_parameters_trianglesx_instruction: '¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles más grande que el último. El primer triángulo es de 25 píxeles de tamaño.'
      grade4_bee_conditionals_nested_loops_instruction: Collect all of the nectar. You can only collect nectar from flowers, but you can check any space to see if there is a flower.
      grade4_bee_conditionals_new1_instruction: Collect all of the nectar. You can only collect nectar from flowers, but you can check any space to see if there is a flower.
      grade4_bee_conditionals_new1a_instruction: Help the bee make all of the honey. You can only make honey at a honeycomb, but you can check any space to see if there is a honeycomb.
      grade4_bee_conditionals_new2_instruction: Can you help the bee collect the nectar from the flowers? You can only collect nectar from flowers, but you can check any space to see if there is a flower.
      grade4_bee_conditionals_new2a_instruction: Make all of the honey. It's actually more efficient to check each space for a honey comb, even when you know some are empty.
      grade4_bee_conditionals_new3a_instruction: Collect all of the nectar or make all the honey. You can only collect nectar from flowers and make honey from honeycombs. Check any space to see if there is a flower or honeycomb.
      grade4_bee_conditionals_new3b_instruction: Uh oh! The bee is not sure if he should collect nectar or make honey. Can you help him out?
      grade4_bee_conditionals_new3c_instruction: 'Help the bee collect all of the nectar and make all of the honey! Hint: Try using one loop inside of another loop.'
      grade4_bee_conditionals_quantum1_instruction: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      grade4_bee_conditionals_quantum2_instruction: "La abeja sólo quiere néctar ahora. Recuerda que no todos los objetos son flores, recoge néctar solamente de las flores."
      grade4_bee_conditionals_quantum3_instruction: Now I just want to make honey. Some of these clouds might have honeycombs under them. The way we've been going about things won't work here. Be sure to check if a honeycomb is hiding behind each cloud!
      grade4_bee_conditionals_quantum4_instruction: El objeto desconocido es una flor o un panal de miel. Use el bloque "if/else" para recoger néctar si es una flor, si no haz miel (porque es un panal de abejas).
      grade4_bee_conditionals_quantum5_instruction: |-
        Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, si no haz miel (porque hay un panal de abejas).
      grade4_bee_functions_instruction: Have we met before? I'm the farmer! Please help me remove this pile of dirt and fill this hole.
      grade4_bee_functions1_instruction: Colecta todo el néctar de cada flor.
      grade4_bee_functions10_instruction: Create a function to collect all of the nectar from each flower.
      grade4_bee_functions11_instruction: Solve this function by creating a function to turn, move forward and make all of the honey, then return the bee to where it started and turn back.
      grade4_bee_functions2_instruction: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 2 néctar" para recolectar el néctar de cada flor.
      grade4_bee_functions3_instruction: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 5" para obtener 5 néctares a cada momento. Asegúrese de utilizar un bucle para obtener un recuento ideal de bloque, también.
      grade4_bee_functions4_instruction: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      grade4_bee_functions5_instruction: This puzzle will be deleted!
      grade4_bee_functions6_instruction: Now write the function to collect nectar from the flowers.
      grade4_bee_functions7_instruction: Create a function and call it to collect nectar at each flower and make honey at each honeycomb.
      grade4_bee_functions8_instruction: Create your own function that goes down a path, gets nectar, makes honey, and then returns the bee to the top of the path. Then collect all the nectar and make all the honey!
      grade4_bee_functions9_instruction: Create a function that collects all of the nectar from each flower.
      grade4_bee_nestedLoops0_instruction: Utiliza un bucle para recolectar todo el néctar.
      grade4_bee_nestedLoops1_instruction: Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. 
      grade4_bee_nestedLoops2_instruction: "**Challenge:** Figure out how to get all of the nectar using only the blocks available."
      grade4_bee_nestedLoops2a_instruction: Collect all of the nectar using  as few blocks as possible.
      grade4_bee_nestedLoops3_instruction: Recolecta todo el néctar creando un bucle anidado.
      grade4_bee_nestedLoops4_instruction: 'Recolecta todo el néctar de cada flor y haz miel en cada panel. Utiliza un bucle anidado. '
      grade4_bee_nestedLoops_assess_instruction: |-
        **Assessment:** Collect all of the nectar and make all of the honey using loops.
        
        Hint: There are several possible solutions!
      grade4_designProcess_vid_instruction: Prepare to build a project within some given parameters.
      grade4_farmer_functions1_instruction: |-
        *"Have we met before? I'm the farmer!"*
        
        Help the farmer get to the pumpkins and pick them.
      grade4_farmer_functions2_instruction: Take the code you just wrote it and use it to define a new function. Call the function twice to complete the puzzle.
      grade4_farmer_functions3_instruction: Try using a couple of repeat blocks within your function definition.
      grade4_farmer_functions4_instruction: Swap out your repeat loops for more versatile while loops.
      grade4_farmer_functions5_instruction: Things are going to start getting trickier, but don't give up! You can use the same while loops to check both spaces in each pass.
      grade4_farmer_functions6_instruction: The paths are a different length. You can use a different type of while loop to keep the pattern going as long as you need to.
      grade4_frozen_freeplay_instruction: '¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal.'
      grade4_frozen_functions0_instruction: '¿Puedes adivinar con qué número reemplazarías a los signos de interrogación para dibujar un círculo?'
      grade4_frozen_functions1_instruction: Use the new “draw a circle” function to create 10 overlapping circles. Don't forget to jump forward between circles.
      grade4_frozen_functions1a_instruction: Utiliza el nuevo bloque "Crear un círculo" para crear 10 círculos superpuestos. No te olvides de saltar hacia adelante entre cada círculo.
      grade4_frozen_functions2_instruction: Ahora crearemos 20 círculos superpuestos, girando 18 grados entre cada círculo.
      grade4_frozen_functions3_instruction: Aquí está un bloque "Crear círculo" que puede dibujar círculos de diferentes tamaños. ¿Puedes usarlo para dibujar un círculo pequeño de tamaño 5 y uno más grande de tamaño 10?
      grade4_frozen_functions4_instruction: Formas complejas de nieve pueden crearse usando figuras geométricas muy simples. ¿Puedes crear uno repitiendo 5 círculos de tamaño 5 y 5 círculos de tamaño 10?
      grade4_frozen_nested_loop_diamonds1_instruction: Let’s use a repeat block to create a rhombus. Like a square, all sides are equal length, but the angles are different. This one has 60 degree and 120 degree angles instead of all 90 degree angles.
      grade4_frozen_nested_loop_diamonds2_instruction: '¿Sabías que cada copo de nieve tiene una forma distinta? Crearemos un nuevo copo de nieve utilizando otro bloque de "Repetir" para repetir el paralelogramo 4 veces, girando hacia la derecha 90 grados entre cada paralelogramo.'
      grade4_frozen_nested_loop_diamonds3_instruction: Ahora crearemos un nuevo copo de nieve, utilizando el bloque "Repetir" para repetir el paralelogramo 10 veces, girando a la derecha 36 grados entre cada uno.
      grade4_frozen_nested_loop_rectangle1_instruction: Hi, I’m Anna of Arendelle! Let’s use a repeat block to create a rectangle. This one is  200 pixels long and 100 pixels tall. All of the corners are 90 degree angles.
      grade4_frozen_square_instruction: '¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?'
      grade4_frozen_square_loop1_instruction: '¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?'
      grade4_frozen_square_loop2_instruction: Ahora crearemos tres cuadrados, girando al terminar cada cuadrado. Asegúrate de girar 120 grados antes de iniciar un nuevo cuadrado.
      grade4_frozen_square_loop3_instruction: '¿Puedes dibujar un copo de nieve utilizando el bloque "Repetir" para dibujar un cuadrado 10 veces y el bloque "Girar" para girar 36 grados entre cada cuadrado?'
      grade4_playLab_proj_example1_instruction: instructions
      grade4_playLab_proj_example1a_instruction: Take a look at this project.  Do you see how it was made?
      grade4_playLab_proj_example2a_instruction: Take a look at this project.  Do you see how it was made?
      grade4_playlab_freeplay_instruction: '¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. '
      grade4_playlab_test_instruction: |-
        Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      grade4_playlab_test2_instruction: Aquí está la función denominada "salto" que permite que tu personaje principal salte hasta 100 píxeles. Use la función salto para recoger todas las banderas.
      grade4_prompt_test_instruction: This is a test play lab level.
      grade4_review_artist1_instruction: Hola, soy un artista. Puedes escribir código para hacerme dibujar cualquier cosa. Usa algunos bloques para hacerme dibujar sobre las líneas grises en la imagen. (Cada línea tiene 100 píxeles de largo)
      grade4_review_artist2_instruction: '¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud.'
      grade4_review_artist3_instruction: El bloque Salta mueve el artista sin dibujar. Dibuja la línea punteada utilizando los bloques Salta y Dibuja.
      grade4_review_bee1_instruction: Ahora usa el nuevo bloque repeat para recolectar todo el néctar y hacer toda la miel.
      grade4_review_bee2_instruction: Recolecta el néctar de cada flor y haz miel en cada panal.
      grade4_review_bee3_instruction: |-
        Utiliza un ciclo similar al del último problema, pero ahora utiliza un bloque turn.
      grade4_scaffolded_project1_instruction: It is amazing how much you have learned! Let's put them together to make a game, step by step.
      grade4_scaffolded_project2_instruction: |
        Now let's get things moving! Use event handlers and actions to make your hero move.
        
        We've added these blocks to your tool box to help you.
      grade4_scaffolded_project3_instruction: "Now that your game has a hero, it's time to start adding other actors and assigning them behaviors. \n\nAdd two or more additional actors to your game and make them move. Do you want to have an actor patrol back and forth? Try using a these new blocks to bring these other components of your game to life!"
      grade4_scaffolded_project4_instruction: Just getting the actors moving is a great step, but we need to program some interactions to make this really feel like a game. A simple way to do this is to add or remove points when actors collide with projectiles or each other. Find some interesting ways to change the score in your game.
      grade4_scaffolded_project4a_instruction: Just getting the actors moving is a great step, but we need to program some interactions to make this really feel like a game. A simple way to do this is to add or remove points when actors collide with projectiles or each other. Find some interesting ways to change the score in your game.
      grade4_scaffolded_project5_instruction: Now spend some time making sure the game works the way you want. Try including a way to win or lose your game.
      grade4_scaffolded_project6_instruction: You've finished! Now you can play your game or share it with your friends and classmates!
      grade5_artist_binary1_instruction: "Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones \"apagado\" (representado por el número 0) y \"encendido\" (representado por el número 1). Le hemos provisto una red de \"píxeles\" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte \"01010101\" en binario en la primera fila?"
      grade5_artist_binary10_instruction: Haga clic aquí para ver sugerencias.
      grade5_artist_binary11_instruction: 'Juego Libre: Aquí tiene un lienzo de alta resolución para dibujar - ¡16 bits por 16 bits!'
      grade5_artist_binary2_instruction: "Aquí hay una función que toma una cadena binaria de 0 y 1 e instruye al artista a que gire de izquierda a derecha, de arriba hacia abajo, llenando los cuadrados cuando ve 1 e ignorándolos cuando ve 0. Corre este código para ver cómo el artista usa el binario para dibujar el patrón."
      grade5_artist_binary3_instruction: '¿Cuántas de estas secuencias binarias podría enlazar 8 veces para dibujar esta imagen?'
      grade5_artist_binary4_instruction: '¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?'
      grade5_artist_binary5_instruction: Cada secuencia binaria representa una fila de esta figura. ¿Puede reacomodarla de tal manera que dibuje una cara con una sonrisa en lugar de una cara de aspecto fruncido?
      grade5_artist_binary6_instruction: '¿Cuál de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?'
      grade5_artist_binary7_instruction: '¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?'
      grade5_artist_binary8_instruction: Termine este dibujo.
      grade5_artist_binary9_instruction: |-
        Aquí hay un lienzo con mejor resolución para pintar - ¡16 píxeles por 16 píxeles! ¿Ves lo que pasa cuando empezamos a ser creativos con los bits?
      grade5_artist_for_loops1_instruction: 'Dibuje este triángulo que tiene un tamaño de 50 píxeles. Sugerencia: Use un bloque de repetición.'
      grade5_artist_for_loops10_instruction: |-
        Can you figure out how to use all of the things you've learned to create this image?
        
        Need a hint? Click here.
      grade5_artist_for_loops1a_instruction: Try using a `for loop`to create this triangular design. Don't worry that the numbers are different than the last puzzle. As long as you turn by the right number of degrees, the artist will make the correct shape!
      grade5_artist_for_loops1b_instruction: Experiment with the `for` loop and play with the `counter` variable.
      grade5_artist_for_loops2_instruction: Use a `repeat` inside of a `for` loop to create this stack of triangles that goes from 50 pixels to 100 pixels.
      grade5_artist_for_loops3_instruction: 'These triangles go from 20 pixel sides to 200 pixel sides, and each triangle is 20 pixels larger than the last. '
      grade5_artist_for_loops4_instruction: 'These squares start at 15 pixels long, the largest is 300 pixels long, and each square is 15 pixels larger than the last. '
      grade5_artist_for_loops5_instruction: |-
        La línea más pequeña de este espiral cuadrado es 10, el más largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      grade5_artist_for_loops6_instruction: Si girara un poco más o menos de lo que normalmente haría para una forma, crearía un efecto más nítido. Intente girar 89 grados para crear esta espiral cuadrada torcida.
      grade5_artist_for_loops7_instruction: '¡Haz 3 pequeños cambios al código desde el último nivel para obtener esto!'
      grade5_artist_for_loops7a_instruction: Take the angle down to 72 degrees to get a spiraled pentagon.
      grade5_artist_for_loops7b_instruction: |-
        Use the counter inside the `set alpha` block to get this faded center.
        (This hexagon pattern was made using a 60 degree turn.)
      grade5_artist_for_loops8_instruction: '¿Recuerdas cuando usamos una variable para controlar el número de lados de una forma? Este patrón empieza con un triángulo y agrega un cada lado a la vez hasta que dibuja un decágono (10 lados). Cada lado debe ser de 100 píxeles de largo. Sugerencia: 360 dividido por el número de lados de una forma, es el número de grados que necesitarás para girar.'
      grade5_artist_for_loops9_instruction: |-
        ¡Vamos a poner todo junto! Usando tu conocimiento de "ciclos for" y del "contador", crea este dibujo donde cada forma tiene dos partes más que la anterior. Asegúrate de que cada lado sea 10 veces más largo que el número de lados del polígono. Muy poco del código se ha proporcionado para ti.
      grade5_artist_for_loopsfreeplay11_instruction: |-
        Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita https://studio.code.org/c/106387604 para la solución.
      grade5_artist_for_loopsfreeplay12_instruction: 'Free Play: Try using the `counter` variable with other drawing elements to make magical images like this one.'
      grade5_artist_freeplay_instruction: Create your own project! This creation will be saved to your Projects dashboard so that you can easily edit it any time!
      grade5_artist_functionparameters10_instruction: "Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita https://studio.code.org/c/106387604 para la solución."
      grade5_artist_functionparameters11_instruction: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      grade5_artist_functionparameters7_instruction: Esta imagen es similar a la última. ¿Se puede utilizar un "ciclo for" con tu función para hacer este diseño?
      grade5_artist_functionparameters8_instruction: 'Vamos a editar esta función "dibujar una forma". Ya tiene un parámetro de "longitud". Ahora, vamos a editar la función para añadir también un parámetro "lados". Recuerda que el ángulo para girar una forma determinada es 360 dividido por la cantidad de lados que tiene. Sugerencia: las longitudes para cada forma son: el triángulo es de 100 píxeles, el hexágono es de 25 píxeles y el cuadrado es de 50 píxeles.'
      grade5_artist_functionparameters9_instruction: 'Challenge: Edit `draw a spiral edge` to use `length` and `sides` parameters, then recreate these shapes.'
      grade5_artist_functionparameters9a_instruction: Finish off the `draw a spiral edge` function to also ask for a minimum length for the center of the spiral.
      grade5_artist_functionparameters9b_instruction: Can you figure out how to make this drawing using the function that you just created?
      grade5_artist_functionparameters_6_instruction: |-
        ¿Puedes completar este dibujo? Los lados de todas las formas son 100 píxeles de largo.
      grade5_artist_parameters_squares1_instruction: 'Haz clic en "Editar" para completar la definición de la función "dibujar un cuadrado" y agrega un parámetro. Debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez, dibuja 3 cuadrados: de 25, 50 y 75 píxeles de largo, separados por 100 píxeles.'
      grade5_artist_parameters_squares1a_instruction: This program looks okay from here, but something isn't working right. See if you can figure out how to edit the function 'draw a square' to find the bug.
      grade5_artist_parameters_squares2_instruction: Create a function called 'draw a square' and use it to outline these four boxes. Make sure to add a parameter for 'length'! Starting from the upper right, the box widths are 50, 100, 150, and 200.
      grade5_artist_parameters_squares2a_instruction: Edit the function to accept a parameter called `length`.
      grade5_artist_parameters_stars1_instruction: That last one is tough if you only use loops. Let's try drawing the same picture using this new 'function' that will help to **draw a star**.
      grade5_artist_parameters_triangles1_instruction: This program looks okay from here, but something isn't working right. See if you can figure out how to edit the function 'draw a square' to find the bug.
      grade5_artist_parameters_triangles1a_instruction: Today, we're going to try out a different, more powerful function editor. See if you can figure out how to edit the function 'draw a triangle' to find the bugs.
      grade5_artist_parameters_triangles1aa_instruction: 'Click "edit" to fill in the function definition of "draw a triangle" and add a parameter. It should take a length parameter, just like the triangle. This time, draw 3 triangles: 25, 50 and 75 pixels in length, each 100 pixels apart.'
      grade5_artist_parameters_triangles2_instruction: This drawing can be easily created using a new type of function that includes a parameter. The sides of each triangle are 25 pixels larger than the last.  The first triangle has 25 pixel sides. Replace the '???' with the correct values to draw the picture.
      grade5_artist_parameters_triangles2a_instruction: '¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.'
      grade5_artist_parameters_triangles3_instruction: |-
        The code for this triangle function is broken.
        
        Can you edit the function to fix it, and then make triangles of length 150, 75, 25?
      grade5_artist_parameters_triangles4_instruction: '¿Puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50 y el tercero es de 75. Sugerencia: comienza haciendo clic en "Editar" en tu bloque de función.'
      grade5_artist_parameters_trianglesy_instruction: |-
        The code for this triangle function is broken.
        
        Can you edit the function to fix it, and then make triangles of length 150, 75, 25?
      grade5_artist_variables_freeplay10_instruction: 'Juego libre: Experimento con el número de lados de esta forma. ¿Puedes cambiar el algoritmo de modo que el tamaño total de la forma siga siendo el mismo, sin importa cuántos lados tenga? Consejo: Tendrás que usar tus bloques de matemáticas (360 dividido por "caras" en dos lugares esta vez) '
      grade5_artist_variables_freeplay14_instruction: |-
        Juego Gratis: revísalo, ahora tu algoritmo está anidado dentro de otro circuito. Experimenta cambiando los valores de tus dos variables para dibujar patrones asombrosos.
      grade5_artist_variables_freeplay15_instruction: |-
        Inspiración para ejercicio libre: ¡Ya has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Echa un vistazo aquí: https://levelbuilder-studio.code.org/c/8781/edit
      grade5_artist_variables_freeplay16_instruction: '¿Aún jugando? ¡Aquí hay un lienzo en blanco donde usted podrá crear lo que quiera!'
      grade5_artist_variables_hexagons1_instruction: "Vamos a intentarlo otra vez. Ahora, vamos a hacer este diseño cool con un hexágono de 60 píxeles."
      grade5_artist_variables_letterT11_instruction: Aquí está el mismo algoritmo que ideamos con el último rompecabezas - ¿Qué debes establecer en la variable "sides" para dibujar este dibujo de cuadrados?
      grade5_artist_variables_new1_instruction: Here is a program that will create an image. There are a few things that are wrong with it.
      grade5_artist_variables_octagons13_instruction: "Cuando una forma tiene varios lados, cada lado necesita ser más corto si tú quieres el patrón completo para ajustar la pantalla. Vamos a recrear el algoritmo desde este increíble patrón, pero en lugar de poner manualmente la variable de \"longitud\", vamos a usar un bloque de matemáticas con la variable de \"lados\" dentro para asegurarse de que cada forma se ajusta correctamente. El perímetro de cada polígono es de 300 píxeles. ¿Necesitas algunos consejos? Haga clic aquí."
      grade5_artist_variables_pentagon8_instruction: |-
        Utiliza lo que aprendiste en el rompecabezas anterior para crear el hexágono usando la variable "lados". Vé cómo puedes cambiar solo una variable para dibujar un triángulo, cuadrado, pentágono u octágono?
      grade5_artist_variables_pentagon9_instruction: Modifica este algoritmo para que utilice la variable "lados" en lugar de un número fijo para dibujar un pentágono. Reemplaza el número 5 con la variable "lados" y usa el bloque "establecer lados".
      grade5_artist_variables_pentagons1_instruction: "¿Me puedes ayudar a dibujar este patrón cool dejando caer el bloque de variable \"longitud\" en los lugares correctos?"
      grade5_artist_variables_pentagons12_instruction: Vamos a poner la variable "sides" en 5. Si agrego mas lados a este algoritmo, ¡más grande es el patrón entero! Agreguemos una nueva variable llamada longitud "lengh" y úsala si tienes que avanzar "move forward". Establece la variable longitud "lengh" a 75 para esta figura.
      grade5_artist_variables_rectangle6_instruction: Ahora quiero hacer un rectángulo que es dos veces tan alto como ancho. Tenemos una variable llamada "ancho" que se encuentra a 100. ¿Puedes usar los bloques de matemáticas para completar el código?
      grade5_artist_variables_square7_instruction: |-
        Aquí hay un código que puede dibujar cualquier polígono regular. Hay una nueva variable llamada lados que se inicializa a 4. ¿Puedes usar la variable lados (junto con el bloque de matemáticas) para activar la cantidad correcta independientemente de cuántos lados hay en el polígono? ¡Haz clic aquí para regresar a la pista!
      grade5_artist_variables_triangles2_instruction: En lugar de avanzar por 100 "moving forward by 100", el bloque mover "move" ahora referencia la variable longitud "length". ¿Podrías establecer la longitud "length" a 150 para dibujar este nuevo triángulo?.
      grade5_artist_variables_triangles3_instruction: 'Arrastra un bloque de número hasta el bloque "establecer longitud" para dibujar un conjunto de triángulos de 50 píxeles.'
      grade5_bee_for_loops1_instruction: Utilizar un bucle para recolectar el néctar de cada flor.
      grade5_bee_for_loops10_instruction: What should your increment be to collect 15, then 12, then 9, 6, 3 nectar?
      grade5_bee_for_loops11_instruction: "**Challenge:** Take what you've learned about `for` loops and try to solve this problem. "
      grade5_bee_for_loops2_instruction: Agrega el código necesario para asegurarte de que la abeja recolecta todo el néctar. ¡Mira cuánto código necesitas para este puzzle! (Aprenderemos una manera más simple en el siguiente puzzle).
      grade5_bee_for_loops3_instruction: Try this puzzle using the `for` loop with `counter` variable and see how much shorter your code becomes.
      grade5_bee_for_loops4_instruction: Help the bee collect all of the nectar.
      grade5_bee_for_loops6_instruction: También puedes utilizar un bucle para contar hacia atrás. Trata de recoger este néctar por la cuenta regresiva del 5 al 1 por 1.
      grade5_bee_for_loops7_instruction: Try collecting these flowers using an increment of 2.
      grade5_bee_for_loops8_instruction: Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar?
      grade5_bee_for_loops9_instruction: Use the `counter` variable to navigate this garden with the fewest number of blocks possible.
      grade5_bee_parameters_new8_instruction: That's a great function you've created! You are officially on your own now. Collect all the nectar. Make all the honey.
      grade5_bee_parameters_new9_instruction: Bonus Challenge! If you are feeling ambitious, try this puzzle. It is possible to collect all of the nectar and make all of the honey using only a For loop, a Repeat loop, a function call, and a turn. Try it all on your own, or view the hints to build it step-by-step. Great job with this stage!
      grade5_pixelation_instruction: Encode an image of anything you like using binary. The binary language will be represented with '0' and '1' only.
      grade5_playlab_freeplay_instruction: '¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. '
      grade5_playlab_parameters_points1_instruction: "Here's the same game but most of the code is hidden. We've added a new function called `score_points.`\n\nAdd a new parameter called `points` to the `player_score` function. \n\nThe `score_points` function should be able to both add and remove points from `player_score` depending on which actor is hit.\nChanging the score by 1 will add a point, while changing the score by -1 will subtract a point.\n\nWhen you're done, click \"Run\" to play.  When Dog scores 6 points, you will move on to the next puzzle. "
      grade5_playlab_variables1_instruction: '¡Ahora no tienes que escribir nada de código, sólo presiona "ejecutar" para jugar el juego! En este juego, tú eres el perro que está tratando de recoger más banderas que el Gato. Use la flecha abajo para controlar al Perro. Presiona "Finalizar" cuando terminaste de jugar.'
      grade5_playlab_variables10_instruction: Llene el parámetro de entrada "actor" de tal manera que podamos llamar la función "patrulla" para cada uno de los actores. Recuerde, los actores corresponden a los números 1, 2 y 3.
      grade5_playlab_variables11_instruction: Agrega otro parámetro llamado "velocidad" a la función de "patrulla". Trata de usar un bloque "obtén velocidad" con el nuevo parámetro "velocidad" para ayudar a Pingüino a que obtenga ambas banderas antes de que los otros duendes obtengan una.
      grade5_playlab_variables12_instruction: "¡Vamos a divertirnos! Mira el código dado para ver si puedes averiguar qué es lo que hace cada bloque. Cuando termines, usa las flechas de tu teclado para controlar el Perro y colecta todas las banderas."
      grade5_playlab_variables13_instruction: Use un bloque "cuando el actor toque" para enviar al Perro de regreso al lado superior izquierdo SOLAMENTE si el Perro toca a alguno de los otros actores.
      grade5_playlab_variables14_instruction: '¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. '
      grade5_playlab_variables1ask_instruction: |-
        This time, when you press 'run', you will see a 'prompt' asking you for a number. This number will be stored in a variable used to set the dog's speed.
        
        
        Pay attention to how this program is written!
      grade5_playlab_variables2_instruction: '¡Esa carrera en ese último problema no fue justa! Cambie la variable de "velocidad_perro" para asegurarse de que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!'
      grade5_playlab_variables3_instruction: '¡Aquí tiene una nueva clase de juego! Use las flechas hacia la izquierda y hacia la derecha para moverse y las flechas hacia arriba y hacia abajo para saltar. Vea si puede recoger todas las banderas.'
      grade5_playlab_variables4_instruction: 'Ahora estamos usando una variable denominada "altura" para controlar cuán alto puede saltar el perro. Actualice la variable "altura" de tal manera que el perro pueda saltar lo suficientemente alto para alcanzar todas las banderas. Pista: las banderas nuevas tienen 200 píxeles de altura.'
      grade5_playlab_variables5_instruction: |-
        You've seen now how a variable can be used to set the height of an actor's jump. How else could  you use a variable?
        
        Let's build a game! First we'll need a score. Try setting the 'points' variable to give yourself 10 free points!
      grade5_playlab_variables6_instruction: |-
        Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      grade5_playlab_variables6ask_instruction: |-
        This time, you need 100 points to win!  Don't worry though, you can choose how many points you earn each time you score a hit!
        Try adding the `ask` block and changing the number 1 out for the variable `value`.
      grade5_playlab_variables7_instruction: Bien, ahora asegurémonos que este juego no sea muy fácil - cada vez que el Perro (actor 1) es golpeado por una bola de fuego usted debe perder un punto. Empiece con 10 puntos de tal manera que no sea muy difícil. Deje que su calificación caiga de 10 a 0 para pasar de nivel.
      grade5_playlab_variables71_instruction: "Aquí esta nuestro juego de una etapa anterior, pero la mayoría del código está oculto. Hay una nueva función \"puntuación.\" Editar la función para que el parámetro \"puntos\" sea agregado a la variable \"puntuacion_jugador\". La variable \"puntuación_jugador\" debe aumentar cada vez que Perro etiquete Gato con corazones y disminuir cada vez que Gato etiquete Perro con corazones. Nota: cuando haya terminado, haga clic en \"Ejecutar\" para jugar. Cuando perro tenga 6 puntos, tú serás llevado al siguiente rompecabezas. "
      grade5_playlab_variables81_instruction: "Añadimos una última función para ti. Utiliza una sentencia \"Si\" para que tu programa llame la función \"livel_mas\" solo cuando \"puntuacion_jugador\" sea mayor que un cierto número. Por ejemplo: \"puntuacion_jugador\" > 6 Juega el juego, y hazlo pasar de nivel 4 para mover al siguiente problema. "
      grade5_playlab_variables9_instruction: "Aquí hay una función denominada \"patrulla\". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles."
      grade5_playlab_variables_freeplay_instruction: "¡Tiempo Libre para jugar! Aquí están todas las variables con las que hemos jugado hasta ahora, también unas pocas más en caso de necesitarlas. Haz un juego o historia que utilice estas variables. Sugerencia: desplázate hacia abajo para ver todos los comandos en el área de trabajo."
      grade5_playlab_variables_jump1_instruction: This puzzle uses a hidden function that makes the dog jump when the 'up' arrow is pressed. The height of the jumps can be set at the start of the game using the 'jumpPower' variable. Try to touch all of the flags!
      grade5_prompt_test_instruction: Variables aren't always numbers. What if you wanted to store a word or text? Experiment with the new `ask` block.
      gradeK_sequence_4_instruction: Try this one yourself from the beginning.
      gradek_adventurer_loops1_instruction: Three piles of gold!  Collect all three.
      gradek_adventurer_loops10_instruction: Help me get all of the gold from this cave.
      gradek_adventurer_loops2_instruction: How can Laurel collect all five piles of gold using only one `[E-->]` block?
      gradek_adventurer_loops3_instruction: Can you fix Laurel's path to get all of this gold?
      gradek_adventurer_loops4_instruction: Use what you learned to get all of the coins.
      gradek_adventurer_loops4a_instruction: Add to this code to collect all of the coins.
      gradek_adventurer_loops5_instruction: What should you add to this code to get all of the gold?
      gradek_adventurer_loops6_instruction: Write the code to get all of this gold.
      gradek_adventurer_loops7_instruction: Write the code to get all of this gold.
      gradek_adventurer_loops7_challenge_instruction: "**Challenge:** The gold goes all the way up these stairs!  Write the code to help me get it all."
      gradek_adventurer_loops8_instruction: Help me get all of the gold from this deep valley.
      gradek_adventurer_loops9_instruction: Help me get all of the gold from this cave.
      gradek_adventurer_loopsFP_instruction: Eureka!  Collect as much gold as you can!
      gradek_adventurer_loopsPre_instruction: This is Laurel the Adventurer.  Mover her around and get as much gold as you can!
      gradek_artist_loops1_instruction: Ayude al artista a dibujar esta línea dos veces hacia adelante.
      gradek_artist_loops2_instruction: Our artist is trying to draw a line five times, but can't get it right.  Can you help?
      gradek_artist_loops3_instruction: Now, use a `repeat` loop to draw this line five times!
      gradek_artist_loops4_instruction: Draw a line seven steps long. This will become our horizon.
      gradek_artist_loops5_instruction: Let's put a nice hill in the back.
      gradek_artist_loops6_instruction: Use the `repeat` loop to add waves to the water.
      gradek_artist_loops7_instruction: We need a ladder up to the boat.
      gradek_artist_loops8_instruction: 'Challenge: The stairs down to the dock are broken.  Help me fix them.'
      gradek_artist_loops9_instruction: Time to head back to land. Help me put down stones so I don't fall in!
      gradek_artist_loopsA_instruction: Help me build steps to watch the ship sail away.
      gradek_artist_loopsFP_instruction: The artist saw something funny in the distance.  Draw what you think he saw.
      gradek_artist_loopsPre_instruction: Este es un nuevo tipo de rompecabezas llamado "Artista". Juega con el nivel y dibuja algo divertido.
      gradek_playlab_events1_instruction: Make your robot say "Hello!" when the button is clicked.
      gradek_playlab_events1a_instruction: Add a block so that when you click the "up" button, Olive the Cat walks up.
      gradek_playlab_events1c_instruction: Jorge the Dog wants to say "Hi there."  Can you help him?
      gradek_playlab_events2_instruction: Edit the code so that when the second bird is clicked, your program plays a sound!
      gradek_playlab_events2a_instruction: Add a block so that when you click "down" Olive the Cat walks down.
      gradek_playlab_events2c_instruction: Help Jorge the Dog get moving by connecting the `move left` block to the `when left` event block that is already in the workspace.
      gradek_playlab_events3_instruction: When the third bird is clicked, the background should change to a city. Can you add code to make this happen?
      gradek_playlab_events3a_instruction: When the third bird is clicked, the background should change to a city. Can you add code to make this happen?
      gradek_playlab_events3b_instruction: Add a button so that Olive the Cat moves right when you click the "right" button.
      gradek_playlab_events3c_instruction: Now, get Jorge to move right when the `right` button is clicked.
      gradek_playlab_events4_instruction: Add code to make something happen when the fourth bird is clicked. Be creative!
      gradek_playlab_events4a_instruction: Add a block so that Olive the Cat moves left when you click the "left" button.
      gradek_playlab_events4c_instruction: Add events to have Jorge move up and down when the `up` and `down` buttons are pressed.
      gradek_playlab_events5_instruction: About My Robot Project! Write code so that clicking on each bird shows a new fact about your robot.
      gradek_playlab_events5a_instruction: About My Robot Project! Write code so that clicking on each bird shows a new fact about your robot.
      gradek_playlab_events5c_instruction: Make this more interesting by changing the background and playing a random sound when Jorge is clicked.
      gradek_playlab_eventsA_instruction: Now, have the cat change to a random size AND have it play a random sound when you click the center button.
      gradek_playlab_eventsFP_instruction: Add anything you want to this game.  Can you make the dinosaur disappear when Jorge runs into him?
      gradek_playlab_eventsPre_instruction: This is a Play Lab level.  Move blocks to the workspace and see what happens!
      group test_instruction: Make a game
      harvester_Kahoot_instruction: Ahora ayuda al granjero a recoger el maíz, la lechuga **y** la calabaza.
      harvey_pixelation_instruction: Encode an image of anything you like using binary. The binary language will be represented with '0' and '1' only.
      harvey_snowflake_artist1_instruction: '¡Prepara tu copo de nieve para la impresión en 3D!'
      harvey_snowflake_artist2_instruction: '¡Prepara tu copo de nieve para la impresión en 3D!'
      harvey_tictactoe_instruction: "¡Vamos a jugar un juego!! Dibuja tantas X como tú\npuedas! ¿Puedes obtener 3 en una fila?"
      iceAgeLoopsforVideo_instruction: '¿Puedes obtener la bellota con sólo un bloque ''mover hacia adelante''?'
      iceage_click_hello_instruction: '¿Puedes ayudar a Sid a llamar a sus amigos cuando hagas clic en él? '
      iceage_click_hello_2018_instruction: '¿Puedes ayudar a Sid a llamar a sus amigos cuando hagas clic en él? '
      iceage_free_play_instruction: '¡Tiempo de crear tu propio juego o historia! '
      iceage_free_play_2018_instruction: '¡Tiempo de crear tu propio juego o historia! '
      iceage_free_playcourseF_IceAge_11_instruction: '¡Tiempo de crear tu propio juego o historia! '
      iceage_hello1_instruction: Ayuda a Sid a decir "¡Hola!" arrastrando el bloque `decir` y conectándolo al final del evento`Cuando ejecuta`.
      iceage_hello1_2018_instruction: Ayuda a Sid a decir "¡Hola!" arrastrando el bloque `decir` y conectándolo al final del evento`Cuando ejecuta`.
      iceage_hello2_instruction: Ayuda a Manny y a Sid a saludarse usando el bloque `actor ___ dice` dos veces.
      iceage_hello2_2018_instruction: Ayuda a Manny y a Sid a saludarse usando el bloque `actor ___ dice` dos veces.
      iceage_move_events_instruction: '¡Escrbe el código para ayudar a Scrat a llegar a la bellota!'
      iceage_move_events_2018_instruction: '¡Escrbe el código para ayudar a Scrat a llegar a la bellota!'
      iceage_move_to_actor_instruction: Conecta un bloque al evento 'cuando actor toca' para hacer que suene un sonido cuando Diego encuentra a Manny.
      iceage_move_to_actor_2018_instruction: Conecta un bloque al evento 'cuando actor toca' para hacer que suene un sonido cuando Diego encuentra a Manny.
      iceage_move_to_flag_instruction: '¡Scrat está buscando su bellota! ¿Puedes ayudarlo a moverse los últimos 200 pixeles?'
      iceage_move_to_flag_2018_instruction: '¡Scrat está buscando su bellota! ¿Puedes ayudarlo a moverse los últimos 200 pixeles?'
      iceage_repeat_instruction: Ayuda a Granny a hacer algo de ejercicio moviendo a la izquierda y a la derecha repetidamente.
      iceage_repeat_2018_instruction: Ayuda a Granny a hacer algo de ejercicio moviendo a la izquierda y a la derecha repetidamente.
      iceage_sound_and_points_instruction: '¿Puedes terminar este programa para hacerlo que tú **reproduzcas un sonido** y **hagas un punto** cuando Sid y Granny choquen? '
      iceage_sound_and_points_2018_instruction: '¿Puedes terminar este programa para hacerlo que tú **reproduzcas un sonido** y **hagas un punto** cuando Sid y Granny choquen? '
      iceage_throw_hearts_instruction: Usa el comando 'acto_lanza' para hacer que Sid (actor 1) lance corazones a Granny (actor 2) y establece el ánimo de Granny en feliz cuando es golpeada por ellos.
      iceage_throw_hearts_2018_instruction: Usa el comando 'acto_lanza' para hacer que Sid (actor 1) lance corazones a Granny (actor 2) y establece el ánimo de Granny en feliz cuando es golpeada por ellos.
      iceage_warn_ice_age_instruction: Cambia la escena a un fondo con hielo y ajusta la velocidad de Sid (actor 1) a rápido.
      iceage_warn_ice_age_2018_instruction: Cambia la escena a un fondo con hielo y ajusta la velocidad de Sid (actor 1) a rápido.
      jessie-test_instruction: Lots of instructions
      k-1 maze 1_instruction: '¿Me llevarías al Oeste para agarrar al cerdo? '
      k1stickerfreeplay_instruction: The artist saw something funny in the distance.  Draw what you think he saw.
      kikiTesta_instruction: |-
        Our adventurer wants to collect coins.  But she can only use 4 blocks to get them.
        
        Can you help her grab as many as she can using just 4 blocks?
      kikiTesting_instruction: See all angles of Stevie and Jorge
      level 'grade3_Loops_10_instruction: |-
        Utiliza un ciclo similar al del último problema, pero ahora utiliza un bloque turn.
      level 'grade3_Loops_11_instruction: "Utiliza un ciclo para seguir los pasos y recolectar el néctar."
      level 'grade3_Loops_12_instruction: Utiliza un ciclo para recolectar néctar de cada flor y hacer miel en cada panal.
      level 'grade3_Loops_2_instruction: '¿Podrías hacer la misma tarea más fácilmente con un ciclo?'
      level 'grade3_Loops_3_instruction: '¿Podrías utilizar un ciclo para recolectar todo el néctar?'
      level 'grade3_Loops_4_instruction: Ahora usa el nuevo bloque repeat para recolectar todo el néctar y hacer toda la miel.
      level 'grade3_Loops_5_instruction: Pon estos bloques en un ciclo para recolectar néctar de cada flor.
      level 'grade3_Loops_6_instruction: "¿Qué pasa si haces un ciclo con esta secuencia 3 veces? ¡No olvides hacer la miel al final!"
      level 'grade3_Loops_7_instruction: |-
        Cada flor contiene una unidad de néctar. Recolecta néctar de cada una de las flores. 
      level 'grade3_Loops_8_instruction: Usa un ciclo para recolectar el néctar y hacer la miel.
      level 'grade3_Loops_9_instruction: Recolecta el néctar de cada flor y haz miel en cada panal.
      level grade3_Loops_2_instruction: '¿Podrías hacer la misma tarea más fácilmente con un ciclo?'
      loop pet test_instruction: "Last time, you practiced using the \"repeat forever\" loop to make a sprite do something forever. This time, we will use it to make a virtual pet. \n\nThis dog's name is Daisy. Daisy LOVES to snack on carrots. Use the \"drag and drop\" block to move the carrot to Daisy."
      loops_forvideo_angrybirds_ab_instruction: Use loops to get the bird to the pig!
      loops_forvideo_angrybirds_cf_instruction: Use loops to get the bird to the pig!
      loops_forvideo_bee_cf_instruction: Use loops to help the bee get nectar from all the flowers!
      loops_forvideo_collector_ab_instruction: Use loops to help the collector get all the gems!
      loops_forvideo_collector_cf_instruction: Use loops to help Laurel collect gems!
      loops_forvideo_harvester_ab_instruction: Use loops to help the harvester pick the corn!
      loops_forvideo_harvester_cf_instruction: Use loops to help the harvester pick her crops!
      loops_forvideo_iceage_ab_instruction: Use loops to get Scrat to the acorn!
      loops_forvideo_iceage_cf_instruction: Use loops to get Scrat to the acorn!
      love_spring_1_instruction: Let's celebrate Spring!  We have put some seeds in the ground to prepare for the season's flowers.  Can you cover them up so that the birds don't eat them?
      love_spring_2_instruction: Our flowers are in full bloom!  Now we need the bee to grab nectar from each one so he can make plenty of honey back at his hive!
      love_spring_3_instruction: "Figure out how to change this code so that Robin chooses a number between 1 and 20.  \n\nWhen you're ready, press \"Run\" and play until you guess Robin's number!"
      marina_gameLab_play_instruction: Clone this level and make your own blocks!
      mike3bit_instruction: We start you with the 4x2 image Maddie was creating, but we've left out the last few pixels. Finish off the image by figuring out which colors are missing and encoding them.
      mike3bitbird_instruction: Here's an example of an image made with 3-bit color. Try changing it to understand how it works. If you want to reset the image, press "Start Over".
      mike3bitfreeplay_instruction: Make something awesome and share it with your classmates! You can copy and paste the value of a pixel to use it repeatedly.
      mike3bitmario_instruction: "A careless binary coder typed in ONE extra 0 or 1 somewhere within this image's data. The extra bit that is causing Mario to glitch out! \n\nDelete the extra bit to restore Mario back to normal!"
      pet game 1_instruction: Use the "make a new sprite" block to make yourself a pet!
      pet game 2_instruction: Your pet needs some exercise! Use the "add behavior" block to get them moving.
      pet game 3_instruction: Pets love toys! Use a second "make sprite" block to give your pet a toy, then use the "move towards" behavior to make your pet run to their new toy.
      pet game 4_instruction: |-
        When your pet gets to their toy, they get excited! Use the "when touches" block to detect when your pet gets to their toy.
        
        When that happens, use the "remove behavior" block to make them stop walking, and the "add behavior" block to make them have a dance party!
      pet game 5_instruction: You can add lots more things for your pet to interact with! Play around with the "set sprite" block and make more stuff anywhere you want it!
      pet game 6_instruction: It's important for pets to learn to follow commands. Use the "when clicked" block to teach your pet to only start wandering after you click on them.
      pet game 7_instruction: Pets need to learn to stop, too! Use the "when clicked" block to teach your pet to stop wandering after you click on them.
      pet game 8_instruction: Your pet now has two toys! Use the "when clicked" block to get them to move to the toy you click on
      pet game 9_instruction: Your pet has been so good, they deserve a treat. Use the "add behavior" block to make the bone draggable, then drag it to your pet.
      playEventsK1_instruction: This game is called "Play Lab".  See if you can figure out what each block does.
      playEventsK2_instruction: |-
        Jorge wants to say "Hi there."
        
        Can you help?
      playEventsK3_instruction: Jorge wants to be scratched behind the ears!  Can you make it so that when you click Jorge he is happy?
      playEventsK4_instruction: Can you make it so that Jorge the dog chases Robin the bird when you click the up arrow?
      playEventsK5_instruction: Now add code so that Robin flies away when you click the forward arrow.
      playEventsK6_instruction: Have Robin talk back to Jorge when you click on her.
      playEventsK7_instruction: What else can you do in this fun scene?
      playLabDebugVideo1_instruction: Jorge the Dog wants to say "Hi there."  Can you help him?
      ramp_artist_loops1_instruction: "Avanza 60 píxeles para completar este\npuzzle."
      ramp_artist_loops1_2018_instruction: "Avanza 60 píxeles para completar este\npuzzle."
      ramp_artist_loops2_instruction: Avanza cinco veces y crea esta línea de color.
      ramp_artist_loops2_2018_instruction: Avanza cinco veces y crea esta línea de color.
      ramp_artist_loops3_instruction: Usa un bucle 'repetir' para dibujar cinco guiones de colores.
      ramp_artist_loops3_2018_instruction: Usa un bucle 'repetir' para dibujar cinco guiones de colores.
      ramp_artist_loops4_instruction: What happens when you add a 72 degree right turn after everything else inside your loop?
      ramp_artist_loops4_2018_instruction: What happens when you add a 72 degree right turn after everything else inside your loop?
      ramp_artist_loops5_instruction: Use loops to draw this staircase.
      ramp_artist_loops5_2018_instruction: Use loops to draw this staircase.
      ramp_artist_loops6_instruction: Edita tu bucle para dibujar esta escalera.
      ramp_artist_loops6_2018_instruction: Edita tu bucle para dibujar esta escalera.
      ramp_artist_loops7_instruction: Look for a pattern and make this code shorter using loops!
      ramp_artist_loops7_2018_instruction: Look for a pattern and make this code shorter using loops!
      ramp_artist_loops8_instruction: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops8_2018_instruction: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops8_clone_instruction: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops9_instruction: Resuelve este puzzle dibujando un cuadrado.
      ramp_artist_loops9_2018_instruction: Resuelve este puzzle dibujando un cuadrado.
      sample1_instruction: |-
        Our adventurer wants to collect coins.  But she can only use 4 blocks to get them.
        
        Can you help her grab as many as she can using just 4 blocks?
      sample10_instruction: Now you can use loops to draw whatever you like!
      sample10a_instruction: "You have helped the adventurer and her bee!  As a reward, please stay and play around in my magical village. \n\nYou should have everything you need to create a game of your own."
      sample2_instruction: Use what you've learned to help bee gather all of this honey using only the blocks that you have here.
      sample2a_instruction: Use what you've learned to help bee gather all of this honey using only 4 blocks.
      sample3_instruction: Now you can help bee make all of the honey using just the blocks in the toolbox.
      sample3assessment_instruction: Can you figure out how to gather all of this nectar in just one try?
      sample4_instruction: |-
        Our adventurer has found a stash of coins in this cave.
        
        Can you help her grab as many as she can using just 7 blocks?
      sample5_instruction: Help bee make all of the honey.
      sample6_instruction: 'Challenge: Help bee get all of the nectar.'
      sample7assessment_instruction: Can you help bee make all of the honey in just one try?
      sample8_instruction: Look at this trove of coins! How many can you get the adventurer to grab?
      sample9_instruction: 'Use loops to help the artist connect all of the dots. '
      sample9a_instruction: The wizard has found his potions!  Use everything you have learned to help him collect them.
      scrat 16 (copy 1)_instruction: Acorn! Acorn! Acorn! Use an "if" block to get me there with the fewest number of blocks.
      scrat 16_instruction: '¡Bellota! ¡Bellota! ¡Bellota! Utiliza un bloque "si" para llevarme ahí con el menor número de bloques.'
      scrat 17 (copy 1)_instruction: Ok, let's do that again for practice - this isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: Ok, vamos a hacerlo de nuevo para practicar - éste no es muy diferente, ¡pero ten cuidado con la pared!
      scrat 18 (copy 1)_instruction: El bloque "If-else" verifica una condición y después hace o una cosa u otra. Para llevarme a la bellota intenta usar este nuevo bloque.
      scrat 18_instruction: El bloque "If-else" verifica una condición y después hace una cosa u otra. Para llevarme a la bellota intenta usar este nuevo bloque.
      scrat 19 (copy 1)_instruction: Una práctica más del bloque "si-sino", ¿puedes hacerlo bien en tu primer intento?
      scrat 19_instruction: Una práctica más del bloque "si-sino", ¿puedes hacerlo bien en tu primer intento?
      scrat 20_instruction: '¿Puedes agregar sólo 3 bloques para ayudarme a resolver un laberinto más complejo? Si lo haces correctamente, puedo caminar cualquier camino curvo sin importar su longitud. ¡Date prisa! ¡El hielo se está derritiendo!'
      skratDebugVideo1_instruction: Get Scrat to the Acorn.
      subgoal U3 L4 introducing subgoal labels_instruction: "Introducir a la tortuga \ny muevela"
      subgoal U3L2 Using Simple Commands_instruction: Draw a 1x1 square above and to the left of the turtle's starting position. Click to see full instructions.
      subgoalU3L2_TurtleSquare_right_instruction: Draw a square to the front and to the right of the starting location. (Click to show full instructions)
      template test_instruction: what's up
      testArtistForTestK_instruction: The Artist is trying to draw a line five times, but can't get it right.  Can you help?
      test_sarah_instruction: hi hi
      u3-old-drawing-view_instruction: DO This
      valentine_artist_03_instruction: '¡Ahora intenta algo por tu cuenta!'
      weird_playLab_instruction: About My Robot Project! Write code so that clicking on each bird shows a new fact about your robot.
